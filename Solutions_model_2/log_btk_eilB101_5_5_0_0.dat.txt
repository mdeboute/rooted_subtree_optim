Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 169 (-36) rows, 94 (-9) columns and 518 (-85) elements
Clp1000I sum of infeasibilities 6.77441e-05 - average 4.00852e-07, 54 fixed columns
Coin0506I Presolve 55 (-114) rows, 33 (-61) columns and 170 (-348) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Coin0511I After Postsolve, objective 610.76027, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Coin0511I After Postsolve, objective 610.76027, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 610.7602723 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 169 rows, 94 columns (93 integer (93 of which binary)) and 542 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.176%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 4.19305
Cbc0038I Pass   1: suminf.    1.31559 (3) obj. -580.901 iterations 24
Cbc0038I Solution found of -411.031
Cbc0038I Relaxing continuous gives -411.031
Cbc0038I Rounding solution of -517.451 is better than previous of -411.031

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 94 columns, reduced to 21 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -517.451 to -550.814 (0.02 seconds)
Cbc0038I Round again with cutoff of -556.465
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.31559 (3) obj. -580.901 iterations 0
Cbc0038I Pass   3: suminf.    0.63606 (2) obj. -556.465 iterations 10
Cbc0038I Pass   4: suminf.    0.43266 (2) obj. -556.465 iterations 6
Cbc0038I Pass   5: suminf.    0.48000 (1) obj. -559.261 iterations 4
Cbc0038I Pass   6: suminf.    0.48000 (1) obj. -559.261 iterations 0
Cbc0038I Pass   7: suminf.    2.44576 (7) obj. -556.465 iterations 11
Cbc0038I Pass   8: suminf.    1.86960 (8) obj. -556.465 iterations 16
Cbc0038I Pass   9: suminf.    1.47317 (7) obj. -556.465 iterations 8
Cbc0038I Pass  10: suminf.    1.15963 (5) obj. -556.465 iterations 24
Cbc0038I Pass  11: suminf.    0.91037 (2) obj. -557.823 iterations 11
Cbc0038I Pass  12: suminf.    0.58340 (3) obj. -556.465 iterations 5
Cbc0038I Pass  13: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  14: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  15: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  16: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  17: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  18: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  19: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  20: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  21: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  22: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  23: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  24: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  25: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  26: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  27: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  28: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  29: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  30: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  31: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 94 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -550.814 - took 0.02 seconds
Cbc0012I Integer solution of -550.8141 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 169 rows 94 columns, reduced to 21 rows 12 columns
Cbc0031I 10 added rows had average density of 41.2
Cbc0013I At root node, 10 cuts changed objective from -607.31949 to -583.69267 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 117 row cuts average 3.6 elements, 13 column cuts (13 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0016I Integer solution of -552.0805 found by strong branching after 720 iterations and 23 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -552.0805, took 809 iterations and 26 nodes (0.15 seconds)
Cbc0032I Strong branching done 266 times (2113 iterations), fathomed 5 nodes and fixed 12 variables
Cbc0035I Maximum depth 6, 200 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-75) rows, 146 (-56) columns and 2768 (-2885) elements
Clp1000I sum of infeasibilities 2.0635e-07 - average 1.59961e-09, 73 fixed columns
Coin0506I Presolve 65 (-64) rows, 73 (-73) columns and 629 (-2139) elements
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 3.2845485 - largest nonzero change 0 ( 0%) - largest zero change 1.6913209e-05
Clp0000I Optimal - objective value 656.8724
Clp0000I Optimal - objective value 656.8724
Coin0511I After Postsolve, objective 656.8724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6925258 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 656.8724
Clp0000I Optimal - objective value 656.8724
Clp0000I Optimal - objective value 656.8724
Coin0511I After Postsolve, objective 656.8724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 656.8723996 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 146 columns (146 integer (146 of which binary)) and 2796 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.190%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 4.33814
Cbc0038I Pass   1: suminf.    0.68297 (21) obj. -546.704 iterations 36
Cbc0038I Pass   2: suminf.    0.68297 (21) obj. -546.704 iterations 6
Cbc0038I Solution found of -520.61
Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 146 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -520.61 to -558.61 (0.04 seconds)
Cbc0038I Round again with cutoff of -566.927
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.93771 (47) obj. -566.927 iterations 19
Cbc0038I Pass   4: suminf.    0.88388 (29) obj. -566.927 iterations 5
Cbc0038I Pass   5: suminf.    0.90199 (10) obj. -566.927 iterations 31
Cbc0038I Pass   6: suminf.    0.62069 (10) obj. -566.927 iterations 3
Cbc0038I Pass   7: suminf.    0.27990 (10) obj. -573.618 iterations 11
Cbc0038I Pass   8: suminf.    1.11289 (3) obj. -566.927 iterations 26
Cbc0038I Pass   9: suminf.    1.11289 (3) obj. -566.927 iterations 3
Cbc0038I Pass  10: suminf.    0.41778 (2) obj. -566.927 iterations 9
Cbc0038I Pass  11: suminf.    0.38182 (2) obj. -586.215 iterations 5
Cbc0038I Pass  12: suminf.    0.38182 (2) obj. -586.215 iterations 0
Cbc0038I Pass  13: suminf.    0.75591 (2) obj. -566.927 iterations 4
Cbc0038I Pass  14: suminf.    0.73630 (2) obj. -568.777 iterations 2
Cbc0038I Pass  15: suminf.    2.88873 (32) obj. -566.927 iterations 33
Cbc0038I Pass  16: suminf.    1.79423 (35) obj. -566.927 iterations 7
Cbc0038I Pass  17: suminf.    1.46117 (17) obj. -566.927 iterations 32
Cbc0038I Pass  18: suminf.    1.46117 (17) obj. -566.927 iterations 1
Cbc0038I Pass  19: suminf.    1.39972 (10) obj. -566.927 iterations 21
Cbc0038I Pass  20: suminf.    1.21092 (8) obj. -566.927 iterations 8
Cbc0038I Pass  21: suminf.    0.08333 (1) obj. -570.65 iterations 16
Cbc0038I Pass  22: suminf.    0.05954 (1) obj. -566.927 iterations 3
Cbc0038I Pass  23: suminf.    2.63754 (13) obj. -566.927 iterations 19
Cbc0038I Pass  24: suminf.    2.63754 (13) obj. -566.927 iterations 1
Cbc0038I Pass  25: suminf.    2.94420 (8) obj. -566.927 iterations 18
Cbc0038I Pass  26: suminf.    2.35781 (6) obj. -566.927 iterations 3
Cbc0038I Pass  27: suminf.    1.24247 (5) obj. -569.565 iterations 9
Cbc0038I Pass  28: suminf.    1.24247 (5) obj. -569.565 iterations 1
Cbc0038I Pass  29: suminf.    0.74370 (10) obj. -573.302 iterations 30
Cbc0038I Pass  30: suminf.    0.60972 (8) obj. -566.927 iterations 9
Cbc0038I Pass  31: suminf.    0.19119 (2) obj. -566.927 iterations 9
Cbc0038I Pass  32: suminf.    0.19119 (2) obj. -566.927 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 146 columns, reduced to 64 rows 72 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -558.61 - took 0.07 seconds
Cbc0012I Integer solution of -558.6101 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 48 added rows had average density of 15.416667
Cbc0013I At root node, 48 cuts changed objective from -641.781 to -595.9896 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 1084 row cuts average 3.9 elements, 19 column cuts (19 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 19 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 257 row cuts average 61.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0010I After 4 nodes, 5 on tree, -558.6101 best solution, best possible -595.9896 (0.48 seconds)
Cbc0012I Integer solution of -568.792 found by rounding after 1023 iterations and 31 nodes (0.61 seconds)
Cbc0001I Search completed - best objective -568.792, took 1844 iterations and 50 nodes (0.63 seconds)
Cbc0032I Strong branching done 680 times (9899 iterations), fathomed 6 nodes and fixed 18 variables
Cbc0035I Maximum depth 22, 191 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.64

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 169 (-36) rows, 94 (-9) columns and 518 (-85) elements
Clp1000I sum of infeasibilities 6.77441e-05 - average 4.00852e-07, 54 fixed columns
Coin0506I Presolve 55 (-114) rows, 33 (-61) columns and 170 (-348) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Coin0511I After Postsolve, objective 610.76027, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Coin0511I After Postsolve, objective 610.76027, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 610.7602723 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 169 rows, 94 columns (93 integer (93 of which binary)) and 542 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.176%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 4.19305
Cbc0038I Pass   1: suminf.    1.31559 (3) obj. -580.901 iterations 24
Cbc0038I Solution found of -411.031
Cbc0038I Relaxing continuous gives -411.031
Cbc0038I Rounding solution of -517.451 is better than previous of -411.031

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 94 columns, reduced to 21 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -517.451 to -550.814 (0.01 seconds)
Cbc0038I Round again with cutoff of -556.465
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.31559 (3) obj. -580.901 iterations 0
Cbc0038I Pass   3: suminf.    0.63606 (2) obj. -556.465 iterations 10
Cbc0038I Pass   4: suminf.    0.43266 (2) obj. -556.465 iterations 6
Cbc0038I Pass   5: suminf.    0.48000 (1) obj. -559.261 iterations 4
Cbc0038I Pass   6: suminf.    0.48000 (1) obj. -559.261 iterations 0
Cbc0038I Pass   7: suminf.    2.44576 (7) obj. -556.465 iterations 11
Cbc0038I Pass   8: suminf.    1.86960 (8) obj. -556.465 iterations 16
Cbc0038I Pass   9: suminf.    1.47317 (7) obj. -556.465 iterations 8
Cbc0038I Pass  10: suminf.    1.15963 (5) obj. -556.465 iterations 24
Cbc0038I Pass  11: suminf.    0.91037 (2) obj. -557.823 iterations 11
Cbc0038I Pass  12: suminf.    0.58340 (3) obj. -556.465 iterations 5
Cbc0038I Pass  13: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  14: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  15: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  16: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  17: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  18: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  19: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  20: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  21: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  22: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  23: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  24: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  25: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  26: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  27: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  28: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  29: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  30: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  31: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 94 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -550.814 - took 0.02 seconds
Cbc0012I Integer solution of -550.8141 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 169 rows 94 columns, reduced to 21 rows 12 columns
Cbc0031I 10 added rows had average density of 41.2
Cbc0013I At root node, 10 cuts changed objective from -607.31949 to -583.69267 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 117 row cuts average 3.6 elements, 13 column cuts (13 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0016I Integer solution of -552.0805 found by strong branching after 720 iterations and 23 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -552.0805, took 809 iterations and 26 nodes (0.16 seconds)
Cbc0032I Strong branching done 266 times (2113 iterations), fathomed 5 nodes and fixed 12 variables
Cbc0035I Maximum depth 6, 200 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-79) rows, 143 (-60) columns and 2650 (-3004) elements
Clp1000I sum of infeasibilities 0 - average 0, 80 fixed columns
Coin0506I Presolve 57 (-69) rows, 63 (-80) columns and 506 (-2144) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 10.927695 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 639.00282
Clp0000I Optimal - objective value 639.00282
Coin0511I After Postsolve, objective 639.00282, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7161863 - largest nonzero change 1.512573e-05 ( 0.001262127%) - largest zero change 2.7814203e-05
Clp0000I Optimal - objective value 639.00282
Clp0000I Optimal - objective value 639.00282
Clp0000I Optimal - objective value 639.00282
Coin0511I After Postsolve, objective 639.00282, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 639.0028208 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 143 columns (143 integer (143 of which binary)) and 2675 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.155%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 2.69865
Cbc0038I Pass   1: suminf.    1.98416 (33) obj. -609.968 iterations 13
Cbc0038I Pass   2: suminf.    1.02472 (31) obj. -528.189 iterations 3
Cbc0038I Pass   3: suminf.    0.25755 (11) obj. -504.169 iterations 22
Cbc0038I Solution found of -492.446
Cbc0038I Rounding solution of -515.374 is better than previous of -492.446

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 143 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -515.374 to -517.451 (0.05 seconds)
Cbc0038I Round again with cutoff of -527.621
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.98416 (33) obj. -609.968 iterations 0
Cbc0038I Pass   5: suminf.    1.02472 (31) obj. -528.189 iterations 5
Cbc0038I Pass   6: suminf.    0.30031 (7) obj. -527.621 iterations 34
Cbc0038I Pass   7: suminf.    0.30556 (1) obj. -540.259 iterations 7
Cbc0038I Pass   8: suminf.    0.22479 (1) obj. -527.621 iterations 1
Cbc0038I Pass   9: suminf.    1.47168 (15) obj. -527.621 iterations 37
Cbc0038I Pass  10: suminf.    0.90086 (13) obj. -531.093 iterations 9
Cbc0038I Pass  11: suminf.    0.86103 (3) obj. -527.621 iterations 29
Cbc0038I Pass  12: suminf.    0.19825 (2) obj. -527.621 iterations 8
Cbc0038I Pass  13: suminf.    0.02439 (1) obj. -544.539 iterations 6
Cbc0038I Pass  14: suminf.    0.30671 (2) obj. -527.621 iterations 5
Cbc0038I Pass  15: suminf.    2.48270 (19) obj. -527.621 iterations 33
Cbc0038I Pass  16: suminf.    1.39328 (14) obj. -527.621 iterations 6
Cbc0038I Pass  17: suminf.    1.11896 (13) obj. -535.403 iterations 6
Cbc0038I Pass  18: suminf.    0.90567 (7) obj. -527.621 iterations 26
Cbc0038I Pass  19: suminf.    0.44932 (6) obj. -527.621 iterations 2
Cbc0038I Pass  20: suminf.    0.91800 (4) obj. -527.621 iterations 15
Cbc0038I Pass  21: suminf.    0.12755 (1) obj. -527.621 iterations 10
Cbc0038I Pass  22: suminf.    0.16667 (1) obj. -533.742 iterations 2
Cbc0038I Pass  23: suminf.    1.35563 (12) obj. -527.621 iterations 39
Cbc0038I Pass  24: suminf.    0.84693 (9) obj. -528.143 iterations 11
Cbc0038I Pass  25: suminf.    0.60694 (3) obj. -527.621 iterations 23
Cbc0038I Pass  26: suminf.    0.70909 (2) obj. -531.987 iterations 8
Cbc0038I Pass  27: suminf.    0.62032 (3) obj. -527.621 iterations 12
Cbc0038I Pass  28: suminf.    1.13376 (9) obj. -527.621 iterations 25
Cbc0038I Pass  29: suminf.    0.70009 (7) obj. -531.504 iterations 10
Cbc0038I Pass  30: suminf.    0.53490 (3) obj. -527.621 iterations 15
Cbc0038I Pass  31: suminf.    0.40325 (5) obj. -527.621 iterations 8
Cbc0038I Pass  32: suminf.    1.63799 (4) obj. -527.621 iterations 13
Cbc0038I Pass  33: suminf.    0.82597 (2) obj. -542.634 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 143 columns, reduced to 58 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -517.451 to -541.3 (0.12 seconds)
Cbc0038I Round again with cutoff of -556.87
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.98416 (33) obj. -609.968 iterations 0
Cbc0038I Pass  34: suminf.    1.21426 (32) obj. -556.87 iterations 4
Cbc0038I Pass  35: suminf.    0.93786 (23) obj. -562.608 iterations 10
Cbc0038I Pass  36: suminf.    0.90119 (23) obj. -556.87 iterations 1
Cbc0038I Pass  37: suminf.    0.49498 (5) obj. -556.87 iterations 26
Cbc0038I Pass  38: suminf.    0.49498 (5) obj. -556.87 iterations 0
Cbc0038I Pass  39: suminf.    0.57407 (2) obj. -565.59 iterations 5
Cbc0038I Pass  40: suminf.    0.48164 (2) obj. -556.87 iterations 3
Cbc0038I Pass  41: suminf.    3.26588 (12) obj. -556.87 iterations 25
Cbc0038I Pass  42: suminf.    1.87669 (10) obj. -556.87 iterations 15
Cbc0038I Pass  43: suminf.    0.88829 (8) obj. -556.87 iterations 9
Cbc0038I Pass  44: suminf.    0.86937 (8) obj. -556.87 iterations 7
Cbc0038I Pass  45: suminf.    1.04370 (4) obj. -556.87 iterations 15
Cbc0038I Pass  46: suminf.    0.99236 (3) obj. -556.87 iterations 7
Cbc0038I Pass  47: suminf.    0.65965 (2) obj. -556.87 iterations 8
Cbc0038I Pass  48: suminf.    0.50909 (2) obj. -571.009 iterations 3
Cbc0038I Pass  49: suminf.    0.56682 (2) obj. -556.87 iterations 7
Cbc0038I Pass  50: suminf.    0.48745 (2) obj. -556.87 iterations 7
Cbc0038I Pass  51: suminf.    0.50261 (2) obj. -556.87 iterations 5
Cbc0038I Pass  52: suminf.    1.03007 (11) obj. -556.87 iterations 32
Cbc0038I Pass  53: suminf.    0.79221 (9) obj. -556.87 iterations 10
Cbc0038I Pass  54: suminf.    0.81543 (3) obj. -556.87 iterations 15
Cbc0038I Pass  55: suminf.    0.63506 (3) obj. -556.87 iterations 7
Cbc0038I Pass  56: suminf.    0.96866 (2) obj. -556.87 iterations 8
Cbc0038I Pass  57: suminf.    0.78182 (2) obj. -562.072 iterations 3
Cbc0038I Pass  58: suminf.    0.73793 (9) obj. -556.87 iterations 29
Cbc0038I Pass  59: suminf.    0.69902 (8) obj. -556.87 iterations 6
Cbc0038I Pass  60: suminf.    0.78957 (3) obj. -556.87 iterations 28
Cbc0038I Pass  61: suminf.    0.38345 (2) obj. -556.87 iterations 7
Cbc0038I Pass  62: suminf.    0.41185 (2) obj. -559.55 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 143 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -541.3 to -552.08 (0.14 seconds)
Cbc0038I Round again with cutoff of -575.554
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.98416 (33) obj. -609.968 iterations 0
Cbc0038I Pass  63: suminf.    1.33774 (32) obj. -575.554 iterations 4
Cbc0038I Pass  64: suminf.    0.79800 (12) obj. -575.554 iterations 28
Cbc0038I Pass  65: suminf.    0.79800 (12) obj. -575.554 iterations 1
Cbc0038I Pass  66: suminf.    0.94214 (5) obj. -575.554 iterations 24
Cbc0038I Pass  67: suminf.    0.79794 (3) obj. -575.554 iterations 7
Cbc0038I Pass  68: suminf.    0.94106 (3) obj. -580.434 iterations 9
Cbc0038I Pass  69: suminf.    0.76055 (3) obj. -575.554 iterations 11
Cbc0038I Pass  70: suminf.    0.76008 (3) obj. -575.554 iterations 6
Cbc0038I Pass  71: suminf.    0.94214 (5) obj. -575.554 iterations 15
Cbc0038I Pass  72: suminf.    0.79794 (3) obj. -575.554 iterations 6
Cbc0038I Pass  73: suminf.    0.94106 (3) obj. -580.434 iterations 9
Cbc0038I Pass  74: suminf.    0.76055 (3) obj. -575.554 iterations 11
Cbc0038I Pass  75: suminf.    0.76008 (3) obj. -575.554 iterations 6
Cbc0038I Pass  76: suminf.    0.94214 (5) obj. -575.554 iterations 15
Cbc0038I Pass  77: suminf.    0.79794 (3) obj. -575.554 iterations 6
Cbc0038I Pass  78: suminf.    0.94106 (3) obj. -580.434 iterations 9
Cbc0038I Pass  79: suminf.    0.76055 (3) obj. -575.554 iterations 11
Cbc0038I Pass  80: suminf.    0.76008 (3) obj. -575.554 iterations 6
Cbc0038I Pass  81: suminf.    0.94214 (5) obj. -575.554 iterations 15
Cbc0038I Pass  82: suminf.    0.79794 (3) obj. -575.554 iterations 6
Cbc0038I Pass  83: suminf.    0.94106 (3) obj. -580.434 iterations 9
Cbc0038I Pass  84: suminf.    0.76055 (3) obj. -575.554 iterations 11
Cbc0038I Pass  85: suminf.    0.76008 (3) obj. -575.554 iterations 6
Cbc0038I Pass  86: suminf.    0.94214 (5) obj. -575.554 iterations 15
Cbc0038I Pass  87: suminf.    0.79794 (3) obj. -575.554 iterations 6
Cbc0038I Pass  88: suminf.    0.94106 (3) obj. -580.434 iterations 9
Cbc0038I Pass  89: suminf.    0.76055 (3) obj. -575.554 iterations 11
Cbc0038I Pass  90: suminf.    0.76008 (3) obj. -575.554 iterations 6
Cbc0038I Pass  91: suminf.    0.94214 (5) obj. -575.554 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 143 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -552.08 - took 0.12 seconds
Cbc0012I Integer solution of -552.0805 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 126 rows 143 columns, reduced to 5 rows 7 columns
Cbc0031I 47 added rows had average density of 18.489362
Cbc0013I At root node, 47 cuts changed objective from -619.14897 to -585.24116 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 723 row cuts average 5.1 elements, 17 column cuts (17 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 27 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 115 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 56.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 38.7 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0010I After 2 nodes, 1 on tree, -552.0805 best solution, best possible -577.60522 (0.58 seconds)
Cbc0038I Full problem 126 rows 143 columns, reduced to 29 rows 33 columns
Cbc0038I Full problem 173 rows 143 columns, reduced to 91 rows 105 columns
Cbc0044I Reduced cost fixing - 91 rows, 105 columns - restarting search
Cbc0012I Integer solution of -552.0805 found by Previous solution after 0 iterations and 0 nodes (1.17 seconds)
Cbc0038I Full problem 91 rows 105 columns, reduced to 5 rows 7 columns
Cbc0031I 40 added rows had average density of 39.025
Cbc0013I At root node, 40 cuts changed objective from -618.96585 to -582.2659 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1706 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 312 row cuts average 86.4 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 68 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 412 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 315 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.716 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 436 row cuts average 20.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -552.0805 best solution, best possible -582.2659 (2.97 seconds)
Cbc0010I After 26 nodes, 6 on tree, -552.0805 best solution, best possible -582.2659 (3.98 seconds)
Cbc0001I Search completed - best objective -552.0804999999999, took 4331 iterations and 40 nodes (4.50 seconds)
Cbc0032I Strong branching done 584 times (6191 iterations), fathomed 5 nodes and fixed 18 variables
Cbc0035I Maximum depth 12, 102 variables fixed on reduced cost
Cbc0038I Probing was tried 196 times and created 2269 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
Cbc0038I Gomory was tried 190 times and created 313 cuts of which 0 were active after adding rounds of cuts (0.133 seconds)
Cbc0038I Knapsack was tried 164 times and created 194 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Cbc0038I Clique was tried 190 times and created 572 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
Cbc0038I MixedIntegerRounding2 was tried 190 times and created 508 cuts of which 0 were active after adding rounds of cuts (0.087 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 190 times and created 286 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)
Cbc0038I ZeroHalf was tried 190 times and created 223 cuts of which 0 were active after adding rounds of cuts (1.299 seconds)
Cbc0038I Stored from first was tried 190 times and created 520 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -552.0805, took 5825 iterations and 90 nodes (4.50 seconds)
Cbc0032I Strong branching done 714 times (9371 iterations), fathomed 10 nodes and fixed 12 variables
Cbc0035I Maximum depth 21, 68 variables fixed on reduced cost
Total time (CPU seconds):       2.95   (Wallclock seconds):       4.51

