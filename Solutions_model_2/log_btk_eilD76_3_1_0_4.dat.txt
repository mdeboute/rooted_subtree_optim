Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 63 (-15) columns and 350 (-103) elements
Clp1000I sum of infeasibilities 4.94666e-05 - average 4.30144e-07, 60 fixed columns
Coin0506I Presolve 2 (-113) rows, 2 (-61) columns and 4 (-346) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 15917.56
Clp0000I Optimal - objective value 15917.56
Coin0511I After Postsolve, objective 15917.56, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.42469607 - largest nonzero change 0 ( 0%) - largest zero change 2.9657215e-05
Clp0000I Optimal - objective value 15917.56
Clp0000I Optimal - objective value 15917.56
Clp0000I Optimal - objective value 15917.56
Coin0511I After Postsolve, objective 15917.56, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15917.5602 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 63 columns (62 integer (62 of which binary)) and 350 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.412%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.47619
Cbc0038I Pass   1: suminf.    0.45833 (1) obj. -15915 iterations 17
Cbc0038I Solution found of -15085.8
Cbc0038I Relaxing continuous gives -15085.8
Cbc0038I Rounding solution of -15603 is better than previous of -15085.8

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15634.5
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45833 (1) obj. -15915 iterations 0
Cbc0038I Pass   3: suminf.    0.35837 (1) obj. -15634.5 iterations 11
Cbc0038I Pass   4: suminf.    0.60753 (2) obj. -15634.5 iterations 11
Cbc0038I Pass   5: suminf.    0.35837 (1) obj. -15634.5 iterations 9
Cbc0038I Pass   6: suminf.    0.60753 (2) obj. -15634.5 iterations 9
Cbc0038I Pass   7: suminf.    0.60358 (2) obj. -15634.5 iterations 3
Cbc0038I Pass   8: suminf.    0.93962 (7) obj. -15634.5 iterations 6
Cbc0038I Pass   9: suminf.    0.93962 (7) obj. -15634.5 iterations 2
Cbc0038I Pass  10: suminf.    1.47629 (7) obj. -15634.5 iterations 5
Cbc0038I Pass  11: suminf.    0.60753 (2) obj. -15634.5 iterations 3
Cbc0038I Pass  12: suminf.    1.28538 (3) obj. -15634.5 iterations 8
Cbc0038I Pass  13: suminf.    0.60753 (2) obj. -15634.5 iterations 4
Cbc0038I Pass  14: suminf.    0.49716 (3) obj. -15634.5 iterations 8
Cbc0038I Pass  15: suminf.    0.49716 (3) obj. -15634.5 iterations 6
Cbc0038I Pass  16: suminf.    0.35837 (1) obj. -15634.5 iterations 9
Cbc0038I Pass  17: suminf.    0.67468 (4) obj. -15634.5 iterations 16
Cbc0038I Pass  18: suminf.    0.45833 (1) obj. -15915 iterations 11
Cbc0038I Pass  19: suminf.    1.47629 (7) obj. -15634.5 iterations 14
Cbc0038I Pass  20: suminf.    1.48106 (7) obj. -15634.5 iterations 5
Cbc0038I Pass  21: suminf.    0.55355 (6) obj. -15634.5 iterations 16
Cbc0038I Pass  22: suminf.    0.45833 (1) obj. -15915 iterations 7
Cbc0038I Pass  23: suminf.    0.35837 (1) obj. -15634.5 iterations 11
Cbc0038I Pass  24: suminf.    0.71619 (3) obj. -15634.5 iterations 9
Cbc0038I Pass  25: suminf.    0.35837 (1) obj. -15634.5 iterations 10
Cbc0038I Pass  26: suminf.    1.58395 (4) obj. -15634.5 iterations 9
Cbc0038I Pass  27: suminf.    0.67272 (2) obj. -15634.5 iterations 6
Cbc0038I Pass  28: suminf.    0.67272 (2) obj. -15634.5 iterations 8
Cbc0038I Pass  29: suminf.    0.97023 (7) obj. -15634.5 iterations 3
Cbc0038I Pass  30: suminf.    0.45833 (1) obj. -15915 iterations 10
Cbc0038I Pass  31: suminf.    0.93962 (7) obj. -15634.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 63 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -15603 - took 0.01 seconds
Cbc0012I Integer solution of -15602.994 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 115 rows 63 columns, reduced to 0 rows 0 columns
Cbc0031I 3 added rows had average density of 12
Cbc0013I At root node, 4 cuts changed objective from -15917.56 to -15570.071 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15602.994, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 101 (-51) columns and 1596 (-1707) elements
Clp1000I sum of infeasibilities 2.99486e-08 - average 3.25528e-10, 61 fixed columns
Coin0506I Presolve 39 (-53) rows, 39 (-62) columns and 241 (-1355) elements
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 6.486998 - largest nonzero change 1.7945606e-05 ( 0.00089285843%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 15957.95
Clp0000I Optimal - objective value 15957.95
Coin0511I After Postsolve, objective 15957.95, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.6375476 - largest nonzero change 2.0001753e-05 ( 0.00088996209%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 15957.95
Clp0000I Optimal - objective value 15957.95
Clp0000I Optimal - objective value 15957.95
Coin0511I After Postsolve, objective 15957.95, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15957.94983 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 102 columns (102 integer (102 of which binary)) and 1600 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.102%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.81791
Cbc0038I Pass   1: suminf.    4.20851 (31) obj. -15153.4 iterations 23
Cbc0038I Pass   2: suminf.    3.71139 (29) obj. -14608.3 iterations 1
Cbc0038I Pass   3: suminf.    0.43680 (6) obj. -14578.3 iterations 23
Cbc0038I Solution found of -14572.7
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 102 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -14572.7 to -15085.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -15172.6
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.23892 (32) obj. -15172.6 iterations 1
Cbc0038I Pass   5: suminf.    4.23892 (32) obj. -15172.6 iterations 0
Cbc0038I Pass   6: suminf.    3.25273 (23) obj. -15456.9 iterations 10
Cbc0038I Pass   7: suminf.    1.54762 (14) obj. -15172.6 iterations 10
Cbc0038I Pass   8: suminf.    0.72727 (2) obj. -15409.5 iterations 18
Cbc0038I Pass   9: suminf.    0.45833 (1) obj. -15915 iterations 5
Cbc0038I Pass  10: suminf.    0.05718 (2) obj. -15172.6 iterations 12
Cbc0038I Pass  11: suminf.    0.33333 (1) obj. -15475.4 iterations 10
Cbc0038I Pass  12: suminf.    1.55537 (7) obj. -15172.6 iterations 17
Cbc0038I Pass  13: suminf.    1.10294 (6) obj. -15172.6 iterations 9
Cbc0038I Pass  14: suminf.    0.34750 (2) obj. -15172.6 iterations 10
Cbc0038I Pass  15: suminf.    0.46967 (3) obj. -15172.6 iterations 8
Cbc0038I Pass  16: suminf.    0.46967 (3) obj. -15172.6 iterations 0
Cbc0038I Pass  17: suminf.    0.34750 (2) obj. -15172.6 iterations 9
Cbc0038I Pass  18: suminf.    2.48626 (18) obj. -15172.6 iterations 23
Cbc0038I Pass  19: suminf.    2.48626 (18) obj. -15172.6 iterations 2
Cbc0038I Pass  20: suminf.    0.26000 (3) obj. -15172.6 iterations 21
Cbc0038I Solution found of -15595
Cbc0038I Rounding solution of -15603 is better than previous of -15595

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 102 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -15673.1
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  21: suminf.    4.71757 (33) obj. -15673.1 iterations 1
Cbc0038I Pass  22: suminf.    0.92432 (10) obj. -15673.1 iterations 38
Cbc0038I Pass  23: suminf.    0.83046 (8) obj. -15806.6 iterations 9
Cbc0038I Pass  24: suminf.    0.58082 (3) obj. -15673.1 iterations 12
Cbc0038I Pass  25: suminf.    0.45833 (1) obj. -15915 iterations 11
Cbc0038I Pass  26: suminf.    0.38361 (1) obj. -15673.1 iterations 10
Cbc0038I Pass  27: suminf.    1.15076 (8) obj. -15673.1 iterations 13
Cbc0038I Pass  28: suminf.    0.86428 (5) obj. -15673.1 iterations 5
Cbc0038I Pass  29: suminf.    2.08424 (12) obj. -15673.1 iterations 11
Cbc0038I Pass  30: suminf.    1.84853 (11) obj. -15673.1 iterations 8
Cbc0038I Pass  31: suminf.    1.69617 (13) obj. -15816.7 iterations 11
Cbc0038I Pass  32: suminf.    0.58082 (3) obj. -15673.1 iterations 14
Cbc0038I Pass  33: suminf.    0.45833 (1) obj. -15915 iterations 8
Cbc0038I Pass  34: suminf.    0.38361 (1) obj. -15673.1 iterations 9
Cbc0038I Pass  35: suminf.    1.82082 (8) obj. -15673.1 iterations 13
Cbc0038I Pass  36: suminf.    1.46054 (8) obj. -15673.1 iterations 4
Cbc0038I Pass  37: suminf.    0.64587 (2) obj. -15673.1 iterations 10
Cbc0038I Pass  38: suminf.    0.45833 (1) obj. -15913 iterations 4
Cbc0038I Pass  39: suminf.    0.38491 (1) obj. -15673.1 iterations 9
Cbc0038I Pass  40: suminf.    1.22000 (9) obj. -15673.1 iterations 13
Cbc0038I Pass  41: suminf.    1.06590 (6) obj. -15673.1 iterations 6
Cbc0038I Pass  42: suminf.    0.45833 (1) obj. -15910 iterations 15
Cbc0038I Pass  43: suminf.    0.38687 (1) obj. -15673.1 iterations 9
Cbc0038I Pass  44: suminf.    0.96047 (5) obj. -15673.1 iterations 11
Cbc0038I Pass  45: suminf.    0.83052 (4) obj. -15673.1 iterations 6
Cbc0038I Pass  46: suminf.    0.45833 (1) obj. -15910 iterations 13
Cbc0038I Pass  47: suminf.    0.38687 (1) obj. -15673.1 iterations 9
Cbc0038I Pass  48: suminf.    1.62962 (8) obj. -15673.1 iterations 13
Cbc0038I Pass  49: suminf.    1.08721 (7) obj. -15673.1 iterations 6
Cbc0038I Pass  50: suminf.    0.94552 (6) obj. -15673.1 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 102 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -15603 - took 0.03 seconds
Cbc0012I Integer solution of -15602.994 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 93 rows 102 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 7.6666667
Cbc0013I At root node, 6 cuts changed objective from -15934.688 to -15627.589 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 237 row cuts average 7.0 elements, 20 column cuts (20 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 7 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15602.994, took 44 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 63 (-15) columns and 350 (-103) elements
Clp1000I sum of infeasibilities 4.94666e-05 - average 4.30144e-07, 60 fixed columns
Coin0506I Presolve 2 (-113) rows, 2 (-61) columns and 4 (-346) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 15917.56
Clp0000I Optimal - objective value 15917.56
Coin0511I After Postsolve, objective 15917.56, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.42469607 - largest nonzero change 0 ( 0%) - largest zero change 2.9657215e-05
Clp0000I Optimal - objective value 15917.56
Clp0000I Optimal - objective value 15917.56
Clp0000I Optimal - objective value 15917.56
Coin0511I After Postsolve, objective 15917.56, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15917.5602 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 63 columns (62 integer (62 of which binary)) and 350 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.412%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.47619
Cbc0038I Pass   1: suminf.    0.45833 (1) obj. -15915 iterations 17
Cbc0038I Solution found of -15085.8
Cbc0038I Relaxing continuous gives -15085.8
Cbc0038I Rounding solution of -15603 is better than previous of -15085.8

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15634.5
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45833 (1) obj. -15915 iterations 0
Cbc0038I Pass   3: suminf.    0.35837 (1) obj. -15634.5 iterations 11
Cbc0038I Pass   4: suminf.    0.60753 (2) obj. -15634.5 iterations 11
Cbc0038I Pass   5: suminf.    0.35837 (1) obj. -15634.5 iterations 9
Cbc0038I Pass   6: suminf.    0.60753 (2) obj. -15634.5 iterations 9
Cbc0038I Pass   7: suminf.    0.60358 (2) obj. -15634.5 iterations 3
Cbc0038I Pass   8: suminf.    0.93962 (7) obj. -15634.5 iterations 6
Cbc0038I Pass   9: suminf.    0.93962 (7) obj. -15634.5 iterations 2
Cbc0038I Pass  10: suminf.    1.47629 (7) obj. -15634.5 iterations 5
Cbc0038I Pass  11: suminf.    0.60753 (2) obj. -15634.5 iterations 3
Cbc0038I Pass  12: suminf.    1.28538 (3) obj. -15634.5 iterations 8
Cbc0038I Pass  13: suminf.    0.60753 (2) obj. -15634.5 iterations 4
Cbc0038I Pass  14: suminf.    0.49716 (3) obj. -15634.5 iterations 8
Cbc0038I Pass  15: suminf.    0.49716 (3) obj. -15634.5 iterations 6
Cbc0038I Pass  16: suminf.    0.35837 (1) obj. -15634.5 iterations 9
Cbc0038I Pass  17: suminf.    0.67468 (4) obj. -15634.5 iterations 16
Cbc0038I Pass  18: suminf.    0.45833 (1) obj. -15915 iterations 11
Cbc0038I Pass  19: suminf.    1.47629 (7) obj. -15634.5 iterations 14
Cbc0038I Pass  20: suminf.    1.48106 (7) obj. -15634.5 iterations 5
Cbc0038I Pass  21: suminf.    0.55355 (6) obj. -15634.5 iterations 16
Cbc0038I Pass  22: suminf.    0.45833 (1) obj. -15915 iterations 7
Cbc0038I Pass  23: suminf.    0.35837 (1) obj. -15634.5 iterations 11
Cbc0038I Pass  24: suminf.    0.71619 (3) obj. -15634.5 iterations 9
Cbc0038I Pass  25: suminf.    0.35837 (1) obj. -15634.5 iterations 10
Cbc0038I Pass  26: suminf.    1.58395 (4) obj. -15634.5 iterations 9
Cbc0038I Pass  27: suminf.    0.67272 (2) obj. -15634.5 iterations 6
Cbc0038I Pass  28: suminf.    0.67272 (2) obj. -15634.5 iterations 8
Cbc0038I Pass  29: suminf.    0.97023 (7) obj. -15634.5 iterations 3
Cbc0038I Pass  30: suminf.    0.45833 (1) obj. -15915 iterations 10
Cbc0038I Pass  31: suminf.    0.93962 (7) obj. -15634.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 63 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -15603 - took 0.01 seconds
Cbc0012I Integer solution of -15602.994 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 115 rows 63 columns, reduced to 0 rows 0 columns
Cbc0031I 3 added rows had average density of 12
Cbc0013I At root node, 4 cuts changed objective from -15917.56 to -15570.071 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15602.994, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 101 (-52) columns and 1596 (-1708) elements
Clp1000I sum of infeasibilities 2.99486e-08 - average 3.25528e-10, 61 fixed columns
Coin0506I Presolve 39 (-53) rows, 39 (-62) columns and 241 (-1355) elements
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 6.486998 - largest nonzero change 1.7945606e-05 ( 0.00089285843%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 15957.95
Clp0000I Optimal - objective value 15957.95
Coin0511I After Postsolve, objective 15957.95, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.6375476 - largest nonzero change 2.0001753e-05 ( 0.00088996209%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 15957.95
Clp0000I Optimal - objective value 15957.95
Clp0000I Optimal - objective value 15957.95
Coin0511I After Postsolve, objective 15957.95, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15957.94983 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 102 columns (102 integer (102 of which binary)) and 1600 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.102%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.81791
Cbc0038I Pass   1: suminf.    4.20851 (31) obj. -15153.4 iterations 23
Cbc0038I Pass   2: suminf.    3.71139 (29) obj. -14608.3 iterations 1
Cbc0038I Pass   3: suminf.    0.43680 (6) obj. -14578.3 iterations 23
Cbc0038I Solution found of -14572.7
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 102 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -14572.7 to -15085.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -15172.6
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.23892 (32) obj. -15172.6 iterations 1
Cbc0038I Pass   5: suminf.    4.23892 (32) obj. -15172.6 iterations 0
Cbc0038I Pass   6: suminf.    3.25273 (23) obj. -15456.9 iterations 10
Cbc0038I Pass   7: suminf.    1.54762 (14) obj. -15172.6 iterations 10
Cbc0038I Pass   8: suminf.    0.72727 (2) obj. -15409.5 iterations 18
Cbc0038I Pass   9: suminf.    0.45833 (1) obj. -15915 iterations 5
Cbc0038I Pass  10: suminf.    0.05718 (2) obj. -15172.6 iterations 12
Cbc0038I Pass  11: suminf.    0.33333 (1) obj. -15475.4 iterations 10
Cbc0038I Pass  12: suminf.    1.55537 (7) obj. -15172.6 iterations 17
Cbc0038I Pass  13: suminf.    1.10294 (6) obj. -15172.6 iterations 9
Cbc0038I Pass  14: suminf.    0.34750 (2) obj. -15172.6 iterations 10
Cbc0038I Pass  15: suminf.    0.46967 (3) obj. -15172.6 iterations 8
Cbc0038I Pass  16: suminf.    0.46967 (3) obj. -15172.6 iterations 0
Cbc0038I Pass  17: suminf.    0.34750 (2) obj. -15172.6 iterations 9
Cbc0038I Pass  18: suminf.    2.48626 (18) obj. -15172.6 iterations 23
Cbc0038I Pass  19: suminf.    2.48626 (18) obj. -15172.6 iterations 2
Cbc0038I Pass  20: suminf.    0.26000 (3) obj. -15172.6 iterations 21
Cbc0038I Solution found of -15595
Cbc0038I Rounding solution of -15603 is better than previous of -15595

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 102 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -15673.1
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  21: suminf.    4.71757 (33) obj. -15673.1 iterations 1
Cbc0038I Pass  22: suminf.    0.92432 (10) obj. -15673.1 iterations 38
Cbc0038I Pass  23: suminf.    0.83046 (8) obj. -15806.6 iterations 9
Cbc0038I Pass  24: suminf.    0.58082 (3) obj. -15673.1 iterations 12
Cbc0038I Pass  25: suminf.    0.45833 (1) obj. -15915 iterations 11
Cbc0038I Pass  26: suminf.    0.38361 (1) obj. -15673.1 iterations 10
Cbc0038I Pass  27: suminf.    1.15076 (8) obj. -15673.1 iterations 13
Cbc0038I Pass  28: suminf.    0.86428 (5) obj. -15673.1 iterations 5
Cbc0038I Pass  29: suminf.    2.08424 (12) obj. -15673.1 iterations 11
Cbc0038I Pass  30: suminf.    1.84853 (11) obj. -15673.1 iterations 8
Cbc0038I Pass  31: suminf.    1.69617 (13) obj. -15816.7 iterations 11
Cbc0038I Pass  32: suminf.    0.58082 (3) obj. -15673.1 iterations 14
Cbc0038I Pass  33: suminf.    0.45833 (1) obj. -15915 iterations 8
Cbc0038I Pass  34: suminf.    0.38361 (1) obj. -15673.1 iterations 9
Cbc0038I Pass  35: suminf.    1.82082 (8) obj. -15673.1 iterations 13
Cbc0038I Pass  36: suminf.    1.46054 (8) obj. -15673.1 iterations 4
Cbc0038I Pass  37: suminf.    0.64587 (2) obj. -15673.1 iterations 10
Cbc0038I Pass  38: suminf.    0.45833 (1) obj. -15913 iterations 4
Cbc0038I Pass  39: suminf.    0.38491 (1) obj. -15673.1 iterations 9
Cbc0038I Pass  40: suminf.    1.22000 (9) obj. -15673.1 iterations 13
Cbc0038I Pass  41: suminf.    1.06590 (6) obj. -15673.1 iterations 6
Cbc0038I Pass  42: suminf.    0.45833 (1) obj. -15910 iterations 15
Cbc0038I Pass  43: suminf.    0.38687 (1) obj. -15673.1 iterations 9
Cbc0038I Pass  44: suminf.    0.96047 (5) obj. -15673.1 iterations 11
Cbc0038I Pass  45: suminf.    0.83052 (4) obj. -15673.1 iterations 6
Cbc0038I Pass  46: suminf.    0.45833 (1) obj. -15910 iterations 13
Cbc0038I Pass  47: suminf.    0.38687 (1) obj. -15673.1 iterations 9
Cbc0038I Pass  48: suminf.    1.62962 (8) obj. -15673.1 iterations 13
Cbc0038I Pass  49: suminf.    1.08721 (7) obj. -15673.1 iterations 6
Cbc0038I Pass  50: suminf.    0.94552 (6) obj. -15673.1 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 102 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -15603 - took 0.04 seconds
Cbc0012I Integer solution of -15602.994 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 93 rows 102 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 7.6666667
Cbc0013I At root node, 6 cuts changed objective from -15934.688 to -15627.589 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 237 row cuts average 7.0 elements, 20 column cuts (20 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 7 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15602.994, took 44 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

