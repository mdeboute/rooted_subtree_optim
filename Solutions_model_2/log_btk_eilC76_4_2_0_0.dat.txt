Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 73 (-5) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 3.85999e-06 - average 2.90225e-08, 8 fixed columns
Coin0506I Presolve 118 (-15) rows, 65 (-8) columns and 358 (-46) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 3.101109 - largest nonzero change 0 ( 0%) - largest zero change 2.1864637e-05
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Coin0511I After Postsolve, objective 50.771776, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Coin0511I After Postsolve, objective 50.771776, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.77177593 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 73 columns (72 integer (72 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.221%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.4806
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.45477 iterations 40
Cbc0038I Solution found of 5.45477
Cbc0038I Relaxing continuous gives 5.45477
Cbc0038I Rounding solution of 0.41621 is better than previous of 5.45477

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 0.41621 to -24.1652 (0.04 seconds)
Cbc0038I Round again with cutoff of -26.8259
Cbc0038I Pass   2: suminf.    2.50053 (8) obj. -26.8259 iterations 8
Cbc0038I Pass   3: suminf.    2.07932 (6) obj. -26.8259 iterations 4
Cbc0038I Pass   4: suminf.    1.13746 (3) obj. -26.8259 iterations 4
Cbc0038I Pass   5: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass   6: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass   7: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass   8: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass   9: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  10: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  11: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  12: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  13: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  14: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  15: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  16: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  17: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  18: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  19: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  20: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  21: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  22: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  23: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  24: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  25: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  26: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  27: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  28: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  29: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  30: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  31: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.1652 - took 0.04 seconds
Cbc0012I Integer solution of -24.16518 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0031I 23 added rows had average density of 60.608696
Cbc0013I At root node, 23 cuts changed objective from -50.771776 to -39.062382 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11060 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1527 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 51.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.16518 best solution, best possible -39.062382 (0.70 seconds)
Cbc0016I Integer solution of -24.67224 found by strong branching after 7468 iterations and 21 nodes (0.87 seconds)
Cbc0001I Search completed - best objective -24.67224, took 8373 iterations and 40 nodes (0.89 seconds)
Cbc0032I Strong branching done 530 times (10470 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 17, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       0.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 119 (-33) columns and 2161 (-1142) elements
Clp1000I sum of infeasibilities 1.37554e-07 - average 1.27365e-09, 17 fixed columns
Coin0506I Presolve 92 (-16) rows, 102 (-17) columns and 1586 (-575) elements
Clp0006I 0  Obj 53.431822 Dual inf 7.0036895 (100)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 2.3864454 - largest nonzero change 1.580925e-05 ( 0.00091204228%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 66.629976
Clp0000I Optimal - objective value 66.629976
Coin0511I After Postsolve, objective 66.629976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 66.629976
Clp0000I Optimal - objective value 66.629976
Clp0000I Optimal - objective value 66.629976
Clp0000I Optimal - objective value 66.629976
Coin0511I After Postsolve, objective 66.629976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.6299757 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 120 columns (120 integer (120 of which binary)) and 2165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.033%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 4.77869
Cbc0038I Pass   1: suminf.    2.60894 (37) obj. -45.9847 iterations 19
Cbc0038I Pass   2: suminf.    0.47200 (9) obj. -5.39556 iterations 28
Cbc0038I Solution found of 5.02305
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -0.695906
Cbc0038I Pass   3: suminf.    2.60894 (37) obj. -45.9847 iterations 0
Cbc0038I Pass   4: suminf.    0.41140 (8) obj. -3.51677 iterations 29
Cbc0038I Pass   5: suminf.    0.70159 (4) obj. -0.695906 iterations 16
Cbc0038I Pass   6: suminf.    0.82157 (3) obj. -0.695906 iterations 6
Cbc0038I Pass   7: suminf.    0.49608 (3) obj. -0.695906 iterations 2
Cbc0038I Pass   8: suminf.    0.33216 (2) obj. -2.50149 iterations 1
Cbc0038I Pass   9: suminf.    0.73258 (2) obj. -0.695906 iterations 4
Cbc0038I Pass  10: suminf.    0.34925 (2) obj. -0.695906 iterations 2
Cbc0038I Pass  11: suminf.    0.25364 (3) obj. -0.695906 iterations 7
Cbc0038I Pass  12: suminf.    0.65394 (3) obj. -0.695906 iterations 5
Cbc0038I Pass  13: suminf.    0.65394 (3) obj. -0.695906 iterations 0
Cbc0038I Pass  14: suminf.    0.23022 (2) obj. -0.695906 iterations 16
Cbc0038I Pass  15: suminf.    0.23022 (2) obj. -0.695906 iterations 2
Cbc0038I Pass  16: suminf.    0.65650 (3) obj. -0.695906 iterations 2
Cbc0038I Pass  17: suminf.    0.16761 (2) obj. -3.83186 iterations 1
Cbc0038I Pass  18: suminf.    0.23022 (2) obj. -0.695906 iterations 6
Cbc0038I Pass  19: suminf.    1.31975 (14) obj. -0.695906 iterations 31
Cbc0038I Pass  20: suminf.    1.29861 (13) obj. -0.695906 iterations 6
Cbc0038I Pass  21: suminf.    0.64247 (3) obj. -0.695906 iterations 19
Cbc0038I Pass  22: suminf.    0.21523 (3) obj. -0.695906 iterations 12
Cbc0038I Pass  23: suminf.    0.73835 (4) obj. -0.695906 iterations 4
Cbc0038I Pass  24: suminf.    0.73835 (4) obj. -0.695906 iterations 1
Cbc0038I Pass  25: suminf.    0.93293 (3) obj. -0.695906 iterations 4
Cbc0038I Pass  26: suminf.    0.74139 (4) obj. -0.695906 iterations 10
Cbc0038I Pass  27: suminf.    0.92958 (3) obj. -0.695906 iterations 4
Cbc0038I Pass  28: suminf.    1.02031 (9) obj. -0.695906 iterations 35
Cbc0038I Pass  29: suminf.    1.02031 (9) obj. -0.695906 iterations 5
Cbc0038I Pass  30: suminf.    0.69839 (4) obj. -0.695906 iterations 17
Cbc0038I Pass  31: suminf.    0.69839 (4) obj. -0.695906 iterations 0
Cbc0038I Pass  32: suminf.    0.83901 (4) obj. -0.695906 iterations 5
Cbc0038I Rounding solution of 2.24713 is better than previous of 5.02305

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 2.24713 to -0.13853 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.9898
Cbc0038I Pass  32: suminf.    2.60894 (37) obj. -45.9847 iterations 0
Cbc0038I Pass  33: suminf.    0.79156 (14) obj. -12.8843 iterations 23
Cbc0038I Pass  34: suminf.    0.73778 (5) obj. -10.9898 iterations 28
Cbc0038I Pass  35: suminf.    0.73550 (6) obj. -10.9898 iterations 4
Cbc0038I Pass  36: suminf.    0.59672 (5) obj. -10.9898 iterations 18
Cbc0038I Pass  37: suminf.    0.59672 (5) obj. -10.9898 iterations 3
Cbc0038I Pass  38: suminf.    0.56497 (5) obj. -10.9898 iterations 5
Cbc0038I Pass  39: suminf.    0.56497 (5) obj. -10.9898 iterations 3
Cbc0038I Pass  40: suminf.    0.59672 (5) obj. -10.9898 iterations 4
Cbc0038I Pass  41: suminf.    1.14175 (10) obj. -10.9898 iterations 20
Cbc0038I Pass  42: suminf.    1.06381 (10) obj. -10.9898 iterations 15
Cbc0038I Pass  43: suminf.    0.34090 (4) obj. -10.9898 iterations 10
Cbc0038I Pass  44: suminf.    0.28708 (4) obj. -11.1513 iterations 4
Cbc0038I Pass  45: suminf.    0.34090 (4) obj. -10.9898 iterations 5
Cbc0038I Pass  46: suminf.    1.25121 (12) obj. -10.9898 iterations 21
Cbc0038I Pass  47: suminf.    0.58256 (9) obj. -11.2784 iterations 10
Cbc0038I Pass  48: suminf.    0.99144 (7) obj. -10.9898 iterations 24
Cbc0038I Pass  49: suminf.    0.99144 (7) obj. -10.9898 iterations 0
Cbc0038I Pass  50: suminf.    0.92821 (6) obj. -10.9898 iterations 4
Cbc0038I Pass  51: suminf.    0.66373 (6) obj. -10.9898 iterations 5
Cbc0038I Pass  52: suminf.    0.61968 (6) obj. -10.9898 iterations 7
Cbc0038I Pass  53: suminf.    0.61968 (6) obj. -10.9898 iterations 3
Cbc0038I Pass  54: suminf.    0.66373 (6) obj. -10.9898 iterations 4
Cbc0038I Pass  55: suminf.    1.30220 (18) obj. -10.9898 iterations 25
Cbc0038I Pass  56: suminf.    1.28466 (16) obj. -10.9898 iterations 10
Cbc0038I Pass  57: suminf.    1.80098 (11) obj. -10.9898 iterations 25
Cbc0038I Pass  58: suminf.    1.34255 (9) obj. -11.0953 iterations 10
Cbc0038I Pass  59: suminf.    1.32958 (10) obj. -10.9898 iterations 2
Cbc0038I Pass  60: suminf.    1.39525 (9) obj. -10.9898 iterations 7
Cbc0038I Pass  61: suminf.    1.89175 (14) obj. -10.9898 iterations 21
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 42 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -0.13853 to -16.5493 (0.10 seconds)
Cbc0038I Round again with cutoff of -27.2343
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.60894 (37) obj. -45.9847 iterations 0
Cbc0038I Pass  62: suminf.    2.29829 (25) obj. -27.2343 iterations 19
Cbc0038I Pass  63: suminf.    1.53837 (13) obj. -27.2343 iterations 32
Cbc0038I Pass  64: suminf.    1.25774 (14) obj. -27.2343 iterations 4
Cbc0038I Pass  65: suminf.    1.37004 (13) obj. -27.2343 iterations 14
Cbc0038I Pass  66: suminf.    1.86924 (16) obj. -27.2343 iterations 20
Cbc0038I Pass  67: suminf.    1.32651 (16) obj. -27.2343 iterations 20
Cbc0038I Pass  68: suminf.    1.40536 (14) obj. -27.2343 iterations 10
Cbc0038I Pass  69: suminf.    1.18085 (14) obj. -27.2343 iterations 6
Cbc0038I Pass  70: suminf.    1.52098 (14) obj. -27.2343 iterations 11
Cbc0038I Pass  71: suminf.    1.52098 (14) obj. -27.2343 iterations 2
Cbc0038I Pass  72: suminf.    2.21937 (17) obj. -27.2343 iterations 11
Cbc0038I Pass  73: suminf.    1.88397 (17) obj. -27.9051 iterations 6
Cbc0038I Pass  74: suminf.    2.18482 (17) obj. -27.2343 iterations 18
Cbc0038I Pass  75: suminf.    2.18482 (17) obj. -27.2343 iterations 5
Cbc0038I Pass  76: suminf.    2.11296 (17) obj. -27.2343 iterations 5
Cbc0038I Pass  77: suminf.    2.11296 (17) obj. -27.2343 iterations 3
Cbc0038I Pass  78: suminf.    2.18482 (17) obj. -27.2343 iterations 6
Cbc0038I Pass  79: suminf.    2.00295 (25) obj. -27.2343 iterations 37
Cbc0038I Pass  80: suminf.    1.90605 (17) obj. -27.2343 iterations 10
Cbc0038I Pass  81: suminf.    1.70168 (16) obj. -27.2343 iterations 11
Cbc0038I Pass  82: suminf.    1.70168 (16) obj. -27.2343 iterations 1
Cbc0038I Pass  83: suminf.    1.70611 (16) obj. -27.2343 iterations 14
Cbc0038I Pass  84: suminf.    1.70611 (16) obj. -27.2343 iterations 1
Cbc0038I Pass  85: suminf.    1.79595 (16) obj. -27.2343 iterations 6
Cbc0038I Pass  86: suminf.    1.43802 (16) obj. -27.2343 iterations 3
Cbc0038I Pass  87: suminf.    1.70611 (16) obj. -27.2343 iterations 9
Cbc0038I Pass  88: suminf.    2.03956 (20) obj. -27.2343 iterations 25
Cbc0038I Pass  89: suminf.    1.74698 (19) obj. -27.2343 iterations 8
Cbc0038I Pass  90: suminf.    1.91557 (25) obj. -27.2343 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -16.5493 - took 0.11 seconds
Cbc0012I Integer solution of -16.54934 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 109 rows 120 columns, reduced to 32 rows 35 columns
Cbc0012I Integer solution of -20.64971 found by DiveCoefficient after 3109 iterations and 0 nodes (2.67 seconds)
Cbc0031I 65 added rows had average density of 13.953846
Cbc0013I At root node, 65 cuts changed objective from -52.165614 to -26.321979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18244 row cuts average 11.7 elements, 1 column cuts (1 active)  in 0.233 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1040 row cuts average 105.5 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 146 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 650 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 356 row cuts average 65.8 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 420 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.826 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.64971 best solution, best possible -26.321979 (2.75 seconds)
Cbc0012I Integer solution of -24.67224 found by rounding after 3132 iterations and 1 nodes (2.76 seconds)
Cbc0010I After 4 nodes, 3 on tree, -24.67224 best solution, best possible -25.431699 (3.49 seconds)
Cbc0001I Search completed - best objective -24.67224, took 3901 iterations and 8 nodes (3.57 seconds)
Cbc0032I Strong branching done 288 times (8115 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       2.62   (Wallclock seconds):       3.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 73 (-5) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 3.85999e-06 - average 2.90225e-08, 8 fixed columns
Coin0506I Presolve 118 (-15) rows, 65 (-8) columns and 358 (-46) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 3.101109 - largest nonzero change 0 ( 0%) - largest zero change 2.1864637e-05
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Coin0511I After Postsolve, objective 50.771776, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Coin0511I After Postsolve, objective 50.771776, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.77177593 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 73 columns (72 integer (72 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.221%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.4806
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.45477 iterations 40
Cbc0038I Solution found of 5.45477
Cbc0038I Relaxing continuous gives 5.45477
Cbc0038I Rounding solution of 0.41621 is better than previous of 5.45477

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 0.41621 to -24.1652 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.8259
Cbc0038I Pass   2: suminf.    2.50053 (8) obj. -26.8259 iterations 8
Cbc0038I Pass   3: suminf.    2.07932 (6) obj. -26.8259 iterations 4
Cbc0038I Pass   4: suminf.    1.13746 (3) obj. -26.8259 iterations 4
Cbc0038I Pass   5: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass   6: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass   7: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass   8: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass   9: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  10: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  11: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  12: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  13: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  14: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  15: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  16: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  17: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  18: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  19: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  20: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  21: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  22: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  23: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  24: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  25: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  26: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  27: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  28: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  29: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  30: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  31: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.1652 - took 0.05 seconds
Cbc0012I Integer solution of -24.16518 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0031I 23 added rows had average density of 60.608696
Cbc0013I At root node, 23 cuts changed objective from -50.771776 to -39.062382 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11060 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1527 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 51.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.16518 best solution, best possible -39.062382 (0.79 seconds)
Cbc0016I Integer solution of -24.67224 found by strong branching after 7468 iterations and 21 nodes (0.97 seconds)
Cbc0001I Search completed - best objective -24.67224, took 8373 iterations and 40 nodes (0.99 seconds)
Cbc0032I Strong branching done 530 times (10470 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 17, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.00

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 119 (-34) columns and 2161 (-1143) elements
Clp1000I sum of infeasibilities 1.37554e-07 - average 1.27365e-09, 17 fixed columns
Coin0506I Presolve 92 (-16) rows, 102 (-17) columns and 1586 (-575) elements
Clp0006I 0  Obj 53.431822 Dual inf 7.0036895 (100)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 2.3864454 - largest nonzero change 1.580925e-05 ( 0.00091204228%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 66.629976
Clp0000I Optimal - objective value 66.629976
Coin0511I After Postsolve, objective 66.629976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 66.629976
Clp0000I Optimal - objective value 66.629976
Clp0000I Optimal - objective value 66.629976
Clp0000I Optimal - objective value 66.629976
Coin0511I After Postsolve, objective 66.629976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.6299757 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 120 columns (120 integer (120 of which binary)) and 2165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.033%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 4.77869
Cbc0038I Pass   1: suminf.    2.60894 (37) obj. -45.9847 iterations 19
Cbc0038I Pass   2: suminf.    0.47200 (9) obj. -5.39556 iterations 28
Cbc0038I Solution found of 5.02305
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -0.695906
Cbc0038I Pass   3: suminf.    2.60894 (37) obj. -45.9847 iterations 0
Cbc0038I Pass   4: suminf.    0.41140 (8) obj. -3.51677 iterations 29
Cbc0038I Pass   5: suminf.    0.70159 (4) obj. -0.695906 iterations 16
Cbc0038I Pass   6: suminf.    0.82157 (3) obj. -0.695906 iterations 6
Cbc0038I Pass   7: suminf.    0.49608 (3) obj. -0.695906 iterations 2
Cbc0038I Pass   8: suminf.    0.33216 (2) obj. -2.50149 iterations 1
Cbc0038I Pass   9: suminf.    0.73258 (2) obj. -0.695906 iterations 4
Cbc0038I Pass  10: suminf.    0.34925 (2) obj. -0.695906 iterations 2
Cbc0038I Pass  11: suminf.    0.25364 (3) obj. -0.695906 iterations 7
Cbc0038I Pass  12: suminf.    0.65394 (3) obj. -0.695906 iterations 5
Cbc0038I Pass  13: suminf.    0.65394 (3) obj. -0.695906 iterations 0
Cbc0038I Pass  14: suminf.    0.23022 (2) obj. -0.695906 iterations 16
Cbc0038I Pass  15: suminf.    0.23022 (2) obj. -0.695906 iterations 2
Cbc0038I Pass  16: suminf.    0.65650 (3) obj. -0.695906 iterations 2
Cbc0038I Pass  17: suminf.    0.16761 (2) obj. -3.83186 iterations 1
Cbc0038I Pass  18: suminf.    0.23022 (2) obj. -0.695906 iterations 6
Cbc0038I Pass  19: suminf.    1.31975 (14) obj. -0.695906 iterations 31
Cbc0038I Pass  20: suminf.    1.29861 (13) obj. -0.695906 iterations 6
Cbc0038I Pass  21: suminf.    0.64247 (3) obj. -0.695906 iterations 19
Cbc0038I Pass  22: suminf.    0.21523 (3) obj. -0.695906 iterations 12
Cbc0038I Pass  23: suminf.    0.73835 (4) obj. -0.695906 iterations 4
Cbc0038I Pass  24: suminf.    0.73835 (4) obj. -0.695906 iterations 1
Cbc0038I Pass  25: suminf.    0.93293 (3) obj. -0.695906 iterations 4
Cbc0038I Pass  26: suminf.    0.74139 (4) obj. -0.695906 iterations 10
Cbc0038I Pass  27: suminf.    0.92958 (3) obj. -0.695906 iterations 4
Cbc0038I Pass  28: suminf.    1.02031 (9) obj. -0.695906 iterations 35
Cbc0038I Pass  29: suminf.    1.02031 (9) obj. -0.695906 iterations 5
Cbc0038I Pass  30: suminf.    0.69839 (4) obj. -0.695906 iterations 17
Cbc0038I Pass  31: suminf.    0.69839 (4) obj. -0.695906 iterations 0
Cbc0038I Pass  32: suminf.    0.83901 (4) obj. -0.695906 iterations 5
Cbc0038I Rounding solution of 2.24713 is better than previous of 5.02305

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 2.24713 to -0.13853 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.9898
Cbc0038I Pass  32: suminf.    2.60894 (37) obj. -45.9847 iterations 0
Cbc0038I Pass  33: suminf.    0.79156 (14) obj. -12.8843 iterations 23
Cbc0038I Pass  34: suminf.    0.73778 (5) obj. -10.9898 iterations 28
Cbc0038I Pass  35: suminf.    0.73550 (6) obj. -10.9898 iterations 4
Cbc0038I Pass  36: suminf.    0.59672 (5) obj. -10.9898 iterations 18
Cbc0038I Pass  37: suminf.    0.59672 (5) obj. -10.9898 iterations 3
Cbc0038I Pass  38: suminf.    0.56497 (5) obj. -10.9898 iterations 5
Cbc0038I Pass  39: suminf.    0.56497 (5) obj. -10.9898 iterations 3
Cbc0038I Pass  40: suminf.    0.59672 (5) obj. -10.9898 iterations 4
Cbc0038I Pass  41: suminf.    1.14175 (10) obj. -10.9898 iterations 20
Cbc0038I Pass  42: suminf.    1.06381 (10) obj. -10.9898 iterations 15
Cbc0038I Pass  43: suminf.    0.34090 (4) obj. -10.9898 iterations 10
Cbc0038I Pass  44: suminf.    0.28708 (4) obj. -11.1513 iterations 4
Cbc0038I Pass  45: suminf.    0.34090 (4) obj. -10.9898 iterations 5
Cbc0038I Pass  46: suminf.    1.25121 (12) obj. -10.9898 iterations 21
Cbc0038I Pass  47: suminf.    0.58256 (9) obj. -11.2784 iterations 10
Cbc0038I Pass  48: suminf.    0.99144 (7) obj. -10.9898 iterations 24
Cbc0038I Pass  49: suminf.    0.99144 (7) obj. -10.9898 iterations 0
Cbc0038I Pass  50: suminf.    0.92821 (6) obj. -10.9898 iterations 4
Cbc0038I Pass  51: suminf.    0.66373 (6) obj. -10.9898 iterations 5
Cbc0038I Pass  52: suminf.    0.61968 (6) obj. -10.9898 iterations 7
Cbc0038I Pass  53: suminf.    0.61968 (6) obj. -10.9898 iterations 3
Cbc0038I Pass  54: suminf.    0.66373 (6) obj. -10.9898 iterations 4
Cbc0038I Pass  55: suminf.    1.30220 (18) obj. -10.9898 iterations 25
Cbc0038I Pass  56: suminf.    1.28466 (16) obj. -10.9898 iterations 10
Cbc0038I Pass  57: suminf.    1.80098 (11) obj. -10.9898 iterations 25
Cbc0038I Pass  58: suminf.    1.34255 (9) obj. -11.0953 iterations 10
Cbc0038I Pass  59: suminf.    1.32958 (10) obj. -10.9898 iterations 2
Cbc0038I Pass  60: suminf.    1.39525 (9) obj. -10.9898 iterations 7
Cbc0038I Pass  61: suminf.    1.89175 (14) obj. -10.9898 iterations 21
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 42 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -0.13853 to -16.5493 (0.11 seconds)
Cbc0038I Round again with cutoff of -27.2343
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.60894 (37) obj. -45.9847 iterations 0
Cbc0038I Pass  62: suminf.    2.29829 (25) obj. -27.2343 iterations 19
Cbc0038I Pass  63: suminf.    1.53837 (13) obj. -27.2343 iterations 32
Cbc0038I Pass  64: suminf.    1.25774 (14) obj. -27.2343 iterations 4
Cbc0038I Pass  65: suminf.    1.37004 (13) obj. -27.2343 iterations 14
Cbc0038I Pass  66: suminf.    1.86924 (16) obj. -27.2343 iterations 20
Cbc0038I Pass  67: suminf.    1.32651 (16) obj. -27.2343 iterations 20
Cbc0038I Pass  68: suminf.    1.40536 (14) obj. -27.2343 iterations 10
Cbc0038I Pass  69: suminf.    1.18085 (14) obj. -27.2343 iterations 6
Cbc0038I Pass  70: suminf.    1.52098 (14) obj. -27.2343 iterations 11
Cbc0038I Pass  71: suminf.    1.52098 (14) obj. -27.2343 iterations 2
Cbc0038I Pass  72: suminf.    2.21937 (17) obj. -27.2343 iterations 11
Cbc0038I Pass  73: suminf.    1.88397 (17) obj. -27.9051 iterations 6
Cbc0038I Pass  74: suminf.    2.18482 (17) obj. -27.2343 iterations 18
Cbc0038I Pass  75: suminf.    2.18482 (17) obj. -27.2343 iterations 5
Cbc0038I Pass  76: suminf.    2.11296 (17) obj. -27.2343 iterations 5
Cbc0038I Pass  77: suminf.    2.11296 (17) obj. -27.2343 iterations 3
Cbc0038I Pass  78: suminf.    2.18482 (17) obj. -27.2343 iterations 6
Cbc0038I Pass  79: suminf.    2.00295 (25) obj. -27.2343 iterations 37
Cbc0038I Pass  80: suminf.    1.90605 (17) obj. -27.2343 iterations 10
Cbc0038I Pass  81: suminf.    1.70168 (16) obj. -27.2343 iterations 11
Cbc0038I Pass  82: suminf.    1.70168 (16) obj. -27.2343 iterations 1
Cbc0038I Pass  83: suminf.    1.70611 (16) obj. -27.2343 iterations 14
Cbc0038I Pass  84: suminf.    1.70611 (16) obj. -27.2343 iterations 1
Cbc0038I Pass  85: suminf.    1.79595 (16) obj. -27.2343 iterations 6
Cbc0038I Pass  86: suminf.    1.43802 (16) obj. -27.2343 iterations 3
Cbc0038I Pass  87: suminf.    1.70611 (16) obj. -27.2343 iterations 9
Cbc0038I Pass  88: suminf.    2.03956 (20) obj. -27.2343 iterations 25
Cbc0038I Pass  89: suminf.    1.74698 (19) obj. -27.2343 iterations 8
Cbc0038I Pass  90: suminf.    1.91557 (25) obj. -27.2343 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -16.5493 - took 0.12 seconds
Cbc0012I Integer solution of -16.54934 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 109 rows 120 columns, reduced to 32 rows 35 columns
Cbc0012I Integer solution of -20.64971 found by DiveCoefficient after 3109 iterations and 0 nodes (3.01 seconds)
Cbc0031I 65 added rows had average density of 13.953846
Cbc0013I At root node, 65 cuts changed objective from -52.165614 to -26.321979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18244 row cuts average 11.7 elements, 1 column cuts (1 active)  in 0.260 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1040 row cuts average 105.5 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 146 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 650 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 356 row cuts average 65.8 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 420 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.903 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.64971 best solution, best possible -26.321979 (3.09 seconds)
Cbc0012I Integer solution of -24.67224 found by rounding after 3132 iterations and 1 nodes (3.10 seconds)
Cbc0010I After 4 nodes, 3 on tree, -24.67224 best solution, best possible -25.431699 (3.96 seconds)
Cbc0001I Search completed - best objective -24.67224, took 3901 iterations and 8 nodes (4.05 seconds)
Cbc0032I Strong branching done 288 times (8115 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       2.90   (Wallclock seconds):       4.07

