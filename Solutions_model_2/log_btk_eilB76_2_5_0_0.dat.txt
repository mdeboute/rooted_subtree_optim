Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 374 (-79) elements
Clp1000I sum of infeasibilities 5.27015e-05 - average 4.28468e-07, 14 fixed columns
Coin0506I Presolve 96 (-27) rows, 54 (-14) columns and 292 (-82) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Coin0511I After Postsolve, objective 59.590716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Coin0511I After Postsolve, objective 59.590716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.59071649 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 119 rows, 68 columns (67 integer (67 of which binary)) and 474 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.963%
Cgl0015I Clique Strengthening extended 3 cliques, 4 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.69303
Cbc0038I Solution found of -5.55202
Cbc0038I Relaxing continuous gives -13.742
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -13.742 to -23.9408 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4209
Cbc0038I Pass   1: suminf.    1.16535 (16) obj. -27.4209 iterations 37
Cbc0038I Pass   2: suminf.    0.85828 (3) obj. -27.4209 iterations 19
Cbc0038I Pass   3: suminf.    0.45533 (1) obj. -27.4209 iterations 3
Cbc0038I Pass   4: suminf.    0.45489 (1) obj. -27.4209 iterations 2
Cbc0038I Pass   5: suminf.    1.60682 (6) obj. -27.4209 iterations 12
Cbc0038I Pass   6: suminf.    0.83760 (2) obj. -27.4209 iterations 5
Cbc0038I Pass   7: suminf.    0.72663 (2) obj. -27.4209 iterations 3
Cbc0038I Pass   8: suminf.    0.76780 (3) obj. -27.4209 iterations 4
Cbc0038I Pass   9: suminf.    0.73827 (2) obj. -27.4209 iterations 1
Cbc0038I Pass  10: suminf.    0.41802 (6) obj. -27.4209 iterations 5
Cbc0038I Pass  11: suminf.    1.16535 (16) obj. -27.4209 iterations 22
Cbc0038I Pass  12: suminf.    1.62598 (6) obj. -27.4209 iterations 15
Cbc0038I Pass  13: suminf.    1.62598 (6) obj. -27.4209 iterations 2
Cbc0038I Pass  14: suminf.    0.81534 (5) obj. -27.4209 iterations 11
Cbc0038I Pass  15: suminf.    0.62369 (5) obj. -27.4209 iterations 4
Cbc0038I Pass  16: suminf.    0.84643 (4) obj. -27.4209 iterations 13
Cbc0038I Pass  17: suminf.    0.84643 (4) obj. -27.4209 iterations 1
Cbc0038I Pass  18: suminf.    0.51564 (2) obj. -27.4209 iterations 4
Cbc0038I Pass  19: suminf.    0.51564 (2) obj. -27.4209 iterations 0
Cbc0038I Pass  20: suminf.    1.19426 (3) obj. -27.4209 iterations 3
Cbc0038I Pass  21: suminf.    1.69617 (8) obj. -27.4209 iterations 17
Cbc0038I Pass  22: suminf.    1.34897 (6) obj. -27.4209 iterations 11
Cbc0038I Pass  23: suminf.    1.19845 (10) obj. -27.4209 iterations 12
Cbc0038I Pass  24: suminf.    1.16535 (16) obj. -27.4209 iterations 8
Cbc0038I Pass  25: suminf.    1.62598 (6) obj. -27.4209 iterations 15
Cbc0038I Pass  26: suminf.    1.62598 (6) obj. -27.4209 iterations 2
Cbc0038I Pass  27: suminf.    1.30780 (7) obj. -27.4209 iterations 4
Cbc0038I Pass  28: suminf.    1.29550 (6) obj. -27.4209 iterations 3
Cbc0038I Pass  29: suminf.    1.29550 (6) obj. -27.4209 iterations 1
Cbc0038I Pass  30: suminf.    1.29550 (6) obj. -27.4209 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23.9408 - took 0.04 seconds
Cbc0012I Integer solution of -23.94082 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 59 rows 34 columns
Cbc0031I 17 added rows had average density of 30.764706
Cbc0013I At root node, 17 cuts changed objective from -58.740714 to -50.631024 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7542 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1702 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23.94082, took 7068 iterations and 40 nodes (0.68 seconds)
Cbc0032I Strong branching done 526 times (8619 iterations), fathomed 5 nodes and fixed 23 variables
Cbc0035I Maximum depth 11, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-44) rows, 121 (-31) columns and 2000 (-1303) elements
Clp1000I sum of infeasibilities 1.07216e-09 - average 9.74693e-12, 67 fixed columns
Coin0506I Presolve 52 (-58) rows, 54 (-67) columns and 347 (-1653) elements
Clp0006I 0  Obj 185.86054 Dual inf 4.4731425 (54)
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 196.8159
Clp0000I Optimal - objective value 196.8159
Coin0511I After Postsolve, objective 196.8159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 196.8159
Clp0000I Optimal - objective value 196.8159
Clp0000I Optimal - objective value 196.8159
Clp0000I Optimal - objective value 196.8159
Coin0511I After Postsolve, objective 196.8159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 196.8158964 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 65 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 121 columns (121 integer (121 of which binary)) and 2090 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 9.5785
Cbc0038I Pass   1: suminf.    0.97945 (27) obj. -60.2148 iterations 8
Cbc0038I Pass   2: suminf.    0.97945 (27) obj. -60.2148 iterations 0
Cbc0038I Pass   3: suminf.    0.42163 (15) obj. -44.0123 iterations 12
Cbc0038I Solution found of -26.5288
Cbc0038I Rounding solution of -41.2258 is better than previous of -26.5288

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 121 columns, reduced to 36 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -41.2258 to -100.529 (0.06 seconds)
Cbc0038I Round again with cutoff of -106.38
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.40027 (40) obj. -106.38 iterations 1
Cbc0038I Pass   5: suminf.    2.40027 (40) obj. -106.38 iterations 0
Cbc0038I Pass   6: suminf.    1.16579 (22) obj. -106.38 iterations 18
Cbc0038I Pass   7: suminf.    1.12580 (21) obj. -118.114 iterations 1
Cbc0038I Pass   8: suminf.    0.17367 (1) obj. -106.38 iterations 28
Cbc0038I Pass   9: suminf.    0.35714 (1) obj. -115.457 iterations 3
Cbc0038I Pass  10: suminf.    0.24508 (1) obj. -106.38 iterations 1
Cbc0038I Pass  11: suminf.    1.91895 (9) obj. -106.38 iterations 13
Cbc0038I Pass  12: suminf.    1.75377 (8) obj. -106.38 iterations 3
Cbc0038I Pass  13: suminf.    0.35714 (1) obj. -108.457 iterations 8
Cbc0038I Pass  14: suminf.    0.33150 (1) obj. -106.38 iterations 1
Cbc0038I Pass  15: suminf.    3.44596 (13) obj. -106.38 iterations 14
Cbc0038I Pass  16: suminf.    1.24841 (9) obj. -106.38 iterations 3
Cbc0038I Pass  17: suminf.    0.74039 (9) obj. -106.38 iterations 6
Cbc0038I Pass  18: suminf.    1.50294 (5) obj. -106.38 iterations 10
Cbc0038I Pass  19: suminf.    0.35917 (2) obj. -106.38 iterations 1
Cbc0038I Pass  20: suminf.    0.35619 (1) obj. -106.38 iterations 3
Cbc0038I Pass  21: suminf.    0.35714 (1) obj. -106.457 iterations 1
Cbc0038I Pass  22: suminf.    2.46165 (12) obj. -106.38 iterations 12
Cbc0038I Pass  23: suminf.    2.07687 (10) obj. -106.38 iterations 6
Cbc0038I Pass  24: suminf.    1.26836 (5) obj. -106.38 iterations 8
Cbc0038I Pass  25: suminf.    1.26836 (5) obj. -106.38 iterations 0
Cbc0038I Pass  26: suminf.    0.89240 (4) obj. -106.38 iterations 2
Cbc0038I Pass  27: suminf.    0.35714 (1) obj. -106.457 iterations 4
Cbc0038I Pass  28: suminf.    0.35619 (1) obj. -106.38 iterations 1
Cbc0038I Pass  29: suminf.    2.37441 (9) obj. -106.38 iterations 34
Cbc0038I Pass  30: suminf.    2.37441 (9) obj. -106.38 iterations 1
Cbc0038I Pass  31: suminf.    0.41714 (4) obj. -106.38 iterations 14
Cbc0038I Pass  32: suminf.    0.64679 (2) obj. -106.38 iterations 3
Cbc0038I Pass  33: suminf.    0.33150 (1) obj. -106.38 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 121 columns, reduced to 38 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -100.529 - took 0.02 seconds
Cbc0012I Integer solution of -100.52878 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 102 rows 121 columns, reduced to 36 rows 35 columns
Cbc0012I Integer solution of -100.60566 found by DiveCoefficient after 132 iterations and 0 nodes (0.10 seconds)
Cbc0031I 11 added rows had average density of 12.636364
Cbc0013I At root node, 11 cuts changed objective from -159.04498 to -100.60566 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 337 row cuts average 16.1 elements, 74 column cuts (74 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 21 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 71 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 44.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -100.60566, took 132 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 374 (-79) elements
Clp1000I sum of infeasibilities 5.27015e-05 - average 4.28468e-07, 14 fixed columns
Coin0506I Presolve 96 (-27) rows, 54 (-14) columns and 292 (-82) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Coin0511I After Postsolve, objective 59.590716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Coin0511I After Postsolve, objective 59.590716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.59071649 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 119 rows, 68 columns (67 integer (67 of which binary)) and 474 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.963%
Cgl0015I Clique Strengthening extended 3 cliques, 4 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.69303
Cbc0038I Solution found of -5.55202
Cbc0038I Relaxing continuous gives -13.742
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -13.742 to -23.9408 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4209
Cbc0038I Pass   1: suminf.    1.16535 (16) obj. -27.4209 iterations 37
Cbc0038I Pass   2: suminf.    0.85828 (3) obj. -27.4209 iterations 19
Cbc0038I Pass   3: suminf.    0.45533 (1) obj. -27.4209 iterations 3
Cbc0038I Pass   4: suminf.    0.45489 (1) obj. -27.4209 iterations 2
Cbc0038I Pass   5: suminf.    1.60682 (6) obj. -27.4209 iterations 12
Cbc0038I Pass   6: suminf.    0.83760 (2) obj. -27.4209 iterations 5
Cbc0038I Pass   7: suminf.    0.72663 (2) obj. -27.4209 iterations 3
Cbc0038I Pass   8: suminf.    0.76780 (3) obj. -27.4209 iterations 4
Cbc0038I Pass   9: suminf.    0.73827 (2) obj. -27.4209 iterations 1
Cbc0038I Pass  10: suminf.    0.41802 (6) obj. -27.4209 iterations 5
Cbc0038I Pass  11: suminf.    1.16535 (16) obj. -27.4209 iterations 22
Cbc0038I Pass  12: suminf.    1.62598 (6) obj. -27.4209 iterations 15
Cbc0038I Pass  13: suminf.    1.62598 (6) obj. -27.4209 iterations 2
Cbc0038I Pass  14: suminf.    0.81534 (5) obj. -27.4209 iterations 11
Cbc0038I Pass  15: suminf.    0.62369 (5) obj. -27.4209 iterations 4
Cbc0038I Pass  16: suminf.    0.84643 (4) obj. -27.4209 iterations 13
Cbc0038I Pass  17: suminf.    0.84643 (4) obj. -27.4209 iterations 1
Cbc0038I Pass  18: suminf.    0.51564 (2) obj. -27.4209 iterations 4
Cbc0038I Pass  19: suminf.    0.51564 (2) obj. -27.4209 iterations 0
Cbc0038I Pass  20: suminf.    1.19426 (3) obj. -27.4209 iterations 3
Cbc0038I Pass  21: suminf.    1.69617 (8) obj. -27.4209 iterations 17
Cbc0038I Pass  22: suminf.    1.34897 (6) obj. -27.4209 iterations 11
Cbc0038I Pass  23: suminf.    1.19845 (10) obj. -27.4209 iterations 12
Cbc0038I Pass  24: suminf.    1.16535 (16) obj. -27.4209 iterations 8
Cbc0038I Pass  25: suminf.    1.62598 (6) obj. -27.4209 iterations 15
Cbc0038I Pass  26: suminf.    1.62598 (6) obj. -27.4209 iterations 2
Cbc0038I Pass  27: suminf.    1.30780 (7) obj. -27.4209 iterations 4
Cbc0038I Pass  28: suminf.    1.29550 (6) obj. -27.4209 iterations 3
Cbc0038I Pass  29: suminf.    1.29550 (6) obj. -27.4209 iterations 1
Cbc0038I Pass  30: suminf.    1.29550 (6) obj. -27.4209 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.9408 - took 0.05 seconds
Cbc0012I Integer solution of -23.94082 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 59 rows 34 columns
Cbc0031I 17 added rows had average density of 30.764706
Cbc0013I At root node, 17 cuts changed objective from -58.740714 to -50.631024 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7542 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1702 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 12 nodes, 9 on tree, -23.94082 best solution, best possible -50.631024 (0.69 seconds)
Cbc0001I Search completed - best objective -23.94082, took 7068 iterations and 40 nodes (0.74 seconds)
Cbc0032I Strong branching done 526 times (8619 iterations), fathomed 5 nodes and fixed 23 variables
Cbc0035I Maximum depth 11, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 115 (-38) columns and 1786 (-1518) elements
Clp1000I sum of infeasibilities 3.8535e-06 - average 3.70529e-08, 27 fixed columns
Coin0506I Presolve 78 (-26) rows, 86 (-29) columns and 1078 (-708) elements
Clp0006I 0  Obj 72.099286 Dual inf 7.6460275 (86)
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 1.7328215 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 81.920483
Clp0000I Optimal - objective value 81.920483
Coin0511I After Postsolve, objective 81.920483, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 81.920483
Clp0000I Optimal - objective value 81.920483
Clp0000I Optimal - objective value 81.920483
Clp0000I Optimal - objective value 81.920483
Coin0511I After Postsolve, objective 81.920483, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.92048257 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 115 columns (115 integer (115 of which binary)) and 1863 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.772%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 3.18433
Cbc0038I Pass   1: suminf.    0.19420 (7) obj. -21.6576 iterations 24
Cbc0038I Pass   2: suminf.    0.19420 (7) obj. -21.6576 iterations 1
Cbc0038I Solution found of -0.29358
Cbc0038I Rounding solution of -17.2772 is better than previous of -0.29358

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 34 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -21.7855
Cbc0038I Pass   3: suminf.    0.20388 (38) obj. -21.7855 iterations 7
Cbc0038I Pass   4: suminf.    0.20131 (8) obj. -21.7855 iterations 4
Cbc0038I Pass   5: suminf.    1.32195 (32) obj. -21.7855 iterations 12
Cbc0038I Pass   6: suminf.    1.12950 (31) obj. -21.7855 iterations 1
Cbc0038I Pass   7: suminf.    1.31777 (13) obj. -21.7855 iterations 36
Cbc0038I Pass   8: suminf.    1.16715 (12) obj. -21.7855 iterations 4
Cbc0038I Pass   9: suminf.    1.89683 (8) obj. -21.7855 iterations 15
Cbc0038I Pass  10: suminf.    1.89683 (8) obj. -21.7855 iterations 0
Cbc0038I Pass  11: suminf.    1.18316 (8) obj. -21.7855 iterations 8
Cbc0038I Pass  12: suminf.    1.08273 (8) obj. -21.7855 iterations 2
Cbc0038I Pass  13: suminf.    3.14252 (8) obj. -21.7855 iterations 7
Cbc0038I Pass  14: suminf.    3.14252 (8) obj. -21.7855 iterations 0
Cbc0038I Pass  15: suminf.    1.16987 (9) obj. -21.7855 iterations 6
Cbc0038I Pass  16: suminf.    1.09686 (11) obj. -21.7855 iterations 8
Cbc0038I Pass  17: suminf.    3.14252 (8) obj. -21.7855 iterations 4
Cbc0038I Pass  18: suminf.    2.05058 (16) obj. -21.7855 iterations 26
Cbc0038I Pass  19: suminf.    1.60120 (13) obj. -21.7855 iterations 12
Cbc0038I Pass  20: suminf.    1.95358 (8) obj. -21.7855 iterations 15
Cbc0038I Pass  21: suminf.    1.30608 (8) obj. -21.7855 iterations 3
Cbc0038I Pass  22: suminf.    1.91453 (7) obj. -21.7855 iterations 7
Cbc0038I Pass  23: suminf.    1.72529 (8) obj. -21.7855 iterations 2
Cbc0038I Pass  24: suminf.    2.31546 (8) obj. -21.7855 iterations 4
Cbc0038I Pass  25: suminf.    2.08403 (15) obj. -21.7855 iterations 33
Cbc0038I Pass  26: suminf.    1.81290 (14) obj. -21.7855 iterations 7
Cbc0038I Pass  27: suminf.    2.93561 (9) obj. -21.7855 iterations 16
Cbc0038I Pass  28: suminf.    2.36105 (10) obj. -21.7855 iterations 1
Cbc0038I Pass  29: suminf.    3.19982 (10) obj. -21.7855 iterations 5
Cbc0038I Pass  30: suminf.    2.07139 (15) obj. -21.7855 iterations 21
Cbc0038I Pass  31: suminf.    1.68660 (14) obj. -21.7855 iterations 2
Cbc0038I Pass  32: suminf.    1.38779 (13) obj. -21.7855 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 52 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -0.29358 to -23.9408 (0.10 seconds)
Cbc0038I Round again with cutoff of -31.6245
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.94848 (38) obj. -31.6245 iterations 0
Cbc0038I Pass  33: suminf.    0.92319 (9) obj. -31.6245 iterations 3
Cbc0038I Pass  34: suminf.    1.89017 (33) obj. -31.6245 iterations 10
Cbc0038I Pass  35: suminf.    1.22545 (33) obj. -31.6245 iterations 2
Cbc0038I Pass  36: suminf.    1.55573 (15) obj. -31.6245 iterations 43
Cbc0038I Pass  37: suminf.    1.54802 (16) obj. -31.6245 iterations 3
Cbc0038I Pass  38: suminf.    3.52223 (13) obj. -31.6245 iterations 16
Cbc0038I Pass  39: suminf.    3.52223 (13) obj. -31.6245 iterations 0
Cbc0038I Pass  40: suminf.    1.79707 (13) obj. -31.6245 iterations 6
Cbc0038I Pass  41: suminf.    1.31242 (16) obj. -31.6245 iterations 7
Cbc0038I Pass  42: suminf.    3.52223 (13) obj. -31.6245 iterations 6
Cbc0038I Pass  43: suminf.    1.30142 (19) obj. -31.6245 iterations 26
Cbc0038I Pass  44: suminf.    0.85153 (16) obj. -31.6245 iterations 8
Cbc0038I Pass  45: suminf.    1.47777 (13) obj. -31.6245 iterations 15
Cbc0038I Pass  46: suminf.    1.46679 (13) obj. -31.6245 iterations 1
Cbc0038I Pass  47: suminf.    3.01029 (13) obj. -31.6245 iterations 7
Cbc0038I Pass  48: suminf.    1.56950 (14) obj. -31.6245 iterations 6
Cbc0038I Pass  49: suminf.    1.43589 (13) obj. -31.6245 iterations 2
Cbc0038I Pass  50: suminf.    3.02443 (13) obj. -31.6245 iterations 7
Cbc0038I Pass  51: suminf.    1.60028 (14) obj. -31.6245 iterations 6
Cbc0038I Pass  52: suminf.    1.46679 (13) obj. -31.6245 iterations 2
Cbc0038I Pass  53: suminf.    3.01029 (13) obj. -31.6245 iterations 7
Cbc0038I Pass  54: suminf.    1.56950 (14) obj. -31.6245 iterations 6
Cbc0038I Pass  55: suminf.    1.43589 (13) obj. -31.6245 iterations 2
Cbc0038I Pass  56: suminf.    1.86221 (14) obj. -31.6245 iterations 6
Cbc0038I Pass  57: suminf.    1.46679 (13) obj. -31.6245 iterations 2
Cbc0038I Pass  58: suminf.    3.01029 (13) obj. -31.6245 iterations 7
Cbc0038I Pass  59: suminf.    1.56950 (14) obj. -31.6245 iterations 6
Cbc0038I Pass  60: suminf.    1.43589 (13) obj. -31.6245 iterations 2
Cbc0038I Pass  61: suminf.    3.02443 (13) obj. -31.6245 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 42 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -23.9408 - took 0.11 seconds
Cbc0012I Integer solution of -23.94082 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 36 rows 39 columns
Cbc0031I 53 added rows had average density of 24.867925
Cbc0013I At root node, 53 cuts changed objective from -62.358932 to -34.854978 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16319 row cuts average 2.5 elements, 1 column cuts (1 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1658 row cuts average 101.2 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1150 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 695 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 553 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 337 row cuts average 54.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 80 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.94082 best solution, best possible -34.854978 (2.68 seconds)
Cbc0010I After 15 nodes, 6 on tree, -23.94082 best solution, best possible -31.793368 (3.38 seconds)
Cbc0001I Search completed - best objective -23.94082, took 7435 iterations and 24 nodes (3.42 seconds)
Cbc0032I Strong branching done 438 times (11179 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 9, 54 variables fixed on reduced cost
Total time (CPU seconds):       2.64   (Wallclock seconds):       3.43

