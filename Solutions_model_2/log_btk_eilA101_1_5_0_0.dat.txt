Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 575 (-28) elements
Clp1000I sum of infeasibilities 5.3371e-05 - average 2.809e-07, 13 fixed columns
Coin0506I Presolve 162 (-28) rows, 87 (-14) columns and 491 (-84) elements
Clp0029I End of values pass after 87 iterations
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Coin0511I After Postsolve, objective 37.278682, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Coin0511I After Postsolve, objective 37.278682, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.27868215 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 575 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 59 integers unsatisfied sum - 14.1475
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.8908 iterations 87
Cbc0038I Solution found of 12.8908
Cbc0038I Relaxing continuous gives 12.8908
Cbc0038I Rounding solution of -6.80628 is better than previous of 12.8908

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -6.80628 to -8.05359 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.9762
Cbc0038I Pass   2: suminf.    4.08108 (15) obj. -10.9762 iterations 15
Cbc0038I Pass   3: suminf.    3.18559 (11) obj. -10.9762 iterations 14
Cbc0038I Pass   4: suminf.    2.66523 (9) obj. -10.9762 iterations 2
Cbc0038I Pass   5: suminf.    2.13723 (7) obj. -10.9762 iterations 11
Cbc0038I Pass   6: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass   7: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass   8: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass   9: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  10: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  11: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  12: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  13: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  14: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  15: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  16: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  17: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  18: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  19: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  20: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  21: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  22: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  23: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  24: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  25: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  26: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  27: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  28: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  29: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  30: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  31: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -8.05359 - took 0.11 seconds
Cbc0012I Integer solution of -8.053587 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0031I 38 added rows had average density of 60.184211
Cbc0013I At root node, 38 cuts changed objective from -37.278682 to -29.050666 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24929 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2996 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.053587 best solution, best possible -29.050666 (1.72 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 56 columns
Cbc0012I Integer solution of -9.535565 found by RINS after 13238 iterations and 43 nodes (2.07 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 57 columns
Cbc0010I After 140 nodes, 8 on tree, -9.535565 best solution, best possible -23.513623 (2.42 seconds)
Cbc0001I Search completed - best objective -9.535564999999998, took 16614 iterations and 156 nodes (2.45 seconds)
Cbc0032I Strong branching done 1746 times (33588 iterations), fathomed 8 nodes and fixed 43 variables
Cbc0035I Maximum depth 50, 71 variables fixed on reduced cost
Total time (CPU seconds):       2.39   (Wallclock seconds):       2.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-65) rows, 149 (-53) columns and 3147 (-2506) elements
Clp1000I sum of infeasibilities 9.94643e-08 - average 7.15571e-10, 88 fixed columns
Coin0506I Presolve 52 (-87) rows, 61 (-88) columns and 221 (-2926) elements
Clp0006I 0  Obj -4.1823007 Dual inf 131.78822 (61)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.30453096 - largest nonzero change 2.9932119e-05 ( 0.0025888945%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value -2.5834168
Clp0000I Optimal - objective value -2.5834168
Coin0511I After Postsolve, objective -2.5834168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -2.5834168 Dual inf 45.560023 (49)
Clp0014I Perturbing problem by 0.001% of 1.684683 - largest nonzero change 2.8950975e-05 ( 0.0023005115%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 59.581241
Clp0000I Optimal - objective value 59.581241
Clp0000I Optimal - objective value 59.581241
Coin0511I After Postsolve, objective 59.581241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.58124126 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 141 rows, 151 columns (151 integer (151 of which binary)) and 3158 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.485%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 8.44097
Cbc0038I Pass   1: suminf.    3.54272 (40) obj. -48.1524 iterations 12
Cbc0038I Pass   2: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass   3: suminf.    2.08823 (27) obj. -25.9645 iterations 13
Cbc0038I Pass   4: suminf.    1.18706 (17) obj. -13.2178 iterations 10
Cbc0038I Solution found of 2.59517
Cbc0038I Rounding solution of 1.60356 is better than previous of 2.59517

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4
Cbc0038I Pass   5: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass   6: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass   7: suminf.    2.08823 (27) obj. -25.9645 iterations 13
Cbc0038I Pass   8: suminf.    0.71186 (11) obj. -7.69297 iterations 16
Cbc0038I Pass   9: suminf.    0.88712 (9) obj. -4 iterations 19
Cbc0038I Pass  10: suminf.    0.88712 (9) obj. -4 iterations 0
Cbc0038I Pass  11: suminf.    0.95964 (8) obj. -4 iterations 13
Cbc0038I Pass  12: suminf.    0.61966 (5) obj. -4.73573 iterations 2
Cbc0038I Pass  13: suminf.    1.26655 (5) obj. -4 iterations 7
Cbc0038I Pass  14: suminf.    0.80479 (4) obj. -4.43653 iterations 2
Cbc0038I Pass  15: suminf.    1.26655 (5) obj. -4 iterations 5
Cbc0038I Pass  16: suminf.    3.27662 (20) obj. -4 iterations 46
Cbc0038I Pass  17: suminf.    3.27662 (20) obj. -4 iterations 4
Cbc0038I Pass  18: suminf.    1.19363 (7) obj. -4 iterations 27
Cbc0038I Pass  19: suminf.    1.18154 (6) obj. -4.03834 iterations 1
Cbc0038I Pass  20: suminf.    1.49852 (6) obj. -4 iterations 10
Cbc0038I Pass  21: suminf.    1.23926 (6) obj. -4.77778 iterations 1
Cbc0038I Pass  22: suminf.    2.55021 (18) obj. -4 iterations 33
Cbc0038I Pass  23: suminf.    2.55021 (18) obj. -4 iterations 6
Cbc0038I Pass  24: suminf.    1.32999 (7) obj. -4 iterations 25
Cbc0038I Pass  25: suminf.    0.74892 (5) obj. -4.18729 iterations 4
Cbc0038I Pass  26: suminf.    1.02223 (6) obj. -4 iterations 4
Cbc0038I Pass  27: suminf.    1.60699 (13) obj. -4 iterations 25
Cbc0038I Pass  28: suminf.    1.60699 (13) obj. -4 iterations 2
Cbc0038I Pass  29: suminf.    1.70808 (7) obj. -4 iterations 15
Cbc0038I Pass  30: suminf.    0.84939 (7) obj. -4 iterations 1
Cbc0038I Pass  31: suminf.    0.55552 (5) obj. -4.0016 iterations 6
Cbc0038I Pass  32: suminf.    0.60331 (6) obj. -4 iterations 4
Cbc0038I Pass  33: suminf.    2.45984 (16) obj. -4 iterations 30
Cbc0038I Pass  34: suminf.    2.09135 (14) obj. -4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 32 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 2.59517 to 0.078441 (0.09 seconds)
Cbc0038I Round again with cutoff of -14.0862
Cbc0038I Pass  34: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass  35: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass  36: suminf.    1.27039 (18) obj. -15.0511 iterations 22
Cbc0038I Pass  37: suminf.    1.55302 (14) obj. -14.0862 iterations 23
Cbc0038I Pass  38: suminf.    1.25256 (15) obj. -14.0862 iterations 2
Cbc0038I Pass  39: suminf.    1.28527 (13) obj. -14.0862 iterations 23
Cbc0038I Pass  40: suminf.    1.27499 (13) obj. -14.0862 iterations 1
Cbc0038I Pass  41: suminf.    1.27722 (10) obj. -14.0862 iterations 14
Cbc0038I Pass  42: suminf.    0.74760 (9) obj. -14.0862 iterations 6
Cbc0038I Pass  43: suminf.    1.30646 (10) obj. -14.0862 iterations 4
Cbc0038I Pass  44: suminf.    5.28323 (21) obj. -14.0862 iterations 22
Cbc0038I Pass  45: suminf.    2.57200 (19) obj. -14.0862 iterations 10
Cbc0038I Pass  46: suminf.    2.02885 (14) obj. -14.0862 iterations 2
Cbc0038I Pass  47: suminf.    1.54731 (13) obj. -14.4867 iterations 1
Cbc0038I Pass  48: suminf.    1.55406 (12) obj. -14.0862 iterations 13
Cbc0038I Pass  49: suminf.    1.46044 (16) obj. -14.0862 iterations 3
Cbc0038I Pass  50: suminf.    0.99578 (11) obj. -14.0862 iterations 16
Cbc0038I Pass  51: suminf.    0.87684 (10) obj. -14.6741 iterations 6
Cbc0038I Pass  52: suminf.    1.22990 (8) obj. -14.0862 iterations 13
Cbc0038I Pass  53: suminf.    1.22990 (8) obj. -14.0862 iterations 2
Cbc0038I Pass  54: suminf.    1.24366 (8) obj. -14.0862 iterations 6
Cbc0038I Pass  55: suminf.    1.24366 (8) obj. -14.0862 iterations 3
Cbc0038I Pass  56: suminf.    1.22990 (8) obj. -14.0862 iterations 7
Cbc0038I Pass  57: suminf.    1.69215 (12) obj. -14.0862 iterations 30
Cbc0038I Pass  58: suminf.    1.65938 (13) obj. -14.0862 iterations 9
Cbc0038I Pass  59: suminf.    1.22990 (8) obj. -14.0862 iterations 23
Cbc0038I Pass  60: suminf.    1.22990 (8) obj. -14.0862 iterations 2
Cbc0038I Pass  61: suminf.    1.24366 (8) obj. -14.0862 iterations 6
Cbc0038I Pass  62: suminf.    1.24366 (8) obj. -14.0862 iterations 3
Cbc0038I Pass  63: suminf.    1.22990 (8) obj. -14.0862 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of 0.078441 - took 0.10 seconds
Cbc0012I Integer solution of 0.078441 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 141 rows 151 columns, reduced to 17 rows 20 columns
Cbc0031I 69 added rows had average density of 44.043478
Cbc0013I At root node, 69 cuts changed objective from -54.43122 to -17.838217 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23233 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2421 row cuts average 143.7 elements, 0 column cuts (0 active)  in 0.261 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1708 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1700 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 409 row cuts average 78.1 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.233 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 0.078441 best solution, best possible -17.838217 (2.61 seconds)
Cbc0012I Integer solution of -4.574955 found by rounding after 9614 iterations and 4 nodes (3.30 seconds)
Cbc0016I Integer solution of -9.050155 found by strong branching after 9645 iterations and 4 nodes (3.31 seconds)
Cbc0016I Integer solution of -9.535565 found by strong branching after 9647 iterations and 4 nodes (3.31 seconds)
Cbc0010I After 5 nodes, 4 on tree, -9.535565 best solution, best possible -17.838217 (3.40 seconds)
Cbc0001I Search completed - best objective -9.535564999999998, took 11214 iterations and 20 nodes (3.89 seconds)
Cbc0032I Strong branching done 464 times (14097 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 92 variables fixed on reduced cost
Total time (CPU seconds):       3.61   (Wallclock seconds):       3.92

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 575 (-28) elements
Clp1000I sum of infeasibilities 5.3371e-05 - average 2.809e-07, 13 fixed columns
Coin0506I Presolve 162 (-28) rows, 87 (-14) columns and 491 (-84) elements
Clp0029I End of values pass after 87 iterations
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Coin0511I After Postsolve, objective 37.278682, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Coin0511I After Postsolve, objective 37.278682, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.27868215 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 575 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 59 integers unsatisfied sum - 14.1475
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.8908 iterations 87
Cbc0038I Solution found of 12.8908
Cbc0038I Relaxing continuous gives 12.8908
Cbc0038I Rounding solution of -6.80628 is better than previous of 12.8908

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -6.80628 to -8.05359 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.9762
Cbc0038I Pass   2: suminf.    4.08108 (15) obj. -10.9762 iterations 15
Cbc0038I Pass   3: suminf.    3.18559 (11) obj. -10.9762 iterations 14
Cbc0038I Pass   4: suminf.    2.66523 (9) obj. -10.9762 iterations 2
Cbc0038I Pass   5: suminf.    2.13723 (7) obj. -10.9762 iterations 11
Cbc0038I Pass   6: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass   7: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass   8: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass   9: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  10: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  11: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  12: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  13: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  14: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  15: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  16: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  17: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  18: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  19: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  20: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  21: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  22: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  23: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  24: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  25: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  26: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  27: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  28: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  29: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  30: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  31: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -8.05359 - took 0.11 seconds
Cbc0012I Integer solution of -8.053587 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0031I 38 added rows had average density of 60.184211
Cbc0013I At root node, 38 cuts changed objective from -37.278682 to -29.050666 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24929 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2996 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.053587 best solution, best possible -29.050666 (1.63 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 56 columns
Cbc0012I Integer solution of -9.535565 found by RINS after 13238 iterations and 43 nodes (1.98 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 57 columns
Cbc0001I Search completed - best objective -9.535564999999998, took 16614 iterations and 156 nodes (2.33 seconds)
Cbc0032I Strong branching done 1746 times (33588 iterations), fathomed 8 nodes and fixed 43 variables
Cbc0035I Maximum depth 50, 71 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       2.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-66) rows, 149 (-54) columns and 3147 (-2507) elements
Clp1000I sum of infeasibilities 9.94643e-08 - average 7.15571e-10, 88 fixed columns
Coin0506I Presolve 52 (-87) rows, 61 (-88) columns and 221 (-2926) elements
Clp0006I 0  Obj -4.1823007 Dual inf 131.78822 (61)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.30453096 - largest nonzero change 2.9932119e-05 ( 0.0025888945%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value -2.5834168
Clp0000I Optimal - objective value -2.5834168
Coin0511I After Postsolve, objective -2.5834168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -2.5834168 Dual inf 45.560023 (49)
Clp0014I Perturbing problem by 0.001% of 1.684683 - largest nonzero change 2.8950975e-05 ( 0.0023005115%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 59.581241
Clp0000I Optimal - objective value 59.581241
Clp0000I Optimal - objective value 59.581241
Coin0511I After Postsolve, objective 59.581241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.58124126 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 141 rows, 151 columns (151 integer (151 of which binary)) and 3158 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.485%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 8.44097
Cbc0038I Pass   1: suminf.    3.54272 (40) obj. -48.1524 iterations 12
Cbc0038I Pass   2: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass   3: suminf.    2.08823 (27) obj. -25.9645 iterations 13
Cbc0038I Pass   4: suminf.    1.18706 (17) obj. -13.2178 iterations 10
Cbc0038I Solution found of 2.59517
Cbc0038I Rounding solution of 1.60356 is better than previous of 2.59517

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4
Cbc0038I Pass   5: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass   6: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass   7: suminf.    2.08823 (27) obj. -25.9645 iterations 13
Cbc0038I Pass   8: suminf.    0.71186 (11) obj. -7.69297 iterations 16
Cbc0038I Pass   9: suminf.    0.88712 (9) obj. -4 iterations 19
Cbc0038I Pass  10: suminf.    0.88712 (9) obj. -4 iterations 0
Cbc0038I Pass  11: suminf.    0.95964 (8) obj. -4 iterations 13
Cbc0038I Pass  12: suminf.    0.61966 (5) obj. -4.73573 iterations 2
Cbc0038I Pass  13: suminf.    1.26655 (5) obj. -4 iterations 7
Cbc0038I Pass  14: suminf.    0.80479 (4) obj. -4.43653 iterations 2
Cbc0038I Pass  15: suminf.    1.26655 (5) obj. -4 iterations 5
Cbc0038I Pass  16: suminf.    3.27662 (20) obj. -4 iterations 46
Cbc0038I Pass  17: suminf.    3.27662 (20) obj. -4 iterations 4
Cbc0038I Pass  18: suminf.    1.19363 (7) obj. -4 iterations 27
Cbc0038I Pass  19: suminf.    1.18154 (6) obj. -4.03834 iterations 1
Cbc0038I Pass  20: suminf.    1.49852 (6) obj. -4 iterations 10
Cbc0038I Pass  21: suminf.    1.23926 (6) obj. -4.77778 iterations 1
Cbc0038I Pass  22: suminf.    2.55021 (18) obj. -4 iterations 33
Cbc0038I Pass  23: suminf.    2.55021 (18) obj. -4 iterations 6
Cbc0038I Pass  24: suminf.    1.32999 (7) obj. -4 iterations 25
Cbc0038I Pass  25: suminf.    0.74892 (5) obj. -4.18729 iterations 4
Cbc0038I Pass  26: suminf.    1.02223 (6) obj. -4 iterations 4
Cbc0038I Pass  27: suminf.    1.60699 (13) obj. -4 iterations 25
Cbc0038I Pass  28: suminf.    1.60699 (13) obj. -4 iterations 2
Cbc0038I Pass  29: suminf.    1.70808 (7) obj. -4 iterations 15
Cbc0038I Pass  30: suminf.    0.84939 (7) obj. -4 iterations 1
Cbc0038I Pass  31: suminf.    0.55552 (5) obj. -4.0016 iterations 6
Cbc0038I Pass  32: suminf.    0.60331 (6) obj. -4 iterations 4
Cbc0038I Pass  33: suminf.    2.45984 (16) obj. -4 iterations 30
Cbc0038I Pass  34: suminf.    2.09135 (14) obj. -4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 32 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 2.59517 to 0.078441 (0.09 seconds)
Cbc0038I Round again with cutoff of -14.0862
Cbc0038I Pass  34: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass  35: suminf.    3.54272 (40) obj. -48.1524 iterations 0
Cbc0038I Pass  36: suminf.    1.27039 (18) obj. -15.0511 iterations 22
Cbc0038I Pass  37: suminf.    1.55302 (14) obj. -14.0862 iterations 23
Cbc0038I Pass  38: suminf.    1.25256 (15) obj. -14.0862 iterations 2
Cbc0038I Pass  39: suminf.    1.28527 (13) obj. -14.0862 iterations 23
Cbc0038I Pass  40: suminf.    1.27499 (13) obj. -14.0862 iterations 1
Cbc0038I Pass  41: suminf.    1.27722 (10) obj. -14.0862 iterations 14
Cbc0038I Pass  42: suminf.    0.74760 (9) obj. -14.0862 iterations 6
Cbc0038I Pass  43: suminf.    1.30646 (10) obj. -14.0862 iterations 4
Cbc0038I Pass  44: suminf.    5.28323 (21) obj. -14.0862 iterations 22
Cbc0038I Pass  45: suminf.    2.57200 (19) obj. -14.0862 iterations 10
Cbc0038I Pass  46: suminf.    2.02885 (14) obj. -14.0862 iterations 2
Cbc0038I Pass  47: suminf.    1.54731 (13) obj. -14.4867 iterations 1
Cbc0038I Pass  48: suminf.    1.55406 (12) obj. -14.0862 iterations 13
Cbc0038I Pass  49: suminf.    1.46044 (16) obj. -14.0862 iterations 3
Cbc0038I Pass  50: suminf.    0.99578 (11) obj. -14.0862 iterations 16
Cbc0038I Pass  51: suminf.    0.87684 (10) obj. -14.6741 iterations 6
Cbc0038I Pass  52: suminf.    1.22990 (8) obj. -14.0862 iterations 13
Cbc0038I Pass  53: suminf.    1.22990 (8) obj. -14.0862 iterations 2
Cbc0038I Pass  54: suminf.    1.24366 (8) obj. -14.0862 iterations 6
Cbc0038I Pass  55: suminf.    1.24366 (8) obj. -14.0862 iterations 3
Cbc0038I Pass  56: suminf.    1.22990 (8) obj. -14.0862 iterations 7
Cbc0038I Pass  57: suminf.    1.69215 (12) obj. -14.0862 iterations 30
Cbc0038I Pass  58: suminf.    1.65938 (13) obj. -14.0862 iterations 9
Cbc0038I Pass  59: suminf.    1.22990 (8) obj. -14.0862 iterations 23
Cbc0038I Pass  60: suminf.    1.22990 (8) obj. -14.0862 iterations 2
Cbc0038I Pass  61: suminf.    1.24366 (8) obj. -14.0862 iterations 6
Cbc0038I Pass  62: suminf.    1.24366 (8) obj. -14.0862 iterations 3
Cbc0038I Pass  63: suminf.    1.22990 (8) obj. -14.0862 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of 0.078441 - took 0.09 seconds
Cbc0012I Integer solution of 0.078441 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 141 rows 151 columns, reduced to 17 rows 20 columns
Cbc0031I 69 added rows had average density of 44.043478
Cbc0013I At root node, 69 cuts changed objective from -54.43122 to -17.838217 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23233 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2421 row cuts average 143.7 elements, 0 column cuts (0 active)  in 0.280 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1708 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1700 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 409 row cuts average 78.1 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.246 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 0.078441 best solution, best possible -17.838217 (2.77 seconds)
Cbc0010I After 3 nodes, 4 on tree, 0.078441 best solution, best possible -17.838217 (3.49 seconds)
Cbc0012I Integer solution of -4.574955 found by rounding after 9614 iterations and 4 nodes (3.49 seconds)
Cbc0016I Integer solution of -9.050155 found by strong branching after 9645 iterations and 4 nodes (3.50 seconds)
Cbc0016I Integer solution of -9.535565 found by strong branching after 9647 iterations and 4 nodes (3.50 seconds)
Cbc0001I Search completed - best objective -9.535564999999998, took 11214 iterations and 20 nodes (4.09 seconds)
Cbc0032I Strong branching done 464 times (14097 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 92 variables fixed on reduced cost
Total time (CPU seconds):       3.76   (Wallclock seconds):       4.12

