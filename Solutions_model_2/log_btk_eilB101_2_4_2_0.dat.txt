Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 163 (-42) rows, 92 (-11) columns and 503 (-100) elements
Clp1000I sum of infeasibilities 0.000187167 - average 1.14827e-06, 19 fixed columns
Coin0506I Presolve 125 (-38) rows, 72 (-20) columns and 387 (-116) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 0.23782481 - largest nonzero change 0 ( 0%) - largest zero change 2.7980852e-05
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Coin0511I After Postsolve, objective 55.160699, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Coin0511I After Postsolve, objective 55.160699, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.16069852 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 162 rows, 92 columns (91 integer (91 of which binary)) and 515 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.081%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.02383
Cbc0038I Solution found of -1.51718
Cbc0038I Relaxing continuous gives -4.17314
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 61 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -4.17314 to -28.2823 (0.07 seconds)
Cbc0038I Round again with cutoff of -30.9703
Cbc0038I Pass   1: suminf.    2.43800 (16) obj. -30.9703 iterations 52
Cbc0038I Pass   2: suminf.    2.73341 (7) obj. -30.9703 iterations 18
Cbc0038I Pass   3: suminf.    2.22924 (6) obj. -30.9703 iterations 3
Cbc0038I Pass   4: suminf.    1.69463 (4) obj. -30.9703 iterations 7
Cbc0038I Pass   5: suminf.    1.22436 (5) obj. -30.9703 iterations 3
Cbc0038I Pass   6: suminf.    1.76714 (5) obj. -30.9703 iterations 5
Cbc0038I Pass   7: suminf.    1.68243 (5) obj. -30.9703 iterations 1
Cbc0038I Pass   8: suminf.    1.24653 (6) obj. -30.9703 iterations 6
Cbc0038I Pass   9: suminf.    1.24191 (4) obj. -30.9703 iterations 2
Cbc0038I Pass  10: suminf.    0.80883 (2) obj. -30.9703 iterations 4
Cbc0038I Pass  11: suminf.    0.67214 (2) obj. -30.9703 iterations 2
Cbc0038I Pass  12: suminf.    0.67214 (2) obj. -30.9703 iterations 0
Cbc0038I Pass  13: suminf.    0.80883 (2) obj. -30.9703 iterations 2
Cbc0038I Pass  14: suminf.    2.71667 (8) obj. -30.9703 iterations 18
Cbc0038I Pass  15: suminf.    1.31815 (5) obj. -30.9703 iterations 12
Cbc0038I Pass  16: suminf.    1.26953 (6) obj. -30.9703 iterations 11
Cbc0038I Pass  17: suminf.    1.07238 (6) obj. -30.9703 iterations 2
Cbc0038I Pass  18: suminf.    1.07238 (6) obj. -30.9703 iterations 1
Cbc0038I Pass  19: suminf.    1.42617 (5) obj. -30.9703 iterations 11
Cbc0038I Pass  20: suminf.    1.04996 (3) obj. -30.9703 iterations 4
Cbc0038I Pass  21: suminf.    0.53873 (5) obj. -30.9703 iterations 7
Cbc0038I Pass  22: suminf.    1.07699 (4) obj. -30.9703 iterations 5
Cbc0038I Pass  23: suminf.    0.60066 (4) obj. -30.9703 iterations 2
Cbc0038I Pass  24: suminf.    1.35316 (4) obj. -30.9703 iterations 9
Cbc0038I Pass  25: suminf.    1.19787 (4) obj. -30.9703 iterations 1
Cbc0038I Pass  26: suminf.    1.03794 (4) obj. -30.9703 iterations 1
Cbc0038I Pass  27: suminf.    0.79401 (3) obj. -30.9703 iterations 4
Cbc0038I Pass  28: suminf.    0.74899 (3) obj. -30.9703 iterations 1
Cbc0038I Pass  29: suminf.    3.29458 (11) obj. -30.9703 iterations 22
Cbc0038I Pass  30: suminf.    2.68438 (12) obj. -30.9703 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 88 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -28.2823 to -30.5367 (0.15 seconds)
Cbc0038I Round again with cutoff of -35.8084
Cbc0038I Pass  30: suminf.    2.96841 (18) obj. -35.8084 iterations 2
Cbc0038I Pass  31: suminf.    2.22759 (7) obj. -35.8084 iterations 23
Cbc0038I Pass  32: suminf.    1.03293 (4) obj. -35.8084 iterations 10
Cbc0038I Pass  33: suminf.    0.88298 (2) obj. -35.8084 iterations 6
Cbc0038I Pass  34: suminf.    0.49222 (2) obj. -35.8084 iterations 1
Cbc0038I Pass  35: suminf.    0.89770 (2) obj. -35.8084 iterations 4
Cbc0038I Pass  36: suminf.    0.89770 (2) obj. -35.8084 iterations 0
Cbc0038I Pass  37: suminf.    0.88298 (2) obj. -35.8084 iterations 3
Cbc0038I Pass  38: suminf.    1.61186 (7) obj. -35.8084 iterations 18
Cbc0038I Pass  39: suminf.    0.95736 (3) obj. -35.8084 iterations 13
Cbc0038I Pass  40: suminf.    1.24095 (5) obj. -35.8084 iterations 5
Cbc0038I Pass  41: suminf.    1.22563 (6) obj. -35.8084 iterations 1
Cbc0038I Pass  42: suminf.    1.72044 (5) obj. -35.8084 iterations 6
Cbc0038I Pass  43: suminf.    0.89209 (4) obj. -35.8084 iterations 6
Cbc0038I Pass  44: suminf.    1.42022 (5) obj. -35.8084 iterations 5
Cbc0038I Pass  45: suminf.    0.88879 (4) obj. -35.8084 iterations 5
Cbc0038I Pass  46: suminf.    2.43417 (11) obj. -35.8084 iterations 25
Cbc0038I Pass  47: suminf.    2.38809 (7) obj. -35.8084 iterations 7
Cbc0038I Pass  48: suminf.    2.25612 (6) obj. -35.8084 iterations 15
Cbc0038I Pass  49: suminf.    1.61904 (6) obj. -35.8084 iterations 6
Cbc0038I Pass  50: suminf.    1.61904 (6) obj. -35.8084 iterations 0
Cbc0038I Pass  51: suminf.    2.45387 (7) obj. -35.8084 iterations 5
Cbc0038I Pass  52: suminf.    2.12344 (6) obj. -35.8084 iterations 5
Cbc0038I Pass  53: suminf.    1.33558 (5) obj. -35.8084 iterations 8
Cbc0038I Pass  54: suminf.    1.32362 (5) obj. -35.8084 iterations 2
Cbc0038I Pass  55: suminf.    2.03397 (5) obj. -35.8084 iterations 7
Cbc0038I Pass  56: suminf.    1.85361 (4) obj. -35.8084 iterations 3
Cbc0038I Pass  57: suminf.    1.83330 (5) obj. -35.8084 iterations 1
Cbc0038I Pass  58: suminf.    1.57966 (6) obj. -35.8084 iterations 8
Cbc0038I Pass  59: suminf.    2.09469 (5) obj. -35.8084 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 82 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -30.5367 - took 0.19 seconds
Cbc0012I Integer solution of -30.53675 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 162 rows 92 columns, reduced to 62 rows 39 columns
Cbc0031I 22 added rows had average density of 48.227273
Cbc0013I At root node, 22 cuts changed objective from -55.160699 to -48.380957 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8949 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1599 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.53675 best solution, best possible -48.380957 (1.03 seconds)
Cbc0038I Full problem 162 rows 92 columns, reduced to 3 rows 3 columns
Cbc0001I Search completed - best objective -30.53675, took 8473 iterations and 98 nodes (1.33 seconds)
Cbc0032I Strong branching done 842 times (14381 iterations), fathomed 8 nodes and fixed 43 variables
Cbc0035I Maximum depth 21, 316 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-85) rows, 138 (-64) columns and 2388 (-3265) elements
Clp1000I sum of infeasibilities 3.70744e-06 - average 3.1155e-08, 79 fixed columns
Coin0506I Presolve 46 (-73) rows, 56 (-82) columns and 491 (-1897) elements
Clp0006I 0  Obj 174.20356 Primal inf 1.4137789e-05 (1) Dual inf 5.8606146e+09 (56)
Clp0029I End of values pass after 56 iterations
Clp0000I Optimal - objective value 183.38042
Clp0000I Optimal - objective value 183.38042
Coin0511I After Postsolve, objective 183.38042, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 183.38042 Dual inf 150.71998 (6)
Clp0014I Perturbing problem by 0.001% of 1.5087905 - largest nonzero change 2.6398238e-05 ( 0.0016324266%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 186.86579
Clp0000I Optimal - objective value 186.86579
Clp0000I Optimal - objective value 186.86579
Coin0511I After Postsolve, objective 186.86579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 186.8657862 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 116 rows, 138 columns (138 integer (138 of which binary)) and 2406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.868%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.67934
Cbc0038I Pass   1: suminf.    0.59981 (20) obj. -1.40074 iterations 24
Cbc0038I Pass   2: suminf.    0.59981 (20) obj. -1.40074 iterations 1
Cbc0038I Solution found of 18.9518
Cbc0038I Rounding solution of -19.345 is better than previous of 18.9518

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 138 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -19.345 to -98.0482 (0.06 seconds)
Cbc0038I Round again with cutoff of -102.389
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.37564 (38) obj. -102.389 iterations 10
Cbc0038I Pass   4: suminf.    4.74423 (39) obj. -102.389 iterations 1
Cbc0038I Pass   5: suminf.    4.74423 (39) obj. -102.389 iterations 1
Cbc0038I Pass   6: suminf.    2.99638 (24) obj. -102.389 iterations 20
Cbc0038I Pass   7: suminf.    0.54334 (5) obj. -102.389 iterations 34
Cbc0038I Pass   8: suminf.    0.54334 (5) obj. -102.389 iterations 0
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -105.599 iterations 10
Cbc0038I Pass  10: suminf.    0.28744 (1) obj. -102.389 iterations 5
Cbc0038I Pass  11: suminf.    2.93323 (14) obj. -102.389 iterations 34
Cbc0038I Pass  12: suminf.    1.99708 (12) obj. -102.389 iterations 13
Cbc0038I Pass  13: suminf.    0.16599 (1) obj. -102.389 iterations 16
Cbc0038I Solution found of -104.896
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 138 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -112.208
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  14: suminf.    6.04268 (38) obj. -112.208 iterations 0
Cbc0038I Pass  15: suminf.    1.60626 (11) obj. -112.208 iterations 32
Cbc0038I Pass  16: suminf.    1.60626 (11) obj. -112.208 iterations 0
Cbc0038I Pass  17: suminf.    1.52081 (4) obj. -112.208 iterations 17
Cbc0038I Pass  18: suminf.    1.42570 (4) obj. -112.208 iterations 2
Cbc0038I Pass  19: suminf.    1.23560 (4) obj. -112.208 iterations 14
Cbc0038I Pass  20: suminf.    1.21645 (5) obj. -112.208 iterations 2
Cbc0038I Pass  21: suminf.    1.52081 (4) obj. -112.208 iterations 12
Cbc0038I Pass  22: suminf.    2.29590 (11) obj. -112.208 iterations 30
Cbc0038I Pass  23: suminf.    2.24855 (11) obj. -112.208 iterations 10
Cbc0038I Pass  24: suminf.    1.94321 (6) obj. -112.208 iterations 33
Cbc0038I Pass  25: suminf.    1.48853 (5) obj. -112.208 iterations 20
Cbc0038I Pass  26: suminf.    1.42253 (5) obj. -112.208 iterations 10
Cbc0038I Pass  27: suminf.    1.34034 (5) obj. -112.208 iterations 6
Cbc0038I Pass  28: suminf.    1.81102 (5) obj. -112.208 iterations 13
Cbc0038I Pass  29: suminf.    1.76959 (5) obj. -112.208 iterations 11
Cbc0038I Pass  30: suminf.    1.77420 (4) obj. -112.208 iterations 6
Cbc0038I Pass  31: suminf.    1.69941 (5) obj. -112.208 iterations 4
Cbc0038I Pass  32: suminf.    3.24911 (12) obj. -112.208 iterations 30
Cbc0038I Pass  33: suminf.    2.80475 (10) obj. -112.208 iterations 11
Cbc0038I Pass  34: suminf.    1.77420 (4) obj. -112.208 iterations 21
Cbc0038I Pass  35: suminf.    1.81058 (9) obj. -112.208 iterations 16
Cbc0038I Pass  36: suminf.    1.49779 (8) obj. -112.208 iterations 9
Cbc0038I Pass  37: suminf.    1.52081 (4) obj. -112.208 iterations 14
Cbc0038I Pass  38: suminf.    1.42570 (4) obj. -112.208 iterations 2
Cbc0038I Pass  39: suminf.    1.23560 (4) obj. -112.208 iterations 13
Cbc0038I Pass  40: suminf.    1.21645 (5) obj. -112.208 iterations 2
Cbc0038I Pass  41: suminf.    1.52081 (4) obj. -112.208 iterations 12
Cbc0038I Pass  42: suminf.    1.97256 (9) obj. -112.208 iterations 31
Cbc0038I Pass  43: suminf.    1.95802 (9) obj. -112.208 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 138 columns, reduced to 3 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -104.896 - took 0.04 seconds
Cbc0012I Integer solution of -104.89596 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 116 rows 138 columns, reduced to 2 rows 3 columns
Cbc0031I 34 added rows had average density of 8.5882353
Cbc0013I At root node, 34 cuts changed objective from -131.15829 to -106.28675 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 224 row cuts average 7.6 elements, 45 column cuts (45 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 68.5 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -104.89596 best solution, best possible -106.23864 (0.38 seconds)
Cbc0001I Search completed - best objective -104.89596, took 358 iterations and 6 nodes (0.66 seconds)
Cbc0032I Strong branching done 46 times (206 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 1, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 163 (-42) rows, 92 (-11) columns and 503 (-100) elements
Clp1000I sum of infeasibilities 0.000187167 - average 1.14827e-06, 19 fixed columns
Coin0506I Presolve 125 (-38) rows, 72 (-20) columns and 387 (-116) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 0.23782481 - largest nonzero change 0 ( 0%) - largest zero change 2.7980852e-05
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Coin0511I After Postsolve, objective 55.160699, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Coin0511I After Postsolve, objective 55.160699, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.16069852 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 162 rows, 92 columns (91 integer (91 of which binary)) and 515 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.081%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.02383
Cbc0038I Solution found of -1.51718
Cbc0038I Relaxing continuous gives -4.17314
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 61 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -4.17314 to -28.2823 (0.07 seconds)
Cbc0038I Round again with cutoff of -30.9703
Cbc0038I Pass   1: suminf.    2.43800 (16) obj. -30.9703 iterations 52
Cbc0038I Pass   2: suminf.    2.73341 (7) obj. -30.9703 iterations 18
Cbc0038I Pass   3: suminf.    2.22924 (6) obj. -30.9703 iterations 3
Cbc0038I Pass   4: suminf.    1.69463 (4) obj. -30.9703 iterations 7
Cbc0038I Pass   5: suminf.    1.22436 (5) obj. -30.9703 iterations 3
Cbc0038I Pass   6: suminf.    1.76714 (5) obj. -30.9703 iterations 5
Cbc0038I Pass   7: suminf.    1.68243 (5) obj. -30.9703 iterations 1
Cbc0038I Pass   8: suminf.    1.24653 (6) obj. -30.9703 iterations 6
Cbc0038I Pass   9: suminf.    1.24191 (4) obj. -30.9703 iterations 2
Cbc0038I Pass  10: suminf.    0.80883 (2) obj. -30.9703 iterations 4
Cbc0038I Pass  11: suminf.    0.67214 (2) obj. -30.9703 iterations 2
Cbc0038I Pass  12: suminf.    0.67214 (2) obj. -30.9703 iterations 0
Cbc0038I Pass  13: suminf.    0.80883 (2) obj. -30.9703 iterations 2
Cbc0038I Pass  14: suminf.    2.71667 (8) obj. -30.9703 iterations 18
Cbc0038I Pass  15: suminf.    1.31815 (5) obj. -30.9703 iterations 12
Cbc0038I Pass  16: suminf.    1.26953 (6) obj. -30.9703 iterations 11
Cbc0038I Pass  17: suminf.    1.07238 (6) obj. -30.9703 iterations 2
Cbc0038I Pass  18: suminf.    1.07238 (6) obj. -30.9703 iterations 1
Cbc0038I Pass  19: suminf.    1.42617 (5) obj. -30.9703 iterations 11
Cbc0038I Pass  20: suminf.    1.04996 (3) obj. -30.9703 iterations 4
Cbc0038I Pass  21: suminf.    0.53873 (5) obj. -30.9703 iterations 7
Cbc0038I Pass  22: suminf.    1.07699 (4) obj. -30.9703 iterations 5
Cbc0038I Pass  23: suminf.    0.60066 (4) obj. -30.9703 iterations 2
Cbc0038I Pass  24: suminf.    1.35316 (4) obj. -30.9703 iterations 9
Cbc0038I Pass  25: suminf.    1.19787 (4) obj. -30.9703 iterations 1
Cbc0038I Pass  26: suminf.    1.03794 (4) obj. -30.9703 iterations 1
Cbc0038I Pass  27: suminf.    0.79401 (3) obj. -30.9703 iterations 4
Cbc0038I Pass  28: suminf.    0.74899 (3) obj. -30.9703 iterations 1
Cbc0038I Pass  29: suminf.    3.29458 (11) obj. -30.9703 iterations 22
Cbc0038I Pass  30: suminf.    2.68438 (12) obj. -30.9703 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 88 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -28.2823 to -30.5367 (0.13 seconds)
Cbc0038I Round again with cutoff of -35.8084
Cbc0038I Pass  30: suminf.    2.96841 (18) obj. -35.8084 iterations 2
Cbc0038I Pass  31: suminf.    2.22759 (7) obj. -35.8084 iterations 23
Cbc0038I Pass  32: suminf.    1.03293 (4) obj. -35.8084 iterations 10
Cbc0038I Pass  33: suminf.    0.88298 (2) obj. -35.8084 iterations 6
Cbc0038I Pass  34: suminf.    0.49222 (2) obj. -35.8084 iterations 1
Cbc0038I Pass  35: suminf.    0.89770 (2) obj. -35.8084 iterations 4
Cbc0038I Pass  36: suminf.    0.89770 (2) obj. -35.8084 iterations 0
Cbc0038I Pass  37: suminf.    0.88298 (2) obj. -35.8084 iterations 3
Cbc0038I Pass  38: suminf.    1.61186 (7) obj. -35.8084 iterations 18
Cbc0038I Pass  39: suminf.    0.95736 (3) obj. -35.8084 iterations 13
Cbc0038I Pass  40: suminf.    1.24095 (5) obj. -35.8084 iterations 5
Cbc0038I Pass  41: suminf.    1.22563 (6) obj. -35.8084 iterations 1
Cbc0038I Pass  42: suminf.    1.72044 (5) obj. -35.8084 iterations 6
Cbc0038I Pass  43: suminf.    0.89209 (4) obj. -35.8084 iterations 6
Cbc0038I Pass  44: suminf.    1.42022 (5) obj. -35.8084 iterations 5
Cbc0038I Pass  45: suminf.    0.88879 (4) obj. -35.8084 iterations 5
Cbc0038I Pass  46: suminf.    2.43417 (11) obj. -35.8084 iterations 25
Cbc0038I Pass  47: suminf.    2.38809 (7) obj. -35.8084 iterations 7
Cbc0038I Pass  48: suminf.    2.25612 (6) obj. -35.8084 iterations 15
Cbc0038I Pass  49: suminf.    1.61904 (6) obj. -35.8084 iterations 6
Cbc0038I Pass  50: suminf.    1.61904 (6) obj. -35.8084 iterations 0
Cbc0038I Pass  51: suminf.    2.45387 (7) obj. -35.8084 iterations 5
Cbc0038I Pass  52: suminf.    2.12344 (6) obj. -35.8084 iterations 5
Cbc0038I Pass  53: suminf.    1.33558 (5) obj. -35.8084 iterations 8
Cbc0038I Pass  54: suminf.    1.32362 (5) obj. -35.8084 iterations 2
Cbc0038I Pass  55: suminf.    2.03397 (5) obj. -35.8084 iterations 7
Cbc0038I Pass  56: suminf.    1.85361 (4) obj. -35.8084 iterations 3
Cbc0038I Pass  57: suminf.    1.83330 (5) obj. -35.8084 iterations 1
Cbc0038I Pass  58: suminf.    1.57966 (6) obj. -35.8084 iterations 8
Cbc0038I Pass  59: suminf.    2.09469 (5) obj. -35.8084 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 82 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -30.5367 - took 0.17 seconds
Cbc0012I Integer solution of -30.53675 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 162 rows 92 columns, reduced to 62 rows 39 columns
Cbc0031I 22 added rows had average density of 48.227273
Cbc0013I At root node, 22 cuts changed objective from -55.160699 to -48.380957 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8949 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1599 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.53675 best solution, best possible -48.380957 (0.82 seconds)
Cbc0038I Full problem 162 rows 92 columns, reduced to 3 rows 3 columns
Cbc0001I Search completed - best objective -30.53675, took 8473 iterations and 98 nodes (1.08 seconds)
Cbc0032I Strong branching done 842 times (14381 iterations), fathomed 8 nodes and fixed 43 variables
Cbc0035I Maximum depth 21, 316 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-91) rows, 133 (-70) columns and 2228 (-3426) elements
Clp1000I sum of infeasibilities 1.45833e-07 - average 1.27924e-09, 27 fixed columns
Coin0506I Presolve 90 (-24) rows, 106 (-27) columns and 1616 (-612) elements
Clp0006I 0  Obj 65.638625 Dual inf 11.490509 (104)
Clp0014I Perturbing problem by 0.001% of 1.476245 - largest nonzero change 2.1656163e-05 ( 0.001262127%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 72.343296
Clp0000I Optimal - objective value 72.343296
Coin0511I After Postsolve, objective 72.343296, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 72.343296
Clp0000I Optimal - objective value 72.343296
Clp0000I Optimal - objective value 72.343296
Clp0000I Optimal - objective value 72.343296
Coin0511I After Postsolve, objective 72.343296, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.3432957 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 133 columns (133 integer (133 of which binary)) and 2240 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.877%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 2.68573
Cbc0038I Pass   1: suminf.    1.98552 (29) obj. -58.7256 iterations 14
Cbc0038I Pass   2: suminf.    1.17831 (19) obj. -49.5328 iterations 10
Cbc0038I Pass   3: suminf.    0.30585 (6) obj. -28.0784 iterations 13
Cbc0038I Solution found of -22.3842
Cbc0038I Rounding solution of -26.044 is better than previous of -22.3842

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -30.0705
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.98552 (29) obj. -58.7256 iterations 0
Cbc0038I Pass   5: suminf.    0.51311 (3) obj. -30.0705 iterations 32
Cbc0038I Pass   6: suminf.    0.57989 (2) obj. -30.1531 iterations 2
Cbc0038I Pass   7: suminf.    0.57128 (2) obj. -30.0705 iterations 1
Cbc0038I Pass   8: suminf.    1.34326 (9) obj. -30.0705 iterations 27
Cbc0038I Pass   9: suminf.    0.90317 (8) obj. -30.0705 iterations 11
Cbc0038I Pass  10: suminf.    0.83169 (5) obj. -30.0705 iterations 6
Cbc0038I Pass  11: suminf.    0.77751 (5) obj. -30.0705 iterations 4
Cbc0038I Pass  12: suminf.    0.65251 (4) obj. -30.0705 iterations 9
Cbc0038I Pass  13: suminf.    0.61887 (4) obj. -30.0705 iterations 3
Cbc0038I Pass  14: suminf.    0.89157 (4) obj. -30.0705 iterations 3
Cbc0038I Pass  15: suminf.    0.89157 (4) obj. -30.0705 iterations 0
Cbc0038I Pass  16: suminf.    0.61887 (4) obj. -30.0705 iterations 2
Cbc0038I Pass  17: suminf.    0.87247 (8) obj. -30.8496 iterations 15
Cbc0038I Pass  18: suminf.    0.55948 (7) obj. -30.0705 iterations 7
Cbc0038I Pass  19: suminf.    1.06176 (4) obj. -30.0705 iterations 10
Cbc0038I Pass  20: suminf.    1.06176 (4) obj. -30.0705 iterations 0
Cbc0038I Pass  21: suminf.    0.98787 (4) obj. -30.0705 iterations 4
Cbc0038I Pass  22: suminf.    0.67366 (3) obj. -30.4889 iterations 2
Cbc0038I Pass  23: suminf.    1.18455 (4) obj. -30.0705 iterations 3
Cbc0038I Pass  24: suminf.    0.68511 (3) obj. -30.0705 iterations 2
Cbc0038I Pass  25: suminf.    1.06176 (4) obj. -30.0705 iterations 5
Cbc0038I Pass  26: suminf.    1.06176 (4) obj. -30.0705 iterations 0
Cbc0038I Pass  27: suminf.    0.98787 (4) obj. -30.0705 iterations 4
Cbc0038I Pass  28: suminf.    0.67366 (3) obj. -30.4889 iterations 2
Cbc0038I Pass  29: suminf.    1.18455 (4) obj. -30.0705 iterations 3
Cbc0038I Pass  30: suminf.    0.68511 (3) obj. -30.0705 iterations 2
Cbc0038I Pass  31: suminf.    1.06176 (4) obj. -30.0705 iterations 4
Cbc0038I Pass  32: suminf.    1.06176 (4) obj. -30.0705 iterations 0
Cbc0038I Pass  33: suminf.    0.98787 (4) obj. -30.0705 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 133 columns, reduced to 7 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -22.3842 to -27.9322 (0.05 seconds)
Cbc0038I Round again with cutoff of -37.3179
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.98552 (29) obj. -58.7256 iterations 0
Cbc0038I Pass  34: suminf.    1.07524 (10) obj. -37.3179 iterations 24
Cbc0038I Pass  35: suminf.    1.05593 (4) obj. -37.3179 iterations 8
Cbc0038I Pass  36: suminf.    1.05593 (4) obj. -37.3179 iterations 2
Cbc0038I Pass  37: suminf.    1.07762 (4) obj. -37.3179 iterations 3
Cbc0038I Pass  38: suminf.    0.51382 (3) obj. -37.3179 iterations 2
Cbc0038I Pass  39: suminf.    1.16303 (4) obj. -37.3179 iterations 4
Cbc0038I Pass  40: suminf.    0.50456 (3) obj. -37.3233 iterations 4
Cbc0038I Pass  41: suminf.    0.50420 (3) obj. -37.3179 iterations 1
Cbc0038I Pass  42: suminf.    1.57642 (11) obj. -37.3179 iterations 26
Cbc0038I Pass  43: suminf.    1.57642 (11) obj. -37.3179 iterations 3
Cbc0038I Pass  44: suminf.    0.63305 (4) obj. -37.3179 iterations 13
Cbc0038I Pass  45: suminf.    0.31189 (4) obj. -37.9603 iterations 6
Cbc0038I Pass  46: suminf.    0.63305 (4) obj. -37.3179 iterations 5
Cbc0038I Pass  47: suminf.    1.12922 (12) obj. -37.3179 iterations 12
Cbc0038I Pass  48: suminf.    1.05185 (12) obj. -37.3179 iterations 3
Cbc0038I Pass  49: suminf.    1.00594 (7) obj. -37.3179 iterations 19
Cbc0038I Pass  50: suminf.    0.92415 (7) obj. -37.3179 iterations 2
Cbc0038I Pass  51: suminf.    1.29997 (5) obj. -37.3179 iterations 16
Cbc0038I Pass  52: suminf.    1.18493 (5) obj. -37.3179 iterations 3
Cbc0038I Pass  53: suminf.    1.03659 (5) obj. -37.3179 iterations 4
Cbc0038I Pass  54: suminf.    0.69529 (5) obj. -37.3179 iterations 2
Cbc0038I Pass  55: suminf.    1.18493 (5) obj. -37.3179 iterations 3
Cbc0038I Pass  56: suminf.    0.92779 (10) obj. -37.3179 iterations 18
Cbc0038I Pass  57: suminf.    0.79528 (10) obj. -37.3179 iterations 1
Cbc0038I Pass  58: suminf.    1.34618 (8) obj. -37.3179 iterations 14
Cbc0038I Pass  59: suminf.    1.34618 (8) obj. -37.3179 iterations 0
Cbc0038I Pass  60: suminf.    1.31259 (6) obj. -37.3179 iterations 11
Cbc0038I Pass  61: suminf.    1.31259 (6) obj. -37.3179 iterations 3
Cbc0038I Pass  62: suminf.    0.82443 (6) obj. -37.3179 iterations 7
Cbc0038I Rounding solution of -29.0596 is better than previous of -27.9322

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 133 columns, reduced to 12 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -46.0149
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.98552 (29) obj. -58.7256 iterations 0
Cbc0038I Pass  63: suminf.    1.80634 (15) obj. -46.0149 iterations 19
Cbc0038I Pass  64: suminf.    1.17724 (10) obj. -46.0149 iterations 17
Cbc0038I Pass  65: suminf.    1.17724 (10) obj. -46.0149 iterations 1
Cbc0038I Pass  66: suminf.    1.17708 (10) obj. -46.0149 iterations 5
Cbc0038I Pass  67: suminf.    1.17708 (10) obj. -46.0149 iterations 1
Cbc0038I Pass  68: suminf.    1.17724 (10) obj. -46.0149 iterations 3
Cbc0038I Pass  69: suminf.    1.63868 (13) obj. -46.0149 iterations 10
Cbc0038I Pass  70: suminf.    1.63868 (13) obj. -46.0149 iterations 3
Cbc0038I Pass  71: suminf.    1.54835 (13) obj. -46.0149 iterations 16
Cbc0038I Pass  72: suminf.    1.54835 (13) obj. -46.0149 iterations 1
Cbc0038I Pass  73: suminf.    1.56913 (13) obj. -46.0149 iterations 4
Cbc0038I Pass  74: suminf.    1.56913 (13) obj. -46.0149 iterations 1
Cbc0038I Pass  75: suminf.    1.54835 (13) obj. -46.0149 iterations 4
Cbc0038I Pass  76: suminf.    1.51119 (13) obj. -46.0149 iterations 5
Cbc0038I Pass  77: suminf.    1.20814 (12) obj. -46.0149 iterations 2
Cbc0038I Pass  78: suminf.    1.41058 (12) obj. -46.0149 iterations 7
Cbc0038I Pass  79: suminf.    1.41058 (12) obj. -46.0149 iterations 1
Cbc0038I Pass  80: suminf.    1.46502 (12) obj. -46.0149 iterations 3
Cbc0038I Pass  81: suminf.    1.46502 (12) obj. -46.0149 iterations 1
Cbc0038I Pass  82: suminf.    1.41058 (12) obj. -46.0149 iterations 7
Cbc0038I Pass  83: suminf.    2.14630 (19) obj. -46.0149 iterations 22
Cbc0038I Pass  84: suminf.    2.11045 (19) obj. -46.0149 iterations 6
Cbc0038I Pass  85: suminf.    1.99819 (15) obj. -46.0149 iterations 19
Cbc0038I Pass  86: suminf.    1.81350 (15) obj. -46.0149 iterations 2
Cbc0038I Pass  87: suminf.    1.70690 (14) obj. -46.0149 iterations 8
Cbc0038I Pass  88: suminf.    1.70690 (14) obj. -46.0149 iterations 1
Cbc0038I Pass  89: suminf.    1.54835 (13) obj. -46.0149 iterations 13
Cbc0038I Pass  90: suminf.    1.54835 (13) obj. -46.0149 iterations 1
Cbc0038I Pass  91: suminf.    1.56913 (13) obj. -46.0149 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.0596 - took 0.08 seconds
Cbc0012I Integer solution of -29.05957 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 113 rows 133 columns, reduced to 5 rows 7 columns
Cbc0031I 54 added rows had average density of 39.296296
Cbc0013I At root node, 54 cuts changed objective from -66.307838 to -39.521046 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15051 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 120.5 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 945 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 38 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1620 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 377 row cuts average 54.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 167 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.645 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.05957 best solution, best possible -39.521046 (2.78 seconds)
Cbc0012I Integer solution of -30.18846 found by rounding after 6629 iterations and 4 nodes (3.32 seconds)
Cbc0010I After 6 nodes, 5 on tree, -30.18846 best solution, best possible -37.30813 (3.50 seconds)
Cbc0010I After 24 nodes, 11 on tree, -30.18846 best solution, best possible -37.30813 (4.21 seconds)
Cbc0038I Full problem 113 rows 133 columns, reduced to 43 rows 56 columns
Cbc0012I Integer solution of -30.35423 found by RINS after 8263 iterations and 41 nodes (4.95 seconds)
Cbc0010I After 41 nodes, 8 on tree, -30.35423 best solution, best possible -37.30813 (4.95 seconds)
Cbc0010I After 60 nodes, 4 on tree, -30.35423 best solution, best possible -37.30813 (5.67 seconds)
Cbc0012I Integer solution of -30.53675 found by DiveCoefficient after 9170 iterations and 61 nodes (5.67 seconds)
Cbc0001I Search completed - best objective -30.53675, took 9679 iterations and 76 nodes (6.34 seconds)
Cbc0032I Strong branching done 870 times (12545 iterations), fathomed 7 nodes and fixed 15 variables
Cbc0035I Maximum depth 17, 193 variables fixed on reduced cost
Total time (CPU seconds):       4.40   (Wallclock seconds):       6.37

