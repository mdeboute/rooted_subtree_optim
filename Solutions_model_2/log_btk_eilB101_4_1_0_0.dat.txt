Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 98 (-5) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 3.70143e-05 - average 2.04499e-07, 30 fixed columns
Coin0506I Presolve 110 (-71) rows, 62 (-36) columns and 337 (-213) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 88.64183
Clp0000I Optimal - objective value 88.64183
Coin0511I After Postsolve, objective 88.64183, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.64183
Clp0000I Optimal - objective value 88.64183
Clp0000I Optimal - objective value 88.64183
Coin0511I After Postsolve, objective 88.64183, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.64183047 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 180 rows, 98 columns (97 integer (97 of which binary)) and 571 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.62471
Cbc0038I Solution found of -1.21657
Cbc0038I Relaxing continuous gives -10.8753
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -10.8753 to -62.0454 (0.04 seconds)
Cbc0038I Round again with cutoff of -64.6236
Cbc0038I Pass   1: suminf.    3.04149 (19) obj. -64.6236 iterations 59
Cbc0038I Pass   2: suminf.    2.46336 (12) obj. -64.6236 iterations 8
Cbc0038I Pass   3: suminf.    1.60658 (5) obj. -64.6236 iterations 19
Cbc0038I Pass   4: suminf.    1.52653 (5) obj. -64.6236 iterations 2
Cbc0038I Pass   5: suminf.    1.52653 (5) obj. -64.6236 iterations 0
Cbc0038I Pass   6: suminf.    1.69809 (5) obj. -64.6236 iterations 11
Cbc0038I Pass   7: suminf.    1.30197 (4) obj. -64.6236 iterations 8
Cbc0038I Pass   8: suminf.    1.69321 (4) obj. -64.6236 iterations 3
Cbc0038I Pass   9: suminf.    1.72343 (5) obj. -64.6236 iterations 14
Cbc0038I Pass  10: suminf.    1.52653 (5) obj. -64.6236 iterations 11
Cbc0038I Pass  11: suminf.    1.52653 (5) obj. -64.6236 iterations 0
Cbc0038I Pass  12: suminf.    1.69809 (5) obj. -64.6236 iterations 11
Cbc0038I Pass  13: suminf.    1.30197 (4) obj. -64.6236 iterations 8
Cbc0038I Pass  14: suminf.    1.69321 (4) obj. -64.6236 iterations 3
Cbc0038I Pass  15: suminf.    4.65636 (15) obj. -64.6236 iterations 26
Cbc0038I Pass  16: suminf.    2.59062 (8) obj. -64.6236 iterations 16
Cbc0038I Pass  17: suminf.    1.47313 (5) obj. -64.6236 iterations 8
Cbc0038I Pass  18: suminf.    1.37350 (4) obj. -64.6236 iterations 3
Cbc0038I Pass  19: suminf.    1.67412 (5) obj. -64.6236 iterations 5
Cbc0038I Pass  20: suminf.    1.29227 (5) obj. -64.6236 iterations 7
Cbc0038I Pass  21: suminf.    1.59150 (5) obj. -64.6236 iterations 6
Cbc0038I Pass  22: suminf.    1.59150 (5) obj. -64.6236 iterations 0
Cbc0038I Pass  23: suminf.    1.30913 (5) obj. -64.6236 iterations 6
Cbc0038I Pass  24: suminf.    1.30657 (4) obj. -64.6236 iterations 2
Cbc0038I Pass  25: suminf.    1.57319 (4) obj. -64.6236 iterations 4
Cbc0038I Pass  26: suminf.    1.57319 (4) obj. -64.6236 iterations 1
Cbc0038I Pass  27: suminf.    1.93651 (11) obj. -64.6236 iterations 22
Cbc0038I Pass  28: suminf.    1.17044 (4) obj. -64.6236 iterations 15
Cbc0038I Pass  29: suminf.    1.87983 (5) obj. -64.6236 iterations 4
Cbc0038I Pass  30: suminf.    1.74191 (6) obj. -64.6236 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -62.0454 - took 0.08 seconds
Cbc0012I Integer solution of -62.04545 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 180 rows 98 columns, reduced to 68 rows 38 columns
Cbc0031I 23 added rows had average density of 72.869565
Cbc0013I At root node, 23 cuts changed objective from -87.826124 to -79.093887 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8771 row cuts average 3.6 elements, 6 column cuts (6 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1802 row cuts average 91.8 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 93.3 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -62.04545 best solution, best possible -79.093887 (0.92 seconds)
Cbc0001I Search completed - best objective -62.04544999999999, took 7036 iterations and 50 nodes (1.10 seconds)
Cbc0032I Strong branching done 624 times (12082 iterations), fathomed 6 nodes and fixed 19 variables
Cbc0035I Maximum depth 17, 163 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-67) rows, 150 (-52) columns and 3063 (-2590) elements
Clp1000I sum of infeasibilities 4.34605e-07 - average 3.1723e-09, 51 fixed columns
Coin0506I Presolve 83 (-54) rows, 99 (-51) columns and 1443 (-1620) elements
Clp0006I 0  Obj 163.81613 Primal inf 1.5470688e-06 (2) Dual inf 3.5307478e+10 (99)
Clp0029I End of values pass after 97 iterations
Clp0014I Perturbing problem by 0.001% of 2.0425498 - largest nonzero change 2.6758418e-05 ( 0.0014083952%) - largest zero change 2.9178876e-05
Clp0000I Optimal - objective value 174.59628
Clp0000I Optimal - objective value 174.59628
Coin0511I After Postsolve, objective 174.59628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 174.59628 Dual inf 32.996443 (2)
Clp0014I Perturbing problem by 0.001% of 1.7154066 - largest nonzero change 1.5572688e-05 ( 0.00082503284%) - largest zero change 2.907816e-05
Clp0000I Optimal - objective value 174.59628
Clp0000I Optimal - objective value 174.59628
Clp0000I Optimal - objective value 174.59628
Coin0511I After Postsolve, objective 174.59628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 174.5962763 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 151 columns (151 integer (151 of which binary)) and 3076 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.347%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 8.54733
Cbc0038I Pass   1: suminf.    1.51655 (31) obj. -49.7169 iterations 22
Cbc0038I Pass   2: suminf.    1.51655 (31) obj. -49.7169 iterations 1
Cbc0038I Pass   3: suminf.    0.80628 (18) obj. -28.9145 iterations 13
Cbc0038I Pass   4: suminf.    0.33766 (8) obj. -19.3832 iterations 10
Cbc0038I Solution found of -11.7208
Cbc0038I Rounding solution of -29.5304 is better than previous of -11.7208

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 151 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -29.5304 to -97.1994 (0.04 seconds)
Cbc0038I Round again with cutoff of -103.628
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.99527 (49) obj. -103.628 iterations 11
Cbc0038I Pass   6: suminf.    2.99527 (49) obj. -103.628 iterations 0
Cbc0038I Pass   7: suminf.    3.26417 (38) obj. -103.628 iterations 12
Cbc0038I Pass   8: suminf.    3.07599 (37) obj. -103.628 iterations 1
Cbc0038I Pass   9: suminf.    2.82196 (37) obj. -103.628 iterations 4
Cbc0038I Pass  10: suminf.    2.02098 (14) obj. -103.628 iterations 27
Cbc0038I Pass  11: suminf.    1.36703 (12) obj. -116.783 iterations 5
Cbc0038I Pass  12: suminf.    0.08870 (1) obj. -103.628 iterations 12
Cbc0038I Pass  13: suminf.    0.03333 (1) obj. -107.116 iterations 1
Cbc0038I Pass  14: suminf.    4.19290 (24) obj. -103.628 iterations 32
Cbc0038I Pass  15: suminf.    3.41520 (23) obj. -103.628 iterations 9
Cbc0038I Pass  16: suminf.    1.11923 (8) obj. -103.628 iterations 28
Cbc0038I Pass  17: suminf.    0.97386 (3) obj. -103.628 iterations 4
Cbc0038I Pass  18: suminf.    0.31889 (1) obj. -103.628 iterations 11
Cbc0038I Pass  19: suminf.    0.31889 (1) obj. -103.628 iterations 0
Cbc0038I Pass  20: suminf.    0.34146 (1) obj. -104.154 iterations 4
Cbc0038I Pass  21: suminf.    2.15591 (13) obj. -103.628 iterations 24
Cbc0038I Pass  22: suminf.    1.80221 (11) obj. -103.628 iterations 16
Cbc0038I Pass  23: suminf.    0.44703 (2) obj. -103.628 iterations 16
Cbc0038I Pass  24: suminf.    0.44703 (2) obj. -103.628 iterations 1
Cbc0038I Pass  25: suminf.    0.69376 (2) obj. -103.628 iterations 4
Cbc0038I Pass  26: suminf.    0.51220 (3) obj. -103.628 iterations 9
Cbc0038I Pass  27: suminf.    0.73455 (7) obj. -103.628 iterations 10
Cbc0038I Pass  28: suminf.    0.45938 (2) obj. -103.628 iterations 4
Cbc0038I Pass  29: suminf.    0.64656 (2) obj. -103.628 iterations 12
Cbc0038I Pass  30: suminf.    0.44256 (2) obj. -103.628 iterations 8
Cbc0038I Pass  31: suminf.    3.41527 (16) obj. -103.628 iterations 28
Cbc0038I Pass  32: suminf.    1.74703 (10) obj. -103.628 iterations 14
Cbc0038I Pass  33: suminf.    0.83669 (2) obj. -103.628 iterations 16
Cbc0038I Pass  34: suminf.    0.53007 (2) obj. -105.161 iterations 7
Cbc0038I Rounding solution of -104.627 is better than previous of -97.1994

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 151 columns, reduced to 56 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -115.999
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  34: suminf.    6.99466 (47) obj. -115.999 iterations 3
Cbc0038I Pass  35: suminf.    6.99466 (47) obj. -115.999 iterations 0
Cbc0038I Pass  36: suminf.    4.58196 (34) obj. -115.999 iterations 19
Cbc0038I Pass  37: suminf.    1.96015 (14) obj. -115.999 iterations 20
Cbc0038I Pass  38: suminf.    1.33808 (5) obj. -115.999 iterations 39
Cbc0038I Pass  39: suminf.    0.98632 (3) obj. -115.999 iterations 10
Cbc0038I Pass  40: suminf.    0.47648 (4) obj. -115.999 iterations 1
Cbc0038I Pass  41: suminf.    0.98476 (3) obj. -115.999 iterations 10
Cbc0038I Pass  42: suminf.    0.89741 (4) obj. -115.999 iterations 7
Cbc0038I Pass  43: suminf.    0.98632 (3) obj. -115.999 iterations 13
Cbc0038I Pass  44: suminf.    2.18972 (12) obj. -115.999 iterations 25
Cbc0038I Pass  45: suminf.    1.73273 (11) obj. -117.084 iterations 10
Cbc0038I Pass  46: suminf.    1.20590 (7) obj. -115.999 iterations 43
Cbc0038I Pass  47: suminf.    1.00651 (5) obj. -115.999 iterations 9
Cbc0038I Pass  48: suminf.    1.19513 (7) obj. -115.999 iterations 11
Cbc0038I Pass  49: suminf.    0.98463 (5) obj. -115.999 iterations 11
Cbc0038I Pass  50: suminf.    2.16228 (12) obj. -115.999 iterations 18
Cbc0038I Pass  51: suminf.    1.65093 (9) obj. -115.999 iterations 10
Cbc0038I Pass  52: suminf.    1.15471 (7) obj. -115.999 iterations 30
Cbc0038I Pass  53: suminf.    1.15471 (7) obj. -115.999 iterations 0
Cbc0038I Pass  54: suminf.    1.19743 (7) obj. -115.999 iterations 8
Cbc0038I Pass  55: suminf.    1.00005 (5) obj. -115.999 iterations 3
Cbc0038I Pass  56: suminf.    1.19513 (7) obj. -115.999 iterations 12
Cbc0038I Pass  57: suminf.    0.98463 (5) obj. -115.999 iterations 11
Cbc0038I Pass  58: suminf.    1.20590 (7) obj. -115.999 iterations 21
Cbc0038I Pass  59: suminf.    1.00651 (5) obj. -115.999 iterations 9
Cbc0038I Pass  60: suminf.    1.51316 (11) obj. -115.999 iterations 28
Cbc0038I Pass  61: suminf.    1.49177 (10) obj. -116.289 iterations 5
Cbc0038I Pass  62: suminf.    1.22894 (5) obj. -115.999 iterations 33
Cbc0038I Pass  63: suminf.    1.22894 (5) obj. -115.999 iterations 3
Cbc0038I Rounding solution of -107.358 is better than previous of -104.627

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 151 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -129.645
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  63: suminf.    7.54312 (49) obj. -129.645 iterations 3
Cbc0038I Pass  64: suminf.    7.54312 (49) obj. -129.645 iterations 0
Cbc0038I Pass  65: suminf.    4.24768 (30) obj. -129.645 iterations 19
Cbc0038I Pass  66: suminf.    2.66144 (15) obj. -129.645 iterations 51
Cbc0038I Pass  67: suminf.    2.43282 (13) obj. -129.645 iterations 4
Cbc0038I Pass  68: suminf.    2.43282 (13) obj. -129.645 iterations 2
Cbc0038I Pass  69: suminf.    2.37341 (12) obj. -129.645 iterations 17
Cbc0038I Pass  70: suminf.    1.89353 (11) obj. -129.645 iterations 8
Cbc0038I Pass  71: suminf.    2.28564 (12) obj. -129.645 iterations 13
Cbc0038I Pass  72: suminf.    1.95583 (11) obj. -129.645 iterations 10
Cbc0038I Pass  73: suminf.    2.37341 (12) obj. -129.645 iterations 27
Cbc0038I Pass  74: suminf.    4.08609 (23) obj. -129.645 iterations 27
Cbc0038I Pass  75: suminf.    3.00633 (20) obj. -129.645 iterations 29
Cbc0038I Pass  76: suminf.    2.38768 (11) obj. -129.645 iterations 34
Cbc0038I Pass  77: suminf.    2.22560 (12) obj. -129.645 iterations 5
Cbc0038I Pass  78: suminf.    2.56832 (13) obj. -129.645 iterations 26
Cbc0038I Pass  79: suminf.    2.22376 (12) obj. -129.645 iterations 9
Cbc0038I Pass  80: suminf.    2.42648 (13) obj. -129.645 iterations 14
Cbc0038I Pass  81: suminf.    3.53627 (15) obj. -129.645 iterations 30
Cbc0038I Pass  82: suminf.    3.16656 (16) obj. -129.645 iterations 4
Cbc0038I Pass  83: suminf.    3.08716 (14) obj. -129.645 iterations 28
Cbc0038I Pass  84: suminf.    2.88310 (14) obj. -129.645 iterations 4
Cbc0038I Pass  85: suminf.    2.63454 (14) obj. -129.645 iterations 3
Cbc0038I Pass  86: suminf.    2.63454 (14) obj. -129.645 iterations 3
Cbc0038I Pass  87: suminf.    2.88310 (14) obj. -129.645 iterations 9
Cbc0038I Pass  88: suminf.    3.35469 (18) obj. -129.645 iterations 34
Cbc0038I Pass  89: suminf.    3.35469 (18) obj. -129.645 iterations 2
Cbc0038I Pass  90: suminf.    2.61899 (14) obj. -129.645 iterations 23
Cbc0038I Pass  91: suminf.    2.61899 (14) obj. -129.645 iterations 0
Cbc0038I Pass  92: suminf.    2.83911 (14) obj. -129.645 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -107.358 - took 0.14 seconds
Cbc0012I Integer solution of -107.35808 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0012I Integer solution of -110.42623 found by DiveCoefficient after 102 iterations and 0 nodes (0.24 seconds)
Cbc0031I 22 added rows had average density of 6.7272727
Cbc0013I At root node, 22 cuts changed objective from -161.48506 to -110.42623 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 121 row cuts average 2.1 elements, 31 column cuts (31 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -110.426232, took 102 iterations and 0 nodes (0.24 seconds)
Cbc0035I Maximum depth 0, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.24

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 98 (-5) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 3.70143e-05 - average 2.04499e-07, 30 fixed columns
Coin0506I Presolve 110 (-71) rows, 62 (-36) columns and 337 (-213) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 88.64183
Clp0000I Optimal - objective value 88.64183
Coin0511I After Postsolve, objective 88.64183, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.64183
Clp0000I Optimal - objective value 88.64183
Clp0000I Optimal - objective value 88.64183
Coin0511I After Postsolve, objective 88.64183, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.64183047 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 180 rows, 98 columns (97 integer (97 of which binary)) and 571 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.62471
Cbc0038I Solution found of -1.21657
Cbc0038I Relaxing continuous gives -10.8753
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -10.8753 to -62.0454 (0.05 seconds)
Cbc0038I Round again with cutoff of -64.6236
Cbc0038I Pass   1: suminf.    3.04149 (19) obj. -64.6236 iterations 59
Cbc0038I Pass   2: suminf.    2.46336 (12) obj. -64.6236 iterations 8
Cbc0038I Pass   3: suminf.    1.60658 (5) obj. -64.6236 iterations 19
Cbc0038I Pass   4: suminf.    1.52653 (5) obj. -64.6236 iterations 2
Cbc0038I Pass   5: suminf.    1.52653 (5) obj. -64.6236 iterations 0
Cbc0038I Pass   6: suminf.    1.69809 (5) obj. -64.6236 iterations 11
Cbc0038I Pass   7: suminf.    1.30197 (4) obj. -64.6236 iterations 8
Cbc0038I Pass   8: suminf.    1.69321 (4) obj. -64.6236 iterations 3
Cbc0038I Pass   9: suminf.    1.72343 (5) obj. -64.6236 iterations 14
Cbc0038I Pass  10: suminf.    1.52653 (5) obj. -64.6236 iterations 11
Cbc0038I Pass  11: suminf.    1.52653 (5) obj. -64.6236 iterations 0
Cbc0038I Pass  12: suminf.    1.69809 (5) obj. -64.6236 iterations 11
Cbc0038I Pass  13: suminf.    1.30197 (4) obj. -64.6236 iterations 8
Cbc0038I Pass  14: suminf.    1.69321 (4) obj. -64.6236 iterations 3
Cbc0038I Pass  15: suminf.    4.65636 (15) obj. -64.6236 iterations 26
Cbc0038I Pass  16: suminf.    2.59062 (8) obj. -64.6236 iterations 16
Cbc0038I Pass  17: suminf.    1.47313 (5) obj. -64.6236 iterations 8
Cbc0038I Pass  18: suminf.    1.37350 (4) obj. -64.6236 iterations 3
Cbc0038I Pass  19: suminf.    1.67412 (5) obj. -64.6236 iterations 5
Cbc0038I Pass  20: suminf.    1.29227 (5) obj. -64.6236 iterations 7
Cbc0038I Pass  21: suminf.    1.59150 (5) obj. -64.6236 iterations 6
Cbc0038I Pass  22: suminf.    1.59150 (5) obj. -64.6236 iterations 0
Cbc0038I Pass  23: suminf.    1.30913 (5) obj. -64.6236 iterations 6
Cbc0038I Pass  24: suminf.    1.30657 (4) obj. -64.6236 iterations 2
Cbc0038I Pass  25: suminf.    1.57319 (4) obj. -64.6236 iterations 4
Cbc0038I Pass  26: suminf.    1.57319 (4) obj. -64.6236 iterations 1
Cbc0038I Pass  27: suminf.    1.93651 (11) obj. -64.6236 iterations 22
Cbc0038I Pass  28: suminf.    1.17044 (4) obj. -64.6236 iterations 15
Cbc0038I Pass  29: suminf.    1.87983 (5) obj. -64.6236 iterations 4
Cbc0038I Pass  30: suminf.    1.74191 (6) obj. -64.6236 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -62.0454 - took 0.08 seconds
Cbc0012I Integer solution of -62.04545 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 180 rows 98 columns, reduced to 68 rows 38 columns
Cbc0031I 23 added rows had average density of 72.869565
Cbc0013I At root node, 23 cuts changed objective from -87.826124 to -79.093887 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8771 row cuts average 3.6 elements, 6 column cuts (6 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1802 row cuts average 91.8 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 93.3 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -62.04545 best solution, best possible -79.093887 (1.05 seconds)
Cbc0001I Search completed - best objective -62.04544999999999, took 7036 iterations and 50 nodes (1.26 seconds)
Cbc0032I Strong branching done 624 times (12082 iterations), fathomed 6 nodes and fixed 19 variables
Cbc0035I Maximum depth 17, 163 variables fixed on reduced cost
Total time (CPU seconds):       1.21   (Wallclock seconds):       1.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-70) rows, 148 (-55) columns and 2963 (-2691) elements
Clp1000I sum of infeasibilities 1.72915e-07 - average 1.28085e-09, 43 fixed columns
Coin0506I Presolve 88 (-47) rows, 104 (-44) columns and 1615 (-1348) elements
Clp0006I 0  Obj 96.86253 Dual inf 13.418067 (104)
Clp0029I End of values pass after 104 iterations
Clp0014I Perturbing problem by 0.001% of 2.0472888 - largest nonzero change 2.2893761e-05 ( 0.0016580886%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 105.803
Clp0000I Optimal - objective value 105.803
Coin0511I After Postsolve, objective 105.803, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 105.803 Dual inf 0.11174864 (1)
Clp0014I Perturbing problem by 0.001% of 1.7259806 - largest nonzero change 1.9329231e-05 ( 0.0019329231%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 105.803
Clp0000I Optimal - objective value 105.803
Clp0000I Optimal - objective value 105.803
Coin0511I After Postsolve, objective 105.803, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.8030002 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 149 columns (149 integer (149 of which binary)) and 2986 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 3.86184
Cbc0038I Pass   1: suminf.    1.99024 (35) obj. -81.6749 iterations 18
Cbc0038I Pass   2: suminf.    1.99024 (35) obj. -81.6749 iterations 0
Cbc0038I Pass   3: suminf.    0.35856 (14) obj. -60.3166 iterations 18
Cbc0038I Solution found of -44.7185
Cbc0038I Rounding solution of -54.8771 is better than previous of -44.7185

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 149 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -58.0394
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.99024 (35) obj. -81.6749 iterations 0
Cbc0038I Pass   5: suminf.    1.99024 (35) obj. -81.6749 iterations 0
Cbc0038I Pass   6: suminf.    0.72456 (13) obj. -58.0394 iterations 43
Cbc0038I Pass   7: suminf.    1.63548 (11) obj. -58.0394 iterations 38
Cbc0038I Pass   8: suminf.    1.63431 (11) obj. -58.0394 iterations 1
Cbc0038I Pass   9: suminf.    1.72231 (11) obj. -58.0394 iterations 11
Cbc0038I Pass  10: suminf.    1.72231 (11) obj. -58.0394 iterations 0
Cbc0038I Pass  11: suminf.    1.79767 (11) obj. -58.0394 iterations 6
Cbc0038I Pass  12: suminf.    1.79767 (11) obj. -58.0394 iterations 0
Cbc0038I Pass  13: suminf.    1.72231 (11) obj. -58.0394 iterations 6
Cbc0038I Pass  14: suminf.    2.24087 (20) obj. -58.0394 iterations 43
Cbc0038I Pass  15: suminf.    2.04027 (19) obj. -58.0394 iterations 5
Cbc0038I Pass  16: suminf.    1.90486 (14) obj. -58.0394 iterations 38
Cbc0038I Pass  17: suminf.    1.51285 (13) obj. -58.0394 iterations 14
Cbc0038I Pass  18: suminf.    1.90486 (14) obj. -58.0394 iterations 22
Cbc0038I Pass  19: suminf.    1.54286 (14) obj. -58.0394 iterations 13
Cbc0038I Pass  20: suminf.    1.90486 (14) obj. -58.0394 iterations 15
Cbc0038I Pass  21: suminf.    2.06860 (18) obj. -58.0394 iterations 12
Cbc0038I Pass  22: suminf.    1.99069 (17) obj. -58.0394 iterations 4
Cbc0038I Pass  23: suminf.    1.75358 (14) obj. -58.0394 iterations 20
Cbc0038I Pass  24: suminf.    1.74352 (14) obj. -58.0394 iterations 8
Cbc0038I Pass  25: suminf.    1.75827 (18) obj. -58.0394 iterations 19
Cbc0038I Pass  26: suminf.    1.50267 (17) obj. -58.0394 iterations 11
Cbc0038I Pass  27: suminf.    2.12049 (17) obj. -58.0394 iterations 24
Cbc0038I Pass  28: suminf.    2.10593 (17) obj. -58.0394 iterations 2
Cbc0038I Pass  29: suminf.    2.05062 (17) obj. -58.0394 iterations 4
Cbc0038I Pass  30: suminf.    2.05062 (17) obj. -58.0394 iterations 1
Cbc0038I Pass  31: suminf.    2.10593 (17) obj. -58.0394 iterations 5
Cbc0038I Pass  32: suminf.    1.87286 (15) obj. -58.0394 iterations 42
Cbc0038I Pass  33: suminf.    1.70169 (14) obj. -58.0394 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 149 columns, reduced to 35 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -44.7185 to -54.8873 (0.17 seconds)
Cbc0038I Round again with cutoff of -63.7314
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.99024 (35) obj. -81.6749 iterations 0
Cbc0038I Pass  34: suminf.    1.99024 (35) obj. -81.6749 iterations 0
Cbc0038I Pass  35: suminf.    0.51111 (15) obj. -63.7314 iterations 21
Cbc0038I Pass  36: suminf.    1.67966 (17) obj. -63.7314 iterations 31
Cbc0038I Pass  37: suminf.    1.67966 (17) obj. -63.7314 iterations 6
Cbc0038I Pass  38: suminf.    2.21290 (17) obj. -63.7314 iterations 37
Cbc0038I Pass  39: suminf.    1.77096 (17) obj. -63.7314 iterations 15
Cbc0038I Pass  40: suminf.    2.21290 (17) obj. -63.7314 iterations 15
Cbc0038I Pass  41: suminf.    3.00515 (21) obj. -63.7314 iterations 12
Cbc0038I Pass  42: suminf.    2.27478 (19) obj. -63.7314 iterations 2
Cbc0038I Pass  43: suminf.    2.29243 (19) obj. -63.7314 iterations 9
Cbc0038I Pass  44: suminf.    2.29243 (19) obj. -63.7314 iterations 2
Cbc0038I Pass  45: suminf.    2.33594 (19) obj. -63.7314 iterations 6
Cbc0038I Pass  46: suminf.    2.33594 (19) obj. -63.7314 iterations 2
Cbc0038I Pass  47: suminf.    2.29243 (19) obj. -63.7314 iterations 6
Cbc0038I Pass  48: suminf.    2.62509 (23) obj. -63.7314 iterations 26
Cbc0038I Pass  49: suminf.    2.62509 (23) obj. -63.7314 iterations 3
Cbc0038I Pass  50: suminf.    2.23268 (21) obj. -63.7314 iterations 22
Cbc0038I Pass  51: suminf.    2.20931 (20) obj. -63.7314 iterations 5
Cbc0038I Pass  52: suminf.    2.21290 (18) obj. -63.7314 iterations 7
Cbc0038I Pass  53: suminf.    1.82800 (17) obj. -63.7314 iterations 15
Cbc0038I Pass  54: suminf.    2.21290 (18) obj. -63.7314 iterations 16
Cbc0038I Pass  55: suminf.    2.21388 (27) obj. -63.7314 iterations 22
Cbc0038I Pass  56: suminf.    1.94721 (18) obj. -63.7314 iterations 16
Cbc0038I Pass  57: suminf.    2.21290 (19) obj. -63.7314 iterations 28
Cbc0038I Pass  58: suminf.    1.90852 (18) obj. -63.7314 iterations 14
Cbc0038I Pass  59: suminf.    2.21290 (19) obj. -63.7314 iterations 17
Cbc0038I Pass  60: suminf.    2.21290 (18) obj. -63.7314 iterations 21
Cbc0038I Pass  61: suminf.    1.80888 (17) obj. -63.7314 iterations 12
Cbc0038I Pass  62: suminf.    2.21290 (18) obj. -63.7314 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 149 columns, reduced to 43 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -54.8873 - took 0.14 seconds
Cbc0012I Integer solution of -54.88733 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 135 rows 149 columns, reduced to 28 rows 31 columns
Cbc0031I 61 added rows had average density of 18.622951
Cbc0013I At root node, 61 cuts changed objective from -86.499223 to -66.255524 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 2479 row cuts average 13.7 elements, 7 column cuts (22 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 101 row cuts average 102.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 59 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 78 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 244 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 352 row cuts average 97.1 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -54.88733 best solution, best possible -66.255524 (0.92 seconds)
Cbc0012I Integer solution of -61.23612 found by DiveCoefficient after 1110 iterations and 4 nodes (1.52 seconds)
Cbc0010I After 4 nodes, 5 on tree, -61.23612 best solution, best possible -66.255524 (1.63 seconds)
Cbc0016I Integer solution of -62.04545 found by strong branching after 1342 iterations and 9 nodes (1.97 seconds)
Cbc0010I After 18 nodes, 7 on tree, -62.04545 best solution, best possible -66.255524 (2.34 seconds)
Cbc0001I Search completed - best objective -62.04544999999999, took 2558 iterations and 40 nodes (2.99 seconds)
Cbc0032I Strong branching done 612 times (11456 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 15, 100 variables fixed on reduced cost
Total time (CPU seconds):       2.00   (Wallclock seconds):       3.01

