Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 21 (-12) columns and 112 (-71) elements
Clp1000I sum of infeasibilities 4.4723e-07 - average 1.17692e-08, 11 fixed columns
Coin0506I Presolve 17 (-21) rows, 10 (-11) columns and 48 (-64) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Coin0511I After Postsolve, objective 201.99265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Coin0511I After Postsolve, objective 201.99265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 201.992653 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.527%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.2374
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.6511 iterations 16
Cbc0038I Solution found of -43.6511
Cbc0038I Relaxing continuous gives -43.6511
Cbc0038I Rounding solution of -60.6511 is better than previous of -43.6511

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 19 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -60.6511 to -108.923 (0.01 seconds)
Cbc0038I Round again with cutoff of -112.087
Cbc0038I Pass   2: suminf.    0.38727 (2) obj. -112.087 iterations 3
Cbc0038I Pass   3: suminf.    0.38727 (2) obj. -112.087 iterations 1
Cbc0038I Pass   4: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass   5: suminf.    0.22764 (1) obj. -124.21 iterations 1
Cbc0038I Pass   6: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass   7: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass   8: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass   9: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass  10: suminf.    0.64122 (2) obj. -112.615 iterations 7
Cbc0038I Pass  11: suminf.    0.64122 (2) obj. -112.615 iterations 4
Cbc0038I Pass  12: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass  13: suminf.    0.65433 (3) obj. -112.087 iterations 2
Cbc0038I Pass  14: suminf.    0.65433 (3) obj. -112.087 iterations 1
Cbc0038I Pass  15: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass  16: suminf.    0.22764 (1) obj. -124.21 iterations 2
Cbc0038I Pass  17: suminf.    1.19244 (7) obj. -112.087 iterations 8
Cbc0038I Pass  18: suminf.    1.13127 (5) obj. -112.087 iterations 1
Cbc0038I Pass  19: suminf.    1.23657 (6) obj. -112.087 iterations 11
Cbc0038I Pass  20: suminf.    1.23657 (6) obj. -112.087 iterations 0
Cbc0038I Pass  21: suminf.    1.18496 (3) obj. -112.087 iterations 8
Cbc0038I Pass  22: suminf.    0.38727 (2) obj. -112.087 iterations 4
Cbc0038I Pass  23: suminf.    0.38727 (2) obj. -112.087 iterations 1
Cbc0038I Pass  24: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass  25: suminf.    0.22764 (1) obj. -124.21 iterations 1
Cbc0038I Pass  26: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass  27: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass  28: suminf.    0.63709 (2) obj. -112.087 iterations 3
Cbc0038I Pass  29: suminf.    0.63709 (2) obj. -112.087 iterations 1
Cbc0038I Pass  30: suminf.    0.44738 (2) obj. -112.087 iterations 5
Cbc0038I Pass  31: suminf.    0.86148 (2) obj. -112.087 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 23 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -108.923 - took 0.03 seconds
Cbc0012I Integer solution of -108.9234 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 21 columns, reduced to 19 rows 10 columns
Cbc0012I Integer solution of -118.1566 found by DiveCoefficient after 124 iterations and 0 nodes (0.03 seconds)
Cbc0031I 7 added rows had average density of 10.285714
Cbc0013I At root node, 7 cuts changed objective from -140.55888 to -118.1566 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 135 row cuts average 5.2 elements, 4 column cuts (4 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 51 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -118.1566, took 124 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-14) rows, 52 (-10) columns and 482 (-166) elements
Clp1000I sum of infeasibilities 1.83274e-10 - average 3.66548e-12, 19 fixed columns
Coin0506I Presolve 33 (-17) rows, 33 (-19) columns and 161 (-321) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 231.22108
Clp0000I Optimal - objective value 231.22108
Coin0511I After Postsolve, objective 231.22108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 231.22108
Clp0000I Optimal - objective value 231.22108
Clp0000I Optimal - objective value 231.22108
Coin0511I After Postsolve, objective 231.22108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 231.221077 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 9 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 43 columns (43 integer (43 of which binary)) and 340 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.008%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.06764
Cbc0038I Pass   1: suminf.    0.74756 (7) obj. -67.7862 iterations 20
Cbc0038I Solution found of -58.8671
Cbc0038I Rounding solution of -82.3469 is better than previous of -58.8671

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 43 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -82.3469 to -108.923 (0.02 seconds)
Cbc0038I Round again with cutoff of -111.711
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.14412 (9) obj. -111.711 iterations 2
Cbc0038I Pass   3: suminf.    0.08333 (1) obj. -112.283 iterations 15
Cbc0038I Pass   4: suminf.    0.08333 (1) obj. -112.283 iterations 0
Cbc0038I Pass   5: suminf.    0.54831 (2) obj. -111.711 iterations 2
Cbc0038I Pass   6: suminf.    1.70065 (7) obj. -111.711 iterations 10
Cbc0038I Pass   7: suminf.    1.34045 (6) obj. -111.711 iterations 2
Cbc0038I Pass   8: suminf.    0.82970 (3) obj. -111.711 iterations 6
Cbc0038I Pass   9: suminf.    0.75798 (3) obj. -111.711 iterations 1
Cbc0038I Pass  10: suminf.    1.28046 (3) obj. -111.711 iterations 2
Cbc0038I Pass  11: suminf.    0.69441 (3) obj. -111.711 iterations 3
Cbc0038I Pass  12: suminf.    0.87979 (3) obj. -111.711 iterations 4
Cbc0038I Pass  13: suminf.    0.67413 (2) obj. -111.711 iterations 1
Cbc0038I Pass  14: suminf.    0.64104 (2) obj. -111.711 iterations 2
Cbc0038I Pass  15: suminf.    0.64104 (2) obj. -111.711 iterations 0
Cbc0038I Pass  16: suminf.    0.87969 (7) obj. -111.711 iterations 10
Cbc0038I Pass  17: suminf.    0.87969 (7) obj. -111.711 iterations 0
Cbc0038I Pass  18: suminf.    1.00511 (3) obj. -111.711 iterations 8
Cbc0038I Pass  19: suminf.    1.16840 (3) obj. -111.711 iterations 2
Cbc0038I Pass  20: suminf.    1.33672 (5) obj. -111.711 iterations 7
Cbc0038I Pass  21: suminf.    1.19092 (4) obj. -111.711 iterations 4
Cbc0038I Pass  22: suminf.    1.19511 (4) obj. -111.711 iterations 6
Cbc0038I Pass  23: suminf.    1.02243 (4) obj. -111.711 iterations 2
Cbc0038I Pass  24: suminf.    1.02243 (4) obj. -111.711 iterations 0
Cbc0038I Pass  25: suminf.    1.00000 (3) obj. -111.711 iterations 4
Cbc0038I Pass  26: suminf.    0.80114 (3) obj. -111.711 iterations 1
Cbc0038I Pass  27: suminf.    1.69613 (7) obj. -111.711 iterations 12
Cbc0038I Pass  28: suminf.    0.68196 (5) obj. -111.711 iterations 4
Cbc0038I Pass  29: suminf.    0.71653 (2) obj. -111.711 iterations 4
Cbc0038I Pass  30: suminf.    0.71653 (2) obj. -111.711 iterations 0
Cbc0038I Pass  31: suminf.    0.73521 (3) obj. -111.711 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 43 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -108.923 - took 0.01 seconds
Cbc0012I Integer solution of -108.9234 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 41 rows 43 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -118.1566 found by DiveCoefficient after 111 iterations and 0 nodes (0.12 seconds)
Cbc0031I 21 added rows had average density of 7.1428571
Cbc0013I At root node, 21 cuts changed objective from -136.79402 to -118.1566 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 161 row cuts average 4.6 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0001I Search completed - best objective -118.1566, took 111 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 21 (-12) columns and 112 (-71) elements
Clp1000I sum of infeasibilities 4.4723e-07 - average 1.17692e-08, 11 fixed columns
Coin0506I Presolve 17 (-21) rows, 10 (-11) columns and 48 (-64) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Coin0511I After Postsolve, objective 201.99265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Coin0511I After Postsolve, objective 201.99265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 201.992653 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.527%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.2374
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.6511 iterations 16
Cbc0038I Solution found of -43.6511
Cbc0038I Relaxing continuous gives -43.6511
Cbc0038I Rounding solution of -60.6511 is better than previous of -43.6511

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 19 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -60.6511 to -108.923 (0.01 seconds)
Cbc0038I Round again with cutoff of -112.087
Cbc0038I Pass   2: suminf.    0.38727 (2) obj. -112.087 iterations 3
Cbc0038I Pass   3: suminf.    0.38727 (2) obj. -112.087 iterations 1
Cbc0038I Pass   4: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass   5: suminf.    0.22764 (1) obj. -124.21 iterations 1
Cbc0038I Pass   6: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass   7: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass   8: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass   9: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass  10: suminf.    0.64122 (2) obj. -112.615 iterations 7
Cbc0038I Pass  11: suminf.    0.64122 (2) obj. -112.615 iterations 4
Cbc0038I Pass  12: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass  13: suminf.    0.65433 (3) obj. -112.087 iterations 2
Cbc0038I Pass  14: suminf.    0.65433 (3) obj. -112.087 iterations 1
Cbc0038I Pass  15: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass  16: suminf.    0.22764 (1) obj. -124.21 iterations 2
Cbc0038I Pass  17: suminf.    1.19244 (7) obj. -112.087 iterations 8
Cbc0038I Pass  18: suminf.    1.13127 (5) obj. -112.087 iterations 1
Cbc0038I Pass  19: suminf.    1.23657 (6) obj. -112.087 iterations 11
Cbc0038I Pass  20: suminf.    1.23657 (6) obj. -112.087 iterations 0
Cbc0038I Pass  21: suminf.    1.18496 (3) obj. -112.087 iterations 8
Cbc0038I Pass  22: suminf.    0.38727 (2) obj. -112.087 iterations 4
Cbc0038I Pass  23: suminf.    0.38727 (2) obj. -112.087 iterations 1
Cbc0038I Pass  24: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass  25: suminf.    0.22764 (1) obj. -124.21 iterations 1
Cbc0038I Pass  26: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass  27: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass  28: suminf.    0.63709 (2) obj. -112.087 iterations 3
Cbc0038I Pass  29: suminf.    0.63709 (2) obj. -112.087 iterations 1
Cbc0038I Pass  30: suminf.    0.44738 (2) obj. -112.087 iterations 5
Cbc0038I Pass  31: suminf.    0.86148 (2) obj. -112.087 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 23 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -108.923 - took 0.01 seconds
Cbc0012I Integer solution of -108.9234 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 21 columns, reduced to 19 rows 10 columns
Cbc0012I Integer solution of -118.1566 found by DiveCoefficient after 124 iterations and 0 nodes (0.04 seconds)
Cbc0031I 7 added rows had average density of 10.285714
Cbc0013I At root node, 7 cuts changed objective from -140.55888 to -118.1566 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 135 row cuts average 5.2 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 51 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -118.1566, took 124 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 43 (-20) columns and 320 (-329) elements
Clp1000I sum of infeasibilities 1.0633e-10 - average 2.59342e-12, 35 fixed columns
Coin0506I Presolve 8 (-33) rows, 8 (-35) columns and 28 (-292) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 172.38362
Clp0000I Optimal - objective value 172.38362
Coin0511I After Postsolve, objective 172.38362, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.268078 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 208.89797
Clp0000I Optimal - objective value 208.89797
Clp0000I Optimal - objective value 208.89797
Coin0511I After Postsolve, objective 208.89797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 208.8979662 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 43 columns (43 integer (43 of which binary)) and 335 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.982%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.2697
Cbc0038I Pass   1: suminf.    0.74756 (7) obj. -67.7862 iterations 20
Cbc0038I Solution found of -58.8671
Cbc0038I Rounding solution of -82.3469 is better than previous of -58.8671

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -82.3469 to -108.923 (0.01 seconds)
Cbc0038I Round again with cutoff of -111.766
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.14537 (9) obj. -111.766 iterations 2
Cbc0038I Pass   3: suminf.    0.08333 (1) obj. -112.283 iterations 17
Cbc0038I Pass   4: suminf.    0.08333 (1) obj. -112.283 iterations 0
Cbc0038I Pass   5: suminf.    0.54928 (2) obj. -111.766 iterations 2
Cbc0038I Pass   6: suminf.    1.59472 (7) obj. -111.766 iterations 10
Cbc0038I Pass   7: suminf.    1.48232 (7) obj. -111.766 iterations 1
Cbc0038I Pass   8: suminf.    0.83481 (3) obj. -111.766 iterations 6
Cbc0038I Pass   9: suminf.    0.76257 (3) obj. -111.766 iterations 1
Cbc0038I Pass  10: suminf.    1.27665 (3) obj. -111.766 iterations 2
Cbc0038I Pass  11: suminf.    0.69812 (3) obj. -111.766 iterations 3
Cbc0038I Pass  12: suminf.    0.88232 (3) obj. -111.766 iterations 4
Cbc0038I Pass  13: suminf.    0.67540 (2) obj. -111.766 iterations 1
Cbc0038I Pass  14: suminf.    0.64469 (2) obj. -111.766 iterations 2
Cbc0038I Pass  15: suminf.    0.64469 (2) obj. -111.766 iterations 0
Cbc0038I Pass  16: suminf.    1.16711 (7) obj. -111.766 iterations 9
Cbc0038I Pass  17: suminf.    1.16711 (7) obj. -111.766 iterations 1
Cbc0038I Pass  18: suminf.    1.00727 (3) obj. -111.766 iterations 6
Cbc0038I Pass  19: suminf.    1.16472 (3) obj. -111.766 iterations 2
Cbc0038I Pass  20: suminf.    1.30256 (5) obj. -111.766 iterations 7
Cbc0038I Pass  21: suminf.    1.19307 (4) obj. -111.766 iterations 4
Cbc0038I Pass  22: suminf.    1.20908 (4) obj. -111.766 iterations 7
Cbc0038I Pass  23: suminf.    1.03640 (4) obj. -111.766 iterations 3
Cbc0038I Pass  24: suminf.    1.03640 (4) obj. -111.766 iterations 0
Cbc0038I Pass  25: suminf.    1.00000 (3) obj. -111.766 iterations 4
Cbc0038I Pass  26: suminf.    0.80398 (3) obj. -111.766 iterations 1
Cbc0038I Pass  27: suminf.    1.80876 (8) obj. -111.766 iterations 13
Cbc0038I Pass  28: suminf.    0.68269 (5) obj. -111.766 iterations 4
Cbc0038I Pass  29: suminf.    0.72017 (2) obj. -111.766 iterations 4
Cbc0038I Pass  30: suminf.    0.72017 (2) obj. -111.766 iterations 0
Cbc0038I Pass  31: suminf.    0.73773 (3) obj. -111.766 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -108.923 - took 0.01 seconds
Cbc0012I Integer solution of -108.9234 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 40 rows 43 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -118.1566 found by DiveCoefficient after 116 iterations and 0 nodes (0.10 seconds)
Cbc0031I 21 added rows had average density of 6.8571429
Cbc0013I At root node, 21 cuts changed objective from -137.3529 to -118.1566 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 153 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 76 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -118.1566, took 116 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

