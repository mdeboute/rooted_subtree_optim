Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 274 (-29) elements
Clp1000I sum of infeasibilities 3.68208e-05 - average 4.09121e-07, 4 fixed columns
Coin0506I Presolve 82 (-8) rows, 47 (-4) columns and 250 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 35.851926
Clp0000I Optimal - objective value 35.851926
Coin0511I After Postsolve, objective 35.851926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.851926
Clp0000I Optimal - objective value 35.851926
Clp0000I Optimal - objective value 35.851926
Coin0511I After Postsolve, objective 35.851926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.85192619 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 10.5153
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.3619 iterations 31
Cbc0038I Solution found of 18.3619
Cbc0038I Relaxing continuous gives 18.3619
Cbc0038I Rounding solution of -1.40206 is better than previous of 18.3619

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -1.40206 to -9.00427 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.6891
Cbc0038I Pass   2: suminf.    2.98612 (30) obj. -11.6891 iterations 29
Cbc0038I Pass   3: suminf.    2.97620 (31) obj. -11.6891 iterations 2
Cbc0038I Pass   4: suminf.    0.68095 (4) obj. -11.6891 iterations 41
Cbc0038I Pass   5: suminf.    0.17845 (3) obj. -11.6891 iterations 3
Cbc0038I Pass   6: suminf.    1.05660 (5) obj. -11.6891 iterations 8
Cbc0038I Pass   7: suminf.    0.82979 (5) obj. -11.6891 iterations 3
Cbc0038I Pass   8: suminf.    1.69035 (7) obj. -11.6891 iterations 7
Cbc0038I Pass   9: suminf.    1.38478 (6) obj. -11.6891 iterations 2
Cbc0038I Pass  10: suminf.    2.04838 (6) obj. -11.6891 iterations 9
Cbc0038I Pass  11: suminf.    1.29114 (6) obj. -11.6891 iterations 3
Cbc0038I Pass  12: suminf.    0.92342 (4) obj. -11.6891 iterations 6
Cbc0038I Pass  13: suminf.    1.91302 (5) obj. -11.6891 iterations 5
Cbc0038I Pass  14: suminf.    1.64050 (5) obj. -11.6891 iterations 3
Cbc0038I Pass  15: suminf.    0.98466 (4) obj. -11.6891 iterations 1
Cbc0038I Pass  16: suminf.    0.96682 (5) obj. -11.6891 iterations 2
Cbc0038I Pass  17: suminf.    2.06061 (6) obj. -11.6891 iterations 5
Cbc0038I Pass  18: suminf.    1.07672 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  19: suminf.    0.47192 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  20: suminf.    1.64050 (5) obj. -11.6891 iterations 7
Cbc0038I Pass  21: suminf.    0.98466 (4) obj. -11.6891 iterations 1
Cbc0038I Pass  22: suminf.    0.96682 (5) obj. -11.6891 iterations 2
Cbc0038I Pass  23: suminf.    2.06061 (6) obj. -11.6891 iterations 5
Cbc0038I Pass  24: suminf.    1.07672 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  25: suminf.    0.47192 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  26: suminf.    1.64050 (5) obj. -11.6891 iterations 7
Cbc0038I Pass  27: suminf.    0.98466 (4) obj. -11.6891 iterations 1
Cbc0038I Pass  28: suminf.    0.96682 (5) obj. -11.6891 iterations 2
Cbc0038I Pass  29: suminf.    2.06061 (6) obj. -11.6891 iterations 5
Cbc0038I Pass  30: suminf.    1.07672 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  31: suminf.    0.47192 (4) obj. -11.6891 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -9.00427 to -10.3622 (0.10 seconds)
Cbc0038I Round again with cutoff of -16.5217
Cbc0038I Pass  31: suminf.    4.25572 (30) obj. -16.5217 iterations 0
Cbc0038I Pass  32: suminf.    4.24159 (31) obj. -16.5217 iterations 2
Cbc0038I Pass  33: suminf.    1.42810 (7) obj. -16.5217 iterations 44
Cbc0038I Pass  34: suminf.    0.83447 (5) obj. -16.5217 iterations 8
Cbc0038I Pass  35: suminf.    2.82025 (7) obj. -16.5217 iterations 9
Cbc0038I Pass  36: suminf.    1.30401 (6) obj. -16.5217 iterations 3
Cbc0038I Pass  37: suminf.    1.30401 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  38: suminf.    2.58454 (7) obj. -16.5217 iterations 9
Cbc0038I Pass  39: suminf.    1.41116 (6) obj. -16.5217 iterations 3
Cbc0038I Pass  40: suminf.    1.41116 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  41: suminf.    1.56494 (5) obj. -16.5217 iterations 7
Cbc0038I Pass  42: suminf.    1.33824 (6) obj. -16.5217 iterations 2
Cbc0038I Pass  43: suminf.    1.33824 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  44: suminf.    2.16266 (5) obj. -16.5217 iterations 5
Cbc0038I Pass  45: suminf.    1.69530 (6) obj. -16.5217 iterations 5
Cbc0038I Pass  46: suminf.    1.69530 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  47: suminf.    2.03046 (6) obj. -16.5217 iterations 3
Cbc0038I Pass  48: suminf.    1.56494 (5) obj. -16.5217 iterations 2
Cbc0038I Pass  49: suminf.    1.33824 (6) obj. -16.5217 iterations 2
Cbc0038I Pass  50: suminf.    1.33824 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  51: suminf.    2.16266 (5) obj. -16.5217 iterations 5
Cbc0038I Pass  52: suminf.    1.69530 (6) obj. -16.5217 iterations 5
Cbc0038I Pass  53: suminf.    1.69530 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  54: suminf.    2.03046 (6) obj. -16.5217 iterations 3
Cbc0038I Pass  55: suminf.    1.56494 (5) obj. -16.5217 iterations 2
Cbc0038I Pass  56: suminf.    1.33824 (6) obj. -16.5217 iterations 2
Cbc0038I Pass  57: suminf.    1.33824 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  58: suminf.    2.16266 (5) obj. -16.5217 iterations 5
Cbc0038I Pass  59: suminf.    1.69530 (6) obj. -16.5217 iterations 5
Cbc0038I Pass  60: suminf.    1.69530 (6) obj. -16.5217 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -10.3622 - took 0.11 seconds
Cbc0012I Integer solution of -10.362241 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 65 rows 38 columns
Cbc0031I 23 added rows had average density of 35.217391
Cbc0013I At root node, 23 cuts changed objective from -35.851926 to -26.889983 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7639 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2068 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0010I After 11 nodes, 8 on tree, -10.362241 best solution, best possible -26.889983 (0.67 seconds)
Cbc0001I Search completed - best objective -10.362241, took 7230 iterations and 32 nodes (0.74 seconds)
Cbc0032I Strong branching done 530 times (6774 iterations), fathomed 3 nodes and fixed 20 variables
Cbc0035I Maximum depth 10, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-33) rows, 81 (-21) columns and 1029 (-549) elements
Clp1000I sum of infeasibilities 6.7769e-09 - average 9.54493e-11, 16 fixed columns
Coin0506I Presolve 56 (-15) rows, 62 (-19) columns and 660 (-369) elements
Clp0006I 0  Obj 39.858167 Dual inf 1.7875061 (62)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 3.9751677 - largest nonzero change 2.6665684e-05 ( 0.0015420975%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 50.65122
Clp0000I Optimal - objective value 50.65122
Coin0511I After Postsolve, objective 50.65122, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.65122
Clp0000I Optimal - objective value 50.65122
Clp0000I Optimal - objective value 50.65122
Clp0000I Optimal - objective value 50.65122
Coin0511I After Postsolve, objective 50.65122, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.65122048 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 81 columns (81 integer (81 of which binary)) and 1031 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.98771
Cbc0038I Pass   1: suminf.    3.27877 (22) obj. -41.196 iterations 9
Cbc0038I Pass   2: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass   3: suminf.    1.29447 (12) obj. -24.413 iterations 10
Cbc0038I Solution found of -5.00068
Cbc0038I Rounding solution of -6.84096 is better than previous of -5.00068

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 81 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -10.9173
Cbc0038I Pass   4: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass   5: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass   6: suminf.    0.43404 (2) obj. -10.9173 iterations 21
Cbc0038I Pass   7: suminf.    0.25964 (2) obj. -12.3125 iterations 1
Cbc0038I Pass   8: suminf.    0.26043 (1) obj. -10.9173 iterations 2
Cbc0038I Pass   9: suminf.    0.20408 (1) obj. -11.368 iterations 1
Cbc0038I Pass  10: suminf.    0.85412 (5) obj. -10.9173 iterations 22
Cbc0038I Pass  11: suminf.    0.56417 (3) obj. -11.953 iterations 8
Cbc0038I Pass  12: suminf.    0.87520 (6) obj. -10.9173 iterations 4
Cbc0038I Pass  13: suminf.    0.87520 (6) obj. -10.9173 iterations 0
Cbc0038I Pass  14: suminf.    0.89209 (3) obj. -10.9173 iterations 7
Cbc0038I Pass  15: suminf.    0.56417 (3) obj. -13.2127 iterations 1
Cbc0038I Pass  16: suminf.    0.51319 (3) obj. -10.9173 iterations 3
Cbc0038I Pass  17: suminf.    0.51046 (4) obj. -10.9173 iterations 1
Cbc0038I Pass  18: suminf.    1.38259 (5) obj. -10.9173 iterations 3
Cbc0038I Pass  19: suminf.    0.52501 (3) obj. -10.9855 iterations 3
Cbc0038I Pass  20: suminf.    1.91667 (9) obj. -10.9173 iterations 16
Cbc0038I Pass  21: suminf.    1.03122 (6) obj. -11.9507 iterations 8
Cbc0038I Pass  22: suminf.    1.31076 (5) obj. -10.9173 iterations 11
Cbc0038I Pass  23: suminf.    1.09789 (6) obj. -10.9173 iterations 3
Cbc0038I Pass  24: suminf.    1.19847 (4) obj. -10.9173 iterations 4
Cbc0038I Pass  25: suminf.    0.49511 (2) obj. -10.9173 iterations 2
Cbc0038I Pass  26: suminf.    0.33922 (2) obj. -12.0086 iterations 1
Cbc0038I Pass  27: suminf.    0.49511 (2) obj. -10.9173 iterations 1
Cbc0038I Pass  28: suminf.    2.06618 (11) obj. -10.9173 iterations 35
Cbc0038I Pass  29: suminf.    1.67028 (10) obj. -10.9173 iterations 6
Cbc0038I Pass  30: suminf.    0.55106 (3) obj. -10.9173 iterations 10
Cbc0038I Pass  31: suminf.    0.51165 (3) obj. -11.1931 iterations 1
Cbc0038I Pass  32: suminf.    0.49046 (3) obj. -10.9173 iterations 3
Cbc0038I Pass  33: suminf.    0.48312 (3) obj. -10.9173 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 81 columns, reduced to 15 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -5.00068 to -9.02581 (0.03 seconds)
Cbc0038I Round again with cutoff of -18.2545
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass  34: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass  35: suminf.    0.99926 (10) obj. -21.0045 iterations 12
Cbc0038I Pass  36: suminf.    0.47324 (3) obj. -18.2545 iterations 19
Cbc0038I Pass  37: suminf.    0.47324 (3) obj. -18.2545 iterations 0
Cbc0038I Pass  38: suminf.    0.95078 (3) obj. -18.2545 iterations 2
Cbc0038I Pass  39: suminf.    1.49802 (10) obj. -22.9459 iterations 11
Cbc0038I Pass  40: suminf.    1.49802 (10) obj. -22.9459 iterations 0
Cbc0038I Pass  41: suminf.    1.42273 (7) obj. -18.2545 iterations 13
Cbc0038I Pass  42: suminf.    1.20449 (6) obj. -20.9368 iterations 1
Cbc0038I Pass  43: suminf.    0.73823 (6) obj. -18.2545 iterations 2
Cbc0038I Pass  44: suminf.    1.20133 (4) obj. -18.2545 iterations 5
Cbc0038I Pass  45: suminf.    1.20133 (4) obj. -18.2545 iterations 1
Cbc0038I Pass  46: suminf.    1.21474 (4) obj. -18.2545 iterations 2
Cbc0038I Pass  47: suminf.    0.71216 (4) obj. -18.2545 iterations 1
Cbc0038I Pass  48: suminf.    2.27605 (13) obj. -24.0932 iterations 13
Cbc0038I Pass  49: suminf.    1.35804 (8) obj. -21.2304 iterations 5
Cbc0038I Pass  50: suminf.    1.23896 (7) obj. -18.2545 iterations 13
Cbc0038I Pass  51: suminf.    1.20133 (4) obj. -18.2545 iterations 3
Cbc0038I Pass  52: suminf.    1.21474 (4) obj. -18.2545 iterations 2
Cbc0038I Pass  53: suminf.    0.71216 (4) obj. -18.2545 iterations 1
Cbc0038I Pass  54: suminf.    1.20133 (4) obj. -18.2545 iterations 3
Cbc0038I Pass  55: suminf.    2.04028 (10) obj. -18.2545 iterations 23
Cbc0038I Pass  56: suminf.    1.43066 (9) obj. -18.2545 iterations 3
Cbc0038I Pass  57: suminf.    1.54407 (6) obj. -18.2545 iterations 12
Cbc0038I Pass  58: suminf.    1.06608 (5) obj. -18.9154 iterations 3
Cbc0038I Pass  59: suminf.    1.69823 (7) obj. -18.2545 iterations 5
Cbc0038I Pass  60: suminf.    1.27454 (5) obj. -18.4623 iterations 2
Cbc0038I Pass  61: suminf.    1.31833 (8) obj. -18.2545 iterations 19
Cbc0038I Pass  62: suminf.    1.17124 (6) obj. -18.2545 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -9.02581 - took 0.03 seconds
Cbc0012I Integer solution of -9.025811 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 71 rows 81 columns, reduced to 9 rows 12 columns
Cbc0031I 45 added rows had average density of 32.488889
Cbc0013I At root node, 45 cuts changed objective from -47.603259 to -16.40216 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8223 row cuts average 2.1 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1456 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 61 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 120 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1184 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 327 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.636 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.025811 best solution, best possible -16.40216 (1.69 seconds)
Cbc0016I Integer solution of -10.200141 found by strong branching after 4702 iterations and 13 nodes (1.91 seconds)
Cbc0016I Integer solution of -10.362241 found by strong branching after 4788 iterations and 20 nodes (1.92 seconds)
Cbc0001I Search completed - best objective -10.362241, took 4982 iterations and 26 nodes (1.93 seconds)
Cbc0032I Strong branching done 446 times (4961 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 9, 52 variables fixed on reduced cost
Total time (CPU seconds):       1.49   (Wallclock seconds):       1.94

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 274 (-29) elements
Clp1000I sum of infeasibilities 3.68208e-05 - average 4.09121e-07, 4 fixed columns
Coin0506I Presolve 82 (-8) rows, 47 (-4) columns and 250 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 35.851926
Clp0000I Optimal - objective value 35.851926
Coin0511I After Postsolve, objective 35.851926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.851926
Clp0000I Optimal - objective value 35.851926
Clp0000I Optimal - objective value 35.851926
Coin0511I After Postsolve, objective 35.851926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.85192619 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 10.5153
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.3619 iterations 31
Cbc0038I Solution found of 18.3619
Cbc0038I Relaxing continuous gives 18.3619
Cbc0038I Rounding solution of -1.40206 is better than previous of 18.3619

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -1.40206 to -9.00427 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.6891
Cbc0038I Pass   2: suminf.    2.98612 (30) obj. -11.6891 iterations 29
Cbc0038I Pass   3: suminf.    2.97620 (31) obj. -11.6891 iterations 2
Cbc0038I Pass   4: suminf.    0.68095 (4) obj. -11.6891 iterations 41
Cbc0038I Pass   5: suminf.    0.17845 (3) obj. -11.6891 iterations 3
Cbc0038I Pass   6: suminf.    1.05660 (5) obj. -11.6891 iterations 8
Cbc0038I Pass   7: suminf.    0.82979 (5) obj. -11.6891 iterations 3
Cbc0038I Pass   8: suminf.    1.69035 (7) obj. -11.6891 iterations 7
Cbc0038I Pass   9: suminf.    1.38478 (6) obj. -11.6891 iterations 2
Cbc0038I Pass  10: suminf.    2.04838 (6) obj. -11.6891 iterations 9
Cbc0038I Pass  11: suminf.    1.29114 (6) obj. -11.6891 iterations 3
Cbc0038I Pass  12: suminf.    0.92342 (4) obj. -11.6891 iterations 6
Cbc0038I Pass  13: suminf.    1.91302 (5) obj. -11.6891 iterations 5
Cbc0038I Pass  14: suminf.    1.64050 (5) obj. -11.6891 iterations 3
Cbc0038I Pass  15: suminf.    0.98466 (4) obj. -11.6891 iterations 1
Cbc0038I Pass  16: suminf.    0.96682 (5) obj. -11.6891 iterations 2
Cbc0038I Pass  17: suminf.    2.06061 (6) obj. -11.6891 iterations 5
Cbc0038I Pass  18: suminf.    1.07672 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  19: suminf.    0.47192 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  20: suminf.    1.64050 (5) obj. -11.6891 iterations 7
Cbc0038I Pass  21: suminf.    0.98466 (4) obj. -11.6891 iterations 1
Cbc0038I Pass  22: suminf.    0.96682 (5) obj. -11.6891 iterations 2
Cbc0038I Pass  23: suminf.    2.06061 (6) obj. -11.6891 iterations 5
Cbc0038I Pass  24: suminf.    1.07672 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  25: suminf.    0.47192 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  26: suminf.    1.64050 (5) obj. -11.6891 iterations 7
Cbc0038I Pass  27: suminf.    0.98466 (4) obj. -11.6891 iterations 1
Cbc0038I Pass  28: suminf.    0.96682 (5) obj. -11.6891 iterations 2
Cbc0038I Pass  29: suminf.    2.06061 (6) obj. -11.6891 iterations 5
Cbc0038I Pass  30: suminf.    1.07672 (4) obj. -11.6891 iterations 2
Cbc0038I Pass  31: suminf.    0.47192 (4) obj. -11.6891 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -9.00427 to -10.3622 (0.11 seconds)
Cbc0038I Round again with cutoff of -16.5217
Cbc0038I Pass  31: suminf.    4.25572 (30) obj. -16.5217 iterations 0
Cbc0038I Pass  32: suminf.    4.24159 (31) obj. -16.5217 iterations 2
Cbc0038I Pass  33: suminf.    1.42810 (7) obj. -16.5217 iterations 44
Cbc0038I Pass  34: suminf.    0.83447 (5) obj. -16.5217 iterations 8
Cbc0038I Pass  35: suminf.    2.82025 (7) obj. -16.5217 iterations 9
Cbc0038I Pass  36: suminf.    1.30401 (6) obj. -16.5217 iterations 3
Cbc0038I Pass  37: suminf.    1.30401 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  38: suminf.    2.58454 (7) obj. -16.5217 iterations 9
Cbc0038I Pass  39: suminf.    1.41116 (6) obj. -16.5217 iterations 3
Cbc0038I Pass  40: suminf.    1.41116 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  41: suminf.    1.56494 (5) obj. -16.5217 iterations 7
Cbc0038I Pass  42: suminf.    1.33824 (6) obj. -16.5217 iterations 2
Cbc0038I Pass  43: suminf.    1.33824 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  44: suminf.    2.16266 (5) obj. -16.5217 iterations 5
Cbc0038I Pass  45: suminf.    1.69530 (6) obj. -16.5217 iterations 5
Cbc0038I Pass  46: suminf.    1.69530 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  47: suminf.    2.03046 (6) obj. -16.5217 iterations 3
Cbc0038I Pass  48: suminf.    1.56494 (5) obj. -16.5217 iterations 2
Cbc0038I Pass  49: suminf.    1.33824 (6) obj. -16.5217 iterations 2
Cbc0038I Pass  50: suminf.    1.33824 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  51: suminf.    2.16266 (5) obj. -16.5217 iterations 5
Cbc0038I Pass  52: suminf.    1.69530 (6) obj. -16.5217 iterations 5
Cbc0038I Pass  53: suminf.    1.69530 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  54: suminf.    2.03046 (6) obj. -16.5217 iterations 3
Cbc0038I Pass  55: suminf.    1.56494 (5) obj. -16.5217 iterations 2
Cbc0038I Pass  56: suminf.    1.33824 (6) obj. -16.5217 iterations 2
Cbc0038I Pass  57: suminf.    1.33824 (6) obj. -16.5217 iterations 0
Cbc0038I Pass  58: suminf.    2.16266 (5) obj. -16.5217 iterations 5
Cbc0038I Pass  59: suminf.    1.69530 (6) obj. -16.5217 iterations 5
Cbc0038I Pass  60: suminf.    1.69530 (6) obj. -16.5217 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -10.3622 - took 0.12 seconds
Cbc0012I Integer solution of -10.362241 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 65 rows 38 columns
Cbc0031I 23 added rows had average density of 35.217391
Cbc0013I At root node, 23 cuts changed objective from -35.851926 to -26.889983 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7639 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2068 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -10.362241 best solution, best possible -26.889983 (0.70 seconds)
Cbc0001I Search completed - best objective -10.362241, took 7230 iterations and 32 nodes (0.83 seconds)
Cbc0032I Strong branching done 530 times (6774 iterations), fathomed 3 nodes and fixed 20 variables
Cbc0035I Maximum depth 10, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.80   (Wallclock seconds):       0.84

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-34) rows, 81 (-22) columns and 1029 (-550) elements
Clp1000I sum of infeasibilities 6.7769e-09 - average 9.54493e-11, 16 fixed columns
Coin0506I Presolve 56 (-15) rows, 62 (-19) columns and 660 (-369) elements
Clp0006I 0  Obj 39.858167 Dual inf 1.7875061 (62)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 3.9751677 - largest nonzero change 2.6665684e-05 ( 0.0015420975%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 50.65122
Clp0000I Optimal - objective value 50.65122
Coin0511I After Postsolve, objective 50.65122, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.65122
Clp0000I Optimal - objective value 50.65122
Clp0000I Optimal - objective value 50.65122
Clp0000I Optimal - objective value 50.65122
Coin0511I After Postsolve, objective 50.65122, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.65122048 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 81 columns (81 integer (81 of which binary)) and 1031 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.98771
Cbc0038I Pass   1: suminf.    3.27877 (22) obj. -41.196 iterations 9
Cbc0038I Pass   2: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass   3: suminf.    1.29447 (12) obj. -24.413 iterations 10
Cbc0038I Solution found of -5.00068
Cbc0038I Rounding solution of -6.84096 is better than previous of -5.00068

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 81 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -10.9173
Cbc0038I Pass   4: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass   5: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass   6: suminf.    0.43404 (2) obj. -10.9173 iterations 21
Cbc0038I Pass   7: suminf.    0.25964 (2) obj. -12.3125 iterations 1
Cbc0038I Pass   8: suminf.    0.26043 (1) obj. -10.9173 iterations 2
Cbc0038I Pass   9: suminf.    0.20408 (1) obj. -11.368 iterations 1
Cbc0038I Pass  10: suminf.    0.85412 (5) obj. -10.9173 iterations 22
Cbc0038I Pass  11: suminf.    0.56417 (3) obj. -11.953 iterations 8
Cbc0038I Pass  12: suminf.    0.87520 (6) obj. -10.9173 iterations 4
Cbc0038I Pass  13: suminf.    0.87520 (6) obj. -10.9173 iterations 0
Cbc0038I Pass  14: suminf.    0.89209 (3) obj. -10.9173 iterations 7
Cbc0038I Pass  15: suminf.    0.56417 (3) obj. -13.2127 iterations 1
Cbc0038I Pass  16: suminf.    0.51319 (3) obj. -10.9173 iterations 3
Cbc0038I Pass  17: suminf.    0.51046 (4) obj. -10.9173 iterations 1
Cbc0038I Pass  18: suminf.    1.38259 (5) obj. -10.9173 iterations 3
Cbc0038I Pass  19: suminf.    0.52501 (3) obj. -10.9855 iterations 3
Cbc0038I Pass  20: suminf.    1.91667 (9) obj. -10.9173 iterations 16
Cbc0038I Pass  21: suminf.    1.03122 (6) obj. -11.9507 iterations 8
Cbc0038I Pass  22: suminf.    1.31076 (5) obj. -10.9173 iterations 11
Cbc0038I Pass  23: suminf.    1.09789 (6) obj. -10.9173 iterations 3
Cbc0038I Pass  24: suminf.    1.19847 (4) obj. -10.9173 iterations 4
Cbc0038I Pass  25: suminf.    0.49511 (2) obj. -10.9173 iterations 2
Cbc0038I Pass  26: suminf.    0.33922 (2) obj. -12.0086 iterations 1
Cbc0038I Pass  27: suminf.    0.49511 (2) obj. -10.9173 iterations 1
Cbc0038I Pass  28: suminf.    2.06618 (11) obj. -10.9173 iterations 35
Cbc0038I Pass  29: suminf.    1.67028 (10) obj. -10.9173 iterations 6
Cbc0038I Pass  30: suminf.    0.55106 (3) obj. -10.9173 iterations 10
Cbc0038I Pass  31: suminf.    0.51165 (3) obj. -11.1931 iterations 1
Cbc0038I Pass  32: suminf.    0.49046 (3) obj. -10.9173 iterations 3
Cbc0038I Pass  33: suminf.    0.48312 (3) obj. -10.9173 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 81 columns, reduced to 15 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -5.00068 to -9.02581 (0.03 seconds)
Cbc0038I Round again with cutoff of -18.2545
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass  34: suminf.    3.27877 (22) obj. -41.196 iterations 0
Cbc0038I Pass  35: suminf.    0.99926 (10) obj. -21.0045 iterations 12
Cbc0038I Pass  36: suminf.    0.47324 (3) obj. -18.2545 iterations 19
Cbc0038I Pass  37: suminf.    0.47324 (3) obj. -18.2545 iterations 0
Cbc0038I Pass  38: suminf.    0.95078 (3) obj. -18.2545 iterations 2
Cbc0038I Pass  39: suminf.    1.49802 (10) obj. -22.9459 iterations 11
Cbc0038I Pass  40: suminf.    1.49802 (10) obj. -22.9459 iterations 0
Cbc0038I Pass  41: suminf.    1.42273 (7) obj. -18.2545 iterations 13
Cbc0038I Pass  42: suminf.    1.20449 (6) obj. -20.9368 iterations 1
Cbc0038I Pass  43: suminf.    0.73823 (6) obj. -18.2545 iterations 2
Cbc0038I Pass  44: suminf.    1.20133 (4) obj. -18.2545 iterations 5
Cbc0038I Pass  45: suminf.    1.20133 (4) obj. -18.2545 iterations 1
Cbc0038I Pass  46: suminf.    1.21474 (4) obj. -18.2545 iterations 2
Cbc0038I Pass  47: suminf.    0.71216 (4) obj. -18.2545 iterations 1
Cbc0038I Pass  48: suminf.    2.27605 (13) obj. -24.0932 iterations 13
Cbc0038I Pass  49: suminf.    1.35804 (8) obj. -21.2304 iterations 5
Cbc0038I Pass  50: suminf.    1.23896 (7) obj. -18.2545 iterations 13
Cbc0038I Pass  51: suminf.    1.20133 (4) obj. -18.2545 iterations 3
Cbc0038I Pass  52: suminf.    1.21474 (4) obj. -18.2545 iterations 2
Cbc0038I Pass  53: suminf.    0.71216 (4) obj. -18.2545 iterations 1
Cbc0038I Pass  54: suminf.    1.20133 (4) obj. -18.2545 iterations 3
Cbc0038I Pass  55: suminf.    2.04028 (10) obj. -18.2545 iterations 23
Cbc0038I Pass  56: suminf.    1.43066 (9) obj. -18.2545 iterations 3
Cbc0038I Pass  57: suminf.    1.54407 (6) obj. -18.2545 iterations 12
Cbc0038I Pass  58: suminf.    1.06608 (5) obj. -18.9154 iterations 3
Cbc0038I Pass  59: suminf.    1.69823 (7) obj. -18.2545 iterations 5
Cbc0038I Pass  60: suminf.    1.27454 (5) obj. -18.4623 iterations 2
Cbc0038I Pass  61: suminf.    1.31833 (8) obj. -18.2545 iterations 19
Cbc0038I Pass  62: suminf.    1.17124 (6) obj. -18.2545 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -9.02581 - took 0.03 seconds
Cbc0012I Integer solution of -9.025811 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 71 rows 81 columns, reduced to 9 rows 12 columns
Cbc0031I 45 added rows had average density of 32.488889
Cbc0013I At root node, 45 cuts changed objective from -47.603259 to -16.40216 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8223 row cuts average 2.1 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1456 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 61 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 120 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1184 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 327 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.688 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.025811 best solution, best possible -16.40216 (1.88 seconds)
Cbc0016I Integer solution of -10.200141 found by strong branching after 4702 iterations and 13 nodes (2.12 seconds)
Cbc0016I Integer solution of -10.362241 found by strong branching after 4788 iterations and 20 nodes (2.13 seconds)
Cbc0001I Search completed - best objective -10.362241, took 4982 iterations and 26 nodes (2.14 seconds)
Cbc0032I Strong branching done 446 times (4961 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 9, 52 variables fixed on reduced cost
Total time (CPU seconds):       1.61   (Wallclock seconds):       2.15

