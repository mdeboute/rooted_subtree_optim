Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 19 (-6) columns and 77 (-58) elements
Clp1000I sum of infeasibilities 0 - average 0, 4 fixed columns
Coin0506I Presolve 16 (-15) rows, 15 (-4) columns and 44 (-33) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Coin0511I After Postsolve, objective 292.07816, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Coin0511I After Postsolve, objective 292.07816, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 292.0781602 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.28216
Cbc0038I Pass   1: suminf.    0.02073 (1) obj. -215.326 iterations 4
Cbc0038I Solution found of -57.3229
Cbc0038I Relaxing continuous gives -57.3229
Cbc0038I Rounding solution of -91.4695 is better than previous of -57.3229

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -91.4695 to -110.435 (0.00 seconds)
Cbc0038I Round again with cutoff of -128.599
Cbc0038I Pass   2: suminf.    0.02073 (1) obj. -215.326 iterations 0
Cbc0038I Pass   3: suminf.    0.44176 (1) obj. -128.599 iterations 1
Cbc0038I Pass   4: suminf.    0.18651 (1) obj. -128.599 iterations 3
Cbc0038I Pass   5: suminf.    0.18651 (1) obj. -128.599 iterations 0
Cbc0038I Pass   6: suminf.    0.00610 (1) obj. -199.457 iterations 2
Cbc0038I Pass   7: suminf.    0.12805 (1) obj. -227.072 iterations 4
Cbc0038I Pass   8: suminf.    0.26164 (1) obj. -128.599 iterations 1
Cbc0038I Pass   9: suminf.    0.12805 (1) obj. -227.072 iterations 1
Cbc0038I Pass  10: suminf.    0.47674 (2) obj. -128.599 iterations 6
Cbc0038I Pass  11: suminf.    0.36354 (1) obj. -128.599 iterations 2
Cbc0038I Pass  12: suminf.    0.18902 (1) obj. -200.793 iterations 1
Cbc0038I Pass  13: suminf.    0.18902 (1) obj. -200.793 iterations 0
Cbc0038I Pass  14: suminf.    0.18902 (1) obj. -200.793 iterations 0
Cbc0038I Pass  15: suminf.    0.38293 (1) obj. -158.082 iterations 5
Cbc0038I Pass  16: suminf.    0.38293 (1) obj. -158.082 iterations 0
Cbc0038I Pass  17: suminf.    0.43435 (1) obj. -128.599 iterations 1
Cbc0038I Pass  18: suminf.    0.31124 (1) obj. -128.599 iterations 10
Cbc0038I Pass  19: suminf.    0.37463 (1) obj. -138.829 iterations 1
Cbc0038I Pass  20: suminf.    0.31124 (1) obj. -128.599 iterations 1
Cbc0038I Pass  21: suminf.    0.31953 (1) obj. -128.599 iterations 2
Cbc0038I Pass  22: suminf.    0.31953 (1) obj. -128.599 iterations 1
Cbc0038I Pass  23: suminf.    0.47220 (1) obj. -153.232 iterations 1
Cbc0038I Pass  24: suminf.    0.49854 (1) obj. -156.356 iterations 2
Cbc0038I Pass  25: suminf.    0.49854 (1) obj. -156.356 iterations 1
Cbc0038I Pass  26: suminf.    0.32943 (1) obj. -128.599 iterations 1
Cbc0038I Pass  27: suminf.    0.40356 (1) obj. -128.599 iterations 2
Cbc0038I Pass  28: suminf.    0.42829 (1) obj. -132.59 iterations 1
Cbc0038I Pass  29: suminf.    0.40356 (1) obj. -128.599 iterations 1
Cbc0038I Pass  30: suminf.    0.67338 (2) obj. -128.599 iterations 10
Cbc0038I Pass  31: suminf.    0.67338 (2) obj. -128.599 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -110.435 to -136.269 (0.01 seconds)
Cbc0038I Round again with cutoff of -167.431
Cbc0038I Pass  31: suminf.    0.02073 (1) obj. -215.326 iterations 0
Cbc0038I Pass  32: suminf.    0.31757 (1) obj. -167.431 iterations 1
Cbc0038I Pass  33: suminf.    0.05000 (1) obj. -212.202 iterations 3
Cbc0038I Pass  34: suminf.    0.05000 (1) obj. -212.202 iterations 1
Cbc0038I Pass  35: suminf.    0.32748 (1) obj. -167.431 iterations 1
Cbc0038I Pass  36: suminf.    0.40379 (1) obj. -167.431 iterations 8
Cbc0038I Pass  37: suminf.    0.35707 (1) obj. -174.969 iterations 1
Cbc0038I Pass  38: suminf.    0.40379 (1) obj. -167.431 iterations 1
Cbc0038I Pass  39: suminf.    0.44239 (2) obj. -167.431 iterations 15
Cbc0038I Pass  40: suminf.    0.44239 (2) obj. -167.431 iterations 1
Cbc0038I Pass  41: suminf.    0.66418 (2) obj. -167.431 iterations 2
Cbc0038I Pass  42: suminf.    0.43106 (2) obj. -167.431 iterations 3
Cbc0038I Pass  43: suminf.    0.42803 (2) obj. -167.431 iterations 1
Cbc0038I Pass  44: suminf.    0.39398 (1) obj. -167.431 iterations 2
Cbc0038I Pass  45: suminf.    0.30220 (1) obj. -182.24 iterations 1
Cbc0038I Pass  46: suminf.    0.34610 (1) obj. -178.278 iterations 7
Cbc0038I Pass  47: suminf.    0.34610 (1) obj. -178.278 iterations 2
Cbc0038I Pass  48: suminf.    0.41332 (1) obj. -167.431 iterations 1
Cbc0038I Pass  49: suminf.    0.41098 (1) obj. -182.13 iterations 6
Cbc0038I Pass  50: suminf.    0.49792 (1) obj. -167.431 iterations 1
Cbc0038I Pass  51: suminf.    0.41098 (1) obj. -182.13 iterations 1
Cbc0038I Pass  52: suminf.    0.71720 (3) obj. -167.431 iterations 11
Cbc0038I Pass  53: suminf.    0.39089 (2) obj. -167.431 iterations 2
Cbc0038I Pass  54: suminf.    0.34493 (1) obj. -167.431 iterations 2
Cbc0038I Pass  55: suminf.    0.23780 (1) obj. -233.586 iterations 2
Cbc0038I Pass  56: suminf.    0.26707 (1) obj. -192.632 iterations 3
Cbc0038I Pass  57: suminf.    0.26707 (1) obj. -192.632 iterations 0
Cbc0038I Pass  58: suminf.    0.42327 (1) obj. -167.431 iterations 1
Cbc0038I Pass  59: suminf.    1.33792 (4) obj. -167.431 iterations 8
Cbc0038I Pass  60: suminf.    0.92408 (3) obj. -167.431 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -136.269 - took 0.03 seconds
Cbc0012I Integer solution of -136.26924 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 13 rows 10 columns
Cbc0012I Integer solution of -148.5761 found by DiveCoefficient after 120 iterations and 0 nodes (0.03 seconds)
Cbc0031I 14 added rows had average density of 3.6428571
Cbc0013I At root node, 14 cuts changed objective from -292.07816 to -148.5761 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 182 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 77 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -148.5761, took 120 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-8) rows, 44 (-2) columns and 349 (-39) elements
Clp1000I sum of infeasibilities 0 - average 0, 40 fixed columns
Coin0506I Presolve 2 (-38) rows, 4 (-40) columns and 8 (-341) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 456.31641
Clp0000I Optimal - objective value 456.31641
Coin0511I After Postsolve, objective 456.31641, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0322007 - largest nonzero change 2.9522154e-05 ( 0.0029522154%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 540.91505
Clp0000I Optimal - objective value 540.91505
Clp0000I Optimal - objective value 540.91505
Coin0511I After Postsolve, objective 540.91505, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 540.915051 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 43 columns (43 integer (43 of which binary)) and 346 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.70956
Cbc0038I Solution found of -432.435
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 43 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -437.984
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03439 (1) obj. -437.984 iterations 24
Cbc0038I Pass   2: suminf.    0.19878 (1) obj. -464.508 iterations 1
Cbc0038I Pass   3: suminf.    1.36466 (5) obj. -437.984 iterations 7
Cbc0038I Solution found of -439.763
Cbc0038I Rounding solution of -443.771 is better than previous of -439.763

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -452.601
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.12499 (1) obj. -452.601 iterations 0
Cbc0038I Pass   5: suminf.    0.19878 (1) obj. -464.508 iterations 1
Cbc0038I Pass   6: suminf.    2.37077 (7) obj. -452.601 iterations 11
Cbc0038I Pass   7: suminf.    0.94985 (3) obj. -452.601 iterations 8
Cbc0038I Pass   8: suminf.    0.60528 (2) obj. -458.94 iterations 5
Cbc0038I Pass   9: suminf.    0.46121 (2) obj. -452.601 iterations 2
Cbc0038I Pass  10: suminf.    1.12595 (5) obj. -452.601 iterations 6
Cbc0038I Pass  11: suminf.    0.84292 (3) obj. -452.601 iterations 3
Cbc0038I Pass  12: suminf.    0.94570 (3) obj. -454.143 iterations 5
Cbc0038I Pass  13: suminf.    2.98213 (8) obj. -452.601 iterations 15
Cbc0038I Pass  14: suminf.    1.31949 (5) obj. -452.601 iterations 10
Cbc0038I Pass  15: suminf.    1.59613 (5) obj. -452.601 iterations 3
Cbc0038I Pass  16: suminf.    2.80957 (9) obj. -452.601 iterations 9
Cbc0038I Pass  17: suminf.    1.04640 (4) obj. -452.601 iterations 5
Cbc0038I Pass  18: suminf.    0.84292 (3) obj. -452.601 iterations 4
Cbc0038I Pass  19: suminf.    0.94570 (3) obj. -454.143 iterations 5
Cbc0038I Pass  20: suminf.    3.60895 (14) obj. -452.601 iterations 17
Cbc0038I Pass  21: suminf.    3.38076 (11) obj. -452.601 iterations 4
Cbc0038I Pass  22: suminf.    3.38076 (11) obj. -452.601 iterations 0
Cbc0038I Pass  23: suminf.    3.27074 (10) obj. -452.601 iterations 4
Cbc0038I Pass  24: suminf.    1.57359 (5) obj. -452.601 iterations 3
Cbc0038I Pass  25: suminf.    1.65949 (6) obj. -452.601 iterations 3
Cbc0038I Pass  26: suminf.    1.65949 (6) obj. -452.601 iterations 0
Cbc0038I Pass  27: suminf.    1.75394 (6) obj. -452.601 iterations 4
Cbc0038I Pass  28: suminf.    1.99428 (8) obj. -452.601 iterations 13
Cbc0038I Pass  29: suminf.    1.22775 (4) obj. -452.601 iterations 9
Cbc0038I Pass  30: suminf.    0.49562 (2) obj. -452.601 iterations 3
Cbc0038I Pass  31: suminf.    0.56870 (2) obj. -455.817 iterations 4
Cbc0038I Pass  32: suminf.    0.78904 (4) obj. -452.601 iterations 5
Cbc0038I Pass  33: suminf.    0.10776 (1) obj. -452.601 iterations 3
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 43 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -463.197
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  33: suminf.    0.19065 (1) obj. -463.197 iterations 0
Cbc0038I Pass  34: suminf.    0.19878 (1) obj. -464.508 iterations 1
Cbc0038I Pass  35: suminf.    1.31699 (6) obj. -463.197 iterations 10
Cbc0038I Pass  36: suminf.    0.47660 (3) obj. -463.197 iterations 11
Cbc0038I Pass  37: suminf.    0.71674 (3) obj. -463.197 iterations 4
Cbc0038I Pass  38: suminf.    2.51763 (10) obj. -463.197 iterations 12
Cbc0038I Pass  39: suminf.    1.62154 (8) obj. -463.197 iterations 2
Cbc0038I Pass  40: suminf.    1.68810 (7) obj. -463.197 iterations 10
Cbc0038I Pass  41: suminf.    0.70159 (4) obj. -463.197 iterations 12
Cbc0038I Pass  42: suminf.    0.85630 (4) obj. -463.197 iterations 4
Cbc0038I Pass  43: suminf.    1.54697 (8) obj. -463.197 iterations 9
Cbc0038I Pass  44: suminf.    0.85930 (5) obj. -463.197 iterations 7
Cbc0038I Pass  45: suminf.    0.56368 (4) obj. -463.197 iterations 10
Cbc0038I Pass  46: suminf.    0.49613 (4) obj. -463.197 iterations 2
Cbc0038I Pass  47: suminf.    0.58780 (3) obj. -463.197 iterations 7
Cbc0038I Pass  48: suminf.    0.22931 (2) obj. -463.197 iterations 6
Cbc0038I Pass  49: suminf.    0.38261 (2) obj. -465.496 iterations 5
Cbc0038I Pass  50: suminf.    1.22371 (6) obj. -463.197 iterations 7
Cbc0038I Pass  51: suminf.    1.11070 (6) obj. -463.197 iterations 9
Cbc0038I Pass  52: suminf.    1.06626 (5) obj. -463.197 iterations 2
Cbc0038I Pass  53: suminf.    1.13822 (5) obj. -463.197 iterations 5
Cbc0038I Pass  54: suminf.    2.03638 (10) obj. -463.197 iterations 12
Cbc0038I Pass  55: suminf.    1.26292 (6) obj. -463.197 iterations 15
Cbc0038I Pass  56: suminf.    1.48688 (6) obj. -463.197 iterations 3
Cbc0038I Pass  57: suminf.    1.26901 (7) obj. -463.197 iterations 6
Cbc0038I Pass  58: suminf.    1.42383 (5) obj. -463.197 iterations 10
Cbc0038I Pass  59: suminf.    0.19065 (1) obj. -463.197 iterations 7
Cbc0038I Pass  60: suminf.    0.19878 (1) obj. -464.508 iterations 1
Cbc0038I Pass  61: suminf.    2.37958 (10) obj. -463.197 iterations 11
Cbc0038I Pass  62: suminf.    1.73669 (8) obj. -463.197 iterations 8
Cbc0038I Rounding solution of -444.412 is better than previous of -443.771

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 43 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -470.613
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 5
Cbc0038I Pass  62: suminf.    0.68026 (4) obj. -470.613 iterations 6
Cbc0038I Pass  63: suminf.    0.68026 (4) obj. -470.613 iterations 0
Cbc0038I Pass  64: suminf.    1.60494 (7) obj. -470.613 iterations 5
Cbc0038I Pass  65: suminf.    1.44725 (8) obj. -470.613 iterations 11
Cbc0038I Pass  66: suminf.    1.02026 (6) obj. -470.613 iterations 5
Cbc0038I Pass  67: suminf.    1.40088 (6) obj. -470.613 iterations 6
Cbc0038I Pass  68: suminf.    1.40534 (7) obj. -470.613 iterations 7
Cbc0038I Pass  69: suminf.    1.48030 (7) obj. -470.613 iterations 5
Cbc0038I Pass  70: suminf.    1.89390 (7) obj. -470.613 iterations 8
Cbc0038I Pass  71: suminf.    1.63993 (6) obj. -470.613 iterations 2
Cbc0038I Pass  72: suminf.    1.69165 (6) obj. -470.613 iterations 6
Cbc0038I Pass  73: suminf.    4.50719 (12) obj. -470.613 iterations 11
Cbc0038I Pass  74: suminf.    2.35099 (9) obj. -470.613 iterations 6
Cbc0038I Pass  75: suminf.    2.21687 (7) obj. -470.613 iterations 2
Cbc0038I Pass  76: suminf.    2.11161 (7) obj. -470.613 iterations 2
Cbc0038I Pass  77: suminf.    1.25437 (5) obj. -470.613 iterations 5
Cbc0038I Pass  78: suminf.    1.29364 (5) obj. -470.613 iterations 7
Cbc0038I Pass  79: suminf.    1.15118 (5) obj. -470.613 iterations 7
Cbc0038I Pass  80: suminf.    0.68026 (4) obj. -470.613 iterations 3
Cbc0038I Pass  81: suminf.    0.68026 (4) obj. -470.613 iterations 0
Cbc0038I Pass  82: suminf.    3.52902 (12) obj. -470.613 iterations 11
Cbc0038I Pass  83: suminf.    1.70015 (7) obj. -470.613 iterations 11
Cbc0038I Pass  84: suminf.    2.03891 (7) obj. -470.613 iterations 5
Cbc0038I Pass  85: suminf.    2.13983 (10) obj. -470.613 iterations 5
Cbc0038I Pass  86: suminf.    1.94773 (9) obj. -470.613 iterations 3
Cbc0038I Pass  87: suminf.    1.48200 (7) obj. -470.613 iterations 5
Cbc0038I Pass  88: suminf.    0.93068 (5) obj. -470.613 iterations 5
Cbc0038I Pass  89: suminf.    0.94413 (5) obj. -470.613 iterations 7
Cbc0038I Pass  90: suminf.    1.78154 (11) obj. -470.613 iterations 9
Cbc0038I Pass  91: suminf.    1.36251 (10) obj. -470.613 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -444.412 - took 0.03 seconds
Cbc0012I Integer solution of -444.41166 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -448.38303 to -448.38303 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -444.4116599999999, took 18 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 19 (-6) columns and 77 (-58) elements
Clp1000I sum of infeasibilities 0 - average 0, 4 fixed columns
Coin0506I Presolve 16 (-15) rows, 15 (-4) columns and 44 (-33) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Coin0511I After Postsolve, objective 292.07816, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Coin0511I After Postsolve, objective 292.07816, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 292.0781602 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.28216
Cbc0038I Pass   1: suminf.    0.02073 (1) obj. -215.326 iterations 4
Cbc0038I Solution found of -57.3229
Cbc0038I Relaxing continuous gives -57.3229
Cbc0038I Rounding solution of -91.4695 is better than previous of -57.3229

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -91.4695 to -110.435 (0.01 seconds)
Cbc0038I Round again with cutoff of -128.599
Cbc0038I Pass   2: suminf.    0.02073 (1) obj. -215.326 iterations 0
Cbc0038I Pass   3: suminf.    0.44176 (1) obj. -128.599 iterations 1
Cbc0038I Pass   4: suminf.    0.18651 (1) obj. -128.599 iterations 3
Cbc0038I Pass   5: suminf.    0.18651 (1) obj. -128.599 iterations 0
Cbc0038I Pass   6: suminf.    0.00610 (1) obj. -199.457 iterations 2
Cbc0038I Pass   7: suminf.    0.12805 (1) obj. -227.072 iterations 4
Cbc0038I Pass   8: suminf.    0.26164 (1) obj. -128.599 iterations 1
Cbc0038I Pass   9: suminf.    0.12805 (1) obj. -227.072 iterations 1
Cbc0038I Pass  10: suminf.    0.47674 (2) obj. -128.599 iterations 6
Cbc0038I Pass  11: suminf.    0.36354 (1) obj. -128.599 iterations 2
Cbc0038I Pass  12: suminf.    0.18902 (1) obj. -200.793 iterations 1
Cbc0038I Pass  13: suminf.    0.18902 (1) obj. -200.793 iterations 0
Cbc0038I Pass  14: suminf.    0.18902 (1) obj. -200.793 iterations 0
Cbc0038I Pass  15: suminf.    0.38293 (1) obj. -158.082 iterations 5
Cbc0038I Pass  16: suminf.    0.38293 (1) obj. -158.082 iterations 0
Cbc0038I Pass  17: suminf.    0.43435 (1) obj. -128.599 iterations 1
Cbc0038I Pass  18: suminf.    0.31124 (1) obj. -128.599 iterations 10
Cbc0038I Pass  19: suminf.    0.37463 (1) obj. -138.829 iterations 1
Cbc0038I Pass  20: suminf.    0.31124 (1) obj. -128.599 iterations 1
Cbc0038I Pass  21: suminf.    0.31953 (1) obj. -128.599 iterations 2
Cbc0038I Pass  22: suminf.    0.31953 (1) obj. -128.599 iterations 1
Cbc0038I Pass  23: suminf.    0.47220 (1) obj. -153.232 iterations 1
Cbc0038I Pass  24: suminf.    0.49854 (1) obj. -156.356 iterations 2
Cbc0038I Pass  25: suminf.    0.49854 (1) obj. -156.356 iterations 1
Cbc0038I Pass  26: suminf.    0.32943 (1) obj. -128.599 iterations 1
Cbc0038I Pass  27: suminf.    0.40356 (1) obj. -128.599 iterations 2
Cbc0038I Pass  28: suminf.    0.42829 (1) obj. -132.59 iterations 1
Cbc0038I Pass  29: suminf.    0.40356 (1) obj. -128.599 iterations 1
Cbc0038I Pass  30: suminf.    0.67338 (2) obj. -128.599 iterations 10
Cbc0038I Pass  31: suminf.    0.67338 (2) obj. -128.599 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -110.435 to -136.269 (0.02 seconds)
Cbc0038I Round again with cutoff of -167.431
Cbc0038I Pass  31: suminf.    0.02073 (1) obj. -215.326 iterations 0
Cbc0038I Pass  32: suminf.    0.31757 (1) obj. -167.431 iterations 1
Cbc0038I Pass  33: suminf.    0.05000 (1) obj. -212.202 iterations 3
Cbc0038I Pass  34: suminf.    0.05000 (1) obj. -212.202 iterations 1
Cbc0038I Pass  35: suminf.    0.32748 (1) obj. -167.431 iterations 1
Cbc0038I Pass  36: suminf.    0.40379 (1) obj. -167.431 iterations 8
Cbc0038I Pass  37: suminf.    0.35707 (1) obj. -174.969 iterations 1
Cbc0038I Pass  38: suminf.    0.40379 (1) obj. -167.431 iterations 1
Cbc0038I Pass  39: suminf.    0.44239 (2) obj. -167.431 iterations 15
Cbc0038I Pass  40: suminf.    0.44239 (2) obj. -167.431 iterations 1
Cbc0038I Pass  41: suminf.    0.66418 (2) obj. -167.431 iterations 2
Cbc0038I Pass  42: suminf.    0.43106 (2) obj. -167.431 iterations 3
Cbc0038I Pass  43: suminf.    0.42803 (2) obj. -167.431 iterations 1
Cbc0038I Pass  44: suminf.    0.39398 (1) obj. -167.431 iterations 2
Cbc0038I Pass  45: suminf.    0.30220 (1) obj. -182.24 iterations 1
Cbc0038I Pass  46: suminf.    0.34610 (1) obj. -178.278 iterations 7
Cbc0038I Pass  47: suminf.    0.34610 (1) obj. -178.278 iterations 2
Cbc0038I Pass  48: suminf.    0.41332 (1) obj. -167.431 iterations 1
Cbc0038I Pass  49: suminf.    0.41098 (1) obj. -182.13 iterations 6
Cbc0038I Pass  50: suminf.    0.49792 (1) obj. -167.431 iterations 1
Cbc0038I Pass  51: suminf.    0.41098 (1) obj. -182.13 iterations 1
Cbc0038I Pass  52: suminf.    0.71720 (3) obj. -167.431 iterations 11
Cbc0038I Pass  53: suminf.    0.39089 (2) obj. -167.431 iterations 2
Cbc0038I Pass  54: suminf.    0.34493 (1) obj. -167.431 iterations 2
Cbc0038I Pass  55: suminf.    0.23780 (1) obj. -233.586 iterations 2
Cbc0038I Pass  56: suminf.    0.26707 (1) obj. -192.632 iterations 3
Cbc0038I Pass  57: suminf.    0.26707 (1) obj. -192.632 iterations 0
Cbc0038I Pass  58: suminf.    0.42327 (1) obj. -167.431 iterations 1
Cbc0038I Pass  59: suminf.    1.33792 (4) obj. -167.431 iterations 8
Cbc0038I Pass  60: suminf.    0.92408 (3) obj. -167.431 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -136.269 - took 0.02 seconds
Cbc0012I Integer solution of -136.26924 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 13 rows 10 columns
Cbc0012I Integer solution of -148.5761 found by DiveCoefficient after 120 iterations and 0 nodes (0.04 seconds)
Cbc0031I 14 added rows had average density of 3.6428571
Cbc0013I At root node, 14 cuts changed objective from -292.07816 to -148.5761 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 182 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 77 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -148.5761, took 120 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 40 (-7) columns and 276 (-113) elements
Clp1000I sum of infeasibilities 2.71051e-20 - average 7.7443e-22, 15 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-40) columns and 0 (-276) elements
Clp0000I Optimal - objective value 316.03267
Clp0000I Optimal - objective value 316.03267
Coin0511I After Postsolve, objective 316.03267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 316.03267
Clp0000I Optimal - objective value 316.03267
Clp0000I Optimal - objective value 316.03267
Coin0511I After Postsolve, objective 316.03267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 316.0326665 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 277 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.38788
Cbc0038I Pass   1: suminf.    0.35684 (4) obj. -159.851 iterations 10
Cbc0038I Pass   2: suminf.    0.35684 (4) obj. -159.851 iterations 0
Cbc0038I Solution found of 17.6771
Cbc0038I Rounding solution of -91.4695 is better than previous of 17.6771

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -106.86
Cbc0038I Pass   3: suminf.    0.35684 (4) obj. -159.851 iterations 0
Cbc0038I Pass   4: suminf.    0.35684 (4) obj. -159.851 iterations 0
Cbc0038I Pass   5: suminf.    0.22815 (1) obj. -106.86 iterations 4
Cbc0038I Pass   6: suminf.    0.02073 (1) obj. -140.326 iterations 1
Cbc0038I Pass   7: suminf.    1.52842 (5) obj. -106.86 iterations 9
Cbc0038I Pass   8: suminf.    0.24268 (2) obj. -132.318 iterations 5
Cbc0038I Pass   9: suminf.    0.26700 (1) obj. -106.86 iterations 2
Cbc0038I Pass  10: suminf.    0.14268 (1) obj. -126.918 iterations 1
Cbc0038I Pass  11: suminf.    1.16117 (5) obj. -106.86 iterations 12
Cbc0038I Pass  12: suminf.    0.77046 (5) obj. -106.86 iterations 3
Cbc0038I Pass  13: suminf.    0.64690 (5) obj. -111.308 iterations 2
Cbc0038I Pass  14: suminf.    0.29916 (1) obj. -106.86 iterations 6
Cbc0038I Pass  15: suminf.    0.14268 (1) obj. -196.918 iterations 1
Cbc0038I Pass  16: suminf.    1.29811 (4) obj. -106.86 iterations 10
Cbc0038I Pass  17: suminf.    1.29811 (4) obj. -106.86 iterations 2
Cbc0038I Pass  18: suminf.    0.10610 (1) obj. -172.11 iterations 4
Cbc0038I Pass  19: suminf.    0.48950 (1) obj. -106.86 iterations 1
Cbc0038I Pass  20: suminf.    0.92409 (4) obj. -106.86 iterations 8
Cbc0038I Pass  21: suminf.    0.47636 (3) obj. -126.708 iterations 2
Cbc0038I Pass  22: suminf.    0.27572 (1) obj. -106.86 iterations 3
Cbc0038I Pass  23: suminf.    0.24024 (1) obj. -112.583 iterations 1
Cbc0038I Pass  24: suminf.    1.17869 (4) obj. -106.86 iterations 10
Cbc0038I Pass  25: suminf.    0.34085 (2) obj. -126.246 iterations 4
Cbc0038I Pass  26: suminf.    0.29804 (1) obj. -106.86 iterations 2
Cbc0038I Pass  27: suminf.    0.21585 (1) obj. -120.121 iterations 1
Cbc0038I Pass  28: suminf.    2.47358 (8) obj. -106.86 iterations 17
Cbc0038I Pass  29: suminf.    2.04919 (7) obj. -106.86 iterations 4
Cbc0038I Pass  30: suminf.    0.70510 (2) obj. -106.86 iterations 9
Cbc0038I Pass  31: suminf.    0.74626 (2) obj. -106.86 iterations 3
Cbc0038I Pass  32: suminf.    2.32610 (6) obj. -106.86 iterations 13
Cbc0038I Rounding solution of -97.9584 is better than previous of -91.4695

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 24 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -97.9584 to -118.874 (0.02 seconds)
Cbc0038I Round again with cutoff of -144.174
Cbc0038I Pass  32: suminf.    0.35684 (4) obj. -159.851 iterations 0
Cbc0038I Pass  33: suminf.    0.35684 (4) obj. -159.851 iterations 0
Cbc0038I Pass  34: suminf.    0.07204 (2) obj. -144.174 iterations 4
Cbc0038I Pass  35: suminf.    0.07204 (2) obj. -144.174 iterations 0
Cbc0038I Pass  36: suminf.    0.46172 (1) obj. -144.174 iterations 2
Cbc0038I Pass  37: suminf.    0.02073 (1) obj. -215.326 iterations 1
Cbc0038I Pass  38: suminf.    0.28497 (3) obj. -167.959 iterations 5
Cbc0038I Pass  39: suminf.    0.18232 (2) obj. -167.548 iterations 1
Cbc0038I Pass  40: suminf.    0.16422 (1) obj. -144.174 iterations 2
Cbc0038I Pass  41: suminf.    0.05732 (1) obj. -161.423 iterations 1
Cbc0038I Pass  42: suminf.    0.29953 (3) obj. -169.389 iterations 4
Cbc0038I Pass  43: suminf.    0.16843 (2) obj. -167.423 iterations 1
Cbc0038I Pass  44: suminf.    0.15183 (1) obj. -144.174 iterations 2
Cbc0038I Pass  45: suminf.    0.05732 (1) obj. -159.423 iterations 1
Cbc0038I Pass  46: suminf.    2.19468 (7) obj. -144.174 iterations 10
Cbc0038I Pass  47: suminf.    0.88172 (4) obj. -144.174 iterations 6
Cbc0038I Pass  48: suminf.    0.53019 (4) obj. -200.894 iterations 1
Cbc0038I Pass  49: suminf.    0.37637 (1) obj. -144.174 iterations 4
Cbc0038I Pass  50: suminf.    0.07780 (1) obj. -192.346 iterations 1
Cbc0038I Pass  51: suminf.    0.74634 (5) obj. -194.503 iterations 6
Cbc0038I Pass  52: suminf.    0.70238 (4) obj. -194.415 iterations 1
Cbc0038I Pass  53: suminf.    0.38466 (1) obj. -144.174 iterations 5
Cbc0038I Pass  54: suminf.    0.14286 (1) obj. -183.188 iterations 1
Cbc0038I Pass  55: suminf.    2.69597 (8) obj. -144.174 iterations 10
Cbc0038I Pass  56: suminf.    1.98326 (6) obj. -144.174 iterations 2
Cbc0038I Pass  57: suminf.    0.36178 (1) obj. -144.174 iterations 6
Cbc0038I Pass  58: suminf.    0.33390 (1) obj. -148.672 iterations 1
Cbc0038I Pass  59: suminf.    0.79248 (4) obj. -189.415 iterations 8
Cbc0038I Pass  60: suminf.    0.79248 (4) obj. -189.415 iterations 2
Cbc0038I Pass  61: suminf.    0.46070 (1) obj. -144.174 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -118.874 - took 0.02 seconds
Cbc0012I Integer solution of -118.87423 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -148.5761 found by DiveCoefficient after 51 iterations and 0 nodes (0.10 seconds)
Cbc0031I 9 added rows had average density of 4.5555556
Cbc0013I At root node, 9 cuts changed objective from -245.37316 to -148.5761 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 98 row cuts average 3.1 elements, 8 column cuts (8 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 33 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -148.5761, took 51 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.11

