Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 1.2766e-05 - average 2.52791e-08, 80 fixed columns
Coin0506I Presolve 348 (-157) rows, 182 (-80) columns and 1033 (-469) elements
Clp0029I End of values pass after 182 iterations
Clp0014I Perturbing problem by 0.001% of 2.0721526 - largest nonzero change 0 ( 0%) - largest zero change 2.9278563e-05
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Coin0511I After Postsolve, objective 154.14662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Coin0511I After Postsolve, objective 154.14662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.1466205 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 77 integers unsatisfied sum - 12.9343
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.18408 iterations 176
Cbc0038I Solution found of 3.18408
Cbc0038I Relaxing continuous gives 3.18408
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 145 rows 78 columns
Cbc0038I Mini branch and bound improved solution from 3.18408 to -67.7341 (0.07 seconds)
Cbc0038I Round again with cutoff of -76.3755
Cbc0038I Pass   2: suminf.    2.24555 (13) obj. -76.3755 iterations 34
Cbc0038I Pass   3: suminf.    2.00788 (7) obj. -76.3755 iterations 30
Cbc0038I Pass   4: suminf.    1.72590 (8) obj. -76.3755 iterations 10
Cbc0038I Pass   5: suminf.    1.31791 (6) obj. -76.3755 iterations 5
Cbc0038I Pass   6: suminf.    1.97240 (5) obj. -76.3755 iterations 10
Cbc0038I Pass   7: suminf.    1.47491 (5) obj. -76.3755 iterations 2
Cbc0038I Pass   8: suminf.    1.42650 (6) obj. -76.3755 iterations 2
Cbc0038I Pass   9: suminf.    2.68561 (6) obj. -76.3755 iterations 6
Cbc0038I Pass  10: suminf.    1.86029 (5) obj. -76.3755 iterations 5
Cbc0038I Pass  11: suminf.    1.46081 (5) obj. -76.3755 iterations 8
Cbc0038I Pass  12: suminf.    6.16875 (16) obj. -76.3755 iterations 57
Cbc0038I Pass  13: suminf.    3.58438 (15) obj. -76.3755 iterations 24
Cbc0038I Pass  14: suminf.    1.05793 (3) obj. -76.3755 iterations 29
Cbc0038I Pass  15: suminf.    0.96655 (4) obj. -76.3755 iterations 5
Cbc0038I Pass  16: suminf.    1.21702 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  17: suminf.    1.14802 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  18: suminf.    1.97864 (5) obj. -76.3755 iterations 20
Cbc0038I Pass  19: suminf.    1.62779 (5) obj. -76.3755 iterations 4
Cbc0038I Pass  20: suminf.    1.57844 (6) obj. -76.3755 iterations 2
Cbc0038I Pass  21: suminf.    2.43356 (6) obj. -76.3755 iterations 22
Cbc0038I Pass  22: suminf.    2.38851 (6) obj. -76.3755 iterations 12
Cbc0038I Pass  23: suminf.    1.03448 (4) obj. -76.3755 iterations 11
Cbc0038I Pass  24: suminf.    0.99422 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  25: suminf.    2.21553 (6) obj. -76.3755 iterations 16
Cbc0038I Pass  26: suminf.    1.06543 (3) obj. -76.3755 iterations 7
Cbc0038I Pass  27: suminf.    4.59266 (15) obj. -76.3755 iterations 50
Cbc0038I Pass  28: suminf.    1.60029 (7) obj. -76.3755 iterations 29
Cbc0038I Pass  29: suminf.    1.40918 (7) obj. -76.3755 iterations 8
Cbc0038I Pass  30: suminf.    1.88414 (6) obj. -76.3755 iterations 31
Cbc0038I Pass  31: suminf.    1.32590 (5) obj. -76.3755 iterations 5
Cbc0038I Rounding solution of -78.1641 is better than previous of -67.7341

Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 187 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -78.1641 to -82.2779 (0.16 seconds)
Cbc0038I Round again with cutoff of -96.6517
Cbc0038I Pass  31: suminf.    3.25184 (15) obj. -96.6517 iterations 6
Cbc0038I Pass  32: suminf.    2.83452 (11) obj. -96.6517 iterations 28
Cbc0038I Pass  33: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  34: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  35: suminf.    1.38652 (9) obj. -96.6517 iterations 14
Cbc0038I Pass  36: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  37: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  38: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  39: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  40: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  41: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  42: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  43: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  44: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  45: suminf.    3.28324 (12) obj. -96.6517 iterations 55
Cbc0038I Pass  46: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  47: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  48: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  49: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  50: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  51: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  52: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  53: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  54: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  55: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  56: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  57: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  58: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  59: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  60: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 176 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 158 rows 86 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -82.2779 - took 0.22 seconds
Cbc0012I Integer solution of -82.2779 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 149 rows 81 columns
Cbc0031I 38 added rows had average density of 210.60526
Cbc0013I At root node, 38 cuts changed objective from -154.14662 to -138.60292 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35709 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.477 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3531 row cuts average 257.4 elements, 0 column cuts (0 active)  in 0.492 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.590 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 255.1 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -82.2779 best solution, best possible -138.60292 (5.46 seconds)
Cbc0010I After 12 nodes, 9 on tree, -82.2779 best solution, best possible -138.60292 (6.22 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 145 rows 83 columns
Cbc0012I Integer solution of -86.03649 found by RINS after 21308 iterations and 41 nodes (6.87 seconds)
Cbc0010I After 46 nodes, 15 on tree, -86.03649 best solution, best possible -138.60292 (6.93 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 192 rows 103 columns
Cbc0010I After 114 nodes, 16 on tree, -86.03649 best solution, best possible -138.60292 (7.66 seconds)
Cbc0010I After 196 nodes, 16 on tree, -86.03649 best solution, best possible -138.60292 (8.36 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 19 rows 18 columns
Cbc0012I Integer solution of -86.57338 found by rounding after 35652 iterations and 310 nodes (8.98 seconds)
Cbc0004I Integer solution of -86.57357 found after 36400 iterations and 333 nodes (9.04 seconds)
Cbc0010I After 337 nodes, 19 on tree, -86.57357 best solution, best possible -138.60292 (9.06 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 144 rows 77 columns
Cbc0010I After 507 nodes, 17 on tree, -86.57357 best solution, best possible -138.60292 (9.76 seconds)
Cbc0012I Integer solution of -86.97554 found by rounding after 43473 iterations and 599 nodes (10.06 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 1 rows 2 columns
Cbc0004I Integer solution of -87.29056 found after 44402 iterations and 627 nodes (10.16 seconds)
Cbc0001I Search completed - best objective -87.29056000000003, took 45530 iterations and 636 nodes (10.20 seconds)
Cbc0032I Strong branching done 5468 times (133432 iterations), fathomed 19 nodes and fixed 124 variables
Cbc0035I Maximum depth 112, 2382 variables fixed on reduced cost
Total time (CPU seconds):       10.00   (Wallclock seconds):       10.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 353 (-173) rows, 370 (-154) columns and 15991 (-19745) elements
Clp1000I sum of infeasibilities 1.73481e-06 - average 4.91449e-09, 207 fixed columns
Coin0506I Presolve 150 (-203) rows, 163 (-207) columns and 600 (-15391) elements
Clp0006I 0  Obj 13.012914 Dual inf 21.938472 (163)
Clp0029I End of values pass after 163 iterations
Clp0014I Perturbing problem by 0.001% of 1.5189092 - largest nonzero change 2.9836907e-05 ( 0.0015823696%) - largest zero change 2.9347878e-05
Clp0000I Optimal - objective value 14.891328
Clp0000I Optimal - objective value 14.891328
Coin0511I After Postsolve, objective 14.891328, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 14.891328 Dual inf 276.49901 (114)
Clp0014I Perturbing problem by 0.001% of 1.9165248 - largest nonzero change 2.2702737e-05 ( 0.0022702737%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 189.69129
Clp0000I Optimal - objective value 189.69129
Clp0000I Optimal - objective value 189.69129
Coin0511I After Postsolve, objective 189.69129, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 189.6912938 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 353 rows, 370 columns (370 integer (370 of which binary)) and 15991 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.659%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 115 integers unsatisfied sum - 8.39808
Cbc0038I Pass   1: suminf.    3.30872 (87) obj. -132.045 iterations 61
Cbc0038I Pass   2: suminf.    3.30872 (87) obj. -132.045 iterations 1
Cbc0038I Pass   3: suminf.    2.53976 (70) obj. -111.023 iterations 17
Cbc0038I Pass   4: suminf.    2.05467 (58) obj. -93.7514 iterations 12
Cbc0038I Pass   5: suminf.    1.58564 (46) obj. -69.727 iterations 12
Cbc0038I Pass   6: suminf.    0.69937 (22) obj. -21.6101 iterations 24
Cbc0038I Solution found of -0.30943
Cbc0038I Rounding solution of -23.4621 is better than previous of -0.30943

Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 353 rows 370 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -23.4621 to -47.1904 (0.14 seconds)
Cbc0038I Round again with cutoff of -61.4406
Cbc0038I Pass   7: suminf.    3.30872 (87) obj. -132.045 iterations 0
Cbc0038I Pass   8: suminf.    3.30872 (87) obj. -132.045 iterations 1
Cbc0038I Pass   9: suminf.    2.53976 (70) obj. -111.023 iterations 17
Cbc0038I Pass  10: suminf.    1.89681 (54) obj. -87.988 iterations 16
Cbc0038I Pass  11: suminf.    1.27595 (37) obj. -61.4406 iterations 19
Cbc0038I Pass  12: suminf.    1.20388 (36) obj. -63.4111 iterations 1
Cbc0038I Pass  13: suminf.    0.48734 (20) obj. -61.4406 iterations 80
Cbc0038I Pass  14: suminf.    0.48734 (20) obj. -61.4406 iterations 0
Cbc0038I Pass  15: suminf.    0.68169 (5) obj. -61.4406 iterations 20
Cbc0038I Pass  16: suminf.    0.04615 (1) obj. -64.507 iterations 6
Cbc0038I Pass  17: suminf.    0.18554 (1) obj. -61.4406 iterations 1
Cbc0038I Pass  18: suminf.    0.94302 (21) obj. -61.4406 iterations 84
Cbc0038I Pass  19: suminf.    0.77374 (21) obj. -61.4406 iterations 19
Cbc0038I Pass  20: suminf.    2.42540 (9) obj. -61.4406 iterations 39
Cbc0038I Pass  21: suminf.    0.85900 (6) obj. -61.4406 iterations 7
Cbc0038I Pass  22: suminf.    0.67816 (6) obj. -61.4406 iterations 5
Cbc0038I Pass  23: suminf.    1.64824 (10) obj. -61.4406 iterations 20
Cbc0038I Pass  24: suminf.    1.64824 (10) obj. -61.4406 iterations 1
Cbc0038I Pass  25: suminf.    0.68380 (6) obj. -61.4406 iterations 15
Cbc0038I Pass  26: suminf.    2.08233 (19) obj. -61.4406 iterations 80
Cbc0038I Pass  27: suminf.    2.08233 (19) obj. -61.4406 iterations 12
Cbc0038I Pass  28: suminf.    0.92212 (11) obj. -61.4406 iterations 32
Cbc0038I Pass  29: suminf.    0.44133 (13) obj. -61.4406 iterations 9
Cbc0038I Pass  30: suminf.    0.52325 (8) obj. -61.4406 iterations 31
Cbc0038I Pass  31: suminf.    0.45473 (9) obj. -61.4406 iterations 8
Cbc0038I Pass  32: suminf.    0.75643 (5) obj. -61.4406 iterations 17
Cbc0038I Pass  33: suminf.    0.75643 (5) obj. -61.4406 iterations 1
Cbc0038I Pass  34: suminf.    0.67548 (11) obj. -61.4406 iterations 22
Cbc0038I Pass  35: suminf.    0.67548 (11) obj. -61.4406 iterations 0
Cbc0038I Pass  36: suminf.    1.60398 (9) obj. -61.4406 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 353 rows 370 columns, reduced to 55 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -47.1904 to -59.0694 (0.24 seconds)
Cbc0038I Round again with cutoff of -87.0908
Cbc0038I Pass  36: suminf.    3.30872 (87) obj. -132.045 iterations 0
Cbc0038I Pass  37: suminf.    3.30872 (87) obj. -132.045 iterations 1
Cbc0038I Pass  38: suminf.    2.66494 (73) obj. -117.731 iterations 14
Cbc0038I Pass  39: suminf.    1.84448 (46) obj. -87.0908 iterations 29
Cbc0038I Pass  40: suminf.    1.55471 (45) obj. -95.0454 iterations 1
Cbc0038I Pass  41: suminf.    1.62506 (21) obj. -87.0908 iterations 91
Cbc0038I Pass  42: suminf.    1.32074 (22) obj. -87.0908 iterations 9
Cbc0038I Pass  43: suminf.    3.65377 (29) obj. -87.0908 iterations 62
Cbc0038I Pass  44: suminf.    3.65377 (29) obj. -87.0908 iterations 0
Cbc0038I Pass  45: suminf.    2.62480 (18) obj. -87.0908 iterations 62
Cbc0038I Pass  46: suminf.    2.59909 (19) obj. -87.0908 iterations 12
Cbc0038I Pass  47: suminf.    2.76439 (18) obj. -87.0908 iterations 18
Cbc0038I Pass  48: suminf.    2.59728 (19) obj. -87.0908 iterations 16
Cbc0038I Pass  49: suminf.    2.76489 (18) obj. -87.0908 iterations 18
Cbc0038I Pass  50: suminf.    3.34930 (29) obj. -87.0908 iterations 57
Cbc0038I Pass  51: suminf.    2.86682 (30) obj. -87.0908 iterations 17
Cbc0038I Pass  52: suminf.    2.91821 (22) obj. -87.0908 iterations 40
Cbc0038I Pass  53: suminf.    2.52290 (21) obj. -87.0908 iterations 19
Cbc0038I Pass  54: suminf.    2.46169 (18) obj. -87.0908 iterations 32
Cbc0038I Pass  55: suminf.    2.39022 (18) obj. -87.0908 iterations 12
Cbc0038I Pass  56: suminf.    2.46169 (18) obj. -87.0908 iterations 13
Cbc0038I Pass  57: suminf.    4.99746 (37) obj. -87.0908 iterations 49
Cbc0038I Pass  58: suminf.    3.11514 (32) obj. -87.0908 iterations 17
Cbc0038I Pass  59: suminf.    2.77928 (26) obj. -87.0908 iterations 20
Cbc0038I Pass  60: suminf.    2.47380 (25) obj. -87.0908 iterations 14
Cbc0038I Pass  61: suminf.    2.62480 (18) obj. -87.0908 iterations 35
Cbc0038I Pass  62: suminf.    2.59909 (19) obj. -87.0908 iterations 11
Cbc0038I Pass  63: suminf.    2.76439 (18) obj. -87.0908 iterations 16
Cbc0038I Pass  64: suminf.    2.59728 (19) obj. -87.0908 iterations 14
Cbc0038I Pass  65: suminf.    3.00952 (18) obj. -87.0908 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 353 rows 370 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -59.0694 - took 0.21 seconds
Cbc0012I Integer solution of -59.06938 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 45 rows 49 columns
Cbc0031I 133 added rows had average density of 43.526316
Cbc0013I At root node, 133 cuts changed objective from -189.69129 to -129.95966 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 51025 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.457 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2209 row cuts average 349.6 elements, 0 column cuts (0 active)  in 0.923 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 95 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4622 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.258 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.769 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1394 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.683 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 371 row cuts average 209.4 elements, 0 column cuts (0 active)  in 0.282 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 193 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.537 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -59.06938 best solution, best possible -129.95966 (7.67 seconds)
Cbc0010I After 3 nodes, 2 on tree, -59.06938 best solution, best possible -129.2201 (8.67 seconds)
Cbc0010I After 5 nodes, 2 on tree, -59.06938 best solution, best possible -129.2201 (10.00 seconds)
Cbc0010I After 6 nodes, 3 on tree, -59.06938 best solution, best possible -129.2201 (11.10 seconds)
Cbc0012I Integer solution of -74.90949 found by rounding after 13572 iterations and 7 nodes (11.11 seconds)
Cbc0012I Integer solution of -76.81668 found by rounding after 13650 iterations and 8 nodes (11.82 seconds)
Cbc0010I After 8 nodes, 3 on tree, -76.81668 best solution, best possible -129.2201 (11.94 seconds)
Cbc0010I After 10 nodes, 5 on tree, -76.81668 best solution, best possible -129.2201 (12.75 seconds)
Cbc0010I After 32 nodes, 11 on tree, -76.81668 best solution, best possible -129.2201 (13.47 seconds)
Cbc0016I Integer solution of -78.60539 found by strong branching after 15817 iterations and 36 nodes (13.50 seconds)
Cbc0016I Integer solution of -84.05314 found by strong branching after 15849 iterations and 37 nodes (13.51 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 49 rows 63 columns
Cbc0010I After 42 nodes, 9 on tree, -84.05314 best solution, best possible -129.2201 (14.19 seconds)
Cbc0016I Integer solution of -84.06459 found by strong branching after 16685 iterations and 53 nodes (14.29 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 12 rows 22 columns
Cbc0010I After 95 nodes, 12 on tree, -84.06459 best solution, best possible -129.2201 (15.01 seconds)
Cbc0012I Integer solution of -85.03649 found by rounding after 20543 iterations and 186 nodes (15.72 seconds)
Cbc0010I After 186 nodes, 12 on tree, -85.03649 best solution, best possible -129.2201 (15.72 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 59 rows 72 columns
Cbc0010I After 204 nodes, 17 on tree, -85.03649 best solution, best possible -129.2201 (16.45 seconds)
Cbc0010I After 289 nodes, 17 on tree, -85.03649 best solution, best possible -129.2201 (17.16 seconds)
Cbc0010I After 376 nodes, 17 on tree, -85.03649 best solution, best possible -129.2201 (17.86 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 63 rows 70 columns
Cbc0010I After 426 nodes, 11 on tree, -85.03649 best solution, best possible -129.2201 (18.57 seconds)
Cbc0010I After 461 nodes, 13 on tree, -85.03649 best solution, best possible -129.2201 (19.27 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 67 rows 81 columns
Cbc0010I After 500 nodes, 10 on tree, -85.03649 best solution, best possible -129.2201 (20.17 seconds)
Cbc0010I After 543 nodes, 9 on tree, -85.03649 best solution, best possible -129.2201 (20.89 seconds)
Cbc0010I After 584 nodes, 3 on tree, -85.03649 best solution, best possible -129.2201 (21.73 seconds)
Cbc0010I After 626 nodes, 14 on tree, -85.03649 best solution, best possible -129.2201 (22.44 seconds)
Cbc0012I Integer solution of -86.03649 found by rounding after 45243 iterations and 653 nodes (22.73 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 17 rows 27 columns
Cbc0010I After 706 nodes, 12 on tree, -86.03649 best solution, best possible -129.2201 (23.15 seconds)
Cbc0010I After 762 nodes, 1 on tree, -86.03649 best solution, best possible -102.97031 (24.43 seconds)
Cbc0010I After 769 nodes, 7 on tree, -86.03649 best solution, best possible -102.97031 (25.51 seconds)
Cbc0010I After 786 nodes, 9 on tree, -86.03649 best solution, best possible -102.97031 (26.25 seconds)
Cbc0010I After 803 nodes, 8 on tree, -86.03649 best solution, best possible -102.97031 (26.97 seconds)
Cbc0010I After 829 nodes, 5 on tree, -86.03649 best solution, best possible -102.97031 (27.67 seconds)
Cbc0004I Integer solution of -86.29056 found after 55155 iterations and 848 nodes (27.93 seconds)
Cbc0012I Integer solution of -86.57338 found by DiveCoefficient after 56065 iterations and 889 nodes (28.36 seconds)
Cbc0010I After 890 nodes, 8 on tree, -86.57338 best solution, best possible -102.97031 (28.38 seconds)
Cbc0012I Integer solution of -86.57357 found by rounding after 56260 iterations and 899 nodes (28.48 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 4 rows 10 columns
Cbc0012I Integer solution of -86.97554 found by DiveCoefficient after 56433 iterations and 911 nodes (28.58 seconds)
Cbc0012I Integer solution of -87.29056 found by rounding after 56479 iterations and 915 nodes (28.63 seconds)
Cbc0001I Search completed - best objective -87.29056000000003, took 56944 iterations and 934 nodes (28.78 seconds)
Cbc0032I Strong branching done 2488 times (55967 iterations), fathomed 20 nodes and fixed 81 variables
Cbc0035I Maximum depth 33, 4155 variables fixed on reduced cost
Total time (CPU seconds):       28.16   (Wallclock seconds):       28.86

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 1.2766e-05 - average 2.52791e-08, 80 fixed columns
Coin0506I Presolve 348 (-157) rows, 182 (-80) columns and 1033 (-469) elements
Clp0029I End of values pass after 182 iterations
Clp0014I Perturbing problem by 0.001% of 2.0721526 - largest nonzero change 0 ( 0%) - largest zero change 2.9278563e-05
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Coin0511I After Postsolve, objective 154.14662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Coin0511I After Postsolve, objective 154.14662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.1466205 - 0 iterations time 0.072, Presolve 0.00, Idiot 0.07

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 77 integers unsatisfied sum - 12.9343
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.18408 iterations 176
Cbc0038I Solution found of 3.18408
Cbc0038I Relaxing continuous gives 3.18408
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 145 rows 78 columns
Cbc0038I Mini branch and bound improved solution from 3.18408 to -67.7341 (0.07 seconds)
Cbc0038I Round again with cutoff of -76.3755
Cbc0038I Pass   2: suminf.    2.24555 (13) obj. -76.3755 iterations 34
Cbc0038I Pass   3: suminf.    2.00788 (7) obj. -76.3755 iterations 30
Cbc0038I Pass   4: suminf.    1.72590 (8) obj. -76.3755 iterations 10
Cbc0038I Pass   5: suminf.    1.31791 (6) obj. -76.3755 iterations 5
Cbc0038I Pass   6: suminf.    1.97240 (5) obj. -76.3755 iterations 10
Cbc0038I Pass   7: suminf.    1.47491 (5) obj. -76.3755 iterations 2
Cbc0038I Pass   8: suminf.    1.42650 (6) obj. -76.3755 iterations 2
Cbc0038I Pass   9: suminf.    2.68561 (6) obj. -76.3755 iterations 6
Cbc0038I Pass  10: suminf.    1.86029 (5) obj. -76.3755 iterations 5
Cbc0038I Pass  11: suminf.    1.46081 (5) obj. -76.3755 iterations 8
Cbc0038I Pass  12: suminf.    6.16875 (16) obj. -76.3755 iterations 57
Cbc0038I Pass  13: suminf.    3.58438 (15) obj. -76.3755 iterations 24
Cbc0038I Pass  14: suminf.    1.05793 (3) obj. -76.3755 iterations 29
Cbc0038I Pass  15: suminf.    0.96655 (4) obj. -76.3755 iterations 5
Cbc0038I Pass  16: suminf.    1.21702 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  17: suminf.    1.14802 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  18: suminf.    1.97864 (5) obj. -76.3755 iterations 20
Cbc0038I Pass  19: suminf.    1.62779 (5) obj. -76.3755 iterations 4
Cbc0038I Pass  20: suminf.    1.57844 (6) obj. -76.3755 iterations 2
Cbc0038I Pass  21: suminf.    2.43356 (6) obj. -76.3755 iterations 22
Cbc0038I Pass  22: suminf.    2.38851 (6) obj. -76.3755 iterations 12
Cbc0038I Pass  23: suminf.    1.03448 (4) obj. -76.3755 iterations 11
Cbc0038I Pass  24: suminf.    0.99422 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  25: suminf.    2.21553 (6) obj. -76.3755 iterations 16
Cbc0038I Pass  26: suminf.    1.06543 (3) obj. -76.3755 iterations 7
Cbc0038I Pass  27: suminf.    4.59266 (15) obj. -76.3755 iterations 50
Cbc0038I Pass  28: suminf.    1.60029 (7) obj. -76.3755 iterations 29
Cbc0038I Pass  29: suminf.    1.40918 (7) obj. -76.3755 iterations 8
Cbc0038I Pass  30: suminf.    1.88414 (6) obj. -76.3755 iterations 31
Cbc0038I Pass  31: suminf.    1.32590 (5) obj. -76.3755 iterations 5
Cbc0038I Rounding solution of -78.1641 is better than previous of -67.7341

Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 187 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -78.1641 to -82.2779 (0.15 seconds)
Cbc0038I Round again with cutoff of -96.6517
Cbc0038I Pass  31: suminf.    3.25184 (15) obj. -96.6517 iterations 6
Cbc0038I Pass  32: suminf.    2.83452 (11) obj. -96.6517 iterations 28
Cbc0038I Pass  33: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  34: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  35: suminf.    1.38652 (9) obj. -96.6517 iterations 14
Cbc0038I Pass  36: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  37: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  38: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  39: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  40: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  41: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  42: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  43: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  44: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  45: suminf.    3.28324 (12) obj. -96.6517 iterations 55
Cbc0038I Pass  46: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  47: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  48: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  49: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  50: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  51: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  52: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  53: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  54: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  55: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  56: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  57: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  58: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  59: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  60: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 176 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 158 rows 86 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -82.2779 - took 0.22 seconds
Cbc0012I Integer solution of -82.2779 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 149 rows 81 columns
Cbc0031I 38 added rows had average density of 210.60526
Cbc0013I At root node, 38 cuts changed objective from -154.14662 to -138.60292 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35709 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.482 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3531 row cuts average 257.4 elements, 0 column cuts (0 active)  in 0.500 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.599 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 255.1 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -82.2779 best solution, best possible -138.60292 (5.55 seconds)
Cbc0010I After 9 nodes, 10 on tree, -82.2779 best solution, best possible -138.60292 (6.27 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 145 rows 83 columns
Cbc0012I Integer solution of -86.03649 found by RINS after 21308 iterations and 41 nodes (6.99 seconds)
Cbc0010I After 41 nodes, 15 on tree, -86.03649 best solution, best possible -138.60292 (6.99 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 192 rows 103 columns
Cbc0010I After 105 nodes, 15 on tree, -86.03649 best solution, best possible -138.60292 (7.69 seconds)
Cbc0010I After 178 nodes, 18 on tree, -86.03649 best solution, best possible -138.60292 (8.40 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 19 rows 18 columns
Cbc0010I After 304 nodes, 18 on tree, -86.03649 best solution, best possible -138.60292 (9.10 seconds)
Cbc0012I Integer solution of -86.57338 found by rounding after 35652 iterations and 310 nodes (9.13 seconds)
Cbc0004I Integer solution of -86.57357 found after 36400 iterations and 333 nodes (9.19 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 144 rows 77 columns
Cbc0010I After 494 nodes, 14 on tree, -86.57357 best solution, best possible -138.60292 (9.84 seconds)
Cbc0012I Integer solution of -86.97554 found by rounding after 43473 iterations and 599 nodes (10.22 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 1 rows 2 columns
Cbc0004I Integer solution of -87.29056 found after 44402 iterations and 627 nodes (10.32 seconds)
Cbc0001I Search completed - best objective -87.29056000000003, took 45530 iterations and 636 nodes (10.36 seconds)
Cbc0032I Strong branching done 5468 times (133432 iterations), fathomed 19 nodes and fixed 124 variables
Cbc0035I Maximum depth 112, 2382 variables fixed on reduced cost
Total time (CPU seconds):       10.16   (Wallclock seconds):       10.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 353 (-174) rows, 370 (-155) columns and 15991 (-19746) elements
Clp1000I sum of infeasibilities 1.73481e-06 - average 4.91449e-09, 207 fixed columns
Coin0506I Presolve 150 (-203) rows, 163 (-207) columns and 600 (-15391) elements
Clp0006I 0  Obj 13.012914 Dual inf 21.938472 (163)
Clp0029I End of values pass after 163 iterations
Clp0014I Perturbing problem by 0.001% of 1.5189092 - largest nonzero change 2.9836907e-05 ( 0.0015823696%) - largest zero change 2.9347878e-05
Clp0000I Optimal - objective value 14.891328
Clp0000I Optimal - objective value 14.891328
Coin0511I After Postsolve, objective 14.891328, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 14.891328 Dual inf 276.49901 (114)
Clp0014I Perturbing problem by 0.001% of 1.9165248 - largest nonzero change 2.2702737e-05 ( 0.0022702737%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 189.69129
Clp0000I Optimal - objective value 189.69129
Clp0000I Optimal - objective value 189.69129
Coin0511I After Postsolve, objective 189.69129, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 189.6912938 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 353 rows, 370 columns (370 integer (370 of which binary)) and 15991 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.659%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 115 integers unsatisfied sum - 8.39808
Cbc0038I Pass   1: suminf.    3.30872 (87) obj. -132.045 iterations 61
Cbc0038I Pass   2: suminf.    3.30872 (87) obj. -132.045 iterations 1
Cbc0038I Pass   3: suminf.    2.53976 (70) obj. -111.023 iterations 17
Cbc0038I Pass   4: suminf.    2.05467 (58) obj. -93.7514 iterations 12
Cbc0038I Pass   5: suminf.    1.58564 (46) obj. -69.727 iterations 12
Cbc0038I Pass   6: suminf.    0.69937 (22) obj. -21.6101 iterations 24
Cbc0038I Solution found of -0.30943
Cbc0038I Rounding solution of -23.4621 is better than previous of -0.30943

Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 353 rows 370 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -23.4621 to -47.1904 (0.14 seconds)
Cbc0038I Round again with cutoff of -61.4406
Cbc0038I Pass   7: suminf.    3.30872 (87) obj. -132.045 iterations 0
Cbc0038I Pass   8: suminf.    3.30872 (87) obj. -132.045 iterations 1
Cbc0038I Pass   9: suminf.    2.53976 (70) obj. -111.023 iterations 17
Cbc0038I Pass  10: suminf.    1.89681 (54) obj. -87.988 iterations 16
Cbc0038I Pass  11: suminf.    1.27595 (37) obj. -61.4406 iterations 19
Cbc0038I Pass  12: suminf.    1.20388 (36) obj. -63.4111 iterations 1
Cbc0038I Pass  13: suminf.    0.48734 (20) obj. -61.4406 iterations 80
Cbc0038I Pass  14: suminf.    0.48734 (20) obj. -61.4406 iterations 0
Cbc0038I Pass  15: suminf.    0.68169 (5) obj. -61.4406 iterations 20
Cbc0038I Pass  16: suminf.    0.04615 (1) obj. -64.507 iterations 6
Cbc0038I Pass  17: suminf.    0.18554 (1) obj. -61.4406 iterations 1
Cbc0038I Pass  18: suminf.    0.94302 (21) obj. -61.4406 iterations 84
Cbc0038I Pass  19: suminf.    0.77374 (21) obj. -61.4406 iterations 19
Cbc0038I Pass  20: suminf.    2.42540 (9) obj. -61.4406 iterations 39
Cbc0038I Pass  21: suminf.    0.85900 (6) obj. -61.4406 iterations 7
Cbc0038I Pass  22: suminf.    0.67816 (6) obj. -61.4406 iterations 5
Cbc0038I Pass  23: suminf.    1.64824 (10) obj. -61.4406 iterations 20
Cbc0038I Pass  24: suminf.    1.64824 (10) obj. -61.4406 iterations 1
Cbc0038I Pass  25: suminf.    0.68380 (6) obj. -61.4406 iterations 15
Cbc0038I Pass  26: suminf.    2.08233 (19) obj. -61.4406 iterations 80
Cbc0038I Pass  27: suminf.    2.08233 (19) obj. -61.4406 iterations 12
Cbc0038I Pass  28: suminf.    0.92212 (11) obj. -61.4406 iterations 32
Cbc0038I Pass  29: suminf.    0.44133 (13) obj. -61.4406 iterations 9
Cbc0038I Pass  30: suminf.    0.52325 (8) obj. -61.4406 iterations 31
Cbc0038I Pass  31: suminf.    0.45473 (9) obj. -61.4406 iterations 8
Cbc0038I Pass  32: suminf.    0.75643 (5) obj. -61.4406 iterations 17
Cbc0038I Pass  33: suminf.    0.75643 (5) obj. -61.4406 iterations 1
Cbc0038I Pass  34: suminf.    0.67548 (11) obj. -61.4406 iterations 22
Cbc0038I Pass  35: suminf.    0.67548 (11) obj. -61.4406 iterations 0
Cbc0038I Pass  36: suminf.    1.60398 (9) obj. -61.4406 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 353 rows 370 columns, reduced to 55 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -47.1904 to -59.0694 (0.24 seconds)
Cbc0038I Round again with cutoff of -87.0908
Cbc0038I Pass  36: suminf.    3.30872 (87) obj. -132.045 iterations 0
Cbc0038I Pass  37: suminf.    3.30872 (87) obj. -132.045 iterations 1
Cbc0038I Pass  38: suminf.    2.66494 (73) obj. -117.731 iterations 14
Cbc0038I Pass  39: suminf.    1.84448 (46) obj. -87.0908 iterations 29
Cbc0038I Pass  40: suminf.    1.55471 (45) obj. -95.0454 iterations 1
Cbc0038I Pass  41: suminf.    1.62506 (21) obj. -87.0908 iterations 91
Cbc0038I Pass  42: suminf.    1.32074 (22) obj. -87.0908 iterations 9
Cbc0038I Pass  43: suminf.    3.65377 (29) obj. -87.0908 iterations 62
Cbc0038I Pass  44: suminf.    3.65377 (29) obj. -87.0908 iterations 0
Cbc0038I Pass  45: suminf.    2.62480 (18) obj. -87.0908 iterations 62
Cbc0038I Pass  46: suminf.    2.59909 (19) obj. -87.0908 iterations 12
Cbc0038I Pass  47: suminf.    2.76439 (18) obj. -87.0908 iterations 18
Cbc0038I Pass  48: suminf.    2.59728 (19) obj. -87.0908 iterations 16
Cbc0038I Pass  49: suminf.    2.76489 (18) obj. -87.0908 iterations 18
Cbc0038I Pass  50: suminf.    3.34930 (29) obj. -87.0908 iterations 57
Cbc0038I Pass  51: suminf.    2.86682 (30) obj. -87.0908 iterations 17
Cbc0038I Pass  52: suminf.    2.91821 (22) obj. -87.0908 iterations 40
Cbc0038I Pass  53: suminf.    2.52290 (21) obj. -87.0908 iterations 19
Cbc0038I Pass  54: suminf.    2.46169 (18) obj. -87.0908 iterations 32
Cbc0038I Pass  55: suminf.    2.39022 (18) obj. -87.0908 iterations 12
Cbc0038I Pass  56: suminf.    2.46169 (18) obj. -87.0908 iterations 13
Cbc0038I Pass  57: suminf.    4.99746 (37) obj. -87.0908 iterations 49
Cbc0038I Pass  58: suminf.    3.11514 (32) obj. -87.0908 iterations 17
Cbc0038I Pass  59: suminf.    2.77928 (26) obj. -87.0908 iterations 20
Cbc0038I Pass  60: suminf.    2.47380 (25) obj. -87.0908 iterations 14
Cbc0038I Pass  61: suminf.    2.62480 (18) obj. -87.0908 iterations 35
Cbc0038I Pass  62: suminf.    2.59909 (19) obj. -87.0908 iterations 11
Cbc0038I Pass  63: suminf.    2.76439 (18) obj. -87.0908 iterations 16
Cbc0038I Pass  64: suminf.    2.59728 (19) obj. -87.0908 iterations 14
Cbc0038I Pass  65: suminf.    3.00952 (18) obj. -87.0908 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 353 rows 370 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -59.0694 - took 0.21 seconds
Cbc0012I Integer solution of -59.06938 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 45 rows 49 columns
Cbc0031I 133 added rows had average density of 43.526316
Cbc0013I At root node, 133 cuts changed objective from -189.69129 to -129.95966 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 51025 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.460 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2209 row cuts average 349.6 elements, 0 column cuts (0 active)  in 0.936 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 95 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4622 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.788 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1394 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.692 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 371 row cuts average 209.4 elements, 0 column cuts (0 active)  in 0.291 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 193 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.539 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -59.06938 best solution, best possible -129.95966 (7.77 seconds)
Cbc0010I After 3 nodes, 2 on tree, -59.06938 best solution, best possible -129.2201 (8.78 seconds)
Cbc0010I After 5 nodes, 2 on tree, -59.06938 best solution, best possible -129.2201 (10.14 seconds)
Cbc0010I After 6 nodes, 3 on tree, -59.06938 best solution, best possible -129.2201 (11.25 seconds)
Cbc0012I Integer solution of -74.90949 found by rounding after 13572 iterations and 7 nodes (11.26 seconds)
Cbc0012I Integer solution of -76.81668 found by rounding after 13650 iterations and 8 nodes (11.99 seconds)
Cbc0010I After 8 nodes, 3 on tree, -76.81668 best solution, best possible -129.2201 (12.11 seconds)
Cbc0010I After 10 nodes, 5 on tree, -76.81668 best solution, best possible -129.2201 (12.94 seconds)
Cbc0010I After 32 nodes, 11 on tree, -76.81668 best solution, best possible -129.2201 (13.66 seconds)
Cbc0016I Integer solution of -78.60539 found by strong branching after 15817 iterations and 36 nodes (13.70 seconds)
Cbc0016I Integer solution of -84.05314 found by strong branching after 15849 iterations and 37 nodes (13.71 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 49 rows 63 columns
Cbc0010I After 42 nodes, 9 on tree, -84.05314 best solution, best possible -129.2201 (14.38 seconds)
Cbc0016I Integer solution of -84.06459 found by strong branching after 16685 iterations and 53 nodes (14.48 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 12 rows 22 columns
Cbc0010I After 95 nodes, 12 on tree, -84.06459 best solution, best possible -129.2201 (15.19 seconds)
Cbc0012I Integer solution of -85.03649 found by rounding after 20543 iterations and 186 nodes (15.88 seconds)
Cbc0010I After 187 nodes, 13 on tree, -85.03649 best solution, best possible -129.2201 (15.90 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 59 rows 72 columns
Cbc0010I After 204 nodes, 17 on tree, -85.03649 best solution, best possible -129.2201 (16.61 seconds)
Cbc0010I After 288 nodes, 17 on tree, -85.03649 best solution, best possible -129.2201 (17.32 seconds)
Cbc0010I After 372 nodes, 17 on tree, -85.03649 best solution, best possible -129.2201 (18.02 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 63 rows 70 columns
Cbc0010I After 424 nodes, 11 on tree, -85.03649 best solution, best possible -129.2201 (18.73 seconds)
Cbc0010I After 460 nodes, 13 on tree, -85.03649 best solution, best possible -129.2201 (19.43 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 67 rows 81 columns
Cbc0010I After 500 nodes, 10 on tree, -85.03649 best solution, best possible -129.2201 (20.40 seconds)
Cbc0010I After 543 nodes, 9 on tree, -85.03649 best solution, best possible -129.2201 (21.12 seconds)
Cbc0010I After 584 nodes, 3 on tree, -85.03649 best solution, best possible -129.2201 (21.99 seconds)
Cbc0010I After 622 nodes, 14 on tree, -85.03649 best solution, best possible -129.2201 (22.69 seconds)
Cbc0012I Integer solution of -86.03649 found by rounding after 45243 iterations and 653 nodes (23.02 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 17 rows 27 columns
Cbc0010I After 703 nodes, 14 on tree, -86.03649 best solution, best possible -129.2201 (23.42 seconds)
Cbc0010I After 762 nodes, 1 on tree, -86.03649 best solution, best possible -102.97031 (24.74 seconds)
Cbc0010I After 769 nodes, 7 on tree, -86.03649 best solution, best possible -102.97031 (25.83 seconds)
Cbc0010I After 785 nodes, 8 on tree, -86.03649 best solution, best possible -102.97031 (26.53 seconds)
Cbc0010I After 803 nodes, 8 on tree, -86.03649 best solution, best possible -102.97031 (27.30 seconds)
Cbc0010I After 826 nodes, 5 on tree, -86.03649 best solution, best possible -102.97031 (28.01 seconds)
Cbc0004I Integer solution of -86.29056 found after 55155 iterations and 848 nodes (28.29 seconds)
Cbc0010I After 888 nodes, 7 on tree, -86.29056 best solution, best possible -102.97031 (28.72 seconds)
Cbc0012I Integer solution of -86.57338 found by DiveCoefficient after 56065 iterations and 889 nodes (28.72 seconds)
Cbc0012I Integer solution of -86.57357 found by rounding after 56260 iterations and 899 nodes (28.84 seconds)
Cbc0038I Full problem 353 rows 370 columns, reduced to 4 rows 10 columns
Cbc0012I Integer solution of -86.97554 found by DiveCoefficient after 56433 iterations and 911 nodes (28.94 seconds)
Cbc0012I Integer solution of -87.29056 found by rounding after 56479 iterations and 915 nodes (28.99 seconds)
Cbc0001I Search completed - best objective -87.29056000000003, took 56944 iterations and 934 nodes (29.13 seconds)
Cbc0032I Strong branching done 2488 times (55967 iterations), fathomed 20 nodes and fixed 81 variables
Cbc0035I Maximum depth 33, 4155 variables fixed on reduced cost
Total time (CPU seconds):       28.51   (Wallclock seconds):       29.21

