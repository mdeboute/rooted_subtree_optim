Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 409 (-44) elements
Clp1000I sum of infeasibilities 2.75591e-05 - average 2.07212e-07, 11 fixed columns
Coin0506I Presolve 109 (-24) rows, 62 (-13) columns and 335 (-74) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 1.8740368 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Coin0511I After Postsolve, objective 63.163676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Coin0511I After Postsolve, objective 63.163676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.16367624 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.28983
Cbc0038I Solution found of 3.30599
Cbc0038I Relaxing continuous gives -3.75163
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -3.75163 to -28.9958 (0.05 seconds)
Cbc0038I Round again with cutoff of -32.3053
Cbc0038I Pass   1: suminf.    2.30315 (22) obj. -32.3053 iterations 27
Cbc0038I Pass   2: suminf.    1.94199 (6) obj. -32.3053 iterations 27
Cbc0038I Pass   3: suminf.    1.94199 (6) obj. -32.3053 iterations 1
Cbc0038I Pass   4: suminf.    2.21409 (7) obj. -32.3053 iterations 17
Cbc0038I Pass   5: suminf.    1.87573 (6) obj. -32.3053 iterations 4
Cbc0038I Pass   6: suminf.    1.55831 (4) obj. -32.3053 iterations 6
Cbc0038I Pass   7: suminf.    1.21820 (4) obj. -32.3053 iterations 9
Cbc0038I Pass   8: suminf.    1.49818 (5) obj. -32.3053 iterations 8
Cbc0038I Pass   9: suminf.    1.21820 (4) obj. -32.3053 iterations 11
Cbc0038I Pass  10: suminf.    1.05669 (4) obj. -32.3053 iterations 12
Cbc0038I Pass  11: suminf.    1.05669 (4) obj. -32.3053 iterations 4
Cbc0038I Pass  12: suminf.    0.88081 (3) obj. -32.3053 iterations 13
Cbc0038I Pass  13: suminf.    0.88081 (3) obj. -32.3053 iterations 0
Cbc0038I Pass  14: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  15: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  16: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  17: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  18: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  19: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  20: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  21: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  22: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  23: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  24: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  25: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  26: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  27: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  28: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  29: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  30: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Rounding solution of -29.4451 is better than previous of -28.9958

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -38.2623
Cbc0038I Pass  30: suminf.    2.78364 (22) obj. -38.2623 iterations 0
Cbc0038I Pass  31: suminf.    2.50738 (11) obj. -38.2623 iterations 39
Cbc0038I Pass  32: suminf.    2.02443 (8) obj. -38.2623 iterations 6
Cbc0038I Pass  33: suminf.    1.96251 (8) obj. -38.2623 iterations 1
Cbc0038I Pass  34: suminf.    2.32178 (7) obj. -38.2623 iterations 16
Cbc0038I Pass  35: suminf.    2.03750 (5) obj. -38.2623 iterations 7
Cbc0038I Pass  36: suminf.    1.97147 (5) obj. -38.2623 iterations 3
Cbc0038I Pass  37: suminf.    1.97147 (5) obj. -38.2623 iterations 0
Cbc0038I Pass  38: suminf.    1.63029 (8) obj. -38.2623 iterations 17
Cbc0038I Pass  39: suminf.    1.31524 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  40: suminf.    1.26130 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  41: suminf.    1.26130 (4) obj. -38.2623 iterations 0
Cbc0038I Pass  42: suminf.    1.88990 (6) obj. -38.2623 iterations 12
Cbc0038I Pass  43: suminf.    1.88990 (6) obj. -38.2623 iterations 10
Cbc0038I Pass  44: suminf.    1.35151 (4) obj. -38.2623 iterations 7
Cbc0038I Pass  45: suminf.    0.85098 (3) obj. -38.2623 iterations 4
Cbc0038I Pass  46: suminf.    1.49954 (4) obj. -38.2623 iterations 3
Cbc0038I Pass  47: suminf.    0.84271 (3) obj. -38.2623 iterations 1
Cbc0038I Pass  48: suminf.    1.21988 (3) obj. -38.2623 iterations 4
Cbc0038I Pass  49: suminf.    2.93503 (9) obj. -38.2623 iterations 20
Cbc0038I Pass  50: suminf.    2.13381 (8) obj. -38.2623 iterations 10
Cbc0038I Pass  51: suminf.    2.06448 (7) obj. -38.2623 iterations 1
Cbc0038I Pass  52: suminf.    1.22201 (7) obj. -38.2623 iterations 12
Cbc0038I Pass  53: suminf.    1.04456 (4) obj. -38.2623 iterations 4
Cbc0038I Pass  54: suminf.    1.90830 (5) obj. -38.2623 iterations 7
Cbc0038I Pass  55: suminf.    1.89514 (5) obj. -38.2623 iterations 2
Cbc0038I Pass  56: suminf.    1.59384 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  57: suminf.    2.45351 (9) obj. -38.2623 iterations 11
Cbc0038I Pass  58: suminf.    1.56546 (5) obj. -38.2623 iterations 14
Cbc0038I Pass  59: suminf.    1.08413 (5) obj. -38.2623 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.4451 - took 0.09 seconds
Cbc0012I Integer solution of -29.44513 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 62 rows 36 columns
Cbc0012I Integer solution of -29.8432 found by RINS after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 8 added rows had average density of 66.25
Cbc0013I At root node, 8 cuts changed objective from -62.089959 to -52.552234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3299 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 746 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 74.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.8432, took 3990 iterations and 22 nodes (0.57 seconds)
Cbc0032I Strong branching done 206 times (2855 iterations), fathomed 2 nodes and fixed 30 variables
Cbc0035I Maximum depth 6, 114 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 118 (-34) columns and 2112 (-1191) elements
Clp1000I sum of infeasibilities 1.92626e-07 - average 1.87016e-09, 70 fixed columns
Coin0506I Presolve 36 (-67) rows, 48 (-70) columns and 163 (-1949) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 3.3005884 - largest nonzero change 2.2797378e-05 ( 0.00086069148%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 64.585258
Clp0000I Optimal - objective value 64.585258
Coin0511I After Postsolve, objective 64.585258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.850024 - largest nonzero change 2.5686005e-05 ( 0.0016580886%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 119.35143
Clp0000I Optimal - objective value 119.35143
Clp0000I Optimal - objective value 119.35143
Coin0511I After Postsolve, objective 119.35143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.351427 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 118 columns (118 integer (118 of which binary)) and 2128 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.191%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.49945
Cbc0038I Pass   1: suminf.    0.88156 (34) obj. -17.5988 iterations 17
Cbc0038I Pass   2: suminf.    0.88156 (34) obj. -17.5988 iterations 1
Cbc0038I Pass   3: suminf.    0.47901 (24) obj. -7.05139 iterations 10
Cbc0038I Solution found of 26.2524
Cbc0038I Rounding solution of 7.0238 is better than previous of 26.2524

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 7.0238 to -49.8652 (0.04 seconds)
Cbc0038I Round again with cutoff of -56.331
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.42990 (40) obj. -56.331 iterations 6
Cbc0038I Pass   5: suminf.    2.42990 (40) obj. -56.331 iterations 0
Cbc0038I Pass   6: suminf.    0.79932 (12) obj. -56.331 iterations 34
Cbc0038I Pass   7: suminf.    0.62008 (12) obj. -60.8856 iterations 3
Cbc0038I Pass   8: suminf.    1.03981 (4) obj. -56.331 iterations 14
Cbc0038I Pass   9: suminf.    0.93333 (3) obj. -65.8165 iterations 1
Cbc0038I Pass  10: suminf.    0.26783 (1) obj. -56.331 iterations 3
Cbc0038I Pass  11: suminf.    0.40000 (1) obj. -64.3499 iterations 2
Cbc0038I Pass  12: suminf.    1.14437 (11) obj. -56.331 iterations 30
Cbc0038I Pass  13: suminf.    0.87049 (10) obj. -56.331 iterations 8
Cbc0038I Pass  14: suminf.    0.68581 (4) obj. -56.331 iterations 19
Cbc0038I Pass  15: suminf.    0.53644 (5) obj. -56.331 iterations 5
Cbc0038I Pass  16: suminf.    0.82047 (2) obj. -61.3668 iterations 11
Cbc0038I Pass  17: suminf.    0.26783 (1) obj. -56.331 iterations 4
Cbc0038I Pass  18: suminf.    0.40000 (1) obj. -64.3499 iterations 2
Cbc0038I Pass  19: suminf.    2.04136 (12) obj. -56.331 iterations 24
Cbc0038I Pass  20: suminf.    1.20329 (10) obj. -56.331 iterations 21
Cbc0038I Pass  21: suminf.    0.71276 (3) obj. -56.331 iterations 15
Cbc0038I Pass  22: suminf.    0.21124 (2) obj. -56.331 iterations 3
Cbc0038I Pass  23: suminf.    0.28880 (2) obj. -56.331 iterations 9
Cbc0038I Pass  24: suminf.    0.28880 (2) obj. -56.331 iterations 0
Cbc0038I Pass  25: suminf.    0.42424 (1) obj. -56.6845 iterations 6
Cbc0038I Pass  26: suminf.    1.56342 (12) obj. -56.331 iterations 22
Cbc0038I Pass  27: suminf.    1.55264 (11) obj. -56.331 iterations 7
Cbc0038I Pass  28: suminf.    0.23614 (2) obj. -56.331 iterations 18
Cbc0038I Pass  29: suminf.    0.39896 (2) obj. -56.331 iterations 9
Cbc0038I Pass  30: suminf.    0.39896 (2) obj. -56.331 iterations 0
Cbc0038I Pass  31: suminf.    0.40892 (2) obj. -56.331 iterations 5
Cbc0038I Pass  32: suminf.    0.83225 (7) obj. -57.5884 iterations 26
Cbc0038I Pass  33: suminf.    0.83225 (7) obj. -57.5884 iterations 6
Cbc0038I Rounding solution of -54.5743 is better than previous of -49.8652

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 13 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -54.5743 to -60.6117 (0.06 seconds)
Cbc0038I Round again with cutoff of -71.3939
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.64315 (40) obj. -71.3939 iterations 0
Cbc0038I Pass  34: suminf.    2.64315 (40) obj. -71.3939 iterations 0
Cbc0038I Pass  35: suminf.    1.44317 (16) obj. -71.3939 iterations 36
Cbc0038I Pass  36: suminf.    1.25986 (16) obj. -71.3939 iterations 1
Cbc0038I Pass  37: suminf.    0.84945 (4) obj. -71.3939 iterations 18
Cbc0038I Pass  38: suminf.    0.57785 (3) obj. -71.3939 iterations 5
Cbc0038I Pass  39: suminf.    0.56708 (3) obj. -71.6815 iterations 2
Cbc0038I Pass  40: suminf.    1.28443 (5) obj. -71.3939 iterations 9
Cbc0038I Pass  41: suminf.    1.37001 (11) obj. -71.3939 iterations 13
Cbc0038I Pass  42: suminf.    0.88166 (8) obj. -73.3482 iterations 7
Cbc0038I Pass  43: suminf.    1.40000 (4) obj. -71.3939 iterations 12
Cbc0038I Pass  44: suminf.    0.57785 (3) obj. -71.3939 iterations 8
Cbc0038I Pass  45: suminf.    0.56708 (3) obj. -71.6815 iterations 2
Cbc0038I Pass  46: suminf.    1.28443 (5) obj. -71.3939 iterations 8
Cbc0038I Pass  47: suminf.    2.09354 (10) obj. -71.3939 iterations 12
Cbc0038I Pass  48: suminf.    2.06194 (10) obj. -71.3939 iterations 3
Cbc0038I Pass  49: suminf.    1.40000 (4) obj. -71.3939 iterations 13
Cbc0038I Pass  50: suminf.    0.57785 (3) obj. -71.3939 iterations 8
Cbc0038I Pass  51: suminf.    0.56708 (3) obj. -71.6815 iterations 2
Cbc0038I Pass  52: suminf.    1.28443 (5) obj. -71.3939 iterations 8
Cbc0038I Pass  53: suminf.    1.97031 (13) obj. -71.3939 iterations 22
Cbc0038I Pass  54: suminf.    1.67450 (12) obj. -71.3939 iterations 6
Cbc0038I Pass  55: suminf.    0.63900 (3) obj. -71.3939 iterations 27
Cbc0038I Pass  56: suminf.    1.74612 (12) obj. -71.3939 iterations 17
Cbc0038I Pass  57: suminf.    1.74612 (12) obj. -71.3939 iterations 0
Cbc0038I Pass  58: suminf.    1.28443 (5) obj. -71.3939 iterations 20
Cbc0038I Pass  59: suminf.    0.57785 (3) obj. -71.3939 iterations 6
Cbc0038I Pass  60: suminf.    0.56708 (3) obj. -71.6815 iterations 2
Cbc0038I Pass  61: suminf.    1.28443 (5) obj. -71.3939 iterations 8
Cbc0038I Pass  62: suminf.    2.14064 (10) obj. -71.3939 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 46 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -60.6117 - took 0.05 seconds
Cbc0012I Integer solution of -60.61166 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 28 added rows had average density of 10.25
Cbc0013I At root node, 91 cuts changed objective from -114.52243 to -60.61166 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 525 row cuts average 2.4 elements, 24 column cuts (24 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 43 row cuts average 67.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 143 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 201 row cuts average 52.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -60.61166, took 268 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.20

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 409 (-44) elements
Clp1000I sum of infeasibilities 2.75591e-05 - average 2.07212e-07, 11 fixed columns
Coin0506I Presolve 109 (-24) rows, 62 (-13) columns and 335 (-74) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 1.8740368 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Coin0511I After Postsolve, objective 63.163676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Coin0511I After Postsolve, objective 63.163676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.16367624 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.28983
Cbc0038I Solution found of 3.30599
Cbc0038I Relaxing continuous gives -3.75163
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -3.75163 to -28.9958 (0.05 seconds)
Cbc0038I Round again with cutoff of -32.3053
Cbc0038I Pass   1: suminf.    2.30315 (22) obj. -32.3053 iterations 27
Cbc0038I Pass   2: suminf.    1.94199 (6) obj. -32.3053 iterations 27
Cbc0038I Pass   3: suminf.    1.94199 (6) obj. -32.3053 iterations 1
Cbc0038I Pass   4: suminf.    2.21409 (7) obj. -32.3053 iterations 17
Cbc0038I Pass   5: suminf.    1.87573 (6) obj. -32.3053 iterations 4
Cbc0038I Pass   6: suminf.    1.55831 (4) obj. -32.3053 iterations 6
Cbc0038I Pass   7: suminf.    1.21820 (4) obj. -32.3053 iterations 9
Cbc0038I Pass   8: suminf.    1.49818 (5) obj. -32.3053 iterations 8
Cbc0038I Pass   9: suminf.    1.21820 (4) obj. -32.3053 iterations 11
Cbc0038I Pass  10: suminf.    1.05669 (4) obj. -32.3053 iterations 12
Cbc0038I Pass  11: suminf.    1.05669 (4) obj. -32.3053 iterations 4
Cbc0038I Pass  12: suminf.    0.88081 (3) obj. -32.3053 iterations 13
Cbc0038I Pass  13: suminf.    0.88081 (3) obj. -32.3053 iterations 0
Cbc0038I Pass  14: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  15: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  16: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  17: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  18: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  19: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  20: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  21: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  22: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  23: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  24: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  25: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  26: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  27: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  28: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  29: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  30: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Rounding solution of -29.4451 is better than previous of -28.9958

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -38.2623
Cbc0038I Pass  30: suminf.    2.78364 (22) obj. -38.2623 iterations 0
Cbc0038I Pass  31: suminf.    2.50738 (11) obj. -38.2623 iterations 39
Cbc0038I Pass  32: suminf.    2.02443 (8) obj. -38.2623 iterations 6
Cbc0038I Pass  33: suminf.    1.96251 (8) obj. -38.2623 iterations 1
Cbc0038I Pass  34: suminf.    2.32178 (7) obj. -38.2623 iterations 16
Cbc0038I Pass  35: suminf.    2.03750 (5) obj. -38.2623 iterations 7
Cbc0038I Pass  36: suminf.    1.97147 (5) obj. -38.2623 iterations 3
Cbc0038I Pass  37: suminf.    1.97147 (5) obj. -38.2623 iterations 0
Cbc0038I Pass  38: suminf.    1.63029 (8) obj. -38.2623 iterations 17
Cbc0038I Pass  39: suminf.    1.31524 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  40: suminf.    1.26130 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  41: suminf.    1.26130 (4) obj. -38.2623 iterations 0
Cbc0038I Pass  42: suminf.    1.88990 (6) obj. -38.2623 iterations 12
Cbc0038I Pass  43: suminf.    1.88990 (6) obj. -38.2623 iterations 10
Cbc0038I Pass  44: suminf.    1.35151 (4) obj. -38.2623 iterations 7
Cbc0038I Pass  45: suminf.    0.85098 (3) obj. -38.2623 iterations 4
Cbc0038I Pass  46: suminf.    1.49954 (4) obj. -38.2623 iterations 3
Cbc0038I Pass  47: suminf.    0.84271 (3) obj. -38.2623 iterations 1
Cbc0038I Pass  48: suminf.    1.21988 (3) obj. -38.2623 iterations 4
Cbc0038I Pass  49: suminf.    2.93503 (9) obj. -38.2623 iterations 20
Cbc0038I Pass  50: suminf.    2.13381 (8) obj. -38.2623 iterations 10
Cbc0038I Pass  51: suminf.    2.06448 (7) obj. -38.2623 iterations 1
Cbc0038I Pass  52: suminf.    1.22201 (7) obj. -38.2623 iterations 12
Cbc0038I Pass  53: suminf.    1.04456 (4) obj. -38.2623 iterations 4
Cbc0038I Pass  54: suminf.    1.90830 (5) obj. -38.2623 iterations 7
Cbc0038I Pass  55: suminf.    1.89514 (5) obj. -38.2623 iterations 2
Cbc0038I Pass  56: suminf.    1.59384 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  57: suminf.    2.45351 (9) obj. -38.2623 iterations 11
Cbc0038I Pass  58: suminf.    1.56546 (5) obj. -38.2623 iterations 14
Cbc0038I Pass  59: suminf.    1.08413 (5) obj. -38.2623 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.4451 - took 0.09 seconds
Cbc0012I Integer solution of -29.44513 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 62 rows 36 columns
Cbc0012I Integer solution of -29.8432 found by RINS after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 8 added rows had average density of 66.25
Cbc0013I At root node, 8 cuts changed objective from -62.089959 to -52.552234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3299 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 746 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 74.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.8432, took 3990 iterations and 22 nodes (0.62 seconds)
Cbc0032I Strong branching done 206 times (2855 iterations), fathomed 2 nodes and fixed 30 variables
Cbc0035I Maximum depth 6, 114 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 117 (-36) columns and 2068 (-1236) elements
Clp1000I sum of infeasibilities 2.47045e-07 - average 2.42201e-09, 17 fixed columns
Coin0506I Presolve 86 (-16) rows, 100 (-17) columns and 1537 (-531) elements
Clp0006I 0  Obj 67.195951 Dual inf 14.295669 (99)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.2004234 - largest nonzero change 1.1236387e-05 ( 0.00085132148%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 77.332611
Clp0000I Optimal - objective value 77.332611
Coin0511I After Postsolve, objective 77.332611, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 77.332611
Clp0000I Optimal - objective value 77.332611
Clp0000I Optimal - objective value 77.332611
Clp0000I Optimal - objective value 77.332611
Coin0511I After Postsolve, objective 77.332611, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.33261107 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 117 columns (117 integer (117 of which binary)) and 2091 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.46459
Cbc0038I Pass   1: suminf.    1.07629 (25) obj. -34.4784 iterations 21
Cbc0038I Pass   2: suminf.    1.07629 (25) obj. -34.4784 iterations 1
Cbc0038I Pass   3: suminf.    0.43101 (12) obj. -18.3055 iterations 13
Cbc0038I Pass   4: suminf.    0.05342 (2) obj. -7.72654 iterations 10
Cbc0038I Solution found of -5.77996
Cbc0038I Rounding solution of -16.2996 is better than previous of -5.77996

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 41 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -16.2996 to -19.1496 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.7324
Cbc0038I Pass   5: suminf.    1.07629 (25) obj. -34.4784 iterations 0
Cbc0038I Pass   6: suminf.    1.07629 (25) obj. -34.4784 iterations 1
Cbc0038I Pass   7: suminf.    1.45452 (15) obj. -23.7324 iterations 40
Cbc0038I Pass   8: suminf.    1.58194 (6) obj. -23.7324 iterations 24
Cbc0038I Pass   9: suminf.    1.58194 (6) obj. -23.7324 iterations 1
Cbc0038I Pass  10: suminf.    1.03674 (4) obj. -23.7324 iterations 13
Cbc0038I Pass  11: suminf.    1.01261 (5) obj. -23.7324 iterations 5
Cbc0038I Pass  12: suminf.    1.94162 (8) obj. -23.7324 iterations 18
Cbc0038I Pass  13: suminf.    1.41659 (6) obj. -23.7324 iterations 12
Cbc0038I Pass  14: suminf.    2.80713 (9) obj. -23.7324 iterations 17
Cbc0038I Pass  15: suminf.    1.40374 (7) obj. -23.7324 iterations 9
Cbc0038I Pass  16: suminf.    1.40374 (7) obj. -23.7324 iterations 0
Cbc0038I Pass  17: suminf.    2.44033 (6) obj. -23.7324 iterations 14
Cbc0038I Pass  18: suminf.    1.31613 (6) obj. -23.7324 iterations 2
Cbc0038I Pass  19: suminf.    1.03747 (5) obj. -23.7324 iterations 5
Cbc0038I Pass  20: suminf.    2.31701 (7) obj. -23.7324 iterations 9
Cbc0038I Pass  21: suminf.    2.31701 (7) obj. -23.7324 iterations 1
Cbc0038I Pass  22: suminf.    1.94162 (8) obj. -23.7324 iterations 10
Cbc0038I Pass  23: suminf.    1.41659 (6) obj. -23.7324 iterations 12
Cbc0038I Pass  24: suminf.    2.80713 (9) obj. -23.7324 iterations 17
Cbc0038I Pass  25: suminf.    1.40374 (7) obj. -23.7324 iterations 9
Cbc0038I Pass  26: suminf.    1.40374 (7) obj. -23.7324 iterations 0
Cbc0038I Pass  27: suminf.    2.44033 (6) obj. -23.7324 iterations 14
Cbc0038I Pass  28: suminf.    1.31613 (6) obj. -23.7324 iterations 2
Cbc0038I Pass  29: suminf.    1.03747 (5) obj. -23.7324 iterations 5
Cbc0038I Pass  30: suminf.    2.31701 (7) obj. -23.7324 iterations 9
Cbc0038I Pass  31: suminf.    2.31701 (7) obj. -23.7324 iterations 1
Cbc0038I Pass  32: suminf.    1.94162 (8) obj. -23.7324 iterations 10
Cbc0038I Pass  33: suminf.    1.41659 (6) obj. -23.7324 iterations 12
Cbc0038I Pass  34: suminf.    2.80713 (9) obj. -23.7324 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 45 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -19.1496 - took 0.04 seconds
Cbc0012I Integer solution of -19.14956 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 99 rows 117 columns, reduced to 4 rows 4 columns
Cbc0031I 37 added rows had average density of 48.972973
Cbc0013I At root node, 37 cuts changed objective from -64.976781 to -40.534767 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10170 row cuts average 5.3 elements, 0 column cuts (16 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2056 row cuts average 111.8 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 556 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 618 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 334 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 179 row cuts average 39.2 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.14956 best solution, best possible -40.534767 (2.60 seconds)
Cbc0012I Integer solution of -23.534 found by rounding after 4021 iterations and 1 nodes (2.61 seconds)
Cbc0004I Integer solution of -29.44513 found after 4028 iterations and 1 nodes (2.65 seconds)
Cbc0010I After 8 nodes, 7 on tree, -29.44513 best solution, best possible -39.280765 (3.33 seconds)
Cbc0010I After 22 nodes, 12 on tree, -29.44513 best solution, best possible -39.280765 (4.05 seconds)
Cbc0038I Full problem 99 rows 117 columns, reduced to 50 rows 59 columns
Cbc0012I Integer solution of -29.8432 found by RINS after 5832 iterations and 43 nodes (4.99 seconds)
Cbc0010I After 43 nodes, 11 on tree, -29.8432 best solution, best possible -39.280765 (4.99 seconds)
Cbc0010I After 62 nodes, 11 on tree, -29.8432 best solution, best possible -39.280765 (5.73 seconds)
Cbc0001I Search completed - best objective -29.8432, took 8052 iterations and 86 nodes (6.30 seconds)
Cbc0032I Strong branching done 992 times (18149 iterations), fathomed 6 nodes and fixed 19 variables
Cbc0035I Maximum depth 19, 198 variables fixed on reduced cost
Total time (CPU seconds):       4.29   (Wallclock seconds):       6.32

