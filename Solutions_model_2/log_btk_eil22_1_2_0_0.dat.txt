Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 1.43326e-06 - average 3.98128e-08, 2 fixed columns
Coin0506I Presolve 32 (-4) rows, 20 (-2) columns and 96 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 82.044722
Clp0000I Optimal - objective value 82.044722
Coin0511I After Postsolve, objective 82.044722, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.044722
Clp0000I Optimal - objective value 82.044722
Clp0000I Optimal - objective value 82.044722
Coin0511I After Postsolve, objective 82.044722, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.04472238 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.78527
Cbc0038I Solution found of 9.20678
Cbc0038I Relaxing continuous gives -9.03894
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -9.03894 to -40.4063 (0.01 seconds)
Cbc0038I Round again with cutoff of -44.5702
Cbc0038I Pass   1: suminf.    2.13827 (11) obj. -44.5702 iterations 8
Cbc0038I Pass   2: suminf.    1.46323 (6) obj. -44.5702 iterations 13
Cbc0038I Pass   3: suminf.    1.18850 (5) obj. -44.5702 iterations 4
Cbc0038I Pass   4: suminf.    0.08711 (2) obj. -44.5702 iterations 7
Cbc0038I Pass   5: suminf.    0.08711 (2) obj. -44.5702 iterations 0
Cbc0038I Pass   6: suminf.    0.47874 (2) obj. -44.5702 iterations 6
Cbc0038I Pass   7: suminf.    0.42833 (1) obj. -44.5702 iterations 1
Cbc0038I Pass   8: suminf.    0.44613 (2) obj. -44.5702 iterations 6
Cbc0038I Pass   9: suminf.    1.38397 (5) obj. -44.5702 iterations 11
Cbc0038I Pass  10: suminf.    1.36311 (6) obj. -44.5702 iterations 2
Cbc0038I Pass  11: suminf.    1.35963 (3) obj. -44.5702 iterations 10
Cbc0038I Pass  12: suminf.    1.03026 (3) obj. -44.5702 iterations 3
Cbc0038I Pass  13: suminf.    1.31623 (4) obj. -44.5702 iterations 7
Cbc0038I Pass  14: suminf.    0.65461 (4) obj. -44.5702 iterations 1
Cbc0038I Pass  15: suminf.    0.65461 (4) obj. -44.5702 iterations 0
Cbc0038I Pass  16: suminf.    1.03219 (3) obj. -44.5702 iterations 5
Cbc0038I Pass  17: suminf.    1.03026 (3) obj. -44.5702 iterations 1
Cbc0038I Pass  18: suminf.    1.31623 (4) obj. -44.5702 iterations 7
Cbc0038I Pass  19: suminf.    0.65461 (4) obj. -44.5702 iterations 1
Cbc0038I Pass  20: suminf.    0.65461 (4) obj. -44.5702 iterations 0
Cbc0038I Pass  21: suminf.    1.03219 (3) obj. -44.5702 iterations 5
Cbc0038I Pass  22: suminf.    1.03026 (3) obj. -44.5702 iterations 1
Cbc0038I Pass  23: suminf.    1.31623 (4) obj. -44.5702 iterations 7
Cbc0038I Pass  24: suminf.    0.65461 (4) obj. -44.5702 iterations 1
Cbc0038I Pass  25: suminf.    0.65461 (4) obj. -44.5702 iterations 0
Cbc0038I Pass  26: suminf.    1.03219 (3) obj. -44.5702 iterations 5
Cbc0038I Pass  27: suminf.    1.03026 (3) obj. -44.5702 iterations 1
Cbc0038I Pass  28: suminf.    1.31623 (4) obj. -44.5702 iterations 7
Cbc0038I Pass  29: suminf.    0.65461 (4) obj. -44.5702 iterations 1
Cbc0038I Pass  30: suminf.    0.65461 (4) obj. -44.5702 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -40.4063 - took 0.03 seconds
Cbc0012I Integer solution of -40.40629 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 10 added rows had average density of 19
Cbc0013I At root node, 10 cuts changed objective from -82.044722 to -54.146413 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1246 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 682 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -42.34559 found by DiveCoefficient after 1689 iterations and 3 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -42.34559, took 1718 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 42 times (366 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-12) rows, 40 (-4) columns and 291 (-69) elements
Clp1000I sum of infeasibilities 1.53969e-09 - average 4.5285e-11, 27 fixed columns
Coin0506I Presolve 8 (-26) rows, 13 (-27) columns and 36 (-255) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 0.95467333 - largest nonzero change 1.6022973e-05 ( 0.00080114863%) - largest zero change 1.338872e-05
Clp0000I Optimal - objective value 8.7330414
Clp0000I Optimal - objective value 8.7330414
Coin0511I After Postsolve, objective 8.7330414, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28362143 - largest nonzero change 1.2737535e-05 ( 0.0010614613%) - largest zero change 2.465854e-05
Clp0000I Optimal - objective value 94.51843
Clp0000I Optimal - objective value 94.51843
Clp0000I Optimal - objective value 94.51843
Coin0511I After Postsolve, objective 94.51843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.51843039 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 40 columns (40 integer (40 of which binary)) and 293 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.994%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.76901
Cbc0038I Pass   1: suminf.    1.59604 (10) obj. -57.2657 iterations 5
Cbc0038I Solution found of -27.9978
Cbc0038I Rounding solution of -31.9564 is better than previous of -27.9978

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.0877
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.59604 (10) obj. -57.2657 iterations 0
Cbc0038I Pass   3: suminf.    0.34059 (2) obj. -36.0877 iterations 12
Cbc0038I Pass   4: suminf.    0.19048 (1) obj. -40.2508 iterations 2
Cbc0038I Pass   5: suminf.    0.09487 (1) obj. -36.0877 iterations 1
Cbc0038I Pass   6: suminf.    1.17369 (6) obj. -36.0877 iterations 9
Cbc0038I Pass   7: suminf.    1.17369 (6) obj. -36.0877 iterations 0
Cbc0038I Pass   8: suminf.    0.42419 (2) obj. -36.0877 iterations 7
Cbc0038I Pass   9: suminf.    0.42419 (2) obj. -36.0877 iterations 0
Cbc0038I Pass  10: suminf.    0.59938 (2) obj. -36.0877 iterations 1
Cbc0038I Pass  11: suminf.    0.84446 (7) obj. -36.0877 iterations 10
Cbc0038I Pass  12: suminf.    0.67851 (5) obj. -36.0877 iterations 5
Cbc0038I Pass  13: suminf.    0.67165 (4) obj. -36.0877 iterations 6
Cbc0038I Pass  14: suminf.    0.63664 (3) obj. -36.0877 iterations 6
Cbc0038I Pass  15: suminf.    0.93011 (3) obj. -36.0877 iterations 2
Cbc0038I Pass  16: suminf.    0.54200 (2) obj. -38.1918 iterations 2
Cbc0038I Pass  17: suminf.    0.67165 (4) obj. -36.0877 iterations 6
Cbc0038I Pass  18: suminf.    0.74241 (4) obj. -36.0877 iterations 8
Cbc0038I Pass  19: suminf.    0.74241 (4) obj. -36.0877 iterations 0
Cbc0038I Pass  20: suminf.    0.80592 (3) obj. -36.0877 iterations 3
Cbc0038I Pass  21: suminf.    0.58377 (3) obj. -36.0877 iterations 2
Cbc0038I Pass  22: suminf.    1.04665 (4) obj. -36.0877 iterations 4
Cbc0038I Pass  23: suminf.    1.01164 (3) obj. -36.0877 iterations 5
Cbc0038I Pass  24: suminf.    0.77450 (5) obj. -40.4328 iterations 12
Cbc0038I Pass  25: suminf.    0.77450 (5) obj. -40.4328 iterations 0
Cbc0038I Pass  26: suminf.    0.92165 (4) obj. -36.0877 iterations 11
Cbc0038I Pass  27: suminf.    0.88664 (3) obj. -36.0877 iterations 4
Cbc0038I Pass  28: suminf.    0.84731 (3) obj. -36.0877 iterations 2
Cbc0038I Pass  29: suminf.    0.54200 (2) obj. -36.1918 iterations 2
Cbc0038I Pass  30: suminf.    1.17662 (8) obj. -36.0877 iterations 8
Cbc0038I Pass  31: suminf.    0.63494 (4) obj. -36.0877 iterations 1
Cbc0038I Rounding solution of -35.3925 is better than previous of -31.9564

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 40 columns, reduced to 18 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -35.3925 to -40.4063 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.9789
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.59604 (10) obj. -57.2657 iterations 0
Cbc0038I Pass  32: suminf.    1.63128 (4) obj. -46.9789 iterations 17
Cbc0038I Pass  33: suminf.    1.37082 (4) obj. -46.9789 iterations 2
Cbc0038I Pass  34: suminf.    1.37082 (4) obj. -46.9789 iterations 1
Cbc0038I Pass  35: suminf.    0.45244 (4) obj. -46.9789 iterations 4
Cbc0038I Pass  36: suminf.    0.45244 (4) obj. -46.9789 iterations 1
Cbc0038I Pass  37: suminf.    1.37708 (4) obj. -46.9789 iterations 5
Cbc0038I Pass  38: suminf.    1.37708 (4) obj. -46.9789 iterations 1
Cbc0038I Pass  39: suminf.    1.89119 (13) obj. -46.9789 iterations 17
Cbc0038I Pass  40: suminf.    1.65245 (10) obj. -46.9789 iterations 4
Cbc0038I Pass  41: suminf.    1.92093 (6) obj. -46.9789 iterations 13
Cbc0038I Pass  42: suminf.    1.39320 (6) obj. -46.9789 iterations 3
Cbc0038I Pass  43: suminf.    1.73292 (5) obj. -46.9789 iterations 6
Cbc0038I Pass  44: suminf.    1.73292 (5) obj. -46.9789 iterations 2
Cbc0038I Pass  45: suminf.    1.68128 (5) obj. -46.9789 iterations 4
Cbc0038I Pass  46: suminf.    1.68128 (5) obj. -46.9789 iterations 2
Cbc0038I Pass  47: suminf.    1.73292 (5) obj. -46.9789 iterations 5
Cbc0038I Pass  48: suminf.    1.11827 (5) obj. -46.9789 iterations 10
Cbc0038I Pass  49: suminf.    1.11827 (5) obj. -46.9789 iterations 0
Cbc0038I Pass  50: suminf.    1.00833 (4) obj. -46.9789 iterations 8
Cbc0038I Pass  51: suminf.    0.57899 (4) obj. -46.9789 iterations 2
Cbc0038I Pass  52: suminf.    1.55628 (5) obj. -46.9789 iterations 7
Cbc0038I Pass  53: suminf.    1.55628 (5) obj. -46.9789 iterations 0
Cbc0038I Pass  54: suminf.    1.56625 (5) obj. -46.9789 iterations 6
Cbc0038I Pass  55: suminf.    1.56625 (5) obj. -46.9789 iterations 2
Cbc0038I Pass  56: suminf.    1.55628 (5) obj. -46.9789 iterations 5
Cbc0038I Pass  57: suminf.    1.67701 (11) obj. -46.9789 iterations 16
Cbc0038I Pass  58: suminf.    0.54970 (4) obj. -46.9789 iterations 4
Cbc0038I Pass  59: suminf.    0.37968 (3) obj. -47.0375 iterations 4
Cbc0038I Pass  60: suminf.    1.00833 (4) obj. -46.9789 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 40 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -40.4063 - took 0.02 seconds
Cbc0012I Integer solution of -40.40629 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 40 columns, reduced to 7 rows 8 columns
Cbc0012I Integer solution of -42.34559 found by DiveCoefficient after 92 iterations and 0 nodes (0.15 seconds)
Cbc0031I 22 added rows had average density of 6.7727273
Cbc0013I At root node, 22 cuts changed objective from -73.268823 to -42.34559 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 222 row cuts average 4.0 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 59 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0001I Search completed - best objective -42.34559, took 92 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 1.43326e-06 - average 3.98128e-08, 2 fixed columns
Coin0506I Presolve 32 (-4) rows, 20 (-2) columns and 96 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 82.044722
Clp0000I Optimal - objective value 82.044722
Coin0511I After Postsolve, objective 82.044722, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.044722
Clp0000I Optimal - objective value 82.044722
Clp0000I Optimal - objective value 82.044722
Coin0511I After Postsolve, objective 82.044722, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.04472238 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.78527
Cbc0038I Solution found of 9.20678
Cbc0038I Relaxing continuous gives -9.03894
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -9.03894 to -40.4063 (0.01 seconds)
Cbc0038I Round again with cutoff of -44.5702
Cbc0038I Pass   1: suminf.    2.13827 (11) obj. -44.5702 iterations 8
Cbc0038I Pass   2: suminf.    1.46323 (6) obj. -44.5702 iterations 13
Cbc0038I Pass   3: suminf.    1.18850 (5) obj. -44.5702 iterations 4
Cbc0038I Pass   4: suminf.    0.08711 (2) obj. -44.5702 iterations 7
Cbc0038I Pass   5: suminf.    0.08711 (2) obj. -44.5702 iterations 0
Cbc0038I Pass   6: suminf.    0.47874 (2) obj. -44.5702 iterations 6
Cbc0038I Pass   7: suminf.    0.42833 (1) obj. -44.5702 iterations 1
Cbc0038I Pass   8: suminf.    0.44613 (2) obj. -44.5702 iterations 6
Cbc0038I Pass   9: suminf.    1.38397 (5) obj. -44.5702 iterations 11
Cbc0038I Pass  10: suminf.    1.36311 (6) obj. -44.5702 iterations 2
Cbc0038I Pass  11: suminf.    1.35963 (3) obj. -44.5702 iterations 10
Cbc0038I Pass  12: suminf.    1.03026 (3) obj. -44.5702 iterations 3
Cbc0038I Pass  13: suminf.    1.31623 (4) obj. -44.5702 iterations 7
Cbc0038I Pass  14: suminf.    0.65461 (4) obj. -44.5702 iterations 1
Cbc0038I Pass  15: suminf.    0.65461 (4) obj. -44.5702 iterations 0
Cbc0038I Pass  16: suminf.    1.03219 (3) obj. -44.5702 iterations 5
Cbc0038I Pass  17: suminf.    1.03026 (3) obj. -44.5702 iterations 1
Cbc0038I Pass  18: suminf.    1.31623 (4) obj. -44.5702 iterations 7
Cbc0038I Pass  19: suminf.    0.65461 (4) obj. -44.5702 iterations 1
Cbc0038I Pass  20: suminf.    0.65461 (4) obj. -44.5702 iterations 0
Cbc0038I Pass  21: suminf.    1.03219 (3) obj. -44.5702 iterations 5
Cbc0038I Pass  22: suminf.    1.03026 (3) obj. -44.5702 iterations 1
Cbc0038I Pass  23: suminf.    1.31623 (4) obj. -44.5702 iterations 7
Cbc0038I Pass  24: suminf.    0.65461 (4) obj. -44.5702 iterations 1
Cbc0038I Pass  25: suminf.    0.65461 (4) obj. -44.5702 iterations 0
Cbc0038I Pass  26: suminf.    1.03219 (3) obj. -44.5702 iterations 5
Cbc0038I Pass  27: suminf.    1.03026 (3) obj. -44.5702 iterations 1
Cbc0038I Pass  28: suminf.    1.31623 (4) obj. -44.5702 iterations 7
Cbc0038I Pass  29: suminf.    0.65461 (4) obj. -44.5702 iterations 1
Cbc0038I Pass  30: suminf.    0.65461 (4) obj. -44.5702 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -40.4063 - took 0.03 seconds
Cbc0012I Integer solution of -40.40629 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 10 added rows had average density of 19
Cbc0013I At root node, 10 cuts changed objective from -82.044722 to -54.146413 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1246 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 682 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -42.34559 found by DiveCoefficient after 1689 iterations and 3 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -42.34559, took 1718 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 42 times (366 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 40 (-5) columns and 291 (-70) elements
Clp1000I sum of infeasibilities 1.53969e-09 - average 4.5285e-11, 27 fixed columns
Coin0506I Presolve 8 (-26) rows, 13 (-27) columns and 36 (-255) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 0.95467333 - largest nonzero change 1.6022973e-05 ( 0.00080114863%) - largest zero change 1.338872e-05
Clp0000I Optimal - objective value 8.7330414
Clp0000I Optimal - objective value 8.7330414
Coin0511I After Postsolve, objective 8.7330414, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28362143 - largest nonzero change 1.2737535e-05 ( 0.0010614613%) - largest zero change 2.465854e-05
Clp0000I Optimal - objective value 94.51843
Clp0000I Optimal - objective value 94.51843
Clp0000I Optimal - objective value 94.51843
Coin0511I After Postsolve, objective 94.51843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.51843039 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 40 columns (40 integer (40 of which binary)) and 293 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.994%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.76901
Cbc0038I Pass   1: suminf.    1.59604 (10) obj. -57.2657 iterations 5
Cbc0038I Solution found of -27.9978
Cbc0038I Rounding solution of -31.9564 is better than previous of -27.9978

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.0877
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.59604 (10) obj. -57.2657 iterations 0
Cbc0038I Pass   3: suminf.    0.34059 (2) obj. -36.0877 iterations 12
Cbc0038I Pass   4: suminf.    0.19048 (1) obj. -40.2508 iterations 2
Cbc0038I Pass   5: suminf.    0.09487 (1) obj. -36.0877 iterations 1
Cbc0038I Pass   6: suminf.    1.17369 (6) obj. -36.0877 iterations 9
Cbc0038I Pass   7: suminf.    1.17369 (6) obj. -36.0877 iterations 0
Cbc0038I Pass   8: suminf.    0.42419 (2) obj. -36.0877 iterations 7
Cbc0038I Pass   9: suminf.    0.42419 (2) obj. -36.0877 iterations 0
Cbc0038I Pass  10: suminf.    0.59938 (2) obj. -36.0877 iterations 1
Cbc0038I Pass  11: suminf.    0.84446 (7) obj. -36.0877 iterations 10
Cbc0038I Pass  12: suminf.    0.67851 (5) obj. -36.0877 iterations 5
Cbc0038I Pass  13: suminf.    0.67165 (4) obj. -36.0877 iterations 6
Cbc0038I Pass  14: suminf.    0.63664 (3) obj. -36.0877 iterations 6
Cbc0038I Pass  15: suminf.    0.93011 (3) obj. -36.0877 iterations 2
Cbc0038I Pass  16: suminf.    0.54200 (2) obj. -38.1918 iterations 2
Cbc0038I Pass  17: suminf.    0.67165 (4) obj. -36.0877 iterations 6
Cbc0038I Pass  18: suminf.    0.74241 (4) obj. -36.0877 iterations 8
Cbc0038I Pass  19: suminf.    0.74241 (4) obj. -36.0877 iterations 0
Cbc0038I Pass  20: suminf.    0.80592 (3) obj. -36.0877 iterations 3
Cbc0038I Pass  21: suminf.    0.58377 (3) obj. -36.0877 iterations 2
Cbc0038I Pass  22: suminf.    1.04665 (4) obj. -36.0877 iterations 4
Cbc0038I Pass  23: suminf.    1.01164 (3) obj. -36.0877 iterations 5
Cbc0038I Pass  24: suminf.    0.77450 (5) obj. -40.4328 iterations 12
Cbc0038I Pass  25: suminf.    0.77450 (5) obj. -40.4328 iterations 0
Cbc0038I Pass  26: suminf.    0.92165 (4) obj. -36.0877 iterations 11
Cbc0038I Pass  27: suminf.    0.88664 (3) obj. -36.0877 iterations 4
Cbc0038I Pass  28: suminf.    0.84731 (3) obj. -36.0877 iterations 2
Cbc0038I Pass  29: suminf.    0.54200 (2) obj. -36.1918 iterations 2
Cbc0038I Pass  30: suminf.    1.17662 (8) obj. -36.0877 iterations 8
Cbc0038I Pass  31: suminf.    0.63494 (4) obj. -36.0877 iterations 1
Cbc0038I Rounding solution of -35.3925 is better than previous of -31.9564

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 40 columns, reduced to 18 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -35.3925 to -40.4063 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.9789
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.59604 (10) obj. -57.2657 iterations 0
Cbc0038I Pass  32: suminf.    1.63128 (4) obj. -46.9789 iterations 17
Cbc0038I Pass  33: suminf.    1.37082 (4) obj. -46.9789 iterations 2
Cbc0038I Pass  34: suminf.    1.37082 (4) obj. -46.9789 iterations 1
Cbc0038I Pass  35: suminf.    0.45244 (4) obj. -46.9789 iterations 4
Cbc0038I Pass  36: suminf.    0.45244 (4) obj. -46.9789 iterations 1
Cbc0038I Pass  37: suminf.    1.37708 (4) obj. -46.9789 iterations 5
Cbc0038I Pass  38: suminf.    1.37708 (4) obj. -46.9789 iterations 1
Cbc0038I Pass  39: suminf.    1.89119 (13) obj. -46.9789 iterations 17
Cbc0038I Pass  40: suminf.    1.65245 (10) obj. -46.9789 iterations 4
Cbc0038I Pass  41: suminf.    1.92093 (6) obj. -46.9789 iterations 13
Cbc0038I Pass  42: suminf.    1.39320 (6) obj. -46.9789 iterations 3
Cbc0038I Pass  43: suminf.    1.73292 (5) obj. -46.9789 iterations 6
Cbc0038I Pass  44: suminf.    1.73292 (5) obj. -46.9789 iterations 2
Cbc0038I Pass  45: suminf.    1.68128 (5) obj. -46.9789 iterations 4
Cbc0038I Pass  46: suminf.    1.68128 (5) obj. -46.9789 iterations 2
Cbc0038I Pass  47: suminf.    1.73292 (5) obj. -46.9789 iterations 5
Cbc0038I Pass  48: suminf.    1.11827 (5) obj. -46.9789 iterations 10
Cbc0038I Pass  49: suminf.    1.11827 (5) obj. -46.9789 iterations 0
Cbc0038I Pass  50: suminf.    1.00833 (4) obj. -46.9789 iterations 8
Cbc0038I Pass  51: suminf.    0.57899 (4) obj. -46.9789 iterations 2
Cbc0038I Pass  52: suminf.    1.55628 (5) obj. -46.9789 iterations 7
Cbc0038I Pass  53: suminf.    1.55628 (5) obj. -46.9789 iterations 0
Cbc0038I Pass  54: suminf.    1.56625 (5) obj. -46.9789 iterations 6
Cbc0038I Pass  55: suminf.    1.56625 (5) obj. -46.9789 iterations 2
Cbc0038I Pass  56: suminf.    1.55628 (5) obj. -46.9789 iterations 5
Cbc0038I Pass  57: suminf.    1.67701 (11) obj. -46.9789 iterations 16
Cbc0038I Pass  58: suminf.    0.54970 (4) obj. -46.9789 iterations 4
Cbc0038I Pass  59: suminf.    0.37968 (3) obj. -47.0375 iterations 4
Cbc0038I Pass  60: suminf.    1.00833 (4) obj. -46.9789 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 40 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -40.4063 - took 0.02 seconds
Cbc0012I Integer solution of -40.40629 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 40 columns, reduced to 7 rows 8 columns
Cbc0012I Integer solution of -42.34559 found by DiveCoefficient after 92 iterations and 0 nodes (0.13 seconds)
Cbc0031I 22 added rows had average density of 6.7727273
Cbc0013I At root node, 22 cuts changed objective from -73.268823 to -42.34559 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 222 row cuts average 4.0 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 59 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0001I Search completed - best objective -42.34559, took 92 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.14

