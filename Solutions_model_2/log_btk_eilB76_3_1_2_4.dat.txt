Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 56 (-22) columns and 314 (-139) elements
Clp1000I sum of infeasibilities 2.83019e-05 - average 2.69542e-07, 11 fixed columns
Coin0506I Presolve 81 (-24) rows, 44 (-12) columns and 243 (-71) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 57.893223
Clp0000I Optimal - objective value 57.893223
Coin0511I After Postsolve, objective 57.893223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.893223
Clp0000I Optimal - objective value 57.893223
Clp0000I Optimal - objective value 57.893223
Coin0511I After Postsolve, objective 57.893223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.89322305 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 56 columns (55 integer (55 of which binary)) and 375 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.445%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.76549
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -12.6989 iterations 42
Cbc0038I Solution found of -12.6989
Cbc0038I Relaxing continuous gives -12.6989
Cbc0038I Rounding solution of -30.6139 is better than previous of -12.6989

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 56 columns, reduced to 54 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -30.6139 to -38.108 (0.03 seconds)
Cbc0038I Round again with cutoff of -40.0481
Cbc0038I Pass   2: suminf.    0.54863 (3) obj. -40.0481 iterations 5
Cbc0038I Pass   3: suminf.    0.54863 (3) obj. -40.0481 iterations 0
Cbc0038I Pass   4: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass   5: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass   6: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass   7: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass   8: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass   9: suminf.    1.51319 (4) obj. -40.0481 iterations 5
Cbc0038I Pass  10: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  11: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass  12: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass  13: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  14: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass  15: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  16: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass  17: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass  18: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  19: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass  20: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  21: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass  22: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass  23: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  24: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass  25: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  26: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass  27: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass  28: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  29: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass  30: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  31: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 56 columns, reduced to 54 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -38.108 - took 0.02 seconds
Cbc0012I Integer solution of -38.10801 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 101 rows 56 columns, reduced to 54 rows 29 columns
Cbc0031I 19 added rows had average density of 38.315789
Cbc0013I At root node, 19 cuts changed objective from -57.508385 to -46.417385 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4474 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1330 row cuts average 52.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 45.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0001I Search completed - best objective -38.10801, took 4350 iterations and 18 nodes (0.46 seconds)
Cbc0032I Strong branching done 330 times (6273 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-33) rows, 126 (-26) columns and 2382 (-921) elements
Clp1000I sum of infeasibilities 3.97621e-07 - average 3.28612e-09, 111 fixed columns
Coin0506I Presolve 16 (-105) rows, 15 (-111) columns and 57 (-2325) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 212.72085
Clp0000I Optimal - objective value 212.72085
Coin0511I After Postsolve, objective 212.72085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.610101 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 297.57527
Clp0000I Optimal - objective value 297.57527
Clp0000I Optimal - objective value 297.57527
Coin0511I After Postsolve, objective 297.57527, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 297.5752651 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 16 fixed, 0 tightened bounds, 84 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 49 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 107 columns (107 integer (107 of which binary)) and 1746 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.311%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 17.5205
Cbc0038I Pass   1: suminf.    0.19048 (3) obj. 7.68917 iterations 29
Cbc0038I Pass   2: suminf.    0.19048 (3) obj. 7.68917 iterations 0
Cbc0038I Solution found of 35.5987
Cbc0038I Rounding solution of -30.614 is better than previous of 35.5987

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 107 columns, reduced to 53 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -30.614 to -37.4251 (0.06 seconds)
Cbc0038I Round again with cutoff of -45.1266
Cbc0038I Pass   3: suminf.    4.41659 (30) obj. -45.1266 iterations 3
Cbc0038I Pass   4: suminf.    4.42104 (28) obj. -45.1266 iterations 1
Cbc0038I Pass   5: suminf.    3.02487 (9) obj. -45.1266 iterations 34
Cbc0038I Pass   6: suminf.    1.79947 (9) obj. -45.1266 iterations 2
Cbc0038I Pass   7: suminf.    1.79947 (9) obj. -45.1266 iterations 0
Cbc0038I Pass   8: suminf.    2.02479 (5) obj. -45.1266 iterations 18
Cbc0038I Pass   9: suminf.    1.21795 (5) obj. -76.2385 iterations 3
Cbc0038I Pass  10: suminf.    2.02479 (5) obj. -45.1266 iterations 1
Cbc0038I Pass  11: suminf.    5.62431 (16) obj. -45.1266 iterations 18
Cbc0038I Pass  12: suminf.    4.72803 (13) obj. -45.1266 iterations 8
Cbc0038I Pass  13: suminf.    1.40741 (4) obj. -60.0866 iterations 13
Cbc0038I Pass  14: suminf.    7.02489 (24) obj. -45.1266 iterations 26
Cbc0038I Pass  15: suminf.    7.02489 (24) obj. -45.1266 iterations 2
Cbc0038I Pass  16: suminf.    4.45382 (14) obj. -45.1266 iterations 14
Cbc0038I Pass  17: suminf.    4.45322 (13) obj. -45.1266 iterations 2
Cbc0038I Pass  18: suminf.    1.87182 (7) obj. -45.1266 iterations 14
Cbc0038I Pass  19: suminf.    1.87182 (7) obj. -45.1266 iterations 0
Cbc0038I Pass  20: suminf.    1.71934 (5) obj. -45.1266 iterations 23
Cbc0038I Pass  21: suminf.    0.58630 (5) obj. -69.0877 iterations 4
Cbc0038I Pass  22: suminf.    1.71934 (5) obj. -45.1266 iterations 10
Cbc0038I Pass  23: suminf.    4.77932 (13) obj. -45.1266 iterations 11
Cbc0038I Pass  24: suminf.    1.64548 (8) obj. -45.1266 iterations 7
Cbc0038I Pass  25: suminf.    1.31349 (9) obj. -45.1266 iterations 3
Cbc0038I Pass  26: suminf.    1.71934 (5) obj. -45.1266 iterations 15
Cbc0038I Pass  27: suminf.    0.58630 (5) obj. -69.0877 iterations 4
Cbc0038I Pass  28: suminf.    1.71934 (5) obj. -45.1266 iterations 10
Cbc0038I Pass  29: suminf.    5.84413 (19) obj. -45.1266 iterations 17
Cbc0038I Pass  30: suminf.    5.57481 (15) obj. -45.1266 iterations 4
Cbc0038I Pass  31: suminf.    1.04191 (4) obj. -65.5306 iterations 14
Cbc0038I Pass  32: suminf.    1.63545 (4) obj. -45.1266 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 107 columns, reduced to 65 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -37.4251 - took 0.04 seconds
Cbc0012I Integer solution of -37.4251 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 96 rows 107 columns, reduced to 53 rows 51 columns
Cbc0031I 54 added rows had average density of 38.611111
Cbc0013I At root node, 54 cuts changed objective from -114.43911 to -53.458119 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 1011 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 320 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 57 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 261 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 572 row cuts average 54.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -37.4251 best solution, best possible -53.458119 (0.47 seconds)
Cbc0012I Integer solution of -38.10801 found by rounding after 378 iterations and 1 nodes (0.47 seconds)
Cbc0001I Search completed - best objective -38.10801, took 1368 iterations and 14 nodes (0.69 seconds)
Cbc0032I Strong branching done 332 times (7649 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 6, 96 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.69

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 56 (-22) columns and 314 (-139) elements
Clp1000I sum of infeasibilities 2.83019e-05 - average 2.69542e-07, 11 fixed columns
Coin0506I Presolve 81 (-24) rows, 44 (-12) columns and 243 (-71) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 57.893223
Clp0000I Optimal - objective value 57.893223
Coin0511I After Postsolve, objective 57.893223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.893223
Clp0000I Optimal - objective value 57.893223
Clp0000I Optimal - objective value 57.893223
Coin0511I After Postsolve, objective 57.893223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.89322305 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 56 columns (55 integer (55 of which binary)) and 375 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.445%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.76549
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -12.6989 iterations 42
Cbc0038I Solution found of -12.6989
Cbc0038I Relaxing continuous gives -12.6989
Cbc0038I Rounding solution of -30.6139 is better than previous of -12.6989

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 56 columns, reduced to 54 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -30.6139 to -38.108 (0.03 seconds)
Cbc0038I Round again with cutoff of -40.0481
Cbc0038I Pass   2: suminf.    0.54863 (3) obj. -40.0481 iterations 5
Cbc0038I Pass   3: suminf.    0.54863 (3) obj. -40.0481 iterations 0
Cbc0038I Pass   4: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass   5: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass   6: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass   7: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass   8: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass   9: suminf.    1.51319 (4) obj. -40.0481 iterations 5
Cbc0038I Pass  10: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  11: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass  12: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass  13: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  14: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass  15: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  16: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass  17: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass  18: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  19: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass  20: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  21: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass  22: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass  23: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  24: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass  25: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  26: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I Pass  27: suminf.    0.55118 (3) obj. -40.0481 iterations 7
Cbc0038I Pass  28: suminf.    0.54863 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  29: suminf.    1.51319 (4) obj. -40.0481 iterations 6
Cbc0038I Pass  30: suminf.    0.94567 (3) obj. -40.0481 iterations 1
Cbc0038I Pass  31: suminf.    0.71282 (2) obj. -40.0481 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 56 columns, reduced to 54 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -38.108 - took 0.02 seconds
Cbc0012I Integer solution of -38.10801 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 101 rows 56 columns, reduced to 54 rows 29 columns
Cbc0031I 19 added rows had average density of 38.315789
Cbc0013I At root node, 19 cuts changed objective from -57.508385 to -46.417385 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4474 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1330 row cuts average 52.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 45.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0001I Search completed - best objective -38.10801, took 4350 iterations and 18 nodes (0.49 seconds)
Cbc0032I Strong branching done 330 times (6273 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 104 (-49) columns and 1590 (-1714) elements
Clp1000I sum of infeasibilities 2.07973e-07 - average 2.10073e-09, 14 fixed columns
Coin0506I Presolve 85 (-14) rows, 90 (-14) columns and 1230 (-360) elements
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.6263733 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 70.82543
Clp0000I Optimal - objective value 70.82543
Coin0511I After Postsolve, objective 70.82543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.82543
Clp0000I Optimal - objective value 70.82543
Clp0000I Optimal - objective value 70.82543
Coin0511I After Postsolve, objective 70.82543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.82543002 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 61 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 104 columns (104 integer (104 of which binary)) and 1627 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.232%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 1.72005
Cbc0038I Pass   1: suminf.    0.57477 (16) obj. -42.8256 iterations 10
Cbc0038I Solution found of -4.6632
Cbc0038I Rounding solution of -20.4127 is better than previous of -4.6632

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 104 columns, reduced to 3 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -23.8982
Cbc0038I Pass   2: suminf.    0.57477 (16) obj. -42.8256 iterations 0
Cbc0038I Pass   3: suminf.    0.11187 (2) obj. -23.8982 iterations 18
Cbc0038I Pass   4: suminf.    0.09070 (2) obj. -24.2775 iterations 1
Cbc0038I Pass   5: suminf.    0.74236 (2) obj. -23.8982 iterations 6
Cbc0038I Pass   6: suminf.    0.53127 (2) obj. -25.55 iterations 3
Cbc0038I Pass   7: suminf.    0.93640 (6) obj. -27.0362 iterations 9
Cbc0038I Pass   8: suminf.    0.26196 (4) obj. -24.1783 iterations 2
Cbc0038I Pass   9: suminf.    0.45018 (2) obj. -23.8982 iterations 7
Cbc0038I Pass  10: suminf.    0.23756 (2) obj. -23.8982 iterations 2
Cbc0038I Pass  11: suminf.    0.73351 (2) obj. -23.8982 iterations 4
Cbc0038I Pass  12: suminf.    0.50950 (2) obj. -25.0183 iterations 1
Cbc0038I Pass  13: suminf.    0.58845 (10) obj. -23.8982 iterations 28
Cbc0038I Pass  14: suminf.    0.49850 (11) obj. -23.8982 iterations 2
Cbc0038I Pass  15: suminf.    1.04772 (9) obj. -23.8982 iterations 19
Cbc0038I Pass  16: suminf.    0.73629 (6) obj. -23.8982 iterations 2
Cbc0038I Pass  17: suminf.    0.87009 (8) obj. -23.8982 iterations 6
Cbc0038I Pass  18: suminf.    0.75796 (5) obj. -23.8982 iterations 2
Cbc0038I Pass  19: suminf.    0.57766 (5) obj. -23.8982 iterations 12
Cbc0038I Pass  20: suminf.    0.57766 (5) obj. -23.8982 iterations 0
Cbc0038I Pass  21: suminf.    0.99757 (4) obj. -23.8982 iterations 8
Cbc0038I Pass  22: suminf.    0.31382 (4) obj. -23.8982 iterations 4
Cbc0038I Pass  23: suminf.    0.80018 (8) obj. -23.8982 iterations 6
Cbc0038I Pass  24: suminf.    0.93276 (11) obj. -23.8982 iterations 13
Cbc0038I Pass  25: suminf.    0.84258 (6) obj. -23.8982 iterations 7
Cbc0038I Pass  26: suminf.    0.45555 (4) obj. -23.8982 iterations 10
Cbc0038I Pass  27: suminf.    0.45555 (4) obj. -23.8982 iterations 0
Cbc0038I Pass  28: suminf.    0.77892 (4) obj. -23.8982 iterations 3
Cbc0038I Pass  29: suminf.    0.77892 (4) obj. -23.8982 iterations 2
Cbc0038I Pass  30: suminf.    0.51666 (4) obj. -23.8982 iterations 4
Cbc0038I Pass  31: suminf.    1.29833 (10) obj. -23.8982 iterations 13
Cbc0038I Rounding solution of -33.6111 is better than previous of -20.4127

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 104 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -33.6111 to -38.108 (0.06 seconds)
Cbc0038I Round again with cutoff of -41.5399
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.57477 (16) obj. -42.8256 iterations 0
Cbc0038I Pass  32: suminf.    1.51543 (7) obj. -41.5399 iterations 20
Cbc0038I Pass  33: suminf.    1.51543 (7) obj. -41.5399 iterations 0
Cbc0038I Pass  34: suminf.    0.97137 (6) obj. -41.5399 iterations 10
Cbc0038I Pass  35: suminf.    0.51674 (6) obj. -42.4491 iterations 4
Cbc0038I Pass  36: suminf.    0.83182 (6) obj. -41.5399 iterations 7
Cbc0038I Pass  37: suminf.    0.83182 (6) obj. -41.5399 iterations 0
Cbc0038I Pass  38: suminf.    1.61103 (16) obj. -41.5399 iterations 12
Cbc0038I Pass  39: suminf.    1.17986 (11) obj. -41.5399 iterations 11
Cbc0038I Pass  40: suminf.    0.67521 (8) obj. -41.5399 iterations 14
Cbc0038I Pass  41: suminf.    0.67521 (8) obj. -41.5399 iterations 0
Cbc0038I Pass  42: suminf.    0.48410 (6) obj. -41.5399 iterations 12
Cbc0038I Pass  43: suminf.    0.42600 (7) obj. -41.5399 iterations 5
Cbc0038I Pass  44: suminf.    0.56211 (7) obj. -41.5399 iterations 8
Cbc0038I Pass  45: suminf.    0.56211 (7) obj. -41.5399 iterations 0
Cbc0038I Pass  46: suminf.    0.47397 (6) obj. -41.5399 iterations 7
Cbc0038I Pass  47: suminf.    0.44808 (7) obj. -41.5399 iterations 5
Cbc0038I Pass  48: suminf.    1.24000 (12) obj. -41.5399 iterations 19
Cbc0038I Pass  49: suminf.    1.24000 (12) obj. -41.5399 iterations 0
Cbc0038I Pass  50: suminf.    0.56436 (9) obj. -41.5399 iterations 15
Cbc0038I Pass  51: suminf.    0.56436 (9) obj. -41.5399 iterations 1
Cbc0038I Pass  52: suminf.    1.16713 (8) obj. -41.5399 iterations 12
Cbc0038I Pass  53: suminf.    0.41837 (8) obj. -41.5399 iterations 6
Cbc0038I Pass  54: suminf.    0.91360 (13) obj. -41.5399 iterations 9
Cbc0038I Pass  55: suminf.    1.43457 (16) obj. -41.5399 iterations 13
Cbc0038I Pass  56: suminf.    0.81529 (17) obj. -41.5399 iterations 6
Cbc0038I Pass  57: suminf.    1.41664 (11) obj. -41.5399 iterations 16
Cbc0038I Pass  58: suminf.    1.08464 (10) obj. -41.5399 iterations 1
Cbc0038I Pass  59: suminf.    0.68731 (10) obj. -41.5399 iterations 3
Cbc0038I Pass  60: suminf.    0.62135 (10) obj. -41.5399 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -38.108 - took 0.04 seconds
Cbc0012I Integer solution of -38.10801 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 93 rows 104 columns, reduced to 3 rows 6 columns
Cbc0031I 31 added rows had average density of 14.193548
Cbc0013I At root node, 221 cuts changed objective from -55.266891 to -38.10801 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 693 row cuts average 11.3 elements, 4 column cuts (4 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 50.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 45 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 37.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38.10801, took 242 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.20

