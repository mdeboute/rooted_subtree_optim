Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-17) rows, 27 (-6) columns and 143 (-40) elements
Clp1000I sum of infeasibilities 2.03045e-05 - average 4.23011e-07, 4 fixed columns
Coin0506I Presolve 40 (-8) rows, 23 (-4) columns and 119 (-24) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 92.13384
Clp0000I Optimal - objective value 92.13384
Coin0511I After Postsolve, objective 92.13384, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.13384
Clp0000I Optimal - objective value 92.13384
Clp0000I Optimal - objective value 92.13384
Coin0511I After Postsolve, objective 92.13384, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.13383996 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 27 columns (26 integer (26 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.41915
Cbc0038I Solution found of -2.50058
Cbc0038I Relaxing continuous gives -11.9458
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 27 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -11.9458 to -58.7542 (0.02 seconds)
Cbc0038I Round again with cutoff of -61.3037
Cbc0038I Pass   1: suminf.    2.01619 (8) obj. -61.3037 iterations 30
Cbc0038I Pass   2: suminf.    0.77055 (4) obj. -61.3037 iterations 11
Cbc0038I Pass   3: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass   4: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass   5: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass   6: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass   7: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass   8: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass   9: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  10: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass  11: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass  12: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass  13: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass  14: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  15: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass  16: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass  17: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass  18: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass  19: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  20: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass  21: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass  22: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass  23: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass  24: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  25: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass  26: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass  27: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass  28: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass  29: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  30: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 27 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -58.7542 - took 0.04 seconds
Cbc0012I Integer solution of -58.75416 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 27 columns, reduced to 33 rows 19 columns
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -84.248703 to -70.388748 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1777 row cuts average 3.4 elements, 3 column cuts (3 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 908 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58.75416, took 3015 iterations and 10 nodes (0.22 seconds)
Cbc0032I Strong branching done 120 times (1155 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-18) rows, 50 (-12) columns and 455 (-193) elements
Clp1000I sum of infeasibilities 1.81784e-06 - average 3.95184e-08, 24 fixed columns
Coin0506I Presolve 24 (-22) rows, 25 (-25) columns and 132 (-323) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 148.87849
Clp0000I Optimal - objective value 148.87849
Coin0511I After Postsolve, objective 148.87849, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1797729 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 148.87849
Clp0000I Optimal - objective value 148.87849
Clp0000I Optimal - objective value 148.87849
Coin0511I After Postsolve, objective 148.87849, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.8784888 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 47 columns (47 integer (47 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.653%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.41993
Cbc0038I Pass   1: suminf.    2.61150 (14) obj. -93.2513 iterations 4
Cbc0038I Pass   2: suminf.    1.84586 (11) obj. -69.6832 iterations 3
Cbc0038I Solution found of -31.8041
Cbc0038I Rounding solution of -47.6749 is better than previous of -31.8041

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -52.6988
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.61150 (14) obj. -93.2513 iterations 0
Cbc0038I Pass   4: suminf.    1.84586 (11) obj. -69.6832 iterations 1
Cbc0038I Pass   5: suminf.    0.41215 (3) obj. -52.6988 iterations 20
Cbc0038I Pass   6: suminf.    0.45528 (1) obj. -56.9865 iterations 3
Cbc0038I Pass   7: suminf.    0.38347 (1) obj. -52.6988 iterations 1
Cbc0038I Pass   8: suminf.    0.63966 (3) obj. -52.6988 iterations 7
Cbc0038I Pass   9: suminf.    0.23559 (2) obj. -52.6988 iterations 6
Cbc0038I Pass  10: suminf.    0.24875 (2) obj. -52.6988 iterations 2
Cbc0038I Pass  11: suminf.    0.24875 (2) obj. -52.6988 iterations 0
Cbc0038I Pass  12: suminf.    0.55098 (2) obj. -69.2068 iterations 1
Cbc0038I Pass  13: suminf.    0.28333 (1) obj. -57.8435 iterations 1
Cbc0038I Pass  14: suminf.    1.42759 (7) obj. -52.6988 iterations 11
Cbc0038I Pass  15: suminf.    0.92454 (4) obj. -52.6988 iterations 6
Cbc0038I Pass  16: suminf.    0.48959 (4) obj. -52.6988 iterations 5
Cbc0038I Pass  17: suminf.    0.48527 (4) obj. -52.6988 iterations 1
Cbc0038I Pass  18: suminf.    0.41499 (2) obj. -59.4324 iterations 2
Cbc0038I Pass  19: suminf.    0.28695 (1) obj. -52.6988 iterations 2
Cbc0038I Pass  20: suminf.    0.38211 (1) obj. -58.3805 iterations 1
Cbc0038I Pass  21: suminf.    1.37438 (4) obj. -52.6988 iterations 4
Cbc0038I Pass  22: suminf.    1.37438 (4) obj. -52.6988 iterations 0
Cbc0038I Pass  23: suminf.    0.85257 (2) obj. -52.6988 iterations 4
Cbc0038I Pass  24: suminf.    0.85257 (2) obj. -52.6988 iterations 0
Cbc0038I Pass  25: suminf.    0.85086 (2) obj. -52.6988 iterations 1
Cbc0038I Pass  26: suminf.    0.74797 (2) obj. -57.4167 iterations 1
Cbc0038I Pass  27: suminf.    2.16322 (6) obj. -52.6988 iterations 13
Cbc0038I Pass  28: suminf.    1.21164 (5) obj. -52.6988 iterations 2
Cbc0038I Pass  29: suminf.    1.11427 (3) obj. -53.0415 iterations 2
Cbc0038I Pass  30: suminf.    0.46594 (3) obj. -52.6988 iterations 4
Cbc0038I Pass  31: suminf.    0.46594 (3) obj. -52.6988 iterations 0
Cbc0038I Pass  32: suminf.    0.97152 (3) obj. -52.6988 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 26 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -31.8041 to -58.7542 (0.05 seconds)
Cbc0038I Round again with cutoff of -66.586
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.61150 (14) obj. -93.2513 iterations 0
Cbc0038I Pass  33: suminf.    1.84586 (11) obj. -69.6832 iterations 1
Cbc0038I Pass  34: suminf.    0.82653 (4) obj. -66.586 iterations 22
Cbc0038I Pass  35: suminf.    0.82946 (2) obj. -73.159 iterations 3
Cbc0038I Pass  36: suminf.    0.67464 (2) obj. -66.586 iterations 1
Cbc0038I Pass  37: suminf.    0.82076 (2) obj. -66.586 iterations 1
Cbc0038I Pass  38: suminf.    0.82076 (2) obj. -66.586 iterations 0
Cbc0038I Pass  39: suminf.    1.64810 (10) obj. -66.586 iterations 12
Cbc0038I Pass  40: suminf.    1.04576 (7) obj. -66.586 iterations 6
Cbc0038I Pass  41: suminf.    0.67400 (4) obj. -66.586 iterations 14
Cbc0038I Pass  42: suminf.    0.54598 (3) obj. -66.586 iterations 3
Cbc0038I Pass  43: suminf.    1.16594 (3) obj. -66.586 iterations 3
Cbc0038I Pass  44: suminf.    0.83448 (2) obj. -66.586 iterations 2
Cbc0038I Pass  45: suminf.    0.81887 (2) obj. -70.5305 iterations 2
Cbc0038I Pass  46: suminf.    0.72596 (2) obj. -66.586 iterations 1
Cbc0038I Pass  47: suminf.    0.83448 (2) obj. -66.586 iterations 2
Cbc0038I Pass  48: suminf.    2.48450 (11) obj. -66.586 iterations 9
Cbc0038I Pass  49: suminf.    1.32629 (6) obj. -66.586 iterations 3
Cbc0038I Pass  50: suminf.    1.12436 (3) obj. -66.586 iterations 6
Cbc0038I Pass  51: suminf.    1.01506 (3) obj. -66.586 iterations 1
Cbc0038I Pass  52: suminf.    0.74886 (3) obj. -68.7641 iterations 1
Cbc0038I Pass  53: suminf.    0.65793 (3) obj. -66.586 iterations 1
Cbc0038I Pass  54: suminf.    1.29869 (10) obj. -66.586 iterations 6
Cbc0038I Pass  55: suminf.    1.10399 (5) obj. -66.586 iterations 6
Cbc0038I Pass  56: suminf.    1.12436 (3) obj. -66.586 iterations 5
Cbc0038I Pass  57: suminf.    1.01506 (3) obj. -66.586 iterations 1
Cbc0038I Pass  58: suminf.    0.74886 (3) obj. -68.7641 iterations 1
Cbc0038I Pass  59: suminf.    0.65793 (3) obj. -66.586 iterations 1
Cbc0038I Pass  60: suminf.    1.53558 (7) obj. -66.586 iterations 8
Cbc0038I Pass  61: suminf.    1.15490 (5) obj. -66.586 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 30 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -58.7542 to -74.9208 (0.07 seconds)
Cbc0038I Round again with cutoff of -81.8185
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.61150 (14) obj. -93.2513 iterations 0
Cbc0038I Pass  62: suminf.    2.24009 (14) obj. -81.8185 iterations 1
Cbc0038I Pass  63: suminf.    1.40526 (6) obj. -81.8185 iterations 19
Cbc0038I Pass  64: suminf.    1.37743 (5) obj. -81.8185 iterations 1
Cbc0038I Pass  65: suminf.    1.13626 (6) obj. -81.8185 iterations 7
Cbc0038I Pass  66: suminf.    1.09249 (4) obj. -81.8185 iterations 2
Cbc0038I Pass  67: suminf.    0.62247 (3) obj. -81.8185 iterations 6
Cbc0038I Pass  68: suminf.    0.48162 (3) obj. -81.8185 iterations 1
Cbc0038I Pass  69: suminf.    1.01554 (3) obj. -81.8185 iterations 1
Cbc0038I Pass  70: suminf.    1.38385 (7) obj. -81.8185 iterations 11
Cbc0038I Pass  71: suminf.    1.33040 (5) obj. -81.8185 iterations 2
Cbc0038I Pass  72: suminf.    0.49813 (4) obj. -81.8185 iterations 5
Cbc0038I Pass  73: suminf.    0.49668 (4) obj. -81.8185 iterations 1
Cbc0038I Pass  74: suminf.    0.81984 (4) obj. -81.8185 iterations 3
Cbc0038I Pass  75: suminf.    0.49668 (4) obj. -81.8185 iterations 1
Cbc0038I Pass  76: suminf.    2.37463 (7) obj. -81.8185 iterations 9
Cbc0038I Pass  77: suminf.    1.72806 (6) obj. -81.8185 iterations 4
Cbc0038I Pass  78: suminf.    0.64828 (3) obj. -81.8185 iterations 5
Cbc0038I Pass  79: suminf.    0.64828 (3) obj. -81.8185 iterations 0
Cbc0038I Pass  80: suminf.    0.99573 (3) obj. -81.8185 iterations 1
Cbc0038I Pass  81: suminf.    0.84670 (8) obj. -81.8185 iterations 9
Cbc0038I Pass  82: suminf.    0.84665 (8) obj. -81.8185 iterations 2
Cbc0038I Pass  83: suminf.    1.04760 (5) obj. -81.8185 iterations 6
Cbc0038I Pass  84: suminf.    0.82163 (3) obj. -81.8185 iterations 2
Cbc0038I Pass  85: suminf.    0.49813 (4) obj. -81.8185 iterations 2
Cbc0038I Pass  86: suminf.    0.49668 (4) obj. -81.8185 iterations 1
Cbc0038I Pass  87: suminf.    0.81984 (4) obj. -81.8185 iterations 3
Cbc0038I Pass  88: suminf.    0.49668 (4) obj. -81.8185 iterations 1
Cbc0038I Pass  89: suminf.    0.65010 (5) obj. -81.8185 iterations 4
Cbc0038I Pass  90: suminf.    0.49668 (4) obj. -81.8185 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -74.9208 to -78.5 (0.09 seconds)
Cbc0038I Round again with cutoff of -86.6468
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 5
Cbc0038I Pass  90: suminf.    2.61150 (14) obj. -93.2513 iterations 0
Cbc0038I Pass  91: suminf.    2.39694 (14) obj. -86.6468 iterations 1
Cbc0038I Pass  92: suminf.    2.04779 (6) obj. -86.6468 iterations 18
Cbc0038I Pass  93: suminf.    1.68969 (7) obj. -86.6468 iterations 2
Cbc0038I Pass  94: suminf.    1.93197 (6) obj. -86.6468 iterations 8
Cbc0038I Pass  95: suminf.    1.93197 (6) obj. -86.6468 iterations 1
Cbc0038I Pass  96: suminf.    1.53697 (5) obj. -86.6468 iterations 3
Cbc0038I Pass  97: suminf.    1.53697 (5) obj. -86.6468 iterations 0
Cbc0038I Pass  98: suminf.    1.58586 (5) obj. -86.6468 iterations 3
Cbc0038I Pass  99: suminf.    1.58586 (5) obj. -86.6468 iterations 0
Cbc0038I Pass 100: suminf.    1.19856 (9) obj. -86.6468 iterations 11
Cbc0038I Pass 101: suminf.    1.08834 (8) obj. -86.6468 iterations 2
Cbc0038I Pass 102: suminf.    2.31708 (7) obj. -86.6468 iterations 8
Cbc0038I Pass 103: suminf.    2.31708 (7) obj. -86.6468 iterations 1
Cbc0038I Pass 104: suminf.    2.20363 (6) obj. -86.6468 iterations 3
Cbc0038I Pass 105: suminf.    2.18127 (6) obj. -86.6468 iterations 1
Cbc0038I Pass 106: suminf.    2.18127 (6) obj. -86.6468 iterations 1
Cbc0038I Pass 107: suminf.    3.57253 (11) obj. -86.6468 iterations 14
Cbc0038I Pass 108: suminf.    3.19921 (10) obj. -86.6468 iterations 2
Cbc0038I Pass 109: suminf.    2.84593 (7) obj. -86.6468 iterations 9
Cbc0038I Pass 110: suminf.    2.15226 (6) obj. -86.6468 iterations 5
Cbc0038I Pass 111: suminf.    2.20177 (6) obj. -86.6468 iterations 2
Cbc0038I Pass 112: suminf.    2.15226 (6) obj. -86.6468 iterations 2
Cbc0038I Pass 113: suminf.    2.21448 (8) obj. -86.6468 iterations 10
Cbc0038I Pass 114: suminf.    2.21448 (8) obj. -86.6468 iterations 1
Cbc0038I Pass 115: suminf.    1.94978 (8) obj. -86.6468 iterations 6
Cbc0038I Pass 116: suminf.    1.94978 (8) obj. -86.6468 iterations 0
Cbc0038I Pass 117: suminf.    1.75258 (7) obj. -86.6468 iterations 3
Cbc0038I Pass 118: suminf.    1.74275 (7) obj. -86.6468 iterations 2
Cbc0038I Pass 119: suminf.    1.87030 (5) obj. -86.6468 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 25 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -78.5 - took 0.07 seconds
Cbc0012I Integer solution of -78.5 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 40 rows 47 columns, reduced to 21 rows 22 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 2.8333333
Cbc0013I At root node, 8 cuts changed objective from -97.91274 to -77.021447 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.3 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 16 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -78.5, took 39 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-17) rows, 27 (-6) columns and 143 (-40) elements
Clp1000I sum of infeasibilities 2.03045e-05 - average 4.23011e-07, 4 fixed columns
Coin0506I Presolve 40 (-8) rows, 23 (-4) columns and 119 (-24) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 92.13384
Clp0000I Optimal - objective value 92.13384
Coin0511I After Postsolve, objective 92.13384, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.13384
Clp0000I Optimal - objective value 92.13384
Clp0000I Optimal - objective value 92.13384
Coin0511I After Postsolve, objective 92.13384, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.13383996 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 27 columns (26 integer (26 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.41915
Cbc0038I Solution found of -2.50058
Cbc0038I Relaxing continuous gives -11.9458
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 27 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -11.9458 to -58.7542 (0.02 seconds)
Cbc0038I Round again with cutoff of -61.3037
Cbc0038I Pass   1: suminf.    2.01619 (8) obj. -61.3037 iterations 30
Cbc0038I Pass   2: suminf.    0.77055 (4) obj. -61.3037 iterations 11
Cbc0038I Pass   3: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass   4: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass   5: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass   6: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass   7: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass   8: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass   9: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  10: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass  11: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass  12: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass  13: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass  14: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  15: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass  16: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass  17: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass  18: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass  19: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  20: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass  21: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass  22: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass  23: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass  24: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  25: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I Pass  26: suminf.    1.03569 (3) obj. -61.3037 iterations 5
Cbc0038I Pass  27: suminf.    0.73235 (3) obj. -61.3037 iterations 2
Cbc0038I Pass  28: suminf.    0.71549 (3) obj. -61.3037 iterations 1
Cbc0038I Pass  29: suminf.    0.76624 (3) obj. -61.3037 iterations 4
Cbc0038I Pass  30: suminf.    0.76624 (3) obj. -61.3037 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 27 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -58.7542 - took 0.03 seconds
Cbc0012I Integer solution of -58.75416 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 27 columns, reduced to 33 rows 19 columns
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -84.248703 to -70.388748 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1777 row cuts average 3.4 elements, 3 column cuts (3 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 908 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58.75416, took 3015 iterations and 10 nodes (0.24 seconds)
Cbc0032I Strong branching done 120 times (1155 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-23) rows, 46 (-17) columns and 393 (-256) elements
Clp1000I sum of infeasibilities 4.02759e-09 - average 9.58949e-11, 13 fixed columns
Coin0506I Presolve 31 (-11) rows, 33 (-13) columns and 182 (-211) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 107.96931
Clp0000I Optimal - objective value 107.96931
Coin0511I After Postsolve, objective 107.96931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 107.96931
Clp0000I Optimal - objective value 107.96931
Clp0000I Optimal - objective value 107.96931
Coin0511I After Postsolve, objective 107.96931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.96931 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.04477
Cbc0038I Pass   1: suminf.    1.36936 (10) obj. -71.2317 iterations 7
Cbc0038I Pass   2: suminf.    1.36936 (10) obj. -71.2317 iterations 0
Cbc0038I Solution found of -52.4
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -55.3899
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.36936 (10) obj. -71.2317 iterations 0
Cbc0038I Pass   4: suminf.    1.36936 (10) obj. -71.2317 iterations 0
Cbc0038I Pass   5: suminf.    0.10209 (1) obj. -55.3899 iterations 21
Cbc0038I Pass   6: suminf.    0.21053 (1) obj. -58.5658 iterations 2
Cbc0038I Pass   7: suminf.    0.97733 (3) obj. -55.3899 iterations 8
Cbc0038I Pass   8: suminf.    0.97733 (3) obj. -55.3899 iterations 2
Cbc0038I Pass   9: suminf.    0.50768 (2) obj. -59.6327 iterations 1
Cbc0038I Pass  10: suminf.    0.35410 (2) obj. -55.3899 iterations 3
Cbc0038I Pass  11: suminf.    1.67641 (9) obj. -56.417 iterations 14
Cbc0038I Pass  12: suminf.    1.55321 (9) obj. -55.3899 iterations 3
Cbc0038I Pass  13: suminf.    1.86328 (5) obj. -55.3899 iterations 16
Cbc0038I Pass  14: suminf.    1.86328 (5) obj. -55.3899 iterations 1
Cbc0038I Pass  15: suminf.    0.37237 (2) obj. -55.3899 iterations 5
Cbc0038I Pass  16: suminf.    0.37237 (2) obj. -55.3899 iterations 0
Cbc0038I Pass  17: suminf.    0.64299 (2) obj. -55.3899 iterations 2
Cbc0038I Pass  18: suminf.    0.85512 (2) obj. -55.3899 iterations 1
Cbc0038I Pass  19: suminf.    0.89095 (3) obj. -55.3899 iterations 5
Cbc0038I Pass  20: suminf.    0.87819 (3) obj. -55.3899 iterations 1
Cbc0038I Pass  21: suminf.    0.88651 (3) obj. -55.3899 iterations 3
Cbc0038I Pass  22: suminf.    0.79610 (3) obj. -55.3899 iterations 1
Cbc0038I Pass  23: suminf.    0.93700 (3) obj. -57.5029 iterations 1
Cbc0038I Pass  24: suminf.    0.82952 (3) obj. -55.3899 iterations 2
Cbc0038I Pass  25: suminf.    1.15054 (9) obj. -55.3899 iterations 11
Cbc0038I Pass  26: suminf.    0.67200 (2) obj. -57.5115 iterations 7
Cbc0038I Pass  27: suminf.    0.71750 (3) obj. -55.3899 iterations 4
Cbc0038I Pass  28: suminf.    0.44791 (2) obj. -55.3899 iterations 3
Cbc0038I Pass  29: suminf.    0.35361 (2) obj. -55.3899 iterations 1
Cbc0038I Pass  30: suminf.    0.74600 (2) obj. -55.3899 iterations 1
Cbc0038I Pass  31: suminf.    0.50350 (2) obj. -55.3899 iterations 1
Cbc0038I Pass  32: suminf.    2.47107 (12) obj. -55.3899 iterations 18
Cbc0038I Rounding solution of -53.5208 is better than previous of -52.4

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -53.5208 to -57.8834 (0.04 seconds)
Cbc0038I Round again with cutoff of -62.7664
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.36936 (10) obj. -71.2317 iterations 0
Cbc0038I Pass  33: suminf.    1.36936 (10) obj. -71.2317 iterations 0
Cbc0038I Pass  34: suminf.    0.37737 (2) obj. -62.7664 iterations 19
Cbc0038I Pass  35: suminf.    0.49897 (2) obj. -65.4692 iterations 4
Cbc0038I Pass  36: suminf.    0.49897 (2) obj. -65.4692 iterations 0
Cbc0038I Pass  37: suminf.    0.37737 (2) obj. -62.7664 iterations 4
Cbc0038I Pass  38: suminf.    1.47873 (7) obj. -62.7664 iterations 11
Cbc0038I Pass  39: suminf.    0.80059 (11) obj. -62.7664 iterations 5
Cbc0038I Pass  40: suminf.    1.00871 (4) obj. -62.7664 iterations 18
Cbc0038I Pass  41: suminf.    0.76355 (5) obj. -62.7664 iterations 2
Cbc0038I Pass  42: suminf.    0.84961 (4) obj. -62.7664 iterations 7
Cbc0038I Pass  43: suminf.    0.84961 (4) obj. -62.7664 iterations 0
Cbc0038I Pass  44: suminf.    1.51411 (5) obj. -62.7664 iterations 9
Cbc0038I Pass  45: suminf.    1.51411 (5) obj. -62.7664 iterations 3
Cbc0038I Pass  46: suminf.    1.57933 (5) obj. -62.7664 iterations 7
Cbc0038I Pass  47: suminf.    1.35280 (5) obj. -62.7664 iterations 2
Cbc0038I Pass  48: suminf.    2.30185 (6) obj. -62.7664 iterations 5
Cbc0038I Pass  49: suminf.    2.24585 (7) obj. -62.7664 iterations 2
Cbc0038I Pass  50: suminf.    1.52361 (4) obj. -62.7664 iterations 3
Cbc0038I Pass  51: suminf.    1.51411 (5) obj. -62.7664 iterations 2
Cbc0038I Pass  52: suminf.    1.57933 (5) obj. -62.7664 iterations 6
Cbc0038I Pass  53: suminf.    1.35280 (5) obj. -62.7664 iterations 2
Cbc0038I Pass  54: suminf.    2.30185 (6) obj. -62.7664 iterations 5
Cbc0038I Pass  55: suminf.    2.24585 (7) obj. -62.7664 iterations 2
Cbc0038I Pass  56: suminf.    1.52361 (4) obj. -62.7664 iterations 3
Cbc0038I Pass  57: suminf.    1.51411 (5) obj. -62.7664 iterations 2
Cbc0038I Pass  58: suminf.    1.57933 (5) obj. -62.7664 iterations 6
Cbc0038I Pass  59: suminf.    1.35280 (5) obj. -62.7664 iterations 2
Cbc0038I Pass  60: suminf.    2.30185 (6) obj. -62.7664 iterations 5
Cbc0038I Pass  61: suminf.    2.24585 (7) obj. -62.7664 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -57.8834 - took 0.04 seconds
Cbc0012I Integer solution of -57.88336 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 14 rows 16 columns
Cbc0031I 15 added rows had average density of 13.4
Cbc0013I At root node, 15 cuts changed objective from -82.298031 to -63.08489 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 430 row cuts average 2.4 elements, 9 column cuts (9 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 399 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 34 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 119 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.859 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -57.88336 best solution, best possible -63.08489 (1.72 seconds)
Cbc0012I Integer solution of -58.75416 found by DiveCoefficient after 1511 iterations and 3 nodes (2.17 seconds)
Cbc0010I After 7 nodes, 3 on tree, -58.75416 best solution, best possible -63.08489 (2.46 seconds)
Cbc0001I Search completed - best objective -58.75416, took 1865 iterations and 10 nodes (2.53 seconds)
Cbc0032I Strong branching done 164 times (1338 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       2.53

