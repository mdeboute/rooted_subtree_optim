Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-6) rows, 30 (-2) columns and 166 (-11) elements
Clp1000I sum of infeasibilities 0.00331025 - average 5.80745e-05, 3 fixed columns
Coin0506I Presolve 45 (-12) rows, 27 (-3) columns and 136 (-30) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Coin0511I After Postsolve, objective 75.308176, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Coin0511I After Postsolve, objective 75.308176, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.30817561 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 30 columns (29 integer (29 of which binary)) and 169 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.17617
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.3071 iterations 24
Cbc0038I Solution found of -21.3071
Cbc0038I Relaxing continuous gives -21.3071
Cbc0038I Rounding solution of -24.4518 is better than previous of -21.3071

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 30 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -24.4518 to -27.1612 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.976
Cbc0038I Pass   2: suminf.    0.51328 (3) obj. -31.976 iterations 5
Cbc0038I Pass   3: suminf.    0.49105 (2) obj. -31.976 iterations 9
Cbc0038I Pass   4: suminf.    0.83372 (2) obj. -31.976 iterations 1
Cbc0038I Pass   5: suminf.    0.75766 (6) obj. -31.976 iterations 4
Cbc0038I Pass   6: suminf.    1.24866 (4) obj. -31.976 iterations 9
Cbc0038I Pass   7: suminf.    1.15925 (4) obj. -31.976 iterations 1
Cbc0038I Pass   8: suminf.    1.15887 (5) obj. -31.976 iterations 6
Cbc0038I Pass   9: suminf.    1.45187 (5) obj. -31.976 iterations 7
Cbc0038I Pass  10: suminf.    1.37839 (5) obj. -31.976 iterations 5
Cbc0038I Pass  11: suminf.    1.31468 (4) obj. -31.976 iterations 1
Cbc0038I Pass  12: suminf.    1.31570 (9) obj. -31.976 iterations 11
Cbc0038I Pass  13: suminf.    1.07698 (4) obj. -31.976 iterations 4
Cbc0038I Pass  14: suminf.    1.32623 (5) obj. -31.976 iterations 9
Cbc0038I Pass  15: suminf.    1.43842 (5) obj. -31.976 iterations 7
Cbc0038I Pass  16: suminf.    1.36766 (5) obj. -31.976 iterations 5
Cbc0038I Pass  17: suminf.    1.30395 (4) obj. -31.976 iterations 1
Cbc0038I Pass  18: suminf.    1.37839 (5) obj. -31.976 iterations 2
Cbc0038I Pass  19: suminf.    1.31468 (4) obj. -31.976 iterations 1
Cbc0038I Pass  20: suminf.    1.45187 (5) obj. -31.976 iterations 5
Cbc0038I Pass  21: suminf.    1.37839 (5) obj. -31.976 iterations 5
Cbc0038I Pass  22: suminf.    2.36834 (6) obj. -31.976 iterations 17
Cbc0038I Pass  23: suminf.    1.30136 (5) obj. -31.976 iterations 6
Cbc0038I Pass  24: suminf.    0.99294 (3) obj. -31.976 iterations 5
Cbc0038I Pass  25: suminf.    0.72850 (3) obj. -31.976 iterations 1
Cbc0038I Pass  26: suminf.    1.14428 (3) obj. -31.976 iterations 6
Cbc0038I Pass  27: suminf.    0.98383 (5) obj. -31.976 iterations 2
Cbc0038I Pass  28: suminf.    0.99395 (3) obj. -31.976 iterations 5
Cbc0038I Pass  29: suminf.    1.14526 (5) obj. -31.976 iterations 5
Cbc0038I Pass  30: suminf.    1.43842 (5) obj. -31.976 iterations 7
Cbc0038I Pass  31: suminf.    1.36766 (5) obj. -31.976 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 30 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -27.1612 - took 0.07 seconds
Cbc0012I Integer solution of -27.161189 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 57 rows 30 columns, reduced to 41 rows 24 columns
Cbc0031I 13 added rows had average density of 26.153846
Cbc0013I At root node, 13 cuts changed objective from -75.308176 to -44.716537 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2736 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 848 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -27.962539 found by DiveCoefficient after 3065 iterations and 5 nodes (0.29 seconds)
Cbc0016I Integer solution of -28.942619 found by strong branching after 3112 iterations and 5 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -28.94261899999999, took 3305 iterations and 10 nodes (0.30 seconds)
Cbc0032I Strong branching done 172 times (2096 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-10) rows, 53 (-7) columns and 487 (-125) elements
Clp1000I sum of infeasibilities 2.07626e-10 - average 3.99282e-12, 37 fixed columns
Coin0506I Presolve 12 (-40) rows, 16 (-37) columns and 51 (-436) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 12.099187
Clp0000I Optimal - objective value 12.099187
Coin0511I After Postsolve, objective 12.099187, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22183046 - largest nonzero change 2.8926715e-05 ( 0.0024522368%) - largest zero change 2.7468278e-05
Clp0000I Optimal - objective value 99.707794
Clp0000I Optimal - objective value 99.707794
Clp0000I Optimal - objective value 99.707794
Coin0511I After Postsolve, objective 99.707794, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.70779392 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 53 columns (53 integer (53 of which binary)) and 492 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.794%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.89832
Cbc0038I Pass   1: suminf.    3.19534 (13) obj. -74.5841 iterations 9
Cbc0038I Pass   2: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Solution found of -25.9514
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.5463
Cbc0038I Pass   3: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Pass   4: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Pass   5: suminf.    0.25365 (1) obj. -32.5463 iterations 19
Cbc0038I Pass   6: suminf.    0.37037 (1) obj. -42.3218 iterations 1
Cbc0038I Pass   7: suminf.    1.82290 (6) obj. -32.5463 iterations 10
Cbc0038I Pass   8: suminf.    1.10632 (4) obj. -32.5463 iterations 5
Cbc0038I Pass   9: suminf.    0.96663 (3) obj. -32.5463 iterations 3
Cbc0038I Pass  10: suminf.    0.62626 (2) obj. -40.2147 iterations 1
Cbc0038I Pass  11: suminf.    0.35502 (1) obj. -32.5463 iterations 2
Cbc0038I Pass  12: suminf.    0.44444 (1) obj. -37.7602 iterations 1
Cbc0038I Pass  13: suminf.    2.36896 (9) obj. -32.5463 iterations 11
Cbc0038I Pass  14: suminf.    1.85331 (8) obj. -44.4093 iterations 1
Cbc0038I Pass  15: suminf.    1.39926 (7) obj. -39.3036 iterations 1
Cbc0038I Pass  16: suminf.    1.31317 (4) obj. -32.5463 iterations 6
Cbc0038I Pass  17: suminf.    0.76516 (4) obj. -32.5463 iterations 1
Cbc0038I Pass  18: suminf.    1.31317 (4) obj. -32.5463 iterations 1
Cbc0038I Pass  19: suminf.    2.28405 (8) obj. -32.5463 iterations 9
Cbc0038I Pass  20: suminf.    2.04577 (7) obj. -32.5463 iterations 2
Cbc0038I Pass  21: suminf.    1.97455 (7) obj. -34.3979 iterations 1
Cbc0038I Pass  22: suminf.    1.35448 (4) obj. -32.5463 iterations 7
Cbc0038I Pass  23: suminf.    0.64352 (3) obj. -32.6384 iterations 2
Cbc0038I Pass  24: suminf.    1.46299 (5) obj. -36.1491 iterations 12
Cbc0038I Pass  25: suminf.    1.46299 (5) obj. -36.1491 iterations 1
Cbc0038I Pass  26: suminf.    1.49386 (4) obj. -32.5463 iterations 8
Cbc0038I Pass  27: suminf.    1.49386 (4) obj. -32.5463 iterations 0
Cbc0038I Pass  28: suminf.    1.14743 (4) obj. -32.5463 iterations 1
Cbc0038I Pass  29: suminf.    1.14743 (4) obj. -32.5463 iterations 0
Cbc0038I Pass  30: suminf.    1.49386 (4) obj. -32.5463 iterations 1
Cbc0038I Pass  31: suminf.    2.15045 (9) obj. -32.5463 iterations 15
Cbc0038I Pass  32: suminf.    1.81466 (8) obj. -33.5999 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 26 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -25.9514 to -28.9426 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.4169
Cbc0038I Pass  32: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Pass  33: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Pass  34: suminf.    0.55852 (4) obj. -44.4169 iterations 19
Cbc0038I Pass  35: suminf.    0.55852 (4) obj. -44.4169 iterations 0
Cbc0038I Pass  36: suminf.    1.12101 (3) obj. -44.4169 iterations 6
Cbc0038I Pass  37: suminf.    1.12101 (3) obj. -44.4169 iterations 0
Cbc0038I Pass  38: suminf.    1.05814 (3) obj. -44.4169 iterations 1
Cbc0038I Pass  39: suminf.    1.05814 (3) obj. -44.4169 iterations 0
Cbc0038I Pass  40: suminf.    1.58951 (5) obj. -46.6892 iterations 7
Cbc0038I Pass  41: suminf.    1.58951 (5) obj. -46.6892 iterations 1
Cbc0038I Pass  42: suminf.    1.34323 (3) obj. -44.4169 iterations 5
Cbc0038I Pass  43: suminf.    1.34323 (3) obj. -44.4169 iterations 0
Cbc0038I Pass  44: suminf.    1.22739 (3) obj. -44.4169 iterations 1
Cbc0038I Pass  45: suminf.    1.22739 (3) obj. -44.4169 iterations 0
Cbc0038I Pass  46: suminf.    1.34323 (3) obj. -44.4169 iterations 1
Cbc0038I Pass  47: suminf.    1.79021 (7) obj. -50.4389 iterations 12
Cbc0038I Pass  48: suminf.    1.79021 (7) obj. -50.4389 iterations 0
Cbc0038I Pass  49: suminf.    1.12457 (5) obj. -44.4169 iterations 7
Cbc0038I Pass  50: suminf.    1.12457 (5) obj. -44.4169 iterations 0
Cbc0038I Pass  51: suminf.    1.51786 (4) obj. -44.4169 iterations 2
Cbc0038I Pass  52: suminf.    1.14142 (4) obj. -44.4169 iterations 1
Cbc0038I Pass  53: suminf.    1.51786 (4) obj. -44.4169 iterations 1
Cbc0038I Pass  54: suminf.    1.97585 (9) obj. -44.4169 iterations 7
Cbc0038I Pass  55: suminf.    1.96507 (6) obj. -44.4169 iterations 2
Cbc0038I Pass  56: suminf.    1.59985 (9) obj. -44.4169 iterations 3
Cbc0038I Pass  57: suminf.    1.59985 (9) obj. -44.4169 iterations 0
Cbc0038I Pass  58: suminf.    1.95054 (7) obj. -44.4169 iterations 6
Cbc0038I Pass  59: suminf.    1.50666 (6) obj. -44.6429 iterations 2
Cbc0038I Pass  60: suminf.    1.95054 (7) obj. -44.4169 iterations 3
Cbc0038I Pass  61: suminf.    2.17733 (9) obj. -44.4169 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 22 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -28.9426 - took 0.03 seconds
Cbc0012I Integer solution of -28.942619 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 52 rows 53 columns, reduced to 19 rows 23 columns
Cbc0031I 18 added rows had average density of 10.5
Cbc0013I At root node, 18 cuts changed objective from -91.899163 to -31.601035 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1053 row cuts average 4.6 elements, 10 column cuts (10 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 529 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 89 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 57 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 180 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.942619 best solution, best possible -31.601035 (1.36 seconds)
Cbc0001I Search completed - best objective -28.94261899999999, took 1388 iterations and 6 nodes (1.57 seconds)
Cbc0032I Strong branching done 68 times (428 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-6) rows, 30 (-2) columns and 166 (-11) elements
Clp1000I sum of infeasibilities 0.00331025 - average 5.80745e-05, 3 fixed columns
Coin0506I Presolve 45 (-12) rows, 27 (-3) columns and 136 (-30) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Coin0511I After Postsolve, objective 75.308176, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Coin0511I After Postsolve, objective 75.308176, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.30817561 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 30 columns (29 integer (29 of which binary)) and 169 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.17617
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.3071 iterations 24
Cbc0038I Solution found of -21.3071
Cbc0038I Relaxing continuous gives -21.3071
Cbc0038I Rounding solution of -24.4518 is better than previous of -21.3071

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 30 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -24.4518 to -27.1612 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.976
Cbc0038I Pass   2: suminf.    0.51328 (3) obj. -31.976 iterations 5
Cbc0038I Pass   3: suminf.    0.49105 (2) obj. -31.976 iterations 9
Cbc0038I Pass   4: suminf.    0.83372 (2) obj. -31.976 iterations 1
Cbc0038I Pass   5: suminf.    0.75766 (6) obj. -31.976 iterations 4
Cbc0038I Pass   6: suminf.    1.24866 (4) obj. -31.976 iterations 9
Cbc0038I Pass   7: suminf.    1.15925 (4) obj. -31.976 iterations 1
Cbc0038I Pass   8: suminf.    1.15887 (5) obj. -31.976 iterations 6
Cbc0038I Pass   9: suminf.    1.45187 (5) obj. -31.976 iterations 7
Cbc0038I Pass  10: suminf.    1.37839 (5) obj. -31.976 iterations 5
Cbc0038I Pass  11: suminf.    1.31468 (4) obj. -31.976 iterations 1
Cbc0038I Pass  12: suminf.    1.31570 (9) obj. -31.976 iterations 11
Cbc0038I Pass  13: suminf.    1.07698 (4) obj. -31.976 iterations 4
Cbc0038I Pass  14: suminf.    1.32623 (5) obj. -31.976 iterations 9
Cbc0038I Pass  15: suminf.    1.43842 (5) obj. -31.976 iterations 7
Cbc0038I Pass  16: suminf.    1.36766 (5) obj. -31.976 iterations 5
Cbc0038I Pass  17: suminf.    1.30395 (4) obj. -31.976 iterations 1
Cbc0038I Pass  18: suminf.    1.37839 (5) obj. -31.976 iterations 2
Cbc0038I Pass  19: suminf.    1.31468 (4) obj. -31.976 iterations 1
Cbc0038I Pass  20: suminf.    1.45187 (5) obj. -31.976 iterations 5
Cbc0038I Pass  21: suminf.    1.37839 (5) obj. -31.976 iterations 5
Cbc0038I Pass  22: suminf.    2.36834 (6) obj. -31.976 iterations 17
Cbc0038I Pass  23: suminf.    1.30136 (5) obj. -31.976 iterations 6
Cbc0038I Pass  24: suminf.    0.99294 (3) obj. -31.976 iterations 5
Cbc0038I Pass  25: suminf.    0.72850 (3) obj. -31.976 iterations 1
Cbc0038I Pass  26: suminf.    1.14428 (3) obj. -31.976 iterations 6
Cbc0038I Pass  27: suminf.    0.98383 (5) obj. -31.976 iterations 2
Cbc0038I Pass  28: suminf.    0.99395 (3) obj. -31.976 iterations 5
Cbc0038I Pass  29: suminf.    1.14526 (5) obj. -31.976 iterations 5
Cbc0038I Pass  30: suminf.    1.43842 (5) obj. -31.976 iterations 7
Cbc0038I Pass  31: suminf.    1.36766 (5) obj. -31.976 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 30 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -27.1612 - took 0.05 seconds
Cbc0012I Integer solution of -27.161189 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 57 rows 30 columns, reduced to 41 rows 24 columns
Cbc0031I 13 added rows had average density of 26.153846
Cbc0013I At root node, 13 cuts changed objective from -75.308176 to -44.716537 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2736 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 848 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -27.962539 found by DiveCoefficient after 3065 iterations and 5 nodes (0.31 seconds)
Cbc0016I Integer solution of -28.942619 found by strong branching after 3112 iterations and 5 nodes (0.31 seconds)
Cbc0001I Search completed - best objective -28.94261899999999, took 3305 iterations and 10 nodes (0.32 seconds)
Cbc0032I Strong branching done 172 times (2096 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 53 (-8) columns and 487 (-126) elements
Clp1000I sum of infeasibilities 2.07626e-10 - average 3.99282e-12, 37 fixed columns
Coin0506I Presolve 12 (-40) rows, 16 (-37) columns and 51 (-436) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 12.099187
Clp0000I Optimal - objective value 12.099187
Coin0511I After Postsolve, objective 12.099187, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22183046 - largest nonzero change 2.8926715e-05 ( 0.0024522368%) - largest zero change 2.7468278e-05
Clp0000I Optimal - objective value 99.707794
Clp0000I Optimal - objective value 99.707794
Clp0000I Optimal - objective value 99.707794
Coin0511I After Postsolve, objective 99.707794, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.70779392 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 53 columns (53 integer (53 of which binary)) and 492 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.794%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.89832
Cbc0038I Pass   1: suminf.    3.19534 (13) obj. -74.5841 iterations 9
Cbc0038I Pass   2: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Solution found of -25.9514
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -32.5463
Cbc0038I Pass   3: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Pass   4: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Pass   5: suminf.    0.25365 (1) obj. -32.5463 iterations 19
Cbc0038I Pass   6: suminf.    0.37037 (1) obj. -42.3218 iterations 1
Cbc0038I Pass   7: suminf.    1.82290 (6) obj. -32.5463 iterations 10
Cbc0038I Pass   8: suminf.    1.10632 (4) obj. -32.5463 iterations 5
Cbc0038I Pass   9: suminf.    0.96663 (3) obj. -32.5463 iterations 3
Cbc0038I Pass  10: suminf.    0.62626 (2) obj. -40.2147 iterations 1
Cbc0038I Pass  11: suminf.    0.35502 (1) obj. -32.5463 iterations 2
Cbc0038I Pass  12: suminf.    0.44444 (1) obj. -37.7602 iterations 1
Cbc0038I Pass  13: suminf.    2.36896 (9) obj. -32.5463 iterations 11
Cbc0038I Pass  14: suminf.    1.85331 (8) obj. -44.4093 iterations 1
Cbc0038I Pass  15: suminf.    1.39926 (7) obj. -39.3036 iterations 1
Cbc0038I Pass  16: suminf.    1.31317 (4) obj. -32.5463 iterations 6
Cbc0038I Pass  17: suminf.    0.76516 (4) obj. -32.5463 iterations 1
Cbc0038I Pass  18: suminf.    1.31317 (4) obj. -32.5463 iterations 1
Cbc0038I Pass  19: suminf.    2.28405 (8) obj. -32.5463 iterations 9
Cbc0038I Pass  20: suminf.    2.04577 (7) obj. -32.5463 iterations 2
Cbc0038I Pass  21: suminf.    1.97455 (7) obj. -34.3979 iterations 1
Cbc0038I Pass  22: suminf.    1.35448 (4) obj. -32.5463 iterations 7
Cbc0038I Pass  23: suminf.    0.64352 (3) obj. -32.6384 iterations 2
Cbc0038I Pass  24: suminf.    1.46299 (5) obj. -36.1491 iterations 12
Cbc0038I Pass  25: suminf.    1.46299 (5) obj. -36.1491 iterations 1
Cbc0038I Pass  26: suminf.    1.49386 (4) obj. -32.5463 iterations 8
Cbc0038I Pass  27: suminf.    1.49386 (4) obj. -32.5463 iterations 0
Cbc0038I Pass  28: suminf.    1.14743 (4) obj. -32.5463 iterations 1
Cbc0038I Pass  29: suminf.    1.14743 (4) obj. -32.5463 iterations 0
Cbc0038I Pass  30: suminf.    1.49386 (4) obj. -32.5463 iterations 1
Cbc0038I Pass  31: suminf.    2.15045 (9) obj. -32.5463 iterations 15
Cbc0038I Pass  32: suminf.    1.81466 (8) obj. -33.5999 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 26 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -25.9514 to -28.9426 (0.04 seconds)
Cbc0038I Round again with cutoff of -44.4169
Cbc0038I Pass  32: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Pass  33: suminf.    3.19534 (13) obj. -74.5841 iterations 0
Cbc0038I Pass  34: suminf.    0.55852 (4) obj. -44.4169 iterations 19
Cbc0038I Pass  35: suminf.    0.55852 (4) obj. -44.4169 iterations 0
Cbc0038I Pass  36: suminf.    1.12101 (3) obj. -44.4169 iterations 6
Cbc0038I Pass  37: suminf.    1.12101 (3) obj. -44.4169 iterations 0
Cbc0038I Pass  38: suminf.    1.05814 (3) obj. -44.4169 iterations 1
Cbc0038I Pass  39: suminf.    1.05814 (3) obj. -44.4169 iterations 0
Cbc0038I Pass  40: suminf.    1.58951 (5) obj. -46.6892 iterations 7
Cbc0038I Pass  41: suminf.    1.58951 (5) obj. -46.6892 iterations 1
Cbc0038I Pass  42: suminf.    1.34323 (3) obj. -44.4169 iterations 5
Cbc0038I Pass  43: suminf.    1.34323 (3) obj. -44.4169 iterations 0
Cbc0038I Pass  44: suminf.    1.22739 (3) obj. -44.4169 iterations 1
Cbc0038I Pass  45: suminf.    1.22739 (3) obj. -44.4169 iterations 0
Cbc0038I Pass  46: suminf.    1.34323 (3) obj. -44.4169 iterations 1
Cbc0038I Pass  47: suminf.    1.79021 (7) obj. -50.4389 iterations 12
Cbc0038I Pass  48: suminf.    1.79021 (7) obj. -50.4389 iterations 0
Cbc0038I Pass  49: suminf.    1.12457 (5) obj. -44.4169 iterations 7
Cbc0038I Pass  50: suminf.    1.12457 (5) obj. -44.4169 iterations 0
Cbc0038I Pass  51: suminf.    1.51786 (4) obj. -44.4169 iterations 2
Cbc0038I Pass  52: suminf.    1.14142 (4) obj. -44.4169 iterations 1
Cbc0038I Pass  53: suminf.    1.51786 (4) obj. -44.4169 iterations 1
Cbc0038I Pass  54: suminf.    1.97585 (9) obj. -44.4169 iterations 7
Cbc0038I Pass  55: suminf.    1.96507 (6) obj. -44.4169 iterations 2
Cbc0038I Pass  56: suminf.    1.59985 (9) obj. -44.4169 iterations 3
Cbc0038I Pass  57: suminf.    1.59985 (9) obj. -44.4169 iterations 0
Cbc0038I Pass  58: suminf.    1.95054 (7) obj. -44.4169 iterations 6
Cbc0038I Pass  59: suminf.    1.50666 (6) obj. -44.6429 iterations 2
Cbc0038I Pass  60: suminf.    1.95054 (7) obj. -44.4169 iterations 3
Cbc0038I Pass  61: suminf.    2.17733 (9) obj. -44.4169 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 22 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -28.9426 - took 0.03 seconds
Cbc0012I Integer solution of -28.942619 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 52 rows 53 columns, reduced to 19 rows 23 columns
Cbc0031I 18 added rows had average density of 10.5
Cbc0013I At root node, 18 cuts changed objective from -91.899163 to -31.601035 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1053 row cuts average 4.6 elements, 10 column cuts (10 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 529 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 89 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 57 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 180 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.744 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.942619 best solution, best possible -31.601035 (1.53 seconds)
Cbc0001I Search completed - best objective -28.94261899999999, took 1388 iterations and 6 nodes (1.76 seconds)
Cbc0032I Strong branching done 68 times (428 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.76

