Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 79 (-26) rows, 43 (-10) columns and 238 (-65) elements
Clp1000I sum of infeasibilities 3.08844e-05 - average 3.90941e-07, 8 fixed columns
Coin0506I Presolve 63 (-16) rows, 34 (-9) columns and 188 (-50) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 5.4014697 - largest nonzero change 0 ( 0%) - largest zero change 2.0584863e-05
Clp0000I Optimal - objective value 117.78056
Clp0000I Optimal - objective value 117.78056
Coin0511I After Postsolve, objective 117.78056, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.78056
Clp0000I Optimal - objective value 117.78056
Clp0000I Optimal - objective value 117.78056
Coin0511I After Postsolve, objective 117.78056, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.78056 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 79 rows, 43 columns (42 integer (42 of which binary)) and 238 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.058%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.80114
Cbc0038I Pass   1: suminf.    0.12994 (2) obj. -92.3417 iterations 18
Cbc0038I Pass   2: suminf.    0.06667 (1) obj. -92.2015 iterations 1
Cbc0038I Solution found of -72.2336
Cbc0038I Relaxing continuous gives -72.2336
Cbc0038I Rounding solution of -75.6204 is better than previous of -72.2336

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 43 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -75.6204 to -100.584 (0.02 seconds)
Cbc0038I Round again with cutoff of -102.304
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.55136 (5) obj. -102.304 iterations 7
Cbc0038I Pass   4: suminf.    0.52896 (4) obj. -102.304 iterations 2
Cbc0038I Pass   5: suminf.    0.68781 (2) obj. -102.304 iterations 5
Cbc0038I Pass   6: suminf.    0.24032 (1) obj. -102.304 iterations 3
Cbc0038I Pass   7: suminf.    0.37889 (1) obj. -102.304 iterations 1
Cbc0038I Pass   8: suminf.    0.78951 (5) obj. -102.304 iterations 7
Cbc0038I Pass   9: suminf.    0.78951 (5) obj. -102.304 iterations 3
Cbc0038I Pass  10: suminf.    0.41595 (2) obj. -102.304 iterations 5
Cbc0038I Pass  11: suminf.    0.42321 (5) obj. -102.304 iterations 10
Cbc0038I Pass  12: suminf.    0.29317 (1) obj. -102.304 iterations 7
Cbc0038I Pass  13: suminf.    0.33028 (1) obj. -102.304 iterations 1
Cbc0038I Pass  14: suminf.    0.48926 (3) obj. -102.304 iterations 11
Cbc0038I Pass  15: suminf.    0.31575 (2) obj. -102.304 iterations 7
Cbc0038I Pass  16: suminf.    1.11002 (8) obj. -102.304 iterations 8
Cbc0038I Pass  17: suminf.    0.31575 (2) obj. -102.304 iterations 9
Cbc0038I Pass  18: suminf.    4.56435 (14) obj. -102.304 iterations 20
Cbc0038I Pass  19: suminf.    1.89879 (11) obj. -102.304 iterations 4
Cbc0038I Pass  20: suminf.    1.53932 (8) obj. -102.304 iterations 3
Cbc0038I Pass  21: suminf.    1.13578 (5) obj. -102.304 iterations 5
Cbc0038I Pass  22: suminf.    0.48561 (2) obj. -102.304 iterations 5
Cbc0038I Pass  23: suminf.    0.31575 (2) obj. -102.304 iterations 5
Cbc0038I Pass  24: suminf.    1.11002 (8) obj. -102.304 iterations 8
Cbc0038I Pass  25: suminf.    0.31575 (2) obj. -102.304 iterations 9
Cbc0038I Pass  26: suminf.    1.65139 (7) obj. -102.304 iterations 10
Cbc0038I Pass  27: suminf.    0.77047 (2) obj. -102.304 iterations 8
Cbc0038I Pass  28: suminf.    0.44412 (2) obj. -102.304 iterations 4
Cbc0038I Pass  29: suminf.    0.98681 (8) obj. -102.304 iterations 11
Cbc0038I Pass  30: suminf.    0.72278 (4) obj. -102.304 iterations 10
Cbc0038I Pass  31: suminf.    0.24032 (1) obj. -102.304 iterations 9
Cbc0038I Pass  32: suminf.    0.37889 (1) obj. -102.304 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 43 columns, reduced to 45 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -100.584 - took 0.03 seconds
Cbc0012I Integer solution of -100.584 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 79 rows 43 columns, reduced to 27 rows 17 columns
Cbc0031I 8 added rows had average density of 28.5
Cbc0013I At root node, 8 cuts changed objective from -117.78056 to -103.50687 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 594 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 372 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -100.584, took 1580 iterations and 4 nodes (0.19 seconds)
Cbc0032I Strong branching done 44 times (384 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-36) rows, 73 (-29) columns and 886 (-692) elements
Clp1000I sum of infeasibilities 1.48903e-07 - average 2.18975e-09, 36 fixed columns
Coin0506I Presolve 34 (-34) rows, 37 (-36) columns and 138 (-748) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 1.9450366 - largest nonzero change 2.8564156e-05 ( 0.00091204228%) - largest zero change 2.8697174e-05
Clp0000I Optimal - objective value 98.504634
Clp0000I Optimal - objective value 98.504634
Coin0511I After Postsolve, objective 98.504634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0618013 - largest nonzero change 2.328603e-05 ( 0.00096990836%) - largest zero change 2.7061378e-05
Clp0000I Optimal - objective value 156.50537
Clp0000I Optimal - objective value 156.50537
Clp0000I Optimal - objective value 156.50537
Coin0511I After Postsolve, objective 156.50537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 156.505373 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 74 columns (74 integer (74 of which binary)) and 891 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.69506
Cbc0038I Pass   1: suminf.    2.89108 (23) obj. -127.841 iterations 8
Cbc0038I Pass   2: suminf.    2.14757 (18) obj. -122.113 iterations 1
Cbc0038I Pass   3: suminf.    0.46114 (6) obj. -95.5646 iterations 12
Cbc0038I Solution found of -87.1679
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 74 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -87.1679 to -89.9198 (0.01 seconds)
Cbc0038I Round again with cutoff of -96.1341
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.89108 (23) obj. -127.841 iterations 0
Cbc0038I Pass   5: suminf.    2.14757 (18) obj. -122.113 iterations 2
Cbc0038I Pass   6: suminf.    0.55161 (13) obj. -96.1341 iterations 21
Cbc0038I Pass   7: suminf.    1.00914 (5) obj. -102.908 iterations 12
Cbc0038I Pass   8: suminf.    0.28398 (4) obj. -102.541 iterations 1
Cbc0038I Pass   9: suminf.    0.18037 (1) obj. -96.1341 iterations 4
Cbc0038I Pass  10: suminf.    0.06897 (1) obj. -98.8329 iterations 1
Cbc0038I Pass  11: suminf.    2.77291 (14) obj. -96.1341 iterations 14
Cbc0038I Pass  12: suminf.    2.02096 (10) obj. -96.1341 iterations 6
Cbc0038I Pass  13: suminf.    0.95423 (4) obj. -96.1341 iterations 12
Cbc0038I Pass  14: suminf.    0.56381 (2) obj. -96.1341 iterations 4
Cbc0038I Pass  15: suminf.    0.23790 (3) obj. -98.4877 iterations 5
Cbc0038I Pass  16: suminf.    2.33510 (11) obj. -102.282 iterations 14
Cbc0038I Pass  17: suminf.    2.01681 (12) obj. -96.1341 iterations 3
Cbc0038I Pass  18: suminf.    0.63588 (4) obj. -96.1341 iterations 13
Cbc0038I Pass  19: suminf.    0.42072 (1) obj. -96.1341 iterations 5
Cbc0038I Pass  20: suminf.    0.44828 (1) obj. -96.8016 iterations 1
Cbc0038I Pass  21: suminf.    2.99749 (18) obj. -96.1341 iterations 25
Cbc0038I Pass  22: suminf.    2.59187 (14) obj. -96.1341 iterations 8
Cbc0038I Pass  23: suminf.    0.70367 (2) obj. -96.1341 iterations 16
Cbc0038I Pass  24: suminf.    0.06897 (1) obj. -98.8329 iterations 5
Cbc0038I Pass  25: suminf.    0.18037 (1) obj. -96.1341 iterations 1
Cbc0038I Pass  26: suminf.    1.12088 (9) obj. -96.1341 iterations 18
Cbc0038I Pass  27: suminf.    0.68180 (6) obj. -98.6468 iterations 5
Cbc0038I Pass  28: suminf.    0.62173 (4) obj. -96.1341 iterations 9
Cbc0038I Pass  29: suminf.    0.62173 (4) obj. -96.1341 iterations 1
Cbc0038I Pass  30: suminf.    1.46495 (5) obj. -96.1341 iterations 4
Cbc0038I Pass  31: suminf.    1.02979 (3) obj. -102.174 iterations 3
Cbc0038I Pass  32: suminf.    0.91094 (3) obj. -96.1341 iterations 7
Cbc0038I Pass  33: suminf.    0.23161 (2) obj. -96.1341 iterations 3
Cbc0038I Rounding solution of -90.2336 is better than previous of -89.9198

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 74 columns, reduced to 41 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -90.2336 to -100.584 (0.04 seconds)
Cbc0038I Round again with cutoff of -110.88
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.89108 (23) obj. -127.841 iterations 0
Cbc0038I Pass  34: suminf.    2.14757 (18) obj. -122.113 iterations 2
Cbc0038I Pass  35: suminf.    1.46011 (13) obj. -110.88 iterations 21
Cbc0038I Pass  36: suminf.    1.43235 (13) obj. -110.88 iterations 1
Cbc0038I Pass  37: suminf.    0.83849 (5) obj. -110.88 iterations 21
Cbc0038I Pass  38: suminf.    0.71848 (5) obj. -110.88 iterations 5
Cbc0038I Pass  39: suminf.    1.14410 (5) obj. -110.88 iterations 10
Cbc0038I Pass  40: suminf.    0.83918 (5) obj. -110.88 iterations 7
Cbc0038I Pass  41: suminf.    1.15464 (4) obj. -110.88 iterations 8
Cbc0038I Pass  42: suminf.    0.81940 (3) obj. -110.88 iterations 3
Cbc0038I Pass  43: suminf.    1.05876 (3) obj. -110.88 iterations 3
Cbc0038I Pass  44: suminf.    0.81374 (3) obj. -112.105 iterations 1
Cbc0038I Pass  45: suminf.    1.22180 (4) obj. -110.88 iterations 7
Cbc0038I Pass  46: suminf.    1.22180 (4) obj. -110.88 iterations 0
Cbc0038I Pass  47: suminf.    1.15464 (4) obj. -110.88 iterations 4
Cbc0038I Pass  48: suminf.    0.81940 (3) obj. -110.88 iterations 3
Cbc0038I Pass  49: suminf.    1.05876 (3) obj. -110.88 iterations 3
Cbc0038I Pass  50: suminf.    0.81374 (3) obj. -112.105 iterations 1
Cbc0038I Pass  51: suminf.    1.22180 (4) obj. -110.88 iterations 7
Cbc0038I Pass  52: suminf.    1.22180 (4) obj. -110.88 iterations 0
Cbc0038I Pass  53: suminf.    1.15464 (4) obj. -110.88 iterations 4
Cbc0038I Pass  54: suminf.    0.81940 (3) obj. -110.88 iterations 3
Cbc0038I Pass  55: suminf.    1.05876 (3) obj. -110.88 iterations 3
Cbc0038I Pass  56: suminf.    0.81374 (3) obj. -112.105 iterations 1
Cbc0038I Pass  57: suminf.    1.22180 (4) obj. -110.88 iterations 7
Cbc0038I Pass  58: suminf.    1.22180 (4) obj. -110.88 iterations 0
Cbc0038I Pass  59: suminf.    1.15464 (4) obj. -110.88 iterations 4
Cbc0038I Pass  60: suminf.    0.81940 (3) obj. -110.88 iterations 3
Cbc0038I Pass  61: suminf.    1.05876 (3) obj. -110.88 iterations 3
Cbc0038I Pass  62: suminf.    0.81374 (3) obj. -112.105 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 74 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -100.584 - took 0.04 seconds
Cbc0012I Integer solution of -100.584 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 69 rows 74 columns, reduced to 7 rows 7 columns
Cbc0031I 20 added rows had average density of 6.25
Cbc0013I At root node, 29 cuts changed objective from -152.0614 to -100.584 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 108 row cuts average 2.0 elements, 18 column cuts (18 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -100.584, took 56 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 79 (-26) rows, 43 (-10) columns and 238 (-65) elements
Clp1000I sum of infeasibilities 3.08844e-05 - average 3.90941e-07, 8 fixed columns
Coin0506I Presolve 63 (-16) rows, 34 (-9) columns and 188 (-50) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 5.4014697 - largest nonzero change 0 ( 0%) - largest zero change 2.0584863e-05
Clp0000I Optimal - objective value 117.78056
Clp0000I Optimal - objective value 117.78056
Coin0511I After Postsolve, objective 117.78056, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.78056
Clp0000I Optimal - objective value 117.78056
Clp0000I Optimal - objective value 117.78056
Coin0511I After Postsolve, objective 117.78056, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.78056 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 79 rows, 43 columns (42 integer (42 of which binary)) and 238 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.058%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.80114
Cbc0038I Pass   1: suminf.    0.12994 (2) obj. -92.3417 iterations 18
Cbc0038I Pass   2: suminf.    0.06667 (1) obj. -92.2015 iterations 1
Cbc0038I Solution found of -72.2336
Cbc0038I Relaxing continuous gives -72.2336
Cbc0038I Rounding solution of -75.6204 is better than previous of -72.2336

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 43 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -75.6204 to -100.584 (0.01 seconds)
Cbc0038I Round again with cutoff of -102.304
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.55136 (5) obj. -102.304 iterations 7
Cbc0038I Pass   4: suminf.    0.52896 (4) obj. -102.304 iterations 2
Cbc0038I Pass   5: suminf.    0.68781 (2) obj. -102.304 iterations 5
Cbc0038I Pass   6: suminf.    0.24032 (1) obj. -102.304 iterations 3
Cbc0038I Pass   7: suminf.    0.37889 (1) obj. -102.304 iterations 1
Cbc0038I Pass   8: suminf.    0.78951 (5) obj. -102.304 iterations 7
Cbc0038I Pass   9: suminf.    0.78951 (5) obj. -102.304 iterations 3
Cbc0038I Pass  10: suminf.    0.41595 (2) obj. -102.304 iterations 5
Cbc0038I Pass  11: suminf.    0.42321 (5) obj. -102.304 iterations 10
Cbc0038I Pass  12: suminf.    0.29317 (1) obj. -102.304 iterations 7
Cbc0038I Pass  13: suminf.    0.33028 (1) obj. -102.304 iterations 1
Cbc0038I Pass  14: suminf.    0.48926 (3) obj. -102.304 iterations 11
Cbc0038I Pass  15: suminf.    0.31575 (2) obj. -102.304 iterations 7
Cbc0038I Pass  16: suminf.    1.11002 (8) obj. -102.304 iterations 8
Cbc0038I Pass  17: suminf.    0.31575 (2) obj. -102.304 iterations 9
Cbc0038I Pass  18: suminf.    4.56435 (14) obj. -102.304 iterations 20
Cbc0038I Pass  19: suminf.    1.89879 (11) obj. -102.304 iterations 4
Cbc0038I Pass  20: suminf.    1.53932 (8) obj. -102.304 iterations 3
Cbc0038I Pass  21: suminf.    1.13578 (5) obj. -102.304 iterations 5
Cbc0038I Pass  22: suminf.    0.48561 (2) obj. -102.304 iterations 5
Cbc0038I Pass  23: suminf.    0.31575 (2) obj. -102.304 iterations 5
Cbc0038I Pass  24: suminf.    1.11002 (8) obj. -102.304 iterations 8
Cbc0038I Pass  25: suminf.    0.31575 (2) obj. -102.304 iterations 9
Cbc0038I Pass  26: suminf.    1.65139 (7) obj. -102.304 iterations 10
Cbc0038I Pass  27: suminf.    0.77047 (2) obj. -102.304 iterations 8
Cbc0038I Pass  28: suminf.    0.44412 (2) obj. -102.304 iterations 4
Cbc0038I Pass  29: suminf.    0.98681 (8) obj. -102.304 iterations 11
Cbc0038I Pass  30: suminf.    0.72278 (4) obj. -102.304 iterations 10
Cbc0038I Pass  31: suminf.    0.24032 (1) obj. -102.304 iterations 9
Cbc0038I Pass  32: suminf.    0.37889 (1) obj. -102.304 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 43 columns, reduced to 45 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -100.584 - took 0.05 seconds
Cbc0012I Integer solution of -100.584 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 79 rows 43 columns, reduced to 27 rows 17 columns
Cbc0031I 8 added rows had average density of 28.5
Cbc0013I At root node, 8 cuts changed objective from -117.78056 to -103.50687 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 594 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 372 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -100.584, took 1580 iterations and 4 nodes (0.17 seconds)
Cbc0032I Strong branching done 44 times (384 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-37) rows, 73 (-30) columns and 886 (-693) elements
Clp1000I sum of infeasibilities 1.48903e-07 - average 2.18975e-09, 36 fixed columns
Coin0506I Presolve 34 (-34) rows, 37 (-36) columns and 138 (-748) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 1.9450366 - largest nonzero change 2.8564156e-05 ( 0.00091204228%) - largest zero change 2.8697174e-05
Clp0000I Optimal - objective value 98.504634
Clp0000I Optimal - objective value 98.504634
Coin0511I After Postsolve, objective 98.504634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0618013 - largest nonzero change 2.328603e-05 ( 0.00096990836%) - largest zero change 2.7061378e-05
Clp0000I Optimal - objective value 156.50537
Clp0000I Optimal - objective value 156.50537
Clp0000I Optimal - objective value 156.50537
Coin0511I After Postsolve, objective 156.50537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 156.505373 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 74 columns (74 integer (74 of which binary)) and 891 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.69506
Cbc0038I Pass   1: suminf.    2.89108 (23) obj. -127.841 iterations 8
Cbc0038I Pass   2: suminf.    2.14757 (18) obj. -122.113 iterations 1
Cbc0038I Pass   3: suminf.    0.46114 (6) obj. -95.5646 iterations 12
Cbc0038I Solution found of -87.1679
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 74 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -87.1679 to -89.9198 (0.02 seconds)
Cbc0038I Round again with cutoff of -96.1341
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.89108 (23) obj. -127.841 iterations 0
Cbc0038I Pass   5: suminf.    2.14757 (18) obj. -122.113 iterations 2
Cbc0038I Pass   6: suminf.    0.55161 (13) obj. -96.1341 iterations 21
Cbc0038I Pass   7: suminf.    1.00914 (5) obj. -102.908 iterations 12
Cbc0038I Pass   8: suminf.    0.28398 (4) obj. -102.541 iterations 1
Cbc0038I Pass   9: suminf.    0.18037 (1) obj. -96.1341 iterations 4
Cbc0038I Pass  10: suminf.    0.06897 (1) obj. -98.8329 iterations 1
Cbc0038I Pass  11: suminf.    2.77291 (14) obj. -96.1341 iterations 14
Cbc0038I Pass  12: suminf.    2.02096 (10) obj. -96.1341 iterations 6
Cbc0038I Pass  13: suminf.    0.95423 (4) obj. -96.1341 iterations 12
Cbc0038I Pass  14: suminf.    0.56381 (2) obj. -96.1341 iterations 4
Cbc0038I Pass  15: suminf.    0.23790 (3) obj. -98.4877 iterations 5
Cbc0038I Pass  16: suminf.    2.33510 (11) obj. -102.282 iterations 14
Cbc0038I Pass  17: suminf.    2.01681 (12) obj. -96.1341 iterations 3
Cbc0038I Pass  18: suminf.    0.63588 (4) obj. -96.1341 iterations 13
Cbc0038I Pass  19: suminf.    0.42072 (1) obj. -96.1341 iterations 5
Cbc0038I Pass  20: suminf.    0.44828 (1) obj. -96.8016 iterations 1
Cbc0038I Pass  21: suminf.    2.99749 (18) obj. -96.1341 iterations 25
Cbc0038I Pass  22: suminf.    2.59187 (14) obj. -96.1341 iterations 8
Cbc0038I Pass  23: suminf.    0.70367 (2) obj. -96.1341 iterations 16
Cbc0038I Pass  24: suminf.    0.06897 (1) obj. -98.8329 iterations 5
Cbc0038I Pass  25: suminf.    0.18037 (1) obj. -96.1341 iterations 1
Cbc0038I Pass  26: suminf.    1.12088 (9) obj. -96.1341 iterations 18
Cbc0038I Pass  27: suminf.    0.68180 (6) obj. -98.6468 iterations 5
Cbc0038I Pass  28: suminf.    0.62173 (4) obj. -96.1341 iterations 9
Cbc0038I Pass  29: suminf.    0.62173 (4) obj. -96.1341 iterations 1
Cbc0038I Pass  30: suminf.    1.46495 (5) obj. -96.1341 iterations 4
Cbc0038I Pass  31: suminf.    1.02979 (3) obj. -102.174 iterations 3
Cbc0038I Pass  32: suminf.    0.91094 (3) obj. -96.1341 iterations 7
Cbc0038I Pass  33: suminf.    0.23161 (2) obj. -96.1341 iterations 3
Cbc0038I Rounding solution of -90.2336 is better than previous of -89.9198

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 74 columns, reduced to 41 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -90.2336 to -100.584 (0.04 seconds)
Cbc0038I Round again with cutoff of -110.88
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.89108 (23) obj. -127.841 iterations 0
Cbc0038I Pass  34: suminf.    2.14757 (18) obj. -122.113 iterations 2
Cbc0038I Pass  35: suminf.    1.46011 (13) obj. -110.88 iterations 21
Cbc0038I Pass  36: suminf.    1.43235 (13) obj. -110.88 iterations 1
Cbc0038I Pass  37: suminf.    0.83849 (5) obj. -110.88 iterations 21
Cbc0038I Pass  38: suminf.    0.71848 (5) obj. -110.88 iterations 5
Cbc0038I Pass  39: suminf.    1.14410 (5) obj. -110.88 iterations 10
Cbc0038I Pass  40: suminf.    0.83918 (5) obj. -110.88 iterations 7
Cbc0038I Pass  41: suminf.    1.15464 (4) obj. -110.88 iterations 8
Cbc0038I Pass  42: suminf.    0.81940 (3) obj. -110.88 iterations 3
Cbc0038I Pass  43: suminf.    1.05876 (3) obj. -110.88 iterations 3
Cbc0038I Pass  44: suminf.    0.81374 (3) obj. -112.105 iterations 1
Cbc0038I Pass  45: suminf.    1.22180 (4) obj. -110.88 iterations 7
Cbc0038I Pass  46: suminf.    1.22180 (4) obj. -110.88 iterations 0
Cbc0038I Pass  47: suminf.    1.15464 (4) obj. -110.88 iterations 4
Cbc0038I Pass  48: suminf.    0.81940 (3) obj. -110.88 iterations 3
Cbc0038I Pass  49: suminf.    1.05876 (3) obj. -110.88 iterations 3
Cbc0038I Pass  50: suminf.    0.81374 (3) obj. -112.105 iterations 1
Cbc0038I Pass  51: suminf.    1.22180 (4) obj. -110.88 iterations 7
Cbc0038I Pass  52: suminf.    1.22180 (4) obj. -110.88 iterations 0
Cbc0038I Pass  53: suminf.    1.15464 (4) obj. -110.88 iterations 4
Cbc0038I Pass  54: suminf.    0.81940 (3) obj. -110.88 iterations 3
Cbc0038I Pass  55: suminf.    1.05876 (3) obj. -110.88 iterations 3
Cbc0038I Pass  56: suminf.    0.81374 (3) obj. -112.105 iterations 1
Cbc0038I Pass  57: suminf.    1.22180 (4) obj. -110.88 iterations 7
Cbc0038I Pass  58: suminf.    1.22180 (4) obj. -110.88 iterations 0
Cbc0038I Pass  59: suminf.    1.15464 (4) obj. -110.88 iterations 4
Cbc0038I Pass  60: suminf.    0.81940 (3) obj. -110.88 iterations 3
Cbc0038I Pass  61: suminf.    1.05876 (3) obj. -110.88 iterations 3
Cbc0038I Pass  62: suminf.    0.81374 (3) obj. -112.105 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 74 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -100.584 - took 0.04 seconds
Cbc0012I Integer solution of -100.584 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 69 rows 74 columns, reduced to 7 rows 7 columns
Cbc0031I 20 added rows had average density of 6.25
Cbc0013I At root node, 29 cuts changed objective from -152.0614 to -100.584 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 108 row cuts average 2.0 elements, 18 column cuts (18 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -100.584, took 56 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

