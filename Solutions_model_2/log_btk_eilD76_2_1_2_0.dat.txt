Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 76 (-2) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 6.90711e-05 - average 5.11638e-07, 12 fixed columns
Coin0506I Presolve 111 (-24) rows, 64 (-12) columns and 342 (-72) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Coin0511I After Postsolve, objective 56.809845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Coin0511I After Postsolve, objective 56.809845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.80984529 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.144%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.4981
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.24893 iterations 55
Cbc0038I Solution found of 2.24893
Cbc0038I Relaxing continuous gives 2.24893
Cbc0038I Rounding solution of -3.00893 is better than previous of 2.24893

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 78 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -3.00893 to -27.5054 (0.06 seconds)
Cbc0038I Round again with cutoff of -30.4359
Cbc0038I Pass   2: suminf.    4.09932 (14) obj. -30.4359 iterations 21
Cbc0038I Pass   3: suminf.    3.57386 (13) obj. -30.4359 iterations 2
Cbc0038I Pass   4: suminf.    2.77440 (7) obj. -30.4359 iterations 11
Cbc0038I Pass   5: suminf.    1.61885 (9) obj. -30.4359 iterations 9
Cbc0038I Pass   6: suminf.    1.55234 (7) obj. -30.4359 iterations 3
Cbc0038I Pass   7: suminf.    2.27718 (6) obj. -30.4359 iterations 17
Cbc0038I Pass   8: suminf.    1.75927 (6) obj. -30.4359 iterations 4
Cbc0038I Pass   9: suminf.    2.29831 (6) obj. -30.4359 iterations 14
Cbc0038I Pass  10: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  11: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  12: suminf.    2.40337 (6) obj. -30.4359 iterations 8
Cbc0038I Pass  13: suminf.    1.64096 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  14: suminf.    1.29989 (6) obj. -30.4359 iterations 6
Cbc0038I Pass  15: suminf.    3.18069 (8) obj. -30.4359 iterations 12
Cbc0038I Pass  16: suminf.    3.18069 (8) obj. -30.4359 iterations 0
Cbc0038I Pass  17: suminf.    2.50973 (7) obj. -30.4359 iterations 8
Cbc0038I Pass  18: suminf.    2.28236 (7) obj. -30.4359 iterations 1
Cbc0038I Pass  19: suminf.    2.29831 (6) obj. -30.4359 iterations 10
Cbc0038I Pass  20: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  21: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  22: suminf.    2.40337 (6) obj. -30.4359 iterations 8
Cbc0038I Pass  23: suminf.    1.64096 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  24: suminf.    1.29989 (6) obj. -30.4359 iterations 6
Cbc0038I Pass  25: suminf.    3.18069 (8) obj. -30.4359 iterations 12
Cbc0038I Pass  26: suminf.    3.18069 (8) obj. -30.4359 iterations 0
Cbc0038I Pass  27: suminf.    2.50973 (7) obj. -30.4359 iterations 8
Cbc0038I Pass  28: suminf.    2.28236 (7) obj. -30.4359 iterations 1
Cbc0038I Pass  29: suminf.    2.29831 (6) obj. -30.4359 iterations 10
Cbc0038I Pass  30: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  31: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -27.5054 to -27.736 (0.11 seconds)
Cbc0038I Round again with cutoff of -35.7107
Cbc0038I Pass  31: suminf.    5.00574 (16) obj. -35.7107 iterations 4
Cbc0038I Pass  32: suminf.    4.46183 (13) obj. -35.7107 iterations 6
Cbc0038I Pass  33: suminf.    3.60496 (12) obj. -35.7107 iterations 1
Cbc0038I Pass  34: suminf.    3.23323 (9) obj. -35.7107 iterations 7
Cbc0038I Pass  35: suminf.    3.23323 (9) obj. -35.7107 iterations 1
Cbc0038I Pass  36: suminf.    3.46194 (9) obj. -35.7107 iterations 16
Cbc0038I Pass  37: suminf.    2.53977 (7) obj. -35.7107 iterations 9
Cbc0038I Pass  38: suminf.    2.51172 (7) obj. -35.7107 iterations 1
Cbc0038I Pass  39: suminf.    2.32264 (7) obj. -35.7107 iterations 10
Cbc0038I Pass  40: suminf.    1.96794 (6) obj. -35.7107 iterations 3
Cbc0038I Pass  41: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  42: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  43: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  44: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  45: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  46: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  47: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  48: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  49: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  50: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  51: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  52: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  53: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  54: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  55: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  56: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  57: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  58: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  59: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  60: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -27.736 - took 0.13 seconds
Cbc0012I Integer solution of -27.73595 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 80 rows 48 columns
Cbc0031I 29 added rows had average density of 51.034483
Cbc0013I At root node, 29 cuts changed objective from -56.809845 to -48.229192 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13755 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2408 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 186 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27.73595 best solution, best possible -48.229192 (1.05 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -27.95636 found by RINS after 9746 iterations and 45 nodes (1.37 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 28 rows 23 columns
Cbc0001I Search completed - best objective -27.95636, took 11607 iterations and 96 nodes (1.49 seconds)
Cbc0032I Strong branching done 1116 times (20188 iterations), fathomed 12 nodes and fixed 63 variables
Cbc0035I Maximum depth 28, 367 variables fixed on reduced cost
Total time (CPU seconds):       1.45   (Wallclock seconds):       1.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 114 (-38) columns and 1787 (-1516) elements
Clp1000I sum of infeasibilities 2.92983e-07 - average 2.95943e-09, 66 fixed columns
Coin0506I Presolve 37 (-62) rows, 48 (-66) columns and 164 (-1623) elements
Clp0006I 0  Obj 18.156063 Dual inf 2.7621109 (48)
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.0319136 - largest nonzero change 2.6815727e-05 ( 0.0015380202%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 18.300981
Clp0000I Optimal - objective value 18.300981
Coin0511I After Postsolve, objective 18.300981, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 18.300981 Dual inf 37.571198 (40)
Clp0014I Perturbing problem by 0.001% of 1.8167246 - largest nonzero change 2.1927663e-05 ( 0.0015420975%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 71.918532
Clp0000I Optimal - objective value 71.918532
Clp0000I Optimal - objective value 71.918532
Coin0511I After Postsolve, objective 71.918532, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.91853156 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 115 columns (115 integer (115 of which binary)) and 1792 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.245%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 7.14012
Cbc0038I Pass   1: suminf.    2.63702 (31) obj. -37.7233 iterations 14
Cbc0038I Pass   2: suminf.    2.63702 (31) obj. -37.7233 iterations 1
Cbc0038I Pass   3: suminf.    0.61682 (9) obj. -10.5109 iterations 22
Cbc0038I Solution found of -0.27481
Cbc0038I Rounding solution of -19.7743 is better than previous of -0.27481

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -19.7743 to -23.2246 (0.03 seconds)
Cbc0038I Round again with cutoff of -27.1794
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.63702 (31) obj. -37.7233 iterations 0
Cbc0038I Pass   5: suminf.    2.63702 (31) obj. -37.7233 iterations 1
Cbc0038I Pass   6: suminf.    1.75075 (9) obj. -27.1794 iterations 42
Cbc0038I Pass   7: suminf.    1.75075 (9) obj. -27.1794 iterations 0
Cbc0038I Pass   8: suminf.    1.54727 (6) obj. -27.1794 iterations 17
Cbc0038I Pass   9: suminf.    0.88417 (6) obj. -27.1794 iterations 2
Cbc0038I Pass  10: suminf.    0.59157 (5) obj. -27.1794 iterations 7
Cbc0038I Pass  11: suminf.    1.14019 (5) obj. -27.1794 iterations 9
Cbc0038I Pass  12: suminf.    1.13562 (4) obj. -27.1794 iterations 2
Cbc0038I Pass  13: suminf.    0.73473 (5) obj. -27.1794 iterations 11
Cbc0038I Pass  14: suminf.    0.73482 (4) obj. -27.1794 iterations 5
Cbc0038I Pass  15: suminf.    0.79836 (5) obj. -27.1794 iterations 5
Cbc0038I Pass  16: suminf.    0.79837 (4) obj. -27.1794 iterations 4
Cbc0038I Pass  17: suminf.    2.25526 (13) obj. -27.2264 iterations 27
Cbc0038I Pass  18: suminf.    2.17125 (13) obj. -27.1794 iterations 8
Cbc0038I Pass  19: suminf.    1.07097 (7) obj. -27.1794 iterations 25
Cbc0038I Pass  20: suminf.    1.07097 (7) obj. -27.1794 iterations 1
Cbc0038I Pass  21: suminf.    0.95486 (5) obj. -27.1794 iterations 11
Cbc0038I Pass  22: suminf.    0.95486 (5) obj. -27.1794 iterations 0
Cbc0038I Pass  23: suminf.    1.31136 (5) obj. -27.1794 iterations 6
Cbc0038I Pass  24: suminf.    1.25596 (6) obj. -27.1794 iterations 4
Cbc0038I Pass  25: suminf.    1.16935 (6) obj. -27.1794 iterations 7
Cbc0038I Pass  26: suminf.    1.16935 (6) obj. -27.1794 iterations 4
Cbc0038I Pass  27: suminf.    1.72378 (8) obj. -27.1794 iterations 7
Cbc0038I Pass  28: suminf.    0.73324 (6) obj. -27.1794 iterations 9
Cbc0038I Pass  29: suminf.    1.16935 (6) obj. -27.1794 iterations 10
Cbc0038I Pass  30: suminf.    2.01816 (12) obj. -27.1794 iterations 28
Cbc0038I Pass  31: suminf.    1.84181 (10) obj. -27.1794 iterations 12
Cbc0038I Pass  32: suminf.    1.18356 (9) obj. -27.1794 iterations 17
Cbc0038I Pass  33: suminf.    1.12337 (8) obj. -27.1794 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 14 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -23.2246 to -23.7326 (0.05 seconds)
Cbc0038I Round again with cutoff of -34.2978
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.63702 (31) obj. -37.7233 iterations 0
Cbc0038I Pass  34: suminf.    2.63702 (31) obj. -37.7233 iterations 1
Cbc0038I Pass  35: suminf.    1.99823 (17) obj. -34.2978 iterations 25
Cbc0038I Pass  36: suminf.    1.99823 (17) obj. -34.2978 iterations 0
Cbc0038I Pass  37: suminf.    1.71684 (10) obj. -34.2978 iterations 38
Cbc0038I Pass  38: suminf.    1.47706 (10) obj. -34.2978 iterations 2
Cbc0038I Pass  39: suminf.    1.12353 (10) obj. -34.2978 iterations 6
Cbc0038I Pass  40: suminf.    1.39114 (9) obj. -34.2978 iterations 19
Cbc0038I Pass  41: suminf.    1.39114 (9) obj. -34.2978 iterations 0
Cbc0038I Pass  42: suminf.    1.47596 (10) obj. -34.2978 iterations 10
Cbc0038I Pass  43: suminf.    1.43083 (9) obj. -34.2978 iterations 5
Cbc0038I Pass  44: suminf.    1.43559 (10) obj. -34.2978 iterations 11
Cbc0038I Pass  45: suminf.    1.75004 (11) obj. -34.2978 iterations 29
Cbc0038I Pass  46: suminf.    1.75004 (11) obj. -34.2978 iterations 2
Cbc0038I Pass  47: suminf.    1.67409 (9) obj. -34.2978 iterations 19
Cbc0038I Pass  48: suminf.    1.67409 (9) obj. -34.2978 iterations 0
Cbc0038I Pass  49: suminf.    1.93048 (10) obj. -34.2978 iterations 6
Cbc0038I Pass  50: suminf.    1.82402 (12) obj. -34.2978 iterations 6
Cbc0038I Pass  51: suminf.    1.57827 (10) obj. -34.2978 iterations 14
Cbc0038I Pass  52: suminf.    1.34395 (10) obj. -34.2978 iterations 3
Cbc0038I Pass  53: suminf.    1.54741 (10) obj. -34.2978 iterations 15
Cbc0038I Pass  54: suminf.    1.29171 (10) obj. -34.2978 iterations 8
Cbc0038I Pass  55: suminf.    1.57827 (10) obj. -34.2978 iterations 10
Cbc0038I Pass  56: suminf.    1.86144 (13) obj. -34.2978 iterations 19
Cbc0038I Pass  57: suminf.    1.86144 (13) obj. -34.2978 iterations 3
Cbc0038I Pass  58: suminf.    1.38424 (8) obj. -34.2978 iterations 14
Cbc0038I Pass  59: suminf.    1.36439 (8) obj. -34.2978 iterations 3
Cbc0038I Pass  60: suminf.    1.36439 (9) obj. -34.2978 iterations 10
Cbc0038I Pass  61: suminf.    1.34395 (10) obj. -34.2978 iterations 3
Cbc0038I Pass  62: suminf.    1.54741 (10) obj. -34.2978 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.7326 - took 0.05 seconds
Cbc0012I Integer solution of -23.7326 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 100 rows 115 columns, reduced to 7 rows 10 columns
Cbc0031I 57 added rows had average density of 36.438596
Cbc0013I At root node, 57 cuts changed objective from -62.771704 to -33.703785 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9193 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 964 row cuts average 105.2 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 389 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1058 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 320 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.7326 best solution, best possible -33.703785 (2.53 seconds)
Cbc0012I Integer solution of -24.5981 found by rounding after 3874 iterations and 1 nodes (2.53 seconds)
Cbc0012I Integer solution of -27.73595 found by DiveCoefficient after 3874 iterations and 1 nodes (2.53 seconds)
Cbc0012I Integer solution of -27.95636 found by rounding after 4185 iterations and 5 nodes (2.58 seconds)
Cbc0001I Search completed - best objective -27.95636, took 6059 iterations and 42 nodes (3.12 seconds)
Cbc0032I Strong branching done 662 times (11785 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 16, 91 variables fixed on reduced cost
Total time (CPU seconds):       2.32   (Wallclock seconds):       3.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 76 (-2) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 6.90711e-05 - average 5.11638e-07, 12 fixed columns
Coin0506I Presolve 111 (-24) rows, 64 (-12) columns and 342 (-72) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Coin0511I After Postsolve, objective 56.809845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Coin0511I After Postsolve, objective 56.809845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.80984529 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.144%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.4981
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.24893 iterations 55
Cbc0038I Solution found of 2.24893
Cbc0038I Relaxing continuous gives 2.24893
Cbc0038I Rounding solution of -3.00893 is better than previous of 2.24893

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 78 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -3.00893 to -27.5054 (0.06 seconds)
Cbc0038I Round again with cutoff of -30.4359
Cbc0038I Pass   2: suminf.    4.09932 (14) obj. -30.4359 iterations 21
Cbc0038I Pass   3: suminf.    3.57386 (13) obj. -30.4359 iterations 2
Cbc0038I Pass   4: suminf.    2.77440 (7) obj. -30.4359 iterations 11
Cbc0038I Pass   5: suminf.    1.61885 (9) obj. -30.4359 iterations 9
Cbc0038I Pass   6: suminf.    1.55234 (7) obj. -30.4359 iterations 3
Cbc0038I Pass   7: suminf.    2.27718 (6) obj. -30.4359 iterations 17
Cbc0038I Pass   8: suminf.    1.75927 (6) obj. -30.4359 iterations 4
Cbc0038I Pass   9: suminf.    2.29831 (6) obj. -30.4359 iterations 14
Cbc0038I Pass  10: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  11: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  12: suminf.    2.40337 (6) obj. -30.4359 iterations 8
Cbc0038I Pass  13: suminf.    1.64096 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  14: suminf.    1.29989 (6) obj. -30.4359 iterations 6
Cbc0038I Pass  15: suminf.    3.18069 (8) obj. -30.4359 iterations 12
Cbc0038I Pass  16: suminf.    3.18069 (8) obj. -30.4359 iterations 0
Cbc0038I Pass  17: suminf.    2.50973 (7) obj. -30.4359 iterations 8
Cbc0038I Pass  18: suminf.    2.28236 (7) obj. -30.4359 iterations 1
Cbc0038I Pass  19: suminf.    2.29831 (6) obj. -30.4359 iterations 10
Cbc0038I Pass  20: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  21: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  22: suminf.    2.40337 (6) obj. -30.4359 iterations 8
Cbc0038I Pass  23: suminf.    1.64096 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  24: suminf.    1.29989 (6) obj. -30.4359 iterations 6
Cbc0038I Pass  25: suminf.    3.18069 (8) obj. -30.4359 iterations 12
Cbc0038I Pass  26: suminf.    3.18069 (8) obj. -30.4359 iterations 0
Cbc0038I Pass  27: suminf.    2.50973 (7) obj. -30.4359 iterations 8
Cbc0038I Pass  28: suminf.    2.28236 (7) obj. -30.4359 iterations 1
Cbc0038I Pass  29: suminf.    2.29831 (6) obj. -30.4359 iterations 10
Cbc0038I Pass  30: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  31: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -27.5054 to -27.736 (0.11 seconds)
Cbc0038I Round again with cutoff of -35.7107
Cbc0038I Pass  31: suminf.    5.00574 (16) obj. -35.7107 iterations 4
Cbc0038I Pass  32: suminf.    4.46183 (13) obj. -35.7107 iterations 6
Cbc0038I Pass  33: suminf.    3.60496 (12) obj. -35.7107 iterations 1
Cbc0038I Pass  34: suminf.    3.23323 (9) obj. -35.7107 iterations 7
Cbc0038I Pass  35: suminf.    3.23323 (9) obj. -35.7107 iterations 1
Cbc0038I Pass  36: suminf.    3.46194 (9) obj. -35.7107 iterations 16
Cbc0038I Pass  37: suminf.    2.53977 (7) obj. -35.7107 iterations 9
Cbc0038I Pass  38: suminf.    2.51172 (7) obj. -35.7107 iterations 1
Cbc0038I Pass  39: suminf.    2.32264 (7) obj. -35.7107 iterations 10
Cbc0038I Pass  40: suminf.    1.96794 (6) obj. -35.7107 iterations 3
Cbc0038I Pass  41: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  42: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  43: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  44: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  45: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  46: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  47: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  48: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  49: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  50: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  51: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  52: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  53: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  54: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  55: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  56: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  57: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  58: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  59: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  60: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -27.736 - took 0.12 seconds
Cbc0012I Integer solution of -27.73595 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 80 rows 48 columns
Cbc0031I 29 added rows had average density of 51.034483
Cbc0013I At root node, 29 cuts changed objective from -56.809845 to -48.229192 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13755 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2408 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 186 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27.73595 best solution, best possible -48.229192 (1.00 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -27.95636 found by RINS after 9746 iterations and 45 nodes (1.30 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 28 rows 23 columns
Cbc0001I Search completed - best objective -27.95636, took 11607 iterations and 96 nodes (1.42 seconds)
Cbc0032I Strong branching done 1116 times (20188 iterations), fathomed 12 nodes and fixed 63 variables
Cbc0035I Maximum depth 28, 367 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 114 (-39) columns and 1787 (-1517) elements
Clp1000I sum of infeasibilities 2.92983e-07 - average 2.95943e-09, 66 fixed columns
Coin0506I Presolve 37 (-62) rows, 48 (-66) columns and 164 (-1623) elements
Clp0006I 0  Obj 18.156063 Dual inf 2.7621109 (48)
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.0319136 - largest nonzero change 2.6815727e-05 ( 0.0015380202%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 18.300981
Clp0000I Optimal - objective value 18.300981
Coin0511I After Postsolve, objective 18.300981, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 18.300981 Dual inf 37.571198 (40)
Clp0014I Perturbing problem by 0.001% of 1.8167246 - largest nonzero change 2.1927663e-05 ( 0.0015420975%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 71.918532
Clp0000I Optimal - objective value 71.918532
Clp0000I Optimal - objective value 71.918532
Coin0511I After Postsolve, objective 71.918532, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.91853156 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 115 columns (115 integer (115 of which binary)) and 1792 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.245%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 7.14012
Cbc0038I Pass   1: suminf.    2.63702 (31) obj. -37.7233 iterations 14
Cbc0038I Pass   2: suminf.    2.63702 (31) obj. -37.7233 iterations 1
Cbc0038I Pass   3: suminf.    0.61682 (9) obj. -10.5109 iterations 22
Cbc0038I Solution found of -0.27481
Cbc0038I Rounding solution of -19.7743 is better than previous of -0.27481

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -19.7743 to -23.2246 (0.03 seconds)
Cbc0038I Round again with cutoff of -27.1794
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.63702 (31) obj. -37.7233 iterations 0
Cbc0038I Pass   5: suminf.    2.63702 (31) obj. -37.7233 iterations 1
Cbc0038I Pass   6: suminf.    1.75075 (9) obj. -27.1794 iterations 42
Cbc0038I Pass   7: suminf.    1.75075 (9) obj. -27.1794 iterations 0
Cbc0038I Pass   8: suminf.    1.54727 (6) obj. -27.1794 iterations 17
Cbc0038I Pass   9: suminf.    0.88417 (6) obj. -27.1794 iterations 2
Cbc0038I Pass  10: suminf.    0.59157 (5) obj. -27.1794 iterations 7
Cbc0038I Pass  11: suminf.    1.14019 (5) obj. -27.1794 iterations 9
Cbc0038I Pass  12: suminf.    1.13562 (4) obj. -27.1794 iterations 2
Cbc0038I Pass  13: suminf.    0.73473 (5) obj. -27.1794 iterations 11
Cbc0038I Pass  14: suminf.    0.73482 (4) obj. -27.1794 iterations 5
Cbc0038I Pass  15: suminf.    0.79836 (5) obj. -27.1794 iterations 5
Cbc0038I Pass  16: suminf.    0.79837 (4) obj. -27.1794 iterations 4
Cbc0038I Pass  17: suminf.    2.25526 (13) obj. -27.2264 iterations 27
Cbc0038I Pass  18: suminf.    2.17125 (13) obj. -27.1794 iterations 8
Cbc0038I Pass  19: suminf.    1.07097 (7) obj. -27.1794 iterations 25
Cbc0038I Pass  20: suminf.    1.07097 (7) obj. -27.1794 iterations 1
Cbc0038I Pass  21: suminf.    0.95486 (5) obj. -27.1794 iterations 11
Cbc0038I Pass  22: suminf.    0.95486 (5) obj. -27.1794 iterations 0
Cbc0038I Pass  23: suminf.    1.31136 (5) obj. -27.1794 iterations 6
Cbc0038I Pass  24: suminf.    1.25596 (6) obj. -27.1794 iterations 4
Cbc0038I Pass  25: suminf.    1.16935 (6) obj. -27.1794 iterations 7
Cbc0038I Pass  26: suminf.    1.16935 (6) obj. -27.1794 iterations 4
Cbc0038I Pass  27: suminf.    1.72378 (8) obj. -27.1794 iterations 7
Cbc0038I Pass  28: suminf.    0.73324 (6) obj. -27.1794 iterations 9
Cbc0038I Pass  29: suminf.    1.16935 (6) obj. -27.1794 iterations 10
Cbc0038I Pass  30: suminf.    2.01816 (12) obj. -27.1794 iterations 28
Cbc0038I Pass  31: suminf.    1.84181 (10) obj. -27.1794 iterations 12
Cbc0038I Pass  32: suminf.    1.18356 (9) obj. -27.1794 iterations 17
Cbc0038I Pass  33: suminf.    1.12337 (8) obj. -27.1794 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 14 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -23.2246 to -23.7326 (0.05 seconds)
Cbc0038I Round again with cutoff of -34.2978
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.63702 (31) obj. -37.7233 iterations 0
Cbc0038I Pass  34: suminf.    2.63702 (31) obj. -37.7233 iterations 1
Cbc0038I Pass  35: suminf.    1.99823 (17) obj. -34.2978 iterations 25
Cbc0038I Pass  36: suminf.    1.99823 (17) obj. -34.2978 iterations 0
Cbc0038I Pass  37: suminf.    1.71684 (10) obj. -34.2978 iterations 38
Cbc0038I Pass  38: suminf.    1.47706 (10) obj. -34.2978 iterations 2
Cbc0038I Pass  39: suminf.    1.12353 (10) obj. -34.2978 iterations 6
Cbc0038I Pass  40: suminf.    1.39114 (9) obj. -34.2978 iterations 19
Cbc0038I Pass  41: suminf.    1.39114 (9) obj. -34.2978 iterations 0
Cbc0038I Pass  42: suminf.    1.47596 (10) obj. -34.2978 iterations 10
Cbc0038I Pass  43: suminf.    1.43083 (9) obj. -34.2978 iterations 5
Cbc0038I Pass  44: suminf.    1.43559 (10) obj. -34.2978 iterations 11
Cbc0038I Pass  45: suminf.    1.75004 (11) obj. -34.2978 iterations 29
Cbc0038I Pass  46: suminf.    1.75004 (11) obj. -34.2978 iterations 2
Cbc0038I Pass  47: suminf.    1.67409 (9) obj. -34.2978 iterations 19
Cbc0038I Pass  48: suminf.    1.67409 (9) obj. -34.2978 iterations 0
Cbc0038I Pass  49: suminf.    1.93048 (10) obj. -34.2978 iterations 6
Cbc0038I Pass  50: suminf.    1.82402 (12) obj. -34.2978 iterations 6
Cbc0038I Pass  51: suminf.    1.57827 (10) obj. -34.2978 iterations 14
Cbc0038I Pass  52: suminf.    1.34395 (10) obj. -34.2978 iterations 3
Cbc0038I Pass  53: suminf.    1.54741 (10) obj. -34.2978 iterations 15
Cbc0038I Pass  54: suminf.    1.29171 (10) obj. -34.2978 iterations 8
Cbc0038I Pass  55: suminf.    1.57827 (10) obj. -34.2978 iterations 10
Cbc0038I Pass  56: suminf.    1.86144 (13) obj. -34.2978 iterations 19
Cbc0038I Pass  57: suminf.    1.86144 (13) obj. -34.2978 iterations 3
Cbc0038I Pass  58: suminf.    1.38424 (8) obj. -34.2978 iterations 14
Cbc0038I Pass  59: suminf.    1.36439 (8) obj. -34.2978 iterations 3
Cbc0038I Pass  60: suminf.    1.36439 (9) obj. -34.2978 iterations 10
Cbc0038I Pass  61: suminf.    1.34395 (10) obj. -34.2978 iterations 3
Cbc0038I Pass  62: suminf.    1.54741 (10) obj. -34.2978 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.7326 - took 0.05 seconds
Cbc0012I Integer solution of -23.7326 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 100 rows 115 columns, reduced to 7 rows 10 columns
Cbc0031I 57 added rows had average density of 36.438596
Cbc0013I At root node, 57 cuts changed objective from -62.771704 to -33.703785 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9193 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 964 row cuts average 105.2 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 389 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1058 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 320 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.701 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.7326 best solution, best possible -33.703785 (2.47 seconds)
Cbc0012I Integer solution of -24.5981 found by rounding after 3874 iterations and 1 nodes (2.48 seconds)
Cbc0012I Integer solution of -27.73595 found by DiveCoefficient after 3874 iterations and 1 nodes (2.48 seconds)
Cbc0012I Integer solution of -27.95636 found by rounding after 4185 iterations and 5 nodes (2.53 seconds)
Cbc0001I Search completed - best objective -27.95636, took 6059 iterations and 42 nodes (3.05 seconds)
Cbc0032I Strong branching done 662 times (11785 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 16, 91 variables fixed on reduced cost
Total time (CPU seconds):       2.27   (Wallclock seconds):       3.06

