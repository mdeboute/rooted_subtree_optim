Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 67 (-11) columns and 368 (-85) elements
Clp1000I sum of infeasibilities 0.00014657 - average 1.21132e-06, 13 fixed columns
Coin0506I Presolve 96 (-25) rows, 54 (-13) columns and 293 (-75) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.37184903 - largest nonzero change 0 ( 0%) - largest zero change 2.929533e-05
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Coin0511I After Postsolve, objective 37.344754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Coin0511I After Postsolve, objective 37.344754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.34475417 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 67 columns (66 integer (66 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.37549
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.88316 iterations 33
Cbc0038I Solution found of 2.88316
Cbc0038I Relaxing continuous gives 2.88316
Cbc0038I Rounding solution of -9.77557 is better than previous of 2.88316

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -9.77557 to -10.2453 (0.03 seconds)
Cbc0038I Round again with cutoff of -12.9313
Cbc0038I Pass   2: suminf.    1.60196 (5) obj. -12.9313 iterations 10
Cbc0038I Pass   3: suminf.    1.60196 (5) obj. -12.9313 iterations 0
Cbc0038I Pass   4: suminf.    1.01980 (5) obj. -12.9313 iterations 11
Cbc0038I Pass   5: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass   6: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass   7: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass   8: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass   9: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  10: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  11: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  12: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  13: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  14: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  15: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  16: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  17: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  18: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  19: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  20: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  21: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  22: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  23: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  24: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  25: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  26: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  27: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  28: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  29: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  30: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  31: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -10.2453 - took 0.04 seconds
Cbc0012I Integer solution of -10.24534 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0031I 17 added rows had average density of 52.294118
Cbc0013I At root node, 17 cuts changed objective from -37.103809 to -28.601931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9693 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1621 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 66.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -10.24534 best solution, best possible -28.601931 (0.71 seconds)
Cbc0004I Integer solution of -11.55095 found after 7687 iterations and 25 nodes (0.84 seconds)
Cbc0038I Full problem 121 rows 67 columns, reduced to 9 rows 8 columns
Cbc0012I Integer solution of -11.783 found by RINS after 7850 iterations and 42 nodes (0.85 seconds)
Cbc0001I Search completed - best objective -11.783, took 8483 iterations and 70 nodes (0.89 seconds)
Cbc0032I Strong branching done 694 times (11531 iterations), fathomed 3 nodes and fixed 34 variables
Cbc0035I Maximum depth 15, 153 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       0.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 110 (-42) columns and 1724 (-1579) elements
Clp1000I sum of infeasibilities 1.09132e-07 - average 1.10235e-09, 10 fixed columns
Coin0506I Presolve 90 (-9) rows, 99 (-11) columns and 1415 (-309) elements
Clp0006I 0  Obj 41.469476 Dual inf 2.9006098 (98)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 4.9100725 - largest nonzero change 2.4442749e-05 ( 0.0012247315%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 51.006847
Clp0000I Optimal - objective value 51.006847
Coin0511I After Postsolve, objective 51.006847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.006847
Clp0000I Optimal - objective value 51.006847
Clp0000I Optimal - objective value 51.006847
Clp0000I Optimal - objective value 51.006847
Coin0511I After Postsolve, objective 51.006847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.00684746 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 111 columns (111 integer (111 of which binary)) and 1730 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.512%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 4.85207
Cbc0038I Pass   1: suminf.    2.02646 (32) obj. -34.1934 iterations 23
Cbc0038I Pass   2: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass   3: suminf.    0.43126 (10) obj. -0.884323 iterations 22
Cbc0038I Solution found of 9.64094
Cbc0038I Rounding solution of 5.47443 is better than previous of 9.64094

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 111 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 5.47443 to 5.36971 (0.03 seconds)
Cbc0038I Round again with cutoff of 0.264301
Cbc0038I Pass   4: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass   5: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass   6: suminf.    0.43126 (10) obj. -0.884323 iterations 22
Cbc0038I Pass   7: suminf.    0.38501 (4) obj. 0.264301 iterations 29
Cbc0038I Pass   8: suminf.    0.30599 (4) obj. 0.264301 iterations 23
Cbc0038I Pass   9: suminf.    0.65739 (3) obj. -2.23299 iterations 11
Cbc0038I Pass  10: suminf.    0.65739 (3) obj. -2.23299 iterations 0
Cbc0038I Pass  11: suminf.    1.03123 (4) obj. 0.264301 iterations 15
Cbc0038I Pass  12: suminf.    0.54463 (3) obj. 0.264301 iterations 13
Cbc0038I Pass  13: suminf.    0.96057 (9) obj. 0.264301 iterations 41
Cbc0038I Pass  14: suminf.    0.70867 (8) obj. 0.264301 iterations 15
Cbc0038I Pass  15: suminf.    1.12285 (4) obj. 0.264301 iterations 11
Cbc0038I Pass  16: suminf.    0.51331 (3) obj. 0.264301 iterations 3
Cbc0038I Pass  17: suminf.    1.01599 (3) obj. 0.264301 iterations 3
Cbc0038I Pass  18: suminf.    1.18728 (16) obj. -8.60751 iterations 38
Cbc0038I Pass  19: suminf.    0.92979 (15) obj. -7.35158 iterations 1
Cbc0038I Pass  20: suminf.    2.45892 (14) obj. 0.264301 iterations 30
Cbc0038I Pass  21: suminf.    2.14701 (13) obj. 0.264301 iterations 6
Cbc0038I Pass  22: suminf.    1.43471 (14) obj. 0.264301 iterations 21
Cbc0038I Pass  23: suminf.    1.13482 (9) obj. 0.264301 iterations 6
Cbc0038I Pass  24: suminf.    1.08558 (8) obj. 0.264301 iterations 12
Cbc0038I Pass  25: suminf.    0.93179 (8) obj. 0.264301 iterations 6
Cbc0038I Pass  26: suminf.    1.30566 (12) obj. 0.264301 iterations 11
Cbc0038I Pass  27: suminf.    1.81742 (15) obj. -2.48958 iterations 26
Cbc0038I Pass  28: suminf.    1.29807 (14) obj. 0.264301 iterations 5
Cbc0038I Pass  29: suminf.    1.24749 (10) obj. 0.264301 iterations 23
Cbc0038I Pass  30: suminf.    1.22589 (12) obj. -2.19665 iterations 26
Cbc0038I Pass  31: suminf.    0.69420 (9) obj. 0.264301 iterations 9
Cbc0038I Pass  32: suminf.    0.83657 (4) obj. 0.264301 iterations 16
Cbc0038I Pass  33: suminf.    0.75649 (4) obj. 0.264301 iterations 4
Cbc0038I Rounding solution of 2.23912 is better than previous of 5.36971

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 111 columns, reduced to 21 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -8.92525
Cbc0038I Pass  33: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass  34: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass  35: suminf.    1.13677 (16) obj. -8.92525 iterations 21
Cbc0038I Pass  36: suminf.    0.73313 (7) obj. -8.92525 iterations 40
Cbc0038I Pass  37: suminf.    0.73313 (7) obj. -8.92525 iterations 1
Cbc0038I Pass  38: suminf.    1.55363 (7) obj. -8.92525 iterations 15
Cbc0038I Pass  39: suminf.    0.92949 (6) obj. -8.92525 iterations 12
Cbc0038I Pass  40: suminf.    0.57986 (6) obj. -8.92525 iterations 7
Cbc0038I Pass  41: suminf.    1.56492 (7) obj. -8.92525 iterations 12
Cbc0038I Pass  42: suminf.    0.92949 (6) obj. -8.92525 iterations 11
Cbc0038I Pass  43: suminf.    1.26311 (11) obj. -8.92525 iterations 18
Cbc0038I Pass  44: suminf.    1.17527 (10) obj. -8.92525 iterations 10
Cbc0038I Pass  45: suminf.    1.27329 (9) obj. -8.92525 iterations 14
Cbc0038I Pass  46: suminf.    0.91803 (8) obj. -9.49102 iterations 2
Cbc0038I Pass  47: suminf.    1.52715 (12) obj. -8.92525 iterations 21
Cbc0038I Pass  48: suminf.    1.49928 (12) obj. -8.92525 iterations 5
Cbc0038I Pass  49: suminf.    1.49062 (10) obj. -8.92525 iterations 16
Cbc0038I Pass  50: suminf.    1.15155 (11) obj. -8.92525 iterations 7
Cbc0038I Pass  51: suminf.    1.57839 (10) obj. -8.92525 iterations 16
Cbc0038I Pass  52: suminf.    1.57839 (10) obj. -8.92525 iterations 0
Cbc0038I Pass  53: suminf.    1.60500 (10) obj. -8.92525 iterations 9
Cbc0038I Pass  54: suminf.    1.54303 (10) obj. -8.92525 iterations 6
Cbc0038I Pass  55: suminf.    1.60105 (10) obj. -8.92525 iterations 8
Cbc0038I Pass  56: suminf.    1.54479 (10) obj. -8.92525 iterations 6
Cbc0038I Pass  57: suminf.    3.89636 (21) obj. -8.92525 iterations 26
Cbc0038I Pass  58: suminf.    2.52019 (17) obj. -8.92525 iterations 4
Cbc0038I Pass  59: suminf.    2.05045 (15) obj. -8.92525 iterations 6
Cbc0038I Pass  60: suminf.    1.17124 (15) obj. -8.92525 iterations 5
Cbc0038I Pass  61: suminf.    0.69562 (13) obj. -8.92525 iterations 8
Cbc0038I Pass  62: suminf.    2.04461 (11) obj. -8.92525 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 111 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 2.23912 to -7.63493 (0.12 seconds)
Cbc0038I Round again with cutoff of -19.9527
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass  63: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass  64: suminf.    1.79380 (29) obj. -19.9527 iterations 28
Cbc0038I Pass  65: suminf.    1.79380 (29) obj. -19.9527 iterations 0
Cbc0038I Pass  66: suminf.    1.50784 (12) obj. -19.9527 iterations 41
Cbc0038I Pass  67: suminf.    1.35908 (13) obj. -19.9527 iterations 1
Cbc0038I Pass  68: suminf.    2.23236 (13) obj. -19.9527 iterations 13
Cbc0038I Pass  69: suminf.    1.41575 (12) obj. -19.9527 iterations 9
Cbc0038I Pass  70: suminf.    1.16203 (14) obj. -19.9527 iterations 4
Cbc0038I Pass  71: suminf.    1.68646 (12) obj. -19.9527 iterations 10
Cbc0038I Pass  72: suminf.    1.53881 (12) obj. -20.248 iterations 3
Cbc0038I Pass  73: suminf.    2.57074 (19) obj. -19.9527 iterations 21
Cbc0038I Pass  74: suminf.    2.31392 (19) obj. -19.9527 iterations 14
Cbc0038I Pass  75: suminf.    2.22468 (16) obj. -19.9527 iterations 15
Cbc0038I Pass  76: suminf.    1.79407 (17) obj. -19.9527 iterations 10
Cbc0038I Pass  77: suminf.    1.82418 (16) obj. -19.9527 iterations 11
Cbc0038I Pass  78: suminf.    2.47447 (19) obj. -19.9527 iterations 15
Cbc0038I Pass  79: suminf.    2.36416 (19) obj. -19.9527 iterations 13
Cbc0038I Pass  80: suminf.    2.22468 (17) obj. -19.9527 iterations 11
Cbc0038I Pass  81: suminf.    1.95362 (18) obj. -19.9527 iterations 11
Cbc0038I Pass  82: suminf.    2.22468 (17) obj. -19.9527 iterations 9
Cbc0038I Pass  83: suminf.    2.95904 (24) obj. -19.9527 iterations 27
Cbc0038I Pass  84: suminf.    2.95904 (24) obj. -19.9527 iterations 4
Cbc0038I Pass  85: suminf.    2.37763 (21) obj. -19.9527 iterations 31
Cbc0038I Pass  86: suminf.    2.30865 (18) obj. -19.9527 iterations 4
Cbc0038I Pass  87: suminf.    2.22468 (17) obj. -19.9527 iterations 12
Cbc0038I Pass  88: suminf.    1.95362 (18) obj. -19.9527 iterations 13
Cbc0038I Pass  89: suminf.    2.22468 (17) obj. -19.9527 iterations 9
Cbc0038I Pass  90: suminf.    2.68416 (21) obj. -19.9527 iterations 26
Cbc0038I Pass  91: suminf.    2.26924 (20) obj. -19.9527 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -7.63493 - took 0.11 seconds
Cbc0012I Integer solution of -7.63493 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 100 rows 111 columns, reduced to 28 rows 30 columns
Cbc0031I 61 added rows had average density of 33.95082
Cbc0013I At root node, 61 cuts changed objective from -45.683478 to -16.996966 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10369 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1128 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 298 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1557 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 624 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 63.6 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 215 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.711 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.63493 best solution, best possible -16.996966 (2.57 seconds)
Cbc0012I Integer solution of -9.78883 found by rounding after 5150 iterations and 1 nodes (2.72 seconds)
Cbc0012I Integer solution of -9.95427 found by rounding after 5152 iterations and 2 nodes (2.73 seconds)
Cbc0012I Integer solution of -10.24534 found by DiveCoefficient after 5152 iterations and 2 nodes (2.73 seconds)
Cbc0012I Integer solution of -11.28879 found by DiveCoefficient after 5160 iterations and 2 nodes (2.75 seconds)
Cbc0012I Integer solution of -11.783 found by DiveCoefficient after 5166 iterations and 3 nodes (2.77 seconds)
Cbc0010I After 13 nodes, 3 on tree, -11.783 best solution, best possible -16.996966 (3.29 seconds)
Cbc0010I After 22 nodes, 3 on tree, -11.783 best solution, best possible -16.699278 (4.07 seconds)
Cbc0010I After 35 nodes, 7 on tree, -11.783 best solution, best possible -16.699278 (4.84 seconds)
Cbc0001I Search completed - best objective -11.783, took 7332 iterations and 42 nodes (4.96 seconds)
Cbc0032I Strong branching done 670 times (13471 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 10, 55 variables fixed on reduced cost
Total time (CPU seconds):       3.59   (Wallclock seconds):       4.97

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 67 (-11) columns and 368 (-85) elements
Clp1000I sum of infeasibilities 0.00014657 - average 1.21132e-06, 13 fixed columns
Coin0506I Presolve 96 (-25) rows, 54 (-13) columns and 293 (-75) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.37184903 - largest nonzero change 0 ( 0%) - largest zero change 2.929533e-05
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Coin0511I After Postsolve, objective 37.344754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Coin0511I After Postsolve, objective 37.344754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.34475417 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 67 columns (66 integer (66 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.37549
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.88316 iterations 33
Cbc0038I Solution found of 2.88316
Cbc0038I Relaxing continuous gives 2.88316
Cbc0038I Rounding solution of -9.77557 is better than previous of 2.88316

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -9.77557 to -10.2453 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.9313
Cbc0038I Pass   2: suminf.    1.60196 (5) obj. -12.9313 iterations 10
Cbc0038I Pass   3: suminf.    1.60196 (5) obj. -12.9313 iterations 0
Cbc0038I Pass   4: suminf.    1.01980 (5) obj. -12.9313 iterations 11
Cbc0038I Pass   5: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass   6: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass   7: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass   8: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass   9: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  10: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  11: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  12: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  13: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  14: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  15: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  16: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  17: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  18: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  19: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  20: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  21: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  22: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  23: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  24: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  25: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  26: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  27: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  28: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  29: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  30: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  31: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -10.2453 - took 0.04 seconds
Cbc0012I Integer solution of -10.24534 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0031I 17 added rows had average density of 52.294118
Cbc0013I At root node, 17 cuts changed objective from -37.103809 to -28.601931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9693 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1621 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 66.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.24534 best solution, best possible -28.601931 (0.80 seconds)
Cbc0004I Integer solution of -11.55095 found after 7687 iterations and 25 nodes (0.96 seconds)
Cbc0038I Full problem 121 rows 67 columns, reduced to 9 rows 8 columns
Cbc0012I Integer solution of -11.783 found by RINS after 7850 iterations and 42 nodes (0.98 seconds)
Cbc0001I Search completed - best objective -11.783, took 8483 iterations and 70 nodes (1.02 seconds)
Cbc0032I Strong branching done 694 times (11531 iterations), fathomed 3 nodes and fixed 34 variables
Cbc0035I Maximum depth 15, 153 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 110 (-43) columns and 1724 (-1580) elements
Clp1000I sum of infeasibilities 1.09132e-07 - average 1.10235e-09, 10 fixed columns
Coin0506I Presolve 90 (-9) rows, 99 (-11) columns and 1415 (-309) elements
Clp0006I 0  Obj 41.469476 Dual inf 2.9006098 (98)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 4.9100725 - largest nonzero change 2.4442749e-05 ( 0.0012247315%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 51.006847
Clp0000I Optimal - objective value 51.006847
Coin0511I After Postsolve, objective 51.006847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.006847
Clp0000I Optimal - objective value 51.006847
Clp0000I Optimal - objective value 51.006847
Clp0000I Optimal - objective value 51.006847
Coin0511I After Postsolve, objective 51.006847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.00684746 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 111 columns (111 integer (111 of which binary)) and 1730 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.512%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 4.85207
Cbc0038I Pass   1: suminf.    2.02646 (32) obj. -34.1934 iterations 23
Cbc0038I Pass   2: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass   3: suminf.    0.43126 (10) obj. -0.884323 iterations 22
Cbc0038I Solution found of 9.64094
Cbc0038I Rounding solution of 5.47443 is better than previous of 9.64094

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 111 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 5.47443 to 5.36971 (0.03 seconds)
Cbc0038I Round again with cutoff of 0.264301
Cbc0038I Pass   4: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass   5: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass   6: suminf.    0.43126 (10) obj. -0.884323 iterations 22
Cbc0038I Pass   7: suminf.    0.38501 (4) obj. 0.264301 iterations 29
Cbc0038I Pass   8: suminf.    0.30599 (4) obj. 0.264301 iterations 23
Cbc0038I Pass   9: suminf.    0.65739 (3) obj. -2.23299 iterations 11
Cbc0038I Pass  10: suminf.    0.65739 (3) obj. -2.23299 iterations 0
Cbc0038I Pass  11: suminf.    1.03123 (4) obj. 0.264301 iterations 15
Cbc0038I Pass  12: suminf.    0.54463 (3) obj. 0.264301 iterations 13
Cbc0038I Pass  13: suminf.    0.96057 (9) obj. 0.264301 iterations 41
Cbc0038I Pass  14: suminf.    0.70867 (8) obj. 0.264301 iterations 15
Cbc0038I Pass  15: suminf.    1.12285 (4) obj. 0.264301 iterations 11
Cbc0038I Pass  16: suminf.    0.51331 (3) obj. 0.264301 iterations 3
Cbc0038I Pass  17: suminf.    1.01599 (3) obj. 0.264301 iterations 3
Cbc0038I Pass  18: suminf.    1.18728 (16) obj. -8.60751 iterations 38
Cbc0038I Pass  19: suminf.    0.92979 (15) obj. -7.35158 iterations 1
Cbc0038I Pass  20: suminf.    2.45892 (14) obj. 0.264301 iterations 30
Cbc0038I Pass  21: suminf.    2.14701 (13) obj. 0.264301 iterations 6
Cbc0038I Pass  22: suminf.    1.43471 (14) obj. 0.264301 iterations 21
Cbc0038I Pass  23: suminf.    1.13482 (9) obj. 0.264301 iterations 6
Cbc0038I Pass  24: suminf.    1.08558 (8) obj. 0.264301 iterations 12
Cbc0038I Pass  25: suminf.    0.93179 (8) obj. 0.264301 iterations 6
Cbc0038I Pass  26: suminf.    1.30566 (12) obj. 0.264301 iterations 11
Cbc0038I Pass  27: suminf.    1.81742 (15) obj. -2.48958 iterations 26
Cbc0038I Pass  28: suminf.    1.29807 (14) obj. 0.264301 iterations 5
Cbc0038I Pass  29: suminf.    1.24749 (10) obj. 0.264301 iterations 23
Cbc0038I Pass  30: suminf.    1.22589 (12) obj. -2.19665 iterations 26
Cbc0038I Pass  31: suminf.    0.69420 (9) obj. 0.264301 iterations 9
Cbc0038I Pass  32: suminf.    0.83657 (4) obj. 0.264301 iterations 16
Cbc0038I Pass  33: suminf.    0.75649 (4) obj. 0.264301 iterations 4
Cbc0038I Rounding solution of 2.23912 is better than previous of 5.36971

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 111 columns, reduced to 21 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -8.92525
Cbc0038I Pass  33: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass  34: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass  35: suminf.    1.13677 (16) obj. -8.92525 iterations 21
Cbc0038I Pass  36: suminf.    0.73313 (7) obj. -8.92525 iterations 40
Cbc0038I Pass  37: suminf.    0.73313 (7) obj. -8.92525 iterations 1
Cbc0038I Pass  38: suminf.    1.55363 (7) obj. -8.92525 iterations 15
Cbc0038I Pass  39: suminf.    0.92949 (6) obj. -8.92525 iterations 12
Cbc0038I Pass  40: suminf.    0.57986 (6) obj. -8.92525 iterations 7
Cbc0038I Pass  41: suminf.    1.56492 (7) obj. -8.92525 iterations 12
Cbc0038I Pass  42: suminf.    0.92949 (6) obj. -8.92525 iterations 11
Cbc0038I Pass  43: suminf.    1.26311 (11) obj. -8.92525 iterations 18
Cbc0038I Pass  44: suminf.    1.17527 (10) obj. -8.92525 iterations 10
Cbc0038I Pass  45: suminf.    1.27329 (9) obj. -8.92525 iterations 14
Cbc0038I Pass  46: suminf.    0.91803 (8) obj. -9.49102 iterations 2
Cbc0038I Pass  47: suminf.    1.52715 (12) obj. -8.92525 iterations 21
Cbc0038I Pass  48: suminf.    1.49928 (12) obj. -8.92525 iterations 5
Cbc0038I Pass  49: suminf.    1.49062 (10) obj. -8.92525 iterations 16
Cbc0038I Pass  50: suminf.    1.15155 (11) obj. -8.92525 iterations 7
Cbc0038I Pass  51: suminf.    1.57839 (10) obj. -8.92525 iterations 16
Cbc0038I Pass  52: suminf.    1.57839 (10) obj. -8.92525 iterations 0
Cbc0038I Pass  53: suminf.    1.60500 (10) obj. -8.92525 iterations 9
Cbc0038I Pass  54: suminf.    1.54303 (10) obj. -8.92525 iterations 6
Cbc0038I Pass  55: suminf.    1.60105 (10) obj. -8.92525 iterations 8
Cbc0038I Pass  56: suminf.    1.54479 (10) obj. -8.92525 iterations 6
Cbc0038I Pass  57: suminf.    3.89636 (21) obj. -8.92525 iterations 26
Cbc0038I Pass  58: suminf.    2.52019 (17) obj. -8.92525 iterations 4
Cbc0038I Pass  59: suminf.    2.05045 (15) obj. -8.92525 iterations 6
Cbc0038I Pass  60: suminf.    1.17124 (15) obj. -8.92525 iterations 5
Cbc0038I Pass  61: suminf.    0.69562 (13) obj. -8.92525 iterations 8
Cbc0038I Pass  62: suminf.    2.04461 (11) obj. -8.92525 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 111 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 2.23912 to -7.63493 (0.13 seconds)
Cbc0038I Round again with cutoff of -19.9527
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass  63: suminf.    2.02646 (32) obj. -34.1934 iterations 0
Cbc0038I Pass  64: suminf.    1.79380 (29) obj. -19.9527 iterations 28
Cbc0038I Pass  65: suminf.    1.79380 (29) obj. -19.9527 iterations 0
Cbc0038I Pass  66: suminf.    1.50784 (12) obj. -19.9527 iterations 41
Cbc0038I Pass  67: suminf.    1.35908 (13) obj. -19.9527 iterations 1
Cbc0038I Pass  68: suminf.    2.23236 (13) obj. -19.9527 iterations 13
Cbc0038I Pass  69: suminf.    1.41575 (12) obj. -19.9527 iterations 9
Cbc0038I Pass  70: suminf.    1.16203 (14) obj. -19.9527 iterations 4
Cbc0038I Pass  71: suminf.    1.68646 (12) obj. -19.9527 iterations 10
Cbc0038I Pass  72: suminf.    1.53881 (12) obj. -20.248 iterations 3
Cbc0038I Pass  73: suminf.    2.57074 (19) obj. -19.9527 iterations 21
Cbc0038I Pass  74: suminf.    2.31392 (19) obj. -19.9527 iterations 14
Cbc0038I Pass  75: suminf.    2.22468 (16) obj. -19.9527 iterations 15
Cbc0038I Pass  76: suminf.    1.79407 (17) obj. -19.9527 iterations 10
Cbc0038I Pass  77: suminf.    1.82418 (16) obj. -19.9527 iterations 11
Cbc0038I Pass  78: suminf.    2.47447 (19) obj. -19.9527 iterations 15
Cbc0038I Pass  79: suminf.    2.36416 (19) obj. -19.9527 iterations 13
Cbc0038I Pass  80: suminf.    2.22468 (17) obj. -19.9527 iterations 11
Cbc0038I Pass  81: suminf.    1.95362 (18) obj. -19.9527 iterations 11
Cbc0038I Pass  82: suminf.    2.22468 (17) obj. -19.9527 iterations 9
Cbc0038I Pass  83: suminf.    2.95904 (24) obj. -19.9527 iterations 27
Cbc0038I Pass  84: suminf.    2.95904 (24) obj. -19.9527 iterations 4
Cbc0038I Pass  85: suminf.    2.37763 (21) obj. -19.9527 iterations 31
Cbc0038I Pass  86: suminf.    2.30865 (18) obj. -19.9527 iterations 4
Cbc0038I Pass  87: suminf.    2.22468 (17) obj. -19.9527 iterations 12
Cbc0038I Pass  88: suminf.    1.95362 (18) obj. -19.9527 iterations 13
Cbc0038I Pass  89: suminf.    2.22468 (17) obj. -19.9527 iterations 9
Cbc0038I Pass  90: suminf.    2.68416 (21) obj. -19.9527 iterations 26
Cbc0038I Pass  91: suminf.    2.26924 (20) obj. -19.9527 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -7.63493 - took 0.14 seconds
Cbc0012I Integer solution of -7.63493 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 100 rows 111 columns, reduced to 28 rows 30 columns
Cbc0031I 61 added rows had average density of 33.95082
Cbc0013I At root node, 61 cuts changed objective from -45.683478 to -16.996966 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10369 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1128 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 298 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1557 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 624 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 63.6 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 215 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.844 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.63493 best solution, best possible -16.996966 (3.30 seconds)
Cbc0012I Integer solution of -9.78883 found by rounding after 5150 iterations and 1 nodes (3.51 seconds)
Cbc0012I Integer solution of -9.95427 found by rounding after 5152 iterations and 2 nodes (3.52 seconds)
Cbc0012I Integer solution of -10.24534 found by DiveCoefficient after 5152 iterations and 2 nodes (3.52 seconds)
Cbc0012I Integer solution of -11.28879 found by DiveCoefficient after 5160 iterations and 2 nodes (3.55 seconds)
Cbc0012I Integer solution of -11.783 found by DiveCoefficient after 5166 iterations and 3 nodes (3.57 seconds)
Cbc0010I After 10 nodes, 3 on tree, -11.783 best solution, best possible -16.996966 (4.05 seconds)
Cbc0010I After 20 nodes, 1 on tree, -11.783 best solution, best possible -16.699278 (4.87 seconds)
Cbc0010I After 28 nodes, 6 on tree, -11.783 best solution, best possible -16.699278 (5.60 seconds)
Cbc0001I Search completed - best objective -11.783, took 7332 iterations and 42 nodes (6.25 seconds)
Cbc0032I Strong branching done 670 times (13471 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 10, 55 variables fixed on reduced cost
Total time (CPU seconds):       4.30   (Wallclock seconds):       6.27

