Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-8) rows, 48 (-2) columns and 270 (-15) elements
Clp1000I sum of infeasibilities 6.92547e-06 - average 7.61041e-08, 1 fixed columns
Coin0506I Presolve 82 (-9) rows, 47 (-1) columns and 250 (-20) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 1636.8492
Clp0000I Optimal - objective value 1636.8492
Coin0511I After Postsolve, objective 1636.8492, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1636.8492
Clp0000I Optimal - objective value 1636.8492
Clp0000I Optimal - objective value 1636.8492
Coin0511I After Postsolve, objective 1636.8492, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1636.849224 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 48 columns (47 integer (47 of which binary)) and 270 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.912%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 10.3059
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 405.244 iterations 42
Cbc0038I Solution found of 405.244
Cbc0038I Relaxing continuous gives 405.244
Cbc0038I Rounding solution of 275.664 is better than previous of 405.244

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 275.664 to -118.525 (0.03 seconds)
Cbc0038I Round again with cutoff of -270.357
Cbc0038I Pass   2: suminf.    1.46086 (6) obj. -270.357 iterations 6
Cbc0038I Pass   3: suminf.    1.14124 (8) obj. -270.357 iterations 5
Cbc0038I Pass   4: suminf.    0.99533 (6) obj. -270.357 iterations 2
Cbc0038I Pass   5: suminf.    3.22172 (11) obj. -270.357 iterations 5
Cbc0038I Pass   6: suminf.    1.14124 (8) obj. -270.357 iterations 5
Cbc0038I Pass   7: suminf.    3.36232 (14) obj. -270.357 iterations 15
Cbc0038I Pass   8: suminf.    1.14006 (8) obj. -270.357 iterations 16
Cbc0038I Pass   9: suminf.    3.61168 (9) obj. -270.357 iterations 6
Cbc0038I Pass  10: suminf.    3.15756 (9) obj. -270.357 iterations 3
Cbc0038I Pass  11: suminf.    1.27679 (7) obj. -270.357 iterations 3
Cbc0038I Pass  12: suminf.    3.04543 (9) obj. -270.357 iterations 20
Cbc0038I Pass  13: suminf.    1.76897 (7) obj. -270.357 iterations 8
Cbc0038I Pass  14: suminf.    1.76897 (7) obj. -270.357 iterations 0
Cbc0038I Pass  15: suminf.    2.06804 (7) obj. -270.357 iterations 6
Cbc0038I Pass  16: suminf.    2.04049 (8) obj. -270.357 iterations 2
Cbc0038I Pass  17: suminf.    2.75544 (8) obj. -270.357 iterations 4
Cbc0038I Pass  18: suminf.    2.54945 (9) obj. -270.357 iterations 2
Cbc0038I Pass  19: suminf.    2.14319 (9) obj. -270.357 iterations 3
Cbc0038I Pass  20: suminf.    1.75537 (9) obj. -270.357 iterations 2
Cbc0038I Pass  21: suminf.    2.01234 (7) obj. -270.357 iterations 10
Cbc0038I Pass  22: suminf.    2.00965 (7) obj. -270.357 iterations 2
Cbc0038I Pass  23: suminf.    2.63425 (8) obj. -270.357 iterations 3
Cbc0038I Pass  24: suminf.    1.60354 (7) obj. -270.357 iterations 4
Cbc0038I Pass  25: suminf.    1.36624 (8) obj. -270.357 iterations 3
Cbc0038I Pass  26: suminf.    2.01234 (7) obj. -270.357 iterations 8
Cbc0038I Pass  27: suminf.    2.00965 (7) obj. -270.357 iterations 2
Cbc0038I Pass  28: suminf.    2.63425 (8) obj. -270.357 iterations 3
Cbc0038I Pass  29: suminf.    1.60354 (7) obj. -270.357 iterations 4
Cbc0038I Pass  30: suminf.    1.36624 (8) obj. -270.357 iterations 3
Cbc0038I Pass  31: suminf.    2.01234 (7) obj. -270.357 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -118.525 - took 0.11 seconds
Cbc0012I Integer solution of -118.5248 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 22 added rows had average density of 34.409091
Cbc0013I At root node, 22 cuts changed objective from -1636.8492 to -961.58707 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10140 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2385 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 154 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -118.5248 best solution, best possible -961.58707 (0.72 seconds)
Cbc0001I Search completed - best objective -118.5248000000001, took 8327 iterations and 18 nodes (0.80 seconds)
Cbc0032I Strong branching done 348 times (7397 iterations), fathomed 0 nodes and fixed 17 variables
Cbc0035I Maximum depth 5, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.81

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-7) rows, 94 (-2) columns and 1351 (-62) elements
Clp1000I sum of infeasibilities 5.92433e-10 - average 6.51025e-12, 33 fixed columns
Coin0506I Presolve 50 (-41) rows, 57 (-37) columns and 415 (-936) elements
Clp0006I 0  Obj 907.57669 Dual inf 67.104686 (57)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 3.5542164 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2246.2464
Clp0000I Optimal - objective value 2246.2464
Coin0511I After Postsolve, objective 2246.2464, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2246.2464 Dual inf 559.74361 (5)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.1867126e-05 ( 0.0019624726%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2246.2464
Clp0000I Optimal - objective value 2246.2464
Clp0000I Optimal - objective value 2246.2464
Coin0511I After Postsolve, objective 2246.2464, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2246.246403 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 94 columns (94 integer (94 of which binary)) and 1353 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.56859
Cbc0038I Pass   1: suminf.    4.60190 (28) obj. -1899.82 iterations 20
Cbc0038I Pass   2: suminf.    4.60190 (28) obj. -1899.82 iterations 1
Cbc0038I Pass   3: suminf.    2.19899 (17) obj. -1075.37 iterations 11
Cbc0038I Pass   4: suminf.    0.54112 (6) obj. -308.634 iterations 11
Cbc0038I Solution found of 7.7252
Cbc0038I Rounding solution of -102.648 is better than previous of 7.7252

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -299.384
Cbc0038I Pass   5: suminf.    4.60190 (28) obj. -1899.82 iterations 0
Cbc0038I Pass   6: suminf.    4.60190 (28) obj. -1899.82 iterations 1
Cbc0038I Pass   7: suminf.    0.41561 (2) obj. -299.384 iterations 29
Cbc0038I Pass   8: suminf.    0.19969 (2) obj. -368.479 iterations 2
Cbc0038I Pass   9: suminf.    0.27503 (2) obj. -299.384 iterations 8
Cbc0038I Pass  10: suminf.    0.27503 (2) obj. -299.384 iterations 0
Cbc0038I Pass  11: suminf.    0.58394 (2) obj. -299.384 iterations 2
Cbc0038I Pass  12: suminf.    3.29287 (19) obj. -299.384 iterations 33
Cbc0038I Pass  13: suminf.    3.29287 (19) obj. -299.384 iterations 2
Cbc0038I Pass  14: suminf.    1.10372 (8) obj. -299.384 iterations 16
Cbc0038I Pass  15: suminf.    0.98278 (8) obj. -334.216 iterations 1
Cbc0038I Pass  16: suminf.    1.20025 (7) obj. -299.384 iterations 16
Cbc0038I Pass  17: suminf.    1.20025 (7) obj. -299.384 iterations 7
Cbc0038I Pass  18: suminf.    1.43824 (7) obj. -299.384 iterations 8
Cbc0038I Pass  19: suminf.    1.43824 (7) obj. -299.384 iterations 7
Cbc0038I Pass  20: suminf.    1.20025 (7) obj. -299.384 iterations 8
Cbc0038I Pass  21: suminf.    4.68474 (21) obj. -299.384 iterations 22
Cbc0038I Pass  22: suminf.    2.76838 (16) obj. -299.384 iterations 9
Cbc0038I Pass  23: suminf.    2.76838 (16) obj. -299.384 iterations 1
Cbc0038I Pass  24: suminf.    1.95298 (8) obj. -299.384 iterations 16
Cbc0038I Pass  25: suminf.    1.80496 (8) obj. -322.623 iterations 8
Cbc0038I Pass  26: suminf.    1.95298 (8) obj. -299.384 iterations 6
Cbc0038I Pass  27: suminf.    2.52511 (17) obj. -299.384 iterations 23
Cbc0038I Pass  28: suminf.    2.50343 (17) obj. -299.384 iterations 5
Cbc0038I Pass  29: suminf.    1.45771 (6) obj. -299.384 iterations 8
Cbc0038I Pass  30: suminf.    1.45771 (6) obj. -299.384 iterations 0
Cbc0038I Pass  31: suminf.    1.48285 (6) obj. -299.384 iterations 8
Cbc0038I Pass  32: suminf.    1.48285 (6) obj. -299.384 iterations 0
Cbc0038I Pass  33: suminf.    1.45771 (6) obj. -299.384 iterations 4
Cbc0038I Pass  34: suminf.    3.39246 (17) obj. -299.384 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 94 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 7.7252 to -112.261 (0.03 seconds)
Cbc0038I Round again with cutoff of -653.51
Cbc0038I Pass  34: suminf.    4.60190 (28) obj. -1899.82 iterations 0
Cbc0038I Pass  35: suminf.    4.60190 (28) obj. -1899.82 iterations 1
Cbc0038I Pass  36: suminf.    2.37756 (18) obj. -1173.12 iterations 10
Cbc0038I Pass  37: suminf.    1.20956 (9) obj. -653.51 iterations 10
Cbc0038I Pass  38: suminf.    0.62368 (5) obj. -653.51 iterations 20
Cbc0038I Pass  39: suminf.    0.62368 (5) obj. -653.51 iterations 1
Cbc0038I Pass  40: suminf.    0.85352 (5) obj. -653.51 iterations 1
Cbc0038I Pass  41: suminf.    0.85352 (5) obj. -653.51 iterations 0
Cbc0038I Pass  42: suminf.    0.62368 (5) obj. -653.51 iterations 1
Cbc0038I Pass  43: suminf.    3.35045 (16) obj. -653.51 iterations 31
Cbc0038I Pass  44: suminf.    3.25993 (16) obj. -668.355 iterations 4
Cbc0038I Pass  45: suminf.    3.01571 (11) obj. -653.51 iterations 17
Cbc0038I Pass  46: suminf.    3.01571 (11) obj. -653.51 iterations 3
Cbc0038I Pass  47: suminf.    1.92830 (9) obj. -653.51 iterations 5
Cbc0038I Pass  48: suminf.    1.92830 (9) obj. -653.51 iterations 2
Cbc0038I Pass  49: suminf.    2.10785 (9) obj. -653.51 iterations 1
Cbc0038I Pass  50: suminf.    2.10785 (9) obj. -653.51 iterations 0
Cbc0038I Pass  51: suminf.    1.92830 (9) obj. -653.51 iterations 2
Cbc0038I Pass  52: suminf.    2.51612 (10) obj. -653.51 iterations 16
Cbc0038I Pass  53: suminf.    2.51612 (10) obj. -653.51 iterations 5
Cbc0038I Pass  54: suminf.    1.62153 (7) obj. -653.51 iterations 12
Cbc0038I Pass  55: suminf.    1.62153 (7) obj. -653.51 iterations 0
Cbc0038I Pass  56: suminf.    1.39536 (7) obj. -653.51 iterations 9
Cbc0038I Pass  57: suminf.    1.39536 (7) obj. -653.51 iterations 1
Cbc0038I Pass  58: suminf.    1.62153 (7) obj. -653.51 iterations 4
Cbc0038I Pass  59: suminf.    1.80773 (9) obj. -653.51 iterations 32
Cbc0038I Pass  60: suminf.    1.80773 (9) obj. -653.51 iterations 7
Cbc0038I Pass  61: suminf.    0.88052 (5) obj. -653.51 iterations 8
Cbc0038I Pass  62: suminf.    0.88052 (5) obj. -653.51 iterations 1
Cbc0038I Pass  63: suminf.    1.02011 (5) obj. -653.51 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -112.261 - took 0.03 seconds
Cbc0012I Integer solution of -112.2608 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 57 added rows had average density of 21.666667
Cbc0013I At root node, 57 cuts changed objective from -2070.0124 to -233.84781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10555 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1624 row cuts average 83.5 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 986 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 132 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.726 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -112.2608 best solution, best possible -233.84781 (2.38 seconds)
Cbc0004I Integer solution of -118.5248 found after 3968 iterations and 4 nodes (2.81 seconds)
Cbc0001I Search completed - best objective -118.5248000000001, took 4049 iterations and 6 nodes (2.81 seconds)
Cbc0032I Strong branching done 202 times (6300 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.93   (Wallclock seconds):       2.83

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-8) rows, 48 (-2) columns and 270 (-15) elements
Clp1000I sum of infeasibilities 6.92547e-06 - average 7.61041e-08, 1 fixed columns
Coin0506I Presolve 82 (-9) rows, 47 (-1) columns and 250 (-20) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 1636.8492
Clp0000I Optimal - objective value 1636.8492
Coin0511I After Postsolve, objective 1636.8492, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1636.8492
Clp0000I Optimal - objective value 1636.8492
Clp0000I Optimal - objective value 1636.8492
Coin0511I After Postsolve, objective 1636.8492, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1636.849224 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 48 columns (47 integer (47 of which binary)) and 270 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.912%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 10.3059
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 405.244 iterations 42
Cbc0038I Solution found of 405.244
Cbc0038I Relaxing continuous gives 405.244
Cbc0038I Rounding solution of 275.664 is better than previous of 405.244

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 275.664 to -118.525 (0.04 seconds)
Cbc0038I Round again with cutoff of -270.357
Cbc0038I Pass   2: suminf.    1.46086 (6) obj. -270.357 iterations 6
Cbc0038I Pass   3: suminf.    1.14124 (8) obj. -270.357 iterations 5
Cbc0038I Pass   4: suminf.    0.99533 (6) obj. -270.357 iterations 2
Cbc0038I Pass   5: suminf.    3.22172 (11) obj. -270.357 iterations 5
Cbc0038I Pass   6: suminf.    1.14124 (8) obj. -270.357 iterations 5
Cbc0038I Pass   7: suminf.    3.36232 (14) obj. -270.357 iterations 15
Cbc0038I Pass   8: suminf.    1.14006 (8) obj. -270.357 iterations 16
Cbc0038I Pass   9: suminf.    3.61168 (9) obj. -270.357 iterations 6
Cbc0038I Pass  10: suminf.    3.15756 (9) obj. -270.357 iterations 3
Cbc0038I Pass  11: suminf.    1.27679 (7) obj. -270.357 iterations 3
Cbc0038I Pass  12: suminf.    3.04543 (9) obj. -270.357 iterations 20
Cbc0038I Pass  13: suminf.    1.76897 (7) obj. -270.357 iterations 8
Cbc0038I Pass  14: suminf.    1.76897 (7) obj. -270.357 iterations 0
Cbc0038I Pass  15: suminf.    2.06804 (7) obj. -270.357 iterations 6
Cbc0038I Pass  16: suminf.    2.04049 (8) obj. -270.357 iterations 2
Cbc0038I Pass  17: suminf.    2.75544 (8) obj. -270.357 iterations 4
Cbc0038I Pass  18: suminf.    2.54945 (9) obj. -270.357 iterations 2
Cbc0038I Pass  19: suminf.    2.14319 (9) obj. -270.357 iterations 3
Cbc0038I Pass  20: suminf.    1.75537 (9) obj. -270.357 iterations 2
Cbc0038I Pass  21: suminf.    2.01234 (7) obj. -270.357 iterations 10
Cbc0038I Pass  22: suminf.    2.00965 (7) obj. -270.357 iterations 2
Cbc0038I Pass  23: suminf.    2.63425 (8) obj. -270.357 iterations 3
Cbc0038I Pass  24: suminf.    1.60354 (7) obj. -270.357 iterations 4
Cbc0038I Pass  25: suminf.    1.36624 (8) obj. -270.357 iterations 3
Cbc0038I Pass  26: suminf.    2.01234 (7) obj. -270.357 iterations 8
Cbc0038I Pass  27: suminf.    2.00965 (7) obj. -270.357 iterations 2
Cbc0038I Pass  28: suminf.    2.63425 (8) obj. -270.357 iterations 3
Cbc0038I Pass  29: suminf.    1.60354 (7) obj. -270.357 iterations 4
Cbc0038I Pass  30: suminf.    1.36624 (8) obj. -270.357 iterations 3
Cbc0038I Pass  31: suminf.    2.01234 (7) obj. -270.357 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -118.525 - took 0.08 seconds
Cbc0012I Integer solution of -118.5248 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 22 added rows had average density of 34.409091
Cbc0013I At root node, 22 cuts changed objective from -1636.8492 to -961.58707 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10140 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2385 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 154 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -118.5248 best solution, best possible -961.58707 (0.69 seconds)
Cbc0001I Search completed - best objective -118.5248000000001, took 8327 iterations and 18 nodes (0.77 seconds)
Cbc0032I Strong branching done 348 times (7397 iterations), fathomed 0 nodes and fixed 17 variables
Cbc0035I Maximum depth 5, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-8) rows, 94 (-3) columns and 1351 (-63) elements
Clp1000I sum of infeasibilities 5.92433e-10 - average 6.51025e-12, 33 fixed columns
Coin0506I Presolve 50 (-41) rows, 57 (-37) columns and 415 (-936) elements
Clp0006I 0  Obj 907.57669 Dual inf 67.104686 (57)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 3.5542164 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2246.2464
Clp0000I Optimal - objective value 2246.2464
Coin0511I After Postsolve, objective 2246.2464, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2246.2464 Dual inf 559.74361 (5)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.1867126e-05 ( 0.0019624726%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2246.2464
Clp0000I Optimal - objective value 2246.2464
Clp0000I Optimal - objective value 2246.2464
Coin0511I After Postsolve, objective 2246.2464, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2246.246403 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 94 columns (94 integer (94 of which binary)) and 1353 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.56859
Cbc0038I Pass   1: suminf.    4.60190 (28) obj. -1899.82 iterations 20
Cbc0038I Pass   2: suminf.    4.60190 (28) obj. -1899.82 iterations 1
Cbc0038I Pass   3: suminf.    2.19899 (17) obj. -1075.37 iterations 11
Cbc0038I Pass   4: suminf.    0.54112 (6) obj. -308.634 iterations 11
Cbc0038I Solution found of 7.7252
Cbc0038I Rounding solution of -102.648 is better than previous of 7.7252

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -299.384
Cbc0038I Pass   5: suminf.    4.60190 (28) obj. -1899.82 iterations 0
Cbc0038I Pass   6: suminf.    4.60190 (28) obj. -1899.82 iterations 1
Cbc0038I Pass   7: suminf.    0.41561 (2) obj. -299.384 iterations 29
Cbc0038I Pass   8: suminf.    0.19969 (2) obj. -368.479 iterations 2
Cbc0038I Pass   9: suminf.    0.27503 (2) obj. -299.384 iterations 8
Cbc0038I Pass  10: suminf.    0.27503 (2) obj. -299.384 iterations 0
Cbc0038I Pass  11: suminf.    0.58394 (2) obj. -299.384 iterations 2
Cbc0038I Pass  12: suminf.    3.29287 (19) obj. -299.384 iterations 33
Cbc0038I Pass  13: suminf.    3.29287 (19) obj. -299.384 iterations 2
Cbc0038I Pass  14: suminf.    1.10372 (8) obj. -299.384 iterations 16
Cbc0038I Pass  15: suminf.    0.98278 (8) obj. -334.216 iterations 1
Cbc0038I Pass  16: suminf.    1.20025 (7) obj. -299.384 iterations 16
Cbc0038I Pass  17: suminf.    1.20025 (7) obj. -299.384 iterations 7
Cbc0038I Pass  18: suminf.    1.43824 (7) obj. -299.384 iterations 8
Cbc0038I Pass  19: suminf.    1.43824 (7) obj. -299.384 iterations 7
Cbc0038I Pass  20: suminf.    1.20025 (7) obj. -299.384 iterations 8
Cbc0038I Pass  21: suminf.    4.68474 (21) obj. -299.384 iterations 22
Cbc0038I Pass  22: suminf.    2.76838 (16) obj. -299.384 iterations 9
Cbc0038I Pass  23: suminf.    2.76838 (16) obj. -299.384 iterations 1
Cbc0038I Pass  24: suminf.    1.95298 (8) obj. -299.384 iterations 16
Cbc0038I Pass  25: suminf.    1.80496 (8) obj. -322.623 iterations 8
Cbc0038I Pass  26: suminf.    1.95298 (8) obj. -299.384 iterations 6
Cbc0038I Pass  27: suminf.    2.52511 (17) obj. -299.384 iterations 23
Cbc0038I Pass  28: suminf.    2.50343 (17) obj. -299.384 iterations 5
Cbc0038I Pass  29: suminf.    1.45771 (6) obj. -299.384 iterations 8
Cbc0038I Pass  30: suminf.    1.45771 (6) obj. -299.384 iterations 0
Cbc0038I Pass  31: suminf.    1.48285 (6) obj. -299.384 iterations 8
Cbc0038I Pass  32: suminf.    1.48285 (6) obj. -299.384 iterations 0
Cbc0038I Pass  33: suminf.    1.45771 (6) obj. -299.384 iterations 4
Cbc0038I Pass  34: suminf.    3.39246 (17) obj. -299.384 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 94 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 7.7252 to -112.261 (0.03 seconds)
Cbc0038I Round again with cutoff of -653.51
Cbc0038I Pass  34: suminf.    4.60190 (28) obj. -1899.82 iterations 0
Cbc0038I Pass  35: suminf.    4.60190 (28) obj. -1899.82 iterations 1
Cbc0038I Pass  36: suminf.    2.37756 (18) obj. -1173.12 iterations 10
Cbc0038I Pass  37: suminf.    1.20956 (9) obj. -653.51 iterations 10
Cbc0038I Pass  38: suminf.    0.62368 (5) obj. -653.51 iterations 20
Cbc0038I Pass  39: suminf.    0.62368 (5) obj. -653.51 iterations 1
Cbc0038I Pass  40: suminf.    0.85352 (5) obj. -653.51 iterations 1
Cbc0038I Pass  41: suminf.    0.85352 (5) obj. -653.51 iterations 0
Cbc0038I Pass  42: suminf.    0.62368 (5) obj. -653.51 iterations 1
Cbc0038I Pass  43: suminf.    3.35045 (16) obj. -653.51 iterations 31
Cbc0038I Pass  44: suminf.    3.25993 (16) obj. -668.355 iterations 4
Cbc0038I Pass  45: suminf.    3.01571 (11) obj. -653.51 iterations 17
Cbc0038I Pass  46: suminf.    3.01571 (11) obj. -653.51 iterations 3
Cbc0038I Pass  47: suminf.    1.92830 (9) obj. -653.51 iterations 5
Cbc0038I Pass  48: suminf.    1.92830 (9) obj. -653.51 iterations 2
Cbc0038I Pass  49: suminf.    2.10785 (9) obj. -653.51 iterations 1
Cbc0038I Pass  50: suminf.    2.10785 (9) obj. -653.51 iterations 0
Cbc0038I Pass  51: suminf.    1.92830 (9) obj. -653.51 iterations 2
Cbc0038I Pass  52: suminf.    2.51612 (10) obj. -653.51 iterations 16
Cbc0038I Pass  53: suminf.    2.51612 (10) obj. -653.51 iterations 5
Cbc0038I Pass  54: suminf.    1.62153 (7) obj. -653.51 iterations 12
Cbc0038I Pass  55: suminf.    1.62153 (7) obj. -653.51 iterations 0
Cbc0038I Pass  56: suminf.    1.39536 (7) obj. -653.51 iterations 9
Cbc0038I Pass  57: suminf.    1.39536 (7) obj. -653.51 iterations 1
Cbc0038I Pass  58: suminf.    1.62153 (7) obj. -653.51 iterations 4
Cbc0038I Pass  59: suminf.    1.80773 (9) obj. -653.51 iterations 32
Cbc0038I Pass  60: suminf.    1.80773 (9) obj. -653.51 iterations 7
Cbc0038I Pass  61: suminf.    0.88052 (5) obj. -653.51 iterations 8
Cbc0038I Pass  62: suminf.    0.88052 (5) obj. -653.51 iterations 1
Cbc0038I Pass  63: suminf.    1.02011 (5) obj. -653.51 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -112.261 - took 0.03 seconds
Cbc0012I Integer solution of -112.2608 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 57 added rows had average density of 21.666667
Cbc0013I At root node, 57 cuts changed objective from -2070.0124 to -233.84781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10555 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1624 row cuts average 83.5 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 986 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 132 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.698 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -112.2608 best solution, best possible -233.84781 (2.28 seconds)
Cbc0004I Integer solution of -118.5248 found after 3968 iterations and 4 nodes (2.70 seconds)
Cbc0001I Search completed - best objective -118.5248000000001, took 4049 iterations and 6 nodes (2.70 seconds)
Cbc0032I Strong branching done 202 times (6300 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.87   (Wallclock seconds):       2.71

