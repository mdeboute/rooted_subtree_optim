Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 21 (-3) columns and 105 (-24) elements
Clp1000I sum of infeasibilities 4.71459e-06 - average 1.34703e-07, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 20 (-1) columns and 99 (-6) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 98.94225
Clp0000I Optimal - objective value 98.94225
Coin0511I After Postsolve, objective 98.94225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.94225
Clp0000I Optimal - objective value 98.94225
Clp0000I Optimal - objective value 98.94225
Coin0511I After Postsolve, objective 98.94225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.94225012 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.097%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.7411
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -46.925 iterations 12
Cbc0038I Solution found of -46.925
Cbc0038I Relaxing continuous gives -46.925
Cbc0038I Rounding solution of -63.425 is better than previous of -46.925

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -66.8454
Cbc0038I Pass   2: suminf.    0.40955 (2) obj. -66.8454 iterations 2
Cbc0038I Pass   3: suminf.    0.65146 (2) obj. -66.8454 iterations 1
Cbc0038I Pass   4: suminf.    0.40955 (2) obj. -66.8454 iterations 1
Cbc0038I Pass   5: suminf.    1.38176 (5) obj. -66.8454 iterations 7
Cbc0038I Pass   6: suminf.    0.68403 (3) obj. -66.8454 iterations 3
Cbc0038I Pass   7: suminf.    0.40031 (2) obj. -66.8454 iterations 3
Cbc0038I Pass   8: suminf.    0.40031 (2) obj. -66.8454 iterations 0
Cbc0038I Pass   9: suminf.    0.40206 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  10: suminf.    1.27180 (6) obj. -66.8454 iterations 6
Cbc0038I Pass  11: suminf.    0.66207 (4) obj. -66.8454 iterations 2
Cbc0038I Pass  12: suminf.    0.40955 (2) obj. -66.8454 iterations 6
Cbc0038I Pass  13: suminf.    0.40955 (2) obj. -66.8454 iterations 0
Cbc0038I Pass  14: suminf.    0.65146 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  15: suminf.    0.40955 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  16: suminf.    0.89436 (3) obj. -66.8454 iterations 3
Cbc0038I Pass  17: suminf.    1.10844 (4) obj. -66.8454 iterations 9
Cbc0038I Pass  18: suminf.    1.08707 (5) obj. -66.8454 iterations 5
Cbc0038I Pass  19: suminf.    2.12134 (7) obj. -66.8454 iterations 11
Cbc0038I Pass  20: suminf.    2.12134 (7) obj. -66.8454 iterations 0
Cbc0038I Pass  21: suminf.    0.40955 (2) obj. -66.8454 iterations 13
Cbc0038I Pass  22: suminf.    0.40955 (2) obj. -66.8454 iterations 0
Cbc0038I Pass  23: suminf.    0.65146 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  24: suminf.    0.40955 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  25: suminf.    0.59774 (4) obj. -66.8454 iterations 5
Cbc0038I Pass  26: suminf.    0.40031 (2) obj. -66.8454 iterations 4
Cbc0038I Pass  27: suminf.    0.40206 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  28: suminf.    1.29560 (5) obj. -66.8454 iterations 10
Cbc0038I Pass  29: suminf.    0.42929 (3) obj. -66.8454 iterations 5
Cbc0038I Pass  30: suminf.    0.42929 (3) obj. -66.8454 iterations 1
Cbc0038I Pass  31: suminf.    0.42929 (3) obj. -66.8454 iterations 1
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -73.002
Cbc0038I Pass  31: suminf.    0.55003 (2) obj. -73.002 iterations 0
Cbc0038I Pass  32: suminf.    0.67140 (2) obj. -73.002 iterations 1
Cbc0038I Pass  33: suminf.    2.99119 (10) obj. -73.002 iterations 8
Cbc0038I Pass  34: suminf.    2.40018 (9) obj. -73.002 iterations 2
Cbc0038I Pass  35: suminf.    0.56781 (3) obj. -73.002 iterations 11
Cbc0038I Pass  36: suminf.    0.54540 (3) obj. -73.002 iterations 2
Cbc0038I Pass  37: suminf.    0.47021 (2) obj. -73.002 iterations 1
Cbc0038I Pass  38: suminf.    1.00006 (3) obj. -73.002 iterations 2
Cbc0038I Pass  39: suminf.    1.00006 (3) obj. -73.002 iterations 0
Cbc0038I Pass  40: suminf.    0.54540 (3) obj. -73.002 iterations 2
Cbc0038I Pass  41: suminf.    1.16667 (4) obj. -73.002 iterations 4
Cbc0038I Pass  42: suminf.    0.88039 (2) obj. -73.002 iterations 2
Cbc0038I Pass  43: suminf.    0.87215 (2) obj. -73.002 iterations 2
Cbc0038I Pass  44: suminf.    0.20633 (2) obj. -73.002 iterations 1
Cbc0038I Pass  45: suminf.    0.55003 (2) obj. -73.002 iterations 3
Cbc0038I Pass  46: suminf.    0.55003 (2) obj. -73.002 iterations 0
Cbc0038I Pass  47: suminf.    0.67140 (2) obj. -73.002 iterations 1
Cbc0038I Pass  48: suminf.    3.85103 (10) obj. -73.002 iterations 9
Cbc0038I Pass  49: suminf.    1.42760 (5) obj. -73.002 iterations 10
Cbc0038I Pass  50: suminf.    0.55003 (2) obj. -73.002 iterations 5
Cbc0038I Pass  51: suminf.    1.95832 (5) obj. -73.002 iterations 12
Cbc0038I Pass  52: suminf.    1.95832 (5) obj. -73.002 iterations 1
Cbc0038I Pass  53: suminf.    0.76844 (3) obj. -73.002 iterations 7
Cbc0038I Pass  54: suminf.    0.55003 (2) obj. -73.002 iterations 1
Cbc0038I Pass  55: suminf.    0.67140 (2) obj. -73.002 iterations 1
Cbc0038I Pass  56: suminf.    1.51310 (5) obj. -73.002 iterations 6
Cbc0038I Pass  57: suminf.    1.30148 (6) obj. -73.002 iterations 2
Cbc0038I Pass  58: suminf.    0.91049 (5) obj. -73.002 iterations 7
Cbc0038I Pass  59: suminf.    0.91049 (5) obj. -73.002 iterations 0
Cbc0038I Pass  60: suminf.    1.00006 (3) obj. -73.002 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -63.425 - took 0.05 seconds
Cbc0012I Integer solution of -63.425 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 25 rows 15 columns
Cbc0031I 6 added rows had average density of 21
Cbc0013I At root node, 6 cuts changed objective from -97.628344 to -73.783808 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 721 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 562 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 102 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -63.42500000000001, took 1501 iterations and 4 nodes (0.13 seconds)
Cbc0032I Strong branching done 34 times (206 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-13) rows, 38 (-6) columns and 273 (-87) elements
Clp1000I sum of infeasibilities 1.70707e-08 - average 5.17293e-10, 20 fixed columns
Coin0506I Presolve 13 (-20) rows, 18 (-20) columns and 57 (-216) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 50.638936
Clp0000I Optimal - objective value 50.638936
Coin0511I After Postsolve, objective 50.638936, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7408785 - largest nonzero change 0 ( 0%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 115.36273
Clp0000I Optimal - objective value 115.36273
Clp0000I Optimal - objective value 115.36273
Coin0511I After Postsolve, objective 115.36273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.3627255 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 39 columns (39 integer (39 of which binary)) and 285 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.114%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.92571
Cbc0038I Pass   1: suminf.    0.56420 (5) obj. -19.1195 iterations 11
Cbc0038I Pass   2: suminf.    0.56420 (5) obj. -19.1195 iterations 0
Cbc0038I Solution found of -1.7297
Cbc0038I Rounding solution of -38.8016 is better than previous of -1.7297

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.9932
Cbc0038I Pass   3: suminf.    0.99665 (6) obj. -43.9932 iterations 1
Cbc0038I Pass   4: suminf.    0.56420 (5) obj. -62.9461 iterations 1
Cbc0038I Solution found of -45.5563
Cbc0038I Rounding solution of -53.5563 is better than previous of -45.5563

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -60.9885
Cbc0038I Pass   5: suminf.    0.60887 (6) obj. -60.9885 iterations 0
Cbc0038I Pass   6: suminf.    0.56420 (5) obj. -62.9461 iterations 1
Cbc0038I Pass   7: suminf.    0.59643 (7) obj. -60.9885 iterations 8
Cbc0038I Pass   8: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass   9: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  10: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  11: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  12: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  13: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  14: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  15: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  16: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  17: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  18: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  19: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  20: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  21: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  22: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  23: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  24: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  25: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  26: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  27: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  28: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  29: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  30: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  31: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  32: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  33: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  34: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -53.5563 - took 0.01 seconds
Cbc0012I Integer solution of -53.5563 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 39 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -63.425 found by DiveCoefficient after 130 iterations and 0 nodes (0.21 seconds)
Cbc0031I 18 added rows had average density of 7.1666667
Cbc0013I At root node, 18 cuts changed objective from -90.717022 to -63.425 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 219 row cuts average 4.2 elements, 5 column cuts (5 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0001I Search completed - best objective -63.42500000000001, took 130 iterations and 0 nodes (0.21 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.22

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 21 (-3) columns and 105 (-24) elements
Clp1000I sum of infeasibilities 4.71459e-06 - average 1.34703e-07, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 20 (-1) columns and 99 (-6) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 98.94225
Clp0000I Optimal - objective value 98.94225
Coin0511I After Postsolve, objective 98.94225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.94225
Clp0000I Optimal - objective value 98.94225
Clp0000I Optimal - objective value 98.94225
Coin0511I After Postsolve, objective 98.94225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.94225012 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.097%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.7411
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -46.925 iterations 12
Cbc0038I Solution found of -46.925
Cbc0038I Relaxing continuous gives -46.925
Cbc0038I Rounding solution of -63.425 is better than previous of -46.925

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -66.8454
Cbc0038I Pass   2: suminf.    0.40955 (2) obj. -66.8454 iterations 2
Cbc0038I Pass   3: suminf.    0.65146 (2) obj. -66.8454 iterations 1
Cbc0038I Pass   4: suminf.    0.40955 (2) obj. -66.8454 iterations 1
Cbc0038I Pass   5: suminf.    1.38176 (5) obj. -66.8454 iterations 7
Cbc0038I Pass   6: suminf.    0.68403 (3) obj. -66.8454 iterations 3
Cbc0038I Pass   7: suminf.    0.40031 (2) obj. -66.8454 iterations 3
Cbc0038I Pass   8: suminf.    0.40031 (2) obj. -66.8454 iterations 0
Cbc0038I Pass   9: suminf.    0.40206 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  10: suminf.    1.27180 (6) obj. -66.8454 iterations 6
Cbc0038I Pass  11: suminf.    0.66207 (4) obj. -66.8454 iterations 2
Cbc0038I Pass  12: suminf.    0.40955 (2) obj. -66.8454 iterations 6
Cbc0038I Pass  13: suminf.    0.40955 (2) obj. -66.8454 iterations 0
Cbc0038I Pass  14: suminf.    0.65146 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  15: suminf.    0.40955 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  16: suminf.    0.89436 (3) obj. -66.8454 iterations 3
Cbc0038I Pass  17: suminf.    1.10844 (4) obj. -66.8454 iterations 9
Cbc0038I Pass  18: suminf.    1.08707 (5) obj. -66.8454 iterations 5
Cbc0038I Pass  19: suminf.    2.12134 (7) obj. -66.8454 iterations 11
Cbc0038I Pass  20: suminf.    2.12134 (7) obj. -66.8454 iterations 0
Cbc0038I Pass  21: suminf.    0.40955 (2) obj. -66.8454 iterations 13
Cbc0038I Pass  22: suminf.    0.40955 (2) obj. -66.8454 iterations 0
Cbc0038I Pass  23: suminf.    0.65146 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  24: suminf.    0.40955 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  25: suminf.    0.59774 (4) obj. -66.8454 iterations 5
Cbc0038I Pass  26: suminf.    0.40031 (2) obj. -66.8454 iterations 4
Cbc0038I Pass  27: suminf.    0.40206 (2) obj. -66.8454 iterations 1
Cbc0038I Pass  28: suminf.    1.29560 (5) obj. -66.8454 iterations 10
Cbc0038I Pass  29: suminf.    0.42929 (3) obj. -66.8454 iterations 5
Cbc0038I Pass  30: suminf.    0.42929 (3) obj. -66.8454 iterations 1
Cbc0038I Pass  31: suminf.    0.42929 (3) obj. -66.8454 iterations 1
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -73.002
Cbc0038I Pass  31: suminf.    0.55003 (2) obj. -73.002 iterations 0
Cbc0038I Pass  32: suminf.    0.67140 (2) obj. -73.002 iterations 1
Cbc0038I Pass  33: suminf.    2.99119 (10) obj. -73.002 iterations 8
Cbc0038I Pass  34: suminf.    2.40018 (9) obj. -73.002 iterations 2
Cbc0038I Pass  35: suminf.    0.56781 (3) obj. -73.002 iterations 11
Cbc0038I Pass  36: suminf.    0.54540 (3) obj. -73.002 iterations 2
Cbc0038I Pass  37: suminf.    0.47021 (2) obj. -73.002 iterations 1
Cbc0038I Pass  38: suminf.    1.00006 (3) obj. -73.002 iterations 2
Cbc0038I Pass  39: suminf.    1.00006 (3) obj. -73.002 iterations 0
Cbc0038I Pass  40: suminf.    0.54540 (3) obj. -73.002 iterations 2
Cbc0038I Pass  41: suminf.    1.16667 (4) obj. -73.002 iterations 4
Cbc0038I Pass  42: suminf.    0.88039 (2) obj. -73.002 iterations 2
Cbc0038I Pass  43: suminf.    0.87215 (2) obj. -73.002 iterations 2
Cbc0038I Pass  44: suminf.    0.20633 (2) obj. -73.002 iterations 1
Cbc0038I Pass  45: suminf.    0.55003 (2) obj. -73.002 iterations 3
Cbc0038I Pass  46: suminf.    0.55003 (2) obj. -73.002 iterations 0
Cbc0038I Pass  47: suminf.    0.67140 (2) obj. -73.002 iterations 1
Cbc0038I Pass  48: suminf.    3.85103 (10) obj. -73.002 iterations 9
Cbc0038I Pass  49: suminf.    1.42760 (5) obj. -73.002 iterations 10
Cbc0038I Pass  50: suminf.    0.55003 (2) obj. -73.002 iterations 5
Cbc0038I Pass  51: suminf.    1.95832 (5) obj. -73.002 iterations 12
Cbc0038I Pass  52: suminf.    1.95832 (5) obj. -73.002 iterations 1
Cbc0038I Pass  53: suminf.    0.76844 (3) obj. -73.002 iterations 7
Cbc0038I Pass  54: suminf.    0.55003 (2) obj. -73.002 iterations 1
Cbc0038I Pass  55: suminf.    0.67140 (2) obj. -73.002 iterations 1
Cbc0038I Pass  56: suminf.    1.51310 (5) obj. -73.002 iterations 6
Cbc0038I Pass  57: suminf.    1.30148 (6) obj. -73.002 iterations 2
Cbc0038I Pass  58: suminf.    0.91049 (5) obj. -73.002 iterations 7
Cbc0038I Pass  59: suminf.    0.91049 (5) obj. -73.002 iterations 0
Cbc0038I Pass  60: suminf.    1.00006 (3) obj. -73.002 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -63.425 - took 0.02 seconds
Cbc0012I Integer solution of -63.425 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 25 rows 15 columns
Cbc0031I 6 added rows had average density of 21
Cbc0013I At root node, 6 cuts changed objective from -97.628344 to -73.783808 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 721 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 562 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 102 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -63.42500000000001, took 1501 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 34 times (206 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 38 (-7) columns and 273 (-88) elements
Clp1000I sum of infeasibilities 1.70707e-08 - average 5.17293e-10, 20 fixed columns
Coin0506I Presolve 13 (-20) rows, 18 (-20) columns and 57 (-216) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 50.638936
Clp0000I Optimal - objective value 50.638936
Coin0511I After Postsolve, objective 50.638936, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7408785 - largest nonzero change 0 ( 0%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 115.36273
Clp0000I Optimal - objective value 115.36273
Clp0000I Optimal - objective value 115.36273
Coin0511I After Postsolve, objective 115.36273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.3627255 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 39 columns (39 integer (39 of which binary)) and 285 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.114%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.92571
Cbc0038I Pass   1: suminf.    0.56420 (5) obj. -19.1195 iterations 11
Cbc0038I Pass   2: suminf.    0.56420 (5) obj. -19.1195 iterations 0
Cbc0038I Solution found of -1.7297
Cbc0038I Rounding solution of -38.8016 is better than previous of -1.7297

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.9932
Cbc0038I Pass   3: suminf.    0.99665 (6) obj. -43.9932 iterations 1
Cbc0038I Pass   4: suminf.    0.56420 (5) obj. -62.9461 iterations 1
Cbc0038I Solution found of -45.5563
Cbc0038I Rounding solution of -53.5563 is better than previous of -45.5563

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -60.9885
Cbc0038I Pass   5: suminf.    0.60887 (6) obj. -60.9885 iterations 0
Cbc0038I Pass   6: suminf.    0.56420 (5) obj. -62.9461 iterations 1
Cbc0038I Pass   7: suminf.    0.59643 (7) obj. -60.9885 iterations 8
Cbc0038I Pass   8: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass   9: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  10: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  11: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  12: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  13: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  14: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  15: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  16: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  17: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  18: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  19: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  20: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  21: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  22: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  23: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  24: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  25: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  26: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  27: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  28: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  29: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I Pass  30: suminf.    1.18708 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  31: suminf.    0.70156 (4) obj. -60.9885 iterations 1
Cbc0038I Pass  32: suminf.    0.59643 (7) obj. -60.9885 iterations 4
Cbc0038I Pass  33: suminf.    0.59472 (5) obj. -60.9885 iterations 1
Cbc0038I Pass  34: suminf.    1.42289 (5) obj. -60.9885 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -53.5563 - took 0.01 seconds
Cbc0012I Integer solution of -53.5563 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 39 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -63.425 found by DiveCoefficient after 130 iterations and 0 nodes (0.25 seconds)
Cbc0031I 18 added rows had average density of 7.1666667
Cbc0013I At root node, 18 cuts changed objective from -90.717022 to -63.425 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 219 row cuts average 4.2 elements, 5 column cuts (5 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0001I Search completed - best objective -63.42500000000001, took 130 iterations and 0 nodes (0.25 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.26

