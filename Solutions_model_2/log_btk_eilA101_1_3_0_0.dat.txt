Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 97 (-6) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 4.12091e-06 - average 2.27675e-08, 81 fixed columns
Coin0506I Presolve 17 (-164) rows, 16 (-81) columns and 60 (-488) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 11219.862
Clp0000I Optimal - objective value 11219.862
Coin0511I After Postsolve, objective 11219.862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24086296 - largest nonzero change 0 ( 0%) - largest zero change 2.9836413e-05
Clp0000I Optimal - objective value 11219.862
Clp0000I Optimal - objective value 11219.862
Clp0000I Optimal - objective value 11219.862
Coin0511I After Postsolve, objective 11219.862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11219.86239 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 181 rows, 97 columns (96 integer (96 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 3.06839
Cbc0038I Pass   1: suminf.    0.05714 (1) obj. -11146.2 iterations 31
Cbc0038I Solution found of -9252.88
Cbc0038I Relaxing continuous gives -9252.88
Cbc0038I Rounding solution of -9261.32 is better than previous of -9252.88

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 97 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -9261.32 to -10544.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -10612.2
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.05714 (1) obj. -11146.2 iterations 0
Cbc0038I Pass   3: suminf.    0.32308 (1) obj. -10612.2 iterations 1
Cbc0038I Pass   4: suminf.    1.06275 (7) obj. -10612.2 iterations 18
Cbc0038I Pass   5: suminf.    0.44524 (1) obj. -10612.2 iterations 14
Cbc0038I Pass   6: suminf.    0.40000 (1) obj. -10923 iterations 1
Cbc0038I Pass   7: suminf.    0.83664 (6) obj. -10612.2 iterations 15
Cbc0038I Pass   8: suminf.    0.08571 (1) obj. -10841.1 iterations 17
Cbc0038I Pass   9: suminf.    0.19971 (1) obj. -10612.2 iterations 1
Cbc0038I Pass  10: suminf.    0.31413 (2) obj. -10612.2 iterations 15
Cbc0038I Pass  11: suminf.    0.17143 (1) obj. -10669.8 iterations 12
Cbc0038I Pass  12: suminf.    0.20009 (1) obj. -10612.2 iterations 1
Cbc0038I Pass  13: suminf.    0.35255 (3) obj. -10612.2 iterations 9
Cbc0038I Pass  14: suminf.    0.40000 (1) obj. -10923 iterations 18
Cbc0038I Pass  15: suminf.    0.40000 (1) obj. -10923 iterations 8
Cbc0038I Pass  16: suminf.    0.44524 (1) obj. -10612.2 iterations 1
Cbc0038I Pass  17: suminf.    1.05860 (7) obj. -10612.2 iterations 12
Cbc0038I Pass  18: suminf.    0.44524 (1) obj. -10612.2 iterations 10
Cbc0038I Pass  19: suminf.    1.01171 (4) obj. -10612.2 iterations 22
Cbc0038I Pass  20: suminf.    0.64666 (3) obj. -10612.2 iterations 15
Cbc0038I Pass  21: suminf.    0.98308 (3) obj. -10612.2 iterations 17
Cbc0038I Pass  22: suminf.    0.51841 (2) obj. -10959.6 iterations 17
Cbc0038I Pass  23: suminf.    0.71913 (2) obj. -10612.2 iterations 2
Cbc0038I Pass  24: suminf.    0.52266 (4) obj. -10612.2 iterations 15
Cbc0038I Pass  25: suminf.    0.32611 (2) obj. -10612.2 iterations 10
Cbc0038I Pass  26: suminf.    1.02856 (3) obj. -10612.2 iterations 4
Cbc0038I Pass  27: suminf.    1.94360 (6) obj. -10612.2 iterations 29
Cbc0038I Pass  28: suminf.    0.45326 (5) obj. -10612.2 iterations 10
Cbc0038I Pass  29: suminf.    0.39458 (3) obj. -10614.8 iterations 20
Cbc0038I Pass  30: suminf.    0.93380 (5) obj. -10612.2 iterations 12
Cbc0038I Pass  31: suminf.    0.93380 (5) obj. -10612.2 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 97 columns, reduced to 43 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -10544.7 to -10608.2 (0.03 seconds)
Cbc0038I Round again with cutoff of -10733.7
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.05714 (1) obj. -11146.2 iterations 0
Cbc0038I Pass  32: suminf.    0.26256 (1) obj. -10733.7 iterations 1
Cbc0038I Pass  33: suminf.    0.48396 (3) obj. -10733.7 iterations 17
Cbc0038I Pass  34: suminf.    0.46372 (2) obj. -10733.7 iterations 10
Cbc0038I Pass  35: suminf.    1.62998 (6) obj. -10733.7 iterations 15
Cbc0038I Pass  36: suminf.    0.24718 (2) obj. -10794.3 iterations 14
Cbc0038I Pass  37: suminf.    0.28220 (2) obj. -10733.7 iterations 1
Cbc0038I Pass  38: suminf.    2.74430 (10) obj. -10733.7 iterations 32
Cbc0038I Pass  39: suminf.    0.33172 (6) obj. -10733.7 iterations 6
Cbc0038I Pass  40: suminf.    1.10829 (3) obj. -10733.7 iterations 31
Cbc0038I Pass  41: suminf.    1.10829 (3) obj. -10733.7 iterations 1
Cbc0038I Pass  42: suminf.    0.60303 (5) obj. -10733.7 iterations 17
Cbc0038I Pass  43: suminf.    0.49698 (4) obj. -10733.7 iterations 1
Cbc0038I Pass  44: suminf.    0.73091 (2) obj. -10733.7 iterations 6
Cbc0038I Pass  45: suminf.    0.73091 (2) obj. -10733.7 iterations 0
Cbc0038I Pass  46: suminf.    0.97571 (3) obj. -10733.7 iterations 7
Cbc0038I Pass  47: suminf.    0.27696 (3) obj. -10733.7 iterations 14
Cbc0038I Pass  48: suminf.    1.09430 (4) obj. -10733.7 iterations 16
Cbc0038I Pass  49: suminf.    1.09430 (4) obj. -10733.7 iterations 2
Cbc0038I Pass  50: suminf.    0.73091 (2) obj. -10733.7 iterations 6
Cbc0038I Pass  51: suminf.    0.73091 (2) obj. -10733.7 iterations 2
Cbc0038I Pass  52: suminf.    0.97571 (3) obj. -10733.7 iterations 7
Cbc0038I Pass  53: suminf.    0.27696 (3) obj. -10733.7 iterations 14
Cbc0038I Pass  54: suminf.    1.09430 (4) obj. -10733.7 iterations 16
Cbc0038I Pass  55: suminf.    1.09430 (4) obj. -10733.7 iterations 2
Cbc0038I Pass  56: suminf.    0.73091 (2) obj. -10733.7 iterations 6
Cbc0038I Pass  57: suminf.    0.73091 (2) obj. -10733.7 iterations 2
Cbc0038I Pass  58: suminf.    0.97571 (3) obj. -10733.7 iterations 7
Cbc0038I Pass  59: suminf.    0.27696 (3) obj. -10733.7 iterations 14
Cbc0038I Pass  60: suminf.    1.09430 (4) obj. -10733.7 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 97 columns, reduced to 27 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -10608.2 - took 0.04 seconds
Cbc0012I Integer solution of -10608.177 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 181 rows 97 columns, reduced to 22 rows 17 columns
Cbc0031I 3 added rows had average density of 44.666667
Cbc0013I At root node, 3 cuts changed objective from -11219.862 to -11084.368 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.4 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 43 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0016I Integer solution of -10786.005 found by strong branching after 161 iterations and 6 nodes (0.09 seconds)
Cbc0001I Search completed - best objective -10786.005435, took 231 iterations and 10 nodes (0.09 seconds)
Cbc0032I Strong branching done 72 times (329 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-65) rows, 150 (-52) columns and 3028 (-2625) elements
Clp1000I sum of infeasibilities 9.77853e-07 - average 7.03492e-09, 72 fixed columns
Coin0506I Presolve 73 (-66) rows, 78 (-72) columns and 775 (-2253) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 8.7793738 - largest nonzero change 1.5894287e-05 ( 0.00086069148%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 11268.068
Clp0000I Optimal - objective value 11268.068
Coin0511I After Postsolve, objective 11268.068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6957001 - largest nonzero change 1.2146813e-05 ( 0.00086629169%) - largest zero change 2.9639875e-05
Clp0000I Optimal - objective value 11268.068
Clp0000I Optimal - objective value 11268.068
Clp0000I Optimal - objective value 11268.068
Coin0511I After Postsolve, objective 11268.068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11268.0685 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 150 columns (150 integer (150 of which binary)) and 3030 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.315%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 3.17565
Cbc0038I Pass   1: suminf.    1.84100 (38) obj. -11191.9 iterations 38
Cbc0038I Pass   2: suminf.    0.73346 (24) obj. -11177.2 iterations 14
Cbc0038I Pass   3: suminf.    0.20652 (10) obj. -9262.67 iterations 14
Cbc0038I Solution found of -9252.88
Cbc0038I Rounding solution of -9326.47 is better than previous of -9252.88

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -9520.26
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.84100 (38) obj. -11191.9 iterations 0
Cbc0038I Pass   5: suminf.    0.41689 (14) obj. -9520.26 iterations 25
Cbc0038I Pass   6: suminf.    0.05714 (1) obj. -11146.2 iterations 14
Cbc0038I Pass   7: suminf.    0.13315 (1) obj. -9520.26 iterations 1
Cbc0038I Pass   8: suminf.    0.43415 (24) obj. -9520.26 iterations 53
Cbc0038I Pass   9: suminf.    0.38386 (8) obj. -9520.26 iterations 23
Cbc0038I Pass  10: suminf.    1.42619 (4) obj. -9520.26 iterations 12
Cbc0038I Pass  11: suminf.    0.01566 (2) obj. -9520.26 iterations 20
Cbc0038I Pass  12: suminf.    0.01566 (2) obj. -9520.26 iterations 0
Cbc0038I Pass  13: suminf.    1.11475 (14) obj. -9520.26 iterations 29
Cbc0038I Pass  14: suminf.    0.80201 (8) obj. -9520.26 iterations 14
Cbc0038I Pass  15: suminf.    0.45714 (1) obj. -9786.2 iterations 8
Cbc0038I Pass  16: suminf.    0.32471 (1) obj. -9520.26 iterations 1
Cbc0038I Pass  17: suminf.    0.69469 (14) obj. -9520.26 iterations 32
Cbc0038I Pass  18: suminf.    0.49559 (11) obj. -9520.26 iterations 11
Cbc0038I Pass  19: suminf.    0.14286 (1) obj. -9659.2 iterations 11
Cbc0038I Pass  20: suminf.    0.07367 (1) obj. -9520.26 iterations 1
Cbc0038I Pass  21: suminf.    0.70419 (8) obj. -9520.26 iterations 23
Cbc0038I Pass  22: suminf.    0.47685 (6) obj. -9520.26 iterations 8
Cbc0038I Pass  23: suminf.    0.45204 (2) obj. -9520.26 iterations 7
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -9715.56 iterations 1
Cbc0038I Pass  25: suminf.    0.24011 (1) obj. -9520.26 iterations 1
Cbc0038I Pass  26: suminf.    1.11406 (11) obj. -9520.26 iterations 25
Cbc0038I Pass  27: suminf.    0.81278 (9) obj. -9722.73 iterations 11
Cbc0038I Pass  28: suminf.    0.23912 (1) obj. -9520.26 iterations 9
Cbc0038I Pass  29: suminf.    0.14286 (1) obj. -9713.56 iterations 1
Cbc0038I Pass  30: suminf.    1.69787 (7) obj. -9520.26 iterations 22
Cbc0038I Pass  31: suminf.    0.65533 (5) obj. -9520.26 iterations 7
Cbc0038I Pass  32: suminf.    0.65533 (5) obj. -9520.26 iterations 2
Cbc0038I Pass  33: suminf.    0.24148 (1) obj. -9520.26 iterations 7
Cbc0038I Rounding solution of -10005.2 is better than previous of -9326.47

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 150 columns, reduced to 52 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -10005.2 to -10608.2 (0.11 seconds)
Cbc0038I Round again with cutoff of -10739.4
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.84100 (38) obj. -11191.9 iterations 0
Cbc0038I Pass  34: suminf.    0.73346 (24) obj. -11177.2 iterations 14
Cbc0038I Pass  35: suminf.    0.35570 (6) obj. -10739.4 iterations 19
Cbc0038I Pass  36: suminf.    0.15066 (6) obj. -11151.1 iterations 1
Cbc0038I Pass  37: suminf.    0.25973 (1) obj. -10739.4 iterations 6
Cbc0038I Pass  38: suminf.    0.05714 (1) obj. -11146.2 iterations 1
Cbc0038I Pass  39: suminf.    0.24383 (7) obj. -11150.1 iterations 15
Cbc0038I Pass  40: suminf.    0.24383 (7) obj. -11150.1 iterations 7
Cbc0038I Pass  41: suminf.    0.25873 (1) obj. -10739.4 iterations 7
Cbc0038I Pass  42: suminf.    0.05714 (1) obj. -11144.2 iterations 1
Cbc0038I Pass  43: suminf.    1.84540 (12) obj. -10739.4 iterations 31
Cbc0038I Pass  44: suminf.    1.26737 (10) obj. -10739.4 iterations 7
Cbc0038I Pass  45: suminf.    1.26737 (10) obj. -10739.4 iterations 1
Cbc0038I Pass  46: suminf.    0.05714 (1) obj. -10771.9 iterations 11
Cbc0038I Pass  47: suminf.    0.07334 (1) obj. -10739.4 iterations 1
Cbc0038I Pass  48: suminf.    0.77476 (4) obj. -10739.4 iterations 19
Cbc0038I Pass  49: suminf.    0.77476 (4) obj. -10739.4 iterations 4
Cbc0038I Pass  50: suminf.    0.42975 (2) obj. -10787.9 iterations 14
Cbc0038I Pass  51: suminf.    0.38543 (2) obj. -10739.4 iterations 2
Cbc0038I Pass  52: suminf.    1.12736 (3) obj. -10739.4 iterations 7
Cbc0038I Pass  53: suminf.    0.21660 (2) obj. -10739.4 iterations 12
Cbc0038I Pass  54: suminf.    0.05714 (1) obj. -10770.9 iterations 16
Cbc0038I Pass  55: suminf.    0.07284 (1) obj. -10739.4 iterations 1
Cbc0038I Pass  56: suminf.    1.71056 (19) obj. -10739.4 iterations 28
Cbc0038I Pass  57: suminf.    0.67843 (5) obj. -10844.5 iterations 19
Cbc0038I Pass  58: suminf.    0.62411 (5) obj. -10739.4 iterations 1
Cbc0038I Pass  59: suminf.    0.42857 (1) obj. -10840.8 iterations 5
Cbc0038I Pass  60: suminf.    0.37809 (1) obj. -10739.4 iterations 1
Cbc0038I Pass  61: suminf.    1.65233 (12) obj. -10739.4 iterations 23
Cbc0038I Pass  62: suminf.    1.45626 (11) obj. -10739.4 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 150 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -10608.2 - took 0.10 seconds
Cbc0012I Integer solution of -10608.177 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 139 rows 150 columns, reduced to 46 rows 48 columns
Cbc0031I 31 added rows had average density of 20.16129
Cbc0013I At root node, 31 cuts changed objective from -11264.392 to -11070.043 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 696 row cuts average 10.7 elements, 21 column cuts (21 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 47.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 53.9 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -10608.177 best solution, best possible -11070.043 (0.55 seconds)
Cbc0010I After 40 nodes, 4 on tree, -10608.177 best solution, best possible -11070.043 (1.25 seconds)
Cbc0012I Integer solution of -10786.005 found by DiveCoefficient after 1590 iterations and 42 nodes (1.37 seconds)
Cbc0038I Full problem 139 rows 150 columns, reduced to 20 rows 22 columns
Cbc0001I Search completed - best objective -10786.005435, took 1693 iterations and 46 nodes (1.42 seconds)
Cbc0032I Strong branching done 504 times (4134 iterations), fathomed 13 nodes and fixed 7 variables
Cbc0035I Maximum depth 10, 161 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 97 (-6) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 4.12091e-06 - average 2.27675e-08, 81 fixed columns
Coin0506I Presolve 17 (-164) rows, 16 (-81) columns and 60 (-488) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 11219.862
Clp0000I Optimal - objective value 11219.862
Coin0511I After Postsolve, objective 11219.862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24086296 - largest nonzero change 0 ( 0%) - largest zero change 2.9836413e-05
Clp0000I Optimal - objective value 11219.862
Clp0000I Optimal - objective value 11219.862
Clp0000I Optimal - objective value 11219.862
Coin0511I After Postsolve, objective 11219.862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11219.86239 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 181 rows, 97 columns (96 integer (96 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 3.06839
Cbc0038I Pass   1: suminf.    0.05714 (1) obj. -11146.2 iterations 31
Cbc0038I Solution found of -9252.88
Cbc0038I Relaxing continuous gives -9252.88
Cbc0038I Rounding solution of -9261.32 is better than previous of -9252.88

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 97 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -9261.32 to -10544.7 (0.02 seconds)
Cbc0038I Round again with cutoff of -10612.2
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.05714 (1) obj. -11146.2 iterations 0
Cbc0038I Pass   3: suminf.    0.32308 (1) obj. -10612.2 iterations 1
Cbc0038I Pass   4: suminf.    1.06275 (7) obj. -10612.2 iterations 18
Cbc0038I Pass   5: suminf.    0.44524 (1) obj. -10612.2 iterations 14
Cbc0038I Pass   6: suminf.    0.40000 (1) obj. -10923 iterations 1
Cbc0038I Pass   7: suminf.    0.83664 (6) obj. -10612.2 iterations 15
Cbc0038I Pass   8: suminf.    0.08571 (1) obj. -10841.1 iterations 17
Cbc0038I Pass   9: suminf.    0.19971 (1) obj. -10612.2 iterations 1
Cbc0038I Pass  10: suminf.    0.31413 (2) obj. -10612.2 iterations 15
Cbc0038I Pass  11: suminf.    0.17143 (1) obj. -10669.8 iterations 12
Cbc0038I Pass  12: suminf.    0.20009 (1) obj. -10612.2 iterations 1
Cbc0038I Pass  13: suminf.    0.35255 (3) obj. -10612.2 iterations 9
Cbc0038I Pass  14: suminf.    0.40000 (1) obj. -10923 iterations 18
Cbc0038I Pass  15: suminf.    0.40000 (1) obj. -10923 iterations 8
Cbc0038I Pass  16: suminf.    0.44524 (1) obj. -10612.2 iterations 1
Cbc0038I Pass  17: suminf.    1.05860 (7) obj. -10612.2 iterations 12
Cbc0038I Pass  18: suminf.    0.44524 (1) obj. -10612.2 iterations 10
Cbc0038I Pass  19: suminf.    1.01171 (4) obj. -10612.2 iterations 22
Cbc0038I Pass  20: suminf.    0.64666 (3) obj. -10612.2 iterations 15
Cbc0038I Pass  21: suminf.    0.98308 (3) obj. -10612.2 iterations 17
Cbc0038I Pass  22: suminf.    0.51841 (2) obj. -10959.6 iterations 17
Cbc0038I Pass  23: suminf.    0.71913 (2) obj. -10612.2 iterations 2
Cbc0038I Pass  24: suminf.    0.52266 (4) obj. -10612.2 iterations 15
Cbc0038I Pass  25: suminf.    0.32611 (2) obj. -10612.2 iterations 10
Cbc0038I Pass  26: suminf.    1.02856 (3) obj. -10612.2 iterations 4
Cbc0038I Pass  27: suminf.    1.94360 (6) obj. -10612.2 iterations 29
Cbc0038I Pass  28: suminf.    0.45326 (5) obj. -10612.2 iterations 10
Cbc0038I Pass  29: suminf.    0.39458 (3) obj. -10614.8 iterations 20
Cbc0038I Pass  30: suminf.    0.93380 (5) obj. -10612.2 iterations 12
Cbc0038I Pass  31: suminf.    0.93380 (5) obj. -10612.2 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 97 columns, reduced to 43 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -10544.7 to -10608.2 (0.03 seconds)
Cbc0038I Round again with cutoff of -10733.7
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.05714 (1) obj. -11146.2 iterations 0
Cbc0038I Pass  32: suminf.    0.26256 (1) obj. -10733.7 iterations 1
Cbc0038I Pass  33: suminf.    0.48396 (3) obj. -10733.7 iterations 17
Cbc0038I Pass  34: suminf.    0.46372 (2) obj. -10733.7 iterations 10
Cbc0038I Pass  35: suminf.    1.62998 (6) obj. -10733.7 iterations 15
Cbc0038I Pass  36: suminf.    0.24718 (2) obj. -10794.3 iterations 14
Cbc0038I Pass  37: suminf.    0.28220 (2) obj. -10733.7 iterations 1
Cbc0038I Pass  38: suminf.    2.74430 (10) obj. -10733.7 iterations 32
Cbc0038I Pass  39: suminf.    0.33172 (6) obj. -10733.7 iterations 6
Cbc0038I Pass  40: suminf.    1.10829 (3) obj. -10733.7 iterations 31
Cbc0038I Pass  41: suminf.    1.10829 (3) obj. -10733.7 iterations 1
Cbc0038I Pass  42: suminf.    0.60303 (5) obj. -10733.7 iterations 17
Cbc0038I Pass  43: suminf.    0.49698 (4) obj. -10733.7 iterations 1
Cbc0038I Pass  44: suminf.    0.73091 (2) obj. -10733.7 iterations 6
Cbc0038I Pass  45: suminf.    0.73091 (2) obj. -10733.7 iterations 0
Cbc0038I Pass  46: suminf.    0.97571 (3) obj. -10733.7 iterations 7
Cbc0038I Pass  47: suminf.    0.27696 (3) obj. -10733.7 iterations 14
Cbc0038I Pass  48: suminf.    1.09430 (4) obj. -10733.7 iterations 16
Cbc0038I Pass  49: suminf.    1.09430 (4) obj. -10733.7 iterations 2
Cbc0038I Pass  50: suminf.    0.73091 (2) obj. -10733.7 iterations 6
Cbc0038I Pass  51: suminf.    0.73091 (2) obj. -10733.7 iterations 2
Cbc0038I Pass  52: suminf.    0.97571 (3) obj. -10733.7 iterations 7
Cbc0038I Pass  53: suminf.    0.27696 (3) obj. -10733.7 iterations 14
Cbc0038I Pass  54: suminf.    1.09430 (4) obj. -10733.7 iterations 16
Cbc0038I Pass  55: suminf.    1.09430 (4) obj. -10733.7 iterations 2
Cbc0038I Pass  56: suminf.    0.73091 (2) obj. -10733.7 iterations 6
Cbc0038I Pass  57: suminf.    0.73091 (2) obj. -10733.7 iterations 2
Cbc0038I Pass  58: suminf.    0.97571 (3) obj. -10733.7 iterations 7
Cbc0038I Pass  59: suminf.    0.27696 (3) obj. -10733.7 iterations 14
Cbc0038I Pass  60: suminf.    1.09430 (4) obj. -10733.7 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 97 columns, reduced to 27 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -10608.2 - took 0.04 seconds
Cbc0012I Integer solution of -10608.177 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 181 rows 97 columns, reduced to 22 rows 17 columns
Cbc0031I 3 added rows had average density of 44.666667
Cbc0013I At root node, 3 cuts changed objective from -11219.862 to -11084.368 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.4 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 43 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0016I Integer solution of -10786.005 found by strong branching after 161 iterations and 6 nodes (0.09 seconds)
Cbc0001I Search completed - best objective -10786.005435, took 231 iterations and 10 nodes (0.09 seconds)
Cbc0032I Strong branching done 72 times (329 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-66) rows, 150 (-53) columns and 3028 (-2626) elements
Clp1000I sum of infeasibilities 9.77853e-07 - average 7.03492e-09, 72 fixed columns
Coin0506I Presolve 73 (-66) rows, 78 (-72) columns and 775 (-2253) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 8.7793738 - largest nonzero change 1.5894287e-05 ( 0.00086069148%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 11268.068
Clp0000I Optimal - objective value 11268.068
Coin0511I After Postsolve, objective 11268.068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6957001 - largest nonzero change 1.2146813e-05 ( 0.00086629169%) - largest zero change 2.9639875e-05
Clp0000I Optimal - objective value 11268.068
Clp0000I Optimal - objective value 11268.068
Clp0000I Optimal - objective value 11268.068
Coin0511I After Postsolve, objective 11268.068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11268.0685 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 150 columns (150 integer (150 of which binary)) and 3030 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.315%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 3.17565
Cbc0038I Pass   1: suminf.    1.84100 (38) obj. -11191.9 iterations 38
Cbc0038I Pass   2: suminf.    0.73346 (24) obj. -11177.2 iterations 14
Cbc0038I Pass   3: suminf.    0.20652 (10) obj. -9262.67 iterations 14
Cbc0038I Solution found of -9252.88
Cbc0038I Rounding solution of -9326.47 is better than previous of -9252.88

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -9520.26
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.84100 (38) obj. -11191.9 iterations 0
Cbc0038I Pass   5: suminf.    0.41689 (14) obj. -9520.26 iterations 25
Cbc0038I Pass   6: suminf.    0.05714 (1) obj. -11146.2 iterations 14
Cbc0038I Pass   7: suminf.    0.13315 (1) obj. -9520.26 iterations 1
Cbc0038I Pass   8: suminf.    0.43415 (24) obj. -9520.26 iterations 53
Cbc0038I Pass   9: suminf.    0.38386 (8) obj. -9520.26 iterations 23
Cbc0038I Pass  10: suminf.    1.42619 (4) obj. -9520.26 iterations 12
Cbc0038I Pass  11: suminf.    0.01566 (2) obj. -9520.26 iterations 20
Cbc0038I Pass  12: suminf.    0.01566 (2) obj. -9520.26 iterations 0
Cbc0038I Pass  13: suminf.    1.11475 (14) obj. -9520.26 iterations 29
Cbc0038I Pass  14: suminf.    0.80201 (8) obj. -9520.26 iterations 14
Cbc0038I Pass  15: suminf.    0.45714 (1) obj. -9786.2 iterations 8
Cbc0038I Pass  16: suminf.    0.32471 (1) obj. -9520.26 iterations 1
Cbc0038I Pass  17: suminf.    0.69469 (14) obj. -9520.26 iterations 32
Cbc0038I Pass  18: suminf.    0.49559 (11) obj. -9520.26 iterations 11
Cbc0038I Pass  19: suminf.    0.14286 (1) obj. -9659.2 iterations 11
Cbc0038I Pass  20: suminf.    0.07367 (1) obj. -9520.26 iterations 1
Cbc0038I Pass  21: suminf.    0.70419 (8) obj. -9520.26 iterations 23
Cbc0038I Pass  22: suminf.    0.47685 (6) obj. -9520.26 iterations 8
Cbc0038I Pass  23: suminf.    0.45204 (2) obj. -9520.26 iterations 7
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -9715.56 iterations 1
Cbc0038I Pass  25: suminf.    0.24011 (1) obj. -9520.26 iterations 1
Cbc0038I Pass  26: suminf.    1.11406 (11) obj. -9520.26 iterations 25
Cbc0038I Pass  27: suminf.    0.81278 (9) obj. -9722.73 iterations 11
Cbc0038I Pass  28: suminf.    0.23912 (1) obj. -9520.26 iterations 9
Cbc0038I Pass  29: suminf.    0.14286 (1) obj. -9713.56 iterations 1
Cbc0038I Pass  30: suminf.    1.69787 (7) obj. -9520.26 iterations 22
Cbc0038I Pass  31: suminf.    0.65533 (5) obj. -9520.26 iterations 7
Cbc0038I Pass  32: suminf.    0.65533 (5) obj. -9520.26 iterations 2
Cbc0038I Pass  33: suminf.    0.24148 (1) obj. -9520.26 iterations 7
Cbc0038I Rounding solution of -10005.2 is better than previous of -9326.47

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 150 columns, reduced to 52 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -10005.2 to -10608.2 (0.10 seconds)
Cbc0038I Round again with cutoff of -10739.4
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.84100 (38) obj. -11191.9 iterations 0
Cbc0038I Pass  34: suminf.    0.73346 (24) obj. -11177.2 iterations 14
Cbc0038I Pass  35: suminf.    0.35570 (6) obj. -10739.4 iterations 19
Cbc0038I Pass  36: suminf.    0.15066 (6) obj. -11151.1 iterations 1
Cbc0038I Pass  37: suminf.    0.25973 (1) obj. -10739.4 iterations 6
Cbc0038I Pass  38: suminf.    0.05714 (1) obj. -11146.2 iterations 1
Cbc0038I Pass  39: suminf.    0.24383 (7) obj. -11150.1 iterations 15
Cbc0038I Pass  40: suminf.    0.24383 (7) obj. -11150.1 iterations 7
Cbc0038I Pass  41: suminf.    0.25873 (1) obj. -10739.4 iterations 7
Cbc0038I Pass  42: suminf.    0.05714 (1) obj. -11144.2 iterations 1
Cbc0038I Pass  43: suminf.    1.84540 (12) obj. -10739.4 iterations 31
Cbc0038I Pass  44: suminf.    1.26737 (10) obj. -10739.4 iterations 7
Cbc0038I Pass  45: suminf.    1.26737 (10) obj. -10739.4 iterations 1
Cbc0038I Pass  46: suminf.    0.05714 (1) obj. -10771.9 iterations 11
Cbc0038I Pass  47: suminf.    0.07334 (1) obj. -10739.4 iterations 1
Cbc0038I Pass  48: suminf.    0.77476 (4) obj. -10739.4 iterations 19
Cbc0038I Pass  49: suminf.    0.77476 (4) obj. -10739.4 iterations 4
Cbc0038I Pass  50: suminf.    0.42975 (2) obj. -10787.9 iterations 14
Cbc0038I Pass  51: suminf.    0.38543 (2) obj. -10739.4 iterations 2
Cbc0038I Pass  52: suminf.    1.12736 (3) obj. -10739.4 iterations 7
Cbc0038I Pass  53: suminf.    0.21660 (2) obj. -10739.4 iterations 12
Cbc0038I Pass  54: suminf.    0.05714 (1) obj. -10770.9 iterations 16
Cbc0038I Pass  55: suminf.    0.07284 (1) obj. -10739.4 iterations 1
Cbc0038I Pass  56: suminf.    1.71056 (19) obj. -10739.4 iterations 28
Cbc0038I Pass  57: suminf.    0.67843 (5) obj. -10844.5 iterations 19
Cbc0038I Pass  58: suminf.    0.62411 (5) obj. -10739.4 iterations 1
Cbc0038I Pass  59: suminf.    0.42857 (1) obj. -10840.8 iterations 5
Cbc0038I Pass  60: suminf.    0.37809 (1) obj. -10739.4 iterations 1
Cbc0038I Pass  61: suminf.    1.65233 (12) obj. -10739.4 iterations 23
Cbc0038I Pass  62: suminf.    1.45626 (11) obj. -10739.4 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 150 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -10608.2 - took 0.10 seconds
Cbc0012I Integer solution of -10608.177 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 139 rows 150 columns, reduced to 46 rows 48 columns
Cbc0031I 31 added rows had average density of 20.16129
Cbc0013I At root node, 31 cuts changed objective from -11264.392 to -11070.043 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 696 row cuts average 10.7 elements, 21 column cuts (21 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 47.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 53.9 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -10608.177 best solution, best possible -11070.043 (0.58 seconds)
Cbc0010I After 41 nodes, 3 on tree, -10608.177 best solution, best possible -11070.043 (1.30 seconds)
Cbc0012I Integer solution of -10786.005 found by DiveCoefficient after 1590 iterations and 42 nodes (1.31 seconds)
Cbc0038I Full problem 139 rows 150 columns, reduced to 20 rows 22 columns
Cbc0001I Search completed - best objective -10786.005435, took 1693 iterations and 46 nodes (1.36 seconds)
Cbc0032I Strong branching done 504 times (4134 iterations), fathomed 13 nodes and fixed 7 variables
Cbc0035I Maximum depth 10, 161 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       1.37

