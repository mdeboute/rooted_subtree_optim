Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 0.000144654 - average 1.04068e-06, 8 fixed columns
Coin0506I Presolve 123 (-16) rows, 68 (-8) columns and 374 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 0.28419459 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Coin0511I After Postsolve, objective 41.282106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Coin0511I After Postsolve, objective 41.282106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.28210606 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 9.42899
Cbc0038I Solution found of 7.00749
Cbc0038I Relaxing continuous gives -2.89982
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -2.89982 to -7.06963 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.491
Cbc0038I Pass   1: suminf.    1.71795 (34) obj. -10.491 iterations 34
Cbc0038I Pass   2: suminf.    2.58218 (8) obj. -10.491 iterations 39
Cbc0038I Pass   3: suminf.    1.95673 (6) obj. -10.491 iterations 6
Cbc0038I Pass   4: suminf.    0.97050 (3) obj. -10.491 iterations 10
Cbc0038I Pass   5: suminf.    0.82736 (3) obj. -10.491 iterations 2
Cbc0038I Pass   6: suminf.    0.71340 (3) obj. -10.491 iterations 5
Cbc0038I Pass   7: suminf.    0.71340 (3) obj. -10.491 iterations 0
Cbc0038I Pass   8: suminf.    0.90664 (4) obj. -10.491 iterations 2
Cbc0038I Pass   9: suminf.    0.51787 (3) obj. -10.491 iterations 5
Cbc0038I Pass  10: suminf.    0.81437 (4) obj. -10.491 iterations 6
Cbc0038I Pass  11: suminf.    2.17114 (9) obj. -10.491 iterations 26
Cbc0038I Pass  12: suminf.    1.16295 (5) obj. -10.491 iterations 15
Cbc0038I Pass  13: suminf.    1.47934 (4) obj. -10.491 iterations 8
Cbc0038I Pass  14: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  15: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  16: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  17: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  18: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  19: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  20: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  21: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  22: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  23: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  24: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  25: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  26: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  27: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  28: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  29: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  30: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Rounding solution of -7.98744 is better than previous of -7.06963

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -16.6492
Cbc0038I Pass  30: suminf.    3.11161 (34) obj. -16.6492 iterations 0
Cbc0038I Pass  31: suminf.    4.01482 (11) obj. -16.6492 iterations 38
Cbc0038I Pass  32: suminf.    2.89098 (7) obj. -16.6492 iterations 9
Cbc0038I Pass  33: suminf.    2.73453 (9) obj. -16.6492 iterations 3
Cbc0038I Pass  34: suminf.    2.37034 (7) obj. -16.6492 iterations 6
Cbc0038I Pass  35: suminf.    2.43344 (6) obj. -16.6492 iterations 7
Cbc0038I Pass  36: suminf.    2.23197 (9) obj. -16.6492 iterations 5
Cbc0038I Pass  37: suminf.    2.32238 (7) obj. -16.6492 iterations 13
Cbc0038I Pass  38: suminf.    2.06672 (6) obj. -16.6492 iterations 1
Cbc0038I Pass  39: suminf.    2.05540 (9) obj. -16.6492 iterations 11
Cbc0038I Pass  40: suminf.    1.45777 (5) obj. -16.6492 iterations 12
Cbc0038I Pass  41: suminf.    1.45777 (5) obj. -16.6492 iterations 0
Cbc0038I Pass  42: suminf.    1.43340 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  43: suminf.    1.36029 (6) obj. -16.6492 iterations 1
Cbc0038I Pass  44: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  45: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  46: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  47: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  48: suminf.    1.36029 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  49: suminf.    1.36029 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  50: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  51: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  52: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  53: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  54: suminf.    1.36029 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  55: suminf.    1.36029 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  56: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  57: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  58: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  59: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -7.98744 to -11.9145 (0.17 seconds)
Cbc0038I Round again with cutoff of -24.0391
Cbc0038I Pass  59: suminf.    4.78400 (34) obj. -24.0391 iterations 0
Cbc0038I Pass  60: suminf.    3.48761 (12) obj. -24.0391 iterations 39
Cbc0038I Pass  61: suminf.    2.15302 (7) obj. -24.0391 iterations 12
Cbc0038I Pass  62: suminf.    2.68943 (7) obj. -24.0391 iterations 6
Cbc0038I Pass  63: suminf.    2.54808 (7) obj. -24.0391 iterations 5
Cbc0038I Pass  64: suminf.    2.40877 (10) obj. -24.0391 iterations 5
Cbc0038I Pass  65: suminf.    3.16497 (10) obj. -24.0391 iterations 9
Cbc0038I Pass  66: suminf.    2.88348 (9) obj. -24.0391 iterations 1
Cbc0038I Pass  67: suminf.    3.03121 (12) obj. -24.0391 iterations 10
Cbc0038I Pass  68: suminf.    3.03121 (12) obj. -24.0391 iterations 0
Cbc0038I Pass  69: suminf.    3.29540 (10) obj. -24.0391 iterations 16
Cbc0038I Pass  70: suminf.    5.86324 (16) obj. -24.0391 iterations 24
Cbc0038I Pass  71: suminf.    4.92552 (15) obj. -24.0391 iterations 12
Cbc0038I Pass  72: suminf.    1.64620 (7) obj. -24.0391 iterations 15
Cbc0038I Pass  73: suminf.    1.46150 (7) obj. -24.0391 iterations 3
Cbc0038I Pass  74: suminf.    2.94449 (7) obj. -24.0391 iterations 7
Cbc0038I Pass  75: suminf.    2.99361 (8) obj. -24.0391 iterations 4
Cbc0038I Pass  76: suminf.    2.88195 (7) obj. -24.0391 iterations 1
Cbc0038I Pass  77: suminf.    2.94449 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  78: suminf.    5.53357 (19) obj. -24.0391 iterations 23
Cbc0038I Pass  79: suminf.    3.15035 (12) obj. -24.0391 iterations 11
Cbc0038I Pass  80: suminf.    3.94806 (14) obj. -24.0391 iterations 20
Cbc0038I Pass  81: suminf.    3.75130 (10) obj. -24.0391 iterations 11
Cbc0038I Pass  82: suminf.    1.64620 (7) obj. -24.0391 iterations 7
Cbc0038I Pass  83: suminf.    1.46150 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  84: suminf.    2.94449 (7) obj. -24.0391 iterations 8
Cbc0038I Pass  85: suminf.    2.99361 (8) obj. -24.0391 iterations 4
Cbc0038I Pass  86: suminf.    2.88195 (7) obj. -24.0391 iterations 1
Cbc0038I Pass  87: suminf.    2.94449 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  88: suminf.    4.67129 (13) obj. -24.0391 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -11.9145 - took 0.21 seconds
Cbc0012I Integer solution of -11.914523 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 83 rows 47 columns
Cbc0031I 23 added rows had average density of 60.434783
Cbc0013I At root node, 23 cuts changed objective from -41.282106 to -34.168112 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11186 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2072 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.914523 best solution, best possible -34.168112 (0.92 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 64 rows 39 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 68 rows 42 columns
Cbc0001I Search completed - best objective -11.914523, took 10792 iterations and 132 nodes (1.40 seconds)
Cbc0032I Strong branching done 1458 times (23724 iterations), fathomed 12 nodes and fixed 28 variables
Cbc0035I Maximum depth 34, 299 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 113 (-39) columns and 1920 (-1383) elements
Clp1000I sum of infeasibilities 1.64762e-07 - average 1.61532e-09, 64 fixed columns
Coin0506I Presolve 40 (-62) rows, 49 (-64) columns and 172 (-1748) elements
Clp0006I 0  Obj 11.142315 Dual inf 36.568164 (49)
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 0.32922978 - largest nonzero change 1.7908692e-05 ( 0.0015380202%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 11.522032
Clp0000I Optimal - objective value 11.522032
Coin0511I After Postsolve, objective 11.522032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 11.522032 Dual inf 43.340799 (38)
Clp0014I Perturbing problem by 0.001% of 1.6073438 - largest nonzero change 2.170409e-05 ( 0.001737495%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 58.680721
Clp0000I Optimal - objective value 58.680721
Clp0000I Optimal - objective value 58.680721
Coin0511I After Postsolve, objective 58.680721, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.68072104 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 114 columns (114 integer (114 of which binary)) and 1925 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.849%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.30749
Cbc0038I Pass   1: suminf.    1.28936 (33) obj. -24.0592 iterations 17
Cbc0038I Pass   2: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass   3: suminf.    0.68723 (22) obj. -6.10693 iterations 11
Cbc0038I Solution found of 21.9948
Cbc0038I Rounding solution of 10.121 is better than previous of 21.9948

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 10.121 to -9.17205 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.8586
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass   5: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass   6: suminf.    0.86250 (26) obj. -13.8586 iterations 13
Cbc0038I Pass   7: suminf.    0.86250 (26) obj. -13.8586 iterations 0
Cbc0038I Pass   8: suminf.    1.06013 (4) obj. -13.8586 iterations 30
Cbc0038I Pass   9: suminf.    0.84324 (3) obj. -15.1575 iterations 3
Cbc0038I Pass  10: suminf.    0.70115 (2) obj. -13.8586 iterations 5
Cbc0038I Pass  11: suminf.    0.70115 (2) obj. -13.8586 iterations 3
Cbc0038I Pass  12: suminf.    0.56529 (2) obj. -13.8586 iterations 5
Cbc0038I Pass  13: suminf.    1.79362 (12) obj. -18.8001 iterations 30
Cbc0038I Pass  14: suminf.    1.24456 (11) obj. -15.4961 iterations 7
Cbc0038I Pass  15: suminf.    1.02060 (6) obj. -13.8586 iterations 16
Cbc0038I Pass  16: suminf.    0.74804 (7) obj. -13.8586 iterations 4
Cbc0038I Pass  17: suminf.    1.20070 (5) obj. -13.8586 iterations 10
Cbc0038I Pass  18: suminf.    0.77768 (5) obj. -13.8586 iterations 4
Cbc0038I Pass  19: suminf.    0.93793 (2) obj. -13.8586 iterations 13
Cbc0038I Pass  20: suminf.    0.93793 (2) obj. -13.8586 iterations 2
Cbc0038I Pass  21: suminf.    0.41553 (2) obj. -16.2827 iterations 5
Cbc0038I Pass  22: suminf.    0.77902 (3) obj. -13.8586 iterations 4
Cbc0038I Pass  23: suminf.    0.57882 (3) obj. -13.8586 iterations 7
Cbc0038I Pass  24: suminf.    0.14529 (2) obj. -13.8586 iterations 11
Cbc0038I Pass  25: suminf.    0.10959 (1) obj. -14.193 iterations 2
Cbc0038I Pass  26: suminf.    0.62479 (2) obj. -13.8586 iterations 3
Cbc0038I Pass  27: suminf.    0.47162 (2) obj. -16.948 iterations 3
Cbc0038I Pass  28: suminf.    2.38638 (13) obj. -13.8586 iterations 34
Cbc0038I Pass  29: suminf.    1.86009 (9) obj. -13.8586 iterations 13
Cbc0038I Pass  30: suminf.    0.80264 (3) obj. -13.8586 iterations 15
Cbc0038I Pass  31: suminf.    0.76136 (2) obj. -13.8586 iterations 6
Cbc0038I Pass  32: suminf.    0.10959 (1) obj. -14.193 iterations 11
Cbc0038I Pass  33: suminf.    0.62479 (2) obj. -13.8586 iterations 2
Cbc0038I Rounding solution of -10.9533 is better than previous of -9.17205

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -22.2942
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass  34: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass  35: suminf.    1.93376 (18) obj. -22.2942 iterations 23
Cbc0038I Pass  36: suminf.    1.58813 (17) obj. -24.7805 iterations 2
Cbc0038I Pass  37: suminf.    1.04235 (6) obj. -22.2942 iterations 20
Cbc0038I Pass  38: suminf.    1.03145 (6) obj. -22.316 iterations 3
Cbc0038I Pass  39: suminf.    1.66289 (7) obj. -22.2942 iterations 10
Cbc0038I Pass  40: suminf.    1.23022 (8) obj. -22.2942 iterations 1
Cbc0038I Pass  41: suminf.    1.24087 (6) obj. -22.2942 iterations 8
Cbc0038I Pass  42: suminf.    0.88802 (5) obj. -22.2942 iterations 5
Cbc0038I Pass  43: suminf.    1.31293 (5) obj. -22.2942 iterations 4
Cbc0038I Pass  44: suminf.    1.31293 (5) obj. -22.2942 iterations 0
Cbc0038I Pass  45: suminf.    0.88802 (5) obj. -22.2942 iterations 1
Cbc0038I Pass  46: suminf.    5.88776 (19) obj. -22.2942 iterations 22
Cbc0038I Pass  47: suminf.    1.68289 (9) obj. -23.6121 iterations 12
Cbc0038I Pass  48: suminf.    1.46227 (6) obj. -22.2942 iterations 11
Cbc0038I Pass  49: suminf.    1.30154 (6) obj. -22.6156 iterations 4
Cbc0038I Pass  50: suminf.    1.93547 (15) obj. -22.2942 iterations 17
Cbc0038I Pass  51: suminf.    1.26923 (11) obj. -22.5777 iterations 8
Cbc0038I Pass  52: suminf.    1.53262 (8) obj. -22.2942 iterations 18
Cbc0038I Pass  53: suminf.    1.36542 (9) obj. -22.2942 iterations 6
Cbc0038I Pass  54: suminf.    1.24087 (6) obj. -22.2942 iterations 8
Cbc0038I Pass  55: suminf.    0.88802 (5) obj. -22.2942 iterations 6
Cbc0038I Pass  56: suminf.    1.31293 (5) obj. -22.2942 iterations 5
Cbc0038I Pass  57: suminf.    1.31293 (5) obj. -22.2942 iterations 1
Cbc0038I Pass  58: suminf.    0.88802 (5) obj. -22.2942 iterations 3
Cbc0038I Pass  59: suminf.    2.50382 (10) obj. -22.2942 iterations 18
Cbc0038I Pass  60: suminf.    1.82529 (9) obj. -22.2942 iterations 9
Cbc0038I Pass  61: suminf.    1.18307 (6) obj. -22.2942 iterations 7
Cbc0038I Pass  62: suminf.    0.76658 (5) obj. -22.2942 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 44 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -10.9533 - took 0.04 seconds
Cbc0012I Integer solution of -10.953333 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 2 rows 4 columns
Cbc0031I 52 added rows had average density of 34.384615
Cbc0013I At root node, 52 cuts changed objective from -56.036531 to -19.558037 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13565 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1468 row cuts average 109.4 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 563 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1948 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 464 row cuts average 53.4 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.953333 best solution, best possible -19.558037 (2.41 seconds)
Cbc0016I Integer solution of -11.914523 found by strong branching after 6224 iterations and 39 nodes (2.92 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -11.914523, took 6708 iterations and 52 nodes (2.95 seconds)
Cbc0032I Strong branching done 584 times (11930 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 22, 195 variables fixed on reduced cost
Total time (CPU seconds):       2.20   (Wallclock seconds):       2.96

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 0.000144654 - average 1.04068e-06, 8 fixed columns
Coin0506I Presolve 123 (-16) rows, 68 (-8) columns and 374 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 0.28419459 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Coin0511I After Postsolve, objective 41.282106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Coin0511I After Postsolve, objective 41.282106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.28210606 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 9.42899
Cbc0038I Solution found of 7.00749
Cbc0038I Relaxing continuous gives -2.89982
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -2.89982 to -7.06963 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.491
Cbc0038I Pass   1: suminf.    1.71795 (34) obj. -10.491 iterations 34
Cbc0038I Pass   2: suminf.    2.58218 (8) obj. -10.491 iterations 39
Cbc0038I Pass   3: suminf.    1.95673 (6) obj. -10.491 iterations 6
Cbc0038I Pass   4: suminf.    0.97050 (3) obj. -10.491 iterations 10
Cbc0038I Pass   5: suminf.    0.82736 (3) obj. -10.491 iterations 2
Cbc0038I Pass   6: suminf.    0.71340 (3) obj. -10.491 iterations 5
Cbc0038I Pass   7: suminf.    0.71340 (3) obj. -10.491 iterations 0
Cbc0038I Pass   8: suminf.    0.90664 (4) obj. -10.491 iterations 2
Cbc0038I Pass   9: suminf.    0.51787 (3) obj. -10.491 iterations 5
Cbc0038I Pass  10: suminf.    0.81437 (4) obj. -10.491 iterations 6
Cbc0038I Pass  11: suminf.    2.17114 (9) obj. -10.491 iterations 26
Cbc0038I Pass  12: suminf.    1.16295 (5) obj. -10.491 iterations 15
Cbc0038I Pass  13: suminf.    1.47934 (4) obj. -10.491 iterations 8
Cbc0038I Pass  14: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  15: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  16: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  17: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  18: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  19: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  20: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  21: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  22: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  23: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  24: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  25: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  26: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  27: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  28: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  29: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  30: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Rounding solution of -7.98744 is better than previous of -7.06963

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -16.6492
Cbc0038I Pass  30: suminf.    3.11161 (34) obj. -16.6492 iterations 0
Cbc0038I Pass  31: suminf.    4.01482 (11) obj. -16.6492 iterations 38
Cbc0038I Pass  32: suminf.    2.89098 (7) obj. -16.6492 iterations 9
Cbc0038I Pass  33: suminf.    2.73453 (9) obj. -16.6492 iterations 3
Cbc0038I Pass  34: suminf.    2.37034 (7) obj. -16.6492 iterations 6
Cbc0038I Pass  35: suminf.    2.43344 (6) obj. -16.6492 iterations 7
Cbc0038I Pass  36: suminf.    2.23197 (9) obj. -16.6492 iterations 5
Cbc0038I Pass  37: suminf.    2.32238 (7) obj. -16.6492 iterations 13
Cbc0038I Pass  38: suminf.    2.06672 (6) obj. -16.6492 iterations 1
Cbc0038I Pass  39: suminf.    2.05540 (9) obj. -16.6492 iterations 11
Cbc0038I Pass  40: suminf.    1.45777 (5) obj. -16.6492 iterations 12
Cbc0038I Pass  41: suminf.    1.45777 (5) obj. -16.6492 iterations 0
Cbc0038I Pass  42: suminf.    1.43340 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  43: suminf.    1.36029 (6) obj. -16.6492 iterations 1
Cbc0038I Pass  44: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  45: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  46: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  47: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  48: suminf.    1.36029 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  49: suminf.    1.36029 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  50: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  51: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  52: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  53: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  54: suminf.    1.36029 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  55: suminf.    1.36029 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  56: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  57: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  58: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  59: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -7.98744 to -11.9145 (0.17 seconds)
Cbc0038I Round again with cutoff of -24.0391
Cbc0038I Pass  59: suminf.    4.78400 (34) obj. -24.0391 iterations 0
Cbc0038I Pass  60: suminf.    3.48761 (12) obj. -24.0391 iterations 39
Cbc0038I Pass  61: suminf.    2.15302 (7) obj. -24.0391 iterations 12
Cbc0038I Pass  62: suminf.    2.68943 (7) obj. -24.0391 iterations 6
Cbc0038I Pass  63: suminf.    2.54808 (7) obj. -24.0391 iterations 5
Cbc0038I Pass  64: suminf.    2.40877 (10) obj. -24.0391 iterations 5
Cbc0038I Pass  65: suminf.    3.16497 (10) obj. -24.0391 iterations 9
Cbc0038I Pass  66: suminf.    2.88348 (9) obj. -24.0391 iterations 1
Cbc0038I Pass  67: suminf.    3.03121 (12) obj. -24.0391 iterations 10
Cbc0038I Pass  68: suminf.    3.03121 (12) obj. -24.0391 iterations 0
Cbc0038I Pass  69: suminf.    3.29540 (10) obj. -24.0391 iterations 16
Cbc0038I Pass  70: suminf.    5.86324 (16) obj. -24.0391 iterations 24
Cbc0038I Pass  71: suminf.    4.92552 (15) obj. -24.0391 iterations 12
Cbc0038I Pass  72: suminf.    1.64620 (7) obj. -24.0391 iterations 15
Cbc0038I Pass  73: suminf.    1.46150 (7) obj. -24.0391 iterations 3
Cbc0038I Pass  74: suminf.    2.94449 (7) obj. -24.0391 iterations 7
Cbc0038I Pass  75: suminf.    2.99361 (8) obj. -24.0391 iterations 4
Cbc0038I Pass  76: suminf.    2.88195 (7) obj. -24.0391 iterations 1
Cbc0038I Pass  77: suminf.    2.94449 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  78: suminf.    5.53357 (19) obj. -24.0391 iterations 23
Cbc0038I Pass  79: suminf.    3.15035 (12) obj. -24.0391 iterations 11
Cbc0038I Pass  80: suminf.    3.94806 (14) obj. -24.0391 iterations 20
Cbc0038I Pass  81: suminf.    3.75130 (10) obj. -24.0391 iterations 11
Cbc0038I Pass  82: suminf.    1.64620 (7) obj. -24.0391 iterations 7
Cbc0038I Pass  83: suminf.    1.46150 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  84: suminf.    2.94449 (7) obj. -24.0391 iterations 8
Cbc0038I Pass  85: suminf.    2.99361 (8) obj. -24.0391 iterations 4
Cbc0038I Pass  86: suminf.    2.88195 (7) obj. -24.0391 iterations 1
Cbc0038I Pass  87: suminf.    2.94449 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  88: suminf.    4.67129 (13) obj. -24.0391 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -11.9145 - took 0.22 seconds
Cbc0012I Integer solution of -11.914523 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 83 rows 47 columns
Cbc0031I 23 added rows had average density of 60.434783
Cbc0013I At root node, 23 cuts changed objective from -41.282106 to -34.168112 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11186 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2072 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.914523 best solution, best possible -34.168112 (1.02 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 64 rows 39 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 68 rows 42 columns
Cbc0001I Search completed - best objective -11.914523, took 10792 iterations and 132 nodes (1.57 seconds)
Cbc0032I Strong branching done 1458 times (23724 iterations), fathomed 12 nodes and fixed 28 variables
Cbc0035I Maximum depth 34, 299 variables fixed on reduced cost
Total time (CPU seconds):       1.50   (Wallclock seconds):       1.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 113 (-40) columns and 1920 (-1384) elements
Clp1000I sum of infeasibilities 1.64762e-07 - average 1.61532e-09, 64 fixed columns
Coin0506I Presolve 40 (-62) rows, 49 (-64) columns and 172 (-1748) elements
Clp0006I 0  Obj 11.142315 Dual inf 36.568164 (49)
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 0.32922978 - largest nonzero change 1.7908692e-05 ( 0.0015380202%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 11.522032
Clp0000I Optimal - objective value 11.522032
Coin0511I After Postsolve, objective 11.522032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 11.522032 Dual inf 43.340799 (38)
Clp0014I Perturbing problem by 0.001% of 1.6073438 - largest nonzero change 2.170409e-05 ( 0.001737495%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 58.680721
Clp0000I Optimal - objective value 58.680721
Clp0000I Optimal - objective value 58.680721
Coin0511I After Postsolve, objective 58.680721, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.68072104 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 114 columns (114 integer (114 of which binary)) and 1925 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.849%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.30749
Cbc0038I Pass   1: suminf.    1.28936 (33) obj. -24.0592 iterations 17
Cbc0038I Pass   2: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass   3: suminf.    0.68723 (22) obj. -6.10693 iterations 11
Cbc0038I Solution found of 21.9948
Cbc0038I Rounding solution of 10.121 is better than previous of 21.9948

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 10.121 to -9.17205 (0.02 seconds)
Cbc0038I Round again with cutoff of -13.8586
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass   5: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass   6: suminf.    0.86250 (26) obj. -13.8586 iterations 13
Cbc0038I Pass   7: suminf.    0.86250 (26) obj. -13.8586 iterations 0
Cbc0038I Pass   8: suminf.    1.06013 (4) obj. -13.8586 iterations 30
Cbc0038I Pass   9: suminf.    0.84324 (3) obj. -15.1575 iterations 3
Cbc0038I Pass  10: suminf.    0.70115 (2) obj. -13.8586 iterations 5
Cbc0038I Pass  11: suminf.    0.70115 (2) obj. -13.8586 iterations 3
Cbc0038I Pass  12: suminf.    0.56529 (2) obj. -13.8586 iterations 5
Cbc0038I Pass  13: suminf.    1.79362 (12) obj. -18.8001 iterations 30
Cbc0038I Pass  14: suminf.    1.24456 (11) obj. -15.4961 iterations 7
Cbc0038I Pass  15: suminf.    1.02060 (6) obj. -13.8586 iterations 16
Cbc0038I Pass  16: suminf.    0.74804 (7) obj. -13.8586 iterations 4
Cbc0038I Pass  17: suminf.    1.20070 (5) obj. -13.8586 iterations 10
Cbc0038I Pass  18: suminf.    0.77768 (5) obj. -13.8586 iterations 4
Cbc0038I Pass  19: suminf.    0.93793 (2) obj. -13.8586 iterations 13
Cbc0038I Pass  20: suminf.    0.93793 (2) obj. -13.8586 iterations 2
Cbc0038I Pass  21: suminf.    0.41553 (2) obj. -16.2827 iterations 5
Cbc0038I Pass  22: suminf.    0.77902 (3) obj. -13.8586 iterations 4
Cbc0038I Pass  23: suminf.    0.57882 (3) obj. -13.8586 iterations 7
Cbc0038I Pass  24: suminf.    0.14529 (2) obj. -13.8586 iterations 11
Cbc0038I Pass  25: suminf.    0.10959 (1) obj. -14.193 iterations 2
Cbc0038I Pass  26: suminf.    0.62479 (2) obj. -13.8586 iterations 3
Cbc0038I Pass  27: suminf.    0.47162 (2) obj. -16.948 iterations 3
Cbc0038I Pass  28: suminf.    2.38638 (13) obj. -13.8586 iterations 34
Cbc0038I Pass  29: suminf.    1.86009 (9) obj. -13.8586 iterations 13
Cbc0038I Pass  30: suminf.    0.80264 (3) obj. -13.8586 iterations 15
Cbc0038I Pass  31: suminf.    0.76136 (2) obj. -13.8586 iterations 6
Cbc0038I Pass  32: suminf.    0.10959 (1) obj. -14.193 iterations 11
Cbc0038I Pass  33: suminf.    0.62479 (2) obj. -13.8586 iterations 2
Cbc0038I Rounding solution of -10.9533 is better than previous of -9.17205

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -22.2942
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass  34: suminf.    1.28936 (33) obj. -24.0592 iterations 0
Cbc0038I Pass  35: suminf.    1.93376 (18) obj. -22.2942 iterations 23
Cbc0038I Pass  36: suminf.    1.58813 (17) obj. -24.7805 iterations 2
Cbc0038I Pass  37: suminf.    1.04235 (6) obj. -22.2942 iterations 20
Cbc0038I Pass  38: suminf.    1.03145 (6) obj. -22.316 iterations 3
Cbc0038I Pass  39: suminf.    1.66289 (7) obj. -22.2942 iterations 10
Cbc0038I Pass  40: suminf.    1.23022 (8) obj. -22.2942 iterations 1
Cbc0038I Pass  41: suminf.    1.24087 (6) obj. -22.2942 iterations 8
Cbc0038I Pass  42: suminf.    0.88802 (5) obj. -22.2942 iterations 5
Cbc0038I Pass  43: suminf.    1.31293 (5) obj. -22.2942 iterations 4
Cbc0038I Pass  44: suminf.    1.31293 (5) obj. -22.2942 iterations 0
Cbc0038I Pass  45: suminf.    0.88802 (5) obj. -22.2942 iterations 1
Cbc0038I Pass  46: suminf.    5.88776 (19) obj. -22.2942 iterations 22
Cbc0038I Pass  47: suminf.    1.68289 (9) obj. -23.6121 iterations 12
Cbc0038I Pass  48: suminf.    1.46227 (6) obj. -22.2942 iterations 11
Cbc0038I Pass  49: suminf.    1.30154 (6) obj. -22.6156 iterations 4
Cbc0038I Pass  50: suminf.    1.93547 (15) obj. -22.2942 iterations 17
Cbc0038I Pass  51: suminf.    1.26923 (11) obj. -22.5777 iterations 8
Cbc0038I Pass  52: suminf.    1.53262 (8) obj. -22.2942 iterations 18
Cbc0038I Pass  53: suminf.    1.36542 (9) obj. -22.2942 iterations 6
Cbc0038I Pass  54: suminf.    1.24087 (6) obj. -22.2942 iterations 8
Cbc0038I Pass  55: suminf.    0.88802 (5) obj. -22.2942 iterations 6
Cbc0038I Pass  56: suminf.    1.31293 (5) obj. -22.2942 iterations 5
Cbc0038I Pass  57: suminf.    1.31293 (5) obj. -22.2942 iterations 1
Cbc0038I Pass  58: suminf.    0.88802 (5) obj. -22.2942 iterations 3
Cbc0038I Pass  59: suminf.    2.50382 (10) obj. -22.2942 iterations 18
Cbc0038I Pass  60: suminf.    1.82529 (9) obj. -22.2942 iterations 9
Cbc0038I Pass  61: suminf.    1.18307 (6) obj. -22.2942 iterations 7
Cbc0038I Pass  62: suminf.    0.76658 (5) obj. -22.2942 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 44 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -10.9533 - took 0.04 seconds
Cbc0012I Integer solution of -10.953333 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 2 rows 4 columns
Cbc0031I 52 added rows had average density of 34.384615
Cbc0013I At root node, 52 cuts changed objective from -56.036531 to -19.558037 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13565 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1468 row cuts average 109.4 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 563 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1948 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 464 row cuts average 53.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.698 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.953333 best solution, best possible -19.558037 (2.61 seconds)
Cbc0016I Integer solution of -11.914523 found by strong branching after 6224 iterations and 39 nodes (3.19 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -11.914523, took 6708 iterations and 52 nodes (3.22 seconds)
Cbc0032I Strong branching done 584 times (11930 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 22, 195 variables fixed on reduced cost
Total time (CPU seconds):       2.38   (Wallclock seconds):       3.23

