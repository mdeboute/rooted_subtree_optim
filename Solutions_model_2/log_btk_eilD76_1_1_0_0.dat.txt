Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 76 (-2) columns and 424 (-29) elements
Clp1000I sum of infeasibilities 3.91584e-05 - average 2.79703e-07, 8 fixed columns
Coin0506I Presolve 125 (-15) rows, 68 (-8) columns and 378 (-46) elements
Clp0029I End of values pass after 68 iterations
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Coin0511I After Postsolve, objective 39.343214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31000733 - largest nonzero change 0 ( 0%) - largest zero change 2.8648561e-05
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Coin0511I After Postsolve, objective 39.343214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.34321364 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 76 columns (75 integer (75 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 10.5653
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.37652 iterations 63
Cbc0038I Solution found of 5.37652
Cbc0038I Relaxing continuous gives 5.37652
Cbc0038I Rounding solution of 2.09835 is better than previous of 5.37652

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 92 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 2.09835 to -11.5246 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.3066
Cbc0038I Pass   2: suminf.    3.00839 (24) obj. -14.3066 iterations 30
Cbc0038I Pass   3: suminf.    2.73611 (23) obj. -14.3066 iterations 3
Cbc0038I Pass   4: suminf.    1.71876 (7) obj. -14.3066 iterations 25
Cbc0038I Pass   5: suminf.    1.71876 (7) obj. -14.3066 iterations 1
Cbc0038I Pass   6: suminf.    2.25737 (10) obj. -14.3066 iterations 13
Cbc0038I Pass   7: suminf.    2.19168 (7) obj. -14.3066 iterations 2
Cbc0038I Pass   8: suminf.    2.26151 (6) obj. -14.3066 iterations 13
Cbc0038I Pass   9: suminf.    2.20512 (6) obj. -14.3066 iterations 1
Cbc0038I Pass  10: suminf.    2.20512 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  11: suminf.    2.44068 (8) obj. -14.3066 iterations 7
Cbc0038I Pass  12: suminf.    2.44068 (8) obj. -14.3066 iterations 0
Cbc0038I Pass  13: suminf.    2.63033 (7) obj. -14.3066 iterations 7
Cbc0038I Pass  14: suminf.    2.63033 (7) obj. -14.3066 iterations 0
Cbc0038I Pass  15: suminf.    1.48110 (5) obj. -14.3066 iterations 9
Cbc0038I Pass  16: suminf.    1.48110 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  17: suminf.    1.76414 (5) obj. -14.3066 iterations 4
Cbc0038I Pass  18: suminf.    1.76414 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  19: suminf.    1.65153 (5) obj. -14.3066 iterations 7
Cbc0038I Pass  20: suminf.    2.84271 (10) obj. -14.3066 iterations 19
Cbc0038I Pass  21: suminf.    2.15774 (9) obj. -14.3066 iterations 6
Cbc0038I Pass  22: suminf.    1.69032 (6) obj. -14.3066 iterations 14
Cbc0038I Pass  23: suminf.    1.69032 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  24: suminf.    2.23304 (6) obj. -14.3066 iterations 6
Cbc0038I Pass  25: suminf.    1.91173 (5) obj. -14.3066 iterations 1
Cbc0038I Pass  26: suminf.    1.91173 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  27: suminf.    1.69032 (6) obj. -14.3066 iterations 8
Cbc0038I Pass  28: suminf.    1.69032 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  29: suminf.    2.23304 (6) obj. -14.3066 iterations 6
Cbc0038I Pass  30: suminf.    1.91173 (5) obj. -14.3066 iterations 1
Cbc0038I Pass  31: suminf.    1.91173 (5) obj. -14.3066 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 101 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -11.5246 to -12.8301 (0.14 seconds)
Cbc0038I Round again with cutoff of -19.3139
Cbc0038I Pass  31: suminf.    4.20056 (32) obj. -19.3139 iterations 7
Cbc0038I Pass  32: suminf.    3.95629 (33) obj. -19.3139 iterations 6
Cbc0038I Pass  33: suminf.    2.49546 (7) obj. -19.3139 iterations 33
Cbc0038I Pass  34: suminf.    1.88292 (8) obj. -19.3139 iterations 2
Cbc0038I Pass  35: suminf.    1.14479 (5) obj. -19.3139 iterations 8
Cbc0038I Pass  36: suminf.    1.08731 (5) obj. -19.3139 iterations 1
Cbc0038I Pass  37: suminf.    1.67428 (6) obj. -19.3139 iterations 4
Cbc0038I Pass  38: suminf.    1.64339 (6) obj. -19.3139 iterations 1
Cbc0038I Pass  39: suminf.    1.12889 (4) obj. -19.3139 iterations 3
Cbc0038I Pass  40: suminf.    6.29717 (16) obj. -19.3139 iterations 20
Cbc0038I Pass  41: suminf.    1.79681 (7) obj. -19.3139 iterations 14
Cbc0038I Pass  42: suminf.    2.38169 (9) obj. -19.3139 iterations 16
Cbc0038I Pass  43: suminf.    2.37937 (8) obj. -19.3139 iterations 1
Cbc0038I Pass  44: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  45: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  46: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  47: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  48: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  49: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  50: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  51: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  52: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  53: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  54: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  55: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  56: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  57: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  58: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  59: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  60: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 110 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -12.8301 - took 0.16 seconds
Cbc0012I Integer solution of -12.83015 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 96 rows 57 columns
Cbc0012I Integer solution of -14.03339 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 31 added rows had average density of 38.612903
Cbc0013I At root node, 31 cuts changed objective from -39.343214 to -32.362967 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18167 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3027 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 302 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.03339 best solution, best possible -32.362967 (1.36 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 34 rows 22 columns
Cbc0012I Integer solution of -14.32851 found by RINS after 10875 iterations and 43 nodes (1.63 seconds)
Cbc0001I Search completed - best objective -14.32850999999999, took 12270 iterations and 80 nodes (1.71 seconds)
Cbc0032I Strong branching done 940 times (19042 iterations), fathomed 6 nodes and fixed 11 variables
Cbc0035I Maximum depth 28, 67 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       1.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 114 (-38) columns and 1800 (-1503) elements
Clp1000I sum of infeasibilities 2.42896e-07 - average 2.33554e-09, 56 fixed columns
Coin0506I Presolve 49 (-55) rows, 58 (-56) columns and 208 (-1592) elements
Clp0006I 0  Obj -6.7927823 Dual inf 2.5461365 (58)
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 1.7897417 - largest nonzero change 2.0627582e-05 ( 0.0010393299%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value -5.3864521
Clp0000I Optimal - objective value -5.3864521
Coin0511I After Postsolve, objective -5.3864521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -5.3864521 Dual inf 64.898793 (39)
Clp0014I Perturbing problem by 0.001% of 1.7257442 - largest nonzero change 2.997109e-05 ( 0.0024275985%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 52.142087
Clp0000I Optimal - objective value 52.142087
Clp0000I Optimal - objective value 52.142087
Coin0511I After Postsolve, objective 52.142087, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.14208701 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 114 columns (114 integer (114 of which binary)) and 1802 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 6.53397
Cbc0038I Pass   1: suminf.    2.85358 (31) obj. -41.7443 iterations 20
Cbc0038I Pass   2: suminf.    2.85358 (31) obj. -41.7443 iterations 2
Cbc0038I Pass   3: suminf.    0.86440 (15) obj. -16.3781 iterations 13
Cbc0038I Solution found of 2.46126
Cbc0038I Rounding solution of 0.882616 is better than previous of 2.46126

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 0.882616 to -1.27774 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.9556
Cbc0038I Pass   4: suminf.    2.85358 (31) obj. -41.7443 iterations 0
Cbc0038I Pass   5: suminf.    2.85358 (31) obj. -41.7443 iterations 1
Cbc0038I Pass   6: suminf.    0.93337 (16) obj. -17.3092 iterations 13
Cbc0038I Pass   7: suminf.    0.77182 (7) obj. -5.9556 iterations 22
Cbc0038I Pass   8: suminf.    0.75519 (8) obj. -5.9556 iterations 3
Cbc0038I Pass   9: suminf.    1.38732 (8) obj. -5.9556 iterations 7
Cbc0038I Pass  10: suminf.    1.38732 (8) obj. -5.9556 iterations 0
Cbc0038I Pass  11: suminf.    1.38679 (4) obj. -5.9556 iterations 7
Cbc0038I Pass  12: suminf.    1.22672 (4) obj. -6.75599 iterations 1
Cbc0038I Pass  13: suminf.    1.38679 (4) obj. -5.9556 iterations 3
Cbc0038I Pass  14: suminf.    1.29767 (10) obj. -6.03765 iterations 25
Cbc0038I Pass  15: suminf.    1.07902 (13) obj. -5.9556 iterations 6
Cbc0038I Pass  16: suminf.    0.63119 (4) obj. -5.9556 iterations 17
Cbc0038I Pass  17: suminf.    0.52772 (5) obj. -5.9556 iterations 2
Cbc0038I Pass  18: suminf.    0.74178 (5) obj. -5.9556 iterations 3
Cbc0038I Pass  19: suminf.    0.74178 (5) obj. -5.9556 iterations 0
Cbc0038I Pass  20: suminf.    0.52772 (5) obj. -5.9556 iterations 1
Cbc0038I Pass  21: suminf.    1.94441 (13) obj. -9.06711 iterations 42
Cbc0038I Pass  22: suminf.    1.94441 (13) obj. -9.06711 iterations 10
Cbc0038I Pass  23: suminf.    2.71808 (10) obj. -5.9556 iterations 22
Cbc0038I Pass  24: suminf.    2.41736 (9) obj. -5.9556 iterations 3
Cbc0038I Pass  25: suminf.    1.85482 (12) obj. -5.9556 iterations 1
Cbc0038I Pass  26: suminf.    1.30257 (7) obj. -5.9556 iterations 14
Cbc0038I Pass  27: suminf.    1.30057 (9) obj. -5.9556 iterations 5
Cbc0038I Pass  28: suminf.    1.22330 (5) obj. -5.9556 iterations 20
Cbc0038I Pass  29: suminf.    1.22330 (5) obj. -5.9556 iterations 0
Cbc0038I Pass  30: suminf.    1.47222 (4) obj. -5.9556 iterations 11
Cbc0038I Pass  31: suminf.    1.08883 (4) obj. -5.9556 iterations 1
Cbc0038I Pass  32: suminf.    1.47222 (4) obj. -5.9556 iterations 2
Cbc0038I Pass  33: suminf.    2.07272 (12) obj. -5.9556 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 21 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -1.27774 to -2.97588 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.3756
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.85358 (31) obj. -41.7443 iterations 0
Cbc0038I Pass  34: suminf.    2.85358 (31) obj. -41.7443 iterations 1
Cbc0038I Pass  35: suminf.    1.10993 (13) obj. -14.3756 iterations 26
Cbc0038I Pass  36: suminf.    0.98984 (13) obj. -14.976 iterations 2
Cbc0038I Pass  37: suminf.    1.23108 (9) obj. -14.3756 iterations 18
Cbc0038I Pass  38: suminf.    1.17367 (9) obj. -14.3756 iterations 1
Cbc0038I Pass  39: suminf.    1.80628 (7) obj. -14.3756 iterations 10
Cbc0038I Pass  40: suminf.    1.80628 (7) obj. -14.3756 iterations 0
Cbc0038I Pass  41: suminf.    2.35018 (7) obj. -14.3756 iterations 6
Cbc0038I Pass  42: suminf.    1.51670 (6) obj. -14.7408 iterations 2
Cbc0038I Pass  43: suminf.    1.46213 (6) obj. -14.3756 iterations 1
Cbc0038I Pass  44: suminf.    2.35018 (7) obj. -14.3756 iterations 3
Cbc0038I Pass  45: suminf.    1.68233 (11) obj. -14.3756 iterations 33
Cbc0038I Pass  46: suminf.    1.60127 (12) obj. -14.3756 iterations 10
Cbc0038I Pass  47: suminf.    1.56841 (8) obj. -14.3756 iterations 9
Cbc0038I Pass  48: suminf.    1.15733 (7) obj. -15.2196 iterations 3
Cbc0038I Pass  49: suminf.    1.43867 (7) obj. -14.3756 iterations 5
Cbc0038I Pass  50: suminf.    1.48762 (11) obj. -14.3756 iterations 22
Cbc0038I Pass  51: suminf.    1.48762 (11) obj. -14.3756 iterations 3
Cbc0038I Pass  52: suminf.    1.73344 (9) obj. -14.3756 iterations 13
Cbc0038I Pass  53: suminf.    1.73344 (9) obj. -14.3756 iterations 4
Cbc0038I Pass  54: suminf.    1.79615 (10) obj. -14.3756 iterations 5
Cbc0038I Pass  55: suminf.    1.69975 (9) obj. -14.3756 iterations 11
Cbc0038I Pass  56: suminf.    1.85749 (10) obj. -14.3756 iterations 5
Cbc0038I Pass  57: suminf.    2.55788 (13) obj. -14.3756 iterations 14
Cbc0038I Pass  58: suminf.    1.75246 (11) obj. -14.3756 iterations 5
Cbc0038I Pass  59: suminf.    1.59639 (11) obj. -16.8793 iterations 1
Cbc0038I Pass  60: suminf.    1.35816 (10) obj. -14.3756 iterations 10
Cbc0038I Pass  61: suminf.    1.34344 (9) obj. -14.3756 iterations 2
Cbc0038I Pass  62: suminf.    2.27838 (10) obj. -14.3756 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.97588 - took 0.06 seconds
Cbc0012I Integer solution of -2.9758842 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 15 rows 18 columns
Cbc0031I 61 added rows had average density of 48.754098
Cbc0013I At root node, 61 cuts changed objective from -48.055368 to -22.207799 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21986 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2021 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 546 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1635 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 383 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.572 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.9758842 best solution, best possible -22.207799 (2.73 seconds)
Cbc0012I Integer solution of -4.168352 found by rounding after 8143 iterations and 2 nodes (3.28 seconds)
Cbc0010I After 3 nodes, 4 on tree, -4.168352 best solution, best possible -22.207799 (3.67 seconds)
Cbc0012I Integer solution of -8.991052 found by rounding after 8678 iterations and 5 nodes (3.99 seconds)
Cbc0012I Integer solution of -9.48377 found by DiveCoefficient after 8762 iterations and 7 nodes (4.09 seconds)
Cbc0010I After 26 nodes, 16 on tree, -9.48377 best solution, best possible -22.207799 (4.38 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 30 rows 47 columns
Cbc0012I Integer solution of -12.25844 found by RINS after 10175 iterations and 43 nodes (4.61 seconds)
Cbc0004I Integer solution of -14.32851 found after 11268 iterations and 69 nodes (4.76 seconds)
Cbc0010I After 78 nodes, 5 on tree, -14.32851 best solution, best possible -22.207799 (5.21 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 50 rows 70 columns
Cbc0010I After 95 nodes, 5 on tree, -14.32851 best solution, best possible -22.207799 (5.93 seconds)
Cbc0010I After 105 nodes, 6 on tree, -14.32851 best solution, best possible -22.207799 (6.66 seconds)
Cbc0001I Search completed - best objective -14.32850999999999, took 15088 iterations and 136 nodes (7.12 seconds)
Cbc0032I Strong branching done 1712 times (27792 iterations), fathomed 7 nodes and fixed 9 variables
Cbc0035I Maximum depth 27, 98 variables fixed on reduced cost
Total time (CPU seconds):       6.32   (Wallclock seconds):       7.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 76 (-2) columns and 424 (-29) elements
Clp1000I sum of infeasibilities 3.91584e-05 - average 2.79703e-07, 8 fixed columns
Coin0506I Presolve 125 (-15) rows, 68 (-8) columns and 378 (-46) elements
Clp0029I End of values pass after 68 iterations
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Coin0511I After Postsolve, objective 39.343214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31000733 - largest nonzero change 0 ( 0%) - largest zero change 2.8648561e-05
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Coin0511I After Postsolve, objective 39.343214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.34321364 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 76 columns (75 integer (75 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 10.5653
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.37652 iterations 63
Cbc0038I Solution found of 5.37652
Cbc0038I Relaxing continuous gives 5.37652
Cbc0038I Rounding solution of 2.09835 is better than previous of 5.37652

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 92 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 2.09835 to -11.5246 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.3066
Cbc0038I Pass   2: suminf.    3.00839 (24) obj. -14.3066 iterations 30
Cbc0038I Pass   3: suminf.    2.73611 (23) obj. -14.3066 iterations 3
Cbc0038I Pass   4: suminf.    1.71876 (7) obj. -14.3066 iterations 25
Cbc0038I Pass   5: suminf.    1.71876 (7) obj. -14.3066 iterations 1
Cbc0038I Pass   6: suminf.    2.25737 (10) obj. -14.3066 iterations 13
Cbc0038I Pass   7: suminf.    2.19168 (7) obj. -14.3066 iterations 2
Cbc0038I Pass   8: suminf.    2.26151 (6) obj. -14.3066 iterations 13
Cbc0038I Pass   9: suminf.    2.20512 (6) obj. -14.3066 iterations 1
Cbc0038I Pass  10: suminf.    2.20512 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  11: suminf.    2.44068 (8) obj. -14.3066 iterations 7
Cbc0038I Pass  12: suminf.    2.44068 (8) obj. -14.3066 iterations 0
Cbc0038I Pass  13: suminf.    2.63033 (7) obj. -14.3066 iterations 7
Cbc0038I Pass  14: suminf.    2.63033 (7) obj. -14.3066 iterations 0
Cbc0038I Pass  15: suminf.    1.48110 (5) obj. -14.3066 iterations 9
Cbc0038I Pass  16: suminf.    1.48110 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  17: suminf.    1.76414 (5) obj. -14.3066 iterations 4
Cbc0038I Pass  18: suminf.    1.76414 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  19: suminf.    1.65153 (5) obj. -14.3066 iterations 7
Cbc0038I Pass  20: suminf.    2.84271 (10) obj. -14.3066 iterations 19
Cbc0038I Pass  21: suminf.    2.15774 (9) obj. -14.3066 iterations 6
Cbc0038I Pass  22: suminf.    1.69032 (6) obj. -14.3066 iterations 14
Cbc0038I Pass  23: suminf.    1.69032 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  24: suminf.    2.23304 (6) obj. -14.3066 iterations 6
Cbc0038I Pass  25: suminf.    1.91173 (5) obj. -14.3066 iterations 1
Cbc0038I Pass  26: suminf.    1.91173 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  27: suminf.    1.69032 (6) obj. -14.3066 iterations 8
Cbc0038I Pass  28: suminf.    1.69032 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  29: suminf.    2.23304 (6) obj. -14.3066 iterations 6
Cbc0038I Pass  30: suminf.    1.91173 (5) obj. -14.3066 iterations 1
Cbc0038I Pass  31: suminf.    1.91173 (5) obj. -14.3066 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 101 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -11.5246 to -12.8301 (0.13 seconds)
Cbc0038I Round again with cutoff of -19.3139
Cbc0038I Pass  31: suminf.    4.20056 (32) obj. -19.3139 iterations 7
Cbc0038I Pass  32: suminf.    3.95629 (33) obj. -19.3139 iterations 6
Cbc0038I Pass  33: suminf.    2.49546 (7) obj. -19.3139 iterations 33
Cbc0038I Pass  34: suminf.    1.88292 (8) obj. -19.3139 iterations 2
Cbc0038I Pass  35: suminf.    1.14479 (5) obj. -19.3139 iterations 8
Cbc0038I Pass  36: suminf.    1.08731 (5) obj. -19.3139 iterations 1
Cbc0038I Pass  37: suminf.    1.67428 (6) obj. -19.3139 iterations 4
Cbc0038I Pass  38: suminf.    1.64339 (6) obj. -19.3139 iterations 1
Cbc0038I Pass  39: suminf.    1.12889 (4) obj. -19.3139 iterations 3
Cbc0038I Pass  40: suminf.    6.29717 (16) obj. -19.3139 iterations 20
Cbc0038I Pass  41: suminf.    1.79681 (7) obj. -19.3139 iterations 14
Cbc0038I Pass  42: suminf.    2.38169 (9) obj. -19.3139 iterations 16
Cbc0038I Pass  43: suminf.    2.37937 (8) obj. -19.3139 iterations 1
Cbc0038I Pass  44: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  45: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  46: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  47: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  48: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  49: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  50: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  51: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  52: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  53: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  54: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  55: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  56: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  57: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  58: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  59: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  60: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 110 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -12.8301 - took 0.15 seconds
Cbc0012I Integer solution of -12.83015 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 96 rows 57 columns
Cbc0012I Integer solution of -14.03339 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 31 added rows had average density of 38.612903
Cbc0013I At root node, 31 cuts changed objective from -39.343214 to -32.362967 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18167 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3027 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 302 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.03339 best solution, best possible -32.362967 (1.31 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 34 rows 22 columns
Cbc0012I Integer solution of -14.32851 found by RINS after 10875 iterations and 43 nodes (1.58 seconds)
Cbc0001I Search completed - best objective -14.32850999999999, took 12270 iterations and 80 nodes (1.65 seconds)
Cbc0032I Strong branching done 940 times (19042 iterations), fathomed 6 nodes and fixed 11 variables
Cbc0035I Maximum depth 28, 67 variables fixed on reduced cost
Total time (CPU seconds):       1.62   (Wallclock seconds):       1.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 114 (-39) columns and 1800 (-1504) elements
Clp1000I sum of infeasibilities 2.42896e-07 - average 2.33554e-09, 56 fixed columns
Coin0506I Presolve 49 (-55) rows, 58 (-56) columns and 208 (-1592) elements
Clp0006I 0  Obj -6.7927823 Dual inf 2.5461365 (58)
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 1.7897417 - largest nonzero change 2.0627582e-05 ( 0.0010393299%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value -5.3864521
Clp0000I Optimal - objective value -5.3864521
Coin0511I After Postsolve, objective -5.3864521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -5.3864521 Dual inf 64.898793 (39)
Clp0014I Perturbing problem by 0.001% of 1.7257442 - largest nonzero change 2.997109e-05 ( 0.0024275985%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 52.142087
Clp0000I Optimal - objective value 52.142087
Clp0000I Optimal - objective value 52.142087
Coin0511I After Postsolve, objective 52.142087, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.14208701 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 114 columns (114 integer (114 of which binary)) and 1802 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 6.53397
Cbc0038I Pass   1: suminf.    2.85358 (31) obj. -41.7443 iterations 20
Cbc0038I Pass   2: suminf.    2.85358 (31) obj. -41.7443 iterations 2
Cbc0038I Pass   3: suminf.    0.86440 (15) obj. -16.3781 iterations 13
Cbc0038I Solution found of 2.46126
Cbc0038I Rounding solution of 0.882616 is better than previous of 2.46126

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 0.882616 to -1.27774 (0.02 seconds)
Cbc0038I Round again with cutoff of -5.9556
Cbc0038I Pass   4: suminf.    2.85358 (31) obj. -41.7443 iterations 0
Cbc0038I Pass   5: suminf.    2.85358 (31) obj. -41.7443 iterations 1
Cbc0038I Pass   6: suminf.    0.93337 (16) obj. -17.3092 iterations 13
Cbc0038I Pass   7: suminf.    0.77182 (7) obj. -5.9556 iterations 22
Cbc0038I Pass   8: suminf.    0.75519 (8) obj. -5.9556 iterations 3
Cbc0038I Pass   9: suminf.    1.38732 (8) obj. -5.9556 iterations 7
Cbc0038I Pass  10: suminf.    1.38732 (8) obj. -5.9556 iterations 0
Cbc0038I Pass  11: suminf.    1.38679 (4) obj. -5.9556 iterations 7
Cbc0038I Pass  12: suminf.    1.22672 (4) obj. -6.75599 iterations 1
Cbc0038I Pass  13: suminf.    1.38679 (4) obj. -5.9556 iterations 3
Cbc0038I Pass  14: suminf.    1.29767 (10) obj. -6.03765 iterations 25
Cbc0038I Pass  15: suminf.    1.07902 (13) obj. -5.9556 iterations 6
Cbc0038I Pass  16: suminf.    0.63119 (4) obj. -5.9556 iterations 17
Cbc0038I Pass  17: suminf.    0.52772 (5) obj. -5.9556 iterations 2
Cbc0038I Pass  18: suminf.    0.74178 (5) obj. -5.9556 iterations 3
Cbc0038I Pass  19: suminf.    0.74178 (5) obj. -5.9556 iterations 0
Cbc0038I Pass  20: suminf.    0.52772 (5) obj. -5.9556 iterations 1
Cbc0038I Pass  21: suminf.    1.94441 (13) obj. -9.06711 iterations 42
Cbc0038I Pass  22: suminf.    1.94441 (13) obj. -9.06711 iterations 10
Cbc0038I Pass  23: suminf.    2.71808 (10) obj. -5.9556 iterations 22
Cbc0038I Pass  24: suminf.    2.41736 (9) obj. -5.9556 iterations 3
Cbc0038I Pass  25: suminf.    1.85482 (12) obj. -5.9556 iterations 1
Cbc0038I Pass  26: suminf.    1.30257 (7) obj. -5.9556 iterations 14
Cbc0038I Pass  27: suminf.    1.30057 (9) obj. -5.9556 iterations 5
Cbc0038I Pass  28: suminf.    1.22330 (5) obj. -5.9556 iterations 20
Cbc0038I Pass  29: suminf.    1.22330 (5) obj. -5.9556 iterations 0
Cbc0038I Pass  30: suminf.    1.47222 (4) obj. -5.9556 iterations 11
Cbc0038I Pass  31: suminf.    1.08883 (4) obj. -5.9556 iterations 1
Cbc0038I Pass  32: suminf.    1.47222 (4) obj. -5.9556 iterations 2
Cbc0038I Pass  33: suminf.    2.07272 (12) obj. -5.9556 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 21 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -1.27774 to -2.97588 (0.05 seconds)
Cbc0038I Round again with cutoff of -14.3756
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.85358 (31) obj. -41.7443 iterations 0
Cbc0038I Pass  34: suminf.    2.85358 (31) obj. -41.7443 iterations 1
Cbc0038I Pass  35: suminf.    1.10993 (13) obj. -14.3756 iterations 26
Cbc0038I Pass  36: suminf.    0.98984 (13) obj. -14.976 iterations 2
Cbc0038I Pass  37: suminf.    1.23108 (9) obj. -14.3756 iterations 18
Cbc0038I Pass  38: suminf.    1.17367 (9) obj. -14.3756 iterations 1
Cbc0038I Pass  39: suminf.    1.80628 (7) obj. -14.3756 iterations 10
Cbc0038I Pass  40: suminf.    1.80628 (7) obj. -14.3756 iterations 0
Cbc0038I Pass  41: suminf.    2.35018 (7) obj. -14.3756 iterations 6
Cbc0038I Pass  42: suminf.    1.51670 (6) obj. -14.7408 iterations 2
Cbc0038I Pass  43: suminf.    1.46213 (6) obj. -14.3756 iterations 1
Cbc0038I Pass  44: suminf.    2.35018 (7) obj. -14.3756 iterations 3
Cbc0038I Pass  45: suminf.    1.68233 (11) obj. -14.3756 iterations 33
Cbc0038I Pass  46: suminf.    1.60127 (12) obj. -14.3756 iterations 10
Cbc0038I Pass  47: suminf.    1.56841 (8) obj. -14.3756 iterations 9
Cbc0038I Pass  48: suminf.    1.15733 (7) obj. -15.2196 iterations 3
Cbc0038I Pass  49: suminf.    1.43867 (7) obj. -14.3756 iterations 5
Cbc0038I Pass  50: suminf.    1.48762 (11) obj. -14.3756 iterations 22
Cbc0038I Pass  51: suminf.    1.48762 (11) obj. -14.3756 iterations 3
Cbc0038I Pass  52: suminf.    1.73344 (9) obj. -14.3756 iterations 13
Cbc0038I Pass  53: suminf.    1.73344 (9) obj. -14.3756 iterations 4
Cbc0038I Pass  54: suminf.    1.79615 (10) obj. -14.3756 iterations 5
Cbc0038I Pass  55: suminf.    1.69975 (9) obj. -14.3756 iterations 11
Cbc0038I Pass  56: suminf.    1.85749 (10) obj. -14.3756 iterations 5
Cbc0038I Pass  57: suminf.    2.55788 (13) obj. -14.3756 iterations 14
Cbc0038I Pass  58: suminf.    1.75246 (11) obj. -14.3756 iterations 5
Cbc0038I Pass  59: suminf.    1.59639 (11) obj. -16.8793 iterations 1
Cbc0038I Pass  60: suminf.    1.35816 (10) obj. -14.3756 iterations 10
Cbc0038I Pass  61: suminf.    1.34344 (9) obj. -14.3756 iterations 2
Cbc0038I Pass  62: suminf.    2.27838 (10) obj. -14.3756 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -2.97588 - took 0.06 seconds
Cbc0012I Integer solution of -2.9758842 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 15 rows 18 columns
Cbc0031I 61 added rows had average density of 48.754098
Cbc0013I At root node, 61 cuts changed objective from -48.055368 to -22.207799 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21986 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2021 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 546 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1635 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 383 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.552 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.9758842 best solution, best possible -22.207799 (2.61 seconds)
Cbc0012I Integer solution of -4.168352 found by rounding after 8143 iterations and 2 nodes (3.14 seconds)
Cbc0010I After 3 nodes, 4 on tree, -4.168352 best solution, best possible -22.207799 (3.54 seconds)
Cbc0012I Integer solution of -8.991052 found by rounding after 8678 iterations and 5 nodes (3.85 seconds)
Cbc0012I Integer solution of -9.48377 found by DiveCoefficient after 8762 iterations and 7 nodes (3.95 seconds)
Cbc0010I After 28 nodes, 18 on tree, -9.48377 best solution, best possible -22.207799 (4.24 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 30 rows 47 columns
Cbc0012I Integer solution of -12.25844 found by RINS after 10175 iterations and 43 nodes (4.45 seconds)
Cbc0004I Integer solution of -14.32851 found after 11268 iterations and 69 nodes (4.59 seconds)
Cbc0010I After 78 nodes, 5 on tree, -14.32851 best solution, best possible -22.207799 (5.05 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 50 rows 70 columns
Cbc0010I After 97 nodes, 4 on tree, -14.32851 best solution, best possible -22.207799 (5.92 seconds)
Cbc0010I After 119 nodes, 4 on tree, -14.32851 best solution, best possible -22.207799 (6.63 seconds)
Cbc0001I Search completed - best objective -14.32850999999999, took 15088 iterations and 136 nodes (6.91 seconds)
Cbc0032I Strong branching done 1712 times (27792 iterations), fathomed 7 nodes and fixed 9 variables
Cbc0035I Maximum depth 27, 98 variables fixed on reduced cost
Total time (CPU seconds):       6.15   (Wallclock seconds):       6.93

