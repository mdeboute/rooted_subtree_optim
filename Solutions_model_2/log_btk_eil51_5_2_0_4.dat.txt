Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-38) rows, 37 (-16) columns and 202 (-101) elements
Clp1000I sum of infeasibilities 4.014e-05 - average 5.99104e-07, 6 fixed columns
Coin0506I Presolve 56 (-11) rows, 31 (-6) columns and 168 (-34) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Coin0511I After Postsolve, objective 112.96051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Coin0511I After Postsolve, objective 112.96051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.9605091 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 67 rows, 37 columns (36 integer (36 of which binary)) and 202 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.45451
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -61.7946 iterations 14
Cbc0038I Solution found of -61.7946
Cbc0038I Relaxing continuous gives -61.7946
Cbc0038I Rounding solution of -67.0324 is better than previous of -61.7946

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -67.0324 to -82.4216 (0.01 seconds)
Cbc0038I Round again with cutoff of -85.4756
Cbc0038I Pass   2: suminf.    0.18689 (4) obj. -85.4756 iterations 5
Cbc0038I Pass   3: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass   4: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass   5: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass   6: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass   7: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass   8: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass   9: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  10: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  11: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  12: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  13: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  14: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  15: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  16: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  17: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  18: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  19: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  20: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  21: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  22: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  23: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  24: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  25: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  26: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  27: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  28: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  29: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  30: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  31: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -82.4216 - took 0.02 seconds
Cbc0012I Integer solution of -82.4216 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 67 rows 37 columns, reduced to 25 rows 16 columns
Cbc0031I 6 added rows had average density of 34
Cbc0013I At root node, 6 cuts changed objective from -112.96051 to -92.41581 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 605 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 391 row cuts average 33.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -82.4216, took 1295 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 66 times (441 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 63 (-41) rows, 68 (-34) columns and 786 (-792) elements
Clp1000I sum of infeasibilities 1.6673e-07 - average 2.64651e-09, 39 fixed columns
Coin0506I Presolve 25 (-38) rows, 29 (-39) columns and 104 (-682) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 2.0606412 - largest nonzero change 2.6609833e-05 ( 0.00091204228%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 79.339065
Clp0000I Optimal - objective value 79.339065
Coin0511I After Postsolve, objective 79.339065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.5144944 - largest nonzero change 1.836629e-05 ( 0.001836629%) - largest zero change 2.6211721e-05
Clp0000I Optimal - objective value 136.92493
Clp0000I Optimal - objective value 136.92493
Clp0000I Optimal - objective value 136.92493
Coin0511I After Postsolve, objective 136.92493, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.9249328 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 63 rows, 68 columns (68 integer (68 of which binary)) and 788 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.739%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.24377
Cbc0038I Pass   1: suminf.    3.10767 (20) obj. -114.54 iterations 19
Cbc0038I Pass   2: suminf.    3.10767 (20) obj. -114.54 iterations 1
Cbc0038I Pass   3: suminf.    1.17203 (9) obj. -90.1246 iterations 11
Cbc0038I Solution found of -81.4216
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 68 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -86.4033
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.10767 (20) obj. -114.54 iterations 0
Cbc0038I Pass   5: suminf.    3.10767 (20) obj. -114.54 iterations 1
Cbc0038I Pass   6: suminf.    0.38465 (12) obj. -86.4033 iterations 33
Cbc0038I Pass   7: suminf.    0.80102 (3) obj. -86.4033 iterations 17
Cbc0038I Pass   8: suminf.    0.80102 (3) obj. -86.4033 iterations 0
Cbc0038I Pass   9: suminf.    0.66968 (3) obj. -86.4033 iterations 3
Cbc0038I Pass  10: suminf.    0.54901 (3) obj. -88.7746 iterations 3
Cbc0038I Pass  11: suminf.    0.80102 (3) obj. -86.4033 iterations 5
Cbc0038I Pass  12: suminf.    1.57870 (12) obj. -86.4033 iterations 18
Cbc0038I Pass  13: suminf.    1.27205 (10) obj. -86.4033 iterations 2
Cbc0038I Pass  14: suminf.    0.87760 (4) obj. -86.4033 iterations 14
Cbc0038I Pass  15: suminf.    0.87760 (4) obj. -86.4033 iterations 0
Cbc0038I Pass  16: suminf.    0.86470 (4) obj. -86.4033 iterations 5
Cbc0038I Pass  17: suminf.    0.86470 (4) obj. -86.4033 iterations 3
Cbc0038I Pass  18: suminf.    0.87760 (4) obj. -86.4033 iterations 5
Cbc0038I Pass  19: suminf.    2.00467 (10) obj. -86.4033 iterations 9
Cbc0038I Pass  20: suminf.    2.00467 (10) obj. -86.4033 iterations 1
Cbc0038I Pass  21: suminf.    0.87760 (4) obj. -86.4033 iterations 11
Cbc0038I Pass  22: suminf.    0.87760 (4) obj. -86.4033 iterations 3
Cbc0038I Pass  23: suminf.    0.86470 (4) obj. -86.4033 iterations 5
Cbc0038I Pass  24: suminf.    0.86470 (4) obj. -86.4033 iterations 3
Cbc0038I Pass  25: suminf.    0.87760 (4) obj. -86.4033 iterations 5
Cbc0038I Pass  26: suminf.    1.80080 (13) obj. -86.4033 iterations 15
Cbc0038I Pass  27: suminf.    1.66591 (10) obj. -86.4033 iterations 5
Cbc0038I Pass  28: suminf.    0.59542 (3) obj. -86.4033 iterations 14
Cbc0038I Pass  29: suminf.    0.54901 (3) obj. -86.7746 iterations 4
Cbc0038I Pass  30: suminf.    0.59542 (3) obj. -86.4033 iterations 4
Cbc0038I Pass  31: suminf.    2.58416 (16) obj. -86.4033 iterations 18
Cbc0038I Pass  32: suminf.    1.90156 (11) obj. -86.4033 iterations 6
Cbc0038I Pass  33: suminf.    0.59542 (3) obj. -86.4033 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 68 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -81.4216 to -82.4216 (0.04 seconds)
Cbc0038I Round again with cutoff of -95.3703
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.10767 (20) obj. -114.54 iterations 0
Cbc0038I Pass  34: suminf.    3.10767 (20) obj. -114.54 iterations 1
Cbc0038I Pass  35: suminf.    1.32117 (11) obj. -95.3703 iterations 37
Cbc0038I Pass  36: suminf.    0.82674 (5) obj. -95.3703 iterations 18
Cbc0038I Pass  37: suminf.    0.82674 (5) obj. -95.3703 iterations 0
Cbc0038I Pass  38: suminf.    1.20680 (5) obj. -95.3703 iterations 8
Cbc0038I Pass  39: suminf.    1.20680 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  40: suminf.    0.82674 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  41: suminf.    2.36085 (10) obj. -95.3703 iterations 7
Cbc0038I Pass  42: suminf.    2.36085 (10) obj. -95.3703 iterations 3
Cbc0038I Pass  43: suminf.    0.82674 (5) obj. -95.3703 iterations 11
Cbc0038I Pass  44: suminf.    0.82674 (5) obj. -95.3703 iterations 3
Cbc0038I Pass  45: suminf.    1.20680 (5) obj. -95.3703 iterations 8
Cbc0038I Pass  46: suminf.    1.20680 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  47: suminf.    0.82674 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  48: suminf.    2.04440 (8) obj. -95.3703 iterations 12
Cbc0038I Pass  49: suminf.    1.44672 (8) obj. -95.3703 iterations 7
Cbc0038I Pass  50: suminf.    1.44672 (8) obj. -95.3703 iterations 3
Cbc0038I Pass  51: suminf.    0.82674 (5) obj. -95.3703 iterations 21
Cbc0038I Pass  52: suminf.    0.82674 (5) obj. -95.3703 iterations 0
Cbc0038I Pass  53: suminf.    1.20680 (5) obj. -95.3703 iterations 8
Cbc0038I Pass  54: suminf.    1.20680 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  55: suminf.    0.82674 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  56: suminf.    1.72977 (10) obj. -95.3703 iterations 15
Cbc0038I Pass  57: suminf.    1.51409 (9) obj. -95.3703 iterations 2
Cbc0038I Pass  58: suminf.    0.82674 (5) obj. -95.3703 iterations 11
Cbc0038I Pass  59: suminf.    0.82674 (5) obj. -95.3703 iterations 3
Cbc0038I Pass  60: suminf.    1.20680 (5) obj. -95.3703 iterations 8
Cbc0038I Pass  61: suminf.    1.20680 (5) obj. -95.3703 iterations 3
Cbc0038I Pass  62: suminf.    0.82674 (5) obj. -95.3703 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 68 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -82.4216 - took 0.03 seconds
Cbc0012I Integer solution of -82.4216 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 63 rows 68 columns, reduced to 16 rows 15 columns
Cbc0031I 19 added rows had average density of 21.105263
Cbc0013I At root node, 19 cuts changed objective from -131.23799 to -86.679917 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2416 row cuts average 4.7 elements, 20 column cuts (20 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 498 row cuts average 37.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 273 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 215 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 217 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.729 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -82.4216 best solution, best possible -86.679031 (1.58 seconds)
Cbc0001I Search completed - best objective -82.4216, took 2100 iterations and 6 nodes (1.99 seconds)
Cbc0032I Strong branching done 110 times (1235 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-38) rows, 37 (-16) columns and 202 (-101) elements
Clp1000I sum of infeasibilities 4.014e-05 - average 5.99104e-07, 6 fixed columns
Coin0506I Presolve 56 (-11) rows, 31 (-6) columns and 168 (-34) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Coin0511I After Postsolve, objective 112.96051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Coin0511I After Postsolve, objective 112.96051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.9605091 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 67 rows, 37 columns (36 integer (36 of which binary)) and 202 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.45451
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -61.7946 iterations 14
Cbc0038I Solution found of -61.7946
Cbc0038I Relaxing continuous gives -61.7946
Cbc0038I Rounding solution of -67.0324 is better than previous of -61.7946

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -67.0324 to -82.4216 (0.01 seconds)
Cbc0038I Round again with cutoff of -85.4756
Cbc0038I Pass   2: suminf.    0.18689 (4) obj. -85.4756 iterations 5
Cbc0038I Pass   3: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass   4: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass   5: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass   6: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass   7: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass   8: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass   9: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  10: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  11: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  12: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  13: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  14: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  15: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  16: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  17: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  18: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  19: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  20: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  21: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  22: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  23: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  24: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  25: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  26: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  27: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  28: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  29: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  30: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  31: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -82.4216 - took 0.01 seconds
Cbc0012I Integer solution of -82.4216 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 67 rows 37 columns, reduced to 25 rows 16 columns
Cbc0031I 6 added rows had average density of 34
Cbc0013I At root node, 6 cuts changed objective from -112.96051 to -92.41581 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 605 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 391 row cuts average 33.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -82.4216, took 1295 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 66 times (441 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 63 (-42) rows, 68 (-35) columns and 786 (-793) elements
Clp1000I sum of infeasibilities 1.6673e-07 - average 2.64651e-09, 39 fixed columns
Coin0506I Presolve 25 (-38) rows, 29 (-39) columns and 104 (-682) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 2.0606412 - largest nonzero change 2.6609833e-05 ( 0.00091204228%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 79.339065
Clp0000I Optimal - objective value 79.339065
Coin0511I After Postsolve, objective 79.339065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.5144944 - largest nonzero change 1.836629e-05 ( 0.001836629%) - largest zero change 2.6211721e-05
Clp0000I Optimal - objective value 136.92493
Clp0000I Optimal - objective value 136.92493
Clp0000I Optimal - objective value 136.92493
Coin0511I After Postsolve, objective 136.92493, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.9249328 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 63 rows, 68 columns (68 integer (68 of which binary)) and 788 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.739%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.24377
Cbc0038I Pass   1: suminf.    3.10767 (20) obj. -114.54 iterations 19
Cbc0038I Pass   2: suminf.    3.10767 (20) obj. -114.54 iterations 1
Cbc0038I Pass   3: suminf.    1.17203 (9) obj. -90.1246 iterations 11
Cbc0038I Solution found of -81.4216
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 68 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -86.4033
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.10767 (20) obj. -114.54 iterations 0
Cbc0038I Pass   5: suminf.    3.10767 (20) obj. -114.54 iterations 1
Cbc0038I Pass   6: suminf.    0.38465 (12) obj. -86.4033 iterations 33
Cbc0038I Pass   7: suminf.    0.80102 (3) obj. -86.4033 iterations 17
Cbc0038I Pass   8: suminf.    0.80102 (3) obj. -86.4033 iterations 0
Cbc0038I Pass   9: suminf.    0.66968 (3) obj. -86.4033 iterations 3
Cbc0038I Pass  10: suminf.    0.54901 (3) obj. -88.7746 iterations 3
Cbc0038I Pass  11: suminf.    0.80102 (3) obj. -86.4033 iterations 5
Cbc0038I Pass  12: suminf.    1.57870 (12) obj. -86.4033 iterations 18
Cbc0038I Pass  13: suminf.    1.27205 (10) obj. -86.4033 iterations 2
Cbc0038I Pass  14: suminf.    0.87760 (4) obj. -86.4033 iterations 14
Cbc0038I Pass  15: suminf.    0.87760 (4) obj. -86.4033 iterations 0
Cbc0038I Pass  16: suminf.    0.86470 (4) obj. -86.4033 iterations 5
Cbc0038I Pass  17: suminf.    0.86470 (4) obj. -86.4033 iterations 3
Cbc0038I Pass  18: suminf.    0.87760 (4) obj. -86.4033 iterations 5
Cbc0038I Pass  19: suminf.    2.00467 (10) obj. -86.4033 iterations 9
Cbc0038I Pass  20: suminf.    2.00467 (10) obj. -86.4033 iterations 1
Cbc0038I Pass  21: suminf.    0.87760 (4) obj. -86.4033 iterations 11
Cbc0038I Pass  22: suminf.    0.87760 (4) obj. -86.4033 iterations 3
Cbc0038I Pass  23: suminf.    0.86470 (4) obj. -86.4033 iterations 5
Cbc0038I Pass  24: suminf.    0.86470 (4) obj. -86.4033 iterations 3
Cbc0038I Pass  25: suminf.    0.87760 (4) obj. -86.4033 iterations 5
Cbc0038I Pass  26: suminf.    1.80080 (13) obj. -86.4033 iterations 15
Cbc0038I Pass  27: suminf.    1.66591 (10) obj. -86.4033 iterations 5
Cbc0038I Pass  28: suminf.    0.59542 (3) obj. -86.4033 iterations 14
Cbc0038I Pass  29: suminf.    0.54901 (3) obj. -86.7746 iterations 4
Cbc0038I Pass  30: suminf.    0.59542 (3) obj. -86.4033 iterations 4
Cbc0038I Pass  31: suminf.    2.58416 (16) obj. -86.4033 iterations 18
Cbc0038I Pass  32: suminf.    1.90156 (11) obj. -86.4033 iterations 6
Cbc0038I Pass  33: suminf.    0.59542 (3) obj. -86.4033 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 68 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -81.4216 to -82.4216 (0.04 seconds)
Cbc0038I Round again with cutoff of -95.3703
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.10767 (20) obj. -114.54 iterations 0
Cbc0038I Pass  34: suminf.    3.10767 (20) obj. -114.54 iterations 1
Cbc0038I Pass  35: suminf.    1.32117 (11) obj. -95.3703 iterations 37
Cbc0038I Pass  36: suminf.    0.82674 (5) obj. -95.3703 iterations 18
Cbc0038I Pass  37: suminf.    0.82674 (5) obj. -95.3703 iterations 0
Cbc0038I Pass  38: suminf.    1.20680 (5) obj. -95.3703 iterations 8
Cbc0038I Pass  39: suminf.    1.20680 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  40: suminf.    0.82674 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  41: suminf.    2.36085 (10) obj. -95.3703 iterations 7
Cbc0038I Pass  42: suminf.    2.36085 (10) obj. -95.3703 iterations 3
Cbc0038I Pass  43: suminf.    0.82674 (5) obj. -95.3703 iterations 11
Cbc0038I Pass  44: suminf.    0.82674 (5) obj. -95.3703 iterations 3
Cbc0038I Pass  45: suminf.    1.20680 (5) obj. -95.3703 iterations 8
Cbc0038I Pass  46: suminf.    1.20680 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  47: suminf.    0.82674 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  48: suminf.    2.04440 (8) obj. -95.3703 iterations 12
Cbc0038I Pass  49: suminf.    1.44672 (8) obj. -95.3703 iterations 7
Cbc0038I Pass  50: suminf.    1.44672 (8) obj. -95.3703 iterations 3
Cbc0038I Pass  51: suminf.    0.82674 (5) obj. -95.3703 iterations 21
Cbc0038I Pass  52: suminf.    0.82674 (5) obj. -95.3703 iterations 0
Cbc0038I Pass  53: suminf.    1.20680 (5) obj. -95.3703 iterations 8
Cbc0038I Pass  54: suminf.    1.20680 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  55: suminf.    0.82674 (5) obj. -95.3703 iterations 4
Cbc0038I Pass  56: suminf.    1.72977 (10) obj. -95.3703 iterations 15
Cbc0038I Pass  57: suminf.    1.51409 (9) obj. -95.3703 iterations 2
Cbc0038I Pass  58: suminf.    0.82674 (5) obj. -95.3703 iterations 11
Cbc0038I Pass  59: suminf.    0.82674 (5) obj. -95.3703 iterations 3
Cbc0038I Pass  60: suminf.    1.20680 (5) obj. -95.3703 iterations 8
Cbc0038I Pass  61: suminf.    1.20680 (5) obj. -95.3703 iterations 3
Cbc0038I Pass  62: suminf.    0.82674 (5) obj. -95.3703 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 68 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -82.4216 - took 0.03 seconds
Cbc0012I Integer solution of -82.4216 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 63 rows 68 columns, reduced to 16 rows 15 columns
Cbc0031I 19 added rows had average density of 21.105263
Cbc0013I At root node, 19 cuts changed objective from -131.23799 to -86.679917 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2416 row cuts average 4.7 elements, 20 column cuts (20 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 498 row cuts average 37.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 273 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 215 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 217 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.767 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -82.4216 best solution, best possible -86.679031 (1.65 seconds)
Cbc0001I Search completed - best objective -82.4216, took 2100 iterations and 6 nodes (2.09 seconds)
Cbc0032I Strong branching done 110 times (1235 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       2.10

