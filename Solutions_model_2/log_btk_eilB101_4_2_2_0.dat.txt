Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 98 (-5) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 1.6943e-05 - average 9.30934e-08, 15 fixed columns
Coin0506I Presolve 150 (-32) rows, 82 (-16) columns and 456 (-96) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 1.8583412 - largest nonzero change 0 ( 0%) - largest zero change 2.5857661e-05
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Coin0511I After Postsolve, objective 61.481016, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Coin0511I After Postsolve, objective 61.481016, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.48101558 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 98 columns (97 integer (97 of which binary)) and 565 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.031%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.35615
Cbc0038I Solution found of 5.87695
Cbc0038I Relaxing continuous gives -3.32142
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -3.32142 to -28.7375 (0.06 seconds)
Cbc0038I Round again with cutoff of -31.9585
Cbc0038I Pass   1: suminf.    2.77290 (23) obj. -31.9585 iterations 72
Cbc0038I Pass   2: suminf.    2.08618 (15) obj. -31.9585 iterations 15
Cbc0038I Pass   3: suminf.    1.73128 (6) obj. -31.9585 iterations 28
Cbc0038I Pass   4: suminf.    1.04861 (7) obj. -31.9585 iterations 3
Cbc0038I Pass   5: suminf.    1.40351 (5) obj. -31.9585 iterations 18
Cbc0038I Pass   6: suminf.    1.40351 (5) obj. -31.9585 iterations 0
Cbc0038I Pass   7: suminf.    0.96979 (3) obj. -31.9585 iterations 10
Cbc0038I Pass   8: suminf.    0.94730 (3) obj. -31.9585 iterations 2
Cbc0038I Pass   9: suminf.    1.19746 (3) obj. -31.9585 iterations 8
Cbc0038I Pass  10: suminf.    4.77395 (13) obj. -31.9585 iterations 21
Cbc0038I Pass  11: suminf.    1.79659 (6) obj. -31.9585 iterations 27
Cbc0038I Pass  12: suminf.    1.65390 (5) obj. -31.9585 iterations 12
Cbc0038I Pass  13: suminf.    1.29434 (4) obj. -31.9585 iterations 2
Cbc0038I Pass  14: suminf.    1.21255 (5) obj. -31.9585 iterations 5
Cbc0038I Pass  15: suminf.    1.09001 (5) obj. -31.9585 iterations 1
Cbc0038I Pass  16: suminf.    3.83535 (10) obj. -31.9585 iterations 31
Cbc0038I Pass  17: suminf.    1.57966 (8) obj. -31.9585 iterations 19
Cbc0038I Pass  18: suminf.    1.62187 (5) obj. -31.9585 iterations 17
Cbc0038I Pass  19: suminf.    1.08422 (5) obj. -31.9585 iterations 7
Cbc0038I Pass  20: suminf.    1.09520 (6) obj. -31.9585 iterations 12
Cbc0038I Pass  21: suminf.    0.99303 (5) obj. -31.9585 iterations 3
Cbc0038I Pass  22: suminf.    1.71137 (5) obj. -31.9585 iterations 11
Cbc0038I Pass  23: suminf.    1.33751 (6) obj. -31.9585 iterations 5
Cbc0038I Pass  24: suminf.    1.01480 (5) obj. -31.9585 iterations 5
Cbc0038I Pass  25: suminf.    1.01324 (5) obj. -31.9585 iterations 4
Cbc0038I Pass  26: suminf.    1.38948 (4) obj. -31.9585 iterations 8
Cbc0038I Pass  27: suminf.    1.25881 (3) obj. -31.9585 iterations 3
Cbc0038I Pass  28: suminf.    1.08518 (3) obj. -31.9585 iterations 4
Cbc0038I Pass  29: suminf.    3.22695 (10) obj. -31.9585 iterations 19
Cbc0038I Pass  30: suminf.    2.50734 (8) obj. -31.9585 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 112 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -28.7375 to -31.5905 (0.12 seconds)
Cbc0038I Round again with cutoff of -37.7562
Cbc0038I Pass  30: suminf.    3.13183 (23) obj. -37.7562 iterations 0
Cbc0038I Pass  31: suminf.    2.64448 (16) obj. -37.7562 iterations 6
Cbc0038I Pass  32: suminf.    2.01965 (7) obj. -37.7562 iterations 32
Cbc0038I Pass  33: suminf.    1.92939 (9) obj. -37.7562 iterations 10
Cbc0038I Pass  34: suminf.    2.79556 (8) obj. -37.7562 iterations 13
Cbc0038I Pass  35: suminf.    1.31693 (4) obj. -37.7562 iterations 12
Cbc0038I Pass  36: suminf.    1.31693 (4) obj. -37.7562 iterations 0
Cbc0038I Pass  37: suminf.    1.69935 (4) obj. -37.7562 iterations 7
Cbc0038I Pass  38: suminf.    1.37190 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  39: suminf.    1.82703 (6) obj. -37.7562 iterations 21
Cbc0038I Pass  40: suminf.    1.47284 (6) obj. -37.7562 iterations 10
Cbc0038I Pass  41: suminf.    1.46434 (6) obj. -37.7562 iterations 1
Cbc0038I Pass  42: suminf.    1.19528 (5) obj. -37.7562 iterations 15
Cbc0038I Pass  43: suminf.    1.19528 (5) obj. -37.7562 iterations 0
Cbc0038I Pass  44: suminf.    1.89500 (5) obj. -37.7562 iterations 9
Cbc0038I Pass  45: suminf.    1.32988 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  46: suminf.    1.26291 (6) obj. -37.7562 iterations 3
Cbc0038I Pass  47: suminf.    2.31322 (8) obj. -37.7562 iterations 20
Cbc0038I Pass  48: suminf.    1.99150 (7) obj. -37.7562 iterations 7
Cbc0038I Pass  49: suminf.    1.87733 (6) obj. -37.7562 iterations 10
Cbc0038I Pass  50: suminf.    1.47197 (4) obj. -37.7562 iterations 6
Cbc0038I Pass  51: suminf.    1.40657 (5) obj. -37.7562 iterations 7
Cbc0038I Pass  52: suminf.    1.33480 (5) obj. -37.7562 iterations 3
Cbc0038I Pass  53: suminf.    1.69167 (5) obj. -37.7562 iterations 9
Cbc0038I Pass  54: suminf.    1.37190 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  55: suminf.    1.31693 (4) obj. -37.7562 iterations 6
Cbc0038I Pass  56: suminf.    1.69935 (4) obj. -37.7562 iterations 7
Cbc0038I Pass  57: suminf.    3.68407 (9) obj. -37.7562 iterations 19
Cbc0038I Pass  58: suminf.    2.16914 (8) obj. -37.7562 iterations 14
Cbc0038I Pass  59: suminf.    2.11780 (5) obj. -37.7562 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -31.5905 - took 0.15 seconds
Cbc0012I Integer solution of -31.59048 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 182 rows 98 columns, reduced to 83 rows 47 columns
Cbc0031I 22 added rows had average density of 68.318182
Cbc0013I At root node, 22 cuts changed objective from -60.946955 to -54.401277 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13609 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1887 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.59048 best solution, best possible -54.401277 (1.20 seconds)
Cbc0038I Full problem 182 rows 98 columns, reduced to 67 rows 39 columns
Cbc0038I Full problem 182 rows 98 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -31.59048, took 12035 iterations and 116 nodes (1.61 seconds)
Cbc0032I Strong branching done 1232 times (20993 iterations), fathomed 7 nodes and fixed 43 variables
Cbc0035I Maximum depth 31, 354 variables fixed on reduced cost
Total time (CPU seconds):       1.57   (Wallclock seconds):       1.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-67) rows, 149 (-53) columns and 2824 (-2829) elements
Clp1000I sum of infeasibilities 1.92368e-06 - average 1.40415e-08, 87 fixed columns
Coin0506I Presolve 51 (-86) rows, 61 (-88) columns and 218 (-2606) elements
Clp0006I 0  Obj 1.4273822 Dual inf 6.2755965 (61)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 1.3194552 - largest nonzero change 1.1682301e-05 ( 0.00076683715%) - largest zero change 2.9912493e-05
Clp0000I Optimal - objective value 5.0856019
Clp0000I Optimal - objective value 5.0856019
Coin0511I After Postsolve, objective 5.0856019, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 5.0856019 Dual inf 59.599195 (52)
Clp0014I Perturbing problem by 0.001% of 1.6536105 - largest nonzero change 1.5400775e-05 ( 0.0010393299%) - largest zero change 2.9584475e-05
Clp0000I Optimal - objective value 79.416522
Clp0000I Optimal - objective value 79.416522
Clp0000I Optimal - objective value 79.416522
Coin0511I After Postsolve, objective 79.416522, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.41652171 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 149 columns (149 integer (149 of which binary)) and 2842 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.975%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 3.85446
Cbc0038I Pass   1: suminf.    2.86713 (30) obj. -61.3131 iterations 30
Cbc0038I Pass   2: suminf.    0.69503 (10) obj. -31.2 iterations 20
Cbc0038I Solution found of -19.1094
Cbc0038I Rounding solution of -24.8983 is better than previous of -19.1094

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -28.7892
Cbc0038I Pass   3: suminf.    2.86713 (30) obj. -61.3131 iterations 0
Cbc0038I Pass   4: suminf.    1.22832 (17) obj. -38.5881 iterations 13
Cbc0038I Pass   5: suminf.    0.56231 (8) obj. -28.7892 iterations 13
Cbc0038I Pass   6: suminf.    0.70645 (2) obj. -28.7892 iterations 12
Cbc0038I Pass   7: suminf.    0.70645 (2) obj. -28.7892 iterations 6
Cbc0038I Pass   8: suminf.    0.78333 (2) obj. -29.8666 iterations 4
Cbc0038I Pass   9: suminf.    2.24389 (15) obj. -28.7892 iterations 35
Cbc0038I Pass  10: suminf.    2.10590 (14) obj. -28.7892 iterations 3
Cbc0038I Pass  11: suminf.    1.87463 (7) obj. -28.7892 iterations 32
Cbc0038I Pass  12: suminf.    1.56525 (7) obj. -28.7892 iterations 4
Cbc0038I Pass  13: suminf.    1.87463 (7) obj. -28.7892 iterations 7
Cbc0038I Pass  14: suminf.    1.51733 (12) obj. -28.7892 iterations 21
Cbc0038I Pass  15: suminf.    1.45814 (12) obj. -28.7892 iterations 7
Cbc0038I Pass  16: suminf.    0.95603 (4) obj. -28.7892 iterations 18
Cbc0038I Pass  17: suminf.    0.62987 (4) obj. -28.7892 iterations 19
Cbc0038I Pass  18: suminf.    1.00065 (4) obj. -28.7892 iterations 14
Cbc0038I Pass  19: suminf.    0.98296 (9) obj. -28.7892 iterations 26
Cbc0038I Pass  20: suminf.    0.75130 (8) obj. -28.7892 iterations 17
Cbc0038I Pass  21: suminf.    0.57436 (6) obj. -28.7892 iterations 15
Cbc0038I Pass  22: suminf.    0.57436 (6) obj. -28.7892 iterations 8
Cbc0038I Pass  23: suminf.    0.36923 (5) obj. -28.7892 iterations 15
Cbc0038I Pass  24: suminf.    0.36923 (5) obj. -28.7892 iterations 7
Cbc0038I Pass  25: suminf.    0.42802 (5) obj. -28.7892 iterations 14
Cbc0038I Pass  26: suminf.    0.42802 (5) obj. -28.7892 iterations 6
Cbc0038I Pass  27: suminf.    0.36923 (5) obj. -28.7892 iterations 10
Cbc0038I Pass  28: suminf.    1.61514 (12) obj. -28.7892 iterations 26
Cbc0038I Pass  29: suminf.    1.53083 (12) obj. -28.7892 iterations 4
Cbc0038I Pass  30: suminf.    1.03393 (13) obj. -28.7892 iterations 4
Cbc0038I Pass  31: suminf.    1.07219 (5) obj. -28.7892 iterations 21
Cbc0038I Pass  32: suminf.    0.92152 (6) obj. -28.7892 iterations 12
Cbc0038I Rounding solution of -26.784 is better than previous of -24.8983

Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 149 columns, reduced to 2 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -26.784 to -27.446 (0.07 seconds)
Cbc0038I Round again with cutoff of -35.7925
Cbc0038I Pass  32: suminf.    2.86713 (30) obj. -61.3131 iterations 0
Cbc0038I Pass  33: suminf.    1.17743 (7) obj. -35.7925 iterations 74
Cbc0038I Pass  34: suminf.    1.13811 (5) obj. -35.7925 iterations 6
Cbc0038I Pass  35: suminf.    0.92032 (4) obj. -35.7925 iterations 9
Cbc0038I Pass  36: suminf.    0.76026 (5) obj. -35.7925 iterations 9
Cbc0038I Pass  37: suminf.    0.96062 (4) obj. -35.7925 iterations 5
Cbc0038I Pass  38: suminf.    1.62526 (9) obj. -35.7925 iterations 33
Cbc0038I Pass  39: suminf.    1.15102 (10) obj. -35.7925 iterations 10
Cbc0038I Pass  40: suminf.    1.11200 (8) obj. -35.7925 iterations 10
Cbc0038I Pass  41: suminf.    1.07487 (8) obj. -35.7925 iterations 3
Cbc0038I Pass  42: suminf.    1.53358 (12) obj. -35.7925 iterations 25
Cbc0038I Pass  43: suminf.    0.98918 (12) obj. -35.7925 iterations 16
Cbc0038I Pass  44: suminf.    1.19773 (9) obj. -35.7925 iterations 23
Cbc0038I Pass  45: suminf.    0.80168 (9) obj. -35.7925 iterations 10
Cbc0038I Pass  46: suminf.    1.24692 (17) obj. -35.7925 iterations 17
Cbc0038I Pass  47: suminf.    1.24692 (17) obj. -35.7925 iterations 4
Cbc0038I Pass  48: suminf.    1.74343 (16) obj. -35.7925 iterations 13
Cbc0038I Pass  49: suminf.    1.74343 (16) obj. -35.7925 iterations 5
Cbc0038I Pass  50: suminf.    1.86782 (15) obj. -35.7925 iterations 7
Cbc0038I Pass  51: suminf.    1.66149 (16) obj. -35.7925 iterations 8
Cbc0038I Pass  52: suminf.    1.86782 (15) obj. -35.7925 iterations 10
Cbc0038I Pass  53: suminf.    2.10312 (20) obj. -35.7925 iterations 26
Cbc0038I Pass  54: suminf.    1.90401 (14) obj. -35.7925 iterations 16
Cbc0038I Pass  55: suminf.    1.71104 (10) obj. -35.7925 iterations 24
Cbc0038I Pass  56: suminf.    1.53270 (16) obj. -35.7925 iterations 10
Cbc0038I Pass  57: suminf.    1.86782 (15) obj. -35.7925 iterations 12
Cbc0038I Pass  58: suminf.    1.66149 (16) obj. -35.7925 iterations 10
Cbc0038I Pass  59: suminf.    1.86782 (15) obj. -35.7925 iterations 11
Cbc0038I Pass  60: suminf.    1.62899 (16) obj. -35.7925 iterations 34
Cbc0038I Pass  61: suminf.    1.23433 (18) obj. -35.7925 iterations 7
Cbc0038I Rounding solution of -28.7375 is better than previous of -27.446

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 149 columns, reduced to 14 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -44.1965
Cbc0038I Pass  61: suminf.    2.86713 (30) obj. -61.3131 iterations 0
Cbc0038I Pass  62: suminf.    1.66871 (17) obj. -44.1965 iterations 20
Cbc0038I Pass  63: suminf.    2.09400 (22) obj. -44.1965 iterations 50
Cbc0038I Pass  64: suminf.    2.09400 (22) obj. -44.1965 iterations 1
Cbc0038I Pass  65: suminf.    2.46381 (22) obj. -44.1965 iterations 14
Cbc0038I Pass  66: suminf.    1.79522 (23) obj. -44.1965 iterations 8
Cbc0038I Pass  67: suminf.    2.46381 (22) obj. -44.1965 iterations 7
Cbc0038I Pass  68: suminf.    1.70679 (18) obj. -44.1965 iterations 19
Cbc0038I Pass  69: suminf.    1.43828 (17) obj. -44.1965 iterations 16
Cbc0038I Pass  70: suminf.    1.73737 (16) obj. -44.1965 iterations 26
Cbc0038I Pass  71: suminf.    1.43099 (17) obj. -44.1965 iterations 8
Cbc0038I Pass  72: suminf.    1.91639 (19) obj. -44.1965 iterations 11
Cbc0038I Pass  73: suminf.    1.72755 (20) obj. -44.1965 iterations 6
Cbc0038I Pass  74: suminf.    2.50847 (24) obj. -44.1965 iterations 27
Cbc0038I Pass  75: suminf.    2.50847 (24) obj. -44.1965 iterations 3
Cbc0038I Pass  76: suminf.    2.50207 (24) obj. -44.1965 iterations 8
Cbc0038I Pass  77: suminf.    2.50207 (24) obj. -44.1965 iterations 4
Cbc0038I Pass  78: suminf.    2.50847 (24) obj. -44.1965 iterations 5
Cbc0038I Pass  79: suminf.    2.36908 (16) obj. -44.1965 iterations 26
Cbc0038I Pass  80: suminf.    1.96779 (18) obj. -44.1965 iterations 20
Cbc0038I Pass  81: suminf.    1.78623 (14) obj. -44.1965 iterations 17
Cbc0038I Pass  82: suminf.    1.64158 (14) obj. -44.1965 iterations 9
Cbc0038I Pass  83: suminf.    1.71702 (13) obj. -44.1965 iterations 10
Cbc0038I Pass  84: suminf.    1.99700 (18) obj. -44.1965 iterations 29
Cbc0038I Pass  85: suminf.    1.83615 (17) obj. -44.1965 iterations 4
Cbc0038I Pass  86: suminf.    2.46381 (22) obj. -44.1965 iterations 16
Cbc0038I Pass  87: suminf.    1.78688 (23) obj. -44.1965 iterations 6
Cbc0038I Pass  88: suminf.    2.46381 (22) obj. -44.1965 iterations 8
Cbc0038I Pass  89: suminf.    1.79522 (23) obj. -44.1965 iterations 11
Cbc0038I Pass  90: suminf.    2.46381 (22) obj. -44.1965 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -28.7375 - took 0.09 seconds
Cbc0012I Integer solution of -28.737516 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 137 rows 149 columns, reduced to 2 rows 3 columns
Cbc0031I 49 added rows had average density of 35.714286
Cbc0013I At root node, 49 cuts changed objective from -63.805868 to -38.211622 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11263 row cuts average 6.3 elements, 1 column cuts (1 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 925 row cuts average 125.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 673 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 984 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 90.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.737516 best solution, best possible -38.211622 (2.57 seconds)
Cbc0012I Integer solution of -30.93439 found by rounding after 4272 iterations and 1 nodes (2.59 seconds)
Cbc0012I Integer solution of -31.59048 found by DiveCoefficient after 4275 iterations and 2 nodes (2.59 seconds)
Cbc0001I Search completed - best objective -31.59048, took 5764 iterations and 38 nodes (3.10 seconds)
Cbc0032I Strong branching done 444 times (6969 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 113 variables fixed on reduced cost
Total time (CPU seconds):       2.27   (Wallclock seconds):       3.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 98 (-5) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 1.6943e-05 - average 9.30934e-08, 15 fixed columns
Coin0506I Presolve 150 (-32) rows, 82 (-16) columns and 456 (-96) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 1.8583412 - largest nonzero change 0 ( 0%) - largest zero change 2.5857661e-05
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Coin0511I After Postsolve, objective 61.481016, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Coin0511I After Postsolve, objective 61.481016, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.48101558 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 98 columns (97 integer (97 of which binary)) and 565 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.031%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.35615
Cbc0038I Solution found of 5.87695
Cbc0038I Relaxing continuous gives -3.32142
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -3.32142 to -28.7375 (0.06 seconds)
Cbc0038I Round again with cutoff of -31.9585
Cbc0038I Pass   1: suminf.    2.77290 (23) obj. -31.9585 iterations 72
Cbc0038I Pass   2: suminf.    2.08618 (15) obj. -31.9585 iterations 15
Cbc0038I Pass   3: suminf.    1.73128 (6) obj. -31.9585 iterations 28
Cbc0038I Pass   4: suminf.    1.04861 (7) obj. -31.9585 iterations 3
Cbc0038I Pass   5: suminf.    1.40351 (5) obj. -31.9585 iterations 18
Cbc0038I Pass   6: suminf.    1.40351 (5) obj. -31.9585 iterations 0
Cbc0038I Pass   7: suminf.    0.96979 (3) obj. -31.9585 iterations 10
Cbc0038I Pass   8: suminf.    0.94730 (3) obj. -31.9585 iterations 2
Cbc0038I Pass   9: suminf.    1.19746 (3) obj. -31.9585 iterations 8
Cbc0038I Pass  10: suminf.    4.77395 (13) obj. -31.9585 iterations 21
Cbc0038I Pass  11: suminf.    1.79659 (6) obj. -31.9585 iterations 27
Cbc0038I Pass  12: suminf.    1.65390 (5) obj. -31.9585 iterations 12
Cbc0038I Pass  13: suminf.    1.29434 (4) obj. -31.9585 iterations 2
Cbc0038I Pass  14: suminf.    1.21255 (5) obj. -31.9585 iterations 5
Cbc0038I Pass  15: suminf.    1.09001 (5) obj. -31.9585 iterations 1
Cbc0038I Pass  16: suminf.    3.83535 (10) obj. -31.9585 iterations 31
Cbc0038I Pass  17: suminf.    1.57966 (8) obj. -31.9585 iterations 19
Cbc0038I Pass  18: suminf.    1.62187 (5) obj. -31.9585 iterations 17
Cbc0038I Pass  19: suminf.    1.08422 (5) obj. -31.9585 iterations 7
Cbc0038I Pass  20: suminf.    1.09520 (6) obj. -31.9585 iterations 12
Cbc0038I Pass  21: suminf.    0.99303 (5) obj. -31.9585 iterations 3
Cbc0038I Pass  22: suminf.    1.71137 (5) obj. -31.9585 iterations 11
Cbc0038I Pass  23: suminf.    1.33751 (6) obj. -31.9585 iterations 5
Cbc0038I Pass  24: suminf.    1.01480 (5) obj. -31.9585 iterations 5
Cbc0038I Pass  25: suminf.    1.01324 (5) obj. -31.9585 iterations 4
Cbc0038I Pass  26: suminf.    1.38948 (4) obj. -31.9585 iterations 8
Cbc0038I Pass  27: suminf.    1.25881 (3) obj. -31.9585 iterations 3
Cbc0038I Pass  28: suminf.    1.08518 (3) obj. -31.9585 iterations 4
Cbc0038I Pass  29: suminf.    3.22695 (10) obj. -31.9585 iterations 19
Cbc0038I Pass  30: suminf.    2.50734 (8) obj. -31.9585 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 112 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -28.7375 to -31.5905 (0.13 seconds)
Cbc0038I Round again with cutoff of -37.7562
Cbc0038I Pass  30: suminf.    3.13183 (23) obj. -37.7562 iterations 0
Cbc0038I Pass  31: suminf.    2.64448 (16) obj. -37.7562 iterations 6
Cbc0038I Pass  32: suminf.    2.01965 (7) obj. -37.7562 iterations 32
Cbc0038I Pass  33: suminf.    1.92939 (9) obj. -37.7562 iterations 10
Cbc0038I Pass  34: suminf.    2.79556 (8) obj. -37.7562 iterations 13
Cbc0038I Pass  35: suminf.    1.31693 (4) obj. -37.7562 iterations 12
Cbc0038I Pass  36: suminf.    1.31693 (4) obj. -37.7562 iterations 0
Cbc0038I Pass  37: suminf.    1.69935 (4) obj. -37.7562 iterations 7
Cbc0038I Pass  38: suminf.    1.37190 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  39: suminf.    1.82703 (6) obj. -37.7562 iterations 21
Cbc0038I Pass  40: suminf.    1.47284 (6) obj. -37.7562 iterations 10
Cbc0038I Pass  41: suminf.    1.46434 (6) obj. -37.7562 iterations 1
Cbc0038I Pass  42: suminf.    1.19528 (5) obj. -37.7562 iterations 15
Cbc0038I Pass  43: suminf.    1.19528 (5) obj. -37.7562 iterations 0
Cbc0038I Pass  44: suminf.    1.89500 (5) obj. -37.7562 iterations 9
Cbc0038I Pass  45: suminf.    1.32988 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  46: suminf.    1.26291 (6) obj. -37.7562 iterations 3
Cbc0038I Pass  47: suminf.    2.31322 (8) obj. -37.7562 iterations 20
Cbc0038I Pass  48: suminf.    1.99150 (7) obj. -37.7562 iterations 7
Cbc0038I Pass  49: suminf.    1.87733 (6) obj. -37.7562 iterations 10
Cbc0038I Pass  50: suminf.    1.47197 (4) obj. -37.7562 iterations 6
Cbc0038I Pass  51: suminf.    1.40657 (5) obj. -37.7562 iterations 7
Cbc0038I Pass  52: suminf.    1.33480 (5) obj. -37.7562 iterations 3
Cbc0038I Pass  53: suminf.    1.69167 (5) obj. -37.7562 iterations 9
Cbc0038I Pass  54: suminf.    1.37190 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  55: suminf.    1.31693 (4) obj. -37.7562 iterations 6
Cbc0038I Pass  56: suminf.    1.69935 (4) obj. -37.7562 iterations 7
Cbc0038I Pass  57: suminf.    3.68407 (9) obj. -37.7562 iterations 19
Cbc0038I Pass  58: suminf.    2.16914 (8) obj. -37.7562 iterations 14
Cbc0038I Pass  59: suminf.    2.11780 (5) obj. -37.7562 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -31.5905 - took 0.16 seconds
Cbc0012I Integer solution of -31.59048 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 182 rows 98 columns, reduced to 83 rows 47 columns
Cbc0031I 22 added rows had average density of 68.318182
Cbc0013I At root node, 22 cuts changed objective from -60.946955 to -54.401277 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13609 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1887 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.59048 best solution, best possible -54.401277 (1.44 seconds)
Cbc0038I Full problem 182 rows 98 columns, reduced to 67 rows 39 columns
Cbc0038I Full problem 182 rows 98 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -31.59048, took 12035 iterations and 116 nodes (1.92 seconds)
Cbc0032I Strong branching done 1232 times (20993 iterations), fathomed 7 nodes and fixed 43 variables
Cbc0035I Maximum depth 31, 354 variables fixed on reduced cost
Total time (CPU seconds):       1.76   (Wallclock seconds):       1.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-68) rows, 149 (-54) columns and 2824 (-2830) elements
Clp1000I sum of infeasibilities 1.92368e-06 - average 1.40415e-08, 87 fixed columns
Coin0506I Presolve 51 (-86) rows, 61 (-88) columns and 218 (-2606) elements
Clp0006I 0  Obj 1.4273822 Dual inf 6.2755965 (61)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 1.3194552 - largest nonzero change 1.1682301e-05 ( 0.00076683715%) - largest zero change 2.9912493e-05
Clp0000I Optimal - objective value 5.0856019
Clp0000I Optimal - objective value 5.0856019
Coin0511I After Postsolve, objective 5.0856019, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 5.0856019 Dual inf 59.599195 (52)
Clp0014I Perturbing problem by 0.001% of 1.6536105 - largest nonzero change 1.5400775e-05 ( 0.0010393299%) - largest zero change 2.9584475e-05
Clp0000I Optimal - objective value 79.416522
Clp0000I Optimal - objective value 79.416522
Clp0000I Optimal - objective value 79.416522
Coin0511I After Postsolve, objective 79.416522, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.41652171 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 149 columns (149 integer (149 of which binary)) and 2842 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.975%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 3.85446
Cbc0038I Pass   1: suminf.    2.86713 (30) obj. -61.3131 iterations 30
Cbc0038I Pass   2: suminf.    0.69503 (10) obj. -31.2 iterations 20
Cbc0038I Solution found of -19.1094
Cbc0038I Rounding solution of -24.8983 is better than previous of -19.1094

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -28.7892
Cbc0038I Pass   3: suminf.    2.86713 (30) obj. -61.3131 iterations 0
Cbc0038I Pass   4: suminf.    1.22832 (17) obj. -38.5881 iterations 13
Cbc0038I Pass   5: suminf.    0.56231 (8) obj. -28.7892 iterations 13
Cbc0038I Pass   6: suminf.    0.70645 (2) obj. -28.7892 iterations 12
Cbc0038I Pass   7: suminf.    0.70645 (2) obj. -28.7892 iterations 6
Cbc0038I Pass   8: suminf.    0.78333 (2) obj. -29.8666 iterations 4
Cbc0038I Pass   9: suminf.    2.24389 (15) obj. -28.7892 iterations 35
Cbc0038I Pass  10: suminf.    2.10590 (14) obj. -28.7892 iterations 3
Cbc0038I Pass  11: suminf.    1.87463 (7) obj. -28.7892 iterations 32
Cbc0038I Pass  12: suminf.    1.56525 (7) obj. -28.7892 iterations 4
Cbc0038I Pass  13: suminf.    1.87463 (7) obj. -28.7892 iterations 7
Cbc0038I Pass  14: suminf.    1.51733 (12) obj. -28.7892 iterations 21
Cbc0038I Pass  15: suminf.    1.45814 (12) obj. -28.7892 iterations 7
Cbc0038I Pass  16: suminf.    0.95603 (4) obj. -28.7892 iterations 18
Cbc0038I Pass  17: suminf.    0.62987 (4) obj. -28.7892 iterations 19
Cbc0038I Pass  18: suminf.    1.00065 (4) obj. -28.7892 iterations 14
Cbc0038I Pass  19: suminf.    0.98296 (9) obj. -28.7892 iterations 26
Cbc0038I Pass  20: suminf.    0.75130 (8) obj. -28.7892 iterations 17
Cbc0038I Pass  21: suminf.    0.57436 (6) obj. -28.7892 iterations 15
Cbc0038I Pass  22: suminf.    0.57436 (6) obj. -28.7892 iterations 8
Cbc0038I Pass  23: suminf.    0.36923 (5) obj. -28.7892 iterations 15
Cbc0038I Pass  24: suminf.    0.36923 (5) obj. -28.7892 iterations 7
Cbc0038I Pass  25: suminf.    0.42802 (5) obj. -28.7892 iterations 14
Cbc0038I Pass  26: suminf.    0.42802 (5) obj. -28.7892 iterations 6
Cbc0038I Pass  27: suminf.    0.36923 (5) obj. -28.7892 iterations 10
Cbc0038I Pass  28: suminf.    1.61514 (12) obj. -28.7892 iterations 26
Cbc0038I Pass  29: suminf.    1.53083 (12) obj. -28.7892 iterations 4
Cbc0038I Pass  30: suminf.    1.03393 (13) obj. -28.7892 iterations 4
Cbc0038I Pass  31: suminf.    1.07219 (5) obj. -28.7892 iterations 21
Cbc0038I Pass  32: suminf.    0.92152 (6) obj. -28.7892 iterations 12
Cbc0038I Rounding solution of -26.784 is better than previous of -24.8983

Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 149 columns, reduced to 2 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -26.784 to -27.446 (0.08 seconds)
Cbc0038I Round again with cutoff of -35.7925
Cbc0038I Pass  32: suminf.    2.86713 (30) obj. -61.3131 iterations 0
Cbc0038I Pass  33: suminf.    1.17743 (7) obj. -35.7925 iterations 74
Cbc0038I Pass  34: suminf.    1.13811 (5) obj. -35.7925 iterations 6
Cbc0038I Pass  35: suminf.    0.92032 (4) obj. -35.7925 iterations 9
Cbc0038I Pass  36: suminf.    0.76026 (5) obj. -35.7925 iterations 9
Cbc0038I Pass  37: suminf.    0.96062 (4) obj. -35.7925 iterations 5
Cbc0038I Pass  38: suminf.    1.62526 (9) obj. -35.7925 iterations 33
Cbc0038I Pass  39: suminf.    1.15102 (10) obj. -35.7925 iterations 10
Cbc0038I Pass  40: suminf.    1.11200 (8) obj. -35.7925 iterations 10
Cbc0038I Pass  41: suminf.    1.07487 (8) obj. -35.7925 iterations 3
Cbc0038I Pass  42: suminf.    1.53358 (12) obj. -35.7925 iterations 25
Cbc0038I Pass  43: suminf.    0.98918 (12) obj. -35.7925 iterations 16
Cbc0038I Pass  44: suminf.    1.19773 (9) obj. -35.7925 iterations 23
Cbc0038I Pass  45: suminf.    0.80168 (9) obj. -35.7925 iterations 10
Cbc0038I Pass  46: suminf.    1.24692 (17) obj. -35.7925 iterations 17
Cbc0038I Pass  47: suminf.    1.24692 (17) obj. -35.7925 iterations 4
Cbc0038I Pass  48: suminf.    1.74343 (16) obj. -35.7925 iterations 13
Cbc0038I Pass  49: suminf.    1.74343 (16) obj. -35.7925 iterations 5
Cbc0038I Pass  50: suminf.    1.86782 (15) obj. -35.7925 iterations 7
Cbc0038I Pass  51: suminf.    1.66149 (16) obj. -35.7925 iterations 8
Cbc0038I Pass  52: suminf.    1.86782 (15) obj. -35.7925 iterations 10
Cbc0038I Pass  53: suminf.    2.10312 (20) obj. -35.7925 iterations 26
Cbc0038I Pass  54: suminf.    1.90401 (14) obj. -35.7925 iterations 16
Cbc0038I Pass  55: suminf.    1.71104 (10) obj. -35.7925 iterations 24
Cbc0038I Pass  56: suminf.    1.53270 (16) obj. -35.7925 iterations 10
Cbc0038I Pass  57: suminf.    1.86782 (15) obj. -35.7925 iterations 12
Cbc0038I Pass  58: suminf.    1.66149 (16) obj. -35.7925 iterations 10
Cbc0038I Pass  59: suminf.    1.86782 (15) obj. -35.7925 iterations 11
Cbc0038I Pass  60: suminf.    1.62899 (16) obj. -35.7925 iterations 34
Cbc0038I Pass  61: suminf.    1.23433 (18) obj. -35.7925 iterations 7
Cbc0038I Rounding solution of -28.7375 is better than previous of -27.446

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 149 columns, reduced to 14 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -44.1965
Cbc0038I Pass  61: suminf.    2.86713 (30) obj. -61.3131 iterations 0
Cbc0038I Pass  62: suminf.    1.66871 (17) obj. -44.1965 iterations 20
Cbc0038I Pass  63: suminf.    2.09400 (22) obj. -44.1965 iterations 50
Cbc0038I Pass  64: suminf.    2.09400 (22) obj. -44.1965 iterations 1
Cbc0038I Pass  65: suminf.    2.46381 (22) obj. -44.1965 iterations 14
Cbc0038I Pass  66: suminf.    1.79522 (23) obj. -44.1965 iterations 8
Cbc0038I Pass  67: suminf.    2.46381 (22) obj. -44.1965 iterations 7
Cbc0038I Pass  68: suminf.    1.70679 (18) obj. -44.1965 iterations 19
Cbc0038I Pass  69: suminf.    1.43828 (17) obj. -44.1965 iterations 16
Cbc0038I Pass  70: suminf.    1.73737 (16) obj. -44.1965 iterations 26
Cbc0038I Pass  71: suminf.    1.43099 (17) obj. -44.1965 iterations 8
Cbc0038I Pass  72: suminf.    1.91639 (19) obj. -44.1965 iterations 11
Cbc0038I Pass  73: suminf.    1.72755 (20) obj. -44.1965 iterations 6
Cbc0038I Pass  74: suminf.    2.50847 (24) obj. -44.1965 iterations 27
Cbc0038I Pass  75: suminf.    2.50847 (24) obj. -44.1965 iterations 3
Cbc0038I Pass  76: suminf.    2.50207 (24) obj. -44.1965 iterations 8
Cbc0038I Pass  77: suminf.    2.50207 (24) obj. -44.1965 iterations 4
Cbc0038I Pass  78: suminf.    2.50847 (24) obj. -44.1965 iterations 5
Cbc0038I Pass  79: suminf.    2.36908 (16) obj. -44.1965 iterations 26
Cbc0038I Pass  80: suminf.    1.96779 (18) obj. -44.1965 iterations 20
Cbc0038I Pass  81: suminf.    1.78623 (14) obj. -44.1965 iterations 17
Cbc0038I Pass  82: suminf.    1.64158 (14) obj. -44.1965 iterations 9
Cbc0038I Pass  83: suminf.    1.71702 (13) obj. -44.1965 iterations 10
Cbc0038I Pass  84: suminf.    1.99700 (18) obj. -44.1965 iterations 29
Cbc0038I Pass  85: suminf.    1.83615 (17) obj. -44.1965 iterations 4
Cbc0038I Pass  86: suminf.    2.46381 (22) obj. -44.1965 iterations 16
Cbc0038I Pass  87: suminf.    1.78688 (23) obj. -44.1965 iterations 6
Cbc0038I Pass  88: suminf.    2.46381 (22) obj. -44.1965 iterations 8
Cbc0038I Pass  89: suminf.    1.79522 (23) obj. -44.1965 iterations 11
Cbc0038I Pass  90: suminf.    2.46381 (22) obj. -44.1965 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -28.7375 - took 0.10 seconds
Cbc0012I Integer solution of -28.737516 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 137 rows 149 columns, reduced to 2 rows 3 columns
Cbc0031I 49 added rows had average density of 35.714286
Cbc0013I At root node, 49 cuts changed objective from -63.805868 to -38.211622 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11263 row cuts average 6.3 elements, 1 column cuts (1 active)  in 0.204 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 925 row cuts average 125.0 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 673 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 984 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 90.8 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.726 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.737516 best solution, best possible -38.211622 (3.10 seconds)
Cbc0012I Integer solution of -30.93439 found by rounding after 4272 iterations and 1 nodes (3.12 seconds)
Cbc0012I Integer solution of -31.59048 found by DiveCoefficient after 4275 iterations and 2 nodes (3.12 seconds)
Cbc0001I Search completed - best objective -31.59048, took 5764 iterations and 38 nodes (3.67 seconds)
Cbc0032I Strong branching done 444 times (6969 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 113 variables fixed on reduced cost
Total time (CPU seconds):       2.60   (Wallclock seconds):       3.68

