Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 45 (-5) columns and 255 (-30) elements
Clp1000I sum of infeasibilities 0.00992971 - average 0.000115462, 2 fixed columns
Coin0506I Presolve 75 (-11) rows, 43 (-2) columns and 229 (-26) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 2456.2865
Clp0000I Optimal - objective value 2456.2865
Coin0511I After Postsolve, objective 2456.2865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2456.2865
Clp0000I Optimal - objective value 2456.2865
Clp0000I Optimal - objective value 2456.2865
Coin0511I After Postsolve, objective 2456.2865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2456.286491 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 45 columns (44 integer (44 of which binary)) and 255 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 13
Cbc0038I Solution found of 424.595
Cbc0038I Relaxing continuous gives 424.169
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 45 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 424.169 to -348.173 (0.03 seconds)
Cbc0038I Round again with cutoff of -558.984
Cbc0038I Pass   1: suminf.    1.12714 (38) obj. -558.984 iterations 9
Cbc0038I Pass   2: suminf.    1.11090 (42) obj. -558.984 iterations 7
Cbc0038I Pass   3: suminf.    3.00000 (15) obj. -558.984 iterations 34
Cbc0038I Pass   4: suminf.    3.00000 (15) obj. -558.984 iterations 1
Cbc0038I Pass   5: suminf.    1.94137 (19) obj. -558.984 iterations 23
Cbc0038I Pass   6: suminf.    4.80517 (17) obj. -558.984 iterations 18
Cbc0038I Pass   7: suminf.    2.98497 (12) obj. -558.984 iterations 25
Cbc0038I Pass   8: suminf.    2.00000 (7) obj. -558.984 iterations 9
Cbc0038I Pass   9: suminf.    1.00000 (7) obj. -558.984 iterations 2
Cbc0038I Pass  10: suminf.    1.00000 (7) obj. -558.984 iterations 0
Cbc0038I Pass  11: suminf.    2.23762 (9) obj. -558.984 iterations 8
Cbc0038I Pass  12: suminf.    1.11927 (5) obj. -558.984 iterations 5
Cbc0038I Pass  13: suminf.    0.57092 (3) obj. -558.984 iterations 2
Cbc0038I Pass  14: suminf.    1.14138 (7) obj. -558.984 iterations 5
Cbc0038I Pass  15: suminf.    0.74321 (4) obj. -558.984 iterations 3
Cbc0038I Pass  16: suminf.    0.96856 (5) obj. -558.984 iterations 8
Cbc0038I Pass  17: suminf.    0.74381 (5) obj. -558.984 iterations 4
Cbc0038I Pass  18: suminf.    1.59052 (7) obj. -558.984 iterations 6
Cbc0038I Pass  19: suminf.    0.59511 (3) obj. -558.984 iterations 4
Cbc0038I Pass  20: suminf.    1.18313 (7) obj. -558.984 iterations 5
Cbc0038I Pass  21: suminf.    1.07025 (5) obj. -558.984 iterations 2
Cbc0038I Pass  22: suminf.    2.79266 (13) obj. -558.984 iterations 16
Cbc0038I Pass  23: suminf.    2.79266 (13) obj. -558.984 iterations 1
Cbc0038I Pass  24: suminf.    3.36916 (14) obj. -558.984 iterations 22
Cbc0038I Pass  25: suminf.    1.32491 (28) obj. -558.984 iterations 16
Cbc0038I Pass  26: suminf.    1.11090 (42) obj. -558.984 iterations 21
Cbc0038I Pass  27: suminf.    1.12275 (7) obj. -558.984 iterations 39
Cbc0038I Pass  28: suminf.    0.50066 (4) obj. -558.984 iterations 7
Cbc0038I Pass  29: suminf.    1.41873 (7) obj. -558.984 iterations 7
Cbc0038I Pass  30: suminf.    1.30990 (6) obj. -558.984 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 45 columns, reduced to 82 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -348.173 to -395.456 (0.06 seconds)
Cbc0038I Round again with cutoff of -938.445
Cbc0038I Pass  30: suminf.    3.74263 (38) obj. -938.445 iterations 0
Cbc0038I Pass  31: suminf.    3.68869 (42) obj. -938.445 iterations 7
Cbc0038I Pass  32: suminf.    4.00000 (17) obj. -938.445 iterations 28
Cbc0038I Pass  33: suminf.    4.00000 (17) obj. -938.445 iterations 0
Cbc0038I Pass  34: suminf.    9.37812 (27) obj. -938.445 iterations 19
Cbc0038I Pass  35: suminf.    4.00000 (16) obj. -938.445 iterations 14
Cbc0038I Pass  36: suminf.    3.00000 (15) obj. -938.445 iterations 4
Cbc0038I Pass  37: suminf.    3.00000 (15) obj. -938.445 iterations 0
Cbc0038I Pass  38: suminf.    4.03007 (31) obj. -938.445 iterations 37
Cbc0038I Pass  39: suminf.    3.68869 (42) obj. -938.445 iterations 17
Cbc0038I Pass  40: suminf.    5.00000 (18) obj. -938.445 iterations 31
Cbc0038I Pass  41: suminf.    5.00000 (18) obj. -938.445 iterations 0
Cbc0038I Pass  42: suminf.    3.74263 (38) obj. -938.445 iterations 28
Cbc0038I Pass  43: suminf.    2.80957 (11) obj. -938.445 iterations 40
Cbc0038I Pass  44: suminf.    1.87537 (8) obj. -938.445 iterations 4
Cbc0038I Pass  45: suminf.    2.86102 (10) obj. -938.445 iterations 10
Cbc0038I Pass  46: suminf.    1.55696 (8) obj. -938.445 iterations 6
Cbc0038I Pass  47: suminf.    1.31940 (8) obj. -938.445 iterations 2
Cbc0038I Pass  48: suminf.    1.85204 (8) obj. -938.445 iterations 9
Cbc0038I Pass  49: suminf.    1.10257 (7) obj. -938.445 iterations 4
Cbc0038I Pass  50: suminf.    1.10064 (7) obj. -938.445 iterations 1
Cbc0038I Pass  51: suminf.    1.87702 (8) obj. -938.445 iterations 10
Cbc0038I Pass  52: suminf.    1.63784 (7) obj. -938.445 iterations 2
Cbc0038I Pass  53: suminf.    2.20070 (9) obj. -938.445 iterations 9
Cbc0038I Pass  54: suminf.    1.10257 (7) obj. -938.445 iterations 6
Cbc0038I Pass  55: suminf.    1.10064 (7) obj. -938.445 iterations 1
Cbc0038I Pass  56: suminf.    1.87702 (8) obj. -938.445 iterations 7
Cbc0038I Pass  57: suminf.    1.63784 (7) obj. -938.445 iterations 2
Cbc0038I Pass  58: suminf.    2.20070 (9) obj. -938.445 iterations 9
Cbc0038I Pass  59: suminf.    1.10257 (7) obj. -938.445 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 45 columns, reduced to 84 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -395.456 - took 0.07 seconds
Cbc0012I Integer solution of -395.456 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 21 added rows had average density of 39.571429
Cbc0013I At root node, 21 cuts changed objective from -2456.2865 to -977.16735 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5178 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1027 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 41.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -395.456, took 6016 iterations and 20 nodes (0.65 seconds)
Cbc0032I Strong branching done 364 times (8004 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 9, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.65

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-10) rows, 90 (-6) columns and 1243 (-170) elements
Clp1000I sum of infeasibilities 0 - average 0, 75 fixed columns
Coin0506I Presolve 10 (-78) rows, 14 (-76) columns and 32 (-1211) elements
Clp0006I 0  Obj -843.46364 Dual inf 33.119238 (14)
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 1.53334 - largest nonzero change 1.702643e-05 ( 0.00085132148%) - largest zero change 1.573335e-05
Clp0000I Optimal - objective value -376.1328
Clp0000I Optimal - objective value -376.1328
Coin0511I After Postsolve, objective -376.1328, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -376.1328 Dual inf 2949.2161 (53)
Clp0014I Perturbing problem by 0.001% of 3.5936821 - largest nonzero change 1.2037205e-05 ( 0.00086296483%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3047.051
Clp0000I Optimal - objective value 3047.051
Clp0000I Optimal - objective value 3047.051
Coin0511I After Postsolve, objective 3047.051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3047.051017 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 90 columns (90 integer (90 of which binary)) and 1245 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.121%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.79684
Cbc0038I Pass   1: suminf.    2.43495 (21) obj. -959.997 iterations 10
Cbc0038I Pass   2: suminf.    2.43495 (21) obj. -959.997 iterations 1
Cbc0038I Pass   3: suminf.    0.21903 (6) obj. 515.725 iterations 15
Cbc0038I Solution found of 729.395
Cbc0038I Rounding solution of 365.687 is better than previous of 729.395

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 365.687 to -347.521 (0.01 seconds)
Cbc0038I Round again with cutoff of -542.126
Cbc0038I Pass   4: suminf.    2.43495 (21) obj. -959.997 iterations 0
Cbc0038I Pass   5: suminf.    2.43495 (21) obj. -959.997 iterations 1
Cbc0038I Pass   6: suminf.    1.17813 (25) obj. -542.126 iterations 18
Cbc0038I Pass   7: suminf.    1.17813 (25) obj. -542.126 iterations 0
Cbc0038I Pass   8: suminf.    0.78971 (10) obj. -542.126 iterations 16
Cbc0038I Pass   9: suminf.    0.78971 (10) obj. -542.126 iterations 0
Cbc0038I Pass  10: suminf.    0.33333 (2) obj. -631.765 iterations 9
Cbc0038I Pass  11: suminf.    0.26190 (1) obj. -559.265 iterations 1
Cbc0038I Pass  12: suminf.    0.45529 (2) obj. -542.126 iterations 2
Cbc0038I Pass  13: suminf.    0.71464 (6) obj. -542.126 iterations 21
Cbc0038I Pass  14: suminf.    0.71464 (6) obj. -542.126 iterations 4
Cbc0038I Pass  15: suminf.    0.28571 (1) obj. -838.868 iterations 7
Cbc0038I Pass  16: suminf.    0.31056 (1) obj. -542.126 iterations 2
Cbc0038I Pass  17: suminf.    2.68888 (15) obj. -542.126 iterations 27
Cbc0038I Pass  18: suminf.    2.50590 (13) obj. -542.126 iterations 1
Cbc0038I Pass  19: suminf.    1.33345 (5) obj. -542.126 iterations 14
Cbc0038I Pass  20: suminf.    1.33345 (5) obj. -542.126 iterations 0
Cbc0038I Pass  21: suminf.    1.66745 (5) obj. -542.126 iterations 3
Cbc0038I Pass  22: suminf.    1.04373 (6) obj. -542.126 iterations 1
Cbc0038I Pass  23: suminf.    1.04373 (6) obj. -542.126 iterations 0
Cbc0038I Pass  24: suminf.    0.39757 (1) obj. -542.126 iterations 9
Cbc0038I Pass  25: suminf.    0.39757 (1) obj. -542.126 iterations 3
Cbc0038I Pass  26: suminf.    0.28571 (1) obj. -774.911 iterations 2
Cbc0038I Pass  27: suminf.    1.29756 (8) obj. -542.126 iterations 29
Cbc0038I Pass  28: suminf.    1.29756 (8) obj. -542.126 iterations 1
Cbc0038I Pass  29: suminf.    0.77969 (2) obj. -542.126 iterations 11
Cbc0038I Pass  30: suminf.    0.61185 (2) obj. -665.49 iterations 3
Cbc0038I Pass  31: suminf.    0.76047 (2) obj. -542.126 iterations 3
Cbc0038I Pass  32: suminf.    0.76047 (2) obj. -542.126 iterations 0
Cbc0038I Pass  33: suminf.    4.44395 (16) obj. -542.126 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 56 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -347.521 to -395.456 (0.04 seconds)
Cbc0038I Round again with cutoff of -892.416
Cbc0038I Pass  33: suminf.    2.43495 (21) obj. -959.997 iterations 0
Cbc0038I Pass  34: suminf.    2.43495 (21) obj. -959.997 iterations 1
Cbc0038I Pass  35: suminf.    1.52166 (21) obj. -892.416 iterations 22
Cbc0038I Pass  36: suminf.    1.41438 (19) obj. -1141.83 iterations 2
Cbc0038I Pass  37: suminf.    0.81203 (3) obj. -892.416 iterations 22
Cbc0038I Pass  38: suminf.    0.54097 (2) obj. -919.73 iterations 2
Cbc0038I Pass  39: suminf.    3.04471 (17) obj. -892.416 iterations 16
Cbc0038I Pass  40: suminf.    1.71089 (12) obj. -1158.69 iterations 5
Cbc0038I Pass  41: suminf.    0.87088 (4) obj. -892.416 iterations 15
Cbc0038I Pass  42: suminf.    0.87088 (4) obj. -892.416 iterations 0
Cbc0038I Pass  43: suminf.    1.26824 (4) obj. -892.416 iterations 2
Cbc0038I Pass  44: suminf.    0.94724 (4) obj. -977.16 iterations 4
Cbc0038I Pass  45: suminf.    2.35284 (9) obj. -892.416 iterations 13
Cbc0038I Pass  46: suminf.    1.50580 (9) obj. -892.416 iterations 9
Cbc0038I Pass  47: suminf.    1.26293 (5) obj. -892.416 iterations 6
Cbc0038I Pass  48: suminf.    1.26293 (5) obj. -892.416 iterations 0
Cbc0038I Pass  49: suminf.    1.20903 (5) obj. -892.416 iterations 1
Cbc0038I Pass  50: suminf.    0.99367 (5) obj. -892.416 iterations 1
Cbc0038I Pass  51: suminf.    3.53674 (13) obj. -892.416 iterations 12
Cbc0038I Pass  52: suminf.    2.58809 (12) obj. -892.416 iterations 3
Cbc0038I Pass  53: suminf.    2.08308 (10) obj. -928.312 iterations 2
Cbc0038I Pass  54: suminf.    1.23320 (6) obj. -892.416 iterations 11
Cbc0038I Pass  55: suminf.    1.23320 (6) obj. -892.416 iterations 1
Cbc0038I Pass  56: suminf.    1.26426 (6) obj. -892.416 iterations 3
Cbc0038I Pass  57: suminf.    1.26426 (6) obj. -892.416 iterations 0
Cbc0038I Pass  58: suminf.    1.23320 (6) obj. -892.416 iterations 1
Cbc0038I Pass  59: suminf.    2.66378 (13) obj. -892.416 iterations 15
Cbc0038I Pass  60: suminf.    1.38046 (8) obj. -1017.94 iterations 4
Cbc0038I Pass  61: suminf.    1.38046 (8) obj. -1017.94 iterations 1
Cbc0038I Pass  62: suminf.    1.02818 (4) obj. -892.416 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 35 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -395.456 - took 0.05 seconds
Cbc0012I Integer solution of -395.456 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 90 columns, reduced to 47 rows 48 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 27 added rows had average density of 7.8518519
Cbc0013I At root node, 36 cuts changed objective from -2293.5739 to -363.03566 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 419 row cuts average 2.0 elements, 17 column cuts (17 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -395.456, took 71 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 45 (-5) columns and 255 (-30) elements
Clp1000I sum of infeasibilities 0.00992971 - average 0.000115462, 2 fixed columns
Coin0506I Presolve 75 (-11) rows, 43 (-2) columns and 229 (-26) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 2456.2865
Clp0000I Optimal - objective value 2456.2865
Coin0511I After Postsolve, objective 2456.2865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2456.2865
Clp0000I Optimal - objective value 2456.2865
Clp0000I Optimal - objective value 2456.2865
Coin0511I After Postsolve, objective 2456.2865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2456.286491 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 45 columns (44 integer (44 of which binary)) and 255 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 13
Cbc0038I Solution found of 424.595
Cbc0038I Relaxing continuous gives 424.169
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 45 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 424.169 to -348.173 (0.03 seconds)
Cbc0038I Round again with cutoff of -558.984
Cbc0038I Pass   1: suminf.    1.12714 (38) obj. -558.984 iterations 9
Cbc0038I Pass   2: suminf.    1.11090 (42) obj. -558.984 iterations 7
Cbc0038I Pass   3: suminf.    3.00000 (15) obj. -558.984 iterations 34
Cbc0038I Pass   4: suminf.    3.00000 (15) obj. -558.984 iterations 1
Cbc0038I Pass   5: suminf.    1.94137 (19) obj. -558.984 iterations 23
Cbc0038I Pass   6: suminf.    4.80517 (17) obj. -558.984 iterations 18
Cbc0038I Pass   7: suminf.    2.98497 (12) obj. -558.984 iterations 25
Cbc0038I Pass   8: suminf.    2.00000 (7) obj. -558.984 iterations 9
Cbc0038I Pass   9: suminf.    1.00000 (7) obj. -558.984 iterations 2
Cbc0038I Pass  10: suminf.    1.00000 (7) obj. -558.984 iterations 0
Cbc0038I Pass  11: suminf.    2.23762 (9) obj. -558.984 iterations 8
Cbc0038I Pass  12: suminf.    1.11927 (5) obj. -558.984 iterations 5
Cbc0038I Pass  13: suminf.    0.57092 (3) obj. -558.984 iterations 2
Cbc0038I Pass  14: suminf.    1.14138 (7) obj. -558.984 iterations 5
Cbc0038I Pass  15: suminf.    0.74321 (4) obj. -558.984 iterations 3
Cbc0038I Pass  16: suminf.    0.96856 (5) obj. -558.984 iterations 8
Cbc0038I Pass  17: suminf.    0.74381 (5) obj. -558.984 iterations 4
Cbc0038I Pass  18: suminf.    1.59052 (7) obj. -558.984 iterations 6
Cbc0038I Pass  19: suminf.    0.59511 (3) obj. -558.984 iterations 4
Cbc0038I Pass  20: suminf.    1.18313 (7) obj. -558.984 iterations 5
Cbc0038I Pass  21: suminf.    1.07025 (5) obj. -558.984 iterations 2
Cbc0038I Pass  22: suminf.    2.79266 (13) obj. -558.984 iterations 16
Cbc0038I Pass  23: suminf.    2.79266 (13) obj. -558.984 iterations 1
Cbc0038I Pass  24: suminf.    3.36916 (14) obj. -558.984 iterations 22
Cbc0038I Pass  25: suminf.    1.32491 (28) obj. -558.984 iterations 16
Cbc0038I Pass  26: suminf.    1.11090 (42) obj. -558.984 iterations 21
Cbc0038I Pass  27: suminf.    1.12275 (7) obj. -558.984 iterations 39
Cbc0038I Pass  28: suminf.    0.50066 (4) obj. -558.984 iterations 7
Cbc0038I Pass  29: suminf.    1.41873 (7) obj. -558.984 iterations 7
Cbc0038I Pass  30: suminf.    1.30990 (6) obj. -558.984 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 45 columns, reduced to 82 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -348.173 to -395.456 (0.06 seconds)
Cbc0038I Round again with cutoff of -938.445
Cbc0038I Pass  30: suminf.    3.74263 (38) obj. -938.445 iterations 0
Cbc0038I Pass  31: suminf.    3.68869 (42) obj. -938.445 iterations 7
Cbc0038I Pass  32: suminf.    4.00000 (17) obj. -938.445 iterations 28
Cbc0038I Pass  33: suminf.    4.00000 (17) obj. -938.445 iterations 0
Cbc0038I Pass  34: suminf.    9.37812 (27) obj. -938.445 iterations 19
Cbc0038I Pass  35: suminf.    4.00000 (16) obj. -938.445 iterations 14
Cbc0038I Pass  36: suminf.    3.00000 (15) obj. -938.445 iterations 4
Cbc0038I Pass  37: suminf.    3.00000 (15) obj. -938.445 iterations 0
Cbc0038I Pass  38: suminf.    4.03007 (31) obj. -938.445 iterations 37
Cbc0038I Pass  39: suminf.    3.68869 (42) obj. -938.445 iterations 17
Cbc0038I Pass  40: suminf.    5.00000 (18) obj. -938.445 iterations 31
Cbc0038I Pass  41: suminf.    5.00000 (18) obj. -938.445 iterations 0
Cbc0038I Pass  42: suminf.    3.74263 (38) obj. -938.445 iterations 28
Cbc0038I Pass  43: suminf.    2.80957 (11) obj. -938.445 iterations 40
Cbc0038I Pass  44: suminf.    1.87537 (8) obj. -938.445 iterations 4
Cbc0038I Pass  45: suminf.    2.86102 (10) obj. -938.445 iterations 10
Cbc0038I Pass  46: suminf.    1.55696 (8) obj. -938.445 iterations 6
Cbc0038I Pass  47: suminf.    1.31940 (8) obj. -938.445 iterations 2
Cbc0038I Pass  48: suminf.    1.85204 (8) obj. -938.445 iterations 9
Cbc0038I Pass  49: suminf.    1.10257 (7) obj. -938.445 iterations 4
Cbc0038I Pass  50: suminf.    1.10064 (7) obj. -938.445 iterations 1
Cbc0038I Pass  51: suminf.    1.87702 (8) obj. -938.445 iterations 10
Cbc0038I Pass  52: suminf.    1.63784 (7) obj. -938.445 iterations 2
Cbc0038I Pass  53: suminf.    2.20070 (9) obj. -938.445 iterations 9
Cbc0038I Pass  54: suminf.    1.10257 (7) obj. -938.445 iterations 6
Cbc0038I Pass  55: suminf.    1.10064 (7) obj. -938.445 iterations 1
Cbc0038I Pass  56: suminf.    1.87702 (8) obj. -938.445 iterations 7
Cbc0038I Pass  57: suminf.    1.63784 (7) obj. -938.445 iterations 2
Cbc0038I Pass  58: suminf.    2.20070 (9) obj. -938.445 iterations 9
Cbc0038I Pass  59: suminf.    1.10257 (7) obj. -938.445 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 45 columns, reduced to 84 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -395.456 - took 0.08 seconds
Cbc0012I Integer solution of -395.456 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 21 added rows had average density of 39.571429
Cbc0013I At root node, 21 cuts changed objective from -2456.2865 to -977.16735 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5178 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1027 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 41.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -395.456, took 6016 iterations and 20 nodes (0.63 seconds)
Cbc0032I Strong branching done 364 times (8004 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 9, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.62   (Wallclock seconds):       0.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 90 (-7) columns and 1243 (-171) elements
Clp1000I sum of infeasibilities 0 - average 0, 75 fixed columns
Coin0506I Presolve 10 (-78) rows, 14 (-76) columns and 32 (-1211) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 1.53334 - largest nonzero change 1.702643e-05 ( 0.00085132148%) - largest zero change 1.573335e-05
Clp0000I Optimal - objective value -376.1328
Clp0000I Optimal - objective value -376.1328
Coin0511I After Postsolve, objective -376.1328, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5936821 - largest nonzero change 1.2037205e-05 ( 0.00086296483%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3047.051
Clp0000I Optimal - objective value 3047.051
Clp0000I Optimal - objective value 3047.051
Coin0511I After Postsolve, objective 3047.051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3047.051017 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 90 columns (90 integer (90 of which binary)) and 1245 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.121%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.79684
Cbc0038I Pass   1: suminf.    2.43495 (21) obj. -959.997 iterations 10
Cbc0038I Pass   2: suminf.    2.43495 (21) obj. -959.997 iterations 1
Cbc0038I Pass   3: suminf.    0.21903 (6) obj. 515.725 iterations 15
Cbc0038I Solution found of 729.395
Cbc0038I Rounding solution of 365.687 is better than previous of 729.395

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 365.687 to -347.521 (0.02 seconds)
Cbc0038I Round again with cutoff of -542.126
Cbc0038I Pass   4: suminf.    2.43495 (21) obj. -959.997 iterations 0
Cbc0038I Pass   5: suminf.    2.43495 (21) obj. -959.997 iterations 1
Cbc0038I Pass   6: suminf.    1.17813 (25) obj. -542.126 iterations 18
Cbc0038I Pass   7: suminf.    1.17813 (25) obj. -542.126 iterations 0
Cbc0038I Pass   8: suminf.    0.78971 (10) obj. -542.126 iterations 16
Cbc0038I Pass   9: suminf.    0.78971 (10) obj. -542.126 iterations 0
Cbc0038I Pass  10: suminf.    0.33333 (2) obj. -631.765 iterations 9
Cbc0038I Pass  11: suminf.    0.26190 (1) obj. -559.265 iterations 1
Cbc0038I Pass  12: suminf.    0.45529 (2) obj. -542.126 iterations 2
Cbc0038I Pass  13: suminf.    0.71464 (6) obj. -542.126 iterations 21
Cbc0038I Pass  14: suminf.    0.71464 (6) obj. -542.126 iterations 4
Cbc0038I Pass  15: suminf.    0.28571 (1) obj. -838.868 iterations 7
Cbc0038I Pass  16: suminf.    0.31056 (1) obj. -542.126 iterations 2
Cbc0038I Pass  17: suminf.    2.68888 (15) obj. -542.126 iterations 27
Cbc0038I Pass  18: suminf.    2.50590 (13) obj. -542.126 iterations 1
Cbc0038I Pass  19: suminf.    1.33345 (5) obj. -542.126 iterations 14
Cbc0038I Pass  20: suminf.    1.33345 (5) obj. -542.126 iterations 0
Cbc0038I Pass  21: suminf.    1.66745 (5) obj. -542.126 iterations 3
Cbc0038I Pass  22: suminf.    1.04373 (6) obj. -542.126 iterations 1
Cbc0038I Pass  23: suminf.    1.04373 (6) obj. -542.126 iterations 0
Cbc0038I Pass  24: suminf.    0.39757 (1) obj. -542.126 iterations 9
Cbc0038I Pass  25: suminf.    0.39757 (1) obj. -542.126 iterations 3
Cbc0038I Pass  26: suminf.    0.28571 (1) obj. -774.911 iterations 2
Cbc0038I Pass  27: suminf.    1.29756 (8) obj. -542.126 iterations 29
Cbc0038I Pass  28: suminf.    1.29756 (8) obj. -542.126 iterations 1
Cbc0038I Pass  29: suminf.    0.77969 (2) obj. -542.126 iterations 11
Cbc0038I Pass  30: suminf.    0.61185 (2) obj. -665.49 iterations 3
Cbc0038I Pass  31: suminf.    0.76047 (2) obj. -542.126 iterations 3
Cbc0038I Pass  32: suminf.    0.76047 (2) obj. -542.126 iterations 0
Cbc0038I Pass  33: suminf.    4.44395 (16) obj. -542.126 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 56 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -347.521 to -395.456 (0.04 seconds)
Cbc0038I Round again with cutoff of -892.416
Cbc0038I Pass  33: suminf.    2.43495 (21) obj. -959.997 iterations 0
Cbc0038I Pass  34: suminf.    2.43495 (21) obj. -959.997 iterations 1
Cbc0038I Pass  35: suminf.    1.52166 (21) obj. -892.416 iterations 22
Cbc0038I Pass  36: suminf.    1.41438 (19) obj. -1141.83 iterations 2
Cbc0038I Pass  37: suminf.    0.81203 (3) obj. -892.416 iterations 22
Cbc0038I Pass  38: suminf.    0.54097 (2) obj. -919.73 iterations 2
Cbc0038I Pass  39: suminf.    3.04471 (17) obj. -892.416 iterations 16
Cbc0038I Pass  40: suminf.    1.71089 (12) obj. -1158.69 iterations 5
Cbc0038I Pass  41: suminf.    0.87088 (4) obj. -892.416 iterations 15
Cbc0038I Pass  42: suminf.    0.87088 (4) obj. -892.416 iterations 0
Cbc0038I Pass  43: suminf.    1.26824 (4) obj. -892.416 iterations 2
Cbc0038I Pass  44: suminf.    0.94724 (4) obj. -977.16 iterations 4
Cbc0038I Pass  45: suminf.    2.35284 (9) obj. -892.416 iterations 13
Cbc0038I Pass  46: suminf.    1.50580 (9) obj. -892.416 iterations 9
Cbc0038I Pass  47: suminf.    1.26293 (5) obj. -892.416 iterations 6
Cbc0038I Pass  48: suminf.    1.26293 (5) obj. -892.416 iterations 0
Cbc0038I Pass  49: suminf.    1.20903 (5) obj. -892.416 iterations 1
Cbc0038I Pass  50: suminf.    0.99367 (5) obj. -892.416 iterations 1
Cbc0038I Pass  51: suminf.    3.53674 (13) obj. -892.416 iterations 12
Cbc0038I Pass  52: suminf.    2.58809 (12) obj. -892.416 iterations 3
Cbc0038I Pass  53: suminf.    2.08308 (10) obj. -928.312 iterations 2
Cbc0038I Pass  54: suminf.    1.23320 (6) obj. -892.416 iterations 11
Cbc0038I Pass  55: suminf.    1.23320 (6) obj. -892.416 iterations 1
Cbc0038I Pass  56: suminf.    1.26426 (6) obj. -892.416 iterations 3
Cbc0038I Pass  57: suminf.    1.26426 (6) obj. -892.416 iterations 0
Cbc0038I Pass  58: suminf.    1.23320 (6) obj. -892.416 iterations 1
Cbc0038I Pass  59: suminf.    2.66378 (13) obj. -892.416 iterations 15
Cbc0038I Pass  60: suminf.    1.38046 (8) obj. -1017.94 iterations 4
Cbc0038I Pass  61: suminf.    1.38046 (8) obj. -1017.94 iterations 1
Cbc0038I Pass  62: suminf.    1.02818 (4) obj. -892.416 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 35 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -395.456 - took 0.05 seconds
Cbc0012I Integer solution of -395.456 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 90 columns, reduced to 47 rows 48 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 27 added rows had average density of 7.8518519
Cbc0013I At root node, 36 cuts changed objective from -2293.5739 to -363.03566 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 419 row cuts average 2.0 elements, 17 column cuts (17 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -395.456, took 71 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

