Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 99 (-4) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 5.88786e-05 - average 3.27104e-07, 24 fixed columns
Coin0506I Presolve 127 (-53) rows, 72 (-27) columns and 390 (-160) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 1.9382074 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 48.654104
Clp0000I Optimal - objective value 48.654104
Coin0511I After Postsolve, objective 48.654104, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.654104
Clp0000I Optimal - objective value 48.654104
Clp0000I Optimal - objective value 48.654104
Coin0511I After Postsolve, objective 48.654104, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.65410373 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 178 rows, 99 columns (98 integer (98 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.041%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 7.21218
Cbc0038I Solution found of 4.58829
Cbc0038I Relaxing continuous gives -3.21418
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 99 columns, reduced to 73 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -3.21418 to -23.1503 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.6961
Cbc0038I Pass   1: suminf.    2.88632 (30) obj. -25.6961 iterations 50
Cbc0038I Pass   2: suminf.    1.63064 (6) obj. -25.6961 iterations 38
Cbc0038I Pass   3: suminf.    1.54944 (5) obj. -25.6961 iterations 4
Cbc0038I Pass   4: suminf.    1.50903 (6) obj. -25.6961 iterations 14
Cbc0038I Pass   5: suminf.    1.89575 (5) obj. -25.6961 iterations 5
Cbc0038I Pass   6: suminf.    1.89742 (5) obj. -25.6961 iterations 1
Cbc0038I Pass   7: suminf.    0.92887 (4) obj. -25.6961 iterations 4
Cbc0038I Pass   8: suminf.    0.92394 (5) obj. -25.6961 iterations 1
Cbc0038I Pass   9: suminf.    2.16775 (7) obj. -25.6961 iterations 15
Cbc0038I Pass  10: suminf.    1.52563 (7) obj. -25.6961 iterations 2
Cbc0038I Pass  11: suminf.    1.21609 (4) obj. -25.6961 iterations 7
Cbc0038I Pass  12: suminf.    1.26077 (4) obj. -25.6961 iterations 1
Cbc0038I Pass  13: suminf.    2.53576 (8) obj. -25.6961 iterations 19
Cbc0038I Pass  14: suminf.    1.55149 (6) obj. -25.6961 iterations 20
Cbc0038I Pass  15: suminf.    1.85834 (5) obj. -25.6961 iterations 5
Cbc0038I Pass  16: suminf.    1.59328 (5) obj. -25.6961 iterations 3
Cbc0038I Pass  17: suminf.    1.54660 (6) obj. -25.6961 iterations 1
Cbc0038I Pass  18: suminf.    2.08106 (5) obj. -25.6961 iterations 4
Cbc0038I Pass  19: suminf.    0.99104 (4) obj. -25.6961 iterations 3
Cbc0038I Pass  20: suminf.    0.73471 (4) obj. -25.6961 iterations 2
Cbc0038I Pass  21: suminf.    1.57430 (5) obj. -25.6961 iterations 5
Cbc0038I Pass  22: suminf.    1.57228 (6) obj. -25.6961 iterations 1
Cbc0038I Pass  23: suminf.    1.94659 (5) obj. -25.6961 iterations 4
Cbc0038I Pass  24: suminf.    1.02438 (4) obj. -25.6961 iterations 3
Cbc0038I Pass  25: suminf.    0.83532 (4) obj. -25.6961 iterations 2
Cbc0038I Pass  26: suminf.    1.70689 (5) obj. -25.6961 iterations 9
Cbc0038I Pass  27: suminf.    1.70689 (5) obj. -25.6961 iterations 0
Cbc0038I Pass  28: suminf.    1.94659 (5) obj. -25.6961 iterations 3
Cbc0038I Pass  29: suminf.    1.02438 (4) obj. -25.6961 iterations 3
Cbc0038I Pass  30: suminf.    0.83532 (4) obj. -25.6961 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 99 columns, reduced to 95 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -23.1503 - took 0.08 seconds
Cbc0012I Integer solution of -23.15031 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 178 rows 99 columns, reduced to 73 rows 43 columns
Cbc0031I 27 added rows had average density of 64.074074
Cbc0013I At root node, 27 cuts changed objective from -48.607735 to -41.22792 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10208 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2138 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 98.8 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.15031 best solution, best possible -41.22792 (1.05 seconds)
Cbc0038I Full problem 178 rows 99 columns, reduced to 55 rows 33 columns
Cbc0001I Search completed - best objective -23.15031, took 10239 iterations and 92 nodes (1.53 seconds)
Cbc0032I Strong branching done 1214 times (20673 iterations), fathomed 7 nodes and fixed 28 variables
Cbc0035I Maximum depth 26, 228 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       1.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-69) rows, 151 (-51) columns and 2774 (-2879) elements
Clp1000I sum of infeasibilities 6.26688e-07 - average 4.64213e-09, 52 fixed columns
Coin0506I Presolve 86 (-49) rows, 99 (-52) columns and 1381 (-1393) elements
Clp0006I 0  Obj 138.88807 Dual inf 7.5613327 (98)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 1.6655394 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 145.31226
Clp0000I Optimal - objective value 145.31226
Coin0511I After Postsolve, objective 145.31226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 145.31226 Dual inf 64.097465 (3)
Clp0014I Perturbing problem by 0.001% of 1.4392146 - largest nonzero change 1.8094956e-05 ( 0.0018094956%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 145.31226
Clp0000I Optimal - objective value 145.31226
Clp0000I Optimal - objective value 145.31226
Coin0511I After Postsolve, objective 145.31226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.312263 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 52 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 151 columns (151 integer (151 of which binary)) and 2786 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.3762
Cbc0038I Pass   1: suminf.    0.28529 (10) obj. -28.6902 iterations 45
Cbc0038I Pass   2: suminf.    0.28529 (10) obj. -28.6902 iterations 2
Cbc0038I Solution found of -8.49071
Cbc0038I Rounding solution of -14.9823 is better than previous of -8.49071

Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 151 columns, reduced to 41 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -14.9823 to -78.483 (0.05 seconds)
Cbc0038I Round again with cutoff of -83.3175
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.11930 (39) obj. -83.3175 iterations 29
Cbc0038I Pass   4: suminf.    3.11930 (39) obj. -83.3175 iterations 1
Cbc0038I Pass   5: suminf.    4.07821 (27) obj. -83.3175 iterations 26
Cbc0038I Pass   6: suminf.    4.01997 (24) obj. -83.3175 iterations 7
Cbc0038I Pass   7: suminf.    2.42678 (12) obj. -83.3175 iterations 15
Cbc0038I Pass   8: suminf.    0.43171 (5) obj. -83.3175 iterations 17
Cbc0038I Pass   9: suminf.    0.43171 (5) obj. -83.3175 iterations 0
Cbc0038I Pass  10: suminf.    0.54034 (5) obj. -83.3175 iterations 2
Cbc0038I Pass  11: suminf.    0.43262 (5) obj. -83.3175 iterations 3
Cbc0038I Pass  12: suminf.    0.43171 (5) obj. -83.3175 iterations 3
Cbc0038I Pass  13: suminf.    4.56724 (21) obj. -83.3175 iterations 28
Cbc0038I Pass  14: suminf.    4.56724 (21) obj. -83.3175 iterations 1
Cbc0038I Pass  15: suminf.    2.40383 (12) obj. -83.3175 iterations 20
Cbc0038I Pass  16: suminf.    2.40383 (12) obj. -83.3175 iterations 0
Cbc0038I Pass  17: suminf.    1.24143 (8) obj. -83.3175 iterations 7
Cbc0038I Pass  18: suminf.    1.24143 (8) obj. -83.3175 iterations 0
Cbc0038I Pass  19: suminf.    0.51963 (3) obj. -83.3175 iterations 12
Cbc0038I Pass  20: suminf.    0.37464 (2) obj. -83.3175 iterations 10
Cbc0038I Pass  21: suminf.    0.48985 (2) obj. -83.3175 iterations 8
Cbc0038I Pass  22: suminf.    2.88650 (15) obj. -83.3175 iterations 18
Cbc0038I Pass  23: suminf.    2.88650 (15) obj. -83.3175 iterations 3
Cbc0038I Pass  24: suminf.    1.03944 (3) obj. -83.3175 iterations 15
Cbc0038I Pass  25: suminf.    1.03944 (3) obj. -83.3175 iterations 0
Cbc0038I Pass  26: suminf.    0.91931 (3) obj. -83.3175 iterations 16
Cbc0038I Pass  27: suminf.    0.54823 (3) obj. -83.3175 iterations 1
Cbc0038I Pass  28: suminf.    0.57524 (3) obj. -83.3175 iterations 10
Cbc0038I Pass  29: suminf.    0.52883 (4) obj. -83.3175 iterations 3
Cbc0038I Pass  30: suminf.    1.43637 (7) obj. -83.3175 iterations 9
Cbc0038I Pass  31: suminf.    1.31393 (8) obj. -83.3175 iterations 1
Cbc0038I Pass  32: suminf.    0.52883 (4) obj. -83.3175 iterations 12
Cbc0038I Rounding solution of -81.9383 is better than previous of -78.483

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 151 columns, reduced to 50 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -81.9383 to -84.2871 (0.07 seconds)
Cbc0038I Round again with cutoff of -92.7951
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.63796 (39) obj. -92.7951 iterations 0
Cbc0038I Pass  33: suminf.    3.40960 (38) obj. -92.7951 iterations 7
Cbc0038I Pass  34: suminf.    4.53402 (25) obj. -92.7951 iterations 28
Cbc0038I Pass  35: suminf.    4.53402 (25) obj. -92.7951 iterations 0
Cbc0038I Pass  36: suminf.    1.17634 (8) obj. -92.7951 iterations 40
Cbc0038I Pass  37: suminf.    1.11720 (9) obj. -92.7951 iterations 1
Cbc0038I Pass  38: suminf.    1.29212 (4) obj. -92.7951 iterations 11
Cbc0038I Pass  39: suminf.    1.01736 (8) obj. -92.7951 iterations 10
Cbc0038I Pass  40: suminf.    2.38299 (13) obj. -92.7951 iterations 19
Cbc0038I Pass  41: suminf.    2.38299 (13) obj. -92.7951 iterations 3
Cbc0038I Pass  42: suminf.    1.35557 (8) obj. -92.7951 iterations 11
Cbc0038I Pass  43: suminf.    1.34391 (8) obj. -92.7951 iterations 2
Cbc0038I Pass  44: suminf.    5.37826 (24) obj. -92.7951 iterations 23
Cbc0038I Pass  45: suminf.    4.87152 (23) obj. -92.7951 iterations 4
Cbc0038I Pass  46: suminf.    1.33522 (12) obj. -92.7951 iterations 17
Cbc0038I Pass  47: suminf.    0.80403 (4) obj. -92.8508 iterations 9
Cbc0038I Pass  48: suminf.    1.02460 (7) obj. -92.7951 iterations 6
Cbc0038I Pass  49: suminf.    2.50749 (14) obj. -92.7951 iterations 14
Cbc0038I Pass  50: suminf.    2.14807 (9) obj. -92.7951 iterations 14
Cbc0038I Pass  51: suminf.    1.29017 (5) obj. -92.7951 iterations 16
Cbc0038I Pass  52: suminf.    1.02281 (8) obj. -92.7951 iterations 5
Cbc0038I Pass  53: suminf.    1.13177 (8) obj. -92.7951 iterations 6
Cbc0038I Pass  54: suminf.    3.22050 (18) obj. -92.7951 iterations 18
Cbc0038I Pass  55: suminf.    3.03601 (15) obj. -92.7951 iterations 5
Cbc0038I Pass  56: suminf.    1.62162 (6) obj. -92.7951 iterations 16
Cbc0038I Pass  57: suminf.    1.51595 (10) obj. -92.7951 iterations 3
Cbc0038I Pass  58: suminf.    1.45379 (7) obj. -92.7951 iterations 14
Cbc0038I Pass  59: suminf.    1.45379 (7) obj. -92.7951 iterations 0
Cbc0038I Pass  60: suminf.    2.07352 (7) obj. -92.7951 iterations 9
Cbc0038I Pass  61: suminf.    1.65065 (6) obj. -92.7951 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 151 columns, reduced to 58 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -84.2871 - took 0.07 seconds
Cbc0012I Integer solution of -84.28708 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 133 rows 151 columns, reduced to 38 rows 39 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 14 added rows had average density of 12.142857
Cbc0013I At root node, 15 cuts changed objective from -126.82677 to -84.28708 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 162 row cuts average 2.0 elements, 39 column cuts (39 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 92.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 84.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -84.28707999999997, took 176 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 67 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 99 (-4) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 5.88786e-05 - average 3.27104e-07, 24 fixed columns
Coin0506I Presolve 127 (-53) rows, 72 (-27) columns and 390 (-160) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 1.9382074 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 48.654104
Clp0000I Optimal - objective value 48.654104
Coin0511I After Postsolve, objective 48.654104, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.654104
Clp0000I Optimal - objective value 48.654104
Clp0000I Optimal - objective value 48.654104
Coin0511I After Postsolve, objective 48.654104, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.65410373 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 178 rows, 99 columns (98 integer (98 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.041%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 7.21218
Cbc0038I Solution found of 4.58829
Cbc0038I Relaxing continuous gives -3.21418
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 99 columns, reduced to 73 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -3.21418 to -23.1503 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.6961
Cbc0038I Pass   1: suminf.    2.88632 (30) obj. -25.6961 iterations 50
Cbc0038I Pass   2: suminf.    1.63064 (6) obj. -25.6961 iterations 38
Cbc0038I Pass   3: suminf.    1.54944 (5) obj. -25.6961 iterations 4
Cbc0038I Pass   4: suminf.    1.50903 (6) obj. -25.6961 iterations 14
Cbc0038I Pass   5: suminf.    1.89575 (5) obj. -25.6961 iterations 5
Cbc0038I Pass   6: suminf.    1.89742 (5) obj. -25.6961 iterations 1
Cbc0038I Pass   7: suminf.    0.92887 (4) obj. -25.6961 iterations 4
Cbc0038I Pass   8: suminf.    0.92394 (5) obj. -25.6961 iterations 1
Cbc0038I Pass   9: suminf.    2.16775 (7) obj. -25.6961 iterations 15
Cbc0038I Pass  10: suminf.    1.52563 (7) obj. -25.6961 iterations 2
Cbc0038I Pass  11: suminf.    1.21609 (4) obj. -25.6961 iterations 7
Cbc0038I Pass  12: suminf.    1.26077 (4) obj. -25.6961 iterations 1
Cbc0038I Pass  13: suminf.    2.53576 (8) obj. -25.6961 iterations 19
Cbc0038I Pass  14: suminf.    1.55149 (6) obj. -25.6961 iterations 20
Cbc0038I Pass  15: suminf.    1.85834 (5) obj. -25.6961 iterations 5
Cbc0038I Pass  16: suminf.    1.59328 (5) obj. -25.6961 iterations 3
Cbc0038I Pass  17: suminf.    1.54660 (6) obj. -25.6961 iterations 1
Cbc0038I Pass  18: suminf.    2.08106 (5) obj. -25.6961 iterations 4
Cbc0038I Pass  19: suminf.    0.99104 (4) obj. -25.6961 iterations 3
Cbc0038I Pass  20: suminf.    0.73471 (4) obj. -25.6961 iterations 2
Cbc0038I Pass  21: suminf.    1.57430 (5) obj. -25.6961 iterations 5
Cbc0038I Pass  22: suminf.    1.57228 (6) obj. -25.6961 iterations 1
Cbc0038I Pass  23: suminf.    1.94659 (5) obj. -25.6961 iterations 4
Cbc0038I Pass  24: suminf.    1.02438 (4) obj. -25.6961 iterations 3
Cbc0038I Pass  25: suminf.    0.83532 (4) obj. -25.6961 iterations 2
Cbc0038I Pass  26: suminf.    1.70689 (5) obj. -25.6961 iterations 9
Cbc0038I Pass  27: suminf.    1.70689 (5) obj. -25.6961 iterations 0
Cbc0038I Pass  28: suminf.    1.94659 (5) obj. -25.6961 iterations 3
Cbc0038I Pass  29: suminf.    1.02438 (4) obj. -25.6961 iterations 3
Cbc0038I Pass  30: suminf.    0.83532 (4) obj. -25.6961 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 99 columns, reduced to 95 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -23.1503 - took 0.08 seconds
Cbc0012I Integer solution of -23.15031 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 178 rows 99 columns, reduced to 73 rows 43 columns
Cbc0031I 27 added rows had average density of 64.074074
Cbc0013I At root node, 27 cuts changed objective from -48.607735 to -41.22792 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10208 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2138 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 98.8 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.15031 best solution, best possible -41.22792 (1.08 seconds)
Cbc0038I Full problem 178 rows 99 columns, reduced to 55 rows 33 columns
Cbc0001I Search completed - best objective -23.15031, took 10239 iterations and 92 nodes (1.65 seconds)
Cbc0032I Strong branching done 1214 times (20673 iterations), fathomed 7 nodes and fixed 28 variables
Cbc0035I Maximum depth 26, 228 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       1.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-72) rows, 149 (-54) columns and 2687 (-2967) elements
Clp1000I sum of infeasibilities 1.54615e-07 - average 1.16252e-09, 26 fixed columns
Coin0506I Presolve 109 (-24) rows, 123 (-26) columns and 1905 (-782) elements
Clp0006I 0  Obj 54.579452 Dual inf 13.228698 (122)
Clp0029I End of values pass after 123 iterations
Clp0014I Perturbing problem by 0.001% of 1.4840109 - largest nonzero change 1.6698034e-05 ( 0.001262127%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 63.6536
Clp0000I Optimal - objective value 63.6536
Coin0511I After Postsolve, objective 63.6536, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 63.6536
Clp0000I Optimal - objective value 63.6536
Clp0000I Optimal - objective value 63.6536
Clp0000I Optimal - objective value 63.6536
Coin0511I After Postsolve, objective 63.6536, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.65359971 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 149 columns (149 integer (149 of which binary)) and 2696 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.677%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 4.78073
Cbc0038I Pass   1: suminf.    2.28030 (32) obj. -43.2149 iterations 27
Cbc0038I Pass   2: suminf.    2.28030 (32) obj. -43.2149 iterations 1
Cbc0038I Pass   3: suminf.    1.08261 (18) obj. -25.8244 iterations 14
Cbc0038I Pass   4: suminf.    0.15126 (4) obj. -8.07548 iterations 14
Cbc0038I Solution found of -4.22674
Cbc0038I Rounding solution of -10.2976 is better than previous of -4.22674

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 149 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -10.2976 to -11.912 (0.06 seconds)
Cbc0038I Round again with cutoff of -16.1522
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.28030 (32) obj. -43.2149 iterations 0
Cbc0038I Pass   6: suminf.    2.28030 (32) obj. -43.2149 iterations 1
Cbc0038I Pass   7: suminf.    0.70124 (13) obj. -19.3613 iterations 19
Cbc0038I Pass   8: suminf.    0.86977 (4) obj. -16.1522 iterations 27
Cbc0038I Pass   9: suminf.    0.39063 (2) obj. -16.75 iterations 7
Cbc0038I Pass  10: suminf.    1.32243 (17) obj. -17.8304 iterations 48
Cbc0038I Pass  11: suminf.    0.96899 (16) obj. -16.374 iterations 4
Cbc0038I Pass  12: suminf.    2.59366 (8) obj. -16.1522 iterations 22
Cbc0038I Pass  13: suminf.    0.58507 (5) obj. -16.1522 iterations 6
Cbc0038I Pass  14: suminf.    0.46539 (5) obj. -16.1522 iterations 4
Cbc0038I Pass  15: suminf.    0.62819 (5) obj. -16.1522 iterations 4
Cbc0038I Pass  16: suminf.    0.97725 (9) obj. -16.1522 iterations 37
Cbc0038I Pass  17: suminf.    0.44205 (7) obj. -16.1522 iterations 11
Cbc0038I Pass  18: suminf.    0.48535 (6) obj. -16.1522 iterations 18
Cbc0038I Pass  19: suminf.    0.38671 (6) obj. -16.1522 iterations 6
Cbc0038I Pass  20: suminf.    0.48535 (6) obj. -16.1522 iterations 5
Cbc0038I Pass  21: suminf.    2.49772 (27) obj. -16.1522 iterations 27
Cbc0038I Pass  22: suminf.    1.14951 (11) obj. -16.9295 iterations 14
Cbc0038I Pass  23: suminf.    1.64840 (18) obj. -16.1522 iterations 19
Cbc0038I Pass  24: suminf.    1.48803 (18) obj. -16.1522 iterations 4
Cbc0038I Pass  25: suminf.    1.48803 (18) obj. -16.1522 iterations 3
Cbc0038I Pass  26: suminf.    1.66505 (13) obj. -16.1522 iterations 25
Cbc0038I Pass  27: suminf.    1.53139 (16) obj. -16.1522 iterations 9
Cbc0038I Pass  28: suminf.    1.53284 (14) obj. -16.1522 iterations 7
Cbc0038I Pass  29: suminf.    1.05919 (13) obj. -19.5417 iterations 42
Cbc0038I Pass  30: suminf.    1.05919 (13) obj. -19.5417 iterations 6
Cbc0038I Pass  31: suminf.    1.66973 (14) obj. -16.1522 iterations 25
Cbc0038I Pass  32: suminf.    1.52443 (14) obj. -16.1522 iterations 6
Cbc0038I Pass  33: suminf.    1.97741 (13) obj. -16.1522 iterations 18
Cbc0038I Pass  34: suminf.    1.42330 (12) obj. -16.1522 iterations 17
Cbc0038I Rounding solution of -13.0769 is better than previous of -11.912

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 149 columns, reduced to 63 rows 74 columns
Cbc0038I Mini branch and bound improved solution from -13.0769 to -23.1503 (0.14 seconds)
Cbc0038I Round again with cutoff of -29.3831
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.28030 (32) obj. -43.2149 iterations 0
Cbc0038I Pass  35: suminf.    2.28030 (32) obj. -43.2149 iterations 1
Cbc0038I Pass  36: suminf.    1.98244 (24) obj. -29.3831 iterations 47
Cbc0038I Pass  37: suminf.    1.53190 (26) obj. -29.3831 iterations 1
Cbc0038I Pass  38: suminf.    1.16729 (11) obj. -29.3831 iterations 2
Cbc0038I Pass  39: suminf.    1.06431 (10) obj. -29.3831 iterations 15
Cbc0038I Pass  40: suminf.    0.89473 (26) obj. -29.3831 iterations 4
Cbc0038I Pass  41: suminf.    2.71148 (23) obj. -29.3831 iterations 23
Cbc0038I Pass  42: suminf.    1.97793 (26) obj. -29.3831 iterations 4
Cbc0038I Pass  43: suminf.    1.98588 (24) obj. -29.3831 iterations 6
Cbc0038I Pass  44: suminf.    2.26464 (24) obj. -29.3831 iterations 30
Cbc0038I Pass  45: suminf.    2.04031 (25) obj. -29.3831 iterations 9
Cbc0038I Pass  46: suminf.    3.42549 (24) obj. -29.3831 iterations 18
Cbc0038I Pass  47: suminf.    2.57137 (23) obj. -29.3831 iterations 6
Cbc0038I Pass  48: suminf.    2.43048 (24) obj. -29.3831 iterations 9
Cbc0038I Pass  49: suminf.    2.57137 (23) obj. -29.3831 iterations 19
Cbc0038I Pass  50: suminf.    2.31861 (24) obj. -29.3831 iterations 10
Cbc0038I Pass  51: suminf.    2.57137 (23) obj. -29.3831 iterations 14
Cbc0038I Pass  52: suminf.    2.36298 (24) obj. -29.3831 iterations 11
Cbc0038I Pass  53: suminf.    3.15492 (25) obj. -29.3831 iterations 12
Cbc0038I Pass  54: suminf.    3.91768 (25) obj. -29.3831 iterations 30
Cbc0038I Pass  55: suminf.    2.93072 (24) obj. -29.3831 iterations 10
Cbc0038I Pass  56: suminf.    3.22946 (24) obj. -29.3831 iterations 12
Cbc0038I Pass  57: suminf.    2.44667 (24) obj. -29.3831 iterations 7
Cbc0038I Pass  58: suminf.    2.36298 (24) obj. -29.3831 iterations 9
Cbc0038I Pass  59: suminf.    2.57137 (23) obj. -29.3831 iterations 10
Cbc0038I Pass  60: suminf.    3.16543 (27) obj. -29.3831 iterations 26
Cbc0038I Pass  61: suminf.    2.78852 (28) obj. -29.3831 iterations 10
Cbc0038I Pass  62: suminf.    3.22946 (24) obj. -29.3831 iterations 23
Cbc0038I Pass  63: suminf.    2.44667 (24) obj. -29.3831 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -23.1503 - took 0.11 seconds
Cbc0012I Integer solution of -23.15031 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 131 rows 149 columns, reduced to 28 rows 32 columns
Cbc0031I 69 added rows had average density of 28.985507
Cbc0013I At root node, 69 cuts changed objective from -54.313851 to -28.413876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17551 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.288 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2162 row cuts average 139.8 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 79 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 642 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1112 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 350 row cuts average 77.8 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 295 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.600 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.15031 best solution, best possible -28.413876 (4.51 seconds)
Cbc0010I After 2 nodes, 1 on tree, -23.15031 best solution, best possible -28.358951 (5.47 seconds)
Cbc0010I After 5 nodes, 4 on tree, -23.15031 best solution, best possible -28.358951 (6.28 seconds)
Cbc0010I After 12 nodes, 7 on tree, -23.15031 best solution, best possible -28.358951 (7.11 seconds)
Cbc0001I Search completed - best objective -23.15031, took 7496 iterations and 26 nodes (7.39 seconds)
Cbc0032I Strong branching done 482 times (14637 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 12, 40 variables fixed on reduced cost
Total time (CPU seconds):       4.91   (Wallclock seconds):       7.43

