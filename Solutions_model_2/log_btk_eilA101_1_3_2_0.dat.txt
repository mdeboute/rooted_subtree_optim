Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 101 (-2) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 0.000108493 - average 5.92858e-07, 19 fixed columns
Coin0506I Presolve 140 (-43) rows, 82 (-19) columns and 436 (-124) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 0.25056049 - largest nonzero change 0 ( 0%) - largest zero change 2.8612782e-05
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Coin0511I After Postsolve, objective 37.212872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Coin0511I After Postsolve, objective 37.212872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.21287151 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 101 columns (100 integer (100 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 11.7813
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.66583 iterations 44
Cbc0038I Solution found of 6.66583
Cbc0038I Relaxing continuous gives 6.66583
Cbc0038I Rounding solution of -6.38098 is better than previous of 6.66583

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -6.38098 to -6.55481 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.62071
Cbc0038I Pass   2: suminf.    2.82402 (10) obj. -9.62071 iterations 15
Cbc0038I Pass   3: suminf.    0.81553 (6) obj. -9.62071 iterations 14
Cbc0038I Pass   4: suminf.    0.19927 (5) obj. -9.62071 iterations 6
Cbc0038I Pass   5: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass   6: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass   7: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass   8: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass   9: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  10: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  11: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  12: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  13: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  14: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  15: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  16: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  17: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  18: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  19: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  20: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  21: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  22: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  23: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  24: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  25: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  26: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  27: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  28: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  29: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  30: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  31: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -6.55481 - took 0.11 seconds
Cbc0012I Integer solution of -6.554814 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0012I Integer solution of -7.505031 found by RINS after 0 iterations and 0 nodes (0.17 seconds)
Cbc0031I 28 added rows had average density of 70.035714
Cbc0013I At root node, 28 cuts changed objective from -37.212872 to -27.866706 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14961 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3120 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.505031 best solution, best possible -27.866706 (1.43 seconds)
Cbc0012I Integer solution of -7.731188 found by rounding after 10667 iterations and 37 nodes (1.70 seconds)
Cbc0012I Integer solution of -7.764014 found by rounding after 10670 iterations and 38 nodes (1.70 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 2 rows 4 columns
Cbc0012I Integer solution of -7.893464 found by rounding after 10768 iterations and 44 nodes (1.71 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 2 rows 5 columns
Cbc0012I Integer solution of -7.954694 found by rounding after 11452 iterations and 114 nodes (1.78 seconds)
Cbc0012I Integer solution of -7.955248 found by rounding after 11538 iterations and 122 nodes (1.79 seconds)
Cbc0004I Integer solution of -7.960814 found after 11554 iterations and 123 nodes (1.79 seconds)
Cbc0012I Integer solution of -7.991364 found by rounding after 11619 iterations and 129 nodes (1.79 seconds)
Cbc0012I Integer solution of -8.746918 found by rounding after 12604 iterations and 157 nodes (1.89 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 51 rows 35 columns
Cbc0012I Integer solution of -8.848298 found by rounding after 14108 iterations and 221 nodes (2.03 seconds)
Cbc0016I Integer solution of -9.095944 found by strong branching after 14301 iterations and 241 nodes (2.05 seconds)
Cbc0010I After 261 nodes, 6 on tree, -9.095944 best solution, best possible -27.866706 (2.13 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 30 rows 22 columns
Cbc0012I Integer solution of -9.248851 found by DiveCoefficient after 17086 iterations and 341 nodes (2.29 seconds)
Cbc0001I Search completed - best objective -9.248851000000002, took 17150 iterations and 348 nodes (2.31 seconds)
Cbc0032I Strong branching done 2642 times (35118 iterations), fathomed 28 nodes and fixed 179 variables
Cbc0035I Maximum depth 35, 1367 variables fixed on reduced cost
Total time (CPU seconds):       2.25   (Wallclock seconds):       2.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-77) rows, 144 (-58) columns and 2602 (-3051) elements
Clp1000I sum of infeasibilities 1.99967e-07 - average 1.57454e-09, 55 fixed columns
Coin0506I Presolve 74 (-53) rows, 89 (-55) columns and 1216 (-1386) elements
Clp0006I 0  Obj 38.167472 Dual inf 4.7770705 (89)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.6801352 - largest nonzero change 1.8671275e-05 ( 0.001262127%) - largest zero change 2.9741206e-05
Clp0000I Optimal - objective value 53.682068
Clp0000I Optimal - objective value 53.682068
Coin0511I After Postsolve, objective 53.682068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.682068 Dual inf 2.5679295 (3)
Clp0014I Perturbing problem by 0.001% of 1.5119898 - largest nonzero change 2.8182837e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 55.498922
Clp0000I Optimal - objective value 55.498922
Clp0000I Optimal - objective value 55.498922
Coin0511I After Postsolve, objective 55.498922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.49892206 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 144 columns (144 integer (144 of which binary)) and 2605 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.822%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.60614
Cbc0038I Pass   1: suminf.    2.92913 (34) obj. -24.2574 iterations 23
Cbc0038I Pass   2: suminf.    2.92913 (34) obj. -24.2574 iterations 1
Cbc0038I Pass   3: suminf.    1.41390 (19) obj. -7.19047 iterations 15
Cbc0038I Solution found of 12.2456
Cbc0038I Rounding solution of 3.87189 is better than previous of 12.2456

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 144 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 3.87189 to -5.63858 (0.04 seconds)
Cbc0038I Round again with cutoff of -9.6907
Cbc0038I Pass   4: suminf.    2.92913 (34) obj. -24.2574 iterations 0
Cbc0038I Pass   5: suminf.    2.92913 (34) obj. -24.2574 iterations 1
Cbc0038I Pass   6: suminf.    1.99886 (20) obj. -9.6907 iterations 25
Cbc0038I Pass   7: suminf.    1.73073 (18) obj. -11.2106 iterations 2
Cbc0038I Pass   8: suminf.    0.95010 (6) obj. -9.6907 iterations 20
Cbc0038I Pass   9: suminf.    0.59024 (5) obj. -11.1202 iterations 5
Cbc0038I Pass  10: suminf.    0.65782 (3) obj. -9.6907 iterations 10
Cbc0038I Pass  11: suminf.    0.53009 (3) obj. -9.6907 iterations 2
Cbc0038I Pass  12: suminf.    0.61797 (3) obj. -9.6907 iterations 2
Cbc0038I Pass  13: suminf.    0.53004 (3) obj. -9.6907 iterations 3
Cbc0038I Pass  14: suminf.    0.30618 (2) obj. -9.6907 iterations 9
Cbc0038I Pass  15: suminf.    0.30618 (2) obj. -9.6907 iterations 0
Cbc0038I Pass  16: suminf.    0.35654 (2) obj. -9.6907 iterations 2
Cbc0038I Pass  17: suminf.    4.86853 (21) obj. -9.6907 iterations 34
Cbc0038I Pass  18: suminf.    3.27627 (20) obj. -9.6907 iterations 5
Cbc0038I Pass  19: suminf.    3.01655 (20) obj. -9.6907 iterations 1
Cbc0038I Pass  20: suminf.    1.13751 (3) obj. -9.6907 iterations 27
Cbc0038I Pass  21: suminf.    0.76602 (4) obj. -9.6907 iterations 5
Cbc0038I Pass  22: suminf.    0.91848 (4) obj. -9.6907 iterations 4
Cbc0038I Pass  23: suminf.    0.91848 (4) obj. -9.6907 iterations 0
Cbc0038I Pass  24: suminf.    0.76602 (4) obj. -9.6907 iterations 9
Cbc0038I Pass  25: suminf.    4.53330 (18) obj. -9.6907 iterations 33
Cbc0038I Pass  26: suminf.    2.77096 (11) obj. -9.6907 iterations 13
Cbc0038I Pass  27: suminf.    2.67314 (10) obj. -9.93337 iterations 1
Cbc0038I Pass  28: suminf.    1.21548 (6) obj. -9.6907 iterations 11
Cbc0038I Pass  29: suminf.    1.08476 (6) obj. -9.6907 iterations 3
Cbc0038I Pass  30: suminf.    0.86126 (3) obj. -9.6907 iterations 7
Cbc0038I Pass  31: suminf.    0.86126 (3) obj. -9.6907 iterations 0
Cbc0038I Pass  32: suminf.    0.63222 (3) obj. -9.6907 iterations 4
Cbc0038I Pass  33: suminf.    0.85734 (4) obj. -9.6907 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 144 columns, reduced to 50 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -5.63858 to -7.52039 (0.07 seconds)
Cbc0038I Round again with cutoff of -16.9843
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.92913 (34) obj. -24.2574 iterations 0
Cbc0038I Pass  34: suminf.    2.92913 (34) obj. -24.2574 iterations 1
Cbc0038I Pass  35: suminf.    2.32091 (18) obj. -16.9843 iterations 33
Cbc0038I Pass  36: suminf.    2.30884 (16) obj. -16.9843 iterations 2
Cbc0038I Pass  37: suminf.    1.54103 (6) obj. -16.9843 iterations 24
Cbc0038I Pass  38: suminf.    1.02397 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  39: suminf.    1.53756 (6) obj. -16.9843 iterations 4
Cbc0038I Pass  40: suminf.    1.53756 (6) obj. -16.9843 iterations 1
Cbc0038I Pass  41: suminf.    0.99162 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  42: suminf.    0.99162 (6) obj. -16.9843 iterations 1
Cbc0038I Pass  43: suminf.    1.53756 (6) obj. -16.9843 iterations 4
Cbc0038I Pass  44: suminf.    4.10629 (16) obj. -16.9843 iterations 20
Cbc0038I Pass  45: suminf.    3.32085 (13) obj. -16.9843 iterations 12
Cbc0038I Pass  46: suminf.    1.48200 (8) obj. -16.9843 iterations 17
Cbc0038I Pass  47: suminf.    1.46106 (9) obj. -16.9843 iterations 2
Cbc0038I Pass  48: suminf.    2.00233 (9) obj. -16.9843 iterations 9
Cbc0038I Pass  49: suminf.    1.82852 (8) obj. -16.9843 iterations 5
Cbc0038I Pass  50: suminf.    1.35511 (6) obj. -16.9843 iterations 9
Cbc0038I Pass  51: suminf.    1.35511 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  52: suminf.    1.48182 (6) obj. -16.9843 iterations 6
Cbc0038I Pass  53: suminf.    1.35298 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  54: suminf.    1.48182 (6) obj. -16.9843 iterations 3
Cbc0038I Pass  55: suminf.    3.82628 (16) obj. -16.9843 iterations 27
Cbc0038I Pass  56: suminf.    2.88384 (14) obj. -17.7354 iterations 8
Cbc0038I Pass  57: suminf.    2.59368 (14) obj. -16.9843 iterations 4
Cbc0038I Pass  58: suminf.    2.26610 (8) obj. -16.9843 iterations 18
Cbc0038I Pass  59: suminf.    2.26610 (8) obj. -16.9843 iterations 2
Cbc0038I Pass  60: suminf.    1.48182 (6) obj. -16.9843 iterations 8
Cbc0038I Pass  61: suminf.    1.35298 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  62: suminf.    1.48182 (6) obj. -16.9843 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 144 columns, reduced to 16 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.52039 - took 0.06 seconds
Cbc0012I Integer solution of -7.520391 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 127 rows 144 columns, reduced to 3 rows 6 columns
Cbc0031I 59 added rows had average density of 58.338983
Cbc0013I At root node, 59 cuts changed objective from -46.158849 to -18.589664 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22547 row cuts average 2.0 elements, 1 column cuts (19 active)  in 0.171 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2709 row cuts average 139.9 elements, 0 column cuts (0 active)  in 0.227 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1601 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2231 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.196 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 504 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.243 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.520391 best solution, best possible -18.589664 (2.37 seconds)
Cbc0012I Integer solution of -8.224174 found by rounding after 7778 iterations and 3 nodes (2.47 seconds)
Cbc0012I Integer solution of -8.625318 found by DiveCoefficient after 8029 iterations and 35 nodes (2.52 seconds)
Cbc0012I Integer solution of -8.714528 found by DiveCoefficient after 8062 iterations and 35 nodes (2.53 seconds)
Cbc0012I Integer solution of -8.848298 found by rounding after 8063 iterations and 36 nodes (2.53 seconds)
Cbc0012I Integer solution of -9.095944 found by DiveCoefficient after 8070 iterations and 37 nodes (2.54 seconds)
Cbc0038I Full problem 127 rows 144 columns, reduced to 4 rows 7 columns
Cbc0010I After 47 nodes, 2 on tree, -9.095944 best solution, best possible -18.456136 (3.24 seconds)
Cbc0010I After 77 nodes, 2 on tree, -9.095944 best solution, best possible -17.980669 (3.98 seconds)
Cbc0038I Full problem 127 rows 144 columns, reduced to 51 rows 64 columns
Cbc0012I Integer solution of -9.248851 found by rounding after 11964 iterations and 114 nodes (4.53 seconds)
Cbc0001I Search completed - best objective -9.248851000000002, took 12454 iterations and 134 nodes (4.56 seconds)
Cbc0032I Strong branching done 1274 times (22312 iterations), fathomed 14 nodes and fixed 12 variables
Cbc0035I Maximum depth 25, 313 variables fixed on reduced cost
Total time (CPU seconds):       4.23   (Wallclock seconds):       4.59

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 101 (-2) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 0.000108493 - average 5.92858e-07, 19 fixed columns
Coin0506I Presolve 140 (-43) rows, 82 (-19) columns and 436 (-124) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 0.25056049 - largest nonzero change 0 ( 0%) - largest zero change 2.8612782e-05
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Coin0511I After Postsolve, objective 37.212872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Coin0511I After Postsolve, objective 37.212872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.21287151 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 101 columns (100 integer (100 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 11.7813
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.66583 iterations 44
Cbc0038I Solution found of 6.66583
Cbc0038I Relaxing continuous gives 6.66583
Cbc0038I Rounding solution of -6.38098 is better than previous of 6.66583

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -6.38098 to -6.55481 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.62071
Cbc0038I Pass   2: suminf.    2.82402 (10) obj. -9.62071 iterations 15
Cbc0038I Pass   3: suminf.    0.81553 (6) obj. -9.62071 iterations 14
Cbc0038I Pass   4: suminf.    0.19927 (5) obj. -9.62071 iterations 6
Cbc0038I Pass   5: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass   6: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass   7: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass   8: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass   9: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  10: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  11: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  12: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  13: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  14: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  15: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  16: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  17: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  18: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  19: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  20: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  21: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  22: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  23: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  24: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  25: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  26: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  27: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  28: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  29: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  30: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  31: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -6.55481 - took 0.10 seconds
Cbc0012I Integer solution of -6.554814 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0012I Integer solution of -7.505031 found by RINS after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 28 added rows had average density of 70.035714
Cbc0013I At root node, 28 cuts changed objective from -37.212872 to -27.866706 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14961 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3120 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.505031 best solution, best possible -27.866706 (1.37 seconds)
Cbc0012I Integer solution of -7.731188 found by rounding after 10667 iterations and 37 nodes (1.63 seconds)
Cbc0012I Integer solution of -7.764014 found by rounding after 10670 iterations and 38 nodes (1.63 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 2 rows 4 columns
Cbc0012I Integer solution of -7.893464 found by rounding after 10768 iterations and 44 nodes (1.64 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 2 rows 5 columns
Cbc0012I Integer solution of -7.954694 found by rounding after 11452 iterations and 114 nodes (1.70 seconds)
Cbc0012I Integer solution of -7.955248 found by rounding after 11538 iterations and 122 nodes (1.71 seconds)
Cbc0004I Integer solution of -7.960814 found after 11554 iterations and 123 nodes (1.71 seconds)
Cbc0012I Integer solution of -7.991364 found by rounding after 11619 iterations and 129 nodes (1.71 seconds)
Cbc0012I Integer solution of -8.746918 found by rounding after 12604 iterations and 157 nodes (1.81 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 51 rows 35 columns
Cbc0012I Integer solution of -8.848298 found by rounding after 14108 iterations and 221 nodes (1.95 seconds)
Cbc0016I Integer solution of -9.095944 found by strong branching after 14301 iterations and 241 nodes (1.96 seconds)
Cbc0010I After 271 nodes, 7 on tree, -9.095944 best solution, best possible -27.866706 (2.07 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 30 rows 22 columns
Cbc0012I Integer solution of -9.248851 found by DiveCoefficient after 17086 iterations and 341 nodes (2.20 seconds)
Cbc0001I Search completed - best objective -9.248851000000002, took 17150 iterations and 348 nodes (2.21 seconds)
Cbc0032I Strong branching done 2642 times (35118 iterations), fathomed 28 nodes and fixed 179 variables
Cbc0035I Maximum depth 35, 1367 variables fixed on reduced cost
Total time (CPU seconds):       2.16   (Wallclock seconds):       2.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 144 (-59) columns and 2602 (-3052) elements
Clp1000I sum of infeasibilities 1.99967e-07 - average 1.57454e-09, 55 fixed columns
Coin0506I Presolve 74 (-53) rows, 89 (-55) columns and 1216 (-1386) elements
Clp0006I 0  Obj 38.167472 Dual inf 4.7770705 (89)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.6801352 - largest nonzero change 1.8671275e-05 ( 0.001262127%) - largest zero change 2.9741206e-05
Clp0000I Optimal - objective value 53.682068
Clp0000I Optimal - objective value 53.682068
Coin0511I After Postsolve, objective 53.682068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.682068 Dual inf 2.5679295 (3)
Clp0014I Perturbing problem by 0.001% of 1.5119898 - largest nonzero change 2.8182837e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 55.498922
Clp0000I Optimal - objective value 55.498922
Clp0000I Optimal - objective value 55.498922
Coin0511I After Postsolve, objective 55.498922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.49892206 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 144 columns (144 integer (144 of which binary)) and 2605 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.822%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.60614
Cbc0038I Pass   1: suminf.    2.92913 (34) obj. -24.2574 iterations 23
Cbc0038I Pass   2: suminf.    2.92913 (34) obj. -24.2574 iterations 1
Cbc0038I Pass   3: suminf.    1.41390 (19) obj. -7.19047 iterations 15
Cbc0038I Solution found of 12.2456
Cbc0038I Rounding solution of 3.87189 is better than previous of 12.2456

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 144 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 3.87189 to -5.63858 (0.04 seconds)
Cbc0038I Round again with cutoff of -9.6907
Cbc0038I Pass   4: suminf.    2.92913 (34) obj. -24.2574 iterations 0
Cbc0038I Pass   5: suminf.    2.92913 (34) obj. -24.2574 iterations 1
Cbc0038I Pass   6: suminf.    1.99886 (20) obj. -9.6907 iterations 25
Cbc0038I Pass   7: suminf.    1.73073 (18) obj. -11.2106 iterations 2
Cbc0038I Pass   8: suminf.    0.95010 (6) obj. -9.6907 iterations 20
Cbc0038I Pass   9: suminf.    0.59024 (5) obj. -11.1202 iterations 5
Cbc0038I Pass  10: suminf.    0.65782 (3) obj. -9.6907 iterations 10
Cbc0038I Pass  11: suminf.    0.53009 (3) obj. -9.6907 iterations 2
Cbc0038I Pass  12: suminf.    0.61797 (3) obj. -9.6907 iterations 2
Cbc0038I Pass  13: suminf.    0.53004 (3) obj. -9.6907 iterations 3
Cbc0038I Pass  14: suminf.    0.30618 (2) obj. -9.6907 iterations 9
Cbc0038I Pass  15: suminf.    0.30618 (2) obj. -9.6907 iterations 0
Cbc0038I Pass  16: suminf.    0.35654 (2) obj. -9.6907 iterations 2
Cbc0038I Pass  17: suminf.    4.86853 (21) obj. -9.6907 iterations 34
Cbc0038I Pass  18: suminf.    3.27627 (20) obj. -9.6907 iterations 5
Cbc0038I Pass  19: suminf.    3.01655 (20) obj. -9.6907 iterations 1
Cbc0038I Pass  20: suminf.    1.13751 (3) obj. -9.6907 iterations 27
Cbc0038I Pass  21: suminf.    0.76602 (4) obj. -9.6907 iterations 5
Cbc0038I Pass  22: suminf.    0.91848 (4) obj. -9.6907 iterations 4
Cbc0038I Pass  23: suminf.    0.91848 (4) obj. -9.6907 iterations 0
Cbc0038I Pass  24: suminf.    0.76602 (4) obj. -9.6907 iterations 9
Cbc0038I Pass  25: suminf.    4.53330 (18) obj. -9.6907 iterations 33
Cbc0038I Pass  26: suminf.    2.77096 (11) obj. -9.6907 iterations 13
Cbc0038I Pass  27: suminf.    2.67314 (10) obj. -9.93337 iterations 1
Cbc0038I Pass  28: suminf.    1.21548 (6) obj. -9.6907 iterations 11
Cbc0038I Pass  29: suminf.    1.08476 (6) obj. -9.6907 iterations 3
Cbc0038I Pass  30: suminf.    0.86126 (3) obj. -9.6907 iterations 7
Cbc0038I Pass  31: suminf.    0.86126 (3) obj. -9.6907 iterations 0
Cbc0038I Pass  32: suminf.    0.63222 (3) obj. -9.6907 iterations 4
Cbc0038I Pass  33: suminf.    0.85734 (4) obj. -9.6907 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 144 columns, reduced to 50 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -5.63858 to -7.52039 (0.06 seconds)
Cbc0038I Round again with cutoff of -16.9843
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.92913 (34) obj. -24.2574 iterations 0
Cbc0038I Pass  34: suminf.    2.92913 (34) obj. -24.2574 iterations 1
Cbc0038I Pass  35: suminf.    2.32091 (18) obj. -16.9843 iterations 33
Cbc0038I Pass  36: suminf.    2.30884 (16) obj. -16.9843 iterations 2
Cbc0038I Pass  37: suminf.    1.54103 (6) obj. -16.9843 iterations 24
Cbc0038I Pass  38: suminf.    1.02397 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  39: suminf.    1.53756 (6) obj. -16.9843 iterations 4
Cbc0038I Pass  40: suminf.    1.53756 (6) obj. -16.9843 iterations 1
Cbc0038I Pass  41: suminf.    0.99162 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  42: suminf.    0.99162 (6) obj. -16.9843 iterations 1
Cbc0038I Pass  43: suminf.    1.53756 (6) obj. -16.9843 iterations 4
Cbc0038I Pass  44: suminf.    4.10629 (16) obj. -16.9843 iterations 20
Cbc0038I Pass  45: suminf.    3.32085 (13) obj. -16.9843 iterations 12
Cbc0038I Pass  46: suminf.    1.48200 (8) obj. -16.9843 iterations 17
Cbc0038I Pass  47: suminf.    1.46106 (9) obj. -16.9843 iterations 2
Cbc0038I Pass  48: suminf.    2.00233 (9) obj. -16.9843 iterations 9
Cbc0038I Pass  49: suminf.    1.82852 (8) obj. -16.9843 iterations 5
Cbc0038I Pass  50: suminf.    1.35511 (6) obj. -16.9843 iterations 9
Cbc0038I Pass  51: suminf.    1.35511 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  52: suminf.    1.48182 (6) obj. -16.9843 iterations 6
Cbc0038I Pass  53: suminf.    1.35298 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  54: suminf.    1.48182 (6) obj. -16.9843 iterations 3
Cbc0038I Pass  55: suminf.    3.82628 (16) obj. -16.9843 iterations 27
Cbc0038I Pass  56: suminf.    2.88384 (14) obj. -17.7354 iterations 8
Cbc0038I Pass  57: suminf.    2.59368 (14) obj. -16.9843 iterations 4
Cbc0038I Pass  58: suminf.    2.26610 (8) obj. -16.9843 iterations 18
Cbc0038I Pass  59: suminf.    2.26610 (8) obj. -16.9843 iterations 2
Cbc0038I Pass  60: suminf.    1.48182 (6) obj. -16.9843 iterations 8
Cbc0038I Pass  61: suminf.    1.35298 (6) obj. -16.9843 iterations 2
Cbc0038I Pass  62: suminf.    1.48182 (6) obj. -16.9843 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 144 columns, reduced to 16 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.52039 - took 0.06 seconds
Cbc0012I Integer solution of -7.520391 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 127 rows 144 columns, reduced to 3 rows 6 columns
Cbc0031I 59 added rows had average density of 58.338983
Cbc0013I At root node, 59 cuts changed objective from -46.158849 to -18.589664 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22547 row cuts average 2.0 elements, 1 column cuts (19 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2709 row cuts average 139.9 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1601 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2231 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 504 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.231 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.520391 best solution, best possible -18.589664 (2.29 seconds)
Cbc0012I Integer solution of -8.224174 found by rounding after 7778 iterations and 3 nodes (2.39 seconds)
Cbc0012I Integer solution of -8.625318 found by DiveCoefficient after 8029 iterations and 35 nodes (2.45 seconds)
Cbc0012I Integer solution of -8.714528 found by DiveCoefficient after 8062 iterations and 35 nodes (2.46 seconds)
Cbc0012I Integer solution of -8.848298 found by rounding after 8063 iterations and 36 nodes (2.46 seconds)
Cbc0012I Integer solution of -9.095944 found by DiveCoefficient after 8070 iterations and 37 nodes (2.46 seconds)
Cbc0038I Full problem 127 rows 144 columns, reduced to 4 rows 7 columns
Cbc0010I After 47 nodes, 2 on tree, -9.095944 best solution, best possible -18.456136 (3.14 seconds)
Cbc0010I After 77 nodes, 2 on tree, -9.095944 best solution, best possible -17.980669 (3.87 seconds)
Cbc0038I Full problem 127 rows 144 columns, reduced to 51 rows 64 columns
Cbc0012I Integer solution of -9.248851 found by rounding after 11964 iterations and 114 nodes (4.42 seconds)
Cbc0001I Search completed - best objective -9.248851000000002, took 12454 iterations and 134 nodes (4.44 seconds)
Cbc0032I Strong branching done 1274 times (22312 iterations), fathomed 14 nodes and fixed 12 variables
Cbc0035I Maximum depth 25, 313 variables fixed on reduced cost
Total time (CPU seconds):       4.13   (Wallclock seconds):       4.48

