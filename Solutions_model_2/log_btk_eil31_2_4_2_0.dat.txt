Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-28) rows, 22 (-11) columns and 110 (-73) elements
Clp1000I sum of infeasibilities 2.19234e-05 - average 5.92523e-07, 5 fixed columns
Coin0506I Presolve 27 (-10) rows, 17 (-5) columns and 81 (-29) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 2.0506687 - largest nonzero change 0 ( 0%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Coin0511I After Postsolve, objective 170.39371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Coin0511I After Postsolve, objective 170.39371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.3937145 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.25466
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -75.4046 iterations 14
Cbc0038I Solution found of -75.4046
Cbc0038I Relaxing continuous gives -75.4046
Cbc0038I Rounding solution of -86.9603 is better than previous of -75.4046

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -86.9603 to -115.409 (0.01 seconds)
Cbc0038I Round again with cutoff of -120.518
Cbc0038I Pass   2: suminf.    0.99577 (3) obj. -120.518 iterations 3
Cbc0038I Pass   3: suminf.    0.42650 (2) obj. -120.518 iterations 4
Cbc0038I Pass   4: suminf.    0.42650 (2) obj. -120.518 iterations 1
Cbc0038I Pass   5: suminf.    0.31579 (1) obj. -120.518 iterations 2
Cbc0038I Pass   6: suminf.    0.50906 (2) obj. -120.518 iterations 3
Cbc0038I Pass   7: suminf.    1.23501 (4) obj. -120.518 iterations 8
Cbc0038I Pass   8: suminf.    0.84724 (4) obj. -120.518 iterations 3
Cbc0038I Pass   9: suminf.    1.09105 (3) obj. -120.518 iterations 6
Cbc0038I Pass  10: suminf.    0.65604 (3) obj. -120.518 iterations 6
Cbc0038I Pass  11: suminf.    1.34213 (4) obj. -120.518 iterations 4
Cbc0038I Pass  12: suminf.    1.34213 (4) obj. -120.518 iterations 0
Cbc0038I Pass  13: suminf.    0.81444 (2) obj. -125.13 iterations 5
Cbc0038I Pass  14: suminf.    0.71609 (2) obj. -120.518 iterations 1
Cbc0038I Pass  15: suminf.    0.96091 (2) obj. -120.518 iterations 3
Cbc0038I Pass  16: suminf.    0.91142 (2) obj. -120.518 iterations 2
Cbc0038I Pass  17: suminf.    0.91142 (2) obj. -120.518 iterations 0
Cbc0038I Pass  18: suminf.    0.91235 (2) obj. -120.518 iterations 1
Cbc0038I Pass  19: suminf.    1.32608 (6) obj. -120.518 iterations 9
Cbc0038I Pass  20: suminf.    1.19418 (6) obj. -120.518 iterations 1
Cbc0038I Pass  21: suminf.    1.45899 (3) obj. -120.518 iterations 11
Cbc0038I Pass  22: suminf.    0.82414 (4) obj. -120.518 iterations 3
Cbc0038I Pass  23: suminf.    0.38742 (3) obj. -120.518 iterations 7
Cbc0038I Pass  24: suminf.    0.38742 (3) obj. -120.518 iterations 0
Cbc0038I Pass  25: suminf.    0.61993 (2) obj. -120.518 iterations 1
Cbc0038I Pass  26: suminf.    0.42105 (1) obj. -120.518 iterations 1
Cbc0038I Pass  27: suminf.    0.42579 (1) obj. -120.518 iterations 1
Cbc0038I Pass  28: suminf.    0.44824 (3) obj. -120.518 iterations 4
Cbc0038I Pass  29: suminf.    0.35892 (4) obj. -120.518 iterations 4
Cbc0038I Pass  30: suminf.    1.02476 (4) obj. -120.518 iterations 9
Cbc0038I Pass  31: suminf.    0.99577 (3) obj. -120.518 iterations 1
Cbc0038I Rounding solution of -133.595 is better than previous of -115.409

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -140.176
Cbc0038I Pass  31: suminf.    1.62612 (5) obj. -140.176 iterations 2
Cbc0038I Pass  32: suminf.    1.24812 (5) obj. -140.176 iterations 3
Cbc0038I Pass  33: suminf.    1.24359 (5) obj. -140.176 iterations 1
Cbc0038I Pass  34: suminf.    1.28923 (5) obj. -140.176 iterations 6
Cbc0038I Pass  35: suminf.    0.74416 (3) obj. -140.176 iterations 3
Cbc0038I Pass  36: suminf.    0.85686 (4) obj. -140.176 iterations 5
Cbc0038I Pass  37: suminf.    0.70334 (4) obj. -140.176 iterations 1
Cbc0038I Pass  38: suminf.    1.04521 (4) obj. -140.176 iterations 1
Cbc0038I Pass  39: suminf.    0.70334 (4) obj. -140.176 iterations 1
Cbc0038I Pass  40: suminf.    0.90576 (5) obj. -140.176 iterations 2
Cbc0038I Pass  41: suminf.    0.86414 (4) obj. -143.156 iterations 12
Cbc0038I Pass  42: suminf.    0.47012 (4) obj. -140.176 iterations 4
Cbc0038I Pass  43: suminf.    0.47682 (6) obj. -140.176 iterations 4
Cbc0038I Pass  44: suminf.    0.45095 (6) obj. -140.176 iterations 2
Cbc0038I Pass  45: suminf.    0.33899 (5) obj. -140.176 iterations 5
Cbc0038I Pass  46: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  47: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  48: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I Pass  49: suminf.    0.90073 (5) obj. -140.176 iterations 3
Cbc0038I Pass  50: suminf.    0.88342 (5) obj. -140.176 iterations 1
Cbc0038I Pass  51: suminf.    0.33899 (5) obj. -140.176 iterations 4
Cbc0038I Pass  52: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  53: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  54: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I Pass  55: suminf.    0.90073 (5) obj. -140.176 iterations 3
Cbc0038I Pass  56: suminf.    0.88342 (5) obj. -140.176 iterations 1
Cbc0038I Pass  57: suminf.    0.33899 (5) obj. -140.176 iterations 4
Cbc0038I Pass  58: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  59: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  60: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -133.595 to -134.177 (0.03 seconds)
Cbc0038I Round again with cutoff of -148.073
Cbc0038I Pass  60: suminf.    1.89575 (5) obj. -148.073 iterations 0
Cbc0038I Pass  61: suminf.    1.76873 (5) obj. -148.073 iterations 3
Cbc0038I Pass  62: suminf.    1.75339 (6) obj. -148.073 iterations 1
Cbc0038I Pass  63: suminf.    1.53360 (5) obj. -148.073 iterations 3
Cbc0038I Pass  64: suminf.    1.48710 (5) obj. -148.073 iterations 3
Cbc0038I Pass  65: suminf.    2.29414 (7) obj. -148.073 iterations 8
Cbc0038I Pass  66: suminf.    1.77150 (6) obj. -148.073 iterations 4
Cbc0038I Pass  67: suminf.    1.70123 (6) obj. -148.073 iterations 1
Cbc0038I Pass  68: suminf.    1.49552 (5) obj. -148.073 iterations 7
Cbc0038I Pass  69: suminf.    1.49633 (6) obj. -148.073 iterations 1
Cbc0038I Pass  70: suminf.    1.73488 (6) obj. -148.073 iterations 4
Cbc0038I Pass  71: suminf.    1.47425 (5) obj. -148.073 iterations 1
Cbc0038I Pass  72: suminf.    1.75488 (4) obj. -151.036 iterations 5
Cbc0038I Pass  73: suminf.    1.46683 (5) obj. -148.073 iterations 2
Cbc0038I Pass  74: suminf.    1.54920 (5) obj. -148.073 iterations 4
Cbc0038I Pass  75: suminf.    1.22961 (5) obj. -148.073 iterations 2
Cbc0038I Pass  76: suminf.    1.31273 (5) obj. -148.073 iterations 4
Cbc0038I Pass  77: suminf.    1.27328 (6) obj. -148.073 iterations 2
Cbc0038I Pass  78: suminf.    1.54920 (5) obj. -148.073 iterations 4
Cbc0038I Pass  79: suminf.    2.76116 (8) obj. -148.073 iterations 13
Cbc0038I Pass  80: suminf.    1.48010 (5) obj. -148.073 iterations 9
Cbc0038I Pass  81: suminf.    1.92399 (5) obj. -148.073 iterations 5
Cbc0038I Pass  82: suminf.    1.70932 (5) obj. -148.073 iterations 2
Cbc0038I Pass  83: suminf.    2.02717 (5) obj. -148.073 iterations 2
Cbc0038I Pass  84: suminf.    1.37145 (7) obj. -148.073 iterations 13
Cbc0038I Pass  85: suminf.    1.05426 (6) obj. -148.073 iterations 1
Cbc0038I Pass  86: suminf.    1.49009 (5) obj. -148.073 iterations 13
Cbc0038I Pass  87: suminf.    1.48010 (5) obj. -148.073 iterations 2
Cbc0038I Pass  88: suminf.    1.92399 (5) obj. -148.073 iterations 5
Cbc0038I Pass  89: suminf.    1.70932 (5) obj. -148.073 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -134.177 - took 0.06 seconds
Cbc0012I Integer solution of -134.17686 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 22 rows 14 columns
Cbc0031I 10 added rows had average density of 18.1
Cbc0013I At root node, 10 cuts changed objective from -166.49927 to -144.57841 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 448 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 357 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -134.17686, took 1391 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 46 times (403 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-19) rows, 50 (-12) columns and 453 (-193) elements
Clp1000I sum of infeasibilities 2.24274e-08 - average 5.09713e-10, 14 fixed columns
Coin0506I Presolve 31 (-13) rows, 36 (-14) columns and 245 (-208) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 1.3299973 - largest nonzero change 0 ( 0%) - largest zero change 2.3379487e-05
Clp0000I Optimal - objective value 177.9297
Clp0000I Optimal - objective value 177.9297
Coin0511I After Postsolve, objective 177.9297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1960865 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 177.9297
Clp0000I Optimal - objective value 177.9297
Clp0000I Optimal - objective value 177.9297
Coin0511I After Postsolve, objective 177.9297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 177.9296981 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 6 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 43 columns (43 integer (43 of which binary)) and 339 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.474%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.40107
Cbc0038I Pass   1: suminf.    0.73763 (12) obj. -105.458 iterations 8
Cbc0038I Pass   2: suminf.    0.73763 (12) obj. -105.458 iterations 0
Cbc0038I Solution found of -89.4854
Cbc0038I Rounding solution of -100.085 is better than previous of -89.4854

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -100.085 to -101.041 (0.02 seconds)
Cbc0038I Round again with cutoff of -107.062
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.83618 (15) obj. -107.062 iterations 3
Cbc0038I Pass   4: suminf.    0.83618 (15) obj. -107.062 iterations 0
Cbc0038I Pass   5: suminf.    0.08333 (1) obj. -123.221 iterations 20
Cbc0038I Pass   6: suminf.    0.43825 (1) obj. -107.062 iterations 1
Cbc0038I Pass   7: suminf.    1.09919 (5) obj. -108.448 iterations 7
Cbc0038I Pass   8: suminf.    0.74140 (4) obj. -107.062 iterations 3
Cbc0038I Pass   9: suminf.    0.21667 (1) obj. -124.554 iterations 4
Cbc0038I Pass  10: suminf.    0.39917 (1) obj. -107.062 iterations 1
Cbc0038I Pass  11: suminf.    1.21444 (9) obj. -107.062 iterations 10
Cbc0038I Pass  12: suminf.    0.95240 (8) obj. -107.062 iterations 1
Cbc0038I Pass  13: suminf.    0.25000 (1) obj. -123.687 iterations 10
Cbc0038I Pass  14: suminf.    0.37465 (2) obj. -107.062 iterations 2
Cbc0038I Pass  15: suminf.    0.36045 (2) obj. -128.797 iterations 1
Cbc0038I Pass  16: suminf.    0.64195 (3) obj. -107.389 iterations 6
Cbc0038I Pass  17: suminf.    0.49447 (3) obj. -107.062 iterations 3
Cbc0038I Pass  18: suminf.    0.36045 (2) obj. -125.797 iterations 2
Cbc0038I Pass  19: suminf.    0.25000 (1) obj. -120.687 iterations 1
Cbc0038I Pass  20: suminf.    0.44120 (2) obj. -107.062 iterations 2
Cbc0038I Pass  21: suminf.    1.74005 (9) obj. -107.062 iterations 10
Cbc0038I Pass  22: suminf.    0.69667 (5) obj. -107.062 iterations 3
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -123.687 iterations 5
Cbc0038I Pass  24: suminf.    0.37465 (2) obj. -107.062 iterations 2
Cbc0038I Pass  25: suminf.    0.36045 (2) obj. -128.797 iterations 1
Cbc0038I Pass  26: suminf.    1.28194 (6) obj. -116.898 iterations 13
Cbc0038I Pass  27: suminf.    1.28194 (6) obj. -116.898 iterations 1
Cbc0038I Pass  28: suminf.    0.00820 (1) obj. -107.062 iterations 7
Cbc0038I Pass  29: suminf.    0.03333 (1) obj. -108.263 iterations 1
Cbc0038I Pass  30: suminf.    1.55668 (9) obj. -107.062 iterations 19
Cbc0038I Pass  31: suminf.    0.82722 (4) obj. -107.062 iterations 7
Cbc0038I Pass  32: suminf.    0.21667 (1) obj. -121.554 iterations 4
Cbc0038I Rounding solution of -112.758 is better than previous of -101.041

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -112.758 to -115.409 (0.03 seconds)
Cbc0038I Round again with cutoff of -124.578
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.91239 (15) obj. -124.578 iterations 0
Cbc0038I Pass  33: suminf.    1.91239 (15) obj. -124.578 iterations 0
Cbc0038I Pass  34: suminf.    0.15161 (3) obj. -124.578 iterations 21
Cbc0038I Pass  35: suminf.    0.48477 (3) obj. -124.578 iterations 1
Cbc0038I Pass  36: suminf.    0.48477 (3) obj. -124.578 iterations 0
Cbc0038I Pass  37: suminf.    1.21240 (3) obj. -124.578 iterations 2
Cbc0038I Pass  38: suminf.    0.15161 (3) obj. -124.578 iterations 2
Cbc0038I Pass  39: suminf.    0.15161 (3) obj. -124.578 iterations 1
Cbc0038I Pass  40: suminf.    0.48477 (3) obj. -124.578 iterations 1
Cbc0038I Pass  41: suminf.    0.48477 (3) obj. -124.578 iterations 0
Cbc0038I Pass  42: suminf.    1.21240 (3) obj. -124.578 iterations 2
Cbc0038I Pass  43: suminf.    0.15161 (3) obj. -124.578 iterations 2
Cbc0038I Pass  44: suminf.    0.15161 (3) obj. -124.578 iterations 1
Cbc0038I Pass  45: suminf.    0.48477 (3) obj. -124.578 iterations 1
Cbc0038I Pass  46: suminf.    0.48477 (3) obj. -124.578 iterations 0
Cbc0038I Pass  47: suminf.    1.21240 (3) obj. -124.578 iterations 2
Cbc0038I Pass  48: suminf.    0.15161 (3) obj. -124.578 iterations 2
Cbc0038I Pass  49: suminf.    0.15161 (3) obj. -124.578 iterations 1
Cbc0038I Pass  50: suminf.    0.48477 (3) obj. -124.578 iterations 1
Cbc0038I Pass  51: suminf.    0.48477 (3) obj. -124.578 iterations 0
Cbc0038I Pass  52: suminf.    1.21240 (3) obj. -124.578 iterations 2
Cbc0038I Pass  53: suminf.    0.15161 (3) obj. -124.578 iterations 2
Cbc0038I Pass  54: suminf.    0.15161 (3) obj. -124.578 iterations 1
Cbc0038I Pass  55: suminf.    0.48477 (3) obj. -124.578 iterations 1
Cbc0038I Pass  56: suminf.    0.48477 (3) obj. -124.578 iterations 0
Cbc0038I Pass  57: suminf.    1.21240 (3) obj. -124.578 iterations 2
Cbc0038I Pass  58: suminf.    0.15161 (3) obj. -124.578 iterations 2
Cbc0038I Pass  59: suminf.    0.15161 (3) obj. -124.578 iterations 1
Cbc0038I Pass  60: suminf.    0.48477 (3) obj. -124.578 iterations 1
Cbc0038I Pass  61: suminf.    0.48477 (3) obj. -124.578 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -115.409 - took 0.02 seconds
Cbc0012I Integer solution of -115.40926 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 43 columns, reduced to 16 rows 18 columns
Cbc0031I 16 added rows had average density of 18.4375
Cbc0013I At root node, 16 cuts changed objective from -161.25178 to -141.46831 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 731 row cuts average 2.6 elements, 8 column cuts (8 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 408 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 46 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 18 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 13 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 120 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.732 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -115.40926 best solution, best possible -141.46831 (1.50 seconds)
Cbc0012I Integer solution of -125.71846 found by DiveCoefficient after 1537 iterations and 2 nodes (1.67 seconds)
Cbc0012I Integer solution of -134.17686 found by DiveCoefficient after 1659 iterations and 3 nodes (1.83 seconds)
Cbc0001I Search completed - best objective -134.17686, took 1750 iterations and 6 nodes (1.84 seconds)
Cbc0032I Strong branching done 82 times (697 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 6 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-28) rows, 22 (-11) columns and 110 (-73) elements
Clp1000I sum of infeasibilities 2.19234e-05 - average 5.92523e-07, 5 fixed columns
Coin0506I Presolve 27 (-10) rows, 17 (-5) columns and 81 (-29) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 2.0506687 - largest nonzero change 0 ( 0%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Coin0511I After Postsolve, objective 170.39371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Coin0511I After Postsolve, objective 170.39371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.3937145 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.25466
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -75.4046 iterations 14
Cbc0038I Solution found of -75.4046
Cbc0038I Relaxing continuous gives -75.4046
Cbc0038I Rounding solution of -86.9603 is better than previous of -75.4046

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -86.9603 to -115.409 (0.02 seconds)
Cbc0038I Round again with cutoff of -120.518
Cbc0038I Pass   2: suminf.    0.99577 (3) obj. -120.518 iterations 3
Cbc0038I Pass   3: suminf.    0.42650 (2) obj. -120.518 iterations 4
Cbc0038I Pass   4: suminf.    0.42650 (2) obj. -120.518 iterations 1
Cbc0038I Pass   5: suminf.    0.31579 (1) obj. -120.518 iterations 2
Cbc0038I Pass   6: suminf.    0.50906 (2) obj. -120.518 iterations 3
Cbc0038I Pass   7: suminf.    1.23501 (4) obj. -120.518 iterations 8
Cbc0038I Pass   8: suminf.    0.84724 (4) obj. -120.518 iterations 3
Cbc0038I Pass   9: suminf.    1.09105 (3) obj. -120.518 iterations 6
Cbc0038I Pass  10: suminf.    0.65604 (3) obj. -120.518 iterations 6
Cbc0038I Pass  11: suminf.    1.34213 (4) obj. -120.518 iterations 4
Cbc0038I Pass  12: suminf.    1.34213 (4) obj. -120.518 iterations 0
Cbc0038I Pass  13: suminf.    0.81444 (2) obj. -125.13 iterations 5
Cbc0038I Pass  14: suminf.    0.71609 (2) obj. -120.518 iterations 1
Cbc0038I Pass  15: suminf.    0.96091 (2) obj. -120.518 iterations 3
Cbc0038I Pass  16: suminf.    0.91142 (2) obj. -120.518 iterations 2
Cbc0038I Pass  17: suminf.    0.91142 (2) obj. -120.518 iterations 0
Cbc0038I Pass  18: suminf.    0.91235 (2) obj. -120.518 iterations 1
Cbc0038I Pass  19: suminf.    1.32608 (6) obj. -120.518 iterations 9
Cbc0038I Pass  20: suminf.    1.19418 (6) obj. -120.518 iterations 1
Cbc0038I Pass  21: suminf.    1.45899 (3) obj. -120.518 iterations 11
Cbc0038I Pass  22: suminf.    0.82414 (4) obj. -120.518 iterations 3
Cbc0038I Pass  23: suminf.    0.38742 (3) obj. -120.518 iterations 7
Cbc0038I Pass  24: suminf.    0.38742 (3) obj. -120.518 iterations 0
Cbc0038I Pass  25: suminf.    0.61993 (2) obj. -120.518 iterations 1
Cbc0038I Pass  26: suminf.    0.42105 (1) obj. -120.518 iterations 1
Cbc0038I Pass  27: suminf.    0.42579 (1) obj. -120.518 iterations 1
Cbc0038I Pass  28: suminf.    0.44824 (3) obj. -120.518 iterations 4
Cbc0038I Pass  29: suminf.    0.35892 (4) obj. -120.518 iterations 4
Cbc0038I Pass  30: suminf.    1.02476 (4) obj. -120.518 iterations 9
Cbc0038I Pass  31: suminf.    0.99577 (3) obj. -120.518 iterations 1
Cbc0038I Rounding solution of -133.595 is better than previous of -115.409

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -140.176
Cbc0038I Pass  31: suminf.    1.62612 (5) obj. -140.176 iterations 2
Cbc0038I Pass  32: suminf.    1.24812 (5) obj. -140.176 iterations 3
Cbc0038I Pass  33: suminf.    1.24359 (5) obj. -140.176 iterations 1
Cbc0038I Pass  34: suminf.    1.28923 (5) obj. -140.176 iterations 6
Cbc0038I Pass  35: suminf.    0.74416 (3) obj. -140.176 iterations 3
Cbc0038I Pass  36: suminf.    0.85686 (4) obj. -140.176 iterations 5
Cbc0038I Pass  37: suminf.    0.70334 (4) obj. -140.176 iterations 1
Cbc0038I Pass  38: suminf.    1.04521 (4) obj. -140.176 iterations 1
Cbc0038I Pass  39: suminf.    0.70334 (4) obj. -140.176 iterations 1
Cbc0038I Pass  40: suminf.    0.90576 (5) obj. -140.176 iterations 2
Cbc0038I Pass  41: suminf.    0.86414 (4) obj. -143.156 iterations 12
Cbc0038I Pass  42: suminf.    0.47012 (4) obj. -140.176 iterations 4
Cbc0038I Pass  43: suminf.    0.47682 (6) obj. -140.176 iterations 4
Cbc0038I Pass  44: suminf.    0.45095 (6) obj. -140.176 iterations 2
Cbc0038I Pass  45: suminf.    0.33899 (5) obj. -140.176 iterations 5
Cbc0038I Pass  46: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  47: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  48: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I Pass  49: suminf.    0.90073 (5) obj. -140.176 iterations 3
Cbc0038I Pass  50: suminf.    0.88342 (5) obj. -140.176 iterations 1
Cbc0038I Pass  51: suminf.    0.33899 (5) obj. -140.176 iterations 4
Cbc0038I Pass  52: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  53: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  54: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I Pass  55: suminf.    0.90073 (5) obj. -140.176 iterations 3
Cbc0038I Pass  56: suminf.    0.88342 (5) obj. -140.176 iterations 1
Cbc0038I Pass  57: suminf.    0.33899 (5) obj. -140.176 iterations 4
Cbc0038I Pass  58: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  59: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  60: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -133.595 to -134.177 (0.04 seconds)
Cbc0038I Round again with cutoff of -148.073
Cbc0038I Pass  60: suminf.    1.89575 (5) obj. -148.073 iterations 0
Cbc0038I Pass  61: suminf.    1.76873 (5) obj. -148.073 iterations 3
Cbc0038I Pass  62: suminf.    1.75339 (6) obj. -148.073 iterations 1
Cbc0038I Pass  63: suminf.    1.53360 (5) obj. -148.073 iterations 3
Cbc0038I Pass  64: suminf.    1.48710 (5) obj. -148.073 iterations 3
Cbc0038I Pass  65: suminf.    2.29414 (7) obj. -148.073 iterations 8
Cbc0038I Pass  66: suminf.    1.77150 (6) obj. -148.073 iterations 4
Cbc0038I Pass  67: suminf.    1.70123 (6) obj. -148.073 iterations 1
Cbc0038I Pass  68: suminf.    1.49552 (5) obj. -148.073 iterations 7
Cbc0038I Pass  69: suminf.    1.49633 (6) obj. -148.073 iterations 1
Cbc0038I Pass  70: suminf.    1.73488 (6) obj. -148.073 iterations 4
Cbc0038I Pass  71: suminf.    1.47425 (5) obj. -148.073 iterations 1
Cbc0038I Pass  72: suminf.    1.75488 (4) obj. -151.036 iterations 5
Cbc0038I Pass  73: suminf.    1.46683 (5) obj. -148.073 iterations 2
Cbc0038I Pass  74: suminf.    1.54920 (5) obj. -148.073 iterations 4
Cbc0038I Pass  75: suminf.    1.22961 (5) obj. -148.073 iterations 2
Cbc0038I Pass  76: suminf.    1.31273 (5) obj. -148.073 iterations 4
Cbc0038I Pass  77: suminf.    1.27328 (6) obj. -148.073 iterations 2
Cbc0038I Pass  78: suminf.    1.54920 (5) obj. -148.073 iterations 4
Cbc0038I Pass  79: suminf.    2.76116 (8) obj. -148.073 iterations 13
Cbc0038I Pass  80: suminf.    1.48010 (5) obj. -148.073 iterations 9
Cbc0038I Pass  81: suminf.    1.92399 (5) obj. -148.073 iterations 5
Cbc0038I Pass  82: suminf.    1.70932 (5) obj. -148.073 iterations 2
Cbc0038I Pass  83: suminf.    2.02717 (5) obj. -148.073 iterations 2
Cbc0038I Pass  84: suminf.    1.37145 (7) obj. -148.073 iterations 13
Cbc0038I Pass  85: suminf.    1.05426 (6) obj. -148.073 iterations 1
Cbc0038I Pass  86: suminf.    1.49009 (5) obj. -148.073 iterations 13
Cbc0038I Pass  87: suminf.    1.48010 (5) obj. -148.073 iterations 2
Cbc0038I Pass  88: suminf.    1.92399 (5) obj. -148.073 iterations 5
Cbc0038I Pass  89: suminf.    1.70932 (5) obj. -148.073 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -134.177 - took 0.04 seconds
Cbc0012I Integer solution of -134.17686 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 22 rows 14 columns
Cbc0031I 10 added rows had average density of 18.1
Cbc0013I At root node, 10 cuts changed objective from -166.49927 to -144.57841 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 448 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 357 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -134.17686, took 1391 iterations and 4 nodes (0.18 seconds)
Cbc0032I Strong branching done 46 times (403 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-29) rows, 41 (-22) columns and 311 (-338) elements
Clp1000I sum of infeasibilities 4.996e-15 - average 1.38778e-16, 29 fixed columns
Coin0506I Presolve 9 (-27) rows, 12 (-29) columns and 37 (-274) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 140.38477
Clp0000I Optimal - objective value 140.38477
Coin0511I After Postsolve, objective 140.38477, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.17263433 - largest nonzero change 0 ( 0%) - largest zero change 2.6101997e-05
Clp0000I Optimal - objective value 177.9297
Clp0000I Optimal - objective value 177.9297
Clp0000I Optimal - objective value 177.9297
Coin0511I After Postsolve, objective 177.9297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 177.9296981 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 41 columns (41 integer (41 of which binary)) and 317 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.92725
Cbc0038I Pass   1: suminf.    0.93251 (11) obj. -104.171 iterations 5
Cbc0038I Pass   2: suminf.    0.93251 (11) obj. -104.171 iterations 1
Cbc0038I Solution found of -89.4854
Cbc0038I Rounding solution of -100.085 is better than previous of -89.4854

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -100.085 to -101.041 (0.01 seconds)
Cbc0038I Round again with cutoff of -107.049
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.07339 (14) obj. -107.049 iterations 1
Cbc0038I Pass   4: suminf.    1.07339 (14) obj. -107.049 iterations 0
Cbc0038I Pass   5: suminf.    0.08333 (1) obj. -123.221 iterations 16
Cbc0038I Pass   6: suminf.    0.43853 (1) obj. -107.049 iterations 1
Cbc0038I Pass   7: suminf.    0.82250 (4) obj. -130.188 iterations 6
Cbc0038I Pass   8: suminf.    0.82250 (4) obj. -130.188 iterations 0
Cbc0038I Pass   9: suminf.    0.23488 (1) obj. -107.049 iterations 4
Cbc0038I Pass  10: suminf.    0.35000 (1) obj. -125.95 iterations 1
Cbc0038I Pass  11: suminf.    0.56979 (5) obj. -126.396 iterations 7
Cbc0038I Pass  12: suminf.    0.56979 (5) obj. -126.396 iterations 2
Cbc0038I Pass  13: suminf.    0.37264 (1) obj. -107.049 iterations 5
Cbc0038I Pass  14: suminf.    0.08333 (1) obj. -120.221 iterations 1
Cbc0038I Pass  15: suminf.    1.71175 (5) obj. -126.376 iterations 6
Cbc0038I Pass  16: suminf.    0.64748 (3) obj. -107.049 iterations 3
Cbc0038I Pass  17: suminf.    0.38333 (1) obj. -113.049 iterations 3
Cbc0038I Pass  18: suminf.    0.46965 (2) obj. -107.049 iterations 2
Cbc0038I Pass  19: suminf.    0.61838 (2) obj. -123.924 iterations 1
Cbc0038I Pass  20: suminf.    1.22446 (5) obj. -107.049 iterations 10
Cbc0038I Pass  21: suminf.    1.02787 (5) obj. -107.049 iterations 3
Cbc0038I Pass  22: suminf.    0.42857 (1) obj. -109.28 iterations 7
Cbc0038I Pass  23: suminf.    0.39038 (3) obj. -107.049 iterations 4
Cbc0038I Pass  24: suminf.    0.61838 (2) obj. -121.924 iterations 2
Cbc0038I Pass  25: suminf.    0.38333 (1) obj. -111.049 iterations 1
Cbc0038I Pass  26: suminf.    0.51402 (2) obj. -107.049 iterations 2
Cbc0038I Pass  27: suminf.    1.20786 (6) obj. -107.049 iterations 8
Cbc0038I Pass  28: suminf.    1.14714 (6) obj. -111.516 iterations 1
Cbc0038I Pass  29: suminf.    0.66187 (2) obj. -107.049 iterations 7
Cbc0038I Pass  30: suminf.    0.41086 (2) obj. -128.381 iterations 1
Cbc0038I Pass  31: suminf.    0.13333 (1) obj. -115.541 iterations 1
Cbc0038I Pass  32: suminf.    2.53696 (8) obj. -107.049 iterations 17
Cbc0038I Rounding solution of -133.595 is better than previous of -101.041

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -139.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.02592 (14) obj. -139.1 iterations 0
Cbc0038I Pass  33: suminf.    0.88829 (4) obj. -139.1 iterations 15
Cbc0038I Pass  34: suminf.    0.88829 (4) obj. -139.1 iterations 0
Cbc0038I Pass  35: suminf.    1.36360 (4) obj. -139.1 iterations 2
Cbc0038I Pass  36: suminf.    1.20414 (7) obj. -139.1 iterations 7
Cbc0038I Pass  37: suminf.    1.20414 (7) obj. -139.1 iterations 1
Cbc0038I Pass  38: suminf.    0.83851 (5) obj. -139.1 iterations 5
Cbc0038I Pass  39: suminf.    0.83851 (5) obj. -139.1 iterations 0
Cbc0038I Pass  40: suminf.    1.72473 (5) obj. -139.1 iterations 3
Cbc0038I Pass  41: suminf.    1.72473 (5) obj. -139.1 iterations 0
Cbc0038I Pass  42: suminf.    1.20868 (5) obj. -139.1 iterations 1
Cbc0038I Pass  43: suminf.    1.20868 (5) obj. -139.1 iterations 0
Cbc0038I Pass  44: suminf.    1.72473 (5) obj. -139.1 iterations 3
Cbc0038I Pass  45: suminf.    1.96269 (6) obj. -139.1 iterations 4
Cbc0038I Pass  46: suminf.    1.84274 (5) obj. -139.1 iterations 2
Cbc0038I Pass  47: suminf.    1.72473 (5) obj. -139.1 iterations 3
Cbc0038I Pass  48: suminf.    1.72473 (5) obj. -139.1 iterations 0
Cbc0038I Pass  49: suminf.    1.20868 (5) obj. -139.1 iterations 1
Cbc0038I Pass  50: suminf.    1.20868 (5) obj. -139.1 iterations 0
Cbc0038I Pass  51: suminf.    1.72473 (5) obj. -139.1 iterations 3
Cbc0038I Pass  52: suminf.    2.26633 (9) obj. -139.1 iterations 12
Cbc0038I Pass  53: suminf.    2.26633 (9) obj. -139.1 iterations 1
Cbc0038I Pass  54: suminf.    1.42357 (5) obj. -139.1 iterations 8
Cbc0038I Pass  55: suminf.    0.90041 (5) obj. -139.1 iterations 4
Cbc0038I Pass  56: suminf.    1.87382 (5) obj. -139.1 iterations 6
Cbc0038I Pass  57: suminf.    1.87382 (5) obj. -139.1 iterations 1
Cbc0038I Pass  58: suminf.    1.02322 (5) obj. -139.1 iterations 2
Cbc0038I Pass  59: suminf.    1.02322 (5) obj. -139.1 iterations 0
Cbc0038I Pass  60: suminf.    1.51622 (5) obj. -139.1 iterations 2
Cbc0038I Pass  61: suminf.    3.00206 (9) obj. -139.1 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -133.595 to -134.177 (0.04 seconds)
Cbc0038I Round again with cutoff of -145.707
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.24673 (17) obj. -145.707 iterations 2
Cbc0038I Pass  62: suminf.    1.48071 (5) obj. -145.707 iterations 26
Cbc0038I Pass  63: suminf.    1.09911 (5) obj. -145.707 iterations 1
Cbc0038I Pass  64: suminf.    1.43238 (8) obj. -145.707 iterations 9
Cbc0038I Pass  65: suminf.    1.43238 (8) obj. -145.707 iterations 1
Cbc0038I Pass  66: suminf.    1.63897 (6) obj. -145.707 iterations 6
Cbc0038I Pass  67: suminf.    1.44779 (6) obj. -145.707 iterations 3
Cbc0038I Pass  68: suminf.    1.55973 (6) obj. -145.707 iterations 1
Cbc0038I Pass  69: suminf.    1.32007 (6) obj. -145.707 iterations 1
Cbc0038I Pass  70: suminf.    2.24064 (9) obj. -145.707 iterations 5
Cbc0038I Pass  71: suminf.    1.70535 (8) obj. -145.707 iterations 2
Cbc0038I Pass  72: suminf.    2.07993 (6) obj. -145.707 iterations 5
Cbc0038I Pass  73: suminf.    2.07993 (6) obj. -145.707 iterations 0
Cbc0038I Pass  74: suminf.    2.27622 (6) obj. -145.707 iterations 1
Cbc0038I Pass  75: suminf.    2.10435 (6) obj. -145.707 iterations 1
Cbc0038I Pass  76: suminf.    2.10435 (6) obj. -145.707 iterations 0
Cbc0038I Pass  77: suminf.    2.07993 (6) obj. -145.707 iterations 4
Cbc0038I Pass  78: suminf.    2.07993 (6) obj. -145.707 iterations 0
Cbc0038I Pass  79: suminf.    2.27622 (6) obj. -145.707 iterations 1
Cbc0038I Pass  80: suminf.    2.10435 (6) obj. -145.707 iterations 1
Cbc0038I Pass  81: suminf.    2.10435 (6) obj. -145.707 iterations 0
Cbc0038I Pass  82: suminf.    2.07993 (6) obj. -145.707 iterations 4
Cbc0038I Pass  83: suminf.    2.07993 (6) obj. -145.707 iterations 0
Cbc0038I Pass  84: suminf.    2.27622 (6) obj. -145.707 iterations 1
Cbc0038I Pass  85: suminf.    2.10435 (6) obj. -145.707 iterations 1
Cbc0038I Pass  86: suminf.    2.10435 (6) obj. -145.707 iterations 0
Cbc0038I Pass  87: suminf.    2.07993 (6) obj. -145.707 iterations 4
Cbc0038I Pass  88: suminf.    2.07993 (6) obj. -145.707 iterations 0
Cbc0038I Pass  89: suminf.    2.27622 (6) obj. -145.707 iterations 1
Cbc0038I Pass  90: suminf.    2.10435 (6) obj. -145.707 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -134.177 - took 0.04 seconds
Cbc0012I Integer solution of -134.17686 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 41 columns, reduced to 16 rows 18 columns
Cbc0031I 12 added rows had average density of 5.5833333
Cbc0013I At root node, 36 cuts changed objective from -161.12124 to -134.17687 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 132 row cuts average 2.7 elements, 17 column cuts (17 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 63 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0001I Search completed - best objective -134.17686, took 149 iterations and 0 nodes (0.23 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.24

