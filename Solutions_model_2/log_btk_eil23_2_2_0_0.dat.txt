Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-16) rows, 21 (-4) columns and 101 (-34) elements
Clp1000I sum of infeasibilities 1.6327e-08 - average 4.94757e-10, 19 fixed columns
Coin0506I Presolve 0 (-33) rows, 0 (-21) columns and 0 (-101) elements
Clp0000I Optimal - objective value 9555.555
Clp0000I Optimal - objective value 9555.555
Coin0511I After Postsolve, objective 9555.555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6113212 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 9555.555
Clp0000I Optimal - objective value 9555.555
Clp0000I Optimal - objective value 9555.555
Coin0511I After Postsolve, objective 9555.555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9555.555002 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 101 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.097%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.087561
Cbc0038I Pass   1: suminf.    0.08756 (1) obj. -9555.56 iterations 1
Cbc0038I Solution found of -4701.64
Cbc0038I Relaxing continuous gives -4701.64
Cbc0038I Rounding solution of -5085.96 is better than previous of -4701.64

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -5532.92
Cbc0038I Pass   2: suminf.    0.08756 (1) obj. -9555.56 iterations 0
Cbc0038I Pass   3: suminf.    0.15626 (1) obj. -5532.92 iterations 1
Cbc0038I Pass   4: suminf.    0.14114 (1) obj. -5532.92 iterations 4
Cbc0038I Pass   5: suminf.    0.14114 (1) obj. -5532.92 iterations 2
Cbc0038I Pass   6: suminf.    0.26439 (1) obj. -8695.35 iterations 1
Cbc0038I Pass   7: suminf.    0.39244 (1) obj. -8105.91 iterations 3
Cbc0038I Pass   8: suminf.    0.39244 (1) obj. -8105.91 iterations 1
Cbc0038I Pass   9: suminf.    0.12389 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  10: suminf.    0.11627 (1) obj. -5532.92 iterations 5
Cbc0038I Pass  11: suminf.    0.11627 (1) obj. -5532.92 iterations 2
Cbc0038I Pass  12: suminf.    0.49000 (1) obj. -7627.44 iterations 1
Cbc0038I Pass  13: suminf.    0.28268 (1) obj. -8615.06 iterations 3
Cbc0038I Pass  14: suminf.    0.28268 (1) obj. -8615.06 iterations 1
Cbc0038I Pass  15: suminf.    0.13794 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  16: suminf.    0.12442 (1) obj. -5532.92 iterations 6
Cbc0038I Pass  17: suminf.    0.36683 (1) obj. -8239.35 iterations 1
Cbc0038I Pass  18: suminf.    0.12442 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  19: suminf.    0.12205 (1) obj. -5532.92 iterations 4
Cbc0038I Pass  20: suminf.    0.12205 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  21: suminf.    0.36683 (1) obj. -8251.93 iterations 1
Cbc0038I Pass  22: suminf.    0.33024 (1) obj. -8452.18 iterations 2
Cbc0038I Pass  23: suminf.    0.12099 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  24: suminf.    0.33024 (1) obj. -8452.18 iterations 1
Cbc0038I Pass  25: suminf.    0.39122 (1) obj. -8282.76 iterations 3
Cbc0038I Pass  26: suminf.    0.39122 (1) obj. -8282.76 iterations 2
Cbc0038I Pass  27: suminf.    0.09187 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  28: suminf.    0.27995 (2) obj. -5532.92 iterations 9
Cbc0038I Pass  29: suminf.    0.07042 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  30: suminf.    0.15634 (1) obj. -5989.99 iterations 1
Cbc0038I Pass  31: suminf.    0.08550 (1) obj. -5532.92 iterations 4
Cbc0038I Rounding solution of -5327.54 is better than previous of -5085.96

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 19 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6337.45
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.08756 (1) obj. -9555.56 iterations 0
Cbc0038I Pass  32: suminf.    0.30750 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  33: suminf.    0.27597 (1) obj. -6337.45 iterations 5
Cbc0038I Pass  34: suminf.    0.44976 (1) obj. -7796.53 iterations 1
Cbc0038I Pass  35: suminf.    0.27597 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  36: suminf.    0.29668 (1) obj. -6337.45 iterations 9
Cbc0038I Pass  37: suminf.    0.29668 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  38: suminf.    0.21805 (1) obj. -8918.96 iterations 1
Cbc0038I Pass  39: suminf.    0.46745 (2) obj. -6337.45 iterations 9
Cbc0038I Pass  40: suminf.    0.46745 (2) obj. -6337.45 iterations 1
Cbc0038I Pass  41: suminf.    0.45390 (1) obj. -7360.54 iterations 1
Cbc0038I Pass  42: suminf.    0.26158 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  43: suminf.    0.24495 (1) obj. -6337.45 iterations 5
Cbc0038I Pass  44: suminf.    0.24495 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  45: suminf.    0.42341 (1) obj. -7286.84 iterations 1
Cbc0038I Pass  46: suminf.    0.77734 (2) obj. -7121.72 iterations 5
Cbc0038I Pass  47: suminf.    0.24434 (1) obj. -6337.45 iterations 4
Cbc0038I Pass  48: suminf.    0.41000 (1) obj. -7218.73 iterations 1
Cbc0038I Pass  49: suminf.    0.22128 (1) obj. -6337.45 iterations 3
Cbc0038I Pass  50: suminf.    0.37341 (1) obj. -7146.77 iterations 1
Cbc0038I Pass  51: suminf.    0.22128 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  52: suminf.    0.21894 (1) obj. -6337.45 iterations 2
Cbc0038I Pass  53: suminf.    0.21894 (1) obj. -6337.45 iterations 0
Cbc0038I Pass  54: suminf.    0.33683 (1) obj. -6964.6 iterations 1
Cbc0038I Pass  55: suminf.    0.23721 (1) obj. -6337.45 iterations 6
Cbc0038I Pass  56: suminf.    0.23721 (1) obj. -6337.45 iterations 0
Cbc0038I Pass  57: suminf.    0.35878 (1) obj. -6984.15 iterations 1
Cbc0038I Pass  58: suminf.    0.45634 (1) obj. -7435.02 iterations 6
Cbc0038I Pass  59: suminf.    0.25002 (1) obj. -6337.45 iterations 3
Cbc0038I Pass  60: suminf.    0.45634 (1) obj. -7435.02 iterations 1
Cbc0038I Rounding solution of -5336.24 is better than previous of -5327.54

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 8 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -5336.24 to -5369.06 (0.02 seconds)
Cbc0038I Round again with cutoff of -7302.88
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.08756 (1) obj. -9555.56 iterations 0
Cbc0038I Pass  61: suminf.    0.48898 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  62: suminf.    1.06703 (4) obj. -7302.88 iterations 8
Cbc0038I Pass  63: suminf.    0.68262 (2) obj. -7302.88 iterations 2
Cbc0038I Pass  64: suminf.    0.37415 (1) obj. -8281.15 iterations 1
Cbc0038I Pass  65: suminf.    0.44196 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  66: suminf.    0.43105 (1) obj. -7302.88 iterations 2
Cbc0038I Pass  67: suminf.    0.47780 (1) obj. -7787.77 iterations 1
Cbc0038I Pass  68: suminf.    0.43105 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  69: suminf.    0.42745 (1) obj. -7302.88 iterations 3
Cbc0038I Pass  70: suminf.    0.42745 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  71: suminf.    0.45341 (1) obj. -7936.67 iterations 1
Cbc0038I Pass  72: suminf.    0.42902 (1) obj. -7957.18 iterations 5
Cbc0038I Pass  73: suminf.    0.42902 (1) obj. -7957.18 iterations 1
Cbc0038I Pass  74: suminf.    0.44798 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  75: suminf.    0.88858 (2) obj. -7302.88 iterations 6
Cbc0038I Pass  76: suminf.    0.44783 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  77: suminf.    0.37293 (1) obj. -8256.42 iterations 1
Cbc0038I Pass  78: suminf.    0.44610 (1) obj. -7923.18 iterations 1
Cbc0038I Pass  79: suminf.    0.43730 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  80: suminf.    0.44610 (1) obj. -7923.18 iterations 1
Cbc0038I Pass  81: suminf.    0.33268 (1) obj. -8421 iterations 4
Cbc0038I Pass  82: suminf.    0.33268 (1) obj. -8421 iterations 1
Cbc0038I Pass  83: suminf.    0.45713 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  84: suminf.    0.46849 (1) obj. -7302.88 iterations 2
Cbc0038I Pass  85: suminf.    0.46849 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  86: suminf.    0.24732 (1) obj. -8814.68 iterations 1
Cbc0038I Pass  87: suminf.    0.24732 (1) obj. -8814.68 iterations 0
Cbc0038I Pass  88: suminf.    0.43422 (2) obj. -8961.53 iterations 5
Cbc0038I Pass  89: suminf.    0.43422 (2) obj. -8961.53 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5369.06 - took 0.03 seconds
Cbc0012I Integer solution of -5369.0612 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 1 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 4
Cbc0013I At root node, 8 cuts changed objective from -9555.555 to -5369.8497 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 48 row cuts average 2.4 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5369.06116, took 27 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 43 (-3) columns and 340 (-48) elements
Clp1000I sum of infeasibilities 0 - average 0, 39 fixed columns
Coin0506I Presolve 4 (-32) rows, 4 (-39) columns and 11 (-329) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 9549.9867
Clp0000I Optimal - objective value 9549.9867
Coin0511I After Postsolve, objective 9549.9867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1657826 - largest nonzero change 0 ( 0%) - largest zero change 2.9410604e-05
Clp0000I Optimal - objective value 9669.6644
Clp0000I Optimal - objective value 9669.6644
Clp0000I Optimal - objective value 9669.6644
Coin0511I After Postsolve, objective 9669.6644, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9669.664388 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 44 columns (44 integer (44 of which binary)) and 350 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.325%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.67084
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5248.15 iterations 14
Cbc0038I Solution found of -5248.15
Cbc0038I Rounding solution of -5262.07 is better than previous of -5248.15

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 44 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5696.22
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.00156 (8) obj. -9573 iterations 5
Cbc0038I Pass   3: suminf.    0.18696 (1) obj. -5696.22 iterations 12
Cbc0038I Pass   4: suminf.    0.08756 (1) obj. -9555.56 iterations 1
Cbc0038I Pass   5: suminf.    1.53468 (5) obj. -5696.22 iterations 8
Cbc0038I Pass   6: suminf.    1.53468 (5) obj. -5696.22 iterations 3
Cbc0038I Pass   7: suminf.    0.20951 (1) obj. -8959.08 iterations 5
Cbc0038I Pass   8: suminf.    0.17713 (1) obj. -5696.22 iterations 1
Cbc0038I Pass   9: suminf.    2.67841 (8) obj. -5696.22 iterations 14
Cbc0038I Pass  10: suminf.    0.20341 (1) obj. -9128.12 iterations 8
Cbc0038I Pass  11: suminf.    0.15146 (1) obj. -5696.22 iterations 1
Cbc0038I Pass  12: suminf.    1.41558 (4) obj. -5696.22 iterations 5
Cbc0038I Pass  13: suminf.    1.41558 (4) obj. -5696.22 iterations 1
Cbc0038I Pass  14: suminf.    0.27659 (1) obj. -8807.13 iterations 4
Cbc0038I Pass  15: suminf.    0.13862 (1) obj. -5696.22 iterations 1
Cbc0038I Pass  16: suminf.    2.14276 (6) obj. -5696.22 iterations 10
Cbc0038I Pass  17: suminf.    2.14276 (6) obj. -5696.22 iterations 1
Cbc0038I Pass  18: suminf.    0.26927 (1) obj. -8742.45 iterations 6
Cbc0038I Pass  19: suminf.    0.15810 (1) obj. -5696.22 iterations 1
Cbc0038I Pass  20: suminf.    1.81458 (5) obj. -5696.22 iterations 11
Cbc0038I Pass  21: suminf.    1.32264 (4) obj. -5696.22 iterations 2
Cbc0038I Pass  22: suminf.    0.35585 (1) obj. -8348.14 iterations 4
Cbc0038I Pass  23: suminf.    0.14564 (1) obj. -5696.22 iterations 1
Cbc0038I Pass  24: suminf.    2.58719 (7) obj. -5696.22 iterations 17
Cbc0038I Pass  25: suminf.    1.64946 (5) obj. -5696.22 iterations 4
Cbc0038I Pass  26: suminf.    0.41610 (1) obj. -7151.99 iterations 5
Cbc0038I Pass  27: suminf.    0.14244 (1) obj. -5696.22 iterations 1
Cbc0038I Pass  28: suminf.    2.14875 (6) obj. -5696.22 iterations 11
Cbc0038I Pass  29: suminf.    1.27779 (4) obj. -5696.22 iterations 2
Cbc0038I Pass  30: suminf.    0.16610 (1) obj. -6038.38 iterations 4
Cbc0038I Pass  31: suminf.    0.10178 (1) obj. -5696.22 iterations 1
Cbc0038I Rounding solution of -5312.03 is better than previous of -5262.07

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6477.68
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.00156 (8) obj. -9573 iterations 0
Cbc0038I Pass  32: suminf.    0.33386 (1) obj. -6477.68 iterations 12
Cbc0038I Pass  33: suminf.    0.08756 (1) obj. -9555.56 iterations 1
Cbc0038I Pass  34: suminf.    0.49508 (3) obj. -9191.29 iterations 6
Cbc0038I Pass  35: suminf.    0.49508 (3) obj. -9191.29 iterations 2
Cbc0038I Pass  36: suminf.    0.33294 (1) obj. -6477.68 iterations 3
Cbc0038I Pass  37: suminf.    0.11805 (1) obj. -9398.29 iterations 1
Cbc0038I Pass  38: suminf.    1.99337 (7) obj. -8880.84 iterations 11
Cbc0038I Pass  39: suminf.    1.48684 (5) obj. -8878.29 iterations 3
Cbc0038I Pass  40: suminf.    0.32032 (1) obj. -6477.68 iterations 5
Cbc0038I Pass  41: suminf.    0.23268 (1) obj. -8855.55 iterations 1
Cbc0038I Pass  42: suminf.    1.17678 (3) obj. -8695.38 iterations 6
Cbc0038I Pass  43: suminf.    0.29061 (1) obj. -6477.68 iterations 3
Cbc0038I Pass  44: suminf.    0.29366 (1) obj. -8689.25 iterations 1
Cbc0038I Pass  45: suminf.    1.67852 (4) obj. -6477.68 iterations 9
Cbc0038I Pass  46: suminf.    0.28967 (1) obj. -6477.68 iterations 6
Cbc0038I Pass  47: suminf.    0.29366 (1) obj. -8694.25 iterations 1
Cbc0038I Pass  48: suminf.    1.49754 (4) obj. -6954.6 iterations 8
Cbc0038I Pass  49: suminf.    0.62170 (2) obj. -6477.68 iterations 3
Cbc0038I Pass  50: suminf.    0.37707 (1) obj. -6948.22 iterations 2
Cbc0038I Pass  51: suminf.    0.28862 (1) obj. -6477.68 iterations 1
Cbc0038I Pass  52: suminf.    0.30331 (1) obj. -6477.68 iterations 3
Cbc0038I Pass  53: suminf.    0.37902 (1) obj. -8167.56 iterations 1
Cbc0038I Pass  54: suminf.    0.30331 (1) obj. -6477.68 iterations 1
Cbc0038I Pass  55: suminf.    1.73525 (4) obj. -6477.68 iterations 7
Cbc0038I Pass  56: suminf.    0.78593 (2) obj. -6477.68 iterations 2
Cbc0038I Pass  57: suminf.    0.20220 (1) obj. -9153.23 iterations 2
Cbc0038I Pass  58: suminf.    0.29485 (1) obj. -6477.68 iterations 1
Cbc0038I Pass  59: suminf.    1.54572 (4) obj. -6477.68 iterations 9
Cbc0038I Pass  60: suminf.    0.72327 (2) obj. -6477.68 iterations 4
Cbc0038I Rounding solution of -5340.09 is better than previous of -5312.03

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -7415.44
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    2.00156 (8) obj. -9573 iterations 0
Cbc0038I Pass  61: suminf.    0.48986 (1) obj. -7415.44 iterations 12
Cbc0038I Pass  62: suminf.    0.08756 (1) obj. -9555.56 iterations 1
Cbc0038I Pass  63: suminf.    2.51734 (7) obj. -7415.44 iterations 13
Cbc0038I Pass  64: suminf.    1.85690 (5) obj. -7415.44 iterations 3
Cbc0038I Pass  65: suminf.    0.38024 (1) obj. -8141.89 iterations 4
Cbc0038I Pass  66: suminf.    0.48320 (1) obj. -7415.44 iterations 1
Cbc0038I Pass  67: suminf.    1.97746 (5) obj. -7415.44 iterations 6
Cbc0038I Pass  68: suminf.    0.47337 (1) obj. -7415.44 iterations 5
Cbc0038I Pass  69: suminf.    0.49780 (1) obj. -7545.42 iterations 1
Cbc0038I Pass  70: suminf.    1.78518 (5) obj. -7415.44 iterations 11
Cbc0038I Pass  71: suminf.    0.90657 (2) obj. -7415.44 iterations 4
Cbc0038I Pass  72: suminf.    0.45585 (1) obj. -7764.49 iterations 2
Cbc0038I Pass  73: suminf.    0.47853 (1) obj. -7415.44 iterations 1
Cbc0038I Pass  74: suminf.    1.50643 (4) obj. -7415.44 iterations 5
Cbc0038I Pass  75: suminf.    0.73023 (2) obj. -7415.44 iterations 3
Cbc0038I Pass  76: suminf.    0.43146 (1) obj. -7879.95 iterations 2
Cbc0038I Pass  77: suminf.    0.48122 (1) obj. -7415.44 iterations 1
Cbc0038I Pass  78: suminf.    1.23804 (3) obj. -7415.44 iterations 8
Cbc0038I Pass  79: suminf.    1.23804 (3) obj. -7415.44 iterations 1
Cbc0038I Pass  80: suminf.    0.26317 (1) obj. -8732.65 iterations 3
Cbc0038I Pass  81: suminf.    0.48922 (1) obj. -7415.44 iterations 1
Cbc0038I Pass  82: suminf.    1.25271 (5) obj. -7415.44 iterations 6
Cbc0038I Pass  83: suminf.    0.80927 (3) obj. -7415.44 iterations 3
Cbc0038I Pass  84: suminf.    0.28756 (1) obj. -8606.18 iterations 2
Cbc0038I Pass  85: suminf.    0.48860 (1) obj. -7415.44 iterations 1
Cbc0038I Pass  86: suminf.    2.10315 (6) obj. -7415.44 iterations 6
Cbc0038I Pass  87: suminf.    1.23509 (4) obj. -7415.44 iterations 3
Cbc0038I Pass  88: suminf.    1.90665 (5) obj. -7415.44 iterations 5
Cbc0038I Pass  89: suminf.    1.56164 (4) obj. -7415.44 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -5340.09 - took 0.02 seconds
Cbc0012I Integer solution of -5340.0867 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -5452.8729 found by DiveCoefficient after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 44 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -5454.8729 found by RINS after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -5460.7521 found by DiveCoefficient after 100 iterations and 0 nodes (0.22 seconds)
Cbc0031I 16 added rows had average density of 5.25
Cbc0013I At root node, 16 cuts changed objective from -9603.5322 to -5460.7521 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 67 row cuts average 2.1 elements, 22 column cuts (22 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5460.752100000001, took 100 iterations and 0 nodes (0.22 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.22

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-16) rows, 21 (-4) columns and 101 (-34) elements
Clp1000I sum of infeasibilities 1.6327e-08 - average 4.94757e-10, 19 fixed columns
Coin0506I Presolve 0 (-33) rows, 0 (-21) columns and 0 (-101) elements
Clp0000I Optimal - objective value 9555.555
Clp0000I Optimal - objective value 9555.555
Coin0511I After Postsolve, objective 9555.555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6113212 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 9555.555
Clp0000I Optimal - objective value 9555.555
Clp0000I Optimal - objective value 9555.555
Coin0511I After Postsolve, objective 9555.555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9555.555002 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 101 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.097%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.087561
Cbc0038I Pass   1: suminf.    0.08756 (1) obj. -9555.56 iterations 1
Cbc0038I Solution found of -4701.64
Cbc0038I Relaxing continuous gives -4701.64
Cbc0038I Rounding solution of -5085.96 is better than previous of -4701.64

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5532.92
Cbc0038I Pass   2: suminf.    0.08756 (1) obj. -9555.56 iterations 0
Cbc0038I Pass   3: suminf.    0.15626 (1) obj. -5532.92 iterations 1
Cbc0038I Pass   4: suminf.    0.14114 (1) obj. -5532.92 iterations 4
Cbc0038I Pass   5: suminf.    0.14114 (1) obj. -5532.92 iterations 2
Cbc0038I Pass   6: suminf.    0.26439 (1) obj. -8695.35 iterations 1
Cbc0038I Pass   7: suminf.    0.39244 (1) obj. -8105.91 iterations 3
Cbc0038I Pass   8: suminf.    0.39244 (1) obj. -8105.91 iterations 1
Cbc0038I Pass   9: suminf.    0.12389 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  10: suminf.    0.11627 (1) obj. -5532.92 iterations 5
Cbc0038I Pass  11: suminf.    0.11627 (1) obj. -5532.92 iterations 2
Cbc0038I Pass  12: suminf.    0.49000 (1) obj. -7627.44 iterations 1
Cbc0038I Pass  13: suminf.    0.28268 (1) obj. -8615.06 iterations 3
Cbc0038I Pass  14: suminf.    0.28268 (1) obj. -8615.06 iterations 1
Cbc0038I Pass  15: suminf.    0.13794 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  16: suminf.    0.12442 (1) obj. -5532.92 iterations 6
Cbc0038I Pass  17: suminf.    0.36683 (1) obj. -8239.35 iterations 1
Cbc0038I Pass  18: suminf.    0.12442 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  19: suminf.    0.12205 (1) obj. -5532.92 iterations 4
Cbc0038I Pass  20: suminf.    0.12205 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  21: suminf.    0.36683 (1) obj. -8251.93 iterations 1
Cbc0038I Pass  22: suminf.    0.33024 (1) obj. -8452.18 iterations 2
Cbc0038I Pass  23: suminf.    0.12099 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  24: suminf.    0.33024 (1) obj. -8452.18 iterations 1
Cbc0038I Pass  25: suminf.    0.39122 (1) obj. -8282.76 iterations 3
Cbc0038I Pass  26: suminf.    0.39122 (1) obj. -8282.76 iterations 2
Cbc0038I Pass  27: suminf.    0.09187 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  28: suminf.    0.27995 (2) obj. -5532.92 iterations 9
Cbc0038I Pass  29: suminf.    0.07042 (1) obj. -5532.92 iterations 1
Cbc0038I Pass  30: suminf.    0.15634 (1) obj. -5989.99 iterations 1
Cbc0038I Pass  31: suminf.    0.08550 (1) obj. -5532.92 iterations 4
Cbc0038I Rounding solution of -5327.54 is better than previous of -5085.96

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 19 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6337.45
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.08756 (1) obj. -9555.56 iterations 0
Cbc0038I Pass  32: suminf.    0.30750 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  33: suminf.    0.27597 (1) obj. -6337.45 iterations 5
Cbc0038I Pass  34: suminf.    0.44976 (1) obj. -7796.53 iterations 1
Cbc0038I Pass  35: suminf.    0.27597 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  36: suminf.    0.29668 (1) obj. -6337.45 iterations 9
Cbc0038I Pass  37: suminf.    0.29668 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  38: suminf.    0.21805 (1) obj. -8918.96 iterations 1
Cbc0038I Pass  39: suminf.    0.46745 (2) obj. -6337.45 iterations 9
Cbc0038I Pass  40: suminf.    0.46745 (2) obj. -6337.45 iterations 1
Cbc0038I Pass  41: suminf.    0.45390 (1) obj. -7360.54 iterations 1
Cbc0038I Pass  42: suminf.    0.26158 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  43: suminf.    0.24495 (1) obj. -6337.45 iterations 5
Cbc0038I Pass  44: suminf.    0.24495 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  45: suminf.    0.42341 (1) obj. -7286.84 iterations 1
Cbc0038I Pass  46: suminf.    0.77734 (2) obj. -7121.72 iterations 5
Cbc0038I Pass  47: suminf.    0.24434 (1) obj. -6337.45 iterations 4
Cbc0038I Pass  48: suminf.    0.41000 (1) obj. -7218.73 iterations 1
Cbc0038I Pass  49: suminf.    0.22128 (1) obj. -6337.45 iterations 3
Cbc0038I Pass  50: suminf.    0.37341 (1) obj. -7146.77 iterations 1
Cbc0038I Pass  51: suminf.    0.22128 (1) obj. -6337.45 iterations 1
Cbc0038I Pass  52: suminf.    0.21894 (1) obj. -6337.45 iterations 2
Cbc0038I Pass  53: suminf.    0.21894 (1) obj. -6337.45 iterations 0
Cbc0038I Pass  54: suminf.    0.33683 (1) obj. -6964.6 iterations 1
Cbc0038I Pass  55: suminf.    0.23721 (1) obj. -6337.45 iterations 6
Cbc0038I Pass  56: suminf.    0.23721 (1) obj. -6337.45 iterations 0
Cbc0038I Pass  57: suminf.    0.35878 (1) obj. -6984.15 iterations 1
Cbc0038I Pass  58: suminf.    0.45634 (1) obj. -7435.02 iterations 6
Cbc0038I Pass  59: suminf.    0.25002 (1) obj. -6337.45 iterations 3
Cbc0038I Pass  60: suminf.    0.45634 (1) obj. -7435.02 iterations 1
Cbc0038I Rounding solution of -5336.24 is better than previous of -5327.54

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 8 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -5336.24 to -5369.06 (0.02 seconds)
Cbc0038I Round again with cutoff of -7302.88
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.08756 (1) obj. -9555.56 iterations 0
Cbc0038I Pass  61: suminf.    0.48898 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  62: suminf.    1.06703 (4) obj. -7302.88 iterations 8
Cbc0038I Pass  63: suminf.    0.68262 (2) obj. -7302.88 iterations 2
Cbc0038I Pass  64: suminf.    0.37415 (1) obj. -8281.15 iterations 1
Cbc0038I Pass  65: suminf.    0.44196 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  66: suminf.    0.43105 (1) obj. -7302.88 iterations 2
Cbc0038I Pass  67: suminf.    0.47780 (1) obj. -7787.77 iterations 1
Cbc0038I Pass  68: suminf.    0.43105 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  69: suminf.    0.42745 (1) obj. -7302.88 iterations 3
Cbc0038I Pass  70: suminf.    0.42745 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  71: suminf.    0.45341 (1) obj. -7936.67 iterations 1
Cbc0038I Pass  72: suminf.    0.42902 (1) obj. -7957.18 iterations 5
Cbc0038I Pass  73: suminf.    0.42902 (1) obj. -7957.18 iterations 1
Cbc0038I Pass  74: suminf.    0.44798 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  75: suminf.    0.88858 (2) obj. -7302.88 iterations 6
Cbc0038I Pass  76: suminf.    0.44783 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  77: suminf.    0.37293 (1) obj. -8256.42 iterations 1
Cbc0038I Pass  78: suminf.    0.44610 (1) obj. -7923.18 iterations 1
Cbc0038I Pass  79: suminf.    0.43730 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  80: suminf.    0.44610 (1) obj. -7923.18 iterations 1
Cbc0038I Pass  81: suminf.    0.33268 (1) obj. -8421 iterations 4
Cbc0038I Pass  82: suminf.    0.33268 (1) obj. -8421 iterations 1
Cbc0038I Pass  83: suminf.    0.45713 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  84: suminf.    0.46849 (1) obj. -7302.88 iterations 2
Cbc0038I Pass  85: suminf.    0.46849 (1) obj. -7302.88 iterations 1
Cbc0038I Pass  86: suminf.    0.24732 (1) obj. -8814.68 iterations 1
Cbc0038I Pass  87: suminf.    0.24732 (1) obj. -8814.68 iterations 0
Cbc0038I Pass  88: suminf.    0.43422 (2) obj. -8961.53 iterations 5
Cbc0038I Pass  89: suminf.    0.43422 (2) obj. -8961.53 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5369.06 - took 0.02 seconds
Cbc0012I Integer solution of -5369.0612 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 1 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 4
Cbc0013I At root node, 8 cuts changed objective from -9555.555 to -5369.8497 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 48 row cuts average 2.4 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5369.06116, took 27 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 41 (-6) columns and 304 (-85) elements
Clp1000I sum of infeasibilities 1.97548e-06 - average 5.81022e-08, 40 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-41) columns and 0 (-304) elements
Clp0000I Optimal - objective value 9537.555
Clp0000I Optimal - objective value 9537.555
Coin0511I After Postsolve, objective 9537.555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6334345 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 9669.6644
Clp0000I Optimal - objective value 9669.6644
Clp0000I Optimal - objective value 9669.6644
Coin0511I After Postsolve, objective 9669.6644, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9669.664388 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 42 columns (42 integer (42 of which binary)) and 313 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.927%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.48233
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5248.15 iterations 10
Cbc0038I Solution found of -5248.15
Cbc0038I Rounding solution of -5262.07 is better than previous of -5248.15

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 42 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5696.13
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.96216 (8) obj. -9572.94 iterations 2
Cbc0038I Pass   3: suminf.    0.18694 (1) obj. -5696.13 iterations 10
Cbc0038I Pass   4: suminf.    0.08756 (1) obj. -9555.56 iterations 1
Cbc0038I Pass   5: suminf.    1.13418 (4) obj. -5696.13 iterations 8
Cbc0038I Pass   6: suminf.    1.13418 (4) obj. -5696.13 iterations 2
Cbc0038I Pass   7: suminf.    0.14854 (1) obj. -9250.93 iterations 4
Cbc0038I Pass   8: suminf.    0.18323 (1) obj. -5696.13 iterations 1
Cbc0038I Pass   9: suminf.    1.66150 (6) obj. -5696.13 iterations 8
Cbc0038I Pass  10: suminf.    1.42072 (5) obj. -5696.13 iterations 2
Cbc0038I Pass  11: suminf.    0.23390 (1) obj. -8855.24 iterations 5
Cbc0038I Pass  12: suminf.    0.17225 (1) obj. -5696.13 iterations 1
Cbc0038I Pass  13: suminf.    0.97689 (4) obj. -5696.13 iterations 7
Cbc0038I Pass  14: suminf.    0.97689 (4) obj. -5696.13 iterations 1
Cbc0038I Pass  15: suminf.    0.13024 (1) obj. -9350.8 iterations 4
Cbc0038I Pass  16: suminf.    0.18275 (1) obj. -5696.13 iterations 1
Cbc0038I Pass  17: suminf.    1.79621 (6) obj. -5696.13 iterations 10
Cbc0038I Pass  18: suminf.    1.79621 (6) obj. -5696.13 iterations 1
Cbc0038I Pass  19: suminf.    0.11683 (1) obj. -9409.91 iterations 6
Cbc0038I Pass  20: suminf.    0.18505 (1) obj. -5696.13 iterations 1
Cbc0038I Pass  21: suminf.    1.94587 (6) obj. -5696.13 iterations 8
Cbc0038I Pass  22: suminf.    1.94587 (6) obj. -5696.13 iterations 1
Cbc0038I Pass  23: suminf.    0.14732 (1) obj. -9259.64 iterations 6
Cbc0038I Pass  24: suminf.    0.18281 (1) obj. -5696.13 iterations 1
Cbc0038I Pass  25: suminf.    4.05178 (11) obj. -5696.13 iterations 18
Cbc0038I Pass  26: suminf.    0.33754 (2) obj. -5696.13 iterations 10
Cbc0038I Pass  27: suminf.    0.43390 (1) obj. -7974.31 iterations 2
Cbc0038I Pass  28: suminf.    0.13784 (1) obj. -5696.13 iterations 1
Cbc0038I Pass  29: suminf.    1.70727 (5) obj. -5696.13 iterations 9
Cbc0038I Pass  30: suminf.    1.21372 (4) obj. -5696.13 iterations 2
Cbc0038I Pass  31: suminf.    0.45341 (1) obj. -7843.26 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5262.07 - took 0.01 seconds
Cbc0012I Integer solution of -5262.0709 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -5366.4462 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 42 columns, reduced to 5 rows 8 columns
Cbc0012I Integer solution of -5369.0612 found by DiveCoefficient after 37 iterations and 0 nodes (0.10 seconds)
Cbc0031I 2 added rows had average density of 3.5
Cbc0013I At root node, 2 cuts changed objective from -9602.6221 to -5369.0612 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 51 row cuts average 2.3 elements, 21 column cuts (21 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5369.06116, took 37 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

