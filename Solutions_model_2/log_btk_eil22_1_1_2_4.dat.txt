Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 22 (-2) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 0.00159675 - average 4.83862e-05, 2 fixed columns
Coin0506I Presolve 31 (-2) rows, 20 (-2) columns and 95 (-7) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Coin0511I After Postsolve, objective 55.858058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Coin0511I After Postsolve, objective 55.858058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.85805824 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.96385
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.4444 iterations 20
Cbc0038I Solution found of -16.4444
Cbc0038I Relaxing continuous gives -16.4444
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -20.3859
Cbc0038I Pass   2: suminf.    0.24683 (2) obj. -20.3859 iterations 4
Cbc0038I Pass   3: suminf.    0.61027 (2) obj. -20.3859 iterations 2
Cbc0038I Pass   4: suminf.    1.15155 (4) obj. -20.3859 iterations 7
Cbc0038I Pass   5: suminf.    0.81873 (3) obj. -20.3859 iterations 8
Cbc0038I Pass   6: suminf.    0.84312 (2) obj. -20.3859 iterations 4
Cbc0038I Pass   7: suminf.    0.53406 (2) obj. -20.3859 iterations 5
Cbc0038I Pass   8: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass   9: suminf.    0.61027 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  10: suminf.    0.47697 (3) obj. -20.3859 iterations 9
Cbc0038I Pass  11: suminf.    0.47682 (3) obj. -20.3859 iterations 3
Cbc0038I Pass  12: suminf.    0.62315 (3) obj. -20.3859 iterations 4
Cbc0038I Pass  13: suminf.    0.62315 (3) obj. -20.3859 iterations 2
Cbc0038I Pass  14: suminf.    0.84312 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  15: suminf.    0.53406 (2) obj. -20.3859 iterations 5
Cbc0038I Pass  16: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  17: suminf.    0.61027 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  18: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  19: suminf.    0.89283 (4) obj. -20.3859 iterations 10
Cbc0038I Pass  20: suminf.    0.52721 (2) obj. -20.3859 iterations 7
Cbc0038I Pass  21: suminf.    0.76791 (2) obj. -20.3859 iterations 8
Cbc0038I Pass  22: suminf.    0.59284 (2) obj. -20.3859 iterations 4
Cbc0038I Pass  23: suminf.    0.65782 (3) obj. -20.3859 iterations 2
Cbc0038I Pass  24: suminf.    0.65782 (3) obj. -20.3859 iterations 0
Cbc0038I Pass  25: suminf.    0.84701 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  26: suminf.    0.78451 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  27: suminf.    0.82841 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  28: suminf.    0.52721 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  29: suminf.    0.24683 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  30: suminf.    0.61027 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  31: suminf.    1.87070 (6) obj. -20.3859 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16.4444 - took 0.02 seconds
Cbc0012I Integer solution of -16.4444 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 16.333333
Cbc0013I At root node, 9 cuts changed objective from -55.858058 to -35.019497 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1508 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 756 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16.4444, took 2664 iterations and 8 nodes (0.18 seconds)
Cbc0032I Strong branching done 64 times (600 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-17) rows, 38 (-6) columns and 255 (-105) elements
Clp1000I sum of infeasibilities 0 - average 0, 31 fixed columns
Coin0506I Presolve 4 (-25) rows, 7 (-31) columns and 18 (-237) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -24.371513
Clp0000I Optimal - objective value -24.371513
Coin0511I After Postsolve, objective -24.371513, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2748025 - largest nonzero change 0 ( 0%) - largest zero change 2.8670656e-05
Clp0000I Optimal - objective value 68.601517
Clp0000I Optimal - objective value 68.601517
Clp0000I Optimal - objective value 68.601517
Coin0511I After Postsolve, objective 68.601517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.601517 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 38 columns (38 integer (38 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.792%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.44753
Cbc0038I Pass   1: suminf.    2.19995 (11) obj. -55.3936 iterations 5
Cbc0038I Solution found of -6.88882
Cbc0038I Rounding solution of -11.8888 is better than previous of -6.88882

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -16.2827
Cbc0038I Pass   2: suminf.    2.19995 (11) obj. -55.3936 iterations 0
Cbc0038I Pass   3: suminf.    0.41288 (1) obj. -16.2827 iterations 14
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -19.6888 iterations 1
Cbc0038I Pass   5: suminf.    1.24760 (5) obj. -18.8962 iterations 12
Cbc0038I Pass   6: suminf.    0.52083 (4) obj. -16.2827 iterations 3
Cbc0038I Pass   7: suminf.    0.52784 (3) obj. -16.2827 iterations 5
Cbc0038I Pass   8: suminf.    0.23712 (2) obj. -16.2827 iterations 3
Cbc0038I Pass   9: suminf.    0.46075 (2) obj. -16.2827 iterations 1
Cbc0038I Pass  10: suminf.    1.56679 (7) obj. -16.2827 iterations 12
Cbc0038I Pass  11: suminf.    0.68810 (5) obj. -16.2827 iterations 4
Cbc0038I Pass  12: suminf.    0.55289 (4) obj. -17.3644 iterations 1
Cbc0038I Pass  13: suminf.    0.90737 (5) obj. -16.2827 iterations 10
Cbc0038I Pass  14: suminf.    0.82183 (3) obj. -16.2827 iterations 4
Cbc0038I Pass  15: suminf.    0.52468 (3) obj. -18.9572 iterations 3
Cbc0038I Pass  16: suminf.    1.02526 (4) obj. -16.2827 iterations 8
Cbc0038I Pass  17: suminf.    0.39326 (2) obj. -16.2827 iterations 1
Cbc0038I Pass  18: suminf.    0.38182 (2) obj. -16.3858 iterations 2
Cbc0038I Pass  19: suminf.    1.87883 (7) obj. -16.2827 iterations 6
Cbc0038I Pass  20: suminf.    1.42468 (7) obj. -16.2827 iterations 2
Cbc0038I Pass  21: suminf.    1.55940 (6) obj. -16.2827 iterations 12
Cbc0038I Pass  22: suminf.    0.74780 (5) obj. -16.2827 iterations 3
Cbc0038I Pass  23: suminf.    1.34699 (4) obj. -16.2827 iterations 6
Cbc0038I Pass  24: suminf.    0.99073 (4) obj. -19.1329 iterations 2
Cbc0038I Pass  25: suminf.    1.36730 (6) obj. -16.2827 iterations 6
Cbc0038I Pass  26: suminf.    1.34699 (4) obj. -16.2827 iterations 4
Cbc0038I Pass  27: suminf.    1.71705 (8) obj. -16.2827 iterations 6
Cbc0038I Pass  28: suminf.    1.45435 (6) obj. -17.9167 iterations 3
Cbc0038I Pass  29: suminf.    1.50315 (7) obj. -16.3481 iterations 5
Cbc0038I Pass  30: suminf.    1.50315 (7) obj. -16.3481 iterations 1
Cbc0038I Pass  31: suminf.    1.30010 (5) obj. -16.2827 iterations 6
Cbc0038I Rounding solution of -12.111 is better than previous of -11.8888

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24.1916
Cbc0038I Pass  31: suminf.    2.19995 (11) obj. -55.3936 iterations 0
Cbc0038I Pass  32: suminf.    0.54329 (3) obj. -24.1916 iterations 16
Cbc0038I Pass  33: suminf.    0.54329 (3) obj. -24.1916 iterations 0
Cbc0038I Pass  34: suminf.    0.78164 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  35: suminf.    0.52436 (3) obj. -28.3082 iterations 1
Cbc0038I Pass  36: suminf.    0.54329 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  37: suminf.    1.30077 (7) obj. -24.1916 iterations 12
Cbc0038I Pass  38: suminf.    0.60547 (5) obj. -24.6354 iterations 4
Cbc0038I Pass  39: suminf.    0.69492 (4) obj. -24.1916 iterations 9
Cbc0038I Pass  40: suminf.    0.69492 (4) obj. -24.1916 iterations 0
Cbc0038I Pass  41: suminf.    0.80960 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  42: suminf.    0.36667 (2) obj. -25.8555 iterations 3
Cbc0038I Pass  43: suminf.    0.62513 (3) obj. -24.1916 iterations 7
Cbc0038I Pass  44: suminf.    0.61673 (4) obj. -24.1916 iterations 2
Cbc0038I Pass  45: suminf.    0.82820 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  46: suminf.    0.38182 (2) obj. -27.3858 iterations 4
Cbc0038I Pass  47: suminf.    1.34618 (6) obj. -24.1916 iterations 10
Cbc0038I Pass  48: suminf.    1.18423 (5) obj. -25.4872 iterations 1
Cbc0038I Pass  49: suminf.    0.74284 (3) obj. -24.1916 iterations 8
Cbc0038I Pass  50: suminf.    0.73071 (3) obj. -24.1916 iterations 2
Cbc0038I Pass  51: suminf.    0.40857 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  52: suminf.    0.40857 (3) obj. -24.1916 iterations 0
Cbc0038I Pass  53: suminf.    0.57663 (3) obj. -24.1916 iterations 3
Cbc0038I Pass  54: suminf.    1.10796 (5) obj. -24.1916 iterations 10
Cbc0038I Pass  55: suminf.    0.84091 (3) obj. -25.5468 iterations 3
Cbc0038I Pass  56: suminf.    1.04731 (3) obj. -24.1916 iterations 7
Cbc0038I Pass  57: suminf.    0.58219 (3) obj. -24.1916 iterations 5
Cbc0038I Pass  58: suminf.    0.59686 (4) obj. -24.1916 iterations 3
Cbc0038I Pass  59: suminf.    0.79870 (6) obj. -24.1916 iterations 8
Cbc0038I Pass  60: suminf.    0.79870 (6) obj. -24.1916 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 14 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -12.111 to -16.4444 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.6823
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    2.19995 (11) obj. -55.3936 iterations 0
Cbc0038I Pass  61: suminf.    0.93467 (3) obj. -33.6823 iterations 15
Cbc0038I Pass  62: suminf.    0.69219 (4) obj. -35.7977 iterations 3
Cbc0038I Pass  63: suminf.    0.93467 (3) obj. -33.6823 iterations 4
Cbc0038I Pass  64: suminf.    2.11339 (10) obj. -33.6823 iterations 11
Cbc0038I Pass  65: suminf.    1.06913 (5) obj. -33.6823 iterations 6
Cbc0038I Pass  66: suminf.    1.19946 (5) obj. -33.6823 iterations 3
Cbc0038I Pass  67: suminf.    1.09996 (5) obj. -34.3788 iterations 2
Cbc0038I Pass  68: suminf.    0.89392 (6) obj. -33.6823 iterations 7
Cbc0038I Pass  69: suminf.    0.60404 (3) obj. -33.7191 iterations 5
Cbc0038I Pass  70: suminf.    0.89392 (6) obj. -33.6823 iterations 6
Cbc0038I Pass  71: suminf.    0.99815 (5) obj. -33.6823 iterations 3
Cbc0038I Pass  72: suminf.    0.99815 (5) obj. -33.6823 iterations 1
Cbc0038I Pass  73: suminf.    0.72385 (4) obj. -33.6823 iterations 4
Cbc0038I Pass  74: suminf.    1.48513 (10) obj. -33.6823 iterations 8
Cbc0038I Pass  75: suminf.    1.23688 (6) obj. -33.6823 iterations 3
Cbc0038I Pass  76: suminf.    0.78360 (4) obj. -36.3193 iterations 2
Cbc0038I Pass  77: suminf.    0.89392 (6) obj. -33.6823 iterations 7
Cbc0038I Pass  78: suminf.    0.60404 (3) obj. -33.7191 iterations 5
Cbc0038I Pass  79: suminf.    1.29664 (6) obj. -33.6823 iterations 6
Cbc0038I Pass  80: suminf.    1.29664 (6) obj. -33.6823 iterations 3
Cbc0038I Pass  81: suminf.    1.00020 (7) obj. -33.6823 iterations 9
Cbc0038I Pass  82: suminf.    0.99559 (5) obj. -33.6823 iterations 2
Cbc0038I Pass  83: suminf.    0.72385 (4) obj. -33.6823 iterations 3
Cbc0038I Pass  84: suminf.    0.60404 (3) obj. -33.7191 iterations 2
Cbc0038I Pass  85: suminf.    0.89392 (6) obj. -33.6823 iterations 6
Cbc0038I Pass  86: suminf.    0.87595 (8) obj. -33.6823 iterations 3
Cbc0038I Pass  87: suminf.    1.02076 (6) obj. -33.6823 iterations 7
Cbc0038I Pass  88: suminf.    0.72904 (4) obj. -35.4691 iterations 2
Cbc0038I Pass  89: suminf.    1.04668 (6) obj. -33.6823 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16.4444 - took 0.03 seconds
Cbc0012I Integer solution of -16.4444 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 29 rows 38 columns, reduced to 12 rows 15 columns
Cbc0031I 10 added rows had average density of 10.2
Cbc0013I At root node, 10 cuts changed objective from -55.827216 to -16.763732 in 39 passes
Cbc0014I Cut generator 0 (Probing) - 162 row cuts average 2.8 elements, 9 column cuts (9 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 200 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.329 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.4444 best solution, best possible -16.757756 (0.65 seconds)
Cbc0001I Search completed - best objective -16.4444, took 415 iterations and 2 nodes (0.69 seconds)
Cbc0032I Strong branching done 26 times (129 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 22 (-2) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 0.00159675 - average 4.83862e-05, 2 fixed columns
Coin0506I Presolve 31 (-2) rows, 20 (-2) columns and 95 (-7) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Coin0511I After Postsolve, objective 55.858058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Coin0511I After Postsolve, objective 55.858058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.85805824 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.96385
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.4444 iterations 20
Cbc0038I Solution found of -16.4444
Cbc0038I Relaxing continuous gives -16.4444
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -20.3859
Cbc0038I Pass   2: suminf.    0.24683 (2) obj. -20.3859 iterations 4
Cbc0038I Pass   3: suminf.    0.61027 (2) obj. -20.3859 iterations 2
Cbc0038I Pass   4: suminf.    1.15155 (4) obj. -20.3859 iterations 7
Cbc0038I Pass   5: suminf.    0.81873 (3) obj. -20.3859 iterations 8
Cbc0038I Pass   6: suminf.    0.84312 (2) obj. -20.3859 iterations 4
Cbc0038I Pass   7: suminf.    0.53406 (2) obj. -20.3859 iterations 5
Cbc0038I Pass   8: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass   9: suminf.    0.61027 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  10: suminf.    0.47697 (3) obj. -20.3859 iterations 9
Cbc0038I Pass  11: suminf.    0.47682 (3) obj. -20.3859 iterations 3
Cbc0038I Pass  12: suminf.    0.62315 (3) obj. -20.3859 iterations 4
Cbc0038I Pass  13: suminf.    0.62315 (3) obj. -20.3859 iterations 2
Cbc0038I Pass  14: suminf.    0.84312 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  15: suminf.    0.53406 (2) obj. -20.3859 iterations 5
Cbc0038I Pass  16: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  17: suminf.    0.61027 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  18: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  19: suminf.    0.89283 (4) obj. -20.3859 iterations 10
Cbc0038I Pass  20: suminf.    0.52721 (2) obj. -20.3859 iterations 7
Cbc0038I Pass  21: suminf.    0.76791 (2) obj. -20.3859 iterations 8
Cbc0038I Pass  22: suminf.    0.59284 (2) obj. -20.3859 iterations 4
Cbc0038I Pass  23: suminf.    0.65782 (3) obj. -20.3859 iterations 2
Cbc0038I Pass  24: suminf.    0.65782 (3) obj. -20.3859 iterations 0
Cbc0038I Pass  25: suminf.    0.84701 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  26: suminf.    0.78451 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  27: suminf.    0.82841 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  28: suminf.    0.52721 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  29: suminf.    0.24683 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  30: suminf.    0.61027 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  31: suminf.    1.87070 (6) obj. -20.3859 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16.4444 - took 0.02 seconds
Cbc0012I Integer solution of -16.4444 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 16.333333
Cbc0013I At root node, 9 cuts changed objective from -55.858058 to -35.019497 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1508 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 756 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16.4444, took 2664 iterations and 8 nodes (0.18 seconds)
Cbc0032I Strong branching done 64 times (600 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-18) rows, 38 (-7) columns and 255 (-106) elements
Clp1000I sum of infeasibilities 0 - average 0, 31 fixed columns
Coin0506I Presolve 4 (-25) rows, 7 (-31) columns and 18 (-237) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -24.371513
Clp0000I Optimal - objective value -24.371513
Coin0511I After Postsolve, objective -24.371513, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2748025 - largest nonzero change 0 ( 0%) - largest zero change 2.8670656e-05
Clp0000I Optimal - objective value 68.601517
Clp0000I Optimal - objective value 68.601517
Clp0000I Optimal - objective value 68.601517
Coin0511I After Postsolve, objective 68.601517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.601517 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 38 columns (38 integer (38 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.792%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.44753
Cbc0038I Pass   1: suminf.    2.19995 (11) obj. -55.3936 iterations 5
Cbc0038I Solution found of -6.88882
Cbc0038I Rounding solution of -11.8888 is better than previous of -6.88882

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -16.2827
Cbc0038I Pass   2: suminf.    2.19995 (11) obj. -55.3936 iterations 0
Cbc0038I Pass   3: suminf.    0.41288 (1) obj. -16.2827 iterations 14
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -19.6888 iterations 1
Cbc0038I Pass   5: suminf.    1.24760 (5) obj. -18.8962 iterations 12
Cbc0038I Pass   6: suminf.    0.52083 (4) obj. -16.2827 iterations 3
Cbc0038I Pass   7: suminf.    0.52784 (3) obj. -16.2827 iterations 5
Cbc0038I Pass   8: suminf.    0.23712 (2) obj. -16.2827 iterations 3
Cbc0038I Pass   9: suminf.    0.46075 (2) obj. -16.2827 iterations 1
Cbc0038I Pass  10: suminf.    1.56679 (7) obj. -16.2827 iterations 12
Cbc0038I Pass  11: suminf.    0.68810 (5) obj. -16.2827 iterations 4
Cbc0038I Pass  12: suminf.    0.55289 (4) obj. -17.3644 iterations 1
Cbc0038I Pass  13: suminf.    0.90737 (5) obj. -16.2827 iterations 10
Cbc0038I Pass  14: suminf.    0.82183 (3) obj. -16.2827 iterations 4
Cbc0038I Pass  15: suminf.    0.52468 (3) obj. -18.9572 iterations 3
Cbc0038I Pass  16: suminf.    1.02526 (4) obj. -16.2827 iterations 8
Cbc0038I Pass  17: suminf.    0.39326 (2) obj. -16.2827 iterations 1
Cbc0038I Pass  18: suminf.    0.38182 (2) obj. -16.3858 iterations 2
Cbc0038I Pass  19: suminf.    1.87883 (7) obj. -16.2827 iterations 6
Cbc0038I Pass  20: suminf.    1.42468 (7) obj. -16.2827 iterations 2
Cbc0038I Pass  21: suminf.    1.55940 (6) obj. -16.2827 iterations 12
Cbc0038I Pass  22: suminf.    0.74780 (5) obj. -16.2827 iterations 3
Cbc0038I Pass  23: suminf.    1.34699 (4) obj. -16.2827 iterations 6
Cbc0038I Pass  24: suminf.    0.99073 (4) obj. -19.1329 iterations 2
Cbc0038I Pass  25: suminf.    1.36730 (6) obj. -16.2827 iterations 6
Cbc0038I Pass  26: suminf.    1.34699 (4) obj. -16.2827 iterations 4
Cbc0038I Pass  27: suminf.    1.71705 (8) obj. -16.2827 iterations 6
Cbc0038I Pass  28: suminf.    1.45435 (6) obj. -17.9167 iterations 3
Cbc0038I Pass  29: suminf.    1.50315 (7) obj. -16.3481 iterations 5
Cbc0038I Pass  30: suminf.    1.50315 (7) obj. -16.3481 iterations 1
Cbc0038I Pass  31: suminf.    1.30010 (5) obj. -16.2827 iterations 6
Cbc0038I Rounding solution of -12.111 is better than previous of -11.8888

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24.1916
Cbc0038I Pass  31: suminf.    2.19995 (11) obj. -55.3936 iterations 0
Cbc0038I Pass  32: suminf.    0.54329 (3) obj. -24.1916 iterations 16
Cbc0038I Pass  33: suminf.    0.54329 (3) obj. -24.1916 iterations 0
Cbc0038I Pass  34: suminf.    0.78164 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  35: suminf.    0.52436 (3) obj. -28.3082 iterations 1
Cbc0038I Pass  36: suminf.    0.54329 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  37: suminf.    1.30077 (7) obj. -24.1916 iterations 12
Cbc0038I Pass  38: suminf.    0.60547 (5) obj. -24.6354 iterations 4
Cbc0038I Pass  39: suminf.    0.69492 (4) obj. -24.1916 iterations 9
Cbc0038I Pass  40: suminf.    0.69492 (4) obj. -24.1916 iterations 0
Cbc0038I Pass  41: suminf.    0.80960 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  42: suminf.    0.36667 (2) obj. -25.8555 iterations 3
Cbc0038I Pass  43: suminf.    0.62513 (3) obj. -24.1916 iterations 7
Cbc0038I Pass  44: suminf.    0.61673 (4) obj. -24.1916 iterations 2
Cbc0038I Pass  45: suminf.    0.82820 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  46: suminf.    0.38182 (2) obj. -27.3858 iterations 4
Cbc0038I Pass  47: suminf.    1.34618 (6) obj. -24.1916 iterations 10
Cbc0038I Pass  48: suminf.    1.18423 (5) obj. -25.4872 iterations 1
Cbc0038I Pass  49: suminf.    0.74284 (3) obj. -24.1916 iterations 8
Cbc0038I Pass  50: suminf.    0.73071 (3) obj. -24.1916 iterations 2
Cbc0038I Pass  51: suminf.    0.40857 (3) obj. -24.1916 iterations 4
Cbc0038I Pass  52: suminf.    0.40857 (3) obj. -24.1916 iterations 0
Cbc0038I Pass  53: suminf.    0.57663 (3) obj. -24.1916 iterations 3
Cbc0038I Pass  54: suminf.    1.10796 (5) obj. -24.1916 iterations 10
Cbc0038I Pass  55: suminf.    0.84091 (3) obj. -25.5468 iterations 3
Cbc0038I Pass  56: suminf.    1.04731 (3) obj. -24.1916 iterations 7
Cbc0038I Pass  57: suminf.    0.58219 (3) obj. -24.1916 iterations 5
Cbc0038I Pass  58: suminf.    0.59686 (4) obj. -24.1916 iterations 3
Cbc0038I Pass  59: suminf.    0.79870 (6) obj. -24.1916 iterations 8
Cbc0038I Pass  60: suminf.    0.79870 (6) obj. -24.1916 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 14 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -12.111 to -16.4444 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.6823
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    2.19995 (11) obj. -55.3936 iterations 0
Cbc0038I Pass  61: suminf.    0.93467 (3) obj. -33.6823 iterations 15
Cbc0038I Pass  62: suminf.    0.69219 (4) obj. -35.7977 iterations 3
Cbc0038I Pass  63: suminf.    0.93467 (3) obj. -33.6823 iterations 4
Cbc0038I Pass  64: suminf.    2.11339 (10) obj. -33.6823 iterations 11
Cbc0038I Pass  65: suminf.    1.06913 (5) obj. -33.6823 iterations 6
Cbc0038I Pass  66: suminf.    1.19946 (5) obj. -33.6823 iterations 3
Cbc0038I Pass  67: suminf.    1.09996 (5) obj. -34.3788 iterations 2
Cbc0038I Pass  68: suminf.    0.89392 (6) obj. -33.6823 iterations 7
Cbc0038I Pass  69: suminf.    0.60404 (3) obj. -33.7191 iterations 5
Cbc0038I Pass  70: suminf.    0.89392 (6) obj. -33.6823 iterations 6
Cbc0038I Pass  71: suminf.    0.99815 (5) obj. -33.6823 iterations 3
Cbc0038I Pass  72: suminf.    0.99815 (5) obj. -33.6823 iterations 1
Cbc0038I Pass  73: suminf.    0.72385 (4) obj. -33.6823 iterations 4
Cbc0038I Pass  74: suminf.    1.48513 (10) obj. -33.6823 iterations 8
Cbc0038I Pass  75: suminf.    1.23688 (6) obj. -33.6823 iterations 3
Cbc0038I Pass  76: suminf.    0.78360 (4) obj. -36.3193 iterations 2
Cbc0038I Pass  77: suminf.    0.89392 (6) obj. -33.6823 iterations 7
Cbc0038I Pass  78: suminf.    0.60404 (3) obj. -33.7191 iterations 5
Cbc0038I Pass  79: suminf.    1.29664 (6) obj. -33.6823 iterations 6
Cbc0038I Pass  80: suminf.    1.29664 (6) obj. -33.6823 iterations 3
Cbc0038I Pass  81: suminf.    1.00020 (7) obj. -33.6823 iterations 9
Cbc0038I Pass  82: suminf.    0.99559 (5) obj. -33.6823 iterations 2
Cbc0038I Pass  83: suminf.    0.72385 (4) obj. -33.6823 iterations 3
Cbc0038I Pass  84: suminf.    0.60404 (3) obj. -33.7191 iterations 2
Cbc0038I Pass  85: suminf.    0.89392 (6) obj. -33.6823 iterations 6
Cbc0038I Pass  86: suminf.    0.87595 (8) obj. -33.6823 iterations 3
Cbc0038I Pass  87: suminf.    1.02076 (6) obj. -33.6823 iterations 7
Cbc0038I Pass  88: suminf.    0.72904 (4) obj. -35.4691 iterations 2
Cbc0038I Pass  89: suminf.    1.04668 (6) obj. -33.6823 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16.4444 - took 0.03 seconds
Cbc0012I Integer solution of -16.4444 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 29 rows 38 columns, reduced to 12 rows 15 columns
Cbc0031I 10 added rows had average density of 10.2
Cbc0013I At root node, 10 cuts changed objective from -55.827216 to -16.763732 in 39 passes
Cbc0014I Cut generator 0 (Probing) - 162 row cuts average 2.8 elements, 9 column cuts (9 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 200 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.318 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.4444 best solution, best possible -16.757756 (0.64 seconds)
Cbc0001I Search completed - best objective -16.4444, took 415 iterations and 2 nodes (0.69 seconds)
Cbc0032I Strong branching done 26 times (129 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.69

