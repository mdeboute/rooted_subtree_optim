Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 510 (-17) rows, 261 (-3) columns and 1511 (-34) elements
Clp1000I sum of infeasibilities 4.42481e-05 - average 8.67609e-08, 114 fixed columns
Coin0506I Presolve 280 (-230) rows, 145 (-116) columns and 824 (-687) elements
Clp0029I End of values pass after 145 iterations
Clp0014I Perturbing problem by 0.001% of 0.1648637 - largest nonzero change 0 ( 0%) - largest zero change 2.9941894e-05
Clp0000I Optimal - objective value 167.90588
Clp0000I Optimal - objective value 167.90588
Coin0511I After Postsolve, objective 167.90588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13614542 - largest nonzero change 0 ( 0%) - largest zero change 2.98842e-05
Clp0000I Optimal - objective value 167.90588
Clp0000I Optimal - objective value 167.90588
Clp0000I Optimal - objective value 167.90588
Coin0511I After Postsolve, objective 167.90588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.9058835 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 510 rows, 261 columns (260 integer (260 of which binary)) and 1511 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.372%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 12.9298
Cbc0038I Solution found of 21.6306
Cbc0038I Relaxing continuous gives -2.94384
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 131 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -2.94384 to -86.7942 (0.06 seconds)
Cbc0038I Round again with cutoff of -94.9054
Cbc0038I Pass   1: suminf.    3.79560 (45) obj. -94.9054 iterations 196
Cbc0038I Pass   2: suminf.    3.79560 (45) obj. -94.9054 iterations 0
Cbc0038I Pass   3: suminf.    2.47905 (9) obj. -94.9054 iterations 67
Cbc0038I Pass   4: suminf.    1.93044 (13) obj. -94.9054 iterations 27
Cbc0038I Pass   5: suminf.    2.31308 (8) obj. -94.9054 iterations 57
Cbc0038I Pass   6: suminf.    2.21013 (8) obj. -94.9054 iterations 24
Cbc0038I Pass   7: suminf.    3.87186 (13) obj. -94.9054 iterations 43
Cbc0038I Pass   8: suminf.    3.55337 (10) obj. -94.9054 iterations 9
Cbc0038I Pass   9: suminf.    2.61873 (8) obj. -94.9054 iterations 11
Cbc0038I Pass  10: suminf.    2.87646 (10) obj. -94.9054 iterations 30
Cbc0038I Pass  11: suminf.    2.00023 (13) obj. -94.9054 iterations 13
Cbc0038I Pass  12: suminf.    2.00254 (12) obj. -94.9054 iterations 3
Cbc0038I Pass  13: suminf.    2.35354 (7) obj. -94.9054 iterations 53
Cbc0038I Pass  14: suminf.    2.35354 (7) obj. -94.9054 iterations 0
Cbc0038I Pass  15: suminf.    2.12650 (7) obj. -94.9054 iterations 28
Cbc0038I Pass  16: suminf.    1.74690 (6) obj. -94.9054 iterations 14
Cbc0038I Pass  17: suminf.    1.71618 (6) obj. -94.9054 iterations 14
Cbc0038I Pass  18: suminf.    2.93167 (8) obj. -94.9054 iterations 7
Cbc0038I Pass  19: suminf.    2.51023 (8) obj. -94.9054 iterations 12
Cbc0038I Pass  20: suminf.    2.45598 (8) obj. -94.9054 iterations 9
Cbc0038I Pass  21: suminf.    2.37188 (8) obj. -94.9054 iterations 6
Cbc0038I Pass  22: suminf.    2.85243 (8) obj. -94.9054 iterations 47
Cbc0038I Pass  23: suminf.    2.58795 (8) obj. -94.9054 iterations 19
Cbc0038I Pass  24: suminf.    2.44568 (8) obj. -94.9054 iterations 19
Cbc0038I Pass  25: suminf.    2.33724 (7) obj. -94.9054 iterations 19
Cbc0038I Pass  26: suminf.    2.79469 (8) obj. -94.9054 iterations 27
Cbc0038I Pass  27: suminf.    2.45598 (8) obj. -94.9054 iterations 13
Cbc0038I Pass  28: suminf.    2.37188 (8) obj. -94.9054 iterations 6
Cbc0038I Pass  29: suminf.    2.85243 (8) obj. -94.9054 iterations 48
Cbc0038I Pass  30: suminf.    2.58795 (8) obj. -94.9054 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 200 rows 105 columns
Cbc0038I Mini branch and bound improved solution from -86.7942 to -88.1551 (0.16 seconds)
Cbc0038I Round again with cutoff of -109.506
Cbc0038I Pass  30: suminf.    4.58502 (60) obj. -109.506 iterations 8
Cbc0038I Pass  31: suminf.    4.58502 (60) obj. -109.506 iterations 0
Cbc0038I Pass  32: suminf.    4.73464 (15) obj. -109.506 iterations 68
Cbc0038I Pass  33: suminf.    3.07052 (13) obj. -109.506 iterations 50
Cbc0038I Pass  34: suminf.    5.35867 (14) obj. -109.506 iterations 48
Cbc0038I Pass  35: suminf.    4.57791 (16) obj. -109.506 iterations 16
Cbc0038I Pass  36: suminf.    4.52996 (16) obj. -109.506 iterations 3
Cbc0038I Pass  37: suminf.    3.19120 (13) obj. -109.506 iterations 32
Cbc0038I Pass  38: suminf.    2.91450 (13) obj. -109.506 iterations 28
Cbc0038I Pass  39: suminf.    2.91450 (13) obj. -109.506 iterations 0
Cbc0038I Pass  40: suminf.    4.14539 (13) obj. -109.506 iterations 25
Cbc0038I Pass  41: suminf.    4.09797 (13) obj. -109.506 iterations 17
Cbc0038I Pass  42: suminf.    3.35326 (11) obj. -109.506 iterations 10
Cbc0038I Pass  43: suminf.    3.30294 (16) obj. -109.506 iterations 10
Cbc0038I Pass  44: suminf.    3.75432 (12) obj. -109.506 iterations 36
Cbc0038I Pass  45: suminf.    3.31208 (16) obj. -109.506 iterations 16
Cbc0038I Pass  46: suminf.    3.28066 (13) obj. -109.506 iterations 9
Cbc0038I Pass  47: suminf.    3.17544 (11) obj. -109.506 iterations 22
Cbc0038I Pass  48: suminf.    1.95631 (10) obj. -109.506 iterations 12
Cbc0038I Pass  49: suminf.    1.91101 (10) obj. -109.506 iterations 2
Cbc0038I Pass  50: suminf.    2.41041 (8) obj. -109.506 iterations 17
Cbc0038I Pass  51: suminf.    2.14164 (8) obj. -109.506 iterations 9
Cbc0038I Pass  52: suminf.    1.86998 (8) obj. -109.506 iterations 16
Cbc0038I Pass  53: suminf.    1.86085 (9) obj. -109.506 iterations 8
Cbc0038I Pass  54: suminf.    3.24824 (9) obj. -109.506 iterations 9
Cbc0038I Pass  55: suminf.    2.15605 (8) obj. -109.506 iterations 17
Cbc0038I Pass  56: suminf.    2.14164 (8) obj. -109.506 iterations 4
Cbc0038I Pass  57: suminf.    1.86998 (8) obj. -109.506 iterations 18
Cbc0038I Pass  58: suminf.    1.86085 (9) obj. -109.506 iterations 9
Cbc0038I Pass  59: suminf.    3.24824 (9) obj. -109.506 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 150 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 212 rows 111 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -88.1551 - took 0.24 seconds
Cbc0012I Integer solution of -88.15508 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 133 rows 71 columns
Cbc0031I 40 added rows had average density of 170
Cbc0013I At root node, 40 cuts changed objective from -167.90588 to -151.21239 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41933 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.503 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2917 row cuts average 259.4 elements, 0 column cuts (0 active)  in 0.499 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.580 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 254.8 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -88.15508 best solution, best possible -151.21239 (5.49 seconds)
Cbc0010I After 9 nodes, 10 on tree, -88.15508 best solution, best possible -151.21239 (6.20 seconds)
Cbc0012I Integer solution of -88.48428 found by rounding after 21622 iterations and 42 nodes (6.63 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -94.10714 found by RINS after 21622 iterations and 42 nodes (6.63 seconds)
Cbc0016I Integer solution of -95.75008 found by strong branching after 22502 iterations and 58 nodes (6.71 seconds)
Cbc0010I After 78 nodes, 15 on tree, -95.75008 best solution, best possible -151.21239 (6.90 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 138 rows 73 columns
Cbc0001I Search completed - best objective -95.75008, took 28932 iterations and 202 nodes (7.48 seconds)
Cbc0032I Strong branching done 2098 times (65052 iterations), fathomed 13 nodes and fixed 72 variables
Cbc0035I Maximum depth 84, 919 variables fixed on reduced cost
Total time (CPU seconds):       7.38   (Wallclock seconds):       7.54

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 385 (-141) rows, 395 (-129) columns and 19448 (-16288) elements
Clp1000I sum of infeasibilities 3.82178e-06 - average 9.92669e-09, 211 fixed columns
Coin0506I Presolve 168 (-217) rows, 183 (-212) columns and 678 (-18770) elements
Clp0006I 0  Obj 136.84607 Dual inf 13861.397 (182)
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 0.14297351 - largest nonzero change 2.4055909e-05 ( 0.0021869008%) - largest zero change 2.999707e-05
Clp0000I Optimal - objective value 144.8363
Clp0000I Optimal - objective value 144.8363
Coin0511I After Postsolve, objective 144.8363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 144.8363 Dual inf 196.24561 (136)
Clp0014I Perturbing problem by 0.001% of 1.7696865 - largest nonzero change 2.0868847e-05 ( 0.0018540007%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 371.71986
Clp0000I Optimal - objective value 371.71986
Clp0000I Optimal - objective value 371.71986
Coin0511I After Postsolve, objective 371.71986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 371.7198598 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0004I processed model has 385 rows, 395 columns (395 integer (395 of which binary)) and 19448 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.069%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 122 integers unsatisfied sum - 7.33035
Cbc0038I Pass   1: suminf.    3.50835 (102) obj. -182.001 iterations 55
Cbc0038I Pass   2: suminf.    3.50835 (102) obj. -182.001 iterations 1
Cbc0038I Pass   3: suminf.    2.30916 (76) obj. -90.4431 iterations 26
Cbc0038I Pass   4: suminf.    1.64833 (57) obj. -62.4492 iterations 19
Cbc0038I Pass   5: suminf.    1.28348 (46) obj. -50.8471 iterations 11
Cbc0038I Pass   6: suminf.    0.73895 (29) obj. -23.7416 iterations 17
Cbc0038I Pass   7: suminf.    0.11284 (7) obj. 0.543939 iterations 22
Cbc0038I Solution found of 9.40033
Cbc0038I Rounding solution of -5.16272 is better than previous of 9.40033

Cbc0038I Before mini branch and bound, 271 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 395 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -5.16272 to -170.859 (0.15 seconds)
Cbc0038I Round again with cutoff of -190.945
Cbc0038I Pass   8: suminf.    4.51302 (108) obj. -190.945 iterations 10
Cbc0038I Pass   9: suminf.    4.51302 (108) obj. -190.945 iterations 1
Cbc0038I Pass  10: suminf.    3.48484 (103) obj. -190.945 iterations 21
Cbc0038I Pass  11: suminf.    2.79164 (80) obj. -241.793 iterations 24
Cbc0038I Pass  12: suminf.    2.37600 (68) obj. -190.945 iterations 13
Cbc0038I Pass  13: suminf.    2.31653 (68) obj. -228.347 iterations 1
Cbc0038I Pass  14: suminf.    1.65300 (50) obj. -190.945 iterations 19
Cbc0038I Pass  15: suminf.    1.63257 (50) obj. -200.449 iterations 1
Cbc0038I Pass  16: suminf.    1.11878 (38) obj. -190.945 iterations 17
Cbc0038I Pass  17: suminf.    1.11878 (38) obj. -190.945 iterations 0
Cbc0038I Pass  18: suminf.    0.90643 (21) obj. -190.945 iterations 30
Cbc0038I Pass  19: suminf.    0.90643 (21) obj. -190.945 iterations 0
Cbc0038I Pass  20: suminf.    1.99467 (10) obj. -190.945 iterations 67
Cbc0038I Pass  21: suminf.    1.99467 (10) obj. -190.945 iterations 0
Cbc0038I Pass  22: suminf.    0.70732 (4) obj. -190.945 iterations 26
Cbc0038I Pass  23: suminf.    0.61751 (5) obj. -190.945 iterations 6
Cbc0038I Pass  24: suminf.    1.99467 (10) obj. -190.945 iterations 47
Cbc0038I Pass  25: suminf.    2.21982 (28) obj. -190.945 iterations 114
Cbc0038I Pass  26: suminf.    1.25582 (26) obj. -202.546 iterations 21
Cbc0038I Pass  27: suminf.    0.78642 (24) obj. -198.418 iterations 19
Cbc0038I Pass  28: suminf.    1.23823 (12) obj. -190.945 iterations 82
Cbc0038I Pass  29: suminf.    0.66373 (14) obj. -190.945 iterations 15
Cbc0038I Pass  30: suminf.    1.44350 (7) obj. -190.945 iterations 33
Cbc0038I Pass  31: suminf.    1.12766 (6) obj. -190.945 iterations 11
Cbc0038I Pass  32: suminf.    0.55985 (5) obj. -190.945 iterations 15
Cbc0038I Pass  33: suminf.    1.12766 (6) obj. -190.945 iterations 15
Cbc0038I Pass  34: suminf.    1.59638 (29) obj. -190.945 iterations 81
Cbc0038I Pass  35: suminf.    1.09066 (25) obj. -190.945 iterations 31
Cbc0038I Pass  36: suminf.    1.51327 (15) obj. -190.945 iterations 29
Cbc0038I Pass  37: suminf.    1.51327 (15) obj. -190.945 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 395 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -170.859 to -173.095 (0.25 seconds)
Cbc0038I Round again with cutoff of -227.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  37: suminf.    4.39422 (117) obj. -354.207 iterations 8
Cbc0038I Pass  38: suminf.    4.39422 (117) obj. -354.207 iterations 0
Cbc0038I Pass  39: suminf.    2.82975 (91) obj. -259.363 iterations 30
Cbc0038I Pass  40: suminf.    2.00925 (69) obj. -234.335 iterations 22
Cbc0038I Pass  41: suminf.    1.76299 (48) obj. -227.1 iterations 42
Cbc0038I Pass  42: suminf.    1.68409 (47) obj. -227.918 iterations 17
Cbc0038I Pass  43: suminf.    2.36399 (34) obj. -227.1 iterations 61
Cbc0038I Pass  44: suminf.    1.64164 (32) obj. -227.1 iterations 17
Cbc0038I Pass  45: suminf.    2.00105 (23) obj. -227.1 iterations 41
Cbc0038I Pass  46: suminf.    2.00105 (23) obj. -227.1 iterations 1
Cbc0038I Pass  47: suminf.    2.96683 (12) obj. -227.1 iterations 50
Cbc0038I Pass  48: suminf.    2.07237 (13) obj. -227.1 iterations 3
Cbc0038I Pass  49: suminf.    1.66229 (13) obj. -227.1 iterations 23
Cbc0038I Pass  50: suminf.    1.64371 (12) obj. -227.1 iterations 12
Cbc0038I Pass  51: suminf.    1.52866 (16) obj. -227.1 iterations 8
Cbc0038I Pass  52: suminf.    2.98908 (12) obj. -227.1 iterations 57
Cbc0038I Pass  53: suminf.    1.15439 (11) obj. -227.1 iterations 19
Cbc0038I Pass  54: suminf.    1.15439 (11) obj. -227.1 iterations 0
Cbc0038I Pass  55: suminf.    2.96683 (12) obj. -227.1 iterations 30
Cbc0038I Pass  56: suminf.    2.07237 (13) obj. -227.1 iterations 3
Cbc0038I Pass  57: suminf.    1.66229 (13) obj. -227.1 iterations 28
Cbc0038I Pass  58: suminf.    1.64371 (12) obj. -227.1 iterations 13
Cbc0038I Pass  59: suminf.    1.52866 (16) obj. -227.1 iterations 10
Cbc0038I Pass  60: suminf.    2.98908 (12) obj. -227.1 iterations 56
Cbc0038I Pass  61: suminf.    1.15439 (11) obj. -227.1 iterations 19
Cbc0038I Pass  62: suminf.    1.15439 (11) obj. -227.1 iterations 0
Cbc0038I Pass  63: suminf.    2.96683 (12) obj. -227.1 iterations 28
Cbc0038I Pass  64: suminf.    2.07237 (13) obj. -227.1 iterations 2
Cbc0038I Pass  65: suminf.    1.66229 (13) obj. -227.1 iterations 23
Cbc0038I Pass  66: suminf.    1.64371 (12) obj. -227.1 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 265 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 395 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -173.095 - took 0.27 seconds
Cbc0012I Integer solution of -173.09499 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 385 rows 395 columns, reduced to 5 rows 7 columns
Cbc0031I 124 added rows had average density of 23.16129
Cbc0013I At root node, 124 cuts changed objective from -371.71986 to -185.8851 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 1793 row cuts average 2.5 elements, 33 column cuts (33 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 58.6 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 105 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 250 row cuts average 33.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 319 row cuts average 189.4 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 53.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -173.09499 best solution, best possible -185.8851 (1.15 seconds)
Cbc0012I Integer solution of -174.9636 found by DiveCoefficient after 540 iterations and 6 nodes (1.42 seconds)
Cbc0016I Integer solution of -176.5081 found by strong branching after 807 iterations and 24 nodes (1.83 seconds)
Cbc0010I After 26 nodes, 12 on tree, -176.5081 best solution, best possible -185.8851 (1.89 seconds)
Cbc0016I Integer solution of -176.70202 found by strong branching after 903 iterations and 35 nodes (2.01 seconds)
Cbc0012I Integer solution of -177.22114 found by DiveCoefficient after 922 iterations and 38 nodes (2.03 seconds)
Cbc0038I Full problem 385 rows 395 columns, reduced to 0 rows 0 columns
Cbc0038I Full problem 509 rows 395 columns, reduced to 282 rows 291 columns
Cbc0044I Reduced cost fixing - 282 rows, 291 columns - restarting search
Cbc0012I Integer solution of -177.22114 found by Previous solution after 0 iterations and 0 nodes (2.18 seconds)
Cbc0038I Full problem 282 rows 291 columns, reduced to 12 rows 14 columns
Cbc0031I 119 added rows had average density of 18.369748
Cbc0013I At root node, 119 cuts changed objective from -364.94829 to -183.37333 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1967 row cuts average 2.0 elements, 16 column cuts (16 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 131.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 36 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 181 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 121.4 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 45.8 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 125 row cuts average 22.9 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -177.22114 best solution, best possible -183.24105 (2.54 seconds)
Cbc0038I Full problem 282 rows 291 columns, reduced to 18 rows 21 columns
Cbc0012I Integer solution of -177.65887 found by rounding after 1866 iterations and 71 nodes (3.12 seconds)
Cbc0001I Search completed - best objective -177.658869, took 2458 iterations and 88 nodes (3.33 seconds)
Cbc0032I Strong branching done 530 times (5001 iterations), fathomed 22 nodes and fixed 56 variables
Cbc0035I Maximum depth 12, 544 variables fixed on reduced cost
Cbc0038I Probing was tried 89 times and created 2208 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Cbc0038I Gomory was tried 83 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Cbc0038I Knapsack was tried 83 times and created 77 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I Clique was tried 83 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I OddWheel was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Cbc0038I MixedIntegerRounding2 was tried 83 times and created 204 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Cbc0038I FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 83 times and created 124 cuts of which 0 were active after adding rounds of cuts (0.102 seconds)
Cbc0038I ZeroHalf was tried 83 times and created 105 cuts of which 0 were active after adding rounds of cuts (0.096 seconds)
Cbc0038I Stored from first was tried 83 times and created 138 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -177.65887 found by Reduced search after 3630 iterations and 138 nodes (3.34 seconds)
Cbc0001I Search completed - best objective -177.658869, took 3630 iterations and 138 nodes (3.34 seconds)
Cbc0032I Strong branching done 660 times (12577 iterations), fathomed 10 nodes and fixed 5 variables
Cbc0035I Maximum depth 18, 394 variables fixed on reduced cost
Total time (CPU seconds):       2.80   (Wallclock seconds):       3.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 510 (-17) rows, 261 (-3) columns and 1511 (-34) elements
Clp1000I sum of infeasibilities 4.42481e-05 - average 8.67609e-08, 114 fixed columns
Coin0506I Presolve 280 (-230) rows, 145 (-116) columns and 824 (-687) elements
Clp0029I End of values pass after 145 iterations
Clp0014I Perturbing problem by 0.001% of 0.1648637 - largest nonzero change 0 ( 0%) - largest zero change 2.9941894e-05
Clp0000I Optimal - objective value 167.90588
Clp0000I Optimal - objective value 167.90588
Coin0511I After Postsolve, objective 167.90588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13614542 - largest nonzero change 0 ( 0%) - largest zero change 2.98842e-05
Clp0000I Optimal - objective value 167.90588
Clp0000I Optimal - objective value 167.90588
Clp0000I Optimal - objective value 167.90588
Coin0511I After Postsolve, objective 167.90588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.9058835 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 510 rows, 261 columns (260 integer (260 of which binary)) and 1511 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.372%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 12.9298
Cbc0038I Solution found of 21.6306
Cbc0038I Relaxing continuous gives -2.94384
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 131 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -2.94384 to -86.7942 (0.06 seconds)
Cbc0038I Round again with cutoff of -94.9054
Cbc0038I Pass   1: suminf.    3.79560 (45) obj. -94.9054 iterations 196
Cbc0038I Pass   2: suminf.    3.79560 (45) obj. -94.9054 iterations 0
Cbc0038I Pass   3: suminf.    2.47905 (9) obj. -94.9054 iterations 67
Cbc0038I Pass   4: suminf.    1.93044 (13) obj. -94.9054 iterations 27
Cbc0038I Pass   5: suminf.    2.31308 (8) obj. -94.9054 iterations 57
Cbc0038I Pass   6: suminf.    2.21013 (8) obj. -94.9054 iterations 24
Cbc0038I Pass   7: suminf.    3.87186 (13) obj. -94.9054 iterations 43
Cbc0038I Pass   8: suminf.    3.55337 (10) obj. -94.9054 iterations 9
Cbc0038I Pass   9: suminf.    2.61873 (8) obj. -94.9054 iterations 11
Cbc0038I Pass  10: suminf.    2.87646 (10) obj. -94.9054 iterations 30
Cbc0038I Pass  11: suminf.    2.00023 (13) obj. -94.9054 iterations 13
Cbc0038I Pass  12: suminf.    2.00254 (12) obj. -94.9054 iterations 3
Cbc0038I Pass  13: suminf.    2.35354 (7) obj. -94.9054 iterations 53
Cbc0038I Pass  14: suminf.    2.35354 (7) obj. -94.9054 iterations 0
Cbc0038I Pass  15: suminf.    2.12650 (7) obj. -94.9054 iterations 28
Cbc0038I Pass  16: suminf.    1.74690 (6) obj. -94.9054 iterations 14
Cbc0038I Pass  17: suminf.    1.71618 (6) obj. -94.9054 iterations 14
Cbc0038I Pass  18: suminf.    2.93167 (8) obj. -94.9054 iterations 7
Cbc0038I Pass  19: suminf.    2.51023 (8) obj. -94.9054 iterations 12
Cbc0038I Pass  20: suminf.    2.45598 (8) obj. -94.9054 iterations 9
Cbc0038I Pass  21: suminf.    2.37188 (8) obj. -94.9054 iterations 6
Cbc0038I Pass  22: suminf.    2.85243 (8) obj. -94.9054 iterations 47
Cbc0038I Pass  23: suminf.    2.58795 (8) obj. -94.9054 iterations 19
Cbc0038I Pass  24: suminf.    2.44568 (8) obj. -94.9054 iterations 19
Cbc0038I Pass  25: suminf.    2.33724 (7) obj. -94.9054 iterations 19
Cbc0038I Pass  26: suminf.    2.79469 (8) obj. -94.9054 iterations 27
Cbc0038I Pass  27: suminf.    2.45598 (8) obj. -94.9054 iterations 13
Cbc0038I Pass  28: suminf.    2.37188 (8) obj. -94.9054 iterations 6
Cbc0038I Pass  29: suminf.    2.85243 (8) obj. -94.9054 iterations 48
Cbc0038I Pass  30: suminf.    2.58795 (8) obj. -94.9054 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 200 rows 105 columns
Cbc0038I Mini branch and bound improved solution from -86.7942 to -88.1551 (0.16 seconds)
Cbc0038I Round again with cutoff of -109.506
Cbc0038I Pass  30: suminf.    4.58502 (60) obj. -109.506 iterations 8
Cbc0038I Pass  31: suminf.    4.58502 (60) obj. -109.506 iterations 0
Cbc0038I Pass  32: suminf.    4.73464 (15) obj. -109.506 iterations 68
Cbc0038I Pass  33: suminf.    3.07052 (13) obj. -109.506 iterations 50
Cbc0038I Pass  34: suminf.    5.35867 (14) obj. -109.506 iterations 48
Cbc0038I Pass  35: suminf.    4.57791 (16) obj. -109.506 iterations 16
Cbc0038I Pass  36: suminf.    4.52996 (16) obj. -109.506 iterations 3
Cbc0038I Pass  37: suminf.    3.19120 (13) obj. -109.506 iterations 32
Cbc0038I Pass  38: suminf.    2.91450 (13) obj. -109.506 iterations 28
Cbc0038I Pass  39: suminf.    2.91450 (13) obj. -109.506 iterations 0
Cbc0038I Pass  40: suminf.    4.14539 (13) obj. -109.506 iterations 25
Cbc0038I Pass  41: suminf.    4.09797 (13) obj. -109.506 iterations 17
Cbc0038I Pass  42: suminf.    3.35326 (11) obj. -109.506 iterations 10
Cbc0038I Pass  43: suminf.    3.30294 (16) obj. -109.506 iterations 10
Cbc0038I Pass  44: suminf.    3.75432 (12) obj. -109.506 iterations 36
Cbc0038I Pass  45: suminf.    3.31208 (16) obj. -109.506 iterations 16
Cbc0038I Pass  46: suminf.    3.28066 (13) obj. -109.506 iterations 9
Cbc0038I Pass  47: suminf.    3.17544 (11) obj. -109.506 iterations 22
Cbc0038I Pass  48: suminf.    1.95631 (10) obj. -109.506 iterations 12
Cbc0038I Pass  49: suminf.    1.91101 (10) obj. -109.506 iterations 2
Cbc0038I Pass  50: suminf.    2.41041 (8) obj. -109.506 iterations 17
Cbc0038I Pass  51: suminf.    2.14164 (8) obj. -109.506 iterations 9
Cbc0038I Pass  52: suminf.    1.86998 (8) obj. -109.506 iterations 16
Cbc0038I Pass  53: suminf.    1.86085 (9) obj. -109.506 iterations 8
Cbc0038I Pass  54: suminf.    3.24824 (9) obj. -109.506 iterations 9
Cbc0038I Pass  55: suminf.    2.15605 (8) obj. -109.506 iterations 17
Cbc0038I Pass  56: suminf.    2.14164 (8) obj. -109.506 iterations 4
Cbc0038I Pass  57: suminf.    1.86998 (8) obj. -109.506 iterations 18
Cbc0038I Pass  58: suminf.    1.86085 (9) obj. -109.506 iterations 9
Cbc0038I Pass  59: suminf.    3.24824 (9) obj. -109.506 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 150 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 212 rows 111 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -88.1551 - took 0.25 seconds
Cbc0012I Integer solution of -88.15508 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 133 rows 71 columns
Cbc0031I 40 added rows had average density of 170
Cbc0013I At root node, 40 cuts changed objective from -167.90588 to -151.21239 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41933 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.503 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2917 row cuts average 259.4 elements, 0 column cuts (0 active)  in 0.495 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.571 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 254.8 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -88.15508 best solution, best possible -151.21239 (5.43 seconds)
Cbc0010I After 10 nodes, 9 on tree, -88.15508 best solution, best possible -151.21239 (6.13 seconds)
Cbc0012I Integer solution of -88.48428 found by rounding after 21622 iterations and 42 nodes (6.57 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -94.10714 found by RINS after 21622 iterations and 42 nodes (6.58 seconds)
Cbc0016I Integer solution of -95.75008 found by strong branching after 22502 iterations and 58 nodes (6.66 seconds)
Cbc0010I After 77 nodes, 16 on tree, -95.75008 best solution, best possible -151.21239 (6.84 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 138 rows 73 columns
Cbc0001I Search completed - best objective -95.75008, took 28932 iterations and 202 nodes (7.43 seconds)
Cbc0032I Strong branching done 2098 times (65052 iterations), fathomed 13 nodes and fixed 72 variables
Cbc0035I Maximum depth 84, 919 variables fixed on reduced cost
Total time (CPU seconds):       7.32   (Wallclock seconds):       7.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 384 (-143) rows, 394 (-131) columns and 19330 (-16407) elements
Clp1000I sum of infeasibilities 4.32626e-06 - average 1.12663e-08, 207 fixed columns
Coin0506I Presolve 177 (-207) rows, 187 (-207) columns and 700 (-18630) elements
Clp0006I 0  Obj -37.856174 Dual inf 12797.837 (186)
Clp0029I End of values pass after 105 iterations
Clp0014I Perturbing problem by 0.001% of 0.15010635 - largest nonzero change 2.8402819e-05 ( 0.0025820745%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value -27.090771
Clp0000I Optimal - objective value -27.090771
Coin0511I After Postsolve, objective -27.090771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -27.090771 Dual inf 176.85578 (136)
Clp0014I Perturbing problem by 0.001% of 1.7727856 - largest nonzero change 2.6331452e-05 ( 0.0021869008%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 203.28943
Clp0000I Optimal - objective value 203.28943
Clp0000I Optimal - objective value 203.28943
Coin0511I After Postsolve, objective 203.28943, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 203.2894339 - 0 iterations time 0.162, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 384 rows, 394 columns (394 integer (394 of which binary)) and 19330 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.063%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 114 integers unsatisfied sum - 5.52227
Cbc0038I Pass   1: suminf.    3.37901 (106) obj. -183.026 iterations 50
Cbc0038I Pass   2: suminf.    2.35689 (78) obj. -106.001 iterations 28
Cbc0038I Pass   3: suminf.    1.39301 (49) obj. -72.1635 iterations 29
Cbc0038I Pass   4: suminf.    0.58403 (23) obj. -30.5024 iterations 26
Cbc0038I Pass   5: suminf.    0.06816 (4) obj. -10.0761 iterations 19
Cbc0038I Solution found of -6.14426
Cbc0038I Rounding solution of -21.2442 is better than previous of -6.14426

Cbc0038I Before mini branch and bound, 280 integers at bound fixed and 0 continuous
Cbc0038I Full problem 384 rows 394 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -39.4448
Cbc0038I Pass   6: suminf.    3.37901 (106) obj. -183.026 iterations 0
Cbc0038I Pass   7: suminf.    2.56628 (84) obj. -117.583 iterations 22
Cbc0038I Pass   8: suminf.    1.95051 (66) obj. -92.4753 iterations 18
Cbc0038I Pass   9: suminf.    1.07493 (39) obj. -54.736 iterations 27
Cbc0038I Pass  10: suminf.    0.97346 (26) obj. -39.4448 iterations 36
Cbc0038I Pass  11: suminf.    0.96390 (15) obj. -39.4448 iterations 36
Cbc0038I Pass  12: suminf.    0.58219 (15) obj. -43.3418 iterations 5
Cbc0038I Pass  13: suminf.    0.82095 (8) obj. -39.4448 iterations 43
Cbc0038I Pass  14: suminf.    0.62861 (6) obj. -39.4448 iterations 25
Cbc0038I Pass  15: suminf.    0.91167 (4) obj. -39.4448 iterations 51
Cbc0038I Pass  16: suminf.    0.91167 (4) obj. -39.4448 iterations 5
Cbc0038I Pass  17: suminf.    0.91930 (4) obj. -39.4448 iterations 5
Cbc0038I Pass  18: suminf.    0.39574 (4) obj. -39.4448 iterations 4
Cbc0038I Pass  19: suminf.    1.29697 (24) obj. -50.5848 iterations 69
Cbc0038I Pass  20: suminf.    1.29697 (24) obj. -50.5848 iterations 12
Cbc0038I Pass  21: suminf.    1.17679 (6) obj. -39.4448 iterations 33
Cbc0038I Pass  22: suminf.    0.62909 (6) obj. -39.4448 iterations 16
Cbc0038I Pass  23: suminf.    0.74492 (5) obj. -39.4448 iterations 9
Cbc0038I Pass  24: suminf.    0.70612 (5) obj. -39.4448 iterations 15
Cbc0038I Pass  25: suminf.    0.77173 (5) obj. -39.4448 iterations 6
Cbc0038I Pass  26: suminf.    0.77173 (5) obj. -39.4448 iterations 4
Cbc0038I Pass  27: suminf.    0.70612 (5) obj. -39.4448 iterations 6
Cbc0038I Pass  28: suminf.    1.69699 (26) obj. -39.4448 iterations 71
Cbc0038I Pass  29: suminf.    1.69699 (26) obj. -39.4448 iterations 18
Cbc0038I Pass  30: suminf.    0.77836 (15) obj. -39.4448 iterations 15
Cbc0038I Pass  31: suminf.    0.68612 (14) obj. -39.7824 iterations 2
Cbc0038I Pass  32: suminf.    0.55156 (6) obj. -39.4448 iterations 51
Cbc0038I Pass  33: suminf.    0.33313 (5) obj. -39.7081 iterations 21
Cbc0038I Pass  34: suminf.    5.98382 (32) obj. -39.4448 iterations 79
Cbc0038I Pass  35: suminf.    1.68546 (21) obj. -39.4448 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 384 rows 394 columns, reduced to 133 rows 139 columns - 38 fixed gives 88, 99 - ok now
Cbc0038I Full problem 384 rows 394 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -21.2442 - took 0.13 seconds
Cbc0012I Integer solution of -21.244228 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 384 rows 394 columns, reduced to 10 rows 13 columns
Cbc0031I 139 added rows had average density of 84.244604
Cbc0013I At root node, 139 cuts changed objective from -203.24855 to -117.36043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27431 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.524 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3578 row cuts average 365.7 elements, 0 column cuts (0 active)  in 1.379 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 974 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6652 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.208 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.669 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2696 row cuts average 10.5 elements, 0 column cuts (0 active)  in 1.075 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 402 row cuts average 213.2 elements, 0 column cuts (0 active)  in 0.267 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 349 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.433 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.244228 best solution, best possible -117.36043 (9.31 seconds)
Cbc0012I Integer solution of -64.13472 found by rounding after 14891 iterations and 2 nodes (9.95 seconds)
Cbc0010I After 2 nodes, 3 on tree, -64.13472 best solution, best possible -117.36043 (10.27 seconds)
Cbc0010I After 6 nodes, 7 on tree, -64.13472 best solution, best possible -117.36043 (11.09 seconds)
Cbc0012I Integer solution of -69.62487 found by DiveCoefficient after 15867 iterations and 9 nodes (11.28 seconds)
Cbc0012I Integer solution of -73.47729 found by DiveCoefficient after 15928 iterations and 10 nodes (11.34 seconds)
Cbc0012I Integer solution of -89.008359 found by rounding after 16174 iterations and 14 nodes (11.44 seconds)
Cbc0010I After 26 nodes, 16 on tree, -89.008359 best solution, best possible -117.36043 (11.80 seconds)
Cbc0038I Full problem 384 rows 394 columns, reduced to 75 rows 84 columns
Cbc0012I Integer solution of -92.21362 found by RINS after 18298 iterations and 41 nodes (12.46 seconds)
Cbc0010I After 42 nodes, 20 on tree, -92.21362 best solution, best possible -117.36043 (12.68 seconds)
Cbc0004I Integer solution of -94.10714 found after 19994 iterations and 64 nodes (13.11 seconds)
Cbc0004I Integer solution of -95.75008 found after 20730 iterations and 87 nodes (13.31 seconds)
Cbc0038I Full problem 384 rows 394 columns, reduced to 75 rows 84 columns
Cbc0010I After 94 nodes, 14 on tree, -95.75008 best solution, best possible -117.36043 (13.45 seconds)
Cbc0010I After 124 nodes, 3 on tree, -95.75008 best solution, best possible -117.36043 (14.26 seconds)
Cbc0010I After 127 nodes, 6 on tree, -95.75008 best solution, best possible -117.36043 (15.19 seconds)
Cbc0010I After 129 nodes, 7 on tree, -95.75008 best solution, best possible -117.36043 (15.89 seconds)
Cbc0010I After 134 nodes, 8 on tree, -95.75008 best solution, best possible -117.36043 (16.73 seconds)
Cbc0010I After 140 nodes, 10 on tree, -95.75008 best solution, best possible -117.36043 (17.63 seconds)
Cbc0010I After 170 nodes, 10 on tree, -95.75008 best solution, best possible -117.36043 (18.34 seconds)
Cbc0010I After 192 nodes, 9 on tree, -95.75008 best solution, best possible -117.36043 (19.05 seconds)
Cbc0010I After 208 nodes, 5 on tree, -95.75008 best solution, best possible -117.36043 (19.76 seconds)
Cbc0010I After 216 nodes, 5 on tree, -95.75008 best solution, best possible -117.36043 (20.46 seconds)
Cbc0010I After 232 nodes, 5 on tree, -95.75008 best solution, best possible -117.36043 (21.50 seconds)
Cbc0010I After 238 nodes, 4 on tree, -95.75008 best solution, best possible -117.36043 (22.39 seconds)
Cbc0001I Search completed - best objective -95.75008, took 39216 iterations and 242 nodes (22.47 seconds)
Cbc0032I Strong branching done 2188 times (48512 iterations), fathomed 15 nodes and fixed 11 variables
Cbc0035I Maximum depth 16, 1372 variables fixed on reduced cost
Total time (CPU seconds):       22.01   (Wallclock seconds):       22.59

