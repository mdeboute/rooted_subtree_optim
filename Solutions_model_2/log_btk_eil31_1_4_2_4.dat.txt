Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 3.38767e-05 - average 6.27347e-07, 5 fixed columns
Coin0506I Presolve 40 (-14) rows, 23 (-7) columns and 119 (-42) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 102.11744
Clp0000I Optimal - objective value 102.11744
Coin0511I After Postsolve, objective 102.11744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 102.11744
Clp0000I Optimal - objective value 102.11744
Clp0000I Optimal - objective value 102.11744
Coin0511I After Postsolve, objective 102.11744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.117438 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.0682
Cbc0038I Pass   1: suminf.    0.56823 (2) obj. -80.216 iterations 7
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -53.8502 iterations 3
Cbc0038I Solution found of -53.8502
Cbc0038I Relaxing continuous gives -53.8502
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -53.8502 to -57.4095 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.1192
Cbc0038I Pass   3: suminf.    0.56823 (2) obj. -80.216 iterations 0
Cbc0038I Pass   4: suminf.    0.11988 (1) obj. -61.1192 iterations 3
Cbc0038I Pass   5: suminf.    1.33751 (3) obj. -61.1192 iterations 13
Cbc0038I Pass   6: suminf.    0.84006 (2) obj. -61.1192 iterations 3
Cbc0038I Pass   7: suminf.    0.64416 (3) obj. -61.1192 iterations 2
Cbc0038I Pass   8: suminf.    0.67889 (2) obj. -62.7269 iterations 1
Cbc0038I Pass   9: suminf.    1.01350 (5) obj. -61.1192 iterations 6
Cbc0038I Pass  10: suminf.    1.01350 (5) obj. -61.1192 iterations 0
Cbc0038I Pass  11: suminf.    0.70463 (3) obj. -61.1192 iterations 8
Cbc0038I Pass  12: suminf.    0.37277 (2) obj. -61.1192 iterations 1
Cbc0038I Pass  13: suminf.    0.79231 (2) obj. -61.1192 iterations 3
Cbc0038I Pass  14: suminf.    0.48309 (2) obj. -64.0974 iterations 8
Cbc0038I Pass  15: suminf.    0.41443 (2) obj. -61.1192 iterations 2
Cbc0038I Pass  16: suminf.    0.97218 (3) obj. -61.1192 iterations 4
Cbc0038I Pass  17: suminf.    1.05539 (3) obj. -61.1192 iterations 1
Cbc0038I Pass  18: suminf.    0.76299 (5) obj. -61.1192 iterations 8
Cbc0038I Pass  19: suminf.    0.75320 (6) obj. -61.1192 iterations 4
Cbc0038I Pass  20: suminf.    0.09819 (1) obj. -61.1192 iterations 11
Cbc0038I Pass  21: suminf.    0.30894 (1) obj. -73.8989 iterations 1
Cbc0038I Pass  22: suminf.    0.68798 (4) obj. -61.1192 iterations 6
Cbc0038I Pass  23: suminf.    0.68798 (4) obj. -61.1192 iterations 0
Cbc0038I Pass  24: suminf.    1.28044 (4) obj. -61.1192 iterations 4
Cbc0038I Pass  25: suminf.    0.41040 (2) obj. -68.8055 iterations 4
Cbc0038I Pass  26: suminf.    0.23309 (2) obj. -61.1192 iterations 1
Cbc0038I Pass  27: suminf.    0.76494 (2) obj. -61.1192 iterations 3
Cbc0038I Pass  28: suminf.    0.70465 (2) obj. -61.1192 iterations 1
Cbc0038I Pass  29: suminf.    0.44954 (2) obj. -61.1192 iterations 3
Cbc0038I Pass  30: suminf.    0.72760 (7) obj. -61.1192 iterations 12
Cbc0038I Pass  31: suminf.    0.50620 (3) obj. -61.1192 iterations 5
Cbc0038I Pass  32: suminf.    1.08577 (3) obj. -71.3259 iterations 4
Cbc0038I Rounding solution of -72.4031 is better than previous of -57.4095

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -72.4031 to -72.4678 (0.01 seconds)
Cbc0038I Round again with cutoff of -76.8755
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.56823 (2) obj. -80.216 iterations 0
Cbc0038I Pass  33: suminf.    0.48117 (2) obj. -76.8755 iterations 1
Cbc0038I Pass  34: suminf.    0.92725 (2) obj. -76.8755 iterations 3
Cbc0038I Pass  35: suminf.    0.62783 (2) obj. -85.6128 iterations 2
Cbc0038I Pass  36: suminf.    0.92725 (2) obj. -76.8755 iterations 3
Cbc0038I Pass  37: suminf.    1.56609 (7) obj. -76.8755 iterations 9
Cbc0038I Pass  38: suminf.    0.97191 (3) obj. -76.8755 iterations 5
Cbc0038I Pass  39: suminf.    0.96432 (4) obj. -76.8755 iterations 2
Cbc0038I Pass  40: suminf.    0.62797 (3) obj. -76.8755 iterations 5
Cbc0038I Pass  41: suminf.    0.39637 (2) obj. -81.5107 iterations 2
Cbc0038I Pass  42: suminf.    0.92591 (2) obj. -76.8755 iterations 4
Cbc0038I Pass  43: suminf.    0.75917 (2) obj. -81.3269 iterations 2
Cbc0038I Pass  44: suminf.    0.65648 (2) obj. -76.8755 iterations 1
Cbc0038I Pass  45: suminf.    0.92591 (2) obj. -76.8755 iterations 3
Cbc0038I Pass  46: suminf.    2.13567 (10) obj. -76.8755 iterations 16
Cbc0038I Pass  47: suminf.    0.19869 (2) obj. -76.8755 iterations 10
Cbc0038I Pass  48: suminf.    0.23312 (2) obj. -78.8803 iterations 1
Cbc0038I Pass  49: suminf.    0.90048 (4) obj. -76.8755 iterations 11
Cbc0038I Pass  50: suminf.    0.65135 (3) obj. -76.8755 iterations 7
Cbc0038I Pass  51: suminf.    0.76987 (4) obj. -76.8755 iterations 2
Cbc0038I Pass  52: suminf.    0.76644 (4) obj. -76.8755 iterations 1
Cbc0038I Pass  53: suminf.    0.92970 (3) obj. -76.8755 iterations 2
Cbc0038I Pass  54: suminf.    0.79849 (3) obj. -76.8755 iterations 2
Cbc0038I Pass  55: suminf.    0.90897 (3) obj. -76.8755 iterations 1
Cbc0038I Pass  56: suminf.    0.90897 (3) obj. -76.8755 iterations 0
Cbc0038I Pass  57: suminf.    0.79849 (3) obj. -76.8755 iterations 1
Cbc0038I Pass  58: suminf.    1.18151 (5) obj. -76.8755 iterations 7
Cbc0038I Pass  59: suminf.    1.17076 (4) obj. -76.8755 iterations 1
Cbc0038I Pass  60: suminf.    1.08886 (3) obj. -76.8755 iterations 4
Cbc0038I Pass  61: suminf.    0.76234 (3) obj. -76.8755 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -72.4678 - took 0.05 seconds
Cbc0012I Integer solution of -72.4678 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 14 rows 10 columns
Cbc0031I 10 added rows had average density of 16.2
Cbc0013I At root node, 10 cuts changed objective from -94.50608 to -80.523509 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 439 row cuts average 3.7 elements, 5 column cuts (5 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 494 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -72.46780000000001, took 1662 iterations and 10 nodes (0.16 seconds)
Cbc0032I Strong branching done 124 times (901 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-17) rows, 51 (-11) columns and 483 (-165) elements
Clp1000I sum of infeasibilities 1.07855e-05 - average 2.29479e-07, 34 fixed columns
Coin0506I Presolve 11 (-36) rows, 14 (-37) columns and 45 (-438) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 2.1222122 - largest nonzero change 0 ( 0%) - largest zero change 2.7953846e-05
Clp0000I Optimal - objective value 84.765017
Clp0000I Optimal - objective value 84.765017
Coin0511I After Postsolve, objective 84.765017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2430167 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 114.01852
Clp0000I Optimal - objective value 114.01852
Clp0000I Optimal - objective value 114.01852
Coin0511I After Postsolve, objective 114.01852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.0185242 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 50 columns (50 integer (50 of which binary)) and 503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.059%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.40119
Cbc0038I Pass   1: suminf.    0.54401 (4) obj. -22.3616 iterations 19
Cbc0038I Pass   2: suminf.    0.54401 (4) obj. -22.3616 iterations 0
Cbc0038I Solution found of -16.2917
Cbc0038I Rounding solution of -30.2917 is better than previous of -16.2917

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -36.6176
Cbc0038I Pass   3: suminf.    1.13542 (5) obj. -36.6176 iterations 1
Cbc0038I Pass   4: suminf.    0.77910 (5) obj. -36.6176 iterations 2
Cbc0038I Pass   5: suminf.    0.33695 (2) obj. -36.6176 iterations 5
Cbc0038I Pass   6: suminf.    0.33695 (2) obj. -36.6176 iterations 0
Cbc0038I Pass   7: suminf.    0.36801 (2) obj. -82.8818 iterations 1
Cbc0038I Pass   8: suminf.    0.05263 (1) obj. -71.5761 iterations 1
Cbc0038I Pass   9: suminf.    1.42919 (4) obj. -36.6176 iterations 10
Cbc0038I Pass  10: suminf.    1.03443 (3) obj. -36.6176 iterations 5
Cbc0038I Pass  11: suminf.    0.59639 (2) obj. -46.1954 iterations 4
Cbc0038I Pass  12: suminf.    0.34677 (2) obj. -36.6176 iterations 1
Cbc0038I Pass  13: suminf.    0.88325 (2) obj. -36.6176 iterations 1
Cbc0038I Pass  14: suminf.    1.18382 (4) obj. -66.3311 iterations 10
Cbc0038I Pass  15: suminf.    0.54580 (2) obj. -61.1157 iterations 4
Cbc0038I Pass  16: suminf.    0.37225 (2) obj. -36.6176 iterations 4
Cbc0038I Pass  17: suminf.    0.31495 (2) obj. -67.3756 iterations 2
Cbc0038I Pass  18: suminf.    0.17895 (1) obj. -62.5 iterations 1
Cbc0038I Pass  19: suminf.    1.15513 (5) obj. -36.6176 iterations 11
Cbc0038I Pass  20: suminf.    0.97028 (7) obj. -36.6176 iterations 8
Cbc0038I Pass  21: suminf.    0.28787 (2) obj. -36.6176 iterations 9
Cbc0038I Pass  22: suminf.    0.28787 (2) obj. -36.6176 iterations 0
Cbc0038I Pass  23: suminf.    0.23158 (1) obj. -61.1335 iterations 2
Cbc0038I Pass  24: suminf.    0.23158 (1) obj. -61.1335 iterations 0
Cbc0038I Pass  25: suminf.    0.94598 (5) obj. -36.6176 iterations 11
Cbc0038I Pass  26: suminf.    0.63140 (4) obj. -36.6176 iterations 3
Cbc0038I Pass  27: suminf.    0.24800 (1) obj. -39.3195 iterations 4
Cbc0038I Pass  28: suminf.    0.21083 (1) obj. -36.6176 iterations 1
Cbc0038I Pass  29: suminf.    0.98890 (10) obj. -36.6176 iterations 19
Cbc0038I Pass  30: suminf.    0.53258 (5) obj. -36.6176 iterations 10
Cbc0038I Pass  31: suminf.    0.09945 (2) obj. -36.6176 iterations 8
Cbc0038I Pass  32: suminf.    0.09945 (2) obj. -36.6176 iterations 0
Cbc0038I Rounding solution of -56.3461 is better than previous of -30.2917

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -56.3461 to -68.6681 (0.03 seconds)
Cbc0038I Round again with cutoff of -73.6446
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.84070 (5) obj. -73.6446 iterations 0
Cbc0038I Pass  33: suminf.    0.54289 (2) obj. -73.6446 iterations 6
Cbc0038I Pass  34: suminf.    0.11033 (2) obj. -73.6446 iterations 2
Cbc0038I Pass  35: suminf.    0.54289 (2) obj. -73.6446 iterations 2
Cbc0038I Pass  36: suminf.    1.29902 (6) obj. -73.6446 iterations 8
Cbc0038I Pass  37: suminf.    1.19854 (5) obj. -73.6446 iterations 3
Cbc0038I Pass  38: suminf.    0.98065 (3) obj. -73.6446 iterations 5
Cbc0038I Pass  39: suminf.    0.56656 (2) obj. -73.6446 iterations 1
Cbc0038I Pass  40: suminf.    0.34591 (2) obj. -73.6446 iterations 1
Cbc0038I Pass  41: suminf.    0.40302 (3) obj. -73.6446 iterations 3
Cbc0038I Pass  42: suminf.    1.98709 (8) obj. -73.6446 iterations 8
Cbc0038I Pass  43: suminf.    1.22544 (3) obj. -73.6446 iterations 4
Cbc0038I Pass  44: suminf.    0.48881 (2) obj. -73.6446 iterations 4
Cbc0038I Pass  45: suminf.    1.37143 (6) obj. -73.6446 iterations 10
Cbc0038I Pass  46: suminf.    0.93390 (4) obj. -73.6446 iterations 4
Cbc0038I Pass  47: suminf.    0.43818 (2) obj. -73.6446 iterations 4
Cbc0038I Pass  48: suminf.    0.40980 (2) obj. -74.6748 iterations 1
Cbc0038I Pass  49: suminf.    0.71717 (3) obj. -73.6446 iterations 1
Cbc0038I Pass  50: suminf.    2.11647 (6) obj. -73.6446 iterations 4
Cbc0038I Pass  51: suminf.    1.16419 (4) obj. -76.5925 iterations 3
Cbc0038I Pass  52: suminf.    2.19630 (8) obj. -73.6446 iterations 8
Cbc0038I Pass  53: suminf.    1.85765 (6) obj. -73.6446 iterations 4
Cbc0038I Pass  54: suminf.    0.43861 (2) obj. -73.6446 iterations 7
Cbc0038I Pass  55: suminf.    0.43861 (2) obj. -73.6446 iterations 0
Cbc0038I Pass  56: suminf.    0.48264 (2) obj. -73.6446 iterations 2
Cbc0038I Pass  57: suminf.    0.89509 (5) obj. -73.6446 iterations 8
Cbc0038I Pass  58: suminf.    0.65676 (4) obj. -73.6446 iterations 2
Cbc0038I Pass  59: suminf.    0.99842 (3) obj. -73.6446 iterations 5
Cbc0038I Pass  60: suminf.    0.38023 (1) obj. -73.6446 iterations 1
Cbc0038I Pass  61: suminf.    0.35772 (1) obj. -75.0092 iterations 1
Cbc0038I Rounding solution of -72.4678 is better than previous of -68.6681

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 33 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -79.6163
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.93438 (6) obj. -79.6163 iterations 1
Cbc0038I Pass  62: suminf.    0.42983 (2) obj. -79.6163 iterations 5
Cbc0038I Pass  63: suminf.    0.27692 (2) obj. -79.6163 iterations 2
Cbc0038I Pass  64: suminf.    1.85030 (7) obj. -79.6163 iterations 7
Cbc0038I Pass  65: suminf.    0.70472 (3) obj. -79.6163 iterations 6
Cbc0038I Pass  66: suminf.    2.92264 (9) obj. -79.6163 iterations 10
Cbc0038I Pass  67: suminf.    1.95402 (5) obj. -79.6163 iterations 4
Cbc0038I Pass  68: suminf.    1.95402 (5) obj. -79.6163 iterations 1
Cbc0038I Pass  69: suminf.    0.73595 (3) obj. -79.6163 iterations 6
Cbc0038I Pass  70: suminf.    0.58488 (3) obj. -79.6163 iterations 3
Cbc0038I Pass  71: suminf.    0.65056 (3) obj. -79.6163 iterations 2
Cbc0038I Pass  72: suminf.    0.47348 (2) obj. -79.6163 iterations 2
Cbc0038I Pass  73: suminf.    2.09173 (9) obj. -79.6163 iterations 14
Cbc0038I Pass  74: suminf.    1.45593 (5) obj. -79.6163 iterations 7
Cbc0038I Pass  75: suminf.    0.23397 (3) obj. -79.6163 iterations 7
Cbc0038I Pass  76: suminf.    0.21090 (2) obj. -79.6163 iterations 2
Cbc0038I Pass  77: suminf.    1.54382 (6) obj. -79.6163 iterations 16
Cbc0038I Pass  78: suminf.    0.57294 (3) obj. -79.6163 iterations 10
Cbc0038I Pass  79: suminf.    1.88492 (9) obj. -79.6163 iterations 7
Cbc0038I Pass  80: suminf.    1.29862 (6) obj. -79.6163 iterations 10
Cbc0038I Pass  81: suminf.    0.88648 (4) obj. -79.6163 iterations 6
Cbc0038I Pass  82: suminf.    2.65116 (11) obj. -79.6163 iterations 8
Cbc0038I Pass  83: suminf.    1.55232 (8) obj. -79.6163 iterations 5
Cbc0038I Pass  84: suminf.    0.96125 (6) obj. -79.9842 iterations 4
Cbc0038I Pass  85: suminf.    2.78143 (7) obj. -79.6163 iterations 8
Cbc0038I Pass  86: suminf.    1.52779 (4) obj. -79.6163 iterations 5
Cbc0038I Pass  87: suminf.    1.11199 (4) obj. -79.6163 iterations 2
Cbc0038I Pass  88: suminf.    0.58427 (3) obj. -79.6163 iterations 5
Cbc0038I Pass  89: suminf.    0.21090 (2) obj. -79.6163 iterations 3
Cbc0038I Pass  90: suminf.    0.23397 (3) obj. -79.6163 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -72.4678 - took 0.03 seconds
Cbc0012I Integer solution of -72.4678 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 45 rows 50 columns, reduced to 12 rows 13 columns
Cbc0031I 21 added rows had average density of 7.7619048
Cbc0013I At root node, 21 cuts changed objective from -93.550199 to -76.878645 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 173 row cuts average 2.7 elements, 11 column cuts (11 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 29 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 19 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0010I After 3 nodes, 3 on tree, -72.4678 best solution, best possible -76.697323 (0.55 seconds)
Cbc0001I Search completed - best objective -72.46780000000001, took 428 iterations and 6 nodes (0.56 seconds)
Cbc0032I Strong branching done 112 times (824 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 3.38767e-05 - average 6.27347e-07, 5 fixed columns
Coin0506I Presolve 40 (-14) rows, 23 (-7) columns and 119 (-42) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 102.11744
Clp0000I Optimal - objective value 102.11744
Coin0511I After Postsolve, objective 102.11744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 102.11744
Clp0000I Optimal - objective value 102.11744
Clp0000I Optimal - objective value 102.11744
Coin0511I After Postsolve, objective 102.11744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.117438 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.0682
Cbc0038I Pass   1: suminf.    0.56823 (2) obj. -80.216 iterations 7
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -53.8502 iterations 3
Cbc0038I Solution found of -53.8502
Cbc0038I Relaxing continuous gives -53.8502
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -53.8502 to -57.4095 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.1192
Cbc0038I Pass   3: suminf.    0.56823 (2) obj. -80.216 iterations 0
Cbc0038I Pass   4: suminf.    0.11988 (1) obj. -61.1192 iterations 3
Cbc0038I Pass   5: suminf.    1.33751 (3) obj. -61.1192 iterations 13
Cbc0038I Pass   6: suminf.    0.84006 (2) obj. -61.1192 iterations 3
Cbc0038I Pass   7: suminf.    0.64416 (3) obj. -61.1192 iterations 2
Cbc0038I Pass   8: suminf.    0.67889 (2) obj. -62.7269 iterations 1
Cbc0038I Pass   9: suminf.    1.01350 (5) obj. -61.1192 iterations 6
Cbc0038I Pass  10: suminf.    1.01350 (5) obj. -61.1192 iterations 0
Cbc0038I Pass  11: suminf.    0.70463 (3) obj. -61.1192 iterations 8
Cbc0038I Pass  12: suminf.    0.37277 (2) obj. -61.1192 iterations 1
Cbc0038I Pass  13: suminf.    0.79231 (2) obj. -61.1192 iterations 3
Cbc0038I Pass  14: suminf.    0.48309 (2) obj. -64.0974 iterations 8
Cbc0038I Pass  15: suminf.    0.41443 (2) obj. -61.1192 iterations 2
Cbc0038I Pass  16: suminf.    0.97218 (3) obj. -61.1192 iterations 4
Cbc0038I Pass  17: suminf.    1.05539 (3) obj. -61.1192 iterations 1
Cbc0038I Pass  18: suminf.    0.76299 (5) obj. -61.1192 iterations 8
Cbc0038I Pass  19: suminf.    0.75320 (6) obj. -61.1192 iterations 4
Cbc0038I Pass  20: suminf.    0.09819 (1) obj. -61.1192 iterations 11
Cbc0038I Pass  21: suminf.    0.30894 (1) obj. -73.8989 iterations 1
Cbc0038I Pass  22: suminf.    0.68798 (4) obj. -61.1192 iterations 6
Cbc0038I Pass  23: suminf.    0.68798 (4) obj. -61.1192 iterations 0
Cbc0038I Pass  24: suminf.    1.28044 (4) obj. -61.1192 iterations 4
Cbc0038I Pass  25: suminf.    0.41040 (2) obj. -68.8055 iterations 4
Cbc0038I Pass  26: suminf.    0.23309 (2) obj. -61.1192 iterations 1
Cbc0038I Pass  27: suminf.    0.76494 (2) obj. -61.1192 iterations 3
Cbc0038I Pass  28: suminf.    0.70465 (2) obj. -61.1192 iterations 1
Cbc0038I Pass  29: suminf.    0.44954 (2) obj. -61.1192 iterations 3
Cbc0038I Pass  30: suminf.    0.72760 (7) obj. -61.1192 iterations 12
Cbc0038I Pass  31: suminf.    0.50620 (3) obj. -61.1192 iterations 5
Cbc0038I Pass  32: suminf.    1.08577 (3) obj. -71.3259 iterations 4
Cbc0038I Rounding solution of -72.4031 is better than previous of -57.4095

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -72.4031 to -72.4678 (0.02 seconds)
Cbc0038I Round again with cutoff of -76.8755
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.56823 (2) obj. -80.216 iterations 0
Cbc0038I Pass  33: suminf.    0.48117 (2) obj. -76.8755 iterations 1
Cbc0038I Pass  34: suminf.    0.92725 (2) obj. -76.8755 iterations 3
Cbc0038I Pass  35: suminf.    0.62783 (2) obj. -85.6128 iterations 2
Cbc0038I Pass  36: suminf.    0.92725 (2) obj. -76.8755 iterations 3
Cbc0038I Pass  37: suminf.    1.56609 (7) obj. -76.8755 iterations 9
Cbc0038I Pass  38: suminf.    0.97191 (3) obj. -76.8755 iterations 5
Cbc0038I Pass  39: suminf.    0.96432 (4) obj. -76.8755 iterations 2
Cbc0038I Pass  40: suminf.    0.62797 (3) obj. -76.8755 iterations 5
Cbc0038I Pass  41: suminf.    0.39637 (2) obj. -81.5107 iterations 2
Cbc0038I Pass  42: suminf.    0.92591 (2) obj. -76.8755 iterations 4
Cbc0038I Pass  43: suminf.    0.75917 (2) obj. -81.3269 iterations 2
Cbc0038I Pass  44: suminf.    0.65648 (2) obj. -76.8755 iterations 1
Cbc0038I Pass  45: suminf.    0.92591 (2) obj. -76.8755 iterations 3
Cbc0038I Pass  46: suminf.    2.13567 (10) obj. -76.8755 iterations 16
Cbc0038I Pass  47: suminf.    0.19869 (2) obj. -76.8755 iterations 10
Cbc0038I Pass  48: suminf.    0.23312 (2) obj. -78.8803 iterations 1
Cbc0038I Pass  49: suminf.    0.90048 (4) obj. -76.8755 iterations 11
Cbc0038I Pass  50: suminf.    0.65135 (3) obj. -76.8755 iterations 7
Cbc0038I Pass  51: suminf.    0.76987 (4) obj. -76.8755 iterations 2
Cbc0038I Pass  52: suminf.    0.76644 (4) obj. -76.8755 iterations 1
Cbc0038I Pass  53: suminf.    0.92970 (3) obj. -76.8755 iterations 2
Cbc0038I Pass  54: suminf.    0.79849 (3) obj. -76.8755 iterations 2
Cbc0038I Pass  55: suminf.    0.90897 (3) obj. -76.8755 iterations 1
Cbc0038I Pass  56: suminf.    0.90897 (3) obj. -76.8755 iterations 0
Cbc0038I Pass  57: suminf.    0.79849 (3) obj. -76.8755 iterations 1
Cbc0038I Pass  58: suminf.    1.18151 (5) obj. -76.8755 iterations 7
Cbc0038I Pass  59: suminf.    1.17076 (4) obj. -76.8755 iterations 1
Cbc0038I Pass  60: suminf.    1.08886 (3) obj. -76.8755 iterations 4
Cbc0038I Pass  61: suminf.    0.76234 (3) obj. -76.8755 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -72.4678 - took 0.02 seconds
Cbc0012I Integer solution of -72.4678 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 14 rows 10 columns
Cbc0031I 10 added rows had average density of 16.2
Cbc0013I At root node, 10 cuts changed objective from -94.50608 to -80.523509 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 439 row cuts average 3.7 elements, 5 column cuts (5 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 494 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -72.46780000000001, took 1662 iterations and 10 nodes (0.18 seconds)
Cbc0032I Strong branching done 124 times (901 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 50 (-13) columns and 467 (-182) elements
Clp1000I sum of infeasibilities 3.23501e-09 - average 7.03263e-11, 7 fixed columns
Coin0506I Presolve 39 (-7) rows, 43 (-7) columns and 331 (-136) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.3961531 - largest nonzero change 1.8928655e-05 ( 0.00080919949%) - largest zero change 2.9576007e-05
Clp0000I Optimal - objective value 114.01852
Clp0000I Optimal - objective value 114.01852
Coin0511I After Postsolve, objective 114.01852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 114.01852
Clp0000I Optimal - objective value 114.01852
Clp0000I Optimal - objective value 114.01852
Coin0511I After Postsolve, objective 114.01852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.0185242 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 50 columns (50 integer (50 of which binary)) and 491 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.941%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.37892
Cbc0038I Pass   1: suminf.    0.05263 (1) obj. -71.5761 iterations 20
Cbc0038I Solution found of -16.2917
Cbc0038I Rounding solution of -30.2917 is better than previous of -16.2917

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -36.5107
Cbc0038I Pass   2: suminf.    0.05263 (1) obj. -71.5761 iterations 0
Cbc0038I Pass   3: suminf.    0.33511 (2) obj. -36.5107 iterations 2
Cbc0038I Pass   4: suminf.    0.36801 (2) obj. -82.8818 iterations 1
Cbc0038I Pass   5: suminf.    1.17756 (4) obj. -36.5107 iterations 10
Cbc0038I Pass   6: suminf.    0.77991 (2) obj. -36.5107 iterations 2
Cbc0038I Pass   7: suminf.    0.31707 (1) obj. -57.968 iterations 1
Cbc0038I Solution found of -38.7412
Cbc0038I Rounding solution of -65.1088 is better than previous of -38.7412

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 50 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -70.5834
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.05263 (1) obj. -71.5761 iterations 0
Cbc0038I Pass   9: suminf.    0.60084 (2) obj. -70.5834 iterations 2
Cbc0038I Pass  10: suminf.    2.01797 (6) obj. -70.5834 iterations 9
Cbc0038I Pass  11: suminf.    1.53210 (5) obj. -70.5834 iterations 5
Cbc0038I Pass  12: suminf.    0.75804 (2) obj. -70.5834 iterations 3
Cbc0038I Pass  13: suminf.    0.72099 (2) obj. -70.5834 iterations 1
Cbc0038I Pass  14: suminf.    0.75804 (2) obj. -70.5834 iterations 2
Cbc0038I Pass  15: suminf.    3.11817 (8) obj. -70.5834 iterations 10
Cbc0038I Pass  16: suminf.    1.78637 (6) obj. -70.5834 iterations 6
Cbc0038I Pass  17: suminf.    1.78637 (6) obj. -70.5834 iterations 0
Cbc0038I Pass  18: suminf.    0.98974 (3) obj. -70.5834 iterations 6
Cbc0038I Pass  19: suminf.    0.48750 (1) obj. -71.1083 iterations 2
Cbc0038I Pass  20: suminf.    0.31684 (2) obj. -70.5834 iterations 2
Cbc0038I Pass  21: suminf.    0.48750 (1) obj. -71.1083 iterations 2
Cbc0038I Pass  22: suminf.    2.08471 (8) obj. -70.5834 iterations 8
Cbc0038I Pass  23: suminf.    0.52934 (4) obj. -70.5834 iterations 4
Cbc0038I Pass  24: suminf.    0.44564 (3) obj. -70.5834 iterations 5
Cbc0038I Pass  25: suminf.    0.03158 (1) obj. -70.5834 iterations 2
Cbc0038I Pass  26: suminf.    0.12195 (1) obj. -76.063 iterations 1
Cbc0038I Pass  27: suminf.    5.90047 (13) obj. -70.5834 iterations 19
Cbc0038I Pass  28: suminf.    2.31069 (7) obj. -70.5834 iterations 6
Cbc0038I Pass  29: suminf.    0.64528 (3) obj. -70.5834 iterations 6
Cbc0038I Pass  30: suminf.    0.22682 (1) obj. -70.5834 iterations 7
Cbc0038I Pass  31: suminf.    0.24499 (2) obj. -71.5615 iterations 2
Cbc0038I Pass  32: suminf.    1.71846 (6) obj. -70.5834 iterations 7
Cbc0038I Pass  33: suminf.    1.09767 (4) obj. -70.5834 iterations 3
Cbc0038I Pass  34: suminf.    0.71471 (4) obj. -70.5834 iterations 3
Cbc0038I Pass  35: suminf.    0.73168 (3) obj. -70.5834 iterations 3
Cbc0038I Pass  36: suminf.    0.45747 (2) obj. -72.922 iterations 2
Cbc0038I Pass  37: suminf.    0.86850 (3) obj. -70.5834 iterations 2
Cbc0038I Rounding solution of -72.4031 is better than previous of -65.1088

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 50 columns, reduced to 33 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -72.4031 to -72.4678 (0.03 seconds)
Cbc0038I Round again with cutoff of -78.4719
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  37: suminf.    0.24499 (2) obj. -78.4719 iterations 2
Cbc0038I Pass  38: suminf.    0.45150 (2) obj. -78.4719 iterations 2
Cbc0038I Pass  39: suminf.    2.42046 (6) obj. -78.4719 iterations 7
Cbc0038I Pass  40: suminf.    1.03191 (4) obj. -78.4719 iterations 6
Cbc0038I Pass  41: suminf.    3.97271 (12) obj. -78.4719 iterations 12
Cbc0038I Pass  42: suminf.    1.37010 (5) obj. -78.4719 iterations 16
Cbc0038I Pass  43: suminf.    0.97627 (4) obj. -78.4719 iterations 1
Cbc0038I Pass  44: suminf.    0.79052 (3) obj. -78.4719 iterations 5
Cbc0038I Pass  45: suminf.    0.44483 (2) obj. -78.4719 iterations 2
Cbc0038I Pass  46: suminf.    1.68549 (5) obj. -78.4719 iterations 6
Cbc0038I Pass  47: suminf.    0.44483 (2) obj. -78.4719 iterations 7
Cbc0038I Pass  48: suminf.    1.46257 (7) obj. -78.4719 iterations 8
Cbc0038I Pass  49: suminf.    0.18225 (2) obj. -78.4719 iterations 9
Cbc0038I Pass  50: suminf.    0.37393 (3) obj. -78.4719 iterations 1
Cbc0038I Pass  51: suminf.    0.97097 (7) obj. -78.4719 iterations 9
Cbc0038I Pass  52: suminf.    2.44211 (8) obj. -78.4719 iterations 11
Cbc0038I Pass  53: suminf.    1.97566 (7) obj. -78.4719 iterations 5
Cbc0038I Pass  54: suminf.    1.20082 (3) obj. -78.4719 iterations 4
Cbc0038I Pass  55: suminf.    0.52421 (3) obj. -78.4719 iterations 4
Cbc0038I Pass  56: suminf.    0.79052 (3) obj. -78.4719 iterations 2
Cbc0038I Pass  57: suminf.    0.44483 (2) obj. -78.4719 iterations 2
Cbc0038I Pass  58: suminf.    2.78248 (7) obj. -78.4719 iterations 6
Cbc0038I Pass  59: suminf.    1.15981 (4) obj. -78.4719 iterations 5
Cbc0038I Pass  60: suminf.    3.06098 (9) obj. -78.4719 iterations 8
Cbc0038I Pass  61: suminf.    1.86761 (6) obj. -78.4719 iterations 11
Cbc0038I Pass  62: suminf.    1.07738 (4) obj. -78.4719 iterations 3
Cbc0038I Pass  63: suminf.    1.33076 (5) obj. -78.4719 iterations 7
Cbc0038I Pass  64: suminf.    0.90053 (3) obj. -78.4719 iterations 6
Cbc0038I Pass  65: suminf.    0.44483 (2) obj. -78.4719 iterations 4
Cbc0038I Pass  66: suminf.    0.79052 (3) obj. -78.4719 iterations 1
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 50 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -82.6747
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 5
Cbc0038I Pass  66: suminf.    0.36223 (2) obj. -82.6747 iterations 0
Cbc0038I Pass  67: suminf.    0.37193 (2) obj. -82.6747 iterations 2
Cbc0038I Pass  68: suminf.    2.04576 (9) obj. -82.6747 iterations 9
Cbc0038I Pass  69: suminf.    0.74704 (3) obj. -82.6747 iterations 8
Cbc0038I Pass  70: suminf.    1.21924 (4) obj. -82.6747 iterations 3
Cbc0038I Pass  71: suminf.    1.17106 (4) obj. -82.6747 iterations 2
Cbc0038I Pass  72: suminf.    0.74004 (3) obj. -82.6747 iterations 4
Cbc0038I Pass  73: suminf.    0.36223 (2) obj. -82.6747 iterations 2
Cbc0038I Pass  74: suminf.    0.37193 (2) obj. -82.6747 iterations 2
Cbc0038I Pass  75: suminf.    1.59732 (5) obj. -82.6747 iterations 4
Cbc0038I Pass  76: suminf.    2.16220 (8) obj. -82.6747 iterations 4
Cbc0038I Pass  77: suminf.    1.80395 (7) obj. -82.6747 iterations 11
Cbc0038I Pass  78: suminf.    0.58675 (2) obj. -82.6747 iterations 4
Cbc0038I Pass  79: suminf.    0.57104 (2) obj. -83.64 iterations 1
Cbc0038I Pass  80: suminf.    0.58762 (2) obj. -82.6747 iterations 2
Cbc0038I Pass  81: suminf.    1.83337 (6) obj. -82.6747 iterations 4
Cbc0038I Pass  82: suminf.    1.04536 (3) obj. -84.1143 iterations 4
Cbc0038I Pass  83: suminf.    2.32964 (7) obj. -82.6747 iterations 4
Cbc0038I Pass  84: suminf.    3.80002 (11) obj. -82.6747 iterations 7
Cbc0038I Pass  85: suminf.    1.05136 (3) obj. -82.6747 iterations 8
Cbc0038I Pass  86: suminf.    0.58675 (2) obj. -82.6747 iterations 1
Cbc0038I Pass  87: suminf.    0.57104 (2) obj. -83.64 iterations 1
Cbc0038I Pass  88: suminf.    0.58762 (2) obj. -82.6747 iterations 2
Cbc0038I Pass  89: suminf.    3.59648 (9) obj. -82.6747 iterations 9
Cbc0038I Pass  90: suminf.    3.59648 (9) obj. -82.6747 iterations 1
Cbc0038I Pass  91: suminf.    0.87770 (3) obj. -82.6747 iterations 9
Cbc0038I Pass  92: suminf.    1.85410 (6) obj. -82.6747 iterations 11
Cbc0038I Pass  93: suminf.    1.57307 (5) obj. -82.6747 iterations 3
Cbc0038I Pass  94: suminf.    2.06335 (6) obj. -82.6747 iterations 3
Cbc0038I Pass  95: suminf.    1.69066 (5) obj. -82.6747 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 50 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -72.4678 - took 0.03 seconds
Cbc0012I Integer solution of -72.4678 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 43 rows 50 columns, reduced to 12 rows 13 columns
Cbc0031I 20 added rows had average density of 9.5
Cbc0013I At root node, 20 cuts changed objective from -92.48121 to -77.015108 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 161 row cuts average 3.0 elements, 11 column cuts (11 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 25 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 23 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0001I Search completed - best objective -72.46780000000001, took 391 iterations and 6 nodes (0.49 seconds)
Cbc0032I Strong branching done 106 times (949 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.49

