Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 275 (-28) elements
Clp1000I sum of infeasibilities 3.66952e-05 - average 4.07725e-07, 2 fixed columns
Coin0506I Presolve 86 (-4) rows, 49 (-2) columns and 263 (-12) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Coin0511I After Postsolve, objective 33.980836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Coin0511I After Postsolve, objective 33.980836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.98083607 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 275 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 9.70563
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.94997 iterations 38
Cbc0038I Solution found of 9.94997
Cbc0038I Relaxing continuous gives 9.94997
Cbc0038I Rounding solution of 7.79028 is better than previous of 9.94997

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 7.79028 to -1.89273 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.10163
Cbc0038I Pass   2: suminf.    2.06919 (8) obj. -5.10163 iterations 9
Cbc0038I Pass   3: suminf.    1.96003 (7) obj. -5.10163 iterations 1
Cbc0038I Pass   4: suminf.    2.18037 (7) obj. -5.10163 iterations 6
Cbc0038I Pass   5: suminf.    2.11201 (6) obj. -5.10163 iterations 1
Cbc0038I Pass   6: suminf.    2.44646 (7) obj. -5.10163 iterations 5
Cbc0038I Pass   7: suminf.    2.18037 (7) obj. -5.10163 iterations 2
Cbc0038I Pass   8: suminf.    2.38873 (10) obj. -5.10163 iterations 16
Cbc0038I Pass   9: suminf.    2.31840 (8) obj. -5.10163 iterations 3
Cbc0038I Pass  10: suminf.    1.85680 (6) obj. -5.10163 iterations 16
Cbc0038I Pass  11: suminf.    1.83028 (6) obj. -5.10163 iterations 2
Cbc0038I Pass  12: suminf.    2.27920 (6) obj. -5.10163 iterations 2
Cbc0038I Pass  13: suminf.    2.06919 (8) obj. -5.10163 iterations 4
Cbc0038I Pass  14: suminf.    1.96003 (7) obj. -5.10163 iterations 1
Cbc0038I Pass  15: suminf.    2.18037 (7) obj. -5.10163 iterations 6
Cbc0038I Pass  16: suminf.    2.11201 (6) obj. -5.10163 iterations 1
Cbc0038I Pass  17: suminf.    2.44646 (7) obj. -5.10163 iterations 5
Cbc0038I Pass  18: suminf.    2.18037 (7) obj. -5.10163 iterations 2
Cbc0038I Pass  19: suminf.    3.89903 (9) obj. -5.10163 iterations 17
Cbc0038I Pass  20: suminf.    2.06298 (10) obj. -5.10163 iterations 13
Cbc0038I Pass  21: suminf.    2.37383 (8) obj. -5.10163 iterations 12
Cbc0038I Pass  22: suminf.    2.36056 (8) obj. -5.10163 iterations 1
Cbc0038I Pass  23: suminf.    2.46641 (6) obj. -5.10163 iterations 9
Cbc0038I Pass  24: suminf.    1.65248 (6) obj. -5.10163 iterations 6
Cbc0038I Pass  25: suminf.    1.62169 (5) obj. -5.10163 iterations 1
Cbc0038I Pass  26: suminf.    1.52741 (6) obj. -5.10163 iterations 5
Cbc0038I Pass  27: suminf.    1.49691 (5) obj. -5.10163 iterations 1
Cbc0038I Pass  28: suminf.    1.65248 (6) obj. -5.10163 iterations 5
Cbc0038I Pass  29: suminf.    2.72609 (10) obj. -5.10163 iterations 18
Cbc0038I Pass  30: suminf.    1.37787 (6) obj. -5.10163 iterations 7
Cbc0038I Pass  31: suminf.    1.37787 (6) obj. -5.10163 iterations 0
Cbc0038I Rounding solution of -1.91942 is better than previous of -1.89273

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -10.8775
Cbc0038I Pass  31: suminf.    2.95107 (11) obj. -10.8775 iterations 4
Cbc0038I Pass  32: suminf.    2.95107 (11) obj. -10.8775 iterations 0
Cbc0038I Pass  33: suminf.    2.15227 (8) obj. -10.8775 iterations 9
Cbc0038I Pass  34: suminf.    2.12669 (8) obj. -10.8775 iterations 2
Cbc0038I Pass  35: suminf.    3.03493 (10) obj. -10.8775 iterations 8
Cbc0038I Pass  36: suminf.    2.28684 (7) obj. -10.8775 iterations 2
Cbc0038I Pass  37: suminf.    1.98823 (7) obj. -10.8775 iterations 4
Cbc0038I Pass  38: suminf.    2.59849 (7) obj. -10.8775 iterations 6
Cbc0038I Pass  39: suminf.    2.16628 (8) obj. -10.8775 iterations 3
Cbc0038I Pass  40: suminf.    4.41595 (15) obj. -10.8775 iterations 20
Cbc0038I Pass  41: suminf.    2.83580 (11) obj. -10.8775 iterations 11
Cbc0038I Pass  42: suminf.    2.47529 (12) obj. -10.8775 iterations 2
Cbc0038I Pass  43: suminf.    2.08071 (10) obj. -10.8775 iterations 4
Cbc0038I Pass  44: suminf.    2.08071 (10) obj. -10.8775 iterations 0
Cbc0038I Pass  45: suminf.    1.43387 (5) obj. -10.8775 iterations 16
Cbc0038I Pass  46: suminf.    1.42083 (6) obj. -10.8775 iterations 2
Cbc0038I Pass  47: suminf.    1.55534 (5) obj. -10.8775 iterations 6
Cbc0038I Pass  48: suminf.    1.55534 (5) obj. -10.8775 iterations 0
Cbc0038I Pass  49: suminf.    1.49005 (6) obj. -10.8775 iterations 5
Cbc0038I Pass  50: suminf.    4.02722 (12) obj. -10.8775 iterations 18
Cbc0038I Pass  51: suminf.    1.57457 (6) obj. -10.8775 iterations 10
Cbc0038I Pass  52: suminf.    1.57330 (6) obj. -10.8775 iterations 1
Cbc0038I Pass  53: suminf.    1.93347 (7) obj. -10.8775 iterations 16
Cbc0038I Pass  54: suminf.    1.69969 (5) obj. -10.8775 iterations 2
Cbc0038I Pass  55: suminf.    1.47656 (4) obj. -10.8775 iterations 5
Cbc0038I Pass  56: suminf.    1.85455 (6) obj. -10.8775 iterations 6
Cbc0038I Pass  57: suminf.    2.63466 (10) obj. -10.8775 iterations 14
Cbc0038I Pass  58: suminf.    2.36912 (10) obj. -10.8775 iterations 6
Cbc0038I Pass  59: suminf.    2.95107 (11) obj. -10.8775 iterations 18
Cbc0038I Pass  60: suminf.    2.95107 (11) obj. -10.8775 iterations 0
Cbc0038I Rounding solution of -2.09254 is better than previous of -1.91942

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -17.8085
Cbc0038I Pass  60: suminf.    4.22655 (14) obj. -17.8085 iterations 3
Cbc0038I Pass  61: suminf.    4.22655 (14) obj. -17.8085 iterations 0
Cbc0038I Pass  62: suminf.    3.82473 (10) obj. -17.8085 iterations 11
Cbc0038I Pass  63: suminf.    3.29848 (9) obj. -17.8085 iterations 4
Cbc0038I Pass  64: suminf.    2.89549 (9) obj. -17.8085 iterations 4
Cbc0038I Pass  65: suminf.    2.89549 (9) obj. -17.8085 iterations 0
Cbc0038I Pass  66: suminf.    3.39019 (9) obj. -17.8085 iterations 10
Cbc0038I Pass  67: suminf.    3.19649 (8) obj. -17.8085 iterations 2
Cbc0038I Pass  68: suminf.    2.57205 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  69: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  70: suminf.    3.39019 (9) obj. -17.8085 iterations 5
Cbc0038I Pass  71: suminf.    4.77975 (16) obj. -17.8085 iterations 15
Cbc0038I Pass  72: suminf.    4.72419 (15) obj. -17.8085 iterations 9
Cbc0038I Pass  73: suminf.    4.64176 (11) obj. -17.8085 iterations 20
Cbc0038I Pass  74: suminf.    3.83486 (10) obj. -17.8085 iterations 7
Cbc0038I Pass  75: suminf.    3.07980 (9) obj. -17.8085 iterations 1
Cbc0038I Pass  76: suminf.    3.00415 (9) obj. -17.8085 iterations 9
Cbc0038I Pass  77: suminf.    2.57205 (8) obj. -17.8085 iterations 6
Cbc0038I Pass  78: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  79: suminf.    3.39019 (9) obj. -17.8085 iterations 5
Cbc0038I Pass  80: suminf.    3.19649 (8) obj. -17.8085 iterations 2
Cbc0038I Pass  81: suminf.    2.57205 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  82: suminf.    3.59829 (10) obj. -17.8085 iterations 10
Cbc0038I Pass  83: suminf.    2.60513 (10) obj. -17.8085 iterations 10
Cbc0038I Pass  84: suminf.    2.60513 (10) obj. -17.8085 iterations 0
Cbc0038I Pass  85: suminf.    3.49407 (10) obj. -17.8085 iterations 9
Cbc0038I Pass  86: suminf.    3.19649 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  87: suminf.    2.57205 (8) obj. -17.8085 iterations 4
Cbc0038I Pass  88: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  89: suminf.    3.39019 (9) obj. -17.8085 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -2.09254 - took 0.13 seconds
Cbc0012I Integer solution of -2.09254 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 68 rows 40 columns
Cbc0031I 25 added rows had average density of 27.04
Cbc0013I At root node, 25 cuts changed objective from -33.980836 to -22.716718 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10254 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1914 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 3 nodes, 4 on tree, -2.09254 best solution, best possible -22.716718 (0.69 seconds)
Cbc0001I Search completed - best objective -2.092540000000007, took 8014 iterations and 38 nodes (0.76 seconds)
Cbc0032I Strong branching done 504 times (8099 iterations), fathomed 3 nodes and fixed 30 variables
Cbc0035I Maximum depth 9, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       0.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-30) rows, 84 (-18) columns and 1059 (-519) elements
Clp1000I sum of infeasibilities 4.86133e-08 - average 6.56937e-10, 14 fixed columns
Coin0506I Presolve 61 (-13) rows, 70 (-14) columns and 764 (-295) elements
Clp0006I 0  Obj 41.421994 Dual inf 1.8875885 (70)
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 3.8573141 - largest nonzero change 2.2950478e-05 ( 0.0013540233%) - largest zero change 2.8882327e-05
Clp0000I Optimal - objective value 47.056742
Clp0000I Optimal - objective value 47.056742
Coin0511I After Postsolve, objective 47.056742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.056742
Clp0000I Optimal - objective value 47.056742
Clp0000I Optimal - objective value 47.056742
Clp0000I Optimal - objective value 47.056742
Coin0511I After Postsolve, objective 47.056742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.05674171 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 84 columns (84 integer (84 of which binary)) and 1061 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 5.84708
Cbc0038I Pass   1: suminf.    2.67132 (21) obj. -22.5314 iterations 9
Cbc0038I Pass   2: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass   3: suminf.    0.49225 (5) obj. 3.2954 iterations 16
Cbc0038I Solution found of 9.58978
Cbc0038I Rounding solution of 4.28475 is better than previous of 9.58978

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 0.649835
Cbc0038I Pass   4: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass   5: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass   6: suminf.    0.63592 (6) obj. 0.649835 iterations 18
Cbc0038I Pass   7: suminf.    0.27631 (2) obj. -0.399275 iterations 5
Cbc0038I Pass   8: suminf.    0.22110 (2) obj. 0.649835 iterations 1
Cbc0038I Pass   9: suminf.    0.39288 (2) obj. 0.649835 iterations 2
Cbc0038I Pass  10: suminf.    1.95133 (8) obj. 0.649835 iterations 13
Cbc0038I Pass  11: suminf.    0.66410 (3) obj. 0.649835 iterations 7
Cbc0038I Pass  12: suminf.    0.37939 (3) obj. -1.91261 iterations 2
Cbc0038I Pass  13: suminf.    0.18164 (2) obj. 0.649835 iterations 7
Cbc0038I Pass  14: suminf.    0.18164 (2) obj. 0.649835 iterations 0
Cbc0038I Pass  15: suminf.    0.54235 (2) obj. 0.649835 iterations 4
Cbc0038I Pass  16: suminf.    0.25217 (2) obj. -1.96177 iterations 2
Cbc0038I Pass  17: suminf.    1.10707 (7) obj. -0.0442347 iterations 19
Cbc0038I Pass  18: suminf.    0.78482 (8) obj. 0.649835 iterations 7
Cbc0038I Pass  19: suminf.    0.51497 (2) obj. 0.649835 iterations 9
Cbc0038I Pass  20: suminf.    0.51497 (2) obj. 0.649835 iterations 0
Cbc0038I Pass  21: suminf.    0.43124 (2) obj. 0.649835 iterations 6
Cbc0038I Pass  22: suminf.    0.25217 (2) obj. -0.961775 iterations 2
Cbc0038I Pass  23: suminf.    0.51497 (2) obj. 0.649835 iterations 6
Cbc0038I Pass  24: suminf.    1.67625 (12) obj. 0.649835 iterations 29
Cbc0038I Pass  25: suminf.    1.48556 (12) obj. 0.649835 iterations 9
Cbc0038I Pass  26: suminf.    1.36171 (6) obj. 0.649835 iterations 14
Cbc0038I Pass  27: suminf.    0.80766 (4) obj. 0.649835 iterations 4
Cbc0038I Pass  28: suminf.    0.47208 (4) obj. 0.649835 iterations 6
Cbc0038I Pass  29: suminf.    0.73770 (3) obj. 0.649835 iterations 2
Cbc0038I Pass  30: suminf.    0.29039 (3) obj. 0.649835 iterations 2
Cbc0038I Pass  31: suminf.    0.79911 (10) obj. 0.649835 iterations 5
Cbc0038I Pass  32: suminf.    0.74203 (10) obj. 0.649835 iterations 2
Cbc0038I Pass  33: suminf.    0.92822 (7) obj. 0.649835 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 84 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 9.58978 to 4.24224 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.89283
Cbc0038I Pass  33: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass  34: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass  35: suminf.    0.68344 (7) obj. -5.89283 iterations 19
Cbc0038I Pass  36: suminf.    0.68344 (7) obj. -5.89283 iterations 0
Cbc0038I Pass  37: suminf.    0.99075 (5) obj. -5.89283 iterations 10
Cbc0038I Pass  38: suminf.    0.99075 (5) obj. -5.89283 iterations 0
Cbc0038I Pass  39: suminf.    1.04826 (4) obj. -5.89283 iterations 2
Cbc0038I Pass  40: suminf.    1.04826 (4) obj. -5.89283 iterations 0
Cbc0038I Pass  41: suminf.    1.24471 (14) obj. -5.89283 iterations 5
Cbc0038I Pass  42: suminf.    1.24471 (14) obj. -5.89283 iterations 0
Cbc0038I Pass  43: suminf.    1.53059 (9) obj. -5.89283 iterations 13
Cbc0038I Pass  44: suminf.    1.53059 (9) obj. -5.89283 iterations 0
Cbc0038I Pass  45: suminf.    1.52478 (9) obj. -5.89283 iterations 6
Cbc0038I Pass  46: suminf.    1.52478 (9) obj. -5.89283 iterations 2
Cbc0038I Pass  47: suminf.    1.99924 (9) obj. -5.89283 iterations 7
Cbc0038I Pass  48: suminf.    1.99924 (9) obj. -5.89283 iterations 2
Cbc0038I Pass  49: suminf.    2.00399 (9) obj. -5.89283 iterations 6
Cbc0038I Pass  50: suminf.    2.00399 (9) obj. -5.89283 iterations 2
Cbc0038I Pass  51: suminf.    1.99924 (9) obj. -5.89283 iterations 6
Cbc0038I Pass  52: suminf.    3.57614 (16) obj. -5.89283 iterations 14
Cbc0038I Pass  53: suminf.    2.33809 (16) obj. -5.89283 iterations 5
Cbc0038I Pass  54: suminf.    1.56632 (10) obj. -5.89775 iterations 6
Cbc0038I Pass  55: suminf.    1.10135 (7) obj. -5.89283 iterations 8
Cbc0038I Pass  56: suminf.    0.94052 (9) obj. -5.89283 iterations 3
Cbc0038I Pass  57: suminf.    1.57371 (7) obj. -5.89283 iterations 8
Cbc0038I Pass  58: suminf.    1.30773 (7) obj. -5.89283 iterations 5
Cbc0038I Pass  59: suminf.    1.37285 (6) obj. -5.89283 iterations 7
Cbc0038I Pass  60: suminf.    1.13750 (7) obj. -5.89283 iterations 7
Cbc0038I Pass  61: suminf.    1.19177 (7) obj. -5.89283 iterations 5
Cbc0038I Pass  62: suminf.    1.19177 (7) obj. -5.89283 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 4.24224 - took 0.03 seconds
Cbc0012I Integer solution of 4.24224 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 74 rows 84 columns, reduced to 5 rows 9 columns
Cbc0031I 45 added rows had average density of 27.622222
Cbc0013I At root node, 45 cuts changed objective from -32.063501 to -7.1549212 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8995 row cuts average 2.0 elements, 0 column cuts (36 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 79.2 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 51 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 841 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 273 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 113 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.685 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 4.24224 best solution, best possible -7.1549212 (2.03 seconds)
Cbc0012I Integer solution of 2.92091 found by rounding after 4144 iterations and 2 nodes (2.19 seconds)
Cbc0016I Integer solution of 2.52087 found by strong branching after 4611 iterations and 11 nodes (2.73 seconds)
Cbc0010I After 11 nodes, 10 on tree, 2.52087 best solution, best possible -7.1549212 (2.73 seconds)
Cbc0012I Integer solution of 1.21126 found by DiveCoefficient after 4702 iterations and 16 nodes (2.83 seconds)
Cbc0004I Integer solution of 0.90746 found after 4724 iterations and 16 nodes (2.84 seconds)
Cbc0012I Integer solution of -1.91942 found by rounding after 4999 iterations and 22 nodes (2.93 seconds)
Cbc0016I Integer solution of -2.09254 found by strong branching after 5019 iterations and 24 nodes (2.95 seconds)
Cbc0001I Search completed - best objective -2.092540000000007, took 5186 iterations and 26 nodes (2.96 seconds)
Cbc0032I Strong branching done 416 times (7639 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 10, 52 variables fixed on reduced cost
Total time (CPU seconds):       2.02   (Wallclock seconds):       2.97

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 275 (-28) elements
Clp1000I sum of infeasibilities 3.66952e-05 - average 4.07725e-07, 2 fixed columns
Coin0506I Presolve 86 (-4) rows, 49 (-2) columns and 263 (-12) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Coin0511I After Postsolve, objective 33.980836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Coin0511I After Postsolve, objective 33.980836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.98083607 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 275 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 9.70563
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.94997 iterations 38
Cbc0038I Solution found of 9.94997
Cbc0038I Relaxing continuous gives 9.94997
Cbc0038I Rounding solution of 7.79028 is better than previous of 9.94997

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 7.79028 to -1.89273 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.10163
Cbc0038I Pass   2: suminf.    2.06919 (8) obj. -5.10163 iterations 9
Cbc0038I Pass   3: suminf.    1.96003 (7) obj. -5.10163 iterations 1
Cbc0038I Pass   4: suminf.    2.18037 (7) obj. -5.10163 iterations 6
Cbc0038I Pass   5: suminf.    2.11201 (6) obj. -5.10163 iterations 1
Cbc0038I Pass   6: suminf.    2.44646 (7) obj. -5.10163 iterations 5
Cbc0038I Pass   7: suminf.    2.18037 (7) obj. -5.10163 iterations 2
Cbc0038I Pass   8: suminf.    2.38873 (10) obj. -5.10163 iterations 16
Cbc0038I Pass   9: suminf.    2.31840 (8) obj. -5.10163 iterations 3
Cbc0038I Pass  10: suminf.    1.85680 (6) obj. -5.10163 iterations 16
Cbc0038I Pass  11: suminf.    1.83028 (6) obj. -5.10163 iterations 2
Cbc0038I Pass  12: suminf.    2.27920 (6) obj. -5.10163 iterations 2
Cbc0038I Pass  13: suminf.    2.06919 (8) obj. -5.10163 iterations 4
Cbc0038I Pass  14: suminf.    1.96003 (7) obj. -5.10163 iterations 1
Cbc0038I Pass  15: suminf.    2.18037 (7) obj. -5.10163 iterations 6
Cbc0038I Pass  16: suminf.    2.11201 (6) obj. -5.10163 iterations 1
Cbc0038I Pass  17: suminf.    2.44646 (7) obj. -5.10163 iterations 5
Cbc0038I Pass  18: suminf.    2.18037 (7) obj. -5.10163 iterations 2
Cbc0038I Pass  19: suminf.    3.89903 (9) obj. -5.10163 iterations 17
Cbc0038I Pass  20: suminf.    2.06298 (10) obj. -5.10163 iterations 13
Cbc0038I Pass  21: suminf.    2.37383 (8) obj. -5.10163 iterations 12
Cbc0038I Pass  22: suminf.    2.36056 (8) obj. -5.10163 iterations 1
Cbc0038I Pass  23: suminf.    2.46641 (6) obj. -5.10163 iterations 9
Cbc0038I Pass  24: suminf.    1.65248 (6) obj. -5.10163 iterations 6
Cbc0038I Pass  25: suminf.    1.62169 (5) obj. -5.10163 iterations 1
Cbc0038I Pass  26: suminf.    1.52741 (6) obj. -5.10163 iterations 5
Cbc0038I Pass  27: suminf.    1.49691 (5) obj. -5.10163 iterations 1
Cbc0038I Pass  28: suminf.    1.65248 (6) obj. -5.10163 iterations 5
Cbc0038I Pass  29: suminf.    2.72609 (10) obj. -5.10163 iterations 18
Cbc0038I Pass  30: suminf.    1.37787 (6) obj. -5.10163 iterations 7
Cbc0038I Pass  31: suminf.    1.37787 (6) obj. -5.10163 iterations 0
Cbc0038I Rounding solution of -1.91942 is better than previous of -1.89273

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -10.8775
Cbc0038I Pass  31: suminf.    2.95107 (11) obj. -10.8775 iterations 4
Cbc0038I Pass  32: suminf.    2.95107 (11) obj. -10.8775 iterations 0
Cbc0038I Pass  33: suminf.    2.15227 (8) obj. -10.8775 iterations 9
Cbc0038I Pass  34: suminf.    2.12669 (8) obj. -10.8775 iterations 2
Cbc0038I Pass  35: suminf.    3.03493 (10) obj. -10.8775 iterations 8
Cbc0038I Pass  36: suminf.    2.28684 (7) obj. -10.8775 iterations 2
Cbc0038I Pass  37: suminf.    1.98823 (7) obj. -10.8775 iterations 4
Cbc0038I Pass  38: suminf.    2.59849 (7) obj. -10.8775 iterations 6
Cbc0038I Pass  39: suminf.    2.16628 (8) obj. -10.8775 iterations 3
Cbc0038I Pass  40: suminf.    4.41595 (15) obj. -10.8775 iterations 20
Cbc0038I Pass  41: suminf.    2.83580 (11) obj. -10.8775 iterations 11
Cbc0038I Pass  42: suminf.    2.47529 (12) obj. -10.8775 iterations 2
Cbc0038I Pass  43: suminf.    2.08071 (10) obj. -10.8775 iterations 4
Cbc0038I Pass  44: suminf.    2.08071 (10) obj. -10.8775 iterations 0
Cbc0038I Pass  45: suminf.    1.43387 (5) obj. -10.8775 iterations 16
Cbc0038I Pass  46: suminf.    1.42083 (6) obj. -10.8775 iterations 2
Cbc0038I Pass  47: suminf.    1.55534 (5) obj. -10.8775 iterations 6
Cbc0038I Pass  48: suminf.    1.55534 (5) obj. -10.8775 iterations 0
Cbc0038I Pass  49: suminf.    1.49005 (6) obj. -10.8775 iterations 5
Cbc0038I Pass  50: suminf.    4.02722 (12) obj. -10.8775 iterations 18
Cbc0038I Pass  51: suminf.    1.57457 (6) obj. -10.8775 iterations 10
Cbc0038I Pass  52: suminf.    1.57330 (6) obj. -10.8775 iterations 1
Cbc0038I Pass  53: suminf.    1.93347 (7) obj. -10.8775 iterations 16
Cbc0038I Pass  54: suminf.    1.69969 (5) obj. -10.8775 iterations 2
Cbc0038I Pass  55: suminf.    1.47656 (4) obj. -10.8775 iterations 5
Cbc0038I Pass  56: suminf.    1.85455 (6) obj. -10.8775 iterations 6
Cbc0038I Pass  57: suminf.    2.63466 (10) obj. -10.8775 iterations 14
Cbc0038I Pass  58: suminf.    2.36912 (10) obj. -10.8775 iterations 6
Cbc0038I Pass  59: suminf.    2.95107 (11) obj. -10.8775 iterations 18
Cbc0038I Pass  60: suminf.    2.95107 (11) obj. -10.8775 iterations 0
Cbc0038I Rounding solution of -2.09254 is better than previous of -1.91942

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -17.8085
Cbc0038I Pass  60: suminf.    4.22655 (14) obj. -17.8085 iterations 3
Cbc0038I Pass  61: suminf.    4.22655 (14) obj. -17.8085 iterations 0
Cbc0038I Pass  62: suminf.    3.82473 (10) obj. -17.8085 iterations 11
Cbc0038I Pass  63: suminf.    3.29848 (9) obj. -17.8085 iterations 4
Cbc0038I Pass  64: suminf.    2.89549 (9) obj. -17.8085 iterations 4
Cbc0038I Pass  65: suminf.    2.89549 (9) obj. -17.8085 iterations 0
Cbc0038I Pass  66: suminf.    3.39019 (9) obj. -17.8085 iterations 10
Cbc0038I Pass  67: suminf.    3.19649 (8) obj. -17.8085 iterations 2
Cbc0038I Pass  68: suminf.    2.57205 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  69: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  70: suminf.    3.39019 (9) obj. -17.8085 iterations 5
Cbc0038I Pass  71: suminf.    4.77975 (16) obj. -17.8085 iterations 15
Cbc0038I Pass  72: suminf.    4.72419 (15) obj. -17.8085 iterations 9
Cbc0038I Pass  73: suminf.    4.64176 (11) obj. -17.8085 iterations 20
Cbc0038I Pass  74: suminf.    3.83486 (10) obj. -17.8085 iterations 7
Cbc0038I Pass  75: suminf.    3.07980 (9) obj. -17.8085 iterations 1
Cbc0038I Pass  76: suminf.    3.00415 (9) obj. -17.8085 iterations 9
Cbc0038I Pass  77: suminf.    2.57205 (8) obj. -17.8085 iterations 6
Cbc0038I Pass  78: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  79: suminf.    3.39019 (9) obj. -17.8085 iterations 5
Cbc0038I Pass  80: suminf.    3.19649 (8) obj. -17.8085 iterations 2
Cbc0038I Pass  81: suminf.    2.57205 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  82: suminf.    3.59829 (10) obj. -17.8085 iterations 10
Cbc0038I Pass  83: suminf.    2.60513 (10) obj. -17.8085 iterations 10
Cbc0038I Pass  84: suminf.    2.60513 (10) obj. -17.8085 iterations 0
Cbc0038I Pass  85: suminf.    3.49407 (10) obj. -17.8085 iterations 9
Cbc0038I Pass  86: suminf.    3.19649 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  87: suminf.    2.57205 (8) obj. -17.8085 iterations 4
Cbc0038I Pass  88: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  89: suminf.    3.39019 (9) obj. -17.8085 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -2.09254 - took 0.14 seconds
Cbc0012I Integer solution of -2.09254 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 68 rows 40 columns
Cbc0031I 25 added rows had average density of 27.04
Cbc0013I At root node, 25 cuts changed objective from -33.980836 to -22.716718 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10254 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1914 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.09254 best solution, best possible -22.716718 (0.70 seconds)
Cbc0001I Search completed - best objective -2.092540000000007, took 8014 iterations and 38 nodes (0.81 seconds)
Cbc0032I Strong branching done 504 times (8099 iterations), fathomed 3 nodes and fixed 30 variables
Cbc0035I Maximum depth 9, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.81

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-31) rows, 84 (-19) columns and 1059 (-520) elements
Clp1000I sum of infeasibilities 4.86133e-08 - average 6.56937e-10, 14 fixed columns
Coin0506I Presolve 61 (-13) rows, 70 (-14) columns and 764 (-295) elements
Clp0006I 0  Obj 41.421994 Dual inf 1.8875885 (70)
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 3.8573141 - largest nonzero change 2.2950478e-05 ( 0.0013540233%) - largest zero change 2.8882327e-05
Clp0000I Optimal - objective value 47.056742
Clp0000I Optimal - objective value 47.056742
Coin0511I After Postsolve, objective 47.056742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.056742
Clp0000I Optimal - objective value 47.056742
Clp0000I Optimal - objective value 47.056742
Clp0000I Optimal - objective value 47.056742
Coin0511I After Postsolve, objective 47.056742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.05674171 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 84 columns (84 integer (84 of which binary)) and 1061 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 5.84708
Cbc0038I Pass   1: suminf.    2.67132 (21) obj. -22.5314 iterations 9
Cbc0038I Pass   2: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass   3: suminf.    0.49225 (5) obj. 3.2954 iterations 16
Cbc0038I Solution found of 9.58978
Cbc0038I Rounding solution of 4.28475 is better than previous of 9.58978

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 0.649835
Cbc0038I Pass   4: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass   5: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass   6: suminf.    0.63592 (6) obj. 0.649835 iterations 18
Cbc0038I Pass   7: suminf.    0.27631 (2) obj. -0.399275 iterations 5
Cbc0038I Pass   8: suminf.    0.22110 (2) obj. 0.649835 iterations 1
Cbc0038I Pass   9: suminf.    0.39288 (2) obj. 0.649835 iterations 2
Cbc0038I Pass  10: suminf.    1.95133 (8) obj. 0.649835 iterations 13
Cbc0038I Pass  11: suminf.    0.66410 (3) obj. 0.649835 iterations 7
Cbc0038I Pass  12: suminf.    0.37939 (3) obj. -1.91261 iterations 2
Cbc0038I Pass  13: suminf.    0.18164 (2) obj. 0.649835 iterations 7
Cbc0038I Pass  14: suminf.    0.18164 (2) obj. 0.649835 iterations 0
Cbc0038I Pass  15: suminf.    0.54235 (2) obj. 0.649835 iterations 4
Cbc0038I Pass  16: suminf.    0.25217 (2) obj. -1.96177 iterations 2
Cbc0038I Pass  17: suminf.    1.10707 (7) obj. -0.0442347 iterations 19
Cbc0038I Pass  18: suminf.    0.78482 (8) obj. 0.649835 iterations 7
Cbc0038I Pass  19: suminf.    0.51497 (2) obj. 0.649835 iterations 9
Cbc0038I Pass  20: suminf.    0.51497 (2) obj. 0.649835 iterations 0
Cbc0038I Pass  21: suminf.    0.43124 (2) obj. 0.649835 iterations 6
Cbc0038I Pass  22: suminf.    0.25217 (2) obj. -0.961775 iterations 2
Cbc0038I Pass  23: suminf.    0.51497 (2) obj. 0.649835 iterations 6
Cbc0038I Pass  24: suminf.    1.67625 (12) obj. 0.649835 iterations 29
Cbc0038I Pass  25: suminf.    1.48556 (12) obj. 0.649835 iterations 9
Cbc0038I Pass  26: suminf.    1.36171 (6) obj. 0.649835 iterations 14
Cbc0038I Pass  27: suminf.    0.80766 (4) obj. 0.649835 iterations 4
Cbc0038I Pass  28: suminf.    0.47208 (4) obj. 0.649835 iterations 6
Cbc0038I Pass  29: suminf.    0.73770 (3) obj. 0.649835 iterations 2
Cbc0038I Pass  30: suminf.    0.29039 (3) obj. 0.649835 iterations 2
Cbc0038I Pass  31: suminf.    0.79911 (10) obj. 0.649835 iterations 5
Cbc0038I Pass  32: suminf.    0.74203 (10) obj. 0.649835 iterations 2
Cbc0038I Pass  33: suminf.    0.92822 (7) obj. 0.649835 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 84 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 9.58978 to 4.24224 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.89283
Cbc0038I Pass  33: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass  34: suminf.    2.67132 (21) obj. -22.5314 iterations 0
Cbc0038I Pass  35: suminf.    0.68344 (7) obj. -5.89283 iterations 19
Cbc0038I Pass  36: suminf.    0.68344 (7) obj. -5.89283 iterations 0
Cbc0038I Pass  37: suminf.    0.99075 (5) obj. -5.89283 iterations 10
Cbc0038I Pass  38: suminf.    0.99075 (5) obj. -5.89283 iterations 0
Cbc0038I Pass  39: suminf.    1.04826 (4) obj. -5.89283 iterations 2
Cbc0038I Pass  40: suminf.    1.04826 (4) obj. -5.89283 iterations 0
Cbc0038I Pass  41: suminf.    1.24471 (14) obj. -5.89283 iterations 5
Cbc0038I Pass  42: suminf.    1.24471 (14) obj. -5.89283 iterations 0
Cbc0038I Pass  43: suminf.    1.53059 (9) obj. -5.89283 iterations 13
Cbc0038I Pass  44: suminf.    1.53059 (9) obj. -5.89283 iterations 0
Cbc0038I Pass  45: suminf.    1.52478 (9) obj. -5.89283 iterations 6
Cbc0038I Pass  46: suminf.    1.52478 (9) obj. -5.89283 iterations 2
Cbc0038I Pass  47: suminf.    1.99924 (9) obj. -5.89283 iterations 7
Cbc0038I Pass  48: suminf.    1.99924 (9) obj. -5.89283 iterations 2
Cbc0038I Pass  49: suminf.    2.00399 (9) obj. -5.89283 iterations 6
Cbc0038I Pass  50: suminf.    2.00399 (9) obj. -5.89283 iterations 2
Cbc0038I Pass  51: suminf.    1.99924 (9) obj. -5.89283 iterations 6
Cbc0038I Pass  52: suminf.    3.57614 (16) obj. -5.89283 iterations 14
Cbc0038I Pass  53: suminf.    2.33809 (16) obj. -5.89283 iterations 5
Cbc0038I Pass  54: suminf.    1.56632 (10) obj. -5.89775 iterations 6
Cbc0038I Pass  55: suminf.    1.10135 (7) obj. -5.89283 iterations 8
Cbc0038I Pass  56: suminf.    0.94052 (9) obj. -5.89283 iterations 3
Cbc0038I Pass  57: suminf.    1.57371 (7) obj. -5.89283 iterations 8
Cbc0038I Pass  58: suminf.    1.30773 (7) obj. -5.89283 iterations 5
Cbc0038I Pass  59: suminf.    1.37285 (6) obj. -5.89283 iterations 7
Cbc0038I Pass  60: suminf.    1.13750 (7) obj. -5.89283 iterations 7
Cbc0038I Pass  61: suminf.    1.19177 (7) obj. -5.89283 iterations 5
Cbc0038I Pass  62: suminf.    1.19177 (7) obj. -5.89283 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 4.24224 - took 0.04 seconds
Cbc0012I Integer solution of 4.24224 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 74 rows 84 columns, reduced to 5 rows 9 columns
Cbc0031I 45 added rows had average density of 27.622222
Cbc0013I At root node, 45 cuts changed objective from -32.063501 to -7.1549212 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8995 row cuts average 2.0 elements, 0 column cuts (36 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 79.2 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 51 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 841 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 273 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 113 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.714 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 4.24224 best solution, best possible -7.1549212 (2.17 seconds)
Cbc0012I Integer solution of 2.92091 found by rounding after 4144 iterations and 2 nodes (2.33 seconds)
Cbc0010I After 10 nodes, 10 on tree, 2.92091 best solution, best possible -7.1549212 (2.90 seconds)
Cbc0016I Integer solution of 2.52087 found by strong branching after 4611 iterations and 11 nodes (2.96 seconds)
Cbc0012I Integer solution of 1.21126 found by DiveCoefficient after 4702 iterations and 16 nodes (3.09 seconds)
Cbc0004I Integer solution of 0.90746 found after 4724 iterations and 16 nodes (3.10 seconds)
Cbc0012I Integer solution of -1.91942 found by rounding after 4999 iterations and 22 nodes (3.20 seconds)
Cbc0016I Integer solution of -2.09254 found by strong branching after 5019 iterations and 24 nodes (3.23 seconds)
Cbc0001I Search completed - best objective -2.092540000000007, took 5186 iterations and 26 nodes (3.23 seconds)
Cbc0032I Strong branching done 416 times (7639 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 10, 52 variables fixed on reduced cost
Total time (CPU seconds):       2.17   (Wallclock seconds):       3.25

