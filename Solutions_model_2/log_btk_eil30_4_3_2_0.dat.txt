Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 30 (-2) columns and 156 (-21) elements
Clp1000I sum of infeasibilities 3.08719e-06 - average 5.93691e-08, 5 fixed columns
Coin0506I Presolve 43 (-9) rows, 25 (-5) columns and 129 (-27) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 71.236622
Clp0000I Optimal - objective value 71.236622
Coin0511I After Postsolve, objective 71.236622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.236622
Clp0000I Optimal - objective value 71.236622
Clp0000I Optimal - objective value 71.236622
Coin0511I After Postsolve, objective 71.236622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.23662185 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 30 columns (29 integer (29 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.169%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.31778
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.47688 iterations 24
Cbc0038I Solution found of -8.47688
Cbc0038I Relaxing continuous gives -8.47688
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 30 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -8.47688 to -20.664 (0.02 seconds)
Cbc0038I Round again with cutoff of -25.6814
Cbc0038I Pass   2: suminf.    0.45134 (2) obj. -25.6814 iterations 2
Cbc0038I Pass   3: suminf.    0.67595 (3) obj. -25.6814 iterations 3
Cbc0038I Pass   4: suminf.    0.48894 (2) obj. -25.6814 iterations 2
Cbc0038I Pass   5: suminf.    0.21215 (1) obj. -25.6814 iterations 2
Cbc0038I Pass   6: suminf.    0.20369 (1) obj. -25.6814 iterations 1
Cbc0038I Pass   7: suminf.    2.91276 (7) obj. -25.6814 iterations 6
Cbc0038I Pass   8: suminf.    0.99112 (7) obj. -25.6814 iterations 8
Cbc0038I Pass   9: suminf.    0.72289 (3) obj. -25.6814 iterations 7
Cbc0038I Pass  10: suminf.    0.72289 (3) obj. -25.6814 iterations 0
Cbc0038I Pass  11: suminf.    0.69873 (4) obj. -25.6814 iterations 4
Cbc0038I Pass  12: suminf.    0.55513 (4) obj. -25.6814 iterations 2
Cbc0038I Pass  13: suminf.    0.78100 (3) obj. -25.6814 iterations 3
Cbc0038I Pass  14: suminf.    0.78100 (3) obj. -25.6814 iterations 0
Cbc0038I Pass  15: suminf.    0.64848 (3) obj. -25.6814 iterations 3
Cbc0038I Pass  16: suminf.    0.45134 (2) obj. -25.6814 iterations 2
Cbc0038I Pass  17: suminf.    0.67595 (3) obj. -25.6814 iterations 3
Cbc0038I Pass  18: suminf.    0.48894 (2) obj. -25.6814 iterations 2
Cbc0038I Pass  19: suminf.    0.21215 (1) obj. -25.6814 iterations 2
Cbc0038I Pass  20: suminf.    0.20369 (1) obj. -25.6814 iterations 1
Cbc0038I Pass  21: suminf.    1.45839 (6) obj. -25.6814 iterations 5
Cbc0038I Pass  22: suminf.    1.15354 (6) obj. -25.6814 iterations 3
Cbc0038I Pass  23: suminf.    1.31848 (5) obj. -25.6814 iterations 5
Cbc0038I Pass  24: suminf.    1.11890 (3) obj. -25.6814 iterations 2
Cbc0038I Pass  25: suminf.    0.48894 (2) obj. -25.6814 iterations 5
Cbc0038I Pass  26: suminf.    0.21215 (1) obj. -25.6814 iterations 2
Cbc0038I Pass  27: suminf.    0.20369 (1) obj. -25.6814 iterations 1
Cbc0038I Pass  28: suminf.    3.83648 (10) obj. -25.6814 iterations 17
Cbc0038I Pass  29: suminf.    2.19111 (6) obj. -25.6814 iterations 5
Cbc0038I Pass  30: suminf.    1.81035 (5) obj. -25.6814 iterations 2
Cbc0038I Pass  31: suminf.    1.78287 (6) obj. -25.6814 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 30 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -20.664 - took 0.04 seconds
Cbc0012I Integer solution of -20.66397 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 30 columns, reduced to 34 rows 21 columns
Cbc0031I 14 added rows had average density of 23.642857
Cbc0013I At root node, 14 cuts changed objective from -70.837394 to -36.519857 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1964 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1024 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 187 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.66396999999999, took 2549 iterations and 4 nodes (0.23 seconds)
Cbc0032I Strong branching done 52 times (683 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 56 (-4) columns and 523 (-89) elements
Clp1000I sum of infeasibilities 1.89612e-08 - average 3.79224e-10, 45 fixed columns
Coin0506I Presolve 8 (-42) rows, 11 (-45) columns and 34 (-489) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.5345149 - largest nonzero change 0 ( 0%) - largest zero change 2.7958285e-05
Clp0000I Optimal - objective value 6.9174717
Clp0000I Optimal - objective value 6.9174717
Coin0511I After Postsolve, objective 6.9174717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.301445 - largest nonzero change 1.8986656e-05 ( 0.0018986656%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 101.22939
Clp0000I Optimal - objective value 101.22939
Clp0000I Optimal - objective value 101.22939
Coin0511I After Postsolve, objective 101.22939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.2293926 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 56 columns (56 integer (56 of which binary)) and 526 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.633%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.96483
Cbc0038I Pass   1: suminf.    3.60714 (15) obj. -77.3514 iterations 7
Cbc0038I Pass   2: suminf.    3.60714 (15) obj. -77.3514 iterations 0
Cbc0038I Solution found of -15.1286
Cbc0038I Rounding solution of -20.664 is better than previous of -15.1286

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28.2734
Cbc0038I Pass   3: suminf.    3.60714 (15) obj. -77.3514 iterations 0
Cbc0038I Pass   4: suminf.    3.60714 (15) obj. -77.3514 iterations 0
Cbc0038I Pass   5: suminf.    0.51598 (2) obj. -28.2734 iterations 14
Cbc0038I Pass   6: suminf.    0.51598 (2) obj. -28.2734 iterations 0
Cbc0038I Pass   7: suminf.    0.37026 (2) obj. -28.2734 iterations 1
Cbc0038I Pass   8: suminf.    2.70056 (11) obj. -28.2734 iterations 15
Cbc0038I Pass   9: suminf.    1.70138 (8) obj. -28.2734 iterations 4
Cbc0038I Pass  10: suminf.    1.75164 (9) obj. -28.2734 iterations 6
Cbc0038I Pass  11: suminf.    1.75164 (9) obj. -28.2734 iterations 0
Cbc0038I Pass  12: suminf.    1.14329 (5) obj. -28.2734 iterations 8
Cbc0038I Pass  13: suminf.    1.14329 (5) obj. -28.2734 iterations 0
Cbc0038I Pass  14: suminf.    1.34551 (5) obj. -28.2734 iterations 2
Cbc0038I Pass  15: suminf.    1.34551 (5) obj. -28.2734 iterations 0
Cbc0038I Pass  16: suminf.    1.14329 (5) obj. -28.2734 iterations 1
Cbc0038I Pass  17: suminf.    3.30712 (8) obj. -28.2734 iterations 10
Cbc0038I Pass  18: suminf.    2.14250 (6) obj. -28.2734 iterations 2
Cbc0038I Pass  19: suminf.    1.96179 (6) obj. -30.0379 iterations 2
Cbc0038I Pass  20: suminf.    1.66765 (5) obj. -28.2734 iterations 4
Cbc0038I Pass  21: suminf.    1.62845 (5) obj. -28.7045 iterations 2
Cbc0038I Pass  22: suminf.    4.42730 (12) obj. -28.2734 iterations 10
Cbc0038I Pass  23: suminf.    4.12383 (12) obj. -28.2734 iterations 3
Cbc0038I Pass  24: suminf.    2.50371 (7) obj. -28.2734 iterations 8
Cbc0038I Pass  25: suminf.    2.50371 (7) obj. -28.2734 iterations 0
Cbc0038I Pass  26: suminf.    1.71047 (6) obj. -28.2734 iterations 3
Cbc0038I Pass  27: suminf.    1.71047 (6) obj. -28.2734 iterations 0
Cbc0038I Pass  28: suminf.    1.66438 (5) obj. -28.2734 iterations 3
Cbc0038I Pass  29: suminf.    1.62845 (5) obj. -28.7045 iterations 1
Cbc0038I Pass  30: suminf.    1.66765 (5) obj. -28.2734 iterations 3
Cbc0038I Pass  31: suminf.    2.27400 (14) obj. -28.2734 iterations 29
Cbc0038I Pass  32: suminf.    1.84943 (12) obj. -28.2734 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 56 columns, reduced to 28 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -20.664 - took 0.01 seconds
Cbc0012I Integer solution of -20.66397 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 29 added rows had average density of 4
Cbc0013I At root node, 109 cuts changed objective from -96.757332 to -20.66397 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 312 row cuts average 4.4 elements, 13 column cuts (13 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 29.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 45 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20.66396999999999, took 126 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 30 (-2) columns and 156 (-21) elements
Clp1000I sum of infeasibilities 3.08719e-06 - average 5.93691e-08, 5 fixed columns
Coin0506I Presolve 43 (-9) rows, 25 (-5) columns and 129 (-27) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 71.236622
Clp0000I Optimal - objective value 71.236622
Coin0511I After Postsolve, objective 71.236622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.236622
Clp0000I Optimal - objective value 71.236622
Clp0000I Optimal - objective value 71.236622
Coin0511I After Postsolve, objective 71.236622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.23662185 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 30 columns (29 integer (29 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.169%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.31778
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.47688 iterations 24
Cbc0038I Solution found of -8.47688
Cbc0038I Relaxing continuous gives -8.47688
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 30 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -8.47688 to -20.664 (0.03 seconds)
Cbc0038I Round again with cutoff of -25.6814
Cbc0038I Pass   2: suminf.    0.45134 (2) obj. -25.6814 iterations 2
Cbc0038I Pass   3: suminf.    0.67595 (3) obj. -25.6814 iterations 3
Cbc0038I Pass   4: suminf.    0.48894 (2) obj. -25.6814 iterations 2
Cbc0038I Pass   5: suminf.    0.21215 (1) obj. -25.6814 iterations 2
Cbc0038I Pass   6: suminf.    0.20369 (1) obj. -25.6814 iterations 1
Cbc0038I Pass   7: suminf.    2.91276 (7) obj. -25.6814 iterations 6
Cbc0038I Pass   8: suminf.    0.99112 (7) obj. -25.6814 iterations 8
Cbc0038I Pass   9: suminf.    0.72289 (3) obj. -25.6814 iterations 7
Cbc0038I Pass  10: suminf.    0.72289 (3) obj. -25.6814 iterations 0
Cbc0038I Pass  11: suminf.    0.69873 (4) obj. -25.6814 iterations 4
Cbc0038I Pass  12: suminf.    0.55513 (4) obj. -25.6814 iterations 2
Cbc0038I Pass  13: suminf.    0.78100 (3) obj. -25.6814 iterations 3
Cbc0038I Pass  14: suminf.    0.78100 (3) obj. -25.6814 iterations 0
Cbc0038I Pass  15: suminf.    0.64848 (3) obj. -25.6814 iterations 3
Cbc0038I Pass  16: suminf.    0.45134 (2) obj. -25.6814 iterations 2
Cbc0038I Pass  17: suminf.    0.67595 (3) obj. -25.6814 iterations 3
Cbc0038I Pass  18: suminf.    0.48894 (2) obj. -25.6814 iterations 2
Cbc0038I Pass  19: suminf.    0.21215 (1) obj. -25.6814 iterations 2
Cbc0038I Pass  20: suminf.    0.20369 (1) obj. -25.6814 iterations 1
Cbc0038I Pass  21: suminf.    1.45839 (6) obj. -25.6814 iterations 5
Cbc0038I Pass  22: suminf.    1.15354 (6) obj. -25.6814 iterations 3
Cbc0038I Pass  23: suminf.    1.31848 (5) obj. -25.6814 iterations 5
Cbc0038I Pass  24: suminf.    1.11890 (3) obj. -25.6814 iterations 2
Cbc0038I Pass  25: suminf.    0.48894 (2) obj. -25.6814 iterations 5
Cbc0038I Pass  26: suminf.    0.21215 (1) obj. -25.6814 iterations 2
Cbc0038I Pass  27: suminf.    0.20369 (1) obj. -25.6814 iterations 1
Cbc0038I Pass  28: suminf.    3.83648 (10) obj. -25.6814 iterations 17
Cbc0038I Pass  29: suminf.    2.19111 (6) obj. -25.6814 iterations 5
Cbc0038I Pass  30: suminf.    1.81035 (5) obj. -25.6814 iterations 2
Cbc0038I Pass  31: suminf.    1.78287 (6) obj. -25.6814 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 30 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -20.664 - took 0.05 seconds
Cbc0012I Integer solution of -20.66397 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 51 rows 30 columns, reduced to 34 rows 21 columns
Cbc0031I 14 added rows had average density of 23.642857
Cbc0013I At root node, 14 cuts changed objective from -70.837394 to -36.519857 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1964 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1024 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 187 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.66396999999999, took 2549 iterations and 4 nodes (0.29 seconds)
Cbc0032I Strong branching done 52 times (683 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 56 (-5) columns and 523 (-90) elements
Clp1000I sum of infeasibilities 1.89612e-08 - average 3.79224e-10, 45 fixed columns
Coin0506I Presolve 8 (-42) rows, 11 (-45) columns and 34 (-489) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.5345149 - largest nonzero change 0 ( 0%) - largest zero change 2.7958285e-05
Clp0000I Optimal - objective value 6.9174717
Clp0000I Optimal - objective value 6.9174717
Coin0511I After Postsolve, objective 6.9174717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.301445 - largest nonzero change 1.8986656e-05 ( 0.0018986656%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 101.22939
Clp0000I Optimal - objective value 101.22939
Clp0000I Optimal - objective value 101.22939
Coin0511I After Postsolve, objective 101.22939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.2293926 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 56 columns (56 integer (56 of which binary)) and 526 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.633%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.96483
Cbc0038I Pass   1: suminf.    3.60714 (15) obj. -77.3514 iterations 7
Cbc0038I Pass   2: suminf.    3.60714 (15) obj. -77.3514 iterations 0
Cbc0038I Solution found of -15.1286
Cbc0038I Rounding solution of -20.664 is better than previous of -15.1286

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28.2734
Cbc0038I Pass   3: suminf.    3.60714 (15) obj. -77.3514 iterations 0
Cbc0038I Pass   4: suminf.    3.60714 (15) obj. -77.3514 iterations 0
Cbc0038I Pass   5: suminf.    0.51598 (2) obj. -28.2734 iterations 14
Cbc0038I Pass   6: suminf.    0.51598 (2) obj. -28.2734 iterations 0
Cbc0038I Pass   7: suminf.    0.37026 (2) obj. -28.2734 iterations 1
Cbc0038I Pass   8: suminf.    2.70056 (11) obj. -28.2734 iterations 15
Cbc0038I Pass   9: suminf.    1.70138 (8) obj. -28.2734 iterations 4
Cbc0038I Pass  10: suminf.    1.75164 (9) obj. -28.2734 iterations 6
Cbc0038I Pass  11: suminf.    1.75164 (9) obj. -28.2734 iterations 0
Cbc0038I Pass  12: suminf.    1.14329 (5) obj. -28.2734 iterations 8
Cbc0038I Pass  13: suminf.    1.14329 (5) obj. -28.2734 iterations 0
Cbc0038I Pass  14: suminf.    1.34551 (5) obj. -28.2734 iterations 2
Cbc0038I Pass  15: suminf.    1.34551 (5) obj. -28.2734 iterations 0
Cbc0038I Pass  16: suminf.    1.14329 (5) obj. -28.2734 iterations 1
Cbc0038I Pass  17: suminf.    3.30712 (8) obj. -28.2734 iterations 10
Cbc0038I Pass  18: suminf.    2.14250 (6) obj. -28.2734 iterations 2
Cbc0038I Pass  19: suminf.    1.96179 (6) obj. -30.0379 iterations 2
Cbc0038I Pass  20: suminf.    1.66765 (5) obj. -28.2734 iterations 4
Cbc0038I Pass  21: suminf.    1.62845 (5) obj. -28.7045 iterations 2
Cbc0038I Pass  22: suminf.    4.42730 (12) obj. -28.2734 iterations 10
Cbc0038I Pass  23: suminf.    4.12383 (12) obj. -28.2734 iterations 3
Cbc0038I Pass  24: suminf.    2.50371 (7) obj. -28.2734 iterations 8
Cbc0038I Pass  25: suminf.    2.50371 (7) obj. -28.2734 iterations 0
Cbc0038I Pass  26: suminf.    1.71047 (6) obj. -28.2734 iterations 3
Cbc0038I Pass  27: suminf.    1.71047 (6) obj. -28.2734 iterations 0
Cbc0038I Pass  28: suminf.    1.66438 (5) obj. -28.2734 iterations 3
Cbc0038I Pass  29: suminf.    1.62845 (5) obj. -28.7045 iterations 1
Cbc0038I Pass  30: suminf.    1.66765 (5) obj. -28.2734 iterations 3
Cbc0038I Pass  31: suminf.    2.27400 (14) obj. -28.2734 iterations 29
Cbc0038I Pass  32: suminf.    1.84943 (12) obj. -28.2734 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 56 columns, reduced to 28 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20.664 - took 0.02 seconds
Cbc0012I Integer solution of -20.66397 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 29 added rows had average density of 4
Cbc0013I At root node, 109 cuts changed objective from -96.757332 to -20.66397 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 312 row cuts average 4.4 elements, 13 column cuts (13 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 29.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 45 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20.66396999999999, took 126 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

