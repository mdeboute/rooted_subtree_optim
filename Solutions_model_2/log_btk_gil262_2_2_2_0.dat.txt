Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 509 (-18) rows, 262 (-2) columns and 1510 (-35) elements
Clp1000I sum of infeasibilities 0.000108379 - average 2.12925e-07, 127 fixed columns
Coin0506I Presolve 235 (-274) rows, 128 (-134) columns and 707 (-803) elements
Clp0029I End of values pass after 128 iterations
Clp0014I Perturbing problem by 0.001% of 0.16985791 - largest nonzero change 0 ( 0%) - largest zero change 2.8506464e-05
Clp0000I Optimal - objective value 144.83214
Clp0000I Optimal - objective value 144.83214
Coin0511I After Postsolve, objective 144.83214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13574183 - largest nonzero change 0 ( 0%) - largest zero change 2.9790359e-05
Clp0000I Optimal - objective value 144.83214
Clp0000I Optimal - objective value 144.83214
Clp0000I Optimal - objective value 144.83214
Coin0511I After Postsolve, objective 144.83214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.832141 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 509 rows, 262 columns (261 integer (261 of which binary)) and 1510 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 68 integers unsatisfied sum - 12.7038
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.1058 iterations 159
Cbc0038I Solution found of -15.1058
Cbc0038I Relaxing continuous gives -15.1058
Cbc0038I Rounding solution of -57.3165 is better than previous of -15.1058

Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 509 rows 262 columns, reduced to 125 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -57.3165 to -58.3582 (0.07 seconds)
Cbc0038I Round again with cutoff of -67.0057
Cbc0038I Pass   2: suminf.    1.81493 (5) obj. -67.0057 iterations 20
Cbc0038I Pass   3: suminf.    1.59476 (4) obj. -67.0057 iterations 1
Cbc0038I Pass   4: suminf.    1.59476 (4) obj. -67.0057 iterations 0
Cbc0038I Pass   5: suminf.    0.99941 (3) obj. -67.0057 iterations 14
Cbc0038I Pass   6: suminf.    0.99941 (3) obj. -67.0057 iterations 0
Cbc0038I Pass   7: suminf.    0.71881 (2) obj. -67.0057 iterations 6
Cbc0038I Pass   8: suminf.    0.70331 (2) obj. -67.0057 iterations 3
Cbc0038I Pass   9: suminf.    0.86054 (2) obj. -67.0057 iterations 6
Cbc0038I Pass  10: suminf.    4.09337 (20) obj. -67.0057 iterations 54
Cbc0038I Pass  11: suminf.    2.74160 (18) obj. -67.0057 iterations 39
Cbc0038I Pass  12: suminf.    0.85477 (3) obj. -67.0057 iterations 26
Cbc0038I Pass  13: suminf.    0.55190 (4) obj. -67.0057 iterations 4
Cbc0038I Pass  14: suminf.    1.18857 (4) obj. -67.0057 iterations 19
Cbc0038I Pass  15: suminf.    0.59751 (9) obj. -67.0057 iterations 4
Cbc0038I Pass  16: suminf.    1.29780 (4) obj. -67.0057 iterations 14
Cbc0038I Pass  17: suminf.    1.29780 (4) obj. -67.0057 iterations 0
Cbc0038I Pass  18: suminf.    0.64687 (3) obj. -67.0057 iterations 14
Cbc0038I Pass  19: suminf.    0.64687 (3) obj. -67.0057 iterations 0
Cbc0038I Pass  20: suminf.    0.80138 (8) obj. -67.0057 iterations 15
Cbc0038I Pass  21: suminf.    0.75758 (3) obj. -67.0057 iterations 4
Cbc0038I Pass  22: suminf.    1.12406 (3) obj. -67.0057 iterations 1
Cbc0038I Pass  23: suminf.    4.75760 (15) obj. -67.0057 iterations 41
Cbc0038I Pass  24: suminf.    2.63914 (14) obj. -67.0057 iterations 25
Cbc0038I Pass  25: suminf.    1.66777 (5) obj. -67.0057 iterations 18
Cbc0038I Pass  26: suminf.    1.58631 (5) obj. -67.0057 iterations 3
Cbc0038I Pass  27: suminf.    2.42731 (5) obj. -67.0057 iterations 8
Cbc0038I Pass  28: suminf.    1.42846 (4) obj. -67.0057 iterations 6
Cbc0038I Pass  29: suminf.    1.37441 (4) obj. -67.0057 iterations 2
Cbc0038I Pass  30: suminf.    1.52784 (6) obj. -67.0057 iterations 9
Cbc0038I Pass  31: suminf.    0.93324 (3) obj. -67.0057 iterations 11
Cbc0038I Rounding solution of -77.446 is better than previous of -58.3582

Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 509 rows 262 columns, reduced to 165 rows 88 columns
Cbc0038I Mini branch and bound improved solution from -77.446 to -80.8159 (0.14 seconds)
Cbc0038I Round again with cutoff of -93.6192
Cbc0038I Pass  31: suminf.    2.74522 (11) obj. -93.6192 iterations 3
Cbc0038I Pass  32: suminf.    2.28037 (9) obj. -93.6192 iterations 8
Cbc0038I Pass  33: suminf.    2.90826 (8) obj. -93.6192 iterations 12
Cbc0038I Pass  34: suminf.    2.76338 (8) obj. -93.6192 iterations 6
Cbc0038I Pass  35: suminf.    2.76338 (8) obj. -93.6192 iterations 1
Cbc0038I Pass  36: suminf.    2.51138 (8) obj. -93.6192 iterations 12
Cbc0038I Pass  37: suminf.    2.50789 (8) obj. -93.6192 iterations 1
Cbc0038I Pass  38: suminf.    2.96197 (8) obj. -93.6192 iterations 9
Cbc0038I Pass  39: suminf.    2.57348 (7) obj. -93.6192 iterations 4
Cbc0038I Pass  40: suminf.    2.52991 (7) obj. -93.6192 iterations 3
Cbc0038I Pass  41: suminf.    2.64366 (8) obj. -93.6192 iterations 9
Cbc0038I Pass  42: suminf.    2.29565 (9) obj. -93.6192 iterations 9
Cbc0038I Pass  43: suminf.    2.29565 (9) obj. -93.6192 iterations 0
Cbc0038I Pass  44: suminf.    2.84336 (8) obj. -93.6192 iterations 12
Cbc0038I Pass  45: suminf.    2.54500 (8) obj. -93.6192 iterations 6
Cbc0038I Pass  46: suminf.    2.52412 (9) obj. -93.6192 iterations 5
Cbc0038I Pass  47: suminf.    3.69261 (9) obj. -93.6192 iterations 13
Cbc0038I Pass  48: suminf.    1.89892 (8) obj. -93.6192 iterations 19
Cbc0038I Pass  49: suminf.    2.93238 (11) obj. -93.6192 iterations 40
Cbc0038I Pass  50: suminf.    2.36047 (11) obj. -93.6192 iterations 3
Cbc0038I Pass  51: suminf.    2.36047 (11) obj. -93.6192 iterations 0
Cbc0038I Pass  52: suminf.    2.95904 (8) obj. -93.6192 iterations 21
Cbc0038I Pass  53: suminf.    2.49610 (7) obj. -93.6192 iterations 5
Cbc0038I Pass  54: suminf.    2.67082 (8) obj. -93.6192 iterations 9
Cbc0038I Pass  55: suminf.    2.42892 (9) obj. -93.6192 iterations 9
Cbc0038I Pass  56: suminf.    2.42892 (9) obj. -93.6192 iterations 0
Cbc0038I Pass  57: suminf.    2.95904 (8) obj. -93.6192 iterations 11
Cbc0038I Pass  58: suminf.    2.49610 (7) obj. -93.6192 iterations 5
Cbc0038I Pass  59: suminf.    2.67082 (8) obj. -93.6192 iterations 9
Cbc0038I Pass  60: suminf.    2.42892 (9) obj. -93.6192 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 509 rows 262 columns, reduced to 130 rows 73 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -80.8159 - took 0.18 seconds
Cbc0012I Integer solution of -80.81585 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 126 rows 70 columns
Cbc0031I 38 added rows had average density of 169.97368
Cbc0013I At root node, 38 cuts changed objective from -144.83214 to -131.6205 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34965 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.488 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2915 row cuts average 256.0 elements, 0 column cuts (0 active)  in 0.440 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.539 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 250.6 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -80.81585 best solution, best possible -131.6205 (5.03 seconds)
Cbc0010I After 22 nodes, 10 on tree, -80.81585 best solution, best possible -131.6205 (5.75 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 162 rows 91 columns
Cbc0012I Integer solution of -84.09705 found by rounding after 22811 iterations and 61 nodes (6.23 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 5 rows 10 columns
Cbc0010I After 122 nodes, 25 on tree, -84.09705 best solution, best possible -131.6205 (6.45 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 6 rows 12 columns
Cbc0012I Integer solution of -84.35322 found by rounding after 31446 iterations and 384 nodes (7.10 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 3 rows 5 columns
Cbc0010I After 405 nodes, 15 on tree, -84.35322 best solution, best possible -131.6205 (7.15 seconds)
Cbc0004I Integer solution of -84.44314 found after 32462 iterations and 429 nodes (7.21 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 4 rows 6 columns
Cbc0010I After 571 nodes, 30 on tree, -84.44314 best solution, best possible -131.6205 (7.85 seconds)
Cbc0001I Search completed - best objective -84.44314, took 40750 iterations and 692 nodes (8.10 seconds)
Cbc0032I Strong branching done 3934 times (79212 iterations), fathomed 175 nodes and fixed 385 variables
Cbc0035I Maximum depth 89, 3603 variables fixed on reduced cost
Total time (CPU seconds):       7.93   (Wallclock seconds):       8.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 371 (-155) rows, 384 (-140) columns and 17267 (-18469) elements
Clp1000I sum of infeasibilities 1.29742e-06 - average 3.49709e-09, 203 fixed columns
Coin0506I Presolve 168 (-203) rows, 181 (-203) columns and 676 (-16591) elements
Clp0006I 0  Obj -23.346093 Dual inf 23.136486 (180)
Clp0029I End of values pass after 181 iterations
Clp0014I Perturbing problem by 0.001% of 1.5415415 - largest nonzero change 1.4009736e-05 ( 0.00078666749%) - largest zero change 2.9988588e-05
Clp0000I Optimal - objective value -19.717189
Clp0000I Optimal - objective value -19.717189
Coin0511I After Postsolve, objective -19.717189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -19.717189 Dual inf 515.57196 (128)
Clp0014I Perturbing problem by 0.001% of 1.6737638 - largest nonzero change 1.6574359e-05 ( 0.0010643777%) - largest zero change 2.9979706e-05
Clp0000I Optimal - objective value 179.16155
Clp0000I Optimal - objective value 179.16155
Clp0000I Optimal - objective value 179.16155
Coin0511I After Postsolve, objective 179.16155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 179.1615496 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0004I processed model has 371 rows, 384 columns (384 integer (384 of which binary)) and 17267 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.684%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 102 integers unsatisfied sum - 3.20489
Cbc0038I Pass   1: suminf.    2.93360 (99) obj. -178.722 iterations 48
Cbc0038I Pass   2: suminf.    1.06699 (54) obj. -84.5904 iterations 26
Cbc0038I Pass   3: suminf.    0.67602 (39) obj. -66.0851 iterations 15
Cbc0038I Pass   4: suminf.    0.12357 (14) obj. -31.8594 iterations 25
Cbc0038I Pass   5: suminf.    0.02251 (3) obj. -19.9692 iterations 11
Cbc0038I Solution found of -15.9994
Cbc0038I Rounding solution of -43.1017 is better than previous of -15.9994

Cbc0038I Before mini branch and bound, 281 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 384 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -56.7078
Cbc0038I Pass   6: suminf.    2.93360 (99) obj. -178.722 iterations 0
Cbc0038I Pass   7: suminf.    1.04274 (53) obj. -83.6146 iterations 33
Cbc0038I Pass   8: suminf.    0.49835 (32) obj. -56.7078 iterations 25
Cbc0038I Pass   9: suminf.    0.33550 (36) obj. -56.7078 iterations 26
Cbc0038I Pass  10: suminf.    0.81665 (17) obj. -56.7078 iterations 35
Cbc0038I Pass  11: suminf.    0.69017 (17) obj. -56.7078 iterations 1
Cbc0038I Pass  12: suminf.    0.39708 (5) obj. -56.7078 iterations 77
Cbc0038I Pass  13: suminf.    0.38516 (6) obj. -56.7078 iterations 9
Cbc0038I Pass  14: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  15: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I Pass  16: suminf.    0.25998 (4) obj. -60.3431 iterations 0
Cbc0038I Pass  17: suminf.    0.44832 (4) obj. -56.7078 iterations 18
Cbc0038I Pass  18: suminf.    0.38516 (6) obj. -56.7078 iterations 7
Cbc0038I Pass  19: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  20: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I Pass  21: suminf.    0.25998 (4) obj. -60.3431 iterations 0
Cbc0038I Pass  22: suminf.    0.44832 (4) obj. -56.7078 iterations 17
Cbc0038I Pass  23: suminf.    0.38516 (6) obj. -56.7078 iterations 7
Cbc0038I Pass  24: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  25: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I Pass  26: suminf.    0.25998 (4) obj. -60.3431 iterations 0
Cbc0038I Pass  27: suminf.    0.44832 (4) obj. -56.7078 iterations 17
Cbc0038I Pass  28: suminf.    0.38516 (6) obj. -56.7078 iterations 7
Cbc0038I Pass  29: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  30: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I Pass  31: suminf.    0.25998 (4) obj. -60.3431 iterations 0
Cbc0038I Pass  32: suminf.    0.44832 (4) obj. -56.7078 iterations 17
Cbc0038I Pass  33: suminf.    0.38516 (6) obj. -56.7078 iterations 7
Cbc0038I Pass  34: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  35: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 277 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 384 columns, reduced to 105 rows 107 columns - 25 fixed gives 78, 82 - ok now
Cbc0038I Full problem 371 rows 384 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -15.9994 to -45.3566 (0.21 seconds)
Cbc0038I Round again with cutoff of -81.1985
Cbc0038I Pass  35: suminf.    2.93360 (99) obj. -178.722 iterations 0
Cbc0038I Pass  36: suminf.    1.20310 (59) obj. -90.428 iterations 30
Cbc0038I Pass  37: suminf.    1.18904 (42) obj. -81.1985 iterations 21
Cbc0038I Pass  38: suminf.    0.74165 (41) obj. -91.3652 iterations 2
Cbc0038I Pass  39: suminf.    1.25299 (25) obj. -81.1985 iterations 28
Cbc0038I Pass  40: suminf.    0.40084 (24) obj. -81.1985 iterations 3
Cbc0038I Pass  41: suminf.    0.73532 (14) obj. -81.1985 iterations 26
Cbc0038I Pass  42: suminf.    0.62104 (12) obj. -81.1985 iterations 11
Cbc0038I Pass  43: suminf.    0.60097 (12) obj. -81.7302 iterations 2
Cbc0038I Pass  44: suminf.    0.80393 (28) obj. -81.1985 iterations 24
Cbc0038I Pass  45: suminf.    0.66687 (30) obj. -81.1985 iterations 9
Cbc0038I Pass  46: suminf.    1.35165 (20) obj. -81.1985 iterations 52
Cbc0038I Pass  47: suminf.    1.24523 (20) obj. -81.1985 iterations 10
Cbc0038I Pass  48: suminf.    0.85138 (12) obj. -81.1985 iterations 51
Cbc0038I Pass  49: suminf.    0.66319 (14) obj. -81.1985 iterations 7
Cbc0038I Pass  50: suminf.    0.67291 (14) obj. -81.1985 iterations 11
Cbc0038I Pass  51: suminf.    0.67291 (14) obj. -81.1985 iterations 6
Cbc0038I Pass  52: suminf.    0.66319 (14) obj. -81.1985 iterations 16
Cbc0038I Pass  53: suminf.    1.74730 (24) obj. -81.1985 iterations 57
Cbc0038I Pass  54: suminf.    1.45827 (22) obj. -81.1985 iterations 12
Cbc0038I Pass  55: suminf.    1.11441 (18) obj. -81.1985 iterations 29
Cbc0038I Pass  56: suminf.    1.10740 (18) obj. -81.1985 iterations 11
Cbc0038I Pass  57: suminf.    1.17706 (17) obj. -81.1985 iterations 27
Cbc0038I Pass  58: suminf.    0.62148 (17) obj. -81.4286 iterations 18
Cbc0038I Pass  59: suminf.    1.12221 (14) obj. -81.1985 iterations 45
Cbc0038I Pass  60: suminf.    0.60284 (14) obj. -81.3631 iterations 18
Cbc0038I Pass  61: suminf.    1.12221 (14) obj. -81.1985 iterations 26
Cbc0038I Pass  62: suminf.    2.74284 (38) obj. -81.1985 iterations 72
Cbc0038I Pass  63: suminf.    1.54946 (35) obj. -81.1985 iterations 15
Cbc0038I Pass  64: suminf.    1.42574 (35) obj. -81.1985 iterations 2
Cbc0038I Rounding solution of -49.1075 is better than previous of -45.3566

Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 384 columns, reduced to 25 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -49.1075 to -51.9582 (0.35 seconds)
Cbc0038I Round again with cutoff of -110.587
Cbc0038I Pass  64: suminf.    2.93360 (99) obj. -178.722 iterations 0
Cbc0038I Pass  65: suminf.    1.19819 (58) obj. -110.587 iterations 33
Cbc0038I Pass  66: suminf.    1.18868 (57) obj. -110.809 iterations 1
Cbc0038I Pass  67: suminf.    1.56283 (49) obj. -110.587 iterations 18
Cbc0038I Pass  68: suminf.    0.92856 (48) obj. -113.521 iterations 5
Cbc0038I Pass  69: suminf.    1.52380 (61) obj. -110.587 iterations 30
Cbc0038I Pass  70: suminf.    1.52380 (61) obj. -110.587 iterations 0
Cbc0038I Pass  71: suminf.    1.98257 (53) obj. -110.587 iterations 43
Cbc0038I Pass  72: suminf.    1.39572 (52) obj. -110.587 iterations 23
Cbc0038I Pass  73: suminf.    1.85050 (46) obj. -110.587 iterations 19
Cbc0038I Pass  74: suminf.    1.29934 (46) obj. -110.587 iterations 3
Cbc0038I Pass  75: suminf.    1.58347 (38) obj. -110.587 iterations 55
Cbc0038I Pass  76: suminf.    1.22414 (38) obj. -110.587 iterations 7
Cbc0038I Pass  77: suminf.    1.48230 (31) obj. -110.587 iterations 46
Cbc0038I Pass  78: suminf.    0.94104 (31) obj. -110.788 iterations 16
Cbc0038I Pass  79: suminf.    1.38572 (30) obj. -110.587 iterations 24
Cbc0038I Pass  80: suminf.    1.18305 (32) obj. -110.587 iterations 8
Cbc0038I Pass  81: suminf.    1.39461 (30) obj. -110.587 iterations 18
Cbc0038I Pass  82: suminf.    1.19182 (32) obj. -110.587 iterations 7
Cbc0038I Pass  83: suminf.    1.18305 (32) obj. -110.587 iterations 17
Cbc0038I Pass  84: suminf.    3.02063 (44) obj. -110.587 iterations 46
Cbc0038I Pass  85: suminf.    1.56544 (39) obj. -110.587 iterations 27
Cbc0038I Pass  86: suminf.    1.48496 (40) obj. -112.655 iterations 2
Cbc0038I Pass  87: suminf.    1.58053 (34) obj. -110.587 iterations 33
Cbc0038I Pass  88: suminf.    1.24806 (34) obj. -110.936 iterations 16
Cbc0038I Pass  89: suminf.    1.58053 (34) obj. -110.587 iterations 18
Cbc0038I Pass  90: suminf.    1.89711 (41) obj. -110.587 iterations 43
Cbc0038I Pass  91: suminf.    1.70561 (41) obj. -110.587 iterations 17
Cbc0038I Pass  92: suminf.    1.93322 (37) obj. -110.587 iterations 17
Cbc0038I Pass  93: suminf.    1.65423 (37) obj. -110.587 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 384 columns, reduced to 37 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I After 0.43 seconds - Feasibility pump exiting with objective of -51.9582 - took 0.32 seconds
Cbc0012I Integer solution of -51.95822 found by feasibility pump after 0 iterations and 0 nodes (0.43 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 6 rows 7 columns
Cbc0031I 139 added rows had average density of 67.266187
Cbc0013I At root node, 139 cuts changed objective from -179.16155 to -115.95 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 29137 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.459 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3412 row cuts average 360.4 elements, 0 column cuts (0 active)  in 1.110 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 717 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5984 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.618 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2379 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.874 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 248.2 elements, 0 column cuts (0 active)  in 0.239 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 257 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.343 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -51.95822 best solution, best possible -115.95 (8.39 seconds)
Cbc0010I After 2 nodes, 1 on tree, -51.95822 best solution, best possible -115.87304 (9.09 seconds)
Cbc0012I Integer solution of -53.19443 found by rounding after 16185 iterations and 3 nodes (9.12 seconds)
Cbc0012I Integer solution of -70.73681 found by rounding after 16447 iterations and 4 nodes (9.22 seconds)
Cbc0012I Integer solution of -73.95374 found by DiveCoefficient after 16460 iterations and 4 nodes (9.24 seconds)
Cbc0012I Integer solution of -76.83991 found by rounding after 16485 iterations and 5 nodes (9.25 seconds)
Cbc0016I Integer solution of -76.84962 found by strong branching after 17185 iterations and 31 nodes (9.56 seconds)
Cbc0012I Integer solution of -77.85668 found by DiveCoefficient after 17383 iterations and 41 nodes (9.72 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 0 rows 0 columns
Cbc0010I After 45 nodes, 7 on tree, -77.85668 best solution, best possible -115.87304 (9.80 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 20 rows 25 columns
Cbc0010I After 98 nodes, 1 on tree, -77.85668 best solution, best possible -115.86924 (10.77 seconds)
Cbc0010I After 101 nodes, 4 on tree, -77.85668 best solution, best possible -115.86924 (11.91 seconds)
Cbc0012I Integer solution of -78.751 found by rounding after 20553 iterations and 110 nodes (12.53 seconds)
Cbc0004I Integer solution of -79.28575 found after 20795 iterations and 118 nodes (12.61 seconds)
Cbc0010I After 120 nodes, 13 on tree, -79.28575 best solution, best possible -115.86924 (12.62 seconds)
Cbc0010I After 197 nodes, 4 on tree, -79.28575 best solution, best possible -115.86924 (13.71 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 34 rows 48 columns
Cbc0012I Integer solution of -83.32371 found by RINS after 24309 iterations and 200 nodes (14.48 seconds)
Cbc0010I After 200 nodes, 6 on tree, -83.32371 best solution, best possible -115.86924 (14.48 seconds)
Cbc0012I Integer solution of -83.62521 found by rounding after 25079 iterations and 222 nodes (14.86 seconds)
Cbc0016I Integer solution of -84.44314 found by strong branching after 25477 iterations and 243 nodes (14.98 seconds)
Cbc0010I After 267 nodes, 15 on tree, -84.44314 best solution, best possible -115.86924 (15.19 seconds)
Cbc0010I After 387 nodes, 11 on tree, -84.44314 best solution, best possible -115.86924 (15.90 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 10 rows 17 columns
Cbc0010I After 457 nodes, 8 on tree, -84.44314 best solution, best possible -115.86924 (16.61 seconds)
Cbc0010I After 510 nodes, 7 on tree, -84.44314 best solution, best possible -115.86924 (17.31 seconds)
Cbc0010I After 552 nodes, 3 on tree, -84.44314 best solution, best possible -115.86924 (18.12 seconds)
Cbc0010I After 570 nodes, 5 on tree, -84.44314 best solution, best possible -115.86924 (18.83 seconds)
Cbc0010I After 598 nodes, 3 on tree, -84.44314 best solution, best possible -115.86924 (19.83 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 182 rows 189 columns
Cbc0010I After 601 nodes, 4 on tree, -84.44314 best solution, best possible -115.86924 (22.53 seconds)
Cbc0010I After 609 nodes, 6 on tree, -84.44314 best solution, best possible -115.86924 (23.54 seconds)
Cbc0010I After 641 nodes, 9 on tree, -84.44314 best solution, best possible -115.86924 (24.25 seconds)
Cbc0010I After 666 nodes, 8 on tree, -84.44314 best solution, best possible -115.86924 (25.17 seconds)
Cbc0010I After 699 nodes, 10 on tree, -84.44314 best solution, best possible -115.86924 (25.87 seconds)
Cbc0010I After 746 nodes, 12 on tree, -84.44314 best solution, best possible -115.86924 (26.58 seconds)
Cbc0010I After 792 nodes, 10 on tree, -84.44314 best solution, best possible -115.86924 (27.30 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 138 rows 145 columns
Cbc0010I After 834 nodes, 9 on tree, -84.44314 best solution, best possible -115.86924 (28.04 seconds)
Cbc0010I After 875 nodes, 2 on tree, -84.44314 best solution, best possible -115.86924 (28.77 seconds)
Cbc0010I After 945 nodes, 9 on tree, -84.44314 best solution, best possible -115.86924 (29.47 seconds)
Cbc0001I Search completed - best objective -84.44314, took 64105 iterations and 986 nodes (29.69 seconds)
Cbc0032I Strong branching done 3282 times (70063 iterations), fathomed 53 nodes and fixed 120 variables
Cbc0035I Maximum depth 44, 4516 variables fixed on reduced cost
Total time (CPU seconds):       28.89   (Wallclock seconds):       29.80

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 509 (-18) rows, 262 (-2) columns and 1510 (-35) elements
Clp1000I sum of infeasibilities 0.000108379 - average 2.12925e-07, 127 fixed columns
Coin0506I Presolve 235 (-274) rows, 128 (-134) columns and 707 (-803) elements
Clp0029I End of values pass after 128 iterations
Clp0014I Perturbing problem by 0.001% of 0.16985791 - largest nonzero change 0 ( 0%) - largest zero change 2.8506464e-05
Clp0000I Optimal - objective value 144.83214
Clp0000I Optimal - objective value 144.83214
Coin0511I After Postsolve, objective 144.83214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13574183 - largest nonzero change 0 ( 0%) - largest zero change 2.9790359e-05
Clp0000I Optimal - objective value 144.83214
Clp0000I Optimal - objective value 144.83214
Clp0000I Optimal - objective value 144.83214
Coin0511I After Postsolve, objective 144.83214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.832141 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 509 rows, 262 columns (261 integer (261 of which binary)) and 1510 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 68 integers unsatisfied sum - 12.7038
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.1058 iterations 159
Cbc0038I Solution found of -15.1058
Cbc0038I Relaxing continuous gives -15.1058
Cbc0038I Rounding solution of -57.3165 is better than previous of -15.1058

Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 509 rows 262 columns, reduced to 125 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -57.3165 to -58.3582 (0.07 seconds)
Cbc0038I Round again with cutoff of -67.0057
Cbc0038I Pass   2: suminf.    1.81493 (5) obj. -67.0057 iterations 20
Cbc0038I Pass   3: suminf.    1.59476 (4) obj. -67.0057 iterations 1
Cbc0038I Pass   4: suminf.    1.59476 (4) obj. -67.0057 iterations 0
Cbc0038I Pass   5: suminf.    0.99941 (3) obj. -67.0057 iterations 14
Cbc0038I Pass   6: suminf.    0.99941 (3) obj. -67.0057 iterations 0
Cbc0038I Pass   7: suminf.    0.71881 (2) obj. -67.0057 iterations 6
Cbc0038I Pass   8: suminf.    0.70331 (2) obj. -67.0057 iterations 3
Cbc0038I Pass   9: suminf.    0.86054 (2) obj. -67.0057 iterations 6
Cbc0038I Pass  10: suminf.    4.09337 (20) obj. -67.0057 iterations 54
Cbc0038I Pass  11: suminf.    2.74160 (18) obj. -67.0057 iterations 39
Cbc0038I Pass  12: suminf.    0.85477 (3) obj. -67.0057 iterations 26
Cbc0038I Pass  13: suminf.    0.55190 (4) obj. -67.0057 iterations 4
Cbc0038I Pass  14: suminf.    1.18857 (4) obj. -67.0057 iterations 19
Cbc0038I Pass  15: suminf.    0.59751 (9) obj. -67.0057 iterations 4
Cbc0038I Pass  16: suminf.    1.29780 (4) obj. -67.0057 iterations 14
Cbc0038I Pass  17: suminf.    1.29780 (4) obj. -67.0057 iterations 0
Cbc0038I Pass  18: suminf.    0.64687 (3) obj. -67.0057 iterations 14
Cbc0038I Pass  19: suminf.    0.64687 (3) obj. -67.0057 iterations 0
Cbc0038I Pass  20: suminf.    0.80138 (8) obj. -67.0057 iterations 15
Cbc0038I Pass  21: suminf.    0.75758 (3) obj. -67.0057 iterations 4
Cbc0038I Pass  22: suminf.    1.12406 (3) obj. -67.0057 iterations 1
Cbc0038I Pass  23: suminf.    4.75760 (15) obj. -67.0057 iterations 41
Cbc0038I Pass  24: suminf.    2.63914 (14) obj. -67.0057 iterations 25
Cbc0038I Pass  25: suminf.    1.66777 (5) obj. -67.0057 iterations 18
Cbc0038I Pass  26: suminf.    1.58631 (5) obj. -67.0057 iterations 3
Cbc0038I Pass  27: suminf.    2.42731 (5) obj. -67.0057 iterations 8
Cbc0038I Pass  28: suminf.    1.42846 (4) obj. -67.0057 iterations 6
Cbc0038I Pass  29: suminf.    1.37441 (4) obj. -67.0057 iterations 2
Cbc0038I Pass  30: suminf.    1.52784 (6) obj. -67.0057 iterations 9
Cbc0038I Pass  31: suminf.    0.93324 (3) obj. -67.0057 iterations 11
Cbc0038I Rounding solution of -77.446 is better than previous of -58.3582

Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 509 rows 262 columns, reduced to 165 rows 88 columns
Cbc0038I Mini branch and bound improved solution from -77.446 to -80.8159 (0.14 seconds)
Cbc0038I Round again with cutoff of -93.6192
Cbc0038I Pass  31: suminf.    2.74522 (11) obj. -93.6192 iterations 3
Cbc0038I Pass  32: suminf.    2.28037 (9) obj. -93.6192 iterations 8
Cbc0038I Pass  33: suminf.    2.90826 (8) obj. -93.6192 iterations 12
Cbc0038I Pass  34: suminf.    2.76338 (8) obj. -93.6192 iterations 6
Cbc0038I Pass  35: suminf.    2.76338 (8) obj. -93.6192 iterations 1
Cbc0038I Pass  36: suminf.    2.51138 (8) obj. -93.6192 iterations 12
Cbc0038I Pass  37: suminf.    2.50789 (8) obj. -93.6192 iterations 1
Cbc0038I Pass  38: suminf.    2.96197 (8) obj. -93.6192 iterations 9
Cbc0038I Pass  39: suminf.    2.57348 (7) obj. -93.6192 iterations 4
Cbc0038I Pass  40: suminf.    2.52991 (7) obj. -93.6192 iterations 3
Cbc0038I Pass  41: suminf.    2.64366 (8) obj. -93.6192 iterations 9
Cbc0038I Pass  42: suminf.    2.29565 (9) obj. -93.6192 iterations 9
Cbc0038I Pass  43: suminf.    2.29565 (9) obj. -93.6192 iterations 0
Cbc0038I Pass  44: suminf.    2.84336 (8) obj. -93.6192 iterations 12
Cbc0038I Pass  45: suminf.    2.54500 (8) obj. -93.6192 iterations 6
Cbc0038I Pass  46: suminf.    2.52412 (9) obj. -93.6192 iterations 5
Cbc0038I Pass  47: suminf.    3.69261 (9) obj. -93.6192 iterations 13
Cbc0038I Pass  48: suminf.    1.89892 (8) obj. -93.6192 iterations 19
Cbc0038I Pass  49: suminf.    2.93238 (11) obj. -93.6192 iterations 40
Cbc0038I Pass  50: suminf.    2.36047 (11) obj. -93.6192 iterations 3
Cbc0038I Pass  51: suminf.    2.36047 (11) obj. -93.6192 iterations 0
Cbc0038I Pass  52: suminf.    2.95904 (8) obj. -93.6192 iterations 21
Cbc0038I Pass  53: suminf.    2.49610 (7) obj. -93.6192 iterations 5
Cbc0038I Pass  54: suminf.    2.67082 (8) obj. -93.6192 iterations 9
Cbc0038I Pass  55: suminf.    2.42892 (9) obj. -93.6192 iterations 9
Cbc0038I Pass  56: suminf.    2.42892 (9) obj. -93.6192 iterations 0
Cbc0038I Pass  57: suminf.    2.95904 (8) obj. -93.6192 iterations 11
Cbc0038I Pass  58: suminf.    2.49610 (7) obj. -93.6192 iterations 5
Cbc0038I Pass  59: suminf.    2.67082 (8) obj. -93.6192 iterations 9
Cbc0038I Pass  60: suminf.    2.42892 (9) obj. -93.6192 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 509 rows 262 columns, reduced to 130 rows 73 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -80.8159 - took 0.18 seconds
Cbc0012I Integer solution of -80.81585 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 126 rows 70 columns
Cbc0031I 38 added rows had average density of 169.97368
Cbc0013I At root node, 38 cuts changed objective from -144.83214 to -131.6205 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34965 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.489 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2915 row cuts average 256.0 elements, 0 column cuts (0 active)  in 0.443 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.545 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 250.6 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -80.81585 best solution, best possible -131.6205 (5.07 seconds)
Cbc0010I After 22 nodes, 10 on tree, -80.81585 best solution, best possible -131.6205 (5.78 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 162 rows 91 columns
Cbc0012I Integer solution of -84.09705 found by rounding after 22811 iterations and 61 nodes (6.31 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 5 rows 10 columns
Cbc0010I After 102 nodes, 21 on tree, -84.09705 best solution, best possible -131.6205 (6.49 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 6 rows 12 columns
Cbc0010I After 325 nodes, 10 on tree, -84.09705 best solution, best possible -131.6205 (7.19 seconds)
Cbc0012I Integer solution of -84.35322 found by rounding after 31446 iterations and 384 nodes (7.33 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 3 rows 5 columns
Cbc0004I Integer solution of -84.44314 found after 32462 iterations and 429 nodes (7.46 seconds)
Cbc0038I Full problem 509 rows 262 columns, reduced to 4 rows 6 columns
Cbc0010I After 518 nodes, 21 on tree, -84.44314 best solution, best possible -131.6205 (7.89 seconds)
Cbc0001I Search completed - best objective -84.44314, took 40750 iterations and 692 nodes (8.47 seconds)
Cbc0032I Strong branching done 3934 times (79212 iterations), fathomed 175 nodes and fixed 385 variables
Cbc0035I Maximum depth 89, 3603 variables fixed on reduced cost
Total time (CPU seconds):       8.22   (Wallclock seconds):       8.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 371 (-156) rows, 384 (-141) columns and 17267 (-18470) elements
Clp1000I sum of infeasibilities 1.29742e-06 - average 3.49709e-09, 203 fixed columns
Coin0506I Presolve 168 (-203) rows, 181 (-203) columns and 676 (-16591) elements
Clp0006I 0  Obj -23.346093 Dual inf 23.136486 (180)
Clp0029I End of values pass after 181 iterations
Clp0014I Perturbing problem by 0.001% of 1.5415415 - largest nonzero change 1.4009736e-05 ( 0.00078666749%) - largest zero change 2.9988588e-05
Clp0000I Optimal - objective value -19.717189
Clp0000I Optimal - objective value -19.717189
Coin0511I After Postsolve, objective -19.717189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -19.717189 Dual inf 515.57196 (128)
Clp0014I Perturbing problem by 0.001% of 1.6737638 - largest nonzero change 1.6574359e-05 ( 0.0010643777%) - largest zero change 2.9979706e-05
Clp0000I Optimal - objective value 179.16155
Clp0000I Optimal - objective value 179.16155
Clp0000I Optimal - objective value 179.16155
Coin0511I After Postsolve, objective 179.16155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 179.1615496 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 371 rows, 384 columns (384 integer (384 of which binary)) and 17267 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 5.684%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 102 integers unsatisfied sum - 3.20489
Cbc0038I Pass   1: suminf.    2.93360 (99) obj. -178.722 iterations 48
Cbc0038I Pass   2: suminf.    1.06699 (54) obj. -84.5904 iterations 26
Cbc0038I Pass   3: suminf.    0.67602 (39) obj. -66.0851 iterations 15
Cbc0038I Pass   4: suminf.    0.12357 (14) obj. -31.8594 iterations 25
Cbc0038I Pass   5: suminf.    0.02251 (3) obj. -19.9692 iterations 11
Cbc0038I Solution found of -15.9994
Cbc0038I Rounding solution of -43.1017 is better than previous of -15.9994

Cbc0038I Before mini branch and bound, 281 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 384 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I Round again with cutoff of -56.7078
Cbc0038I Pass   6: suminf.    2.93360 (99) obj. -178.722 iterations 0
Cbc0038I Pass   7: suminf.    1.04274 (53) obj. -83.6146 iterations 33
Cbc0038I Pass   8: suminf.    0.49835 (32) obj. -56.7078 iterations 25
Cbc0038I Pass   9: suminf.    0.33550 (36) obj. -56.7078 iterations 26
Cbc0038I Pass  10: suminf.    0.81665 (17) obj. -56.7078 iterations 35
Cbc0038I Pass  11: suminf.    0.69017 (17) obj. -56.7078 iterations 1
Cbc0038I Pass  12: suminf.    0.39708 (5) obj. -56.7078 iterations 77
Cbc0038I Pass  13: suminf.    0.38516 (6) obj. -56.7078 iterations 9
Cbc0038I Pass  14: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  15: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I Pass  16: suminf.    0.25998 (4) obj. -60.3431 iterations 0
Cbc0038I Pass  17: suminf.    0.44832 (4) obj. -56.7078 iterations 18
Cbc0038I Pass  18: suminf.    0.38516 (6) obj. -56.7078 iterations 7
Cbc0038I Pass  19: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  20: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I Pass  21: suminf.    0.25998 (4) obj. -60.3431 iterations 0
Cbc0038I Pass  22: suminf.    0.44832 (4) obj. -56.7078 iterations 17
Cbc0038I Pass  23: suminf.    0.38516 (6) obj. -56.7078 iterations 7
Cbc0038I Pass  24: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  25: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I Pass  26: suminf.    0.25998 (4) obj. -60.3431 iterations 0
Cbc0038I Pass  27: suminf.    0.44832 (4) obj. -56.7078 iterations 17
Cbc0038I Pass  28: suminf.    0.38516 (6) obj. -56.7078 iterations 7
Cbc0038I Pass  29: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  30: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I Pass  31: suminf.    0.25998 (4) obj. -60.3431 iterations 0
Cbc0038I Pass  32: suminf.    0.44832 (4) obj. -56.7078 iterations 17
Cbc0038I Pass  33: suminf.    0.38516 (6) obj. -56.7078 iterations 7
Cbc0038I Pass  34: suminf.    1.63246 (7) obj. -56.7078 iterations 8
Cbc0038I Pass  35: suminf.    0.25998 (4) obj. -60.3431 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 277 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 384 columns, reduced to 105 rows 107 columns - 25 fixed gives 78, 82 - ok now
Cbc0038I Full problem 371 rows 384 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -15.9994 to -45.3566 (0.27 seconds)
Cbc0038I Round again with cutoff of -81.1985
Cbc0038I Pass  35: suminf.    2.93360 (99) obj. -178.722 iterations 0
Cbc0038I Pass  36: suminf.    1.20310 (59) obj. -90.428 iterations 30
Cbc0038I Pass  37: suminf.    1.18904 (42) obj. -81.1985 iterations 21
Cbc0038I Pass  38: suminf.    0.74165 (41) obj. -91.3652 iterations 2
Cbc0038I Pass  39: suminf.    1.25299 (25) obj. -81.1985 iterations 28
Cbc0038I Pass  40: suminf.    0.40084 (24) obj. -81.1985 iterations 3
Cbc0038I Pass  41: suminf.    0.73532 (14) obj. -81.1985 iterations 26
Cbc0038I Pass  42: suminf.    0.62104 (12) obj. -81.1985 iterations 11
Cbc0038I Pass  43: suminf.    0.60097 (12) obj. -81.7302 iterations 2
Cbc0038I Pass  44: suminf.    0.80393 (28) obj. -81.1985 iterations 24
Cbc0038I Pass  45: suminf.    0.66687 (30) obj. -81.1985 iterations 9
Cbc0038I Pass  46: suminf.    1.35165 (20) obj. -81.1985 iterations 52
Cbc0038I Pass  47: suminf.    1.24523 (20) obj. -81.1985 iterations 10
Cbc0038I Pass  48: suminf.    0.85138 (12) obj. -81.1985 iterations 51
Cbc0038I Pass  49: suminf.    0.66319 (14) obj. -81.1985 iterations 7
Cbc0038I Pass  50: suminf.    0.67291 (14) obj. -81.1985 iterations 11
Cbc0038I Pass  51: suminf.    0.67291 (14) obj. -81.1985 iterations 6
Cbc0038I Pass  52: suminf.    0.66319 (14) obj. -81.1985 iterations 16
Cbc0038I Pass  53: suminf.    1.74730 (24) obj. -81.1985 iterations 57
Cbc0038I Pass  54: suminf.    1.45827 (22) obj. -81.1985 iterations 12
Cbc0038I Pass  55: suminf.    1.11441 (18) obj. -81.1985 iterations 29
Cbc0038I Pass  56: suminf.    1.10740 (18) obj. -81.1985 iterations 11
Cbc0038I Pass  57: suminf.    1.17706 (17) obj. -81.1985 iterations 27
Cbc0038I Pass  58: suminf.    0.62148 (17) obj. -81.4286 iterations 18
Cbc0038I Pass  59: suminf.    1.12221 (14) obj. -81.1985 iterations 45
Cbc0038I Pass  60: suminf.    0.60284 (14) obj. -81.3631 iterations 18
Cbc0038I Pass  61: suminf.    1.12221 (14) obj. -81.1985 iterations 26
Cbc0038I Pass  62: suminf.    2.74284 (38) obj. -81.1985 iterations 72
Cbc0038I Pass  63: suminf.    1.54946 (35) obj. -81.1985 iterations 15
Cbc0038I Pass  64: suminf.    1.42574 (35) obj. -81.1985 iterations 2
Cbc0038I Rounding solution of -49.1075 is better than previous of -45.3566

Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 384 columns, reduced to 25 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -49.1075 to -51.9582 (0.43 seconds)
Cbc0038I Round again with cutoff of -110.587
Cbc0038I Pass  64: suminf.    2.93360 (99) obj. -178.722 iterations 0
Cbc0038I Pass  65: suminf.    1.19819 (58) obj. -110.587 iterations 33
Cbc0038I Pass  66: suminf.    1.18868 (57) obj. -110.809 iterations 1
Cbc0038I Pass  67: suminf.    1.56283 (49) obj. -110.587 iterations 18
Cbc0038I Pass  68: suminf.    0.92856 (48) obj. -113.521 iterations 5
Cbc0038I Pass  69: suminf.    1.52380 (61) obj. -110.587 iterations 30
Cbc0038I Pass  70: suminf.    1.52380 (61) obj. -110.587 iterations 0
Cbc0038I Pass  71: suminf.    1.98257 (53) obj. -110.587 iterations 43
Cbc0038I Pass  72: suminf.    1.39572 (52) obj. -110.587 iterations 23
Cbc0038I Pass  73: suminf.    1.85050 (46) obj. -110.587 iterations 19
Cbc0038I Pass  74: suminf.    1.29934 (46) obj. -110.587 iterations 3
Cbc0038I Pass  75: suminf.    1.58347 (38) obj. -110.587 iterations 55
Cbc0038I Pass  76: suminf.    1.22414 (38) obj. -110.587 iterations 7
Cbc0038I Pass  77: suminf.    1.48230 (31) obj. -110.587 iterations 46
Cbc0038I Pass  78: suminf.    0.94104 (31) obj. -110.788 iterations 16
Cbc0038I Pass  79: suminf.    1.38572 (30) obj. -110.587 iterations 24
Cbc0038I Pass  80: suminf.    1.18305 (32) obj. -110.587 iterations 8
Cbc0038I Pass  81: suminf.    1.39461 (30) obj. -110.587 iterations 18
Cbc0038I Pass  82: suminf.    1.19182 (32) obj. -110.587 iterations 7
Cbc0038I Pass  83: suminf.    1.18305 (32) obj. -110.587 iterations 17
Cbc0038I Pass  84: suminf.    3.02063 (44) obj. -110.587 iterations 46
Cbc0038I Pass  85: suminf.    1.56544 (39) obj. -110.587 iterations 27
Cbc0038I Pass  86: suminf.    1.48496 (40) obj. -112.655 iterations 2
Cbc0038I Pass  87: suminf.    1.58053 (34) obj. -110.587 iterations 33
Cbc0038I Pass  88: suminf.    1.24806 (34) obj. -110.936 iterations 16
Cbc0038I Pass  89: suminf.    1.58053 (34) obj. -110.587 iterations 18
Cbc0038I Pass  90: suminf.    1.89711 (41) obj. -110.587 iterations 43
Cbc0038I Pass  91: suminf.    1.70561 (41) obj. -110.587 iterations 17
Cbc0038I Pass  92: suminf.    1.93322 (37) obj. -110.587 iterations 17
Cbc0038I Pass  93: suminf.    1.65423 (37) obj. -110.587 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 384 columns, reduced to 37 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.52 seconds)
Cbc0038I After 0.52 seconds - Feasibility pump exiting with objective of -51.9582 - took 0.38 seconds
Cbc0012I Integer solution of -51.95822 found by feasibility pump after 0 iterations and 0 nodes (0.52 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 6 rows 7 columns
Cbc0031I 139 added rows had average density of 67.266187
Cbc0013I At root node, 139 cuts changed objective from -179.16155 to -115.95 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 29137 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.510 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3412 row cuts average 360.4 elements, 0 column cuts (0 active)  in 1.228 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 717 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5984 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.207 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2379 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.956 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 248.2 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 257 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.379 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -51.95822 best solution, best possible -115.95 (9.42 seconds)
Cbc0010I After 2 nodes, 1 on tree, -51.95822 best solution, best possible -115.87304 (10.18 seconds)
Cbc0012I Integer solution of -53.19443 found by rounding after 16185 iterations and 3 nodes (10.20 seconds)
Cbc0012I Integer solution of -70.73681 found by rounding after 16447 iterations and 4 nodes (10.31 seconds)
Cbc0012I Integer solution of -73.95374 found by DiveCoefficient after 16460 iterations and 4 nodes (10.34 seconds)
Cbc0012I Integer solution of -76.83991 found by rounding after 16485 iterations and 5 nodes (10.35 seconds)
Cbc0016I Integer solution of -76.84962 found by strong branching after 17185 iterations and 31 nodes (10.69 seconds)
Cbc0012I Integer solution of -77.85668 found by DiveCoefficient after 17383 iterations and 41 nodes (10.87 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 0 rows 0 columns
Cbc0010I After 41 nodes, 6 on tree, -77.85668 best solution, best possible -115.87304 (10.91 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 20 rows 25 columns
Cbc0010I After 98 nodes, 1 on tree, -77.85668 best solution, best possible -115.86924 (11.98 seconds)
Cbc0010I After 100 nodes, 3 on tree, -77.85668 best solution, best possible -115.86924 (12.78 seconds)
Cbc0010I After 102 nodes, 5 on tree, -77.85668 best solution, best possible -115.86924 (13.56 seconds)
Cbc0012I Integer solution of -78.751 found by rounding after 20553 iterations and 110 nodes (14.00 seconds)
Cbc0004I Integer solution of -79.28575 found after 20795 iterations and 118 nodes (14.09 seconds)
Cbc0010I After 139 nodes, 12 on tree, -79.28575 best solution, best possible -115.86924 (14.26 seconds)
Cbc0010I After 197 nodes, 4 on tree, -79.28575 best solution, best possible -115.86924 (15.36 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 34 rows 48 columns
Cbc0012I Integer solution of -83.32371 found by RINS after 24309 iterations and 200 nodes (16.25 seconds)
Cbc0010I After 200 nodes, 6 on tree, -83.32371 best solution, best possible -115.86924 (16.25 seconds)
Cbc0012I Integer solution of -83.62521 found by rounding after 25079 iterations and 222 nodes (16.68 seconds)
Cbc0016I Integer solution of -84.44314 found by strong branching after 25477 iterations and 243 nodes (16.82 seconds)
Cbc0010I After 259 nodes, 11 on tree, -84.44314 best solution, best possible -115.86924 (16.96 seconds)
Cbc0010I After 354 nodes, 10 on tree, -84.44314 best solution, best possible -115.86924 (17.66 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 10 rows 17 columns
Cbc0010I After 440 nodes, 5 on tree, -84.44314 best solution, best possible -115.86924 (18.39 seconds)
Cbc0010I After 488 nodes, 5 on tree, -84.44314 best solution, best possible -115.86924 (19.11 seconds)
Cbc0010I After 534 nodes, 5 on tree, -84.44314 best solution, best possible -115.86924 (19.82 seconds)
Cbc0010I After 554 nodes, 5 on tree, -84.44314 best solution, best possible -115.86924 (20.64 seconds)
Cbc0010I After 586 nodes, 5 on tree, -84.44314 best solution, best possible -115.86924 (21.35 seconds)
Cbc0010I After 598 nodes, 3 on tree, -84.44314 best solution, best possible -115.86924 (22.14 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 182 rows 189 columns
Cbc0010I After 601 nodes, 4 on tree, -84.44314 best solution, best possible -115.86924 (25.08 seconds)
Cbc0010I After 605 nodes, 7 on tree, -84.44314 best solution, best possible -115.86924 (25.80 seconds)
Cbc0010I After 614 nodes, 6 on tree, -84.44314 best solution, best possible -115.86924 (26.50 seconds)
Cbc0010I After 649 nodes, 9 on tree, -84.44314 best solution, best possible -115.86924 (27.22 seconds)
Cbc0010I After 666 nodes, 8 on tree, -84.44314 best solution, best possible -115.86924 (28.20 seconds)
Cbc0010I After 694 nodes, 8 on tree, -84.44314 best solution, best possible -115.86924 (28.94 seconds)
Cbc0010I After 734 nodes, 10 on tree, -84.44314 best solution, best possible -115.86924 (29.66 seconds)
Cbc0010I After 780 nodes, 10 on tree, -84.44314 best solution, best possible -115.86924 (30.37 seconds)
Cbc0038I Full problem 371 rows 384 columns, reduced to 138 rows 145 columns
Cbc0010I After 807 nodes, 11 on tree, -84.44314 best solution, best possible -115.86924 (31.09 seconds)
Cbc0010I After 848 nodes, 10 on tree, -84.44314 best solution, best possible -115.86924 (31.83 seconds)
Cbc0010I After 877 nodes, 2 on tree, -84.44314 best solution, best possible -115.86924 (32.56 seconds)
Cbc0010I After 933 nodes, 5 on tree, -84.44314 best solution, best possible -115.86924 (33.29 seconds)
Cbc0001I Search completed - best objective -84.44314, took 64105 iterations and 986 nodes (33.73 seconds)
Cbc0032I Strong branching done 3282 times (70063 iterations), fathomed 53 nodes and fixed 120 variables
Cbc0035I Maximum depth 44, 4516 variables fixed on reduced cost
Total time (CPU seconds):       32.15   (Wallclock seconds):       33.85

