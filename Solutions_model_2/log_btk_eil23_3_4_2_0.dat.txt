Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 105 (-30) elements
Clp1000I sum of infeasibilities 0.000858114 - average 2.45175e-05, 3 fixed columns
Coin0506I Presolve 22 (-13) rows, 17 (-4) columns and 71 (-34) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 5525.2499
Clp0000I Optimal - objective value 5525.2499
Coin0511I After Postsolve, objective 5525.2499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 5525.2499
Clp0000I Optimal - objective value 5525.2499
Clp0000I Optimal - objective value 5525.2499
Coin0511I After Postsolve, objective 5525.2499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5525.249925 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.654%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.33036
Cbc0038I Pass   1: suminf.    0.52521 (2) obj. -5454.96 iterations 15
Cbc0038I Solution found of -5335.05
Cbc0038I Relaxing continuous gives -5335.05
Cbc0038I Rounding solution of -5361.67 is better than previous of -5335.05

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 16 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -5361.67 to -5459.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -5466.11
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.56073 (5) obj. -5466.11 iterations 3
Cbc0038I Pass   3: suminf.    1.18470 (4) obj. -5466.11 iterations 5
Cbc0038I Pass   4: suminf.    0.94604 (4) obj. -5466.11 iterations 6
Cbc0038I Pass   5: suminf.    1.12682 (4) obj. -5466.11 iterations 4
Cbc0038I Pass   6: suminf.    0.96023 (4) obj. -5466.11 iterations 1
Cbc0038I Pass   7: suminf.    1.16782 (3) obj. -5466.11 iterations 3
Cbc0038I Pass   8: suminf.    1.32823 (6) obj. -5466.11 iterations 4
Cbc0038I Pass   9: suminf.    0.68558 (4) obj. -5466.11 iterations 3
Cbc0038I Pass  10: suminf.    0.68086 (4) obj. -5466.11 iterations 1
Cbc0038I Pass  11: suminf.    0.76202 (4) obj. -5466.11 iterations 5
Cbc0038I Pass  12: suminf.    0.67742 (3) obj. -5466.11 iterations 2
Cbc0038I Pass  13: suminf.    0.46145 (2) obj. -5466.11 iterations 2
Cbc0038I Pass  14: suminf.    0.76225 (2) obj. -5466.11 iterations 2
Cbc0038I Pass  15: suminf.    1.17108 (3) obj. -5466.11 iterations 5
Cbc0038I Pass  16: suminf.    0.38319 (2) obj. -5466.11 iterations 5
Cbc0038I Pass  17: suminf.    0.42742 (2) obj. -5466.11 iterations 2
Cbc0038I Pass  18: suminf.    0.42742 (2) obj. -5466.11 iterations 0
Cbc0038I Pass  19: suminf.    0.69861 (4) obj. -5466.11 iterations 4
Cbc0038I Pass  20: suminf.    0.58574 (3) obj. -5466.11 iterations 3
Cbc0038I Pass  21: suminf.    0.42742 (2) obj. -5466.11 iterations 1
Cbc0038I Pass  22: suminf.    0.81942 (3) obj. -5466.11 iterations 2
Cbc0038I Pass  23: suminf.    0.50182 (2) obj. -5466.11 iterations 3
Cbc0038I Pass  24: suminf.    0.53431 (2) obj. -5466.11 iterations 2
Cbc0038I Pass  25: suminf.    1.42024 (6) obj. -5466.11 iterations 10
Cbc0038I Pass  26: suminf.    1.22513 (5) obj. -5466.11 iterations 2
Cbc0038I Pass  27: suminf.    0.60704 (3) obj. -5466.11 iterations 5
Cbc0038I Pass  28: suminf.    0.57116 (3) obj. -5466.11 iterations 1
Cbc0038I Pass  29: suminf.    0.71946 (2) obj. -5466.11 iterations 3
Cbc0038I Pass  30: suminf.    0.35108 (2) obj. -5466.11 iterations 4
Cbc0038I Pass  31: suminf.    0.47126 (2) obj. -5466.11 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 19 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5459.8 - took 0.01 seconds
Cbc0012I Integer solution of -5459.795 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 16 rows 14 columns
Cbc0031I 8 added rows had average density of 18
Cbc0013I At root node, 8 cuts changed objective from -5522.9567 to -5466.7202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 419 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 387 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5459.795, took 1048 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 16 times (125 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-10) rows, 43 (-3) columns and 345 (-43) elements
Clp1000I sum of infeasibilities 3.30086e-06 - average 8.68647e-08, 33 fixed columns
Coin0506I Presolve 10 (-28) rows, 10 (-33) columns and 36 (-309) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 2.1955618 - largest nonzero change 0 ( 0%) - largest zero change 1.6013653e-05
Clp0000I Optimal - objective value 5435.1599
Clp0000I Optimal - objective value 5435.1599
Coin0511I After Postsolve, objective 5435.1599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1580204 - largest nonzero change 1.7799242e-05 ( 0.0017799242%) - largest zero change 1.6500657e-05
Clp0000I Optimal - objective value 5529.3728
Clp0000I Optimal - objective value 5529.3728
Clp0000I Optimal - objective value 5529.3728
Coin0511I After Postsolve, objective 5529.3728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5529.372771 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 42 columns (42 integer (42 of which binary)) and 342 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.263%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.07565
Cbc0038I Pass   1: suminf.    0.89286 (4) obj. -5382.62 iterations 19
Cbc0038I Pass   2: suminf.    0.89286 (4) obj. -5382.62 iterations 1
Cbc0038I Solution found of -5364.67
Cbc0038I Rounding solution of -5434.79 is better than previous of -5364.67

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -5434.79 to -5457.67 (0.02 seconds)
Cbc0038I Round again with cutoff of -5461.52
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.75753 (10) obj. -5461.52 iterations 4
Cbc0038I Pass   4: suminf.    1.02581 (4) obj. -5461.52 iterations 19
Cbc0038I Pass   5: suminf.    1.02581 (4) obj. -5461.52 iterations 0
Cbc0038I Pass   6: suminf.    0.93371 (3) obj. -5461.52 iterations 5
Cbc0038I Pass   7: suminf.    0.84948 (3) obj. -5461.52 iterations 1
Cbc0038I Pass   8: suminf.    0.93371 (3) obj. -5461.52 iterations 3
Cbc0038I Pass   9: suminf.    2.07803 (6) obj. -5461.52 iterations 4
Cbc0038I Pass  10: suminf.    1.47467 (5) obj. -5461.52 iterations 3
Cbc0038I Pass  11: suminf.    3.28689 (11) obj. -5461.52 iterations 9
Cbc0038I Pass  12: suminf.    1.72059 (7) obj. -5461.52 iterations 5
Cbc0038I Pass  13: suminf.    0.93371 (3) obj. -5461.52 iterations 13
Cbc0038I Pass  14: suminf.    0.84948 (3) obj. -5461.52 iterations 1
Cbc0038I Pass  15: suminf.    0.93371 (3) obj. -5461.52 iterations 8
Cbc0038I Pass  16: suminf.    1.89066 (6) obj. -5461.52 iterations 9
Cbc0038I Pass  17: suminf.    1.67280 (5) obj. -5461.52 iterations 3
Cbc0038I Pass  18: suminf.    0.90041 (3) obj. -5461.52 iterations 7
Cbc0038I Pass  19: suminf.    5.14000 (13) obj. -5461.52 iterations 13
Cbc0038I Pass  20: suminf.    2.02714 (6) obj. -5461.52 iterations 5
Cbc0038I Pass  21: suminf.    1.28599 (5) obj. -5461.52 iterations 3
Cbc0038I Pass  22: suminf.    0.93371 (3) obj. -5461.52 iterations 10
Cbc0038I Pass  23: suminf.    0.84948 (3) obj. -5461.52 iterations 2
Cbc0038I Pass  24: suminf.    2.48496 (12) obj. -5461.52 iterations 7
Cbc0038I Pass  25: suminf.    1.28173 (4) obj. -5462.17 iterations 10
Cbc0038I Pass  26: suminf.    0.84948 (3) obj. -5461.52 iterations 4
Cbc0038I Pass  27: suminf.    5.78002 (17) obj. -5461.52 iterations 19
Cbc0038I Pass  28: suminf.    3.47826 (9) obj. -5461.52 iterations 9
Cbc0038I Pass  29: suminf.    0.91854 (3) obj. -5461.52 iterations 8
Cbc0038I Pass  30: suminf.    0.91854 (3) obj. -5461.52 iterations 2
Cbc0038I Pass  31: suminf.    1.12104 (4) obj. -5461.52 iterations 3
Cbc0038I Pass  32: suminf.    0.86186 (3) obj. -5461.52 iterations 2
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -5457.67 to -5459.79 (0.04 seconds)
Cbc0038I Round again with cutoff of -5468.45
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.05991 (11) obj. -5468.45 iterations 1
Cbc0038I Pass  33: suminf.    1.48999 (5) obj. -5468.45 iterations 17
Cbc0038I Pass  34: suminf.    1.48999 (5) obj. -5468.45 iterations 0
Cbc0038I Pass  35: suminf.    1.69968 (5) obj. -5468.45 iterations 6
Cbc0038I Pass  36: suminf.    2.08377 (8) obj. -5468.45 iterations 8
Cbc0038I Pass  37: suminf.    1.37291 (5) obj. -5468.45 iterations 9
Cbc0038I Pass  38: suminf.    1.48999 (5) obj. -5468.45 iterations 3
Cbc0038I Pass  39: suminf.    1.48999 (5) obj. -5468.45 iterations 2
Cbc0038I Pass  40: suminf.    1.80245 (6) obj. -5468.45 iterations 8
Cbc0038I Pass  41: suminf.    1.41759 (5) obj. -5468.45 iterations 5
Cbc0038I Pass  42: suminf.    1.48999 (5) obj. -5468.45 iterations 10
Cbc0038I Pass  43: suminf.    1.48999 (5) obj. -5468.45 iterations 0
Cbc0038I Pass  44: suminf.    1.69968 (5) obj. -5468.45 iterations 6
Cbc0038I Pass  45: suminf.    3.93763 (12) obj. -5468.45 iterations 7
Cbc0038I Pass  46: suminf.    3.78716 (12) obj. -5468.45 iterations 2
Cbc0038I Pass  47: suminf.    3.78716 (12) obj. -5468.45 iterations 0
Cbc0038I Pass  48: suminf.    2.60502 (8) obj. -5468.45 iterations 8
Cbc0038I Pass  49: suminf.    2.60502 (8) obj. -5468.45 iterations 1
Cbc0038I Pass  50: suminf.    2.12834 (6) obj. -5468.45 iterations 11
Cbc0038I Pass  51: suminf.    1.48999 (5) obj. -5468.45 iterations 2
Cbc0038I Pass  52: suminf.    1.69968 (5) obj. -5468.45 iterations 8
Cbc0038I Pass  53: suminf.    1.86141 (7) obj. -5468.45 iterations 6
Cbc0038I Pass  54: suminf.    1.48654 (6) obj. -5468.45 iterations 3
Cbc0038I Pass  55: suminf.    1.48999 (5) obj. -5468.45 iterations 4
Cbc0038I Pass  56: suminf.    2.23738 (8) obj. -5468.45 iterations 6
Cbc0038I Pass  57: suminf.    1.49442 (6) obj. -5468.45 iterations 8
Cbc0038I Pass  58: suminf.    1.59705 (6) obj. -5468.45 iterations 10
Cbc0038I Pass  59: suminf.    1.48999 (5) obj. -5468.45 iterations 2
Cbc0038I Pass  60: suminf.    1.69968 (5) obj. -5468.45 iterations 8
Cbc0038I Pass  61: suminf.    1.87743 (7) obj. -5468.45 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -5459.79 - took 0.03 seconds
Cbc0012I Integer solution of -5459.795 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 42 columns, reduced to 13 rows 13 columns
Cbc0031I 3 added rows had average density of 8.6666667
Cbc0013I At root node, 16 cuts changed objective from -5484.0601 to -5459.795 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 48 row cuts average 2.0 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 20 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5459.795, took 42 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 105 (-30) elements
Clp1000I sum of infeasibilities 0.000858114 - average 2.45175e-05, 3 fixed columns
Coin0506I Presolve 22 (-13) rows, 17 (-4) columns and 71 (-34) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 5525.2499
Clp0000I Optimal - objective value 5525.2499
Coin0511I After Postsolve, objective 5525.2499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 5525.2499
Clp0000I Optimal - objective value 5525.2499
Clp0000I Optimal - objective value 5525.2499
Coin0511I After Postsolve, objective 5525.2499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5525.249925 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.654%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.33036
Cbc0038I Pass   1: suminf.    0.52521 (2) obj. -5454.96 iterations 15
Cbc0038I Solution found of -5335.05
Cbc0038I Relaxing continuous gives -5335.05
Cbc0038I Rounding solution of -5361.67 is better than previous of -5335.05

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 16 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -5361.67 to -5459.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -5466.11
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.56073 (5) obj. -5466.11 iterations 3
Cbc0038I Pass   3: suminf.    1.18470 (4) obj. -5466.11 iterations 5
Cbc0038I Pass   4: suminf.    0.94604 (4) obj. -5466.11 iterations 6
Cbc0038I Pass   5: suminf.    1.12682 (4) obj. -5466.11 iterations 4
Cbc0038I Pass   6: suminf.    0.96023 (4) obj. -5466.11 iterations 1
Cbc0038I Pass   7: suminf.    1.16782 (3) obj. -5466.11 iterations 3
Cbc0038I Pass   8: suminf.    1.32823 (6) obj. -5466.11 iterations 4
Cbc0038I Pass   9: suminf.    0.68558 (4) obj. -5466.11 iterations 3
Cbc0038I Pass  10: suminf.    0.68086 (4) obj. -5466.11 iterations 1
Cbc0038I Pass  11: suminf.    0.76202 (4) obj. -5466.11 iterations 5
Cbc0038I Pass  12: suminf.    0.67742 (3) obj. -5466.11 iterations 2
Cbc0038I Pass  13: suminf.    0.46145 (2) obj. -5466.11 iterations 2
Cbc0038I Pass  14: suminf.    0.76225 (2) obj. -5466.11 iterations 2
Cbc0038I Pass  15: suminf.    1.17108 (3) obj. -5466.11 iterations 5
Cbc0038I Pass  16: suminf.    0.38319 (2) obj. -5466.11 iterations 5
Cbc0038I Pass  17: suminf.    0.42742 (2) obj. -5466.11 iterations 2
Cbc0038I Pass  18: suminf.    0.42742 (2) obj. -5466.11 iterations 0
Cbc0038I Pass  19: suminf.    0.69861 (4) obj. -5466.11 iterations 4
Cbc0038I Pass  20: suminf.    0.58574 (3) obj. -5466.11 iterations 3
Cbc0038I Pass  21: suminf.    0.42742 (2) obj. -5466.11 iterations 1
Cbc0038I Pass  22: suminf.    0.81942 (3) obj. -5466.11 iterations 2
Cbc0038I Pass  23: suminf.    0.50182 (2) obj. -5466.11 iterations 3
Cbc0038I Pass  24: suminf.    0.53431 (2) obj. -5466.11 iterations 2
Cbc0038I Pass  25: suminf.    1.42024 (6) obj. -5466.11 iterations 10
Cbc0038I Pass  26: suminf.    1.22513 (5) obj. -5466.11 iterations 2
Cbc0038I Pass  27: suminf.    0.60704 (3) obj. -5466.11 iterations 5
Cbc0038I Pass  28: suminf.    0.57116 (3) obj. -5466.11 iterations 1
Cbc0038I Pass  29: suminf.    0.71946 (2) obj. -5466.11 iterations 3
Cbc0038I Pass  30: suminf.    0.35108 (2) obj. -5466.11 iterations 4
Cbc0038I Pass  31: suminf.    0.47126 (2) obj. -5466.11 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 19 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5459.8 - took 0.02 seconds
Cbc0012I Integer solution of -5459.795 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 16 rows 14 columns
Cbc0031I 8 added rows had average density of 18
Cbc0013I At root node, 8 cuts changed objective from -5522.9567 to -5466.7202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 419 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 387 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5459.795, took 1048 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 16 times (125 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 41 (-6) columns and 324 (-65) elements
Clp1000I sum of infeasibilities 0.000198271 - average 5.50752e-06, 31 fixed columns
Coin0506I Presolve 10 (-26) rows, 10 (-31) columns and 35 (-289) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 2.7500481 - largest nonzero change 0 ( 0%) - largest zero change 1.0882844e-05
Clp0000I Optimal - objective value 5459.4579
Clp0000I Optimal - objective value 5459.4579
Coin0511I After Postsolve, objective 5459.4579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.38866516 - largest nonzero change 1.9804611e-05 ( 0.0016324266%) - largest zero change 2.6990821e-05
Clp0000I Optimal - objective value 5519.9306
Clp0000I Optimal - objective value 5519.9306
Clp0000I Optimal - objective value 5519.9306
Coin0511I After Postsolve, objective 5519.9306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5519.930646 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 42 columns (42 integer (42 of which binary)) and 341 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.263%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.05458
Cbc0038I Pass   1: suminf.    0.89286 (4) obj. -5382.62 iterations 14
Cbc0038I Pass   2: suminf.    0.89286 (4) obj. -5382.62 iterations 0
Cbc0038I Solution found of -5364.67
Cbc0038I Rounding solution of -5434.8 is better than previous of -5364.67

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -5434.8 to -5457.67 (0.02 seconds)
Cbc0038I Round again with cutoff of -5461.52
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.75278 (10) obj. -5461.52 iterations 2
Cbc0038I Pass   4: suminf.    1.02581 (4) obj. -5461.52 iterations 17
Cbc0038I Pass   5: suminf.    1.02581 (4) obj. -5461.52 iterations 0
Cbc0038I Pass   6: suminf.    0.93371 (3) obj. -5461.52 iterations 5
Cbc0038I Pass   7: suminf.    0.84948 (3) obj. -5461.52 iterations 1
Cbc0038I Pass   8: suminf.    0.93371 (3) obj. -5461.52 iterations 5
Cbc0038I Pass   9: suminf.    2.07803 (6) obj. -5461.52 iterations 5
Cbc0038I Pass  10: suminf.    1.47467 (5) obj. -5461.52 iterations 3
Cbc0038I Pass  11: suminf.    3.28689 (11) obj. -5461.52 iterations 12
Cbc0038I Pass  12: suminf.    1.72059 (7) obj. -5461.52 iterations 5
Cbc0038I Pass  13: suminf.    0.93371 (3) obj. -5461.52 iterations 12
Cbc0038I Pass  14: suminf.    0.84948 (3) obj. -5461.52 iterations 1
Cbc0038I Pass  15: suminf.    0.93371 (3) obj. -5461.52 iterations 10
Cbc0038I Pass  16: suminf.    1.89067 (6) obj. -5461.52 iterations 9
Cbc0038I Pass  17: suminf.    1.67281 (5) obj. -5461.52 iterations 3
Cbc0038I Pass  18: suminf.    0.90041 (3) obj. -5461.52 iterations 8
Cbc0038I Pass  19: suminf.    5.14001 (13) obj. -5461.52 iterations 13
Cbc0038I Pass  20: suminf.    2.02713 (6) obj. -5461.52 iterations 5
Cbc0038I Pass  21: suminf.    1.28599 (5) obj. -5461.52 iterations 3
Cbc0038I Pass  22: suminf.    0.93371 (3) obj. -5461.52 iterations 11
Cbc0038I Pass  23: suminf.    0.84948 (3) obj. -5461.52 iterations 2
Cbc0038I Pass  24: suminf.    2.46527 (12) obj. -5461.52 iterations 7
Cbc0038I Pass  25: suminf.    1.27822 (4) obj. -5462.25 iterations 11
Cbc0038I Pass  26: suminf.    0.84948 (3) obj. -5461.52 iterations 4
Cbc0038I Pass  27: suminf.    5.78003 (17) obj. -5461.52 iterations 19
Cbc0038I Pass  28: suminf.    3.47827 (9) obj. -5461.52 iterations 10
Cbc0038I Pass  29: suminf.    0.91855 (3) obj. -5461.52 iterations 9
Cbc0038I Pass  30: suminf.    0.91855 (3) obj. -5461.52 iterations 3
Cbc0038I Pass  31: suminf.    1.12103 (4) obj. -5461.52 iterations 4
Cbc0038I Pass  32: suminf.    0.86186 (3) obj. -5461.52 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -5457.67 to -5459.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -5468.45
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.05186 (11) obj. -5468.45 iterations 1
Cbc0038I Pass  33: suminf.    1.49002 (5) obj. -5468.45 iterations 16
Cbc0038I Pass  34: suminf.    1.49002 (5) obj. -5468.45 iterations 0
Cbc0038I Pass  35: suminf.    1.69966 (5) obj. -5468.45 iterations 8
Cbc0038I Pass  36: suminf.    2.08221 (8) obj. -5468.45 iterations 8
Cbc0038I Pass  37: suminf.    1.36167 (5) obj. -5468.45 iterations 11
Cbc0038I Pass  38: suminf.    1.49002 (5) obj. -5468.45 iterations 3
Cbc0038I Pass  39: suminf.    1.49002 (5) obj. -5468.45 iterations 1
Cbc0038I Pass  40: suminf.    1.80245 (6) obj. -5468.45 iterations 9
Cbc0038I Pass  41: suminf.    1.41760 (5) obj. -5468.45 iterations 5
Cbc0038I Pass  42: suminf.    1.49002 (5) obj. -5468.45 iterations 10
Cbc0038I Pass  43: suminf.    1.49002 (5) obj. -5468.45 iterations 1
Cbc0038I Pass  44: suminf.    1.69966 (5) obj. -5468.45 iterations 10
Cbc0038I Pass  45: suminf.    3.93770 (12) obj. -5468.45 iterations 7
Cbc0038I Pass  46: suminf.    3.78721 (12) obj. -5468.45 iterations 3
Cbc0038I Pass  47: suminf.    3.78721 (12) obj. -5468.45 iterations 0
Cbc0038I Pass  48: suminf.    2.60505 (8) obj. -5468.45 iterations 7
Cbc0038I Pass  49: suminf.    2.60505 (8) obj. -5468.45 iterations 1
Cbc0038I Pass  50: suminf.    2.12832 (6) obj. -5468.45 iterations 13
Cbc0038I Pass  51: suminf.    1.49002 (5) obj. -5468.45 iterations 2
Cbc0038I Pass  52: suminf.    1.69966 (5) obj. -5468.45 iterations 10
Cbc0038I Pass  53: suminf.    1.85431 (6) obj. -5468.45 iterations 9
Cbc0038I Pass  54: suminf.    1.47531 (6) obj. -5468.45 iterations 8
Cbc0038I Pass  55: suminf.    1.49002 (5) obj. -5468.45 iterations 4
Cbc0038I Pass  56: suminf.    2.23736 (8) obj. -5468.45 iterations 5
Cbc0038I Pass  57: suminf.    1.49445 (6) obj. -5468.45 iterations 7
Cbc0038I Pass  58: suminf.    1.59707 (6) obj. -5468.45 iterations 10
Cbc0038I Pass  59: suminf.    1.49002 (5) obj. -5468.45 iterations 3
Cbc0038I Pass  60: suminf.    1.69966 (5) obj. -5468.45 iterations 8
Cbc0038I Pass  61: suminf.    1.87741 (7) obj. -5468.45 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -5459.8 - took 0.03 seconds
Cbc0012I Integer solution of -5459.795 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 42 columns, reduced to 13 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 7.5
Cbc0013I At root node, 6 cuts changed objective from -5480.411 to -5458.4323 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 45 row cuts average 2.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 17 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5459.795, took 39 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

