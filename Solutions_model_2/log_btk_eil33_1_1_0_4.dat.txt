Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-20) rows, 25 (-10) columns and 141 (-54) elements
Clp1000I sum of infeasibilities 4.41198e-05 - average 9.00404e-07, 1 fixed columns
Coin0506I Presolve 45 (-4) rows, 23 (-2) columns and 129 (-12) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Coin0511I After Postsolve, objective 346.65585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Coin0511I After Postsolve, objective 346.65585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 346.6558547 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 25 columns (24 integer (24 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.22823
Cbc0038I Pass   1: suminf.    0.56889 (2) obj. -222.883 iterations 11
Cbc0038I Solution found of -127.333
Cbc0038I Relaxing continuous gives -127.333
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 25 columns, reduced to 32 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -127.333 to -167.333 (0.01 seconds)
Cbc0038I Round again with cutoff of -182.273
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.56889 (2) obj. -222.883 iterations 0
Cbc0038I Pass   3: suminf.    0.28565 (1) obj. -182.273 iterations 2
Cbc0038I Pass   4: suminf.    0.47500 (1) obj. -218.691 iterations 1
Cbc0038I Pass   5: suminf.    0.77484 (8) obj. -182.273 iterations 5
Cbc0038I Pass   6: suminf.    1.18793 (8) obj. -182.273 iterations 7
Cbc0038I Pass   7: suminf.    0.38410 (3) obj. -182.273 iterations 6
Cbc0038I Pass   8: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass   9: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  10: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  11: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  12: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  13: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  14: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  15: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  16: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  17: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  18: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  19: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  20: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  21: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  22: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  23: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  24: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  25: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  26: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  27: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  28: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  29: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  30: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  31: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 25 columns, reduced to 36 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -167.333 - took 0.02 seconds
Cbc0012I Integer solution of -167.333 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 49 rows 25 columns, reduced to 32 rows 16 columns
Cbc0031I 5 added rows had average density of 16.8
Cbc0013I At root node, 5 cuts changed objective from -316.73487 to -219.4508 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 428 row cuts average 2.7 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -167.333, took 1065 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 38 times (188 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-14) rows, 53 (-13) columns and 484 (-239) elements
Clp1000I sum of infeasibilities 3.1218e-08 - average 5.78111e-10, 36 fixed columns
Coin0506I Presolve 18 (-36) rows, 17 (-36) columns and 65 (-419) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 219.33781
Clp0000I Optimal - objective value 219.33781
Coin0511I After Postsolve, objective 219.33781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.8012903 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 439.24423
Clp0000I Optimal - objective value 439.24423
Clp0000I Optimal - objective value 439.24423
Coin0511I After Postsolve, objective 439.24423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 439.2442257 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 52 columns (52 integer (52 of which binary)) and 471 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.857%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.48389
Cbc0038I Pass   1: suminf.    0.87468 (6) obj. -164.078 iterations 28
Cbc0038I Pass   2: suminf.    0.87468 (6) obj. -164.078 iterations 0
Cbc0038I Solution found of -87.3333
Cbc0038I Rounding solution of -133.667 is better than previous of -87.3333

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 52 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -133.667 to -165.666 (0.02 seconds)
Cbc0038I Round again with cutoff of -177.546
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.11140 (8) obj. -177.546 iterations 2
Cbc0038I Pass   4: suminf.    1.11140 (8) obj. -177.546 iterations 3
Cbc0038I Pass   5: suminf.    0.40000 (1) obj. -201.733 iterations 22
Cbc0038I Pass   6: suminf.    0.47425 (1) obj. -177.546 iterations 1
Cbc0038I Pass   7: suminf.    2.26293 (12) obj. -177.546 iterations 13
Cbc0038I Pass   8: suminf.    0.69078 (2) obj. -177.546 iterations 12
Cbc0038I Pass   9: suminf.    0.40000 (1) obj. -200.733 iterations 2
Cbc0038I Pass  10: suminf.    0.47945 (1) obj. -177.546 iterations 1
Cbc0038I Pass  11: suminf.    3.11989 (15) obj. -177.546 iterations 17
Cbc0038I Pass  12: suminf.    1.10135 (4) obj. -177.546 iterations 11
Cbc0038I Pass  13: suminf.    0.40000 (1) obj. -198.733 iterations 4
Cbc0038I Pass  14: suminf.    0.48984 (1) obj. -177.546 iterations 1
Cbc0038I Pass  15: suminf.    0.80460 (4) obj. -177.546 iterations 9
Cbc0038I Pass  16: suminf.    0.75240 (4) obj. -177.546 iterations 4
Cbc0038I Pass  17: suminf.    0.30159 (1) obj. -181.746 iterations 5
Cbc0038I Pass  18: suminf.    0.26443 (1) obj. -177.546 iterations 1
Cbc0038I Pass  19: suminf.    0.30159 (1) obj. -181.746 iterations 1
Cbc0038I Pass  20: suminf.    1.60752 (11) obj. -177.546 iterations 11
Cbc0038I Pass  21: suminf.    0.58970 (4) obj. -177.546 iterations 7
Cbc0038I Pass  22: suminf.    0.31442 (2) obj. -177.546 iterations 4
Cbc0038I Pass  23: suminf.    0.07500 (1) obj. -198.575 iterations 2
Cbc0038I Pass  24: suminf.    0.18433 (1) obj. -177.546 iterations 1
Cbc0038I Pass  25: suminf.    4.81141 (18) obj. -177.546 iterations 17
Cbc0038I Pass  26: suminf.    2.89266 (10) obj. -177.546 iterations 6
Cbc0038I Pass  27: suminf.    0.97186 (3) obj. -181.986 iterations 10
Cbc0038I Pass  28: suminf.    0.49742 (4) obj. -177.546 iterations 5
Cbc0038I Pass  29: suminf.    2.75827 (8) obj. -177.546 iterations 7
Cbc0038I Pass  30: suminf.    1.95142 (7) obj. -177.546 iterations 2
Cbc0038I Pass  31: suminf.    0.42632 (3) obj. -186.365 iterations 6
Cbc0038I Pass  32: suminf.    0.42632 (3) obj. -186.365 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 52 columns, reduced to 42 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -165.666 to -167.333 (0.04 seconds)
Cbc0038I Round again with cutoff of -198.93
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.48726 (8) obj. -198.93 iterations 0
Cbc0038I Pass  33: suminf.    1.48726 (8) obj. -198.93 iterations 3
Cbc0038I Pass  34: suminf.    0.40000 (1) obj. -201.733 iterations 22
Cbc0038I Pass  35: suminf.    0.41457 (1) obj. -198.93 iterations 1
Cbc0038I Pass  36: suminf.    1.29777 (5) obj. -198.93 iterations 12
Cbc0038I Pass  37: suminf.    1.29777 (5) obj. -198.93 iterations 3
Cbc0038I Pass  38: suminf.    0.52698 (2) obj. -214.082 iterations 8
Cbc0038I Pass  39: suminf.    0.40000 (1) obj. -199.733 iterations 1
Cbc0038I Pass  40: suminf.    0.40417 (1) obj. -198.93 iterations 1
Cbc0038I Pass  41: suminf.    1.36843 (4) obj. -198.93 iterations 11
Cbc0038I Pass  42: suminf.    1.36843 (4) obj. -198.93 iterations 2
Cbc0038I Pass  43: suminf.    1.81810 (8) obj. -198.93 iterations 9
Cbc0038I Pass  44: suminf.    1.81810 (8) obj. -198.93 iterations 3
Cbc0038I Pass  45: suminf.    0.52698 (2) obj. -214.082 iterations 10
Cbc0038I Pass  46: suminf.    0.40000 (1) obj. -199.733 iterations 1
Cbc0038I Pass  47: suminf.    0.40417 (1) obj. -198.93 iterations 1
Cbc0038I Pass  48: suminf.    1.44056 (4) obj. -215.543 iterations 13
Cbc0038I Pass  49: suminf.    0.90428 (3) obj. -198.93 iterations 3
Cbc0038I Pass  50: suminf.    0.43714 (2) obj. -198.93 iterations 3
Cbc0038I Pass  51: suminf.    0.58674 (2) obj. -198.93 iterations 1
Cbc0038I Pass  52: suminf.    0.70587 (3) obj. -198.93 iterations 2
Cbc0038I Pass  53: suminf.    0.42830 (2) obj. -198.93 iterations 2
Cbc0038I Pass  54: suminf.    0.59263 (2) obj. -198.93 iterations 1
Cbc0038I Pass  55: suminf.    2.28272 (12) obj. -198.93 iterations 12
Cbc0038I Pass  56: suminf.    0.97002 (4) obj. -198.93 iterations 9
Cbc0038I Pass  57: suminf.    0.97002 (4) obj. -198.93 iterations 0
Cbc0038I Pass  58: suminf.    2.40655 (12) obj. -198.93 iterations 16
Cbc0038I Pass  59: suminf.    2.37680 (9) obj. -198.93 iterations 3
Cbc0038I Pass  60: suminf.    1.76255 (7) obj. -198.93 iterations 3
Cbc0038I Pass  61: suminf.    0.58528 (3) obj. -198.93 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 52 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -167.333 - took 0.03 seconds
Cbc0012I Integer solution of -167.333 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 53 rows 52 columns, reduced to 33 rows 30 columns
Cbc0031I 15 added rows had average density of 8.9333333
Cbc0013I At root node, 15 cuts changed objective from -284.46658 to -210.89398 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 106 row cuts average 2.2 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0001I Search completed - best objective -167.333, took 299 iterations and 2 nodes (0.38 seconds)
Cbc0032I Strong branching done 34 times (296 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.38

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-20) rows, 25 (-10) columns and 141 (-54) elements
Clp1000I sum of infeasibilities 4.41198e-05 - average 9.00404e-07, 1 fixed columns
Coin0506I Presolve 45 (-4) rows, 23 (-2) columns and 129 (-12) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Coin0511I After Postsolve, objective 346.65585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Coin0511I After Postsolve, objective 346.65585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 346.6558547 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 25 columns (24 integer (24 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.22823
Cbc0038I Pass   1: suminf.    0.56889 (2) obj. -222.883 iterations 11
Cbc0038I Solution found of -127.333
Cbc0038I Relaxing continuous gives -127.333
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 25 columns, reduced to 32 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -127.333 to -167.333 (0.01 seconds)
Cbc0038I Round again with cutoff of -182.273
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.56889 (2) obj. -222.883 iterations 0
Cbc0038I Pass   3: suminf.    0.28565 (1) obj. -182.273 iterations 2
Cbc0038I Pass   4: suminf.    0.47500 (1) obj. -218.691 iterations 1
Cbc0038I Pass   5: suminf.    0.77484 (8) obj. -182.273 iterations 5
Cbc0038I Pass   6: suminf.    1.18793 (8) obj. -182.273 iterations 7
Cbc0038I Pass   7: suminf.    0.38410 (3) obj. -182.273 iterations 6
Cbc0038I Pass   8: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass   9: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  10: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  11: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  12: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  13: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  14: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  15: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  16: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  17: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  18: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  19: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  20: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  21: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  22: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  23: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  24: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  25: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  26: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  27: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  28: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  29: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  30: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  31: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 25 columns, reduced to 36 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -167.333 - took 0.04 seconds
Cbc0012I Integer solution of -167.333 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 49 rows 25 columns, reduced to 32 rows 16 columns
Cbc0031I 5 added rows had average density of 16.8
Cbc0013I At root node, 5 cuts changed objective from -316.73487 to -219.4508 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 428 row cuts average 2.7 elements, 4 column cuts (4 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -167.333, took 1065 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 38 times (188 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-16) rows, 52 (-15) columns and 453 (-271) elements
Clp1000I sum of infeasibilities 4.90648e-08 - average 9.25752e-10, 10 fixed columns
Coin0506I Presolve 43 (-10) rows, 42 (-10) columns and 291 (-162) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.9527546 - largest nonzero change 1.080671e-05 ( 0.0008409402%) - largest zero change 2.8513617e-05
Clp0000I Optimal - objective value 404.73914
Clp0000I Optimal - objective value 404.73914
Coin0511I After Postsolve, objective 404.73914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6791009 - largest nonzero change 1.080671e-05 ( 0.0008409402%) - largest zero change 2.8513617e-05
Clp0000I Optimal - objective value 404.73914
Clp0000I Optimal - objective value 404.73914
Clp0000I Optimal - objective value 404.73914
Coin0511I After Postsolve, objective 404.73914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 404.7391448 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 52 columns (52 integer (52 of which binary)) and 467 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.857%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.91414
Cbc0038I Pass   1: suminf.    1.07468 (7) obj. -167.278 iterations 31
Cbc0038I Pass   2: suminf.    1.07468 (7) obj. -167.278 iterations 1
Cbc0038I Solution found of -87.3333
Cbc0038I Rounding solution of -133.667 is better than previous of -87.3333

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 52 columns, reduced to 32 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -133.667 to -165.666 (0.02 seconds)
Cbc0038I Round again with cutoff of -178.355
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.32712 (9) obj. -178.355 iterations 4
Cbc0038I Pass   4: suminf.    1.32712 (9) obj. -178.355 iterations 4
Cbc0038I Pass   5: suminf.    0.40000 (1) obj. -201.733 iterations 19
Cbc0038I Pass   6: suminf.    0.47845 (1) obj. -178.355 iterations 1
Cbc0038I Pass   7: suminf.    2.28619 (12) obj. -178.355 iterations 11
Cbc0038I Pass   8: suminf.    0.73999 (2) obj. -178.355 iterations 8
Cbc0038I Pass   9: suminf.    0.40000 (1) obj. -200.733 iterations 2
Cbc0038I Pass  10: suminf.    0.48365 (1) obj. -178.355 iterations 1
Cbc0038I Pass  11: suminf.    3.15368 (15) obj. -178.355 iterations 12
Cbc0038I Pass  12: suminf.    1.35184 (4) obj. -178.355 iterations 17
Cbc0038I Pass  13: suminf.    0.40000 (1) obj. -198.733 iterations 4
Cbc0038I Pass  14: suminf.    0.49405 (1) obj. -178.355 iterations 1
Cbc0038I Pass  15: suminf.    1.35469 (4) obj. -178.355 iterations 10
Cbc0038I Pass  16: suminf.    1.07273 (3) obj. -191.479 iterations 4
Cbc0038I Pass  17: suminf.    0.42796 (1) obj. -178.355 iterations 3
Cbc0038I Pass  18: suminf.    0.40000 (1) obj. -183.733 iterations 1
Cbc0038I Pass  19: suminf.    2.25315 (7) obj. -178.355 iterations 12
Cbc0038I Pass  20: suminf.    2.25315 (7) obj. -178.355 iterations 3
Cbc0038I Pass  21: suminf.    0.40000 (1) obj. -189.733 iterations 7
Cbc0038I Pass  22: suminf.    0.45916 (1) obj. -178.355 iterations 1
Cbc0038I Pass  23: suminf.    3.65229 (13) obj. -178.355 iterations 25
Cbc0038I Pass  24: suminf.    2.33322 (12) obj. -178.355 iterations 6
Cbc0038I Pass  25: suminf.    2.33322 (12) obj. -178.355 iterations 0
Cbc0038I Pass  26: suminf.    2.05928 (7) obj. -178.355 iterations 13
Cbc0038I Pass  27: suminf.    1.99121 (6) obj. -178.355 iterations 3
Cbc0038I Pass  28: suminf.    0.79821 (4) obj. -178.355 iterations 11
Cbc0038I Pass  29: suminf.    0.36375 (4) obj. -178.355 iterations 5
Cbc0038I Pass  30: suminf.    0.59202 (4) obj. -178.355 iterations 2
Cbc0038I Pass  31: suminf.    0.43558 (2) obj. -178.355 iterations 1
Cbc0038I Pass  32: suminf.    0.31556 (2) obj. -235.374 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 52 columns, reduced to 41 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -165.666 to -167.333 (0.04 seconds)
Cbc0038I Round again with cutoff of -201.194
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.84765 (9) obj. -201.194 iterations 0
Cbc0038I Pass  33: suminf.    1.84765 (9) obj. -201.194 iterations 4
Cbc0038I Pass  34: suminf.    0.40000 (1) obj. -201.733 iterations 19
Cbc0038I Pass  35: suminf.    0.40280 (1) obj. -201.194 iterations 1
Cbc0038I Pass  36: suminf.    1.47032 (5) obj. -201.194 iterations 22
Cbc0038I Pass  37: suminf.    1.11163 (4) obj. -201.194 iterations 14
Cbc0038I Pass  38: suminf.    0.83589 (2) obj. -201.194 iterations 5
Cbc0038I Pass  39: suminf.    0.70976 (2) obj. -201.194 iterations 3
Cbc0038I Pass  40: suminf.    2.22040 (7) obj. -201.194 iterations 13
Cbc0038I Pass  41: suminf.    2.22040 (7) obj. -201.194 iterations 1
Cbc0038I Pass  42: suminf.    0.84382 (2) obj. -201.194 iterations 12
Cbc0038I Pass  43: suminf.    0.74250 (2) obj. -201.194 iterations 3
Cbc0038I Pass  44: suminf.    1.47974 (4) obj. -201.194 iterations 11
Cbc0038I Pass  45: suminf.    1.47974 (4) obj. -201.194 iterations 3
Cbc0038I Pass  46: suminf.    0.83589 (2) obj. -201.194 iterations 6
Cbc0038I Pass  47: suminf.    0.70976 (2) obj. -201.194 iterations 2
Cbc0038I Pass  48: suminf.    1.85630 (10) obj. -201.194 iterations 13
Cbc0038I Pass  49: suminf.    1.85630 (10) obj. -201.194 iterations 0
Cbc0038I Pass  50: suminf.    0.28668 (1) obj. -201.194 iterations 13
Cbc0038I Pass  51: suminf.    0.25000 (1) obj. -208.25 iterations 1
Cbc0038I Pass  52: suminf.    2.03686 (7) obj. -218.485 iterations 8
Cbc0038I Pass  53: suminf.    2.03686 (7) obj. -218.485 iterations 2
Cbc0038I Pass  54: suminf.    2.88578 (8) obj. -201.194 iterations 5
Cbc0038I Pass  55: suminf.    1.98924 (8) obj. -201.194 iterations 5
Cbc0038I Pass  56: suminf.    1.88705 (8) obj. -201.194 iterations 7
Cbc0038I Pass  57: suminf.    0.39157 (2) obj. -201.194 iterations 9
Cbc0038I Pass  58: suminf.    0.31556 (2) obj. -220.374 iterations 2
Cbc0038I Pass  59: suminf.    0.40316 (2) obj. -201.194 iterations 2
Cbc0038I Pass  60: suminf.    0.40316 (2) obj. -201.194 iterations 0
Cbc0038I Pass  61: suminf.    2.29653 (7) obj. -201.194 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 52 columns, reduced to 32 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -167.333 - took 0.04 seconds
Cbc0012I Integer solution of -167.333 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 53 rows 52 columns, reduced to 36 rows 36 columns
Cbc0031I 15 added rows had average density of 13.066667
Cbc0013I At root node, 15 cuts changed objective from -292.5524 to -202.00063 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 731 row cuts average 2.9 elements, 18 column cuts (18 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 433 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 92 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.773 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -167.333 best solution, best possible -202.00063 (1.58 seconds)
Cbc0001I Search completed - best objective -167.333, took 1383 iterations and 6 nodes (1.73 seconds)
Cbc0032I Strong branching done 122 times (914 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 7 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.73

