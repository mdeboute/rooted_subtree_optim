Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 97 (-6) columns and 536 (-67) elements
Clp1000I sum of infeasibilities 0.000308184 - average 1.76105e-06, 23 fixed columns
Coin0506I Presolve 126 (-49) rows, 72 (-25) columns and 388 (-148) elements
Clp0029I End of values pass after 72 iterations
Clp0000I Optimal - objective value 60.82397
Clp0000I Optimal - objective value 60.82397
Coin0511I After Postsolve, objective 60.82397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.82397
Clp0000I Optimal - objective value 60.82397
Clp0000I Optimal - objective value 60.82397
Coin0511I After Postsolve, objective 60.82397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.82396981 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 174 rows, 97 columns (96 integer (96 of which binary)) and 549 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.063%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 6.83912
Cbc0038I Solution found of -6.03202
Cbc0038I Relaxing continuous gives -11.932
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 97 columns, reduced to 77 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -11.932 to -39.4483 (0.05 seconds)
Cbc0038I Round again with cutoff of -41.5859
Cbc0038I Pass   1: suminf.    2.73253 (19) obj. -41.5859 iterations 74
Cbc0038I Pass   2: suminf.    1.99767 (10) obj. -41.5859 iterations 20
Cbc0038I Pass   3: suminf.    2.42915 (8) obj. -41.5859 iterations 11
Cbc0038I Pass   4: suminf.    1.99348 (10) obj. -41.5859 iterations 12
Cbc0038I Pass   5: suminf.    2.29760 (9) obj. -41.5859 iterations 8
Cbc0038I Pass   6: suminf.    3.71025 (15) obj. -41.5859 iterations 26
Cbc0038I Pass   7: suminf.    1.78663 (7) obj. -41.5859 iterations 20
Cbc0038I Pass   8: suminf.    2.53226 (9) obj. -41.5859 iterations 13
Cbc0038I Pass   9: suminf.    2.19841 (7) obj. -41.5859 iterations 12
Cbc0038I Pass  10: suminf.    3.02932 (12) obj. -41.5859 iterations 8
Cbc0038I Pass  11: suminf.    2.60374 (13) obj. -41.5859 iterations 10
Cbc0038I Pass  12: suminf.    4.14220 (11) obj. -41.5859 iterations 13
Cbc0038I Pass  13: suminf.    2.24450 (6) obj. -41.5859 iterations 10
Cbc0038I Pass  14: suminf.    1.85048 (9) obj. -41.5859 iterations 14
Cbc0038I Pass  15: suminf.    2.52372 (9) obj. -41.5859 iterations 11
Cbc0038I Pass  16: suminf.    1.87388 (7) obj. -41.5859 iterations 7
Cbc0038I Pass  17: suminf.    1.83992 (9) obj. -41.5859 iterations 3
Cbc0038I Pass  18: suminf.    2.20757 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  19: suminf.    1.85048 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  20: suminf.    2.52372 (9) obj. -41.5859 iterations 11
Cbc0038I Pass  21: suminf.    1.87388 (7) obj. -41.5859 iterations 7
Cbc0038I Pass  22: suminf.    1.83992 (9) obj. -41.5859 iterations 3
Cbc0038I Pass  23: suminf.    2.20757 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  24: suminf.    1.85048 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  25: suminf.    2.52372 (9) obj. -41.5859 iterations 11
Cbc0038I Pass  26: suminf.    1.87388 (7) obj. -41.5859 iterations 7
Cbc0038I Pass  27: suminf.    1.83992 (9) obj. -41.5859 iterations 3
Cbc0038I Pass  28: suminf.    2.20757 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  29: suminf.    1.85048 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  30: suminf.    2.52372 (9) obj. -41.5859 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 97 columns, reduced to 92 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -39.4483 - took 0.08 seconds
Cbc0012I Integer solution of -39.44826 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 174 rows 97 columns, reduced to 77 rows 47 columns
Cbc0031I 28 added rows had average density of 63.785714
Cbc0013I At root node, 28 cuts changed objective from -60.82397 to -54.178283 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12657 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1705 row cuts average 97.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 213 row cuts average 96.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.44826 best solution, best possible -54.178283 (1.30 seconds)
Cbc0038I Full problem 174 rows 97 columns, reduced to 59 rows 36 columns
Cbc0001I Search completed - best objective -39.44826, took 10821 iterations and 80 nodes (1.71 seconds)
Cbc0032I Strong branching done 920 times (18186 iterations), fathomed 4 nodes and fixed 43 variables
Cbc0035I Maximum depth 28, 252 variables fixed on reduced cost
Total time (CPU seconds):       1.64   (Wallclock seconds):       1.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-81) rows, 140 (-62) columns and 2585 (-3068) elements
Clp1000I sum of infeasibilities 1.08043e-06 - average 8.78399e-09, 85 fixed columns
Coin0506I Presolve 41 (-82) rows, 55 (-85) columns and 187 (-2398) elements
Clp0006I 0  Obj 42.36026 Dual inf 2.39883 (55)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 2.886096 - largest nonzero change 1.8243863e-05 ( 0.00037904981%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 43.116847
Clp0000I Optimal - objective value 43.116847
Coin0511I After Postsolve, objective 43.116847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 43.116847 Dual inf 102.42141 (53)
Clp0014I Perturbing problem by 0.001% of 1.3913658 - largest nonzero change 2.538961e-05 ( 0.0016756202%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 105.8126
Clp0000I Optimal - objective value 105.8126
Clp0000I Optimal - objective value 105.8126
Coin0511I After Postsolve, objective 105.8126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.8125983 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 49 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 140 columns (140 integer (140 of which binary)) and 2598 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.182%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 13.7476
Cbc0038I Pass   1: suminf.    1.67382 (24) obj. -36.639 iterations 38
Cbc0038I Pass   2: suminf.    1.67382 (24) obj. -36.639 iterations 0
Cbc0038I Pass   3: suminf.    0.12816 (4) obj. -12.1778 iterations 25
Cbc0038I Solution found of -8.30591
Cbc0038I Rounding solution of -20.2105 is better than previous of -8.30591

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 140 columns, reduced to 31 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -20.2105 to -44.3081 (0.05 seconds)
Cbc0038I Round again with cutoff of -47.7286
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.24566 (41) obj. -47.7286 iterations 27
Cbc0038I Pass   5: suminf.    1.88853 (41) obj. -47.7286 iterations 5
Cbc0038I Pass   6: suminf.    1.44813 (31) obj. -47.7286 iterations 4
Cbc0038I Pass   7: suminf.    6.34607 (24) obj. -47.7286 iterations 50
Cbc0038I Pass   8: suminf.    6.14469 (24) obj. -47.7286 iterations 2
Cbc0038I Pass   9: suminf.    1.79061 (8) obj. -47.7286 iterations 44
Cbc0038I Pass  10: suminf.    1.79061 (8) obj. -47.7286 iterations 1
Cbc0038I Pass  11: suminf.    1.32971 (6) obj. -47.7286 iterations 10
Cbc0038I Pass  12: suminf.    1.32971 (6) obj. -47.7286 iterations 2
Cbc0038I Pass  13: suminf.    0.79445 (3) obj. -47.7286 iterations 22
Cbc0038I Pass  14: suminf.    0.56870 (5) obj. -47.7286 iterations 15
Cbc0038I Pass  15: suminf.    0.80002 (7) obj. -47.7286 iterations 14
Cbc0038I Pass  16: suminf.    0.65404 (3) obj. -47.7286 iterations 12
Cbc0038I Pass  17: suminf.    0.67339 (3) obj. -47.7286 iterations 13
Cbc0038I Pass  18: suminf.    5.32027 (19) obj. -47.7286 iterations 30
Cbc0038I Pass  19: suminf.    5.32027 (19) obj. -47.7286 iterations 5
Cbc0038I Pass  20: suminf.    1.67995 (9) obj. -47.7286 iterations 44
Cbc0038I Pass  21: suminf.    1.67995 (9) obj. -47.7286 iterations 0
Cbc0038I Pass  22: suminf.    1.85937 (7) obj. -47.7286 iterations 13
Cbc0038I Pass  23: suminf.    1.29910 (8) obj. -47.7286 iterations 15
Cbc0038I Pass  24: suminf.    1.77600 (12) obj. -47.7286 iterations 10
Cbc0038I Pass  25: suminf.    1.18973 (5) obj. -47.7286 iterations 16
Cbc0038I Pass  26: suminf.    1.37885 (4) obj. -47.7286 iterations 13
Cbc0038I Pass  27: suminf.    1.30390 (6) obj. -47.7286 iterations 17
Cbc0038I Pass  28: suminf.    0.99503 (9) obj. -47.7286 iterations 13
Cbc0038I Pass  29: suminf.    0.90271 (9) obj. -47.7286 iterations 18
Cbc0038I Pass  30: suminf.    1.85673 (7) obj. -47.7286 iterations 15
Cbc0038I Pass  31: suminf.    1.29910 (8) obj. -47.7286 iterations 14
Cbc0038I Pass  32: suminf.    1.77600 (12) obj. -47.7286 iterations 9
Cbc0038I Pass  33: suminf.    1.18973 (5) obj. -47.7286 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 140 columns, reduced to 57 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -44.3081 - took 0.05 seconds
Cbc0012I Integer solution of -44.3081 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 122 rows 140 columns, reduced to 4 rows 3 columns
Cbc0031I 42 added rows had average density of 43.785714
Cbc0013I At root node, 42 cuts changed objective from -78.511964 to -47.341164 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 1033 row cuts average 3.1 elements, 4 column cuts (4 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 249 row cuts average 33.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 423 row cuts average 51.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -44.3081 best solution, best possible -47.341164 (0.41 seconds)
Cbc0016I Integer solution of -44.57147 found by strong branching after 757 iterations and 15 nodes (0.68 seconds)
Cbc0001I Search completed - best objective -44.57147000000001, took 1158 iterations and 26 nodes (0.69 seconds)
Cbc0032I Strong branching done 424 times (8217 iterations), fathomed 2 nodes and fixed 9 variables
Cbc0035I Maximum depth 12, 62 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 97 (-6) columns and 536 (-67) elements
Clp1000I sum of infeasibilities 0.000308184 - average 1.76105e-06, 23 fixed columns
Coin0506I Presolve 126 (-49) rows, 72 (-25) columns and 388 (-148) elements
Clp0029I End of values pass after 72 iterations
Clp0000I Optimal - objective value 60.82397
Clp0000I Optimal - objective value 60.82397
Coin0511I After Postsolve, objective 60.82397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.82397
Clp0000I Optimal - objective value 60.82397
Clp0000I Optimal - objective value 60.82397
Coin0511I After Postsolve, objective 60.82397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.82396981 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 174 rows, 97 columns (96 integer (96 of which binary)) and 549 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.063%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 6.83912
Cbc0038I Solution found of -6.03202
Cbc0038I Relaxing continuous gives -11.932
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 97 columns, reduced to 77 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -11.932 to -39.4483 (0.05 seconds)
Cbc0038I Round again with cutoff of -41.5859
Cbc0038I Pass   1: suminf.    2.73253 (19) obj. -41.5859 iterations 74
Cbc0038I Pass   2: suminf.    1.99767 (10) obj. -41.5859 iterations 20
Cbc0038I Pass   3: suminf.    2.42915 (8) obj. -41.5859 iterations 11
Cbc0038I Pass   4: suminf.    1.99348 (10) obj. -41.5859 iterations 12
Cbc0038I Pass   5: suminf.    2.29760 (9) obj. -41.5859 iterations 8
Cbc0038I Pass   6: suminf.    3.71025 (15) obj. -41.5859 iterations 26
Cbc0038I Pass   7: suminf.    1.78663 (7) obj. -41.5859 iterations 20
Cbc0038I Pass   8: suminf.    2.53226 (9) obj. -41.5859 iterations 13
Cbc0038I Pass   9: suminf.    2.19841 (7) obj. -41.5859 iterations 12
Cbc0038I Pass  10: suminf.    3.02932 (12) obj. -41.5859 iterations 8
Cbc0038I Pass  11: suminf.    2.60374 (13) obj. -41.5859 iterations 10
Cbc0038I Pass  12: suminf.    4.14220 (11) obj. -41.5859 iterations 13
Cbc0038I Pass  13: suminf.    2.24450 (6) obj. -41.5859 iterations 10
Cbc0038I Pass  14: suminf.    1.85048 (9) obj. -41.5859 iterations 14
Cbc0038I Pass  15: suminf.    2.52372 (9) obj. -41.5859 iterations 11
Cbc0038I Pass  16: suminf.    1.87388 (7) obj. -41.5859 iterations 7
Cbc0038I Pass  17: suminf.    1.83992 (9) obj. -41.5859 iterations 3
Cbc0038I Pass  18: suminf.    2.20757 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  19: suminf.    1.85048 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  20: suminf.    2.52372 (9) obj. -41.5859 iterations 11
Cbc0038I Pass  21: suminf.    1.87388 (7) obj. -41.5859 iterations 7
Cbc0038I Pass  22: suminf.    1.83992 (9) obj. -41.5859 iterations 3
Cbc0038I Pass  23: suminf.    2.20757 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  24: suminf.    1.85048 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  25: suminf.    2.52372 (9) obj. -41.5859 iterations 11
Cbc0038I Pass  26: suminf.    1.87388 (7) obj. -41.5859 iterations 7
Cbc0038I Pass  27: suminf.    1.83992 (9) obj. -41.5859 iterations 3
Cbc0038I Pass  28: suminf.    2.20757 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  29: suminf.    1.85048 (9) obj. -41.5859 iterations 8
Cbc0038I Pass  30: suminf.    2.52372 (9) obj. -41.5859 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 97 columns, reduced to 92 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -39.4483 - took 0.08 seconds
Cbc0012I Integer solution of -39.44826 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 174 rows 97 columns, reduced to 77 rows 47 columns
Cbc0031I 28 added rows had average density of 63.785714
Cbc0013I At root node, 28 cuts changed objective from -60.82397 to -54.178283 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12657 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1705 row cuts average 97.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 213 row cuts average 96.6 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.44826 best solution, best possible -54.178283 (1.10 seconds)
Cbc0038I Full problem 174 rows 97 columns, reduced to 59 rows 36 columns
Cbc0001I Search completed - best objective -39.44826, took 10821 iterations and 80 nodes (1.50 seconds)
Cbc0032I Strong branching done 920 times (18186 iterations), fathomed 4 nodes and fixed 43 variables
Cbc0035I Maximum depth 28, 252 variables fixed on reduced cost
Total time (CPU seconds):       1.47   (Wallclock seconds):       1.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-83) rows, 139 (-64) columns and 2539 (-3115) elements
Clp1000I sum of infeasibilities 3.87329e-06 - average 3.17483e-08, 25 fixed columns
Coin0506I Presolve 97 (-25) rows, 113 (-26) columns and 1801 (-738) elements
Clp0006I 0  Obj 62.344266 Dual inf 14.627333 (113)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.7854242 - largest nonzero change 1.7158065e-05 ( 0.001262127%) - largest zero change 2.9812852e-05
Clp0000I Optimal - objective value 70.894316
Clp0000I Optimal - objective value 70.894316
Coin0511I After Postsolve, objective 70.894316, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.894316
Clp0000I Optimal - objective value 70.894316
Clp0000I Optimal - objective value 70.894316
Clp0000I Optimal - objective value 70.894316
Coin0511I After Postsolve, objective 70.894316, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.89431596 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 139 columns (139 integer (139 of which binary)) and 2552 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.63914
Cbc0038I Pass   1: suminf.    1.27280 (25) obj. -31.1669 iterations 29
Cbc0038I Pass   2: suminf.    1.27280 (25) obj. -31.1669 iterations 1
Cbc0038I Solution found of -3.64608
Cbc0038I Rounding solution of -12.7027 is better than previous of -3.64608

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 139 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -16.8989
Cbc0038I Pass   3: suminf.    1.27280 (25) obj. -31.1669 iterations 0
Cbc0038I Pass   4: suminf.    1.27280 (25) obj. -31.1669 iterations 1
Cbc0038I Pass   5: suminf.    0.62824 (10) obj. -16.8989 iterations 18
Cbc0038I Pass   6: suminf.    1.11396 (12) obj. -16.8989 iterations 16
Cbc0038I Pass   7: suminf.    1.11396 (12) obj. -16.8989 iterations 1
Cbc0038I Pass   8: suminf.    0.85869 (4) obj. -16.8989 iterations 29
Cbc0038I Pass   9: suminf.    0.69750 (6) obj. -16.8989 iterations 12
Cbc0038I Pass  10: suminf.    0.87824 (5) obj. -16.8989 iterations 12
Cbc0038I Pass  11: suminf.    1.99497 (14) obj. -16.8989 iterations 26
Cbc0038I Pass  12: suminf.    1.56470 (14) obj. -16.8989 iterations 10
Cbc0038I Pass  13: suminf.    0.86694 (5) obj. -16.8989 iterations 26
Cbc0038I Pass  14: suminf.    0.86694 (5) obj. -16.8989 iterations 1
Cbc0038I Pass  15: suminf.    0.73319 (4) obj. -16.8989 iterations 17
Cbc0038I Pass  16: suminf.    0.69750 (6) obj. -16.8989 iterations 9
Cbc0038I Pass  17: suminf.    0.87824 (5) obj. -16.8989 iterations 12
Cbc0038I Pass  18: suminf.    1.04470 (9) obj. -16.8989 iterations 29
Cbc0038I Pass  19: suminf.    0.87383 (10) obj. -16.8989 iterations 16
Cbc0038I Pass  20: suminf.    0.82601 (5) obj. -16.8989 iterations 20
Cbc0038I Pass  21: suminf.    0.44887 (7) obj. -16.8989 iterations 14
Cbc0038I Pass  22: suminf.    1.58180 (5) obj. -16.8989 iterations 12
Cbc0038I Pass  23: suminf.    1.48135 (6) obj. -16.8989 iterations 7
Cbc0038I Pass  24: suminf.    1.66716 (6) obj. -16.8989 iterations 8
Cbc0038I Pass  25: suminf.    0.61051 (3) obj. -16.8989 iterations 14
Cbc0038I Pass  26: suminf.    0.21198 (3) obj. -17.696 iterations 9
Cbc0038I Pass  27: suminf.    1.51919 (5) obj. -16.8989 iterations 10
Cbc0038I Pass  28: suminf.    2.38740 (16) obj. -16.8989 iterations 25
Cbc0038I Pass  29: suminf.    1.50238 (10) obj. -16.8989 iterations 12
Cbc0038I Pass  30: suminf.    1.52926 (6) obj. -16.8989 iterations 29
Cbc0038I Pass  31: suminf.    1.00628 (5) obj. -16.8989 iterations 5
Cbc0038I Pass  32: suminf.    0.66576 (6) obj. -16.8989 iterations 8
Cbc0038I Rounding solution of -34.3634 is better than previous of -12.7027

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 139 columns, reduced to 45 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -34.3634 to -35.0228 (0.10 seconds)
Cbc0038I Round again with cutoff of -38.9512
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.25587 (36) obj. -38.9512 iterations 4
Cbc0038I Pass  33: suminf.    1.63623 (26) obj. -38.9512 iterations 4
Cbc0038I Pass  34: suminf.    1.55852 (26) obj. -39.9015 iterations 3
Cbc0038I Pass  35: suminf.    2.35243 (22) obj. -38.9512 iterations 47
Cbc0038I Pass  36: suminf.    2.01884 (23) obj. -38.9512 iterations 1
Cbc0038I Pass  37: suminf.    2.35243 (22) obj. -38.9512 iterations 19
Cbc0038I Pass  38: suminf.    1.76083 (22) obj. -38.9512 iterations 9
Cbc0038I Pass  39: suminf.    1.76083 (22) obj. -38.9512 iterations 6
Cbc0038I Pass  40: suminf.    2.31193 (23) obj. -38.9512 iterations 28
Cbc0038I Pass  41: suminf.    2.16647 (23) obj. -38.9512 iterations 4
Cbc0038I Pass  42: suminf.    2.35243 (22) obj. -38.9512 iterations 15
Cbc0038I Pass  43: suminf.    2.09037 (24) obj. -38.9512 iterations 24
Cbc0038I Pass  44: suminf.    2.00083 (22) obj. -38.9512 iterations 2
Cbc0038I Pass  45: suminf.    2.31193 (23) obj. -38.9512 iterations 31
Cbc0038I Pass  46: suminf.    2.08775 (23) obj. -38.9512 iterations 3
Cbc0038I Pass  47: suminf.    2.35243 (22) obj. -38.9512 iterations 22
Cbc0038I Pass  48: suminf.    2.16647 (23) obj. -38.9512 iterations 8
Cbc0038I Pass  49: suminf.    1.99131 (22) obj. -38.9512 iterations 19
Cbc0038I Pass  50: suminf.    1.77276 (24) obj. -38.9512 iterations 10
Cbc0038I Pass  51: suminf.    1.95740 (23) obj. -38.9512 iterations 22
Cbc0038I Pass  52: suminf.    3.27565 (27) obj. -38.9512 iterations 14
Cbc0038I Pass  53: suminf.    2.10696 (24) obj. -38.9512 iterations 17
Cbc0038I Pass  54: suminf.    2.27430 (22) obj. -38.9512 iterations 17
Cbc0038I Pass  55: suminf.    2.27430 (22) obj. -38.9512 iterations 1
Cbc0038I Pass  56: suminf.    1.89337 (21) obj. -38.9512 iterations 21
Cbc0038I Pass  57: suminf.    1.75401 (22) obj. -38.9512 iterations 7
Cbc0038I Pass  58: suminf.    3.13721 (23) obj. -38.9512 iterations 17
Cbc0038I Pass  59: suminf.    3.03408 (24) obj. -38.9512 iterations 5
Cbc0038I Pass  60: suminf.    2.35243 (22) obj. -38.9512 iterations 18
Cbc0038I Pass  61: suminf.    2.08086 (23) obj. -38.9512 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -35.0228 - took 0.08 seconds
Cbc0012I Integer solution of -35.02276 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 121 rows 139 columns, reduced to 28 rows 34 columns
Cbc0031I 57 added rows had average density of 17.982456
Cbc0013I At root node, 57 cuts changed objective from -54.664465 to -41.177711 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15134 row cuts average 2.0 elements, 4 column cuts (42 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1189 row cuts average 126.5 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 409 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 414 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 379 row cuts average 82.9 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 392 row cuts average 56.6 elements, 0 column cuts (0 active)  in 0.776 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.02276 best solution, best possible -41.177711 (2.63 seconds)
Cbc0012I Integer solution of -35.60998 found by rounding after 5589 iterations and 1 nodes (2.63 seconds)
Cbc0012I Integer solution of -39.09946 found by rounding after 5727 iterations and 2 nodes (2.77 seconds)
Cbc0012I Integer solution of -39.44826 found by DiveCoefficient after 5727 iterations and 2 nodes (2.77 seconds)
Cbc0010I After 9 nodes, 1 on tree, -39.44826 best solution, best possible -41.164792 (3.39 seconds)
Cbc0001I Search completed - best objective -39.44826, took 6836 iterations and 12 nodes (3.52 seconds)
Cbc0032I Strong branching done 306 times (7474 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 88 variables fixed on reduced cost
Total time (CPU seconds):       2.60   (Wallclock seconds):       3.54

