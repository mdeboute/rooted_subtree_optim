Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 72 (-6) columns and 388 (-65) elements
Clp1000I sum of infeasibilities 0.000603336 - average 4.78838e-06, 19 fixed columns
Coin0506I Presolve 86 (-40) rows, 51 (-21) columns and 266 (-122) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Coin0511I After Postsolve, objective 62.000931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Coin0511I After Postsolve, objective 62.000931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.00093105 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 72 columns (71 integer (71 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.437%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.85214
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.34519 iterations 40
Cbc0038I Solution found of -6.34519
Cbc0038I Relaxing continuous gives -6.34519
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 50 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -6.34519 to -33.1273 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.989
Cbc0038I Pass   2: suminf.    1.81530 (7) obj. -35.989 iterations 11
Cbc0038I Pass   3: suminf.    0.99867 (4) obj. -35.989 iterations 7
Cbc0038I Pass   4: suminf.    0.90987 (5) obj. -35.989 iterations 3
Cbc0038I Pass   5: suminf.    0.78828 (5) obj. -35.989 iterations 12
Cbc0038I Pass   6: suminf.    0.64070 (2) obj. -35.989 iterations 5
Cbc0038I Pass   7: suminf.    0.64070 (2) obj. -35.989 iterations 2
Cbc0038I Pass   8: suminf.    0.75252 (2) obj. -35.989 iterations 3
Cbc0038I Pass   9: suminf.    0.74653 (4) obj. -35.989 iterations 11
Cbc0038I Pass  10: suminf.    0.39853 (3) obj. -35.989 iterations 9
Cbc0038I Pass  11: suminf.    0.78769 (4) obj. -35.989 iterations 9
Cbc0038I Pass  12: suminf.    0.53030 (3) obj. -35.989 iterations 2
Cbc0038I Pass  13: suminf.    0.54237 (2) obj. -35.989 iterations 8
Cbc0038I Pass  14: suminf.    0.48521 (2) obj. -35.989 iterations 3
Cbc0038I Pass  15: suminf.    1.69685 (8) obj. -35.989 iterations 12
Cbc0038I Pass  16: suminf.    1.14708 (4) obj. -35.989 iterations 14
Cbc0038I Pass  17: suminf.    0.53843 (2) obj. -35.989 iterations 10
Cbc0038I Pass  18: suminf.    0.39689 (3) obj. -35.989 iterations 5
Cbc0038I Pass  19: suminf.    1.02668 (4) obj. -35.989 iterations 5
Cbc0038I Pass  20: suminf.    0.83630 (3) obj. -35.989 iterations 2
Cbc0038I Pass  21: suminf.    0.55755 (3) obj. -35.989 iterations 5
Cbc0038I Pass  22: suminf.    2.48259 (7) obj. -35.989 iterations 24
Cbc0038I Pass  23: suminf.    0.79109 (5) obj. -35.989 iterations 9
Cbc0038I Pass  24: suminf.    0.66103 (5) obj. -35.989 iterations 3
Cbc0038I Pass  25: suminf.    0.90917 (4) obj. -35.989 iterations 14
Cbc0038I Pass  26: suminf.    0.62231 (3) obj. -35.989 iterations 4
Cbc0038I Pass  27: suminf.    0.60486 (3) obj. -35.989 iterations 8
Cbc0038I Pass  28: suminf.    0.59595 (3) obj. -35.989 iterations 3
Cbc0038I Pass  29: suminf.    0.65171 (3) obj. -35.989 iterations 9
Cbc0038I Pass  30: suminf.    1.69008 (8) obj. -35.989 iterations 15
Cbc0038I Pass  31: suminf.    1.65596 (5) obj. -35.989 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -33.1273 to -35.1523 (0.06 seconds)
Cbc0038I Round again with cutoff of -41.1399
Cbc0038I Pass  31: suminf.    2.18764 (9) obj. -41.1399 iterations 2
Cbc0038I Pass  32: suminf.    1.63111 (6) obj. -41.1399 iterations 10
Cbc0038I Pass  33: suminf.    1.63111 (6) obj. -41.1399 iterations 0
Cbc0038I Pass  34: suminf.    1.85557 (6) obj. -41.1399 iterations 9
Cbc0038I Pass  35: suminf.    1.70685 (6) obj. -41.1399 iterations 9
Cbc0038I Pass  36: suminf.    2.00510 (6) obj. -41.1399 iterations 11
Cbc0038I Pass  37: suminf.    1.71619 (6) obj. -41.1399 iterations 16
Cbc0038I Pass  38: suminf.    1.31369 (5) obj. -41.1399 iterations 9
Cbc0038I Pass  39: suminf.    0.84800 (4) obj. -41.1399 iterations 15
Cbc0038I Pass  40: suminf.    0.76065 (3) obj. -41.1399 iterations 5
Cbc0038I Pass  41: suminf.    2.17906 (6) obj. -41.1399 iterations 15
Cbc0038I Pass  42: suminf.    1.57870 (6) obj. -41.1399 iterations 18
Cbc0038I Pass  43: suminf.    1.69721 (4) obj. -41.1399 iterations 10
Cbc0038I Pass  44: suminf.    1.69785 (4) obj. -41.1399 iterations 4
Cbc0038I Pass  45: suminf.    1.69363 (4) obj. -41.1399 iterations 1
Cbc0038I Pass  46: suminf.    1.13263 (4) obj. -41.1399 iterations 3
Cbc0038I Pass  47: suminf.    1.10365 (4) obj. -41.1399 iterations 2
Cbc0038I Pass  48: suminf.    1.87275 (5) obj. -41.1399 iterations 9
Cbc0038I Pass  49: suminf.    1.78316 (6) obj. -41.1399 iterations 4
Cbc0038I Pass  50: suminf.    1.83378 (6) obj. -41.1399 iterations 7
Cbc0038I Pass  51: suminf.    1.38946 (5) obj. -41.1399 iterations 11
Cbc0038I Pass  52: suminf.    1.38894 (6) obj. -41.1399 iterations 1
Cbc0038I Pass  53: suminf.    1.78104 (5) obj. -41.1399 iterations 18
Cbc0038I Pass  54: suminf.    1.62717 (5) obj. -41.1399 iterations 6
Cbc0038I Pass  55: suminf.    0.87977 (3) obj. -41.1399 iterations 16
Cbc0038I Pass  56: suminf.    0.79203 (3) obj. -41.1399 iterations 3
Cbc0038I Pass  57: suminf.    1.04595 (4) obj. -41.1399 iterations 9
Cbc0038I Pass  58: suminf.    1.04595 (4) obj. -41.1399 iterations 0
Cbc0038I Pass  59: suminf.    1.07715 (5) obj. -41.1399 iterations 10
Cbc0038I Pass  60: suminf.    1.07715 (5) obj. -41.1399 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 54 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -35.1523 - took 0.07 seconds
Cbc0012I Integer solution of -35.15233 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 125 rows 72 columns, reduced to 52 rows 32 columns
Cbc0031I 19 added rows had average density of 47.315789
Cbc0013I At root node, 19 cuts changed objective from -61.743571 to -53.897581 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9221 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1472 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 71.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.15233 best solution, best possible -53.897581 (0.68 seconds)
Cbc0001I Search completed - best objective -35.15232999999999, took 8016 iterations and 40 nodes (0.87 seconds)
Cbc0032I Strong branching done 488 times (9699 iterations), fathomed 2 nodes and fixed 48 variables
Cbc0035I Maximum depth 9, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 117 (-35) columns and 1864 (-1439) elements
Clp1000I sum of infeasibilities 2.69885e-08 - average 2.67212e-10, 96 fixed columns
Coin0506I Presolve 15 (-86) rows, 21 (-96) columns and 66 (-1798) elements
Clp0006I 0  Obj 51.325815 Dual inf 3.7883206 (21)
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 1.680791 - largest nonzero change 2.3042219e-05 ( 0.0016580886%) - largest zero change 2.5722688e-05
Clp0000I Optimal - objective value 51.371832
Clp0000I Optimal - objective value 51.371832
Coin0511I After Postsolve, objective 51.371832, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.371832 Dual inf 53.235054 (45)
Clp0014I Perturbing problem by 0.001% of 1.3993567 - largest nonzero change 1.2172936e-05 ( 0.0010393299%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 115.90275
Clp0000I Optimal - objective value 115.90275
Clp0000I Optimal - objective value 115.90275
Coin0511I After Postsolve, objective 115.90275, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.9027504 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 117 columns (117 integer (117 of which binary)) and 1884 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.427%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.84122
Cbc0038I Pass   1: suminf.    1.17360 (18) obj. -68.0234 iterations 27
Cbc0038I Pass   2: suminf.    1.17360 (18) obj. -68.0234 iterations 0
Cbc0038I Pass   3: suminf.    0.25546 (5) obj. -53.155 iterations 13
Cbc0038I Solution found of 23.4972
Cbc0038I Rounding solution of 10.0664 is better than previous of 23.4972

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 1.16445
Cbc0038I Pass   4: suminf.    1.17360 (18) obj. -68.0234 iterations 0
Cbc0038I Pass   5: suminf.    1.17360 (18) obj. -68.0234 iterations 0
Cbc0038I Pass   6: suminf.    0.31951 (6) obj. -54.091 iterations 12
Cbc0038I Pass   7: suminf.    0.31018 (1) obj. 1.16445 iterations 6
Cbc0038I Pass   8: suminf.    0.02703 (1) obj. -46.5568 iterations 1
Cbc0038I Pass   9: suminf.    1.79669 (12) obj. -11.3958 iterations 20
Cbc0038I Pass  10: suminf.    0.47894 (8) obj. -0.573827 iterations 11
Cbc0038I Pass  11: suminf.    0.18460 (3) obj. 1.16445 iterations 11
Cbc0038I Pass  12: suminf.    0.97571 (3) obj. -3.75274 iterations 4
Cbc0038I Pass  13: suminf.    0.97571 (3) obj. -3.75274 iterations 0
Cbc0038I Pass  14: suminf.    0.75429 (3) obj. 1.16445 iterations 17
Cbc0038I Pass  15: suminf.    1.40899 (3) obj. -27.5141 iterations 5
Cbc0038I Pass  16: suminf.    0.02703 (1) obj. -45.5568 iterations 3
Cbc0038I Pass  17: suminf.    0.32407 (1) obj. 1.16445 iterations 1
Cbc0038I Pass  18: suminf.    0.66833 (15) obj. -12.4729 iterations 30
Cbc0038I Pass  19: suminf.    0.55723 (12) obj. -12.6946 iterations 5
Cbc0038I Pass  20: suminf.    0.17963 (4) obj. 1.16445 iterations 17
Cbc0038I Pass  21: suminf.    0.05849 (2) obj. 1.16445 iterations 2
Cbc0038I Pass  22: suminf.    0.64785 (3) obj. 1.16445 iterations 11
Cbc0038I Pass  23: suminf.    1.06309 (3) obj. -27.3989 iterations 4
Cbc0038I Pass  24: suminf.    0.16216 (1) obj. -39.1613 iterations 3
Cbc0038I Pass  25: suminf.    0.27776 (1) obj. 1.16445 iterations 1
Cbc0038I Pass  26: suminf.    1.45295 (11) obj. -6.52162 iterations 23
Cbc0038I Pass  27: suminf.    0.82169 (9) obj. -9.33928 iterations 10
Cbc0038I Pass  28: suminf.    0.06773 (2) obj. 1.16445 iterations 12
Cbc0038I Pass  29: suminf.    0.16216 (1) obj. -40.1613 iterations 1
Cbc0038I Pass  30: suminf.    0.26387 (1) obj. 1.16445 iterations 1
Cbc0038I Pass  31: suminf.    1.08945 (8) obj. -10.49 iterations 20
Cbc0038I Pass  32: suminf.    0.13047 (4) obj. -2.70866 iterations 5
Cbc0038I Pass  33: suminf.    0.05685 (6) obj. 1.16445 iterations 7
Cbc0038I Rounding solution of -21.3028 is better than previous of 10.0664

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 50 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -21.3028 to -36.7976 (0.07 seconds)
Cbc0038I Round again with cutoff of -45.2286
Cbc0038I Pass  33: suminf.    1.17360 (18) obj. -68.0234 iterations 0
Cbc0038I Pass  34: suminf.    1.17360 (18) obj. -68.0234 iterations 0
Cbc0038I Pass  35: suminf.    0.04547 (1) obj. -45.2286 iterations 20
Cbc0038I Pass  36: suminf.    0.02703 (1) obj. -46.5568 iterations 1
Cbc0038I Pass  37: suminf.    1.83727 (11) obj. -45.2286 iterations 22
Cbc0038I Pass  38: suminf.    0.85252 (5) obj. -45.2286 iterations 7
Cbc0038I Pass  39: suminf.    0.78999 (7) obj. -45.2286 iterations 12
Cbc0038I Pass  40: suminf.    0.50563 (7) obj. -45.2286 iterations 2
Cbc0038I Pass  41: suminf.    1.27006 (5) obj. -45.2286 iterations 11
Cbc0038I Pass  42: suminf.    1.27006 (5) obj. -45.2286 iterations 1
Cbc0038I Pass  43: suminf.    0.10452 (3) obj. -45.2286 iterations 9
Cbc0038I Pass  44: suminf.    0.02703 (1) obj. -46.5568 iterations 4
Cbc0038I Pass  45: suminf.    0.04547 (1) obj. -45.2286 iterations 1
Cbc0038I Pass  46: suminf.    1.87112 (8) obj. -45.2286 iterations 21
Cbc0038I Pass  47: suminf.    1.03399 (6) obj. -45.2286 iterations 14
Cbc0038I Pass  48: suminf.    0.50563 (7) obj. -45.2286 iterations 18
Cbc0038I Pass  49: suminf.    0.50563 (7) obj. -45.2286 iterations 0
Cbc0038I Pass  50: suminf.    1.27006 (5) obj. -45.2286 iterations 8
Cbc0038I Pass  51: suminf.    1.27006 (5) obj. -45.2286 iterations 1
Cbc0038I Pass  52: suminf.    0.10452 (3) obj. -45.2286 iterations 9
Cbc0038I Pass  53: suminf.    0.02703 (1) obj. -46.5568 iterations 4
Cbc0038I Pass  54: suminf.    0.04547 (1) obj. -45.2286 iterations 1
Cbc0038I Pass  55: suminf.    3.80992 (15) obj. -45.2286 iterations 23
Cbc0038I Pass  56: suminf.    0.50911 (6) obj. -45.2286 iterations 16
Cbc0038I Pass  57: suminf.    0.41332 (4) obj. -45.2286 iterations 5
Cbc0038I Pass  58: suminf.    0.41332 (4) obj. -45.2286 iterations 0
Cbc0038I Pass  59: suminf.    1.18976 (5) obj. -45.2286 iterations 2
Cbc0038I Pass  60: suminf.    1.56616 (11) obj. -45.2286 iterations 20
Cbc0038I Pass  61: suminf.    0.61482 (5) obj. -45.2286 iterations 23
Cbc0038I Pass  62: suminf.    0.57677 (4) obj. -45.2286 iterations 7
Cbc0038I Rounding solution of -43.6855 is better than previous of -36.7976

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 52 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -55.3457
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.17360 (18) obj. -68.0234 iterations 0
Cbc0038I Pass  63: suminf.    1.17360 (18) obj. -68.0234 iterations 0
Cbc0038I Pass  64: suminf.    1.19497 (7) obj. -55.3457 iterations 26
Cbc0038I Pass  65: suminf.    1.08332 (7) obj. -55.3457 iterations 1
Cbc0038I Pass  66: suminf.    1.19497 (7) obj. -55.3457 iterations 13
Cbc0038I Pass  67: suminf.    1.66832 (11) obj. -55.3457 iterations 14
Cbc0038I Pass  68: suminf.    0.86716 (7) obj. -55.3457 iterations 8
Cbc0038I Pass  69: suminf.    1.19497 (7) obj. -55.3457 iterations 7
Cbc0038I Pass  70: suminf.    1.44145 (11) obj. -55.3457 iterations 9
Cbc0038I Pass  71: suminf.    1.18155 (9) obj. -55.3457 iterations 2
Cbc0038I Pass  72: suminf.    1.19406 (8) obj. -55.3457 iterations 3
Cbc0038I Pass  73: suminf.    1.08093 (7) obj. -55.3457 iterations 2
Cbc0038I Pass  74: suminf.    1.08093 (7) obj. -55.3457 iterations 0
Cbc0038I Pass  75: suminf.    1.19497 (7) obj. -55.3457 iterations 13
Cbc0038I Pass  76: suminf.    1.08332 (7) obj. -55.3457 iterations 1
Cbc0038I Pass  77: suminf.    2.99393 (12) obj. -55.3457 iterations 28
Cbc0038I Pass  78: suminf.    0.88259 (5) obj. -55.5763 iterations 16
Cbc0038I Pass  79: suminf.    0.71188 (7) obj. -55.3457 iterations 4
Cbc0038I Pass  80: suminf.    1.19497 (7) obj. -55.3457 iterations 7
Cbc0038I Pass  81: suminf.    1.92398 (13) obj. -55.3457 iterations 13
Cbc0038I Pass  82: suminf.    0.98114 (8) obj. -55.3457 iterations 5
Cbc0038I Pass  83: suminf.    1.58332 (8) obj. -55.3457 iterations 11
Cbc0038I Pass  84: suminf.    1.58332 (8) obj. -55.3457 iterations 0
Cbc0038I Pass  85: suminf.    1.58093 (8) obj. -55.3457 iterations 1
Cbc0038I Pass  86: suminf.    1.58093 (8) obj. -55.3457 iterations 0
Cbc0038I Pass  87: suminf.    1.58332 (8) obj. -55.3457 iterations 1
Cbc0038I Pass  88: suminf.    1.06443 (10) obj. -55.3457 iterations 9
Cbc0038I Pass  89: suminf.    0.66786 (8) obj. -55.3457 iterations 3
Cbc0038I Pass  90: suminf.    1.58332 (8) obj. -55.3457 iterations 8
Cbc0038I Pass  91: suminf.    1.58332 (8) obj. -55.3457 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 47 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -43.6855 - took 0.08 seconds
Cbc0012I Integer solution of -43.68549 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 99 rows 117 columns, reduced to 47 rows 47 columns
Cbc0031I 45 added rows had average density of 33.888889
Cbc0013I At root node, 45 cuts changed objective from -78.952267 to -52.697886 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 1474 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 275 row cuts average 77.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 103 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 331 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 442 row cuts average 55.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 41.5 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -43.68549 best solution, best possible -52.697886 (0.56 seconds)
Cbc0001I Search completed - best objective -43.68548999999999, took 1069 iterations and 10 nodes (0.70 seconds)
Cbc0032I Strong branching done 260 times (6083 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 72 (-6) columns and 388 (-65) elements
Clp1000I sum of infeasibilities 0.000603336 - average 4.78838e-06, 19 fixed columns
Coin0506I Presolve 86 (-40) rows, 51 (-21) columns and 266 (-122) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Coin0511I After Postsolve, objective 62.000931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Coin0511I After Postsolve, objective 62.000931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.00093105 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 72 columns (71 integer (71 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.437%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.85214
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.34519 iterations 40
Cbc0038I Solution found of -6.34519
Cbc0038I Relaxing continuous gives -6.34519
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 50 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -6.34519 to -33.1273 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.989
Cbc0038I Pass   2: suminf.    1.81530 (7) obj. -35.989 iterations 11
Cbc0038I Pass   3: suminf.    0.99867 (4) obj. -35.989 iterations 7
Cbc0038I Pass   4: suminf.    0.90987 (5) obj. -35.989 iterations 3
Cbc0038I Pass   5: suminf.    0.78828 (5) obj. -35.989 iterations 12
Cbc0038I Pass   6: suminf.    0.64070 (2) obj. -35.989 iterations 5
Cbc0038I Pass   7: suminf.    0.64070 (2) obj. -35.989 iterations 2
Cbc0038I Pass   8: suminf.    0.75252 (2) obj. -35.989 iterations 3
Cbc0038I Pass   9: suminf.    0.74653 (4) obj. -35.989 iterations 11
Cbc0038I Pass  10: suminf.    0.39853 (3) obj. -35.989 iterations 9
Cbc0038I Pass  11: suminf.    0.78769 (4) obj. -35.989 iterations 9
Cbc0038I Pass  12: suminf.    0.53030 (3) obj. -35.989 iterations 2
Cbc0038I Pass  13: suminf.    0.54237 (2) obj. -35.989 iterations 8
Cbc0038I Pass  14: suminf.    0.48521 (2) obj. -35.989 iterations 3
Cbc0038I Pass  15: suminf.    1.69685 (8) obj. -35.989 iterations 12
Cbc0038I Pass  16: suminf.    1.14708 (4) obj. -35.989 iterations 14
Cbc0038I Pass  17: suminf.    0.53843 (2) obj. -35.989 iterations 10
Cbc0038I Pass  18: suminf.    0.39689 (3) obj. -35.989 iterations 5
Cbc0038I Pass  19: suminf.    1.02668 (4) obj. -35.989 iterations 5
Cbc0038I Pass  20: suminf.    0.83630 (3) obj. -35.989 iterations 2
Cbc0038I Pass  21: suminf.    0.55755 (3) obj. -35.989 iterations 5
Cbc0038I Pass  22: suminf.    2.48259 (7) obj. -35.989 iterations 24
Cbc0038I Pass  23: suminf.    0.79109 (5) obj. -35.989 iterations 9
Cbc0038I Pass  24: suminf.    0.66103 (5) obj. -35.989 iterations 3
Cbc0038I Pass  25: suminf.    0.90917 (4) obj. -35.989 iterations 14
Cbc0038I Pass  26: suminf.    0.62231 (3) obj. -35.989 iterations 4
Cbc0038I Pass  27: suminf.    0.60486 (3) obj. -35.989 iterations 8
Cbc0038I Pass  28: suminf.    0.59595 (3) obj. -35.989 iterations 3
Cbc0038I Pass  29: suminf.    0.65171 (3) obj. -35.989 iterations 9
Cbc0038I Pass  30: suminf.    1.69008 (8) obj. -35.989 iterations 15
Cbc0038I Pass  31: suminf.    1.65596 (5) obj. -35.989 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -33.1273 to -35.1523 (0.06 seconds)
Cbc0038I Round again with cutoff of -41.1399
Cbc0038I Pass  31: suminf.    2.18764 (9) obj. -41.1399 iterations 2
Cbc0038I Pass  32: suminf.    1.63111 (6) obj. -41.1399 iterations 10
Cbc0038I Pass  33: suminf.    1.63111 (6) obj. -41.1399 iterations 0
Cbc0038I Pass  34: suminf.    1.85557 (6) obj. -41.1399 iterations 9
Cbc0038I Pass  35: suminf.    1.70685 (6) obj. -41.1399 iterations 9
Cbc0038I Pass  36: suminf.    2.00510 (6) obj. -41.1399 iterations 11
Cbc0038I Pass  37: suminf.    1.71619 (6) obj. -41.1399 iterations 16
Cbc0038I Pass  38: suminf.    1.31369 (5) obj. -41.1399 iterations 9
Cbc0038I Pass  39: suminf.    0.84800 (4) obj. -41.1399 iterations 15
Cbc0038I Pass  40: suminf.    0.76065 (3) obj. -41.1399 iterations 5
Cbc0038I Pass  41: suminf.    2.17906 (6) obj. -41.1399 iterations 15
Cbc0038I Pass  42: suminf.    1.57870 (6) obj. -41.1399 iterations 18
Cbc0038I Pass  43: suminf.    1.69721 (4) obj. -41.1399 iterations 10
Cbc0038I Pass  44: suminf.    1.69785 (4) obj. -41.1399 iterations 4
Cbc0038I Pass  45: suminf.    1.69363 (4) obj. -41.1399 iterations 1
Cbc0038I Pass  46: suminf.    1.13263 (4) obj. -41.1399 iterations 3
Cbc0038I Pass  47: suminf.    1.10365 (4) obj. -41.1399 iterations 2
Cbc0038I Pass  48: suminf.    1.87275 (5) obj. -41.1399 iterations 9
Cbc0038I Pass  49: suminf.    1.78316 (6) obj. -41.1399 iterations 4
Cbc0038I Pass  50: suminf.    1.83378 (6) obj. -41.1399 iterations 7
Cbc0038I Pass  51: suminf.    1.38946 (5) obj. -41.1399 iterations 11
Cbc0038I Pass  52: suminf.    1.38894 (6) obj. -41.1399 iterations 1
Cbc0038I Pass  53: suminf.    1.78104 (5) obj. -41.1399 iterations 18
Cbc0038I Pass  54: suminf.    1.62717 (5) obj. -41.1399 iterations 6
Cbc0038I Pass  55: suminf.    0.87977 (3) obj. -41.1399 iterations 16
Cbc0038I Pass  56: suminf.    0.79203 (3) obj. -41.1399 iterations 3
Cbc0038I Pass  57: suminf.    1.04595 (4) obj. -41.1399 iterations 9
Cbc0038I Pass  58: suminf.    1.04595 (4) obj. -41.1399 iterations 0
Cbc0038I Pass  59: suminf.    1.07715 (5) obj. -41.1399 iterations 10
Cbc0038I Pass  60: suminf.    1.07715 (5) obj. -41.1399 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 54 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -35.1523 - took 0.07 seconds
Cbc0012I Integer solution of -35.15233 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 125 rows 72 columns, reduced to 52 rows 32 columns
Cbc0031I 19 added rows had average density of 47.315789
Cbc0013I At root node, 19 cuts changed objective from -61.743571 to -53.897581 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9221 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1472 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 71.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -35.15233 best solution, best possible -53.897581 (0.70 seconds)
Cbc0001I Search completed - best objective -35.15232999999999, took 8016 iterations and 40 nodes (0.87 seconds)
Cbc0032I Strong branching done 488 times (9699 iterations), fathomed 2 nodes and fixed 48 variables
Cbc0035I Maximum depth 9, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 115 (-38) columns and 1814 (-1490) elements
Clp1000I sum of infeasibilities 1.52268e-07 - average 1.53806e-09, 22 fixed columns
Coin0506I Presolve 78 (-21) rows, 93 (-22) columns and 1155 (-659) elements
Clp0006I 0  Obj 70.352727 Dual inf 11.751836 (92)
Clp0029I End of values pass after 93 iterations
Clp0014I Perturbing problem by 0.001% of 2.0746921 - largest nonzero change 1.1322347e-05 ( 0.00091204228%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 81.168693
Clp0000I Optimal - objective value 81.168693
Coin0511I After Postsolve, objective 81.168693, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 81.168693
Clp0000I Optimal - objective value 81.168693
Clp0000I Optimal - objective value 81.168693
Clp0000I Optimal - objective value 81.168693
Coin0511I After Postsolve, objective 81.168693, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.16869327 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 116 columns (116 integer (116 of which binary)) and 1833 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.6339
Cbc0038I Pass   1: suminf.    1.88847 (29) obj. -52.0259 iterations 8
Cbc0038I Pass   2: suminf.    1.88847 (29) obj. -52.0259 iterations 0
Cbc0038I Pass   3: suminf.    0.08337 (2) obj. -20.2892 iterations 27
Cbc0038I Solution found of -16.456
Cbc0038I Rounding solution of -22.5514 is better than previous of -16.456

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -26.8679
Cbc0038I Pass   4: suminf.    1.88847 (29) obj. -52.0259 iterations 0
Cbc0038I Pass   5: suminf.    1.88847 (29) obj. -52.0259 iterations 0
Cbc0038I Pass   6: suminf.    0.40005 (5) obj. -26.8679 iterations 26
Cbc0038I Pass   7: suminf.    0.61120 (4) obj. -26.8679 iterations 12
Cbc0038I Pass   8: suminf.    0.51197 (3) obj. -26.8679 iterations 4
Cbc0038I Pass   9: suminf.    0.55946 (3) obj. -26.8679 iterations 4
Cbc0038I Pass  10: suminf.    2.05881 (15) obj. -26.8679 iterations 26
Cbc0038I Pass  11: suminf.    1.32345 (14) obj. -26.8679 iterations 6
Cbc0038I Pass  12: suminf.    0.83679 (15) obj. -26.8679 iterations 18
Cbc0038I Pass  13: suminf.    0.69784 (15) obj. -26.8679 iterations 3
Cbc0038I Pass  14: suminf.    0.81735 (10) obj. -26.8679 iterations 9
Cbc0038I Pass  15: suminf.    0.77990 (9) obj. -26.8679 iterations 4
Cbc0038I Pass  16: suminf.    0.77889 (6) obj. -26.8679 iterations 7
Cbc0038I Pass  17: suminf.    0.77889 (6) obj. -26.8679 iterations 0
Cbc0038I Pass  18: suminf.    0.77310 (6) obj. -26.8679 iterations 1
Cbc0038I Pass  19: suminf.    0.77310 (6) obj. -26.8679 iterations 0
Cbc0038I Pass  20: suminf.    0.77889 (6) obj. -26.8679 iterations 2
Cbc0038I Pass  21: suminf.    1.78307 (19) obj. -26.8679 iterations 28
Cbc0038I Pass  22: suminf.    1.17519 (15) obj. -26.8679 iterations 5
Cbc0038I Pass  23: suminf.    1.66443 (10) obj. -26.8679 iterations 23
Cbc0038I Pass  24: suminf.    1.66443 (10) obj. -26.8679 iterations 0
Cbc0038I Pass  25: suminf.    1.25326 (8) obj. -26.8679 iterations 9
Cbc0038I Pass  26: suminf.    0.92454 (7) obj. -26.8679 iterations 3
Cbc0038I Pass  27: suminf.    0.79642 (7) obj. -26.8679 iterations 11
Cbc0038I Pass  28: suminf.    0.77889 (6) obj. -26.8679 iterations 3
Cbc0038I Pass  29: suminf.    0.77310 (6) obj. -26.8679 iterations 1
Cbc0038I Pass  30: suminf.    0.77310 (6) obj. -26.8679 iterations 0
Cbc0038I Pass  31: suminf.    0.77889 (6) obj. -26.8679 iterations 2
Cbc0038I Pass  32: suminf.    2.70895 (17) obj. -26.8679 iterations 19
Cbc0038I Pass  33: suminf.    1.17900 (16) obj. -26.8679 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 54 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -16.456 to -35.1523 (0.09 seconds)
Cbc0038I Round again with cutoff of -41.265
Cbc0038I Pass  33: suminf.    1.88847 (29) obj. -52.0259 iterations 0
Cbc0038I Pass  34: suminf.    1.88847 (29) obj. -52.0259 iterations 0
Cbc0038I Pass  35: suminf.    1.52544 (15) obj. -41.265 iterations 24
Cbc0038I Pass  36: suminf.    0.99321 (13) obj. -41.265 iterations 6
Cbc0038I Pass  37: suminf.    2.69378 (19) obj. -41.265 iterations 25
Cbc0038I Pass  38: suminf.    2.64969 (18) obj. -41.265 iterations 4
Cbc0038I Pass  39: suminf.    1.62672 (15) obj. -41.265 iterations 13
Cbc0038I Pass  40: suminf.    1.62672 (15) obj. -41.265 iterations 1
Cbc0038I Pass  41: suminf.    1.54829 (15) obj. -41.265 iterations 3
Cbc0038I Pass  42: suminf.    1.54829 (15) obj. -41.265 iterations 1
Cbc0038I Pass  43: suminf.    1.67894 (16) obj. -41.265 iterations 5
Cbc0038I Pass  44: suminf.    2.67627 (19) obj. -41.265 iterations 24
Cbc0038I Pass  45: suminf.    2.60108 (18) obj. -41.265 iterations 4
Cbc0038I Pass  46: suminf.    1.62672 (15) obj. -41.265 iterations 14
Cbc0038I Pass  47: suminf.    1.62672 (15) obj. -41.265 iterations 1
Cbc0038I Pass  48: suminf.    1.54829 (15) obj. -41.265 iterations 3
Cbc0038I Pass  49: suminf.    1.54829 (15) obj. -41.265 iterations 1
Cbc0038I Pass  50: suminf.    1.62672 (15) obj. -41.265 iterations 3
Cbc0038I Pass  51: suminf.    2.34157 (18) obj. -41.265 iterations 13
Cbc0038I Pass  52: suminf.    1.81754 (17) obj. -41.265 iterations 6
Cbc0038I Pass  53: suminf.    1.67894 (16) obj. -41.265 iterations 19
Cbc0038I Pass  54: suminf.    1.62672 (15) obj. -41.265 iterations 2
Cbc0038I Pass  55: suminf.    1.54829 (15) obj. -41.265 iterations 3
Cbc0038I Pass  56: suminf.    1.54829 (15) obj. -41.265 iterations 1
Cbc0038I Pass  57: suminf.    1.62672 (15) obj. -41.265 iterations 3
Cbc0038I Pass  58: suminf.    2.22573 (22) obj. -41.265 iterations 10
Cbc0038I Pass  59: suminf.    1.96685 (20) obj. -41.265 iterations 3
Cbc0038I Pass  60: suminf.    1.74761 (15) obj. -41.265 iterations 23
Cbc0038I Pass  61: suminf.    1.62672 (15) obj. -41.265 iterations 11
Cbc0038I Pass  62: suminf.    1.54829 (15) obj. -41.265 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -35.1523 - took 0.07 seconds
Cbc0012I Integer solution of -35.15233 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 45 rows 52 columns
Cbc0031I 50 added rows had average density of 33.54
Cbc0013I At root node, 50 cuts changed objective from -65.715455 to -41.220056 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13583 row cuts average 9.0 elements, 1 column cuts (11 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1234 row cuts average 99.2 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 537 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 430 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 509 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 288 row cuts average 60.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 192 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.699 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.15233 best solution, best possible -41.220056 (2.66 seconds)
Cbc0010I After 5 nodes, 6 on tree, -35.15233 best solution, best possible -41.220056 (3.44 seconds)
Cbc0001I Search completed - best objective -35.15232999999999, took 6716 iterations and 14 nodes (3.85 seconds)
Cbc0032I Strong branching done 330 times (9079 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 83 variables fixed on reduced cost
Total time (CPU seconds):       2.78   (Wallclock seconds):       3.87

