Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 383 (-144) rows, 199 (-65) columns and 1148 (-397) elements
Clp1000I sum of infeasibilities 1.7977e-07 - average 4.69372e-10, 189 fixed columns
Coin0506I Presolve 11 (-372) rows, 10 (-189) columns and 36 (-1112) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Coin0511I After Postsolve, objective 209062.65, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0898152 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Coin0511I After Postsolve, objective 209062.65, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 209062.6482 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 383 rows, 199 columns (198 integer (198 of which binary)) and 1148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.480%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.24556
Cbc0038I Solution found of -189664
Cbc0038I Relaxing continuous gives -189664
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -191604
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.08837 (3) obj. -191604 iterations 47
Cbc0038I Pass   2: suminf.    0.80170 (5) obj. -191604 iterations 28
Cbc0038I Pass   3: suminf.    0.77300 (5) obj. -191604 iterations 19
Cbc0038I Pass   4: suminf.    0.71146 (2) obj. -194755 iterations 19
Cbc0038I Pass   5: suminf.    0.19508 (3) obj. -191604 iterations 3
Cbc0038I Pass   6: suminf.    0.86026 (3) obj. -191604 iterations 30
Cbc0038I Pass   7: suminf.    0.86026 (3) obj. -191604 iterations 0
Cbc0038I Pass   8: suminf.    1.11444 (3) obj. -191604 iterations 27
Cbc0038I Pass   9: suminf.    1.11444 (3) obj. -191604 iterations 3
Cbc0038I Pass  10: suminf.    0.25253 (1) obj. -195336 iterations 5
Cbc0038I Pass  11: suminf.    0.09273 (1) obj. -191604 iterations 15
Cbc0038I Pass  12: suminf.    0.31959 (1) obj. -197334 iterations 15
Cbc0038I Pass  13: suminf.    1.97882 (8) obj. -191604 iterations 35
Cbc0038I Pass  14: suminf.    0.73324 (3) obj. -191604 iterations 26
Cbc0038I Pass  15: suminf.    0.39270 (2) obj. -192950 iterations 13
Cbc0038I Pass  16: suminf.    0.43718 (2) obj. -191604 iterations 4
Cbc0038I Pass  17: suminf.    0.79175 (3) obj. -191604 iterations 14
Cbc0038I Pass  18: suminf.    0.79175 (3) obj. -191604 iterations 10
Cbc0038I Pass  19: suminf.    0.30177 (3) obj. -191604 iterations 45
Cbc0038I Pass  20: suminf.    0.30177 (3) obj. -191604 iterations 0
Cbc0038I Pass  21: suminf.    1.24092 (4) obj. -191604 iterations 27
Cbc0038I Pass  22: suminf.    1.64496 (8) obj. -191604 iterations 20
Cbc0038I Pass  23: suminf.    1.38924 (5) obj. -191604 iterations 13
Cbc0038I Pass  24: suminf.    0.39362 (1) obj. -194129 iterations 19
Cbc0038I Pass  25: suminf.    0.47215 (1) obj. -191604 iterations 5
Cbc0038I Pass  26: suminf.    0.78772 (4) obj. -191604 iterations 21
Cbc0038I Pass  27: suminf.    0.58446 (3) obj. -191604 iterations 19
Cbc0038I Pass  28: suminf.    0.57723 (2) obj. -191604 iterations 22
Cbc0038I Pass  29: suminf.    0.21494 (3) obj. -191604 iterations 27
Cbc0038I Pass  30: suminf.    1.11771 (5) obj. -191604 iterations 27
Cbc0038I Rounding solution of -198705 is better than previous of -189664

Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -200776
Cbc0038I Reduced cost fixing fixed 91 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.52013 (12) obj. -200776 iterations 4
Cbc0038I Pass  31: suminf.    0.54826 (4) obj. -200776 iterations 41
Cbc0038I Pass  32: suminf.    0.36979 (1) obj. -200776 iterations 8
Cbc0038I Pass  33: suminf.    0.47178 (2) obj. -203019 iterations 5
Cbc0038I Pass  34: suminf.    0.44524 (4) obj. -200776 iterations 13
Cbc0038I Pass  35: suminf.    0.35762 (6) obj. -200776 iterations 23
Cbc0038I Pass  36: suminf.    0.55754 (3) obj. -200776 iterations 17
Cbc0038I Pass  37: suminf.    0.48071 (6) obj. -200776 iterations 7
Cbc0038I Pass  38: suminf.    0.52013 (12) obj. -200776 iterations 32
Cbc0038I Pass  39: suminf.    0.52013 (12) obj. -200776 iterations 0
Cbc0038I Pass  40: suminf.    1.29009 (9) obj. -200776 iterations 30
Cbc0038I Pass  41: suminf.    2.26878 (10) obj. -200776 iterations 23
Cbc0038I Pass  42: suminf.    0.14831 (3) obj. -200776 iterations 41
Cbc0038I Pass  43: suminf.    0.62061 (5) obj. -200776 iterations 24
Cbc0038I Pass  44: suminf.    0.90354 (11) obj. -200776 iterations 19
Cbc0038I Pass  45: suminf.    0.51039 (3) obj. -200776 iterations 18
Cbc0038I Pass  46: suminf.    1.09266 (4) obj. -200776 iterations 24
Cbc0038I Pass  47: suminf.    0.95746 (6) obj. -200776 iterations 37
Cbc0038I Pass  48: suminf.    0.58788 (3) obj. -200776 iterations 8
Cbc0038I Pass  49: suminf.    0.36979 (1) obj. -200776 iterations 14
Cbc0038I Pass  50: suminf.    0.47178 (2) obj. -203019 iterations 5
Cbc0038I Pass  51: suminf.    2.72841 (8) obj. -200776 iterations 19
Cbc0038I Pass  52: suminf.    0.37254 (4) obj. -200776 iterations 30
Cbc0038I Pass  53: suminf.    0.14831 (3) obj. -200776 iterations 19
Cbc0038I Pass  54: suminf.    0.62061 (5) obj. -200776 iterations 24
Cbc0038I Pass  55: suminf.    0.78774 (7) obj. -200776 iterations 33
Cbc0038I Pass  56: suminf.    0.51649 (4) obj. -200776 iterations 25
Cbc0038I Pass  57: suminf.    0.55089 (4) obj. -200776 iterations 28
Cbc0038I Pass  58: suminf.    0.37051 (3) obj. -200776 iterations 5
Cbc0038I Pass  59: suminf.    0.51649 (4) obj. -200776 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -198705 to -201140 (0.06 seconds)
Cbc0038I Round again with cutoff of -203517
Cbc0038I Reduced cost fixing fixed 113 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.72691 (9) obj. -203517 iterations 6
Cbc0038I Pass  60: suminf.    0.61477 (3) obj. -203517 iterations 38
Cbc0038I Pass  61: suminf.    0.61477 (3) obj. -203517 iterations 0
Cbc0038I Pass  62: suminf.    0.87143 (5) obj. -203517 iterations 25
Cbc0038I Pass  63: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  64: suminf.    0.75509 (3) obj. -203517 iterations 16
Cbc0038I Pass  65: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  66: suminf.    0.73711 (2) obj. -203517 iterations 10
Cbc0038I Pass  67: suminf.    1.41948 (4) obj. -203517 iterations 17
Cbc0038I Pass  68: suminf.    0.92912 (6) obj. -203517 iterations 19
Cbc0038I Pass  69: suminf.    0.83630 (3) obj. -203517 iterations 16
Cbc0038I Pass  70: suminf.    2.14771 (9) obj. -203517 iterations 28
Cbc0038I Pass  71: suminf.    0.58273 (10) obj. -203517 iterations 32
Cbc0038I Pass  72: suminf.    0.31463 (9) obj. -203517 iterations 1
Cbc0038I Pass  73: suminf.    0.61477 (3) obj. -203517 iterations 35
Cbc0038I Pass  74: suminf.    0.61477 (3) obj. -203517 iterations 0
Cbc0038I Pass  75: suminf.    0.87143 (5) obj. -203517 iterations 23
Cbc0038I Pass  76: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  77: suminf.    0.75509 (3) obj. -203517 iterations 15
Cbc0038I Pass  78: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  79: suminf.    0.73711 (2) obj. -203517 iterations 11
Cbc0038I Pass  80: suminf.    0.61477 (3) obj. -203517 iterations 18
Cbc0038I Pass  81: suminf.    0.61477 (3) obj. -203517 iterations 6
Cbc0038I Pass  82: suminf.    0.87143 (5) obj. -203517 iterations 23
Cbc0038I Pass  83: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  84: suminf.    0.75509 (3) obj. -203517 iterations 14
Cbc0038I Pass  85: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  86: suminf.    0.73711 (2) obj. -203517 iterations 10
Cbc0038I Pass  87: suminf.    1.06212 (5) obj. -203517 iterations 23
Cbc0038I Pass  88: suminf.    0.87143 (5) obj. -203517 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 21 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -201140 - took 0.07 seconds
Cbc0012I Integer solution of -201140.08 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 383 rows 199 columns, reduced to 7 rows 6 columns
Cbc0031I 4 added rows had average density of 20.25
Cbc0013I At root node, 4 cuts changed objective from -209062.65 to -205582.72 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 3.0 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 193.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0001I Search completed - best objective -201140.08, took 187 iterations and 8 nodes (0.53 seconds)
Cbc0032I Strong branching done 64 times (314 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.54

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-218) rows, 321 (-203) columns and 13549 (-22187) elements
Clp1000I sum of infeasibilities 1.69302e-05 - average 5.49682e-08, 254 fixed columns
Coin0506I Presolve 58 (-250) rows, 65 (-256) columns and 238 (-13311) elements
Clp0006I 0  Obj 202009.79 Primal inf 7.0729011e-06 (11) Dual inf 2.2015871e+09 (58)
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 1.7319962 - largest nonzero change 1.9206278e-05 ( 0.00091831452%) - largest zero change 2.9700155e-05
Clp0000I Optimal - objective value 208880.64
Clp0000I Optimal - objective value 208880.64
Coin0511I After Postsolve, objective 208880.64, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 208880.64 Dual inf 78237.278 (136)
Clp0014I Perturbing problem by 0.001% of 2.4621188 - largest nonzero change 2.0413685e-05 ( 0.0016756202%) - largest zero change 2.9878622e-05
Clp0000I Optimal - objective value 209188.4
Clp0000I Optimal - objective value 209188.4
Clp0000I Optimal - objective value 209188.4
Coin0511I After Postsolve, objective 209188.4, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 209188.3961 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0004I processed model has 313 rows, 326 columns (326 integer (326 of which binary)) and 13564 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.197%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 129 integers unsatisfied sum - 4.80964
Cbc0038I Pass   1: suminf.    2.85865 (86) obj. -189789 iterations 70
Cbc0038I Pass   2: suminf.    2.02311 (67) obj. -189746 iterations 19
Cbc0038I Pass   3: suminf.    1.28438 (49) obj. -189718 iterations 18
Cbc0038I Pass   4: suminf.    0.33771 (20) obj. -189686 iterations 29
Cbc0038I Solution found of -189664
Cbc0038I Rounding solution of -194200 is better than previous of -189664

Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 0 continuous
Cbc0038I Full problem 313 rows 326 columns, reduced to 40 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -195698
Cbc0038I Reduced cost fixing fixed 57 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.19128 (88) obj. -195698 iterations 11
Cbc0038I Pass   6: suminf.    2.20037 (63) obj. -195698 iterations 39
Cbc0038I Pass   7: suminf.    2.20037 (63) obj. -195698 iterations 0
Cbc0038I Pass   8: suminf.    2.07563 (55) obj. -195698 iterations 18
Cbc0038I Pass   9: suminf.    1.92301 (56) obj. -195698 iterations 12
Cbc0038I Pass  10: suminf.    1.57361 (41) obj. -195698 iterations 25
Cbc0038I Pass  11: suminf.    1.42559 (42) obj. -195698 iterations 13
Cbc0038I Pass  12: suminf.    1.19491 (27) obj. -195698 iterations 28
Cbc0038I Pass  13: suminf.    1.07013 (28) obj. -195698 iterations 16
Cbc0038I Pass  14: suminf.    0.90863 (2) obj. -195698 iterations 50
Cbc0038I Pass  15: suminf.    0.78558 (3) obj. -195698 iterations 27
Cbc0038I Pass  16: suminf.    2.19750 (18) obj. -195698 iterations 44
Cbc0038I Pass  17: suminf.    0.96737 (16) obj. -195698 iterations 38
Cbc0038I Pass  18: suminf.    1.01839 (4) obj. -195698 iterations 37
Cbc0038I Pass  19: suminf.    0.69630 (2) obj. -195698 iterations 19
Cbc0038I Pass  20: suminf.    0.40278 (3) obj. -195698 iterations 16
Cbc0038I Pass  21: suminf.    0.45163 (28) obj. -195698 iterations 32
Cbc0038I Pass  22: suminf.    0.45163 (28) obj. -195698 iterations 0
Cbc0038I Pass  23: suminf.    0.55011 (5) obj. -195698 iterations 25
Cbc0038I Pass  24: suminf.    0.44963 (26) obj. -195698 iterations 22
Cbc0038I Pass  25: suminf.    1.05666 (17) obj. -195698 iterations 65
Cbc0038I Pass  26: suminf.    0.94894 (17) obj. -195698 iterations 7
Cbc0038I Pass  27: suminf.    0.18599 (3) obj. -195698 iterations 28
Cbc0038I Pass  28: suminf.    0.10744 (3) obj. -195698 iterations 16
Cbc0038I Pass  29: suminf.    0.65227 (19) obj. -195698 iterations 23
Cbc0038I Pass  30: suminf.    0.65227 (19) obj. -195698 iterations 0
Cbc0038I Pass  31: suminf.    0.84334 (5) obj. -195698 iterations 23
Cbc0038I Pass  32: suminf.    1.96078 (45) obj. -195698 iterations 54
Cbc0038I Pass  33: suminf.    1.96078 (45) obj. -195698 iterations 16
Cbc0038I Pass  34: suminf.    1.60444 (21) obj. -195698 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 313 rows 326 columns, reduced to 144 rows 153 columns - 24 fixed gives 118, 128 - still too large
Cbc0038I Full problem 313 rows 326 columns, reduced to 50 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -189664 to -197521 (0.21 seconds)
Cbc0038I Round again with cutoff of -199854
Cbc0038I Reduced cost fixing fixed 82 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.45030 (89) obj. -199854 iterations 2
Cbc0038I Pass  35: suminf.    3.42584 (77) obj. -199854 iterations 27
Cbc0038I Pass  36: suminf.    2.81830 (75) obj. -199854 iterations 15
Cbc0038I Pass  37: suminf.    2.34236 (52) obj. -199854 iterations 41
Cbc0038I Pass  38: suminf.    1.76607 (50) obj. -199854 iterations 18
Cbc0038I Pass  39: suminf.    1.72377 (35) obj. -199854 iterations 35
Cbc0038I Pass  40: suminf.    1.12982 (33) obj. -199854 iterations 19
Cbc0038I Pass  41: suminf.    1.04461 (17) obj. -202117 iterations 40
Cbc0038I Pass  42: suminf.    0.73324 (18) obj. -199854 iterations 33
Cbc0038I Pass  43: suminf.    1.23498 (6) obj. -199854 iterations 39
Cbc0038I Pass  44: suminf.    0.51677 (4) obj. -199854 iterations 35
Cbc0038I Pass  45: suminf.    0.96054 (5) obj. -199854 iterations 27
Cbc0038I Pass  46: suminf.    0.96054 (5) obj. -199854 iterations 15
Cbc0038I Pass  47: suminf.    0.54211 (4) obj. -199854 iterations 20
Cbc0038I Pass  48: suminf.    1.84232 (19) obj. -199854 iterations 47
Cbc0038I Pass  49: suminf.    1.84232 (19) obj. -199854 iterations 8
Cbc0038I Pass  50: suminf.    0.81086 (14) obj. -199854 iterations 33
Cbc0038I Pass  51: suminf.    1.23386 (6) obj. -199854 iterations 36
Cbc0038I Pass  52: suminf.    0.51721 (4) obj. -199854 iterations 30
Cbc0038I Pass  53: suminf.    0.96202 (5) obj. -199854 iterations 27
Cbc0038I Pass  54: suminf.    0.96202 (5) obj. -199854 iterations 16
Cbc0038I Pass  55: suminf.    0.54272 (4) obj. -199854 iterations 19
Cbc0038I Pass  56: suminf.    1.81043 (22) obj. -199854 iterations 65
Cbc0038I Pass  57: suminf.    1.20822 (21) obj. -199854 iterations 24
Cbc0038I Pass  58: suminf.    1.28397 (8) obj. -199854 iterations 24
Cbc0038I Pass  59: suminf.    0.64031 (7) obj. -199854 iterations 10
Cbc0038I Pass  60: suminf.    1.24577 (5) obj. -199854 iterations 13
Cbc0038I Pass  61: suminf.    0.60314 (4) obj. -199854 iterations 10
Cbc0038I Pass  62: suminf.    1.55836 (23) obj. -199854 iterations 47
Cbc0038I Pass  63: suminf.    1.40008 (24) obj. -199854 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 178 integers at bound fixed and 0 continuous
Cbc0038I Full problem 313 rows 326 columns, reduced to 88 rows 96 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -197521 - took 0.20 seconds
Cbc0012I Integer solution of -197520.81 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 313 rows 326 columns, reduced to 40 rows 40 columns
Cbc0031I 107 added rows had average density of 4.6635514
Cbc0013I At root node, 107 cuts changed objective from -209186.79 to -204943.72 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 978 row cuts average 27.1 elements, 39 column cuts (39 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 77 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 127 row cuts average 88.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 272 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 130.1 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -197520.81 best solution, best possible -204942.66 (0.59 seconds)
Cbc0012I Integer solution of -198704.86 found by DiveCoefficient after 1722 iterations and 30 nodes (0.94 seconds)
Cbc0038I Full problem 313 rows 326 columns, reduced to 0 rows 0 columns
Cbc0038I Full problem 420 rows 326 columns, reduced to 106 rows 116 columns
Cbc0044I Reduced cost fixing - 106 rows, 116 columns - restarting search
Cbc0012I Integer solution of -198704.86 found by Previous solution after 0 iterations and 0 nodes (1.08 seconds)
Cbc0038I Full problem 106 rows 116 columns, reduced to 41 rows 42 columns
Cbc0031I 71 added rows had average density of 8.0422535
Cbc0013I At root node, 71 cuts changed objective from -209086.41 to -204167.06 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 314 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 63 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 75 row cuts average 5.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -198704.86 best solution, best possible -204159.49 (1.33 seconds)
Cbc0012I Integer solution of -201140.08 found by DiveCoefficient after 373 iterations and 2 nodes (1.35 seconds)
Cbc0001I Search completed - best objective -201140.08, took 918 iterations and 18 nodes (1.52 seconds)
Cbc0032I Strong branching done 292 times (2889 iterations), fathomed 2 nodes and fixed 38 variables
Cbc0035I Maximum depth 5, 45 variables fixed on reduced cost
Cbc0038I Probing was tried 24 times and created 324 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Cbc0038I Gomory was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I Knapsack was tried 23 times and created 130 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I Clique was tried 23 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I OddWheel was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I MixedIntegerRounding2 was tried 23 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 23 times and created 89 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Cbc0038I ZeroHalf was tried 23 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.141 seconds)
Cbc0038I Stored from first was tried 23 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -201140.08 found by Reduced search after 3332 iterations and 68 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -201140.08, took 3332 iterations and 68 nodes (1.53 seconds)
Cbc0032I Strong branching done 576 times (8266 iterations), fathomed 16 nodes and fixed 17 variables
Cbc0035I Maximum depth 10, 292 variables fixed on reduced cost
Total time (CPU seconds):       1.28   (Wallclock seconds):       1.54

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 383 (-144) rows, 199 (-65) columns and 1148 (-397) elements
Clp1000I sum of infeasibilities 1.7977e-07 - average 4.69372e-10, 189 fixed columns
Coin0506I Presolve 11 (-372) rows, 10 (-189) columns and 36 (-1112) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Coin0511I After Postsolve, objective 209062.65, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0898152 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Coin0511I After Postsolve, objective 209062.65, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 209062.6482 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 383 rows, 199 columns (198 integer (198 of which binary)) and 1148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.480%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.24556
Cbc0038I Solution found of -189664
Cbc0038I Relaxing continuous gives -189664
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -191604
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.08837 (3) obj. -191604 iterations 47
Cbc0038I Pass   2: suminf.    0.80170 (5) obj. -191604 iterations 28
Cbc0038I Pass   3: suminf.    0.77300 (5) obj. -191604 iterations 19
Cbc0038I Pass   4: suminf.    0.71146 (2) obj. -194755 iterations 19
Cbc0038I Pass   5: suminf.    0.19508 (3) obj. -191604 iterations 3
Cbc0038I Pass   6: suminf.    0.86026 (3) obj. -191604 iterations 30
Cbc0038I Pass   7: suminf.    0.86026 (3) obj. -191604 iterations 0
Cbc0038I Pass   8: suminf.    1.11444 (3) obj. -191604 iterations 27
Cbc0038I Pass   9: suminf.    1.11444 (3) obj. -191604 iterations 3
Cbc0038I Pass  10: suminf.    0.25253 (1) obj. -195336 iterations 5
Cbc0038I Pass  11: suminf.    0.09273 (1) obj. -191604 iterations 15
Cbc0038I Pass  12: suminf.    0.31959 (1) obj. -197334 iterations 15
Cbc0038I Pass  13: suminf.    1.97882 (8) obj. -191604 iterations 35
Cbc0038I Pass  14: suminf.    0.73324 (3) obj. -191604 iterations 26
Cbc0038I Pass  15: suminf.    0.39270 (2) obj. -192950 iterations 13
Cbc0038I Pass  16: suminf.    0.43718 (2) obj. -191604 iterations 4
Cbc0038I Pass  17: suminf.    0.79175 (3) obj. -191604 iterations 14
Cbc0038I Pass  18: suminf.    0.79175 (3) obj. -191604 iterations 10
Cbc0038I Pass  19: suminf.    0.30177 (3) obj. -191604 iterations 45
Cbc0038I Pass  20: suminf.    0.30177 (3) obj. -191604 iterations 0
Cbc0038I Pass  21: suminf.    1.24092 (4) obj. -191604 iterations 27
Cbc0038I Pass  22: suminf.    1.64496 (8) obj. -191604 iterations 20
Cbc0038I Pass  23: suminf.    1.38924 (5) obj. -191604 iterations 13
Cbc0038I Pass  24: suminf.    0.39362 (1) obj. -194129 iterations 19
Cbc0038I Pass  25: suminf.    0.47215 (1) obj. -191604 iterations 5
Cbc0038I Pass  26: suminf.    0.78772 (4) obj. -191604 iterations 21
Cbc0038I Pass  27: suminf.    0.58446 (3) obj. -191604 iterations 19
Cbc0038I Pass  28: suminf.    0.57723 (2) obj. -191604 iterations 22
Cbc0038I Pass  29: suminf.    0.21494 (3) obj. -191604 iterations 27
Cbc0038I Pass  30: suminf.    1.11771 (5) obj. -191604 iterations 27
Cbc0038I Rounding solution of -198705 is better than previous of -189664

Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -200776
Cbc0038I Reduced cost fixing fixed 91 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.52013 (12) obj. -200776 iterations 4
Cbc0038I Pass  31: suminf.    0.54826 (4) obj. -200776 iterations 41
Cbc0038I Pass  32: suminf.    0.36979 (1) obj. -200776 iterations 8
Cbc0038I Pass  33: suminf.    0.47178 (2) obj. -203019 iterations 5
Cbc0038I Pass  34: suminf.    0.44524 (4) obj. -200776 iterations 13
Cbc0038I Pass  35: suminf.    0.35762 (6) obj. -200776 iterations 23
Cbc0038I Pass  36: suminf.    0.55754 (3) obj. -200776 iterations 17
Cbc0038I Pass  37: suminf.    0.48071 (6) obj. -200776 iterations 7
Cbc0038I Pass  38: suminf.    0.52013 (12) obj. -200776 iterations 32
Cbc0038I Pass  39: suminf.    0.52013 (12) obj. -200776 iterations 0
Cbc0038I Pass  40: suminf.    1.29009 (9) obj. -200776 iterations 30
Cbc0038I Pass  41: suminf.    2.26878 (10) obj. -200776 iterations 23
Cbc0038I Pass  42: suminf.    0.14831 (3) obj. -200776 iterations 41
Cbc0038I Pass  43: suminf.    0.62061 (5) obj. -200776 iterations 24
Cbc0038I Pass  44: suminf.    0.90354 (11) obj. -200776 iterations 19
Cbc0038I Pass  45: suminf.    0.51039 (3) obj. -200776 iterations 18
Cbc0038I Pass  46: suminf.    1.09266 (4) obj. -200776 iterations 24
Cbc0038I Pass  47: suminf.    0.95746 (6) obj. -200776 iterations 37
Cbc0038I Pass  48: suminf.    0.58788 (3) obj. -200776 iterations 8
Cbc0038I Pass  49: suminf.    0.36979 (1) obj. -200776 iterations 14
Cbc0038I Pass  50: suminf.    0.47178 (2) obj. -203019 iterations 5
Cbc0038I Pass  51: suminf.    2.72841 (8) obj. -200776 iterations 19
Cbc0038I Pass  52: suminf.    0.37254 (4) obj. -200776 iterations 30
Cbc0038I Pass  53: suminf.    0.14831 (3) obj. -200776 iterations 19
Cbc0038I Pass  54: suminf.    0.62061 (5) obj. -200776 iterations 24
Cbc0038I Pass  55: suminf.    0.78774 (7) obj. -200776 iterations 33
Cbc0038I Pass  56: suminf.    0.51649 (4) obj. -200776 iterations 25
Cbc0038I Pass  57: suminf.    0.55089 (4) obj. -200776 iterations 28
Cbc0038I Pass  58: suminf.    0.37051 (3) obj. -200776 iterations 5
Cbc0038I Pass  59: suminf.    0.51649 (4) obj. -200776 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -198705 to -201140 (0.06 seconds)
Cbc0038I Round again with cutoff of -203517
Cbc0038I Reduced cost fixing fixed 113 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.72691 (9) obj. -203517 iterations 6
Cbc0038I Pass  60: suminf.    0.61477 (3) obj. -203517 iterations 38
Cbc0038I Pass  61: suminf.    0.61477 (3) obj. -203517 iterations 0
Cbc0038I Pass  62: suminf.    0.87143 (5) obj. -203517 iterations 25
Cbc0038I Pass  63: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  64: suminf.    0.75509 (3) obj. -203517 iterations 16
Cbc0038I Pass  65: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  66: suminf.    0.73711 (2) obj. -203517 iterations 10
Cbc0038I Pass  67: suminf.    1.41948 (4) obj. -203517 iterations 17
Cbc0038I Pass  68: suminf.    0.92912 (6) obj. -203517 iterations 19
Cbc0038I Pass  69: suminf.    0.83630 (3) obj. -203517 iterations 16
Cbc0038I Pass  70: suminf.    2.14771 (9) obj. -203517 iterations 28
Cbc0038I Pass  71: suminf.    0.58273 (10) obj. -203517 iterations 32
Cbc0038I Pass  72: suminf.    0.31463 (9) obj. -203517 iterations 1
Cbc0038I Pass  73: suminf.    0.61477 (3) obj. -203517 iterations 35
Cbc0038I Pass  74: suminf.    0.61477 (3) obj. -203517 iterations 0
Cbc0038I Pass  75: suminf.    0.87143 (5) obj. -203517 iterations 23
Cbc0038I Pass  76: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  77: suminf.    0.75509 (3) obj. -203517 iterations 15
Cbc0038I Pass  78: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  79: suminf.    0.73711 (2) obj. -203517 iterations 11
Cbc0038I Pass  80: suminf.    0.61477 (3) obj. -203517 iterations 18
Cbc0038I Pass  81: suminf.    0.61477 (3) obj. -203517 iterations 6
Cbc0038I Pass  82: suminf.    0.87143 (5) obj. -203517 iterations 23
Cbc0038I Pass  83: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  84: suminf.    0.75509 (3) obj. -203517 iterations 14
Cbc0038I Pass  85: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  86: suminf.    0.73711 (2) obj. -203517 iterations 10
Cbc0038I Pass  87: suminf.    1.06212 (5) obj. -203517 iterations 23
Cbc0038I Pass  88: suminf.    0.87143 (5) obj. -203517 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 21 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -201140 - took 0.07 seconds
Cbc0012I Integer solution of -201140.08 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 383 rows 199 columns, reduced to 7 rows 6 columns
Cbc0031I 4 added rows had average density of 20.25
Cbc0013I At root node, 4 cuts changed objective from -209062.65 to -205582.72 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 3.0 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 193.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0001I Search completed - best objective -201140.08, took 187 iterations and 8 nodes (0.48 seconds)
Cbc0032I Strong branching done 64 times (314 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-219) rows, 321 (-204) columns and 13549 (-22188) elements
Clp1000I sum of infeasibilities 1.69302e-05 - average 5.49682e-08, 254 fixed columns
Coin0506I Presolve 58 (-250) rows, 65 (-256) columns and 238 (-13311) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 1.7319962 - largest nonzero change 1.9206278e-05 ( 0.00091831452%) - largest zero change 2.9700155e-05
Clp0000I Optimal - objective value 208880.64
Clp0000I Optimal - objective value 208880.64
Coin0511I After Postsolve, objective 208880.64, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4621188 - largest nonzero change 2.0413685e-05 ( 0.0016756202%) - largest zero change 2.9878622e-05
Clp0000I Optimal - objective value 209188.4
Clp0000I Optimal - objective value 209188.4
Clp0000I Optimal - objective value 209188.4
Coin0511I After Postsolve, objective 209188.4, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 209188.3961 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 313 rows, 326 columns (326 integer (326 of which binary)) and 13564 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.197%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 129 integers unsatisfied sum - 4.80964
Cbc0038I Pass   1: suminf.    2.85865 (86) obj. -189789 iterations 70
Cbc0038I Pass   2: suminf.    2.02311 (67) obj. -189746 iterations 19
Cbc0038I Pass   3: suminf.    1.28438 (49) obj. -189718 iterations 18
Cbc0038I Pass   4: suminf.    0.33771 (20) obj. -189686 iterations 29
Cbc0038I Solution found of -189664
Cbc0038I Rounding solution of -194200 is better than previous of -189664

Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 0 continuous
Cbc0038I Full problem 313 rows 326 columns, reduced to 40 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -195698
Cbc0038I Reduced cost fixing fixed 57 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.19128 (88) obj. -195698 iterations 11
Cbc0038I Pass   6: suminf.    2.20037 (63) obj. -195698 iterations 39
Cbc0038I Pass   7: suminf.    2.20037 (63) obj. -195698 iterations 0
Cbc0038I Pass   8: suminf.    2.07563 (55) obj. -195698 iterations 18
Cbc0038I Pass   9: suminf.    1.92301 (56) obj. -195698 iterations 12
Cbc0038I Pass  10: suminf.    1.57361 (41) obj. -195698 iterations 25
Cbc0038I Pass  11: suminf.    1.42559 (42) obj. -195698 iterations 13
Cbc0038I Pass  12: suminf.    1.19491 (27) obj. -195698 iterations 28
Cbc0038I Pass  13: suminf.    1.07013 (28) obj. -195698 iterations 16
Cbc0038I Pass  14: suminf.    0.90863 (2) obj. -195698 iterations 50
Cbc0038I Pass  15: suminf.    0.78558 (3) obj. -195698 iterations 27
Cbc0038I Pass  16: suminf.    2.19750 (18) obj. -195698 iterations 44
Cbc0038I Pass  17: suminf.    0.96737 (16) obj. -195698 iterations 38
Cbc0038I Pass  18: suminf.    1.01839 (4) obj. -195698 iterations 37
Cbc0038I Pass  19: suminf.    0.69630 (2) obj. -195698 iterations 19
Cbc0038I Pass  20: suminf.    0.40278 (3) obj. -195698 iterations 16
Cbc0038I Pass  21: suminf.    0.45163 (28) obj. -195698 iterations 32
Cbc0038I Pass  22: suminf.    0.45163 (28) obj. -195698 iterations 0
Cbc0038I Pass  23: suminf.    0.55011 (5) obj. -195698 iterations 25
Cbc0038I Pass  24: suminf.    0.44963 (26) obj. -195698 iterations 22
Cbc0038I Pass  25: suminf.    1.05666 (17) obj. -195698 iterations 65
Cbc0038I Pass  26: suminf.    0.94894 (17) obj. -195698 iterations 7
Cbc0038I Pass  27: suminf.    0.18599 (3) obj. -195698 iterations 28
Cbc0038I Pass  28: suminf.    0.10744 (3) obj. -195698 iterations 16
Cbc0038I Pass  29: suminf.    0.65227 (19) obj. -195698 iterations 23
Cbc0038I Pass  30: suminf.    0.65227 (19) obj. -195698 iterations 0
Cbc0038I Pass  31: suminf.    0.84334 (5) obj. -195698 iterations 23
Cbc0038I Pass  32: suminf.    1.96078 (45) obj. -195698 iterations 54
Cbc0038I Pass  33: suminf.    1.96078 (45) obj. -195698 iterations 16
Cbc0038I Pass  34: suminf.    1.60444 (21) obj. -195698 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 313 rows 326 columns, reduced to 144 rows 153 columns - 24 fixed gives 118, 128 - still too large
Cbc0038I Full problem 313 rows 326 columns, reduced to 50 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -189664 to -197521 (0.20 seconds)
Cbc0038I Round again with cutoff of -199854
Cbc0038I Reduced cost fixing fixed 82 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.45030 (89) obj. -199854 iterations 2
Cbc0038I Pass  35: suminf.    3.42584 (77) obj. -199854 iterations 27
Cbc0038I Pass  36: suminf.    2.81830 (75) obj. -199854 iterations 15
Cbc0038I Pass  37: suminf.    2.34236 (52) obj. -199854 iterations 41
Cbc0038I Pass  38: suminf.    1.76607 (50) obj. -199854 iterations 18
Cbc0038I Pass  39: suminf.    1.72377 (35) obj. -199854 iterations 35
Cbc0038I Pass  40: suminf.    1.12982 (33) obj. -199854 iterations 19
Cbc0038I Pass  41: suminf.    1.04461 (17) obj. -202117 iterations 40
Cbc0038I Pass  42: suminf.    0.73324 (18) obj. -199854 iterations 33
Cbc0038I Pass  43: suminf.    1.23498 (6) obj. -199854 iterations 39
Cbc0038I Pass  44: suminf.    0.51677 (4) obj. -199854 iterations 35
Cbc0038I Pass  45: suminf.    0.96054 (5) obj. -199854 iterations 27
Cbc0038I Pass  46: suminf.    0.96054 (5) obj. -199854 iterations 15
Cbc0038I Pass  47: suminf.    0.54211 (4) obj. -199854 iterations 20
Cbc0038I Pass  48: suminf.    1.84232 (19) obj. -199854 iterations 47
Cbc0038I Pass  49: suminf.    1.84232 (19) obj. -199854 iterations 8
Cbc0038I Pass  50: suminf.    0.81086 (14) obj. -199854 iterations 33
Cbc0038I Pass  51: suminf.    1.23386 (6) obj. -199854 iterations 36
Cbc0038I Pass  52: suminf.    0.51721 (4) obj. -199854 iterations 30
Cbc0038I Pass  53: suminf.    0.96202 (5) obj. -199854 iterations 27
Cbc0038I Pass  54: suminf.    0.96202 (5) obj. -199854 iterations 16
Cbc0038I Pass  55: suminf.    0.54272 (4) obj. -199854 iterations 19
Cbc0038I Pass  56: suminf.    1.81043 (22) obj. -199854 iterations 65
Cbc0038I Pass  57: suminf.    1.20822 (21) obj. -199854 iterations 24
Cbc0038I Pass  58: suminf.    1.28397 (8) obj. -199854 iterations 24
Cbc0038I Pass  59: suminf.    0.64031 (7) obj. -199854 iterations 10
Cbc0038I Pass  60: suminf.    1.24577 (5) obj. -199854 iterations 13
Cbc0038I Pass  61: suminf.    0.60314 (4) obj. -199854 iterations 10
Cbc0038I Pass  62: suminf.    1.55836 (23) obj. -199854 iterations 47
Cbc0038I Pass  63: suminf.    1.40008 (24) obj. -199854 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 178 integers at bound fixed and 0 continuous
Cbc0038I Full problem 313 rows 326 columns, reduced to 88 rows 96 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -197521 - took 0.18 seconds
Cbc0012I Integer solution of -197520.81 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 313 rows 326 columns, reduced to 40 rows 40 columns
Cbc0031I 107 added rows had average density of 4.6635514
Cbc0013I At root node, 107 cuts changed objective from -209186.79 to -204943.72 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 978 row cuts average 27.1 elements, 39 column cuts (39 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 77 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 127 row cuts average 88.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 272 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 130.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -197520.81 best solution, best possible -204942.66 (0.57 seconds)
Cbc0012I Integer solution of -198704.86 found by DiveCoefficient after 1722 iterations and 30 nodes (0.90 seconds)
Cbc0038I Full problem 313 rows 326 columns, reduced to 0 rows 0 columns
Cbc0038I Full problem 420 rows 326 columns, reduced to 106 rows 116 columns
Cbc0044I Reduced cost fixing - 106 rows, 116 columns - restarting search
Cbc0012I Integer solution of -198704.86 found by Previous solution after 0 iterations and 0 nodes (1.04 seconds)
Cbc0038I Full problem 106 rows 116 columns, reduced to 41 rows 42 columns
Cbc0031I 71 added rows had average density of 8.0422535
Cbc0013I At root node, 71 cuts changed objective from -209086.41 to -204167.06 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 314 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 63 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 75 row cuts average 5.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -198704.86 best solution, best possible -204159.49 (1.27 seconds)
Cbc0012I Integer solution of -201140.08 found by DiveCoefficient after 373 iterations and 2 nodes (1.29 seconds)
Cbc0001I Search completed - best objective -201140.08, took 918 iterations and 18 nodes (1.46 seconds)
Cbc0032I Strong branching done 292 times (2889 iterations), fathomed 2 nodes and fixed 38 variables
Cbc0035I Maximum depth 5, 45 variables fixed on reduced cost
Cbc0038I Probing was tried 24 times and created 324 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Cbc0038I Gomory was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I Knapsack was tried 23 times and created 130 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I Clique was tried 23 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I OddWheel was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I MixedIntegerRounding2 was tried 23 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 23 times and created 89 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I ZeroHalf was tried 23 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.133 seconds)
Cbc0038I Stored from first was tried 23 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -201140.08 found by Reduced search after 3332 iterations and 68 nodes (1.47 seconds)
Cbc0001I Search completed - best objective -201140.08, took 3332 iterations and 68 nodes (1.47 seconds)
Cbc0032I Strong branching done 576 times (8266 iterations), fathomed 16 nodes and fixed 17 variables
Cbc0035I Maximum depth 10, 292 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.49

