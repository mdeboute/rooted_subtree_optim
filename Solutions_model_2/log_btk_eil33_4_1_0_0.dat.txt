Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-8) rows, 33 (-2) columns and 180 (-15) elements
Clp1000I sum of infeasibilities 3.31468e-05 - average 5.43391e-07, 2 fixed columns
Coin0506I Presolve 55 (-6) rows, 30 (-3) columns and 162 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 88.353084
Clp0000I Optimal - objective value 88.353084
Coin0511I After Postsolve, objective 88.353084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.353084
Clp0000I Optimal - objective value 88.353084
Clp0000I Optimal - objective value 88.353084
Coin0511I After Postsolve, objective 88.353084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.35308387 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 61 rows, 33 columns (32 integer (32 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.4416
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.555 iterations 24
Cbc0038I Solution found of 14.555
Cbc0038I Relaxing continuous gives 14.555
Cbc0038I Rounding solution of -15.0661 is better than previous of 14.555

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 33 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -15.0661 to -39.1334 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.0554
Cbc0038I Pass   2: suminf.    1.75218 (6) obj. -44.0554 iterations 10
Cbc0038I Pass   3: suminf.    1.16171 (4) obj. -44.0554 iterations 7
Cbc0038I Pass   4: suminf.    1.25119 (3) obj. -44.0554 iterations 3
Cbc0038I Pass   5: suminf.    0.56376 (2) obj. -44.0554 iterations 2
Cbc0038I Pass   6: suminf.    0.54506 (2) obj. -44.0554 iterations 2
Cbc0038I Pass   7: suminf.    0.54506 (2) obj. -44.0554 iterations 0
Cbc0038I Pass   8: suminf.    0.69129 (2) obj. -44.0554 iterations 2
Cbc0038I Pass   9: suminf.    1.74727 (8) obj. -44.0554 iterations 12
Cbc0038I Pass  10: suminf.    1.74727 (8) obj. -44.0554 iterations 3
Cbc0038I Pass  11: suminf.    0.66379 (3) obj. -44.0554 iterations 15
Cbc0038I Pass  12: suminf.    0.54766 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  13: suminf.    0.45263 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  14: suminf.    0.75686 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  15: suminf.    0.75686 (2) obj. -44.0554 iterations 0
Cbc0038I Pass  16: suminf.    0.81462 (3) obj. -44.0554 iterations 2
Cbc0038I Pass  17: suminf.    0.45298 (2) obj. -44.0554 iterations 3
Cbc0038I Pass  18: suminf.    0.20500 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  19: suminf.    0.20500 (2) obj. -44.0554 iterations 1
Cbc0038I Pass  20: suminf.    0.78853 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  21: suminf.    1.23145 (6) obj. -44.0554 iterations 9
Cbc0038I Pass  22: suminf.    0.78121 (6) obj. -44.0554 iterations 6
Cbc0038I Pass  23: suminf.    1.52321 (5) obj. -44.0554 iterations 15
Cbc0038I Pass  24: suminf.    0.87520 (2) obj. -44.0554 iterations 3
Cbc0038I Pass  25: suminf.    0.79716 (2) obj. -44.0554 iterations 1
Cbc0038I Pass  26: suminf.    0.87520 (2) obj. -44.0554 iterations 1
Cbc0038I Pass  27: suminf.    1.26738 (5) obj. -44.0554 iterations 6
Cbc0038I Pass  28: suminf.    1.16040 (4) obj. -44.0554 iterations 5
Cbc0038I Pass  29: suminf.    0.89409 (2) obj. -44.0554 iterations 4
Cbc0038I Pass  30: suminf.    0.78621 (2) obj. -44.0554 iterations 1
Cbc0038I Pass  31: suminf.    1.15161 (4) obj. -44.0554 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 33 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.1334 - took 0.04 seconds
Cbc0012I Integer solution of -39.13336 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 61 rows 33 columns, reduced to 39 rows 22 columns
Cbc0031I 13 added rows had average density of 30.846154
Cbc0013I At root node, 13 cuts changed objective from -88.353084 to -64.861346 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2186 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1148 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.13336000000001, took 4046 iterations and 20 nodes (0.34 seconds)
Cbc0032I Strong branching done 288 times (3681 iterations), fathomed 3 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-8) rows, 63 (-3) columns and 663 (-60) elements
Clp1000I sum of infeasibilities 1.57227e-06 - average 2.62046e-08, 35 fixed columns
Coin0506I Presolve 24 (-36) rows, 27 (-36) columns and 96 (-567) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 2.4453249 - largest nonzero change 2.6156566e-05 ( 0.0016580886%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value 17.505936
Clp0000I Optimal - objective value 17.505936
Coin0511I After Postsolve, objective 17.505936, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8273823 - largest nonzero change 2.2093042e-05 ( 0.0018094956%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 96.161243
Clp0000I Optimal - objective value 96.161243
Clp0000I Optimal - objective value 96.161243
Coin0511I After Postsolve, objective 96.161243, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.16124345 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 63 columns (63 integer (63 of which binary)) and 669 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.612%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 10.076
Cbc0038I Pass   1: suminf.    3.77627 (18) obj. -70.8295 iterations 20
Cbc0038I Pass   2: suminf.    3.77627 (18) obj. -70.8295 iterations 1
Cbc0038I Solution found of -24.1642
Cbc0038I Rounding solution of -30.7072 is better than previous of -24.1642

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -36.8499
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.77627 (18) obj. -70.8295 iterations 0
Cbc0038I Pass   4: suminf.    3.77627 (18) obj. -70.8295 iterations 1
Cbc0038I Pass   5: suminf.    1.13524 (7) obj. -39.3178 iterations 11
Cbc0038I Pass   6: suminf.    0.82847 (8) obj. -36.8499 iterations 19
Cbc0038I Pass   7: suminf.    0.94110 (5) obj. -36.8499 iterations 9
Cbc0038I Pass   8: suminf.    0.62242 (3) obj. -36.8499 iterations 7
Cbc0038I Pass   9: suminf.    0.62473 (3) obj. -36.8499 iterations 4
Cbc0038I Pass  10: suminf.    2.00387 (11) obj. -36.8499 iterations 11
Cbc0038I Pass  11: suminf.    1.77296 (10) obj. -45.3151 iterations 5
Cbc0038I Pass  12: suminf.    0.72649 (4) obj. -36.8499 iterations 15
Cbc0038I Pass  13: suminf.    0.72649 (4) obj. -36.8499 iterations 4
Cbc0038I Pass  14: suminf.    1.03546 (4) obj. -36.8499 iterations 4
Cbc0038I Pass  15: suminf.    1.03546 (4) obj. -36.8499 iterations 3
Cbc0038I Pass  16: suminf.    0.72649 (4) obj. -36.8499 iterations 9
Cbc0038I Pass  17: suminf.    1.50938 (7) obj. -43.2046 iterations 11
Cbc0038I Pass  18: suminf.    1.39800 (6) obj. -42.1794 iterations 1
Cbc0038I Pass  19: suminf.    0.91282 (4) obj. -36.8499 iterations 14
Cbc0038I Pass  20: suminf.    0.91282 (4) obj. -36.8499 iterations 2
Cbc0038I Pass  21: suminf.    0.97351 (4) obj. -36.8499 iterations 2
Cbc0038I Pass  22: suminf.    0.63238 (3) obj. -37.5283 iterations 4
Cbc0038I Pass  23: suminf.    1.89473 (9) obj. -36.8499 iterations 22
Cbc0038I Pass  24: suminf.    1.89473 (9) obj. -36.8499 iterations 1
Cbc0038I Pass  25: suminf.    1.23506 (6) obj. -36.8499 iterations 11
Cbc0038I Pass  26: suminf.    1.01147 (6) obj. -36.8499 iterations 2
Cbc0038I Pass  27: suminf.    1.67269 (6) obj. -36.8499 iterations 7
Cbc0038I Pass  28: suminf.    1.12106 (5) obj. -36.8499 iterations 1
Cbc0038I Pass  29: suminf.    0.81298 (5) obj. -38.0067 iterations 5
Cbc0038I Pass  30: suminf.    0.97824 (5) obj. -36.8499 iterations 5
Cbc0038I Pass  31: suminf.    1.98809 (11) obj. -36.8619 iterations 24
Cbc0038I Pass  32: suminf.    1.71523 (9) obj. -36.8499 iterations 12
Cbc0038I Rounding solution of -31.0978 is better than previous of -30.7072

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 40 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -31.0978 to -39.1334 (0.04 seconds)
Cbc0038I Round again with cutoff of -49.7335
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.77627 (18) obj. -70.8295 iterations 0
Cbc0038I Pass  33: suminf.    3.77627 (18) obj. -70.8295 iterations 1
Cbc0038I Pass  34: suminf.    1.41651 (9) obj. -49.7335 iterations 32
Cbc0038I Pass  35: suminf.    1.19276 (8) obj. -49.7335 iterations 5
Cbc0038I Pass  36: suminf.    1.42276 (6) obj. -49.7335 iterations 21
Cbc0038I Pass  37: suminf.    1.42276 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  38: suminf.    1.46316 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  39: suminf.    1.46316 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  40: suminf.    1.42276 (6) obj. -49.7335 iterations 7
Cbc0038I Pass  41: suminf.    1.74080 (8) obj. -49.7335 iterations 11
Cbc0038I Pass  42: suminf.    1.74080 (8) obj. -49.7335 iterations 3
Cbc0038I Pass  43: suminf.    5.24847 (19) obj. -49.7335 iterations 17
Cbc0038I Pass  44: suminf.    3.63754 (14) obj. -49.7335 iterations 8
Cbc0038I Pass  45: suminf.    3.63754 (14) obj. -49.7335 iterations 2
Cbc0038I Pass  46: suminf.    1.73275 (7) obj. -49.7335 iterations 16
Cbc0038I Pass  47: suminf.    1.26918 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  48: suminf.    1.58942 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  49: suminf.    1.58942 (6) obj. -49.7335 iterations 3
Cbc0038I Pass  50: suminf.    1.60601 (6) obj. -49.7335 iterations 5
Cbc0038I Pass  51: suminf.    1.60601 (6) obj. -49.7335 iterations 3
Cbc0038I Pass  52: suminf.    1.58942 (6) obj. -49.7335 iterations 5
Cbc0038I Pass  53: suminf.    1.49951 (8) obj. -49.7335 iterations 14
Cbc0038I Pass  54: suminf.    1.37286 (8) obj. -51.9078 iterations 6
Cbc0038I Pass  55: suminf.    1.33932 (6) obj. -49.7335 iterations 8
Cbc0038I Pass  56: suminf.    1.26086 (6) obj. -50.2042 iterations 3
Cbc0038I Pass  57: suminf.    2.22554 (10) obj. -49.7335 iterations 14
Cbc0038I Pass  58: suminf.    1.69165 (8) obj. -51.5397 iterations 3
Cbc0038I Pass  59: suminf.    1.76096 (10) obj. -49.7335 iterations 14
Cbc0038I Pass  60: suminf.    1.68753 (8) obj. -49.7335 iterations 2
Cbc0038I Pass  61: suminf.    1.32238 (6) obj. -49.7335 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.1334 - took 0.04 seconds
Cbc0012I Integer solution of -39.13336 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 60 rows 63 columns, reduced to 19 rows 21 columns
Cbc0031I 25 added rows had average density of 10.4
Cbc0013I At root node, 25 cuts changed objective from -92.133739 to -41.316554 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1015 row cuts average 3.5 elements, 17 column cuts (17 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 540 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 207 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 247 row cuts average 24.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.704 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.13336 best solution, best possible -41.316475 (1.53 seconds)
Cbc0001I Search completed - best objective -39.13336000000001, took 2091 iterations and 14 nodes (2.25 seconds)
Cbc0032I Strong branching done 124 times (788 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.42   (Wallclock seconds):       2.25

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-8) rows, 33 (-2) columns and 180 (-15) elements
Clp1000I sum of infeasibilities 3.31468e-05 - average 5.43391e-07, 2 fixed columns
Coin0506I Presolve 55 (-6) rows, 30 (-3) columns and 162 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 88.353084
Clp0000I Optimal - objective value 88.353084
Coin0511I After Postsolve, objective 88.353084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.353084
Clp0000I Optimal - objective value 88.353084
Clp0000I Optimal - objective value 88.353084
Coin0511I After Postsolve, objective 88.353084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.35308387 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 61 rows, 33 columns (32 integer (32 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.4416
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.555 iterations 24
Cbc0038I Solution found of 14.555
Cbc0038I Relaxing continuous gives 14.555
Cbc0038I Rounding solution of -15.0661 is better than previous of 14.555

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 33 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -15.0661 to -39.1334 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.0554
Cbc0038I Pass   2: suminf.    1.75218 (6) obj. -44.0554 iterations 10
Cbc0038I Pass   3: suminf.    1.16171 (4) obj. -44.0554 iterations 7
Cbc0038I Pass   4: suminf.    1.25119 (3) obj. -44.0554 iterations 3
Cbc0038I Pass   5: suminf.    0.56376 (2) obj. -44.0554 iterations 2
Cbc0038I Pass   6: suminf.    0.54506 (2) obj. -44.0554 iterations 2
Cbc0038I Pass   7: suminf.    0.54506 (2) obj. -44.0554 iterations 0
Cbc0038I Pass   8: suminf.    0.69129 (2) obj. -44.0554 iterations 2
Cbc0038I Pass   9: suminf.    1.74727 (8) obj. -44.0554 iterations 12
Cbc0038I Pass  10: suminf.    1.74727 (8) obj. -44.0554 iterations 3
Cbc0038I Pass  11: suminf.    0.66379 (3) obj. -44.0554 iterations 15
Cbc0038I Pass  12: suminf.    0.54766 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  13: suminf.    0.45263 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  14: suminf.    0.75686 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  15: suminf.    0.75686 (2) obj. -44.0554 iterations 0
Cbc0038I Pass  16: suminf.    0.81462 (3) obj. -44.0554 iterations 2
Cbc0038I Pass  17: suminf.    0.45298 (2) obj. -44.0554 iterations 3
Cbc0038I Pass  18: suminf.    0.20500 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  19: suminf.    0.20500 (2) obj. -44.0554 iterations 1
Cbc0038I Pass  20: suminf.    0.78853 (2) obj. -44.0554 iterations 2
Cbc0038I Pass  21: suminf.    1.23145 (6) obj. -44.0554 iterations 9
Cbc0038I Pass  22: suminf.    0.78121 (6) obj. -44.0554 iterations 6
Cbc0038I Pass  23: suminf.    1.52321 (5) obj. -44.0554 iterations 15
Cbc0038I Pass  24: suminf.    0.87520 (2) obj. -44.0554 iterations 3
Cbc0038I Pass  25: suminf.    0.79716 (2) obj. -44.0554 iterations 1
Cbc0038I Pass  26: suminf.    0.87520 (2) obj. -44.0554 iterations 1
Cbc0038I Pass  27: suminf.    1.26738 (5) obj. -44.0554 iterations 6
Cbc0038I Pass  28: suminf.    1.16040 (4) obj. -44.0554 iterations 5
Cbc0038I Pass  29: suminf.    0.89409 (2) obj. -44.0554 iterations 4
Cbc0038I Pass  30: suminf.    0.78621 (2) obj. -44.0554 iterations 1
Cbc0038I Pass  31: suminf.    1.15161 (4) obj. -44.0554 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 33 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.1334 - took 0.04 seconds
Cbc0012I Integer solution of -39.13336 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 61 rows 33 columns, reduced to 39 rows 22 columns
Cbc0031I 13 added rows had average density of 30.846154
Cbc0013I At root node, 13 cuts changed objective from -88.353084 to -64.861346 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2186 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1148 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.13336000000001, took 4046 iterations and 20 nodes (0.40 seconds)
Cbc0032I Strong branching done 288 times (3681 iterations), fathomed 3 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-9) rows, 63 (-4) columns and 663 (-61) elements
Clp1000I sum of infeasibilities 1.57227e-06 - average 2.62046e-08, 35 fixed columns
Coin0506I Presolve 24 (-36) rows, 27 (-36) columns and 96 (-567) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 2.4453249 - largest nonzero change 2.6156566e-05 ( 0.0016580886%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value 17.505936
Clp0000I Optimal - objective value 17.505936
Coin0511I After Postsolve, objective 17.505936, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8273823 - largest nonzero change 2.2093042e-05 ( 0.0018094956%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 96.161243
Clp0000I Optimal - objective value 96.161243
Clp0000I Optimal - objective value 96.161243
Coin0511I After Postsolve, objective 96.161243, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.16124345 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 63 columns (63 integer (63 of which binary)) and 669 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.612%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 10.076
Cbc0038I Pass   1: suminf.    3.77627 (18) obj. -70.8295 iterations 20
Cbc0038I Pass   2: suminf.    3.77627 (18) obj. -70.8295 iterations 1
Cbc0038I Solution found of -24.1642
Cbc0038I Rounding solution of -30.7072 is better than previous of -24.1642

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -36.8499
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.77627 (18) obj. -70.8295 iterations 0
Cbc0038I Pass   4: suminf.    3.77627 (18) obj. -70.8295 iterations 1
Cbc0038I Pass   5: suminf.    1.13524 (7) obj. -39.3178 iterations 11
Cbc0038I Pass   6: suminf.    0.82847 (8) obj. -36.8499 iterations 19
Cbc0038I Pass   7: suminf.    0.94110 (5) obj. -36.8499 iterations 9
Cbc0038I Pass   8: suminf.    0.62242 (3) obj. -36.8499 iterations 7
Cbc0038I Pass   9: suminf.    0.62473 (3) obj. -36.8499 iterations 4
Cbc0038I Pass  10: suminf.    2.00387 (11) obj. -36.8499 iterations 11
Cbc0038I Pass  11: suminf.    1.77296 (10) obj. -45.3151 iterations 5
Cbc0038I Pass  12: suminf.    0.72649 (4) obj. -36.8499 iterations 15
Cbc0038I Pass  13: suminf.    0.72649 (4) obj. -36.8499 iterations 4
Cbc0038I Pass  14: suminf.    1.03546 (4) obj. -36.8499 iterations 4
Cbc0038I Pass  15: suminf.    1.03546 (4) obj. -36.8499 iterations 3
Cbc0038I Pass  16: suminf.    0.72649 (4) obj. -36.8499 iterations 9
Cbc0038I Pass  17: suminf.    1.50938 (7) obj. -43.2046 iterations 11
Cbc0038I Pass  18: suminf.    1.39800 (6) obj. -42.1794 iterations 1
Cbc0038I Pass  19: suminf.    0.91282 (4) obj. -36.8499 iterations 14
Cbc0038I Pass  20: suminf.    0.91282 (4) obj. -36.8499 iterations 2
Cbc0038I Pass  21: suminf.    0.97351 (4) obj. -36.8499 iterations 2
Cbc0038I Pass  22: suminf.    0.63238 (3) obj. -37.5283 iterations 4
Cbc0038I Pass  23: suminf.    1.89473 (9) obj. -36.8499 iterations 22
Cbc0038I Pass  24: suminf.    1.89473 (9) obj. -36.8499 iterations 1
Cbc0038I Pass  25: suminf.    1.23506 (6) obj. -36.8499 iterations 11
Cbc0038I Pass  26: suminf.    1.01147 (6) obj. -36.8499 iterations 2
Cbc0038I Pass  27: suminf.    1.67269 (6) obj. -36.8499 iterations 7
Cbc0038I Pass  28: suminf.    1.12106 (5) obj. -36.8499 iterations 1
Cbc0038I Pass  29: suminf.    0.81298 (5) obj. -38.0067 iterations 5
Cbc0038I Pass  30: suminf.    0.97824 (5) obj. -36.8499 iterations 5
Cbc0038I Pass  31: suminf.    1.98809 (11) obj. -36.8619 iterations 24
Cbc0038I Pass  32: suminf.    1.71523 (9) obj. -36.8499 iterations 12
Cbc0038I Rounding solution of -31.0978 is better than previous of -30.7072

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 40 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -31.0978 to -39.1334 (0.04 seconds)
Cbc0038I Round again with cutoff of -49.7335
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.77627 (18) obj. -70.8295 iterations 0
Cbc0038I Pass  33: suminf.    3.77627 (18) obj. -70.8295 iterations 1
Cbc0038I Pass  34: suminf.    1.41651 (9) obj. -49.7335 iterations 32
Cbc0038I Pass  35: suminf.    1.19276 (8) obj. -49.7335 iterations 5
Cbc0038I Pass  36: suminf.    1.42276 (6) obj. -49.7335 iterations 21
Cbc0038I Pass  37: suminf.    1.42276 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  38: suminf.    1.46316 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  39: suminf.    1.46316 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  40: suminf.    1.42276 (6) obj. -49.7335 iterations 7
Cbc0038I Pass  41: suminf.    1.74080 (8) obj. -49.7335 iterations 11
Cbc0038I Pass  42: suminf.    1.74080 (8) obj. -49.7335 iterations 3
Cbc0038I Pass  43: suminf.    5.24847 (19) obj. -49.7335 iterations 17
Cbc0038I Pass  44: suminf.    3.63754 (14) obj. -49.7335 iterations 8
Cbc0038I Pass  45: suminf.    3.63754 (14) obj. -49.7335 iterations 2
Cbc0038I Pass  46: suminf.    1.73275 (7) obj. -49.7335 iterations 16
Cbc0038I Pass  47: suminf.    1.26918 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  48: suminf.    1.58942 (6) obj. -49.7335 iterations 4
Cbc0038I Pass  49: suminf.    1.58942 (6) obj. -49.7335 iterations 3
Cbc0038I Pass  50: suminf.    1.60601 (6) obj. -49.7335 iterations 5
Cbc0038I Pass  51: suminf.    1.60601 (6) obj. -49.7335 iterations 3
Cbc0038I Pass  52: suminf.    1.58942 (6) obj. -49.7335 iterations 5
Cbc0038I Pass  53: suminf.    1.49951 (8) obj. -49.7335 iterations 14
Cbc0038I Pass  54: suminf.    1.37286 (8) obj. -51.9078 iterations 6
Cbc0038I Pass  55: suminf.    1.33932 (6) obj. -49.7335 iterations 8
Cbc0038I Pass  56: suminf.    1.26086 (6) obj. -50.2042 iterations 3
Cbc0038I Pass  57: suminf.    2.22554 (10) obj. -49.7335 iterations 14
Cbc0038I Pass  58: suminf.    1.69165 (8) obj. -51.5397 iterations 3
Cbc0038I Pass  59: suminf.    1.76096 (10) obj. -49.7335 iterations 14
Cbc0038I Pass  60: suminf.    1.68753 (8) obj. -49.7335 iterations 2
Cbc0038I Pass  61: suminf.    1.32238 (6) obj. -49.7335 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.1334 - took 0.04 seconds
Cbc0012I Integer solution of -39.13336 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 60 rows 63 columns, reduced to 19 rows 21 columns
Cbc0031I 25 added rows had average density of 10.4
Cbc0013I At root node, 25 cuts changed objective from -92.133739 to -41.316554 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1015 row cuts average 3.5 elements, 17 column cuts (17 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 540 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 207 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 247 row cuts average 24.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.750 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.13336 best solution, best possible -41.316475 (1.63 seconds)
Cbc0010I After 11 nodes, 2 on tree, -39.13336 best solution, best possible -39.851569 (2.33 seconds)
Cbc0001I Search completed - best objective -39.13336000000001, took 2091 iterations and 14 nodes (2.41 seconds)
Cbc0032I Strong branching done 124 times (788 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.51   (Wallclock seconds):       2.41

