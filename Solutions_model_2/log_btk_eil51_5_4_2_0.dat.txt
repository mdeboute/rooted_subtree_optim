Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 7.56742e-07 - average 8.69819e-09, 2 fixed columns
Coin0506I Presolve 84 (-3) rows, 49 (-2) columns and 258 (-10) elements
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 0.394317 - largest nonzero change 0 ( 0%) - largest zero change 2.9392985e-05
Clp0000I Optimal - objective value 45.429475
Clp0000I Optimal - objective value 45.429475
Coin0511I After Postsolve, objective 45.429475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.429475
Clp0000I Optimal - objective value 45.429475
Clp0000I Optimal - objective value 45.429475
Coin0511I After Postsolve, objective 45.429475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.42947522 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.60056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.07646 iterations 38
Cbc0038I Solution found of 4.07646
Cbc0038I Relaxing continuous gives 4.07646
Cbc0038I Rounding solution of -10.2868 is better than previous of 4.07646

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -10.2868 to -15.8611 (0.06 seconds)
Cbc0038I Round again with cutoff of -18.8181
Cbc0038I Pass   2: suminf.    2.71224 (8) obj. -18.8181 iterations 16
Cbc0038I Pass   3: suminf.    0.71857 (3) obj. -18.8181 iterations 11
Cbc0038I Pass   4: suminf.    0.71447 (3) obj. -18.8181 iterations 1
Cbc0038I Pass   5: suminf.    1.24063 (5) obj. -18.8181 iterations 4
Cbc0038I Pass   6: suminf.    1.44567 (5) obj. -18.8181 iterations 6
Cbc0038I Pass   7: suminf.    1.25985 (5) obj. -18.8181 iterations 3
Cbc0038I Pass   8: suminf.    1.41237 (4) obj. -18.8181 iterations 7
Cbc0038I Pass   9: suminf.    1.12240 (4) obj. -18.8181 iterations 2
Cbc0038I Pass  10: suminf.    2.11045 (6) obj. -18.8181 iterations 6
Cbc0038I Pass  11: suminf.    2.11045 (6) obj. -18.8181 iterations 0
Cbc0038I Pass  12: suminf.    0.72451 (6) obj. -18.8181 iterations 11
Cbc0038I Pass  13: suminf.    1.56168 (5) obj. -18.8181 iterations 12
Cbc0038I Pass  14: suminf.    0.74128 (4) obj. -18.8181 iterations 3
Cbc0038I Pass  15: suminf.    2.21551 (6) obj. -18.8181 iterations 4
Cbc0038I Pass  16: suminf.    1.26184 (4) obj. -18.8181 iterations 2
Cbc0038I Pass  17: suminf.    0.90477 (4) obj. -18.8181 iterations 2
Cbc0038I Pass  18: suminf.    1.10651 (4) obj. -18.8181 iterations 6
Cbc0038I Pass  19: suminf.    0.70631 (4) obj. -18.8181 iterations 3
Cbc0038I Pass  20: suminf.    1.22719 (5) obj. -18.8181 iterations 7
Cbc0038I Pass  21: suminf.    1.47464 (4) obj. -18.8181 iterations 6
Cbc0038I Pass  22: suminf.    0.92030 (4) obj. -18.8181 iterations 2
Cbc0038I Pass  23: suminf.    2.06085 (6) obj. -18.8181 iterations 4
Cbc0038I Pass  24: suminf.    1.55890 (6) obj. -18.8181 iterations 5
Cbc0038I Pass  25: suminf.    1.19925 (5) obj. -18.8181 iterations 1
Cbc0038I Pass  26: suminf.    2.15623 (6) obj. -18.8181 iterations 7
Cbc0038I Pass  27: suminf.    2.29913 (7) obj. -18.8181 iterations 18
Cbc0038I Pass  28: suminf.    1.54535 (4) obj. -18.8181 iterations 12
Cbc0038I Pass  29: suminf.    1.54535 (4) obj. -18.8181 iterations 0
Cbc0038I Pass  30: suminf.    1.34712 (4) obj. -18.8181 iterations 9
Cbc0038I Pass  31: suminf.    1.34712 (4) obj. -18.8181 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 65 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -15.8611 - took 0.09 seconds
Cbc0012I Integer solution of -15.861128 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 63 rows 37 columns
Cbc0031I 17 added rows had average density of 37.294118
Cbc0013I At root node, 17 cuts changed objective from -45.429475 to -36.065009 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6642 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1252 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0038I Full problem 87 rows 51 columns, reduced to 3 rows 5 columns
Cbc0001I Search completed - best objective -15.86112800000001, took 6099 iterations and 54 nodes (0.64 seconds)
Cbc0032I Strong branching done 562 times (8903 iterations), fathomed 5 nodes and fixed 17 variables
Cbc0035I Maximum depth 16, 94 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 70 (-34) rows, 83 (-19) columns and 1060 (-518) elements
Clp1000I sum of infeasibilities 2.74781e-08 - average 3.92544e-10, 11 fixed columns
Coin0506I Presolve 60 (-10) rows, 69 (-14) columns and 788 (-272) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 3.5139753 - largest nonzero change 1.5083644e-05 ( 0.0010393299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 59.700235
Clp0000I Optimal - objective value 59.700235
Coin0511I After Postsolve, objective 59.700235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.700235
Clp0000I Optimal - objective value 59.700235
Clp0000I Optimal - objective value 59.700235
Coin0511I After Postsolve, objective 59.700235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.70023512 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 84 columns (84 integer (84 of which binary)) and 1065 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.903%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.81413
Cbc0038I Pass   1: suminf.    2.78788 (22) obj. -35.6301 iterations 15
Cbc0038I Pass   2: suminf.    2.78788 (22) obj. -35.6301 iterations 1
Cbc0038I Pass   3: suminf.    0.51678 (6) obj. -15.9312 iterations 16
Cbc0038I Solution found of -8.61389
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -8.61389 to -12.9825 (0.02 seconds)
Cbc0038I Round again with cutoff of -16.6379
Cbc0038I Pass   4: suminf.    2.78788 (22) obj. -35.6301 iterations 0
Cbc0038I Pass   5: suminf.    2.78788 (22) obj. -35.6301 iterations 1
Cbc0038I Pass   6: suminf.    0.82992 (11) obj. -16.6379 iterations 23
Cbc0038I Pass   7: suminf.    1.45984 (11) obj. -16.6379 iterations 24
Cbc0038I Pass   8: suminf.    1.44795 (8) obj. -16.6379 iterations 2
Cbc0038I Pass   9: suminf.    0.92256 (4) obj. -16.6379 iterations 15
Cbc0038I Pass  10: suminf.    0.90002 (4) obj. -16.6379 iterations 6
Cbc0038I Pass  11: suminf.    0.91393 (4) obj. -16.6379 iterations 2
Cbc0038I Pass  12: suminf.    0.89360 (3) obj. -16.6379 iterations 2
Cbc0038I Pass  13: suminf.    0.92256 (4) obj. -16.6379 iterations 11
Cbc0038I Pass  14: suminf.    2.19941 (8) obj. -16.6379 iterations 26
Cbc0038I Pass  15: suminf.    1.36011 (8) obj. -16.6379 iterations 10
Cbc0038I Pass  16: suminf.    1.16655 (4) obj. -16.6379 iterations 11
Cbc0038I Pass  17: suminf.    0.62598 (4) obj. -16.6379 iterations 3
Cbc0038I Pass  18: suminf.    0.94293 (4) obj. -16.6379 iterations 8
Cbc0038I Pass  19: suminf.    5.14152 (18) obj. -16.6379 iterations 23
Cbc0038I Pass  20: suminf.    2.52004 (11) obj. -16.6379 iterations 10
Cbc0038I Pass  21: suminf.    2.25602 (16) obj. -16.6379 iterations 5
Cbc0038I Pass  22: suminf.    1.10474 (7) obj. -16.6379 iterations 21
Cbc0038I Pass  23: suminf.    1.10082 (7) obj. -16.6379 iterations 2
Cbc0038I Pass  24: suminf.    2.70192 (12) obj. -16.6379 iterations 13
Cbc0038I Pass  25: suminf.    2.70192 (12) obj. -16.6379 iterations 0
Cbc0038I Pass  26: suminf.    1.14948 (7) obj. -16.6379 iterations 9
Cbc0038I Pass  27: suminf.    0.92118 (7) obj. -16.6379 iterations 3
Cbc0038I Pass  28: suminf.    2.23307 (13) obj. -16.6379 iterations 32
Cbc0038I Pass  29: suminf.    1.99953 (10) obj. -16.6379 iterations 8
Cbc0038I Pass  30: suminf.    1.67831 (10) obj. -16.6379 iterations 16
Cbc0038I Pass  31: suminf.    1.67831 (10) obj. -16.6379 iterations 1
Cbc0038I Pass  32: suminf.    1.80193 (7) obj. -16.6379 iterations 15
Cbc0038I Pass  33: suminf.    1.77449 (8) obj. -16.6379 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 48 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -12.9825 to -15.8611 (0.07 seconds)
Cbc0038I Round again with cutoff of -23.2175
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.78788 (22) obj. -35.6301 iterations 0
Cbc0038I Pass  34: suminf.    2.78788 (22) obj. -35.6301 iterations 1
Cbc0038I Pass  35: suminf.    1.91912 (12) obj. -23.2175 iterations 27
Cbc0038I Pass  36: suminf.    1.91912 (12) obj. -23.2175 iterations 0
Cbc0038I Pass  37: suminf.    1.98839 (9) obj. -23.2175 iterations 25
Cbc0038I Pass  38: suminf.    1.98839 (9) obj. -23.2175 iterations 0
Cbc0038I Pass  39: suminf.    1.76479 (8) obj. -23.2175 iterations 9
Cbc0038I Pass  40: suminf.    1.76479 (8) obj. -23.2175 iterations 3
Cbc0038I Pass  41: suminf.    1.75723 (8) obj. -23.2175 iterations 6
Cbc0038I Pass  42: suminf.    1.75723 (8) obj. -23.2175 iterations 4
Cbc0038I Pass  43: suminf.    1.76479 (8) obj. -23.2175 iterations 6
Cbc0038I Pass  44: suminf.    2.44788 (12) obj. -23.2175 iterations 23
Cbc0038I Pass  45: suminf.    2.37809 (12) obj. -23.2175 iterations 3
Cbc0038I Pass  46: suminf.    1.95572 (8) obj. -23.2175 iterations 18
Cbc0038I Pass  47: suminf.    1.86975 (10) obj. -23.2175 iterations 3
Cbc0038I Pass  48: suminf.    1.85859 (8) obj. -23.2175 iterations 10
Cbc0038I Pass  49: suminf.    1.82215 (9) obj. -23.2175 iterations 5
Cbc0038I Pass  50: suminf.    2.16467 (11) obj. -23.2175 iterations 14
Cbc0038I Pass  51: suminf.    2.68336 (12) obj. -23.2175 iterations 12
Cbc0038I Pass  52: suminf.    2.40612 (14) obj. -23.2175 iterations 6
Cbc0038I Pass  53: suminf.    3.87155 (18) obj. -23.2175 iterations 21
Cbc0038I Pass  54: suminf.    2.30257 (11) obj. -23.2175 iterations 10
Cbc0038I Pass  55: suminf.    1.87194 (11) obj. -23.2175 iterations 1
Cbc0038I Pass  56: suminf.    1.49456 (8) obj. -23.2175 iterations 3
Cbc0038I Pass  57: suminf.    1.87194 (11) obj. -23.2175 iterations 7
Cbc0038I Pass  58: suminf.    2.52344 (14) obj. -23.2175 iterations 11
Cbc0038I Pass  59: suminf.    2.07386 (11) obj. -23.2175 iterations 7
Cbc0038I Pass  60: suminf.    1.87194 (11) obj. -23.2175 iterations 13
Cbc0038I Pass  61: suminf.    2.73753 (12) obj. -23.2175 iterations 10
Cbc0038I Pass  62: suminf.    2.73753 (12) obj. -23.2175 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 32 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -15.8611 - took 0.08 seconds
Cbc0012I Integer solution of -15.861128 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 71 rows 84 columns, reduced to 19 rows 22 columns
Cbc0031I 44 added rows had average density of 33.840909
Cbc0013I At root node, 44 cuts changed objective from -49.535727 to -22.035925 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10749 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1586 row cuts average 76.7 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 114 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1457 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 405 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.861128 best solution, best possible -22.035925 (2.37 seconds)
Cbc0001I Search completed - best objective -15.86112800000001, took 5199 iterations and 34 nodes (2.69 seconds)
Cbc0032I Strong branching done 450 times (7264 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 15, 35 variables fixed on reduced cost
Total time (CPU seconds):       1.90   (Wallclock seconds):       2.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 7.56742e-07 - average 8.69819e-09, 2 fixed columns
Coin0506I Presolve 84 (-3) rows, 49 (-2) columns and 258 (-10) elements
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 0.394317 - largest nonzero change 0 ( 0%) - largest zero change 2.9392985e-05
Clp0000I Optimal - objective value 45.429475
Clp0000I Optimal - objective value 45.429475
Coin0511I After Postsolve, objective 45.429475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.429475
Clp0000I Optimal - objective value 45.429475
Clp0000I Optimal - objective value 45.429475
Coin0511I After Postsolve, objective 45.429475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.42947522 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.60056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.07646 iterations 38
Cbc0038I Solution found of 4.07646
Cbc0038I Relaxing continuous gives 4.07646
Cbc0038I Rounding solution of -10.2868 is better than previous of 4.07646

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -10.2868 to -15.8611 (0.05 seconds)
Cbc0038I Round again with cutoff of -18.8181
Cbc0038I Pass   2: suminf.    2.71224 (8) obj. -18.8181 iterations 16
Cbc0038I Pass   3: suminf.    0.71857 (3) obj. -18.8181 iterations 11
Cbc0038I Pass   4: suminf.    0.71447 (3) obj. -18.8181 iterations 1
Cbc0038I Pass   5: suminf.    1.24063 (5) obj. -18.8181 iterations 4
Cbc0038I Pass   6: suminf.    1.44567 (5) obj. -18.8181 iterations 6
Cbc0038I Pass   7: suminf.    1.25985 (5) obj. -18.8181 iterations 3
Cbc0038I Pass   8: suminf.    1.41237 (4) obj. -18.8181 iterations 7
Cbc0038I Pass   9: suminf.    1.12240 (4) obj. -18.8181 iterations 2
Cbc0038I Pass  10: suminf.    2.11045 (6) obj. -18.8181 iterations 6
Cbc0038I Pass  11: suminf.    2.11045 (6) obj. -18.8181 iterations 0
Cbc0038I Pass  12: suminf.    0.72451 (6) obj. -18.8181 iterations 11
Cbc0038I Pass  13: suminf.    1.56168 (5) obj. -18.8181 iterations 12
Cbc0038I Pass  14: suminf.    0.74128 (4) obj. -18.8181 iterations 3
Cbc0038I Pass  15: suminf.    2.21551 (6) obj. -18.8181 iterations 4
Cbc0038I Pass  16: suminf.    1.26184 (4) obj. -18.8181 iterations 2
Cbc0038I Pass  17: suminf.    0.90477 (4) obj. -18.8181 iterations 2
Cbc0038I Pass  18: suminf.    1.10651 (4) obj. -18.8181 iterations 6
Cbc0038I Pass  19: suminf.    0.70631 (4) obj. -18.8181 iterations 3
Cbc0038I Pass  20: suminf.    1.22719 (5) obj. -18.8181 iterations 7
Cbc0038I Pass  21: suminf.    1.47464 (4) obj. -18.8181 iterations 6
Cbc0038I Pass  22: suminf.    0.92030 (4) obj. -18.8181 iterations 2
Cbc0038I Pass  23: suminf.    2.06085 (6) obj. -18.8181 iterations 4
Cbc0038I Pass  24: suminf.    1.55890 (6) obj. -18.8181 iterations 5
Cbc0038I Pass  25: suminf.    1.19925 (5) obj. -18.8181 iterations 1
Cbc0038I Pass  26: suminf.    2.15623 (6) obj. -18.8181 iterations 7
Cbc0038I Pass  27: suminf.    2.29913 (7) obj. -18.8181 iterations 18
Cbc0038I Pass  28: suminf.    1.54535 (4) obj. -18.8181 iterations 12
Cbc0038I Pass  29: suminf.    1.54535 (4) obj. -18.8181 iterations 0
Cbc0038I Pass  30: suminf.    1.34712 (4) obj. -18.8181 iterations 9
Cbc0038I Pass  31: suminf.    1.34712 (4) obj. -18.8181 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 65 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -15.8611 - took 0.09 seconds
Cbc0012I Integer solution of -15.861128 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 63 rows 37 columns
Cbc0031I 17 added rows had average density of 37.294118
Cbc0013I At root node, 17 cuts changed objective from -45.429475 to -36.065009 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6642 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1252 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0038I Full problem 87 rows 51 columns, reduced to 3 rows 5 columns
Cbc0001I Search completed - best objective -15.86112800000001, took 6099 iterations and 54 nodes (0.61 seconds)
Cbc0032I Strong branching done 562 times (8903 iterations), fathomed 5 nodes and fixed 17 variables
Cbc0035I Maximum depth 16, 94 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 70 (-35) rows, 83 (-20) columns and 1060 (-519) elements
Clp1000I sum of infeasibilities 2.74781e-08 - average 3.92544e-10, 11 fixed columns
Coin0506I Presolve 60 (-10) rows, 69 (-14) columns and 788 (-272) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 3.5139753 - largest nonzero change 1.5083644e-05 ( 0.0010393299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 59.700235
Clp0000I Optimal - objective value 59.700235
Coin0511I After Postsolve, objective 59.700235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.700235
Clp0000I Optimal - objective value 59.700235
Clp0000I Optimal - objective value 59.700235
Coin0511I After Postsolve, objective 59.700235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.70023512 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 84 columns (84 integer (84 of which binary)) and 1065 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.903%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.81413
Cbc0038I Pass   1: suminf.    2.78788 (22) obj. -35.6301 iterations 15
Cbc0038I Pass   2: suminf.    2.78788 (22) obj. -35.6301 iterations 1
Cbc0038I Pass   3: suminf.    0.51678 (6) obj. -15.9312 iterations 16
Cbc0038I Solution found of -8.61389
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -8.61389 to -12.9825 (0.02 seconds)
Cbc0038I Round again with cutoff of -16.6379
Cbc0038I Pass   4: suminf.    2.78788 (22) obj. -35.6301 iterations 0
Cbc0038I Pass   5: suminf.    2.78788 (22) obj. -35.6301 iterations 1
Cbc0038I Pass   6: suminf.    0.82992 (11) obj. -16.6379 iterations 23
Cbc0038I Pass   7: suminf.    1.45984 (11) obj. -16.6379 iterations 24
Cbc0038I Pass   8: suminf.    1.44795 (8) obj. -16.6379 iterations 2
Cbc0038I Pass   9: suminf.    0.92256 (4) obj. -16.6379 iterations 15
Cbc0038I Pass  10: suminf.    0.90002 (4) obj. -16.6379 iterations 6
Cbc0038I Pass  11: suminf.    0.91393 (4) obj. -16.6379 iterations 2
Cbc0038I Pass  12: suminf.    0.89360 (3) obj. -16.6379 iterations 2
Cbc0038I Pass  13: suminf.    0.92256 (4) obj. -16.6379 iterations 11
Cbc0038I Pass  14: suminf.    2.19941 (8) obj. -16.6379 iterations 26
Cbc0038I Pass  15: suminf.    1.36011 (8) obj. -16.6379 iterations 10
Cbc0038I Pass  16: suminf.    1.16655 (4) obj. -16.6379 iterations 11
Cbc0038I Pass  17: suminf.    0.62598 (4) obj. -16.6379 iterations 3
Cbc0038I Pass  18: suminf.    0.94293 (4) obj. -16.6379 iterations 8
Cbc0038I Pass  19: suminf.    5.14152 (18) obj. -16.6379 iterations 23
Cbc0038I Pass  20: suminf.    2.52004 (11) obj. -16.6379 iterations 10
Cbc0038I Pass  21: suminf.    2.25602 (16) obj. -16.6379 iterations 5
Cbc0038I Pass  22: suminf.    1.10474 (7) obj. -16.6379 iterations 21
Cbc0038I Pass  23: suminf.    1.10082 (7) obj. -16.6379 iterations 2
Cbc0038I Pass  24: suminf.    2.70192 (12) obj. -16.6379 iterations 13
Cbc0038I Pass  25: suminf.    2.70192 (12) obj. -16.6379 iterations 0
Cbc0038I Pass  26: suminf.    1.14948 (7) obj. -16.6379 iterations 9
Cbc0038I Pass  27: suminf.    0.92118 (7) obj. -16.6379 iterations 3
Cbc0038I Pass  28: suminf.    2.23307 (13) obj. -16.6379 iterations 32
Cbc0038I Pass  29: suminf.    1.99953 (10) obj. -16.6379 iterations 8
Cbc0038I Pass  30: suminf.    1.67831 (10) obj. -16.6379 iterations 16
Cbc0038I Pass  31: suminf.    1.67831 (10) obj. -16.6379 iterations 1
Cbc0038I Pass  32: suminf.    1.80193 (7) obj. -16.6379 iterations 15
Cbc0038I Pass  33: suminf.    1.77449 (8) obj. -16.6379 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 48 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -12.9825 to -15.8611 (0.06 seconds)
Cbc0038I Round again with cutoff of -23.2175
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.78788 (22) obj. -35.6301 iterations 0
Cbc0038I Pass  34: suminf.    2.78788 (22) obj. -35.6301 iterations 1
Cbc0038I Pass  35: suminf.    1.91912 (12) obj. -23.2175 iterations 27
Cbc0038I Pass  36: suminf.    1.91912 (12) obj. -23.2175 iterations 0
Cbc0038I Pass  37: suminf.    1.98839 (9) obj. -23.2175 iterations 25
Cbc0038I Pass  38: suminf.    1.98839 (9) obj. -23.2175 iterations 0
Cbc0038I Pass  39: suminf.    1.76479 (8) obj. -23.2175 iterations 9
Cbc0038I Pass  40: suminf.    1.76479 (8) obj. -23.2175 iterations 3
Cbc0038I Pass  41: suminf.    1.75723 (8) obj. -23.2175 iterations 6
Cbc0038I Pass  42: suminf.    1.75723 (8) obj. -23.2175 iterations 4
Cbc0038I Pass  43: suminf.    1.76479 (8) obj. -23.2175 iterations 6
Cbc0038I Pass  44: suminf.    2.44788 (12) obj. -23.2175 iterations 23
Cbc0038I Pass  45: suminf.    2.37809 (12) obj. -23.2175 iterations 3
Cbc0038I Pass  46: suminf.    1.95572 (8) obj. -23.2175 iterations 18
Cbc0038I Pass  47: suminf.    1.86975 (10) obj. -23.2175 iterations 3
Cbc0038I Pass  48: suminf.    1.85859 (8) obj. -23.2175 iterations 10
Cbc0038I Pass  49: suminf.    1.82215 (9) obj. -23.2175 iterations 5
Cbc0038I Pass  50: suminf.    2.16467 (11) obj. -23.2175 iterations 14
Cbc0038I Pass  51: suminf.    2.68336 (12) obj. -23.2175 iterations 12
Cbc0038I Pass  52: suminf.    2.40612 (14) obj. -23.2175 iterations 6
Cbc0038I Pass  53: suminf.    3.87155 (18) obj. -23.2175 iterations 21
Cbc0038I Pass  54: suminf.    2.30257 (11) obj. -23.2175 iterations 10
Cbc0038I Pass  55: suminf.    1.87194 (11) obj. -23.2175 iterations 1
Cbc0038I Pass  56: suminf.    1.49456 (8) obj. -23.2175 iterations 3
Cbc0038I Pass  57: suminf.    1.87194 (11) obj. -23.2175 iterations 7
Cbc0038I Pass  58: suminf.    2.52344 (14) obj. -23.2175 iterations 11
Cbc0038I Pass  59: suminf.    2.07386 (11) obj. -23.2175 iterations 7
Cbc0038I Pass  60: suminf.    1.87194 (11) obj. -23.2175 iterations 13
Cbc0038I Pass  61: suminf.    2.73753 (12) obj. -23.2175 iterations 10
Cbc0038I Pass  62: suminf.    2.73753 (12) obj. -23.2175 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 32 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -15.8611 - took 0.08 seconds
Cbc0012I Integer solution of -15.861128 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 71 rows 84 columns, reduced to 19 rows 22 columns
Cbc0031I 44 added rows had average density of 33.840909
Cbc0013I At root node, 44 cuts changed objective from -49.535727 to -22.035925 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10749 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1586 row cuts average 76.7 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 114 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1457 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 405 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.689 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.861128 best solution, best possible -22.035925 (2.22 seconds)
Cbc0001I Search completed - best objective -15.86112800000001, took 5199 iterations and 34 nodes (2.52 seconds)
Cbc0032I Strong branching done 450 times (7264 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 15, 35 variables fixed on reduced cost
Total time (CPU seconds):       1.78   (Wallclock seconds):       2.53

