Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 259 (-5) columns and 1489 (-56) elements
Clp1000I sum of infeasibilities 2.86458e-05 - average 5.74064e-08, 116 fixed columns
Coin0506I Presolve 260 (-239) rows, 140 (-119) columns and 779 (-710) elements
Clp0029I End of values pass after 140 iterations
Clp0014I Perturbing problem by 0.001% of 2.3191108 - largest nonzero change 0 ( 0%) - largest zero change 2.9278563e-05
Clp0000I Optimal - objective value 213.46101
Clp0000I Optimal - objective value 213.46101
Coin0511I After Postsolve, objective 213.46101, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13226962 - largest nonzero change 0 ( 0%) - largest zero change 2.9941894e-05
Clp0000I Optimal - objective value 213.46101
Clp0000I Optimal - objective value 213.46101
Clp0000I Optimal - objective value 213.46101
Coin0511I After Postsolve, objective 213.46101, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 213.4610091 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 259 columns (258 integer (258 of which binary)) and 1489 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 81 integers unsatisfied sum - 8.9068
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -38.2523 iterations 143
Cbc0038I Solution found of -38.2523
Cbc0038I Relaxing continuous gives -38.2523
Cbc0038I Rounding solution of -85.4445 is better than previous of -38.2523

Cbc0038I Before mini branch and bound, 177 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 150 rows 82 columns
Cbc0038I Mini branch and bound improved solution from -85.4445 to -145.961 (0.08 seconds)
Cbc0038I Round again with cutoff of -152.711
Cbc0038I Pass   2: suminf.    2.82679 (10) obj. -152.711 iterations 32
Cbc0038I Pass   3: suminf.    0.49178 (3) obj. -152.711 iterations 32
Cbc0038I Pass   4: suminf.    0.47088 (3) obj. -152.711 iterations 5
Cbc0038I Pass   5: suminf.    0.89013 (3) obj. -152.711 iterations 18
Cbc0038I Pass   6: suminf.    6.82553 (22) obj. -152.711 iterations 57
Cbc0038I Pass   7: suminf.    2.01571 (6) obj. -152.711 iterations 61
Cbc0038I Pass   8: suminf.    1.32199 (10) obj. -152.711 iterations 29
Cbc0038I Pass   9: suminf.    3.73946 (9) obj. -152.711 iterations 52
Cbc0038I Pass  10: suminf.    1.57239 (9) obj. -152.711 iterations 8
Cbc0038I Pass  11: suminf.    1.57239 (9) obj. -152.711 iterations 3
Cbc0038I Pass  12: suminf.    4.77660 (17) obj. -152.711 iterations 58
Cbc0038I Pass  13: suminf.    3.93380 (16) obj. -152.711 iterations 3
Cbc0038I Pass  14: suminf.    2.27987 (9) obj. -152.711 iterations 37
Cbc0038I Pass  15: suminf.    2.25134 (11) obj. -152.711 iterations 22
Cbc0038I Pass  16: suminf.    4.02533 (11) obj. -152.711 iterations 62
Cbc0038I Pass  17: suminf.    2.77833 (10) obj. -152.711 iterations 32
Cbc0038I Pass  18: suminf.    2.70390 (8) obj. -152.711 iterations 3
Cbc0038I Pass  19: suminf.    2.16941 (9) obj. -152.711 iterations 37
Cbc0038I Pass  20: suminf.    1.46641 (5) obj. -152.711 iterations 45
Cbc0038I Pass  21: suminf.    1.32199 (10) obj. -152.711 iterations 28
Cbc0038I Pass  22: suminf.    3.73946 (9) obj. -152.711 iterations 47
Cbc0038I Pass  23: suminf.    1.57239 (9) obj. -152.711 iterations 8
Cbc0038I Pass  24: suminf.    1.57239 (9) obj. -152.711 iterations 1
Cbc0038I Pass  25: suminf.    4.77660 (17) obj. -152.711 iterations 51
Cbc0038I Pass  26: suminf.    3.93380 (16) obj. -152.711 iterations 3
Cbc0038I Pass  27: suminf.    2.27987 (9) obj. -152.711 iterations 36
Cbc0038I Pass  28: suminf.    2.25134 (11) obj. -152.711 iterations 22
Cbc0038I Pass  29: suminf.    4.02533 (11) obj. -152.711 iterations 58
Cbc0038I Pass  30: suminf.    2.77833 (10) obj. -152.711 iterations 32
Cbc0038I Pass  31: suminf.    2.70390 (8) obj. -152.711 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 163 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 178 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -145.961 to -151.581 (0.16 seconds)
Cbc0038I Round again with cutoff of -164.861
Cbc0038I Pass  31: suminf.    2.86150 (11) obj. -164.861 iterations 4
Cbc0038I Pass  32: suminf.    1.31215 (7) obj. -164.861 iterations 52
Cbc0038I Pass  33: suminf.    2.93286 (12) obj. -164.861 iterations 53
Cbc0038I Pass  34: suminf.    1.85082 (11) obj. -164.861 iterations 26
Cbc0038I Pass  35: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  36: suminf.    3.35508 (10) obj. -164.861 iterations 49
Cbc0038I Pass  37: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  38: suminf.    3.21834 (11) obj. -164.861 iterations 28
Cbc0038I Pass  39: suminf.    1.85082 (11) obj. -164.861 iterations 41
Cbc0038I Pass  40: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  41: suminf.    3.35508 (10) obj. -164.861 iterations 48
Cbc0038I Pass  42: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  43: suminf.    3.21834 (11) obj. -164.861 iterations 28
Cbc0038I Pass  44: suminf.    1.85082 (11) obj. -164.861 iterations 42
Cbc0038I Pass  45: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  46: suminf.    3.35508 (10) obj. -164.861 iterations 49
Cbc0038I Pass  47: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  48: suminf.    3.21834 (11) obj. -164.861 iterations 28
Cbc0038I Pass  49: suminf.    1.85082 (11) obj. -164.861 iterations 41
Cbc0038I Pass  50: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  51: suminf.    3.35508 (10) obj. -164.861 iterations 46
Cbc0038I Pass  52: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  53: suminf.    3.21834 (11) obj. -164.861 iterations 28
Cbc0038I Pass  54: suminf.    1.85082 (11) obj. -164.861 iterations 41
Cbc0038I Pass  55: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  56: suminf.    3.35508 (10) obj. -164.861 iterations 49
Cbc0038I Pass  57: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  58: suminf.    3.21834 (11) obj. -164.861 iterations 29
Cbc0038I Pass  59: suminf.    1.85082 (11) obj. -164.861 iterations 41
Cbc0038I Pass  60: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 161 rows 89 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -151.581 - took 0.22 seconds
Cbc0012I Integer solution of -151.5808 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 151 rows 83 columns
Cbc0031I 38 added rows had average density of 117.10526
Cbc0013I At root node, 38 cuts changed objective from -213.46101 to -199.36635 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39654 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.464 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2534 row cuts average 253.0 elements, 0 column cuts (0 active)  in 0.390 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 115 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.336 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 250.0 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -151.5808 best solution, best possible -199.36635 (4.01 seconds)
Cbc0010I After 33 nodes, 8 on tree, -151.5808 best solution, best possible -199.36635 (4.72 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 164 rows 89 columns
Cbc0038I Full problem 499 rows 259 columns, reduced to 106 rows 61 columns
Cbc0010I After 126 nodes, 12 on tree, -151.5808 best solution, best possible -199.36635 (5.42 seconds)
Cbc0001I Search completed - best objective -151.5808, took 21327 iterations and 192 nodes (5.62 seconds)
Cbc0032I Strong branching done 1960 times (56062 iterations), fathomed 13 nodes and fixed 26 variables
Cbc0035I Maximum depth 55, 461 variables fixed on reduced cost
Total time (CPU seconds):       5.54   (Wallclock seconds):       5.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 383 (-143) rows, 400 (-124) columns and 20902 (-14834) elements
Clp1000I sum of infeasibilities 1.65064e-05 - average 4.30977e-08, 215 fixed columns
Coin0506I Presolve 167 (-216) rows, 182 (-218) columns and 681 (-20221) elements
Clp0006I 0  Obj 12.003352 Dual inf 12821.503 (178)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 0.14516359 - largest nonzero change 2.8746998e-05 ( 0.0026133635%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 22.509044
Clp0000I Optimal - objective value 22.509044
Coin0511I After Postsolve, objective 22.509044, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 22.509044 Dual inf 430.94743 (148)
Clp0014I Perturbing problem by 0.001% of 2.0746363 - largest nonzero change 2.7506915e-05 ( 0.0027506915%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 242.78387
Clp0000I Optimal - objective value 242.78387
Clp0000I Optimal - objective value 242.78387
Coin0511I After Postsolve, objective 242.78387, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 242.7838744 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.17

Starting MIP optimization
Cgl0004I processed model has 383 rows, 400 columns (400 integer (400 of which binary)) and 20902 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.375%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 125 integers unsatisfied sum - 5.98077
Cbc0038I Pass   1: suminf.    3.13498 (102) obj. -181.475 iterations 80
Cbc0038I Pass   2: suminf.    2.37351 (80) obj. -135.181 iterations 22
Cbc0038I Pass   3: suminf.    1.78186 (62) obj. -110.037 iterations 18
Cbc0038I Pass   4: suminf.    0.93792 (35) obj. -70.3206 iterations 27
Cbc0038I Pass   5: suminf.    0.43698 (18) obj. -50.9096 iterations 17
Cbc0038I Pass   6: suminf.    0.05752 (4) obj. -33.3945 iterations 14
Cbc0038I Solution found of -27.4757
Cbc0038I Rounding solution of -50.3449 is better than previous of -27.4757

Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -50.3449 to -70.6612 (0.16 seconds)
Cbc0038I Round again with cutoff of -87.8676
Cbc0038I Pass   7: suminf.    3.13498 (102) obj. -181.475 iterations 0
Cbc0038I Pass   8: suminf.    2.61088 (87) obj. -147.741 iterations 15
Cbc0038I Pass   9: suminf.    1.97580 (68) obj. -116.811 iterations 19
Cbc0038I Pass  10: suminf.    1.39362 (47) obj. -87.8676 iterations 24
Cbc0038I Pass  11: suminf.    0.84580 (31) obj. -100.554 iterations 17
Cbc0038I Pass  12: suminf.    0.48991 (8) obj. -87.8676 iterations 27
Cbc0038I Pass  13: suminf.    1.03138 (3) obj. -87.8676 iterations 67
Cbc0038I Pass  14: suminf.    0.62181 (3) obj. -92.7823 iterations 10
Cbc0038I Pass  15: suminf.    1.31808 (5) obj. -87.8676 iterations 25
Cbc0038I Pass  16: suminf.    1.89930 (27) obj. -87.8676 iterations 97
Cbc0038I Pass  17: suminf.    1.36835 (26) obj. -95.9913 iterations 15
Cbc0038I Pass  18: suminf.    1.32909 (7) obj. -87.8676 iterations 44
Cbc0038I Pass  19: suminf.    1.05768 (7) obj. -87.8676 iterations 2
Cbc0038I Pass  20: suminf.    1.37061 (6) obj. -87.8676 iterations 31
Cbc0038I Pass  21: suminf.    1.26154 (24) obj. -87.8676 iterations 16
Cbc0038I Pass  22: suminf.    3.07355 (19) obj. -87.8676 iterations 21
Cbc0038I Pass  23: suminf.    1.31023 (6) obj. -87.8676 iterations 18
Cbc0038I Pass  24: suminf.    1.28515 (4) obj. -87.8676 iterations 15
Cbc0038I Pass  25: suminf.    0.50603 (3) obj. -87.8676 iterations 19
Cbc0038I Pass  26: suminf.    0.39253 (3) obj. -88.8148 iterations 15
Cbc0038I Pass  27: suminf.    0.47147 (3) obj. -87.8676 iterations 15
Cbc0038I Pass  28: suminf.    1.05315 (40) obj. -87.8676 iterations 93
Cbc0038I Pass  29: suminf.    0.97830 (21) obj. -87.8676 iterations 40
Cbc0038I Pass  30: suminf.    1.28545 (15) obj. -87.8676 iterations 36
Cbc0038I Pass  31: suminf.    0.83044 (15) obj. -87.8676 iterations 7
Cbc0038I Pass  32: suminf.    0.80753 (6) obj. -87.8676 iterations 29
Cbc0038I Pass  33: suminf.    0.80753 (6) obj. -87.8676 iterations 0
Cbc0038I Pass  34: suminf.    0.80402 (6) obj. -87.8676 iterations 14
Cbc0038I Pass  35: suminf.    0.80402 (6) obj. -87.8676 iterations 11
Cbc0038I Pass  36: suminf.    0.80753 (6) obj. -87.8676 iterations 11
Cbc0038I Rounding solution of -72.5753 is better than previous of -70.6612

Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 32 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -72.5753 to -77.4511 (0.26 seconds)
Cbc0038I Round again with cutoff of -118.839
Cbc0038I Pass  36: suminf.    3.13498 (102) obj. -181.475 iterations 0
Cbc0038I Pass  37: suminf.    2.33981 (79) obj. -134.215 iterations 23
Cbc0038I Pass  38: suminf.    2.01212 (56) obj. -118.839 iterations 26
Cbc0038I Pass  39: suminf.    1.62142 (55) obj. -133.443 iterations 2
Cbc0038I Pass  40: suminf.    1.31753 (44) obj. -118.839 iterations 20
Cbc0038I Pass  41: suminf.    1.45143 (35) obj. -118.839 iterations 40
Cbc0038I Pass  42: suminf.    1.45143 (35) obj. -118.839 iterations 0
Cbc0038I Pass  43: suminf.    1.46692 (36) obj. -118.839 iterations 91
Cbc0038I Pass  44: suminf.    1.20224 (38) obj. -118.839 iterations 9
Cbc0038I Pass  45: suminf.    3.35670 (32) obj. -118.839 iterations 31
Cbc0038I Pass  46: suminf.    1.69264 (23) obj. -118.839 iterations 25
Cbc0038I Pass  47: suminf.    1.69264 (23) obj. -118.839 iterations 0
Cbc0038I Pass  48: suminf.    2.29908 (15) obj. -118.839 iterations 53
Cbc0038I Pass  49: suminf.    1.64943 (16) obj. -118.839 iterations 16
Cbc0038I Pass  50: suminf.    1.23173 (13) obj. -118.839 iterations 15
Cbc0038I Pass  51: suminf.    0.73938 (12) obj. -119.607 iterations 16
Cbc0038I Pass  52: suminf.    0.99554 (12) obj. -118.839 iterations 29
Cbc0038I Pass  53: suminf.    3.61983 (36) obj. -118.839 iterations 58
Cbc0038I Pass  54: suminf.    2.70238 (36) obj. -118.839 iterations 36
Cbc0038I Pass  55: suminf.    3.19749 (25) obj. -118.839 iterations 53
Cbc0038I Pass  56: suminf.    2.61633 (28) obj. -118.839 iterations 14
Cbc0038I Pass  57: suminf.    4.63423 (26) obj. -118.839 iterations 23
Cbc0038I Pass  58: suminf.    2.61633 (28) obj. -118.839 iterations 11
Cbc0038I Pass  59: suminf.    2.80906 (39) obj. -118.839 iterations 79
Cbc0038I Pass  60: suminf.    1.80229 (30) obj. -118.839 iterations 22
Cbc0038I Pass  61: suminf.    1.27876 (29) obj. -118.839 iterations 12
Cbc0038I Pass  62: suminf.    1.77232 (27) obj. -118.839 iterations 47
Cbc0038I Pass  63: suminf.    1.77232 (27) obj. -118.839 iterations 0
Cbc0038I Pass  64: suminf.    1.19159 (24) obj. -118.839 iterations 32
Cbc0038I Pass  65: suminf.    1.17933 (23) obj. -118.839 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 34 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
Cbc0038I After 0.35 seconds - Feasibility pump exiting with objective of -77.4511 - took 0.24 seconds
Cbc0012I Integer solution of -77.4511 found by feasibility pump after 0 iterations and 0 nodes (0.35 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 23 rows 26 columns
Cbc0031I 160 added rows had average density of 84.66875
Cbc0013I At root node, 160 cuts changed objective from -242.72391 to -163.87057 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27978 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.618 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3007 row cuts average 370.6 elements, 0 column cuts (0 active)  in 1.558 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1002 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6556 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.890 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3034 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.992 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 399 row cuts average 232.5 elements, 0 column cuts (0 active)  in 0.284 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 435 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -77.4511 best solution, best possible -163.87057 (9.78 seconds)
Cbc0012I Integer solution of -129.9656 found by rounding after 11226 iterations and 1 nodes (9.91 seconds)
Cbc0010I After 2 nodes, 3 on tree, -129.9656 best solution, best possible -163.87057 (10.71 seconds)
Cbc0012I Integer solution of -131.68478 found by rounding after 12344 iterations and 5 nodes (11.32 seconds)
Cbc0012I Integer solution of -142.0613 found by DiveCoefficient after 12386 iterations and 5 nodes (11.38 seconds)
Cbc0012I Integer solution of -143.0613 found by DiveCoefficient after 12419 iterations and 6 nodes (11.42 seconds)
Cbc0010I After 6 nodes, 7 on tree, -143.0613 best solution, best possible -163.87057 (11.42 seconds)
Cbc0012I Integer solution of -148.11942 found by DiveCoefficient after 12734 iterations and 14 nodes (11.54 seconds)
Cbc0004I Integer solution of -151.5808 found after 12818 iterations and 15 nodes (11.55 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 55 rows 62 columns
Cbc0010I After 44 nodes, 8 on tree, -151.5808 best solution, best possible -163.87057 (12.16 seconds)
Cbc0010I After 52 nodes, 5 on tree, -151.5808 best solution, best possible -163.87057 (12.94 seconds)
Cbc0010I After 60 nodes, 10 on tree, -151.5808 best solution, best possible -163.87057 (13.69 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 55 rows 65 columns
Cbc0010I After 93 nodes, 14 on tree, -151.5808 best solution, best possible -163.87057 (14.44 seconds)
Cbc0010I After 135 nodes, 11 on tree, -151.5808 best solution, best possible -163.87057 (15.17 seconds)
Cbc0001I Search completed - best objective -151.5808, took 25555 iterations and 182 nodes (15.71 seconds)
Cbc0032I Strong branching done 1344 times (33113 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 22, 691 variables fixed on reduced cost
Total time (CPU seconds):       15.31   (Wallclock seconds):       15.81

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 259 (-5) columns and 1489 (-56) elements
Clp1000I sum of infeasibilities 2.86458e-05 - average 5.74064e-08, 116 fixed columns
Coin0506I Presolve 260 (-239) rows, 140 (-119) columns and 779 (-710) elements
Clp0029I End of values pass after 140 iterations
Clp0014I Perturbing problem by 0.001% of 2.3191108 - largest nonzero change 0 ( 0%) - largest zero change 2.9278563e-05
Clp0000I Optimal - objective value 213.46101
Clp0000I Optimal - objective value 213.46101
Coin0511I After Postsolve, objective 213.46101, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13226962 - largest nonzero change 0 ( 0%) - largest zero change 2.9941894e-05
Clp0000I Optimal - objective value 213.46101
Clp0000I Optimal - objective value 213.46101
Clp0000I Optimal - objective value 213.46101
Coin0511I After Postsolve, objective 213.46101, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 213.4610091 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 259 columns (258 integer (258 of which binary)) and 1489 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 81 integers unsatisfied sum - 8.9068
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -38.2523 iterations 143
Cbc0038I Solution found of -38.2523
Cbc0038I Relaxing continuous gives -38.2523
Cbc0038I Rounding solution of -85.4445 is better than previous of -38.2523

Cbc0038I Before mini branch and bound, 177 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 150 rows 82 columns
Cbc0038I Mini branch and bound improved solution from -85.4445 to -145.961 (0.08 seconds)
Cbc0038I Round again with cutoff of -152.711
Cbc0038I Pass   2: suminf.    2.82679 (10) obj. -152.711 iterations 32
Cbc0038I Pass   3: suminf.    0.49178 (3) obj. -152.711 iterations 32
Cbc0038I Pass   4: suminf.    0.47088 (3) obj. -152.711 iterations 5
Cbc0038I Pass   5: suminf.    0.89013 (3) obj. -152.711 iterations 18
Cbc0038I Pass   6: suminf.    6.82553 (22) obj. -152.711 iterations 57
Cbc0038I Pass   7: suminf.    2.01571 (6) obj. -152.711 iterations 61
Cbc0038I Pass   8: suminf.    1.32199 (10) obj. -152.711 iterations 29
Cbc0038I Pass   9: suminf.    3.73946 (9) obj. -152.711 iterations 52
Cbc0038I Pass  10: suminf.    1.57239 (9) obj. -152.711 iterations 8
Cbc0038I Pass  11: suminf.    1.57239 (9) obj. -152.711 iterations 3
Cbc0038I Pass  12: suminf.    4.77660 (17) obj. -152.711 iterations 58
Cbc0038I Pass  13: suminf.    3.93380 (16) obj. -152.711 iterations 3
Cbc0038I Pass  14: suminf.    2.27987 (9) obj. -152.711 iterations 37
Cbc0038I Pass  15: suminf.    2.25134 (11) obj. -152.711 iterations 22
Cbc0038I Pass  16: suminf.    4.02533 (11) obj. -152.711 iterations 62
Cbc0038I Pass  17: suminf.    2.77833 (10) obj. -152.711 iterations 32
Cbc0038I Pass  18: suminf.    2.70390 (8) obj. -152.711 iterations 3
Cbc0038I Pass  19: suminf.    2.16941 (9) obj. -152.711 iterations 37
Cbc0038I Pass  20: suminf.    1.46641 (5) obj. -152.711 iterations 45
Cbc0038I Pass  21: suminf.    1.32199 (10) obj. -152.711 iterations 28
Cbc0038I Pass  22: suminf.    3.73946 (9) obj. -152.711 iterations 47
Cbc0038I Pass  23: suminf.    1.57239 (9) obj. -152.711 iterations 8
Cbc0038I Pass  24: suminf.    1.57239 (9) obj. -152.711 iterations 1
Cbc0038I Pass  25: suminf.    4.77660 (17) obj. -152.711 iterations 51
Cbc0038I Pass  26: suminf.    3.93380 (16) obj. -152.711 iterations 3
Cbc0038I Pass  27: suminf.    2.27987 (9) obj. -152.711 iterations 36
Cbc0038I Pass  28: suminf.    2.25134 (11) obj. -152.711 iterations 22
Cbc0038I Pass  29: suminf.    4.02533 (11) obj. -152.711 iterations 58
Cbc0038I Pass  30: suminf.    2.77833 (10) obj. -152.711 iterations 32
Cbc0038I Pass  31: suminf.    2.70390 (8) obj. -152.711 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 163 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 178 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -145.961 to -151.581 (0.16 seconds)
Cbc0038I Round again with cutoff of -164.861
Cbc0038I Pass  31: suminf.    2.86150 (11) obj. -164.861 iterations 4
Cbc0038I Pass  32: suminf.    1.31215 (7) obj. -164.861 iterations 52
Cbc0038I Pass  33: suminf.    2.93286 (12) obj. -164.861 iterations 53
Cbc0038I Pass  34: suminf.    1.85082 (11) obj. -164.861 iterations 26
Cbc0038I Pass  35: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  36: suminf.    3.35508 (10) obj. -164.861 iterations 49
Cbc0038I Pass  37: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  38: suminf.    3.21834 (11) obj. -164.861 iterations 28
Cbc0038I Pass  39: suminf.    1.85082 (11) obj. -164.861 iterations 41
Cbc0038I Pass  40: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  41: suminf.    3.35508 (10) obj. -164.861 iterations 48
Cbc0038I Pass  42: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  43: suminf.    3.21834 (11) obj. -164.861 iterations 28
Cbc0038I Pass  44: suminf.    1.85082 (11) obj. -164.861 iterations 42
Cbc0038I Pass  45: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  46: suminf.    3.35508 (10) obj. -164.861 iterations 49
Cbc0038I Pass  47: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  48: suminf.    3.21834 (11) obj. -164.861 iterations 28
Cbc0038I Pass  49: suminf.    1.85082 (11) obj. -164.861 iterations 41
Cbc0038I Pass  50: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  51: suminf.    3.35508 (10) obj. -164.861 iterations 46
Cbc0038I Pass  52: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  53: suminf.    3.21834 (11) obj. -164.861 iterations 28
Cbc0038I Pass  54: suminf.    1.85082 (11) obj. -164.861 iterations 41
Cbc0038I Pass  55: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I Pass  56: suminf.    3.35508 (10) obj. -164.861 iterations 49
Cbc0038I Pass  57: suminf.    2.02726 (10) obj. -164.861 iterations 11
Cbc0038I Pass  58: suminf.    3.21834 (11) obj. -164.861 iterations 29
Cbc0038I Pass  59: suminf.    1.85082 (11) obj. -164.861 iterations 41
Cbc0038I Pass  60: suminf.    1.72485 (10) obj. -164.861 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 161 rows 89 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -151.581 - took 0.22 seconds
Cbc0012I Integer solution of -151.5808 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 151 rows 83 columns
Cbc0031I 38 added rows had average density of 117.10526
Cbc0013I At root node, 38 cuts changed objective from -213.46101 to -199.36635 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39654 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.481 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2534 row cuts average 253.0 elements, 0 column cuts (0 active)  in 0.401 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 115 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.344 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 250.0 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -151.5808 best solution, best possible -199.36635 (4.11 seconds)
Cbc0010I After 29 nodes, 8 on tree, -151.5808 best solution, best possible -199.36635 (4.82 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 164 rows 89 columns
Cbc0038I Full problem 499 rows 259 columns, reduced to 106 rows 61 columns
Cbc0010I After 124 nodes, 12 on tree, -151.5808 best solution, best possible -199.36635 (5.52 seconds)
Cbc0001I Search completed - best objective -151.5808, took 21327 iterations and 192 nodes (5.73 seconds)
Cbc0032I Strong branching done 1960 times (56062 iterations), fathomed 13 nodes and fixed 26 variables
Cbc0035I Maximum depth 55, 461 variables fixed on reduced cost
Total time (CPU seconds):       5.65   (Wallclock seconds):       5.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 383 (-144) rows, 400 (-125) columns and 20902 (-14835) elements
Clp1000I sum of infeasibilities 1.65064e-05 - average 4.30977e-08, 215 fixed columns
Coin0506I Presolve 167 (-216) rows, 182 (-218) columns and 681 (-20221) elements
Clp0006I 0  Obj 12.003352 Dual inf 12821.503 (178)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 0.14516359 - largest nonzero change 2.8746998e-05 ( 0.0026133635%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 22.509044
Clp0000I Optimal - objective value 22.509044
Coin0511I After Postsolve, objective 22.509044, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 22.509044 Dual inf 430.94743 (148)
Clp0014I Perturbing problem by 0.001% of 2.0746363 - largest nonzero change 2.7506915e-05 ( 0.0027506915%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 242.78387
Clp0000I Optimal - objective value 242.78387
Clp0000I Optimal - objective value 242.78387
Coin0511I After Postsolve, objective 242.78387, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 242.7838744 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.16

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 383 rows, 400 columns (400 integer (400 of which binary)) and 20902 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.375%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 125 integers unsatisfied sum - 5.98077
Cbc0038I Pass   1: suminf.    3.13498 (102) obj. -181.475 iterations 80
Cbc0038I Pass   2: suminf.    2.37351 (80) obj. -135.181 iterations 22
Cbc0038I Pass   3: suminf.    1.78186 (62) obj. -110.037 iterations 18
Cbc0038I Pass   4: suminf.    0.93792 (35) obj. -70.3206 iterations 27
Cbc0038I Pass   5: suminf.    0.43698 (18) obj. -50.9096 iterations 17
Cbc0038I Pass   6: suminf.    0.05752 (4) obj. -33.3945 iterations 14
Cbc0038I Solution found of -27.4757
Cbc0038I Rounding solution of -50.3449 is better than previous of -27.4757

Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -50.3449 to -70.6612 (0.16 seconds)
Cbc0038I Round again with cutoff of -87.8676
Cbc0038I Pass   7: suminf.    3.13498 (102) obj. -181.475 iterations 0
Cbc0038I Pass   8: suminf.    2.61088 (87) obj. -147.741 iterations 15
Cbc0038I Pass   9: suminf.    1.97580 (68) obj. -116.811 iterations 19
Cbc0038I Pass  10: suminf.    1.39362 (47) obj. -87.8676 iterations 24
Cbc0038I Pass  11: suminf.    0.84580 (31) obj. -100.554 iterations 17
Cbc0038I Pass  12: suminf.    0.48991 (8) obj. -87.8676 iterations 27
Cbc0038I Pass  13: suminf.    1.03138 (3) obj. -87.8676 iterations 67
Cbc0038I Pass  14: suminf.    0.62181 (3) obj. -92.7823 iterations 10
Cbc0038I Pass  15: suminf.    1.31808 (5) obj. -87.8676 iterations 25
Cbc0038I Pass  16: suminf.    1.89930 (27) obj. -87.8676 iterations 97
Cbc0038I Pass  17: suminf.    1.36835 (26) obj. -95.9913 iterations 15
Cbc0038I Pass  18: suminf.    1.32909 (7) obj. -87.8676 iterations 44
Cbc0038I Pass  19: suminf.    1.05768 (7) obj. -87.8676 iterations 2
Cbc0038I Pass  20: suminf.    1.37061 (6) obj. -87.8676 iterations 31
Cbc0038I Pass  21: suminf.    1.26154 (24) obj. -87.8676 iterations 16
Cbc0038I Pass  22: suminf.    3.07355 (19) obj. -87.8676 iterations 21
Cbc0038I Pass  23: suminf.    1.31023 (6) obj. -87.8676 iterations 18
Cbc0038I Pass  24: suminf.    1.28515 (4) obj. -87.8676 iterations 15
Cbc0038I Pass  25: suminf.    0.50603 (3) obj. -87.8676 iterations 19
Cbc0038I Pass  26: suminf.    0.39253 (3) obj. -88.8148 iterations 15
Cbc0038I Pass  27: suminf.    0.47147 (3) obj. -87.8676 iterations 15
Cbc0038I Pass  28: suminf.    1.05315 (40) obj. -87.8676 iterations 93
Cbc0038I Pass  29: suminf.    0.97830 (21) obj. -87.8676 iterations 40
Cbc0038I Pass  30: suminf.    1.28545 (15) obj. -87.8676 iterations 36
Cbc0038I Pass  31: suminf.    0.83044 (15) obj. -87.8676 iterations 7
Cbc0038I Pass  32: suminf.    0.80753 (6) obj. -87.8676 iterations 29
Cbc0038I Pass  33: suminf.    0.80753 (6) obj. -87.8676 iterations 0
Cbc0038I Pass  34: suminf.    0.80402 (6) obj. -87.8676 iterations 14
Cbc0038I Pass  35: suminf.    0.80402 (6) obj. -87.8676 iterations 11
Cbc0038I Pass  36: suminf.    0.80753 (6) obj. -87.8676 iterations 11
Cbc0038I Rounding solution of -72.5753 is better than previous of -70.6612

Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 32 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -72.5753 to -77.4511 (0.27 seconds)
Cbc0038I Round again with cutoff of -118.839
Cbc0038I Pass  36: suminf.    3.13498 (102) obj. -181.475 iterations 0
Cbc0038I Pass  37: suminf.    2.33981 (79) obj. -134.215 iterations 23
Cbc0038I Pass  38: suminf.    2.01212 (56) obj. -118.839 iterations 26
Cbc0038I Pass  39: suminf.    1.62142 (55) obj. -133.443 iterations 2
Cbc0038I Pass  40: suminf.    1.31753 (44) obj. -118.839 iterations 20
Cbc0038I Pass  41: suminf.    1.45143 (35) obj. -118.839 iterations 40
Cbc0038I Pass  42: suminf.    1.45143 (35) obj. -118.839 iterations 0
Cbc0038I Pass  43: suminf.    1.46692 (36) obj. -118.839 iterations 91
Cbc0038I Pass  44: suminf.    1.20224 (38) obj. -118.839 iterations 9
Cbc0038I Pass  45: suminf.    3.35670 (32) obj. -118.839 iterations 31
Cbc0038I Pass  46: suminf.    1.69264 (23) obj. -118.839 iterations 25
Cbc0038I Pass  47: suminf.    1.69264 (23) obj. -118.839 iterations 0
Cbc0038I Pass  48: suminf.    2.29908 (15) obj. -118.839 iterations 53
Cbc0038I Pass  49: suminf.    1.64943 (16) obj. -118.839 iterations 16
Cbc0038I Pass  50: suminf.    1.23173 (13) obj. -118.839 iterations 15
Cbc0038I Pass  51: suminf.    0.73938 (12) obj. -119.607 iterations 16
Cbc0038I Pass  52: suminf.    0.99554 (12) obj. -118.839 iterations 29
Cbc0038I Pass  53: suminf.    3.61983 (36) obj. -118.839 iterations 58
Cbc0038I Pass  54: suminf.    2.70238 (36) obj. -118.839 iterations 36
Cbc0038I Pass  55: suminf.    3.19749 (25) obj. -118.839 iterations 53
Cbc0038I Pass  56: suminf.    2.61633 (28) obj. -118.839 iterations 14
Cbc0038I Pass  57: suminf.    4.63423 (26) obj. -118.839 iterations 23
Cbc0038I Pass  58: suminf.    2.61633 (28) obj. -118.839 iterations 11
Cbc0038I Pass  59: suminf.    2.80906 (39) obj. -118.839 iterations 79
Cbc0038I Pass  60: suminf.    1.80229 (30) obj. -118.839 iterations 22
Cbc0038I Pass  61: suminf.    1.27876 (29) obj. -118.839 iterations 12
Cbc0038I Pass  62: suminf.    1.77232 (27) obj. -118.839 iterations 47
Cbc0038I Pass  63: suminf.    1.77232 (27) obj. -118.839 iterations 0
Cbc0038I Pass  64: suminf.    1.19159 (24) obj. -118.839 iterations 32
Cbc0038I Pass  65: suminf.    1.17933 (23) obj. -118.839 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 34 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -77.4511 - took 0.25 seconds
Cbc0012I Integer solution of -77.4511 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 23 rows 26 columns
Cbc0031I 160 added rows had average density of 84.66875
Cbc0013I At root node, 160 cuts changed objective from -242.72391 to -163.87057 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27978 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.629 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3007 row cuts average 370.6 elements, 0 column cuts (0 active)  in 1.577 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1002 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6556 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.903 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3034 row cuts average 10.5 elements, 0 column cuts (0 active)  in 1.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 399 row cuts average 232.5 elements, 0 column cuts (0 active)  in 0.284 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 435 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.733 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -77.4511 best solution, best possible -163.87057 (9.90 seconds)
Cbc0012I Integer solution of -129.9656 found by rounding after 11226 iterations and 1 nodes (10.03 seconds)
Cbc0010I After 2 nodes, 3 on tree, -129.9656 best solution, best possible -163.87057 (10.87 seconds)
Cbc0012I Integer solution of -131.68478 found by rounding after 12344 iterations and 5 nodes (11.49 seconds)
Cbc0012I Integer solution of -142.0613 found by DiveCoefficient after 12386 iterations and 5 nodes (11.55 seconds)
Cbc0012I Integer solution of -143.0613 found by DiveCoefficient after 12419 iterations and 6 nodes (11.59 seconds)
Cbc0010I After 6 nodes, 7 on tree, -143.0613 best solution, best possible -163.87057 (11.59 seconds)
Cbc0012I Integer solution of -148.11942 found by DiveCoefficient after 12734 iterations and 14 nodes (11.71 seconds)
Cbc0004I Integer solution of -151.5808 found after 12818 iterations and 15 nodes (11.72 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 55 rows 62 columns
Cbc0010I After 44 nodes, 8 on tree, -151.5808 best solution, best possible -163.87057 (12.38 seconds)
Cbc0010I After 52 nodes, 5 on tree, -151.5808 best solution, best possible -163.87057 (13.16 seconds)
Cbc0010I After 60 nodes, 10 on tree, -151.5808 best solution, best possible -163.87057 (13.92 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 55 rows 65 columns
Cbc0010I After 93 nodes, 14 on tree, -151.5808 best solution, best possible -163.87057 (14.65 seconds)
Cbc0010I After 133 nodes, 11 on tree, -151.5808 best solution, best possible -163.87057 (15.36 seconds)
Cbc0001I Search completed - best objective -151.5808, took 25555 iterations and 182 nodes (15.94 seconds)
Cbc0032I Strong branching done 1344 times (33113 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 22, 691 variables fixed on reduced cost
Total time (CPU seconds):       15.53   (Wallclock seconds):       16.04

