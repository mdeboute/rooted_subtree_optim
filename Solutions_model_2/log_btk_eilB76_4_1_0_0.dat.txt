Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 73 (-5) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 2.91556e-05 - average 2.22562e-07, 20 fixed columns
Coin0506I Presolve 90 (-41) rows, 50 (-23) columns and 272 (-128) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 1.6371842 - largest nonzero change 0 ( 0%) - largest zero change 1.8986656e-05
Clp0000I Optimal - objective value 48.746169
Clp0000I Optimal - objective value 48.746169
Coin0511I After Postsolve, objective 48.746169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.746169
Clp0000I Optimal - objective value 48.746169
Clp0000I Optimal - objective value 48.746169
Coin0511I After Postsolve, objective 48.746169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.74616911 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 73 columns (72 integer (72 of which binary)) and 437 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.910%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.8248
Cbc0038I Solution found of -4.70778
Cbc0038I Relaxing continuous gives -12.2137
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 60 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -12.2137 to -27.6576 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.6885
Cbc0038I Pass   1: suminf.    1.75053 (12) obj. -29.6885 iterations 44
Cbc0038I Pass   2: suminf.    0.39160 (3) obj. -29.6885 iterations 18
Cbc0038I Pass   3: suminf.    0.33582 (3) obj. -29.6885 iterations 2
Cbc0038I Pass   4: suminf.    1.00593 (3) obj. -29.6885 iterations 5
Cbc0038I Pass   5: suminf.    0.80576 (3) obj. -29.6885 iterations 2
Cbc0038I Pass   6: suminf.    1.24514 (3) obj. -29.6885 iterations 2
Cbc0038I Pass   7: suminf.    0.75172 (3) obj. -29.6885 iterations 2
Cbc0038I Pass   8: suminf.    2.18075 (7) obj. -29.6885 iterations 12
Cbc0038I Pass   9: suminf.    1.11777 (7) obj. -29.6885 iterations 10
Cbc0038I Pass  10: suminf.    2.49359 (8) obj. -29.6885 iterations 13
Cbc0038I Pass  11: suminf.    0.67132 (4) obj. -29.6885 iterations 6
Cbc0038I Pass  12: suminf.    0.67132 (4) obj. -29.6885 iterations 2
Cbc0038I Pass  13: suminf.    0.67289 (3) obj. -29.6885 iterations 14
Cbc0038I Pass  14: suminf.    0.52514 (2) obj. -29.6885 iterations 5
Cbc0038I Pass  15: suminf.    0.52514 (2) obj. -29.6885 iterations 1
Cbc0038I Pass  16: suminf.    0.60733 (3) obj. -29.6885 iterations 3
Cbc0038I Pass  17: suminf.    1.31102 (3) obj. -29.6885 iterations 12
Cbc0038I Pass  18: suminf.    0.70562 (3) obj. -29.6885 iterations 10
Cbc0038I Pass  19: suminf.    1.05564 (3) obj. -29.6885 iterations 5
Cbc0038I Pass  20: suminf.    0.69901 (3) obj. -29.6885 iterations 3
Cbc0038I Pass  21: suminf.    0.73030 (2) obj. -29.6885 iterations 5
Cbc0038I Pass  22: suminf.    0.73030 (2) obj. -29.6885 iterations 0
Cbc0038I Pass  23: suminf.    1.49404 (5) obj. -29.6885 iterations 22
Cbc0038I Pass  24: suminf.    0.66466 (5) obj. -29.6885 iterations 9
Cbc0038I Pass  25: suminf.    1.99430 (6) obj. -29.6885 iterations 11
Cbc0038I Pass  26: suminf.    1.66843 (5) obj. -29.6885 iterations 4
Cbc0038I Pass  27: suminf.    0.52705 (3) obj. -29.6885 iterations 3
Cbc0038I Pass  28: suminf.    0.50290 (3) obj. -29.6885 iterations 2
Cbc0038I Pass  29: suminf.    1.33701 (4) obj. -29.6885 iterations 5
Cbc0038I Pass  30: suminf.    0.46703 (3) obj. -29.6885 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 68 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -27.6576 - took 0.04 seconds
Cbc0012I Integer solution of -27.657606 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 127 rows 73 columns, reduced to 60 rows 33 columns
Cbc0031I 12 added rows had average density of 48.75
Cbc0013I At root node, 12 cuts changed objective from -47.965598 to -40.891035 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4777 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 959 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0012I Integer solution of -27.900106 found by rounding after 4315 iterations and 28 nodes (0.53 seconds)
Cbc0001I Search completed - best objective -27.90010599999999, took 4455 iterations and 34 nodes (0.54 seconds)
Cbc0032I Strong branching done 420 times (7307 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 14, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 116 (-36) columns and 1954 (-1349) elements
Clp1000I sum of infeasibilities 2.86763e-07 - average 2.78411e-09, 63 fixed columns
Coin0506I Presolve 51 (-52) rows, 53 (-63) columns and 412 (-1542) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 8.8932261 - largest nonzero change 0 ( 0%) - largest zero change 2.6287428e-05
Clp0000I Optimal - objective value 126.09993
Clp0000I Optimal - objective value 126.09993
Coin0511I After Postsolve, objective 126.09993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 126.09993
Clp0000I Optimal - objective value 126.09993
Clp0000I Optimal - objective value 126.09993
Coin0511I After Postsolve, objective 126.09993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.0999269 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 52 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 116 columns (116 integer (116 of which binary)) and 1995 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.048%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.65796
Cbc0038I Pass   1: suminf.    0.30466 (11) obj. -33.531 iterations 15
Cbc0038I Pass   2: suminf.    0.30466 (11) obj. -33.531 iterations 1
Cbc0038I Solution found of -16.128
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 30 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -21.3952
Cbc0038I Pass   3: suminf.    0.30466 (11) obj. -33.531 iterations 0
Cbc0038I Pass   4: suminf.    0.30466 (11) obj. -33.531 iterations 1
Cbc0038I Pass   5: suminf.    0.14881 (9) obj. -21.3952 iterations 12
Cbc0038I Pass   6: suminf.    0.48000 (1) obj. -33.7948 iterations 10
Cbc0038I Pass   7: suminf.    0.03015 (1) obj. -21.3952 iterations 1
Cbc0038I Pass   8: suminf.    0.61984 (5) obj. -21.3952 iterations 16
Cbc0038I Pass   9: suminf.    0.61984 (5) obj. -21.3952 iterations 3
Cbc0038I Pass  10: suminf.    0.48000 (1) obj. -23.7948 iterations 6
Cbc0038I Pass  11: suminf.    0.39294 (1) obj. -21.3952 iterations 1
Cbc0038I Pass  12: suminf.    1.31045 (11) obj. -21.3952 iterations 25
Cbc0038I Pass  13: suminf.    0.99603 (7) obj. -21.3952 iterations 12
Cbc0038I Pass  14: suminf.    1.09640 (6) obj. -21.3952 iterations 9
Cbc0038I Pass  15: suminf.    2.19163 (8) obj. -21.3952 iterations 13
Cbc0038I Pass  16: suminf.    1.39393 (6) obj. -21.3952 iterations 5
Cbc0038I Pass  17: suminf.    0.87164 (5) obj. -21.3952 iterations 7
Cbc0038I Pass  18: suminf.    0.36000 (1) obj. -26.4872 iterations 4
Cbc0038I Pass  19: suminf.    0.17527 (1) obj. -21.3952 iterations 1
Cbc0038I Pass  20: suminf.    0.76844 (10) obj. -21.3952 iterations 20
Cbc0038I Pass  21: suminf.    0.48812 (7) obj. -21.3952 iterations 6
Cbc0038I Pass  22: suminf.    1.17910 (5) obj. -21.3952 iterations 11
Cbc0038I Pass  23: suminf.    2.38374 (8) obj. -21.3952 iterations 8
Cbc0038I Pass  24: suminf.    2.28277 (12) obj. -21.3952 iterations 5
Cbc0038I Pass  25: suminf.    1.25557 (5) obj. -21.3952 iterations 11
Cbc0038I Pass  26: suminf.    1.66458 (5) obj. -21.3952 iterations 11
Cbc0038I Pass  27: suminf.    0.47615 (2) obj. -21.3952 iterations 2
Cbc0038I Pass  28: suminf.    0.47615 (2) obj. -21.3952 iterations 2
Cbc0038I Pass  29: suminf.    2.40277 (9) obj. -21.3952 iterations 14
Cbc0038I Pass  30: suminf.    1.82154 (6) obj. -21.3952 iterations 12
Cbc0038I Pass  31: suminf.    1.11102 (3) obj. -21.3952 iterations 6
Cbc0038I Pass  32: suminf.    1.11102 (3) obj. -21.3952 iterations 1
Cbc0038I Rounding solution of -22.5215 is better than previous of -16.128

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 45 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -22.5215 to -24.4226 (0.07 seconds)
Cbc0038I Round again with cutoff of -33.298
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.30466 (11) obj. -33.531 iterations 0
Cbc0038I Pass  33: suminf.    0.30466 (11) obj. -33.531 iterations 1
Cbc0038I Pass  34: suminf.    0.60855 (11) obj. -33.298 iterations 12
Cbc0038I Pass  35: suminf.    0.70619 (2) obj. -33.298 iterations 11
Cbc0038I Pass  36: suminf.    0.48000 (1) obj. -33.7948 iterations 3
Cbc0038I Pass  37: suminf.    0.46198 (1) obj. -33.298 iterations 1
Cbc0038I Pass  38: suminf.    0.83340 (4) obj. -33.298 iterations 17
Cbc0038I Pass  39: suminf.    0.83340 (4) obj. -33.298 iterations 1
Cbc0038I Pass  40: suminf.    0.53118 (2) obj. -34.5389 iterations 4
Cbc0038I Pass  41: suminf.    0.48537 (2) obj. -33.298 iterations 1
Cbc0038I Pass  42: suminf.    1.15967 (5) obj. -33.298 iterations 4
Cbc0038I Pass  43: suminf.    1.88958 (6) obj. -33.298 iterations 7
Cbc0038I Pass  44: suminf.    2.03018 (19) obj. -33.298 iterations 20
Cbc0038I Pass  45: suminf.    1.74053 (18) obj. -33.298 iterations 11
Cbc0038I Pass  46: suminf.    2.21416 (8) obj. -33.298 iterations 22
Cbc0038I Pass  47: suminf.    2.21416 (8) obj. -33.298 iterations 0
Cbc0038I Pass  48: suminf.    2.19000 (7) obj. -33.298 iterations 5
Cbc0038I Pass  49: suminf.    1.81508 (8) obj. -33.298 iterations 1
Cbc0038I Pass  50: suminf.    2.49206 (7) obj. -33.298 iterations 2
Cbc0038I Pass  51: suminf.    1.64879 (7) obj. -33.298 iterations 2
Cbc0038I Pass  52: suminf.    2.49206 (7) obj. -33.298 iterations 6
Cbc0038I Pass  53: suminf.    2.95598 (12) obj. -33.298 iterations 13
Cbc0038I Pass  54: suminf.    2.32230 (11) obj. -33.298 iterations 6
Cbc0038I Pass  55: suminf.    2.34375 (8) obj. -33.298 iterations 11
Cbc0038I Pass  56: suminf.    1.81536 (9) obj. -33.298 iterations 2
Cbc0038I Pass  57: suminf.    2.09184 (8) obj. -33.298 iterations 5
Cbc0038I Pass  58: suminf.    1.83878 (8) obj. -33.298 iterations 2
Cbc0038I Pass  59: suminf.    2.44969 (13) obj. -33.298 iterations 9
Cbc0038I Pass  60: suminf.    2.18407 (12) obj. -33.298 iterations 12
Cbc0038I Pass  61: suminf.    2.06700 (8) obj. -33.298 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 45 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -24.4226 to -25.6496 (0.09 seconds)
Cbc0038I Round again with cutoff of -43.9484
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.50324 (37) obj. -43.9484 iterations 7
Cbc0038I Pass  62: suminf.    1.50324 (37) obj. -43.9484 iterations 0
Cbc0038I Pass  63: suminf.    1.74314 (24) obj. -43.9484 iterations 20
Cbc0038I Pass  64: suminf.    1.33083 (18) obj. -43.9484 iterations 3
Cbc0038I Pass  65: suminf.    3.78848 (16) obj. -43.9484 iterations 32
Cbc0038I Pass  66: suminf.    3.34452 (16) obj. -43.9484 iterations 1
Cbc0038I Pass  67: suminf.    3.00596 (17) obj. -43.9484 iterations 2
Cbc0038I Pass  68: suminf.    3.00596 (17) obj. -43.9484 iterations 0
Cbc0038I Pass  69: suminf.    3.24744 (13) obj. -43.9484 iterations 17
Cbc0038I Pass  70: suminf.    3.05908 (13) obj. -43.9484 iterations 3
Cbc0038I Pass  71: suminf.    3.32975 (13) obj. -43.9484 iterations 4
Cbc0038I Pass  72: suminf.    3.59366 (15) obj. -43.9484 iterations 7
Cbc0038I Pass  73: suminf.    3.59366 (15) obj. -43.9484 iterations 1
Cbc0038I Pass  74: suminf.    3.32975 (13) obj. -43.9484 iterations 7
Cbc0038I Pass  75: suminf.    3.94795 (16) obj. -43.9484 iterations 23
Cbc0038I Pass  76: suminf.    3.29101 (16) obj. -43.9484 iterations 5
Cbc0038I Pass  77: suminf.    3.50400 (14) obj. -43.9484 iterations 11
Cbc0038I Pass  78: suminf.    3.50400 (14) obj. -43.9484 iterations 1
Cbc0038I Pass  79: suminf.    3.40578 (14) obj. -43.9484 iterations 3
Cbc0038I Pass  80: suminf.    3.40578 (14) obj. -43.9484 iterations 1
Cbc0038I Pass  81: suminf.    3.50400 (14) obj. -43.9484 iterations 3
Cbc0038I Pass  82: suminf.    2.57904 (17) obj. -43.9484 iterations 14
Cbc0038I Pass  83: suminf.    2.57904 (17) obj. -43.9484 iterations 3
Cbc0038I Pass  84: suminf.    3.50400 (14) obj. -43.9484 iterations 13
Cbc0038I Pass  85: suminf.    3.50400 (14) obj. -43.9484 iterations 0
Cbc0038I Pass  86: suminf.    3.40578 (14) obj. -43.9484 iterations 3
Cbc0038I Pass  87: suminf.    3.40578 (14) obj. -43.9484 iterations 1
Cbc0038I Pass  88: suminf.    3.50400 (14) obj. -43.9484 iterations 3
Cbc0038I Pass  89: suminf.    3.84817 (16) obj. -43.9484 iterations 10
Cbc0038I Pass  90: suminf.    3.15129 (16) obj. -43.9484 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 43 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -25.6496 - took 0.11 seconds
Cbc0012I Integer solution of -25.64958 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 42 rows 44 columns
Cbc0031I 39 added rows had average density of 24.051282
Cbc0013I At root node, 39 cuts changed objective from -68.799227 to -33.904529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7241 row cuts average 2.7 elements, 1 column cuts (1 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1297 row cuts average 102.5 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 867 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 295 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 689 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 318 row cuts average 44.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.641 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -25.64958 best solution, best possible -33.904529 (2.11 seconds)
Cbc0012I Integer solution of -26.333316 found by rounding after 3257 iterations and 7 nodes (2.25 seconds)
Cbc0012I Integer solution of -26.389176 found by DiveCoefficient after 3257 iterations and 7 nodes (2.25 seconds)
Cbc0016I Integer solution of -26.942626 found by strong branching after 3270 iterations and 7 nodes (2.26 seconds)
Cbc0012I Integer solution of -27.657606 found by DiveCoefficient after 3272 iterations and 7 nodes (2.26 seconds)
Cbc0012I Integer solution of -27.900106 found by DiveCoefficient after 3351 iterations and 11 nodes (2.27 seconds)
Cbc0001I Search completed - best objective -27.90010599999999, took 4278 iterations and 32 nodes (2.67 seconds)
Cbc0032I Strong branching done 508 times (8954 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 10, 147 variables fixed on reduced cost
Total time (CPU seconds):       2.04   (Wallclock seconds):       2.68

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 73 (-5) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 2.91556e-05 - average 2.22562e-07, 20 fixed columns
Coin0506I Presolve 90 (-41) rows, 50 (-23) columns and 272 (-128) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 1.6371842 - largest nonzero change 0 ( 0%) - largest zero change 1.8986656e-05
Clp0000I Optimal - objective value 48.746169
Clp0000I Optimal - objective value 48.746169
Coin0511I After Postsolve, objective 48.746169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.746169
Clp0000I Optimal - objective value 48.746169
Clp0000I Optimal - objective value 48.746169
Coin0511I After Postsolve, objective 48.746169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.74616911 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 73 columns (72 integer (72 of which binary)) and 437 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.910%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.8248
Cbc0038I Solution found of -4.70778
Cbc0038I Relaxing continuous gives -12.2137
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 60 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -12.2137 to -27.6576 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.6885
Cbc0038I Pass   1: suminf.    1.75053 (12) obj. -29.6885 iterations 44
Cbc0038I Pass   2: suminf.    0.39160 (3) obj. -29.6885 iterations 18
Cbc0038I Pass   3: suminf.    0.33582 (3) obj. -29.6885 iterations 2
Cbc0038I Pass   4: suminf.    1.00593 (3) obj. -29.6885 iterations 5
Cbc0038I Pass   5: suminf.    0.80576 (3) obj. -29.6885 iterations 2
Cbc0038I Pass   6: suminf.    1.24514 (3) obj. -29.6885 iterations 2
Cbc0038I Pass   7: suminf.    0.75172 (3) obj. -29.6885 iterations 2
Cbc0038I Pass   8: suminf.    2.18075 (7) obj. -29.6885 iterations 12
Cbc0038I Pass   9: suminf.    1.11777 (7) obj. -29.6885 iterations 10
Cbc0038I Pass  10: suminf.    2.49359 (8) obj. -29.6885 iterations 13
Cbc0038I Pass  11: suminf.    0.67132 (4) obj. -29.6885 iterations 6
Cbc0038I Pass  12: suminf.    0.67132 (4) obj. -29.6885 iterations 2
Cbc0038I Pass  13: suminf.    0.67289 (3) obj. -29.6885 iterations 14
Cbc0038I Pass  14: suminf.    0.52514 (2) obj. -29.6885 iterations 5
Cbc0038I Pass  15: suminf.    0.52514 (2) obj. -29.6885 iterations 1
Cbc0038I Pass  16: suminf.    0.60733 (3) obj. -29.6885 iterations 3
Cbc0038I Pass  17: suminf.    1.31102 (3) obj. -29.6885 iterations 12
Cbc0038I Pass  18: suminf.    0.70562 (3) obj. -29.6885 iterations 10
Cbc0038I Pass  19: suminf.    1.05564 (3) obj. -29.6885 iterations 5
Cbc0038I Pass  20: suminf.    0.69901 (3) obj. -29.6885 iterations 3
Cbc0038I Pass  21: suminf.    0.73030 (2) obj. -29.6885 iterations 5
Cbc0038I Pass  22: suminf.    0.73030 (2) obj. -29.6885 iterations 0
Cbc0038I Pass  23: suminf.    1.49404 (5) obj. -29.6885 iterations 22
Cbc0038I Pass  24: suminf.    0.66466 (5) obj. -29.6885 iterations 9
Cbc0038I Pass  25: suminf.    1.99430 (6) obj. -29.6885 iterations 11
Cbc0038I Pass  26: suminf.    1.66843 (5) obj. -29.6885 iterations 4
Cbc0038I Pass  27: suminf.    0.52705 (3) obj. -29.6885 iterations 3
Cbc0038I Pass  28: suminf.    0.50290 (3) obj. -29.6885 iterations 2
Cbc0038I Pass  29: suminf.    1.33701 (4) obj. -29.6885 iterations 5
Cbc0038I Pass  30: suminf.    0.46703 (3) obj. -29.6885 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 68 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -27.6576 - took 0.05 seconds
Cbc0012I Integer solution of -27.657606 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 127 rows 73 columns, reduced to 60 rows 33 columns
Cbc0031I 12 added rows had average density of 48.75
Cbc0013I At root node, 12 cuts changed objective from -47.965598 to -40.891035 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4777 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 959 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0012I Integer solution of -27.900106 found by rounding after 4315 iterations and 28 nodes (0.64 seconds)
Cbc0001I Search completed - best objective -27.90010599999999, took 4455 iterations and 34 nodes (0.65 seconds)
Cbc0032I Strong branching done 420 times (7307 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 14, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 113 (-40) columns and 1850 (-1454) elements
Clp1000I sum of infeasibilities 2.22777e-07 - average 2.22777e-09, 24 fixed columns
Coin0506I Presolve 82 (-18) rows, 89 (-24) columns and 1185 (-665) elements
Clp0006I 0  Obj 62.940401 Dual inf 9.1042162 (87)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.7308184 - largest nonzero change 1.9301978e-05 ( 0.0015380202%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 70.439682
Clp0000I Optimal - objective value 70.439682
Coin0511I After Postsolve, objective 70.439682, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.439682
Clp0000I Optimal - objective value 70.439682
Clp0000I Optimal - objective value 70.439682
Clp0000I Optimal - objective value 70.439682
Coin0511I After Postsolve, objective 70.439682, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.43968169 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 113 columns (113 integer (113 of which binary)) and 1887 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.978%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 2.96399
Cbc0038I Pass   1: suminf.    0.26896 (12) obj. -44.8707 iterations 33
Cbc0038I Pass   2: suminf.    0.26896 (12) obj. -44.8707 iterations 1
Cbc0038I Solution found of -24.4226
Cbc0038I Rounding solution of -25.3364 is better than previous of -24.4226

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 113 columns, reduced to 22 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -28.7823
Cbc0038I Pass   3: suminf.    0.26896 (12) obj. -44.8707 iterations 0
Cbc0038I Pass   4: suminf.    0.26896 (12) obj. -44.8707 iterations 1
Cbc0038I Pass   5: suminf.    0.38430 (26) obj. -28.7823 iterations 31
Cbc0038I Pass   6: suminf.    1.03020 (16) obj. -28.7823 iterations 19
Cbc0038I Pass   7: suminf.    0.56712 (16) obj. -28.7823 iterations 1
Cbc0038I Pass   8: suminf.    0.81558 (9) obj. -28.7823 iterations 30
Cbc0038I Pass   9: suminf.    0.60049 (9) obj. -28.7823 iterations 10
Cbc0038I Pass  10: suminf.    1.20057 (20) obj. -28.7823 iterations 18
Cbc0038I Pass  11: suminf.    1.11003 (19) obj. -28.7823 iterations 8
Cbc0038I Pass  12: suminf.    0.62101 (11) obj. -29.0801 iterations 44
Cbc0038I Pass  13: suminf.    0.62101 (11) obj. -29.0801 iterations 10
Cbc0038I Pass  14: suminf.    0.91631 (20) obj. -28.7823 iterations 20
Cbc0038I Pass  15: suminf.    0.89614 (21) obj. -28.7823 iterations 4
Cbc0038I Pass  16: suminf.    1.06635 (12) obj. -28.7823 iterations 26
Cbc0038I Pass  17: suminf.    0.71676 (15) obj. -28.7823 iterations 11
Cbc0038I Pass  18: suminf.    1.61541 (13) obj. -28.7823 iterations 19
Cbc0038I Pass  19: suminf.    1.19647 (12) obj. -28.7823 iterations 10
Cbc0038I Pass  20: suminf.    1.57409 (13) obj. -28.7823 iterations 10
Cbc0038I Pass  21: suminf.    1.16391 (12) obj. -28.7823 iterations 10
Cbc0038I Pass  22: suminf.    1.61541 (13) obj. -28.7823 iterations 10
Cbc0038I Pass  23: suminf.    0.85903 (15) obj. -30.8582 iterations 27
Cbc0038I Pass  24: suminf.    0.85903 (15) obj. -30.8582 iterations 0
Cbc0038I Pass  25: suminf.    2.03619 (14) obj. -28.7823 iterations 23
Cbc0038I Pass  26: suminf.    1.64859 (11) obj. -28.7823 iterations 8
Cbc0038I Pass  27: suminf.    1.86555 (14) obj. -28.7823 iterations 15
Cbc0038I Pass  28: suminf.    1.86555 (14) obj. -28.7823 iterations 0
Cbc0038I Pass  29: suminf.    2.28872 (13) obj. -28.7823 iterations 12
Cbc0038I Pass  30: suminf.    1.92249 (14) obj. -28.7823 iterations 10
Cbc0038I Pass  31: suminf.    2.24081 (13) obj. -28.7823 iterations 9
Cbc0038I Pass  32: suminf.    1.88641 (14) obj. -28.7823 iterations 11
Cbc0038I Rounding solution of -26.5075 is better than previous of -25.3364

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 113 columns, reduced to 50 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -26.5075 to -27.9001 (0.12 seconds)
Cbc0038I Round again with cutoff of -34.9848
Cbc0038I Pass  32: suminf.    0.26896 (12) obj. -44.8707 iterations 0
Cbc0038I Pass  33: suminf.    0.26896 (12) obj. -44.8707 iterations 1
Cbc0038I Pass  34: suminf.    1.29136 (26) obj. -34.9848 iterations 31
Cbc0038I Pass  35: suminf.    1.11211 (25) obj. -34.9848 iterations 4
Cbc0038I Pass  36: suminf.    1.04899 (19) obj. -34.9848 iterations 33
Cbc0038I Pass  37: suminf.    1.04899 (19) obj. -34.9848 iterations 0
Cbc0038I Pass  38: suminf.    1.73116 (16) obj. -34.9848 iterations 22
Cbc0038I Pass  39: suminf.    1.06935 (16) obj. -34.9848 iterations 13
Cbc0038I Pass  40: suminf.    2.03056 (16) obj. -34.9848 iterations 11
Cbc0038I Pass  41: suminf.    1.32682 (15) obj. -34.9848 iterations 9
Cbc0038I Pass  42: suminf.    0.73723 (14) obj. -34.9848 iterations 8
Cbc0038I Pass  43: suminf.    0.73965 (16) obj. -34.9848 iterations 7
Cbc0038I Pass  44: suminf.    1.67465 (17) obj. -34.9848 iterations 19
Cbc0038I Pass  45: suminf.    0.72050 (15) obj. -34.9848 iterations 5
Cbc0038I Pass  46: suminf.    0.73965 (16) obj. -34.9848 iterations 18
Cbc0038I Pass  47: suminf.    2.41381 (17) obj. -34.9848 iterations 23
Cbc0038I Pass  48: suminf.    2.01362 (18) obj. -34.9848 iterations 13
Cbc0038I Pass  49: suminf.    2.49597 (16) obj. -34.9848 iterations 16
Cbc0038I Pass  50: suminf.    1.56010 (17) obj. -34.9848 iterations 16
Cbc0038I Pass  51: suminf.    0.73201 (18) obj. -34.9848 iterations 23
Cbc0038I Pass  52: suminf.    0.67407 (15) obj. -34.9848 iterations 9
Cbc0038I Pass  53: suminf.    1.73503 (17) obj. -34.9848 iterations 21
Cbc0038I Pass  54: suminf.    0.78470 (17) obj. -34.9848 iterations 24
Cbc0038I Pass  55: suminf.    0.71012 (14) obj. -34.9848 iterations 11
Cbc0038I Pass  56: suminf.    1.73503 (17) obj. -34.9848 iterations 21
Cbc0038I Pass  57: suminf.    1.56010 (17) obj. -34.9848 iterations 5
Cbc0038I Pass  58: suminf.    2.49597 (16) obj. -34.9848 iterations 10
Cbc0038I Pass  59: suminf.    2.19289 (20) obj. -34.9848 iterations 11
Cbc0038I Pass  60: suminf.    1.19632 (17) obj. -34.9848 iterations 13
Cbc0038I Pass  61: suminf.    0.70975 (17) obj. -34.9848 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -27.9001 - took 0.09 seconds
Cbc0012I Integer solution of -27.900106 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 97 rows 113 columns, reduced to 9 rows 12 columns
Cbc0031I 56 added rows had average density of 12.571429
Cbc0013I At root node, 56 cuts changed objective from -59.794833 to -32.749089 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 2745 row cuts average 5.9 elements, 3 column cuts (3 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 90 row cuts average 76.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 93 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 190 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 78 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 246 row cuts average 72.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27.900106 best solution, best possible -32.749089 (0.60 seconds)
Cbc0001I Search completed - best objective -27.90010599999999, took 1215 iterations and 12 nodes (1.21 seconds)
Cbc0032I Strong branching done 306 times (6445 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       1.22

