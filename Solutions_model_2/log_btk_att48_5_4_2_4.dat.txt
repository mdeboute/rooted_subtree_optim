Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 48 (-2) columns and 262 (-23) elements
Clp1000I sum of infeasibilities 3.41518e-06 - average 3.9255e-08, 12 fixed columns
Coin0506I Presolve 62 (-25) rows, 35 (-13) columns and 186 (-76) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 2053.4201
Clp0000I Optimal - objective value 2053.4201
Coin0511I After Postsolve, objective 2053.4201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2053.4201
Clp0000I Optimal - objective value 2053.4201
Clp0000I Optimal - objective value 2053.4201
Coin0511I After Postsolve, objective 2053.4201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2053.420052 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 48 columns (47 integer (47 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 12.4264
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 606.503 iterations 35
Cbc0038I Solution found of 606.503
Cbc0038I Relaxing continuous gives 606.503
Cbc0038I Rounding solution of 525.788 is better than previous of 606.503

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 525.788 to -391.347 (0.02 seconds)
Cbc0038I Round again with cutoff of -557.554
Cbc0038I Pass   2: suminf.    2.17013 (10) obj. -557.554 iterations 8
Cbc0038I Pass   3: suminf.    2.16650 (9) obj. -557.554 iterations 1
Cbc0038I Pass   4: suminf.    2.03717 (6) obj. -557.554 iterations 10
Cbc0038I Pass   5: suminf.    1.21988 (4) obj. -557.554 iterations 5
Cbc0038I Pass   6: suminf.    1.76767 (6) obj. -557.554 iterations 6
Cbc0038I Pass   7: suminf.    1.47162 (5) obj. -557.554 iterations 2
Cbc0038I Pass   8: suminf.    1.23969 (5) obj. -557.554 iterations 2
Cbc0038I Pass   9: suminf.    2.80040 (11) obj. -557.554 iterations 11
Cbc0038I Pass  10: suminf.    1.88747 (8) obj. -557.554 iterations 4
Cbc0038I Pass  11: suminf.    1.88747 (8) obj. -557.554 iterations 0
Cbc0038I Pass  12: suminf.    1.47523 (5) obj. -557.554 iterations 11
Cbc0038I Pass  13: suminf.    1.25047 (5) obj. -557.554 iterations 2
Cbc0038I Pass  14: suminf.    1.23066 (4) obj. -557.554 iterations 1
Cbc0038I Pass  15: suminf.    1.96245 (6) obj. -557.554 iterations 5
Cbc0038I Pass  16: suminf.    1.65654 (6) obj. -557.554 iterations 3
Cbc0038I Pass  17: suminf.    2.69238 (14) obj. -557.554 iterations 11
Cbc0038I Pass  18: suminf.    1.65387 (7) obj. -557.554 iterations 10
Cbc0038I Pass  19: suminf.    1.90937 (8) obj. -557.554 iterations 12
Cbc0038I Pass  20: suminf.    1.13299 (7) obj. -557.554 iterations 6
Cbc0038I Pass  21: suminf.    1.13299 (7) obj. -557.554 iterations 0
Cbc0038I Pass  22: suminf.    2.24084 (6) obj. -557.554 iterations 6
Cbc0038I Pass  23: suminf.    1.93097 (7) obj. -557.554 iterations 2
Cbc0038I Pass  24: suminf.    1.92428 (6) obj. -557.554 iterations 1
Cbc0038I Pass  25: suminf.    2.03757 (6) obj. -557.554 iterations 5
Cbc0038I Pass  26: suminf.    1.54924 (7) obj. -557.554 iterations 4
Cbc0038I Pass  27: suminf.    1.53070 (6) obj. -557.554 iterations 1
Cbc0038I Pass  28: suminf.    2.24084 (6) obj. -557.554 iterations 5
Cbc0038I Pass  29: suminf.    1.93097 (7) obj. -557.554 iterations 2
Cbc0038I Pass  30: suminf.    1.92428 (6) obj. -557.554 iterations 1
Cbc0038I Pass  31: suminf.    2.03757 (6) obj. -557.554 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -391.347 - took 0.05 seconds
Cbc0012I Integer solution of -391.34669 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 48 columns, reduced to 60 rows 34 columns
Cbc0031I 25 added rows had average density of 30.84
Cbc0013I At root node, 25 cuts changed objective from -2053.4201 to -1181.2183 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7516 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1663 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 287 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 42.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0001I Search completed - best objective -391.3466899999999, took 7067 iterations and 16 nodes (0.67 seconds)
Cbc0032I Strong branching done 344 times (8389 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 7, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-11) rows, 94 (-2) columns and 1343 (-70) elements
Clp1000I sum of infeasibilities 2.4135e-07 - average 2.77414e-09, 87 fixed columns
Coin0506I Presolve 2 (-85) rows, 7 (-87) columns and 9 (-1334) elements
Clp0006I 0  Obj -1620.5823 Dual inf 17.120243 (7)
Clp0029I End of values pass after 7 iterations
Clp0014I Perturbing problem by 0.001% of 1.3750125 - largest nonzero change 0 ( 0%) - largest zero change 1.6818804e-05
Clp0000I Optimal - objective value -1259.3127
Clp0000I Optimal - objective value -1259.3127
Coin0511I After Postsolve, objective -1259.3127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1259.3127 Dual inf 4934.8813 (55)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 2873.247
Clp0000I Optimal - objective value 2873.247
Clp0000I Optimal - objective value 2873.247
Coin0511I After Postsolve, objective 2873.247, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2873.247025 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 94 columns (94 integer (94 of which binary)) and 1345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 5.72484
Cbc0038I Pass   1: suminf.    3.01455 (23) obj. -1962.46 iterations 16
Cbc0038I Pass   2: suminf.    3.01455 (23) obj. -1962.46 iterations 1
Cbc0038I Pass   3: suminf.    1.00727 (12) obj. -301.755 iterations 11
Cbc0038I Pass   4: suminf.    0.04000 (1) obj. 13.5767 iterations 11
Cbc0038I Solution found of 40.4567
Cbc0038I Rounding solution of -270.795 is better than previous of 40.4567

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -270.795 to -388.297 (0.02 seconds)
Cbc0038I Round again with cutoff of -626.682
Cbc0038I Pass   5: suminf.    3.01455 (23) obj. -1962.46 iterations 0
Cbc0038I Pass   6: suminf.    3.01455 (23) obj. -1962.46 iterations 1
Cbc0038I Pass   7: suminf.    0.49138 (2) obj. -626.682 iterations 25
Cbc0038I Pass   8: suminf.    0.39059 (2) obj. -662.059 iterations 2
Cbc0038I Pass   9: suminf.    1.06008 (5) obj. -745.17 iterations 13
Cbc0038I Pass  10: suminf.    1.06008 (5) obj. -745.17 iterations 1
Cbc0038I Pass  11: suminf.    0.82598 (3) obj. -626.682 iterations 5
Cbc0038I Pass  12: suminf.    0.82598 (3) obj. -626.682 iterations 0
Cbc0038I Pass  13: suminf.    0.89111 (3) obj. -626.682 iterations 3
Cbc0038I Pass  14: suminf.    0.89111 (3) obj. -626.682 iterations 1
Cbc0038I Pass  15: suminf.    0.82598 (3) obj. -626.682 iterations 3
Cbc0038I Pass  16: suminf.    2.52958 (13) obj. -626.682 iterations 31
Cbc0038I Pass  17: suminf.    2.39058 (13) obj. -675.472 iterations 7
Cbc0038I Pass  18: suminf.    1.94315 (10) obj. -626.682 iterations 18
Cbc0038I Pass  19: suminf.    1.34850 (8) obj. -813.374 iterations 2
Cbc0038I Pass  20: suminf.    1.17658 (4) obj. -626.682 iterations 7
Cbc0038I Pass  21: suminf.    1.07098 (4) obj. -654.031 iterations 2
Cbc0038I Pass  22: suminf.    3.27032 (14) obj. -626.682 iterations 27
Cbc0038I Pass  23: suminf.    2.07985 (12) obj. -626.682 iterations 10
Cbc0038I Pass  24: suminf.    2.04749 (10) obj. -632.812 iterations 2
Cbc0038I Pass  25: suminf.    2.34379 (8) obj. -626.682 iterations 10
Cbc0038I Pass  26: suminf.    2.34379 (8) obj. -626.682 iterations 0
Cbc0038I Pass  27: suminf.    1.41314 (5) obj. -626.682 iterations 10
Cbc0038I Pass  28: suminf.    1.41314 (5) obj. -626.682 iterations 0
Cbc0038I Pass  29: suminf.    1.36327 (5) obj. -626.682 iterations 4
Cbc0038I Pass  30: suminf.    1.36327 (5) obj. -626.682 iterations 0
Cbc0038I Pass  31: suminf.    1.41314 (5) obj. -626.682 iterations 3
Cbc0038I Pass  32: suminf.    2.29272 (12) obj. -626.682 iterations 17
Cbc0038I Pass  33: suminf.    2.20178 (11) obj. -701.522 iterations 3
Cbc0038I Pass  34: suminf.    1.61274 (6) obj. -626.682 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 39 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -388.297 to -391.084 (0.04 seconds)
Cbc0038I Round again with cutoff of -1055.77
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.01455 (23) obj. -1962.46 iterations 0
Cbc0038I Pass  35: suminf.    3.01455 (23) obj. -1962.46 iterations 1
Cbc0038I Pass  36: suminf.    1.64888 (16) obj. -1055.77 iterations 12
Cbc0038I Pass  37: suminf.    1.64888 (16) obj. -1055.77 iterations 1
Cbc0038I Pass  38: suminf.    1.14603 (19) obj. -1055.77 iterations 13
Cbc0038I Pass  39: suminf.    1.14603 (19) obj. -1055.77 iterations 0
Cbc0038I Pass  40: suminf.    1.11287 (7) obj. -1055.77 iterations 16
Cbc0038I Pass  41: suminf.    0.83900 (6) obj. -1209.33 iterations 1
Cbc0038I Pass  42: suminf.    0.50112 (3) obj. -1055.77 iterations 5
Cbc0038I Pass  43: suminf.    0.50112 (3) obj. -1055.77 iterations 0
Cbc0038I Pass  44: suminf.    0.67314 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  45: suminf.    0.67314 (3) obj. -1055.77 iterations 0
Cbc0038I Pass  46: suminf.    0.50112 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  47: suminf.    1.39899 (8) obj. -1055.77 iterations 17
Cbc0038I Pass  48: suminf.    1.39899 (8) obj. -1055.77 iterations 1
Cbc0038I Pass  49: suminf.    0.66689 (3) obj. -1055.77 iterations 9
Cbc0038I Pass  50: suminf.    0.66689 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  51: suminf.    0.80302 (3) obj. -1055.77 iterations 2
Cbc0038I Pass  52: suminf.    0.80302 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  53: suminf.    0.66689 (3) obj. -1055.77 iterations 2
Cbc0038I Pass  54: suminf.    1.27470 (7) obj. -1055.77 iterations 8
Cbc0038I Pass  55: suminf.    1.27470 (7) obj. -1055.77 iterations 0
Cbc0038I Pass  56: suminf.    0.67780 (3) obj. -1055.77 iterations 7
Cbc0038I Pass  57: suminf.    0.67780 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  58: suminf.    0.81157 (3) obj. -1055.77 iterations 2
Cbc0038I Pass  59: suminf.    0.81157 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  60: suminf.    0.67780 (3) obj. -1055.77 iterations 2
Cbc0038I Pass  61: suminf.    2.88480 (12) obj. -1055.77 iterations 34
Cbc0038I Pass  62: suminf.    2.48739 (11) obj. -1129.3 iterations 14
Cbc0038I Pass  63: suminf.    2.31421 (8) obj. -1055.77 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -391.084 - took 0.04 seconds
Cbc0012I Integer solution of -391.08369 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -391.34669 found by DiveCoefficient after 281 iterations and 0 nodes (0.15 seconds)
Cbc0031I 28 added rows had average density of 9.5714286
Cbc0013I At root node, 28 cuts changed objective from -2772.1406 to -391.34669 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 706 row cuts average 5.5 elements, 43 column cuts (43 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 67 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 29 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0001I Search completed - best objective -391.3466899999999, took 281 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 48 (-2) columns and 262 (-23) elements
Clp1000I sum of infeasibilities 3.41518e-06 - average 3.9255e-08, 12 fixed columns
Coin0506I Presolve 62 (-25) rows, 35 (-13) columns and 186 (-76) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 2053.4201
Clp0000I Optimal - objective value 2053.4201
Coin0511I After Postsolve, objective 2053.4201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2053.4201
Clp0000I Optimal - objective value 2053.4201
Clp0000I Optimal - objective value 2053.4201
Coin0511I After Postsolve, objective 2053.4201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2053.420052 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 48 columns (47 integer (47 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 12.4264
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 606.503 iterations 35
Cbc0038I Solution found of 606.503
Cbc0038I Relaxing continuous gives 606.503
Cbc0038I Rounding solution of 525.788 is better than previous of 606.503

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 525.788 to -391.347 (0.03 seconds)
Cbc0038I Round again with cutoff of -557.554
Cbc0038I Pass   2: suminf.    2.17013 (10) obj. -557.554 iterations 8
Cbc0038I Pass   3: suminf.    2.16650 (9) obj. -557.554 iterations 1
Cbc0038I Pass   4: suminf.    2.03717 (6) obj. -557.554 iterations 10
Cbc0038I Pass   5: suminf.    1.21988 (4) obj. -557.554 iterations 5
Cbc0038I Pass   6: suminf.    1.76767 (6) obj. -557.554 iterations 6
Cbc0038I Pass   7: suminf.    1.47162 (5) obj. -557.554 iterations 2
Cbc0038I Pass   8: suminf.    1.23969 (5) obj. -557.554 iterations 2
Cbc0038I Pass   9: suminf.    2.80040 (11) obj. -557.554 iterations 11
Cbc0038I Pass  10: suminf.    1.88747 (8) obj. -557.554 iterations 4
Cbc0038I Pass  11: suminf.    1.88747 (8) obj. -557.554 iterations 0
Cbc0038I Pass  12: suminf.    1.47523 (5) obj. -557.554 iterations 11
Cbc0038I Pass  13: suminf.    1.25047 (5) obj. -557.554 iterations 2
Cbc0038I Pass  14: suminf.    1.23066 (4) obj. -557.554 iterations 1
Cbc0038I Pass  15: suminf.    1.96245 (6) obj. -557.554 iterations 5
Cbc0038I Pass  16: suminf.    1.65654 (6) obj. -557.554 iterations 3
Cbc0038I Pass  17: suminf.    2.69238 (14) obj. -557.554 iterations 11
Cbc0038I Pass  18: suminf.    1.65387 (7) obj. -557.554 iterations 10
Cbc0038I Pass  19: suminf.    1.90937 (8) obj. -557.554 iterations 12
Cbc0038I Pass  20: suminf.    1.13299 (7) obj. -557.554 iterations 6
Cbc0038I Pass  21: suminf.    1.13299 (7) obj. -557.554 iterations 0
Cbc0038I Pass  22: suminf.    2.24084 (6) obj. -557.554 iterations 6
Cbc0038I Pass  23: suminf.    1.93097 (7) obj. -557.554 iterations 2
Cbc0038I Pass  24: suminf.    1.92428 (6) obj. -557.554 iterations 1
Cbc0038I Pass  25: suminf.    2.03757 (6) obj. -557.554 iterations 5
Cbc0038I Pass  26: suminf.    1.54924 (7) obj. -557.554 iterations 4
Cbc0038I Pass  27: suminf.    1.53070 (6) obj. -557.554 iterations 1
Cbc0038I Pass  28: suminf.    2.24084 (6) obj. -557.554 iterations 5
Cbc0038I Pass  29: suminf.    1.93097 (7) obj. -557.554 iterations 2
Cbc0038I Pass  30: suminf.    1.92428 (6) obj. -557.554 iterations 1
Cbc0038I Pass  31: suminf.    2.03757 (6) obj. -557.554 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -391.347 - took 0.05 seconds
Cbc0012I Integer solution of -391.34669 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 48 columns, reduced to 60 rows 34 columns
Cbc0031I 25 added rows had average density of 30.84
Cbc0013I At root node, 25 cuts changed objective from -2053.4201 to -1181.2183 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7516 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1663 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 287 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 42.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0001I Search completed - best objective -391.3466899999999, took 7067 iterations and 16 nodes (0.65 seconds)
Cbc0032I Strong branching done 344 times (8389 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 7, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 94 (-3) columns and 1343 (-71) elements
Clp1000I sum of infeasibilities 2.4135e-07 - average 2.77414e-09, 87 fixed columns
Coin0506I Presolve 2 (-85) rows, 7 (-87) columns and 9 (-1334) elements
Clp0006I 0  Obj -1620.5823 Dual inf 17.120243 (7)
Clp0029I End of values pass after 7 iterations
Clp0014I Perturbing problem by 0.001% of 1.3750125 - largest nonzero change 0 ( 0%) - largest zero change 1.6818804e-05
Clp0000I Optimal - objective value -1259.3127
Clp0000I Optimal - objective value -1259.3127
Coin0511I After Postsolve, objective -1259.3127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1259.3127 Dual inf 4934.8813 (55)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 2873.247
Clp0000I Optimal - objective value 2873.247
Clp0000I Optimal - objective value 2873.247
Coin0511I After Postsolve, objective 2873.247, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2873.247025 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 94 columns (94 integer (94 of which binary)) and 1345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 5.72484
Cbc0038I Pass   1: suminf.    3.01455 (23) obj. -1962.46 iterations 16
Cbc0038I Pass   2: suminf.    3.01455 (23) obj. -1962.46 iterations 1
Cbc0038I Pass   3: suminf.    1.00727 (12) obj. -301.755 iterations 11
Cbc0038I Pass   4: suminf.    0.04000 (1) obj. 13.5767 iterations 11
Cbc0038I Solution found of 40.4567
Cbc0038I Rounding solution of -270.795 is better than previous of 40.4567

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -270.795 to -388.297 (0.02 seconds)
Cbc0038I Round again with cutoff of -626.682
Cbc0038I Pass   5: suminf.    3.01455 (23) obj. -1962.46 iterations 0
Cbc0038I Pass   6: suminf.    3.01455 (23) obj. -1962.46 iterations 1
Cbc0038I Pass   7: suminf.    0.49138 (2) obj. -626.682 iterations 25
Cbc0038I Pass   8: suminf.    0.39059 (2) obj. -662.059 iterations 2
Cbc0038I Pass   9: suminf.    1.06008 (5) obj. -745.17 iterations 13
Cbc0038I Pass  10: suminf.    1.06008 (5) obj. -745.17 iterations 1
Cbc0038I Pass  11: suminf.    0.82598 (3) obj. -626.682 iterations 5
Cbc0038I Pass  12: suminf.    0.82598 (3) obj. -626.682 iterations 0
Cbc0038I Pass  13: suminf.    0.89111 (3) obj. -626.682 iterations 3
Cbc0038I Pass  14: suminf.    0.89111 (3) obj. -626.682 iterations 1
Cbc0038I Pass  15: suminf.    0.82598 (3) obj. -626.682 iterations 3
Cbc0038I Pass  16: suminf.    2.52958 (13) obj. -626.682 iterations 31
Cbc0038I Pass  17: suminf.    2.39058 (13) obj. -675.472 iterations 7
Cbc0038I Pass  18: suminf.    1.94315 (10) obj. -626.682 iterations 18
Cbc0038I Pass  19: suminf.    1.34850 (8) obj. -813.374 iterations 2
Cbc0038I Pass  20: suminf.    1.17658 (4) obj. -626.682 iterations 7
Cbc0038I Pass  21: suminf.    1.07098 (4) obj. -654.031 iterations 2
Cbc0038I Pass  22: suminf.    3.27032 (14) obj. -626.682 iterations 27
Cbc0038I Pass  23: suminf.    2.07985 (12) obj. -626.682 iterations 10
Cbc0038I Pass  24: suminf.    2.04749 (10) obj. -632.812 iterations 2
Cbc0038I Pass  25: suminf.    2.34379 (8) obj. -626.682 iterations 10
Cbc0038I Pass  26: suminf.    2.34379 (8) obj. -626.682 iterations 0
Cbc0038I Pass  27: suminf.    1.41314 (5) obj. -626.682 iterations 10
Cbc0038I Pass  28: suminf.    1.41314 (5) obj. -626.682 iterations 0
Cbc0038I Pass  29: suminf.    1.36327 (5) obj. -626.682 iterations 4
Cbc0038I Pass  30: suminf.    1.36327 (5) obj. -626.682 iterations 0
Cbc0038I Pass  31: suminf.    1.41314 (5) obj. -626.682 iterations 3
Cbc0038I Pass  32: suminf.    2.29272 (12) obj. -626.682 iterations 17
Cbc0038I Pass  33: suminf.    2.20178 (11) obj. -701.522 iterations 3
Cbc0038I Pass  34: suminf.    1.61274 (6) obj. -626.682 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 39 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -388.297 to -391.084 (0.04 seconds)
Cbc0038I Round again with cutoff of -1055.77
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.01455 (23) obj. -1962.46 iterations 0
Cbc0038I Pass  35: suminf.    3.01455 (23) obj. -1962.46 iterations 1
Cbc0038I Pass  36: suminf.    1.64888 (16) obj. -1055.77 iterations 12
Cbc0038I Pass  37: suminf.    1.64888 (16) obj. -1055.77 iterations 1
Cbc0038I Pass  38: suminf.    1.14603 (19) obj. -1055.77 iterations 13
Cbc0038I Pass  39: suminf.    1.14603 (19) obj. -1055.77 iterations 0
Cbc0038I Pass  40: suminf.    1.11287 (7) obj. -1055.77 iterations 16
Cbc0038I Pass  41: suminf.    0.83900 (6) obj. -1209.33 iterations 1
Cbc0038I Pass  42: suminf.    0.50112 (3) obj. -1055.77 iterations 5
Cbc0038I Pass  43: suminf.    0.50112 (3) obj. -1055.77 iterations 0
Cbc0038I Pass  44: suminf.    0.67314 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  45: suminf.    0.67314 (3) obj. -1055.77 iterations 0
Cbc0038I Pass  46: suminf.    0.50112 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  47: suminf.    1.39899 (8) obj. -1055.77 iterations 17
Cbc0038I Pass  48: suminf.    1.39899 (8) obj. -1055.77 iterations 1
Cbc0038I Pass  49: suminf.    0.66689 (3) obj. -1055.77 iterations 9
Cbc0038I Pass  50: suminf.    0.66689 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  51: suminf.    0.80302 (3) obj. -1055.77 iterations 2
Cbc0038I Pass  52: suminf.    0.80302 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  53: suminf.    0.66689 (3) obj. -1055.77 iterations 2
Cbc0038I Pass  54: suminf.    1.27470 (7) obj. -1055.77 iterations 8
Cbc0038I Pass  55: suminf.    1.27470 (7) obj. -1055.77 iterations 0
Cbc0038I Pass  56: suminf.    0.67780 (3) obj. -1055.77 iterations 7
Cbc0038I Pass  57: suminf.    0.67780 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  58: suminf.    0.81157 (3) obj. -1055.77 iterations 2
Cbc0038I Pass  59: suminf.    0.81157 (3) obj. -1055.77 iterations 1
Cbc0038I Pass  60: suminf.    0.67780 (3) obj. -1055.77 iterations 2
Cbc0038I Pass  61: suminf.    2.88480 (12) obj. -1055.77 iterations 34
Cbc0038I Pass  62: suminf.    2.48739 (11) obj. -1129.3 iterations 14
Cbc0038I Pass  63: suminf.    2.31421 (8) obj. -1055.77 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -391.084 - took 0.04 seconds
Cbc0012I Integer solution of -391.08369 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -391.34669 found by DiveCoefficient after 281 iterations and 0 nodes (0.14 seconds)
Cbc0031I 28 added rows had average density of 9.5714286
Cbc0013I At root node, 28 cuts changed objective from -2772.1406 to -391.34669 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 706 row cuts average 5.5 elements, 43 column cuts (43 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 67 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 29 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -391.3466899999999, took 281 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.15

