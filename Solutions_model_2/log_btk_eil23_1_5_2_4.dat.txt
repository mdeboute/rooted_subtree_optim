Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 24 (-25) rows, 15 (-10) columns and 72 (-63) elements
Clp0000I Optimal - objective value 10610.627
Coin0511I After Postsolve, objective 10610.627, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10610.62701 - 5 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.237%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.565874
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7964.76 iterations 4
Cbc0038I Solution found of -7964.76
Cbc0038I Relaxing continuous gives -7964.76
Cbc0038I Rounding solution of -8061.43 is better than previous of -7964.76

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -8316.35
Cbc0038I Pass   2: suminf.    0.06319 (1) obj. -8316.35 iterations 1
Cbc0038I Pass   3: suminf.    0.47439 (1) obj. -10604.5 iterations 1
Cbc0038I Pass   4: suminf.    0.65580 (2) obj. -8316.35 iterations 2
Cbc0038I Pass   5: suminf.    0.65580 (2) obj. -8316.35 iterations 0
Cbc0038I Pass   6: suminf.    0.35244 (1) obj. -9928.54 iterations 2
Cbc0038I Pass   7: suminf.    0.06271 (1) obj. -8316.35 iterations 1
Cbc0038I Pass   8: suminf.    0.44218 (1) obj. -8316.35 iterations 4
Cbc0038I Pass   9: suminf.    0.36463 (1) obj. -8747.83 iterations 2
Cbc0038I Pass  10: suminf.    0.44218 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  11: suminf.    0.37927 (1) obj. -8790.4 iterations 4
Cbc0038I Pass  12: suminf.    0.37927 (1) obj. -8790.4 iterations 1
Cbc0038I Pass  13: suminf.    0.46446 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  14: suminf.    0.46446 (1) obj. -8316.35 iterations 4
Cbc0038I Pass  15: suminf.    0.46446 (1) obj. -8316.35 iterations 5
Cbc0038I Pass  16: suminf.    0.57327 (2) obj. -8316.35 iterations 5
Cbc0038I Pass  17: suminf.    0.57327 (2) obj. -8316.35 iterations 0
Cbc0038I Pass  18: suminf.    0.24878 (1) obj. -9367.07 iterations 2
Cbc0038I Pass  19: suminf.    0.05995 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  20: suminf.    0.70890 (2) obj. -8316.35 iterations 6
Cbc0038I Pass  21: suminf.    0.70890 (2) obj. -8316.35 iterations 1
Cbc0038I Pass  22: suminf.    0.35244 (1) obj. -9928.54 iterations 2
Cbc0038I Pass  23: suminf.    0.06271 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  24: suminf.    0.48567 (1) obj. -8316.35 iterations 5
Cbc0038I Pass  25: suminf.    0.35488 (1) obj. -9044.11 iterations 1
Cbc0038I Pass  26: suminf.    0.48567 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  27: suminf.    1.11483 (3) obj. -8316.35 iterations 3
Cbc0038I Pass  28: suminf.    0.31220 (1) obj. -9227.28 iterations 3
Cbc0038I Pass  29: suminf.    0.47590 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  30: suminf.    0.37317 (1) obj. -8915.66 iterations 2
Cbc0038I Pass  31: suminf.    0.48088 (1) obj. -8316.35 iterations 1
Cbc0038I Rounding solution of -8115.76 is better than previous of -8061.43

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8775.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.14565 (1) obj. -8775.2 iterations 0
Cbc0038I Pass  32: suminf.    0.47439 (1) obj. -10604.5 iterations 1
Cbc0038I Pass  33: suminf.    0.47439 (1) obj. -10604.5 iterations 0
Cbc0038I Pass  34: suminf.    0.51865 (3) obj. -8775.2 iterations 6
Cbc0038I Pass  35: suminf.    0.41351 (2) obj. -8775.2 iterations 2
Cbc0038I Pass  36: suminf.    0.23293 (1) obj. -9268.86 iterations 2
Cbc0038I Pass  37: suminf.    0.14421 (1) obj. -8775.2 iterations 1
Cbc0038I Pass  38: suminf.    0.79405 (2) obj. -8775.2 iterations 4
Cbc0038I Pass  39: suminf.    0.79405 (2) obj. -8775.2 iterations 2
Cbc0038I Pass  40: suminf.    0.30610 (1) obj. -9571.68 iterations 2
Cbc0038I Pass  41: suminf.    0.16296 (1) obj. -8775.2 iterations 1
Cbc0038I Pass  42: suminf.    0.16296 (1) obj. -8775.2 iterations 0
Cbc0038I Pass  43: suminf.    0.31611 (2) obj. -8775.2 iterations 5
Cbc0038I Pass  44: suminf.    0.14870 (1) obj. -8775.2 iterations 2
Cbc0038I Pass  45: suminf.    0.17195 (1) obj. -8904.57 iterations 1
Cbc0038I Pass  46: suminf.    0.37483 (2) obj. -8775.2 iterations 10
Cbc0038I Pass  47: suminf.    0.13049 (1) obj. -8775.2 iterations 2
Cbc0038I Pass  48: suminf.    0.19390 (1) obj. -9128.04 iterations 1
Cbc0038I Pass  49: suminf.    0.10521 (1) obj. -8775.2 iterations 10
Cbc0038I Pass  50: suminf.    0.18171 (1) obj. -9200.85 iterations 1
Cbc0038I Pass  51: suminf.    0.10521 (1) obj. -8775.2 iterations 1
Cbc0038I Pass  52: suminf.    0.14517 (1) obj. -8775.2 iterations 8
Cbc0038I Pass  53: suminf.    0.14517 (1) obj. -8775.2 iterations 2
Cbc0038I Pass  54: suminf.    0.23049 (1) obj. -9249.95 iterations 1
Cbc0038I Pass  55: suminf.    0.15553 (1) obj. -8775.2 iterations 5
Cbc0038I Pass  56: suminf.    0.15553 (1) obj. -8775.2 iterations 1
Cbc0038I Pass  57: suminf.    0.19024 (1) obj. -8968.35 iterations 1
Cbc0038I Pass  58: suminf.    0.56047 (2) obj. -8775.2 iterations 5
Cbc0038I Pass  59: suminf.    0.56047 (2) obj. -8775.2 iterations 2
Cbc0038I Pass  60: suminf.    0.19634 (1) obj. -9158.28 iterations 2
Cbc0038I Rounding solution of -8192.43 is better than previous of -8115.76

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -9325.83
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.24460 (1) obj. -9325.83 iterations 0
Cbc0038I Pass  61: suminf.    0.47439 (1) obj. -10604.5 iterations 1
Cbc0038I Pass  62: suminf.    0.26689 (1) obj. -9325.83 iterations 3
Cbc0038I Pass  63: suminf.    0.48902 (1) obj. -10561.9 iterations 1
Cbc0038I Pass  64: suminf.    0.26689 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  65: suminf.    0.26689 (1) obj. -9325.83 iterations 0
Cbc0038I Pass  66: suminf.    0.45481 (2) obj. -9325.83 iterations 3
Cbc0038I Pass  67: suminf.    0.45481 (2) obj. -9325.83 iterations 1
Cbc0038I Pass  68: suminf.    0.25497 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  69: suminf.    0.43415 (1) obj. -10322.9 iterations 1
Cbc0038I Pass  70: suminf.    0.25497 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  71: suminf.    0.43415 (1) obj. -10322.9 iterations 1
Cbc0038I Pass  72: suminf.    0.43415 (1) obj. -10322.9 iterations 3
Cbc0038I Pass  73: suminf.    0.36707 (1) obj. -9883.3 iterations 5
Cbc0038I Pass  74: suminf.    0.26689 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  75: suminf.    0.36707 (1) obj. -9883.3 iterations 1
Cbc0038I Pass  76: suminf.    0.62546 (2) obj. -9325.83 iterations 2
Cbc0038I Pass  77: suminf.    0.26192 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  78: suminf.    0.30610 (1) obj. -9571.68 iterations 1
Cbc0038I Pass  79: suminf.    0.36707 (1) obj. -9883.3 iterations 3
Cbc0038I Pass  80: suminf.    0.44173 (2) obj. -9325.83 iterations 3
Cbc0038I Pass  81: suminf.    0.44173 (2) obj. -9325.83 iterations 0
Cbc0038I Pass  82: suminf.    0.62546 (2) obj. -9325.83 iterations 1
Cbc0038I Pass  83: suminf.    0.62546 (2) obj. -9325.83 iterations 0
Cbc0038I Pass  84: suminf.    0.24999 (1) obj. -9325.83 iterations 2
Cbc0038I Pass  85: suminf.    0.25122 (1) obj. -9332.65 iterations 1
Cbc0038I Pass  86: suminf.    0.24999 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  87: suminf.    0.26007 (2) obj. -9325.83 iterations 3
Cbc0038I Pass  88: suminf.    0.24999 (1) obj. -9325.83 iterations 3
Cbc0038I Pass  89: suminf.    0.25497 (1) obj. -9325.83 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8192.43 - took 0.03 seconds
Cbc0012I Integer solution of -8192.4263 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -8217.4263 found by DiveCoefficient after 5 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from -10610.627 to -8217.4263 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8217.426299999999, took 5 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-18) rows, 34 (-12) columns and 232 (-156) elements
Clp1000I sum of infeasibilities 4.79677e-05 - average 1.59892e-06, 33 fixed columns
Coin0506I Presolve 0 (-30) rows, 0 (-34) columns and 0 (-232) elements
Clp0000I Optimal - objective value 10599.457
Clp0000I Optimal - objective value 10599.457
Coin0511I After Postsolve, objective 10599.457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1595626 - largest nonzero change 0 ( 0%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 10688.907
Clp0000I Optimal - objective value 10688.907
Clp0000I Optimal - objective value 10688.907
Coin0511I After Postsolve, objective 10688.907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10688.90735 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 27 rows, 31 columns (31 integer (31 of which binary)) and 204 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 3.1093
Cbc0038I Pass   1: suminf.    1.40000 (3) obj. -7981.96 iterations 14
Cbc0038I Solution found of -7964.76
Cbc0038I Rounding solution of -8061.43 is better than previous of -7964.76

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 31 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8316.58
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.46014 (4) obj. -8316.58 iterations 1
Cbc0038I Pass   3: suminf.    0.38462 (1) obj. -10104.9 iterations 4
Cbc0038I Pass   4: suminf.    0.06323 (1) obj. -8316.58 iterations 1
Cbc0038I Pass   5: suminf.    0.91008 (4) obj. -8316.58 iterations 7
Cbc0038I Pass   6: suminf.    0.06478 (1) obj. -8316.58 iterations 4
Cbc0038I Pass   7: suminf.    0.22222 (1) obj. -9192.63 iterations 1
Cbc0038I Pass   8: suminf.    1.79373 (5) obj. -8316.58 iterations 6
Cbc0038I Pass   9: suminf.    0.54121 (2) obj. -8316.58 iterations 3
Cbc0038I Pass  10: suminf.    0.19390 (1) obj. -9155.71 iterations 2
Cbc0038I Pass  11: suminf.    0.04310 (1) obj. -8316.58 iterations 1
Cbc0038I Pass  12: suminf.    0.92549 (5) obj. -8316.58 iterations 8
Cbc0038I Pass  13: suminf.    0.06478 (1) obj. -8316.58 iterations 6
Cbc0038I Pass  14: suminf.    0.15385 (1) obj. -8812.15 iterations 1
Cbc0038I Pass  15: suminf.    1.08705 (4) obj. -8316.58 iterations 6
Cbc0038I Pass  16: suminf.    0.56338 (2) obj. -8316.58 iterations 3
Cbc0038I Pass  17: suminf.    0.23077 (1) obj. -9237.52 iterations 2
Cbc0038I Pass  18: suminf.    0.06526 (1) obj. -8316.58 iterations 1
Cbc0038I Pass  19: suminf.    1.00000 (3) obj. -8316.58 iterations 3
Cbc0038I Pass  20: suminf.    1.65736 (5) obj. -8316.58 iterations 9
Cbc0038I Pass  21: suminf.    1.65736 (5) obj. -8316.58 iterations 1
Cbc0038I Pass  22: suminf.    0.36707 (1) obj. -9844.3 iterations 5
Cbc0038I Pass  23: suminf.    0.09252 (1) obj. -8316.58 iterations 1
Cbc0038I Pass  24: suminf.    1.78108 (6) obj. -8316.58 iterations 5
Cbc0038I Pass  25: suminf.    1.31836 (5) obj. -8316.58 iterations 1
Cbc0038I Pass  26: suminf.    2.52324 (8) obj. -8316.58 iterations 9
Cbc0038I Pass  27: suminf.    2.52324 (8) obj. -8316.58 iterations 2
Cbc0038I Pass  28: suminf.    0.31220 (1) obj. -9594.27 iterations 9
Cbc0038I Pass  29: suminf.    0.08258 (1) obj. -8316.58 iterations 1
Cbc0038I Pass  30: suminf.    1.69004 (5) obj. -8316.58 iterations 6
Cbc0038I Pass  31: suminf.    1.19759 (4) obj. -8316.58 iterations 1
Cbc0038I Rounding solution of -8165.76 is better than previous of -8061.43

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 31 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -8165.76 to -8217.43 (0.02 seconds)
Cbc0038I Round again with cutoff of -8775.85
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.54267 (4) obj. -8775.85 iterations 0
Cbc0038I Pass  32: suminf.    0.38462 (1) obj. -10104.9 iterations 4
Cbc0038I Pass  33: suminf.    0.14576 (1) obj. -8775.85 iterations 1
Cbc0038I Pass  34: suminf.    0.95455 (3) obj. -8775.85 iterations 6
Cbc0038I Pass  35: suminf.    0.13384 (1) obj. -8775.85 iterations 5
Cbc0038I Pass  36: suminf.    0.38462 (1) obj. -10171.2 iterations 1
Cbc0038I Pass  37: suminf.    1.76692 (5) obj. -8775.85 iterations 5
Cbc0038I Pass  38: suminf.    0.62321 (2) obj. -8775.85 iterations 3
Cbc0038I Pass  39: suminf.    1.65734 (5) obj. -8775.85 iterations 3
Cbc0038I Pass  40: suminf.    0.62321 (2) obj. -8775.85 iterations 3
Cbc0038I Pass  41: suminf.    1.46345 (6) obj. -8775.85 iterations 6
Cbc0038I Pass  42: suminf.    0.21489 (2) obj. -8775.85 iterations 4
Cbc0038I Pass  43: suminf.    0.22439 (1) obj. -9384.02 iterations 2
Cbc0038I Pass  44: suminf.    0.11509 (1) obj. -8775.85 iterations 1
Cbc0038I Pass  45: suminf.    0.61742 (2) obj. -8775.85 iterations 4
Cbc0038I Pass  46: suminf.    0.12887 (1) obj. -8775.85 iterations 2
Cbc0038I Pass  47: suminf.    0.28571 (1) obj. -9648.59 iterations 1
Cbc0038I Pass  48: suminf.    0.61905 (3) obj. -8775.85 iterations 5
Cbc0038I Pass  49: suminf.    0.12839 (1) obj. -8775.85 iterations 2
Cbc0038I Pass  50: suminf.    0.22222 (1) obj. -9297.96 iterations 1
Cbc0038I Pass  51: suminf.    0.75808 (4) obj. -8775.85 iterations 9
Cbc0038I Pass  52: suminf.    0.12564 (1) obj. -8775.85 iterations 4
Cbc0038I Pass  53: suminf.    0.19390 (1) obj. -9155.71 iterations 1
Cbc0038I Pass  54: suminf.    0.41031 (3) obj. -8775.85 iterations 3
Cbc0038I Pass  55: suminf.    0.82004 (4) obj. -8775.85 iterations 8
Cbc0038I Pass  56: suminf.    0.21858 (2) obj. -8775.85 iterations 4
Cbc0038I Pass  57: suminf.    0.14286 (1) obj. -8841.34 iterations 4
Cbc0038I Pass  58: suminf.    0.13109 (1) obj. -8775.85 iterations 2
Cbc0038I Pass  59: suminf.    0.62788 (2) obj. -8775.85 iterations 3
Cbc0038I Pass  60: suminf.    0.12887 (1) obj. -8775.85 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -8217.43 - took 0.01 seconds
Cbc0012I Integer solution of -8217.4263 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 31 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -10612.932 to -10612.932 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -8217.426299999999, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 24 (-25) rows, 15 (-10) columns and 72 (-63) elements
Clp0000I Optimal - objective value 10610.627
Coin0511I After Postsolve, objective 10610.627, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10610.62701 - 5 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.237%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.565874
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7964.76 iterations 4
Cbc0038I Solution found of -7964.76
Cbc0038I Relaxing continuous gives -7964.76
Cbc0038I Rounding solution of -8061.43 is better than previous of -7964.76

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -8316.35
Cbc0038I Pass   2: suminf.    0.06319 (1) obj. -8316.35 iterations 1
Cbc0038I Pass   3: suminf.    0.47439 (1) obj. -10604.5 iterations 1
Cbc0038I Pass   4: suminf.    0.65580 (2) obj. -8316.35 iterations 2
Cbc0038I Pass   5: suminf.    0.65580 (2) obj. -8316.35 iterations 0
Cbc0038I Pass   6: suminf.    0.35244 (1) obj. -9928.54 iterations 2
Cbc0038I Pass   7: suminf.    0.06271 (1) obj. -8316.35 iterations 1
Cbc0038I Pass   8: suminf.    0.44218 (1) obj. -8316.35 iterations 4
Cbc0038I Pass   9: suminf.    0.36463 (1) obj. -8747.83 iterations 2
Cbc0038I Pass  10: suminf.    0.44218 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  11: suminf.    0.37927 (1) obj. -8790.4 iterations 4
Cbc0038I Pass  12: suminf.    0.37927 (1) obj. -8790.4 iterations 1
Cbc0038I Pass  13: suminf.    0.46446 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  14: suminf.    0.46446 (1) obj. -8316.35 iterations 4
Cbc0038I Pass  15: suminf.    0.46446 (1) obj. -8316.35 iterations 5
Cbc0038I Pass  16: suminf.    0.57327 (2) obj. -8316.35 iterations 5
Cbc0038I Pass  17: suminf.    0.57327 (2) obj. -8316.35 iterations 0
Cbc0038I Pass  18: suminf.    0.24878 (1) obj. -9367.07 iterations 2
Cbc0038I Pass  19: suminf.    0.05995 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  20: suminf.    0.70890 (2) obj. -8316.35 iterations 6
Cbc0038I Pass  21: suminf.    0.70890 (2) obj. -8316.35 iterations 1
Cbc0038I Pass  22: suminf.    0.35244 (1) obj. -9928.54 iterations 2
Cbc0038I Pass  23: suminf.    0.06271 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  24: suminf.    0.48567 (1) obj. -8316.35 iterations 5
Cbc0038I Pass  25: suminf.    0.35488 (1) obj. -9044.11 iterations 1
Cbc0038I Pass  26: suminf.    0.48567 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  27: suminf.    1.11483 (3) obj. -8316.35 iterations 3
Cbc0038I Pass  28: suminf.    0.31220 (1) obj. -9227.28 iterations 3
Cbc0038I Pass  29: suminf.    0.47590 (1) obj. -8316.35 iterations 1
Cbc0038I Pass  30: suminf.    0.37317 (1) obj. -8915.66 iterations 2
Cbc0038I Pass  31: suminf.    0.48088 (1) obj. -8316.35 iterations 1
Cbc0038I Rounding solution of -8115.76 is better than previous of -8061.43

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8775.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.14565 (1) obj. -8775.2 iterations 0
Cbc0038I Pass  32: suminf.    0.47439 (1) obj. -10604.5 iterations 1
Cbc0038I Pass  33: suminf.    0.47439 (1) obj. -10604.5 iterations 0
Cbc0038I Pass  34: suminf.    0.51865 (3) obj. -8775.2 iterations 6
Cbc0038I Pass  35: suminf.    0.41351 (2) obj. -8775.2 iterations 2
Cbc0038I Pass  36: suminf.    0.23293 (1) obj. -9268.86 iterations 2
Cbc0038I Pass  37: suminf.    0.14421 (1) obj. -8775.2 iterations 1
Cbc0038I Pass  38: suminf.    0.79405 (2) obj. -8775.2 iterations 4
Cbc0038I Pass  39: suminf.    0.79405 (2) obj. -8775.2 iterations 2
Cbc0038I Pass  40: suminf.    0.30610 (1) obj. -9571.68 iterations 2
Cbc0038I Pass  41: suminf.    0.16296 (1) obj. -8775.2 iterations 1
Cbc0038I Pass  42: suminf.    0.16296 (1) obj. -8775.2 iterations 0
Cbc0038I Pass  43: suminf.    0.31611 (2) obj. -8775.2 iterations 5
Cbc0038I Pass  44: suminf.    0.14870 (1) obj. -8775.2 iterations 2
Cbc0038I Pass  45: suminf.    0.17195 (1) obj. -8904.57 iterations 1
Cbc0038I Pass  46: suminf.    0.37483 (2) obj. -8775.2 iterations 10
Cbc0038I Pass  47: suminf.    0.13049 (1) obj. -8775.2 iterations 2
Cbc0038I Pass  48: suminf.    0.19390 (1) obj. -9128.04 iterations 1
Cbc0038I Pass  49: suminf.    0.10521 (1) obj. -8775.2 iterations 10
Cbc0038I Pass  50: suminf.    0.18171 (1) obj. -9200.85 iterations 1
Cbc0038I Pass  51: suminf.    0.10521 (1) obj. -8775.2 iterations 1
Cbc0038I Pass  52: suminf.    0.14517 (1) obj. -8775.2 iterations 8
Cbc0038I Pass  53: suminf.    0.14517 (1) obj. -8775.2 iterations 2
Cbc0038I Pass  54: suminf.    0.23049 (1) obj. -9249.95 iterations 1
Cbc0038I Pass  55: suminf.    0.15553 (1) obj. -8775.2 iterations 5
Cbc0038I Pass  56: suminf.    0.15553 (1) obj. -8775.2 iterations 1
Cbc0038I Pass  57: suminf.    0.19024 (1) obj. -8968.35 iterations 1
Cbc0038I Pass  58: suminf.    0.56047 (2) obj. -8775.2 iterations 5
Cbc0038I Pass  59: suminf.    0.56047 (2) obj. -8775.2 iterations 2
Cbc0038I Pass  60: suminf.    0.19634 (1) obj. -9158.28 iterations 2
Cbc0038I Rounding solution of -8192.43 is better than previous of -8115.76

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -9325.83
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.24460 (1) obj. -9325.83 iterations 0
Cbc0038I Pass  61: suminf.    0.47439 (1) obj. -10604.5 iterations 1
Cbc0038I Pass  62: suminf.    0.26689 (1) obj. -9325.83 iterations 3
Cbc0038I Pass  63: suminf.    0.48902 (1) obj. -10561.9 iterations 1
Cbc0038I Pass  64: suminf.    0.26689 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  65: suminf.    0.26689 (1) obj. -9325.83 iterations 0
Cbc0038I Pass  66: suminf.    0.45481 (2) obj. -9325.83 iterations 3
Cbc0038I Pass  67: suminf.    0.45481 (2) obj. -9325.83 iterations 1
Cbc0038I Pass  68: suminf.    0.25497 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  69: suminf.    0.43415 (1) obj. -10322.9 iterations 1
Cbc0038I Pass  70: suminf.    0.25497 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  71: suminf.    0.43415 (1) obj. -10322.9 iterations 1
Cbc0038I Pass  72: suminf.    0.43415 (1) obj. -10322.9 iterations 3
Cbc0038I Pass  73: suminf.    0.36707 (1) obj. -9883.3 iterations 5
Cbc0038I Pass  74: suminf.    0.26689 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  75: suminf.    0.36707 (1) obj. -9883.3 iterations 1
Cbc0038I Pass  76: suminf.    0.62546 (2) obj. -9325.83 iterations 2
Cbc0038I Pass  77: suminf.    0.26192 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  78: suminf.    0.30610 (1) obj. -9571.68 iterations 1
Cbc0038I Pass  79: suminf.    0.36707 (1) obj. -9883.3 iterations 3
Cbc0038I Pass  80: suminf.    0.44173 (2) obj. -9325.83 iterations 3
Cbc0038I Pass  81: suminf.    0.44173 (2) obj. -9325.83 iterations 0
Cbc0038I Pass  82: suminf.    0.62546 (2) obj. -9325.83 iterations 1
Cbc0038I Pass  83: suminf.    0.62546 (2) obj. -9325.83 iterations 0
Cbc0038I Pass  84: suminf.    0.24999 (1) obj. -9325.83 iterations 2
Cbc0038I Pass  85: suminf.    0.25122 (1) obj. -9332.65 iterations 1
Cbc0038I Pass  86: suminf.    0.24999 (1) obj. -9325.83 iterations 1
Cbc0038I Pass  87: suminf.    0.26007 (2) obj. -9325.83 iterations 3
Cbc0038I Pass  88: suminf.    0.24999 (1) obj. -9325.83 iterations 3
Cbc0038I Pass  89: suminf.    0.25497 (1) obj. -9325.83 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8192.43 - took 0.01 seconds
Cbc0012I Integer solution of -8192.4263 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -8217.4263 found by DiveCoefficient after 5 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from -10610.627 to -8217.4263 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8217.426299999999, took 5 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-23) rows, 30 (-17) columns and 192 (-197) elements
Clp1000I sum of infeasibilities 5.66833e-07 - average 2.18013e-08, 15 fixed columns
Coin0506I Presolve 0 (-26) rows, 0 (-30) columns and 0 (-192) elements
Clp0000I Optimal - objective value 10680.574
Clp0000I Optimal - objective value 10680.574
Coin0511I After Postsolve, objective 10680.574, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7537691 - largest nonzero change 2.56423e-05 ( 0.00256423%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 10688.907
Clp0000I Optimal - objective value 10688.907
Clp0000I Optimal - objective value 10688.907
Coin0511I After Postsolve, objective 10688.907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10688.90735 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 27 rows, 31 columns (31 integer (31 of which binary)) and 204 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.0786
Cbc0038I Pass   1: suminf.    0.90000 (2) obj. -7971.46 iterations 15
Cbc0038I Solution found of -7964.76
Cbc0038I Rounding solution of -8061.43 is better than previous of -7964.76

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 31 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8316.63
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.96203 (3) obj. -8316.63 iterations 1
Cbc0038I Pass   3: suminf.    0.46302 (2) obj. -8316.63 iterations 1
Cbc0038I Pass   4: suminf.    0.45455 (1) obj. -10494 iterations 2
Cbc0038I Pass   5: suminf.    0.06324 (1) obj. -8316.63 iterations 1
Cbc0038I Pass   6: suminf.    0.93749 (3) obj. -8316.63 iterations 4
Cbc0038I Pass   7: suminf.    0.56364 (2) obj. -8741.31 iterations 2
Cbc0038I Pass   8: suminf.    0.43967 (1) obj. -8316.63 iterations 2
Cbc0038I Pass   9: suminf.    0.36364 (1) obj. -8739.71 iterations 1
Cbc0038I Pass  10: suminf.    1.06448 (3) obj. -8316.63 iterations 6
Cbc0038I Pass  11: suminf.    1.06448 (3) obj. -8316.63 iterations 2
Cbc0038I Pass  12: suminf.    0.25122 (1) obj. -9324.31 iterations 3
Cbc0038I Pass  13: suminf.    0.07013 (1) obj. -8316.63 iterations 1
Cbc0038I Pass  14: suminf.    1.47996 (5) obj. -8316.63 iterations 6
Cbc0038I Pass  15: suminf.    0.57045 (2) obj. -8316.63 iterations 3
Cbc0038I Pass  16: suminf.    0.20854 (1) obj. -9074.47 iterations 2
Cbc0038I Pass  17: suminf.    0.07234 (1) obj. -8316.63 iterations 1
Cbc0038I Pass  18: suminf.    1.42129 (4) obj. -8316.63 iterations 4
Cbc0038I Pass  19: suminf.    1.07143 (3) obj. -8316.63 iterations 1
Cbc0038I Pass  20: suminf.    0.57183 (2) obj. -8316.63 iterations 1
Cbc0038I Pass  21: suminf.    0.33049 (1) obj. -9750.39 iterations 2
Cbc0038I Pass  22: suminf.    0.07282 (1) obj. -8316.63 iterations 1
Cbc0038I Pass  23: suminf.    0.40591 (2) obj. -8316.63 iterations 5
Cbc0038I Pass  24: suminf.    0.39146 (1) obj. -10089.7 iterations 2
Cbc0038I Pass  25: suminf.    0.07282 (1) obj. -8316.63 iterations 1
Cbc0038I Pass  26: suminf.    0.73340 (3) obj. -8316.63 iterations 7
Cbc0038I Pass  27: suminf.    0.06737 (1) obj. -8316.63 iterations 4
Cbc0038I Pass  28: suminf.    0.08659 (1) obj. -8423.56 iterations 1
Cbc0038I Pass  29: suminf.    1.04378 (4) obj. -8316.63 iterations 6
Cbc0038I Pass  30: suminf.    0.31108 (2) obj. -8316.63 iterations 2
Cbc0038I Pass  31: suminf.    0.26951 (1) obj. -9413.77 iterations 2
Cbc0038I Rounding solution of -8103.43 is better than previous of -8061.43

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 31 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -8103.43 to -8115.76 (0.02 seconds)
Cbc0038I Round again with cutoff of -8776
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.04459 (3) obj. -8776 iterations 0
Cbc0038I Pass  32: suminf.    0.54558 (2) obj. -8776 iterations 1
Cbc0038I Pass  33: suminf.    0.45455 (1) obj. -10494 iterations 2
Cbc0038I Pass  34: suminf.    0.14579 (1) obj. -8776 iterations 1
Cbc0038I Pass  35: suminf.    3.19000 (9) obj. -8776 iterations 12
Cbc0038I Pass  36: suminf.    2.09198 (6) obj. -8776 iterations 3
Cbc0038I Pass  37: suminf.    0.31220 (1) obj. -9646.94 iterations 6
Cbc0038I Pass  38: suminf.    0.15568 (1) obj. -8776 iterations 1
Cbc0038I Pass  39: suminf.    1.19632 (4) obj. -8776 iterations 7
Cbc0038I Pass  40: suminf.    0.83067 (3) obj. -8776 iterations 2
Cbc0038I Pass  41: suminf.    0.25122 (1) obj. -9321.65 iterations 3
Cbc0038I Pass  42: suminf.    0.15316 (1) obj. -8776 iterations 1
Cbc0038I Pass  43: suminf.    0.40000 (2) obj. -8776 iterations 3
Cbc0038I Pass  44: suminf.    0.14339 (1) obj. -8776 iterations 2
Cbc0038I Pass  45: suminf.    0.20854 (1) obj. -9138.47 iterations 1
Cbc0038I Pass  46: suminf.    0.65374 (3) obj. -8776 iterations 5
Cbc0038I Pass  47: suminf.    0.11913 (1) obj. -8776 iterations 4
Cbc0038I Pass  48: suminf.    0.19390 (1) obj. -9192.04 iterations 1
Cbc0038I Pass  49: suminf.    0.95028 (4) obj. -8776 iterations 4
Cbc0038I Pass  50: suminf.    1.11716 (6) obj. -8776 iterations 10
Cbc0038I Pass  51: suminf.    0.82324 (2) obj. -8776 iterations 4
Cbc0038I Pass  52: suminf.    0.33333 (1) obj. -9874.56 iterations 2
Cbc0038I Pass  53: suminf.    0.13591 (1) obj. -8776 iterations 1
Cbc0038I Pass  54: suminf.    0.69453 (3) obj. -8776 iterations 3
Cbc0038I Pass  55: suminf.    0.13543 (1) obj. -8776 iterations 2
Cbc0038I Pass  56: suminf.    0.23659 (1) obj. -9338.88 iterations 1
Cbc0038I Pass  57: suminf.    1.33333 (4) obj. -8776 iterations 6
Cbc0038I Pass  58: suminf.    0.62653 (2) obj. -8776 iterations 3
Cbc0038I Pass  59: suminf.    0.23659 (1) obj. -9377.88 iterations 2
Cbc0038I Pass  60: suminf.    0.12842 (1) obj. -8776 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -8115.76 - took 0.01 seconds
Cbc0012I Integer solution of -8115.76 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 31 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -8217.4263 found by DiveCoefficient after 20 iterations and 0 nodes (0.06 seconds)
Cbc0031I 1 added rows had average density of 5
Cbc0013I At root node, 1 cuts changed objective from -10613.472 to -8217.4263 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 2.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8217.426299999999, took 20 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.07

