Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 374 (-79) elements
Clp1000I sum of infeasibilities 4.4842e-05 - average 3.64569e-07, 11 fixed columns
Coin0506I Presolve 103 (-20) rows, 57 (-11) columns and 312 (-62) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 2.1402828 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 67.049119
Clp0000I Optimal - objective value 67.049119
Coin0511I After Postsolve, objective 67.049119, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23187706 - largest nonzero change 0 ( 0%) - largest zero change 2.9905028e-05
Clp0000I Optimal - objective value 67.049119
Clp0000I Optimal - objective value 67.049119
Clp0000I Optimal - objective value 67.049119
Coin0511I After Postsolve, objective 67.049119, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.04911942 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 68 columns (67 integer (67 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.921%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.0762
Cbc0038I Solution found of -4.63054
Cbc0038I Relaxing continuous gives -10.441
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -10.441 to -41.9394 (0.04 seconds)
Cbc0038I Round again with cutoff of -44.4055
Cbc0038I Pass   1: suminf.    2.51132 (25) obj. -44.4055 iterations 48
Cbc0038I Pass   2: suminf.    0.63676 (3) obj. -44.4055 iterations 34
Cbc0038I Pass   3: suminf.    0.33611 (2) obj. -44.4055 iterations 8
Cbc0038I Pass   4: suminf.    1.34606 (3) obj. -44.4055 iterations 5
Cbc0038I Pass   5: suminf.    1.05307 (3) obj. -44.4055 iterations 7
Cbc0038I Pass   6: suminf.    1.05307 (3) obj. -44.4055 iterations 0
Cbc0038I Pass   7: suminf.    1.66392 (4) obj. -44.4055 iterations 5
Cbc0038I Pass   8: suminf.    0.99102 (4) obj. -44.4055 iterations 4
Cbc0038I Pass   9: suminf.    0.94284 (4) obj. -44.4055 iterations 3
Cbc0038I Pass  10: suminf.    1.07474 (4) obj. -44.4055 iterations 8
Cbc0038I Pass  11: suminf.    1.07474 (4) obj. -44.4055 iterations 0
Cbc0038I Pass  12: suminf.    0.45670 (2) obj. -44.4055 iterations 7
Cbc0038I Pass  13: suminf.    0.37698 (2) obj. -44.4055 iterations 3
Cbc0038I Pass  14: suminf.    0.45670 (2) obj. -44.4055 iterations 4
Cbc0038I Pass  15: suminf.    1.38265 (8) obj. -44.4055 iterations 11
Cbc0038I Pass  16: suminf.    0.92269 (2) obj. -44.4055 iterations 16
Cbc0038I Pass  17: suminf.    0.24960 (2) obj. -44.4055 iterations 8
Cbc0038I Pass  18: suminf.    0.80275 (2) obj. -44.4055 iterations 9
Cbc0038I Pass  19: suminf.    0.26909 (2) obj. -44.4055 iterations 2
Cbc0038I Pass  20: suminf.    2.34535 (7) obj. -44.4055 iterations 16
Cbc0038I Pass  21: suminf.    0.59671 (5) obj. -44.4055 iterations 11
Cbc0038I Pass  22: suminf.    0.96898 (4) obj. -44.4055 iterations 11
Cbc0038I Pass  23: suminf.    0.77592 (2) obj. -44.4055 iterations 4
Cbc0038I Pass  24: suminf.    0.71057 (2) obj. -44.4055 iterations 6
Cbc0038I Pass  25: suminf.    0.47779 (3) obj. -44.4055 iterations 7
Cbc0038I Pass  26: suminf.    0.96898 (4) obj. -44.4055 iterations 9
Cbc0038I Pass  27: suminf.    2.19959 (7) obj. -44.4055 iterations 19
Cbc0038I Pass  28: suminf.    1.77472 (6) obj. -44.4055 iterations 10
Cbc0038I Pass  29: suminf.    1.52696 (4) obj. -44.4055 iterations 11
Cbc0038I Pass  30: suminf.    1.27400 (6) obj. -44.4055 iterations 9
Cbc0038I Rounding solution of -43.8059 is better than previous of -41.9394

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 92 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -43.8059 to -44.4689 (0.08 seconds)
Cbc0038I Round again with cutoff of -48.8951
Cbc0038I Pass  30: suminf.    2.84328 (25) obj. -48.8951 iterations 0
Cbc0038I Pass  31: suminf.    1.14386 (4) obj. -48.8951 iterations 36
Cbc0038I Pass  32: suminf.    0.93568 (6) obj. -48.8951 iterations 5
Cbc0038I Pass  33: suminf.    2.00283 (7) obj. -48.8951 iterations 10
Cbc0038I Pass  34: suminf.    1.08823 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  35: suminf.    0.64645 (3) obj. -48.8951 iterations 4
Cbc0038I Pass  36: suminf.    1.58198 (6) obj. -48.8951 iterations 6
Cbc0038I Pass  37: suminf.    1.54168 (7) obj. -48.8951 iterations 3
Cbc0038I Pass  38: suminf.    1.57087 (7) obj. -48.8951 iterations 8
Cbc0038I Pass  39: suminf.    1.04494 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  40: suminf.    0.92019 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  41: suminf.    0.93744 (4) obj. -48.8951 iterations 4
Cbc0038I Pass  42: suminf.    1.62272 (5) obj. -48.8951 iterations 7
Cbc0038I Pass  43: suminf.    1.08823 (4) obj. -48.8951 iterations 5
Cbc0038I Pass  44: suminf.    0.64645 (3) obj. -48.8951 iterations 5
Cbc0038I Pass  45: suminf.    1.58198 (6) obj. -48.8951 iterations 7
Cbc0038I Pass  46: suminf.    1.54168 (7) obj. -48.8951 iterations 3
Cbc0038I Pass  47: suminf.    1.57087 (7) obj. -48.8951 iterations 8
Cbc0038I Pass  48: suminf.    1.04494 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  49: suminf.    0.92019 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  50: suminf.    0.93744 (4) obj. -48.8951 iterations 4
Cbc0038I Pass  51: suminf.    1.62272 (5) obj. -48.8951 iterations 7
Cbc0038I Pass  52: suminf.    1.08823 (4) obj. -48.8951 iterations 5
Cbc0038I Pass  53: suminf.    0.64645 (3) obj. -48.8951 iterations 5
Cbc0038I Pass  54: suminf.    1.58198 (6) obj. -48.8951 iterations 7
Cbc0038I Pass  55: suminf.    1.54168 (7) obj. -48.8951 iterations 3
Cbc0038I Pass  56: suminf.    1.57087 (7) obj. -48.8951 iterations 8
Cbc0038I Pass  57: suminf.    1.04494 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  58: suminf.    0.92019 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  59: suminf.    0.93744 (4) obj. -48.8951 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -44.4689 - took 0.09 seconds
Cbc0012I Integer solution of -44.46892 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 64 rows 35 columns
Cbc0031I 32 added rows had average density of 23.90625
Cbc0013I At root node, 32 cuts changed objective from -66.599295 to -58.209063 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10467 row cuts average 4.2 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2360 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 135 row cuts average 58.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -44.46892 best solution, best possible -58.209063 (0.78 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 2 rows 2 columns
Cbc0001I Search completed - best objective -44.46892, took 9663 iterations and 62 nodes (0.96 seconds)
Cbc0032I Strong branching done 644 times (12160 iterations), fathomed 4 nodes and fixed 25 variables
Cbc0035I Maximum depth 20, 157 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       0.98

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-47) rows, 118 (-34) columns and 1966 (-1337) elements
Clp1000I sum of infeasibilities 0 - average 0, 65 fixed columns
Coin0506I Presolve 52 (-55) rows, 53 (-65) columns and 316 (-1650) elements
Clp0006I 0  Obj 137.64105 Dual inf 3.2346179 (52)
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 9.2514953 - largest nonzero change 1.7240784e-05 ( 0.0010393299%) - largest zero change 1.9383958e-05
Clp0000I Optimal - objective value 149.86612
Clp0000I Optimal - objective value 149.86612
Coin0511I After Postsolve, objective 149.86612, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 149.86612 Dual inf 27.35384 (4)
Clp0014I Perturbing problem by 0.001% of 1.5370493 - largest nonzero change 2.4544164e-05 ( 0.0018056464%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 150.37963
Clp0000I Optimal - objective value 150.37963
Clp0000I Optimal - objective value 150.37963
Coin0511I After Postsolve, objective 150.37963, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.3796319 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 68 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 63 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 118 columns (118 integer (118 of which binary)) and 1999 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.808%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.21842
Cbc0038I Pass   1: suminf.    0.83709 (29) obj. -66.4185 iterations 17
Cbc0038I Pass   2: suminf.    0.83709 (29) obj. -66.4185 iterations 0
Cbc0038I Pass   3: suminf.    0.44806 (19) obj. -54.8827 iterations 10
Cbc0038I Solution found of -31.4376
Cbc0038I Rounding solution of -40.4376 is better than previous of -31.4376

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -40.4376 to -81.4376 (0.06 seconds)
Cbc0038I Round again with cutoff of -86.2289
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.60481 (39) obj. -86.2289 iterations 4
Cbc0038I Pass   5: suminf.    1.71165 (40) obj. -86.2289 iterations 2
Cbc0038I Pass   6: suminf.    1.71165 (40) obj. -86.2289 iterations 1
Cbc0038I Pass   7: suminf.    1.98993 (27) obj. -86.2289 iterations 13
Cbc0038I Pass   8: suminf.    0.50110 (11) obj. -86.2289 iterations 16
Cbc0038I Pass   9: suminf.    0.39362 (10) obj. -94.8901 iterations 1
Cbc0038I Pass  10: suminf.    0.44067 (4) obj. -86.2289 iterations 18
Cbc0038I Pass  11: suminf.    0.74166 (3) obj. -86.2289 iterations 9
Cbc0038I Pass  12: suminf.    0.74166 (3) obj. -86.2289 iterations 0
Cbc0038I Pass  13: suminf.    0.44067 (4) obj. -86.2289 iterations 16
Cbc0038I Pass  14: suminf.    2.02384 (11) obj. -86.2289 iterations 24
Cbc0038I Pass  15: suminf.    1.55969 (10) obj. -86.2289 iterations 2
Cbc0038I Pass  16: suminf.    0.68107 (4) obj. -86.2289 iterations 19
Cbc0038I Pass  17: suminf.    0.55515 (6) obj. -86.2289 iterations 15
Cbc0038I Pass  18: suminf.    0.74711 (2) obj. -86.2289 iterations 9
Cbc0038I Pass  19: suminf.    2.61392 (14) obj. -86.2289 iterations 24
Cbc0038I Pass  20: suminf.    1.79753 (11) obj. -86.2289 iterations 4
Cbc0038I Pass  21: suminf.    0.44067 (4) obj. -86.2289 iterations 25
Cbc0038I Pass  22: suminf.    0.44067 (4) obj. -86.2289 iterations 0
Cbc0038I Pass  23: suminf.    0.74166 (3) obj. -86.2289 iterations 9
Cbc0038I Pass  24: suminf.    0.74166 (3) obj. -86.2289 iterations 0
Cbc0038I Pass  25: suminf.    1.88047 (12) obj. -86.2289 iterations 15
Cbc0038I Pass  26: suminf.    1.88047 (12) obj. -86.2289 iterations 0
Cbc0038I Pass  27: suminf.    0.68107 (4) obj. -86.2289 iterations 30
Cbc0038I Pass  28: suminf.    0.55515 (6) obj. -86.2289 iterations 12
Cbc0038I Pass  29: suminf.    0.74711 (2) obj. -86.2289 iterations 9
Cbc0038I Pass  30: suminf.    3.27032 (13) obj. -86.2289 iterations 19
Cbc0038I Pass  31: suminf.    1.98326 (10) obj. -86.2289 iterations 6
Cbc0038I Pass  32: suminf.    1.56842 (9) obj. -86.2289 iterations 1
Cbc0038I Pass  33: suminf.    0.68107 (4) obj. -86.2289 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 43 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -81.4376 - took 0.03 seconds
Cbc0012I Integer solution of -81.43759 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 37 added rows had average density of 4.027027
Cbc0013I At root node, 375 cuts changed objective from -122.69876 to -81.43759 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 200 row cuts average 5.3 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -81.43759, took 7 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 374 (-79) elements
Clp1000I sum of infeasibilities 4.4842e-05 - average 3.64569e-07, 11 fixed columns
Coin0506I Presolve 103 (-20) rows, 57 (-11) columns and 312 (-62) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 2.1402828 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 67.049119
Clp0000I Optimal - objective value 67.049119
Coin0511I After Postsolve, objective 67.049119, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23187706 - largest nonzero change 0 ( 0%) - largest zero change 2.9905028e-05
Clp0000I Optimal - objective value 67.049119
Clp0000I Optimal - objective value 67.049119
Clp0000I Optimal - objective value 67.049119
Coin0511I After Postsolve, objective 67.049119, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.04911942 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 68 columns (67 integer (67 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.921%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.0762
Cbc0038I Solution found of -4.63054
Cbc0038I Relaxing continuous gives -10.441
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -10.441 to -41.9394 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.4055
Cbc0038I Pass   1: suminf.    2.51132 (25) obj. -44.4055 iterations 48
Cbc0038I Pass   2: suminf.    0.63676 (3) obj. -44.4055 iterations 34
Cbc0038I Pass   3: suminf.    0.33611 (2) obj. -44.4055 iterations 8
Cbc0038I Pass   4: suminf.    1.34606 (3) obj. -44.4055 iterations 5
Cbc0038I Pass   5: suminf.    1.05307 (3) obj. -44.4055 iterations 7
Cbc0038I Pass   6: suminf.    1.05307 (3) obj. -44.4055 iterations 0
Cbc0038I Pass   7: suminf.    1.66392 (4) obj. -44.4055 iterations 5
Cbc0038I Pass   8: suminf.    0.99102 (4) obj. -44.4055 iterations 4
Cbc0038I Pass   9: suminf.    0.94284 (4) obj. -44.4055 iterations 3
Cbc0038I Pass  10: suminf.    1.07474 (4) obj. -44.4055 iterations 8
Cbc0038I Pass  11: suminf.    1.07474 (4) obj. -44.4055 iterations 0
Cbc0038I Pass  12: suminf.    0.45670 (2) obj. -44.4055 iterations 7
Cbc0038I Pass  13: suminf.    0.37698 (2) obj. -44.4055 iterations 3
Cbc0038I Pass  14: suminf.    0.45670 (2) obj. -44.4055 iterations 4
Cbc0038I Pass  15: suminf.    1.38265 (8) obj. -44.4055 iterations 11
Cbc0038I Pass  16: suminf.    0.92269 (2) obj. -44.4055 iterations 16
Cbc0038I Pass  17: suminf.    0.24960 (2) obj. -44.4055 iterations 8
Cbc0038I Pass  18: suminf.    0.80275 (2) obj. -44.4055 iterations 9
Cbc0038I Pass  19: suminf.    0.26909 (2) obj. -44.4055 iterations 2
Cbc0038I Pass  20: suminf.    2.34535 (7) obj. -44.4055 iterations 16
Cbc0038I Pass  21: suminf.    0.59671 (5) obj. -44.4055 iterations 11
Cbc0038I Pass  22: suminf.    0.96898 (4) obj. -44.4055 iterations 11
Cbc0038I Pass  23: suminf.    0.77592 (2) obj. -44.4055 iterations 4
Cbc0038I Pass  24: suminf.    0.71057 (2) obj. -44.4055 iterations 6
Cbc0038I Pass  25: suminf.    0.47779 (3) obj. -44.4055 iterations 7
Cbc0038I Pass  26: suminf.    0.96898 (4) obj. -44.4055 iterations 9
Cbc0038I Pass  27: suminf.    2.19959 (7) obj. -44.4055 iterations 19
Cbc0038I Pass  28: suminf.    1.77472 (6) obj. -44.4055 iterations 10
Cbc0038I Pass  29: suminf.    1.52696 (4) obj. -44.4055 iterations 11
Cbc0038I Pass  30: suminf.    1.27400 (6) obj. -44.4055 iterations 9
Cbc0038I Rounding solution of -43.8059 is better than previous of -41.9394

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 92 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -43.8059 to -44.4689 (0.08 seconds)
Cbc0038I Round again with cutoff of -48.8951
Cbc0038I Pass  30: suminf.    2.84328 (25) obj. -48.8951 iterations 0
Cbc0038I Pass  31: suminf.    1.14386 (4) obj. -48.8951 iterations 36
Cbc0038I Pass  32: suminf.    0.93568 (6) obj. -48.8951 iterations 5
Cbc0038I Pass  33: suminf.    2.00283 (7) obj. -48.8951 iterations 10
Cbc0038I Pass  34: suminf.    1.08823 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  35: suminf.    0.64645 (3) obj. -48.8951 iterations 4
Cbc0038I Pass  36: suminf.    1.58198 (6) obj. -48.8951 iterations 6
Cbc0038I Pass  37: suminf.    1.54168 (7) obj. -48.8951 iterations 3
Cbc0038I Pass  38: suminf.    1.57087 (7) obj. -48.8951 iterations 8
Cbc0038I Pass  39: suminf.    1.04494 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  40: suminf.    0.92019 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  41: suminf.    0.93744 (4) obj. -48.8951 iterations 4
Cbc0038I Pass  42: suminf.    1.62272 (5) obj. -48.8951 iterations 7
Cbc0038I Pass  43: suminf.    1.08823 (4) obj. -48.8951 iterations 5
Cbc0038I Pass  44: suminf.    0.64645 (3) obj. -48.8951 iterations 5
Cbc0038I Pass  45: suminf.    1.58198 (6) obj. -48.8951 iterations 7
Cbc0038I Pass  46: suminf.    1.54168 (7) obj. -48.8951 iterations 3
Cbc0038I Pass  47: suminf.    1.57087 (7) obj. -48.8951 iterations 8
Cbc0038I Pass  48: suminf.    1.04494 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  49: suminf.    0.92019 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  50: suminf.    0.93744 (4) obj. -48.8951 iterations 4
Cbc0038I Pass  51: suminf.    1.62272 (5) obj. -48.8951 iterations 7
Cbc0038I Pass  52: suminf.    1.08823 (4) obj. -48.8951 iterations 5
Cbc0038I Pass  53: suminf.    0.64645 (3) obj. -48.8951 iterations 5
Cbc0038I Pass  54: suminf.    1.58198 (6) obj. -48.8951 iterations 7
Cbc0038I Pass  55: suminf.    1.54168 (7) obj. -48.8951 iterations 3
Cbc0038I Pass  56: suminf.    1.57087 (7) obj. -48.8951 iterations 8
Cbc0038I Pass  57: suminf.    1.04494 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  58: suminf.    0.92019 (4) obj. -48.8951 iterations 6
Cbc0038I Pass  59: suminf.    0.93744 (4) obj. -48.8951 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -44.4689 - took 0.09 seconds
Cbc0012I Integer solution of -44.46892 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 64 rows 35 columns
Cbc0031I 32 added rows had average density of 23.90625
Cbc0013I At root node, 32 cuts changed objective from -66.599295 to -58.209063 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10467 row cuts average 4.2 elements, 1 column cuts (1 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2360 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 135 row cuts average 58.3 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -44.46892 best solution, best possible -58.209063 (0.86 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 2 rows 2 columns
Cbc0001I Search completed - best objective -44.46892, took 9663 iterations and 62 nodes (1.06 seconds)
Cbc0032I Strong branching done 644 times (12160 iterations), fathomed 4 nodes and fixed 25 variables
Cbc0035I Maximum depth 20, 157 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 113 (-40) columns and 1757 (-1547) elements
Clp1000I sum of infeasibilities 1.81112e-07 - average 1.77561e-09, 19 fixed columns
Coin0506I Presolve 84 (-18) rows, 94 (-19) columns and 1252 (-505) elements
Clp0006I 0  Obj 69.767877 Dual inf 36.060433 (92)
Clp0029I End of values pass after 93 iterations
Clp0014I Perturbing problem by 0.001% of 2.1145925 - largest nonzero change 0 ( 0%) - largest zero change 2.958296e-05
Clp0000I Optimal - objective value 76.677765
Clp0000I Optimal - objective value 76.677765
Coin0511I After Postsolve, objective 76.677765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 76.677765
Clp0000I Optimal - objective value 76.677765
Clp0000I Optimal - objective value 76.677765
Clp0000I Optimal - objective value 76.677765
Coin0511I After Postsolve, objective 76.677765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.67776508 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 113 columns (113 integer (113 of which binary)) and 1778 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.542%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 2.05182
Cbc0038I Pass   1: suminf.    1.72557 (29) obj. -61.5263 iterations 14
Cbc0038I Pass   2: suminf.    0.30977 (8) obj. -20.9133 iterations 22
Cbc0038I Solution found of -11.2898
Cbc0038I Rounding solution of -20.2898 is better than previous of -11.2898

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 113 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -24.7546
Cbc0038I Pass   3: suminf.    1.72557 (29) obj. -61.5263 iterations 0
Cbc0038I Pass   4: suminf.    0.61670 (8) obj. -24.7546 iterations 25
Cbc0038I Pass   5: suminf.    0.76717 (2) obj. -24.7546 iterations 10
Cbc0038I Pass   6: suminf.    0.76717 (2) obj. -24.7546 iterations 1
Cbc0038I Pass   7: suminf.    0.70609 (2) obj. -27.8542 iterations 2
Cbc0038I Pass   8: suminf.    0.10345 (1) obj. -26.6625 iterations 1
Cbc0038I Pass   9: suminf.    0.68188 (8) obj. -24.7546 iterations 18
Cbc0038I Pass  10: suminf.    0.53276 (10) obj. -24.7546 iterations 4
Cbc0038I Pass  11: suminf.    0.86545 (3) obj. -24.7546 iterations 10
Cbc0038I Pass  12: suminf.    0.81481 (2) obj. -24.7546 iterations 2
Cbc0038I Pass  13: suminf.    0.80260 (2) obj. -24.7546 iterations 1
Cbc0038I Pass  14: suminf.    0.18443 (2) obj. -24.7546 iterations 1
Cbc0038I Pass  15: suminf.    0.62724 (2) obj. -24.7546 iterations 3
Cbc0038I Pass  16: suminf.    1.13722 (8) obj. -24.7546 iterations 22
Cbc0038I Pass  17: suminf.    0.93786 (7) obj. -24.7546 iterations 10
Cbc0038I Pass  18: suminf.    1.30928 (6) obj. -24.7546 iterations 19
Cbc0038I Pass  19: suminf.    1.07311 (4) obj. -24.7546 iterations 7
Cbc0038I Pass  20: suminf.    1.07311 (4) obj. -24.7546 iterations 0
Cbc0038I Pass  21: suminf.    1.05037 (4) obj. -24.7546 iterations 8
Cbc0038I Pass  22: suminf.    0.92846 (5) obj. -24.7546 iterations 5
Cbc0038I Pass  23: suminf.    0.77524 (5) obj. -24.7546 iterations 9
Cbc0038I Pass  24: suminf.    0.64707 (4) obj. -24.7546 iterations 1
Cbc0038I Pass  25: suminf.    0.99043 (5) obj. -24.7546 iterations 12
Cbc0038I Pass  26: suminf.    0.27265 (2) obj. -24.7546 iterations 18
Cbc0038I Pass  27: suminf.    0.25397 (2) obj. -25.0543 iterations 5
Cbc0038I Pass  28: suminf.    0.56018 (3) obj. -24.7546 iterations 17
Cbc0038I Pass  29: suminf.    0.68776 (11) obj. -24.7546 iterations 22
Cbc0038I Pass  30: suminf.    0.46482 (10) obj. -24.7546 iterations 7
Cbc0038I Pass  31: suminf.    0.69949 (3) obj. -24.7546 iterations 19
Cbc0038I Pass  32: suminf.    0.39833 (4) obj. -24.7546 iterations 3
Cbc0038I Rounding solution of -38.0412 is better than previous of -20.2898

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 113 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -38.0412 to -44.4689 (0.06 seconds)
Cbc0038I Round again with cutoff of -48.5626
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.72557 (29) obj. -61.5263 iterations 0
Cbc0038I Pass  33: suminf.    1.45055 (17) obj. -48.5626 iterations 22
Cbc0038I Pass  34: suminf.    1.44279 (19) obj. -48.5626 iterations 3
Cbc0038I Pass  35: suminf.    1.42603 (15) obj. -48.5626 iterations 27
Cbc0038I Pass  36: suminf.    0.93845 (13) obj. -48.5626 iterations 10
Cbc0038I Pass  37: suminf.    1.42603 (15) obj. -48.5626 iterations 8
Cbc0038I Pass  38: suminf.    1.42603 (17) obj. -48.5626 iterations 11
Cbc0038I Pass  39: suminf.    1.07910 (17) obj. -48.5626 iterations 6
Cbc0038I Pass  40: suminf.    1.42603 (17) obj. -48.5626 iterations 11
Cbc0038I Pass  41: suminf.    1.05596 (15) obj. -48.5626 iterations 6
Cbc0038I Pass  42: suminf.    1.42603 (17) obj. -48.5626 iterations 9
Cbc0038I Pass  43: suminf.    1.42603 (18) obj. -48.5626 iterations 8
Cbc0038I Pass  44: suminf.    1.16803 (18) obj. -48.5626 iterations 5
Cbc0038I Pass  45: suminf.    1.42603 (17) obj. -48.5626 iterations 18
Cbc0038I Pass  46: suminf.    2.77906 (21) obj. -48.5626 iterations 13
Cbc0038I Pass  47: suminf.    2.70580 (25) obj. -48.5626 iterations 8
Cbc0038I Pass  48: suminf.    1.42603 (19) obj. -48.5626 iterations 20
Cbc0038I Pass  49: suminf.    1.11141 (18) obj. -48.5626 iterations 3
Cbc0038I Pass  50: suminf.    1.42603 (18) obj. -48.5626 iterations 10
Cbc0038I Pass  51: suminf.    1.42603 (19) obj. -48.5626 iterations 14
Cbc0038I Pass  52: suminf.    1.13364 (18) obj. -48.5626 iterations 6
Cbc0038I Pass  53: suminf.    1.47402 (19) obj. -48.5626 iterations 17
Cbc0038I Pass  54: suminf.    1.24337 (18) obj. -48.5626 iterations 2
Cbc0038I Pass  55: suminf.    1.47780 (18) obj. -48.5626 iterations 13
Cbc0038I Pass  56: suminf.    1.41724 (18) obj. -48.5626 iterations 3
Cbc0038I Pass  57: suminf.    1.47780 (18) obj. -48.5626 iterations 8
Cbc0038I Pass  58: suminf.    1.60586 (21) obj. -48.5626 iterations 16
Cbc0038I Pass  59: suminf.    1.60586 (21) obj. -48.5626 iterations 2
Cbc0038I Pass  60: suminf.    1.47780 (18) obj. -48.5626 iterations 35
Cbc0038I Pass  61: suminf.    1.35867 (17) obj. -48.5626 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 113 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -44.4689 - took 0.05 seconds
Cbc0012I Integer solution of -44.46892 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 97 rows 113 columns, reduced to 27 rows 30 columns
Cbc0031I 61 added rows had average density of 10.852459
Cbc0013I At root node, 61 cuts changed objective from -64.93678 to -48.221095 in 31 passes
Cbc0014I Cut generator 0 (Probing) - 4555 row cuts average 9.3 elements, 1 column cuts (17 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 100 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 73 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 196 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 262 row cuts average 56.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 95 row cuts average 35.0 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -44.46892 best solution, best possible -48.221095 (0.85 seconds)
Cbc0010I After 6 nodes, 7 on tree, -44.46892 best solution, best possible -48.221095 (1.57 seconds)
Cbc0001I Search completed - best objective -44.46892, took 2021 iterations and 20 nodes (2.12 seconds)
Cbc0032I Strong branching done 402 times (7652 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 6, 50 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       2.13

