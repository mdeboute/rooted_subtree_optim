Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 66 (-12) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 3.55616e-05 - average 2.89119e-07, 21 fixed columns
Coin0506I Presolve 81 (-42) rows, 45 (-21) columns and 244 (-126) elements
Clp0029I End of values pass after 45 iterations
Clp0000I Optimal - objective value 62.778063
Clp0000I Optimal - objective value 62.778063
Coin0511I After Postsolve, objective 62.778063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.778063
Clp0000I Optimal - objective value 62.778063
Clp0000I Optimal - objective value 62.778063
Coin0511I After Postsolve, objective 62.778063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.77806346 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 66 columns (65 integer (65 of which binary)) and 413 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.278%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.8079
Cbc0038I Solution found of -13.839
Cbc0038I Relaxing continuous gives -18.9329
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 66 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -18.9329 to -33.7563 (0.02 seconds)
Cbc0038I Round again with cutoff of -36.6148
Cbc0038I Pass   1: suminf.    1.16385 (10) obj. -36.6148 iterations 34
Cbc0038I Pass   2: suminf.    1.87955 (6) obj. -36.6148 iterations 15
Cbc0038I Pass   3: suminf.    1.43922 (6) obj. -36.6148 iterations 6
Cbc0038I Pass   4: suminf.    1.43922 (6) obj. -36.6148 iterations 0
Cbc0038I Pass   5: suminf.    1.17229 (4) obj. -36.6148 iterations 9
Cbc0038I Pass   6: suminf.    1.09912 (4) obj. -36.6148 iterations 3
Cbc0038I Pass   7: suminf.    1.43922 (6) obj. -36.6148 iterations 6
Cbc0038I Pass   8: suminf.    4.07673 (11) obj. -36.6148 iterations 14
Cbc0038I Pass   9: suminf.    1.21714 (11) obj. -36.6148 iterations 31
Cbc0038I Pass  10: suminf.    1.16385 (10) obj. -36.6148 iterations 1
Cbc0038I Pass  11: suminf.    1.87955 (6) obj. -36.6148 iterations 14
Cbc0038I Pass  12: suminf.    1.43922 (6) obj. -36.6148 iterations 5
Cbc0038I Pass  13: suminf.    1.43922 (6) obj. -36.6148 iterations 0
Cbc0038I Pass  14: suminf.    1.17229 (4) obj. -36.6148 iterations 10
Cbc0038I Pass  15: suminf.    1.09912 (4) obj. -36.6148 iterations 3
Cbc0038I Pass  16: suminf.    1.43922 (6) obj. -36.6148 iterations 7
Cbc0038I Pass  17: suminf.    3.95823 (10) obj. -36.6148 iterations 9
Cbc0038I Pass  18: suminf.    1.43922 (6) obj. -36.6148 iterations 16
Cbc0038I Pass  19: suminf.    1.43922 (6) obj. -36.6148 iterations 0
Cbc0038I Pass  20: suminf.    1.17229 (4) obj. -36.6148 iterations 9
Cbc0038I Pass  21: suminf.    1.09912 (4) obj. -36.6148 iterations 2
Cbc0038I Pass  22: suminf.    1.43922 (6) obj. -36.6148 iterations 5
Cbc0038I Pass  23: suminf.    2.38152 (7) obj. -36.6148 iterations 19
Cbc0038I Pass  24: suminf.    1.84368 (7) obj. -36.6148 iterations 13
Cbc0038I Pass  25: suminf.    1.61176 (5) obj. -36.6148 iterations 11
Cbc0038I Pass  26: suminf.    1.05774 (5) obj. -36.6148 iterations 2
Cbc0038I Pass  27: suminf.    1.16385 (10) obj. -36.6148 iterations 14
Cbc0038I Pass  28: suminf.    1.16385 (10) obj. -36.6148 iterations 0
Cbc0038I Pass  29: suminf.    1.87955 (6) obj. -36.6148 iterations 14
Cbc0038I Pass  30: suminf.    1.43922 (6) obj. -36.6148 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 66 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.7563 - took 0.03 seconds
Cbc0012I Integer solution of -33.75631 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 121 rows 66 columns, reduced to 29 rows 18 columns
Cbc0031I 19 added rows had average density of 40.368421
Cbc0013I At root node, 19 cuts changed objective from -62.340208 to -51.119713 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4269 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1171 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 65.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0001I Search completed - best objective -33.75631, took 4536 iterations and 20 nodes (0.50 seconds)
Cbc0032I Strong branching done 330 times (6222 iterations), fathomed 1 nodes and fixed 14 variables
Cbc0035I Maximum depth 8, 93 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-38) rows, 123 (-29) columns and 2102 (-1201) elements
Clp1000I sum of infeasibilities 1.62292e-07 - average 1.39907e-09, 112 fixed columns
Coin0506I Presolve 11 (-105) rows, 11 (-112) columns and 39 (-2063) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 106.28464
Clp0000I Optimal - objective value 106.28464
Coin0511I After Postsolve, objective 106.28464, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.425908 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 193.28452
Clp0000I Optimal - objective value 193.28452
Clp0000I Optimal - objective value 193.28452
Coin0511I After Postsolve, objective 193.28452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.2845237 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 123 columns (123 integer (123 of which binary)) and 2145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.698%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 9.69726
Cbc0038I Pass   1: suminf.    1.59609 (27) obj. -103.274 iterations 7
Cbc0038I Pass   2: suminf.    1.59609 (27) obj. -103.274 iterations 0
Cbc0038I Pass   3: suminf.    0.10528 (3) obj. -55.7631 iterations 15
Cbc0038I Solution found of -51.9035
Cbc0038I Rounding solution of -59.2964 is better than previous of -51.9035

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 123 columns, reduced to 51 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -59.2964 to -74.9035 (0.05 seconds)
Cbc0038I Round again with cutoff of -81.8606
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.59609 (27) obj. -103.274 iterations 0
Cbc0038I Pass   5: suminf.    0.76977 (41) obj. -81.8606 iterations 5
Cbc0038I Pass   6: suminf.    0.71160 (17) obj. -81.8606 iterations 35
Cbc0038I Pass   7: suminf.    2.22638 (6) obj. -81.8606 iterations 49
Cbc0038I Pass   8: suminf.    1.01712 (6) obj. -81.8606 iterations 3
Cbc0038I Pass   9: suminf.    1.01712 (6) obj. -81.8606 iterations 0
Cbc0038I Pass  10: suminf.    0.98493 (6) obj. -81.8606 iterations 4
Cbc0038I Pass  11: suminf.    0.98493 (6) obj. -81.8606 iterations 1
Cbc0038I Pass  12: suminf.    2.01167 (6) obj. -81.8606 iterations 7
Cbc0038I Pass  13: suminf.    1.35903 (6) obj. -81.8606 iterations 2
Cbc0038I Pass  14: suminf.    0.08633 (1) obj. -81.8606 iterations 5
Cbc0038I Solution found of -87.9035
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 123 columns, reduced to 55 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -99.2176
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  15: suminf.    1.59609 (27) obj. -103.274 iterations 0
Cbc0038I Pass  16: suminf.    1.35713 (41) obj. -99.2176 iterations 5
Cbc0038I Pass  17: suminf.    2.36730 (19) obj. -99.2176 iterations 35
Cbc0038I Pass  18: suminf.    1.77335 (19) obj. -99.2176 iterations 1
Cbc0038I Pass  19: suminf.    1.70175 (19) obj. -99.2176 iterations 2
Cbc0038I Pass  20: suminf.    3.40597 (11) obj. -99.2176 iterations 23
Cbc0038I Pass  21: suminf.    1.76642 (11) obj. -99.2176 iterations 4
Cbc0038I Pass  22: suminf.    1.76642 (11) obj. -99.2176 iterations 0
Cbc0038I Pass  23: suminf.    1.61348 (9) obj. -99.2176 iterations 15
Cbc0038I Pass  24: suminf.    1.18241 (9) obj. -99.2176 iterations 2
Cbc0038I Pass  25: suminf.    2.60409 (9) obj. -99.2176 iterations 6
Cbc0038I Pass  26: suminf.    2.60409 (9) obj. -99.2176 iterations 0
Cbc0038I Pass  27: suminf.    2.62430 (8) obj. -99.2176 iterations 7
Cbc0038I Pass  28: suminf.    2.09325 (8) obj. -99.2176 iterations 2
Cbc0038I Pass  29: suminf.    2.09325 (8) obj. -99.2176 iterations 1
Cbc0038I Pass  30: suminf.    3.14345 (9) obj. -99.2176 iterations 4
Cbc0038I Pass  31: suminf.    2.34731 (9) obj. -99.2176 iterations 1
Cbc0038I Pass  32: suminf.    1.61348 (9) obj. -99.2176 iterations 9
Cbc0038I Pass  33: suminf.    1.18241 (9) obj. -99.2176 iterations 2
Cbc0038I Pass  34: suminf.    2.60409 (9) obj. -99.2176 iterations 6
Cbc0038I Pass  35: suminf.    2.60409 (9) obj. -99.2176 iterations 0
Cbc0038I Pass  36: suminf.    2.62430 (8) obj. -99.2176 iterations 7
Cbc0038I Pass  37: suminf.    2.09325 (8) obj. -99.2176 iterations 2
Cbc0038I Pass  38: suminf.    2.09325 (8) obj. -99.2176 iterations 1
Cbc0038I Pass  39: suminf.    3.14345 (9) obj. -99.2176 iterations 5
Cbc0038I Pass  40: suminf.    2.34731 (9) obj. -99.2176 iterations 1
Cbc0038I Pass  41: suminf.    1.61348 (9) obj. -99.2176 iterations 10
Cbc0038I Pass  42: suminf.    1.18241 (9) obj. -99.2176 iterations 2
Cbc0038I Pass  43: suminf.    2.60409 (9) obj. -99.2176 iterations 6
Cbc0038I Pass  44: suminf.    2.60409 (9) obj. -99.2176 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 123 columns, reduced to 55 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -87.9035 - took 0.04 seconds
Cbc0012I Integer solution of -87.90351 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 113 rows 123 columns, reduced to 55 rows 49 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 40 added rows had average density of 3.25
Cbc0013I At root node, 40 cuts changed objective from -144.47343 to -88.482604 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 238 row cuts average 2.7 elements, 48 column cuts (48 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 52 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 15 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 43.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -87.90350999999998, took 120 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 66 (-12) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 3.55616e-05 - average 2.89119e-07, 21 fixed columns
Coin0506I Presolve 81 (-42) rows, 45 (-21) columns and 244 (-126) elements
Clp0029I End of values pass after 45 iterations
Clp0000I Optimal - objective value 62.778063
Clp0000I Optimal - objective value 62.778063
Coin0511I After Postsolve, objective 62.778063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.778063
Clp0000I Optimal - objective value 62.778063
Clp0000I Optimal - objective value 62.778063
Coin0511I After Postsolve, objective 62.778063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.77806346 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 66 columns (65 integer (65 of which binary)) and 413 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.278%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.8079
Cbc0038I Solution found of -13.839
Cbc0038I Relaxing continuous gives -18.9329
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 66 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -18.9329 to -33.7563 (0.02 seconds)
Cbc0038I Round again with cutoff of -36.6148
Cbc0038I Pass   1: suminf.    1.16385 (10) obj. -36.6148 iterations 34
Cbc0038I Pass   2: suminf.    1.87955 (6) obj. -36.6148 iterations 15
Cbc0038I Pass   3: suminf.    1.43922 (6) obj. -36.6148 iterations 6
Cbc0038I Pass   4: suminf.    1.43922 (6) obj. -36.6148 iterations 0
Cbc0038I Pass   5: suminf.    1.17229 (4) obj. -36.6148 iterations 9
Cbc0038I Pass   6: suminf.    1.09912 (4) obj. -36.6148 iterations 3
Cbc0038I Pass   7: suminf.    1.43922 (6) obj. -36.6148 iterations 6
Cbc0038I Pass   8: suminf.    4.07673 (11) obj. -36.6148 iterations 14
Cbc0038I Pass   9: suminf.    1.21714 (11) obj. -36.6148 iterations 31
Cbc0038I Pass  10: suminf.    1.16385 (10) obj. -36.6148 iterations 1
Cbc0038I Pass  11: suminf.    1.87955 (6) obj. -36.6148 iterations 14
Cbc0038I Pass  12: suminf.    1.43922 (6) obj. -36.6148 iterations 5
Cbc0038I Pass  13: suminf.    1.43922 (6) obj. -36.6148 iterations 0
Cbc0038I Pass  14: suminf.    1.17229 (4) obj. -36.6148 iterations 10
Cbc0038I Pass  15: suminf.    1.09912 (4) obj. -36.6148 iterations 3
Cbc0038I Pass  16: suminf.    1.43922 (6) obj. -36.6148 iterations 7
Cbc0038I Pass  17: suminf.    3.95823 (10) obj. -36.6148 iterations 9
Cbc0038I Pass  18: suminf.    1.43922 (6) obj. -36.6148 iterations 16
Cbc0038I Pass  19: suminf.    1.43922 (6) obj. -36.6148 iterations 0
Cbc0038I Pass  20: suminf.    1.17229 (4) obj. -36.6148 iterations 9
Cbc0038I Pass  21: suminf.    1.09912 (4) obj. -36.6148 iterations 2
Cbc0038I Pass  22: suminf.    1.43922 (6) obj. -36.6148 iterations 5
Cbc0038I Pass  23: suminf.    2.38152 (7) obj. -36.6148 iterations 19
Cbc0038I Pass  24: suminf.    1.84368 (7) obj. -36.6148 iterations 13
Cbc0038I Pass  25: suminf.    1.61176 (5) obj. -36.6148 iterations 11
Cbc0038I Pass  26: suminf.    1.05774 (5) obj. -36.6148 iterations 2
Cbc0038I Pass  27: suminf.    1.16385 (10) obj. -36.6148 iterations 14
Cbc0038I Pass  28: suminf.    1.16385 (10) obj. -36.6148 iterations 0
Cbc0038I Pass  29: suminf.    1.87955 (6) obj. -36.6148 iterations 14
Cbc0038I Pass  30: suminf.    1.43922 (6) obj. -36.6148 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 66 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.7563 - took 0.03 seconds
Cbc0012I Integer solution of -33.75631 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 121 rows 66 columns, reduced to 29 rows 18 columns
Cbc0031I 19 added rows had average density of 40.368421
Cbc0013I At root node, 19 cuts changed objective from -62.340208 to -51.119713 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4269 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1171 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 65.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0001I Search completed - best objective -33.75631, took 4536 iterations and 20 nodes (0.50 seconds)
Cbc0032I Strong branching done 330 times (6222 iterations), fathomed 1 nodes and fixed 14 variables
Cbc0035I Maximum depth 8, 93 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 116 (-37) columns and 1886 (-1418) elements
Clp1000I sum of infeasibilities 1.31207e-07 - average 1.20373e-09, 32 fixed columns
Coin0506I Presolve 78 (-31) rows, 84 (-32) columns and 897 (-989) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 2.4741102 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 81.660564
Clp0000I Optimal - objective value 81.660564
Coin0511I After Postsolve, objective 81.660564, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.660564
Clp0000I Optimal - objective value 81.660564
Clp0000I Optimal - objective value 81.660564
Coin0511I After Postsolve, objective 81.660564, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.66056427 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 116 columns (116 integer (116 of which binary)) and 1920 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.719%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 4.03146
Cbc0038I Pass   1: suminf.    0.65994 (24) obj. -56.7448 iterations 12
Cbc0038I Pass   2: suminf.    0.65994 (24) obj. -56.7448 iterations 0
Cbc0038I Solution found of -1.90491
Cbc0038I Rounding solution of -25.9651 is better than previous of -1.90491

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 52 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -30.9028
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.65994 (24) obj. -56.7448 iterations 0
Cbc0038I Pass   4: suminf.    0.65994 (24) obj. -56.7448 iterations 0
Cbc0038I Pass   5: suminf.    0.86551 (2) obj. -30.9028 iterations 30
Cbc0038I Pass   6: suminf.    0.37593 (3) obj. -35.8255 iterations 3
Cbc0038I Pass   7: suminf.    0.76608 (3) obj. -30.9028 iterations 8
Cbc0038I Pass   8: suminf.    0.75297 (4) obj. -30.9028 iterations 1
Cbc0038I Pass   9: suminf.    1.22560 (5) obj. -30.9028 iterations 4
Cbc0038I Pass  10: suminf.    1.22560 (5) obj. -30.9028 iterations 0
Cbc0038I Pass  11: suminf.    1.52546 (5) obj. -30.9028 iterations 6
Cbc0038I Pass  12: suminf.    1.52546 (5) obj. -30.9028 iterations 0
Cbc0038I Pass  13: suminf.    1.22560 (5) obj. -30.9028 iterations 3
Cbc0038I Pass  14: suminf.    1.93002 (26) obj. -30.9028 iterations 28
Cbc0038I Pass  15: suminf.    0.93870 (8) obj. -31.5908 iterations 13
Cbc0038I Pass  16: suminf.    0.83685 (8) obj. -30.9028 iterations 2
Cbc0038I Pass  17: suminf.    1.55920 (19) obj. -30.9028 iterations 16
Cbc0038I Pass  18: suminf.    1.04682 (22) obj. -30.9028 iterations 3
Cbc0038I Pass  19: suminf.    1.26894 (11) obj. -30.9028 iterations 17
Cbc0038I Pass  20: suminf.    0.95837 (11) obj. -30.9028 iterations 2
Cbc0038I Pass  21: suminf.    2.17491 (9) obj. -30.9028 iterations 11
Cbc0038I Pass  22: suminf.    0.94753 (7) obj. -31.4068 iterations 6
Cbc0038I Pass  23: suminf.    0.68109 (8) obj. -30.9028 iterations 2
Cbc0038I Pass  24: suminf.    2.17491 (9) obj. -30.9028 iterations 6
Cbc0038I Pass  25: suminf.    2.52619 (25) obj. -30.9028 iterations 24
Cbc0038I Pass  26: suminf.    2.27673 (20) obj. -30.9028 iterations 8
Cbc0038I Pass  27: suminf.    1.58930 (13) obj. -30.9028 iterations 26
Cbc0038I Pass  28: suminf.    1.58930 (13) obj. -30.9028 iterations 0
Cbc0038I Pass  29: suminf.    2.01270 (11) obj. -30.9028 iterations 10
Cbc0038I Pass  30: suminf.    1.97767 (11) obj. -30.9028 iterations 3
Cbc0038I Pass  31: suminf.    2.01270 (11) obj. -30.9028 iterations 7
Cbc0038I Pass  32: suminf.    1.98089 (11) obj. -30.9028 iterations 4
Cbc0038I Rounding solution of -27.7121 is better than previous of -25.9651

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 61 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -27.7121 to -33.7563 (0.09 seconds)
Cbc0038I Round again with cutoff of -42.0734
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.65994 (24) obj. -56.7448 iterations 0
Cbc0038I Pass  33: suminf.    0.65994 (24) obj. -56.7448 iterations 0
Cbc0038I Pass  34: suminf.    0.93021 (22) obj. -42.0734 iterations 30
Cbc0038I Pass  35: suminf.    0.53635 (24) obj. -42.0734 iterations 2
Cbc0038I Pass  36: suminf.    1.31043 (13) obj. -42.0734 iterations 49
Cbc0038I Pass  37: suminf.    1.03234 (20) obj. -42.0734 iterations 5
Cbc0038I Pass  38: suminf.    2.42740 (17) obj. -42.0734 iterations 15
Cbc0038I Pass  39: suminf.    2.41358 (17) obj. -42.0734 iterations 2
Cbc0038I Pass  40: suminf.    2.42740 (17) obj. -42.0734 iterations 6
Cbc0038I Pass  41: suminf.    2.93427 (22) obj. -42.0734 iterations 17
Cbc0038I Pass  42: suminf.    2.93427 (22) obj. -42.0734 iterations 1
Cbc0038I Pass  43: suminf.    2.10606 (21) obj. -42.0734 iterations 12
Cbc0038I Pass  44: suminf.    1.86239 (16) obj. -42.0734 iterations 2
Cbc0038I Pass  45: suminf.    1.11026 (19) obj. -42.0734 iterations 10
Cbc0038I Pass  46: suminf.    1.11026 (19) obj. -42.0734 iterations 0
Cbc0038I Pass  47: suminf.    2.45386 (18) obj. -42.0734 iterations 8
Cbc0038I Pass  48: suminf.    2.45386 (18) obj. -42.0734 iterations 0
Cbc0038I Pass  49: suminf.    2.42740 (17) obj. -42.0734 iterations 2
Cbc0038I Pass  50: suminf.    2.41358 (17) obj. -42.0734 iterations 3
Cbc0038I Pass  51: suminf.    2.42740 (17) obj. -42.0734 iterations 7
Cbc0038I Pass  52: suminf.    1.20044 (15) obj. -42.0734 iterations 14
Cbc0038I Pass  53: suminf.    0.82415 (15) obj. -42.0734 iterations 6
Cbc0038I Pass  54: suminf.    1.33337 (14) obj. -42.0734 iterations 11
Cbc0038I Pass  55: suminf.    1.19856 (19) obj. -42.0734 iterations 6
Cbc0038I Pass  56: suminf.    2.42740 (17) obj. -42.0734 iterations 8
Cbc0038I Pass  57: suminf.    2.41358 (17) obj. -42.0734 iterations 3
Cbc0038I Pass  58: suminf.    2.42740 (17) obj. -42.0734 iterations 7
Cbc0038I Pass  59: suminf.    3.14513 (21) obj. -42.0734 iterations 11
Cbc0038I Pass  60: suminf.    2.49098 (17) obj. -42.0734 iterations 9
Cbc0038I Pass  61: suminf.    1.41685 (15) obj. -42.0734 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 54 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -33.7563 - took 0.08 seconds
Cbc0012I Integer solution of -33.75631 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 108 rows 116 columns, reduced to 52 rows 55 columns
Cbc0031I 64 added rows had average density of 13.046875
Cbc0013I At root node, 64 cuts changed objective from -75.341454 to -38.989563 in 31 passes
Cbc0014I Cut generator 0 (Probing) - 4273 row cuts average 6.9 elements, 9 column cuts (9 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 115 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 314 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 364 row cuts average 61.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 66 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.75631 best solution, best possible -38.989563 (0.84 seconds)
Cbc0001I Search completed - best objective -33.75631, took 1452 iterations and 10 nodes (1.32 seconds)
Cbc0032I Strong branching done 282 times (6124 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       1.33

