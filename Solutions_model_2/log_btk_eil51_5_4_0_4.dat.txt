Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-40) rows, 37 (-16) columns and 198 (-105) elements
Clp1000I sum of infeasibilities 2.41463e-05 - average 3.71482e-07, 4 fixed columns
Coin0506I Presolve 56 (-9) rows, 32 (-5) columns and 170 (-28) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Coin0511I After Postsolve, objective 101.45453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Coin0511I After Postsolve, objective 101.45453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.4545251 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 37 columns (36 integer (36 of which binary)) and 198 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.270%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.33151
Cbc0038I Pass   1: suminf.    0.12685 (2) obj. -84.4648 iterations 17
Cbc0038I Pass   2: suminf.    0.08696 (1) obj. -84.2695 iterations 3
Cbc0038I Solution found of -70.5278
Cbc0038I Relaxing continuous gives -70.5278
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -70.5278 to -85.5782 (0.01 seconds)
Cbc0038I Round again with cutoff of -87.166
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.22165 (4) obj. -87.166 iterations 1
Cbc0038I Pass   4: suminf.    0.13078 (2) obj. -87.166 iterations 5
Cbc0038I Pass   5: suminf.    0.55003 (3) obj. -87.166 iterations 5
Cbc0038I Pass   6: suminf.    1.82756 (10) obj. -87.166 iterations 11
Cbc0038I Pass   7: suminf.    1.45225 (5) obj. -87.166 iterations 4
Cbc0038I Pass   8: suminf.    0.91235 (3) obj. -87.166 iterations 7
Cbc0038I Pass   9: suminf.    0.67544 (2) obj. -87.166 iterations 4
Cbc0038I Pass  10: suminf.    0.05819 (1) obj. -87.166 iterations 4
Cbc0038I Pass  11: suminf.    0.26355 (1) obj. -87.166 iterations 1
Cbc0038I Pass  12: suminf.    1.69028 (8) obj. -87.166 iterations 11
Cbc0038I Pass  13: suminf.    0.77682 (4) obj. -87.166 iterations 4
Cbc0038I Pass  14: suminf.    0.42465 (4) obj. -87.166 iterations 5
Cbc0038I Pass  15: suminf.    0.49304 (2) obj. -87.166 iterations 8
Cbc0038I Pass  16: suminf.    0.05819 (1) obj. -87.166 iterations 3
Cbc0038I Pass  17: suminf.    0.26355 (1) obj. -87.166 iterations 1
Cbc0038I Pass  18: suminf.    0.95374 (8) obj. -87.166 iterations 12
Cbc0038I Pass  19: suminf.    0.38106 (4) obj. -87.166 iterations 9
Cbc0038I Pass  20: suminf.    0.62154 (4) obj. -87.166 iterations 5
Cbc0038I Pass  21: suminf.    0.36324 (2) obj. -87.166 iterations 3
Cbc0038I Pass  22: suminf.    0.45309 (2) obj. -87.166 iterations 1
Cbc0038I Pass  23: suminf.    0.64312 (4) obj. -87.166 iterations 5
Cbc0038I Pass  24: suminf.    0.42690 (4) obj. -87.166 iterations 4
Cbc0038I Pass  25: suminf.    0.53041 (3) obj. -87.166 iterations 4
Cbc0038I Pass  26: suminf.    3.05119 (11) obj. -87.166 iterations 12
Cbc0038I Pass  27: suminf.    0.79098 (4) obj. -87.166 iterations 9
Cbc0038I Pass  28: suminf.    0.64903 (3) obj. -87.166 iterations 3
Cbc0038I Pass  29: suminf.    0.64903 (3) obj. -87.166 iterations 2
Cbc0038I Pass  30: suminf.    0.97134 (4) obj. -87.166 iterations 6
Cbc0038I Pass  31: suminf.    0.34216 (3) obj. -87.166 iterations 5
Cbc0038I Pass  32: suminf.    0.64903 (3) obj. -87.166 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -85.5782 to -88.0424 (0.03 seconds)
Cbc0038I Round again with cutoff of -90.7249
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.41297 (4) obj. -90.7249 iterations 1
Cbc0038I Pass  33: suminf.    0.22845 (3) obj. -90.7249 iterations 7
Cbc0038I Pass  34: suminf.    0.51336 (3) obj. -90.7249 iterations 4
Cbc0038I Pass  35: suminf.    2.53719 (11) obj. -90.7249 iterations 13
Cbc0038I Pass  36: suminf.    0.76255 (6) obj. -90.7249 iterations 10
Cbc0038I Pass  37: suminf.    2.02889 (9) obj. -90.7249 iterations 14
Cbc0038I Pass  38: suminf.    0.73642 (6) obj. -90.7249 iterations 2
Cbc0038I Pass  39: suminf.    0.64038 (5) obj. -90.7249 iterations 1
Cbc0038I Pass  40: suminf.    0.48180 (3) obj. -90.7249 iterations 16
Cbc0038I Pass  41: suminf.    0.28224 (2) obj. -90.7249 iterations 2
Cbc0038I Pass  42: suminf.    0.34587 (2) obj. -90.7249 iterations 3
Cbc0038I Pass  43: suminf.    2.59641 (10) obj. -90.7249 iterations 18
Cbc0038I Pass  44: suminf.    0.89525 (4) obj. -90.7249 iterations 10
Cbc0038I Pass  45: suminf.    1.59299 (7) obj. -90.7249 iterations 11
Cbc0038I Pass  46: suminf.    1.17943 (6) obj. -90.7249 iterations 1
Cbc0038I Pass  47: suminf.    0.94495 (6) obj. -90.7249 iterations 3
Cbc0038I Pass  48: suminf.    2.81256 (8) obj. -90.7249 iterations 13
Cbc0038I Pass  49: suminf.    2.16018 (8) obj. -90.7249 iterations 7
Cbc0038I Pass  50: suminf.    1.00481 (6) obj. -90.7249 iterations 7
Cbc0038I Pass  51: suminf.    1.00481 (6) obj. -90.7249 iterations 0
Cbc0038I Pass  52: suminf.    0.97408 (6) obj. -90.7249 iterations 9
Cbc0038I Pass  53: suminf.    0.67982 (6) obj. -90.7249 iterations 3
Cbc0038I Pass  54: suminf.    1.10892 (5) obj. -90.7249 iterations 9
Cbc0038I Pass  55: suminf.    0.90547 (4) obj. -90.7249 iterations 4
Cbc0038I Pass  56: suminf.    0.50429 (3) obj. -90.7249 iterations 6
Cbc0038I Pass  57: suminf.    1.08282 (3) obj. -90.7249 iterations 6
Cbc0038I Pass  58: suminf.    0.75848 (4) obj. -90.7249 iterations 5
Cbc0038I Pass  59: suminf.    2.75751 (10) obj. -90.7249 iterations 11
Cbc0038I Pass  60: suminf.    0.60715 (4) obj. -90.7249 iterations 11
Cbc0038I Pass  61: suminf.    0.42168 (3) obj. -90.7249 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -88.0424 - took 0.03 seconds
Cbc0012I Integer solution of -88.04243 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 65 rows 37 columns, reduced to 29 rows 18 columns
Cbc0031I 9 added rows had average density of 22.444444
Cbc0013I At root node, 9 cuts changed objective from -101.45453 to -89.723418 in 73 passes
Cbc0014I Cut generator 0 (Probing) - 217 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 172 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -88.04243, took 619 iterations and 6 nodes (0.11 seconds)
Cbc0032I Strong branching done 44 times (267 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-46) rows, 65 (-37) columns and 768 (-810) elements
Clp1000I sum of infeasibilities 1.59698e-07 - average 2.75341e-09, 33 fixed columns
Coin0506I Presolve 27 (-31) rows, 32 (-33) columns and 114 (-654) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 1.9977848 - largest nonzero change 1.9945413e-05 ( 0.00089819337%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 81.29581
Clp0000I Optimal - objective value 81.29581
Coin0511I After Postsolve, objective 81.29581, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6349685 - largest nonzero change 2.9847784e-05 ( 0.0018056464%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 138.95855
Clp0000I Optimal - objective value 138.95855
Clp0000I Optimal - objective value 138.95855
Coin0511I After Postsolve, objective 138.95855, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.9585459 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 66 columns (66 integer (66 of which binary)) and 773 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.066%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.86587
Cbc0038I Pass   1: suminf.    3.65881 (22) obj. -64.4684 iterations 15
Cbc0038I Pass   2: suminf.    3.65881 (22) obj. -64.4684 iterations 1
Cbc0038I Pass   3: suminf.    1.47613 (11) obj. -44.4388 iterations 11
Cbc0038I Solution found of -25.3846
Cbc0038I Rounding solution of -36.5278 is better than previous of -25.3846

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 66 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -36.5278 to -81.7851 (0.02 seconds)
Cbc0038I Round again with cutoff of -86.8388
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.79905 (25) obj. -86.8388 iterations 2
Cbc0038I Pass   5: suminf.    4.79905 (25) obj. -86.8388 iterations 0
Cbc0038I Pass   6: suminf.    1.98242 (8) obj. -86.8388 iterations 36
Cbc0038I Pass   7: suminf.    1.71346 (7) obj. -86.8388 iterations 4
Cbc0038I Pass   8: suminf.    1.27079 (6) obj. -86.8388 iterations 1
Cbc0038I Pass   9: suminf.    0.29288 (1) obj. -86.8388 iterations 9
Cbc0038I Pass  10: suminf.    0.29288 (1) obj. -86.8388 iterations 0
Cbc0038I Pass  11: suminf.    0.41463 (1) obj. -88.9395 iterations 3
Cbc0038I Pass  12: suminf.    3.78237 (14) obj. -86.8388 iterations 18
Cbc0038I Pass  13: suminf.    2.95327 (12) obj. -86.8388 iterations 8
Cbc0038I Pass  14: suminf.    2.95327 (12) obj. -86.8388 iterations 0
Cbc0038I Pass  15: suminf.    4.08171 (18) obj. -86.8388 iterations 9
Cbc0038I Pass  16: suminf.    3.69203 (18) obj. -86.8388 iterations 3
Cbc0038I Pass  17: suminf.    3.15950 (17) obj. -86.8388 iterations 3
Cbc0038I Pass  18: suminf.    0.58470 (2) obj. -87.5618 iterations 18
Cbc0038I Pass  19: suminf.    0.29288 (1) obj. -86.8388 iterations 3
Cbc0038I Pass  20: suminf.    0.41463 (1) obj. -88.9395 iterations 3
Cbc0038I Pass  21: suminf.    4.15931 (14) obj. -86.8388 iterations 21
Cbc0038I Pass  22: suminf.    3.63479 (12) obj. -86.8388 iterations 7
Cbc0038I Pass  23: suminf.    1.09467 (3) obj. -86.8388 iterations 18
Cbc0038I Pass  24: suminf.    1.09467 (3) obj. -86.8388 iterations 5
Cbc0038I Pass  25: suminf.    1.12035 (3) obj. -89.6649 iterations 4
Cbc0038I Pass  26: suminf.    0.91844 (3) obj. -86.8388 iterations 2
Cbc0038I Pass  27: suminf.    1.29015 (4) obj. -86.8388 iterations 8
Cbc0038I Pass  28: suminf.    0.66317 (2) obj. -86.8388 iterations 6
Cbc0038I Pass  29: suminf.    0.60994 (2) obj. -87.2114 iterations 4
Cbc0038I Pass  30: suminf.    1.09882 (3) obj. -86.8388 iterations 5
Cbc0038I Pass  31: suminf.    1.12035 (3) obj. -89.6649 iterations 3
Cbc0038I Pass  32: suminf.    0.91844 (3) obj. -86.8388 iterations 2
Cbc0038I Pass  33: suminf.    1.29015 (4) obj. -86.8388 iterations 8
Cbc0038I Rounding solution of -88.0424 is better than previous of -81.7851

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 66 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -96.8981
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.42909 (30) obj. -96.8981 iterations 3
Cbc0038I Pass  34: suminf.    5.08474 (25) obj. -96.8981 iterations 1
Cbc0038I Pass  35: suminf.    1.42995 (7) obj. -96.8981 iterations 30
Cbc0038I Pass  36: suminf.    1.41845 (5) obj. -96.8981 iterations 3
Cbc0038I Pass  37: suminf.    1.20527 (3) obj. -96.8981 iterations 15
Cbc0038I Pass  38: suminf.    0.90779 (3) obj. -96.8981 iterations 4
Cbc0038I Pass  39: suminf.    3.11823 (13) obj. -96.8981 iterations 19
Cbc0038I Pass  40: suminf.    2.34976 (8) obj. -98.1061 iterations 10
Cbc0038I Pass  41: suminf.    1.07986 (5) obj. -96.8981 iterations 13
Cbc0038I Pass  42: suminf.    1.07986 (5) obj. -96.8981 iterations 0
Cbc0038I Pass  43: suminf.    1.39232 (5) obj. -96.8981 iterations 12
Cbc0038I Pass  44: suminf.    1.20527 (3) obj. -96.8981 iterations 10
Cbc0038I Pass  45: suminf.    0.90779 (3) obj. -96.8981 iterations 7
Cbc0038I Pass  46: suminf.    1.20527 (3) obj. -96.8981 iterations 7
Cbc0038I Pass  47: suminf.    1.86317 (7) obj. -96.8981 iterations 10
Cbc0038I Pass  48: suminf.    1.71600 (5) obj. -97.1074 iterations 6
Cbc0038I Pass  49: suminf.    0.82717 (3) obj. -96.8981 iterations 22
Cbc0038I Pass  50: suminf.    0.60840 (2) obj. -97.0777 iterations 8
Cbc0038I Pass  51: suminf.    1.83822 (11) obj. -96.8981 iterations 14
Cbc0038I Pass  52: suminf.    1.24174 (4) obj. -98.4444 iterations 9
Cbc0038I Pass  53: suminf.    3.65121 (13) obj. -96.8981 iterations 13
Cbc0038I Pass  54: suminf.    3.05572 (11) obj. -96.8981 iterations 4
Cbc0038I Pass  55: suminf.    2.75732 (10) obj. -104.318 iterations 2
Cbc0038I Pass  56: suminf.    0.82717 (3) obj. -96.8981 iterations 13
Cbc0038I Pass  57: suminf.    0.60840 (2) obj. -97.0777 iterations 5
Cbc0038I Pass  58: suminf.    2.45966 (8) obj. -96.8981 iterations 9
Cbc0038I Pass  59: suminf.    1.91590 (7) obj. -96.8981 iterations 4
Cbc0038I Pass  60: suminf.    1.42571 (4) obj. -96.8981 iterations 15
Cbc0038I Pass  61: suminf.    1.42571 (4) obj. -96.8981 iterations 0
Cbc0038I Pass  62: suminf.    0.82717 (3) obj. -96.8981 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 66 columns, reduced to 11 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -88.0424 - took 0.03 seconds
Cbc0012I Integer solution of -88.04243 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 12 added rows had average density of 4.75
Cbc0013I At root node, 21 cuts changed objective from -132.32037 to -88.042447 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 204 row cuts average 2.0 elements, 23 column cuts (23 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 1.6625204e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -88.04243, took 179 iterations and 0 nodes (0.41 seconds)
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-40) rows, 37 (-16) columns and 198 (-105) elements
Clp1000I sum of infeasibilities 2.41463e-05 - average 3.71482e-07, 4 fixed columns
Coin0506I Presolve 56 (-9) rows, 32 (-5) columns and 170 (-28) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Coin0511I After Postsolve, objective 101.45453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Coin0511I After Postsolve, objective 101.45453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.4545251 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 37 columns (36 integer (36 of which binary)) and 198 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.270%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.33151
Cbc0038I Pass   1: suminf.    0.12685 (2) obj. -84.4648 iterations 17
Cbc0038I Pass   2: suminf.    0.08696 (1) obj. -84.2695 iterations 3
Cbc0038I Solution found of -70.5278
Cbc0038I Relaxing continuous gives -70.5278
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -70.5278 to -85.5782 (0.01 seconds)
Cbc0038I Round again with cutoff of -87.166
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.22165 (4) obj. -87.166 iterations 1
Cbc0038I Pass   4: suminf.    0.13078 (2) obj. -87.166 iterations 5
Cbc0038I Pass   5: suminf.    0.55003 (3) obj. -87.166 iterations 5
Cbc0038I Pass   6: suminf.    1.82756 (10) obj. -87.166 iterations 11
Cbc0038I Pass   7: suminf.    1.45225 (5) obj. -87.166 iterations 4
Cbc0038I Pass   8: suminf.    0.91235 (3) obj. -87.166 iterations 7
Cbc0038I Pass   9: suminf.    0.67544 (2) obj. -87.166 iterations 4
Cbc0038I Pass  10: suminf.    0.05819 (1) obj. -87.166 iterations 4
Cbc0038I Pass  11: suminf.    0.26355 (1) obj. -87.166 iterations 1
Cbc0038I Pass  12: suminf.    1.69028 (8) obj. -87.166 iterations 11
Cbc0038I Pass  13: suminf.    0.77682 (4) obj. -87.166 iterations 4
Cbc0038I Pass  14: suminf.    0.42465 (4) obj. -87.166 iterations 5
Cbc0038I Pass  15: suminf.    0.49304 (2) obj. -87.166 iterations 8
Cbc0038I Pass  16: suminf.    0.05819 (1) obj. -87.166 iterations 3
Cbc0038I Pass  17: suminf.    0.26355 (1) obj. -87.166 iterations 1
Cbc0038I Pass  18: suminf.    0.95374 (8) obj. -87.166 iterations 12
Cbc0038I Pass  19: suminf.    0.38106 (4) obj. -87.166 iterations 9
Cbc0038I Pass  20: suminf.    0.62154 (4) obj. -87.166 iterations 5
Cbc0038I Pass  21: suminf.    0.36324 (2) obj. -87.166 iterations 3
Cbc0038I Pass  22: suminf.    0.45309 (2) obj. -87.166 iterations 1
Cbc0038I Pass  23: suminf.    0.64312 (4) obj. -87.166 iterations 5
Cbc0038I Pass  24: suminf.    0.42690 (4) obj. -87.166 iterations 4
Cbc0038I Pass  25: suminf.    0.53041 (3) obj. -87.166 iterations 4
Cbc0038I Pass  26: suminf.    3.05119 (11) obj. -87.166 iterations 12
Cbc0038I Pass  27: suminf.    0.79098 (4) obj. -87.166 iterations 9
Cbc0038I Pass  28: suminf.    0.64903 (3) obj. -87.166 iterations 3
Cbc0038I Pass  29: suminf.    0.64903 (3) obj. -87.166 iterations 2
Cbc0038I Pass  30: suminf.    0.97134 (4) obj. -87.166 iterations 6
Cbc0038I Pass  31: suminf.    0.34216 (3) obj. -87.166 iterations 5
Cbc0038I Pass  32: suminf.    0.64903 (3) obj. -87.166 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -85.5782 to -88.0424 (0.02 seconds)
Cbc0038I Round again with cutoff of -90.7249
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.41297 (4) obj. -90.7249 iterations 1
Cbc0038I Pass  33: suminf.    0.22845 (3) obj. -90.7249 iterations 7
Cbc0038I Pass  34: suminf.    0.51336 (3) obj. -90.7249 iterations 4
Cbc0038I Pass  35: suminf.    2.53719 (11) obj. -90.7249 iterations 13
Cbc0038I Pass  36: suminf.    0.76255 (6) obj. -90.7249 iterations 10
Cbc0038I Pass  37: suminf.    2.02889 (9) obj. -90.7249 iterations 14
Cbc0038I Pass  38: suminf.    0.73642 (6) obj. -90.7249 iterations 2
Cbc0038I Pass  39: suminf.    0.64038 (5) obj. -90.7249 iterations 1
Cbc0038I Pass  40: suminf.    0.48180 (3) obj. -90.7249 iterations 16
Cbc0038I Pass  41: suminf.    0.28224 (2) obj. -90.7249 iterations 2
Cbc0038I Pass  42: suminf.    0.34587 (2) obj. -90.7249 iterations 3
Cbc0038I Pass  43: suminf.    2.59641 (10) obj. -90.7249 iterations 18
Cbc0038I Pass  44: suminf.    0.89525 (4) obj. -90.7249 iterations 10
Cbc0038I Pass  45: suminf.    1.59299 (7) obj. -90.7249 iterations 11
Cbc0038I Pass  46: suminf.    1.17943 (6) obj. -90.7249 iterations 1
Cbc0038I Pass  47: suminf.    0.94495 (6) obj. -90.7249 iterations 3
Cbc0038I Pass  48: suminf.    2.81256 (8) obj. -90.7249 iterations 13
Cbc0038I Pass  49: suminf.    2.16018 (8) obj. -90.7249 iterations 7
Cbc0038I Pass  50: suminf.    1.00481 (6) obj. -90.7249 iterations 7
Cbc0038I Pass  51: suminf.    1.00481 (6) obj. -90.7249 iterations 0
Cbc0038I Pass  52: suminf.    0.97408 (6) obj. -90.7249 iterations 9
Cbc0038I Pass  53: suminf.    0.67982 (6) obj. -90.7249 iterations 3
Cbc0038I Pass  54: suminf.    1.10892 (5) obj. -90.7249 iterations 9
Cbc0038I Pass  55: suminf.    0.90547 (4) obj. -90.7249 iterations 4
Cbc0038I Pass  56: suminf.    0.50429 (3) obj. -90.7249 iterations 6
Cbc0038I Pass  57: suminf.    1.08282 (3) obj. -90.7249 iterations 6
Cbc0038I Pass  58: suminf.    0.75848 (4) obj. -90.7249 iterations 5
Cbc0038I Pass  59: suminf.    2.75751 (10) obj. -90.7249 iterations 11
Cbc0038I Pass  60: suminf.    0.60715 (4) obj. -90.7249 iterations 11
Cbc0038I Pass  61: suminf.    0.42168 (3) obj. -90.7249 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -88.0424 - took 0.05 seconds
Cbc0012I Integer solution of -88.04243 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 65 rows 37 columns, reduced to 29 rows 18 columns
Cbc0031I 9 added rows had average density of 22.444444
Cbc0013I At root node, 9 cuts changed objective from -101.45453 to -89.723418 in 73 passes
Cbc0014I Cut generator 0 (Probing) - 217 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 172 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -88.04243, took 619 iterations and 6 nodes (0.10 seconds)
Cbc0032I Strong branching done 44 times (267 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-47) rows, 65 (-38) columns and 768 (-811) elements
Clp1000I sum of infeasibilities 1.59698e-07 - average 2.75341e-09, 33 fixed columns
Coin0506I Presolve 27 (-31) rows, 32 (-33) columns and 114 (-654) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 1.9977848 - largest nonzero change 1.9945413e-05 ( 0.00089819337%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 81.29581
Clp0000I Optimal - objective value 81.29581
Coin0511I After Postsolve, objective 81.29581, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6349685 - largest nonzero change 2.9847784e-05 ( 0.0018056464%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 138.95855
Clp0000I Optimal - objective value 138.95855
Clp0000I Optimal - objective value 138.95855
Coin0511I After Postsolve, objective 138.95855, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.9585459 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 66 columns (66 integer (66 of which binary)) and 773 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.066%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.86587
Cbc0038I Pass   1: suminf.    3.65881 (22) obj. -64.4684 iterations 15
Cbc0038I Pass   2: suminf.    3.65881 (22) obj. -64.4684 iterations 1
Cbc0038I Pass   3: suminf.    1.47613 (11) obj. -44.4388 iterations 11
Cbc0038I Solution found of -25.3846
Cbc0038I Rounding solution of -36.5278 is better than previous of -25.3846

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 66 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -36.5278 to -81.7851 (0.01 seconds)
Cbc0038I Round again with cutoff of -86.8388
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.79905 (25) obj. -86.8388 iterations 2
Cbc0038I Pass   5: suminf.    4.79905 (25) obj. -86.8388 iterations 0
Cbc0038I Pass   6: suminf.    1.98242 (8) obj. -86.8388 iterations 36
Cbc0038I Pass   7: suminf.    1.71346 (7) obj. -86.8388 iterations 4
Cbc0038I Pass   8: suminf.    1.27079 (6) obj. -86.8388 iterations 1
Cbc0038I Pass   9: suminf.    0.29288 (1) obj. -86.8388 iterations 9
Cbc0038I Pass  10: suminf.    0.29288 (1) obj. -86.8388 iterations 0
Cbc0038I Pass  11: suminf.    0.41463 (1) obj. -88.9395 iterations 3
Cbc0038I Pass  12: suminf.    3.78237 (14) obj. -86.8388 iterations 18
Cbc0038I Pass  13: suminf.    2.95327 (12) obj. -86.8388 iterations 8
Cbc0038I Pass  14: suminf.    2.95327 (12) obj. -86.8388 iterations 0
Cbc0038I Pass  15: suminf.    4.08171 (18) obj. -86.8388 iterations 9
Cbc0038I Pass  16: suminf.    3.69203 (18) obj. -86.8388 iterations 3
Cbc0038I Pass  17: suminf.    3.15950 (17) obj. -86.8388 iterations 3
Cbc0038I Pass  18: suminf.    0.58470 (2) obj. -87.5618 iterations 18
Cbc0038I Pass  19: suminf.    0.29288 (1) obj. -86.8388 iterations 3
Cbc0038I Pass  20: suminf.    0.41463 (1) obj. -88.9395 iterations 3
Cbc0038I Pass  21: suminf.    4.15931 (14) obj. -86.8388 iterations 21
Cbc0038I Pass  22: suminf.    3.63479 (12) obj. -86.8388 iterations 7
Cbc0038I Pass  23: suminf.    1.09467 (3) obj. -86.8388 iterations 18
Cbc0038I Pass  24: suminf.    1.09467 (3) obj. -86.8388 iterations 5
Cbc0038I Pass  25: suminf.    1.12035 (3) obj. -89.6649 iterations 4
Cbc0038I Pass  26: suminf.    0.91844 (3) obj. -86.8388 iterations 2
Cbc0038I Pass  27: suminf.    1.29015 (4) obj. -86.8388 iterations 8
Cbc0038I Pass  28: suminf.    0.66317 (2) obj. -86.8388 iterations 6
Cbc0038I Pass  29: suminf.    0.60994 (2) obj. -87.2114 iterations 4
Cbc0038I Pass  30: suminf.    1.09882 (3) obj. -86.8388 iterations 5
Cbc0038I Pass  31: suminf.    1.12035 (3) obj. -89.6649 iterations 3
Cbc0038I Pass  32: suminf.    0.91844 (3) obj. -86.8388 iterations 2
Cbc0038I Pass  33: suminf.    1.29015 (4) obj. -86.8388 iterations 8
Cbc0038I Rounding solution of -88.0424 is better than previous of -81.7851

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 66 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -96.8981
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.42909 (30) obj. -96.8981 iterations 3
Cbc0038I Pass  34: suminf.    5.08474 (25) obj. -96.8981 iterations 1
Cbc0038I Pass  35: suminf.    1.42995 (7) obj. -96.8981 iterations 30
Cbc0038I Pass  36: suminf.    1.41845 (5) obj. -96.8981 iterations 3
Cbc0038I Pass  37: suminf.    1.20527 (3) obj. -96.8981 iterations 15
Cbc0038I Pass  38: suminf.    0.90779 (3) obj. -96.8981 iterations 4
Cbc0038I Pass  39: suminf.    3.11823 (13) obj. -96.8981 iterations 19
Cbc0038I Pass  40: suminf.    2.34976 (8) obj. -98.1061 iterations 10
Cbc0038I Pass  41: suminf.    1.07986 (5) obj. -96.8981 iterations 13
Cbc0038I Pass  42: suminf.    1.07986 (5) obj. -96.8981 iterations 0
Cbc0038I Pass  43: suminf.    1.39232 (5) obj. -96.8981 iterations 12
Cbc0038I Pass  44: suminf.    1.20527 (3) obj. -96.8981 iterations 10
Cbc0038I Pass  45: suminf.    0.90779 (3) obj. -96.8981 iterations 7
Cbc0038I Pass  46: suminf.    1.20527 (3) obj. -96.8981 iterations 7
Cbc0038I Pass  47: suminf.    1.86317 (7) obj. -96.8981 iterations 10
Cbc0038I Pass  48: suminf.    1.71600 (5) obj. -97.1074 iterations 6
Cbc0038I Pass  49: suminf.    0.82717 (3) obj. -96.8981 iterations 22
Cbc0038I Pass  50: suminf.    0.60840 (2) obj. -97.0777 iterations 8
Cbc0038I Pass  51: suminf.    1.83822 (11) obj. -96.8981 iterations 14
Cbc0038I Pass  52: suminf.    1.24174 (4) obj. -98.4444 iterations 9
Cbc0038I Pass  53: suminf.    3.65121 (13) obj. -96.8981 iterations 13
Cbc0038I Pass  54: suminf.    3.05572 (11) obj. -96.8981 iterations 4
Cbc0038I Pass  55: suminf.    2.75732 (10) obj. -104.318 iterations 2
Cbc0038I Pass  56: suminf.    0.82717 (3) obj. -96.8981 iterations 13
Cbc0038I Pass  57: suminf.    0.60840 (2) obj. -97.0777 iterations 5
Cbc0038I Pass  58: suminf.    2.45966 (8) obj. -96.8981 iterations 9
Cbc0038I Pass  59: suminf.    1.91590 (7) obj. -96.8981 iterations 4
Cbc0038I Pass  60: suminf.    1.42571 (4) obj. -96.8981 iterations 15
Cbc0038I Pass  61: suminf.    1.42571 (4) obj. -96.8981 iterations 0
Cbc0038I Pass  62: suminf.    0.82717 (3) obj. -96.8981 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 66 columns, reduced to 11 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -88.0424 - took 0.03 seconds
Cbc0012I Integer solution of -88.04243 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 12 added rows had average density of 4.75
Cbc0013I At root node, 21 cuts changed objective from -132.32037 to -88.042447 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 204 row cuts average 2.0 elements, 23 column cuts (23 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 1.6625204e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -88.04243, took 179 iterations and 0 nodes (0.38 seconds)
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.38

