Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 574 (-29) elements
Clp1000I sum of infeasibilities 7.33923e-05 - average 3.86275e-07, 22 fixed columns
Coin0506I Presolve 145 (-45) rows, 78 (-23) columns and 438 (-136) elements
Clp0029I End of values pass after 78 iterations
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Coin0511I After Postsolve, objective 40.588064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Coin0511I After Postsolve, objective 40.588064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.5880637 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 12.8095
Cbc0038I Solution found of 2.16338
Cbc0038I Relaxing continuous gives -2.50678
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 93 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -2.50678 to -13.532 (0.05 seconds)
Cbc0038I Round again with cutoff of -16.2377
Cbc0038I Pass   1: suminf.    1.60964 (16) obj. -16.2377 iterations 111
Cbc0038I Pass   2: suminf.    1.60964 (16) obj. -16.2377 iterations 0
Cbc0038I Pass   3: suminf.    2.01945 (10) obj. -16.2377 iterations 24
Cbc0038I Pass   4: suminf.    1.58223 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   5: suminf.    2.41983 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   6: suminf.    0.89835 (3) obj. -16.2377 iterations 5
Cbc0038I Pass   7: suminf.    0.68754 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   8: suminf.    2.00491 (8) obj. -16.2377 iterations 9
Cbc0038I Pass   9: suminf.    2.00491 (8) obj. -16.2377 iterations 0
Cbc0038I Pass  10: suminf.    2.86201 (8) obj. -16.2377 iterations 7
Cbc0038I Pass  11: suminf.    1.61513 (6) obj. -16.2377 iterations 5
Cbc0038I Pass  12: suminf.    1.29899 (7) obj. -16.2377 iterations 7
Cbc0038I Pass  13: suminf.    2.11663 (8) obj. -16.2377 iterations 8
Cbc0038I Pass  14: suminf.    2.08503 (8) obj. -16.2377 iterations 2
Cbc0038I Pass  15: suminf.    1.45955 (7) obj. -16.2377 iterations 6
Cbc0038I Pass  16: suminf.    4.25294 (15) obj. -16.2377 iterations 27
Cbc0038I Pass  17: suminf.    3.90846 (14) obj. -16.2377 iterations 7
Cbc0038I Pass  18: suminf.    1.19480 (6) obj. -16.2377 iterations 19
Cbc0038I Pass  19: suminf.    1.07419 (6) obj. -16.2377 iterations 4
Cbc0038I Pass  20: suminf.    3.36575 (8) obj. -16.2377 iterations 5
Cbc0038I Pass  21: suminf.    2.16226 (6) obj. -16.2377 iterations 5
Cbc0038I Pass  22: suminf.    1.91308 (6) obj. -16.2377 iterations 6
Cbc0038I Pass  23: suminf.    1.06145 (6) obj. -16.2377 iterations 9
Cbc0038I Pass  24: suminf.    1.01685 (6) obj. -16.2377 iterations 2
Cbc0038I Pass  25: suminf.    1.97066 (7) obj. -16.2377 iterations 9
Cbc0038I Pass  26: suminf.    7.23864 (22) obj. -16.2377 iterations 32
Cbc0038I Pass  27: suminf.    3.94800 (13) obj. -16.2377 iterations 17
Cbc0038I Pass  28: suminf.    3.32619 (12) obj. -16.2377 iterations 7
Cbc0038I Pass  29: suminf.    2.04777 (6) obj. -16.2377 iterations 38
Cbc0038I Pass  30: suminf.    1.78830 (5) obj. -16.2377 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 112 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -13.532 to -13.9655 (0.12 seconds)
Cbc0038I Round again with cutoff of -21.1078
Cbc0038I Pass  30: suminf.    2.69918 (22) obj. -21.1078 iterations 6
Cbc0038I Pass  31: suminf.    2.69918 (22) obj. -21.1078 iterations 0
Cbc0038I Pass  32: suminf.    2.68856 (9) obj. -21.1078 iterations 16
Cbc0038I Pass  33: suminf.    2.47245 (15) obj. -21.1078 iterations 9
Cbc0038I Pass  34: suminf.    2.47214 (16) obj. -21.1078 iterations 2
Cbc0038I Pass  35: suminf.    3.92265 (11) obj. -21.1078 iterations 17
Cbc0038I Pass  36: suminf.    2.59530 (11) obj. -21.1078 iterations 11
Cbc0038I Pass  37: suminf.    2.25771 (12) obj. -21.1078 iterations 6
Cbc0038I Pass  38: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  39: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I Pass  40: suminf.    3.16205 (11) obj. -21.1078 iterations 1
Cbc0038I Pass  41: suminf.    3.93895 (11) obj. -21.1078 iterations 9
Cbc0038I Pass  42: suminf.    2.28840 (10) obj. -21.1078 iterations 12
Cbc0038I Pass  43: suminf.    2.18177 (12) obj. -21.1078 iterations 3
Cbc0038I Pass  44: suminf.    4.45506 (12) obj. -21.1078 iterations 10
Cbc0038I Pass  45: suminf.    2.91603 (13) obj. -21.1078 iterations 11
Cbc0038I Pass  46: suminf.    2.53147 (15) obj. -21.1078 iterations 5
Cbc0038I Pass  47: suminf.    2.25771 (12) obj. -21.1078 iterations 7
Cbc0038I Pass  48: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  49: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I Pass  50: suminf.    3.16205 (11) obj. -21.1078 iterations 1
Cbc0038I Pass  51: suminf.    3.93895 (11) obj. -21.1078 iterations 9
Cbc0038I Pass  52: suminf.    2.28840 (10) obj. -21.1078 iterations 12
Cbc0038I Pass  53: suminf.    2.18177 (12) obj. -21.1078 iterations 3
Cbc0038I Pass  54: suminf.    4.45506 (12) obj. -21.1078 iterations 10
Cbc0038I Pass  55: suminf.    2.91603 (13) obj. -21.1078 iterations 11
Cbc0038I Pass  56: suminf.    2.53147 (15) obj. -21.1078 iterations 5
Cbc0038I Pass  57: suminf.    2.25771 (12) obj. -21.1078 iterations 7
Cbc0038I Pass  58: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  59: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 97 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -13.9655 - took 0.15 seconds
Cbc0012I Integer solution of -13.965458 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 94 rows 54 columns
Cbc0031I 30 added rows had average density of 65.7
Cbc0013I At root node, 30 cuts changed objective from -40.588064 to -31.63074 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20754 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3090 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.965458 best solution, best possible -31.63074 (1.57 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 45 rows 32 columns
Cbc0012I Integer solution of -14.185778 found by RINS after 10799 iterations and 41 nodes (1.88 seconds)
Cbc0004I Integer solution of -14.316824 found after 11257 iterations and 61 nodes (1.92 seconds)
Cbc0001I Search completed - best objective -14.31682399999999, took 12031 iterations and 70 nodes (1.95 seconds)
Cbc0032I Strong branching done 976 times (21335 iterations), fathomed 4 nodes and fixed 18 variables
Cbc0035I Maximum depth 32, 126 variables fixed on reduced cost
Total time (CPU seconds):       1.91   (Wallclock seconds):       1.97

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 141 (-63) rows, 151 (-51) columns and 3032 (-2621) elements
Clp1000I sum of infeasibilities 4.11598e-08 - average 2.91914e-10, 25 fixed columns
Coin0506I Presolve 117 (-24) rows, 126 (-25) columns and 2212 (-820) elements
Clp0006I 0  Obj 37.153982 Dual inf 7.0706406 (126)
Clp0029I End of values pass after 126 iterations
Clp0014I Perturbing problem by 0.001% of 1.9196946 - largest nonzero change 2.9022062e-05 ( 0.0024275985%) - largest zero change 2.9799468e-05
Clp0000I Optimal - objective value 50.625558
Clp0000I Optimal - objective value 50.625558
Coin0511I After Postsolve, objective 50.625558, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.625558
Clp0000I Optimal - objective value 50.625558
Clp0000I Optimal - objective value 50.625558
Clp0000I Optimal - objective value 50.625558
Coin0511I After Postsolve, objective 50.625558, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.62555805 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 141 rows, 151 columns (151 integer (151 of which binary)) and 3034 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 4.19309
Cbc0038I Pass   1: suminf.    1.46014 (26) obj. -34.7089 iterations 29
Cbc0038I Pass   2: suminf.    1.46014 (26) obj. -34.7089 iterations 1
Cbc0038I Pass   3: suminf.    0.47787 (13) obj. -14.4002 iterations 13
Cbc0038I Pass   4: suminf.    0.05362 (3) obj. -1.95854 iterations 10
Cbc0038I Solution found of 0.987845
Cbc0038I Rounding solution of -5.83081 is better than previous of 0.987845

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -5.83081 to -5.88873 (0.04 seconds)
Cbc0038I Round again with cutoff of -9.92424
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.46014 (26) obj. -34.7089 iterations 0
Cbc0038I Pass   6: suminf.    1.46014 (26) obj. -34.7089 iterations 1
Cbc0038I Pass   7: suminf.    0.47787 (13) obj. -14.4002 iterations 13
Cbc0038I Pass   8: suminf.    1.04659 (19) obj. -9.92424 iterations 27
Cbc0038I Pass   9: suminf.    1.04869 (19) obj. -9.92424 iterations 2
Cbc0038I Pass  10: suminf.    1.57123 (10) obj. -9.92424 iterations 37
Cbc0038I Pass  11: suminf.    1.11609 (10) obj. -9.92424 iterations 2
Cbc0038I Pass  12: suminf.    1.22357 (9) obj. -9.92424 iterations 10
Cbc0038I Pass  13: suminf.    1.57898 (16) obj. -9.92424 iterations 46
Cbc0038I Pass  14: suminf.    1.33196 (16) obj. -10.4032 iterations 7
Cbc0038I Pass  15: suminf.    1.27841 (14) obj. -9.92424 iterations 16
Cbc0038I Pass  16: suminf.    1.17811 (14) obj. -9.92424 iterations 4
Cbc0038I Pass  17: suminf.    1.30555 (11) obj. -9.92424 iterations 23
Cbc0038I Pass  18: suminf.    1.04035 (11) obj. -10.2055 iterations 7
Cbc0038I Pass  19: suminf.    1.18098 (11) obj. -9.92424 iterations 6
Cbc0038I Pass  20: suminf.    1.66678 (15) obj. -9.92424 iterations 19
Cbc0038I Pass  21: suminf.    1.60741 (15) obj. -9.92424 iterations 9
Cbc0038I Pass  22: suminf.    1.84575 (14) obj. -9.92424 iterations 20
Cbc0038I Pass  23: suminf.    1.60850 (13) obj. -9.92424 iterations 13
Cbc0038I Pass  24: suminf.    1.49893 (12) obj. -9.92424 iterations 23
Cbc0038I Pass  25: suminf.    1.49893 (12) obj. -9.92424 iterations 3
Cbc0038I Pass  26: suminf.    1.67601 (12) obj. -9.92424 iterations 10
Cbc0038I Pass  27: suminf.    1.67601 (12) obj. -9.92424 iterations 4
Cbc0038I Pass  28: suminf.    1.62215 (12) obj. -9.92424 iterations 9
Cbc0038I Pass  29: suminf.    1.62215 (12) obj. -9.92424 iterations 5
Cbc0038I Pass  30: suminf.    3.29870 (23) obj. -9.92424 iterations 36
Cbc0038I Pass  31: suminf.    2.03486 (21) obj. -9.92424 iterations 5
Cbc0038I Pass  32: suminf.    1.95185 (20) obj. -9.92424 iterations 4
Cbc0038I Pass  33: suminf.    1.18312 (15) obj. -9.92424 iterations 23
Cbc0038I Pass  34: suminf.    0.99594 (13) obj. -9.92744 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 29 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -5.88873 to -8.17216 (0.09 seconds)
Cbc0038I Round again with cutoff of -17.188
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.46014 (26) obj. -34.7089 iterations 0
Cbc0038I Pass  35: suminf.    1.46014 (26) obj. -34.7089 iterations 1
Cbc0038I Pass  36: suminf.    0.49873 (12) obj. -17.188 iterations 17
Cbc0038I Pass  37: suminf.    0.49873 (12) obj. -17.188 iterations 0
Cbc0038I Pass  38: suminf.    0.96231 (7) obj. -17.188 iterations 21
Cbc0038I Pass  39: suminf.    0.88732 (7) obj. -17.338 iterations 1
Cbc0038I Pass  40: suminf.    1.99938 (21) obj. -17.188 iterations 21
Cbc0038I Pass  41: suminf.    1.34128 (22) obj. -17.188 iterations 3
Cbc0038I Pass  42: suminf.    1.75823 (17) obj. -17.188 iterations 40
Cbc0038I Pass  43: suminf.    1.37483 (18) obj. -17.188 iterations 7
Cbc0038I Pass  44: suminf.    1.82203 (14) obj. -17.188 iterations 31
Cbc0038I Pass  45: suminf.    1.46774 (15) obj. -17.188 iterations 15
Cbc0038I Pass  46: suminf.    1.82203 (14) obj. -17.188 iterations 17
Cbc0038I Pass  47: suminf.    1.68165 (21) obj. -17.188 iterations 29
Cbc0038I Pass  48: suminf.    1.39131 (19) obj. -18.6922 iterations 9
Cbc0038I Pass  49: suminf.    1.50781 (16) obj. -17.188 iterations 14
Cbc0038I Pass  50: suminf.    1.50781 (16) obj. -17.188 iterations 2
Cbc0038I Pass  51: suminf.    1.82203 (14) obj. -17.188 iterations 26
Cbc0038I Pass  52: suminf.    1.46774 (15) obj. -17.188 iterations 15
Cbc0038I Pass  53: suminf.    1.82203 (14) obj. -17.188 iterations 16
Cbc0038I Pass  54: suminf.    2.28178 (26) obj. -17.188 iterations 36
Cbc0038I Pass  55: suminf.    1.78657 (20) obj. -17.188 iterations 7
Cbc0038I Pass  56: suminf.    1.35476 (19) obj. -18.0914 iterations 3
Cbc0038I Pass  57: suminf.    1.92885 (17) obj. -17.188 iterations 15
Cbc0038I Pass  58: suminf.    1.21873 (19) obj. -17.188 iterations 2
Cbc0038I Pass  59: suminf.    1.19733 (16) obj. -17.188 iterations 11
Cbc0038I Pass  60: suminf.    1.09092 (17) obj. -17.188 iterations 14
Cbc0038I Pass  61: suminf.    1.07637 (18) obj. -17.188 iterations 4
Cbc0038I Pass  62: suminf.    1.09092 (17) obj. -17.188 iterations 7
Cbc0038I Pass  63: suminf.    4.99717 (28) obj. -17.188 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 75 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -8.17216 to -13.532 (0.18 seconds)
Cbc0038I Round again with cutoff of -25.9045
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    1.46014 (26) obj. -34.7089 iterations 0
Cbc0038I Pass  64: suminf.    1.46014 (26) obj. -34.7089 iterations 1
Cbc0038I Pass  65: suminf.    2.26396 (28) obj. -25.9045 iterations 34
Cbc0038I Pass  66: suminf.    1.79421 (29) obj. -25.9045 iterations 5
Cbc0038I Pass  67: suminf.    2.14658 (24) obj. -25.9045 iterations 56
Cbc0038I Pass  68: suminf.    2.14658 (24) obj. -25.9045 iterations 11
Cbc0038I Pass  69: suminf.    2.14658 (24) obj. -25.9045 iterations 7
Cbc0038I Pass  70: suminf.    2.73047 (28) obj. -25.9045 iterations 35
Cbc0038I Pass  71: suminf.    2.73047 (28) obj. -25.9045 iterations 5
Cbc0038I Pass  72: suminf.    2.22277 (25) obj. -25.9045 iterations 31
Cbc0038I Pass  73: suminf.    2.22277 (25) obj. -25.9045 iterations 10
Cbc0038I Pass  74: suminf.    2.22277 (25) obj. -25.9045 iterations 7
Cbc0038I Pass  75: suminf.    3.54721 (34) obj. -25.9045 iterations 46
Cbc0038I Pass  76: suminf.    2.60718 (26) obj. -25.9045 iterations 14
Cbc0038I Pass  77: suminf.    2.60718 (26) obj. -25.9045 iterations 7
Cbc0038I Pass  78: suminf.    2.64983 (26) obj. -25.9045 iterations 16
Cbc0038I Pass  79: suminf.    2.64983 (26) obj. -25.9045 iterations 8
Cbc0038I Pass  80: suminf.    3.32517 (25) obj. -25.9045 iterations 18
Cbc0038I Pass  81: suminf.    2.92118 (27) obj. -25.9045 iterations 11
Cbc0038I Pass  82: suminf.    3.03897 (25) obj. -25.9045 iterations 11
Cbc0038I Pass  83: suminf.    2.79927 (26) obj. -25.9045 iterations 6
Cbc0038I Pass  84: suminf.    3.32517 (24) obj. -25.9045 iterations 17
Cbc0038I Pass  85: suminf.    2.90472 (24) obj. -25.9045 iterations 16
Cbc0038I Pass  86: suminf.    2.90472 (24) obj. -25.9045 iterations 2
Cbc0038I Pass  87: suminf.    2.82247 (24) obj. -25.9045 iterations 18
Cbc0038I Pass  88: suminf.    2.82247 (24) obj. -25.9045 iterations 6
Cbc0038I Pass  89: suminf.    2.95922 (24) obj. -25.9045 iterations 14
Cbc0038I Pass  90: suminf.    2.95922 (24) obj. -25.9045 iterations 10
Cbc0038I Pass  91: suminf.    2.81983 (24) obj. -25.9045 iterations 21
Cbc0038I Pass  92: suminf.    2.81983 (24) obj. -25.9045 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -13.532 - took 0.17 seconds
Cbc0012I Integer solution of -13.532035 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 141 rows 151 columns, reduced to 32 rows 37 columns
Cbc0031I 83 added rows had average density of 34.60241
Cbc0013I At root node, 83 cuts changed objective from -46.242974 to -22.493169 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20346 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2433 row cuts average 143.2 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1376 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1294 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 355 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 181 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.232 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.532035 best solution, best possible -22.493169 (2.46 seconds)
Cbc0012I Integer solution of -14.316824 found by rounding after 8523 iterations and 4 nodes (3.10 seconds)
Cbc0010I After 6 nodes, 3 on tree, -14.316824 best solution, best possible -21.85759 (3.20 seconds)
Cbc0001I Search completed - best objective -14.31682399999999, took 9775 iterations and 20 nodes (3.56 seconds)
Cbc0032I Strong branching done 470 times (15489 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 9, 60 variables fixed on reduced cost
Total time (CPU seconds):       3.35   (Wallclock seconds):       3.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 574 (-29) elements
Clp1000I sum of infeasibilities 7.33923e-05 - average 3.86275e-07, 22 fixed columns
Coin0506I Presolve 145 (-45) rows, 78 (-23) columns and 438 (-136) elements
Clp0029I End of values pass after 78 iterations
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Coin0511I After Postsolve, objective 40.588064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Coin0511I After Postsolve, objective 40.588064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.5880637 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 12.8095
Cbc0038I Solution found of 2.16338
Cbc0038I Relaxing continuous gives -2.50678
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 93 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -2.50678 to -13.532 (0.05 seconds)
Cbc0038I Round again with cutoff of -16.2377
Cbc0038I Pass   1: suminf.    1.60964 (16) obj. -16.2377 iterations 111
Cbc0038I Pass   2: suminf.    1.60964 (16) obj. -16.2377 iterations 0
Cbc0038I Pass   3: suminf.    2.01945 (10) obj. -16.2377 iterations 24
Cbc0038I Pass   4: suminf.    1.58223 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   5: suminf.    2.41983 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   6: suminf.    0.89835 (3) obj. -16.2377 iterations 5
Cbc0038I Pass   7: suminf.    0.68754 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   8: suminf.    2.00491 (8) obj. -16.2377 iterations 9
Cbc0038I Pass   9: suminf.    2.00491 (8) obj. -16.2377 iterations 0
Cbc0038I Pass  10: suminf.    2.86201 (8) obj. -16.2377 iterations 7
Cbc0038I Pass  11: suminf.    1.61513 (6) obj. -16.2377 iterations 5
Cbc0038I Pass  12: suminf.    1.29899 (7) obj. -16.2377 iterations 7
Cbc0038I Pass  13: suminf.    2.11663 (8) obj. -16.2377 iterations 8
Cbc0038I Pass  14: suminf.    2.08503 (8) obj. -16.2377 iterations 2
Cbc0038I Pass  15: suminf.    1.45955 (7) obj. -16.2377 iterations 6
Cbc0038I Pass  16: suminf.    4.25294 (15) obj. -16.2377 iterations 27
Cbc0038I Pass  17: suminf.    3.90846 (14) obj. -16.2377 iterations 7
Cbc0038I Pass  18: suminf.    1.19480 (6) obj. -16.2377 iterations 19
Cbc0038I Pass  19: suminf.    1.07419 (6) obj. -16.2377 iterations 4
Cbc0038I Pass  20: suminf.    3.36575 (8) obj. -16.2377 iterations 5
Cbc0038I Pass  21: suminf.    2.16226 (6) obj. -16.2377 iterations 5
Cbc0038I Pass  22: suminf.    1.91308 (6) obj. -16.2377 iterations 6
Cbc0038I Pass  23: suminf.    1.06145 (6) obj. -16.2377 iterations 9
Cbc0038I Pass  24: suminf.    1.01685 (6) obj. -16.2377 iterations 2
Cbc0038I Pass  25: suminf.    1.97066 (7) obj. -16.2377 iterations 9
Cbc0038I Pass  26: suminf.    7.23864 (22) obj. -16.2377 iterations 32
Cbc0038I Pass  27: suminf.    3.94800 (13) obj. -16.2377 iterations 17
Cbc0038I Pass  28: suminf.    3.32619 (12) obj. -16.2377 iterations 7
Cbc0038I Pass  29: suminf.    2.04777 (6) obj. -16.2377 iterations 38
Cbc0038I Pass  30: suminf.    1.78830 (5) obj. -16.2377 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 112 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -13.532 to -13.9655 (0.12 seconds)
Cbc0038I Round again with cutoff of -21.1078
Cbc0038I Pass  30: suminf.    2.69918 (22) obj. -21.1078 iterations 6
Cbc0038I Pass  31: suminf.    2.69918 (22) obj. -21.1078 iterations 0
Cbc0038I Pass  32: suminf.    2.68856 (9) obj. -21.1078 iterations 16
Cbc0038I Pass  33: suminf.    2.47245 (15) obj. -21.1078 iterations 9
Cbc0038I Pass  34: suminf.    2.47214 (16) obj. -21.1078 iterations 2
Cbc0038I Pass  35: suminf.    3.92265 (11) obj. -21.1078 iterations 17
Cbc0038I Pass  36: suminf.    2.59530 (11) obj. -21.1078 iterations 11
Cbc0038I Pass  37: suminf.    2.25771 (12) obj. -21.1078 iterations 6
Cbc0038I Pass  38: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  39: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I Pass  40: suminf.    3.16205 (11) obj. -21.1078 iterations 1
Cbc0038I Pass  41: suminf.    3.93895 (11) obj. -21.1078 iterations 9
Cbc0038I Pass  42: suminf.    2.28840 (10) obj. -21.1078 iterations 12
Cbc0038I Pass  43: suminf.    2.18177 (12) obj. -21.1078 iterations 3
Cbc0038I Pass  44: suminf.    4.45506 (12) obj. -21.1078 iterations 10
Cbc0038I Pass  45: suminf.    2.91603 (13) obj. -21.1078 iterations 11
Cbc0038I Pass  46: suminf.    2.53147 (15) obj. -21.1078 iterations 5
Cbc0038I Pass  47: suminf.    2.25771 (12) obj. -21.1078 iterations 7
Cbc0038I Pass  48: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  49: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I Pass  50: suminf.    3.16205 (11) obj. -21.1078 iterations 1
Cbc0038I Pass  51: suminf.    3.93895 (11) obj. -21.1078 iterations 9
Cbc0038I Pass  52: suminf.    2.28840 (10) obj. -21.1078 iterations 12
Cbc0038I Pass  53: suminf.    2.18177 (12) obj. -21.1078 iterations 3
Cbc0038I Pass  54: suminf.    4.45506 (12) obj. -21.1078 iterations 10
Cbc0038I Pass  55: suminf.    2.91603 (13) obj. -21.1078 iterations 11
Cbc0038I Pass  56: suminf.    2.53147 (15) obj. -21.1078 iterations 5
Cbc0038I Pass  57: suminf.    2.25771 (12) obj. -21.1078 iterations 7
Cbc0038I Pass  58: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  59: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 97 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -13.9655 - took 0.15 seconds
Cbc0012I Integer solution of -13.965458 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 94 rows 54 columns
Cbc0031I 30 added rows had average density of 65.7
Cbc0013I At root node, 30 cuts changed objective from -40.588064 to -31.63074 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20754 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3090 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.965458 best solution, best possible -31.63074 (1.58 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 45 rows 32 columns
Cbc0012I Integer solution of -14.185778 found by RINS after 10799 iterations and 41 nodes (1.90 seconds)
Cbc0004I Integer solution of -14.316824 found after 11257 iterations and 61 nodes (1.94 seconds)
Cbc0001I Search completed - best objective -14.31682399999999, took 12031 iterations and 70 nodes (1.97 seconds)
Cbc0032I Strong branching done 976 times (21335 iterations), fathomed 4 nodes and fixed 18 variables
Cbc0035I Maximum depth 32, 126 variables fixed on reduced cost
Total time (CPU seconds):       1.92   (Wallclock seconds):       2.00

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 141 (-64) rows, 151 (-52) columns and 3032 (-2622) elements
Clp1000I sum of infeasibilities 4.11598e-08 - average 2.91914e-10, 25 fixed columns
Coin0506I Presolve 117 (-24) rows, 126 (-25) columns and 2212 (-820) elements
Clp0006I 0  Obj 37.153982 Dual inf 7.0706406 (126)
Clp0029I End of values pass after 126 iterations
Clp0014I Perturbing problem by 0.001% of 1.9196946 - largest nonzero change 2.9022062e-05 ( 0.0024275985%) - largest zero change 2.9799468e-05
Clp0000I Optimal - objective value 50.625558
Clp0000I Optimal - objective value 50.625558
Coin0511I After Postsolve, objective 50.625558, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.625558
Clp0000I Optimal - objective value 50.625558
Clp0000I Optimal - objective value 50.625558
Clp0000I Optimal - objective value 50.625558
Coin0511I After Postsolve, objective 50.625558, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.62555805 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 141 rows, 151 columns (151 integer (151 of which binary)) and 3034 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 4.19309
Cbc0038I Pass   1: suminf.    1.46014 (26) obj. -34.7089 iterations 29
Cbc0038I Pass   2: suminf.    1.46014 (26) obj. -34.7089 iterations 1
Cbc0038I Pass   3: suminf.    0.47787 (13) obj. -14.4002 iterations 13
Cbc0038I Pass   4: suminf.    0.05362 (3) obj. -1.95854 iterations 10
Cbc0038I Solution found of 0.987845
Cbc0038I Rounding solution of -5.83081 is better than previous of 0.987845

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -5.83081 to -5.88873 (0.04 seconds)
Cbc0038I Round again with cutoff of -9.92424
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.46014 (26) obj. -34.7089 iterations 0
Cbc0038I Pass   6: suminf.    1.46014 (26) obj. -34.7089 iterations 1
Cbc0038I Pass   7: suminf.    0.47787 (13) obj. -14.4002 iterations 13
Cbc0038I Pass   8: suminf.    1.04659 (19) obj. -9.92424 iterations 27
Cbc0038I Pass   9: suminf.    1.04869 (19) obj. -9.92424 iterations 2
Cbc0038I Pass  10: suminf.    1.57123 (10) obj. -9.92424 iterations 37
Cbc0038I Pass  11: suminf.    1.11609 (10) obj. -9.92424 iterations 2
Cbc0038I Pass  12: suminf.    1.22357 (9) obj. -9.92424 iterations 10
Cbc0038I Pass  13: suminf.    1.57898 (16) obj. -9.92424 iterations 46
Cbc0038I Pass  14: suminf.    1.33196 (16) obj. -10.4032 iterations 7
Cbc0038I Pass  15: suminf.    1.27841 (14) obj. -9.92424 iterations 16
Cbc0038I Pass  16: suminf.    1.17811 (14) obj. -9.92424 iterations 4
Cbc0038I Pass  17: suminf.    1.30555 (11) obj. -9.92424 iterations 23
Cbc0038I Pass  18: suminf.    1.04035 (11) obj. -10.2055 iterations 7
Cbc0038I Pass  19: suminf.    1.18098 (11) obj. -9.92424 iterations 6
Cbc0038I Pass  20: suminf.    1.66678 (15) obj. -9.92424 iterations 19
Cbc0038I Pass  21: suminf.    1.60741 (15) obj. -9.92424 iterations 9
Cbc0038I Pass  22: suminf.    1.84575 (14) obj. -9.92424 iterations 20
Cbc0038I Pass  23: suminf.    1.60850 (13) obj. -9.92424 iterations 13
Cbc0038I Pass  24: suminf.    1.49893 (12) obj. -9.92424 iterations 23
Cbc0038I Pass  25: suminf.    1.49893 (12) obj. -9.92424 iterations 3
Cbc0038I Pass  26: suminf.    1.67601 (12) obj. -9.92424 iterations 10
Cbc0038I Pass  27: suminf.    1.67601 (12) obj. -9.92424 iterations 4
Cbc0038I Pass  28: suminf.    1.62215 (12) obj. -9.92424 iterations 9
Cbc0038I Pass  29: suminf.    1.62215 (12) obj. -9.92424 iterations 5
Cbc0038I Pass  30: suminf.    3.29870 (23) obj. -9.92424 iterations 36
Cbc0038I Pass  31: suminf.    2.03486 (21) obj. -9.92424 iterations 5
Cbc0038I Pass  32: suminf.    1.95185 (20) obj. -9.92424 iterations 4
Cbc0038I Pass  33: suminf.    1.18312 (15) obj. -9.92424 iterations 23
Cbc0038I Pass  34: suminf.    0.99594 (13) obj. -9.92744 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 29 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -5.88873 to -8.17216 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.188
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.46014 (26) obj. -34.7089 iterations 0
Cbc0038I Pass  35: suminf.    1.46014 (26) obj. -34.7089 iterations 1
Cbc0038I Pass  36: suminf.    0.49873 (12) obj. -17.188 iterations 17
Cbc0038I Pass  37: suminf.    0.49873 (12) obj. -17.188 iterations 0
Cbc0038I Pass  38: suminf.    0.96231 (7) obj. -17.188 iterations 21
Cbc0038I Pass  39: suminf.    0.88732 (7) obj. -17.338 iterations 1
Cbc0038I Pass  40: suminf.    1.99938 (21) obj. -17.188 iterations 21
Cbc0038I Pass  41: suminf.    1.34128 (22) obj. -17.188 iterations 3
Cbc0038I Pass  42: suminf.    1.75823 (17) obj. -17.188 iterations 40
Cbc0038I Pass  43: suminf.    1.37483 (18) obj. -17.188 iterations 7
Cbc0038I Pass  44: suminf.    1.82203 (14) obj. -17.188 iterations 31
Cbc0038I Pass  45: suminf.    1.46774 (15) obj. -17.188 iterations 15
Cbc0038I Pass  46: suminf.    1.82203 (14) obj. -17.188 iterations 17
Cbc0038I Pass  47: suminf.    1.68165 (21) obj. -17.188 iterations 29
Cbc0038I Pass  48: suminf.    1.39131 (19) obj. -18.6922 iterations 9
Cbc0038I Pass  49: suminf.    1.50781 (16) obj. -17.188 iterations 14
Cbc0038I Pass  50: suminf.    1.50781 (16) obj. -17.188 iterations 2
Cbc0038I Pass  51: suminf.    1.82203 (14) obj. -17.188 iterations 26
Cbc0038I Pass  52: suminf.    1.46774 (15) obj. -17.188 iterations 15
Cbc0038I Pass  53: suminf.    1.82203 (14) obj. -17.188 iterations 16
Cbc0038I Pass  54: suminf.    2.28178 (26) obj. -17.188 iterations 36
Cbc0038I Pass  55: suminf.    1.78657 (20) obj. -17.188 iterations 7
Cbc0038I Pass  56: suminf.    1.35476 (19) obj. -18.0914 iterations 3
Cbc0038I Pass  57: suminf.    1.92885 (17) obj. -17.188 iterations 15
Cbc0038I Pass  58: suminf.    1.21873 (19) obj. -17.188 iterations 2
Cbc0038I Pass  59: suminf.    1.19733 (16) obj. -17.188 iterations 11
Cbc0038I Pass  60: suminf.    1.09092 (17) obj. -17.188 iterations 14
Cbc0038I Pass  61: suminf.    1.07637 (18) obj. -17.188 iterations 4
Cbc0038I Pass  62: suminf.    1.09092 (17) obj. -17.188 iterations 7
Cbc0038I Pass  63: suminf.    4.99717 (28) obj. -17.188 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 151 columns, reduced to 75 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -8.17216 to -13.532 (0.20 seconds)
Cbc0038I Round again with cutoff of -25.9045
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    1.46014 (26) obj. -34.7089 iterations 0
Cbc0038I Pass  64: suminf.    1.46014 (26) obj. -34.7089 iterations 1
Cbc0038I Pass  65: suminf.    2.26396 (28) obj. -25.9045 iterations 34
Cbc0038I Pass  66: suminf.    1.79421 (29) obj. -25.9045 iterations 5
Cbc0038I Pass  67: suminf.    2.14658 (24) obj. -25.9045 iterations 56
Cbc0038I Pass  68: suminf.    2.14658 (24) obj. -25.9045 iterations 11
Cbc0038I Pass  69: suminf.    2.14658 (24) obj. -25.9045 iterations 7
Cbc0038I Pass  70: suminf.    2.73047 (28) obj. -25.9045 iterations 35
Cbc0038I Pass  71: suminf.    2.73047 (28) obj. -25.9045 iterations 5
Cbc0038I Pass  72: suminf.    2.22277 (25) obj. -25.9045 iterations 31
Cbc0038I Pass  73: suminf.    2.22277 (25) obj. -25.9045 iterations 10
Cbc0038I Pass  74: suminf.    2.22277 (25) obj. -25.9045 iterations 7
Cbc0038I Pass  75: suminf.    3.54721 (34) obj. -25.9045 iterations 46
Cbc0038I Pass  76: suminf.    2.60718 (26) obj. -25.9045 iterations 14
Cbc0038I Pass  77: suminf.    2.60718 (26) obj. -25.9045 iterations 7
Cbc0038I Pass  78: suminf.    2.64983 (26) obj. -25.9045 iterations 16
Cbc0038I Pass  79: suminf.    2.64983 (26) obj. -25.9045 iterations 8
Cbc0038I Pass  80: suminf.    3.32517 (25) obj. -25.9045 iterations 18
Cbc0038I Pass  81: suminf.    2.92118 (27) obj. -25.9045 iterations 11
Cbc0038I Pass  82: suminf.    3.03897 (25) obj. -25.9045 iterations 11
Cbc0038I Pass  83: suminf.    2.79927 (26) obj. -25.9045 iterations 6
Cbc0038I Pass  84: suminf.    3.32517 (24) obj. -25.9045 iterations 17
Cbc0038I Pass  85: suminf.    2.90472 (24) obj. -25.9045 iterations 16
Cbc0038I Pass  86: suminf.    2.90472 (24) obj. -25.9045 iterations 2
Cbc0038I Pass  87: suminf.    2.82247 (24) obj. -25.9045 iterations 18
Cbc0038I Pass  88: suminf.    2.82247 (24) obj. -25.9045 iterations 6
Cbc0038I Pass  89: suminf.    2.95922 (24) obj. -25.9045 iterations 14
Cbc0038I Pass  90: suminf.    2.95922 (24) obj. -25.9045 iterations 10
Cbc0038I Pass  91: suminf.    2.81983 (24) obj. -25.9045 iterations 21
Cbc0038I Pass  92: suminf.    2.81983 (24) obj. -25.9045 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -13.532 - took 0.18 seconds
Cbc0012I Integer solution of -13.532035 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 141 rows 151 columns, reduced to 32 rows 37 columns
Cbc0031I 83 added rows had average density of 34.60241
Cbc0013I At root node, 83 cuts changed objective from -46.242974 to -22.493169 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20346 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2433 row cuts average 143.2 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1376 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1294 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 355 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 181 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.532035 best solution, best possible -22.493169 (2.56 seconds)
Cbc0012I Integer solution of -14.316824 found by rounding after 8523 iterations and 4 nodes (3.22 seconds)
Cbc0010I After 5 nodes, 2 on tree, -14.316824 best solution, best possible -21.85759 (3.27 seconds)
Cbc0001I Search completed - best objective -14.31682399999999, took 9775 iterations and 20 nodes (3.67 seconds)
Cbc0032I Strong branching done 470 times (15489 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 9, 60 variables fixed on reduced cost
Total time (CPU seconds):       3.44   (Wallclock seconds):       3.69

