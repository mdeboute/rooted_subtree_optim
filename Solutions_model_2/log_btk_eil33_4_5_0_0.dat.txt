Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 32 (-3) columns and 166 (-29) elements
Clp1000I sum of infeasibilities 8.46604e-06 - average 1.53928e-07, 3 fixed columns
Coin0506I Presolve 50 (-5) rows, 29 (-3) columns and 150 (-16) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 79.963301
Clp0000I Optimal - objective value 79.963301
Coin0511I After Postsolve, objective 79.963301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.963301
Clp0000I Optimal - objective value 79.963301
Clp0000I Optimal - objective value 79.963301
Coin0511I After Postsolve, objective 79.963301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.96330121 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 32 columns (31 integer (31 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.548%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.19797
Cbc0038I Solution found of 13.6681
Cbc0038I Relaxing continuous gives -8.02123
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -8.02123 to -27.4946 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.7416
Cbc0038I Pass   1: suminf.    2.63459 (24) obj. -32.7416 iterations 13
Cbc0038I Pass   2: suminf.    3.22661 (11) obj. -32.7416 iterations 25
Cbc0038I Pass   3: suminf.    2.45770 (7) obj. -32.7416 iterations 6
Cbc0038I Pass   4: suminf.    2.33669 (10) obj. -32.7416 iterations 2
Cbc0038I Pass   5: suminf.    1.11541 (7) obj. -32.7416 iterations 10
Cbc0038I Pass   6: suminf.    0.65486 (3) obj. -32.7416 iterations 5
Cbc0038I Pass   7: suminf.    1.13538 (3) obj. -32.7416 iterations 2
Cbc0038I Pass   8: suminf.    0.65197 (3) obj. -32.7416 iterations 2
Cbc0038I Pass   9: suminf.    1.29178 (3) obj. -32.7416 iterations 4
Cbc0038I Pass  10: suminf.    1.61302 (7) obj. -32.7416 iterations 9
Cbc0038I Pass  11: suminf.    1.13623 (5) obj. -32.7416 iterations 3
Cbc0038I Pass  12: suminf.    1.09305 (4) obj. -32.7416 iterations 2
Cbc0038I Pass  13: suminf.    1.05715 (3) obj. -32.7416 iterations 4
Cbc0038I Pass  14: suminf.    0.93204 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  15: suminf.    0.89392 (4) obj. -32.7416 iterations 1
Cbc0038I Pass  16: suminf.    1.40592 (4) obj. -32.7416 iterations 5
Cbc0038I Pass  17: suminf.    0.79276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  18: suminf.    0.50402 (3) obj. -32.7416 iterations 3
Cbc0038I Pass  19: suminf.    1.29753 (3) obj. -32.7416 iterations 2
Cbc0038I Pass  20: suminf.    0.96276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  21: suminf.    0.96276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  22: suminf.    1.40592 (4) obj. -32.7416 iterations 5
Cbc0038I Pass  23: suminf.    0.79276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  24: suminf.    0.50402 (3) obj. -32.7416 iterations 3
Cbc0038I Pass  25: suminf.    1.29753 (3) obj. -32.7416 iterations 2
Cbc0038I Pass  26: suminf.    0.96276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  27: suminf.    0.96276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  28: suminf.    1.40592 (4) obj. -32.7416 iterations 5
Cbc0038I Pass  29: suminf.    0.79276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  30: suminf.    0.50402 (3) obj. -32.7416 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 46 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -27.4946 - took 0.06 seconds
Cbc0012I Integer solution of -27.49459 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 14 added rows had average density of 23.928571
Cbc0013I At root node, 14 cuts changed objective from -79.963301 to -56.904449 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2147 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1172 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 96 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -29.47957 found by DiveCoefficient after 2927 iterations and 5 nodes (0.24 seconds)
Cbc0001I Search completed - best objective -29.47957, took 3299 iterations and 14 nodes (0.25 seconds)
Cbc0032I Strong branching done 216 times (2239 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-16) rows, 59 (-7) columns and 575 (-148) elements
Clp1000I sum of infeasibilities 2.66585e-06 - average 5.12664e-08, 34 fixed columns
Coin0506I Presolve 17 (-35) rows, 23 (-36) columns and 75 (-500) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 2.5687606 - largest nonzero change 2.428359e-05 ( 0.001262127%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 6.0758625
Clp0000I Optimal - objective value 6.0758625
Coin0511I After Postsolve, objective 6.0758625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7690817 - largest nonzero change 1.9334582e-05 ( 0.001262127%) - largest zero change 2.9123378e-05
Clp0000I Optimal - objective value 93.227569
Clp0000I Optimal - objective value 93.227569
Clp0000I Optimal - objective value 93.227569
Coin0511I After Postsolve, objective 93.227569, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.22756936 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 59 columns (59 integer (59 of which binary)) and 580 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.463%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 7.54618
Cbc0038I Pass   1: suminf.    1.57671 (15) obj. -51.2537 iterations 22
Cbc0038I Pass   2: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Solution found of -3.69373
Cbc0038I Rounding solution of -5.72993 is better than previous of -3.69373

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -5.72993 to -11.9528 (0.01 seconds)
Cbc0038I Round again with cutoff of -18.633
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Pass   4: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Pass   5: suminf.    0.93128 (5) obj. -18.633 iterations 25
Cbc0038I Pass   6: suminf.    0.91002 (3) obj. -18.633 iterations 9
Cbc0038I Pass   7: suminf.    0.86399 (7) obj. -18.633 iterations 4
Cbc0038I Pass   8: suminf.    0.35657 (5) obj. -18.633 iterations 9
Cbc0038I Pass   9: suminf.    0.35785 (3) obj. -18.633 iterations 1
Cbc0038I Pass  10: suminf.    0.39053 (3) obj. -18.633 iterations 5
Cbc0038I Pass  11: suminf.    0.38423 (5) obj. -18.633 iterations 3
Cbc0038I Pass  12: suminf.    0.35657 (5) obj. -18.633 iterations 4
Cbc0038I Pass  13: suminf.    2.16863 (11) obj. -29.6323 iterations 22
Cbc0038I Pass  14: suminf.    0.79348 (10) obj. -18.633 iterations 4
Cbc0038I Pass  15: suminf.    0.79252 (8) obj. -18.633 iterations 2
Cbc0038I Pass  16: suminf.    1.26366 (7) obj. -18.633 iterations 13
Cbc0038I Pass  17: suminf.    1.26366 (7) obj. -18.633 iterations 1
Cbc0038I Pass  18: suminf.    1.43964 (6) obj. -18.633 iterations 5
Cbc0038I Pass  19: suminf.    1.40864 (4) obj. -18.633 iterations 2
Cbc0038I Pass  20: suminf.    1.40864 (4) obj. -18.633 iterations 2
Cbc0038I Pass  21: suminf.    0.95147 (2) obj. -18.633 iterations 6
Cbc0038I Pass  22: suminf.    0.95147 (2) obj. -18.633 iterations 2
Cbc0038I Pass  23: suminf.    0.98235 (2) obj. -19.1271 iterations 2
Cbc0038I Pass  24: suminf.    0.95706 (3) obj. -18.633 iterations 3
Cbc0038I Pass  25: suminf.    0.95147 (2) obj. -18.633 iterations 3
Cbc0038I Pass  26: suminf.    1.82505 (7) obj. -18.633 iterations 9
Cbc0038I Pass  27: suminf.    1.82505 (7) obj. -18.633 iterations 0
Cbc0038I Pass  28: suminf.    0.83104 (3) obj. -18.633 iterations 9
Cbc0038I Pass  29: suminf.    0.83104 (3) obj. -18.633 iterations 2
Cbc0038I Pass  30: suminf.    1.44814 (5) obj. -18.633 iterations 5
Cbc0038I Pass  31: suminf.    2.60135 (6) obj. -18.633 iterations 2
Cbc0038I Pass  32: suminf.    1.92159 (6) obj. -18.633 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -11.9528 to -23.7935 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.7856
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Pass  33: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Pass  34: suminf.    1.20181 (11) obj. -34.7856 iterations 25
Cbc0038I Pass  35: suminf.    1.20181 (11) obj. -34.7856 iterations 1
Cbc0038I Pass  36: suminf.    1.42441 (8) obj. -34.7856 iterations 12
Cbc0038I Pass  37: suminf.    1.42248 (6) obj. -34.7856 iterations 2
Cbc0038I Pass  38: suminf.    1.15758 (4) obj. -34.7856 iterations 5
Cbc0038I Pass  39: suminf.    1.15758 (4) obj. -34.7856 iterations 3
Cbc0038I Pass  40: suminf.    1.27338 (4) obj. -34.7856 iterations 5
Cbc0038I Pass  41: suminf.    1.26708 (6) obj. -34.7856 iterations 4
Cbc0038I Pass  42: suminf.    1.15630 (6) obj. -34.7856 iterations 4
Cbc0038I Pass  43: suminf.    2.10718 (12) obj. -34.7856 iterations 20
Cbc0038I Pass  44: suminf.    1.76267 (10) obj. -34.7856 iterations 3
Cbc0038I Pass  45: suminf.    1.25396 (7) obj. -36.948 iterations 6
Cbc0038I Pass  46: suminf.    1.65002 (10) obj. -34.7856 iterations 14
Cbc0038I Pass  47: suminf.    1.60650 (8) obj. -34.7856 iterations 1
Cbc0038I Pass  48: suminf.    1.89409 (10) obj. -34.7856 iterations 3
Cbc0038I Pass  49: suminf.    1.83060 (8) obj. -34.7856 iterations 2
Cbc0038I Pass  50: suminf.    1.65002 (10) obj. -34.7856 iterations 4
Cbc0038I Pass  51: suminf.    3.06525 (15) obj. -34.7856 iterations 23
Cbc0038I Pass  52: suminf.    1.85319 (11) obj. -34.7856 iterations 3
Cbc0038I Pass  53: suminf.    1.67867 (11) obj. -39.0501 iterations 2
Cbc0038I Pass  54: suminf.    1.00432 (6) obj. -34.7856 iterations 14
Cbc0038I Pass  55: suminf.    0.76891 (6) obj. -34.9062 iterations 4
Cbc0038I Pass  56: suminf.    1.72414 (10) obj. -34.7856 iterations 6
Cbc0038I Pass  57: suminf.    1.72414 (10) obj. -34.7856 iterations 0
Cbc0038I Pass  58: suminf.    0.89462 (6) obj. -34.7856 iterations 13
Cbc0038I Pass  59: suminf.    0.88929 (6) obj. -34.7856 iterations 2
Cbc0038I Pass  60: suminf.    1.05101 (6) obj. -34.7856 iterations 2
Cbc0038I Pass  61: suminf.    1.05101 (6) obj. -34.7856 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 34 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -23.7935 - took 0.04 seconds
Cbc0012I Integer solution of -23.79348 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 52 rows 59 columns, reduced to 14 rows 17 columns
Cbc0031I 29 added rows had average density of 17.448276
Cbc0013I At root node, 29 cuts changed objective from -78.753535 to -36.656491 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3672 row cuts average 6.1 elements, 4 column cuts (4 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1106 row cuts average 50.6 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 311 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 280 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.663 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.79348 best solution, best possible -36.656491 (1.56 seconds)
Cbc0012I Integer solution of -28.003219 found by DiveCoefficient after 2822 iterations and 4 nodes (1.68 seconds)
Cbc0012I Integer solution of -29.47957 found by rounding after 3033 iterations and 9 nodes (1.70 seconds)
Cbc0001I Search completed - best objective -29.47957, took 3071 iterations and 10 nodes (1.70 seconds)
Cbc0032I Strong branching done 228 times (3875 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.71

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 32 (-3) columns and 166 (-29) elements
Clp1000I sum of infeasibilities 8.46604e-06 - average 1.53928e-07, 3 fixed columns
Coin0506I Presolve 50 (-5) rows, 29 (-3) columns and 150 (-16) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 79.963301
Clp0000I Optimal - objective value 79.963301
Coin0511I After Postsolve, objective 79.963301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.963301
Clp0000I Optimal - objective value 79.963301
Clp0000I Optimal - objective value 79.963301
Coin0511I After Postsolve, objective 79.963301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.96330121 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 32 columns (31 integer (31 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.548%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.19797
Cbc0038I Solution found of 13.6681
Cbc0038I Relaxing continuous gives -8.02123
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -8.02123 to -27.4946 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.7416
Cbc0038I Pass   1: suminf.    2.63459 (24) obj. -32.7416 iterations 13
Cbc0038I Pass   2: suminf.    3.22661 (11) obj. -32.7416 iterations 25
Cbc0038I Pass   3: suminf.    2.45770 (7) obj. -32.7416 iterations 6
Cbc0038I Pass   4: suminf.    2.33669 (10) obj. -32.7416 iterations 2
Cbc0038I Pass   5: suminf.    1.11541 (7) obj. -32.7416 iterations 10
Cbc0038I Pass   6: suminf.    0.65486 (3) obj. -32.7416 iterations 5
Cbc0038I Pass   7: suminf.    1.13538 (3) obj. -32.7416 iterations 2
Cbc0038I Pass   8: suminf.    0.65197 (3) obj. -32.7416 iterations 2
Cbc0038I Pass   9: suminf.    1.29178 (3) obj. -32.7416 iterations 4
Cbc0038I Pass  10: suminf.    1.61302 (7) obj. -32.7416 iterations 9
Cbc0038I Pass  11: suminf.    1.13623 (5) obj. -32.7416 iterations 3
Cbc0038I Pass  12: suminf.    1.09305 (4) obj. -32.7416 iterations 2
Cbc0038I Pass  13: suminf.    1.05715 (3) obj. -32.7416 iterations 4
Cbc0038I Pass  14: suminf.    0.93204 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  15: suminf.    0.89392 (4) obj. -32.7416 iterations 1
Cbc0038I Pass  16: suminf.    1.40592 (4) obj. -32.7416 iterations 5
Cbc0038I Pass  17: suminf.    0.79276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  18: suminf.    0.50402 (3) obj. -32.7416 iterations 3
Cbc0038I Pass  19: suminf.    1.29753 (3) obj. -32.7416 iterations 2
Cbc0038I Pass  20: suminf.    0.96276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  21: suminf.    0.96276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  22: suminf.    1.40592 (4) obj. -32.7416 iterations 5
Cbc0038I Pass  23: suminf.    0.79276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  24: suminf.    0.50402 (3) obj. -32.7416 iterations 3
Cbc0038I Pass  25: suminf.    1.29753 (3) obj. -32.7416 iterations 2
Cbc0038I Pass  26: suminf.    0.96276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  27: suminf.    0.96276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  28: suminf.    1.40592 (4) obj. -32.7416 iterations 5
Cbc0038I Pass  29: suminf.    0.79276 (3) obj. -32.7416 iterations 1
Cbc0038I Pass  30: suminf.    0.50402 (3) obj. -32.7416 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 46 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -27.4946 - took 0.03 seconds
Cbc0012I Integer solution of -27.49459 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 14 added rows had average density of 23.928571
Cbc0013I At root node, 14 cuts changed objective from -79.963301 to -56.904449 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2147 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1172 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 96 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -29.47957 found by DiveCoefficient after 2927 iterations and 5 nodes (0.28 seconds)
Cbc0001I Search completed - best objective -29.47957, took 3299 iterations and 14 nodes (0.30 seconds)
Cbc0032I Strong branching done 216 times (2239 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 59 (-8) columns and 575 (-149) elements
Clp1000I sum of infeasibilities 2.66585e-06 - average 5.12664e-08, 34 fixed columns
Coin0506I Presolve 17 (-35) rows, 23 (-36) columns and 75 (-500) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 2.5687606 - largest nonzero change 2.428359e-05 ( 0.001262127%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 6.0758625
Clp0000I Optimal - objective value 6.0758625
Coin0511I After Postsolve, objective 6.0758625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7690817 - largest nonzero change 1.9334582e-05 ( 0.001262127%) - largest zero change 2.9123378e-05
Clp0000I Optimal - objective value 93.227569
Clp0000I Optimal - objective value 93.227569
Clp0000I Optimal - objective value 93.227569
Coin0511I After Postsolve, objective 93.227569, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.22756936 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 59 columns (59 integer (59 of which binary)) and 580 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.463%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 7.54618
Cbc0038I Pass   1: suminf.    1.57671 (15) obj. -51.2537 iterations 22
Cbc0038I Pass   2: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Solution found of -3.69373
Cbc0038I Rounding solution of -5.72993 is better than previous of -3.69373

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -5.72993 to -11.9528 (0.02 seconds)
Cbc0038I Round again with cutoff of -18.633
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Pass   4: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Pass   5: suminf.    0.93128 (5) obj. -18.633 iterations 25
Cbc0038I Pass   6: suminf.    0.91002 (3) obj. -18.633 iterations 9
Cbc0038I Pass   7: suminf.    0.86399 (7) obj. -18.633 iterations 4
Cbc0038I Pass   8: suminf.    0.35657 (5) obj. -18.633 iterations 9
Cbc0038I Pass   9: suminf.    0.35785 (3) obj. -18.633 iterations 1
Cbc0038I Pass  10: suminf.    0.39053 (3) obj. -18.633 iterations 5
Cbc0038I Pass  11: suminf.    0.38423 (5) obj. -18.633 iterations 3
Cbc0038I Pass  12: suminf.    0.35657 (5) obj. -18.633 iterations 4
Cbc0038I Pass  13: suminf.    2.16863 (11) obj. -29.6323 iterations 22
Cbc0038I Pass  14: suminf.    0.79348 (10) obj. -18.633 iterations 4
Cbc0038I Pass  15: suminf.    0.79252 (8) obj. -18.633 iterations 2
Cbc0038I Pass  16: suminf.    1.26366 (7) obj. -18.633 iterations 13
Cbc0038I Pass  17: suminf.    1.26366 (7) obj. -18.633 iterations 1
Cbc0038I Pass  18: suminf.    1.43964 (6) obj. -18.633 iterations 5
Cbc0038I Pass  19: suminf.    1.40864 (4) obj. -18.633 iterations 2
Cbc0038I Pass  20: suminf.    1.40864 (4) obj. -18.633 iterations 2
Cbc0038I Pass  21: suminf.    0.95147 (2) obj. -18.633 iterations 6
Cbc0038I Pass  22: suminf.    0.95147 (2) obj. -18.633 iterations 2
Cbc0038I Pass  23: suminf.    0.98235 (2) obj. -19.1271 iterations 2
Cbc0038I Pass  24: suminf.    0.95706 (3) obj. -18.633 iterations 3
Cbc0038I Pass  25: suminf.    0.95147 (2) obj. -18.633 iterations 3
Cbc0038I Pass  26: suminf.    1.82505 (7) obj. -18.633 iterations 9
Cbc0038I Pass  27: suminf.    1.82505 (7) obj. -18.633 iterations 0
Cbc0038I Pass  28: suminf.    0.83104 (3) obj. -18.633 iterations 9
Cbc0038I Pass  29: suminf.    0.83104 (3) obj. -18.633 iterations 2
Cbc0038I Pass  30: suminf.    1.44814 (5) obj. -18.633 iterations 5
Cbc0038I Pass  31: suminf.    2.60135 (6) obj. -18.633 iterations 2
Cbc0038I Pass  32: suminf.    1.92159 (6) obj. -18.633 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -11.9528 to -23.7935 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.7856
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Pass  33: suminf.    1.57671 (15) obj. -51.2537 iterations 0
Cbc0038I Pass  34: suminf.    1.20181 (11) obj. -34.7856 iterations 25
Cbc0038I Pass  35: suminf.    1.20181 (11) obj. -34.7856 iterations 1
Cbc0038I Pass  36: suminf.    1.42441 (8) obj. -34.7856 iterations 12
Cbc0038I Pass  37: suminf.    1.42248 (6) obj. -34.7856 iterations 2
Cbc0038I Pass  38: suminf.    1.15758 (4) obj. -34.7856 iterations 5
Cbc0038I Pass  39: suminf.    1.15758 (4) obj. -34.7856 iterations 3
Cbc0038I Pass  40: suminf.    1.27338 (4) obj. -34.7856 iterations 5
Cbc0038I Pass  41: suminf.    1.26708 (6) obj. -34.7856 iterations 4
Cbc0038I Pass  42: suminf.    1.15630 (6) obj. -34.7856 iterations 4
Cbc0038I Pass  43: suminf.    2.10718 (12) obj. -34.7856 iterations 20
Cbc0038I Pass  44: suminf.    1.76267 (10) obj. -34.7856 iterations 3
Cbc0038I Pass  45: suminf.    1.25396 (7) obj. -36.948 iterations 6
Cbc0038I Pass  46: suminf.    1.65002 (10) obj. -34.7856 iterations 14
Cbc0038I Pass  47: suminf.    1.60650 (8) obj. -34.7856 iterations 1
Cbc0038I Pass  48: suminf.    1.89409 (10) obj. -34.7856 iterations 3
Cbc0038I Pass  49: suminf.    1.83060 (8) obj. -34.7856 iterations 2
Cbc0038I Pass  50: suminf.    1.65002 (10) obj. -34.7856 iterations 4
Cbc0038I Pass  51: suminf.    3.06525 (15) obj. -34.7856 iterations 23
Cbc0038I Pass  52: suminf.    1.85319 (11) obj. -34.7856 iterations 3
Cbc0038I Pass  53: suminf.    1.67867 (11) obj. -39.0501 iterations 2
Cbc0038I Pass  54: suminf.    1.00432 (6) obj. -34.7856 iterations 14
Cbc0038I Pass  55: suminf.    0.76891 (6) obj. -34.9062 iterations 4
Cbc0038I Pass  56: suminf.    1.72414 (10) obj. -34.7856 iterations 6
Cbc0038I Pass  57: suminf.    1.72414 (10) obj. -34.7856 iterations 0
Cbc0038I Pass  58: suminf.    0.89462 (6) obj. -34.7856 iterations 13
Cbc0038I Pass  59: suminf.    0.88929 (6) obj. -34.7856 iterations 2
Cbc0038I Pass  60: suminf.    1.05101 (6) obj. -34.7856 iterations 2
Cbc0038I Pass  61: suminf.    1.05101 (6) obj. -34.7856 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 34 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -23.7935 - took 0.05 seconds
Cbc0012I Integer solution of -23.79348 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 52 rows 59 columns, reduced to 14 rows 17 columns
Cbc0031I 29 added rows had average density of 17.448276
Cbc0013I At root node, 29 cuts changed objective from -78.753535 to -36.656491 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3672 row cuts average 6.1 elements, 4 column cuts (4 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1106 row cuts average 50.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 311 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 280 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.735 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.79348 best solution, best possible -36.656491 (1.76 seconds)
Cbc0012I Integer solution of -28.003219 found by DiveCoefficient after 2822 iterations and 4 nodes (1.90 seconds)
Cbc0012I Integer solution of -29.47957 found by rounding after 3033 iterations and 9 nodes (1.92 seconds)
Cbc0001I Search completed - best objective -29.47957, took 3071 iterations and 10 nodes (1.92 seconds)
Cbc0032I Strong branching done 228 times (3875 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.93

