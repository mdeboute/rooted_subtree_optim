Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-14) rows, 29 (-4) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 0.000192957 - average 3.78348e-06, 7 fixed columns
Coin0506I Presolve 36 (-15) rows, 21 (-8) columns and 107 (-46) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Coin0511I After Postsolve, objective 95.216163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Coin0511I After Postsolve, objective 95.216163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.21616298 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.260%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.32584
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.3783 iterations 17
Cbc0038I Solution found of -43.3783
Cbc0038I Relaxing continuous gives -43.3783
Cbc0038I Rounding solution of -55.0331 is better than previous of -43.3783

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 16 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -55.0331 to -58.1263 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.1324
Cbc0038I Pass   2: suminf.    0.66988 (2) obj. -61.1324 iterations 3
Cbc0038I Pass   3: suminf.    0.46250 (1) obj. -68.9216 iterations 3
Cbc0038I Pass   4: suminf.    0.31005 (1) obj. -61.1324 iterations 1
Cbc0038I Pass   5: suminf.    0.69716 (4) obj. -61.1324 iterations 9
Cbc0038I Pass   6: suminf.    0.69716 (4) obj. -61.1324 iterations 0
Cbc0038I Pass   7: suminf.    0.85437 (2) obj. -62.0191 iterations 6
Cbc0038I Pass   8: suminf.    0.37134 (1) obj. -61.1324 iterations 3
Cbc0038I Pass   9: suminf.    0.48889 (1) obj. -67.1386 iterations 1
Cbc0038I Pass  10: suminf.    0.28750 (1) obj. -67.2398 iterations 5
Cbc0038I Pass  11: suminf.    0.16797 (1) obj. -61.1324 iterations 1
Cbc0038I Pass  12: suminf.    0.28750 (1) obj. -67.2398 iterations 1
Cbc0038I Pass  13: suminf.    0.76965 (3) obj. -61.1324 iterations 8
Cbc0038I Pass  14: suminf.    0.45327 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  15: suminf.    0.42500 (1) obj. -61.1324 iterations 2
Cbc0038I Pass  16: suminf.    0.34920 (1) obj. -61.1324 iterations 1
Cbc0038I Pass  17: suminf.    0.42500 (1) obj. -65.0055 iterations 1
Cbc0038I Pass  18: suminf.    1.58766 (6) obj. -61.1324 iterations 11
Cbc0038I Pass  19: suminf.    1.56121 (6) obj. -61.1324 iterations 2
Cbc0038I Pass  20: suminf.    1.09139 (4) obj. -61.1324 iterations 7
Cbc0038I Pass  21: suminf.    0.86056 (4) obj. -61.1324 iterations 2
Cbc0038I Pass  22: suminf.    0.36894 (2) obj. -61.1324 iterations 5
Cbc0038I Pass  23: suminf.    0.36325 (2) obj. -61.1324 iterations 1
Cbc0038I Pass  24: suminf.    0.38736 (1) obj. -61.1324 iterations 2
Cbc0038I Pass  25: suminf.    0.30000 (1) obj. -65.5959 iterations 1
Cbc0038I Pass  26: suminf.    1.99368 (5) obj. -61.1324 iterations 6
Cbc0038I Pass  27: suminf.    1.38262 (4) obj. -61.1324 iterations 3
Cbc0038I Pass  28: suminf.    1.10097 (4) obj. -61.1324 iterations 3
Cbc0038I Pass  29: suminf.    0.92533 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  30: suminf.    0.83569 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  31: suminf.    0.46209 (2) obj. -61.1324 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 32 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -58.1263 to -58.8423 (0.04 seconds)
Cbc0038I Round again with cutoff of -66.5433
Cbc0038I Pass  31: suminf.    0.87404 (2) obj. -66.5433 iterations 0
Cbc0038I Pass  32: suminf.    0.46250 (1) obj. -68.9216 iterations 3
Cbc0038I Pass  33: suminf.    0.41595 (1) obj. -66.5433 iterations 1
Cbc0038I Pass  34: suminf.    3.69906 (10) obj. -66.5433 iterations 16
Cbc0038I Pass  35: suminf.    1.88073 (6) obj. -66.5433 iterations 11
Cbc0038I Pass  36: suminf.    0.63348 (3) obj. -66.5433 iterations 5
Cbc0038I Pass  37: suminf.    0.99541 (3) obj. -66.5433 iterations 4
Cbc0038I Pass  38: suminf.    0.64008 (2) obj. -66.5433 iterations 2
Cbc0038I Pass  39: suminf.    0.63355 (2) obj. -66.5433 iterations 1
Cbc0038I Pass  40: suminf.    0.97639 (4) obj. -66.5433 iterations 10
Cbc0038I Pass  41: suminf.    0.97639 (4) obj. -66.5433 iterations 1
Cbc0038I Pass  42: suminf.    1.29080 (4) obj. -66.5433 iterations 3
Cbc0038I Pass  43: suminf.    0.88195 (3) obj. -66.5433 iterations 1
Cbc0038I Pass  44: suminf.    1.95117 (6) obj. -66.5433 iterations 10
Cbc0038I Pass  45: suminf.    1.00010 (5) obj. -66.5433 iterations 5
Cbc0038I Pass  46: suminf.    1.57679 (6) obj. -66.5433 iterations 6
Cbc0038I Pass  47: suminf.    1.50329 (6) obj. -66.5433 iterations 2
Cbc0038I Pass  48: suminf.    0.85356 (4) obj. -66.5433 iterations 5
Cbc0038I Pass  49: suminf.    0.53402 (2) obj. -66.5433 iterations 3
Cbc0038I Pass  50: suminf.    0.64634 (2) obj. -66.5433 iterations 1
Cbc0038I Pass  51: suminf.    1.12994 (3) obj. -66.5433 iterations 9
Cbc0038I Pass  52: suminf.    0.49036 (2) obj. -66.5433 iterations 4
Cbc0038I Pass  53: suminf.    0.32500 (1) obj. -66.5433 iterations 2
Cbc0038I Pass  54: suminf.    0.23473 (1) obj. -66.5433 iterations 1
Cbc0038I Pass  55: suminf.    2.09100 (9) obj. -66.5433 iterations 16
Cbc0038I Pass  56: suminf.    1.57053 (4) obj. -66.5433 iterations 8
Cbc0038I Pass  57: suminf.    1.29235 (4) obj. -66.5433 iterations 2
Cbc0038I Pass  58: suminf.    1.16622 (4) obj. -66.5433 iterations 2
Cbc0038I Pass  59: suminf.    1.77761 (6) obj. -66.5433 iterations 5
Cbc0038I Pass  60: suminf.    1.33257 (6) obj. -66.5433 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 46 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -58.8423 - took 0.07 seconds
Cbc0012I Integer solution of -58.842297 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 23 rows 17 columns
Cbc0031I 9 added rows had average density of 22.888889
Cbc0013I At root node, 9 cuts changed objective from -88.18671 to -76.101895 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 783 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 483 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0004I Integer solution of -59.468867 found after 2340 iterations and 9 nodes (0.24 seconds)
Cbc0001I Search completed - best objective -59.46886699999999, took 2738 iterations and 20 nodes (0.27 seconds)
Cbc0032I Strong branching done 228 times (1630 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-19) rows, 50 (-12) columns and 470 (-178) elements
Clp1000I sum of infeasibilities 1.99109e-06 - average 4.42465e-08, 31 fixed columns
Coin0506I Presolve 14 (-31) rows, 18 (-32) columns and 59 (-411) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 74.094787
Clp0000I Optimal - objective value 74.094787
Coin0511I After Postsolve, objective 74.094787, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4159563 - largest nonzero change 2.1851722e-05 ( 0.0015420975%) - largest zero change 2.6550898e-05
Clp0000I Optimal - objective value 107.95837
Clp0000I Optimal - objective value 107.95837
Clp0000I Optimal - objective value 107.95837
Coin0511I After Postsolve, objective 107.95837, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.9583721 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 48 columns (48 integer (48 of which binary)) and 448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.192%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.16751
Cbc0038I Pass   1: suminf.    0.50076 (6) obj. -48.8775 iterations 13
Cbc0038I Pass   2: suminf.    0.50076 (6) obj. -48.8775 iterations 1
Cbc0038I Solution found of -43.3783
Cbc0038I Rounding solution of -55.0331 is better than previous of -43.3783

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -58.3351
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.59575 (17) obj. -58.3351 iterations 2
Cbc0038I Pass   4: suminf.    1.48926 (4) obj. -58.3351 iterations 24
Cbc0038I Pass   5: suminf.    0.56411 (2) obj. -58.3351 iterations 4
Cbc0038I Pass   6: suminf.    0.54725 (2) obj. -58.3351 iterations 1
Cbc0038I Pass   7: suminf.    0.76253 (3) obj. -58.9284 iterations 4
Cbc0038I Pass   8: suminf.    0.32680 (2) obj. -63.1155 iterations 2
Cbc0038I Pass   9: suminf.    0.45996 (2) obj. -58.3351 iterations 4
Cbc0038I Pass  10: suminf.    0.14706 (1) obj. -62.2952 iterations 3
Cbc0038I Pass  11: suminf.    0.14706 (1) obj. -62.2952 iterations 0
Cbc0038I Pass  12: suminf.    2.23210 (10) obj. -58.3351 iterations 15
Cbc0038I Pass  13: suminf.    2.00776 (9) obj. -58.3351 iterations 3
Cbc0038I Pass  14: suminf.    1.68391 (8) obj. -58.727 iterations 3
Cbc0038I Pass  15: suminf.    1.01266 (4) obj. -58.3351 iterations 14
Cbc0038I Pass  16: suminf.    0.91051 (3) obj. -58.3351 iterations 3
Cbc0038I Pass  17: suminf.    1.53005 (4) obj. -58.3351 iterations 6
Cbc0038I Pass  18: suminf.    0.92354 (3) obj. -58.3351 iterations 5
Cbc0038I Pass  19: suminf.    0.92354 (3) obj. -58.3351 iterations 0
Cbc0038I Pass  20: suminf.    1.43831 (4) obj. -58.3351 iterations 6
Cbc0038I Pass  21: suminf.    0.96222 (4) obj. -58.3351 iterations 4
Cbc0038I Pass  22: suminf.    0.92354 (3) obj. -58.3351 iterations 3
Cbc0038I Pass  23: suminf.    1.59491 (8) obj. -58.3351 iterations 9
Cbc0038I Pass  24: suminf.    1.43313 (7) obj. -58.3351 iterations 2
Cbc0038I Pass  25: suminf.    0.79521 (6) obj. -58.3351 iterations 1
Cbc0038I Pass  26: suminf.    0.92944 (5) obj. -58.3351 iterations 7
Cbc0038I Pass  27: suminf.    0.76176 (4) obj. -58.3351 iterations 4
Cbc0038I Pass  28: suminf.    0.44475 (2) obj. -58.3351 iterations 4
Cbc0038I Pass  29: suminf.    0.44475 (2) obj. -58.3351 iterations 0
Cbc0038I Pass  30: suminf.    0.90880 (2) obj. -58.3351 iterations 1
Cbc0038I Pass  31: suminf.    0.75096 (2) obj. -62.683 iterations 1
Cbc0038I Pass  32: suminf.    2.36414 (8) obj. -58.3351 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 26 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -43.3783 to -58.8423 (0.09 seconds)
Cbc0038I Round again with cutoff of -64.6845
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.65952 (17) obj. -64.6845 iterations 0
Cbc0038I Pass  33: suminf.    0.96591 (9) obj. -64.6845 iterations 22
Cbc0038I Pass  34: suminf.    1.33112 (4) obj. -64.6845 iterations 5
Cbc0038I Pass  35: suminf.    1.03552 (6) obj. -64.6845 iterations 2
Cbc0038I Pass  36: suminf.    1.43260 (4) obj. -64.6845 iterations 4
Cbc0038I Pass  37: suminf.    1.36746 (4) obj. -64.6845 iterations 3
Cbc0038I Pass  38: suminf.    0.65998 (3) obj. -64.6845 iterations 5
Cbc0038I Pass  39: suminf.    0.65998 (3) obj. -64.6845 iterations 0
Cbc0038I Pass  40: suminf.    1.06073 (3) obj. -64.6845 iterations 3
Cbc0038I Pass  41: suminf.    0.83676 (4) obj. -64.6845 iterations 1
Cbc0038I Pass  42: suminf.    1.33557 (4) obj. -64.6845 iterations 2
Cbc0038I Pass  43: suminf.    1.33088 (4) obj. -64.6845 iterations 1
Cbc0038I Pass  44: suminf.    0.71827 (3) obj. -64.6845 iterations 5
Cbc0038I Pass  45: suminf.    0.71827 (3) obj. -64.6845 iterations 1
Cbc0038I Pass  46: suminf.    1.02017 (3) obj. -64.6845 iterations 5
Cbc0038I Pass  47: suminf.    0.65998 (3) obj. -64.6845 iterations 2
Cbc0038I Pass  48: suminf.    0.65998 (3) obj. -64.6845 iterations 0
Cbc0038I Pass  49: suminf.    1.06073 (3) obj. -64.6845 iterations 3
Cbc0038I Pass  50: suminf.    0.83676 (4) obj. -64.6845 iterations 1
Cbc0038I Pass  51: suminf.    1.33557 (4) obj. -64.6845 iterations 2
Cbc0038I Pass  52: suminf.    1.33088 (4) obj. -64.6845 iterations 1
Cbc0038I Pass  53: suminf.    0.71827 (3) obj. -64.6845 iterations 5
Cbc0038I Pass  54: suminf.    0.71827 (3) obj. -64.6845 iterations 1
Cbc0038I Pass  55: suminf.    1.02017 (3) obj. -64.6845 iterations 5
Cbc0038I Pass  56: suminf.    0.65998 (3) obj. -64.6845 iterations 2
Cbc0038I Pass  57: suminf.    0.65998 (3) obj. -64.6845 iterations 0
Cbc0038I Pass  58: suminf.    1.06073 (3) obj. -64.6845 iterations 3
Cbc0038I Pass  59: suminf.    0.83676 (4) obj. -64.6845 iterations 1
Cbc0038I Pass  60: suminf.    1.33557 (4) obj. -64.6845 iterations 2
Cbc0038I Pass  61: suminf.    1.33088 (4) obj. -64.6845 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -58.8423 - took 0.08 seconds
Cbc0012I Integer solution of -58.84229 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 43 rows 48 columns, reduced to 15 rows 19 columns
Cbc0031I 16 added rows had average density of 19.875
Cbc0013I At root node, 16 cuts changed objective from -88.052822 to -71.238107 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1430 row cuts average 2.1 elements, 7 column cuts (7 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 520 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 58 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 214 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 311 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 53 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -58.84229 best solution, best possible -71.238107 (1.63 seconds)
Cbc0012I Integer solution of -59.468867 found by rounding after 2005 iterations and 3 nodes (1.90 seconds)
Cbc0010I After 7 nodes, 2 on tree, -59.468867 best solution, best possible -70.355901 (2.34 seconds)
Cbc0010I After 13 nodes, 6 on tree, -59.468867 best solution, best possible -70.355901 (3.09 seconds)
Cbc0001I Search completed - best objective -59.46886699999999, took 3538 iterations and 30 nodes (3.78 seconds)
Cbc0032I Strong branching done 422 times (3532 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 32 variables fixed on reduced cost
Total time (CPU seconds):       2.41   (Wallclock seconds):       3.79

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-14) rows, 29 (-4) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 0.000192957 - average 3.78348e-06, 7 fixed columns
Coin0506I Presolve 36 (-15) rows, 21 (-8) columns and 107 (-46) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Coin0511I After Postsolve, objective 95.216163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Coin0511I After Postsolve, objective 95.216163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.21616298 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.260%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.32584
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.3783 iterations 17
Cbc0038I Solution found of -43.3783
Cbc0038I Relaxing continuous gives -43.3783
Cbc0038I Rounding solution of -55.0331 is better than previous of -43.3783

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 16 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -55.0331 to -58.1263 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.1324
Cbc0038I Pass   2: suminf.    0.66988 (2) obj. -61.1324 iterations 3
Cbc0038I Pass   3: suminf.    0.46250 (1) obj. -68.9216 iterations 3
Cbc0038I Pass   4: suminf.    0.31005 (1) obj. -61.1324 iterations 1
Cbc0038I Pass   5: suminf.    0.69716 (4) obj. -61.1324 iterations 9
Cbc0038I Pass   6: suminf.    0.69716 (4) obj. -61.1324 iterations 0
Cbc0038I Pass   7: suminf.    0.85437 (2) obj. -62.0191 iterations 6
Cbc0038I Pass   8: suminf.    0.37134 (1) obj. -61.1324 iterations 3
Cbc0038I Pass   9: suminf.    0.48889 (1) obj. -67.1386 iterations 1
Cbc0038I Pass  10: suminf.    0.28750 (1) obj. -67.2398 iterations 5
Cbc0038I Pass  11: suminf.    0.16797 (1) obj. -61.1324 iterations 1
Cbc0038I Pass  12: suminf.    0.28750 (1) obj. -67.2398 iterations 1
Cbc0038I Pass  13: suminf.    0.76965 (3) obj. -61.1324 iterations 8
Cbc0038I Pass  14: suminf.    0.45327 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  15: suminf.    0.42500 (1) obj. -61.1324 iterations 2
Cbc0038I Pass  16: suminf.    0.34920 (1) obj. -61.1324 iterations 1
Cbc0038I Pass  17: suminf.    0.42500 (1) obj. -65.0055 iterations 1
Cbc0038I Pass  18: suminf.    1.58766 (6) obj. -61.1324 iterations 11
Cbc0038I Pass  19: suminf.    1.56121 (6) obj. -61.1324 iterations 2
Cbc0038I Pass  20: suminf.    1.09139 (4) obj. -61.1324 iterations 7
Cbc0038I Pass  21: suminf.    0.86056 (4) obj. -61.1324 iterations 2
Cbc0038I Pass  22: suminf.    0.36894 (2) obj. -61.1324 iterations 5
Cbc0038I Pass  23: suminf.    0.36325 (2) obj. -61.1324 iterations 1
Cbc0038I Pass  24: suminf.    0.38736 (1) obj. -61.1324 iterations 2
Cbc0038I Pass  25: suminf.    0.30000 (1) obj. -65.5959 iterations 1
Cbc0038I Pass  26: suminf.    1.99368 (5) obj. -61.1324 iterations 6
Cbc0038I Pass  27: suminf.    1.38262 (4) obj. -61.1324 iterations 3
Cbc0038I Pass  28: suminf.    1.10097 (4) obj. -61.1324 iterations 3
Cbc0038I Pass  29: suminf.    0.92533 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  30: suminf.    0.83569 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  31: suminf.    0.46209 (2) obj. -61.1324 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 32 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -58.1263 to -58.8423 (0.04 seconds)
Cbc0038I Round again with cutoff of -66.5433
Cbc0038I Pass  31: suminf.    0.87404 (2) obj. -66.5433 iterations 0
Cbc0038I Pass  32: suminf.    0.46250 (1) obj. -68.9216 iterations 3
Cbc0038I Pass  33: suminf.    0.41595 (1) obj. -66.5433 iterations 1
Cbc0038I Pass  34: suminf.    3.69906 (10) obj. -66.5433 iterations 16
Cbc0038I Pass  35: suminf.    1.88073 (6) obj. -66.5433 iterations 11
Cbc0038I Pass  36: suminf.    0.63348 (3) obj. -66.5433 iterations 5
Cbc0038I Pass  37: suminf.    0.99541 (3) obj. -66.5433 iterations 4
Cbc0038I Pass  38: suminf.    0.64008 (2) obj. -66.5433 iterations 2
Cbc0038I Pass  39: suminf.    0.63355 (2) obj. -66.5433 iterations 1
Cbc0038I Pass  40: suminf.    0.97639 (4) obj. -66.5433 iterations 10
Cbc0038I Pass  41: suminf.    0.97639 (4) obj. -66.5433 iterations 1
Cbc0038I Pass  42: suminf.    1.29080 (4) obj. -66.5433 iterations 3
Cbc0038I Pass  43: suminf.    0.88195 (3) obj. -66.5433 iterations 1
Cbc0038I Pass  44: suminf.    1.95117 (6) obj. -66.5433 iterations 10
Cbc0038I Pass  45: suminf.    1.00010 (5) obj. -66.5433 iterations 5
Cbc0038I Pass  46: suminf.    1.57679 (6) obj. -66.5433 iterations 6
Cbc0038I Pass  47: suminf.    1.50329 (6) obj. -66.5433 iterations 2
Cbc0038I Pass  48: suminf.    0.85356 (4) obj. -66.5433 iterations 5
Cbc0038I Pass  49: suminf.    0.53402 (2) obj. -66.5433 iterations 3
Cbc0038I Pass  50: suminf.    0.64634 (2) obj. -66.5433 iterations 1
Cbc0038I Pass  51: suminf.    1.12994 (3) obj. -66.5433 iterations 9
Cbc0038I Pass  52: suminf.    0.49036 (2) obj. -66.5433 iterations 4
Cbc0038I Pass  53: suminf.    0.32500 (1) obj. -66.5433 iterations 2
Cbc0038I Pass  54: suminf.    0.23473 (1) obj. -66.5433 iterations 1
Cbc0038I Pass  55: suminf.    2.09100 (9) obj. -66.5433 iterations 16
Cbc0038I Pass  56: suminf.    1.57053 (4) obj. -66.5433 iterations 8
Cbc0038I Pass  57: suminf.    1.29235 (4) obj. -66.5433 iterations 2
Cbc0038I Pass  58: suminf.    1.16622 (4) obj. -66.5433 iterations 2
Cbc0038I Pass  59: suminf.    1.77761 (6) obj. -66.5433 iterations 5
Cbc0038I Pass  60: suminf.    1.33257 (6) obj. -66.5433 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 46 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -58.8423 - took 0.05 seconds
Cbc0012I Integer solution of -58.842297 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 23 rows 17 columns
Cbc0031I 9 added rows had average density of 22.888889
Cbc0013I At root node, 9 cuts changed objective from -88.18671 to -76.101895 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 783 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 483 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0004I Integer solution of -59.468867 found after 2340 iterations and 9 nodes (0.26 seconds)
Cbc0001I Search completed - best objective -59.46886699999999, took 2738 iterations and 20 nodes (0.29 seconds)
Cbc0032I Strong branching done 228 times (1630 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 48 (-15) columns and 435 (-214) elements
Clp1000I sum of infeasibilities 3.96269e-06 - average 9.21556e-08, 10 fixed columns
Coin0506I Presolve 32 (-11) rows, 36 (-12) columns and 246 (-189) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 1.6595178 - largest nonzero change 1.1166011e-05 ( 0.00089819337%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 107.95837
Clp0000I Optimal - objective value 107.95837
Coin0511I After Postsolve, objective 107.95837, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 107.95837
Clp0000I Optimal - objective value 107.95837
Clp0000I Optimal - objective value 107.95837
Coin0511I After Postsolve, objective 107.95837, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.9583721 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 48 columns (48 integer (48 of which binary)) and 448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.192%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.26675
Cbc0038I Pass   1: suminf.    0.54280 (6) obj. -48.8355 iterations 16
Cbc0038I Pass   2: suminf.    0.54280 (6) obj. -48.8355 iterations 2
Cbc0038I Solution found of -43.3783
Cbc0038I Rounding solution of -55.0331 is better than previous of -43.3783

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -58.3283
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.67555 (17) obj. -58.3283 iterations 3
Cbc0038I Pass   4: suminf.    1.48870 (4) obj. -58.3283 iterations 24
Cbc0038I Pass   5: suminf.    0.56414 (2) obj. -58.3283 iterations 4
Cbc0038I Pass   6: suminf.    0.54687 (2) obj. -58.3283 iterations 1
Cbc0038I Pass   7: suminf.    0.77647 (3) obj. -58.9145 iterations 4
Cbc0038I Pass   8: suminf.    0.34118 (2) obj. -63.1011 iterations 2
Cbc0038I Pass   9: suminf.    0.45941 (2) obj. -58.3283 iterations 4
Cbc0038I Pass  10: suminf.    0.14706 (1) obj. -62.2952 iterations 3
Cbc0038I Pass  11: suminf.    0.14706 (1) obj. -62.2952 iterations 0
Cbc0038I Pass  12: suminf.    2.28155 (10) obj. -58.3283 iterations 14
Cbc0038I Pass  13: suminf.    2.28155 (10) obj. -58.3283 iterations 2
Cbc0038I Pass  14: suminf.    1.01364 (4) obj. -58.3283 iterations 14
Cbc0038I Pass  15: suminf.    0.90974 (3) obj. -58.3283 iterations 3
Cbc0038I Pass  16: suminf.    1.52976 (4) obj. -58.3283 iterations 6
Cbc0038I Pass  17: suminf.    0.92244 (3) obj. -58.3283 iterations 5
Cbc0038I Pass  18: suminf.    0.92244 (3) obj. -58.3283 iterations 0
Cbc0038I Pass  19: suminf.    1.43866 (4) obj. -58.3283 iterations 6
Cbc0038I Pass  20: suminf.    0.96193 (4) obj. -58.3283 iterations 4
Cbc0038I Pass  21: suminf.    0.92244 (3) obj. -58.3283 iterations 3
Cbc0038I Pass  22: suminf.    2.14460 (7) obj. -58.3283 iterations 8
Cbc0038I Pass  23: suminf.    2.14460 (7) obj. -58.3283 iterations 0
Cbc0038I Pass  24: suminf.    1.32703 (4) obj. -58.3283 iterations 10
Cbc0038I Pass  25: suminf.    1.07179 (3) obj. -58.3283 iterations 5
Cbc0038I Pass  26: suminf.    1.07179 (3) obj. -58.3283 iterations 0
Cbc0038I Pass  27: suminf.    0.49881 (3) obj. -58.3283 iterations 6
Cbc0038I Pass  28: suminf.    0.09391 (2) obj. -58.3283 iterations 1
Cbc0038I Pass  29: suminf.    0.42513 (2) obj. -58.3283 iterations 3
Cbc0038I Pass  30: suminf.    1.37892 (7) obj. -59.7203 iterations 17
Cbc0038I Pass  31: suminf.    1.06529 (7) obj. -58.3283 iterations 4
Cbc0038I Pass  32: suminf.    0.67505 (4) obj. -58.3283 iterations 14
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 28 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -55.0331 to -58.8423 (0.06 seconds)
Cbc0038I Round again with cutoff of -64.6708
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.76425 (17) obj. -64.6708 iterations 0
Cbc0038I Pass  33: suminf.    0.97884 (8) obj. -64.6708 iterations 21
Cbc0038I Pass  34: suminf.    1.32769 (4) obj. -64.6708 iterations 6
Cbc0038I Pass  35: suminf.    1.03422 (6) obj. -64.6708 iterations 2
Cbc0038I Pass  36: suminf.    1.43291 (4) obj. -64.6708 iterations 4
Cbc0038I Pass  37: suminf.    1.36566 (4) obj. -64.6708 iterations 3
Cbc0038I Pass  38: suminf.    0.65763 (3) obj. -64.6708 iterations 5
Cbc0038I Pass  39: suminf.    0.65763 (3) obj. -64.6708 iterations 0
Cbc0038I Pass  40: suminf.    1.06043 (3) obj. -64.6708 iterations 3
Cbc0038I Pass  41: suminf.    0.83618 (4) obj. -64.6708 iterations 5
Cbc0038I Pass  42: suminf.    1.33207 (4) obj. -64.6708 iterations 2
Cbc0038I Pass  43: suminf.    1.32746 (4) obj. -64.6708 iterations 1
Cbc0038I Pass  44: suminf.    0.71717 (3) obj. -64.6708 iterations 5
Cbc0038I Pass  45: suminf.    0.71717 (3) obj. -64.6708 iterations 1
Cbc0038I Pass  46: suminf.    1.01428 (3) obj. -64.6708 iterations 5
Cbc0038I Pass  47: suminf.    0.65763 (3) obj. -64.6708 iterations 2
Cbc0038I Pass  48: suminf.    0.65763 (3) obj. -64.6708 iterations 0
Cbc0038I Pass  49: suminf.    1.06043 (3) obj. -64.6708 iterations 3
Cbc0038I Pass  50: suminf.    0.83618 (4) obj. -64.6708 iterations 5
Cbc0038I Pass  51: suminf.    1.33207 (4) obj. -64.6708 iterations 2
Cbc0038I Pass  52: suminf.    1.32746 (4) obj. -64.6708 iterations 1
Cbc0038I Pass  53: suminf.    0.71717 (3) obj. -64.6708 iterations 5
Cbc0038I Pass  54: suminf.    0.71717 (3) obj. -64.6708 iterations 1
Cbc0038I Pass  55: suminf.    1.01428 (3) obj. -64.6708 iterations 5
Cbc0038I Pass  56: suminf.    0.65763 (3) obj. -64.6708 iterations 2
Cbc0038I Pass  57: suminf.    0.65763 (3) obj. -64.6708 iterations 0
Cbc0038I Pass  58: suminf.    1.06043 (3) obj. -64.6708 iterations 3
Cbc0038I Pass  59: suminf.    0.83618 (4) obj. -64.6708 iterations 5
Cbc0038I Pass  60: suminf.    1.33207 (4) obj. -64.6708 iterations 2
Cbc0038I Pass  61: suminf.    1.32746 (4) obj. -64.6708 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -58.8423 - took 0.05 seconds
Cbc0012I Integer solution of -58.84229 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 43 rows 48 columns, reduced to 15 rows 19 columns
Cbc0031I 20 added rows had average density of 18.05
Cbc0013I At root node, 20 cuts changed objective from -87.984282 to -70.910978 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1697 row cuts average 2.1 elements, 7 column cuts (7 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 482 row cuts average 36.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 61 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 17 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.778 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -58.84229 best solution, best possible -70.910978 (1.68 seconds)
Cbc0012I Integer solution of -59.468867 found by rounding after 2036 iterations and 5 nodes (2.01 seconds)
Cbc0010I After 9 nodes, 4 on tree, -59.468867 best solution, best possible -70.908609 (2.49 seconds)
Cbc0010I After 21 nodes, 6 on tree, -59.468867 best solution, best possible -70.908609 (3.20 seconds)
Cbc0001I Search completed - best objective -59.46886699999999, took 3129 iterations and 30 nodes (3.51 seconds)
Cbc0032I Strong branching done 426 times (3552 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 46 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       3.51

