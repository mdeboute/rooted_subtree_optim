Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 66 (-12) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 7.87416e-05 - average 6.8471e-07, 12 fixed columns
Coin0506I Presolve 87 (-28) rows, 52 (-14) columns and 272 (-83) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.254096 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Coin0511I After Postsolve, objective 89.669294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25630628 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Coin0511I After Postsolve, objective 89.669294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.66929422 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 66 columns (65 integer (65 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.37692
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.5224 iterations 40
Cbc0038I Solution found of -29.5224
Cbc0038I Relaxing continuous gives -29.5224
Cbc0038I Rounding solution of -41.8176 is better than previous of -29.5224

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 39 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -41.8176 to -59.2362 (0.07 seconds)
Cbc0038I Round again with cutoff of -62.2796
Cbc0038I Pass   2: suminf.    1.81985 (7) obj. -62.2796 iterations 11
Cbc0038I Pass   3: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass   4: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass   5: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass   6: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass   7: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass   8: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass   9: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  10: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  11: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  12: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  13: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  14: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  15: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  16: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  17: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  18: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  19: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  20: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  21: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  22: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  23: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  24: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  25: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  26: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  27: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  28: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  29: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  30: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  31: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 40 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -59.2362 to -61.2808 (0.13 seconds)
Cbc0038I Round again with cutoff of -67.7576
Cbc0038I Pass  31: suminf.    2.18207 (8) obj. -67.7576 iterations 1
Cbc0038I Pass  32: suminf.    1.34375 (6) obj. -67.7576 iterations 13
Cbc0038I Pass  33: suminf.    1.08137 (5) obj. -67.7576 iterations 5
Cbc0038I Pass  34: suminf.    0.85148 (3) obj. -67.7576 iterations 8
Cbc0038I Pass  35: suminf.    0.67043 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  36: suminf.    1.10885 (6) obj. -67.7576 iterations 8
Cbc0038I Pass  37: suminf.    2.08666 (6) obj. -67.7576 iterations 7
Cbc0038I Pass  38: suminf.    0.85973 (4) obj. -67.7576 iterations 6
Cbc0038I Pass  39: suminf.    1.32369 (5) obj. -67.7576 iterations 5
Cbc0038I Pass  40: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  41: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  42: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  43: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  44: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  45: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  46: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  47: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  48: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  49: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  50: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  51: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  52: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  53: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  54: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  55: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  56: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  57: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  58: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  59: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  60: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 40 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -61.2808 - took 0.15 seconds
Cbc0012I Integer solution of -61.28076 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 115 rows 66 columns, reduced to 39 rows 26 columns
Cbc0031I 18 added rows had average density of 41.5
Cbc0013I At root node, 18 cuts changed objective from -89.669294 to -80.63479 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5314 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 988 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 147 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0010I After 24 nodes, 8 on tree, -61.28076 best solution, best possible -80.63479 (0.67 seconds)
Cbc0012I Integer solution of -61.8165 found by DiveCoefficient after 4794 iterations and 31 nodes (0.68 seconds)
Cbc0001I Search completed - best objective -61.81649999999999, took 5007 iterations and 38 nodes (0.70 seconds)
Cbc0032I Strong branching done 494 times (7871 iterations), fathomed 5 nodes and fixed 31 variables
Cbc0035I Maximum depth 13, 179 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-59) rows, 110 (-42) columns and 1630 (-1673) elements
Clp1000I sum of infeasibilities 2.07761e-07 - average 2.18696e-09, 18 fixed columns
Coin0506I Presolve 79 (-16) rows, 92 (-18) columns and 1203 (-427) elements
Clp0006I 0  Obj 106.21043 Dual inf 11.26947 (92)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.0834627 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 116.74585
Clp0000I Optimal - objective value 116.74585
Coin0511I After Postsolve, objective 116.74585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 116.74585 Dual inf 0.90791458 (1)
Clp0014I Perturbing problem by 0.001% of 1.6406603 - largest nonzero change 1.0960059e-05 ( 0.00072896693%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 116.74585
Clp0000I Optimal - objective value 116.74585
Clp0000I Optimal - objective value 116.74585
Coin0511I After Postsolve, objective 116.74585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.7458544 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 110 columns (110 integer (110 of which binary)) and 1637 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.43774
Cbc0038I Pass   1: suminf.    1.69132 (30) obj. -78.6212 iterations 8
Cbc0038I Pass   2: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass   3: suminf.    0.09292 (3) obj. -41.1099 iterations 27
Cbc0038I Solution found of -38.2028
Cbc0038I Rounding solution of -44.0772 is better than previous of -38.2028

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 110 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -44.0772 to -52.9182 (0.03 seconds)
Cbc0038I Round again with cutoff of -58.4995
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass   5: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass   6: suminf.    0.87022 (19) obj. -61.0345 iterations 11
Cbc0038I Pass   7: suminf.    1.10747 (9) obj. -58.4995 iterations 25
Cbc0038I Pass   8: suminf.    0.98369 (10) obj. -58.4995 iterations 2
Cbc0038I Pass   9: suminf.    0.29226 (1) obj. -58.4995 iterations 18
Cbc0038I Pass  10: suminf.    0.29226 (1) obj. -58.4995 iterations 0
Cbc0038I Pass  11: suminf.    0.57971 (2) obj. -60.2132 iterations 2
Cbc0038I Pass  12: suminf.    1.02050 (11) obj. -58.4995 iterations 25
Cbc0038I Pass  13: suminf.    0.99617 (10) obj. -58.4995 iterations 10
Cbc0038I Pass  14: suminf.    0.99137 (3) obj. -58.4995 iterations 18
Cbc0038I Pass  15: suminf.    0.38552 (2) obj. -58.4995 iterations 4
Cbc0038I Pass  16: suminf.    0.97232 (3) obj. -58.4995 iterations 4
Cbc0038I Pass  17: suminf.    1.75222 (15) obj. -58.4995 iterations 28
Cbc0038I Pass  18: suminf.    1.70584 (14) obj. -60.5771 iterations 6
Cbc0038I Pass  19: suminf.    1.30510 (10) obj. -58.4995 iterations 16
Cbc0038I Pass  20: suminf.    1.02592 (7) obj. -58.4995 iterations 6
Cbc0038I Pass  21: suminf.    0.37014 (3) obj. -58.4995 iterations 9
Cbc0038I Pass  22: suminf.    0.30024 (3) obj. -58.779 iterations 3
Cbc0038I Pass  23: suminf.    0.48785 (6) obj. -58.4995 iterations 10
Cbc0038I Pass  24: suminf.    1.22432 (10) obj. -58.4995 iterations 20
Cbc0038I Pass  25: suminf.    1.11276 (9) obj. -58.4995 iterations 1
Cbc0038I Pass  26: suminf.    0.27981 (5) obj. -58.4995 iterations 15
Cbc0038I Pass  27: suminf.    0.23489 (5) obj. -58.4995 iterations 3
Cbc0038I Pass  28: suminf.    0.75424 (6) obj. -58.4995 iterations 4
Cbc0038I Pass  29: suminf.    0.69552 (7) obj. -58.4995 iterations 8
Cbc0038I Pass  30: suminf.    0.81491 (4) obj. -58.4995 iterations 12
Cbc0038I Pass  31: suminf.    0.70936 (5) obj. -58.4995 iterations 4
Cbc0038I Pass  32: suminf.    0.69444 (6) obj. -58.4995 iterations 4
Cbc0038I Pass  33: suminf.    0.68544 (5) obj. -58.4995 iterations 4
Cbc0038I Rounding solution of -56.7604 is better than previous of -52.9182

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 110 columns, reduced to 44 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -56.7604 to -61.1127 (0.07 seconds)
Cbc0038I Round again with cutoff of -70.6362
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass  34: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass  35: suminf.    1.42620 (13) obj. -70.6362 iterations 36
Cbc0038I Pass  36: suminf.    1.42620 (13) obj. -70.6362 iterations 0
Cbc0038I Pass  37: suminf.    0.61952 (5) obj. -70.6362 iterations 20
Cbc0038I Pass  38: suminf.    0.38404 (4) obj. -71.1145 iterations 5
Cbc0038I Pass  39: suminf.    0.62670 (5) obj. -70.6362 iterations 8
Cbc0038I Pass  40: suminf.    1.71723 (13) obj. -70.6362 iterations 20
Cbc0038I Pass  41: suminf.    1.29286 (12) obj. -70.6362 iterations 3
Cbc0038I Pass  42: suminf.    0.86087 (6) obj. -70.6362 iterations 17
Cbc0038I Pass  43: suminf.    0.86087 (6) obj. -70.6362 iterations 0
Cbc0038I Pass  44: suminf.    0.96004 (6) obj. -70.6362 iterations 6
Cbc0038I Pass  45: suminf.    0.55070 (5) obj. -71.6145 iterations 4
Cbc0038I Pass  46: suminf.    0.86087 (6) obj. -70.6362 iterations 7
Cbc0038I Pass  47: suminf.    1.75320 (11) obj. -70.6362 iterations 16
Cbc0038I Pass  48: suminf.    1.62906 (10) obj. -70.6362 iterations 8
Cbc0038I Pass  49: suminf.    1.04003 (9) obj. -70.6362 iterations 17
Cbc0038I Pass  50: suminf.    1.04003 (9) obj. -70.6362 iterations 0
Cbc0038I Pass  51: suminf.    1.54398 (8) obj. -70.6362 iterations 5
Cbc0038I Pass  52: suminf.    1.09664 (8) obj. -70.6362 iterations 6
Cbc0038I Pass  53: suminf.    0.61952 (6) obj. -70.6362 iterations 9
Cbc0038I Pass  54: suminf.    0.55372 (6) obj. -70.6362 iterations 4
Cbc0038I Pass  55: suminf.    0.61818 (6) obj. -70.6362 iterations 4
Cbc0038I Pass  56: suminf.    1.63150 (13) obj. -70.6362 iterations 12
Cbc0038I Pass  57: suminf.    1.39224 (11) obj. -70.6362 iterations 9
Cbc0038I Pass  58: suminf.    0.65914 (7) obj. -70.6362 iterations 11
Cbc0038I Pass  59: suminf.    1.74770 (12) obj. -70.6362 iterations 25
Cbc0038I Pass  60: suminf.    1.74770 (12) obj. -70.6362 iterations 3
Cbc0038I Pass  61: suminf.    0.62670 (6) obj. -70.6362 iterations 15
Cbc0038I Pass  62: suminf.    0.55372 (6) obj. -70.6362 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 110 columns, reduced to 44 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -61.1127 - took 0.09 seconds
Cbc0012I Integer solution of -61.11273 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 95 rows 110 columns, reduced to 26 rows 30 columns
Cbc0031I 49 added rows had average density of 34.714286
Cbc0013I At root node, 49 cuts changed objective from -108.72981 to -68.528136 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9896 row cuts average 7.2 elements, 1 column cuts (1 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1851 row cuts average 88.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 257 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1303 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 321 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.658 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.11273 best solution, best possible -68.528136 (2.23 seconds)
Cbc0004I Integer solution of -61.8165 found after 4872 iterations and 24 nodes (2.51 seconds)
Cbc0001I Search completed - best objective -61.81649999999999, took 5412 iterations and 36 nodes (2.54 seconds)
Cbc0032I Strong branching done 502 times (8232 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 14, 104 variables fixed on reduced cost
Total time (CPU seconds):       1.86   (Wallclock seconds):       2.55

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 66 (-12) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 7.87416e-05 - average 6.8471e-07, 12 fixed columns
Coin0506I Presolve 87 (-28) rows, 52 (-14) columns and 272 (-83) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.254096 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Coin0511I After Postsolve, objective 89.669294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25630628 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Coin0511I After Postsolve, objective 89.669294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.66929422 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 66 columns (65 integer (65 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.37692
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.5224 iterations 40
Cbc0038I Solution found of -29.5224
Cbc0038I Relaxing continuous gives -29.5224
Cbc0038I Rounding solution of -41.8176 is better than previous of -29.5224

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 39 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -41.8176 to -59.2362 (0.06 seconds)
Cbc0038I Round again with cutoff of -62.2796
Cbc0038I Pass   2: suminf.    1.81985 (7) obj. -62.2796 iterations 11
Cbc0038I Pass   3: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass   4: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass   5: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass   6: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass   7: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass   8: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass   9: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  10: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  11: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  12: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  13: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  14: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  15: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  16: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  17: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  18: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  19: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  20: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  21: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  22: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  23: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  24: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  25: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  26: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  27: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  28: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  29: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  30: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  31: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 40 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -59.2362 to -61.2808 (0.13 seconds)
Cbc0038I Round again with cutoff of -67.7576
Cbc0038I Pass  31: suminf.    2.18207 (8) obj. -67.7576 iterations 1
Cbc0038I Pass  32: suminf.    1.34375 (6) obj. -67.7576 iterations 13
Cbc0038I Pass  33: suminf.    1.08137 (5) obj. -67.7576 iterations 5
Cbc0038I Pass  34: suminf.    0.85148 (3) obj. -67.7576 iterations 8
Cbc0038I Pass  35: suminf.    0.67043 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  36: suminf.    1.10885 (6) obj. -67.7576 iterations 8
Cbc0038I Pass  37: suminf.    2.08666 (6) obj. -67.7576 iterations 7
Cbc0038I Pass  38: suminf.    0.85973 (4) obj. -67.7576 iterations 6
Cbc0038I Pass  39: suminf.    1.32369 (5) obj. -67.7576 iterations 5
Cbc0038I Pass  40: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  41: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  42: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  43: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  44: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  45: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  46: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  47: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  48: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  49: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  50: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  51: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  52: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  53: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  54: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  55: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  56: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  57: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  58: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  59: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  60: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 40 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -61.2808 - took 0.17 seconds
Cbc0012I Integer solution of -61.28076 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 115 rows 66 columns, reduced to 39 rows 26 columns
Cbc0031I 18 added rows had average density of 41.5
Cbc0013I At root node, 18 cuts changed objective from -89.669294 to -80.63479 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5314 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 988 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 147 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0012I Integer solution of -61.8165 found by DiveCoefficient after 4794 iterations and 31 nodes (0.68 seconds)
Cbc0010I After 33 nodes, 5 on tree, -61.8165 best solution, best possible -80.63479 (0.69 seconds)
Cbc0001I Search completed - best objective -61.81649999999999, took 5007 iterations and 38 nodes (0.70 seconds)
Cbc0032I Strong branching done 494 times (7871 iterations), fathomed 5 nodes and fixed 31 variables
Cbc0035I Maximum depth 13, 179 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 110 (-43) columns and 1630 (-1674) elements
Clp1000I sum of infeasibilities 2.07761e-07 - average 2.18696e-09, 18 fixed columns
Coin0506I Presolve 79 (-16) rows, 92 (-18) columns and 1203 (-427) elements
Clp0006I 0  Obj 106.21043 Dual inf 11.26947 (92)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.0834627 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 116.74585
Clp0000I Optimal - objective value 116.74585
Coin0511I After Postsolve, objective 116.74585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 116.74585 Dual inf 0.90791458 (1)
Clp0014I Perturbing problem by 0.001% of 1.6406603 - largest nonzero change 1.0960059e-05 ( 0.00072896693%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 116.74585
Clp0000I Optimal - objective value 116.74585
Clp0000I Optimal - objective value 116.74585
Coin0511I After Postsolve, objective 116.74585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.7458544 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 110 columns (110 integer (110 of which binary)) and 1637 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.43774
Cbc0038I Pass   1: suminf.    1.69132 (30) obj. -78.6212 iterations 8
Cbc0038I Pass   2: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass   3: suminf.    0.09292 (3) obj. -41.1099 iterations 27
Cbc0038I Solution found of -38.2028
Cbc0038I Rounding solution of -44.0772 is better than previous of -38.2028

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 110 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -44.0772 to -52.9182 (0.03 seconds)
Cbc0038I Round again with cutoff of -58.4995
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass   5: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass   6: suminf.    0.87022 (19) obj. -61.0345 iterations 11
Cbc0038I Pass   7: suminf.    1.10747 (9) obj. -58.4995 iterations 25
Cbc0038I Pass   8: suminf.    0.98369 (10) obj. -58.4995 iterations 2
Cbc0038I Pass   9: suminf.    0.29226 (1) obj. -58.4995 iterations 18
Cbc0038I Pass  10: suminf.    0.29226 (1) obj. -58.4995 iterations 0
Cbc0038I Pass  11: suminf.    0.57971 (2) obj. -60.2132 iterations 2
Cbc0038I Pass  12: suminf.    1.02050 (11) obj. -58.4995 iterations 25
Cbc0038I Pass  13: suminf.    0.99617 (10) obj. -58.4995 iterations 10
Cbc0038I Pass  14: suminf.    0.99137 (3) obj. -58.4995 iterations 18
Cbc0038I Pass  15: suminf.    0.38552 (2) obj. -58.4995 iterations 4
Cbc0038I Pass  16: suminf.    0.97232 (3) obj. -58.4995 iterations 4
Cbc0038I Pass  17: suminf.    1.75222 (15) obj. -58.4995 iterations 28
Cbc0038I Pass  18: suminf.    1.70584 (14) obj. -60.5771 iterations 6
Cbc0038I Pass  19: suminf.    1.30510 (10) obj. -58.4995 iterations 16
Cbc0038I Pass  20: suminf.    1.02592 (7) obj. -58.4995 iterations 6
Cbc0038I Pass  21: suminf.    0.37014 (3) obj. -58.4995 iterations 9
Cbc0038I Pass  22: suminf.    0.30024 (3) obj. -58.779 iterations 3
Cbc0038I Pass  23: suminf.    0.48785 (6) obj. -58.4995 iterations 10
Cbc0038I Pass  24: suminf.    1.22432 (10) obj. -58.4995 iterations 20
Cbc0038I Pass  25: suminf.    1.11276 (9) obj. -58.4995 iterations 1
Cbc0038I Pass  26: suminf.    0.27981 (5) obj. -58.4995 iterations 15
Cbc0038I Pass  27: suminf.    0.23489 (5) obj. -58.4995 iterations 3
Cbc0038I Pass  28: suminf.    0.75424 (6) obj. -58.4995 iterations 4
Cbc0038I Pass  29: suminf.    0.69552 (7) obj. -58.4995 iterations 8
Cbc0038I Pass  30: suminf.    0.81491 (4) obj. -58.4995 iterations 12
Cbc0038I Pass  31: suminf.    0.70936 (5) obj. -58.4995 iterations 4
Cbc0038I Pass  32: suminf.    0.69444 (6) obj. -58.4995 iterations 4
Cbc0038I Pass  33: suminf.    0.68544 (5) obj. -58.4995 iterations 4
Cbc0038I Rounding solution of -56.7604 is better than previous of -52.9182

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 110 columns, reduced to 44 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -56.7604 to -61.1127 (0.08 seconds)
Cbc0038I Round again with cutoff of -70.6362
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass  34: suminf.    1.69132 (30) obj. -78.6212 iterations 0
Cbc0038I Pass  35: suminf.    1.42620 (13) obj. -70.6362 iterations 36
Cbc0038I Pass  36: suminf.    1.42620 (13) obj. -70.6362 iterations 0
Cbc0038I Pass  37: suminf.    0.61952 (5) obj. -70.6362 iterations 20
Cbc0038I Pass  38: suminf.    0.38404 (4) obj. -71.1145 iterations 5
Cbc0038I Pass  39: suminf.    0.62670 (5) obj. -70.6362 iterations 8
Cbc0038I Pass  40: suminf.    1.71723 (13) obj. -70.6362 iterations 20
Cbc0038I Pass  41: suminf.    1.29286 (12) obj. -70.6362 iterations 3
Cbc0038I Pass  42: suminf.    0.86087 (6) obj. -70.6362 iterations 17
Cbc0038I Pass  43: suminf.    0.86087 (6) obj. -70.6362 iterations 0
Cbc0038I Pass  44: suminf.    0.96004 (6) obj. -70.6362 iterations 6
Cbc0038I Pass  45: suminf.    0.55070 (5) obj. -71.6145 iterations 4
Cbc0038I Pass  46: suminf.    0.86087 (6) obj. -70.6362 iterations 7
Cbc0038I Pass  47: suminf.    1.75320 (11) obj. -70.6362 iterations 16
Cbc0038I Pass  48: suminf.    1.62906 (10) obj. -70.6362 iterations 8
Cbc0038I Pass  49: suminf.    1.04003 (9) obj. -70.6362 iterations 17
Cbc0038I Pass  50: suminf.    1.04003 (9) obj. -70.6362 iterations 0
Cbc0038I Pass  51: suminf.    1.54398 (8) obj. -70.6362 iterations 5
Cbc0038I Pass  52: suminf.    1.09664 (8) obj. -70.6362 iterations 6
Cbc0038I Pass  53: suminf.    0.61952 (6) obj. -70.6362 iterations 9
Cbc0038I Pass  54: suminf.    0.55372 (6) obj. -70.6362 iterations 4
Cbc0038I Pass  55: suminf.    0.61818 (6) obj. -70.6362 iterations 4
Cbc0038I Pass  56: suminf.    1.63150 (13) obj. -70.6362 iterations 12
Cbc0038I Pass  57: suminf.    1.39224 (11) obj. -70.6362 iterations 9
Cbc0038I Pass  58: suminf.    0.65914 (7) obj. -70.6362 iterations 11
Cbc0038I Pass  59: suminf.    1.74770 (12) obj. -70.6362 iterations 25
Cbc0038I Pass  60: suminf.    1.74770 (12) obj. -70.6362 iterations 3
Cbc0038I Pass  61: suminf.    0.62670 (6) obj. -70.6362 iterations 15
Cbc0038I Pass  62: suminf.    0.55372 (6) obj. -70.6362 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 110 columns, reduced to 44 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -61.1127 - took 0.09 seconds
Cbc0012I Integer solution of -61.11273 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 95 rows 110 columns, reduced to 26 rows 30 columns
Cbc0031I 49 added rows had average density of 34.714286
Cbc0013I At root node, 49 cuts changed objective from -108.72981 to -68.528136 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9896 row cuts average 7.2 elements, 1 column cuts (1 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1851 row cuts average 88.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 257 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1303 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 321 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.676 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.11273 best solution, best possible -68.528136 (2.30 seconds)
Cbc0004I Integer solution of -61.8165 found after 4872 iterations and 24 nodes (2.58 seconds)
Cbc0001I Search completed - best objective -61.81649999999999, took 5412 iterations and 36 nodes (2.60 seconds)
Cbc0032I Strong branching done 502 times (8232 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 14, 104 variables fixed on reduced cost
Total time (CPU seconds):       1.91   (Wallclock seconds):       2.62

