Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-8) rows, 30 (-2) columns and 162 (-15) elements
Clp1000I sum of infeasibilities 0.00197445 - average 3.58991e-05, 7 fixed columns
Coin0506I Presolve 38 (-17) rows, 23 (-7) columns and 114 (-48) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 78.26552
Clp0000I Optimal - objective value 78.26552
Coin0511I After Postsolve, objective 78.26552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 78.26552
Clp0000I Optimal - objective value 78.26552
Clp0000I Optimal - objective value 78.26552
Coin0511I After Postsolve, objective 78.26552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.26551998 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.13485
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.18377 iterations 23
Cbc0038I Solution found of 1.18377
Cbc0038I Relaxing continuous gives 1.18377
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 1.18377 to -35.0415 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.364
Cbc0038I Pass   2: suminf.    1.31089 (5) obj. -39.364 iterations 5
Cbc0038I Pass   3: suminf.    1.18272 (4) obj. -39.364 iterations 3
Cbc0038I Pass   4: suminf.    1.17035 (6) obj. -39.364 iterations 7
Cbc0038I Pass   5: suminf.    0.99713 (5) obj. -39.364 iterations 2
Cbc0038I Pass   6: suminf.    2.41816 (6) obj. -39.364 iterations 7
Cbc0038I Pass   7: suminf.    0.65631 (5) obj. -39.364 iterations 4
Cbc0038I Pass   8: suminf.    0.65631 (5) obj. -39.364 iterations 1
Cbc0038I Pass   9: suminf.    0.85708 (4) obj. -39.364 iterations 6
Cbc0038I Pass  10: suminf.    0.83946 (4) obj. -39.364 iterations 1
Cbc0038I Pass  11: suminf.    1.12299 (4) obj. -39.364 iterations 8
Cbc0038I Pass  12: suminf.    1.10881 (4) obj. -39.364 iterations 2
Cbc0038I Pass  13: suminf.    0.62505 (3) obj. -39.364 iterations 4
Cbc0038I Pass  14: suminf.    0.62461 (3) obj. -39.364 iterations 1
Cbc0038I Pass  15: suminf.    0.76409 (3) obj. -39.364 iterations 3
Cbc0038I Pass  16: suminf.    0.66467 (3) obj. -39.364 iterations 2
Cbc0038I Pass  17: suminf.    0.76240 (3) obj. -39.364 iterations 2
Cbc0038I Pass  18: suminf.    0.62505 (3) obj. -39.364 iterations 2
Cbc0038I Pass  19: suminf.    0.62461 (3) obj. -39.364 iterations 1
Cbc0038I Pass  20: suminf.    0.76409 (3) obj. -39.364 iterations 3
Cbc0038I Pass  21: suminf.    0.66467 (3) obj. -39.364 iterations 2
Cbc0038I Pass  22: suminf.    0.76240 (3) obj. -39.364 iterations 2
Cbc0038I Pass  23: suminf.    0.62505 (3) obj. -39.364 iterations 2
Cbc0038I Pass  24: suminf.    0.62461 (3) obj. -39.364 iterations 1
Cbc0038I Pass  25: suminf.    0.76409 (3) obj. -39.364 iterations 3
Cbc0038I Pass  26: suminf.    0.66467 (3) obj. -39.364 iterations 2
Cbc0038I Pass  27: suminf.    0.76240 (3) obj. -39.364 iterations 2
Cbc0038I Pass  28: suminf.    0.62505 (3) obj. -39.364 iterations 2
Cbc0038I Pass  29: suminf.    0.62461 (3) obj. -39.364 iterations 1
Cbc0038I Pass  30: suminf.    0.76409 (3) obj. -39.364 iterations 3
Cbc0038I Pass  31: suminf.    0.66467 (3) obj. -39.364 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -35.0415 - took 0.02 seconds
Cbc0012I Integer solution of -35.04153 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 30 columns, reduced to 32 rows 20 columns
Cbc0031I 18 added rows had average density of 18.388889
Cbc0013I At root node, 18 cuts changed objective from -78.26552 to -46.985529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2365 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1016 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 178 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.04153000000001, took 2932 iterations and 4 nodes (0.28 seconds)
Cbc0032I Strong branching done 78 times (1162 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-11) rows, 54 (-6) columns and 495 (-117) elements
Clp1000I sum of infeasibilities 2.95641e-12 - average 5.79689e-14, 40 fixed columns
Coin0506I Presolve 11 (-40) rows, 14 (-40) columns and 44 (-451) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 0.21002591 - largest nonzero change 2.7896849e-05 ( 0.0023649308%) - largest zero change 1.9702232e-05
Clp0000I Optimal - objective value 19.663617
Clp0000I Optimal - objective value 19.663617
Coin0511I After Postsolve, objective 19.663617, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21987797 - largest nonzero change 2.7896849e-05 ( 0.0023649308%) - largest zero change 2.7191152e-05
Clp0000I Optimal - objective value 101.63622
Clp0000I Optimal - objective value 101.63622
Clp0000I Optimal - objective value 101.63622
Coin0511I After Postsolve, objective 101.63622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.6362208 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 54 columns (54 integer (54 of which binary)) and 497 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.577%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 6.07235
Cbc0038I Pass   1: suminf.    2.45989 (12) obj. -77.1337 iterations 17
Cbc0038I Pass   2: suminf.    2.45989 (12) obj. -77.1337 iterations 1
Cbc0038I Solution found of -24.7273
Cbc0038I Rounding solution of -26.488 is better than previous of -24.7273

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.2781
Cbc0038I Pass   3: suminf.    2.45989 (12) obj. -77.1337 iterations 0
Cbc0038I Pass   4: suminf.    2.45989 (12) obj. -77.1337 iterations 1
Cbc0038I Pass   5: suminf.    0.40463 (3) obj. -33.2781 iterations 18
Cbc0038I Pass   6: suminf.    0.52210 (2) obj. -41.8216 iterations 2
Cbc0038I Pass   7: suminf.    0.29630 (1) obj. -36.8014 iterations 1
Cbc0038I Pass   8: suminf.    0.48621 (2) obj. -33.2781 iterations 2
Cbc0038I Pass   9: suminf.    1.51504 (8) obj. -33.2781 iterations 8
Cbc0038I Pass  10: suminf.    1.51504 (8) obj. -33.2781 iterations 1
Cbc0038I Pass  11: suminf.    1.07349 (4) obj. -33.2781 iterations 11
Cbc0038I Pass  12: suminf.    1.07349 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  13: suminf.    1.22195 (4) obj. -33.2781 iterations 2
Cbc0038I Pass  14: suminf.    0.88271 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  15: suminf.    0.88271 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  16: suminf.    1.07349 (4) obj. -33.2781 iterations 3
Cbc0038I Pass  17: suminf.    1.07349 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  18: suminf.    1.22195 (4) obj. -33.2781 iterations 2
Cbc0038I Pass  19: suminf.    0.88271 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  20: suminf.    0.88271 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  21: suminf.    1.07349 (4) obj. -33.2781 iterations 3
Cbc0038I Pass  22: suminf.    1.07349 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  23: suminf.    1.22195 (4) obj. -33.2781 iterations 2
Cbc0038I Pass  24: suminf.    0.88271 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  25: suminf.    0.88271 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  26: suminf.    1.07349 (4) obj. -33.2781 iterations 3
Cbc0038I Pass  27: suminf.    1.07349 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  28: suminf.    1.22195 (4) obj. -33.2781 iterations 2
Cbc0038I Pass  29: suminf.    0.88271 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  30: suminf.    0.88271 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  31: suminf.    1.07349 (4) obj. -33.2781 iterations 3
Cbc0038I Pass  32: suminf.    1.07349 (4) obj. -33.2781 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 54 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -26.488 - took 0.01 seconds
Cbc0012I Integer solution of -26.48802 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -35.04153 found by DiveCoefficient after 171 iterations and 0 nodes (0.13 seconds)
Cbc0031I 23 added rows had average density of 9.0869565
Cbc0013I At root node, 23 cuts changed objective from -94.388089 to -35.04153 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 313 row cuts average 3.8 elements, 11 column cuts (11 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 65 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.04153000000001, took 171 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-8) rows, 30 (-2) columns and 162 (-15) elements
Clp1000I sum of infeasibilities 0.00197445 - average 3.58991e-05, 7 fixed columns
Coin0506I Presolve 38 (-17) rows, 23 (-7) columns and 114 (-48) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 78.26552
Clp0000I Optimal - objective value 78.26552
Coin0511I After Postsolve, objective 78.26552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 78.26552
Clp0000I Optimal - objective value 78.26552
Clp0000I Optimal - objective value 78.26552
Coin0511I After Postsolve, objective 78.26552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.26551998 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.13485
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.18377 iterations 23
Cbc0038I Solution found of 1.18377
Cbc0038I Relaxing continuous gives 1.18377
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 1.18377 to -35.0415 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.364
Cbc0038I Pass   2: suminf.    1.31089 (5) obj. -39.364 iterations 5
Cbc0038I Pass   3: suminf.    1.18272 (4) obj. -39.364 iterations 3
Cbc0038I Pass   4: suminf.    1.17035 (6) obj. -39.364 iterations 7
Cbc0038I Pass   5: suminf.    0.99713 (5) obj. -39.364 iterations 2
Cbc0038I Pass   6: suminf.    2.41816 (6) obj. -39.364 iterations 7
Cbc0038I Pass   7: suminf.    0.65631 (5) obj. -39.364 iterations 4
Cbc0038I Pass   8: suminf.    0.65631 (5) obj. -39.364 iterations 1
Cbc0038I Pass   9: suminf.    0.85708 (4) obj. -39.364 iterations 6
Cbc0038I Pass  10: suminf.    0.83946 (4) obj. -39.364 iterations 1
Cbc0038I Pass  11: suminf.    1.12299 (4) obj. -39.364 iterations 8
Cbc0038I Pass  12: suminf.    1.10881 (4) obj. -39.364 iterations 2
Cbc0038I Pass  13: suminf.    0.62505 (3) obj. -39.364 iterations 4
Cbc0038I Pass  14: suminf.    0.62461 (3) obj. -39.364 iterations 1
Cbc0038I Pass  15: suminf.    0.76409 (3) obj. -39.364 iterations 3
Cbc0038I Pass  16: suminf.    0.66467 (3) obj. -39.364 iterations 2
Cbc0038I Pass  17: suminf.    0.76240 (3) obj. -39.364 iterations 2
Cbc0038I Pass  18: suminf.    0.62505 (3) obj. -39.364 iterations 2
Cbc0038I Pass  19: suminf.    0.62461 (3) obj. -39.364 iterations 1
Cbc0038I Pass  20: suminf.    0.76409 (3) obj. -39.364 iterations 3
Cbc0038I Pass  21: suminf.    0.66467 (3) obj. -39.364 iterations 2
Cbc0038I Pass  22: suminf.    0.76240 (3) obj. -39.364 iterations 2
Cbc0038I Pass  23: suminf.    0.62505 (3) obj. -39.364 iterations 2
Cbc0038I Pass  24: suminf.    0.62461 (3) obj. -39.364 iterations 1
Cbc0038I Pass  25: suminf.    0.76409 (3) obj. -39.364 iterations 3
Cbc0038I Pass  26: suminf.    0.66467 (3) obj. -39.364 iterations 2
Cbc0038I Pass  27: suminf.    0.76240 (3) obj. -39.364 iterations 2
Cbc0038I Pass  28: suminf.    0.62505 (3) obj. -39.364 iterations 2
Cbc0038I Pass  29: suminf.    0.62461 (3) obj. -39.364 iterations 1
Cbc0038I Pass  30: suminf.    0.76409 (3) obj. -39.364 iterations 3
Cbc0038I Pass  31: suminf.    0.66467 (3) obj. -39.364 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -35.0415 - took 0.02 seconds
Cbc0012I Integer solution of -35.04153 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 30 columns, reduced to 32 rows 20 columns
Cbc0031I 18 added rows had average density of 18.388889
Cbc0013I At root node, 18 cuts changed objective from -78.26552 to -46.985529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2365 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1016 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 178 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.04153000000001, took 2932 iterations and 4 nodes (0.25 seconds)
Cbc0032I Strong branching done 78 times (1162 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 54 (-7) columns and 495 (-118) elements
Clp1000I sum of infeasibilities 2.95641e-12 - average 5.79689e-14, 40 fixed columns
Coin0506I Presolve 11 (-40) rows, 14 (-40) columns and 44 (-451) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 0.21002591 - largest nonzero change 2.7896849e-05 ( 0.0023649308%) - largest zero change 1.9702232e-05
Clp0000I Optimal - objective value 19.663617
Clp0000I Optimal - objective value 19.663617
Coin0511I After Postsolve, objective 19.663617, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21987797 - largest nonzero change 2.7896849e-05 ( 0.0023649308%) - largest zero change 2.7191152e-05
Clp0000I Optimal - objective value 101.63622
Clp0000I Optimal - objective value 101.63622
Clp0000I Optimal - objective value 101.63622
Coin0511I After Postsolve, objective 101.63622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.6362208 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 54 columns (54 integer (54 of which binary)) and 497 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.577%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 6.07235
Cbc0038I Pass   1: suminf.    2.45989 (12) obj. -77.1337 iterations 17
Cbc0038I Pass   2: suminf.    2.45989 (12) obj. -77.1337 iterations 1
Cbc0038I Solution found of -24.7273
Cbc0038I Rounding solution of -26.488 is better than previous of -24.7273

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.2781
Cbc0038I Pass   3: suminf.    2.45989 (12) obj. -77.1337 iterations 0
Cbc0038I Pass   4: suminf.    2.45989 (12) obj. -77.1337 iterations 1
Cbc0038I Pass   5: suminf.    0.40463 (3) obj. -33.2781 iterations 18
Cbc0038I Pass   6: suminf.    0.52210 (2) obj. -41.8216 iterations 2
Cbc0038I Pass   7: suminf.    0.29630 (1) obj. -36.8014 iterations 1
Cbc0038I Pass   8: suminf.    0.48621 (2) obj. -33.2781 iterations 2
Cbc0038I Pass   9: suminf.    1.51504 (8) obj. -33.2781 iterations 8
Cbc0038I Pass  10: suminf.    1.51504 (8) obj. -33.2781 iterations 1
Cbc0038I Pass  11: suminf.    1.07349 (4) obj. -33.2781 iterations 11
Cbc0038I Pass  12: suminf.    1.07349 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  13: suminf.    1.22195 (4) obj. -33.2781 iterations 2
Cbc0038I Pass  14: suminf.    0.88271 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  15: suminf.    0.88271 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  16: suminf.    1.07349 (4) obj. -33.2781 iterations 3
Cbc0038I Pass  17: suminf.    1.07349 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  18: suminf.    1.22195 (4) obj. -33.2781 iterations 2
Cbc0038I Pass  19: suminf.    0.88271 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  20: suminf.    0.88271 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  21: suminf.    1.07349 (4) obj. -33.2781 iterations 3
Cbc0038I Pass  22: suminf.    1.07349 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  23: suminf.    1.22195 (4) obj. -33.2781 iterations 2
Cbc0038I Pass  24: suminf.    0.88271 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  25: suminf.    0.88271 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  26: suminf.    1.07349 (4) obj. -33.2781 iterations 3
Cbc0038I Pass  27: suminf.    1.07349 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  28: suminf.    1.22195 (4) obj. -33.2781 iterations 2
Cbc0038I Pass  29: suminf.    0.88271 (4) obj. -33.2781 iterations 1
Cbc0038I Pass  30: suminf.    0.88271 (4) obj. -33.2781 iterations 0
Cbc0038I Pass  31: suminf.    1.07349 (4) obj. -33.2781 iterations 3
Cbc0038I Pass  32: suminf.    1.07349 (4) obj. -33.2781 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 54 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -26.488 - took 0.01 seconds
Cbc0012I Integer solution of -26.48802 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -35.04153 found by DiveCoefficient after 171 iterations and 0 nodes (0.12 seconds)
Cbc0031I 23 added rows had average density of 9.0869565
Cbc0013I At root node, 23 cuts changed objective from -94.388089 to -35.04153 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 313 row cuts average 3.8 elements, 11 column cuts (11 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 65 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.04153000000001, took 171 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

