Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 68 (-37) rows, 38 (-15) columns and 206 (-97) elements
Clp0000I Optimal - objective value 81.307284
Coin0511I After Postsolve, objective 81.307284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.3072837 - 31 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 68 rows, 38 columns (37 integer (37 of which binary)) and 206 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.43469
Cbc0038I Pass   1: suminf.    1.46154 (3) obj. -48.5658 iterations 17
Cbc0038I Solution found of -30.8
Cbc0038I Relaxing continuous gives -30.8
Cbc0038I Rounding solution of -32.3333 is better than previous of -30.8

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 38 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -32.3333 to -65.7334 (0.01 seconds)
Cbc0038I Round again with cutoff of -67.2909
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.97129 (9) obj. -67.2909 iterations 6
Cbc0038I Pass   3: suminf.    0.51628 (2) obj. -67.2909 iterations 6
Cbc0038I Pass   4: suminf.    0.45061 (2) obj. -67.2909 iterations 1
Cbc0038I Pass   5: suminf.    0.55310 (2) obj. -67.2909 iterations 1
Cbc0038I Pass   6: suminf.    0.55310 (2) obj. -67.2909 iterations 0
Cbc0038I Pass   7: suminf.    3.13512 (11) obj. -67.2909 iterations 10
Cbc0038I Pass   8: suminf.    0.88784 (4) obj. -67.2909 iterations 10
Cbc0038I Pass   9: suminf.    0.86109 (3) obj. -67.2909 iterations 7
Cbc0038I Pass  10: suminf.    0.75156 (3) obj. -67.2909 iterations 1
Cbc0038I Pass  11: suminf.    0.42021 (2) obj. -67.2909 iterations 4
Cbc0038I Pass  12: suminf.    0.42021 (2) obj. -67.2909 iterations 0
Cbc0038I Pass  13: suminf.    0.73479 (4) obj. -67.2909 iterations 3
Cbc0038I Pass  14: suminf.    1.39862 (4) obj. -67.2909 iterations 4
Cbc0038I Pass  15: suminf.    1.10727 (3) obj. -67.2909 iterations 1
Cbc0038I Pass  16: suminf.    2.14392 (9) obj. -67.2909 iterations 9
Cbc0038I Pass  17: suminf.    1.24280 (5) obj. -67.2909 iterations 7
Cbc0038I Pass  18: suminf.    0.86109 (3) obj. -67.2909 iterations 8
Cbc0038I Pass  19: suminf.    0.75156 (3) obj. -67.2909 iterations 1
Cbc0038I Pass  20: suminf.    0.42021 (2) obj. -67.2909 iterations 4
Cbc0038I Pass  21: suminf.    0.42021 (2) obj. -67.2909 iterations 0
Cbc0038I Pass  22: suminf.    0.73479 (4) obj. -67.2909 iterations 3
Cbc0038I Pass  23: suminf.    1.39862 (4) obj. -67.2909 iterations 4
Cbc0038I Pass  24: suminf.    1.10727 (3) obj. -67.2909 iterations 1
Cbc0038I Pass  25: suminf.    2.34578 (10) obj. -67.2909 iterations 8
Cbc0038I Pass  26: suminf.    2.25241 (9) obj. -67.2909 iterations 3
Cbc0038I Pass  27: suminf.    2.58793 (9) obj. -67.2909 iterations 7
Cbc0038I Pass  28: suminf.    0.05262 (1) obj. -67.2909 iterations 8
Cbc0038I Pass  29: suminf.    0.22574 (1) obj. -67.2909 iterations 1
Cbc0038I Pass  30: suminf.    1.97996 (7) obj. -67.2909 iterations 9
Cbc0038I Pass  31: suminf.    1.25122 (5) obj. -67.2909 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 38 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -65.7334 - took 0.01 seconds
Cbc0012I Integer solution of -65.73337 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 68 rows 38 columns, reduced to 19 rows 13 columns
Cbc0031I 7 added rows had average density of 17
Cbc0013I At root node, 7 cuts changed objective from -81.307284 to -68.267837 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 94 row cuts average 2.9 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -65.73336999999998, took 106 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 20 times (100 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 63 (-41) rows, 69 (-33) columns and 775 (-803) elements
Clp1000I sum of infeasibilities 1.70381e-07 - average 2.70446e-09, 39 fixed columns
Coin0506I Presolve 24 (-39) rows, 30 (-39) columns and 104 (-671) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 66.327813
Clp0000I Optimal - objective value 66.327813
Coin0511I After Postsolve, objective 66.327813, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.1139931 - largest nonzero change 2.6013248e-05 ( 0.0024494631%) - largest zero change 2.9028286e-05
Clp0000I Optimal - objective value 121.80321
Clp0000I Optimal - objective value 121.80321
Clp0000I Optimal - objective value 121.80321
Coin0511I After Postsolve, objective 121.80321, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.8032051 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 65 rows, 71 columns (71 integer (71 of which binary)) and 786 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.052%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 9.13883
Cbc0038I Pass   1: suminf.    2.24313 (19) obj. -38.8516 iterations 23
Cbc0038I Pass   2: suminf.    2.24313 (19) obj. -38.8516 iterations 1
Cbc0038I Solution found of -7.93337
Cbc0038I Rounding solution of -25.7334 is better than previous of -7.93337

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 71 columns, reduced to 15 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.7334 to -65.7334 (0.02 seconds)
Cbc0038I Round again with cutoff of -70.1054
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.28142 (28) obj. -70.1054 iterations 9
Cbc0038I Pass   4: suminf.    5.28142 (28) obj. -70.1054 iterations 1
Cbc0038I Pass   5: suminf.    3.78999 (21) obj. -70.1054 iterations 17
Cbc0038I Pass   6: suminf.    3.78999 (21) obj. -70.1054 iterations 1
Cbc0038I Pass   7: suminf.    0.49192 (4) obj. -70.1054 iterations 26
Cbc0038I Pass   8: suminf.    0.49192 (4) obj. -70.1054 iterations 0
Cbc0038I Pass   9: suminf.    1.31992 (5) obj. -70.1054 iterations 3
Cbc0038I Pass  10: suminf.    0.19355 (1) obj. -70.5721 iterations 3
Cbc0038I Pass  11: suminf.    2.91539 (11) obj. -70.1054 iterations 17
Cbc0038I Pass  12: suminf.    2.31542 (10) obj. -71.7272 iterations 3
Cbc0038I Pass  13: suminf.    1.07668 (3) obj. -70.1054 iterations 14
Cbc0038I Pass  14: suminf.    0.65763 (3) obj. -70.1054 iterations 3
Cbc0038I Pass  15: suminf.    0.49192 (4) obj. -70.1054 iterations 5
Cbc0038I Pass  16: suminf.    0.49192 (4) obj. -70.1054 iterations 0
Cbc0038I Pass  17: suminf.    1.31992 (5) obj. -70.1054 iterations 2
Cbc0038I Pass  18: suminf.    0.19355 (1) obj. -70.5721 iterations 3
Cbc0038I Pass  19: suminf.    2.62400 (11) obj. -70.1054 iterations 11
Cbc0038I Pass  20: suminf.    2.62400 (11) obj. -70.1054 iterations 1
Cbc0038I Pass  21: suminf.    4.01469 (21) obj. -70.1054 iterations 17
Cbc0038I Pass  22: suminf.    4.01469 (21) obj. -70.1054 iterations 0
Cbc0038I Pass  23: suminf.    2.39662 (7) obj. -70.1054 iterations 25
Cbc0038I Pass  24: suminf.    2.39662 (7) obj. -70.1054 iterations 0
Cbc0038I Pass  25: suminf.    0.49192 (4) obj. -70.1054 iterations 7
Cbc0038I Pass  26: suminf.    0.49192 (4) obj. -70.1054 iterations 1
Cbc0038I Pass  27: suminf.    1.31992 (5) obj. -70.1054 iterations 2
Cbc0038I Pass  28: suminf.    0.19355 (1) obj. -70.5721 iterations 3
Cbc0038I Pass  29: suminf.    2.04127 (9) obj. -70.1054 iterations 15
Cbc0038I Pass  30: suminf.    1.40590 (7) obj. -70.1054 iterations 3
Cbc0038I Pass  31: suminf.    0.77503 (2) obj. -70.1054 iterations 11
Cbc0038I Pass  32: suminf.    0.31954 (3) obj. -70.1054 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 71 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -65.7334 - took 0.01 seconds
Cbc0012I Integer solution of -65.73337 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 15 added rows had average density of 5.0666667
Cbc0013I At root node, 232 cuts changed objective from -109.45311 to -65.73337 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 178 row cuts average 2.0 elements, 20 column cuts (20 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 22 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -65.73336999999998, took 23 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 68 (-37) rows, 38 (-15) columns and 206 (-97) elements
Clp0000I Optimal - objective value 81.307284
Coin0511I After Postsolve, objective 81.307284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.3072837 - 31 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 68 rows, 38 columns (37 integer (37 of which binary)) and 206 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.43469
Cbc0038I Pass   1: suminf.    1.46154 (3) obj. -48.5658 iterations 17
Cbc0038I Solution found of -30.8
Cbc0038I Relaxing continuous gives -30.8
Cbc0038I Rounding solution of -32.3333 is better than previous of -30.8

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 38 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -32.3333 to -65.7334 (0.01 seconds)
Cbc0038I Round again with cutoff of -67.2909
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.97129 (9) obj. -67.2909 iterations 6
Cbc0038I Pass   3: suminf.    0.51628 (2) obj. -67.2909 iterations 6
Cbc0038I Pass   4: suminf.    0.45061 (2) obj. -67.2909 iterations 1
Cbc0038I Pass   5: suminf.    0.55310 (2) obj. -67.2909 iterations 1
Cbc0038I Pass   6: suminf.    0.55310 (2) obj. -67.2909 iterations 0
Cbc0038I Pass   7: suminf.    3.13512 (11) obj. -67.2909 iterations 10
Cbc0038I Pass   8: suminf.    0.88784 (4) obj. -67.2909 iterations 10
Cbc0038I Pass   9: suminf.    0.86109 (3) obj. -67.2909 iterations 7
Cbc0038I Pass  10: suminf.    0.75156 (3) obj. -67.2909 iterations 1
Cbc0038I Pass  11: suminf.    0.42021 (2) obj. -67.2909 iterations 4
Cbc0038I Pass  12: suminf.    0.42021 (2) obj. -67.2909 iterations 0
Cbc0038I Pass  13: suminf.    0.73479 (4) obj. -67.2909 iterations 3
Cbc0038I Pass  14: suminf.    1.39862 (4) obj. -67.2909 iterations 4
Cbc0038I Pass  15: suminf.    1.10727 (3) obj. -67.2909 iterations 1
Cbc0038I Pass  16: suminf.    2.14392 (9) obj. -67.2909 iterations 9
Cbc0038I Pass  17: suminf.    1.24280 (5) obj. -67.2909 iterations 7
Cbc0038I Pass  18: suminf.    0.86109 (3) obj. -67.2909 iterations 8
Cbc0038I Pass  19: suminf.    0.75156 (3) obj. -67.2909 iterations 1
Cbc0038I Pass  20: suminf.    0.42021 (2) obj. -67.2909 iterations 4
Cbc0038I Pass  21: suminf.    0.42021 (2) obj. -67.2909 iterations 0
Cbc0038I Pass  22: suminf.    0.73479 (4) obj. -67.2909 iterations 3
Cbc0038I Pass  23: suminf.    1.39862 (4) obj. -67.2909 iterations 4
Cbc0038I Pass  24: suminf.    1.10727 (3) obj. -67.2909 iterations 1
Cbc0038I Pass  25: suminf.    2.34578 (10) obj. -67.2909 iterations 8
Cbc0038I Pass  26: suminf.    2.25241 (9) obj. -67.2909 iterations 3
Cbc0038I Pass  27: suminf.    2.58793 (9) obj. -67.2909 iterations 7
Cbc0038I Pass  28: suminf.    0.05262 (1) obj. -67.2909 iterations 8
Cbc0038I Pass  29: suminf.    0.22574 (1) obj. -67.2909 iterations 1
Cbc0038I Pass  30: suminf.    1.97996 (7) obj. -67.2909 iterations 9
Cbc0038I Pass  31: suminf.    1.25122 (5) obj. -67.2909 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 38 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -65.7334 - took 0.01 seconds
Cbc0012I Integer solution of -65.73337 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 68 rows 38 columns, reduced to 19 rows 13 columns
Cbc0031I 7 added rows had average density of 17
Cbc0013I At root node, 7 cuts changed objective from -81.307284 to -68.267837 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 94 row cuts average 2.9 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -65.73336999999998, took 106 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 20 times (100 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 63 (-42) rows, 69 (-34) columns and 775 (-804) elements
Clp1000I sum of infeasibilities 1.70381e-07 - average 2.70446e-09, 39 fixed columns
Coin0506I Presolve 24 (-39) rows, 30 (-39) columns and 104 (-671) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 66.327813
Clp0000I Optimal - objective value 66.327813
Coin0511I After Postsolve, objective 66.327813, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.1139931 - largest nonzero change 2.6013248e-05 ( 0.0024494631%) - largest zero change 2.9028286e-05
Clp0000I Optimal - objective value 121.80321
Clp0000I Optimal - objective value 121.80321
Clp0000I Optimal - objective value 121.80321
Coin0511I After Postsolve, objective 121.80321, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.8032051 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 65 rows, 71 columns (71 integer (71 of which binary)) and 786 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.052%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 9.13883
Cbc0038I Pass   1: suminf.    2.24313 (19) obj. -38.8516 iterations 23
Cbc0038I Pass   2: suminf.    2.24313 (19) obj. -38.8516 iterations 1
Cbc0038I Solution found of -7.93337
Cbc0038I Rounding solution of -25.7334 is better than previous of -7.93337

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 71 columns, reduced to 15 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.7334 to -65.7334 (0.02 seconds)
Cbc0038I Round again with cutoff of -70.1054
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.28142 (28) obj. -70.1054 iterations 9
Cbc0038I Pass   4: suminf.    5.28142 (28) obj. -70.1054 iterations 1
Cbc0038I Pass   5: suminf.    3.78999 (21) obj. -70.1054 iterations 17
Cbc0038I Pass   6: suminf.    3.78999 (21) obj. -70.1054 iterations 1
Cbc0038I Pass   7: suminf.    0.49192 (4) obj. -70.1054 iterations 26
Cbc0038I Pass   8: suminf.    0.49192 (4) obj. -70.1054 iterations 0
Cbc0038I Pass   9: suminf.    1.31992 (5) obj. -70.1054 iterations 3
Cbc0038I Pass  10: suminf.    0.19355 (1) obj. -70.5721 iterations 3
Cbc0038I Pass  11: suminf.    2.91539 (11) obj. -70.1054 iterations 17
Cbc0038I Pass  12: suminf.    2.31542 (10) obj. -71.7272 iterations 3
Cbc0038I Pass  13: suminf.    1.07668 (3) obj. -70.1054 iterations 14
Cbc0038I Pass  14: suminf.    0.65763 (3) obj. -70.1054 iterations 3
Cbc0038I Pass  15: suminf.    0.49192 (4) obj. -70.1054 iterations 5
Cbc0038I Pass  16: suminf.    0.49192 (4) obj. -70.1054 iterations 0
Cbc0038I Pass  17: suminf.    1.31992 (5) obj. -70.1054 iterations 2
Cbc0038I Pass  18: suminf.    0.19355 (1) obj. -70.5721 iterations 3
Cbc0038I Pass  19: suminf.    2.62400 (11) obj. -70.1054 iterations 11
Cbc0038I Pass  20: suminf.    2.62400 (11) obj. -70.1054 iterations 1
Cbc0038I Pass  21: suminf.    4.01469 (21) obj. -70.1054 iterations 17
Cbc0038I Pass  22: suminf.    4.01469 (21) obj. -70.1054 iterations 0
Cbc0038I Pass  23: suminf.    2.39662 (7) obj. -70.1054 iterations 25
Cbc0038I Pass  24: suminf.    2.39662 (7) obj. -70.1054 iterations 0
Cbc0038I Pass  25: suminf.    0.49192 (4) obj. -70.1054 iterations 7
Cbc0038I Pass  26: suminf.    0.49192 (4) obj. -70.1054 iterations 1
Cbc0038I Pass  27: suminf.    1.31992 (5) obj. -70.1054 iterations 2
Cbc0038I Pass  28: suminf.    0.19355 (1) obj. -70.5721 iterations 3
Cbc0038I Pass  29: suminf.    2.04127 (9) obj. -70.1054 iterations 15
Cbc0038I Pass  30: suminf.    1.40590 (7) obj. -70.1054 iterations 3
Cbc0038I Pass  31: suminf.    0.77503 (2) obj. -70.1054 iterations 11
Cbc0038I Pass  32: suminf.    0.31954 (3) obj. -70.1054 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 71 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -65.7334 - took 0.01 seconds
Cbc0012I Integer solution of -65.73337 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 15 added rows had average density of 5.0666667
Cbc0013I At root node, 232 cuts changed objective from -109.45311 to -65.73337 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 178 row cuts average 2.0 elements, 20 column cuts (20 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 22 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -65.73336999999998, took 23 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

