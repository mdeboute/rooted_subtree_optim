Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 23 (-10) columns and 114 (-69) elements
Clp1000I sum of infeasibilities 7.63621e-06 - average 2.00953e-07, 5 fixed columns
Coin0506I Presolve 28 (-10) rows, 17 (-6) columns and 82 (-32) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Coin0511I After Postsolve, objective 73.652001, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Coin0511I After Postsolve, objective 73.652001, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.6520009 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 23 columns (22 integer (22 of which binary)) and 116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.070%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.54928
Cbc0038I Pass   1: suminf.    0.15556 (1) obj. -58.9704 iterations 9
Cbc0038I Solution found of -50.6667
Cbc0038I Relaxing continuous gives -50.6667
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -50.6667 to -55 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.8653
Cbc0038I Pass   2: suminf.    0.15556 (1) obj. -58.9704 iterations 0
Cbc0038I Pass   3: suminf.    0.15529 (1) obj. -56.8653 iterations 2
Cbc0038I Pass   4: suminf.    0.46250 (1) obj. -58.8427 iterations 3
Cbc0038I Pass   5: suminf.    0.42275 (1) obj. -56.8653 iterations 1
Cbc0038I Pass   6: suminf.    1.65208 (5) obj. -56.8653 iterations 6
Cbc0038I Pass   7: suminf.    1.19079 (5) obj. -56.8653 iterations 4
Cbc0038I Pass   8: suminf.    0.57706 (2) obj. -56.8653 iterations 12
Cbc0038I Pass   9: suminf.    0.22500 (1) obj. -58.8896 iterations 3
Cbc0038I Pass  10: suminf.    0.26569 (1) obj. -56.8653 iterations 1
Cbc0038I Pass  11: suminf.    2.06743 (6) obj. -56.8653 iterations 6
Cbc0038I Pass  12: suminf.    1.25914 (4) obj. -56.8653 iterations 3
Cbc0038I Pass  13: suminf.    1.04980 (3) obj. -56.8653 iterations 1
Cbc0038I Pass  14: suminf.    0.41472 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  15: suminf.    0.29961 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  16: suminf.    0.29961 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  17: suminf.    1.09997 (3) obj. -56.8653 iterations 3
Cbc0038I Pass  18: suminf.    0.29961 (2) obj. -56.8653 iterations 4
Cbc0038I Pass  19: suminf.    2.99301 (7) obj. -56.8653 iterations 6
Cbc0038I Pass  20: suminf.    1.15746 (3) obj. -56.8653 iterations 4
Cbc0038I Pass  21: suminf.    0.65187 (3) obj. -56.8653 iterations 4
Cbc0038I Pass  22: suminf.    0.32097 (2) obj. -56.8653 iterations 1
Cbc0038I Pass  23: suminf.    0.46603 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  24: suminf.    0.46603 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  25: suminf.    1.25841 (7) obj. -56.8653 iterations 7
Cbc0038I Pass  26: suminf.    1.09552 (5) obj. -56.8653 iterations 4
Cbc0038I Pass  27: suminf.    0.60504 (2) obj. -56.8653 iterations 5
Cbc0038I Pass  28: suminf.    0.29907 (2) obj. -56.8653 iterations 2
Cbc0038I Pass  29: suminf.    0.45766 (2) obj. -56.8653 iterations 4
Cbc0038I Pass  30: suminf.    0.45766 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  31: suminf.    0.40937 (3) obj. -56.8653 iterations 3
Cbc0038I Rounding solution of -55.6667 is better than previous of -55

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -60.2226
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.21094 (2) obj. -60.2226 iterations 1
Cbc0038I Pass  32: suminf.    0.55290 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  33: suminf.    0.23940 (1) obj. -60.2226 iterations 2
Cbc0038I Pass  34: suminf.    0.23940 (1) obj. -60.2226 iterations 0
Cbc0038I Pass  35: suminf.    0.40944 (4) obj. -60.2226 iterations 3
Cbc0038I Pass  36: suminf.    0.23940 (1) obj. -60.2226 iterations 3
Cbc0038I Pass  37: suminf.    0.91930 (4) obj. -60.2226 iterations 6
Cbc0038I Pass  38: suminf.    0.87347 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  39: suminf.    0.21094 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  40: suminf.    0.55290 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  41: suminf.    0.23940 (1) obj. -60.2226 iterations 2
Cbc0038I Pass  42: suminf.    0.23940 (1) obj. -60.2226 iterations 0
Cbc0038I Pass  43: suminf.    0.28510 (3) obj. -60.2226 iterations 5
Cbc0038I Pass  44: suminf.    1.30875 (5) obj. -60.2226 iterations 9
Cbc0038I Pass  45: suminf.    0.72608 (4) obj. -60.2226 iterations 6
Cbc0038I Pass  46: suminf.    1.19270 (4) obj. -60.2226 iterations 5
Cbc0038I Pass  47: suminf.    1.11236 (3) obj. -60.2226 iterations 1
Cbc0038I Pass  48: suminf.    0.60115 (3) obj. -60.2226 iterations 2
Cbc0038I Pass  49: suminf.    0.49085 (2) obj. -60.2226 iterations 1
Cbc0038I Pass  50: suminf.    0.32872 (2) obj. -60.2226 iterations 2
Cbc0038I Pass  51: suminf.    0.32872 (2) obj. -60.2226 iterations 0
Cbc0038I Pass  52: suminf.    0.60115 (3) obj. -60.2226 iterations 3
Cbc0038I Pass  53: suminf.    1.28495 (4) obj. -60.2226 iterations 10
Cbc0038I Pass  54: suminf.    1.12602 (3) obj. -60.2226 iterations 3
Cbc0038I Pass  55: suminf.    0.86117 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  56: suminf.    0.58325 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  57: suminf.    0.56017 (3) obj. -60.2226 iterations 2
Cbc0038I Pass  58: suminf.    0.62490 (5) obj. -60.2226 iterations 9
Cbc0038I Pass  59: suminf.    0.62490 (5) obj. -60.2226 iterations 1
Cbc0038I Pass  60: suminf.    1.18699 (3) obj. -60.2226 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -55.6667 - took 0.04 seconds
Cbc0012I Integer solution of -55.666667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 23 columns, reduced to 21 rows 13 columns
Cbc0012I Integer solution of -56.666667 found by DiveCoefficient after 1078 iterations and 0 nodes (0.12 seconds)
Cbc0031I 9 added rows had average density of 12.333333
Cbc0013I At root node, 9 cuts changed objective from -73.652001 to -63.063028 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 341 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 270 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -56.666667, took 1272 iterations and 4 nodes (0.13 seconds)
Cbc0032I Strong branching done 44 times (301 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-22) rows, 48 (-14) columns and 416 (-230) elements
Clp1000I sum of infeasibilities 1.50207e-08 - average 3.66358e-10, 30 fixed columns
Coin0506I Presolve 15 (-26) rows, 18 (-30) columns and 60 (-356) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 1.5077619 - largest nonzero change 0 ( 0%) - largest zero change 2.8714708e-05
Clp0000I Optimal - objective value 61.089934
Clp0000I Optimal - objective value 61.089934
Coin0511I After Postsolve, objective 61.089934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.222242 - largest nonzero change 0 ( 0%) - largest zero change 2.1237678e-05
Clp0000I Optimal - objective value 97.241554
Clp0000I Optimal - objective value 97.241554
Clp0000I Optimal - objective value 97.241554
Coin0511I After Postsolve, objective 97.241554, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 97.24155384 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 43 columns (43 integer (43 of which binary)) and 344 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.741%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.60384
Cbc0038I Pass   1: suminf.    1.35219 (6) obj. -65.2012 iterations 14
Cbc0038I Solution found of -49.6667
Cbc0038I Rounding solution of -50.6667 is better than previous of -49.6667

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 43 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -50.6667 to -54.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.6116
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.35219 (6) obj. -65.2012 iterations 0
Cbc0038I Pass   3: suminf.    0.32491 (2) obj. -56.6116 iterations 11
Cbc0038I Pass   4: suminf.    0.29972 (2) obj. -56.6116 iterations 7
Cbc0038I Pass   5: suminf.    0.29972 (2) obj. -56.6116 iterations 1
Cbc0038I Pass   6: suminf.    0.59808 (3) obj. -56.6116 iterations 3
Cbc0038I Pass   7: suminf.    1.96360 (8) obj. -56.6116 iterations 9
Cbc0038I Pass   8: suminf.    1.50956 (6) obj. -56.6116 iterations 5
Cbc0038I Pass   9: suminf.    1.50956 (6) obj. -56.6116 iterations 0
Cbc0038I Pass  10: suminf.    0.57373 (2) obj. -56.6116 iterations 7
Cbc0038I Pass  11: suminf.    0.47079 (2) obj. -57.2907 iterations 3
Cbc0038I Pass  12: suminf.    1.87395 (7) obj. -56.6116 iterations 19
Cbc0038I Pass  13: suminf.    1.48708 (4) obj. -57.4208 iterations 5
Cbc0038I Pass  14: suminf.    1.12290 (6) obj. -56.6116 iterations 7
Cbc0038I Pass  15: suminf.    1.18873 (6) obj. -56.6116 iterations 14
Cbc0038I Pass  16: suminf.    1.17140 (7) obj. -56.6116 iterations 2
Cbc0038I Pass  17: suminf.    0.80645 (2) obj. -56.7621 iterations 11
Cbc0038I Pass  18: suminf.    0.79775 (4) obj. -56.6116 iterations 4
Cbc0038I Pass  19: suminf.    0.80045 (2) obj. -56.6116 iterations 7
Cbc0038I Pass  20: suminf.    0.80045 (2) obj. -56.6116 iterations 0
Cbc0038I Pass  21: suminf.    0.79897 (2) obj. -58.302 iterations 3
Cbc0038I Pass  22: suminf.    0.69747 (3) obj. -56.6116 iterations 2
Cbc0038I Pass  23: suminf.    1.51094 (5) obj. -56.6116 iterations 6
Cbc0038I Pass  24: suminf.    1.51094 (5) obj. -56.6116 iterations 1
Cbc0038I Pass  25: suminf.    0.64529 (2) obj. -56.6116 iterations 10
Cbc0038I Pass  26: suminf.    0.64529 (2) obj. -56.6116 iterations 0
Cbc0038I Pass  27: suminf.    0.36070 (1) obj. -56.6116 iterations 3
Cbc0038I Pass  28: suminf.    0.46250 (1) obj. -61.6761 iterations 1
Cbc0038I Pass  29: suminf.    0.85122 (8) obj. -56.6116 iterations 8
Cbc0038I Pass  30: suminf.    0.25332 (1) obj. -56.6116 iterations 8
Cbc0038I Pass  31: suminf.    0.46250 (1) obj. -59.6761 iterations 2
Cbc0038I Rounding solution of -55.6667 is better than previous of -54.5

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 43 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -60.4122
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.35219 (6) obj. -65.2012 iterations 0
Cbc0038I Pass  32: suminf.    0.59890 (6) obj. -60.4122 iterations 12
Cbc0038I Pass  33: suminf.    1.08069 (3) obj. -60.4122 iterations 9
Cbc0038I Pass  34: suminf.    0.70041 (2) obj. -60.4122 iterations 4
Cbc0038I Pass  35: suminf.    0.87944 (2) obj. -62.1524 iterations 3
Cbc0038I Pass  36: suminf.    0.82626 (2) obj. -60.4122 iterations 1
Cbc0038I Pass  37: suminf.    0.70041 (2) obj. -60.4122 iterations 4
Cbc0038I Pass  38: suminf.    3.91980 (10) obj. -60.4122 iterations 11
Cbc0038I Pass  39: suminf.    3.78649 (13) obj. -60.4122 iterations 3
Cbc0038I Pass  40: suminf.    0.65093 (3) obj. -60.4122 iterations 11
Cbc0038I Pass  41: suminf.    0.65093 (3) obj. -60.4122 iterations 2
Cbc0038I Pass  42: suminf.    0.98595 (3) obj. -60.4122 iterations 4
Cbc0038I Pass  43: suminf.    0.65093 (3) obj. -60.4122 iterations 1
Cbc0038I Pass  44: suminf.    3.01556 (10) obj. -60.4122 iterations 12
Cbc0038I Pass  45: suminf.    2.46133 (8) obj. -60.4122 iterations 4
Cbc0038I Pass  46: suminf.    1.62786 (7) obj. -60.4122 iterations 1
Cbc0038I Pass  47: suminf.    1.62786 (7) obj. -60.4122 iterations 1
Cbc0038I Pass  48: suminf.    2.30337 (7) obj. -60.4122 iterations 9
Cbc0038I Pass  49: suminf.    1.67676 (6) obj. -60.4122 iterations 1
Cbc0038I Pass  50: suminf.    2.15520 (6) obj. -60.4122 iterations 4
Cbc0038I Pass  51: suminf.    2.91757 (7) obj. -60.4122 iterations 5
Cbc0038I Pass  52: suminf.    2.26972 (7) obj. -60.4122 iterations 8
Cbc0038I Pass  53: suminf.    1.46607 (6) obj. -60.4122 iterations 7
Cbc0038I Pass  54: suminf.    1.46607 (6) obj. -60.4122 iterations 2
Cbc0038I Pass  55: suminf.    2.55345 (7) obj. -60.4122 iterations 4
Cbc0038I Pass  56: suminf.    2.24728 (6) obj. -60.4122 iterations 1
Cbc0038I Pass  57: suminf.    1.09804 (7) obj. -60.4122 iterations 3
Cbc0038I Pass  58: suminf.    1.67676 (6) obj. -60.4122 iterations 4
Cbc0038I Pass  59: suminf.    1.67676 (6) obj. -60.4122 iterations 2
Cbc0038I Pass  60: suminf.    2.15520 (6) obj. -60.4122 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 43 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -55.6667 - took 0.02 seconds
Cbc0012I Integer solution of -55.666667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 43 columns, reduced to 5 rows 6 columns
Cbc0031I 13 added rows had average density of 9.6923077
Cbc0013I At root node, 13 cuts changed objective from -75.614733 to -60.230266 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 746 row cuts average 4.2 elements, 9 column cuts (9 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 321 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 135 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.772 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -55.666667 best solution, best possible -60.230266 (1.56 seconds)
Cbc0012I Integer solution of -56.499997 found by DiveCoefficient after 1099 iterations and 1 nodes (1.57 seconds)
Cbc0004I Integer solution of -56.666667 found after 1416 iterations and 8 nodes (1.98 seconds)
Cbc0001I Search completed - best objective -56.666667, took 1416 iterations and 8 nodes (1.98 seconds)
Cbc0032I Strong branching done 98 times (595 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.21   (Wallclock seconds):       1.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 23 (-10) columns and 114 (-69) elements
Clp1000I sum of infeasibilities 7.63621e-06 - average 2.00953e-07, 5 fixed columns
Coin0506I Presolve 28 (-10) rows, 17 (-6) columns and 82 (-32) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Coin0511I After Postsolve, objective 73.652001, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Coin0511I After Postsolve, objective 73.652001, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.6520009 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 23 columns (22 integer (22 of which binary)) and 116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.070%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.54928
Cbc0038I Pass   1: suminf.    0.15556 (1) obj. -58.9704 iterations 9
Cbc0038I Solution found of -50.6667
Cbc0038I Relaxing continuous gives -50.6667
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -50.6667 to -55 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.8653
Cbc0038I Pass   2: suminf.    0.15556 (1) obj. -58.9704 iterations 0
Cbc0038I Pass   3: suminf.    0.15529 (1) obj. -56.8653 iterations 2
Cbc0038I Pass   4: suminf.    0.46250 (1) obj. -58.8427 iterations 3
Cbc0038I Pass   5: suminf.    0.42275 (1) obj. -56.8653 iterations 1
Cbc0038I Pass   6: suminf.    1.65208 (5) obj. -56.8653 iterations 6
Cbc0038I Pass   7: suminf.    1.19079 (5) obj. -56.8653 iterations 4
Cbc0038I Pass   8: suminf.    0.57706 (2) obj. -56.8653 iterations 12
Cbc0038I Pass   9: suminf.    0.22500 (1) obj. -58.8896 iterations 3
Cbc0038I Pass  10: suminf.    0.26569 (1) obj. -56.8653 iterations 1
Cbc0038I Pass  11: suminf.    2.06743 (6) obj. -56.8653 iterations 6
Cbc0038I Pass  12: suminf.    1.25914 (4) obj. -56.8653 iterations 3
Cbc0038I Pass  13: suminf.    1.04980 (3) obj. -56.8653 iterations 1
Cbc0038I Pass  14: suminf.    0.41472 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  15: suminf.    0.29961 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  16: suminf.    0.29961 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  17: suminf.    1.09997 (3) obj. -56.8653 iterations 3
Cbc0038I Pass  18: suminf.    0.29961 (2) obj. -56.8653 iterations 4
Cbc0038I Pass  19: suminf.    2.99301 (7) obj. -56.8653 iterations 6
Cbc0038I Pass  20: suminf.    1.15746 (3) obj. -56.8653 iterations 4
Cbc0038I Pass  21: suminf.    0.65187 (3) obj. -56.8653 iterations 4
Cbc0038I Pass  22: suminf.    0.32097 (2) obj. -56.8653 iterations 1
Cbc0038I Pass  23: suminf.    0.46603 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  24: suminf.    0.46603 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  25: suminf.    1.25841 (7) obj. -56.8653 iterations 7
Cbc0038I Pass  26: suminf.    1.09552 (5) obj. -56.8653 iterations 4
Cbc0038I Pass  27: suminf.    0.60504 (2) obj. -56.8653 iterations 5
Cbc0038I Pass  28: suminf.    0.29907 (2) obj. -56.8653 iterations 2
Cbc0038I Pass  29: suminf.    0.45766 (2) obj. -56.8653 iterations 4
Cbc0038I Pass  30: suminf.    0.45766 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  31: suminf.    0.40937 (3) obj. -56.8653 iterations 3
Cbc0038I Rounding solution of -55.6667 is better than previous of -55

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -60.2226
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.21094 (2) obj. -60.2226 iterations 1
Cbc0038I Pass  32: suminf.    0.55290 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  33: suminf.    0.23940 (1) obj. -60.2226 iterations 2
Cbc0038I Pass  34: suminf.    0.23940 (1) obj. -60.2226 iterations 0
Cbc0038I Pass  35: suminf.    0.40944 (4) obj. -60.2226 iterations 3
Cbc0038I Pass  36: suminf.    0.23940 (1) obj. -60.2226 iterations 3
Cbc0038I Pass  37: suminf.    0.91930 (4) obj. -60.2226 iterations 6
Cbc0038I Pass  38: suminf.    0.87347 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  39: suminf.    0.21094 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  40: suminf.    0.55290 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  41: suminf.    0.23940 (1) obj. -60.2226 iterations 2
Cbc0038I Pass  42: suminf.    0.23940 (1) obj. -60.2226 iterations 0
Cbc0038I Pass  43: suminf.    0.28510 (3) obj. -60.2226 iterations 5
Cbc0038I Pass  44: suminf.    1.30875 (5) obj. -60.2226 iterations 9
Cbc0038I Pass  45: suminf.    0.72608 (4) obj. -60.2226 iterations 6
Cbc0038I Pass  46: suminf.    1.19270 (4) obj. -60.2226 iterations 5
Cbc0038I Pass  47: suminf.    1.11236 (3) obj. -60.2226 iterations 1
Cbc0038I Pass  48: suminf.    0.60115 (3) obj. -60.2226 iterations 2
Cbc0038I Pass  49: suminf.    0.49085 (2) obj. -60.2226 iterations 1
Cbc0038I Pass  50: suminf.    0.32872 (2) obj. -60.2226 iterations 2
Cbc0038I Pass  51: suminf.    0.32872 (2) obj. -60.2226 iterations 0
Cbc0038I Pass  52: suminf.    0.60115 (3) obj. -60.2226 iterations 3
Cbc0038I Pass  53: suminf.    1.28495 (4) obj. -60.2226 iterations 10
Cbc0038I Pass  54: suminf.    1.12602 (3) obj. -60.2226 iterations 3
Cbc0038I Pass  55: suminf.    0.86117 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  56: suminf.    0.58325 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  57: suminf.    0.56017 (3) obj. -60.2226 iterations 2
Cbc0038I Pass  58: suminf.    0.62490 (5) obj. -60.2226 iterations 9
Cbc0038I Pass  59: suminf.    0.62490 (5) obj. -60.2226 iterations 1
Cbc0038I Pass  60: suminf.    1.18699 (3) obj. -60.2226 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -55.6667 - took 0.02 seconds
Cbc0012I Integer solution of -55.666667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 23 columns, reduced to 21 rows 13 columns
Cbc0012I Integer solution of -56.666667 found by DiveCoefficient after 1078 iterations and 0 nodes (0.12 seconds)
Cbc0031I 9 added rows had average density of 12.333333
Cbc0013I At root node, 9 cuts changed objective from -73.652001 to -63.063028 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 341 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 270 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -56.666667, took 1272 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 44 times (301 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-31) rows, 40 (-23) columns and 289 (-360) elements
Clp1000I sum of infeasibilities 3.95436e-06 - average 1.16305e-07, 5 fixed columns
Coin0506I Presolve 26 (-8) rows, 32 (-8) columns and 206 (-83) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 86.878341
Clp0000I Optimal - objective value 86.878341
Coin0511I After Postsolve, objective 86.878341, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.878341
Clp0000I Optimal - objective value 86.878341
Clp0000I Optimal - objective value 86.878341
Coin0511I After Postsolve, objective 86.878341, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.8783407 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 40 columns (40 integer (40 of which binary)) and 293 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.117%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.39787
Cbc0038I Pass   1: suminf.    1.22531 (6) obj. -54.0002 iterations 17
Cbc0038I Pass   2: suminf.    1.22531 (6) obj. -54.0002 iterations 0
Cbc0038I Solution found of -44
Cbc0038I Rounding solution of -47 is better than previous of -44

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 40 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -50.0132
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.22531 (6) obj. -54.0002 iterations 0
Cbc0038I Pass   4: suminf.    1.22531 (6) obj. -54.0002 iterations 0
Cbc0038I Pass   5: suminf.    0.25787 (4) obj. -50.0132 iterations 10
Cbc0038I Pass   6: suminf.    0.48225 (2) obj. -63.7895 iterations 6
Cbc0038I Pass   7: suminf.    0.40342 (1) obj. -50.0132 iterations 2
Cbc0038I Pass   8: suminf.    0.22500 (1) obj. -58.8896 iterations 1
Cbc0038I Pass   9: suminf.    1.43908 (4) obj. -50.0132 iterations 6
Cbc0038I Pass  10: suminf.    1.43908 (4) obj. -50.0132 iterations 2
Cbc0038I Pass  11: suminf.    0.36322 (1) obj. -50.0132 iterations 4
Cbc0038I Pass  12: suminf.    0.22500 (1) obj. -56.8896 iterations 1
Cbc0038I Pass  13: suminf.    1.06262 (6) obj. -50.0132 iterations 11
Cbc0038I Pass  14: suminf.    0.71471 (2) obj. -50.0132 iterations 7
Cbc0038I Pass  15: suminf.    0.53249 (3) obj. -50.0132 iterations 1
Cbc0038I Pass  16: suminf.    0.28750 (1) obj. -53.7802 iterations 3
Cbc0038I Pass  17: suminf.    0.28750 (1) obj. -53.7802 iterations 0
Cbc0038I Pass  18: suminf.    0.36322 (1) obj. -50.0132 iterations 1
Cbc0038I Pass  19: suminf.    1.10277 (3) obj. -50.0132 iterations 4
Cbc0038I Pass  20: suminf.    0.43929 (2) obj. -58.461 iterations 3
Cbc0038I Pass  21: suminf.    0.36322 (1) obj. -50.0132 iterations 2
Cbc0038I Pass  22: suminf.    0.22500 (1) obj. -56.8896 iterations 1
Cbc0038I Pass  23: suminf.    0.93333 (4) obj. -60.8524 iterations 9
Cbc0038I Pass  24: suminf.    0.93333 (4) obj. -60.8524 iterations 2
Cbc0038I Pass  25: suminf.    0.32744 (1) obj. -50.0132 iterations 5
Cbc0038I Pass  26: suminf.    0.15000 (1) obj. -55.6209 iterations 3
Cbc0038I Pass  27: suminf.    0.26272 (1) obj. -50.0132 iterations 1
Cbc0038I Pass  28: suminf.    1.27571 (6) obj. -63.5755 iterations 10
Cbc0038I Pass  29: suminf.    1.27571 (6) obj. -63.5755 iterations 2
Cbc0038I Pass  30: suminf.    0.45270 (1) obj. -50.0132 iterations 7
Cbc0038I Pass  31: suminf.    0.22500 (1) obj. -56.8896 iterations 3
Cbc0038I Pass  32: suminf.    0.36322 (1) obj. -50.0132 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 40 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -47 - took 0.01 seconds
Cbc0012I Integer solution of -46.999997 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 40 columns, reduced to 5 rows 7 columns
Cbc0012I Integer solution of -54.499997 found by DiveCoefficient after 1279 iterations and 0 nodes (1.49 seconds)
Cbc0031I 15 added rows had average density of 14.066667
Cbc0013I At root node, 15 cuts changed objective from -77.131437 to -60.097151 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 749 row cuts average 3.2 elements, 7 column cuts (7 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 359 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 25 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 224 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.749 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -54.499997 best solution, best possible -60.097151 (1.49 seconds)
Cbc0012I Integer solution of -54.666667 found by rounding after 1369 iterations and 1 nodes (1.64 seconds)
Cbc0012I Integer solution of -55.499997 found by DiveCoefficient after 1378 iterations and 2 nodes (1.65 seconds)
Cbc0016I Integer solution of -56.499997 found by strong branching after 1384 iterations and 2 nodes (1.68 seconds)
Cbc0004I Integer solution of -56.666667 found after 1511 iterations and 6 nodes (1.78 seconds)
Cbc0001I Search completed - best objective -56.666667, took 1511 iterations and 6 nodes (1.78 seconds)
Cbc0032I Strong branching done 78 times (579 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 31 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.79

