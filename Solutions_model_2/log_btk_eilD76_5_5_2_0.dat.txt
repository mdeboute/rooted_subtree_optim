Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 0.000129765 - average 9.98196e-07, 3 fixed columns
Coin0506I Presolve 125 (-5) rows, 73 (-3) columns and 388 (-16) elements
Clp0029I End of values pass after 73 iterations
Clp0000I Optimal - objective value 33.972633
Clp0000I Optimal - objective value 33.972633
Coin0511I After Postsolve, objective 33.972633, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.972633
Clp0000I Optimal - objective value 33.972633
Clp0000I Optimal - objective value 33.972633
Coin0511I After Postsolve, objective 33.972633, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.97263337 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 12.0179
Cbc0038I Solution found of 8.67099
Cbc0038I Relaxing continuous gives -2.20651
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 84 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -2.20651 to -6.56228 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.3034
Cbc0038I Pass   1: suminf.    2.46860 (40) obj. -9.3034 iterations 48
Cbc0038I Pass   2: suminf.    0.65876 (7) obj. -9.3034 iterations 42
Cbc0038I Pass   3: suminf.    0.44933 (6) obj. -9.3034 iterations 3
Cbc0038I Pass   4: suminf.    1.06353 (5) obj. -9.3034 iterations 10
Cbc0038I Pass   5: suminf.    1.06353 (5) obj. -9.3034 iterations 1
Cbc0038I Pass   6: suminf.    1.77006 (6) obj. -9.3034 iterations 6
Cbc0038I Pass   7: suminf.    1.41918 (4) obj. -9.3034 iterations 2
Cbc0038I Pass   8: suminf.    1.49539 (6) obj. -9.3034 iterations 5
Cbc0038I Pass   9: suminf.    1.41418 (4) obj. -9.3034 iterations 1
Cbc0038I Pass  10: suminf.    0.61358 (4) obj. -9.3034 iterations 17
Cbc0038I Pass  11: suminf.    0.47306 (3) obj. -9.3034 iterations 7
Cbc0038I Pass  12: suminf.    1.10342 (6) obj. -9.3034 iterations 7
Cbc0038I Pass  13: suminf.    0.79185 (3) obj. -9.3034 iterations 4
Cbc0038I Pass  14: suminf.    1.38975 (6) obj. -9.3034 iterations 6
Cbc0038I Pass  15: suminf.    1.06976 (5) obj. -9.3034 iterations 2
Cbc0038I Pass  16: suminf.    1.58068 (6) obj. -9.3034 iterations 6
Cbc0038I Pass  17: suminf.    1.28996 (5) obj. -9.3034 iterations 2
Cbc0038I Pass  18: suminf.    1.61939 (5) obj. -9.3034 iterations 7
Cbc0038I Pass  19: suminf.    1.61939 (5) obj. -9.3034 iterations 0
Cbc0038I Pass  20: suminf.    2.20599 (6) obj. -9.3034 iterations 2
Cbc0038I Pass  21: suminf.    2.20599 (6) obj. -9.3034 iterations 0
Cbc0038I Pass  22: suminf.    1.78714 (6) obj. -9.3034 iterations 2
Cbc0038I Pass  23: suminf.    1.61939 (5) obj. -9.3034 iterations 1
Cbc0038I Pass  24: suminf.    1.61939 (5) obj. -9.3034 iterations 0
Cbc0038I Pass  25: suminf.    2.20599 (6) obj. -9.3034 iterations 2
Cbc0038I Pass  26: suminf.    2.20599 (6) obj. -9.3034 iterations 0
Cbc0038I Pass  27: suminf.    1.78714 (6) obj. -9.3034 iterations 2
Cbc0038I Pass  28: suminf.    1.61939 (5) obj. -9.3034 iterations 1
Cbc0038I Pass  29: suminf.    1.61939 (5) obj. -9.3034 iterations 0
Cbc0038I Pass  30: suminf.    2.20599 (6) obj. -9.3034 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 95 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -6.56228 - took 0.10 seconds
Cbc0012I Integer solution of -6.562277 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 84 rows 49 columns
Cbc0031I 40 added rows had average density of 47.275
Cbc0013I At root node, 40 cuts changed objective from -33.972633 to -26.308862 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14656 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2153 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.562277 best solution, best possible -26.308862 (1.09 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 58 rows 38 columns
Cbc0038I Full problem 130 rows 76 columns, reduced to 7 rows 11 columns
Cbc0012I Integer solution of -7.33209 found by DiveCoefficient after 11555 iterations and 114 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -7.332090000000001, took 12350 iterations and 138 nodes (1.56 seconds)
Cbc0032I Strong branching done 1416 times (21371 iterations), fathomed 14 nodes and fixed 77 variables
Cbc0035I Maximum depth 32, 299 variables fixed on reduced cost
Total time (CPU seconds):       1.52   (Wallclock seconds):       1.57

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-56) rows, 118 (-34) columns and 1919 (-1384) elements
Clp1000I sum of infeasibilities 6.22256e-08 - average 6.34955e-10, 29 fixed columns
Coin0506I Presolve 72 (-26) rows, 87 (-31) columns and 1190 (-729) elements
Clp0006I 0  Obj 29.797297 Dual inf 3.2051876 (87)
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 1.8257824 - largest nonzero change 2.7838033e-05 ( 0.0018056464%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 48.949542
Clp0000I Optimal - objective value 48.949542
Coin0511I After Postsolve, objective 48.949542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.949542 Dual inf 1.1165465 (2)
Clp0014I Perturbing problem by 0.001% of 1.9680006 - largest nonzero change 2.8981471e-05 ( 0.0028981471%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 50.206137
Clp0000I Optimal - objective value 50.206137
Clp0000I Optimal - objective value 50.206137
Coin0511I After Postsolve, objective 50.206137, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.2061371 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 118 columns (118 integer (118 of which binary)) and 1923 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.411%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.35582
Cbc0038I Pass   1: suminf.    3.65041 (32) obj. -31.1441 iterations 19
Cbc0038I Pass   2: suminf.    3.65041 (32) obj. -31.1441 iterations 1
Cbc0038I Pass   3: suminf.    2.29392 (22) obj. -21.6369 iterations 10
Cbc0038I Solution found of 9.5505
Cbc0038I Rounding solution of 0.169772 is better than previous of 9.5505

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 0.169772 to -2.41518 (0.03 seconds)
Cbc0038I Round again with cutoff of -6.64728
Cbc0038I Pass   4: suminf.    3.65041 (32) obj. -31.1441 iterations 0
Cbc0038I Pass   5: suminf.    3.65041 (32) obj. -31.1441 iterations 1
Cbc0038I Pass   6: suminf.    1.10634 (6) obj. -6.64728 iterations 34
Cbc0038I Pass   7: suminf.    1.10634 (6) obj. -6.64728 iterations 0
Cbc0038I Pass   8: suminf.    0.37108 (1) obj. -6.64728 iterations 9
Cbc0038I Pass   9: suminf.    0.14667 (1) obj. -9.34029 iterations 1
Cbc0038I Pass  10: suminf.    1.63008 (11) obj. -6.64728 iterations 24
Cbc0038I Pass  11: suminf.    1.63008 (11) obj. -6.64728 iterations 4
Cbc0038I Pass  12: suminf.    0.63402 (7) obj. -6.64728 iterations 16
Cbc0038I Pass  13: suminf.    0.63402 (7) obj. -6.64728 iterations 0
Cbc0038I Pass  14: suminf.    0.65413 (4) obj. -6.64728 iterations 15
Cbc0038I Pass  15: suminf.    0.46525 (3) obj. -6.64728 iterations 4
Cbc0038I Pass  16: suminf.    0.63583 (2) obj. -6.64728 iterations 9
Cbc0038I Pass  17: suminf.    0.63583 (2) obj. -6.64728 iterations 0
Cbc0038I Pass  18: suminf.    0.57194 (2) obj. -6.64728 iterations 7
Cbc0038I Pass  19: suminf.    0.53440 (3) obj. -6.64728 iterations 2
Cbc0038I Pass  20: suminf.    2.88687 (17) obj. -6.64728 iterations 24
Cbc0038I Pass  21: suminf.    2.10061 (13) obj. -6.64728 iterations 7
Cbc0038I Pass  22: suminf.    1.23270 (5) obj. -6.64728 iterations 22
Cbc0038I Pass  23: suminf.    0.79124 (5) obj. -6.64728 iterations 3
Cbc0038I Pass  24: suminf.    1.35146 (7) obj. -6.64728 iterations 10
Cbc0038I Pass  25: suminf.    1.35146 (7) obj. -6.64728 iterations 0
Cbc0038I Pass  26: suminf.    1.01900 (5) obj. -6.64728 iterations 11
Cbc0038I Pass  27: suminf.    1.01900 (5) obj. -6.64728 iterations 1
Cbc0038I Pass  28: suminf.    0.83037 (2) obj. -6.64728 iterations 7
Cbc0038I Pass  29: suminf.    0.68972 (2) obj. -6.64728 iterations 2
Cbc0038I Pass  30: suminf.    1.01751 (3) obj. -6.64728 iterations 2
Cbc0038I Pass  31: suminf.    0.43502 (2) obj. -6.64728 iterations 3
Cbc0038I Pass  32: suminf.    0.41000 (2) obj. -6.94756 iterations 1
Cbc0038I Pass  33: suminf.    0.44336 (2) obj. -6.64728 iterations 1
Cbc0038I Rounding solution of -2.91075 is better than previous of -2.41518

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 31 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -2.91075 to -5.2392 (0.10 seconds)
Cbc0038I Round again with cutoff of -14.2649
Cbc0038I Pass  33: suminf.    3.65041 (32) obj. -31.1441 iterations 0
Cbc0038I Pass  34: suminf.    3.65041 (32) obj. -31.1441 iterations 1
Cbc0038I Pass  35: suminf.    1.65612 (15) obj. -14.2649 iterations 42
Cbc0038I Pass  36: suminf.    1.21331 (13) obj. -14.2649 iterations 5
Cbc0038I Pass  37: suminf.    2.45727 (10) obj. -14.2649 iterations 21
Cbc0038I Pass  38: suminf.    1.42063 (7) obj. -14.2649 iterations 4
Cbc0038I Pass  39: suminf.    1.09813 (7) obj. -14.2649 iterations 4
Cbc0038I Pass  40: suminf.    1.23819 (7) obj. -14.2649 iterations 9
Cbc0038I Pass  41: suminf.    1.18324 (6) obj. -14.2649 iterations 3
Cbc0038I Pass  42: suminf.    1.24720 (8) obj. -14.2649 iterations 2
Cbc0038I Pass  43: suminf.    1.21895 (6) obj. -14.2649 iterations 1
Cbc0038I Pass  44: suminf.    1.21239 (9) obj. -14.2649 iterations 3
Cbc0038I Pass  45: suminf.    2.69476 (14) obj. -14.2649 iterations 14
Cbc0038I Pass  46: suminf.    2.20988 (14) obj. -14.2649 iterations 4
Cbc0038I Pass  47: suminf.    2.02667 (12) obj. -14.2649 iterations 4
Cbc0038I Pass  48: suminf.    2.37399 (9) obj. -14.2649 iterations 14
Cbc0038I Pass  49: suminf.    1.06062 (7) obj. -15.5177 iterations 8
Cbc0038I Pass  50: suminf.    1.64100 (8) obj. -14.2649 iterations 15
Cbc0038I Pass  51: suminf.    1.64378 (6) obj. -14.2649 iterations 1
Cbc0038I Pass  52: suminf.    1.68279 (6) obj. -14.2649 iterations 6
Cbc0038I Pass  53: suminf.    1.29988 (6) obj. -14.2649 iterations 3
Cbc0038I Pass  54: suminf.    1.64378 (6) obj. -14.2649 iterations 4
Cbc0038I Pass  55: suminf.    2.56807 (15) obj. -14.2649 iterations 16
Cbc0038I Pass  56: suminf.    1.89949 (12) obj. -14.2649 iterations 9
Cbc0038I Pass  57: suminf.    2.10130 (8) obj. -14.2649 iterations 13
Cbc0038I Pass  58: suminf.    1.76419 (7) obj. -14.2649 iterations 7
Cbc0038I Pass  59: suminf.    1.07347 (6) obj. -14.2649 iterations 5
Cbc0038I Pass  60: suminf.    1.29189 (6) obj. -14.2649 iterations 4
Cbc0038I Pass  61: suminf.    1.29189 (6) obj. -14.2649 iterations 1
Cbc0038I Pass  62: suminf.    1.49462 (6) obj. -14.2649 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 12 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -5.2392 - took 0.10 seconds
Cbc0012I Integer solution of -5.2392 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 11 rows 16 columns
Cbc0031I 59 added rows had average density of 40.355932
Cbc0013I At root node, 59 cuts changed objective from -44.735257 to -18.491386 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24665 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2063 row cuts average 112.7 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 978 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1442 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 368 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.589 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.2392 best solution, best possible -18.491386 (2.81 seconds)
Cbc0010I After 11 nodes, 4 on tree, -5.2392 best solution, best possible -17.253841 (3.52 seconds)
Cbc0010I After 21 nodes, 8 on tree, -5.2392 best solution, best possible -17.253841 (4.38 seconds)
Cbc0012I Integer solution of -5.414957 found by rounding after 11218 iterations and 39 nodes (4.52 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 6 rows 13 columns
Cbc0012I Integer solution of -6.19616 found by RINS after 11275 iterations and 41 nodes (4.54 seconds)
Cbc0004I Integer solution of -6.39685 found after 11467 iterations and 47 nodes (4.57 seconds)
Cbc0012I Integer solution of -6.55319 found by rounding after 12790 iterations and 84 nodes (4.78 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 62 rows 82 columns
Cbc0010I After 136 nodes, 14 on tree, -6.55319 best solution, best possible -17.253841 (5.08 seconds)
Cbc0016I Integer solution of -6.590807 found by strong branching after 18035 iterations and 246 nodes (5.77 seconds)
Cbc0010I After 250 nodes, 3 on tree, -6.590807 best solution, best possible -17.253841 (5.80 seconds)
Cbc0012I Integer solution of -7.33209 found by DiveCoefficient after 18298 iterations and 252 nodes (5.81 seconds)
Cbc0001I Search completed - best objective -7.332090000000001, took 18628 iterations and 266 nodes (5.85 seconds)
Cbc0032I Strong branching done 2568 times (29546 iterations), fathomed 27 nodes and fixed 52 variables
Cbc0035I Maximum depth 27, 545 variables fixed on reduced cost
Total time (CPU seconds):       5.08   (Wallclock seconds):       5.87

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 0.000129765 - average 9.98196e-07, 3 fixed columns
Coin0506I Presolve 125 (-5) rows, 73 (-3) columns and 388 (-16) elements
Clp0029I End of values pass after 73 iterations
Clp0000I Optimal - objective value 33.972633
Clp0000I Optimal - objective value 33.972633
Coin0511I After Postsolve, objective 33.972633, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.972633
Clp0000I Optimal - objective value 33.972633
Clp0000I Optimal - objective value 33.972633
Coin0511I After Postsolve, objective 33.972633, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.97263337 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 12.0179
Cbc0038I Solution found of 8.67099
Cbc0038I Relaxing continuous gives -2.20651
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 84 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -2.20651 to -6.56228 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.3034
Cbc0038I Pass   1: suminf.    2.46860 (40) obj. -9.3034 iterations 48
Cbc0038I Pass   2: suminf.    0.65876 (7) obj. -9.3034 iterations 42
Cbc0038I Pass   3: suminf.    0.44933 (6) obj. -9.3034 iterations 3
Cbc0038I Pass   4: suminf.    1.06353 (5) obj. -9.3034 iterations 10
Cbc0038I Pass   5: suminf.    1.06353 (5) obj. -9.3034 iterations 1
Cbc0038I Pass   6: suminf.    1.77006 (6) obj. -9.3034 iterations 6
Cbc0038I Pass   7: suminf.    1.41918 (4) obj. -9.3034 iterations 2
Cbc0038I Pass   8: suminf.    1.49539 (6) obj. -9.3034 iterations 5
Cbc0038I Pass   9: suminf.    1.41418 (4) obj. -9.3034 iterations 1
Cbc0038I Pass  10: suminf.    0.61358 (4) obj. -9.3034 iterations 17
Cbc0038I Pass  11: suminf.    0.47306 (3) obj. -9.3034 iterations 7
Cbc0038I Pass  12: suminf.    1.10342 (6) obj. -9.3034 iterations 7
Cbc0038I Pass  13: suminf.    0.79185 (3) obj. -9.3034 iterations 4
Cbc0038I Pass  14: suminf.    1.38975 (6) obj. -9.3034 iterations 6
Cbc0038I Pass  15: suminf.    1.06976 (5) obj. -9.3034 iterations 2
Cbc0038I Pass  16: suminf.    1.58068 (6) obj. -9.3034 iterations 6
Cbc0038I Pass  17: suminf.    1.28996 (5) obj. -9.3034 iterations 2
Cbc0038I Pass  18: suminf.    1.61939 (5) obj. -9.3034 iterations 7
Cbc0038I Pass  19: suminf.    1.61939 (5) obj. -9.3034 iterations 0
Cbc0038I Pass  20: suminf.    2.20599 (6) obj. -9.3034 iterations 2
Cbc0038I Pass  21: suminf.    2.20599 (6) obj. -9.3034 iterations 0
Cbc0038I Pass  22: suminf.    1.78714 (6) obj. -9.3034 iterations 2
Cbc0038I Pass  23: suminf.    1.61939 (5) obj. -9.3034 iterations 1
Cbc0038I Pass  24: suminf.    1.61939 (5) obj. -9.3034 iterations 0
Cbc0038I Pass  25: suminf.    2.20599 (6) obj. -9.3034 iterations 2
Cbc0038I Pass  26: suminf.    2.20599 (6) obj. -9.3034 iterations 0
Cbc0038I Pass  27: suminf.    1.78714 (6) obj. -9.3034 iterations 2
Cbc0038I Pass  28: suminf.    1.61939 (5) obj. -9.3034 iterations 1
Cbc0038I Pass  29: suminf.    1.61939 (5) obj. -9.3034 iterations 0
Cbc0038I Pass  30: suminf.    2.20599 (6) obj. -9.3034 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 95 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -6.56228 - took 0.10 seconds
Cbc0012I Integer solution of -6.562277 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 84 rows 49 columns
Cbc0031I 40 added rows had average density of 47.275
Cbc0013I At root node, 40 cuts changed objective from -33.972633 to -26.308862 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14656 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2153 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.562277 best solution, best possible -26.308862 (1.10 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 58 rows 38 columns
Cbc0038I Full problem 130 rows 76 columns, reduced to 7 rows 11 columns
Cbc0012I Integer solution of -7.33209 found by DiveCoefficient after 11555 iterations and 114 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -7.332090000000001, took 12350 iterations and 138 nodes (1.56 seconds)
Cbc0032I Strong branching done 1416 times (21371 iterations), fathomed 14 nodes and fixed 77 variables
Cbc0035I Maximum depth 32, 299 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       1.57

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 118 (-35) columns and 1919 (-1385) elements
Clp1000I sum of infeasibilities 6.22256e-08 - average 6.34955e-10, 29 fixed columns
Coin0506I Presolve 72 (-26) rows, 87 (-31) columns and 1190 (-729) elements
Clp0006I 0  Obj 29.797297 Dual inf 3.2051876 (87)
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 1.8257824 - largest nonzero change 2.7838033e-05 ( 0.0018056464%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 48.949542
Clp0000I Optimal - objective value 48.949542
Coin0511I After Postsolve, objective 48.949542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.949542 Dual inf 1.1165465 (2)
Clp0014I Perturbing problem by 0.001% of 1.9680006 - largest nonzero change 2.8981471e-05 ( 0.0028981471%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 50.206137
Clp0000I Optimal - objective value 50.206137
Clp0000I Optimal - objective value 50.206137
Coin0511I After Postsolve, objective 50.206137, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.2061371 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 118 columns (118 integer (118 of which binary)) and 1923 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.411%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.35582
Cbc0038I Pass   1: suminf.    3.65041 (32) obj. -31.1441 iterations 19
Cbc0038I Pass   2: suminf.    3.65041 (32) obj. -31.1441 iterations 1
Cbc0038I Pass   3: suminf.    2.29392 (22) obj. -21.6369 iterations 10
Cbc0038I Solution found of 9.5505
Cbc0038I Rounding solution of 0.169772 is better than previous of 9.5505

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 0.169772 to -2.41518 (0.04 seconds)
Cbc0038I Round again with cutoff of -6.64728
Cbc0038I Pass   4: suminf.    3.65041 (32) obj. -31.1441 iterations 0
Cbc0038I Pass   5: suminf.    3.65041 (32) obj. -31.1441 iterations 1
Cbc0038I Pass   6: suminf.    1.10634 (6) obj. -6.64728 iterations 34
Cbc0038I Pass   7: suminf.    1.10634 (6) obj. -6.64728 iterations 0
Cbc0038I Pass   8: suminf.    0.37108 (1) obj. -6.64728 iterations 9
Cbc0038I Pass   9: suminf.    0.14667 (1) obj. -9.34029 iterations 1
Cbc0038I Pass  10: suminf.    1.63008 (11) obj. -6.64728 iterations 24
Cbc0038I Pass  11: suminf.    1.63008 (11) obj. -6.64728 iterations 4
Cbc0038I Pass  12: suminf.    0.63402 (7) obj. -6.64728 iterations 16
Cbc0038I Pass  13: suminf.    0.63402 (7) obj. -6.64728 iterations 0
Cbc0038I Pass  14: suminf.    0.65413 (4) obj. -6.64728 iterations 15
Cbc0038I Pass  15: suminf.    0.46525 (3) obj. -6.64728 iterations 4
Cbc0038I Pass  16: suminf.    0.63583 (2) obj. -6.64728 iterations 9
Cbc0038I Pass  17: suminf.    0.63583 (2) obj. -6.64728 iterations 0
Cbc0038I Pass  18: suminf.    0.57194 (2) obj. -6.64728 iterations 7
Cbc0038I Pass  19: suminf.    0.53440 (3) obj. -6.64728 iterations 2
Cbc0038I Pass  20: suminf.    2.88687 (17) obj. -6.64728 iterations 24
Cbc0038I Pass  21: suminf.    2.10061 (13) obj. -6.64728 iterations 7
Cbc0038I Pass  22: suminf.    1.23270 (5) obj. -6.64728 iterations 22
Cbc0038I Pass  23: suminf.    0.79124 (5) obj. -6.64728 iterations 3
Cbc0038I Pass  24: suminf.    1.35146 (7) obj. -6.64728 iterations 10
Cbc0038I Pass  25: suminf.    1.35146 (7) obj. -6.64728 iterations 0
Cbc0038I Pass  26: suminf.    1.01900 (5) obj. -6.64728 iterations 11
Cbc0038I Pass  27: suminf.    1.01900 (5) obj. -6.64728 iterations 1
Cbc0038I Pass  28: suminf.    0.83037 (2) obj. -6.64728 iterations 7
Cbc0038I Pass  29: suminf.    0.68972 (2) obj. -6.64728 iterations 2
Cbc0038I Pass  30: suminf.    1.01751 (3) obj. -6.64728 iterations 2
Cbc0038I Pass  31: suminf.    0.43502 (2) obj. -6.64728 iterations 3
Cbc0038I Pass  32: suminf.    0.41000 (2) obj. -6.94756 iterations 1
Cbc0038I Pass  33: suminf.    0.44336 (2) obj. -6.64728 iterations 1
Cbc0038I Rounding solution of -2.91075 is better than previous of -2.41518

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 31 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -2.91075 to -5.2392 (0.11 seconds)
Cbc0038I Round again with cutoff of -14.2649
Cbc0038I Pass  33: suminf.    3.65041 (32) obj. -31.1441 iterations 0
Cbc0038I Pass  34: suminf.    3.65041 (32) obj. -31.1441 iterations 1
Cbc0038I Pass  35: suminf.    1.65612 (15) obj. -14.2649 iterations 42
Cbc0038I Pass  36: suminf.    1.21331 (13) obj. -14.2649 iterations 5
Cbc0038I Pass  37: suminf.    2.45727 (10) obj. -14.2649 iterations 21
Cbc0038I Pass  38: suminf.    1.42063 (7) obj. -14.2649 iterations 4
Cbc0038I Pass  39: suminf.    1.09813 (7) obj. -14.2649 iterations 4
Cbc0038I Pass  40: suminf.    1.23819 (7) obj. -14.2649 iterations 9
Cbc0038I Pass  41: suminf.    1.18324 (6) obj. -14.2649 iterations 3
Cbc0038I Pass  42: suminf.    1.24720 (8) obj. -14.2649 iterations 2
Cbc0038I Pass  43: suminf.    1.21895 (6) obj. -14.2649 iterations 1
Cbc0038I Pass  44: suminf.    1.21239 (9) obj. -14.2649 iterations 3
Cbc0038I Pass  45: suminf.    2.69476 (14) obj. -14.2649 iterations 14
Cbc0038I Pass  46: suminf.    2.20988 (14) obj. -14.2649 iterations 4
Cbc0038I Pass  47: suminf.    2.02667 (12) obj. -14.2649 iterations 4
Cbc0038I Pass  48: suminf.    2.37399 (9) obj. -14.2649 iterations 14
Cbc0038I Pass  49: suminf.    1.06062 (7) obj. -15.5177 iterations 8
Cbc0038I Pass  50: suminf.    1.64100 (8) obj. -14.2649 iterations 15
Cbc0038I Pass  51: suminf.    1.64378 (6) obj. -14.2649 iterations 1
Cbc0038I Pass  52: suminf.    1.68279 (6) obj. -14.2649 iterations 6
Cbc0038I Pass  53: suminf.    1.29988 (6) obj. -14.2649 iterations 3
Cbc0038I Pass  54: suminf.    1.64378 (6) obj. -14.2649 iterations 4
Cbc0038I Pass  55: suminf.    2.56807 (15) obj. -14.2649 iterations 16
Cbc0038I Pass  56: suminf.    1.89949 (12) obj. -14.2649 iterations 9
Cbc0038I Pass  57: suminf.    2.10130 (8) obj. -14.2649 iterations 13
Cbc0038I Pass  58: suminf.    1.76419 (7) obj. -14.2649 iterations 7
Cbc0038I Pass  59: suminf.    1.07347 (6) obj. -14.2649 iterations 5
Cbc0038I Pass  60: suminf.    1.29189 (6) obj. -14.2649 iterations 4
Cbc0038I Pass  61: suminf.    1.29189 (6) obj. -14.2649 iterations 1
Cbc0038I Pass  62: suminf.    1.49462 (6) obj. -14.2649 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 12 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -5.2392 - took 0.10 seconds
Cbc0012I Integer solution of -5.2392 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 11 rows 16 columns
Cbc0031I 59 added rows had average density of 40.355932
Cbc0013I At root node, 59 cuts changed objective from -44.735257 to -18.491386 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24665 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2063 row cuts average 112.7 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 978 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1442 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 368 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.590 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.2392 best solution, best possible -18.491386 (2.81 seconds)
Cbc0010I After 12 nodes, 5 on tree, -5.2392 best solution, best possible -17.253841 (3.59 seconds)
Cbc0010I After 21 nodes, 8 on tree, -5.2392 best solution, best possible -17.253841 (4.33 seconds)
Cbc0012I Integer solution of -5.414957 found by rounding after 11218 iterations and 39 nodes (4.49 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 6 rows 13 columns
Cbc0012I Integer solution of -6.19616 found by RINS after 11275 iterations and 41 nodes (4.51 seconds)
Cbc0004I Integer solution of -6.39685 found after 11467 iterations and 47 nodes (4.54 seconds)
Cbc0012I Integer solution of -6.55319 found by rounding after 12790 iterations and 84 nodes (4.75 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 62 rows 82 columns
Cbc0010I After 135 nodes, 13 on tree, -6.55319 best solution, best possible -17.253841 (5.03 seconds)
Cbc0016I Integer solution of -6.590807 found by strong branching after 18035 iterations and 246 nodes (5.72 seconds)
Cbc0010I After 250 nodes, 3 on tree, -6.590807 best solution, best possible -17.253841 (5.75 seconds)
Cbc0012I Integer solution of -7.33209 found by DiveCoefficient after 18298 iterations and 252 nodes (5.76 seconds)
Cbc0001I Search completed - best objective -7.332090000000001, took 18628 iterations and 266 nodes (5.80 seconds)
Cbc0032I Strong branching done 2568 times (29546 iterations), fathomed 27 nodes and fixed 52 variables
Cbc0035I Maximum depth 27, 545 variables fixed on reduced cost
Total time (CPU seconds):       5.05   (Wallclock seconds):       5.82

