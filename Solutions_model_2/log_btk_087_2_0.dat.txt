Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 165 (-11) rows, 85 (-4) columns and 412 (-22) elements
Clp1000I sum of infeasibilities 0.000427284 - average 2.5896e-06, 6 fixed columns
Coin0506I Presolve 149 (-16) rows, 79 (-6) columns and 374 (-38) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 0.33843303 - largest nonzero change 0 ( 0%) - largest zero change 2.7754997e-05
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Coin0511I After Postsolve, objective 10865.155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 9.7350666 - largest nonzero change 1.889062e-05 ( 0.001889062%) - largest zero change 1.7496509e-05
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Coin0511I After Postsolve, objective 10865.155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10865.15528 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 165 rows, 85 columns (84 integer (84 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.128%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 29.251
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2984.72 iterations 82
Cbc0038I Solution found of 2984.72
Cbc0038I Relaxing continuous gives 2984.72
Cbc0038I Rounding solution of 1750.12 is better than previous of 2984.72

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 165 rows 85 columns, reduced to 128 rows 70 columns - 12 fixed gives 66, 50 - ok now
Cbc0038I Full problem 165 rows 85 columns, reduced to 66 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 1750.12 to -2561.93 (0.04 seconds)
Cbc0038I Round again with cutoff of -3392.25
Cbc0038I Pass   2: suminf.    5.60685 (21) obj. -3392.25 iterations 24
Cbc0038I Pass   3: suminf.    4.93249 (15) obj. -3392.25 iterations 8
Cbc0038I Pass   4: suminf.    3.02837 (13) obj. -3392.25 iterations 21
Cbc0038I Pass   5: suminf.    2.93311 (13) obj. -3392.25 iterations 6
Cbc0038I Pass   6: suminf.    4.99436 (19) obj. -3392.25 iterations 25
Cbc0038I Pass   7: suminf.    2.67685 (9) obj. -3392.25 iterations 22
Cbc0038I Pass   8: suminf.    4.04716 (15) obj. -3392.25 iterations 14
Cbc0038I Pass   9: suminf.    4.93459 (31) obj. -3392.25 iterations 20
Cbc0038I Pass  10: suminf.    4.06279 (16) obj. -3392.25 iterations 15
Cbc0038I Pass  11: suminf.    4.53590 (16) obj. -3392.25 iterations 14
Cbc0038I Pass  12: suminf.    4.06810 (15) obj. -3392.25 iterations 6
Cbc0038I Pass  13: suminf.    6.39994 (18) obj. -3392.25 iterations 23
Cbc0038I Pass  14: suminf.    4.40461 (15) obj. -3392.25 iterations 7
Cbc0038I Pass  15: suminf.    3.60939 (13) obj. -3392.25 iterations 8
Cbc0038I Pass  16: suminf.    6.57562 (18) obj. -3392.25 iterations 26
Cbc0038I Pass  17: suminf.   10.02681 (31) obj. -3392.25 iterations 45
Cbc0038I Pass  18: suminf.    4.58693 (17) obj. -3392.25 iterations 34
Cbc0038I Pass  19: suminf.    4.58693 (17) obj. -3392.25 iterations 0
Cbc0038I Pass  20: suminf.    5.75719 (17) obj. -3392.25 iterations 24
Cbc0038I Pass  21: suminf.    4.41450 (15) obj. -3392.25 iterations 12
Cbc0038I Pass  22: suminf.    4.27726 (27) obj. -3392.25 iterations 5
Cbc0038I Pass  23: suminf.    4.49528 (21) obj. -3392.25 iterations 32
Cbc0038I Pass  24: suminf.    4.46629 (15) obj. -3392.25 iterations 2
Cbc0038I Pass  25: suminf.    5.67037 (19) obj. -3392.25 iterations 23
Cbc0038I Pass  26: suminf.    5.39782 (20) obj. -3392.25 iterations 11
Cbc0038I Pass  27: suminf.    5.39782 (20) obj. -3392.25 iterations 1
Cbc0038I Pass  28: suminf.    6.32800 (17) obj. -3392.25 iterations 24
Cbc0038I Pass  29: suminf.    6.01193 (18) obj. -3392.25 iterations 6
Cbc0038I Pass  30: suminf.    7.54290 (19) obj. -3392.25 iterations 20
Cbc0038I Pass  31: suminf.    6.44346 (19) obj. -3392.25 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 165 rows 85 columns, reduced to 128 rows 71 columns - 19 fixed gives 66, 51 - ok now
Cbc0038I Full problem 165 rows 85 columns, reduced to 66 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -2561.93 - took 0.05 seconds
Cbc0012I Integer solution of -2561.9291 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 15 added rows had average density of 47.2
Cbc0013I At root node, 15 cuts changed objective from -10865.155 to -6796.4477 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9421 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1017 row cuts average 78.2 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 54.6 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2561.9291 best solution, best possible -6796.0867 (0.80 seconds)
Cbc0012I Integer solution of -2892.6433 found by DiveCoefficient after 4712 iterations and 9 nodes (0.95 seconds)
Cbc0012I Integer solution of -2904.4843 found by DiveCoefficient after 4745 iterations and 11 nodes (0.95 seconds)
Cbc0016I Integer solution of -2907.1751 found by strong branching after 4782 iterations and 13 nodes (0.96 seconds)
Cbc0001I Search completed - best objective -2907.175079999997, took 4793 iterations and 14 nodes (0.97 seconds)
Cbc0032I Strong branching done 278 times (4941 iterations), fathomed 3 nodes and fixed 12 variables
Cbc0035I Maximum depth 3, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.93   (Wallclock seconds):       0.98

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-47) rows, 131 (-43) columns and 2174 (-2001) elements
Clp1000I sum of infeasibilities 2.63717e-06 - average 2.06029e-08, 61 fixed columns
Coin0506I Presolve 68 (-60) rows, 70 (-61) columns and 215 (-1959) elements
Clp0006I 0  Obj 2433.0226 Dual inf 364.76503 (41)
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 1.5164246 - largest nonzero change 2.9788961e-05 ( 0.001879187%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 4008.3897
Clp0000I Optimal - objective value 4008.3897
Coin0511I After Postsolve, objective 4008.3897, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 4008.3897 Dual inf 4818.9359 (47)
Clp0014I Perturbing problem by 0.001% of 4.9257711 - largest nonzero change 2.9925364e-05 ( 0.0020816521%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 13164.715
Clp0000I Optimal - objective value 13164.715
Clp0000I Optimal - objective value 13164.715
Coin0511I After Postsolve, objective 13164.715, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13164.71505 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 131 columns (131 integer (131 of which binary)) and 2175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.078%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 63 integers unsatisfied sum - 22.95
Cbc0038I Pass   1: suminf.    8.93692 (37) obj. -7323.26 iterations 18
Cbc0038I Pass   2: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass   3: suminf.    4.59621 (21) obj. -1993.05 iterations 16
Cbc0038I Pass   4: suminf.    2.15137 (11) obj. 713.692 iterations 10
Cbc0038I Solution found of 3493.8
Cbc0038I Rounding solution of 2507.39 is better than previous of 3493.8

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 131 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 2507.39 to -859.149 (0.04 seconds)
Cbc0038I Round again with cutoff of -2073.23
Cbc0038I Pass   5: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass   6: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass   7: suminf.    2.57127 (12) obj. -2073.23 iterations 26
Cbc0038I Pass   8: suminf.    2.54002 (12) obj. -2108.38 iterations 1
Cbc0038I Pass   9: suminf.    1.24235 (5) obj. -2073.23 iterations 11
Cbc0038I Pass  10: suminf.    1.21108 (5) obj. -2104.5 iterations 2
Cbc0038I Pass  11: suminf.    1.66812 (12) obj. -2073.23 iterations 4
Cbc0038I Pass  12: suminf.    1.66812 (12) obj. -2073.23 iterations 0
Cbc0038I Pass  13: suminf.    0.78392 (2) obj. -2073.23 iterations 15
Cbc0038I Pass  14: suminf.    0.78392 (2) obj. -2073.23 iterations 1
Cbc0038I Pass  15: suminf.    0.79171 (2) obj. -2073.23 iterations 2
Cbc0038I Pass  16: suminf.    4.67721 (12) obj. -2073.23 iterations 48
Cbc0038I Pass  17: suminf.    3.74262 (10) obj. -2443.65 iterations 6
Cbc0038I Pass  18: suminf.    1.13352 (3) obj. -2073.23 iterations 19
Cbc0038I Pass  19: suminf.    0.94748 (3) obj. -2282.52 iterations 3
Cbc0038I Pass  20: suminf.    9.01541 (28) obj. -2073.23 iterations 43
Cbc0038I Pass  21: suminf.    3.99127 (13) obj. -2073.23 iterations 17
Cbc0038I Pass  22: suminf.    3.96175 (13) obj. -2095.37 iterations 7
Cbc0038I Pass  23: suminf.    3.57988 (11) obj. -2073.23 iterations 24
Cbc0038I Pass  24: suminf.    3.57988 (11) obj. -2073.23 iterations 1
Cbc0038I Pass  25: suminf.    3.04092 (11) obj. -2073.23 iterations 6
Cbc0038I Pass  26: suminf.    3.04092 (11) obj. -2073.23 iterations 1
Cbc0038I Pass  27: suminf.    3.57988 (11) obj. -2073.23 iterations 2
Cbc0038I Pass  28: suminf.    4.46289 (17) obj. -2073.23 iterations 33
Cbc0038I Pass  29: suminf.    4.45244 (16) obj. -2073.23 iterations 6
Cbc0038I Pass  30: suminf.    2.87896 (10) obj. -2073.23 iterations 16
Cbc0038I Pass  31: suminf.    2.87896 (10) obj. -2073.23 iterations 1
Cbc0038I Pass  32: suminf.    3.04432 (9) obj. -2073.23 iterations 10
Cbc0038I Pass  33: suminf.    3.04432 (9) obj. -2073.23 iterations 3
Cbc0038I Pass  34: suminf.    3.01590 (8) obj. -2073.23 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 131 columns, reduced to 44 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -859.149 to -1948.78 (0.08 seconds)
Cbc0038I Round again with cutoff of -4258.57
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass  35: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass  36: suminf.    5.45601 (24) obj. -4258.57 iterations 16
Cbc0038I Pass  37: suminf.    5.45601 (24) obj. -4258.57 iterations 0
Cbc0038I Pass  38: suminf.    3.45854 (13) obj. -4258.57 iterations 26
Cbc0038I Pass  39: suminf.    3.34554 (12) obj. -4258.57 iterations 1
Cbc0038I Pass  40: suminf.    3.10951 (13) obj. -4258.57 iterations 3
Cbc0038I Pass  41: suminf.    1.99186 (5) obj. -4258.57 iterations 15
Cbc0038I Pass  42: suminf.    1.88226 (5) obj. -4368.17 iterations 5
Cbc0038I Pass  43: suminf.    1.99186 (5) obj. -4258.57 iterations 5
Cbc0038I Pass  44: suminf.    8.92509 (23) obj. -4258.57 iterations 23
Cbc0038I Pass  45: suminf.    4.28354 (13) obj. -4258.57 iterations 15
Cbc0038I Pass  46: suminf.    4.28354 (13) obj. -4258.57 iterations 0
Cbc0038I Pass  47: suminf.    3.98540 (10) obj. -4258.57 iterations 18
Cbc0038I Pass  48: suminf.    2.01724 (5) obj. -5414.28 iterations 9
Cbc0038I Pass  49: suminf.    1.11385 (3) obj. -4258.57 iterations 5
Cbc0038I Pass  50: suminf.    1.04105 (3) obj. -4340.47 iterations 3
Cbc0038I Pass  51: suminf.    4.07223 (11) obj. -4258.57 iterations 20
Cbc0038I Pass  52: suminf.    3.45072 (9) obj. -4258.57 iterations 10
Cbc0038I Pass  53: suminf.    3.04777 (8) obj. -5602.52 iterations 1
Cbc0038I Pass  54: suminf.    0.87350 (3) obj. -4258.57 iterations 8
Cbc0038I Pass  55: suminf.    0.87350 (3) obj. -4258.57 iterations 0
Cbc0038I Pass  56: suminf.    0.94338 (3) obj. -4258.57 iterations 4
Cbc0038I Pass  57: suminf.    0.94338 (3) obj. -4258.57 iterations 0
Cbc0038I Pass  58: suminf.    0.87350 (3) obj. -4258.57 iterations 4
Cbc0038I Pass  59: suminf.    4.73037 (15) obj. -4258.57 iterations 34
Cbc0038I Pass  60: suminf.    4.67502 (14) obj. -4258.57 iterations 7
Cbc0038I Pass  61: suminf.    2.89328 (9) obj. -4258.57 iterations 21
Cbc0038I Pass  62: suminf.    2.81374 (9) obj. -4258.57 iterations 6
Cbc0038I Pass  63: suminf.    2.89328 (9) obj. -4258.57 iterations 8
Cbc0038I Rounding solution of -1983.86 is better than previous of -1948.78

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 131 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -6880.98
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass  64: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass  65: suminf.    6.85526 (31) obj. -6880.98 iterations 10
Cbc0038I Pass  66: suminf.    6.83042 (30) obj. -7196.17 iterations 1
Cbc0038I Pass  67: suminf.    6.02756 (23) obj. -6880.98 iterations 26
Cbc0038I Pass  68: suminf.    5.02737 (18) obj. -6880.98 iterations 4
Cbc0038I Pass  69: suminf.    5.02737 (18) obj. -6880.98 iterations 1
Cbc0038I Pass  70: suminf.    4.50907 (15) obj. -6880.98 iterations 18
Cbc0038I Pass  71: suminf.    4.48525 (14) obj. -6880.98 iterations 5
Cbc0038I Pass  72: suminf.    4.01630 (10) obj. -6880.98 iterations 18
Cbc0038I Pass  73: suminf.    4.01630 (10) obj. -6880.98 iterations 4
Cbc0038I Pass  74: suminf.    3.85112 (10) obj. -6880.98 iterations 7
Cbc0038I Pass  75: suminf.    3.85112 (10) obj. -6880.98 iterations 4
Cbc0038I Pass  76: suminf.    4.13483 (10) obj. -6880.98 iterations 9
Cbc0038I Pass  77: suminf.    6.04948 (17) obj. -6880.98 iterations 25
Cbc0038I Pass  78: suminf.    6.04948 (17) obj. -6880.98 iterations 8
Cbc0038I Pass  79: suminf.    4.73304 (12) obj. -6880.98 iterations 21
Cbc0038I Pass  80: suminf.    4.73062 (12) obj. -6880.98 iterations 3
Cbc0038I Pass  81: suminf.    4.87066 (12) obj. -6880.98 iterations 5
Cbc0038I Pass  82: suminf.    4.47864 (12) obj. -6880.98 iterations 5
Cbc0038I Pass  83: suminf.    4.47864 (12) obj. -6880.98 iterations 1
Cbc0038I Pass  84: suminf.    4.73062 (12) obj. -6880.98 iterations 5
Cbc0038I Pass  85: suminf.    4.73062 (12) obj. -6880.98 iterations 3
Cbc0038I Pass  86: suminf.    4.73062 (12) obj. -6880.98 iterations 3
Cbc0038I Pass  87: suminf.   10.32152 (29) obj. -6880.98 iterations 31
Cbc0038I Pass  88: suminf.    6.62424 (20) obj. -6880.98 iterations 10
Cbc0038I Pass  89: suminf.    6.58881 (20) obj. -6880.98 iterations 3
Cbc0038I Pass  90: suminf.    4.73062 (12) obj. -6880.98 iterations 26
Cbc0038I Pass  91: suminf.    4.73062 (12) obj. -6880.98 iterations 1
Cbc0038I Pass  92: suminf.    4.87066 (12) obj. -6880.98 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -1983.86 - took 0.11 seconds
Cbc0012I Integer solution of -1983.8551 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 128 rows 131 columns, reduced to 16 rows 18 columns
Cbc0031I 46 added rows had average density of 67.73913
Cbc0013I At root node, 46 cuts changed objective from -12999.937 to -4088.6723 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22734 row cuts average 2.0 elements, 1 column cuts (17 active)  in 0.201 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2524 row cuts average 119.9 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 779 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.225 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 786 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 440 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.520 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1983.8551 best solution, best possible -4088.6723 (3.15 seconds)
Cbc0012I Integer solution of -2104.3991 found by DiveCoefficient after 4224 iterations and 1 nodes (3.60 seconds)
Cbc0010I After 5 nodes, 6 on tree, -2104.3991 best solution, best possible -4088.6723 (3.89 seconds)
Cbc0012I Integer solution of -2907.1751 found by rounding after 5079 iterations and 28 nodes (4.27 seconds)
Cbc0038I Full problem 128 rows 131 columns, reduced to 43 rows 49 columns
Cbc0001I Search completed - best objective -2907.175079999997, took 5958 iterations and 54 nodes (4.34 seconds)
Cbc0032I Strong branching done 680 times (16240 iterations), fathomed 6 nodes and fixed 3 variables
Cbc0035I Maximum depth 24, 65 variables fixed on reduced cost
Total time (CPU seconds):       3.64   (Wallclock seconds):       4.36

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 165 (-11) rows, 85 (-4) columns and 412 (-22) elements
Clp1000I sum of infeasibilities 0.000427284 - average 2.5896e-06, 6 fixed columns
Coin0506I Presolve 149 (-16) rows, 79 (-6) columns and 374 (-38) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 0.33843303 - largest nonzero change 0 ( 0%) - largest zero change 2.7754997e-05
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Coin0511I After Postsolve, objective 10865.155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 9.7350666 - largest nonzero change 1.889062e-05 ( 0.001889062%) - largest zero change 1.7496509e-05
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Coin0511I After Postsolve, objective 10865.155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10865.15528 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 165 rows, 85 columns (84 integer (84 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.128%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 29.251
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2984.72 iterations 82
Cbc0038I Solution found of 2984.72
Cbc0038I Relaxing continuous gives 2984.72
Cbc0038I Rounding solution of 1750.12 is better than previous of 2984.72

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 165 rows 85 columns, reduced to 128 rows 70 columns - 12 fixed gives 66, 50 - ok now
Cbc0038I Full problem 165 rows 85 columns, reduced to 66 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 1750.12 to -2561.93 (0.03 seconds)
Cbc0038I Round again with cutoff of -3392.25
Cbc0038I Pass   2: suminf.    5.60685 (21) obj. -3392.25 iterations 24
Cbc0038I Pass   3: suminf.    4.93249 (15) obj. -3392.25 iterations 8
Cbc0038I Pass   4: suminf.    3.02837 (13) obj. -3392.25 iterations 21
Cbc0038I Pass   5: suminf.    2.93311 (13) obj. -3392.25 iterations 6
Cbc0038I Pass   6: suminf.    4.99436 (19) obj. -3392.25 iterations 25
Cbc0038I Pass   7: suminf.    2.67685 (9) obj. -3392.25 iterations 22
Cbc0038I Pass   8: suminf.    4.04716 (15) obj. -3392.25 iterations 14
Cbc0038I Pass   9: suminf.    4.93459 (31) obj. -3392.25 iterations 20
Cbc0038I Pass  10: suminf.    4.06279 (16) obj. -3392.25 iterations 15
Cbc0038I Pass  11: suminf.    4.53590 (16) obj. -3392.25 iterations 14
Cbc0038I Pass  12: suminf.    4.06810 (15) obj. -3392.25 iterations 6
Cbc0038I Pass  13: suminf.    6.39994 (18) obj. -3392.25 iterations 23
Cbc0038I Pass  14: suminf.    4.40461 (15) obj. -3392.25 iterations 7
Cbc0038I Pass  15: suminf.    3.60939 (13) obj. -3392.25 iterations 8
Cbc0038I Pass  16: suminf.    6.57562 (18) obj. -3392.25 iterations 26
Cbc0038I Pass  17: suminf.   10.02681 (31) obj. -3392.25 iterations 45
Cbc0038I Pass  18: suminf.    4.58693 (17) obj. -3392.25 iterations 34
Cbc0038I Pass  19: suminf.    4.58693 (17) obj. -3392.25 iterations 0
Cbc0038I Pass  20: suminf.    5.75719 (17) obj. -3392.25 iterations 24
Cbc0038I Pass  21: suminf.    4.41450 (15) obj. -3392.25 iterations 12
Cbc0038I Pass  22: suminf.    4.27726 (27) obj. -3392.25 iterations 5
Cbc0038I Pass  23: suminf.    4.49528 (21) obj. -3392.25 iterations 32
Cbc0038I Pass  24: suminf.    4.46629 (15) obj. -3392.25 iterations 2
Cbc0038I Pass  25: suminf.    5.67037 (19) obj. -3392.25 iterations 23
Cbc0038I Pass  26: suminf.    5.39782 (20) obj. -3392.25 iterations 11
Cbc0038I Pass  27: suminf.    5.39782 (20) obj. -3392.25 iterations 1
Cbc0038I Pass  28: suminf.    6.32800 (17) obj. -3392.25 iterations 24
Cbc0038I Pass  29: suminf.    6.01193 (18) obj. -3392.25 iterations 6
Cbc0038I Pass  30: suminf.    7.54290 (19) obj. -3392.25 iterations 20
Cbc0038I Pass  31: suminf.    6.44346 (19) obj. -3392.25 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 165 rows 85 columns, reduced to 128 rows 71 columns - 19 fixed gives 66, 51 - ok now
Cbc0038I Full problem 165 rows 85 columns, reduced to 66 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2561.93 - took 0.05 seconds
Cbc0012I Integer solution of -2561.9291 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 15 added rows had average density of 47.2
Cbc0013I At root node, 15 cuts changed objective from -10865.155 to -6796.4477 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9421 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1017 row cuts average 78.2 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 54.6 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2561.9291 best solution, best possible -6796.0867 (0.72 seconds)
Cbc0012I Integer solution of -2892.6433 found by DiveCoefficient after 4712 iterations and 9 nodes (0.87 seconds)
Cbc0012I Integer solution of -2904.4843 found by DiveCoefficient after 4745 iterations and 11 nodes (0.88 seconds)
Cbc0016I Integer solution of -2907.1751 found by strong branching after 4782 iterations and 13 nodes (0.89 seconds)
Cbc0001I Search completed - best objective -2907.175079999997, took 4793 iterations and 14 nodes (0.89 seconds)
Cbc0032I Strong branching done 278 times (4941 iterations), fathomed 3 nodes and fixed 12 variables
Cbc0035I Maximum depth 3, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-48) rows, 131 (-44) columns and 2174 (-2002) elements
Clp1000I sum of infeasibilities 2.63717e-06 - average 2.06029e-08, 61 fixed columns
Coin0506I Presolve 68 (-60) rows, 70 (-61) columns and 215 (-1959) elements
Clp0006I 0  Obj 2433.0226 Dual inf 364.76503 (41)
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 1.5164246 - largest nonzero change 2.9788961e-05 ( 0.001879187%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 4008.3897
Clp0000I Optimal - objective value 4008.3897
Coin0511I After Postsolve, objective 4008.3897, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 4008.3897 Dual inf 4818.9359 (47)
Clp0014I Perturbing problem by 0.001% of 4.9257711 - largest nonzero change 2.9925364e-05 ( 0.0020816521%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 13164.715
Clp0000I Optimal - objective value 13164.715
Clp0000I Optimal - objective value 13164.715
Coin0511I After Postsolve, objective 13164.715, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13164.71505 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 131 columns (131 integer (131 of which binary)) and 2175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.078%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 63 integers unsatisfied sum - 22.95
Cbc0038I Pass   1: suminf.    8.93692 (37) obj. -7323.26 iterations 18
Cbc0038I Pass   2: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass   3: suminf.    4.59621 (21) obj. -1993.05 iterations 16
Cbc0038I Pass   4: suminf.    2.15137 (11) obj. 713.692 iterations 10
Cbc0038I Solution found of 3493.8
Cbc0038I Rounding solution of 2507.39 is better than previous of 3493.8

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 131 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 2507.39 to -859.149 (0.03 seconds)
Cbc0038I Round again with cutoff of -2073.23
Cbc0038I Pass   5: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass   6: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass   7: suminf.    2.57127 (12) obj. -2073.23 iterations 26
Cbc0038I Pass   8: suminf.    2.54002 (12) obj. -2108.38 iterations 1
Cbc0038I Pass   9: suminf.    1.24235 (5) obj. -2073.23 iterations 11
Cbc0038I Pass  10: suminf.    1.21108 (5) obj. -2104.5 iterations 2
Cbc0038I Pass  11: suminf.    1.66812 (12) obj. -2073.23 iterations 4
Cbc0038I Pass  12: suminf.    1.66812 (12) obj. -2073.23 iterations 0
Cbc0038I Pass  13: suminf.    0.78392 (2) obj. -2073.23 iterations 15
Cbc0038I Pass  14: suminf.    0.78392 (2) obj. -2073.23 iterations 1
Cbc0038I Pass  15: suminf.    0.79171 (2) obj. -2073.23 iterations 2
Cbc0038I Pass  16: suminf.    4.67721 (12) obj. -2073.23 iterations 48
Cbc0038I Pass  17: suminf.    3.74262 (10) obj. -2443.65 iterations 6
Cbc0038I Pass  18: suminf.    1.13352 (3) obj. -2073.23 iterations 19
Cbc0038I Pass  19: suminf.    0.94748 (3) obj. -2282.52 iterations 3
Cbc0038I Pass  20: suminf.    9.01541 (28) obj. -2073.23 iterations 43
Cbc0038I Pass  21: suminf.    3.99127 (13) obj. -2073.23 iterations 17
Cbc0038I Pass  22: suminf.    3.96175 (13) obj. -2095.37 iterations 7
Cbc0038I Pass  23: suminf.    3.57988 (11) obj. -2073.23 iterations 24
Cbc0038I Pass  24: suminf.    3.57988 (11) obj. -2073.23 iterations 1
Cbc0038I Pass  25: suminf.    3.04092 (11) obj. -2073.23 iterations 6
Cbc0038I Pass  26: suminf.    3.04092 (11) obj. -2073.23 iterations 1
Cbc0038I Pass  27: suminf.    3.57988 (11) obj. -2073.23 iterations 2
Cbc0038I Pass  28: suminf.    4.46289 (17) obj. -2073.23 iterations 33
Cbc0038I Pass  29: suminf.    4.45244 (16) obj. -2073.23 iterations 6
Cbc0038I Pass  30: suminf.    2.87896 (10) obj. -2073.23 iterations 16
Cbc0038I Pass  31: suminf.    2.87896 (10) obj. -2073.23 iterations 1
Cbc0038I Pass  32: suminf.    3.04432 (9) obj. -2073.23 iterations 10
Cbc0038I Pass  33: suminf.    3.04432 (9) obj. -2073.23 iterations 3
Cbc0038I Pass  34: suminf.    3.01590 (8) obj. -2073.23 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 131 columns, reduced to 44 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -859.149 to -1948.78 (0.07 seconds)
Cbc0038I Round again with cutoff of -4258.57
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass  35: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass  36: suminf.    5.45601 (24) obj. -4258.57 iterations 16
Cbc0038I Pass  37: suminf.    5.45601 (24) obj. -4258.57 iterations 0
Cbc0038I Pass  38: suminf.    3.45854 (13) obj. -4258.57 iterations 26
Cbc0038I Pass  39: suminf.    3.34554 (12) obj. -4258.57 iterations 1
Cbc0038I Pass  40: suminf.    3.10951 (13) obj. -4258.57 iterations 3
Cbc0038I Pass  41: suminf.    1.99186 (5) obj. -4258.57 iterations 15
Cbc0038I Pass  42: suminf.    1.88226 (5) obj. -4368.17 iterations 5
Cbc0038I Pass  43: suminf.    1.99186 (5) obj. -4258.57 iterations 5
Cbc0038I Pass  44: suminf.    8.92509 (23) obj. -4258.57 iterations 23
Cbc0038I Pass  45: suminf.    4.28354 (13) obj. -4258.57 iterations 15
Cbc0038I Pass  46: suminf.    4.28354 (13) obj. -4258.57 iterations 0
Cbc0038I Pass  47: suminf.    3.98540 (10) obj. -4258.57 iterations 18
Cbc0038I Pass  48: suminf.    2.01724 (5) obj. -5414.28 iterations 9
Cbc0038I Pass  49: suminf.    1.11385 (3) obj. -4258.57 iterations 5
Cbc0038I Pass  50: suminf.    1.04105 (3) obj. -4340.47 iterations 3
Cbc0038I Pass  51: suminf.    4.07223 (11) obj. -4258.57 iterations 20
Cbc0038I Pass  52: suminf.    3.45072 (9) obj. -4258.57 iterations 10
Cbc0038I Pass  53: suminf.    3.04777 (8) obj. -5602.52 iterations 1
Cbc0038I Pass  54: suminf.    0.87350 (3) obj. -4258.57 iterations 8
Cbc0038I Pass  55: suminf.    0.87350 (3) obj. -4258.57 iterations 0
Cbc0038I Pass  56: suminf.    0.94338 (3) obj. -4258.57 iterations 4
Cbc0038I Pass  57: suminf.    0.94338 (3) obj. -4258.57 iterations 0
Cbc0038I Pass  58: suminf.    0.87350 (3) obj. -4258.57 iterations 4
Cbc0038I Pass  59: suminf.    4.73037 (15) obj. -4258.57 iterations 34
Cbc0038I Pass  60: suminf.    4.67502 (14) obj. -4258.57 iterations 7
Cbc0038I Pass  61: suminf.    2.89328 (9) obj. -4258.57 iterations 21
Cbc0038I Pass  62: suminf.    2.81374 (9) obj. -4258.57 iterations 6
Cbc0038I Pass  63: suminf.    2.89328 (9) obj. -4258.57 iterations 8
Cbc0038I Rounding solution of -1983.86 is better than previous of -1948.78

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 131 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -6880.98
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass  64: suminf.    8.93692 (37) obj. -7323.26 iterations 0
Cbc0038I Pass  65: suminf.    6.85526 (31) obj. -6880.98 iterations 10
Cbc0038I Pass  66: suminf.    6.83042 (30) obj. -7196.17 iterations 1
Cbc0038I Pass  67: suminf.    6.02756 (23) obj. -6880.98 iterations 26
Cbc0038I Pass  68: suminf.    5.02737 (18) obj. -6880.98 iterations 4
Cbc0038I Pass  69: suminf.    5.02737 (18) obj. -6880.98 iterations 1
Cbc0038I Pass  70: suminf.    4.50907 (15) obj. -6880.98 iterations 18
Cbc0038I Pass  71: suminf.    4.48525 (14) obj. -6880.98 iterations 5
Cbc0038I Pass  72: suminf.    4.01630 (10) obj. -6880.98 iterations 18
Cbc0038I Pass  73: suminf.    4.01630 (10) obj. -6880.98 iterations 4
Cbc0038I Pass  74: suminf.    3.85112 (10) obj. -6880.98 iterations 7
Cbc0038I Pass  75: suminf.    3.85112 (10) obj. -6880.98 iterations 4
Cbc0038I Pass  76: suminf.    4.13483 (10) obj. -6880.98 iterations 9
Cbc0038I Pass  77: suminf.    6.04948 (17) obj. -6880.98 iterations 25
Cbc0038I Pass  78: suminf.    6.04948 (17) obj. -6880.98 iterations 8
Cbc0038I Pass  79: suminf.    4.73304 (12) obj. -6880.98 iterations 21
Cbc0038I Pass  80: suminf.    4.73062 (12) obj. -6880.98 iterations 3
Cbc0038I Pass  81: suminf.    4.87066 (12) obj. -6880.98 iterations 5
Cbc0038I Pass  82: suminf.    4.47864 (12) obj. -6880.98 iterations 5
Cbc0038I Pass  83: suminf.    4.47864 (12) obj. -6880.98 iterations 1
Cbc0038I Pass  84: suminf.    4.73062 (12) obj. -6880.98 iterations 5
Cbc0038I Pass  85: suminf.    4.73062 (12) obj. -6880.98 iterations 3
Cbc0038I Pass  86: suminf.    4.73062 (12) obj. -6880.98 iterations 3
Cbc0038I Pass  87: suminf.   10.32152 (29) obj. -6880.98 iterations 31
Cbc0038I Pass  88: suminf.    6.62424 (20) obj. -6880.98 iterations 10
Cbc0038I Pass  89: suminf.    6.58881 (20) obj. -6880.98 iterations 3
Cbc0038I Pass  90: suminf.    4.73062 (12) obj. -6880.98 iterations 26
Cbc0038I Pass  91: suminf.    4.73062 (12) obj. -6880.98 iterations 1
Cbc0038I Pass  92: suminf.    4.87066 (12) obj. -6880.98 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -1983.86 - took 0.10 seconds
Cbc0012I Integer solution of -1983.8551 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 128 rows 131 columns, reduced to 16 rows 18 columns
Cbc0031I 46 added rows had average density of 67.73913
Cbc0013I At root node, 46 cuts changed objective from -12999.937 to -4088.6723 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22734 row cuts average 2.0 elements, 1 column cuts (17 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2524 row cuts average 119.9 elements, 0 column cuts (0 active)  in 0.239 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 779 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 786 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 440 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.450 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1983.8551 best solution, best possible -4088.6723 (2.63 seconds)
Cbc0012I Integer solution of -2104.3991 found by DiveCoefficient after 4224 iterations and 1 nodes (3.04 seconds)
Cbc0010I After 6 nodes, 7 on tree, -2104.3991 best solution, best possible -4088.6723 (3.33 seconds)
Cbc0012I Integer solution of -2907.1751 found by rounding after 5079 iterations and 28 nodes (3.67 seconds)
Cbc0038I Full problem 128 rows 131 columns, reduced to 43 rows 49 columns
Cbc0001I Search completed - best objective -2907.175079999997, took 5958 iterations and 54 nodes (3.73 seconds)
Cbc0032I Strong branching done 680 times (16240 iterations), fathomed 6 nodes and fixed 3 variables
Cbc0035I Maximum depth 24, 65 variables fixed on reduced cost
Total time (CPU seconds):       3.21   (Wallclock seconds):       3.76

