Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 58 (-20) columns and 323 (-130) elements
Clp1000I sum of infeasibilities 0 - average 0, 52 fixed columns
Coin0506I Presolve 5 (-102) rows, 5 (-53) columns and 16 (-307) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Coin0511I After Postsolve, objective 16098.311, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.35938432 - largest nonzero change 0 ( 0%) - largest zero change 2.9292214e-05
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Coin0511I After Postsolve, objective 16098.311, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16098.31144 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 58 columns (57 integer (57 of which binary)) and 351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.328%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.64801
Cbc0038I Solution found of -13044.1
Cbc0038I Relaxing continuous gives -13044.1
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -13044.1 to -13213.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -13501.8
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.12630 (2) obj. -13501.8 iterations 13
Cbc0038I Pass   2: suminf.    0.72340 (2) obj. -15665.6 iterations 5
Cbc0038I Pass   3: suminf.    1.00974 (4) obj. -13501.8 iterations 8
Cbc0038I Pass   4: suminf.    0.48881 (1) obj. -13501.8 iterations 6
Cbc0038I Pass   5: suminf.    0.04545 (1) obj. -15438.3 iterations 1
Cbc0038I Pass   6: suminf.    1.18256 (6) obj. -13501.8 iterations 6
Cbc0038I Pass   7: suminf.    1.58721 (6) obj. -13501.8 iterations 14
Cbc0038I Pass   8: suminf.    0.36735 (2) obj. -14269.1 iterations 6
Cbc0038I Pass   9: suminf.    0.34789 (3) obj. -13501.8 iterations 6
Cbc0038I Pass  10: suminf.    0.34789 (3) obj. -13501.8 iterations 0
Cbc0038I Pass  11: suminf.    0.72795 (4) obj. -13911.1 iterations 7
Cbc0038I Pass  12: suminf.    0.52626 (3) obj. -13501.8 iterations 4
Cbc0038I Pass  13: suminf.    0.90603 (5) obj. -13501.8 iterations 19
Cbc0038I Pass  14: suminf.    0.90603 (5) obj. -13501.8 iterations 1
Cbc0038I Pass  15: suminf.    0.83473 (2) obj. -13501.8 iterations 9
Cbc0038I Pass  16: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  17: suminf.    1.26994 (4) obj. -13931.1 iterations 10
Cbc0038I Pass  18: suminf.    1.26994 (4) obj. -13931.1 iterations 4
Cbc0038I Pass  19: suminf.    0.83473 (2) obj. -13501.8 iterations 10
Cbc0038I Pass  20: suminf.    1.45313 (3) obj. -14692.1 iterations 5
Cbc0038I Pass  21: suminf.    1.88022 (6) obj. -13501.8 iterations 6
Cbc0038I Pass  22: suminf.    0.49244 (3) obj. -13501.8 iterations 7
Cbc0038I Pass  23: suminf.    0.17021 (2) obj. -13784.9 iterations 1
Cbc0038I Pass  24: suminf.    0.24834 (2) obj. -13501.8 iterations 3
Cbc0038I Pass  25: suminf.    1.45313 (3) obj. -14692.1 iterations 10
Cbc0038I Pass  26: suminf.    0.83473 (2) obj. -13501.8 iterations 7
Cbc0038I Pass  27: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  28: suminf.    0.93405 (4) obj. -15300.7 iterations 4
Cbc0038I Pass  29: suminf.    0.12630 (2) obj. -13501.8 iterations 7
Cbc0038I Pass  30: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Rounding solution of -14419 is better than previous of -13213.3

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -14419 to -14476.1 (0.03 seconds)
Cbc0038I Round again with cutoff of -14800.6
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.48470 (2) obj. -14800.6 iterations 0
Cbc0038I Pass  31: suminf.    0.72340 (2) obj. -15665.6 iterations 6
Cbc0038I Pass  32: suminf.    0.48682 (3) obj. -14800.6 iterations 5
Cbc0038I Pass  33: suminf.    0.45297 (2) obj. -14800.6 iterations 5
Cbc0038I Pass  34: suminf.    0.48470 (2) obj. -14800.6 iterations 2
Cbc0038I Pass  35: suminf.    0.60786 (4) obj. -14800.6 iterations 8
Cbc0038I Pass  36: suminf.    0.34043 (2) obj. -14831.4 iterations 8
Cbc0038I Pass  37: suminf.    0.48470 (2) obj. -14800.6 iterations 4
Cbc0038I Pass  38: suminf.    0.48470 (2) obj. -14800.6 iterations 0
Cbc0038I Pass  39: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Pass  40: suminf.    0.20835 (3) obj. -14800.6 iterations 5
Cbc0038I Pass  41: suminf.    0.09868 (3) obj. -14800.6 iterations 8
Cbc0038I Pass  42: suminf.    0.06250 (2) obj. -15466.4 iterations 8
Cbc0038I Pass  43: suminf.    0.04545 (1) obj. -15438.3 iterations 1
Cbc0038I Pass  44: suminf.    0.19883 (1) obj. -14800.6 iterations 1
Cbc0038I Pass  45: suminf.    0.35989 (5) obj. -14800.6 iterations 8
Cbc0038I Pass  46: suminf.    0.35989 (5) obj. -14800.6 iterations 2
Cbc0038I Pass  47: suminf.    0.83332 (3) obj. -14800.6 iterations 3
Cbc0038I Pass  48: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  49: suminf.    0.80687 (2) obj. -14800.6 iterations 3
Cbc0038I Pass  50: suminf.    1.31417 (3) obj. -14800.6 iterations 4
Cbc0038I Pass  51: suminf.    0.86127 (3) obj. -14996.5 iterations 7
Cbc0038I Pass  52: suminf.    0.35989 (5) obj. -14800.6 iterations 8
Cbc0038I Pass  53: suminf.    0.83332 (3) obj. -14800.6 iterations 3
Cbc0038I Pass  54: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  55: suminf.    0.80687 (2) obj. -14800.6 iterations 3
Cbc0038I Pass  56: suminf.    0.58724 (3) obj. -14800.6 iterations 6
Cbc0038I Pass  57: suminf.    0.48470 (2) obj. -14800.6 iterations 4
Cbc0038I Pass  58: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Pass  59: suminf.    1.81250 (4) obj. -14953.4 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 19 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14476.1 - took 0.02 seconds
Cbc0012I Integer solution of -14476.14 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 104 rows 58 columns, reduced to 11 rows 8 columns
Cbc0031I 6 added rows had average density of 14.333333
Cbc0013I At root node, 6 cuts changed objective from -16098.311 to -15276.474 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 3.1 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14476.14, took 207 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 30 times (144 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-61) rows, 100 (-52) columns and 1509 (-1794) elements
Clp1000I sum of infeasibilities 1.01388e-07 - average 1.0902e-09, 66 fixed columns
Coin0506I Presolve 29 (-64) rows, 29 (-71) columns and 116 (-1393) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 16141.579
Clp0000I Optimal - objective value 16141.579
Coin0511I After Postsolve, objective 16141.579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.5214981 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16141.579
Clp0000I Optimal - objective value 16141.579
Clp0000I Optimal - objective value 16141.579
Coin0511I After Postsolve, objective 16141.579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16141.57895 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 101 columns (101 integer (101 of which binary)) and 1541 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.053%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.04255
Cbc0038I Pass   1: suminf.    1.62036 (27) obj. -13079.8 iterations 28
Cbc0038I Pass   2: suminf.    0.70685 (15) obj. -13063.1 iterations 12
Cbc0038I Solution found of -13044.1
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 101 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -13044.1 to -13213.3 (0.04 seconds)
Cbc0038I Round again with cutoff of -13505.3
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.77605 (29) obj. -13505.3 iterations 5
Cbc0038I Pass   4: suminf.    1.01152 (16) obj. -13505.3 iterations 21
Cbc0038I Pass   5: suminf.    1.01152 (16) obj. -13505.3 iterations 0
Cbc0038I Pass   6: suminf.    1.00278 (3) obj. -13505.3 iterations 20
Cbc0038I Pass   7: suminf.    0.81875 (3) obj. -14191.2 iterations 5
Cbc0038I Pass   8: suminf.    0.95498 (2) obj. -13505.3 iterations 5
Cbc0038I Pass   9: suminf.    0.76596 (2) obj. -14190.3 iterations 7
Cbc0038I Pass  10: suminf.    0.28952 (4) obj. -13505.3 iterations 12
Cbc0038I Pass  11: suminf.    0.28952 (4) obj. -13505.3 iterations 4
Cbc0038I Pass  12: suminf.    0.18797 (3) obj. -13505.3 iterations 8
Cbc0038I Pass  13: suminf.    0.05263 (1) obj. -13995.7 iterations 5
Cbc0038I Solution found of -13994.8
Cbc0038I Rounding solution of -13998.8 is better than previous of -13994.8

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 101 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -13998.8 to -14476.1 (0.05 seconds)
Cbc0038I Round again with cutoff of -14807.5
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  14: suminf.    2.13471 (30) obj. -14807.5 iterations 3
Cbc0038I Pass  15: suminf.    2.08184 (29) obj. -14807.5 iterations 7
Cbc0038I Pass  16: suminf.    1.24774 (18) obj. -14807.5 iterations 18
Cbc0038I Pass  17: suminf.    1.18211 (17) obj. -14807.5 iterations 7
Cbc0038I Pass  18: suminf.    0.64098 (2) obj. -14807.5 iterations 18
Cbc0038I Pass  19: suminf.    0.48661 (2) obj. -14807.5 iterations 5
Cbc0038I Pass  20: suminf.    0.72340 (2) obj. -15665.6 iterations 7
Cbc0038I Pass  21: suminf.    1.31563 (15) obj. -14807.5 iterations 25
Cbc0038I Pass  22: suminf.    1.26908 (13) obj. -14807.5 iterations 7
Cbc0038I Pass  23: suminf.    0.36364 (1) obj. -14817.7 iterations 16
Cbc0038I Pass  24: suminf.    0.33844 (1) obj. -14807.5 iterations 3
Cbc0038I Pass  25: suminf.    0.42755 (3) obj. -15182.1 iterations 4
Cbc0038I Pass  26: suminf.    0.71172 (5) obj. -15186.6 iterations 9
Cbc0038I Pass  27: suminf.    0.58181 (4) obj. -14807.5 iterations 8
Cbc0038I Pass  28: suminf.    0.36364 (1) obj. -14820.7 iterations 6
Cbc0038I Pass  29: suminf.    0.33777 (1) obj. -14807.5 iterations 3
Cbc0038I Pass  30: suminf.    0.42755 (3) obj. -15185.1 iterations 4
Cbc0038I Pass  31: suminf.    1.02396 (8) obj. -14807.5 iterations 14
Cbc0038I Pass  32: suminf.    0.78240 (6) obj. -14807.5 iterations 5
Cbc0038I Pass  33: suminf.    0.25862 (3) obj. -15399.3 iterations 10
Cbc0038I Pass  34: suminf.    0.25862 (3) obj. -15399.3 iterations 0
Cbc0038I Pass  35: suminf.    0.80468 (2) obj. -14807.5 iterations 8
Cbc0038I Pass  36: suminf.    0.68085 (2) obj. -15256.3 iterations 6
Cbc0038I Pass  37: suminf.    0.80468 (2) obj. -14807.5 iterations 4
Cbc0038I Pass  38: suminf.    1.27616 (6) obj. -14807.5 iterations 12
Cbc0038I Pass  39: suminf.    0.24180 (4) obj. -15441.9 iterations 7
Cbc0038I Pass  40: suminf.    0.19668 (1) obj. -14807.5 iterations 5
Cbc0038I Pass  41: suminf.    0.04545 (1) obj. -15436.3 iterations 2
Cbc0038I Pass  42: suminf.    0.35135 (5) obj. -15441 iterations 8
Cbc0038I Pass  43: suminf.    0.35135 (5) obj. -15441 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 101 columns, reduced to 36 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -14476.1 - took 0.04 seconds
Cbc0012I Integer solution of -14476.14 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 91 rows 101 columns, reduced to 29 rows 31 columns
Cbc0031I 15 added rows had average density of 10.733333
Cbc0013I At root node, 15 cuts changed objective from -16132.918 to -15275.892 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 247 row cuts average 5.9 elements, 24 column cuts (24 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 80 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14476.14, took 270 iterations and 4 nodes (0.38 seconds)
Cbc0032I Strong branching done 36 times (237 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.38

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 58 (-20) columns and 323 (-130) elements
Clp1000I sum of infeasibilities 0 - average 0, 52 fixed columns
Coin0506I Presolve 5 (-102) rows, 5 (-53) columns and 16 (-307) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Coin0511I After Postsolve, objective 16098.311, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.35938432 - largest nonzero change 0 ( 0%) - largest zero change 2.9292214e-05
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Coin0511I After Postsolve, objective 16098.311, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16098.31144 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 58 columns (57 integer (57 of which binary)) and 351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.328%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.64801
Cbc0038I Solution found of -13044.1
Cbc0038I Relaxing continuous gives -13044.1
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -13044.1 to -13213.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -13501.8
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.12630 (2) obj. -13501.8 iterations 13
Cbc0038I Pass   2: suminf.    0.72340 (2) obj. -15665.6 iterations 5
Cbc0038I Pass   3: suminf.    1.00974 (4) obj. -13501.8 iterations 8
Cbc0038I Pass   4: suminf.    0.48881 (1) obj. -13501.8 iterations 6
Cbc0038I Pass   5: suminf.    0.04545 (1) obj. -15438.3 iterations 1
Cbc0038I Pass   6: suminf.    1.18256 (6) obj. -13501.8 iterations 6
Cbc0038I Pass   7: suminf.    1.58721 (6) obj. -13501.8 iterations 14
Cbc0038I Pass   8: suminf.    0.36735 (2) obj. -14269.1 iterations 6
Cbc0038I Pass   9: suminf.    0.34789 (3) obj. -13501.8 iterations 6
Cbc0038I Pass  10: suminf.    0.34789 (3) obj. -13501.8 iterations 0
Cbc0038I Pass  11: suminf.    0.72795 (4) obj. -13911.1 iterations 7
Cbc0038I Pass  12: suminf.    0.52626 (3) obj. -13501.8 iterations 4
Cbc0038I Pass  13: suminf.    0.90603 (5) obj. -13501.8 iterations 19
Cbc0038I Pass  14: suminf.    0.90603 (5) obj. -13501.8 iterations 1
Cbc0038I Pass  15: suminf.    0.83473 (2) obj. -13501.8 iterations 9
Cbc0038I Pass  16: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  17: suminf.    1.26994 (4) obj. -13931.1 iterations 10
Cbc0038I Pass  18: suminf.    1.26994 (4) obj. -13931.1 iterations 4
Cbc0038I Pass  19: suminf.    0.83473 (2) obj. -13501.8 iterations 10
Cbc0038I Pass  20: suminf.    1.45313 (3) obj. -14692.1 iterations 5
Cbc0038I Pass  21: suminf.    1.88022 (6) obj. -13501.8 iterations 6
Cbc0038I Pass  22: suminf.    0.49244 (3) obj. -13501.8 iterations 7
Cbc0038I Pass  23: suminf.    0.17021 (2) obj. -13784.9 iterations 1
Cbc0038I Pass  24: suminf.    0.24834 (2) obj. -13501.8 iterations 3
Cbc0038I Pass  25: suminf.    1.45313 (3) obj. -14692.1 iterations 10
Cbc0038I Pass  26: suminf.    0.83473 (2) obj. -13501.8 iterations 7
Cbc0038I Pass  27: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  28: suminf.    0.93405 (4) obj. -15300.7 iterations 4
Cbc0038I Pass  29: suminf.    0.12630 (2) obj. -13501.8 iterations 7
Cbc0038I Pass  30: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Rounding solution of -14419 is better than previous of -13213.3

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -14419 to -14476.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -14800.6
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.48470 (2) obj. -14800.6 iterations 0
Cbc0038I Pass  31: suminf.    0.72340 (2) obj. -15665.6 iterations 6
Cbc0038I Pass  32: suminf.    0.48682 (3) obj. -14800.6 iterations 5
Cbc0038I Pass  33: suminf.    0.45297 (2) obj. -14800.6 iterations 5
Cbc0038I Pass  34: suminf.    0.48470 (2) obj. -14800.6 iterations 2
Cbc0038I Pass  35: suminf.    0.60786 (4) obj. -14800.6 iterations 8
Cbc0038I Pass  36: suminf.    0.34043 (2) obj. -14831.4 iterations 8
Cbc0038I Pass  37: suminf.    0.48470 (2) obj. -14800.6 iterations 4
Cbc0038I Pass  38: suminf.    0.48470 (2) obj. -14800.6 iterations 0
Cbc0038I Pass  39: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Pass  40: suminf.    0.20835 (3) obj. -14800.6 iterations 5
Cbc0038I Pass  41: suminf.    0.09868 (3) obj. -14800.6 iterations 8
Cbc0038I Pass  42: suminf.    0.06250 (2) obj. -15466.4 iterations 8
Cbc0038I Pass  43: suminf.    0.04545 (1) obj. -15438.3 iterations 1
Cbc0038I Pass  44: suminf.    0.19883 (1) obj. -14800.6 iterations 1
Cbc0038I Pass  45: suminf.    0.35989 (5) obj. -14800.6 iterations 8
Cbc0038I Pass  46: suminf.    0.35989 (5) obj. -14800.6 iterations 2
Cbc0038I Pass  47: suminf.    0.83332 (3) obj. -14800.6 iterations 3
Cbc0038I Pass  48: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  49: suminf.    0.80687 (2) obj. -14800.6 iterations 3
Cbc0038I Pass  50: suminf.    1.31417 (3) obj. -14800.6 iterations 4
Cbc0038I Pass  51: suminf.    0.86127 (3) obj. -14996.5 iterations 7
Cbc0038I Pass  52: suminf.    0.35989 (5) obj. -14800.6 iterations 8
Cbc0038I Pass  53: suminf.    0.83332 (3) obj. -14800.6 iterations 3
Cbc0038I Pass  54: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  55: suminf.    0.80687 (2) obj. -14800.6 iterations 3
Cbc0038I Pass  56: suminf.    0.58724 (3) obj. -14800.6 iterations 6
Cbc0038I Pass  57: suminf.    0.48470 (2) obj. -14800.6 iterations 4
Cbc0038I Pass  58: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Pass  59: suminf.    1.81250 (4) obj. -14953.4 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 19 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14476.1 - took 0.02 seconds
Cbc0012I Integer solution of -14476.14 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 104 rows 58 columns, reduced to 11 rows 8 columns
Cbc0031I 6 added rows had average density of 14.333333
Cbc0013I At root node, 6 cuts changed objective from -16098.311 to -15276.474 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 3.1 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14476.14, took 207 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 30 times (144 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-67) rows, 95 (-58) columns and 1344 (-1960) elements
Clp1000I sum of infeasibilities 8.8863e-08 - average 1.00981e-09, 61 fixed columns
Coin0506I Presolve 29 (-59) rows, 29 (-66) columns and 116 (-1228) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 16141.579
Clp0000I Optimal - objective value 16141.579
Coin0511I After Postsolve, objective 16141.579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.7392408 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16141.579
Clp0000I Optimal - objective value 16141.579
Clp0000I Optimal - objective value 16141.579
Coin0511I After Postsolve, objective 16141.579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16141.57895 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1377 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.104%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.07207
Cbc0038I Pass   1: suminf.    1.62839 (24) obj. -13074 iterations 19
Cbc0038I Pass   2: suminf.    0.66233 (13) obj. -13061.2 iterations 11
Cbc0038I Pass   3: suminf.    0.08248 (2) obj. -13046 iterations 11
Cbc0038I Solution found of -13044.1
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -13044.1 to -13213.3 (0.03 seconds)
Cbc0038I Round again with cutoff of -13504.7
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.76828 (27) obj. -13504.7 iterations 3
Cbc0038I Pass   5: suminf.    0.48632 (3) obj. -14185.6 iterations 28
Cbc0038I Pass   6: suminf.    0.48632 (3) obj. -14185.6 iterations 0
Cbc0038I Pass   7: suminf.    0.95514 (2) obj. -13504.7 iterations 10
Cbc0038I Pass   8: suminf.    0.76596 (2) obj. -14190.3 iterations 5
Cbc0038I Pass   9: suminf.    0.58072 (6) obj. -13504.7 iterations 10
Cbc0038I Pass  10: suminf.    0.58072 (6) obj. -13504.7 iterations 0
Cbc0038I Pass  11: suminf.    0.63356 (5) obj. -13504.7 iterations 18
Cbc0038I Pass  12: suminf.    0.63356 (5) obj. -13504.7 iterations 0
Cbc0038I Pass  13: suminf.    0.68085 (2) obj. -15256.3 iterations 11
Cbc0038I Pass  14: suminf.    0.68085 (2) obj. -15256.3 iterations 0
Cbc0038I Pass  15: suminf.    0.83580 (2) obj. -13504.7 iterations 3
Cbc0038I Pass  16: suminf.    4.40318 (25) obj. -13504.7 iterations 28
Cbc0038I Pass  17: suminf.    3.42179 (23) obj. -13504.7 iterations 5
Cbc0038I Pass  18: suminf.    2.95920 (22) obj. -13504.7 iterations 2
Cbc0038I Pass  19: suminf.    2.35479 (19) obj. -13504.7 iterations 3
Cbc0038I Pass  20: suminf.    0.59003 (2) obj. -13504.7 iterations 21
Cbc0038I Pass  21: suminf.    0.04545 (1) obj. -13891.6 iterations 4
Cbc0038I Pass  22: suminf.    0.13700 (1) obj. -13504.7 iterations 3
Cbc0038I Pass  23: suminf.    1.47496 (11) obj. -13504.7 iterations 14
Cbc0038I Pass  24: suminf.    1.00667 (8) obj. -13504.7 iterations 10
Cbc0038I Pass  25: suminf.    0.31818 (1) obj. -13769.1 iterations 12
Cbc0038I Pass  26: suminf.    0.25562 (1) obj. -13504.7 iterations 3
Cbc0038I Pass  27: suminf.    0.31818 (1) obj. -13769.1 iterations 4
Cbc0038I Pass  28: suminf.    1.81896 (11) obj. -13504.7 iterations 14
Cbc0038I Pass  29: suminf.    1.81896 (11) obj. -13504.7 iterations 0
Cbc0038I Pass  30: suminf.    0.13013 (2) obj. -13504.7 iterations 16
Cbc0038I Pass  31: suminf.    0.13013 (2) obj. -13504.7 iterations 0
Cbc0038I Pass  32: suminf.    0.72340 (2) obj. -15654.6 iterations 8
Cbc0038I Pass  33: suminf.    1.60795 (11) obj. -13504.7 iterations 11
Cbc0038I Rounding solution of -14197.2 is better than previous of -13213.3

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 51 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -14197.2 to -14476.1 (0.05 seconds)
Cbc0038I Round again with cutoff of -14806.3
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.14988 (27) obj. -14806.3 iterations 6
Cbc0038I Pass  34: suminf.    2.09417 (26) obj. -14806.3 iterations 5
Cbc0038I Pass  35: suminf.    0.71767 (6) obj. -14806.3 iterations 26
Cbc0038I Pass  36: suminf.    0.72340 (2) obj. -15665.6 iterations 9
Cbc0038I Pass  37: suminf.    0.48629 (2) obj. -14806.3 iterations 3
Cbc0038I Pass  38: suminf.    0.85151 (6) obj. -14806.3 iterations 8
Cbc0038I Pass  39: suminf.    0.85151 (6) obj. -14806.3 iterations 0
Cbc0038I Pass  40: suminf.    0.72340 (2) obj. -15663.6 iterations 10
Cbc0038I Pass  41: suminf.    0.48684 (2) obj. -14806.3 iterations 3
Cbc0038I Pass  42: suminf.    0.98792 (9) obj. -14806.3 iterations 9
Cbc0038I Pass  43: suminf.    0.88196 (7) obj. -14806.3 iterations 3
Cbc0038I Pass  44: suminf.    0.72340 (2) obj. -15663.6 iterations 11
Cbc0038I Pass  45: suminf.    0.48684 (2) obj. -14806.3 iterations 3
Cbc0038I Pass  46: suminf.    1.79589 (10) obj. -14806.3 iterations 16
Cbc0038I Pass  47: suminf.    0.99351 (8) obj. -14827 iterations 6
Cbc0038I Pass  48: suminf.    0.98784 (8) obj. -14806.3 iterations 5
Cbc0038I Pass  49: suminf.    0.36364 (1) obj. -14819.7 iterations 12
Cbc0038I Pass  50: suminf.    0.33774 (1) obj. -14806.3 iterations 3
Cbc0038I Pass  51: suminf.    0.42755 (3) obj. -15184.1 iterations 4
Cbc0038I Pass  52: suminf.    0.91024 (8) obj. -15230.4 iterations 13
Cbc0038I Pass  53: suminf.    0.91024 (8) obj. -15230.4 iterations 2
Cbc0038I Pass  54: suminf.    0.91769 (4) obj. -14806.3 iterations 13
Cbc0038I Pass  55: suminf.    0.20171 (3) obj. -14806.3 iterations 2
Cbc0038I Pass  56: suminf.    0.25862 (3) obj. -15398.3 iterations 11
Cbc0038I Pass  57: suminf.    0.25862 (3) obj. -15398.3 iterations 0
Cbc0038I Pass  58: suminf.    0.80473 (2) obj. -14806.3 iterations 7
Cbc0038I Pass  59: suminf.    0.68085 (2) obj. -15255.3 iterations 5
Cbc0038I Pass  60: suminf.    0.80473 (2) obj. -14806.3 iterations 4
Cbc0038I Pass  61: suminf.    0.65793 (3) obj. -14806.3 iterations 11
Cbc0038I Pass  62: suminf.    0.49303 (3) obj. -14806.3 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 35 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -14476.1 - took 0.05 seconds
Cbc0012I Integer solution of -14476.14 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 95 columns, reduced to 29 rows 31 columns
Cbc0031I 14 added rows had average density of 11
Cbc0013I At root node, 14 cuts changed objective from -16127.071 to -15365.486 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 252 row cuts average 5.7 elements, 23 column cuts (23 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0010I After 4 nodes, 2 on tree, -14476.14 best solution, best possible -15069.485 (0.62 seconds)
Cbc0001I Search completed - best objective -14476.14, took 313 iterations and 6 nodes (0.63 seconds)
Cbc0032I Strong branching done 94 times (439 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.40   (Wallclock seconds):       0.64

