Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 45 (-5) columns and 244 (-41) elements
Clp1000I sum of infeasibilities 0.00481936 - average 5.94982e-05, 16 fixed columns
Coin0506I Presolve 42 (-39) rows, 27 (-18) columns and 130 (-114) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 4175.4286
Clp0000I Optimal - objective value 4175.4286
Coin0511I After Postsolve, objective 4175.4286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4175.4286
Clp0000I Optimal - objective value 4175.4286
Clp0000I Optimal - objective value 4175.4286
Coin0511I After Postsolve, objective 4175.4286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4175.42863 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 45 columns (44 integer (44 of which binary)) and 244 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.929%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 10.2085
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.369 iterations 23
Cbc0038I Solution found of -19.369
Cbc0038I Relaxing continuous gives -19.369
Cbc0038I Rounding solution of -1032.05 is better than previous of -19.369

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 45 columns, reduced to 42 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -1032.05 to -2459.75 (0.02 seconds)
Cbc0038I Round again with cutoff of -2631.32
Cbc0038I Pass   2: suminf.    3.31802 (9) obj. -2631.32 iterations 12
Cbc0038I Pass   3: suminf.    1.37767 (7) obj. -2631.32 iterations 2
Cbc0038I Pass   4: suminf.    0.47690 (2) obj. -2631.32 iterations 10
Cbc0038I Pass   5: suminf.    0.75353 (3) obj. -2631.32 iterations 2
Cbc0038I Pass   6: suminf.    2.12482 (7) obj. -2631.32 iterations 10
Cbc0038I Pass   7: suminf.    0.89151 (4) obj. -2631.32 iterations 5
Cbc0038I Pass   8: suminf.    2.09554 (5) obj. -2631.32 iterations 4
Cbc0038I Pass   9: suminf.    1.24285 (4) obj. -2631.32 iterations 2
Cbc0038I Pass  10: suminf.    0.63912 (3) obj. -2631.32 iterations 3
Cbc0038I Pass  11: suminf.    0.31956 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  12: suminf.    0.86819 (3) obj. -2631.32 iterations 2
Cbc0038I Pass  13: suminf.    0.86497 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  14: suminf.    0.68783 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  15: suminf.    4.95640 (15) obj. -2631.32 iterations 20
Cbc0038I Pass  16: suminf.    3.86070 (10) obj. -2631.32 iterations 6
Cbc0038I Pass  17: suminf.    1.64296 (5) obj. -2631.32 iterations 10
Cbc0038I Pass  18: suminf.    1.62534 (4) obj. -2631.32 iterations 1
Cbc0038I Pass  19: suminf.    0.71630 (3) obj. -2631.32 iterations 3
Cbc0038I Pass  20: suminf.    0.50464 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  21: suminf.    0.71982 (3) obj. -2631.32 iterations 2
Cbc0038I Pass  22: suminf.    0.86497 (2) obj. -2631.32 iterations 9
Cbc0038I Pass  23: suminf.    0.86497 (2) obj. -2631.32 iterations 3
Cbc0038I Pass  24: suminf.    0.68783 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  25: suminf.    3.71817 (13) obj. -2631.32 iterations 13
Cbc0038I Pass  26: suminf.    2.46071 (10) obj. -2631.32 iterations 10
Cbc0038I Pass  27: suminf.    2.21580 (10) obj. -2631.32 iterations 2
Cbc0038I Pass  28: suminf.    3.16988 (8) obj. -2631.32 iterations 17
Cbc0038I Pass  29: suminf.    3.16988 (8) obj. -2631.32 iterations 0
Cbc0038I Pass  30: suminf.    0.98315 (4) obj. -2631.32 iterations 11
Cbc0038I Pass  31: suminf.    0.80626 (4) obj. -2631.32 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 45 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2459.75 - took 0.07 seconds
Cbc0012I Integer solution of -2459.75 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 81 rows 45 columns, reduced to 42 rows 27 columns
Cbc0031I 11 added rows had average density of 33.090909
Cbc0013I At root node, 11 cuts changed objective from -4175.4286 to -2912.2306 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2329 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 745 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2459.749999999999, took 2357 iterations and 4 nodes (0.27 seconds)
Cbc0032I Strong branching done 86 times (927 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-14) rows, 91 (-5) columns and 1283 (-130) elements
Clp1000I sum of infeasibilities 0 - average 0, 81 fixed columns
Coin0506I Presolve 9 (-75) rows, 10 (-81) columns and 32 (-1251) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 2315.997
Clp0000I Optimal - objective value 2315.997
Coin0511I After Postsolve, objective 2315.997, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5642239 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 5707.6136
Clp0000I Optimal - objective value 5707.6136
Clp0000I Optimal - objective value 5707.6136
Coin0511I After Postsolve, objective 5707.6136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5707.613612 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 91 columns (91 integer (91 of which binary)) and 1287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.242%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 11.3681
Cbc0038I Pass   1: suminf.    2.85951 (27) obj. -2775.08 iterations 29
Cbc0038I Pass   2: suminf.    2.85951 (27) obj. -2775.08 iterations 2
Cbc0038I Pass   3: suminf.    0.28100 (5) obj. -883.924 iterations 22
Cbc0038I Solution found of -462.085
Cbc0038I Rounding solution of -1032.05 is better than previous of -462.085

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 91 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -1032.05 to -2084.55 (0.02 seconds)
Cbc0038I Round again with cutoff of -2420.69
Cbc0038I Pass   4: suminf.    2.85951 (27) obj. -2775.08 iterations 0
Cbc0038I Pass   5: suminf.    2.85951 (27) obj. -2775.08 iterations 2
Cbc0038I Pass   6: suminf.    2.27943 (21) obj. -2420.69 iterations 21
Cbc0038I Pass   7: suminf.    2.20000 (20) obj. -2697.92 iterations 2
Cbc0038I Pass   8: suminf.    1.14500 (26) obj. -2420.69 iterations 24
Cbc0038I Pass   9: suminf.    1.14500 (26) obj. -2420.69 iterations 0
Cbc0038I Pass  10: suminf.    0.73705 (2) obj. -2420.69 iterations 35
Cbc0038I Pass  11: suminf.    0.73705 (2) obj. -2420.69 iterations 0
Cbc0038I Pass  12: suminf.    0.65508 (2) obj. -2420.69 iterations 9
Cbc0038I Pass  13: suminf.    0.47273 (2) obj. -2540.86 iterations 1
Cbc0038I Pass  14: suminf.    0.73705 (2) obj. -2420.69 iterations 8
Cbc0038I Pass  15: suminf.    3.55973 (18) obj. -2420.69 iterations 25
Cbc0038I Pass  16: suminf.    2.51068 (13) obj. -2420.69 iterations 3
Cbc0038I Pass  17: suminf.    2.48321 (13) obj. -2420.69 iterations 6
Cbc0038I Pass  18: suminf.    0.65207 (4) obj. -2420.69 iterations 15
Cbc0038I Pass  19: suminf.    0.50350 (2) obj. -2498.3 iterations 2
Cbc0038I Pass  20: suminf.    0.73705 (2) obj. -2420.69 iterations 9
Cbc0038I Pass  21: suminf.    0.73705 (2) obj. -2420.69 iterations 0
Cbc0038I Pass  22: suminf.    0.65508 (2) obj. -2420.69 iterations 8
Cbc0038I Pass  23: suminf.    0.47273 (2) obj. -2540.86 iterations 1
Cbc0038I Pass  24: suminf.    3.87525 (16) obj. -2420.69 iterations 22
Cbc0038I Pass  25: suminf.    3.57101 (16) obj. -2420.69 iterations 7
Cbc0038I Pass  26: suminf.    0.94502 (3) obj. -2420.69 iterations 25
Cbc0038I Pass  27: suminf.    0.72914 (3) obj. -2489.12 iterations 9
Cbc0038I Pass  28: suminf.    0.94502 (3) obj. -2420.69 iterations 10
Cbc0038I Pass  29: suminf.    2.89867 (15) obj. -2420.69 iterations 28
Cbc0038I Pass  30: suminf.    2.78085 (10) obj. -2420.69 iterations 6
Cbc0038I Pass  31: suminf.    0.97252 (3) obj. -2420.69 iterations 14
Cbc0038I Pass  32: suminf.    0.97252 (3) obj. -2420.69 iterations 0
Cbc0038I Pass  33: suminf.    0.55922 (2) obj. -2420.69 iterations 7
Cbc0038I Rounding solution of -2250.53 is better than previous of -2084.55

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 91 columns, reduced to 51 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -2250.53 to -2388.22 (0.04 seconds)
Cbc0038I Round again with cutoff of -3025.74
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.62127 (31) obj. -3025.74 iterations 3
Cbc0038I Pass  34: suminf.    3.62127 (31) obj. -3025.74 iterations 5
Cbc0038I Pass  35: suminf.    2.83546 (32) obj. -3025.74 iterations 29
Cbc0038I Pass  36: suminf.    2.83546 (32) obj. -3025.74 iterations 1
Cbc0038I Pass  37: suminf.    2.67010 (17) obj. -3025.74 iterations 19
Cbc0038I Pass  38: suminf.    2.53447 (17) obj. -3025.74 iterations 1
Cbc0038I Pass  39: suminf.    2.41926 (18) obj. -3025.74 iterations 3
Cbc0038I Pass  40: suminf.    1.32549 (6) obj. -3025.74 iterations 21
Cbc0038I Pass  41: suminf.    1.10469 (6) obj. -3095.73 iterations 7
Cbc0038I Pass  42: suminf.    1.62579 (9) obj. -3025.74 iterations 19
Cbc0038I Pass  43: suminf.    1.20835 (6) obj. -3025.74 iterations 4
Cbc0038I Pass  44: suminf.    1.20835 (6) obj. -3025.74 iterations 0
Cbc0038I Pass  45: suminf.    0.90508 (3) obj. -3025.74 iterations 14
Cbc0038I Pass  46: suminf.    0.90508 (3) obj. -3025.74 iterations 0
Cbc0038I Pass  47: suminf.    1.02685 (3) obj. -3025.74 iterations 2
Cbc0038I Pass  48: suminf.    1.02685 (3) obj. -3025.74 iterations 0
Cbc0038I Pass  49: suminf.    0.90508 (3) obj. -3025.74 iterations 1
Cbc0038I Pass  50: suminf.    2.77596 (12) obj. -3025.74 iterations 17
Cbc0038I Pass  51: suminf.    2.44900 (10) obj. -3025.74 iterations 3
Cbc0038I Pass  52: suminf.    1.44365 (5) obj. -3025.74 iterations 10
Cbc0038I Pass  53: suminf.    1.44365 (5) obj. -3025.74 iterations 1
Cbc0038I Pass  54: suminf.    1.21755 (5) obj. -3025.74 iterations 10
Cbc0038I Pass  55: suminf.    0.95413 (4) obj. -3025.74 iterations 2
Cbc0038I Pass  56: suminf.    1.14460 (4) obj. -3025.74 iterations 2
Cbc0038I Pass  57: suminf.    1.14460 (4) obj. -3025.74 iterations 0
Cbc0038I Pass  58: suminf.    1.20397 (5) obj. -3025.74 iterations 3
Cbc0038I Pass  59: suminf.    3.04158 (10) obj. -3025.74 iterations 16
Cbc0038I Pass  60: suminf.    2.94171 (11) obj. -3025.74 iterations 6
Cbc0038I Pass  61: suminf.    1.47719 (5) obj. -3025.74 iterations 14
Cbc0038I Pass  62: suminf.    1.47719 (5) obj. -3025.74 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 91 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -2388.22 to -2432.22 (0.06 seconds)
Cbc0038I Round again with cutoff of -3751.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    5.51101 (42) obj. -3751.8 iterations 14
Cbc0038I Pass  63: suminf.    5.11396 (46) obj. -3751.8 iterations 1
Cbc0038I Pass  64: suminf.    4.51951 (24) obj. -3751.8 iterations 27
Cbc0038I Pass  65: suminf.    4.44702 (24) obj. -3751.8 iterations 3
Cbc0038I Pass  66: suminf.    3.21310 (14) obj. -3751.8 iterations 38
Cbc0038I Pass  67: suminf.    2.52606 (9) obj. -3751.8 iterations 4
Cbc0038I Pass  68: suminf.    2.49154 (10) obj. -3751.8 iterations 5
Cbc0038I Pass  69: suminf.    4.03027 (15) obj. -3751.8 iterations 25
Cbc0038I Pass  70: suminf.    3.72566 (15) obj. -3751.8 iterations 3
Cbc0038I Pass  71: suminf.    2.30201 (9) obj. -3751.8 iterations 21
Cbc0038I Pass  72: suminf.    2.30201 (9) obj. -3751.8 iterations 3
Cbc0038I Pass  73: suminf.    2.71556 (10) obj. -3751.8 iterations 11
Cbc0038I Pass  74: suminf.    2.63656 (12) obj. -3751.8 iterations 1
Cbc0038I Pass  75: suminf.    3.28771 (14) obj. -3751.8 iterations 16
Cbc0038I Pass  76: suminf.    2.61706 (11) obj. -3751.8 iterations 17
Cbc0038I Pass  77: suminf.    3.28771 (14) obj. -3751.8 iterations 12
Cbc0038I Pass  78: suminf.    4.12911 (17) obj. -3751.8 iterations 22
Cbc0038I Pass  79: suminf.    4.03988 (15) obj. -3751.8 iterations 6
Cbc0038I Pass  80: suminf.    2.98180 (13) obj. -3751.8 iterations 20
Cbc0038I Pass  81: suminf.    2.98180 (13) obj. -3751.8 iterations 2
Cbc0038I Pass  82: suminf.    3.28913 (10) obj. -3751.8 iterations 18
Cbc0038I Pass  83: suminf.    3.15857 (10) obj. -3751.8 iterations 9
Cbc0038I Pass  84: suminf.    3.31390 (10) obj. -3751.8 iterations 14
Cbc0038I Pass  85: suminf.    3.24639 (10) obj. -3751.8 iterations 10
Cbc0038I Pass  86: suminf.    5.87431 (23) obj. -3751.8 iterations 19
Cbc0038I Pass  87: suminf.    5.57625 (19) obj. -3751.8 iterations 4
Cbc0038I Pass  88: suminf.    2.83160 (12) obj. -3751.8 iterations 21
Cbc0038I Pass  89: suminf.    2.83160 (12) obj. -3751.8 iterations 0
Cbc0038I Pass  90: suminf.    3.30916 (10) obj. -3751.8 iterations 13
Cbc0038I Pass  91: suminf.    3.24639 (10) obj. -3751.8 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 91 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -2432.22 - took 0.08 seconds
Cbc0012I Integer solution of -2432.219 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 84 rows 91 columns, reduced to 8 rows 9 columns
Cbc0012I Integer solution of -2459.75 found by DiveCoefficient after 169 iterations and 0 nodes (0.19 seconds)
Cbc0031I 29 added rows had average density of 6.2068966
Cbc0013I At root node, 29 cuts changed objective from -5445.9444 to -2459.75 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 689 row cuts average 4.3 elements, 24 column cuts (24 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 24.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2459.749999999999, took 169 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 45 (-5) columns and 244 (-41) elements
Clp1000I sum of infeasibilities 0.00481936 - average 5.94982e-05, 16 fixed columns
Coin0506I Presolve 42 (-39) rows, 27 (-18) columns and 130 (-114) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 4175.4286
Clp0000I Optimal - objective value 4175.4286
Coin0511I After Postsolve, objective 4175.4286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4175.4286
Clp0000I Optimal - objective value 4175.4286
Clp0000I Optimal - objective value 4175.4286
Coin0511I After Postsolve, objective 4175.4286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4175.42863 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 45 columns (44 integer (44 of which binary)) and 244 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.929%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 10.2085
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.369 iterations 23
Cbc0038I Solution found of -19.369
Cbc0038I Relaxing continuous gives -19.369
Cbc0038I Rounding solution of -1032.05 is better than previous of -19.369

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 45 columns, reduced to 42 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -1032.05 to -2459.75 (0.03 seconds)
Cbc0038I Round again with cutoff of -2631.32
Cbc0038I Pass   2: suminf.    3.31802 (9) obj. -2631.32 iterations 12
Cbc0038I Pass   3: suminf.    1.37767 (7) obj. -2631.32 iterations 2
Cbc0038I Pass   4: suminf.    0.47690 (2) obj. -2631.32 iterations 10
Cbc0038I Pass   5: suminf.    0.75353 (3) obj. -2631.32 iterations 2
Cbc0038I Pass   6: suminf.    2.12482 (7) obj. -2631.32 iterations 10
Cbc0038I Pass   7: suminf.    0.89151 (4) obj. -2631.32 iterations 5
Cbc0038I Pass   8: suminf.    2.09554 (5) obj. -2631.32 iterations 4
Cbc0038I Pass   9: suminf.    1.24285 (4) obj. -2631.32 iterations 2
Cbc0038I Pass  10: suminf.    0.63912 (3) obj. -2631.32 iterations 3
Cbc0038I Pass  11: suminf.    0.31956 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  12: suminf.    0.86819 (3) obj. -2631.32 iterations 2
Cbc0038I Pass  13: suminf.    0.86497 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  14: suminf.    0.68783 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  15: suminf.    4.95640 (15) obj. -2631.32 iterations 20
Cbc0038I Pass  16: suminf.    3.86070 (10) obj. -2631.32 iterations 6
Cbc0038I Pass  17: suminf.    1.64296 (5) obj. -2631.32 iterations 10
Cbc0038I Pass  18: suminf.    1.62534 (4) obj. -2631.32 iterations 1
Cbc0038I Pass  19: suminf.    0.71630 (3) obj. -2631.32 iterations 3
Cbc0038I Pass  20: suminf.    0.50464 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  21: suminf.    0.71982 (3) obj. -2631.32 iterations 2
Cbc0038I Pass  22: suminf.    0.86497 (2) obj. -2631.32 iterations 9
Cbc0038I Pass  23: suminf.    0.86497 (2) obj. -2631.32 iterations 3
Cbc0038I Pass  24: suminf.    0.68783 (2) obj. -2631.32 iterations 1
Cbc0038I Pass  25: suminf.    3.71817 (13) obj. -2631.32 iterations 13
Cbc0038I Pass  26: suminf.    2.46071 (10) obj. -2631.32 iterations 10
Cbc0038I Pass  27: suminf.    2.21580 (10) obj. -2631.32 iterations 2
Cbc0038I Pass  28: suminf.    3.16988 (8) obj. -2631.32 iterations 17
Cbc0038I Pass  29: suminf.    3.16988 (8) obj. -2631.32 iterations 0
Cbc0038I Pass  30: suminf.    0.98315 (4) obj. -2631.32 iterations 11
Cbc0038I Pass  31: suminf.    0.80626 (4) obj. -2631.32 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 45 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -2459.75 - took 0.04 seconds
Cbc0012I Integer solution of -2459.75 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 81 rows 45 columns, reduced to 42 rows 27 columns
Cbc0031I 11 added rows had average density of 33.090909
Cbc0013I At root node, 11 cuts changed objective from -4175.4286 to -2912.2306 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2329 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 745 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2459.749999999999, took 2357 iterations and 4 nodes (0.32 seconds)
Cbc0032I Strong branching done 86 times (927 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 91 (-6) columns and 1283 (-131) elements
Clp1000I sum of infeasibilities 0 - average 0, 81 fixed columns
Coin0506I Presolve 9 (-75) rows, 10 (-81) columns and 32 (-1251) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 2315.997
Clp0000I Optimal - objective value 2315.997
Coin0511I After Postsolve, objective 2315.997, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5642239 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 5707.6136
Clp0000I Optimal - objective value 5707.6136
Clp0000I Optimal - objective value 5707.6136
Coin0511I After Postsolve, objective 5707.6136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5707.613612 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 91 columns (91 integer (91 of which binary)) and 1287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.242%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 11.3681
Cbc0038I Pass   1: suminf.    2.85951 (27) obj. -2775.08 iterations 29
Cbc0038I Pass   2: suminf.    2.85951 (27) obj. -2775.08 iterations 2
Cbc0038I Pass   3: suminf.    0.28100 (5) obj. -883.924 iterations 22
Cbc0038I Solution found of -462.085
Cbc0038I Rounding solution of -1032.05 is better than previous of -462.085

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 91 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -1032.05 to -2084.55 (0.02 seconds)
Cbc0038I Round again with cutoff of -2420.69
Cbc0038I Pass   4: suminf.    2.85951 (27) obj. -2775.08 iterations 0
Cbc0038I Pass   5: suminf.    2.85951 (27) obj. -2775.08 iterations 2
Cbc0038I Pass   6: suminf.    2.27943 (21) obj. -2420.69 iterations 21
Cbc0038I Pass   7: suminf.    2.20000 (20) obj. -2697.92 iterations 2
Cbc0038I Pass   8: suminf.    1.14500 (26) obj. -2420.69 iterations 24
Cbc0038I Pass   9: suminf.    1.14500 (26) obj. -2420.69 iterations 0
Cbc0038I Pass  10: suminf.    0.73705 (2) obj. -2420.69 iterations 35
Cbc0038I Pass  11: suminf.    0.73705 (2) obj. -2420.69 iterations 0
Cbc0038I Pass  12: suminf.    0.65508 (2) obj. -2420.69 iterations 9
Cbc0038I Pass  13: suminf.    0.47273 (2) obj. -2540.86 iterations 1
Cbc0038I Pass  14: suminf.    0.73705 (2) obj. -2420.69 iterations 8
Cbc0038I Pass  15: suminf.    3.55973 (18) obj. -2420.69 iterations 25
Cbc0038I Pass  16: suminf.    2.51068 (13) obj. -2420.69 iterations 3
Cbc0038I Pass  17: suminf.    2.48321 (13) obj. -2420.69 iterations 6
Cbc0038I Pass  18: suminf.    0.65207 (4) obj. -2420.69 iterations 15
Cbc0038I Pass  19: suminf.    0.50350 (2) obj. -2498.3 iterations 2
Cbc0038I Pass  20: suminf.    0.73705 (2) obj. -2420.69 iterations 9
Cbc0038I Pass  21: suminf.    0.73705 (2) obj. -2420.69 iterations 0
Cbc0038I Pass  22: suminf.    0.65508 (2) obj. -2420.69 iterations 8
Cbc0038I Pass  23: suminf.    0.47273 (2) obj. -2540.86 iterations 1
Cbc0038I Pass  24: suminf.    3.87525 (16) obj. -2420.69 iterations 22
Cbc0038I Pass  25: suminf.    3.57101 (16) obj. -2420.69 iterations 7
Cbc0038I Pass  26: suminf.    0.94502 (3) obj. -2420.69 iterations 25
Cbc0038I Pass  27: suminf.    0.72914 (3) obj. -2489.12 iterations 9
Cbc0038I Pass  28: suminf.    0.94502 (3) obj. -2420.69 iterations 10
Cbc0038I Pass  29: suminf.    2.89867 (15) obj. -2420.69 iterations 28
Cbc0038I Pass  30: suminf.    2.78085 (10) obj. -2420.69 iterations 6
Cbc0038I Pass  31: suminf.    0.97252 (3) obj. -2420.69 iterations 14
Cbc0038I Pass  32: suminf.    0.97252 (3) obj. -2420.69 iterations 0
Cbc0038I Pass  33: suminf.    0.55922 (2) obj. -2420.69 iterations 7
Cbc0038I Rounding solution of -2250.53 is better than previous of -2084.55

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 91 columns, reduced to 51 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -2250.53 to -2388.22 (0.04 seconds)
Cbc0038I Round again with cutoff of -3025.74
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.62127 (31) obj. -3025.74 iterations 3
Cbc0038I Pass  34: suminf.    3.62127 (31) obj. -3025.74 iterations 5
Cbc0038I Pass  35: suminf.    2.83546 (32) obj. -3025.74 iterations 29
Cbc0038I Pass  36: suminf.    2.83546 (32) obj. -3025.74 iterations 1
Cbc0038I Pass  37: suminf.    2.67010 (17) obj. -3025.74 iterations 19
Cbc0038I Pass  38: suminf.    2.53447 (17) obj. -3025.74 iterations 1
Cbc0038I Pass  39: suminf.    2.41926 (18) obj. -3025.74 iterations 3
Cbc0038I Pass  40: suminf.    1.32549 (6) obj. -3025.74 iterations 21
Cbc0038I Pass  41: suminf.    1.10469 (6) obj. -3095.73 iterations 7
Cbc0038I Pass  42: suminf.    1.62579 (9) obj. -3025.74 iterations 19
Cbc0038I Pass  43: suminf.    1.20835 (6) obj. -3025.74 iterations 4
Cbc0038I Pass  44: suminf.    1.20835 (6) obj. -3025.74 iterations 0
Cbc0038I Pass  45: suminf.    0.90508 (3) obj. -3025.74 iterations 14
Cbc0038I Pass  46: suminf.    0.90508 (3) obj. -3025.74 iterations 0
Cbc0038I Pass  47: suminf.    1.02685 (3) obj. -3025.74 iterations 2
Cbc0038I Pass  48: suminf.    1.02685 (3) obj. -3025.74 iterations 0
Cbc0038I Pass  49: suminf.    0.90508 (3) obj. -3025.74 iterations 1
Cbc0038I Pass  50: suminf.    2.77596 (12) obj. -3025.74 iterations 17
Cbc0038I Pass  51: suminf.    2.44900 (10) obj. -3025.74 iterations 3
Cbc0038I Pass  52: suminf.    1.44365 (5) obj. -3025.74 iterations 10
Cbc0038I Pass  53: suminf.    1.44365 (5) obj. -3025.74 iterations 1
Cbc0038I Pass  54: suminf.    1.21755 (5) obj. -3025.74 iterations 10
Cbc0038I Pass  55: suminf.    0.95413 (4) obj. -3025.74 iterations 2
Cbc0038I Pass  56: suminf.    1.14460 (4) obj. -3025.74 iterations 2
Cbc0038I Pass  57: suminf.    1.14460 (4) obj. -3025.74 iterations 0
Cbc0038I Pass  58: suminf.    1.20397 (5) obj. -3025.74 iterations 3
Cbc0038I Pass  59: suminf.    3.04158 (10) obj. -3025.74 iterations 16
Cbc0038I Pass  60: suminf.    2.94171 (11) obj. -3025.74 iterations 6
Cbc0038I Pass  61: suminf.    1.47719 (5) obj. -3025.74 iterations 14
Cbc0038I Pass  62: suminf.    1.47719 (5) obj. -3025.74 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 91 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -2388.22 to -2432.22 (0.06 seconds)
Cbc0038I Round again with cutoff of -3751.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    5.51101 (42) obj. -3751.8 iterations 14
Cbc0038I Pass  63: suminf.    5.11396 (46) obj. -3751.8 iterations 1
Cbc0038I Pass  64: suminf.    4.51951 (24) obj. -3751.8 iterations 27
Cbc0038I Pass  65: suminf.    4.44702 (24) obj. -3751.8 iterations 3
Cbc0038I Pass  66: suminf.    3.21310 (14) obj. -3751.8 iterations 38
Cbc0038I Pass  67: suminf.    2.52606 (9) obj. -3751.8 iterations 4
Cbc0038I Pass  68: suminf.    2.49154 (10) obj. -3751.8 iterations 5
Cbc0038I Pass  69: suminf.    4.03027 (15) obj. -3751.8 iterations 25
Cbc0038I Pass  70: suminf.    3.72566 (15) obj. -3751.8 iterations 3
Cbc0038I Pass  71: suminf.    2.30201 (9) obj. -3751.8 iterations 21
Cbc0038I Pass  72: suminf.    2.30201 (9) obj. -3751.8 iterations 3
Cbc0038I Pass  73: suminf.    2.71556 (10) obj. -3751.8 iterations 11
Cbc0038I Pass  74: suminf.    2.63656 (12) obj. -3751.8 iterations 1
Cbc0038I Pass  75: suminf.    3.28771 (14) obj. -3751.8 iterations 16
Cbc0038I Pass  76: suminf.    2.61706 (11) obj. -3751.8 iterations 17
Cbc0038I Pass  77: suminf.    3.28771 (14) obj. -3751.8 iterations 12
Cbc0038I Pass  78: suminf.    4.12911 (17) obj. -3751.8 iterations 22
Cbc0038I Pass  79: suminf.    4.03988 (15) obj. -3751.8 iterations 6
Cbc0038I Pass  80: suminf.    2.98180 (13) obj. -3751.8 iterations 20
Cbc0038I Pass  81: suminf.    2.98180 (13) obj. -3751.8 iterations 2
Cbc0038I Pass  82: suminf.    3.28913 (10) obj. -3751.8 iterations 18
Cbc0038I Pass  83: suminf.    3.15857 (10) obj. -3751.8 iterations 9
Cbc0038I Pass  84: suminf.    3.31390 (10) obj. -3751.8 iterations 14
Cbc0038I Pass  85: suminf.    3.24639 (10) obj. -3751.8 iterations 10
Cbc0038I Pass  86: suminf.    5.87431 (23) obj. -3751.8 iterations 19
Cbc0038I Pass  87: suminf.    5.57625 (19) obj. -3751.8 iterations 4
Cbc0038I Pass  88: suminf.    2.83160 (12) obj. -3751.8 iterations 21
Cbc0038I Pass  89: suminf.    2.83160 (12) obj. -3751.8 iterations 0
Cbc0038I Pass  90: suminf.    3.30916 (10) obj. -3751.8 iterations 13
Cbc0038I Pass  91: suminf.    3.24639 (10) obj. -3751.8 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 91 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -2432.22 - took 0.09 seconds
Cbc0012I Integer solution of -2432.219 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 84 rows 91 columns, reduced to 8 rows 9 columns
Cbc0012I Integer solution of -2459.75 found by DiveCoefficient after 169 iterations and 0 nodes (0.21 seconds)
Cbc0031I 29 added rows had average density of 6.2068966
Cbc0013I At root node, 29 cuts changed objective from -5445.9444 to -2459.75 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 689 row cuts average 4.3 elements, 24 column cuts (24 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 24.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2459.749999999999, took 169 iterations and 0 nodes (0.21 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.22

