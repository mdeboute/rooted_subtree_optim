Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 43 (-7) columns and 241 (-44) elements
Clp1000I sum of infeasibilities 3.56412e-05 - average 4.40015e-07, 0 fixed columns
Coin0506I Presolve 81 (0) rows, 43 (0) columns and 241 (0) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 2553.8661
Clp0000I Optimal - objective value 2553.8661
Coin0511I After Postsolve, objective 2553.8661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2553.8661
Clp0000I Optimal - objective value 2553.8661
Clp0000I Optimal - objective value 2553.8661
Coin0511I After Postsolve, objective 2553.8661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2553.866145 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 81 rows, 43 columns (42 integer (42 of which binary)) and 241 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.112%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 12.0032
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 654.839 iterations 46
Cbc0038I Solution found of 654.839
Cbc0038I Relaxing continuous gives 654.839
Cbc0038I Rounding solution of 518.839 is better than previous of 654.839

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 518.839 to -643.032 (0.05 seconds)
Cbc0038I Round again with cutoff of -823.871
Cbc0038I Pass   2: suminf.    3.11807 (16) obj. -823.871 iterations 15
Cbc0038I Pass   3: suminf.    1.00000 (6) obj. -823.871 iterations 25
Cbc0038I Pass   4: suminf.    1.00000 (6) obj. -823.871 iterations 0
Cbc0038I Pass   5: suminf.    1.30001 (5) obj. -823.871 iterations 8
Cbc0038I Pass   6: suminf.    1.21212 (4) obj. -823.871 iterations 3
Cbc0038I Pass   7: suminf.    1.07037 (4) obj. -823.871 iterations 2
Cbc0038I Pass   8: suminf.    1.91406 (6) obj. -823.871 iterations 6
Cbc0038I Pass   9: suminf.    1.42987 (5) obj. -823.871 iterations 2
Cbc0038I Pass  10: suminf.    1.73130 (6) obj. -823.871 iterations 7
Cbc0038I Pass  11: suminf.    1.73130 (6) obj. -823.871 iterations 0
Cbc0038I Pass  12: suminf.    1.81319 (7) obj. -823.871 iterations 7
Cbc0038I Pass  13: suminf.    1.81319 (7) obj. -823.871 iterations 0
Cbc0038I Pass  14: suminf.    1.88389 (6) obj. -823.871 iterations 5
Cbc0038I Pass  15: suminf.    1.84792 (6) obj. -823.871 iterations 1
Cbc0038I Pass  16: suminf.    2.20776 (6) obj. -823.871 iterations 5
Cbc0038I Pass  17: suminf.    1.00000 (4) obj. -823.871 iterations 13
Cbc0038I Pass  18: suminf.    0.60463 (2) obj. -823.871 iterations 2
Cbc0038I Pass  19: suminf.    0.44651 (2) obj. -823.871 iterations 2
Cbc0038I Pass  20: suminf.    0.49618 (3) obj. -823.871 iterations 2
Cbc0038I Pass  21: suminf.    0.49485 (3) obj. -823.871 iterations 1
Cbc0038I Pass  22: suminf.    0.51456 (4) obj. -823.871 iterations 4
Cbc0038I Pass  23: suminf.    0.50891 (3) obj. -823.871 iterations 1
Cbc0038I Pass  24: suminf.    1.31592 (5) obj. -823.871 iterations 7
Cbc0038I Pass  25: suminf.    1.31592 (5) obj. -823.871 iterations 0
Cbc0038I Pass  26: suminf.    1.70853 (5) obj. -823.871 iterations 4
Cbc0038I Pass  27: suminf.    1.68277 (6) obj. -823.871 iterations 1
Cbc0038I Pass  28: suminf.    1.89945 (4) obj. -823.871 iterations 6
Cbc0038I Pass  29: suminf.    0.84173 (2) obj. -823.871 iterations 4
Cbc0038I Pass  30: suminf.    0.94059 (3) obj. -823.871 iterations 2
Cbc0038I Pass  31: suminf.    0.94059 (3) obj. -823.871 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -643.032 - took 0.09 seconds
Cbc0012I Integer solution of -643.0323 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 22 added rows had average density of 30.727273
Cbc0013I At root node, 22 cuts changed objective from -2451.4197 to -1547.5466 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5903 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1908 row cuts average 42.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 132 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 40.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0004I Integer solution of -815.2253 found after 4776 iterations and 12 nodes (0.59 seconds)
Cbc0001I Search completed - best objective -815.2253000000005, took 5140 iterations and 20 nodes (0.60 seconds)
Cbc0032I Strong branching done 372 times (7405 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-13) rows, 88 (-8) columns and 1173 (-240) elements
Clp1000I sum of infeasibilities 4.10108e-09 - average 4.8248e-11, 74 fixed columns
Coin0506I Presolve 8 (-77) rows, 11 (-77) columns and 33 (-1140) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 2.1538538 - largest nonzero change 2.602033e-05 ( 0.00086296483%) - largest zero change 1.5336743e-05
Clp0000I Optimal - objective value -450.58185
Clp0000I Optimal - objective value -450.58185
Coin0511I After Postsolve, objective -450.58185, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6265726 - largest nonzero change 3.8170743e-05 ( 0.00086296483%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3175.0005
Clp0000I Optimal - objective value 3175.0005
Clp0000I Optimal - objective value 3175.0005
Coin0511I After Postsolve, objective 3175.0005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3175.000523 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 88 columns (88 integer (88 of which binary)) and 1175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.5875
Cbc0038I Pass   1: suminf.    1.58391 (12) obj. -1185.41 iterations 27
Cbc0038I Pass   2: suminf.    1.58391 (12) obj. -1185.41 iterations 1
Cbc0038I Solution found of 18.71
Cbc0038I Rounding solution of -397.838 is better than previous of 18.71

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -609.245
Cbc0038I Pass   3: suminf.    1.58391 (12) obj. -1185.41 iterations 0
Cbc0038I Pass   4: suminf.    1.58391 (12) obj. -1185.41 iterations 1
Cbc0038I Pass   5: suminf.    0.80629 (3) obj. -609.245 iterations 19
Cbc0038I Pass   6: suminf.    0.69571 (3) obj. -609.245 iterations 4
Cbc0038I Pass   7: suminf.    0.80629 (3) obj. -609.245 iterations 4
Cbc0038I Pass   8: suminf.    3.12971 (20) obj. -817.674 iterations 19
Cbc0038I Pass   9: suminf.    3.05829 (19) obj. -780.602 iterations 4
Cbc0038I Pass  10: suminf.    1.23261 (8) obj. -609.245 iterations 21
Cbc0038I Pass  11: suminf.    1.23261 (8) obj. -609.245 iterations 1
Cbc0038I Pass  12: suminf.    0.49503 (2) obj. -609.245 iterations 7
Cbc0038I Pass  13: suminf.    0.28205 (1) obj. -616.904 iterations 2
Cbc0038I Pass  14: suminf.    0.49503 (2) obj. -609.245 iterations 3
Cbc0038I Pass  15: suminf.    3.01001 (13) obj. -858.97 iterations 25
Cbc0038I Pass  16: suminf.    1.95823 (10) obj. -698.82 iterations 8
Cbc0038I Pass  17: suminf.    1.15824 (5) obj. -609.245 iterations 20
Cbc0038I Pass  18: suminf.    0.73588 (3) obj. -705.101 iterations 4
Cbc0038I Pass  19: suminf.    0.62773 (2) obj. -609.245 iterations 4
Cbc0038I Pass  20: suminf.    0.62477 (2) obj. -609.99 iterations 3
Cbc0038I Pass  21: suminf.    2.52380 (12) obj. -609.245 iterations 26
Cbc0038I Pass  22: suminf.    2.52380 (12) obj. -609.245 iterations 9
Cbc0038I Pass  23: suminf.    1.14998 (4) obj. -609.245 iterations 11
Cbc0038I Pass  24: suminf.    1.14998 (4) obj. -609.245 iterations 0
Cbc0038I Pass  25: suminf.    0.90383 (4) obj. -609.245 iterations 2
Cbc0038I Pass  26: suminf.    0.90383 (4) obj. -609.245 iterations 0
Cbc0038I Pass  27: suminf.    1.14998 (4) obj. -609.245 iterations 1
Cbc0038I Pass  28: suminf.    3.07439 (12) obj. -609.245 iterations 18
Cbc0038I Pass  29: suminf.    1.94254 (10) obj. -609.245 iterations 5
Cbc0038I Pass  30: suminf.    1.48313 (8) obj. -690.082 iterations 2
Cbc0038I Pass  31: suminf.    0.87076 (3) obj. -609.245 iterations 9
Cbc0038I Pass  32: suminf.    0.59912 (2) obj. -670.093 iterations 2
Cbc0038I Rounding solution of -548.806 is better than previous of -397.838

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 37 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -548.806 to -694.419 (0.05 seconds)
Cbc0038I Round again with cutoff of -1057.92
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.58391 (12) obj. -1185.41 iterations 0
Cbc0038I Pass  33: suminf.    1.58391 (12) obj. -1185.41 iterations 1
Cbc0038I Pass  34: suminf.    1.61658 (22) obj. -1057.92 iterations 20
Cbc0038I Pass  35: suminf.    1.54407 (22) obj. -1070.75 iterations 3
Cbc0038I Pass  36: suminf.    0.77116 (3) obj. -1057.92 iterations 41
Cbc0038I Pass  37: suminf.    0.62477 (2) obj. -1084.6 iterations 7
Cbc0038I Pass  38: suminf.    0.73108 (2) obj. -1057.92 iterations 1
Cbc0038I Pass  39: suminf.    2.26192 (9) obj. -1057.92 iterations 12
Cbc0038I Pass  40: suminf.    2.26192 (9) obj. -1057.92 iterations 2
Cbc0038I Pass  41: suminf.    0.65937 (2) obj. -1057.92 iterations 9
Cbc0038I Pass  42: suminf.    0.62477 (2) obj. -1066.6 iterations 1
Cbc0038I Pass  43: suminf.    1.11602 (5) obj. -1057.92 iterations 8
Cbc0038I Pass  44: suminf.    1.11602 (5) obj. -1057.92 iterations 0
Cbc0038I Pass  45: suminf.    1.02590 (3) obj. -1057.92 iterations 4
Cbc0038I Pass  46: suminf.    0.92206 (3) obj. -1083.98 iterations 1
Cbc0038I Pass  47: suminf.    1.06932 (3) obj. -1057.92 iterations 1
Cbc0038I Pass  48: suminf.    3.02687 (10) obj. -1057.92 iterations 11
Cbc0038I Pass  49: suminf.    1.75377 (7) obj. -1261.74 iterations 3
Cbc0038I Pass  50: suminf.    1.75377 (7) obj. -1261.74 iterations 1
Cbc0038I Pass  51: suminf.    1.06932 (3) obj. -1057.92 iterations 6
Cbc0038I Pass  52: suminf.    0.92206 (3) obj. -1083.98 iterations 2
Cbc0038I Pass  53: suminf.    1.93483 (8) obj. -1057.92 iterations 16
Cbc0038I Pass  54: suminf.    1.44625 (7) obj. -1167.36 iterations 6
Cbc0038I Pass  55: suminf.    0.95823 (4) obj. -1057.92 iterations 7
Cbc0038I Pass  56: suminf.    0.95823 (4) obj. -1057.92 iterations 0
Cbc0038I Pass  57: suminf.    1.09220 (4) obj. -1057.92 iterations 6
Cbc0038I Pass  58: suminf.    1.09220 (4) obj. -1057.92 iterations 0
Cbc0038I Pass  59: suminf.    0.95823 (4) obj. -1057.92 iterations 7
Cbc0038I Pass  60: suminf.    1.65923 (10) obj. -1057.92 iterations 16
Cbc0038I Pass  61: suminf.    1.48018 (7) obj. -1079.52 iterations 3
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 30 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -1494.11
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.76162 (32) obj. -1494.11 iterations 6
Cbc0038I Pass  62: suminf.    2.76162 (32) obj. -1494.11 iterations 0
Cbc0038I Pass  63: suminf.    2.74960 (16) obj. -1494.11 iterations 32
Cbc0038I Pass  64: suminf.    2.74960 (16) obj. -1494.11 iterations 3
Cbc0038I Pass  65: suminf.    2.01837 (22) obj. -1494.11 iterations 31
Cbc0038I Pass  66: suminf.    1.79637 (7) obj. -1494.11 iterations 13
Cbc0038I Pass  67: suminf.    2.13204 (7) obj. -1494.11 iterations 8
Cbc0038I Pass  68: suminf.    2.13204 (7) obj. -1494.11 iterations 1
Cbc0038I Pass  69: suminf.    1.79637 (7) obj. -1494.11 iterations 15
Cbc0038I Pass  70: suminf.    4.39817 (18) obj. -1494.11 iterations 22
Cbc0038I Pass  71: suminf.    4.39817 (18) obj. -1494.11 iterations 5
Cbc0038I Pass  72: suminf.    3.82996 (15) obj. -1494.11 iterations 10
Cbc0038I Pass  73: suminf.    3.82996 (15) obj. -1494.11 iterations 1
Cbc0038I Pass  74: suminf.    4.00807 (14) obj. -1494.11 iterations 3
Cbc0038I Pass  75: suminf.    3.71456 (15) obj. -1494.11 iterations 5
Cbc0038I Pass  76: suminf.    4.02292 (14) obj. -1494.11 iterations 5
Cbc0038I Pass  77: suminf.    4.28966 (16) obj. -1494.11 iterations 12
Cbc0038I Pass  78: suminf.    4.28966 (16) obj. -1494.11 iterations 1
Cbc0038I Pass  79: suminf.    3.76772 (14) obj. -1494.11 iterations 7
Cbc0038I Pass  80: suminf.    3.76772 (14) obj. -1494.11 iterations 0
Cbc0038I Pass  81: suminf.    3.73981 (13) obj. -1494.11 iterations 4
Cbc0038I Pass  82: suminf.    3.67867 (14) obj. -1494.11 iterations 3
Cbc0038I Pass  83: suminf.    3.73981 (13) obj. -1494.11 iterations 3
Cbc0038I Pass  84: suminf.    5.29545 (21) obj. -1494.11 iterations 16
Cbc0038I Pass  85: suminf.    4.58463 (21) obj. -1494.11 iterations 4
Cbc0038I Pass  86: suminf.    4.13539 (19) obj. -1494.11 iterations 9
Cbc0038I Pass  87: suminf.    4.12150 (18) obj. -1494.11 iterations 2
Cbc0038I Pass  88: suminf.    3.89240 (14) obj. -1494.11 iterations 7
Cbc0038I Pass  89: suminf.    3.89240 (14) obj. -1494.11 iterations 1
Cbc0038I Pass  90: suminf.    3.96477 (14) obj. -1494.11 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 33 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -694.419 - took 0.07 seconds
Cbc0012I Integer solution of -694.419 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 42 added rows had average density of 19.285714
Cbc0013I At root node, 42 cuts changed objective from -2511.9079 to -815.23243 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3465 row cuts average 4.4 elements, 15 column cuts (15 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 452 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 218 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.654 seconds - new frequency is 1
Cbc0016I Integer solution of -815.2253 found by strong branching after 1068 iterations and 0 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -815.2253000000005, took 1098 iterations and 0 nodes (1.54 seconds)
Cbc0032I Strong branching done 10 times (190 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.54

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 43 (-7) columns and 241 (-44) elements
Clp1000I sum of infeasibilities 3.56412e-05 - average 4.40015e-07, 0 fixed columns
Coin0506I Presolve 81 (0) rows, 43 (0) columns and 241 (0) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 2553.8661
Clp0000I Optimal - objective value 2553.8661
Coin0511I After Postsolve, objective 2553.8661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2553.8661
Clp0000I Optimal - objective value 2553.8661
Clp0000I Optimal - objective value 2553.8661
Coin0511I After Postsolve, objective 2553.8661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2553.866145 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 81 rows, 43 columns (42 integer (42 of which binary)) and 241 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.112%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 12.0032
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 654.839 iterations 46
Cbc0038I Solution found of 654.839
Cbc0038I Relaxing continuous gives 654.839
Cbc0038I Rounding solution of 518.839 is better than previous of 654.839

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 518.839 to -643.032 (0.05 seconds)
Cbc0038I Round again with cutoff of -823.871
Cbc0038I Pass   2: suminf.    3.11807 (16) obj. -823.871 iterations 15
Cbc0038I Pass   3: suminf.    1.00000 (6) obj. -823.871 iterations 25
Cbc0038I Pass   4: suminf.    1.00000 (6) obj. -823.871 iterations 0
Cbc0038I Pass   5: suminf.    1.30001 (5) obj. -823.871 iterations 8
Cbc0038I Pass   6: suminf.    1.21212 (4) obj. -823.871 iterations 3
Cbc0038I Pass   7: suminf.    1.07037 (4) obj. -823.871 iterations 2
Cbc0038I Pass   8: suminf.    1.91406 (6) obj. -823.871 iterations 6
Cbc0038I Pass   9: suminf.    1.42987 (5) obj. -823.871 iterations 2
Cbc0038I Pass  10: suminf.    1.73130 (6) obj. -823.871 iterations 7
Cbc0038I Pass  11: suminf.    1.73130 (6) obj. -823.871 iterations 0
Cbc0038I Pass  12: suminf.    1.81319 (7) obj. -823.871 iterations 7
Cbc0038I Pass  13: suminf.    1.81319 (7) obj. -823.871 iterations 0
Cbc0038I Pass  14: suminf.    1.88389 (6) obj. -823.871 iterations 5
Cbc0038I Pass  15: suminf.    1.84792 (6) obj. -823.871 iterations 1
Cbc0038I Pass  16: suminf.    2.20776 (6) obj. -823.871 iterations 5
Cbc0038I Pass  17: suminf.    1.00000 (4) obj. -823.871 iterations 13
Cbc0038I Pass  18: suminf.    0.60463 (2) obj. -823.871 iterations 2
Cbc0038I Pass  19: suminf.    0.44651 (2) obj. -823.871 iterations 2
Cbc0038I Pass  20: suminf.    0.49618 (3) obj. -823.871 iterations 2
Cbc0038I Pass  21: suminf.    0.49485 (3) obj. -823.871 iterations 1
Cbc0038I Pass  22: suminf.    0.51456 (4) obj. -823.871 iterations 4
Cbc0038I Pass  23: suminf.    0.50891 (3) obj. -823.871 iterations 1
Cbc0038I Pass  24: suminf.    1.31592 (5) obj. -823.871 iterations 7
Cbc0038I Pass  25: suminf.    1.31592 (5) obj. -823.871 iterations 0
Cbc0038I Pass  26: suminf.    1.70853 (5) obj. -823.871 iterations 4
Cbc0038I Pass  27: suminf.    1.68277 (6) obj. -823.871 iterations 1
Cbc0038I Pass  28: suminf.    1.89945 (4) obj. -823.871 iterations 6
Cbc0038I Pass  29: suminf.    0.84173 (2) obj. -823.871 iterations 4
Cbc0038I Pass  30: suminf.    0.94059 (3) obj. -823.871 iterations 2
Cbc0038I Pass  31: suminf.    0.94059 (3) obj. -823.871 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -643.032 - took 0.10 seconds
Cbc0012I Integer solution of -643.0323 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0031I 22 added rows had average density of 30.727273
Cbc0013I At root node, 22 cuts changed objective from -2451.4197 to -1547.5466 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5903 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1908 row cuts average 42.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 132 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 40.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -643.0323 best solution, best possible -1547.5466 (0.76 seconds)
Cbc0004I Integer solution of -815.2253 found after 4776 iterations and 12 nodes (0.89 seconds)
Cbc0001I Search completed - best objective -815.2253000000005, took 5140 iterations and 20 nodes (0.90 seconds)
Cbc0032I Strong branching done 372 times (7405 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 88 (-9) columns and 1173 (-241) elements
Clp1000I sum of infeasibilities 4.10108e-09 - average 4.8248e-11, 74 fixed columns
Coin0506I Presolve 8 (-77) rows, 11 (-77) columns and 33 (-1140) elements
Clp0006I 0  Obj -480.39251 Dual inf 33.798662 (11)
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 2.1538538 - largest nonzero change 2.602033e-05 ( 0.00086296483%) - largest zero change 1.5336743e-05
Clp0000I Optimal - objective value -450.58185
Clp0000I Optimal - objective value -450.58185
Coin0511I After Postsolve, objective -450.58185, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -450.58185 Dual inf 4368.2537 (54)
Clp0014I Perturbing problem by 0.001% of 3.6265726 - largest nonzero change 3.8170743e-05 ( 0.00086296483%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3175.0005
Clp0000I Optimal - objective value 3175.0005
Clp0000I Optimal - objective value 3175.0005
Coin0511I After Postsolve, objective 3175.0005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3175.000523 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 88 columns (88 integer (88 of which binary)) and 1175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.5875
Cbc0038I Pass   1: suminf.    1.58391 (12) obj. -1185.41 iterations 27
Cbc0038I Pass   2: suminf.    1.58391 (12) obj. -1185.41 iterations 1
Cbc0038I Solution found of 18.71
Cbc0038I Rounding solution of -397.838 is better than previous of 18.71

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -609.245
Cbc0038I Pass   3: suminf.    1.58391 (12) obj. -1185.41 iterations 0
Cbc0038I Pass   4: suminf.    1.58391 (12) obj. -1185.41 iterations 1
Cbc0038I Pass   5: suminf.    0.80629 (3) obj. -609.245 iterations 19
Cbc0038I Pass   6: suminf.    0.69571 (3) obj. -609.245 iterations 4
Cbc0038I Pass   7: suminf.    0.80629 (3) obj. -609.245 iterations 4
Cbc0038I Pass   8: suminf.    3.12971 (20) obj. -817.674 iterations 19
Cbc0038I Pass   9: suminf.    3.05829 (19) obj. -780.602 iterations 4
Cbc0038I Pass  10: suminf.    1.23261 (8) obj. -609.245 iterations 21
Cbc0038I Pass  11: suminf.    1.23261 (8) obj. -609.245 iterations 1
Cbc0038I Pass  12: suminf.    0.49503 (2) obj. -609.245 iterations 7
Cbc0038I Pass  13: suminf.    0.28205 (1) obj. -616.904 iterations 2
Cbc0038I Pass  14: suminf.    0.49503 (2) obj. -609.245 iterations 3
Cbc0038I Pass  15: suminf.    3.01001 (13) obj. -858.97 iterations 25
Cbc0038I Pass  16: suminf.    1.95823 (10) obj. -698.82 iterations 8
Cbc0038I Pass  17: suminf.    1.15824 (5) obj. -609.245 iterations 20
Cbc0038I Pass  18: suminf.    0.73588 (3) obj. -705.101 iterations 4
Cbc0038I Pass  19: suminf.    0.62773 (2) obj. -609.245 iterations 4
Cbc0038I Pass  20: suminf.    0.62477 (2) obj. -609.99 iterations 3
Cbc0038I Pass  21: suminf.    2.52380 (12) obj. -609.245 iterations 26
Cbc0038I Pass  22: suminf.    2.52380 (12) obj. -609.245 iterations 9
Cbc0038I Pass  23: suminf.    1.14998 (4) obj. -609.245 iterations 11
Cbc0038I Pass  24: suminf.    1.14998 (4) obj. -609.245 iterations 0
Cbc0038I Pass  25: suminf.    0.90383 (4) obj. -609.245 iterations 2
Cbc0038I Pass  26: suminf.    0.90383 (4) obj. -609.245 iterations 0
Cbc0038I Pass  27: suminf.    1.14998 (4) obj. -609.245 iterations 1
Cbc0038I Pass  28: suminf.    3.07439 (12) obj. -609.245 iterations 18
Cbc0038I Pass  29: suminf.    1.94254 (10) obj. -609.245 iterations 5
Cbc0038I Pass  30: suminf.    1.48313 (8) obj. -690.082 iterations 2
Cbc0038I Pass  31: suminf.    0.87076 (3) obj. -609.245 iterations 9
Cbc0038I Pass  32: suminf.    0.59912 (2) obj. -670.093 iterations 2
Cbc0038I Rounding solution of -548.806 is better than previous of -397.838

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 37 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -548.806 to -694.419 (0.05 seconds)
Cbc0038I Round again with cutoff of -1057.92
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.58391 (12) obj. -1185.41 iterations 0
Cbc0038I Pass  33: suminf.    1.58391 (12) obj. -1185.41 iterations 1
Cbc0038I Pass  34: suminf.    1.61658 (22) obj. -1057.92 iterations 20
Cbc0038I Pass  35: suminf.    1.54407 (22) obj. -1070.75 iterations 3
Cbc0038I Pass  36: suminf.    0.77116 (3) obj. -1057.92 iterations 41
Cbc0038I Pass  37: suminf.    0.62477 (2) obj. -1084.6 iterations 7
Cbc0038I Pass  38: suminf.    0.73108 (2) obj. -1057.92 iterations 1
Cbc0038I Pass  39: suminf.    2.26192 (9) obj. -1057.92 iterations 12
Cbc0038I Pass  40: suminf.    2.26192 (9) obj. -1057.92 iterations 2
Cbc0038I Pass  41: suminf.    0.65937 (2) obj. -1057.92 iterations 9
Cbc0038I Pass  42: suminf.    0.62477 (2) obj. -1066.6 iterations 1
Cbc0038I Pass  43: suminf.    1.11602 (5) obj. -1057.92 iterations 8
Cbc0038I Pass  44: suminf.    1.11602 (5) obj. -1057.92 iterations 0
Cbc0038I Pass  45: suminf.    1.02590 (3) obj. -1057.92 iterations 4
Cbc0038I Pass  46: suminf.    0.92206 (3) obj. -1083.98 iterations 1
Cbc0038I Pass  47: suminf.    1.06932 (3) obj. -1057.92 iterations 1
Cbc0038I Pass  48: suminf.    3.02687 (10) obj. -1057.92 iterations 11
Cbc0038I Pass  49: suminf.    1.75377 (7) obj. -1261.74 iterations 3
Cbc0038I Pass  50: suminf.    1.75377 (7) obj. -1261.74 iterations 1
Cbc0038I Pass  51: suminf.    1.06932 (3) obj. -1057.92 iterations 6
Cbc0038I Pass  52: suminf.    0.92206 (3) obj. -1083.98 iterations 2
Cbc0038I Pass  53: suminf.    1.93483 (8) obj. -1057.92 iterations 16
Cbc0038I Pass  54: suminf.    1.44625 (7) obj. -1167.36 iterations 6
Cbc0038I Pass  55: suminf.    0.95823 (4) obj. -1057.92 iterations 7
Cbc0038I Pass  56: suminf.    0.95823 (4) obj. -1057.92 iterations 0
Cbc0038I Pass  57: suminf.    1.09220 (4) obj. -1057.92 iterations 6
Cbc0038I Pass  58: suminf.    1.09220 (4) obj. -1057.92 iterations 0
Cbc0038I Pass  59: suminf.    0.95823 (4) obj. -1057.92 iterations 7
Cbc0038I Pass  60: suminf.    1.65923 (10) obj. -1057.92 iterations 16
Cbc0038I Pass  61: suminf.    1.48018 (7) obj. -1079.52 iterations 3
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 30 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -1494.11
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.76162 (32) obj. -1494.11 iterations 6
Cbc0038I Pass  62: suminf.    2.76162 (32) obj. -1494.11 iterations 0
Cbc0038I Pass  63: suminf.    2.74960 (16) obj. -1494.11 iterations 32
Cbc0038I Pass  64: suminf.    2.74960 (16) obj. -1494.11 iterations 3
Cbc0038I Pass  65: suminf.    2.01837 (22) obj. -1494.11 iterations 31
Cbc0038I Pass  66: suminf.    1.79637 (7) obj. -1494.11 iterations 13
Cbc0038I Pass  67: suminf.    2.13204 (7) obj. -1494.11 iterations 8
Cbc0038I Pass  68: suminf.    2.13204 (7) obj. -1494.11 iterations 1
Cbc0038I Pass  69: suminf.    1.79637 (7) obj. -1494.11 iterations 15
Cbc0038I Pass  70: suminf.    4.39817 (18) obj. -1494.11 iterations 22
Cbc0038I Pass  71: suminf.    4.39817 (18) obj. -1494.11 iterations 5
Cbc0038I Pass  72: suminf.    3.82996 (15) obj. -1494.11 iterations 10
Cbc0038I Pass  73: suminf.    3.82996 (15) obj. -1494.11 iterations 1
Cbc0038I Pass  74: suminf.    4.00807 (14) obj. -1494.11 iterations 3
Cbc0038I Pass  75: suminf.    3.71456 (15) obj. -1494.11 iterations 5
Cbc0038I Pass  76: suminf.    4.02292 (14) obj. -1494.11 iterations 5
Cbc0038I Pass  77: suminf.    4.28966 (16) obj. -1494.11 iterations 12
Cbc0038I Pass  78: suminf.    4.28966 (16) obj. -1494.11 iterations 1
Cbc0038I Pass  79: suminf.    3.76772 (14) obj. -1494.11 iterations 7
Cbc0038I Pass  80: suminf.    3.76772 (14) obj. -1494.11 iterations 0
Cbc0038I Pass  81: suminf.    3.73981 (13) obj. -1494.11 iterations 4
Cbc0038I Pass  82: suminf.    3.67867 (14) obj. -1494.11 iterations 3
Cbc0038I Pass  83: suminf.    3.73981 (13) obj. -1494.11 iterations 3
Cbc0038I Pass  84: suminf.    5.29545 (21) obj. -1494.11 iterations 16
Cbc0038I Pass  85: suminf.    4.58463 (21) obj. -1494.11 iterations 4
Cbc0038I Pass  86: suminf.    4.13539 (19) obj. -1494.11 iterations 9
Cbc0038I Pass  87: suminf.    4.12150 (18) obj. -1494.11 iterations 2
Cbc0038I Pass  88: suminf.    3.89240 (14) obj. -1494.11 iterations 7
Cbc0038I Pass  89: suminf.    3.89240 (14) obj. -1494.11 iterations 1
Cbc0038I Pass  90: suminf.    3.96477 (14) obj. -1494.11 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 33 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -694.419 - took 0.08 seconds
Cbc0012I Integer solution of -694.419 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 42 added rows had average density of 19.285714
Cbc0013I At root node, 42 cuts changed objective from -2511.9079 to -815.23243 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3465 row cuts average 4.4 elements, 15 column cuts (15 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 452 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 218 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.909 seconds - new frequency is 1
Cbc0016I Integer solution of -815.2253 found by strong branching after 1068 iterations and 0 nodes (2.19 seconds)
Cbc0001I Search completed - best objective -815.2253000000005, took 1098 iterations and 0 nodes (2.20 seconds)
Cbc0032I Strong branching done 10 times (190 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       1.45   (Wallclock seconds):       2.20

