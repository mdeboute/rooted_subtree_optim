Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 2.10773e-05 - average 1.53849e-07, 8 fixed columns
Coin0506I Presolve 121 (-16) rows, 68 (-8) columns and 370 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 0.28536968 - largest nonzero change 0 ( 0%) - largest zero change 2.7184261e-05
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Coin0511I After Postsolve, objective 34.845576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Coin0511I After Postsolve, objective 34.845576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.84557603 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.27213
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.53764 iterations 58
Cbc0038I Solution found of 8.53764
Cbc0038I Relaxing continuous gives 8.53764
Cbc0038I Rounding solution of 3.70482 is better than previous of 8.53764

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 3.70482 to -3.99791 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.08277
Cbc0038I Pass   2: suminf.    0.97898 (21) obj. -7.08277 iterations 31
Cbc0038I Pass   3: suminf.    0.89630 (39) obj. -7.08277 iterations 20
Cbc0038I Pass   4: suminf.    1.38776 (5) obj. -7.08277 iterations 45
Cbc0038I Pass   5: suminf.    1.38776 (5) obj. -7.08277 iterations 0
Cbc0038I Pass   6: suminf.    1.59314 (5) obj. -7.08277 iterations 15
Cbc0038I Pass   7: suminf.    1.26121 (4) obj. -7.08277 iterations 3
Cbc0038I Pass   8: suminf.    1.16015 (5) obj. -7.08277 iterations 1
Cbc0038I Pass   9: suminf.    1.31990 (6) obj. -7.08277 iterations 10
Cbc0038I Pass  10: suminf.    1.30818 (5) obj. -7.08277 iterations 4
Cbc0038I Pass  11: suminf.    1.38917 (4) obj. -7.08277 iterations 10
Cbc0038I Pass  12: suminf.    2.29986 (8) obj. -7.08277 iterations 20
Cbc0038I Pass  13: suminf.    1.82778 (6) obj. -7.08277 iterations 6
Cbc0038I Pass  14: suminf.    2.14849 (6) obj. -7.08277 iterations 14
Cbc0038I Pass  15: suminf.    2.12215 (7) obj. -7.08277 iterations 2
Cbc0038I Pass  16: suminf.    2.12215 (7) obj. -7.08277 iterations 0
Cbc0038I Pass  17: suminf.    1.69480 (4) obj. -7.08277 iterations 6
Cbc0038I Pass  18: suminf.    1.45386 (6) obj. -7.08277 iterations 2
Cbc0038I Pass  19: suminf.    1.31990 (6) obj. -7.08277 iterations 7
Cbc0038I Pass  20: suminf.    1.30818 (5) obj. -7.08277 iterations 3
Cbc0038I Pass  21: suminf.    1.38917 (4) obj. -7.08277 iterations 10
Cbc0038I Pass  22: suminf.    1.16015 (5) obj. -7.08277 iterations 5
Cbc0038I Pass  23: suminf.    1.31990 (6) obj. -7.08277 iterations 10
Cbc0038I Pass  24: suminf.    1.75152 (9) obj. -7.08277 iterations 18
Cbc0038I Pass  25: suminf.    1.56978 (8) obj. -7.08277 iterations 8
Cbc0038I Pass  26: suminf.    1.61461 (6) obj. -7.08277 iterations 11
Cbc0038I Pass  27: suminf.    1.61461 (6) obj. -7.08277 iterations 0
Cbc0038I Pass  28: suminf.    1.64988 (6) obj. -7.08277 iterations 4
Cbc0038I Pass  29: suminf.    1.41978 (6) obj. -7.08277 iterations 2
Cbc0038I Pass  30: suminf.    2.63877 (10) obj. -7.08277 iterations 26
Cbc0038I Pass  31: suminf.    1.27444 (5) obj. -7.08277 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -3.99791 to -4.03776 (0.10 seconds)
Cbc0038I Round again with cutoff of -12.6353
Cbc0038I Pass  31: suminf.    2.74108 (21) obj. -12.6353 iterations 0
Cbc0038I Pass  32: suminf.    2.50960 (39) obj. -12.6353 iterations 20
Cbc0038I Pass  33: suminf.    1.72411 (8) obj. -12.6353 iterations 42
Cbc0038I Pass  34: suminf.    1.72411 (8) obj. -12.6353 iterations 0
Cbc0038I Pass  35: suminf.    3.04212 (13) obj. -12.6353 iterations 17
Cbc0038I Pass  36: suminf.    2.87036 (13) obj. -12.6353 iterations 3
Cbc0038I Pass  37: suminf.    2.55967 (9) obj. -12.6353 iterations 15
Cbc0038I Pass  38: suminf.    2.29838 (9) obj. -12.6353 iterations 1
Cbc0038I Pass  39: suminf.    2.30062 (6) obj. -12.6353 iterations 9
Cbc0038I Pass  40: suminf.    2.30062 (6) obj. -12.6353 iterations 0
Cbc0038I Pass  41: suminf.    2.47318 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  42: suminf.    2.47318 (6) obj. -12.6353 iterations 0
Cbc0038I Pass  43: suminf.    2.30062 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  44: suminf.    2.77534 (9) obj. -12.6353 iterations 17
Cbc0038I Pass  45: suminf.    2.35538 (8) obj. -12.6353 iterations 7
Cbc0038I Pass  46: suminf.    2.28492 (9) obj. -12.6353 iterations 13
Cbc0038I Pass  47: suminf.    2.28492 (9) obj. -12.6353 iterations 0
Cbc0038I Pass  48: suminf.    1.60897 (6) obj. -12.6353 iterations 7
Cbc0038I Pass  49: suminf.    1.60897 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  50: suminf.    2.19137 (6) obj. -12.6353 iterations 6
Cbc0038I Pass  51: suminf.    1.37439 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  52: suminf.    1.35814 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  53: suminf.    2.38394 (7) obj. -12.6353 iterations 5
Cbc0038I Pass  54: suminf.    1.62635 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  55: suminf.    1.60897 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  56: suminf.    2.19137 (6) obj. -12.6353 iterations 6
Cbc0038I Pass  57: suminf.    1.37439 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  58: suminf.    1.35814 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  59: suminf.    2.38394 (7) obj. -12.6353 iterations 5
Cbc0038I Pass  60: suminf.    1.62635 (6) obj. -12.6353 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 88 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -4.03776 - took 0.12 seconds
Cbc0012I Integer solution of -4.03776 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 74 rows 42 columns
Cbc0031I 33 added rows had average density of 43.181818
Cbc0013I At root node, 33 cuts changed objective from -34.845576 to -27.526605 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15519 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1631 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.03776 best solution, best possible -27.526605 (1.01 seconds)
Cbc0012I Integer solution of -4.07728 found by rounding after 10136 iterations and 24 nodes (1.19 seconds)
Cbc0012I Integer solution of -4.43917 found by rounding after 10232 iterations and 33 nodes (1.20 seconds)
Cbc0012I Integer solution of -4.44112 found by rounding after 10246 iterations and 34 nodes (1.21 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 45 rows 29 columns
Cbc0012I Integer solution of -5.1336 found by RINS after 10348 iterations and 44 nodes (1.22 seconds)
Cbc0001I Search completed - best objective -5.133599999999998, took 12013 iterations and 90 nodes (1.33 seconds)
Cbc0032I Strong branching done 972 times (16843 iterations), fathomed 7 nodes and fixed 85 variables
Cbc0035I Maximum depth 20, 163 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       1.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 117 (-35) columns and 1980 (-1323) elements
Clp1000I sum of infeasibilities 2.12018e-07 - average 2.03863e-09, 23 fixed columns
Coin0506I Presolve 85 (-19) rows, 94 (-23) columns and 1341 (-639) elements
Clp0006I 0  Obj 36.840197 Dual inf 4.5364363 (94)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.5323884 - largest nonzero change 2.3799493e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 53.116367
Clp0000I Optimal - objective value 53.116367
Coin0511I After Postsolve, objective 53.116367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.116367
Clp0000I Optimal - objective value 53.116367
Clp0000I Optimal - objective value 53.116367
Clp0000I Optimal - objective value 53.116367
Coin0511I After Postsolve, objective 53.116367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.11636651 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 118 columns (118 integer (118 of which binary)) and 1987 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.615%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.46542
Cbc0038I Pass   1: suminf.    2.51207 (31) obj. -39.8573 iterations 10
Cbc0038I Pass   2: suminf.    2.51207 (31) obj. -39.8573 iterations 1
Cbc0038I Pass   3: suminf.    1.49607 (21) obj. -18.5319 iterations 10
Cbc0038I Solution found of 6.54283
Cbc0038I Rounding solution of 2.14106 is better than previous of 6.54283

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -2.98653
Cbc0038I Pass   4: suminf.    2.51207 (31) obj. -39.8573 iterations 0
Cbc0038I Pass   5: suminf.    2.51207 (31) obj. -39.8573 iterations 1
Cbc0038I Pass   6: suminf.    0.54566 (3) obj. -2.98653 iterations 29
Cbc0038I Pass   7: suminf.    0.12000 (1) obj. -5.77717 iterations 3
Cbc0038I Pass   8: suminf.    0.31933 (1) obj. -2.98653 iterations 1
Cbc0038I Pass   9: suminf.    2.99656 (18) obj. -2.98653 iterations 26
Cbc0038I Pass  10: suminf.    0.50478 (5) obj. -2.98653 iterations 12
Cbc0038I Pass  11: suminf.    0.45244 (5) obj. -3.71927 iterations 1
Cbc0038I Pass  12: suminf.    0.48742 (5) obj. -2.98653 iterations 5
Cbc0038I Pass  13: suminf.    0.48742 (5) obj. -2.98653 iterations 0
Cbc0038I Pass  14: suminf.    0.19498 (1) obj. -2.98653 iterations 5
Cbc0038I Pass  15: suminf.    0.12000 (1) obj. -4.03624 iterations 1
Cbc0038I Pass  16: suminf.    1.73802 (17) obj. -2.98653 iterations 30
Cbc0038I Pass  17: suminf.    1.36474 (13) obj. -2.98653 iterations 7
Cbc0038I Pass  18: suminf.    1.20591 (7) obj. -2.98653 iterations 21
Cbc0038I Pass  19: suminf.    1.20591 (7) obj. -2.98653 iterations 1
Cbc0038I Pass  20: suminf.    0.95350 (4) obj. -2.98653 iterations 10
Cbc0038I Pass  21: suminf.    0.95350 (4) obj. -2.98653 iterations 0
Cbc0038I Pass  22: suminf.    1.28026 (5) obj. -2.98653 iterations 8
Cbc0038I Pass  23: suminf.    1.28026 (5) obj. -2.98653 iterations 0
Cbc0038I Pass  24: suminf.    1.72750 (5) obj. -2.98653 iterations 11
Cbc0038I Pass  25: suminf.    1.45968 (7) obj. -2.98653 iterations 2
Cbc0038I Pass  26: suminf.    0.84953 (4) obj. -2.98653 iterations 6
Cbc0038I Pass  27: suminf.    0.27223 (3) obj. -2.98653 iterations 10
Cbc0038I Pass  28: suminf.    0.21576 (2) obj. -3.50583 iterations 1
Cbc0038I Pass  29: suminf.    0.44889 (3) obj. -2.98653 iterations 8
Cbc0038I Pass  30: suminf.    3.17354 (15) obj. -2.98653 iterations 28
Cbc0038I Pass  31: suminf.    1.07261 (10) obj. -2.98653 iterations 12
Cbc0038I Pass  32: suminf.    0.84608 (10) obj. -3.95694 iterations 6
Cbc0038I Pass  33: suminf.    1.06690 (4) obj. -2.98653 iterations 16
Cbc0038I Rounding solution of 0.5227 is better than previous of 2.14106

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 59 rows 66 columns
Cbc0038I Mini branch and bound improved solution from 0.5227 to -2.99791 (0.10 seconds)
Cbc0038I Round again with cutoff of -12.2252
Cbc0038I Pass  33: suminf.    2.51207 (31) obj. -39.8573 iterations 0
Cbc0038I Pass  34: suminf.    2.51207 (31) obj. -39.8573 iterations 1
Cbc0038I Pass  35: suminf.    1.49607 (21) obj. -18.5319 iterations 10
Cbc0038I Pass  36: suminf.    0.92920 (10) obj. -12.2252 iterations 13
Cbc0038I Pass  37: suminf.    0.57652 (10) obj. -17.1628 iterations 1
Cbc0038I Pass  38: suminf.    0.79346 (8) obj. -12.2252 iterations 13
Cbc0038I Pass  39: suminf.    0.57911 (7) obj. -12.9397 iterations 2
Cbc0038I Pass  40: suminf.    1.06493 (11) obj. -12.2252 iterations 14
Cbc0038I Pass  41: suminf.    0.53291 (5) obj. -12.726 iterations 4
Cbc0038I Pass  42: suminf.    2.72418 (16) obj. -12.2252 iterations 16
Cbc0038I Pass  43: suminf.    1.55988 (14) obj. -12.2252 iterations 7
Cbc0038I Pass  44: suminf.    2.36038 (11) obj. -12.2252 iterations 15
Cbc0038I Pass  45: suminf.    1.69958 (12) obj. -12.2252 iterations 4
Cbc0038I Pass  46: suminf.    2.93144 (11) obj. -12.2252 iterations 12
Cbc0038I Pass  47: suminf.    2.86649 (11) obj. -12.2252 iterations 2
Cbc0038I Pass  48: suminf.    2.29857 (9) obj. -12.2252 iterations 7
Cbc0038I Pass  49: suminf.    2.10437 (9) obj. -12.2252 iterations 1
Cbc0038I Pass  50: suminf.    2.86153 (10) obj. -12.2252 iterations 9
Cbc0038I Pass  51: suminf.    1.44186 (9) obj. -12.2252 iterations 10
Cbc0038I Pass  52: suminf.    1.44186 (9) obj. -12.2252 iterations 3
Cbc0038I Pass  53: suminf.    2.79274 (10) obj. -12.2252 iterations 10
Cbc0038I Pass  54: suminf.    1.39046 (9) obj. -12.2252 iterations 6
Cbc0038I Pass  55: suminf.    1.39046 (9) obj. -12.2252 iterations 3
Cbc0038I Pass  56: suminf.    2.80328 (10) obj. -12.2252 iterations 7
Cbc0038I Pass  57: suminf.    1.44186 (9) obj. -12.2252 iterations 8
Cbc0038I Pass  58: suminf.    1.44186 (9) obj. -12.2252 iterations 3
Cbc0038I Pass  59: suminf.    2.79274 (10) obj. -12.2252 iterations 10
Cbc0038I Pass  60: suminf.    1.39046 (9) obj. -12.2252 iterations 6
Cbc0038I Pass  61: suminf.    1.39046 (9) obj. -12.2252 iterations 3
Cbc0038I Pass  62: suminf.    2.80328 (10) obj. -12.2252 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -2.99791 - took 0.09 seconds
Cbc0012I Integer solution of -2.99791 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 43 rows 46 columns
Cbc0031I 60 added rows had average density of 36.516667
Cbc0013I At root node, 60 cuts changed objective from -49.133989 to -11.22113 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11140 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1258 row cuts average 109.8 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 635 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1256 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 377 row cuts average 67.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 95 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.598 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.99791 best solution, best possible -11.22113 (2.36 seconds)
Cbc0012I Integer solution of -4.09406 found by rounding after 4558 iterations and 3 nodes (2.41 seconds)
Cbc0012I Integer solution of -4.19086 found by rounding after 4636 iterations and 16 nodes (2.44 seconds)
Cbc0012I Integer solution of -4.43917 found by rounding after 4715 iterations and 35 nodes (2.45 seconds)
Cbc0012I Integer solution of -4.5843 found by rounding after 4751 iterations and 40 nodes (2.46 seconds)
Cbc0004I Integer solution of -5.1336 found after 4776 iterations and 44 nodes (2.47 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 55 rows 64 columns
Cbc0010I After 56 nodes, 8 on tree, -5.1336 best solution, best possible -10.131354 (3.14 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 50 rows 59 columns
Cbc0010I After 99 nodes, 2 on tree, -5.1336 best solution, best possible -10.131354 (3.84 seconds)
Cbc0001I Search completed - best objective -5.133599999999998, took 8730 iterations and 120 nodes (4.17 seconds)
Cbc0032I Strong branching done 1374 times (22629 iterations), fathomed 15 nodes and fixed 9 variables
Cbc0035I Maximum depth 17, 307 variables fixed on reduced cost
Total time (CPU seconds):       3.51   (Wallclock seconds):       4.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 2.10773e-05 - average 1.53849e-07, 8 fixed columns
Coin0506I Presolve 121 (-16) rows, 68 (-8) columns and 370 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 0.28536968 - largest nonzero change 0 ( 0%) - largest zero change 2.7184261e-05
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Coin0511I After Postsolve, objective 34.845576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Coin0511I After Postsolve, objective 34.845576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.84557603 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.27213
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.53764 iterations 58
Cbc0038I Solution found of 8.53764
Cbc0038I Relaxing continuous gives 8.53764
Cbc0038I Rounding solution of 3.70482 is better than previous of 8.53764

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 3.70482 to -3.99791 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.08277
Cbc0038I Pass   2: suminf.    0.97898 (21) obj. -7.08277 iterations 31
Cbc0038I Pass   3: suminf.    0.89630 (39) obj. -7.08277 iterations 20
Cbc0038I Pass   4: suminf.    1.38776 (5) obj. -7.08277 iterations 45
Cbc0038I Pass   5: suminf.    1.38776 (5) obj. -7.08277 iterations 0
Cbc0038I Pass   6: suminf.    1.59314 (5) obj. -7.08277 iterations 15
Cbc0038I Pass   7: suminf.    1.26121 (4) obj. -7.08277 iterations 3
Cbc0038I Pass   8: suminf.    1.16015 (5) obj. -7.08277 iterations 1
Cbc0038I Pass   9: suminf.    1.31990 (6) obj. -7.08277 iterations 10
Cbc0038I Pass  10: suminf.    1.30818 (5) obj. -7.08277 iterations 4
Cbc0038I Pass  11: suminf.    1.38917 (4) obj. -7.08277 iterations 10
Cbc0038I Pass  12: suminf.    2.29986 (8) obj. -7.08277 iterations 20
Cbc0038I Pass  13: suminf.    1.82778 (6) obj. -7.08277 iterations 6
Cbc0038I Pass  14: suminf.    2.14849 (6) obj. -7.08277 iterations 14
Cbc0038I Pass  15: suminf.    2.12215 (7) obj. -7.08277 iterations 2
Cbc0038I Pass  16: suminf.    2.12215 (7) obj. -7.08277 iterations 0
Cbc0038I Pass  17: suminf.    1.69480 (4) obj. -7.08277 iterations 6
Cbc0038I Pass  18: suminf.    1.45386 (6) obj. -7.08277 iterations 2
Cbc0038I Pass  19: suminf.    1.31990 (6) obj. -7.08277 iterations 7
Cbc0038I Pass  20: suminf.    1.30818 (5) obj. -7.08277 iterations 3
Cbc0038I Pass  21: suminf.    1.38917 (4) obj. -7.08277 iterations 10
Cbc0038I Pass  22: suminf.    1.16015 (5) obj. -7.08277 iterations 5
Cbc0038I Pass  23: suminf.    1.31990 (6) obj. -7.08277 iterations 10
Cbc0038I Pass  24: suminf.    1.75152 (9) obj. -7.08277 iterations 18
Cbc0038I Pass  25: suminf.    1.56978 (8) obj. -7.08277 iterations 8
Cbc0038I Pass  26: suminf.    1.61461 (6) obj. -7.08277 iterations 11
Cbc0038I Pass  27: suminf.    1.61461 (6) obj. -7.08277 iterations 0
Cbc0038I Pass  28: suminf.    1.64988 (6) obj. -7.08277 iterations 4
Cbc0038I Pass  29: suminf.    1.41978 (6) obj. -7.08277 iterations 2
Cbc0038I Pass  30: suminf.    2.63877 (10) obj. -7.08277 iterations 26
Cbc0038I Pass  31: suminf.    1.27444 (5) obj. -7.08277 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -3.99791 to -4.03776 (0.10 seconds)
Cbc0038I Round again with cutoff of -12.6353
Cbc0038I Pass  31: suminf.    2.74108 (21) obj. -12.6353 iterations 0
Cbc0038I Pass  32: suminf.    2.50960 (39) obj. -12.6353 iterations 20
Cbc0038I Pass  33: suminf.    1.72411 (8) obj. -12.6353 iterations 42
Cbc0038I Pass  34: suminf.    1.72411 (8) obj. -12.6353 iterations 0
Cbc0038I Pass  35: suminf.    3.04212 (13) obj. -12.6353 iterations 17
Cbc0038I Pass  36: suminf.    2.87036 (13) obj. -12.6353 iterations 3
Cbc0038I Pass  37: suminf.    2.55967 (9) obj. -12.6353 iterations 15
Cbc0038I Pass  38: suminf.    2.29838 (9) obj. -12.6353 iterations 1
Cbc0038I Pass  39: suminf.    2.30062 (6) obj. -12.6353 iterations 9
Cbc0038I Pass  40: suminf.    2.30062 (6) obj. -12.6353 iterations 0
Cbc0038I Pass  41: suminf.    2.47318 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  42: suminf.    2.47318 (6) obj. -12.6353 iterations 0
Cbc0038I Pass  43: suminf.    2.30062 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  44: suminf.    2.77534 (9) obj. -12.6353 iterations 17
Cbc0038I Pass  45: suminf.    2.35538 (8) obj. -12.6353 iterations 7
Cbc0038I Pass  46: suminf.    2.28492 (9) obj. -12.6353 iterations 13
Cbc0038I Pass  47: suminf.    2.28492 (9) obj. -12.6353 iterations 0
Cbc0038I Pass  48: suminf.    1.60897 (6) obj. -12.6353 iterations 7
Cbc0038I Pass  49: suminf.    1.60897 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  50: suminf.    2.19137 (6) obj. -12.6353 iterations 6
Cbc0038I Pass  51: suminf.    1.37439 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  52: suminf.    1.35814 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  53: suminf.    2.38394 (7) obj. -12.6353 iterations 5
Cbc0038I Pass  54: suminf.    1.62635 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  55: suminf.    1.60897 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  56: suminf.    2.19137 (6) obj. -12.6353 iterations 6
Cbc0038I Pass  57: suminf.    1.37439 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  58: suminf.    1.35814 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  59: suminf.    2.38394 (7) obj. -12.6353 iterations 5
Cbc0038I Pass  60: suminf.    1.62635 (6) obj. -12.6353 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 88 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -4.03776 - took 0.12 seconds
Cbc0012I Integer solution of -4.03776 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 74 rows 42 columns
Cbc0031I 33 added rows had average density of 43.181818
Cbc0013I At root node, 33 cuts changed objective from -34.845576 to -27.526605 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15519 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1631 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.03776 best solution, best possible -27.526605 (1.09 seconds)
Cbc0012I Integer solution of -4.07728 found by rounding after 10136 iterations and 24 nodes (1.30 seconds)
Cbc0012I Integer solution of -4.43917 found by rounding after 10232 iterations and 33 nodes (1.31 seconds)
Cbc0012I Integer solution of -4.44112 found by rounding after 10246 iterations and 34 nodes (1.32 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 45 rows 29 columns
Cbc0012I Integer solution of -5.1336 found by RINS after 10348 iterations and 44 nodes (1.34 seconds)
Cbc0001I Search completed - best objective -5.133599999999998, took 12013 iterations and 90 nodes (1.46 seconds)
Cbc0032I Strong branching done 972 times (16843 iterations), fathomed 7 nodes and fixed 85 variables
Cbc0035I Maximum depth 20, 163 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 117 (-36) columns and 1980 (-1324) elements
Clp1000I sum of infeasibilities 2.12018e-07 - average 2.03863e-09, 23 fixed columns
Coin0506I Presolve 85 (-19) rows, 94 (-23) columns and 1341 (-639) elements
Clp0006I 0  Obj 36.840197 Dual inf 4.5364363 (94)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.5323884 - largest nonzero change 2.3799493e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 53.116367
Clp0000I Optimal - objective value 53.116367
Coin0511I After Postsolve, objective 53.116367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.116367
Clp0000I Optimal - objective value 53.116367
Clp0000I Optimal - objective value 53.116367
Clp0000I Optimal - objective value 53.116367
Coin0511I After Postsolve, objective 53.116367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.11636651 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 118 columns (118 integer (118 of which binary)) and 1987 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.615%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.46542
Cbc0038I Pass   1: suminf.    2.51207 (31) obj. -39.8573 iterations 10
Cbc0038I Pass   2: suminf.    2.51207 (31) obj. -39.8573 iterations 1
Cbc0038I Pass   3: suminf.    1.49607 (21) obj. -18.5319 iterations 10
Cbc0038I Solution found of 6.54283
Cbc0038I Rounding solution of 2.14106 is better than previous of 6.54283

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -2.98653
Cbc0038I Pass   4: suminf.    2.51207 (31) obj. -39.8573 iterations 0
Cbc0038I Pass   5: suminf.    2.51207 (31) obj. -39.8573 iterations 1
Cbc0038I Pass   6: suminf.    0.54566 (3) obj. -2.98653 iterations 29
Cbc0038I Pass   7: suminf.    0.12000 (1) obj. -5.77717 iterations 3
Cbc0038I Pass   8: suminf.    0.31933 (1) obj. -2.98653 iterations 1
Cbc0038I Pass   9: suminf.    2.99656 (18) obj. -2.98653 iterations 26
Cbc0038I Pass  10: suminf.    0.50478 (5) obj. -2.98653 iterations 12
Cbc0038I Pass  11: suminf.    0.45244 (5) obj. -3.71927 iterations 1
Cbc0038I Pass  12: suminf.    0.48742 (5) obj. -2.98653 iterations 5
Cbc0038I Pass  13: suminf.    0.48742 (5) obj. -2.98653 iterations 0
Cbc0038I Pass  14: suminf.    0.19498 (1) obj. -2.98653 iterations 5
Cbc0038I Pass  15: suminf.    0.12000 (1) obj. -4.03624 iterations 1
Cbc0038I Pass  16: suminf.    1.73802 (17) obj. -2.98653 iterations 30
Cbc0038I Pass  17: suminf.    1.36474 (13) obj. -2.98653 iterations 7
Cbc0038I Pass  18: suminf.    1.20591 (7) obj. -2.98653 iterations 21
Cbc0038I Pass  19: suminf.    1.20591 (7) obj. -2.98653 iterations 1
Cbc0038I Pass  20: suminf.    0.95350 (4) obj. -2.98653 iterations 10
Cbc0038I Pass  21: suminf.    0.95350 (4) obj. -2.98653 iterations 0
Cbc0038I Pass  22: suminf.    1.28026 (5) obj. -2.98653 iterations 8
Cbc0038I Pass  23: suminf.    1.28026 (5) obj. -2.98653 iterations 0
Cbc0038I Pass  24: suminf.    1.72750 (5) obj. -2.98653 iterations 11
Cbc0038I Pass  25: suminf.    1.45968 (7) obj. -2.98653 iterations 2
Cbc0038I Pass  26: suminf.    0.84953 (4) obj. -2.98653 iterations 6
Cbc0038I Pass  27: suminf.    0.27223 (3) obj. -2.98653 iterations 10
Cbc0038I Pass  28: suminf.    0.21576 (2) obj. -3.50583 iterations 1
Cbc0038I Pass  29: suminf.    0.44889 (3) obj. -2.98653 iterations 8
Cbc0038I Pass  30: suminf.    3.17354 (15) obj. -2.98653 iterations 28
Cbc0038I Pass  31: suminf.    1.07261 (10) obj. -2.98653 iterations 12
Cbc0038I Pass  32: suminf.    0.84608 (10) obj. -3.95694 iterations 6
Cbc0038I Pass  33: suminf.    1.06690 (4) obj. -2.98653 iterations 16
Cbc0038I Rounding solution of 0.5227 is better than previous of 2.14106

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 59 rows 66 columns
Cbc0038I Mini branch and bound improved solution from 0.5227 to -2.99791 (0.11 seconds)
Cbc0038I Round again with cutoff of -12.2252
Cbc0038I Pass  33: suminf.    2.51207 (31) obj. -39.8573 iterations 0
Cbc0038I Pass  34: suminf.    2.51207 (31) obj. -39.8573 iterations 1
Cbc0038I Pass  35: suminf.    1.49607 (21) obj. -18.5319 iterations 10
Cbc0038I Pass  36: suminf.    0.92920 (10) obj. -12.2252 iterations 13
Cbc0038I Pass  37: suminf.    0.57652 (10) obj. -17.1628 iterations 1
Cbc0038I Pass  38: suminf.    0.79346 (8) obj. -12.2252 iterations 13
Cbc0038I Pass  39: suminf.    0.57911 (7) obj. -12.9397 iterations 2
Cbc0038I Pass  40: suminf.    1.06493 (11) obj. -12.2252 iterations 14
Cbc0038I Pass  41: suminf.    0.53291 (5) obj. -12.726 iterations 4
Cbc0038I Pass  42: suminf.    2.72418 (16) obj. -12.2252 iterations 16
Cbc0038I Pass  43: suminf.    1.55988 (14) obj. -12.2252 iterations 7
Cbc0038I Pass  44: suminf.    2.36038 (11) obj. -12.2252 iterations 15
Cbc0038I Pass  45: suminf.    1.69958 (12) obj. -12.2252 iterations 4
Cbc0038I Pass  46: suminf.    2.93144 (11) obj. -12.2252 iterations 12
Cbc0038I Pass  47: suminf.    2.86649 (11) obj. -12.2252 iterations 2
Cbc0038I Pass  48: suminf.    2.29857 (9) obj. -12.2252 iterations 7
Cbc0038I Pass  49: suminf.    2.10437 (9) obj. -12.2252 iterations 1
Cbc0038I Pass  50: suminf.    2.86153 (10) obj. -12.2252 iterations 9
Cbc0038I Pass  51: suminf.    1.44186 (9) obj. -12.2252 iterations 10
Cbc0038I Pass  52: suminf.    1.44186 (9) obj. -12.2252 iterations 3
Cbc0038I Pass  53: suminf.    2.79274 (10) obj. -12.2252 iterations 10
Cbc0038I Pass  54: suminf.    1.39046 (9) obj. -12.2252 iterations 6
Cbc0038I Pass  55: suminf.    1.39046 (9) obj. -12.2252 iterations 3
Cbc0038I Pass  56: suminf.    2.80328 (10) obj. -12.2252 iterations 7
Cbc0038I Pass  57: suminf.    1.44186 (9) obj. -12.2252 iterations 8
Cbc0038I Pass  58: suminf.    1.44186 (9) obj. -12.2252 iterations 3
Cbc0038I Pass  59: suminf.    2.79274 (10) obj. -12.2252 iterations 10
Cbc0038I Pass  60: suminf.    1.39046 (9) obj. -12.2252 iterations 6
Cbc0038I Pass  61: suminf.    1.39046 (9) obj. -12.2252 iterations 3
Cbc0038I Pass  62: suminf.    2.80328 (10) obj. -12.2252 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -2.99791 - took 0.10 seconds
Cbc0012I Integer solution of -2.99791 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 43 rows 46 columns
Cbc0031I 60 added rows had average density of 36.516667
Cbc0013I At root node, 60 cuts changed objective from -49.133989 to -11.22113 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11140 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1258 row cuts average 109.8 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 635 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1256 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 377 row cuts average 67.4 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 95 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.631 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.99791 best solution, best possible -11.22113 (2.63 seconds)
Cbc0012I Integer solution of -4.09406 found by rounding after 4558 iterations and 3 nodes (2.69 seconds)
Cbc0012I Integer solution of -4.19086 found by rounding after 4636 iterations and 16 nodes (2.72 seconds)
Cbc0012I Integer solution of -4.43917 found by rounding after 4715 iterations and 35 nodes (2.73 seconds)
Cbc0012I Integer solution of -4.5843 found by rounding after 4751 iterations and 40 nodes (2.74 seconds)
Cbc0004I Integer solution of -5.1336 found after 4776 iterations and 44 nodes (2.75 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 55 rows 64 columns
Cbc0010I After 53 nodes, 6 on tree, -5.1336 best solution, best possible -10.131354 (3.34 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 50 rows 59 columns
Cbc0010I After 99 nodes, 2 on tree, -5.1336 best solution, best possible -10.131354 (4.29 seconds)
Cbc0001I Search completed - best objective -5.133599999999998, took 8730 iterations and 120 nodes (4.66 seconds)
Cbc0032I Strong branching done 1374 times (22629 iterations), fathomed 15 nodes and fixed 9 variables
Cbc0035I Maximum depth 17, 307 variables fixed on reduced cost
Total time (CPU seconds):       3.84   (Wallclock seconds):       4.67

