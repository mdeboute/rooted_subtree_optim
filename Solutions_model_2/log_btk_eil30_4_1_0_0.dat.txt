Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 25 (-7) columns and 135 (-42) elements
Clp1000I sum of infeasibilities 1.15363e-06 - average 2.50788e-08, 1 fixed columns
Coin0506I Presolve 41 (-5) rows, 24 (-1) columns and 123 (-12) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 2.3205093 - largest nonzero change 0 ( 0%) - largest zero change 2.4045532e-05
Clp0000I Optimal - objective value 89.621361
Clp0000I Optimal - objective value 89.621361
Coin0511I After Postsolve, objective 89.621361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.621361
Clp0000I Optimal - objective value 89.621361
Clp0000I Optimal - objective value 89.621361
Coin0511I After Postsolve, objective 89.621361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.62136092 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 46 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.608%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.49167
Cbc0038I Pass   1: suminf.    0.01667 (1) obj. -24.9609 iterations 21
Cbc0038I Solution found of -24.4813
Cbc0038I Relaxing continuous gives -24.4814
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -24.4814 to -25.025 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.4848
Cbc0038I Pass   2: suminf.    0.20264 (3) obj. -31.4848 iterations 2
Cbc0038I Pass   3: suminf.    0.20264 (3) obj. -31.4848 iterations 0
Cbc0038I Pass   4: suminf.    0.30743 (2) obj. -31.4848 iterations 3
Cbc0038I Pass   5: suminf.    0.41687 (1) obj. -31.4848 iterations 4
Cbc0038I Pass   6: suminf.    0.45968 (1) obj. -31.4848 iterations 1
Cbc0038I Pass   7: suminf.    1.83545 (6) obj. -31.4848 iterations 6
Cbc0038I Pass   8: suminf.    0.74181 (4) obj. -31.4848 iterations 4
Cbc0038I Pass   9: suminf.    0.57570 (3) obj. -31.4848 iterations 1
Cbc0038I Pass  10: suminf.    0.48834 (2) obj. -31.4848 iterations 5
Cbc0038I Pass  11: suminf.    0.49194 (1) obj. -31.4848 iterations 2
Cbc0038I Pass  12: suminf.    0.41687 (1) obj. -31.4848 iterations 1
Cbc0038I Pass  13: suminf.    2.73046 (8) obj. -31.4848 iterations 9
Cbc0038I Pass  14: suminf.    2.04552 (7) obj. -31.4848 iterations 6
Cbc0038I Pass  15: suminf.    1.28714 (7) obj. -31.4848 iterations 3
Cbc0038I Pass  16: suminf.    0.19935 (2) obj. -31.4848 iterations 8
Cbc0038I Pass  17: suminf.    0.48834 (2) obj. -31.4848 iterations 4
Cbc0038I Pass  18: suminf.    0.49194 (1) obj. -31.4848 iterations 2
Cbc0038I Pass  19: suminf.    0.41687 (1) obj. -31.4848 iterations 1
Cbc0038I Pass  20: suminf.    0.86283 (3) obj. -31.4848 iterations 3
Cbc0038I Pass  21: suminf.    0.41687 (1) obj. -31.4848 iterations 5
Cbc0038I Pass  22: suminf.    0.45968 (1) obj. -31.4848 iterations 1
Cbc0038I Pass  23: suminf.    2.54892 (9) obj. -31.4848 iterations 12
Cbc0038I Pass  24: suminf.    2.17760 (7) obj. -31.4848 iterations 4
Cbc0038I Pass  25: suminf.    2.59524 (7) obj. -31.4848 iterations 7
Cbc0038I Pass  26: suminf.    0.62221 (2) obj. -31.4848 iterations 3
Cbc0038I Pass  27: suminf.    0.62221 (2) obj. -31.4848 iterations 0
Cbc0038I Pass  28: suminf.    0.82191 (2) obj. -31.4848 iterations 1
Cbc0038I Pass  29: suminf.    1.40299 (4) obj. -31.4848 iterations 3
Cbc0038I Pass  30: suminf.    1.40299 (4) obj. -31.4848 iterations 0
Cbc0038I Pass  31: suminf.    1.92508 (7) obj. -31.4848 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -25.025 to -25.9626 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.1121
Cbc0038I Pass  31: suminf.    0.67539 (4) obj. -43.1121 iterations 1
Cbc0038I Pass  32: suminf.    0.67539 (4) obj. -43.1121 iterations 0
Cbc0038I Pass  33: suminf.    0.39325 (2) obj. -43.1121 iterations 6
Cbc0038I Pass  34: suminf.    0.78367 (3) obj. -43.1121 iterations 5
Cbc0038I Pass  35: suminf.    0.66425 (3) obj. -43.1121 iterations 4
Cbc0038I Pass  36: suminf.    0.40186 (2) obj. -43.1121 iterations 2
Cbc0038I Pass  37: suminf.    2.97973 (7) obj. -43.1121 iterations 11
Cbc0038I Pass  38: suminf.    2.04441 (10) obj. -43.1121 iterations 9
Cbc0038I Pass  39: suminf.    1.94566 (10) obj. -43.1121 iterations 2
Cbc0038I Pass  40: suminf.    2.00319 (7) obj. -43.1121 iterations 14
Cbc0038I Pass  41: suminf.    1.92426 (13) obj. -43.1121 iterations 4
Cbc0038I Pass  42: suminf.    1.41027 (11) obj. -43.1121 iterations 15
Cbc0038I Pass  43: suminf.    1.19053 (10) obj. -43.1121 iterations 2
Cbc0038I Pass  44: suminf.    1.94659 (12) obj. -43.1121 iterations 12
Cbc0038I Pass  45: suminf.    1.90785 (12) obj. -43.1121 iterations 2
Cbc0038I Pass  46: suminf.    1.19053 (10) obj. -43.1121 iterations 15
Cbc0038I Pass  47: suminf.    3.41621 (11) obj. -43.1121 iterations 10
Cbc0038I Pass  48: suminf.    2.42520 (11) obj. -43.1121 iterations 2
Cbc0038I Pass  49: suminf.    0.44776 (3) obj. -43.1121 iterations 14
Cbc0038I Pass  50: suminf.    0.39325 (2) obj. -43.1121 iterations 2
Cbc0038I Pass  51: suminf.    0.78367 (3) obj. -43.1121 iterations 4
Cbc0038I Pass  52: suminf.    0.66425 (3) obj. -43.1121 iterations 3
Cbc0038I Pass  53: suminf.    0.40186 (2) obj. -43.1121 iterations 2
Cbc0038I Pass  54: suminf.    1.14630 (6) obj. -43.1121 iterations 17
Cbc0038I Pass  55: suminf.    1.09239 (7) obj. -43.1121 iterations 2
Cbc0038I Pass  56: suminf.    0.67300 (3) obj. -43.1121 iterations 11
Cbc0038I Pass  57: suminf.    1.17408 (5) obj. -43.1121 iterations 8
Cbc0038I Pass  58: suminf.    0.89166 (3) obj. -43.1121 iterations 4
Cbc0038I Pass  59: suminf.    4.56072 (11) obj. -43.1121 iterations 12
Cbc0038I Pass  60: suminf.    1.32793 (5) obj. -43.1121 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.9626 - took 0.04 seconds
Cbc0012I Integer solution of -25.96265 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 46 rows 25 columns, reduced to 32 rows 19 columns
Cbc0031I 10 added rows had average density of 22.7
Cbc0013I At root node, 10 cuts changed objective from -89.621361 to -46.575249 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 857 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 402 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.96265, took 1582 iterations and 2 nodes (0.17 seconds)
Cbc0032I Strong branching done 24 times (189 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-14) rows, 50 (-10) columns and 408 (-204) elements
Clp1000I sum of infeasibilities 1.81692e-07 - average 3.78524e-09, 7 fixed columns
Coin0506I Presolve 38 (-10) rows, 42 (-8) columns and 290 (-118) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.1983757 - largest nonzero change 2.9114958e-05 ( 0.0025820745%) - largest zero change 1.0338421e-05
Clp0000I Optimal - objective value 105.0503
Clp0000I Optimal - objective value 105.0503
Coin0511I After Postsolve, objective 105.0503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2733186 - largest nonzero change 1.1697007e-05 ( 0.00088996209%) - largest zero change 2.9114958e-05
Clp0000I Optimal - objective value 105.0503
Clp0000I Optimal - objective value 105.0503
Clp0000I Optimal - objective value 105.0503
Coin0511I After Postsolve, objective 105.0503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.0503003 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 50 columns (50 integer (50 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.267%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 9.77088
Cbc0038I Pass   1: suminf.    2.28928 (13) obj. -55.5007 iterations 10
Cbc0038I Pass   2: suminf.    2.28928 (13) obj. -55.5007 iterations 1
Cbc0038I Solution found of -9.96265
Cbc0038I Rounding solution of -11.9876 is better than previous of -9.96265

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11.9876 to -23.9376 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.1263
Cbc0038I Pass   3: suminf.    2.28928 (13) obj. -55.5007 iterations 0
Cbc0038I Pass   4: suminf.    2.28928 (13) obj. -55.5007 iterations 1
Cbc0038I Pass   5: suminf.    0.28619 (4) obj. -29.1263 iterations 16
Cbc0038I Pass   6: suminf.    0.28496 (3) obj. -29.1263 iterations 1
Cbc0038I Pass   7: suminf.    0.29620 (2) obj. -29.1263 iterations 4
Cbc0038I Pass   8: suminf.    0.29620 (2) obj. -29.1263 iterations 0
Cbc0038I Pass   9: suminf.    0.39247 (2) obj. -34.6452 iterations 1
Cbc0038I Pass  10: suminf.    0.31818 (1) obj. -32.1195 iterations 1
Cbc0038I Pass  11: suminf.    0.67378 (4) obj. -29.1263 iterations 7
Cbc0038I Pass  12: suminf.    0.58586 (2) obj. -30.451 iterations 2
Cbc0038I Pass  13: suminf.    0.44085 (3) obj. -29.1263 iterations 5
Cbc0038I Pass  14: suminf.    0.44085 (3) obj. -29.1263 iterations 0
Cbc0038I Pass  15: suminf.    0.25765 (3) obj. -29.1263 iterations 3
Cbc0038I Pass  16: suminf.    0.25765 (3) obj. -29.1263 iterations 1
Cbc0038I Pass  17: suminf.    0.44085 (3) obj. -29.1263 iterations 2
Cbc0038I Pass  18: suminf.    1.36273 (6) obj. -29.1263 iterations 16
Cbc0038I Pass  19: suminf.    1.36273 (6) obj. -29.1263 iterations 1
Cbc0038I Pass  20: suminf.    1.76226 (7) obj. -29.1263 iterations 5
Cbc0038I Pass  21: suminf.    1.76226 (7) obj. -29.1263 iterations 0
Cbc0038I Pass  22: suminf.    1.94156 (9) obj. -29.1263 iterations 3
Cbc0038I Pass  23: suminf.    1.65038 (6) obj. -29.1263 iterations 2
Cbc0038I Pass  24: suminf.    1.33911 (6) obj. -29.1263 iterations 2
Cbc0038I Pass  25: suminf.    1.37785 (5) obj. -29.1263 iterations 8
Cbc0038I Pass  26: suminf.    1.37785 (5) obj. -29.1263 iterations 0
Cbc0038I Pass  27: suminf.    0.97261 (4) obj. -29.1263 iterations 3
Cbc0038I Pass  28: suminf.    0.68652 (5) obj. -29.1263 iterations 2
Cbc0038I Pass  29: suminf.    1.37785 (5) obj. -29.1263 iterations 5
Cbc0038I Pass  30: suminf.    1.35625 (6) obj. -29.1263 iterations 16
Cbc0038I Pass  31: suminf.    1.35625 (6) obj. -29.1263 iterations 2
Cbc0038I Pass  32: suminf.    0.95996 (4) obj. -29.1263 iterations 7
Cbc0038I Rounding solution of -25.9626 is better than previous of -23.9376

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -38.4656
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.28928 (13) obj. -55.5007 iterations 0
Cbc0038I Pass  33: suminf.    2.28928 (13) obj. -55.5007 iterations 1
Cbc0038I Pass  34: suminf.    0.74247 (6) obj. -38.4656 iterations 16
Cbc0038I Pass  35: suminf.    0.73891 (5) obj. -38.4656 iterations 1
Cbc0038I Pass  36: suminf.    0.75261 (3) obj. -38.4656 iterations 3
Cbc0038I Pass  37: suminf.    0.75261 (3) obj. -38.4656 iterations 0
Cbc0038I Pass  38: suminf.    0.82533 (3) obj. -38.4656 iterations 1
Cbc0038I Pass  39: suminf.    0.82533 (3) obj. -38.4656 iterations 0
Cbc0038I Pass  40: suminf.    1.23323 (7) obj. -38.4656 iterations 15
Cbc0038I Pass  41: suminf.    1.11973 (8) obj. -38.4656 iterations 5
Cbc0038I Pass  42: suminf.    1.35582 (6) obj. -38.4656 iterations 8
Cbc0038I Pass  43: suminf.    1.35582 (6) obj. -38.4656 iterations 0
Cbc0038I Pass  44: suminf.    1.50599 (7) obj. -38.4656 iterations 3
Cbc0038I Pass  45: suminf.    1.13445 (6) obj. -38.4656 iterations 4
Cbc0038I Pass  46: suminf.    1.32552 (5) obj. -38.4656 iterations 8
Cbc0038I Pass  47: suminf.    1.32552 (5) obj. -38.4656 iterations 0
Cbc0038I Pass  48: suminf.    1.75039 (6) obj. -38.4656 iterations 4
Cbc0038I Pass  49: suminf.    1.00123 (5) obj. -38.4656 iterations 8
Cbc0038I Pass  50: suminf.    1.03981 (5) obj. -38.4656 iterations 3
Cbc0038I Pass  51: suminf.    1.03981 (5) obj. -38.4656 iterations 0
Cbc0038I Pass  52: suminf.    1.65005 (8) obj. -38.4656 iterations 15
Cbc0038I Pass  53: suminf.    1.38455 (6) obj. -40.2406 iterations 7
Cbc0038I Pass  54: suminf.    0.90916 (5) obj. -38.4656 iterations 10
Cbc0038I Pass  55: suminf.    0.87167 (6) obj. -38.4656 iterations 4
Cbc0038I Pass  56: suminf.    1.32552 (5) obj. -38.4656 iterations 9
Cbc0038I Pass  57: suminf.    1.32552 (5) obj. -38.4656 iterations 1
Cbc0038I Pass  58: suminf.    1.75039 (6) obj. -38.4656 iterations 3
Cbc0038I Pass  59: suminf.    1.00123 (5) obj. -38.4656 iterations 12
Cbc0038I Pass  60: suminf.    1.03981 (5) obj. -38.4656 iterations 5
Cbc0038I Pass  61: suminf.    1.03981 (5) obj. -38.4656 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25.9626 - took 0.02 seconds
Cbc0012I Integer solution of -25.96265 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 50 columns, reduced to 18 rows 18 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 12
Cbc0013I At root node, 12 cuts changed objective from -75.823013 to -24.970797 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 242 row cuts average 2.4 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.96265, took 84 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 25 (-7) columns and 135 (-42) elements
Clp1000I sum of infeasibilities 1.15363e-06 - average 2.50788e-08, 1 fixed columns
Coin0506I Presolve 41 (-5) rows, 24 (-1) columns and 123 (-12) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 2.3205093 - largest nonzero change 0 ( 0%) - largest zero change 2.4045532e-05
Clp0000I Optimal - objective value 89.621361
Clp0000I Optimal - objective value 89.621361
Coin0511I After Postsolve, objective 89.621361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.621361
Clp0000I Optimal - objective value 89.621361
Clp0000I Optimal - objective value 89.621361
Coin0511I After Postsolve, objective 89.621361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.62136092 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 46 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.608%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.49167
Cbc0038I Pass   1: suminf.    0.01667 (1) obj. -24.9609 iterations 21
Cbc0038I Solution found of -24.4813
Cbc0038I Relaxing continuous gives -24.4814
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -24.4814 to -25.025 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.4848
Cbc0038I Pass   2: suminf.    0.20264 (3) obj. -31.4848 iterations 2
Cbc0038I Pass   3: suminf.    0.20264 (3) obj. -31.4848 iterations 0
Cbc0038I Pass   4: suminf.    0.30743 (2) obj. -31.4848 iterations 3
Cbc0038I Pass   5: suminf.    0.41687 (1) obj. -31.4848 iterations 4
Cbc0038I Pass   6: suminf.    0.45968 (1) obj. -31.4848 iterations 1
Cbc0038I Pass   7: suminf.    1.83545 (6) obj. -31.4848 iterations 6
Cbc0038I Pass   8: suminf.    0.74181 (4) obj. -31.4848 iterations 4
Cbc0038I Pass   9: suminf.    0.57570 (3) obj. -31.4848 iterations 1
Cbc0038I Pass  10: suminf.    0.48834 (2) obj. -31.4848 iterations 5
Cbc0038I Pass  11: suminf.    0.49194 (1) obj. -31.4848 iterations 2
Cbc0038I Pass  12: suminf.    0.41687 (1) obj. -31.4848 iterations 1
Cbc0038I Pass  13: suminf.    2.73046 (8) obj. -31.4848 iterations 9
Cbc0038I Pass  14: suminf.    2.04552 (7) obj. -31.4848 iterations 6
Cbc0038I Pass  15: suminf.    1.28714 (7) obj. -31.4848 iterations 3
Cbc0038I Pass  16: suminf.    0.19935 (2) obj. -31.4848 iterations 8
Cbc0038I Pass  17: suminf.    0.48834 (2) obj. -31.4848 iterations 4
Cbc0038I Pass  18: suminf.    0.49194 (1) obj. -31.4848 iterations 2
Cbc0038I Pass  19: suminf.    0.41687 (1) obj. -31.4848 iterations 1
Cbc0038I Pass  20: suminf.    0.86283 (3) obj. -31.4848 iterations 3
Cbc0038I Pass  21: suminf.    0.41687 (1) obj. -31.4848 iterations 5
Cbc0038I Pass  22: suminf.    0.45968 (1) obj. -31.4848 iterations 1
Cbc0038I Pass  23: suminf.    2.54892 (9) obj. -31.4848 iterations 12
Cbc0038I Pass  24: suminf.    2.17760 (7) obj. -31.4848 iterations 4
Cbc0038I Pass  25: suminf.    2.59524 (7) obj. -31.4848 iterations 7
Cbc0038I Pass  26: suminf.    0.62221 (2) obj. -31.4848 iterations 3
Cbc0038I Pass  27: suminf.    0.62221 (2) obj. -31.4848 iterations 0
Cbc0038I Pass  28: suminf.    0.82191 (2) obj. -31.4848 iterations 1
Cbc0038I Pass  29: suminf.    1.40299 (4) obj. -31.4848 iterations 3
Cbc0038I Pass  30: suminf.    1.40299 (4) obj. -31.4848 iterations 0
Cbc0038I Pass  31: suminf.    1.92508 (7) obj. -31.4848 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -25.025 to -25.9626 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.1121
Cbc0038I Pass  31: suminf.    0.67539 (4) obj. -43.1121 iterations 1
Cbc0038I Pass  32: suminf.    0.67539 (4) obj. -43.1121 iterations 0
Cbc0038I Pass  33: suminf.    0.39325 (2) obj. -43.1121 iterations 6
Cbc0038I Pass  34: suminf.    0.78367 (3) obj. -43.1121 iterations 5
Cbc0038I Pass  35: suminf.    0.66425 (3) obj. -43.1121 iterations 4
Cbc0038I Pass  36: suminf.    0.40186 (2) obj. -43.1121 iterations 2
Cbc0038I Pass  37: suminf.    2.97973 (7) obj. -43.1121 iterations 11
Cbc0038I Pass  38: suminf.    2.04441 (10) obj. -43.1121 iterations 9
Cbc0038I Pass  39: suminf.    1.94566 (10) obj. -43.1121 iterations 2
Cbc0038I Pass  40: suminf.    2.00319 (7) obj. -43.1121 iterations 14
Cbc0038I Pass  41: suminf.    1.92426 (13) obj. -43.1121 iterations 4
Cbc0038I Pass  42: suminf.    1.41027 (11) obj. -43.1121 iterations 15
Cbc0038I Pass  43: suminf.    1.19053 (10) obj. -43.1121 iterations 2
Cbc0038I Pass  44: suminf.    1.94659 (12) obj. -43.1121 iterations 12
Cbc0038I Pass  45: suminf.    1.90785 (12) obj. -43.1121 iterations 2
Cbc0038I Pass  46: suminf.    1.19053 (10) obj. -43.1121 iterations 15
Cbc0038I Pass  47: suminf.    3.41621 (11) obj. -43.1121 iterations 10
Cbc0038I Pass  48: suminf.    2.42520 (11) obj. -43.1121 iterations 2
Cbc0038I Pass  49: suminf.    0.44776 (3) obj. -43.1121 iterations 14
Cbc0038I Pass  50: suminf.    0.39325 (2) obj. -43.1121 iterations 2
Cbc0038I Pass  51: suminf.    0.78367 (3) obj. -43.1121 iterations 4
Cbc0038I Pass  52: suminf.    0.66425 (3) obj. -43.1121 iterations 3
Cbc0038I Pass  53: suminf.    0.40186 (2) obj. -43.1121 iterations 2
Cbc0038I Pass  54: suminf.    1.14630 (6) obj. -43.1121 iterations 17
Cbc0038I Pass  55: suminf.    1.09239 (7) obj. -43.1121 iterations 2
Cbc0038I Pass  56: suminf.    0.67300 (3) obj. -43.1121 iterations 11
Cbc0038I Pass  57: suminf.    1.17408 (5) obj. -43.1121 iterations 8
Cbc0038I Pass  58: suminf.    0.89166 (3) obj. -43.1121 iterations 4
Cbc0038I Pass  59: suminf.    4.56072 (11) obj. -43.1121 iterations 12
Cbc0038I Pass  60: suminf.    1.32793 (5) obj. -43.1121 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -25.9626 - took 0.04 seconds
Cbc0012I Integer solution of -25.96265 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 46 rows 25 columns, reduced to 32 rows 19 columns
Cbc0031I 10 added rows had average density of 22.7
Cbc0013I At root node, 10 cuts changed objective from -89.621361 to -46.575249 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 857 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 402 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.96265, took 1582 iterations and 2 nodes (0.22 seconds)
Cbc0032I Strong branching done 24 times (189 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 50 (-11) columns and 408 (-205) elements
Clp1000I sum of infeasibilities 1.81692e-07 - average 3.78524e-09, 7 fixed columns
Coin0506I Presolve 38 (-10) rows, 42 (-8) columns and 290 (-118) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.1983757 - largest nonzero change 2.9114958e-05 ( 0.0025820745%) - largest zero change 1.0338421e-05
Clp0000I Optimal - objective value 105.0503
Clp0000I Optimal - objective value 105.0503
Coin0511I After Postsolve, objective 105.0503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2733186 - largest nonzero change 1.1697007e-05 ( 0.00088996209%) - largest zero change 2.9114958e-05
Clp0000I Optimal - objective value 105.0503
Clp0000I Optimal - objective value 105.0503
Clp0000I Optimal - objective value 105.0503
Coin0511I After Postsolve, objective 105.0503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.0503003 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 50 columns (50 integer (50 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.267%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 9.77088
Cbc0038I Pass   1: suminf.    2.28928 (13) obj. -55.5007 iterations 10
Cbc0038I Pass   2: suminf.    2.28928 (13) obj. -55.5007 iterations 1
Cbc0038I Solution found of -9.96265
Cbc0038I Rounding solution of -11.9876 is better than previous of -9.96265

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11.9876 to -23.9376 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.1263
Cbc0038I Pass   3: suminf.    2.28928 (13) obj. -55.5007 iterations 0
Cbc0038I Pass   4: suminf.    2.28928 (13) obj. -55.5007 iterations 1
Cbc0038I Pass   5: suminf.    0.28619 (4) obj. -29.1263 iterations 16
Cbc0038I Pass   6: suminf.    0.28496 (3) obj. -29.1263 iterations 1
Cbc0038I Pass   7: suminf.    0.29620 (2) obj. -29.1263 iterations 4
Cbc0038I Pass   8: suminf.    0.29620 (2) obj. -29.1263 iterations 0
Cbc0038I Pass   9: suminf.    0.39247 (2) obj. -34.6452 iterations 1
Cbc0038I Pass  10: suminf.    0.31818 (1) obj. -32.1195 iterations 1
Cbc0038I Pass  11: suminf.    0.67378 (4) obj. -29.1263 iterations 7
Cbc0038I Pass  12: suminf.    0.58586 (2) obj. -30.451 iterations 2
Cbc0038I Pass  13: suminf.    0.44085 (3) obj. -29.1263 iterations 5
Cbc0038I Pass  14: suminf.    0.44085 (3) obj. -29.1263 iterations 0
Cbc0038I Pass  15: suminf.    0.25765 (3) obj. -29.1263 iterations 3
Cbc0038I Pass  16: suminf.    0.25765 (3) obj. -29.1263 iterations 1
Cbc0038I Pass  17: suminf.    0.44085 (3) obj. -29.1263 iterations 2
Cbc0038I Pass  18: suminf.    1.36273 (6) obj. -29.1263 iterations 16
Cbc0038I Pass  19: suminf.    1.36273 (6) obj. -29.1263 iterations 1
Cbc0038I Pass  20: suminf.    1.76226 (7) obj. -29.1263 iterations 5
Cbc0038I Pass  21: suminf.    1.76226 (7) obj. -29.1263 iterations 0
Cbc0038I Pass  22: suminf.    1.94156 (9) obj. -29.1263 iterations 3
Cbc0038I Pass  23: suminf.    1.65038 (6) obj. -29.1263 iterations 2
Cbc0038I Pass  24: suminf.    1.33911 (6) obj. -29.1263 iterations 2
Cbc0038I Pass  25: suminf.    1.37785 (5) obj. -29.1263 iterations 8
Cbc0038I Pass  26: suminf.    1.37785 (5) obj. -29.1263 iterations 0
Cbc0038I Pass  27: suminf.    0.97261 (4) obj. -29.1263 iterations 3
Cbc0038I Pass  28: suminf.    0.68652 (5) obj. -29.1263 iterations 2
Cbc0038I Pass  29: suminf.    1.37785 (5) obj. -29.1263 iterations 5
Cbc0038I Pass  30: suminf.    1.35625 (6) obj. -29.1263 iterations 16
Cbc0038I Pass  31: suminf.    1.35625 (6) obj. -29.1263 iterations 2
Cbc0038I Pass  32: suminf.    0.95996 (4) obj. -29.1263 iterations 7
Cbc0038I Rounding solution of -25.9626 is better than previous of -23.9376

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -38.4656
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.28928 (13) obj. -55.5007 iterations 0
Cbc0038I Pass  33: suminf.    2.28928 (13) obj. -55.5007 iterations 1
Cbc0038I Pass  34: suminf.    0.74247 (6) obj. -38.4656 iterations 16
Cbc0038I Pass  35: suminf.    0.73891 (5) obj. -38.4656 iterations 1
Cbc0038I Pass  36: suminf.    0.75261 (3) obj. -38.4656 iterations 3
Cbc0038I Pass  37: suminf.    0.75261 (3) obj. -38.4656 iterations 0
Cbc0038I Pass  38: suminf.    0.82533 (3) obj. -38.4656 iterations 1
Cbc0038I Pass  39: suminf.    0.82533 (3) obj. -38.4656 iterations 0
Cbc0038I Pass  40: suminf.    1.23323 (7) obj. -38.4656 iterations 15
Cbc0038I Pass  41: suminf.    1.11973 (8) obj. -38.4656 iterations 5
Cbc0038I Pass  42: suminf.    1.35582 (6) obj. -38.4656 iterations 8
Cbc0038I Pass  43: suminf.    1.35582 (6) obj. -38.4656 iterations 0
Cbc0038I Pass  44: suminf.    1.50599 (7) obj. -38.4656 iterations 3
Cbc0038I Pass  45: suminf.    1.13445 (6) obj. -38.4656 iterations 4
Cbc0038I Pass  46: suminf.    1.32552 (5) obj. -38.4656 iterations 8
Cbc0038I Pass  47: suminf.    1.32552 (5) obj. -38.4656 iterations 0
Cbc0038I Pass  48: suminf.    1.75039 (6) obj. -38.4656 iterations 4
Cbc0038I Pass  49: suminf.    1.00123 (5) obj. -38.4656 iterations 8
Cbc0038I Pass  50: suminf.    1.03981 (5) obj. -38.4656 iterations 3
Cbc0038I Pass  51: suminf.    1.03981 (5) obj. -38.4656 iterations 0
Cbc0038I Pass  52: suminf.    1.65005 (8) obj. -38.4656 iterations 15
Cbc0038I Pass  53: suminf.    1.38455 (6) obj. -40.2406 iterations 7
Cbc0038I Pass  54: suminf.    0.90916 (5) obj. -38.4656 iterations 10
Cbc0038I Pass  55: suminf.    0.87167 (6) obj. -38.4656 iterations 4
Cbc0038I Pass  56: suminf.    1.32552 (5) obj. -38.4656 iterations 9
Cbc0038I Pass  57: suminf.    1.32552 (5) obj. -38.4656 iterations 1
Cbc0038I Pass  58: suminf.    1.75039 (6) obj. -38.4656 iterations 3
Cbc0038I Pass  59: suminf.    1.00123 (5) obj. -38.4656 iterations 12
Cbc0038I Pass  60: suminf.    1.03981 (5) obj. -38.4656 iterations 5
Cbc0038I Pass  61: suminf.    1.03981 (5) obj. -38.4656 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.9626 - took 0.03 seconds
Cbc0012I Integer solution of -25.96265 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 50 columns, reduced to 18 rows 18 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 12
Cbc0013I At root node, 12 cuts changed objective from -75.823013 to -24.970797 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 242 row cuts average 2.4 elements, 25 column cuts (25 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.96265, took 84 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.14

