Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 500 (-27) rows, 259 (-5) columns and 1487 (-58) elements
Clp1000I sum of infeasibilities 3.10839e-05 - average 6.21679e-08, 143 fixed columns
Coin0506I Presolve 207 (-293) rows, 113 (-146) columns and 618 (-869) elements
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 0.17323407 - largest nonzero change 0 ( 0%) - largest zero change 2.9365872e-05
Clp0000I Optimal - objective value 212.67022
Clp0000I Optimal - objective value 212.67022
Coin0511I After Postsolve, objective 212.67022, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13511577 - largest nonzero change 0 ( 0%) - largest zero change 2.9790845e-05
Clp0000I Optimal - objective value 212.67022
Clp0000I Optimal - objective value 212.67022
Clp0000I Optimal - objective value 212.67022
Coin0511I After Postsolve, objective 212.67022, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 212.6702179 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 500 rows, 259 columns (258 integer (258 of which binary)) and 1487 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 8.24358
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -68.3871 iterations 117
Cbc0038I Solution found of -68.3871
Cbc0038I Relaxing continuous gives -68.3871
Cbc0038I Rounding solution of -131.068 is better than previous of -68.3871

Cbc0038I Before mini branch and bound, 200 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 103 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -131.068 to -134.187 (0.06 seconds)
Cbc0038I Round again with cutoff of -142.035
Cbc0038I Pass   2: suminf.    1.29186 (5) obj. -142.035 iterations 26
Cbc0038I Pass   3: suminf.    1.29186 (5) obj. -142.035 iterations 0
Cbc0038I Pass   4: suminf.    1.85230 (5) obj. -142.035 iterations 21
Cbc0038I Pass   5: suminf.    1.29186 (5) obj. -142.035 iterations 20
Cbc0038I Pass   6: suminf.    3.33062 (12) obj. -142.035 iterations 57
Cbc0038I Pass   7: suminf.    1.84386 (9) obj. -142.035 iterations 34
Cbc0038I Pass   8: suminf.    1.34891 (4) obj. -142.035 iterations 52
Cbc0038I Pass   9: suminf.    0.78490 (3) obj. -142.035 iterations 3
Cbc0038I Pass  10: suminf.    0.58507 (3) obj. -142.035 iterations 4
Cbc0038I Pass  11: suminf.    0.61312 (3) obj. -142.035 iterations 3
Cbc0038I Pass  12: suminf.    0.61312 (3) obj. -142.035 iterations 0
Cbc0038I Pass  13: suminf.    0.65169 (2) obj. -142.035 iterations 4
Cbc0038I Pass  14: suminf.    0.37148 (2) obj. -142.035 iterations 2
Cbc0038I Pass  15: suminf.    0.72992 (3) obj. -142.035 iterations 17
Cbc0038I Pass  16: suminf.    0.08682 (1) obj. -142.035 iterations 6
Cbc0038I Pass  17: suminf.    0.21000 (1) obj. -142.035 iterations 2
Cbc0038I Pass  18: suminf.    2.82673 (11) obj. -142.035 iterations 35
Cbc0038I Pass  19: suminf.    1.27603 (6) obj. -142.035 iterations 51
Cbc0038I Pass  20: suminf.    1.62362 (5) obj. -142.035 iterations 10
Cbc0038I Pass  21: suminf.    1.07489 (4) obj. -142.035 iterations 11
Cbc0038I Pass  22: suminf.    0.22969 (2) obj. -142.035 iterations 5
Cbc0038I Pass  23: suminf.    0.06311 (2) obj. -142.035 iterations 4
Cbc0038I Pass  24: suminf.    2.95165 (11) obj. -142.035 iterations 47
Cbc0038I Pass  25: suminf.    1.28783 (6) obj. -142.035 iterations 49
Cbc0038I Pass  26: suminf.    1.23534 (4) obj. -142.035 iterations 31
Cbc0038I Pass  27: suminf.    0.49865 (3) obj. -142.035 iterations 11
Cbc0038I Pass  28: suminf.    0.78939 (3) obj. -142.035 iterations 4
Cbc0038I Pass  29: suminf.    6.82592 (18) obj. -142.035 iterations 49
Cbc0038I Pass  30: suminf.    3.51954 (16) obj. -142.035 iterations 52
Cbc0038I Pass  31: suminf.    3.33768 (18) obj. -142.035 iterations 7
Cbc0038I Rounding solution of -139.51 is better than previous of -134.187

Cbc0038I Before mini branch and bound, 176 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 145 rows 81 columns
Cbc0038I Mini branch and bound improved solution from -139.51 to -152.026 (0.13 seconds)
Cbc0038I Round again with cutoff of -164.155
Cbc0038I Pass  31: suminf.    1.93089 (8) obj. -164.155 iterations 5
Cbc0038I Pass  32: suminf.    1.10335 (5) obj. -164.155 iterations 64
Cbc0038I Pass  33: suminf.    1.30151 (5) obj. -164.155 iterations 21
Cbc0038I Pass  34: suminf.    3.11180 (11) obj. -164.155 iterations 54
Cbc0038I Pass  35: suminf.    1.53924 (6) obj. -164.155 iterations 43
Cbc0038I Pass  36: suminf.    1.14016 (4) obj. -164.155 iterations 16
Cbc0038I Pass  37: suminf.    1.33867 (7) obj. -164.155 iterations 19
Cbc0038I Pass  38: suminf.    1.10335 (5) obj. -164.155 iterations 19
Cbc0038I Pass  39: suminf.    1.10335 (5) obj. -164.155 iterations 0
Cbc0038I Pass  40: suminf.    1.30151 (5) obj. -164.155 iterations 20
Cbc0038I Pass  41: suminf.    4.42945 (20) obj. -164.155 iterations 66
Cbc0038I Pass  42: suminf.    2.38277 (8) obj. -164.155 iterations 91
Cbc0038I Pass  43: suminf.    0.72437 (4) obj. -164.155 iterations 28
Cbc0038I Pass  44: suminf.    0.89825 (6) obj. -164.155 iterations 23
Cbc0038I Pass  45: suminf.    0.89454 (7) obj. -164.155 iterations 9
Cbc0038I Pass  46: suminf.    2.46575 (9) obj. -164.155 iterations 28
Cbc0038I Pass  47: suminf.    0.94593 (5) obj. -164.155 iterations 27
Cbc0038I Pass  48: suminf.    2.35739 (9) obj. -164.155 iterations 106
Cbc0038I Pass  49: suminf.    1.45418 (9) obj. -164.155 iterations 45
Cbc0038I Pass  50: suminf.    1.71100 (9) obj. -164.155 iterations 28
Cbc0038I Pass  51: suminf.    6.59462 (29) obj. -164.155 iterations 64
Cbc0038I Pass  52: suminf.    2.16205 (10) obj. -164.155 iterations 59
Cbc0038I Pass  53: suminf.    2.16205 (10) obj. -164.155 iterations 0
Cbc0038I Pass  54: suminf.    2.31993 (11) obj. -164.155 iterations 26
Cbc0038I Pass  55: suminf.    2.19386 (10) obj. -164.155 iterations 23
Cbc0038I Pass  56: suminf.    2.56570 (10) obj. -164.155 iterations 27
Cbc0038I Pass  57: suminf.    6.84580 (24) obj. -164.155 iterations 73
Cbc0038I Pass  58: suminf.    3.56988 (16) obj. -164.155 iterations 59
Cbc0038I Pass  59: suminf.    3.17287 (14) obj. -164.155 iterations 10
Cbc0038I Pass  60: suminf.    3.41654 (11) obj. -164.155 iterations 41
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 163 rows 90 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -152.026 - took 0.20 seconds
Cbc0012I Integer solution of -152.02612 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 105 rows 61 columns
Cbc0031I 26 added rows had average density of 121.53846
Cbc0013I At root node, 26 cuts changed objective from -212.67022 to -191.45824 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22209 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.398 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2080 row cuts average 256.6 elements, 0 column cuts (0 active)  in 0.321 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 249.3 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -152.02612 best solution, best possible -191.45824 (3.03 seconds)
Cbc0010I After 36 nodes, 12 on tree, -152.02612 best solution, best possible -191.45824 (3.73 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 103 rows 60 columns
Cbc0038I Full problem 500 rows 259 columns, reduced to 71 rows 45 columns
Cbc0001I Search completed - best objective -152.02612, took 18194 iterations and 174 nodes (4.36 seconds)
Cbc0032I Strong branching done 1864 times (46462 iterations), fathomed 16 nodes and fixed 21 variables
Cbc0035I Maximum depth 64, 878 variables fixed on reduced cost
Total time (CPU seconds):       4.29   (Wallclock seconds):       4.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 394 (-132) rows, 410 (-114) columns and 21028 (-14708) elements
Clp1000I sum of infeasibilities 4.66242e-05 - average 1.18335e-07, 247 fixed columns
Coin0506I Presolve 141 (-253) rows, 153 (-257) columns and 566 (-20462) elements
Clp0006I 0  Obj 29.147242 Primal inf 5.3200246e-06 (6) Dual inf 6.0000102e+09 (150)
Clp0029I End of values pass after 97 iterations
Clp0014I Perturbing problem by 0.001% of 0.15118774 - largest nonzero change 2.7226084e-05 ( 0.0024750985%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 40.003187
Clp0000I Optimal - objective value 40.003187
Coin0511I After Postsolve, objective 40.003187, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 40.003187 Dual inf 238.34412 (154)
Clp0014I Perturbing problem by 0.001% of 1.8338038 - largest nonzero change 1.8558272e-05 ( 0.0014083952%) - largest zero change 2.9961148e-05
Clp0000I Optimal - objective value 277.84908
Clp0000I Optimal - objective value 277.84908
Clp0000I Optimal - objective value 277.84908
Coin0511I After Postsolve, objective 277.84908, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 277.8490845 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0004I processed model has 395 rows, 411 columns (411 integer (411 of which binary)) and 21031 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.078%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 144 integers unsatisfied sum - 4.83642
Cbc0038I Pass   1: suminf.    2.87273 (123) obj. -259.881 iterations 55
Cbc0038I Pass   2: suminf.    2.87273 (123) obj. -259.881 iterations 1
Cbc0038I Pass   3: suminf.    2.22389 (105) obj. -213.692 iterations 18
Cbc0038I Pass   4: suminf.    1.80477 (89) obj. -183.502 iterations 16
Cbc0038I Pass   5: suminf.    1.20486 (64) obj. -150.319 iterations 25
Cbc0038I Pass   6: suminf.    0.84638 (48) obj. -128.812 iterations 16
Cbc0038I Pass   7: suminf.    0.57536 (35) obj. -114.125 iterations 13
Cbc0038I Pass   8: suminf.    0.34894 (23) obj. -101.371 iterations 12
Cbc0038I Solution found of -71.8322
Cbc0038I Rounding solution of -75.8683 is better than previous of -71.8322

Cbc0038I Before mini branch and bound, 266 integers at bound fixed and 0 continuous
Cbc0038I Full problem 395 rows 411 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -96.0546
Cbc0038I Pass   9: suminf.    2.87273 (123) obj. -259.881 iterations 0
Cbc0038I Pass  10: suminf.    2.87273 (123) obj. -259.881 iterations 1
Cbc0038I Pass  11: suminf.    2.25305 (106) obj. -214.663 iterations 17
Cbc0038I Pass  12: suminf.    1.98546 (96) obj. -201.037 iterations 10
Cbc0038I Pass  13: suminf.    1.67947 (84) obj. -177.652 iterations 12
Cbc0038I Pass  14: suminf.    1.43719 (74) obj. -162.041 iterations 10
Cbc0038I Pass  15: suminf.    1.15910 (62) obj. -148.365 iterations 12
Cbc0038I Pass  16: suminf.    0.59556 (36) obj. -115.105 iterations 26
Cbc0038I Pass  17: suminf.    0.40263 (17) obj. -96.0546 iterations 27
Cbc0038I Pass  18: suminf.    1.06998 (9) obj. -96.0546 iterations 20
Cbc0038I Pass  19: suminf.    0.83416 (10) obj. -96.0546 iterations 20
Cbc0038I Pass  20: suminf.    0.73412 (4) obj. -96.0546 iterations 24
Cbc0038I Pass  21: suminf.    0.73412 (4) obj. -96.0546 iterations 13
Cbc0038I Pass  22: suminf.    0.76973 (4) obj. -96.0546 iterations 12
Cbc0038I Pass  23: suminf.    0.76973 (4) obj. -96.0546 iterations 9
Cbc0038I Pass  24: suminf.    1.50190 (31) obj. -104.521 iterations 100
Cbc0038I Pass  25: suminf.    0.79071 (29) obj. -96.0546 iterations 36
Cbc0038I Pass  26: suminf.    1.10387 (17) obj. -96.0546 iterations 29
Cbc0038I Pass  27: suminf.    1.10387 (17) obj. -96.0546 iterations 0
Cbc0038I Pass  28: suminf.    1.56719 (10) obj. -96.0546 iterations 27
Cbc0038I Pass  29: suminf.    0.76645 (9) obj. -104.631 iterations 14
Cbc0038I Pass  30: suminf.    0.51514 (7) obj. -97.6421 iterations 2
Cbc0038I Pass  31: suminf.    0.85955 (5) obj. -96.0546 iterations 16
Cbc0038I Pass  32: suminf.    0.44207 (4) obj. -96.0546 iterations 4
Cbc0038I Pass  33: suminf.    0.60464 (4) obj. -96.0546 iterations 7
Cbc0038I Pass  34: suminf.    2.38930 (34) obj. -96.0546 iterations 76
Cbc0038I Pass  35: suminf.    1.81028 (32) obj. -96.0546 iterations 17
Cbc0038I Pass  36: suminf.    1.77534 (32) obj. -96.0546 iterations 9
Cbc0038I Pass  37: suminf.    1.33308 (20) obj. -96.0546 iterations 61
Cbc0038I Pass  38: suminf.    0.89630 (18) obj. -96.0546 iterations 11
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 395 rows 411 columns, reduced to 153 rows 165 columns - 39 fixed gives 114, 125 - still too large
Cbc0038I Full problem 395 rows 411 columns, reduced to 43 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -75.8683 to -77.7993 (0.23 seconds)
Cbc0038I Round again with cutoff of -132.39
Cbc0038I Pass  38: suminf.    2.87273 (123) obj. -259.881 iterations 0
Cbc0038I Pass  39: suminf.    2.87273 (123) obj. -259.881 iterations 1
Cbc0038I Pass  40: suminf.    2.17048 (103) obj. -209.799 iterations 20
Cbc0038I Pass  41: suminf.    1.77939 (88) obj. -182.528 iterations 15
Cbc0038I Pass  42: suminf.    1.11355 (60) obj. -145.433 iterations 28
Cbc0038I Pass  43: suminf.    1.04743 (43) obj. -132.39 iterations 24
Cbc0038I Pass  44: suminf.    1.21066 (28) obj. -132.39 iterations 52
Cbc0038I Pass  45: suminf.    0.96945 (30) obj. -132.39 iterations 34
Cbc0038I Pass  46: suminf.    1.22771 (23) obj. -132.39 iterations 25
Cbc0038I Pass  47: suminf.    0.80480 (21) obj. -132.39 iterations 17
Cbc0038I Pass  48: suminf.    1.48393 (32) obj. -132.39 iterations 51
Cbc0038I Pass  49: suminf.    1.28918 (33) obj. -132.39 iterations 26
Cbc0038I Pass  50: suminf.    1.28025 (28) obj. -132.39 iterations 38
Cbc0038I Pass  51: suminf.    1.03322 (30) obj. -132.39 iterations 16
Cbc0038I Pass  52: suminf.    1.12607 (27) obj. -132.39 iterations 45
Cbc0038I Pass  53: suminf.    1.10572 (28) obj. -132.39 iterations 4
Cbc0038I Pass  54: suminf.    1.10095 (27) obj. -132.39 iterations 6
Cbc0038I Pass  55: suminf.    1.08060 (28) obj. -132.39 iterations 4
Cbc0038I Pass  56: suminf.    1.07860 (27) obj. -132.39 iterations 4
Cbc0038I Pass  57: suminf.    1.05504 (28) obj. -132.39 iterations 3
Cbc0038I Pass  58: suminf.    1.08060 (28) obj. -132.39 iterations 18
Cbc0038I Pass  59: suminf.    0.89312 (38) obj. -132.39 iterations 94
Cbc0038I Pass  60: suminf.    0.67235 (30) obj. -132.39 iterations 28
Cbc0038I Pass  61: suminf.    1.87234 (36) obj. -132.39 iterations 55
Cbc0038I Pass  62: suminf.    1.48714 (35) obj. -132.39 iterations 42
Cbc0038I Pass  63: suminf.    2.29474 (34) obj. -132.39 iterations 64
Cbc0038I Pass  64: suminf.    1.56641 (35) obj. -132.39 iterations 6
Cbc0038I Pass  65: suminf.    2.90569 (31) obj. -132.39 iterations 27
Cbc0038I Pass  66: suminf.    1.95539 (31) obj. -132.39 iterations 13
Cbc0038I Pass  67: suminf.    1.96198 (27) obj. -132.39 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 395 rows 411 columns, reduced to 113 rows 123 columns
Cbc0038I Mini branch and bound improved solution from -77.7993 to -114.486 (0.34 seconds)
Cbc0038I Round again with cutoff of -175.992
Cbc0038I Pass  67: suminf.    2.87273 (123) obj. -259.881 iterations 0
Cbc0038I Pass  68: suminf.    2.87273 (123) obj. -259.881 iterations 1
Cbc0038I Pass  69: suminf.    2.43717 (112) obj. -230.173 iterations 11
Cbc0038I Pass  70: suminf.    1.93347 (94) obj. -196.167 iterations 18
Cbc0038I Pass  71: suminf.    1.74414 (81) obj. -175.992 iterations 18
Cbc0038I Pass  72: suminf.    1.88322 (65) obj. -175.992 iterations 44
Cbc0038I Pass  73: suminf.    1.72617 (66) obj. -175.992 iterations 32
Cbc0038I Pass  74: suminf.    1.70260 (63) obj. -175.992 iterations 22
Cbc0038I Pass  75: suminf.    1.70260 (63) obj. -175.992 iterations 16
Cbc0038I Pass  76: suminf.    1.95025 (60) obj. -175.992 iterations 40
Cbc0038I Pass  77: suminf.    1.91036 (63) obj. -175.992 iterations 22
Cbc0038I Pass  78: suminf.    2.07781 (60) obj. -175.992 iterations 31
Cbc0038I Pass  79: suminf.    1.53380 (58) obj. -175.992 iterations 17
Cbc0038I Pass  80: suminf.    1.99784 (64) obj. -175.992 iterations 62
Cbc0038I Pass  81: suminf.    1.95198 (63) obj. -175.992 iterations 26
Cbc0038I Pass  82: suminf.    1.88481 (60) obj. -175.992 iterations 52
Cbc0038I Pass  83: suminf.    1.88481 (60) obj. -175.992 iterations 7
Cbc0038I Pass  84: suminf.    1.85307 (59) obj. -175.992 iterations 22
Cbc0038I Pass  85: suminf.    1.85307 (59) obj. -175.992 iterations 17
Cbc0038I Pass  86: suminf.    2.26495 (58) obj. -175.992 iterations 22
Cbc0038I Pass  87: suminf.    1.79587 (58) obj. -175.992 iterations 31
Cbc0038I Pass  88: suminf.    1.79893 (55) obj. -175.992 iterations 39
Cbc0038I Pass  89: suminf.    1.79378 (56) obj. -175.992 iterations 6
Cbc0038I Pass  90: suminf.    1.78893 (55) obj. -175.992 iterations 18
Cbc0038I Pass  91: suminf.    1.78319 (56) obj. -175.992 iterations 5
Cbc0038I Pass  92: suminf.    1.79483 (55) obj. -175.992 iterations 25
Cbc0038I Pass  93: suminf.    1.78968 (56) obj. -175.992 iterations 6
Cbc0038I Pass  94: suminf.    1.79893 (55) obj. -175.992 iterations 20
Cbc0038I Pass  95: suminf.    1.79378 (56) obj. -175.992 iterations 6
Cbc0038I Pass  96: suminf.    1.78893 (55) obj. -175.992 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 395 rows 411 columns, reduced to 86 rows 91 columns
Cbc0038I Mini branch and bound did not improve solution (0.44 seconds)
Cbc0038I After 0.44 seconds - Feasibility pump exiting with objective of -114.486 - took 0.33 seconds
Cbc0012I Integer solution of -114.48642 found by feasibility pump after 0 iterations and 0 nodes (0.44 seconds)
Cbc0038I Full problem 395 rows 411 columns, reduced to 80 rows 84 columns
Cbc0031I 173 added rows had average density of 56.248555
Cbc0013I At root node, 173 cuts changed objective from -277.73033 to -172.42511 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34471 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.624 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3157 row cuts average 374.7 elements, 0 column cuts (0 active)  in 1.470 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 751 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6954 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.293 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.060 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1630 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.913 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 220.6 elements, 0 column cuts (0 active)  in 0.294 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 156 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.653 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -114.48642 best solution, best possible -172.42511 (9.74 seconds)
Cbc0012I Integer solution of -147.18964 found by rounding after 11273 iterations and 1 nodes (9.78 seconds)
Cbc0012I Integer solution of -147.49762 found by DiveCoefficient after 11273 iterations and 1 nodes (9.79 seconds)
Cbc0010I After 7 nodes, 2 on tree, -147.49762 best solution, best possible -172.00562 (10.73 seconds)
Cbc0012I Integer solution of -152.02612 found by DiveCoefficient after 12281 iterations and 8 nodes (10.79 seconds)
Cbc0010I After 21 nodes, 2 on tree, -152.02612 best solution, best possible -172.00562 (11.51 seconds)
Cbc0010I After 29 nodes, 2 on tree, -152.02612 best solution, best possible -172.00562 (12.33 seconds)
Cbc0038I Full problem 395 rows 411 columns, reduced to 61 rows 66 columns
Cbc0010I After 47 nodes, 2 on tree, -152.02612 best solution, best possible -172.00562 (13.20 seconds)
Cbc0010I After 62 nodes, 3 on tree, -152.02612 best solution, best possible -172.00562 (14.01 seconds)
Cbc0010I After 65 nodes, 4 on tree, -152.02612 best solution, best possible -172.00562 (14.85 seconds)
Cbc0010I After 79 nodes, 3 on tree, -152.02612 best solution, best possible -172.00562 (15.66 seconds)
Cbc0001I Search completed - best objective -152.02612, took 19694 iterations and 90 nodes (15.95 seconds)
Cbc0032I Strong branching done 1056 times (29692 iterations), fathomed 4 nodes and fixed 9 variables
Cbc0035I Maximum depth 14, 593 variables fixed on reduced cost
Total time (CPU seconds):       15.66   (Wallclock seconds):       16.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 500 (-27) rows, 259 (-5) columns and 1487 (-58) elements
Clp1000I sum of infeasibilities 3.10839e-05 - average 6.21679e-08, 143 fixed columns
Coin0506I Presolve 207 (-293) rows, 113 (-146) columns and 618 (-869) elements
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 0.17323407 - largest nonzero change 0 ( 0%) - largest zero change 2.9365872e-05
Clp0000I Optimal - objective value 212.67022
Clp0000I Optimal - objective value 212.67022
Coin0511I After Postsolve, objective 212.67022, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13511577 - largest nonzero change 0 ( 0%) - largest zero change 2.9790845e-05
Clp0000I Optimal - objective value 212.67022
Clp0000I Optimal - objective value 212.67022
Clp0000I Optimal - objective value 212.67022
Coin0511I After Postsolve, objective 212.67022, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 212.6702179 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 500 rows, 259 columns (258 integer (258 of which binary)) and 1487 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 8.24358
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -68.3871 iterations 117
Cbc0038I Solution found of -68.3871
Cbc0038I Relaxing continuous gives -68.3871
Cbc0038I Rounding solution of -131.068 is better than previous of -68.3871

Cbc0038I Before mini branch and bound, 200 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 103 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -131.068 to -134.187 (0.06 seconds)
Cbc0038I Round again with cutoff of -142.035
Cbc0038I Pass   2: suminf.    1.29186 (5) obj. -142.035 iterations 26
Cbc0038I Pass   3: suminf.    1.29186 (5) obj. -142.035 iterations 0
Cbc0038I Pass   4: suminf.    1.85230 (5) obj. -142.035 iterations 21
Cbc0038I Pass   5: suminf.    1.29186 (5) obj. -142.035 iterations 20
Cbc0038I Pass   6: suminf.    3.33062 (12) obj. -142.035 iterations 57
Cbc0038I Pass   7: suminf.    1.84386 (9) obj. -142.035 iterations 34
Cbc0038I Pass   8: suminf.    1.34891 (4) obj. -142.035 iterations 52
Cbc0038I Pass   9: suminf.    0.78490 (3) obj. -142.035 iterations 3
Cbc0038I Pass  10: suminf.    0.58507 (3) obj. -142.035 iterations 4
Cbc0038I Pass  11: suminf.    0.61312 (3) obj. -142.035 iterations 3
Cbc0038I Pass  12: suminf.    0.61312 (3) obj. -142.035 iterations 0
Cbc0038I Pass  13: suminf.    0.65169 (2) obj. -142.035 iterations 4
Cbc0038I Pass  14: suminf.    0.37148 (2) obj. -142.035 iterations 2
Cbc0038I Pass  15: suminf.    0.72992 (3) obj. -142.035 iterations 17
Cbc0038I Pass  16: suminf.    0.08682 (1) obj. -142.035 iterations 6
Cbc0038I Pass  17: suminf.    0.21000 (1) obj. -142.035 iterations 2
Cbc0038I Pass  18: suminf.    2.82673 (11) obj. -142.035 iterations 35
Cbc0038I Pass  19: suminf.    1.27603 (6) obj. -142.035 iterations 51
Cbc0038I Pass  20: suminf.    1.62362 (5) obj. -142.035 iterations 10
Cbc0038I Pass  21: suminf.    1.07489 (4) obj. -142.035 iterations 11
Cbc0038I Pass  22: suminf.    0.22969 (2) obj. -142.035 iterations 5
Cbc0038I Pass  23: suminf.    0.06311 (2) obj. -142.035 iterations 4
Cbc0038I Pass  24: suminf.    2.95165 (11) obj. -142.035 iterations 47
Cbc0038I Pass  25: suminf.    1.28783 (6) obj. -142.035 iterations 49
Cbc0038I Pass  26: suminf.    1.23534 (4) obj. -142.035 iterations 31
Cbc0038I Pass  27: suminf.    0.49865 (3) obj. -142.035 iterations 11
Cbc0038I Pass  28: suminf.    0.78939 (3) obj. -142.035 iterations 4
Cbc0038I Pass  29: suminf.    6.82592 (18) obj. -142.035 iterations 49
Cbc0038I Pass  30: suminf.    3.51954 (16) obj. -142.035 iterations 52
Cbc0038I Pass  31: suminf.    3.33768 (18) obj. -142.035 iterations 7
Cbc0038I Rounding solution of -139.51 is better than previous of -134.187

Cbc0038I Before mini branch and bound, 176 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 145 rows 81 columns
Cbc0038I Mini branch and bound improved solution from -139.51 to -152.026 (0.14 seconds)
Cbc0038I Round again with cutoff of -164.155
Cbc0038I Pass  31: suminf.    1.93089 (8) obj. -164.155 iterations 5
Cbc0038I Pass  32: suminf.    1.10335 (5) obj. -164.155 iterations 64
Cbc0038I Pass  33: suminf.    1.30151 (5) obj. -164.155 iterations 21
Cbc0038I Pass  34: suminf.    3.11180 (11) obj. -164.155 iterations 54
Cbc0038I Pass  35: suminf.    1.53924 (6) obj. -164.155 iterations 43
Cbc0038I Pass  36: suminf.    1.14016 (4) obj. -164.155 iterations 16
Cbc0038I Pass  37: suminf.    1.33867 (7) obj. -164.155 iterations 19
Cbc0038I Pass  38: suminf.    1.10335 (5) obj. -164.155 iterations 19
Cbc0038I Pass  39: suminf.    1.10335 (5) obj. -164.155 iterations 0
Cbc0038I Pass  40: suminf.    1.30151 (5) obj. -164.155 iterations 20
Cbc0038I Pass  41: suminf.    4.42945 (20) obj. -164.155 iterations 66
Cbc0038I Pass  42: suminf.    2.38277 (8) obj. -164.155 iterations 91
Cbc0038I Pass  43: suminf.    0.72437 (4) obj. -164.155 iterations 28
Cbc0038I Pass  44: suminf.    0.89825 (6) obj. -164.155 iterations 23
Cbc0038I Pass  45: suminf.    0.89454 (7) obj. -164.155 iterations 9
Cbc0038I Pass  46: suminf.    2.46575 (9) obj. -164.155 iterations 28
Cbc0038I Pass  47: suminf.    0.94593 (5) obj. -164.155 iterations 27
Cbc0038I Pass  48: suminf.    2.35739 (9) obj. -164.155 iterations 106
Cbc0038I Pass  49: suminf.    1.45418 (9) obj. -164.155 iterations 45
Cbc0038I Pass  50: suminf.    1.71100 (9) obj. -164.155 iterations 28
Cbc0038I Pass  51: suminf.    6.59462 (29) obj. -164.155 iterations 64
Cbc0038I Pass  52: suminf.    2.16205 (10) obj. -164.155 iterations 59
Cbc0038I Pass  53: suminf.    2.16205 (10) obj. -164.155 iterations 0
Cbc0038I Pass  54: suminf.    2.31993 (11) obj. -164.155 iterations 26
Cbc0038I Pass  55: suminf.    2.19386 (10) obj. -164.155 iterations 23
Cbc0038I Pass  56: suminf.    2.56570 (10) obj. -164.155 iterations 27
Cbc0038I Pass  57: suminf.    6.84580 (24) obj. -164.155 iterations 73
Cbc0038I Pass  58: suminf.    3.56988 (16) obj. -164.155 iterations 59
Cbc0038I Pass  59: suminf.    3.17287 (14) obj. -164.155 iterations 10
Cbc0038I Pass  60: suminf.    3.41654 (11) obj. -164.155 iterations 41
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 163 rows 90 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -152.026 - took 0.20 seconds
Cbc0012I Integer solution of -152.02612 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 105 rows 61 columns
Cbc0031I 26 added rows had average density of 121.53846
Cbc0013I At root node, 26 cuts changed objective from -212.67022 to -191.45824 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22209 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.418 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2080 row cuts average 256.6 elements, 0 column cuts (0 active)  in 0.342 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.293 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 249.3 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -152.02612 best solution, best possible -191.45824 (3.18 seconds)
Cbc0010I After 35 nodes, 11 on tree, -152.02612 best solution, best possible -191.45824 (3.88 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 103 rows 60 columns
Cbc0038I Full problem 500 rows 259 columns, reduced to 71 rows 45 columns
Cbc0001I Search completed - best objective -152.02612, took 18194 iterations and 174 nodes (4.56 seconds)
Cbc0032I Strong branching done 1864 times (46462 iterations), fathomed 16 nodes and fixed 21 variables
Cbc0035I Maximum depth 64, 878 variables fixed on reduced cost
Total time (CPU seconds):       4.49   (Wallclock seconds):       4.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 394 (-133) rows, 410 (-115) columns and 21028 (-14709) elements
Clp1000I sum of infeasibilities 4.66242e-05 - average 1.18335e-07, 247 fixed columns
Coin0506I Presolve 141 (-253) rows, 153 (-257) columns and 566 (-20462) elements
Clp0006I 0  Obj 29.147242 Primal inf 5.3200246e-06 (6) Dual inf 6.0000102e+09 (150)
Clp0029I End of values pass after 97 iterations
Clp0014I Perturbing problem by 0.001% of 0.15118774 - largest nonzero change 2.7226084e-05 ( 0.0024750985%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 40.003187
Clp0000I Optimal - objective value 40.003187
Coin0511I After Postsolve, objective 40.003187, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 40.003187 Dual inf 238.34412 (154)
Clp0014I Perturbing problem by 0.001% of 1.8338038 - largest nonzero change 1.8558272e-05 ( 0.0014083952%) - largest zero change 2.9961148e-05
Clp0000I Optimal - objective value 277.84908
Clp0000I Optimal - objective value 277.84908
Clp0000I Optimal - objective value 277.84908
Coin0511I After Postsolve, objective 277.84908, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 277.8490845 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 395 rows, 411 columns (411 integer (411 of which binary)) and 21031 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.078%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 144 integers unsatisfied sum - 4.83642
Cbc0038I Pass   1: suminf.    2.87273 (123) obj. -259.881 iterations 55
Cbc0038I Pass   2: suminf.    2.87273 (123) obj. -259.881 iterations 1
Cbc0038I Pass   3: suminf.    2.22389 (105) obj. -213.692 iterations 18
Cbc0038I Pass   4: suminf.    1.80477 (89) obj. -183.502 iterations 16
Cbc0038I Pass   5: suminf.    1.20486 (64) obj. -150.319 iterations 25
Cbc0038I Pass   6: suminf.    0.84638 (48) obj. -128.812 iterations 16
Cbc0038I Pass   7: suminf.    0.57536 (35) obj. -114.125 iterations 13
Cbc0038I Pass   8: suminf.    0.34894 (23) obj. -101.371 iterations 12
Cbc0038I Solution found of -71.8322
Cbc0038I Rounding solution of -75.8683 is better than previous of -71.8322

Cbc0038I Before mini branch and bound, 266 integers at bound fixed and 0 continuous
Cbc0038I Full problem 395 rows 411 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -96.0546
Cbc0038I Pass   9: suminf.    2.87273 (123) obj. -259.881 iterations 0
Cbc0038I Pass  10: suminf.    2.87273 (123) obj. -259.881 iterations 1
Cbc0038I Pass  11: suminf.    2.25305 (106) obj. -214.663 iterations 17
Cbc0038I Pass  12: suminf.    1.98546 (96) obj. -201.037 iterations 10
Cbc0038I Pass  13: suminf.    1.67947 (84) obj. -177.652 iterations 12
Cbc0038I Pass  14: suminf.    1.43719 (74) obj. -162.041 iterations 10
Cbc0038I Pass  15: suminf.    1.15910 (62) obj. -148.365 iterations 12
Cbc0038I Pass  16: suminf.    0.59556 (36) obj. -115.105 iterations 26
Cbc0038I Pass  17: suminf.    0.40263 (17) obj. -96.0546 iterations 27
Cbc0038I Pass  18: suminf.    1.06998 (9) obj. -96.0546 iterations 20
Cbc0038I Pass  19: suminf.    0.83416 (10) obj. -96.0546 iterations 20
Cbc0038I Pass  20: suminf.    0.73412 (4) obj. -96.0546 iterations 24
Cbc0038I Pass  21: suminf.    0.73412 (4) obj. -96.0546 iterations 13
Cbc0038I Pass  22: suminf.    0.76973 (4) obj. -96.0546 iterations 12
Cbc0038I Pass  23: suminf.    0.76973 (4) obj. -96.0546 iterations 9
Cbc0038I Pass  24: suminf.    1.50190 (31) obj. -104.521 iterations 100
Cbc0038I Pass  25: suminf.    0.79071 (29) obj. -96.0546 iterations 36
Cbc0038I Pass  26: suminf.    1.10387 (17) obj. -96.0546 iterations 29
Cbc0038I Pass  27: suminf.    1.10387 (17) obj. -96.0546 iterations 0
Cbc0038I Pass  28: suminf.    1.56719 (10) obj. -96.0546 iterations 27
Cbc0038I Pass  29: suminf.    0.76645 (9) obj. -104.631 iterations 14
Cbc0038I Pass  30: suminf.    0.51514 (7) obj. -97.6421 iterations 2
Cbc0038I Pass  31: suminf.    0.85955 (5) obj. -96.0546 iterations 16
Cbc0038I Pass  32: suminf.    0.44207 (4) obj. -96.0546 iterations 4
Cbc0038I Pass  33: suminf.    0.60464 (4) obj. -96.0546 iterations 7
Cbc0038I Pass  34: suminf.    2.38930 (34) obj. -96.0546 iterations 76
Cbc0038I Pass  35: suminf.    1.81028 (32) obj. -96.0546 iterations 17
Cbc0038I Pass  36: suminf.    1.77534 (32) obj. -96.0546 iterations 9
Cbc0038I Pass  37: suminf.    1.33308 (20) obj. -96.0546 iterations 61
Cbc0038I Pass  38: suminf.    0.89630 (18) obj. -96.0546 iterations 11
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 395 rows 411 columns, reduced to 153 rows 165 columns - 39 fixed gives 114, 125 - still too large
Cbc0038I Full problem 395 rows 411 columns, reduced to 43 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -75.8683 to -77.7993 (0.24 seconds)
Cbc0038I Round again with cutoff of -132.39
Cbc0038I Pass  38: suminf.    2.87273 (123) obj. -259.881 iterations 0
Cbc0038I Pass  39: suminf.    2.87273 (123) obj. -259.881 iterations 1
Cbc0038I Pass  40: suminf.    2.17048 (103) obj. -209.799 iterations 20
Cbc0038I Pass  41: suminf.    1.77939 (88) obj. -182.528 iterations 15
Cbc0038I Pass  42: suminf.    1.11355 (60) obj. -145.433 iterations 28
Cbc0038I Pass  43: suminf.    1.04743 (43) obj. -132.39 iterations 24
Cbc0038I Pass  44: suminf.    1.21066 (28) obj. -132.39 iterations 52
Cbc0038I Pass  45: suminf.    0.96945 (30) obj. -132.39 iterations 34
Cbc0038I Pass  46: suminf.    1.22771 (23) obj. -132.39 iterations 25
Cbc0038I Pass  47: suminf.    0.80480 (21) obj. -132.39 iterations 17
Cbc0038I Pass  48: suminf.    1.48393 (32) obj. -132.39 iterations 51
Cbc0038I Pass  49: suminf.    1.28918 (33) obj. -132.39 iterations 26
Cbc0038I Pass  50: suminf.    1.28025 (28) obj. -132.39 iterations 38
Cbc0038I Pass  51: suminf.    1.03322 (30) obj. -132.39 iterations 16
Cbc0038I Pass  52: suminf.    1.12607 (27) obj. -132.39 iterations 45
Cbc0038I Pass  53: suminf.    1.10572 (28) obj. -132.39 iterations 4
Cbc0038I Pass  54: suminf.    1.10095 (27) obj. -132.39 iterations 6
Cbc0038I Pass  55: suminf.    1.08060 (28) obj. -132.39 iterations 4
Cbc0038I Pass  56: suminf.    1.07860 (27) obj. -132.39 iterations 4
Cbc0038I Pass  57: suminf.    1.05504 (28) obj. -132.39 iterations 3
Cbc0038I Pass  58: suminf.    1.08060 (28) obj. -132.39 iterations 18
Cbc0038I Pass  59: suminf.    0.89312 (38) obj. -132.39 iterations 94
Cbc0038I Pass  60: suminf.    0.67235 (30) obj. -132.39 iterations 28
Cbc0038I Pass  61: suminf.    1.87234 (36) obj. -132.39 iterations 55
Cbc0038I Pass  62: suminf.    1.48714 (35) obj. -132.39 iterations 42
Cbc0038I Pass  63: suminf.    2.29474 (34) obj. -132.39 iterations 64
Cbc0038I Pass  64: suminf.    1.56641 (35) obj. -132.39 iterations 6
Cbc0038I Pass  65: suminf.    2.90569 (31) obj. -132.39 iterations 27
Cbc0038I Pass  66: suminf.    1.95539 (31) obj. -132.39 iterations 13
Cbc0038I Pass  67: suminf.    1.96198 (27) obj. -132.39 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 395 rows 411 columns, reduced to 113 rows 123 columns
Cbc0038I Mini branch and bound improved solution from -77.7993 to -114.486 (0.34 seconds)
Cbc0038I Round again with cutoff of -175.992
Cbc0038I Pass  67: suminf.    2.87273 (123) obj. -259.881 iterations 0
Cbc0038I Pass  68: suminf.    2.87273 (123) obj. -259.881 iterations 1
Cbc0038I Pass  69: suminf.    2.43717 (112) obj. -230.173 iterations 11
Cbc0038I Pass  70: suminf.    1.93347 (94) obj. -196.167 iterations 18
Cbc0038I Pass  71: suminf.    1.74414 (81) obj. -175.992 iterations 18
Cbc0038I Pass  72: suminf.    1.88322 (65) obj. -175.992 iterations 44
Cbc0038I Pass  73: suminf.    1.72617 (66) obj. -175.992 iterations 32
Cbc0038I Pass  74: suminf.    1.70260 (63) obj. -175.992 iterations 22
Cbc0038I Pass  75: suminf.    1.70260 (63) obj. -175.992 iterations 16
Cbc0038I Pass  76: suminf.    1.95025 (60) obj. -175.992 iterations 40
Cbc0038I Pass  77: suminf.    1.91036 (63) obj. -175.992 iterations 22
Cbc0038I Pass  78: suminf.    2.07781 (60) obj. -175.992 iterations 31
Cbc0038I Pass  79: suminf.    1.53380 (58) obj. -175.992 iterations 17
Cbc0038I Pass  80: suminf.    1.99784 (64) obj. -175.992 iterations 62
Cbc0038I Pass  81: suminf.    1.95198 (63) obj. -175.992 iterations 26
Cbc0038I Pass  82: suminf.    1.88481 (60) obj. -175.992 iterations 52
Cbc0038I Pass  83: suminf.    1.88481 (60) obj. -175.992 iterations 7
Cbc0038I Pass  84: suminf.    1.85307 (59) obj. -175.992 iterations 22
Cbc0038I Pass  85: suminf.    1.85307 (59) obj. -175.992 iterations 17
Cbc0038I Pass  86: suminf.    2.26495 (58) obj. -175.992 iterations 22
Cbc0038I Pass  87: suminf.    1.79587 (58) obj. -175.992 iterations 31
Cbc0038I Pass  88: suminf.    1.79893 (55) obj. -175.992 iterations 39
Cbc0038I Pass  89: suminf.    1.79378 (56) obj. -175.992 iterations 6
Cbc0038I Pass  90: suminf.    1.78893 (55) obj. -175.992 iterations 18
Cbc0038I Pass  91: suminf.    1.78319 (56) obj. -175.992 iterations 5
Cbc0038I Pass  92: suminf.    1.79483 (55) obj. -175.992 iterations 25
Cbc0038I Pass  93: suminf.    1.78968 (56) obj. -175.992 iterations 6
Cbc0038I Pass  94: suminf.    1.79893 (55) obj. -175.992 iterations 20
Cbc0038I Pass  95: suminf.    1.79378 (56) obj. -175.992 iterations 6
Cbc0038I Pass  96: suminf.    1.78893 (55) obj. -175.992 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 395 rows 411 columns, reduced to 86 rows 91 columns
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of -114.486 - took 0.32 seconds
Cbc0012I Integer solution of -114.48642 found by feasibility pump after 0 iterations and 0 nodes (0.43 seconds)
Cbc0038I Full problem 395 rows 411 columns, reduced to 80 rows 84 columns
Cbc0031I 173 added rows had average density of 56.248555
Cbc0013I At root node, 173 cuts changed objective from -277.73033 to -172.42511 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34471 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.623 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3157 row cuts average 374.7 elements, 0 column cuts (0 active)  in 1.475 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 751 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6954 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.295 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.066 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1630 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.911 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 220.6 elements, 0 column cuts (0 active)  in 0.297 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 156 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.655 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -114.48642 best solution, best possible -172.42511 (9.78 seconds)
Cbc0012I Integer solution of -147.18964 found by rounding after 11273 iterations and 1 nodes (9.82 seconds)
Cbc0012I Integer solution of -147.49762 found by DiveCoefficient after 11273 iterations and 1 nodes (9.83 seconds)
Cbc0010I After 7 nodes, 2 on tree, -147.49762 best solution, best possible -172.00562 (10.77 seconds)
Cbc0012I Integer solution of -152.02612 found by DiveCoefficient after 12281 iterations and 8 nodes (10.83 seconds)
Cbc0010I After 21 nodes, 2 on tree, -152.02612 best solution, best possible -172.00562 (11.56 seconds)
Cbc0010I After 29 nodes, 2 on tree, -152.02612 best solution, best possible -172.00562 (12.36 seconds)
Cbc0038I Full problem 395 rows 411 columns, reduced to 61 rows 66 columns
Cbc0010I After 47 nodes, 2 on tree, -152.02612 best solution, best possible -172.00562 (13.23 seconds)
Cbc0010I After 62 nodes, 3 on tree, -152.02612 best solution, best possible -172.00562 (14.04 seconds)
Cbc0010I After 65 nodes, 4 on tree, -152.02612 best solution, best possible -172.00562 (14.88 seconds)
Cbc0010I After 79 nodes, 3 on tree, -152.02612 best solution, best possible -172.00562 (15.67 seconds)
Cbc0001I Search completed - best objective -152.02612, took 19694 iterations and 90 nodes (15.96 seconds)
Cbc0032I Strong branching done 1056 times (29692 iterations), fathomed 4 nodes and fixed 9 variables
Cbc0035I Maximum depth 14, 593 variables fixed on reduced cost
Total time (CPU seconds):       15.67   (Wallclock seconds):       16.05

