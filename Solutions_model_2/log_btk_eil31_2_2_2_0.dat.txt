Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-17) rows, 27 (-6) columns and 143 (-40) elements
Clp1000I sum of infeasibilities 1.77562e-05 - average 3.6992e-07, 2 fixed columns
Coin0506I Presolve 44 (-4) rows, 25 (-2) columns and 131 (-12) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 76.269707
Clp0000I Optimal - objective value 76.269707
Coin0511I After Postsolve, objective 76.269707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.269707
Clp0000I Optimal - objective value 76.269707
Clp0000I Optimal - objective value 76.269707
Coin0511I After Postsolve, objective 76.269707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.26970688 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 27 columns (26 integer (26 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.128%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.23514
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.7978 iterations 17
Cbc0038I Solution found of -31.7978
Cbc0038I Relaxing continuous gives -31.7978
Cbc0038I Rounding solution of -46.1982 is better than previous of -31.7978

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 27 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -46.1982 to -51.3464 (0.01 seconds)
Cbc0038I Round again with cutoff of -53.6318
Cbc0038I Pass   2: suminf.    0.27674 (2) obj. -53.6318 iterations 3
Cbc0038I Pass   3: suminf.    0.27521 (2) obj. -53.6318 iterations 3
Cbc0038I Pass   4: suminf.    0.69850 (3) obj. -53.6318 iterations 4
Cbc0038I Pass   5: suminf.    0.48146 (2) obj. -53.6318 iterations 3
Cbc0038I Pass   6: suminf.    1.07771 (3) obj. -53.6318 iterations 3
Cbc0038I Pass   7: suminf.    0.54702 (2) obj. -53.6318 iterations 2
Cbc0038I Pass   8: suminf.    0.68647 (5) obj. -53.6318 iterations 4
Cbc0038I Pass   9: suminf.    0.66565 (4) obj. -53.6318 iterations 2
Cbc0038I Pass  10: suminf.    0.52765 (5) obj. -53.6318 iterations 7
Cbc0038I Pass  11: suminf.    0.48663 (5) obj. -53.6318 iterations 2
Cbc0038I Pass  12: suminf.    1.09435 (3) obj. -53.6318 iterations 9
Cbc0038I Pass  13: suminf.    0.78550 (2) obj. -53.6318 iterations 1
Cbc0038I Pass  14: suminf.    0.27674 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  15: suminf.    0.27521 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  16: suminf.    0.69850 (3) obj. -53.6318 iterations 4
Cbc0038I Pass  17: suminf.    0.48146 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  18: suminf.    1.07771 (3) obj. -53.6318 iterations 3
Cbc0038I Pass  19: suminf.    0.54702 (2) obj. -53.6318 iterations 2
Cbc0038I Pass  20: suminf.    0.96385 (4) obj. -53.6318 iterations 3
Cbc0038I Pass  21: suminf.    0.90793 (3) obj. -53.6318 iterations 1
Cbc0038I Pass  22: suminf.    0.69850 (3) obj. -53.6318 iterations 6
Cbc0038I Pass  23: suminf.    0.48146 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  24: suminf.    1.07771 (3) obj. -53.6318 iterations 3
Cbc0038I Pass  25: suminf.    0.54702 (2) obj. -53.6318 iterations 2
Cbc0038I Pass  26: suminf.    1.09414 (4) obj. -53.6318 iterations 7
Cbc0038I Pass  27: suminf.    1.05859 (6) obj. -53.6318 iterations 4
Cbc0038I Pass  28: suminf.    0.41375 (3) obj. -53.6318 iterations 8
Cbc0038I Pass  29: suminf.    0.40868 (3) obj. -53.6318 iterations 1
Cbc0038I Pass  30: suminf.    0.27521 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  31: suminf.    0.27521 (2) obj. -53.6318 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 27 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -51.3464 - took 0.04 seconds
Cbc0012I Integer solution of -51.34641 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 27 columns, reduced to 20 rows 13 columns
Cbc0031I 11 added rows had average density of 15.363636
Cbc0013I At root node, 11 cuts changed objective from -74.199142 to -62.437784 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 972 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 676 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -51.34641000000001, took 2717 iterations and 16 nodes (0.19 seconds)
Cbc0032I Strong branching done 164 times (1414 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-18) rows, 50 (-12) columns and 455 (-193) elements
Clp1000I sum of infeasibilities 2.35651e-07 - average 5.12284e-09, 24 fixed columns
Coin0506I Presolve 25 (-21) rows, 26 (-24) columns and 147 (-308) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 124.18319
Clp0000I Optimal - objective value 124.18319
Coin0511I After Postsolve, objective 124.18319, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1797729 - largest nonzero change 2.5394551e-05 ( 0.0022879966%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 124.18319
Clp0000I Optimal - objective value 124.18319
Clp0000I Optimal - objective value 124.18319
Coin0511I After Postsolve, objective 124.18319, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 124.1831908 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 47 columns (47 integer (47 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.630%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.68107
Cbc0038I Pass   1: suminf.    1.50277 (14) obj. -66.0058 iterations 13
Cbc0038I Pass   2: suminf.    1.40227 (13) obj. -64.9891 iterations 2
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. -44.6194 iterations 27
Cbc0038I Solution found of -43.6694
Cbc0038I Rounding solution of -51.3464 is better than previous of -43.6694

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -53.8072
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.50277 (14) obj. -66.0058 iterations 0
Cbc0038I Pass   5: suminf.    1.40227 (13) obj. -64.9891 iterations 2
Cbc0038I Pass   6: suminf.    0.83020 (3) obj. -53.8072 iterations 30
Cbc0038I Pass   7: suminf.    1.01040 (3) obj. -53.8072 iterations 5
Cbc0038I Pass   8: suminf.    0.56818 (2) obj. -54.1626 iterations 2
Cbc0038I Pass   9: suminf.    0.72974 (5) obj. -53.8072 iterations 8
Cbc0038I Pass  10: suminf.    0.72974 (5) obj. -53.8072 iterations 2
Cbc0038I Pass  11: suminf.    1.09026 (3) obj. -53.8072 iterations 13
Cbc0038I Pass  12: suminf.    0.83720 (2) obj. -53.8072 iterations 1
Cbc0038I Pass  13: suminf.    0.83720 (2) obj. -53.8072 iterations 0
Cbc0038I Pass  14: suminf.    0.94861 (2) obj. -53.8072 iterations 1
Cbc0038I Pass  15: suminf.    0.81301 (2) obj. -59.0168 iterations 1
Cbc0038I Pass  16: suminf.    1.80687 (6) obj. -53.8072 iterations 8
Cbc0038I Pass  17: suminf.    1.02329 (5) obj. -53.8072 iterations 9
Cbc0038I Pass  18: suminf.    0.92988 (7) obj. -53.8072 iterations 10
Cbc0038I Pass  19: suminf.    0.91823 (4) obj. -53.8072 iterations 2
Cbc0038I Pass  20: suminf.    0.49316 (5) obj. -53.8072 iterations 7
Cbc0038I Pass  21: suminf.    0.49316 (5) obj. -53.8072 iterations 0
Cbc0038I Pass  22: suminf.    0.81301 (2) obj. -58.0168 iterations 6
Cbc0038I Pass  23: suminf.    0.81301 (2) obj. -58.0168 iterations 0
Cbc0038I Pass  24: suminf.    0.86845 (2) obj. -53.8072 iterations 2
Cbc0038I Pass  25: suminf.    0.86845 (2) obj. -53.8072 iterations 0
Cbc0038I Pass  26: suminf.    0.92258 (2) obj. -53.8072 iterations 1
Cbc0038I Pass  27: suminf.    1.22081 (6) obj. -53.8072 iterations 16
Cbc0038I Pass  28: suminf.    0.80736 (5) obj. -53.8072 iterations 9
Cbc0038I Pass  29: suminf.    1.23624 (5) obj. -53.8072 iterations 9
Cbc0038I Pass  30: suminf.    0.77462 (6) obj. -53.8072 iterations 2
Cbc0038I Pass  31: suminf.    0.77462 (6) obj. -53.8072 iterations 0
Cbc0038I Pass  32: suminf.    1.32743 (3) obj. -61.8258 iterations 9
Cbc0038I Pass  33: suminf.    0.81301 (2) obj. -58.0168 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -51.3464 - took 0.02 seconds
Cbc0012I Integer solution of -51.34641 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 40 rows 47 columns, reduced to 3 rows 3 columns
Cbc0012I Integer solution of -62.7609 found by DiveCoefficient after 99 iterations and 0 nodes (0.13 seconds)
Cbc0031I 12 added rows had average density of 13.25
Cbc0013I At root node, 12 cuts changed objective from -75.953851 to -62.7609 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 84 row cuts average 3.2 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 62 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0001I Search completed - best objective -62.76089999999999, took 99 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-17) rows, 27 (-6) columns and 143 (-40) elements
Clp1000I sum of infeasibilities 1.77562e-05 - average 3.6992e-07, 2 fixed columns
Coin0506I Presolve 44 (-4) rows, 25 (-2) columns and 131 (-12) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 76.269707
Clp0000I Optimal - objective value 76.269707
Coin0511I After Postsolve, objective 76.269707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.269707
Clp0000I Optimal - objective value 76.269707
Clp0000I Optimal - objective value 76.269707
Coin0511I After Postsolve, objective 76.269707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.26970688 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 27 columns (26 integer (26 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.128%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.23514
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.7978 iterations 17
Cbc0038I Solution found of -31.7978
Cbc0038I Relaxing continuous gives -31.7978
Cbc0038I Rounding solution of -46.1982 is better than previous of -31.7978

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 27 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -46.1982 to -51.3464 (0.01 seconds)
Cbc0038I Round again with cutoff of -53.6318
Cbc0038I Pass   2: suminf.    0.27674 (2) obj. -53.6318 iterations 3
Cbc0038I Pass   3: suminf.    0.27521 (2) obj. -53.6318 iterations 3
Cbc0038I Pass   4: suminf.    0.69850 (3) obj. -53.6318 iterations 4
Cbc0038I Pass   5: suminf.    0.48146 (2) obj. -53.6318 iterations 3
Cbc0038I Pass   6: suminf.    1.07771 (3) obj. -53.6318 iterations 3
Cbc0038I Pass   7: suminf.    0.54702 (2) obj. -53.6318 iterations 2
Cbc0038I Pass   8: suminf.    0.68647 (5) obj. -53.6318 iterations 4
Cbc0038I Pass   9: suminf.    0.66565 (4) obj. -53.6318 iterations 2
Cbc0038I Pass  10: suminf.    0.52765 (5) obj. -53.6318 iterations 7
Cbc0038I Pass  11: suminf.    0.48663 (5) obj. -53.6318 iterations 2
Cbc0038I Pass  12: suminf.    1.09435 (3) obj. -53.6318 iterations 9
Cbc0038I Pass  13: suminf.    0.78550 (2) obj. -53.6318 iterations 1
Cbc0038I Pass  14: suminf.    0.27674 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  15: suminf.    0.27521 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  16: suminf.    0.69850 (3) obj. -53.6318 iterations 4
Cbc0038I Pass  17: suminf.    0.48146 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  18: suminf.    1.07771 (3) obj. -53.6318 iterations 3
Cbc0038I Pass  19: suminf.    0.54702 (2) obj. -53.6318 iterations 2
Cbc0038I Pass  20: suminf.    0.96385 (4) obj. -53.6318 iterations 3
Cbc0038I Pass  21: suminf.    0.90793 (3) obj. -53.6318 iterations 1
Cbc0038I Pass  22: suminf.    0.69850 (3) obj. -53.6318 iterations 6
Cbc0038I Pass  23: suminf.    0.48146 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  24: suminf.    1.07771 (3) obj. -53.6318 iterations 3
Cbc0038I Pass  25: suminf.    0.54702 (2) obj. -53.6318 iterations 2
Cbc0038I Pass  26: suminf.    1.09414 (4) obj. -53.6318 iterations 7
Cbc0038I Pass  27: suminf.    1.05859 (6) obj. -53.6318 iterations 4
Cbc0038I Pass  28: suminf.    0.41375 (3) obj. -53.6318 iterations 8
Cbc0038I Pass  29: suminf.    0.40868 (3) obj. -53.6318 iterations 1
Cbc0038I Pass  30: suminf.    0.27521 (2) obj. -53.6318 iterations 3
Cbc0038I Pass  31: suminf.    0.27521 (2) obj. -53.6318 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 27 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -51.3464 - took 0.01 seconds
Cbc0012I Integer solution of -51.34641 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 27 columns, reduced to 20 rows 13 columns
Cbc0031I 11 added rows had average density of 15.363636
Cbc0013I At root node, 11 cuts changed objective from -74.199142 to -62.437784 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 972 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 676 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -51.34641000000001, took 2717 iterations and 16 nodes (0.22 seconds)
Cbc0032I Strong branching done 164 times (1414 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-23) rows, 46 (-17) columns and 393 (-256) elements
Clp1000I sum of infeasibilities 1.42528e-08 - average 3.39353e-10, 4 fixed columns
Coin0506I Presolve 39 (-3) rows, 42 (-4) columns and 333 (-60) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.3416646 - largest nonzero change 2.8259464e-05 ( 0.0025942613%) - largest zero change 2.7575939e-05
Clp0000I Optimal - objective value 85.148239
Clp0000I Optimal - objective value 85.148239
Coin0511I After Postsolve, objective 85.148239, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.148239
Clp0000I Optimal - objective value 85.148239
Clp0000I Optimal - objective value 85.148239
Coin0511I After Postsolve, objective 85.148239, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.14823906 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.26551
Cbc0038I Pass   1: suminf.    1.60534 (12) obj. -59.5268 iterations 7
Cbc0038I Pass   2: suminf.    1.60534 (12) obj. -59.5268 iterations 0
Cbc0038I Solution found of -43.6694
Cbc0038I Rounding solution of -51.3464 is better than previous of -43.6694

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -53.2567
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.60534 (12) obj. -59.5268 iterations 0
Cbc0038I Pass   4: suminf.    1.60534 (12) obj. -59.5268 iterations 0
Cbc0038I Pass   5: suminf.    0.75899 (3) obj. -53.2567 iterations 17
Cbc0038I Pass   6: suminf.    1.06692 (3) obj. -53.2567 iterations 1
Cbc0038I Pass   7: suminf.    0.56818 (2) obj. -54.1626 iterations 2
Cbc0038I Pass   8: suminf.    0.64335 (2) obj. -53.2567 iterations 2
Cbc0038I Pass   9: suminf.    0.64335 (2) obj. -53.2567 iterations 1
Cbc0038I Pass  10: suminf.    0.90256 (2) obj. -53.2567 iterations 1
Cbc0038I Pass  11: suminf.    0.80777 (2) obj. -56.3731 iterations 1
Cbc0038I Pass  12: suminf.    1.02830 (7) obj. -53.2567 iterations 5
Cbc0038I Pass  13: suminf.    0.61106 (5) obj. -53.2567 iterations 4
Cbc0038I Pass  14: suminf.    1.07438 (3) obj. -53.2567 iterations 8
Cbc0038I Pass  15: suminf.    1.07438 (3) obj. -53.2567 iterations 0
Cbc0038I Pass  16: suminf.    0.91996 (3) obj. -54.0807 iterations 2
Cbc0038I Pass  17: suminf.    0.83895 (7) obj. -53.2567 iterations 3
Cbc0038I Pass  18: suminf.    1.17992 (3) obj. -53.2567 iterations 6
Cbc0038I Pass  19: suminf.    1.11633 (3) obj. -53.4474 iterations 2
Cbc0038I Pass  20: suminf.    1.17992 (3) obj. -53.2567 iterations 4
Cbc0038I Pass  21: suminf.    1.14039 (7) obj. -53.2567 iterations 9
Cbc0038I Pass  22: suminf.    1.03697 (6) obj. -54.084 iterations 1
Cbc0038I Pass  23: suminf.    1.17636 (8) obj. -53.2567 iterations 3
Cbc0038I Pass  24: suminf.    1.16387 (8) obj. -53.2567 iterations 2
Cbc0038I Pass  25: suminf.    1.19858 (4) obj. -53.2567 iterations 11
Cbc0038I Pass  26: suminf.    0.61717 (5) obj. -53.2567 iterations 2
Cbc0038I Pass  27: suminf.    0.87935 (3) obj. -53.2567 iterations 5
Cbc0038I Pass  28: suminf.    0.87935 (3) obj. -53.2567 iterations 1
Cbc0038I Pass  29: suminf.    0.80819 (3) obj. -54.6648 iterations 3
Cbc0038I Pass  30: suminf.    0.57241 (5) obj. -53.2567 iterations 3
Cbc0038I Pass  31: suminf.    3.40799 (11) obj. -53.2567 iterations 16
Cbc0038I Pass  32: suminf.    1.49860 (6) obj. -56.3584 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 26 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -51.3464 - took 0.03 seconds
Cbc0012I Integer solution of -51.34641 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 3 rows 3 columns
Cbc0031I 20 added rows had average density of 10.5
Cbc0013I At root node, 20 cuts changed objective from -70.447983 to -53.757595 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1073 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 386 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 129 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 199 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 273 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.780 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -51.34641 best solution, best possible -53.757338 (1.65 seconds)
Cbc0001I Search completed - best objective -51.34641000000001, took 1248 iterations and 6 nodes (1.96 seconds)
Cbc0032I Strong branching done 116 times (715 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.20   (Wallclock seconds):       1.96

