Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-20) rows, 51 (-2) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 1.24029e-05 - average 1.45917e-07, 1 fixed columns
Coin0506I Presolve 83 (-2) rows, 50 (-1) columns and 258 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 34.664394
Clp0000I Optimal - objective value 34.664394
Coin0511I After Postsolve, objective 34.664394, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.664394
Clp0000I Optimal - objective value 34.664394
Clp0000I Optimal - objective value 34.664394
Coin0511I After Postsolve, objective 34.664394, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.66439365 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 51 columns (50 integer (50 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 10.0361
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.6311 iterations 35
Cbc0038I Solution found of 10.6311
Cbc0038I Relaxing continuous gives 10.6311
Cbc0038I Rounding solution of 1.5908 is better than previous of 10.6311

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 60 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 1.5908 to -3.78583 (0.03 seconds)
Cbc0038I Round again with cutoff of -6.87378
Cbc0038I Pass   2: suminf.    2.65086 (10) obj. -6.87378 iterations 15
Cbc0038I Pass   3: suminf.    2.77828 (8) obj. -6.87378 iterations 11
Cbc0038I Pass   4: suminf.    2.14816 (7) obj. -6.87378 iterations 2
Cbc0038I Pass   5: suminf.    1.77402 (8) obj. -6.87378 iterations 10
Cbc0038I Pass   6: suminf.    1.70133 (8) obj. -6.87378 iterations 3
Cbc0038I Pass   7: suminf.    2.49982 (10) obj. -6.87378 iterations 15
Cbc0038I Pass   8: suminf.    2.15991 (9) obj. -6.87378 iterations 1
Cbc0038I Pass   9: suminf.    2.22977 (6) obj. -6.87378 iterations 14
Cbc0038I Pass  10: suminf.    1.94362 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  11: suminf.    1.57195 (7) obj. -6.87378 iterations 3
Cbc0038I Pass  12: suminf.    2.40549 (6) obj. -6.87378 iterations 10
Cbc0038I Pass  13: suminf.    2.17129 (7) obj. -6.87378 iterations 2
Cbc0038I Pass  14: suminf.    2.17129 (7) obj. -6.87378 iterations 0
Cbc0038I Pass  15: suminf.    2.43314 (7) obj. -6.87378 iterations 8
Cbc0038I Pass  16: suminf.    2.22977 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  17: suminf.    1.94362 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  18: suminf.    1.57195 (7) obj. -6.87378 iterations 3
Cbc0038I Pass  19: suminf.    2.40549 (6) obj. -6.87378 iterations 10
Cbc0038I Pass  20: suminf.    2.17129 (7) obj. -6.87378 iterations 2
Cbc0038I Pass  21: suminf.    2.17129 (7) obj. -6.87378 iterations 0
Cbc0038I Pass  22: suminf.    2.43314 (7) obj. -6.87378 iterations 8
Cbc0038I Pass  23: suminf.    2.22977 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  24: suminf.    1.94362 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  25: suminf.    1.57195 (7) obj. -6.87378 iterations 3
Cbc0038I Pass  26: suminf.    2.40549 (6) obj. -6.87378 iterations 10
Cbc0038I Pass  27: suminf.    2.17129 (7) obj. -6.87378 iterations 2
Cbc0038I Pass  28: suminf.    2.17129 (7) obj. -6.87378 iterations 0
Cbc0038I Pass  29: suminf.    2.43314 (7) obj. -6.87378 iterations 8
Cbc0038I Pass  30: suminf.    2.22977 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  31: suminf.    1.94362 (6) obj. -6.87378 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3.78583 - took 0.06 seconds
Cbc0012I Integer solution of -3.78583 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 60 rows 38 columns
Cbc0031I 28 added rows had average density of 39.392857
Cbc0013I At root node, 28 cuts changed objective from -34.664394 to -23.944352 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10831 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1505 row cuts average 50.6 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 81 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 17 nodes, 2 on tree, -3.78583 best solution, best possible -23.943578 (0.70 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 25 rows 20 columns
Cbc0001I Search completed - best objective -3.785830000000004, took 8757 iterations and 64 nodes (0.90 seconds)
Cbc0032I Strong branching done 834 times (11286 iterations), fathomed 4 nodes and fixed 42 variables
Cbc0035I Maximum depth 17, 169 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-37) rows, 82 (-20) columns and 1035 (-543) elements
Clp1000I sum of infeasibilities 3.03679e-08 - average 4.53252e-10, 18 fixed columns
Coin0506I Presolve 48 (-19) rows, 64 (-18) columns and 642 (-393) elements
Clp0006I 0  Obj 42.099548 Dual inf 1.6104677 (64)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 4.1582206 - largest nonzero change 2.0134231e-05 ( 0.0010614613%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 46.561619
Clp0000I Optimal - objective value 46.561619
Coin0511I After Postsolve, objective 46.561619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 46.561619
Clp0000I Optimal - objective value 46.561619
Clp0000I Optimal - objective value 46.561619
Clp0000I Optimal - objective value 46.561619
Coin0511I After Postsolve, objective 46.561619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.56161922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 67 rows, 82 columns (82 integer (82 of which binary)) and 1037 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 8.17444
Cbc0038I Pass   1: suminf.    3.10156 (24) obj. -27.926 iterations 11
Cbc0038I Pass   2: suminf.    3.10156 (24) obj. -27.926 iterations 1
Cbc0038I Pass   3: suminf.    0.18105 (3) obj. 2.85671 iterations 21
Cbc0038I Solution found of 6.609
Cbc0038I Rounding solution of 4.43203 is better than previous of 6.609

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 82 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from 4.43203 to 3.30374 (0.02 seconds)
Cbc0038I Round again with cutoff of -0.485037
Cbc0038I Pass   4: suminf.    3.10156 (24) obj. -27.926 iterations 0
Cbc0038I Pass   5: suminf.    3.10156 (24) obj. -27.926 iterations 1
Cbc0038I Pass   6: suminf.    0.48262 (5) obj. -0.485037 iterations 22
Cbc0038I Pass   7: suminf.    0.26743 (2) obj. -2.22548 iterations 4
Cbc0038I Pass   8: suminf.    0.17778 (1) obj. -0.791 iterations 1
Cbc0038I Pass   9: suminf.    0.46082 (2) obj. -0.485037 iterations 2
Cbc0038I Pass  10: suminf.    0.98959 (5) obj. -0.485037 iterations 19
Cbc0038I Pass  11: suminf.    0.62970 (5) obj. -0.485037 iterations 8
Cbc0038I Pass  12: suminf.    0.80734 (4) obj. -0.485037 iterations 11
Cbc0038I Pass  13: suminf.    0.30575 (3) obj. -0.485037 iterations 4
Cbc0038I Pass  14: suminf.    0.50841 (2) obj. -0.485037 iterations 6
Cbc0038I Pass  15: suminf.    1.99493 (9) obj. -0.485037 iterations 18
Cbc0038I Pass  16: suminf.    0.86869 (6) obj. -0.671945 iterations 7
Cbc0038I Pass  17: suminf.    1.27076 (4) obj. -0.485037 iterations 11
Cbc0038I Pass  18: suminf.    0.43327 (4) obj. -0.485037 iterations 6
Cbc0038I Pass  19: suminf.    0.62137 (3) obj. -0.485037 iterations 5
Cbc0038I Pass  20: suminf.    0.38678 (3) obj. -0.485037 iterations 4
Cbc0038I Pass  21: suminf.    0.85344 (2) obj. -0.485037 iterations 3
Cbc0038I Pass  22: suminf.    0.60483 (2) obj. -2.72248 iterations 1
Cbc0038I Pass  23: suminf.    0.29986 (2) obj. -0.485037 iterations 3
Cbc0038I Pass  24: suminf.    0.29163 (2) obj. -0.485037 iterations 1
Cbc0038I Pass  25: suminf.    0.29986 (2) obj. -0.485037 iterations 2
Cbc0038I Pass  26: suminf.    1.79473 (9) obj. -0.485037 iterations 33
Cbc0038I Pass  27: suminf.    1.60339 (9) obj. -2.20712 iterations 8
Cbc0038I Pass  28: suminf.    0.94959 (3) obj. -0.485037 iterations 23
Cbc0038I Pass  29: suminf.    0.34387 (3) obj. -0.485037 iterations 3
Cbc0038I Pass  30: suminf.    1.06149 (3) obj. -0.485037 iterations 6
Cbc0038I Pass  31: suminf.    0.96508 (3) obj. -1.35275 iterations 1
Cbc0038I Pass  32: suminf.    0.34387 (3) obj. -0.485037 iterations 5
Cbc0038I Pass  33: suminf.    2.34494 (10) obj. -0.485037 iterations 14
Cbc0038I Rounding solution of 2.11352 is better than previous of 3.30374

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 82 columns, reduced to 23 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 2.11352 to 0.3282 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.30466
Cbc0038I Pass  33: suminf.    3.10156 (24) obj. -27.926 iterations 0
Cbc0038I Pass  34: suminf.    3.10156 (24) obj. -27.926 iterations 1
Cbc0038I Pass  35: suminf.    0.77028 (6) obj. -7.30466 iterations 28
Cbc0038I Pass  36: suminf.    0.42751 (4) obj. -7.30466 iterations 4
Cbc0038I Pass  37: suminf.    0.65333 (4) obj. -7.30466 iterations 8
Cbc0038I Pass  38: suminf.    0.49175 (4) obj. -7.30466 iterations 5
Cbc0038I Pass  39: suminf.    0.62786 (3) obj. -7.30466 iterations 3
Cbc0038I Pass  40: suminf.    1.78909 (10) obj. -7.30466 iterations 20
Cbc0038I Pass  41: suminf.    1.75314 (11) obj. -7.30466 iterations 5
Cbc0038I Pass  42: suminf.    1.56629 (7) obj. -7.30466 iterations 17
Cbc0038I Pass  43: suminf.    1.56629 (7) obj. -7.30466 iterations 0
Cbc0038I Pass  44: suminf.    1.66466 (6) obj. -7.30466 iterations 7
Cbc0038I Pass  45: suminf.    1.26472 (6) obj. -7.77662 iterations 5
Cbc0038I Pass  46: suminf.    1.50071 (6) obj. -7.30466 iterations 4
Cbc0038I Pass  47: suminf.    2.09027 (11) obj. -7.30466 iterations 23
Cbc0038I Pass  48: suminf.    1.82661 (10) obj. -7.30466 iterations 8
Cbc0038I Pass  49: suminf.    1.86075 (9) obj. -7.30466 iterations 13
Cbc0038I Pass  50: suminf.    1.85713 (9) obj. -7.30466 iterations 2
Cbc0038I Pass  51: suminf.    2.08688 (8) obj. -7.30466 iterations 4
Cbc0038I Pass  52: suminf.    1.41998 (7) obj. -7.55225 iterations 4
Cbc0038I Pass  53: suminf.    1.46925 (8) obj. -7.30466 iterations 7
Cbc0038I Pass  54: suminf.    0.93185 (6) obj. -7.30466 iterations 4
Cbc0038I Pass  55: suminf.    0.93185 (6) obj. -7.30466 iterations 6
Cbc0038I Pass  56: suminf.    0.93185 (6) obj. -7.30466 iterations 3
Cbc0038I Pass  57: suminf.    0.93185 (6) obj. -7.30466 iterations 4
Cbc0038I Pass  58: suminf.    2.45951 (12) obj. -7.30466 iterations 14
Cbc0038I Pass  59: suminf.    2.06003 (11) obj. -7.30466 iterations 3
Cbc0038I Pass  60: suminf.    1.31802 (6) obj. -7.30466 iterations 12
Cbc0038I Pass  61: suminf.    1.31802 (6) obj. -7.30466 iterations 1
Cbc0038I Pass  62: suminf.    1.57531 (8) obj. -7.30466 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 82 columns, reduced to 21 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 0.3282 - took 0.04 seconds
Cbc0012I Integer solution of 0.3282 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 67 rows 82 columns, reduced to 12 rows 17 columns
Cbc0031I 48 added rows had average density of 25.625
Cbc0013I At root node, 48 cuts changed objective from -34.583133 to -9.6658835 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10705 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1024 row cuts average 76.9 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 897 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.652 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 0.3282 best solution, best possible -9.6658835 (1.93 seconds)
Cbc0004I Integer solution of -3.36154 found after 4542 iterations and 1 nodes (1.94 seconds)
Cbc0016I Integer solution of -3.78583 found by strong branching after 5915 iterations and 37 nodes (2.42 seconds)
Cbc0038I Full problem 67 rows 82 columns, reduced to 46 rows 61 columns
Cbc0010I After 48 nodes, 3 on tree, -3.78583 best solution, best possible -9.158556 (2.68 seconds)
Cbc0001I Search completed - best objective -3.785830000000004, took 6640 iterations and 54 nodes (2.77 seconds)
Cbc0032I Strong branching done 706 times (12650 iterations), fathomed 7 nodes and fixed 5 variables
Cbc0035I Maximum depth 14, 60 variables fixed on reduced cost
Total time (CPU seconds):       2.16   (Wallclock seconds):       2.78

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-20) rows, 51 (-2) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 1.24029e-05 - average 1.45917e-07, 1 fixed columns
Coin0506I Presolve 83 (-2) rows, 50 (-1) columns and 258 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 34.664394
Clp0000I Optimal - objective value 34.664394
Coin0511I After Postsolve, objective 34.664394, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.664394
Clp0000I Optimal - objective value 34.664394
Clp0000I Optimal - objective value 34.664394
Coin0511I After Postsolve, objective 34.664394, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.66439365 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 51 columns (50 integer (50 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 10.0361
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.6311 iterations 35
Cbc0038I Solution found of 10.6311
Cbc0038I Relaxing continuous gives 10.6311
Cbc0038I Rounding solution of 1.5908 is better than previous of 10.6311

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 60 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 1.5908 to -3.78583 (0.03 seconds)
Cbc0038I Round again with cutoff of -6.87378
Cbc0038I Pass   2: suminf.    2.65086 (10) obj. -6.87378 iterations 15
Cbc0038I Pass   3: suminf.    2.77828 (8) obj. -6.87378 iterations 11
Cbc0038I Pass   4: suminf.    2.14816 (7) obj. -6.87378 iterations 2
Cbc0038I Pass   5: suminf.    1.77402 (8) obj. -6.87378 iterations 10
Cbc0038I Pass   6: suminf.    1.70133 (8) obj. -6.87378 iterations 3
Cbc0038I Pass   7: suminf.    2.49982 (10) obj. -6.87378 iterations 15
Cbc0038I Pass   8: suminf.    2.15991 (9) obj. -6.87378 iterations 1
Cbc0038I Pass   9: suminf.    2.22977 (6) obj. -6.87378 iterations 14
Cbc0038I Pass  10: suminf.    1.94362 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  11: suminf.    1.57195 (7) obj. -6.87378 iterations 3
Cbc0038I Pass  12: suminf.    2.40549 (6) obj. -6.87378 iterations 10
Cbc0038I Pass  13: suminf.    2.17129 (7) obj. -6.87378 iterations 2
Cbc0038I Pass  14: suminf.    2.17129 (7) obj. -6.87378 iterations 0
Cbc0038I Pass  15: suminf.    2.43314 (7) obj. -6.87378 iterations 8
Cbc0038I Pass  16: suminf.    2.22977 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  17: suminf.    1.94362 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  18: suminf.    1.57195 (7) obj. -6.87378 iterations 3
Cbc0038I Pass  19: suminf.    2.40549 (6) obj. -6.87378 iterations 10
Cbc0038I Pass  20: suminf.    2.17129 (7) obj. -6.87378 iterations 2
Cbc0038I Pass  21: suminf.    2.17129 (7) obj. -6.87378 iterations 0
Cbc0038I Pass  22: suminf.    2.43314 (7) obj. -6.87378 iterations 8
Cbc0038I Pass  23: suminf.    2.22977 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  24: suminf.    1.94362 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  25: suminf.    1.57195 (7) obj. -6.87378 iterations 3
Cbc0038I Pass  26: suminf.    2.40549 (6) obj. -6.87378 iterations 10
Cbc0038I Pass  27: suminf.    2.17129 (7) obj. -6.87378 iterations 2
Cbc0038I Pass  28: suminf.    2.17129 (7) obj. -6.87378 iterations 0
Cbc0038I Pass  29: suminf.    2.43314 (7) obj. -6.87378 iterations 8
Cbc0038I Pass  30: suminf.    2.22977 (6) obj. -6.87378 iterations 3
Cbc0038I Pass  31: suminf.    1.94362 (6) obj. -6.87378 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -3.78583 - took 0.05 seconds
Cbc0012I Integer solution of -3.78583 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 60 rows 38 columns
Cbc0031I 28 added rows had average density of 39.392857
Cbc0013I At root node, 28 cuts changed objective from -34.664394 to -23.944352 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10831 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1505 row cuts average 50.6 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 81 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 16 nodes, 1 on tree, -3.78583 best solution, best possible -23.943578 (0.72 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 25 rows 20 columns
Cbc0001I Search completed - best objective -3.785830000000004, took 8757 iterations and 64 nodes (0.96 seconds)
Cbc0032I Strong branching done 834 times (11286 iterations), fathomed 4 nodes and fixed 42 variables
Cbc0035I Maximum depth 17, 169 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.97

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-38) rows, 82 (-21) columns and 1035 (-544) elements
Clp1000I sum of infeasibilities 3.03679e-08 - average 4.53252e-10, 18 fixed columns
Coin0506I Presolve 48 (-19) rows, 64 (-18) columns and 642 (-393) elements
Clp0006I 0  Obj 42.099548 Dual inf 1.6104677 (64)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 4.1582206 - largest nonzero change 2.0134231e-05 ( 0.0010614613%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 46.561619
Clp0000I Optimal - objective value 46.561619
Coin0511I After Postsolve, objective 46.561619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 46.561619
Clp0000I Optimal - objective value 46.561619
Clp0000I Optimal - objective value 46.561619
Clp0000I Optimal - objective value 46.561619
Coin0511I After Postsolve, objective 46.561619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.56161922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 67 rows, 82 columns (82 integer (82 of which binary)) and 1037 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 8.17444
Cbc0038I Pass   1: suminf.    3.10156 (24) obj. -27.926 iterations 11
Cbc0038I Pass   2: suminf.    3.10156 (24) obj. -27.926 iterations 1
Cbc0038I Pass   3: suminf.    0.18105 (3) obj. 2.85671 iterations 21
Cbc0038I Solution found of 6.609
Cbc0038I Rounding solution of 4.43203 is better than previous of 6.609

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 82 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from 4.43203 to 3.30374 (0.01 seconds)
Cbc0038I Round again with cutoff of -0.485037
Cbc0038I Pass   4: suminf.    3.10156 (24) obj. -27.926 iterations 0
Cbc0038I Pass   5: suminf.    3.10156 (24) obj. -27.926 iterations 1
Cbc0038I Pass   6: suminf.    0.48262 (5) obj. -0.485037 iterations 22
Cbc0038I Pass   7: suminf.    0.26743 (2) obj. -2.22548 iterations 4
Cbc0038I Pass   8: suminf.    0.17778 (1) obj. -0.791 iterations 1
Cbc0038I Pass   9: suminf.    0.46082 (2) obj. -0.485037 iterations 2
Cbc0038I Pass  10: suminf.    0.98959 (5) obj. -0.485037 iterations 19
Cbc0038I Pass  11: suminf.    0.62970 (5) obj. -0.485037 iterations 8
Cbc0038I Pass  12: suminf.    0.80734 (4) obj. -0.485037 iterations 11
Cbc0038I Pass  13: suminf.    0.30575 (3) obj. -0.485037 iterations 4
Cbc0038I Pass  14: suminf.    0.50841 (2) obj. -0.485037 iterations 6
Cbc0038I Pass  15: suminf.    1.99493 (9) obj. -0.485037 iterations 18
Cbc0038I Pass  16: suminf.    0.86869 (6) obj. -0.671945 iterations 7
Cbc0038I Pass  17: suminf.    1.27076 (4) obj. -0.485037 iterations 11
Cbc0038I Pass  18: suminf.    0.43327 (4) obj. -0.485037 iterations 6
Cbc0038I Pass  19: suminf.    0.62137 (3) obj. -0.485037 iterations 5
Cbc0038I Pass  20: suminf.    0.38678 (3) obj. -0.485037 iterations 4
Cbc0038I Pass  21: suminf.    0.85344 (2) obj. -0.485037 iterations 3
Cbc0038I Pass  22: suminf.    0.60483 (2) obj. -2.72248 iterations 1
Cbc0038I Pass  23: suminf.    0.29986 (2) obj. -0.485037 iterations 3
Cbc0038I Pass  24: suminf.    0.29163 (2) obj. -0.485037 iterations 1
Cbc0038I Pass  25: suminf.    0.29986 (2) obj. -0.485037 iterations 2
Cbc0038I Pass  26: suminf.    1.79473 (9) obj. -0.485037 iterations 33
Cbc0038I Pass  27: suminf.    1.60339 (9) obj. -2.20712 iterations 8
Cbc0038I Pass  28: suminf.    0.94959 (3) obj. -0.485037 iterations 23
Cbc0038I Pass  29: suminf.    0.34387 (3) obj. -0.485037 iterations 3
Cbc0038I Pass  30: suminf.    1.06149 (3) obj. -0.485037 iterations 6
Cbc0038I Pass  31: suminf.    0.96508 (3) obj. -1.35275 iterations 1
Cbc0038I Pass  32: suminf.    0.34387 (3) obj. -0.485037 iterations 5
Cbc0038I Pass  33: suminf.    2.34494 (10) obj. -0.485037 iterations 14
Cbc0038I Rounding solution of 2.11352 is better than previous of 3.30374

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 82 columns, reduced to 23 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 2.11352 to 0.3282 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.30466
Cbc0038I Pass  33: suminf.    3.10156 (24) obj. -27.926 iterations 0
Cbc0038I Pass  34: suminf.    3.10156 (24) obj. -27.926 iterations 1
Cbc0038I Pass  35: suminf.    0.77028 (6) obj. -7.30466 iterations 28
Cbc0038I Pass  36: suminf.    0.42751 (4) obj. -7.30466 iterations 4
Cbc0038I Pass  37: suminf.    0.65333 (4) obj. -7.30466 iterations 8
Cbc0038I Pass  38: suminf.    0.49175 (4) obj. -7.30466 iterations 5
Cbc0038I Pass  39: suminf.    0.62786 (3) obj. -7.30466 iterations 3
Cbc0038I Pass  40: suminf.    1.78909 (10) obj. -7.30466 iterations 20
Cbc0038I Pass  41: suminf.    1.75314 (11) obj. -7.30466 iterations 5
Cbc0038I Pass  42: suminf.    1.56629 (7) obj. -7.30466 iterations 17
Cbc0038I Pass  43: suminf.    1.56629 (7) obj. -7.30466 iterations 0
Cbc0038I Pass  44: suminf.    1.66466 (6) obj. -7.30466 iterations 7
Cbc0038I Pass  45: suminf.    1.26472 (6) obj. -7.77662 iterations 5
Cbc0038I Pass  46: suminf.    1.50071 (6) obj. -7.30466 iterations 4
Cbc0038I Pass  47: suminf.    2.09027 (11) obj. -7.30466 iterations 23
Cbc0038I Pass  48: suminf.    1.82661 (10) obj. -7.30466 iterations 8
Cbc0038I Pass  49: suminf.    1.86075 (9) obj. -7.30466 iterations 13
Cbc0038I Pass  50: suminf.    1.85713 (9) obj. -7.30466 iterations 2
Cbc0038I Pass  51: suminf.    2.08688 (8) obj. -7.30466 iterations 4
Cbc0038I Pass  52: suminf.    1.41998 (7) obj. -7.55225 iterations 4
Cbc0038I Pass  53: suminf.    1.46925 (8) obj. -7.30466 iterations 7
Cbc0038I Pass  54: suminf.    0.93185 (6) obj. -7.30466 iterations 4
Cbc0038I Pass  55: suminf.    0.93185 (6) obj. -7.30466 iterations 6
Cbc0038I Pass  56: suminf.    0.93185 (6) obj. -7.30466 iterations 3
Cbc0038I Pass  57: suminf.    0.93185 (6) obj. -7.30466 iterations 4
Cbc0038I Pass  58: suminf.    2.45951 (12) obj. -7.30466 iterations 14
Cbc0038I Pass  59: suminf.    2.06003 (11) obj. -7.30466 iterations 3
Cbc0038I Pass  60: suminf.    1.31802 (6) obj. -7.30466 iterations 12
Cbc0038I Pass  61: suminf.    1.31802 (6) obj. -7.30466 iterations 1
Cbc0038I Pass  62: suminf.    1.57531 (8) obj. -7.30466 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 82 columns, reduced to 21 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 0.3282 - took 0.04 seconds
Cbc0012I Integer solution of 0.3282 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 67 rows 82 columns, reduced to 12 rows 17 columns
Cbc0031I 48 added rows had average density of 25.625
Cbc0013I At root node, 48 cuts changed objective from -34.583133 to -9.6658835 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10705 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1024 row cuts average 76.9 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 897 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.740 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 0.3282 best solution, best possible -9.6658835 (2.27 seconds)
Cbc0004I Integer solution of -3.36154 found after 4542 iterations and 1 nodes (2.28 seconds)
Cbc0016I Integer solution of -3.78583 found by strong branching after 5915 iterations and 37 nodes (2.79 seconds)
Cbc0038I Full problem 67 rows 82 columns, reduced to 46 rows 61 columns
Cbc0010I After 47 nodes, 2 on tree, -3.78583 best solution, best possible -9.158556 (2.99 seconds)
Cbc0001I Search completed - best objective -3.785830000000004, took 6640 iterations and 54 nodes (3.16 seconds)
Cbc0032I Strong branching done 706 times (12650 iterations), fathomed 7 nodes and fixed 5 variables
Cbc0035I Maximum depth 14, 60 variables fixed on reduced cost
Total time (CPU seconds):       2.40   (Wallclock seconds):       3.17

