Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 55 (-23) columns and 300 (-153) elements
Clp1000I sum of infeasibilities 0.000147159 - average 1.50162e-06, 23 fixed columns
Coin0506I Presolve 49 (-49) rows, 28 (-27) columns and 148 (-152) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 0.60528085 - largest nonzero change 0 ( 0%) - largest zero change 2.7495377e-05
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Coin0511I After Postsolve, objective 154.65377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Coin0511I After Postsolve, objective 154.65377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.6537734 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 98 rows, 55 columns (54 integer (54 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.572%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.53182
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -78.6724 iterations 19
Cbc0038I Solution found of -78.6724
Cbc0038I Relaxing continuous gives -78.6724
Cbc0038I Rounding solution of -92.5734 is better than previous of -78.6724

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -92.5734 to -114.591 (0.03 seconds)
Cbc0038I Round again with cutoff of -118.598
Cbc0038I Pass   2: suminf.    0.61013 (8) obj. -118.598 iterations 7
Cbc0038I Pass   3: suminf.    0.24724 (2) obj. -118.598 iterations 8
Cbc0038I Pass   4: suminf.    0.33200 (2) obj. -118.598 iterations 1
Cbc0038I Pass   5: suminf.    0.90895 (4) obj. -118.598 iterations 11
Cbc0038I Pass   6: suminf.    0.90895 (4) obj. -118.598 iterations 4
Cbc0038I Pass   7: suminf.    0.53921 (4) obj. -118.598 iterations 7
Cbc0038I Pass   8: suminf.    0.53921 (4) obj. -118.598 iterations 0
Cbc0038I Pass   9: suminf.    0.96386 (3) obj. -118.598 iterations 6
Cbc0038I Pass  10: suminf.    0.24239 (1) obj. -118.598 iterations 4
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -118.598 iterations 1
Cbc0038I Solution found of -118.598
Cbc0038I Relaxing continuous gives -126.03
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -131.755
Cbc0038I Pass  12: suminf.    1.27145 (9) obj. -131.755 iterations 1
Cbc0038I Pass  13: suminf.    0.92035 (8) obj. -131.755 iterations 2
Cbc0038I Pass  14: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  15: suminf.    1.30822 (6) obj. -131.755 iterations 6
Cbc0038I Pass  16: suminf.    1.27019 (5) obj. -131.755 iterations 7
Cbc0038I Pass  17: suminf.    1.90994 (10) obj. -131.755 iterations 15
Cbc0038I Pass  18: suminf.    3.18725 (12) obj. -131.755 iterations 13
Cbc0038I Pass  19: suminf.    1.68813 (10) obj. -131.755 iterations 11
Cbc0038I Pass  20: suminf.    4.76410 (14) obj. -131.755 iterations 11
Cbc0038I Pass  21: suminf.    4.22608 (12) obj. -131.755 iterations 10
Cbc0038I Pass  22: suminf.    2.15928 (12) obj. -131.755 iterations 9
Cbc0038I Pass  23: suminf.    1.86694 (9) obj. -131.755 iterations 3
Cbc0038I Pass  24: suminf.    1.27145 (9) obj. -131.755 iterations 12
Cbc0038I Pass  25: suminf.    0.92035 (8) obj. -131.755 iterations 2
Cbc0038I Pass  26: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  27: suminf.    1.02844 (6) obj. -131.755 iterations 11
Cbc0038I Pass  28: suminf.    0.62585 (3) obj. -131.755 iterations 11
Cbc0038I Pass  29: suminf.    1.99511 (7) obj. -131.755 iterations 15
Cbc0038I Pass  30: suminf.    1.47478 (10) obj. -131.755 iterations 10
Cbc0038I Pass  31: suminf.    0.98319 (7) obj. -131.755 iterations 6
Cbc0038I Pass  32: suminf.    2.10659 (11) obj. -131.755 iterations 11
Cbc0038I Pass  33: suminf.    0.92035 (8) obj. -131.755 iterations 4
Cbc0038I Pass  34: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  35: suminf.    1.27145 (9) obj. -131.755 iterations 8
Cbc0038I Pass  36: suminf.    1.74017 (7) obj. -131.755 iterations 13
Cbc0038I Pass  37: suminf.    1.47478 (10) obj. -131.755 iterations 4
Cbc0038I Pass  38: suminf.    0.98319 (7) obj. -131.755 iterations 5
Cbc0038I Pass  39: suminf.    2.10659 (11) obj. -131.755 iterations 10
Cbc0038I Pass  40: suminf.    0.92035 (8) obj. -131.755 iterations 4
Cbc0038I Pass  41: suminf.    0.62585 (3) obj. -131.755 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 47 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -126.03 - took 0.04 seconds
Cbc0012I Integer solution of -126.02979 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 98 rows 55 columns, reduced to 36 rows 21 columns
Cbc0031I 9 added rows had average density of 35.222222
Cbc0013I At root node, 9 cuts changed objective from -154.65377 to -137.9778 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1206 row cuts average 3.1 elements, 4 column cuts (4 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 471 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -126.02979, took 1587 iterations and 6 nodes (0.22 seconds)
Cbc0032I Strong branching done 88 times (752 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-71) rows, 93 (-59) columns and 1293 (-2010) elements
Clp1000I sum of infeasibilities 2.33894e-07 - average 2.81801e-09, 57 fixed columns
Coin0506I Presolve 31 (-52) rows, 36 (-57) columns and 130 (-1163) elements
Clp0029I End of values pass after 36 iterations
Clp0000I Optimal - objective value 128.89587
Clp0000I Optimal - objective value 128.89587
Coin0511I After Postsolve, objective 128.89587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.6956541 - largest nonzero change 1.939037e-05 ( 0.00089819337%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 180.70678
Clp0000I Optimal - objective value 180.70678
Clp0000I Optimal - objective value 180.70678
Coin0511I After Postsolve, objective 180.70678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.7067823 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1301 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.619%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 8.43036
Cbc0038I Pass   1: suminf.    2.24757 (27) obj. -111.532 iterations 21
Cbc0038I Pass   2: suminf.    2.24757 (27) obj. -111.532 iterations 0
Cbc0038I Pass   3: suminf.    1.15884 (16) obj. -94.4336 iterations 11
Cbc0038I Solution found of -78.6724
Cbc0038I Rounding solution of -101.426 is better than previous of -78.6724

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -101.426 to -103.32 (0.03 seconds)
Cbc0038I Round again with cutoff of -110.02
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.24757 (27) obj. -111.532 iterations 0
Cbc0038I Pass   5: suminf.    2.24757 (27) obj. -111.532 iterations 0
Cbc0038I Pass   6: suminf.    0.73347 (3) obj. -110.02 iterations 54
Cbc0038I Pass   7: suminf.    0.73347 (3) obj. -110.02 iterations 0
Cbc0038I Pass   8: suminf.    0.92385 (3) obj. -110.02 iterations 13
Cbc0038I Pass   9: suminf.    0.40611 (1) obj. -110.02 iterations 2
Cbc0038I Pass  10: suminf.    0.22973 (2) obj. -116.93 iterations 3
Cbc0038I Pass  11: suminf.    0.44781 (1) obj. -110.02 iterations 5
Cbc0038I Pass  12: suminf.    0.44781 (1) obj. -110.02 iterations 0
Cbc0038I Pass  13: suminf.    1.23409 (9) obj. -110.02 iterations 18
Cbc0038I Pass  14: suminf.    0.94839 (7) obj. -110.02 iterations 10
Cbc0038I Pass  15: suminf.    0.65024 (5) obj. -110.02 iterations 11
Cbc0038I Pass  16: suminf.    0.70016 (7) obj. -110.02 iterations 13
Cbc0038I Pass  17: suminf.    0.70016 (7) obj. -110.02 iterations 0
Cbc0038I Pass  18: suminf.    1.05145 (5) obj. -110.02 iterations 14
Cbc0038I Pass  19: suminf.    1.05145 (5) obj. -110.02 iterations 0
Cbc0038I Pass  20: suminf.    0.23611 (1) obj. -110.02 iterations 9
Cbc0038I Solution found of -114.726
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 38 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -114.726 to -124.078 (0.05 seconds)
Cbc0038I Round again with cutoff of -133.327
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  21: suminf.    3.94521 (33) obj. -133.327 iterations 7
Cbc0038I Pass  22: suminf.    1.56111 (10) obj. -133.327 iterations 38
Cbc0038I Pass  23: suminf.    1.92728 (6) obj. -133.327 iterations 18
Cbc0038I Pass  24: suminf.    2.58554 (13) obj. -133.327 iterations 14
Cbc0038I Pass  25: suminf.    2.58554 (13) obj. -133.327 iterations 0
Cbc0038I Pass  26: suminf.    2.84578 (10) obj. -133.327 iterations 15
Cbc0038I Pass  27: suminf.    2.44696 (14) obj. -133.327 iterations 8
Cbc0038I Pass  28: suminf.    2.75607 (13) obj. -133.327 iterations 9
Cbc0038I Pass  29: suminf.    2.22391 (7) obj. -133.327 iterations 9
Cbc0038I Pass  30: suminf.    2.04480 (7) obj. -133.327 iterations 7
Cbc0038I Pass  31: suminf.    2.45877 (7) obj. -133.327 iterations 8
Cbc0038I Pass  32: suminf.    3.19381 (22) obj. -133.327 iterations 30
Cbc0038I Pass  33: suminf.    2.52312 (18) obj. -133.327 iterations 6
Cbc0038I Pass  34: suminf.    2.47145 (18) obj. -133.327 iterations 3
Cbc0038I Pass  35: suminf.    1.27758 (8) obj. -133.327 iterations 29
Cbc0038I Pass  36: suminf.    0.76544 (15) obj. -133.327 iterations 5
Cbc0038I Pass  37: suminf.    2.70025 (10) obj. -133.327 iterations 16
Cbc0038I Pass  38: suminf.    2.51085 (11) obj. -133.327 iterations 2
Cbc0038I Pass  39: suminf.    2.75073 (11) obj. -133.327 iterations 8
Cbc0038I Pass  40: suminf.    2.22391 (7) obj. -133.327 iterations 5
Cbc0038I Pass  41: suminf.    2.04480 (7) obj. -133.327 iterations 7
Cbc0038I Pass  42: suminf.    2.45877 (7) obj. -133.327 iterations 8
Cbc0038I Pass  43: suminf.    3.10973 (12) obj. -133.327 iterations 10
Cbc0038I Pass  44: suminf.    1.99646 (10) obj. -133.327 iterations 5
Cbc0038I Pass  45: suminf.    1.64645 (13) obj. -133.327 iterations 19
Cbc0038I Pass  46: suminf.    1.57009 (10) obj. -133.327 iterations 7
Cbc0038I Pass  47: suminf.    2.32975 (9) obj. -133.327 iterations 20
Cbc0038I Pass  48: suminf.    2.32975 (9) obj. -133.327 iterations 0
Cbc0038I Pass  49: suminf.    2.30875 (7) obj. -133.327 iterations 7
Cbc0038I Pass  50: suminf.    2.22391 (7) obj. -133.327 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -124.078 to -126.03 (0.09 seconds)
Cbc0038I Round again with cutoff of -144.425
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  50: suminf.    4.01087 (33) obj. -144.425 iterations 0
Cbc0038I Pass  51: suminf.    3.66408 (33) obj. -144.425 iterations 3
Cbc0038I Pass  52: suminf.    3.54016 (26) obj. -144.425 iterations 17
Cbc0038I Pass  53: suminf.    3.14570 (25) obj. -144.425 iterations 6
Cbc0038I Pass  54: suminf.    1.73635 (16) obj. -144.425 iterations 45
Cbc0038I Pass  55: suminf.    1.70257 (23) obj. -144.425 iterations 1
Cbc0038I Pass  56: suminf.    3.89358 (18) obj. -144.425 iterations 24
Cbc0038I Pass  57: suminf.    3.89358 (18) obj. -144.425 iterations 0
Cbc0038I Pass  58: suminf.    3.89450 (18) obj. -144.425 iterations 2
Cbc0038I Pass  59: suminf.    3.89450 (18) obj. -144.425 iterations 0
Cbc0038I Pass  60: suminf.    3.89358 (18) obj. -144.425 iterations 2
Cbc0038I Pass  61: suminf.    4.36251 (23) obj. -144.425 iterations 14
Cbc0038I Pass  62: suminf.    4.12124 (21) obj. -144.425 iterations 2
Cbc0038I Pass  63: suminf.    4.04327 (18) obj. -144.425 iterations 7
Cbc0038I Pass  64: suminf.    3.61603 (20) obj. -144.425 iterations 6
Cbc0038I Pass  65: suminf.    3.89358 (18) obj. -144.425 iterations 12
Cbc0038I Pass  66: suminf.    3.89358 (18) obj. -144.425 iterations 0
Cbc0038I Pass  67: suminf.    3.89450 (18) obj. -144.425 iterations 2
Cbc0038I Pass  68: suminf.    3.89450 (18) obj. -144.425 iterations 0
Cbc0038I Pass  69: suminf.    3.89358 (18) obj. -144.425 iterations 4
Cbc0038I Pass  70: suminf.    3.88705 (21) obj. -144.425 iterations 8
Cbc0038I Pass  71: suminf.    3.56236 (16) obj. -144.425 iterations 5
Cbc0038I Pass  72: suminf.    3.37049 (16) obj. -144.425 iterations 5
Cbc0038I Pass  73: suminf.    4.03820 (18) obj. -144.425 iterations 13
Cbc0038I Pass  74: suminf.    3.60099 (20) obj. -144.425 iterations 5
Cbc0038I Pass  75: suminf.    4.63149 (18) obj. -144.425 iterations 6
Cbc0038I Pass  76: suminf.    4.54054 (17) obj. -144.425 iterations 9
Cbc0038I Pass  77: suminf.    3.56121 (17) obj. -144.425 iterations 6
Cbc0038I Pass  78: suminf.    4.36221 (17) obj. -144.425 iterations 16
Cbc0038I Pass  79: suminf.    3.53612 (20) obj. -144.425 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -126.03 - took 0.07 seconds
Cbc0012I Integer solution of -126.02979 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 85 rows 95 columns, reduced to 17 rows 18 columns
Cbc0031I 25 added rows had average density of 12.68
Cbc0013I At root node, 25 cuts changed objective from -170.32138 to -129.95097 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 350 row cuts average 2.1 elements, 21 column cuts (21 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 116 row cuts average 37.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 31.3 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -126.02979 best solution, best possible -129.6479 (0.39 seconds)
Cbc0001I Search completed - best objective -126.02979, took 551 iterations and 10 nodes (0.73 seconds)
Cbc0032I Strong branching done 132 times (1024 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 3, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.74

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 55 (-23) columns and 300 (-153) elements
Clp1000I sum of infeasibilities 0.000147159 - average 1.50162e-06, 23 fixed columns
Coin0506I Presolve 49 (-49) rows, 28 (-27) columns and 148 (-152) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 0.60528085 - largest nonzero change 0 ( 0%) - largest zero change 2.7495377e-05
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Coin0511I After Postsolve, objective 154.65377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Coin0511I After Postsolve, objective 154.65377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.6537734 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 98 rows, 55 columns (54 integer (54 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.572%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.53182
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -78.6724 iterations 19
Cbc0038I Solution found of -78.6724
Cbc0038I Relaxing continuous gives -78.6724
Cbc0038I Rounding solution of -92.5734 is better than previous of -78.6724

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -92.5734 to -114.591 (0.02 seconds)
Cbc0038I Round again with cutoff of -118.598
Cbc0038I Pass   2: suminf.    0.61013 (8) obj. -118.598 iterations 7
Cbc0038I Pass   3: suminf.    0.24724 (2) obj. -118.598 iterations 8
Cbc0038I Pass   4: suminf.    0.33200 (2) obj. -118.598 iterations 1
Cbc0038I Pass   5: suminf.    0.90895 (4) obj. -118.598 iterations 11
Cbc0038I Pass   6: suminf.    0.90895 (4) obj. -118.598 iterations 4
Cbc0038I Pass   7: suminf.    0.53921 (4) obj. -118.598 iterations 7
Cbc0038I Pass   8: suminf.    0.53921 (4) obj. -118.598 iterations 0
Cbc0038I Pass   9: suminf.    0.96386 (3) obj. -118.598 iterations 6
Cbc0038I Pass  10: suminf.    0.24239 (1) obj. -118.598 iterations 4
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -118.598 iterations 1
Cbc0038I Solution found of -118.598
Cbc0038I Relaxing continuous gives -126.03
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -131.755
Cbc0038I Pass  12: suminf.    1.27145 (9) obj. -131.755 iterations 1
Cbc0038I Pass  13: suminf.    0.92035 (8) obj. -131.755 iterations 2
Cbc0038I Pass  14: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  15: suminf.    1.30822 (6) obj. -131.755 iterations 6
Cbc0038I Pass  16: suminf.    1.27019 (5) obj. -131.755 iterations 7
Cbc0038I Pass  17: suminf.    1.90994 (10) obj. -131.755 iterations 15
Cbc0038I Pass  18: suminf.    3.18725 (12) obj. -131.755 iterations 13
Cbc0038I Pass  19: suminf.    1.68813 (10) obj. -131.755 iterations 11
Cbc0038I Pass  20: suminf.    4.76410 (14) obj. -131.755 iterations 11
Cbc0038I Pass  21: suminf.    4.22608 (12) obj. -131.755 iterations 10
Cbc0038I Pass  22: suminf.    2.15928 (12) obj. -131.755 iterations 9
Cbc0038I Pass  23: suminf.    1.86694 (9) obj. -131.755 iterations 3
Cbc0038I Pass  24: suminf.    1.27145 (9) obj. -131.755 iterations 12
Cbc0038I Pass  25: suminf.    0.92035 (8) obj. -131.755 iterations 2
Cbc0038I Pass  26: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  27: suminf.    1.02844 (6) obj. -131.755 iterations 11
Cbc0038I Pass  28: suminf.    0.62585 (3) obj. -131.755 iterations 11
Cbc0038I Pass  29: suminf.    1.99511 (7) obj. -131.755 iterations 15
Cbc0038I Pass  30: suminf.    1.47478 (10) obj. -131.755 iterations 10
Cbc0038I Pass  31: suminf.    0.98319 (7) obj. -131.755 iterations 6
Cbc0038I Pass  32: suminf.    2.10659 (11) obj. -131.755 iterations 11
Cbc0038I Pass  33: suminf.    0.92035 (8) obj. -131.755 iterations 4
Cbc0038I Pass  34: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  35: suminf.    1.27145 (9) obj. -131.755 iterations 8
Cbc0038I Pass  36: suminf.    1.74017 (7) obj. -131.755 iterations 13
Cbc0038I Pass  37: suminf.    1.47478 (10) obj. -131.755 iterations 4
Cbc0038I Pass  38: suminf.    0.98319 (7) obj. -131.755 iterations 5
Cbc0038I Pass  39: suminf.    2.10659 (11) obj. -131.755 iterations 10
Cbc0038I Pass  40: suminf.    0.92035 (8) obj. -131.755 iterations 4
Cbc0038I Pass  41: suminf.    0.62585 (3) obj. -131.755 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 47 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -126.03 - took 0.04 seconds
Cbc0012I Integer solution of -126.02979 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 98 rows 55 columns, reduced to 36 rows 21 columns
Cbc0031I 9 added rows had average density of 35.222222
Cbc0013I At root node, 9 cuts changed objective from -154.65377 to -137.9778 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1206 row cuts average 3.1 elements, 4 column cuts (4 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 471 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -126.02979, took 1587 iterations and 6 nodes (0.24 seconds)
Cbc0032I Strong branching done 88 times (752 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-72) rows, 93 (-60) columns and 1293 (-2011) elements
Clp1000I sum of infeasibilities 2.33894e-07 - average 2.81801e-09, 57 fixed columns
Coin0506I Presolve 31 (-52) rows, 36 (-57) columns and 130 (-1163) elements
Clp0029I End of values pass after 36 iterations
Clp0000I Optimal - objective value 128.89587
Clp0000I Optimal - objective value 128.89587
Coin0511I After Postsolve, objective 128.89587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.6956541 - largest nonzero change 1.939037e-05 ( 0.00089819337%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 180.70678
Clp0000I Optimal - objective value 180.70678
Clp0000I Optimal - objective value 180.70678
Coin0511I After Postsolve, objective 180.70678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.7067823 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1301 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.619%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 8.43036
Cbc0038I Pass   1: suminf.    2.24757 (27) obj. -111.532 iterations 21
Cbc0038I Pass   2: suminf.    2.24757 (27) obj. -111.532 iterations 0
Cbc0038I Pass   3: suminf.    1.15884 (16) obj. -94.4336 iterations 11
Cbc0038I Solution found of -78.6724
Cbc0038I Rounding solution of -101.426 is better than previous of -78.6724

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -101.426 to -103.32 (0.03 seconds)
Cbc0038I Round again with cutoff of -110.02
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.24757 (27) obj. -111.532 iterations 0
Cbc0038I Pass   5: suminf.    2.24757 (27) obj. -111.532 iterations 0
Cbc0038I Pass   6: suminf.    0.73347 (3) obj. -110.02 iterations 54
Cbc0038I Pass   7: suminf.    0.73347 (3) obj. -110.02 iterations 0
Cbc0038I Pass   8: suminf.    0.92385 (3) obj. -110.02 iterations 13
Cbc0038I Pass   9: suminf.    0.40611 (1) obj. -110.02 iterations 2
Cbc0038I Pass  10: suminf.    0.22973 (2) obj. -116.93 iterations 3
Cbc0038I Pass  11: suminf.    0.44781 (1) obj. -110.02 iterations 5
Cbc0038I Pass  12: suminf.    0.44781 (1) obj. -110.02 iterations 0
Cbc0038I Pass  13: suminf.    1.23409 (9) obj. -110.02 iterations 18
Cbc0038I Pass  14: suminf.    0.94839 (7) obj. -110.02 iterations 10
Cbc0038I Pass  15: suminf.    0.65024 (5) obj. -110.02 iterations 11
Cbc0038I Pass  16: suminf.    0.70016 (7) obj. -110.02 iterations 13
Cbc0038I Pass  17: suminf.    0.70016 (7) obj. -110.02 iterations 0
Cbc0038I Pass  18: suminf.    1.05145 (5) obj. -110.02 iterations 14
Cbc0038I Pass  19: suminf.    1.05145 (5) obj. -110.02 iterations 0
Cbc0038I Pass  20: suminf.    0.23611 (1) obj. -110.02 iterations 9
Cbc0038I Solution found of -114.726
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 38 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -114.726 to -124.078 (0.05 seconds)
Cbc0038I Round again with cutoff of -133.327
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  21: suminf.    3.94521 (33) obj. -133.327 iterations 7
Cbc0038I Pass  22: suminf.    1.56111 (10) obj. -133.327 iterations 38
Cbc0038I Pass  23: suminf.    1.92728 (6) obj. -133.327 iterations 18
Cbc0038I Pass  24: suminf.    2.58554 (13) obj. -133.327 iterations 14
Cbc0038I Pass  25: suminf.    2.58554 (13) obj. -133.327 iterations 0
Cbc0038I Pass  26: suminf.    2.84578 (10) obj. -133.327 iterations 15
Cbc0038I Pass  27: suminf.    2.44696 (14) obj. -133.327 iterations 8
Cbc0038I Pass  28: suminf.    2.75607 (13) obj. -133.327 iterations 9
Cbc0038I Pass  29: suminf.    2.22391 (7) obj. -133.327 iterations 9
Cbc0038I Pass  30: suminf.    2.04480 (7) obj. -133.327 iterations 7
Cbc0038I Pass  31: suminf.    2.45877 (7) obj. -133.327 iterations 8
Cbc0038I Pass  32: suminf.    3.19381 (22) obj. -133.327 iterations 30
Cbc0038I Pass  33: suminf.    2.52312 (18) obj. -133.327 iterations 6
Cbc0038I Pass  34: suminf.    2.47145 (18) obj. -133.327 iterations 3
Cbc0038I Pass  35: suminf.    1.27758 (8) obj. -133.327 iterations 29
Cbc0038I Pass  36: suminf.    0.76544 (15) obj. -133.327 iterations 5
Cbc0038I Pass  37: suminf.    2.70025 (10) obj. -133.327 iterations 16
Cbc0038I Pass  38: suminf.    2.51085 (11) obj. -133.327 iterations 2
Cbc0038I Pass  39: suminf.    2.75073 (11) obj. -133.327 iterations 8
Cbc0038I Pass  40: suminf.    2.22391 (7) obj. -133.327 iterations 5
Cbc0038I Pass  41: suminf.    2.04480 (7) obj. -133.327 iterations 7
Cbc0038I Pass  42: suminf.    2.45877 (7) obj. -133.327 iterations 8
Cbc0038I Pass  43: suminf.    3.10973 (12) obj. -133.327 iterations 10
Cbc0038I Pass  44: suminf.    1.99646 (10) obj. -133.327 iterations 5
Cbc0038I Pass  45: suminf.    1.64645 (13) obj. -133.327 iterations 19
Cbc0038I Pass  46: suminf.    1.57009 (10) obj. -133.327 iterations 7
Cbc0038I Pass  47: suminf.    2.32975 (9) obj. -133.327 iterations 20
Cbc0038I Pass  48: suminf.    2.32975 (9) obj. -133.327 iterations 0
Cbc0038I Pass  49: suminf.    2.30875 (7) obj. -133.327 iterations 7
Cbc0038I Pass  50: suminf.    2.22391 (7) obj. -133.327 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -124.078 to -126.03 (0.09 seconds)
Cbc0038I Round again with cutoff of -144.425
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  50: suminf.    4.01087 (33) obj. -144.425 iterations 0
Cbc0038I Pass  51: suminf.    3.66408 (33) obj. -144.425 iterations 3
Cbc0038I Pass  52: suminf.    3.54016 (26) obj. -144.425 iterations 17
Cbc0038I Pass  53: suminf.    3.14570 (25) obj. -144.425 iterations 6
Cbc0038I Pass  54: suminf.    1.73635 (16) obj. -144.425 iterations 45
Cbc0038I Pass  55: suminf.    1.70257 (23) obj. -144.425 iterations 1
Cbc0038I Pass  56: suminf.    3.89358 (18) obj. -144.425 iterations 24
Cbc0038I Pass  57: suminf.    3.89358 (18) obj. -144.425 iterations 0
Cbc0038I Pass  58: suminf.    3.89450 (18) obj. -144.425 iterations 2
Cbc0038I Pass  59: suminf.    3.89450 (18) obj. -144.425 iterations 0
Cbc0038I Pass  60: suminf.    3.89358 (18) obj. -144.425 iterations 2
Cbc0038I Pass  61: suminf.    4.36251 (23) obj. -144.425 iterations 14
Cbc0038I Pass  62: suminf.    4.12124 (21) obj. -144.425 iterations 2
Cbc0038I Pass  63: suminf.    4.04327 (18) obj. -144.425 iterations 7
Cbc0038I Pass  64: suminf.    3.61603 (20) obj. -144.425 iterations 6
Cbc0038I Pass  65: suminf.    3.89358 (18) obj. -144.425 iterations 12
Cbc0038I Pass  66: suminf.    3.89358 (18) obj. -144.425 iterations 0
Cbc0038I Pass  67: suminf.    3.89450 (18) obj. -144.425 iterations 2
Cbc0038I Pass  68: suminf.    3.89450 (18) obj. -144.425 iterations 0
Cbc0038I Pass  69: suminf.    3.89358 (18) obj. -144.425 iterations 4
Cbc0038I Pass  70: suminf.    3.88705 (21) obj. -144.425 iterations 8
Cbc0038I Pass  71: suminf.    3.56236 (16) obj. -144.425 iterations 5
Cbc0038I Pass  72: suminf.    3.37049 (16) obj. -144.425 iterations 5
Cbc0038I Pass  73: suminf.    4.03820 (18) obj. -144.425 iterations 13
Cbc0038I Pass  74: suminf.    3.60099 (20) obj. -144.425 iterations 5
Cbc0038I Pass  75: suminf.    4.63149 (18) obj. -144.425 iterations 6
Cbc0038I Pass  76: suminf.    4.54054 (17) obj. -144.425 iterations 9
Cbc0038I Pass  77: suminf.    3.56121 (17) obj. -144.425 iterations 6
Cbc0038I Pass  78: suminf.    4.36221 (17) obj. -144.425 iterations 16
Cbc0038I Pass  79: suminf.    3.53612 (20) obj. -144.425 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -126.03 - took 0.08 seconds
Cbc0012I Integer solution of -126.02979 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 85 rows 95 columns, reduced to 17 rows 18 columns
Cbc0031I 25 added rows had average density of 12.68
Cbc0013I At root node, 25 cuts changed objective from -170.32138 to -129.95097 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 350 row cuts average 2.1 elements, 21 column cuts (21 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 116 row cuts average 37.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 31.3 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -126.02979 best solution, best possible -129.6479 (0.40 seconds)
Cbc0001I Search completed - best objective -126.02979, took 551 iterations and 10 nodes (0.73 seconds)
Cbc0032I Strong branching done 132 times (1024 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 3, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.73

