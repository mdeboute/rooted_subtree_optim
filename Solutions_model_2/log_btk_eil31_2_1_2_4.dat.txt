Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.9633e-05 - average 3.92661e-07, 3 fixed columns
Coin0506I Presolve 43 (-7) rows, 24 (-4) columns and 126 (-22) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Coin0511I After Postsolve, objective 68.879096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Coin0511I After Postsolve, objective 68.879096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.87909649 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.99571
Cbc0038I Solution found of 0.893823
Cbc0038I Relaxing continuous gives 0.27723
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 0.27723 to -36.2875 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.4862
Cbc0038I Pass   1: suminf.    1.39153 (4) obj. -39.4862 iterations 22
Cbc0038I Pass   2: suminf.    0.56705 (2) obj. -39.4862 iterations 8
Cbc0038I Pass   3: suminf.    0.40405 (2) obj. -39.4862 iterations 5
Cbc0038I Pass   4: suminf.    0.94925 (3) obj. -39.4862 iterations 3
Cbc0038I Pass   5: suminf.    1.42067 (6) obj. -39.4862 iterations 7
Cbc0038I Pass   6: suminf.    1.21565 (7) obj. -39.4862 iterations 7
Cbc0038I Pass   7: suminf.    0.61538 (2) obj. -39.4862 iterations 8
Cbc0038I Pass   8: suminf.    0.53356 (2) obj. -39.4862 iterations 1
Cbc0038I Pass   9: suminf.    0.72908 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  10: suminf.    0.65364 (5) obj. -39.4862 iterations 6
Cbc0038I Pass  11: suminf.    0.65364 (5) obj. -39.4862 iterations 2
Cbc0038I Pass  12: suminf.    1.27877 (5) obj. -39.4862 iterations 13
Cbc0038I Pass  13: suminf.    1.22640 (3) obj. -39.4862 iterations 6
Cbc0038I Pass  14: suminf.    0.71399 (2) obj. -45.3879 iterations 2
Cbc0038I Pass  15: suminf.    0.60474 (3) obj. -39.4862 iterations 2
Cbc0038I Pass  16: suminf.    0.59855 (3) obj. -39.4862 iterations 2
Cbc0038I Pass  17: suminf.    0.65228 (3) obj. -39.4862 iterations 6
Cbc0038I Pass  18: suminf.    0.45515 (4) obj. -39.4862 iterations 4
Cbc0038I Pass  19: suminf.    0.60609 (2) obj. -39.4862 iterations 5
Cbc0038I Pass  20: suminf.    0.41282 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  21: suminf.    0.74520 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  22: suminf.    1.05340 (5) obj. -39.4862 iterations 10
Cbc0038I Pass  23: suminf.    1.05340 (5) obj. -39.4862 iterations 3
Cbc0038I Pass  24: suminf.    0.66408 (2) obj. -39.4862 iterations 8
Cbc0038I Pass  25: suminf.    0.70897 (2) obj. -39.4862 iterations 2
Cbc0038I Pass  26: suminf.    1.21755 (5) obj. -39.4862 iterations 8
Cbc0038I Pass  27: suminf.    1.04487 (5) obj. -39.4862 iterations 5
Cbc0038I Pass  28: suminf.    0.82003 (3) obj. -39.4862 iterations 7
Cbc0038I Pass  29: suminf.    0.82003 (3) obj. -39.4862 iterations 0
Cbc0038I Pass  30: suminf.    0.85117 (3) obj. -39.4862 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -36.2875 to -39.126 (0.04 seconds)
Cbc0038I Round again with cutoff of -45.2437
Cbc0038I Pass  30: suminf.    1.42972 (4) obj. -45.2437 iterations 0
Cbc0038I Pass  31: suminf.    1.18413 (4) obj. -45.2437 iterations 9
Cbc0038I Pass  32: suminf.    0.70543 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  33: suminf.    0.50628 (2) obj. -45.2437 iterations 2
Cbc0038I Pass  34: suminf.    0.94624 (3) obj. -45.2437 iterations 2
Cbc0038I Pass  35: suminf.    0.93728 (3) obj. -45.2437 iterations 2
Cbc0038I Pass  36: suminf.    2.80924 (10) obj. -45.2437 iterations 16
Cbc0038I Pass  37: suminf.    1.02492 (5) obj. -45.2437 iterations 9
Cbc0038I Pass  38: suminf.    0.55343 (2) obj. -45.2437 iterations 6
Cbc0038I Pass  39: suminf.    1.06183 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  40: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I Pass  41: suminf.    0.71428 (3) obj. -45.2437 iterations 5
Cbc0038I Pass  42: suminf.    1.02837 (4) obj. -45.2437 iterations 9
Cbc0038I Pass  43: suminf.    1.02837 (4) obj. -45.2437 iterations 1
Cbc0038I Pass  44: suminf.    0.55343 (2) obj. -45.2437 iterations 3
Cbc0038I Pass  45: suminf.    1.06183 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  46: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I Pass  47: suminf.    1.30789 (7) obj. -45.2437 iterations 12
Cbc0038I Pass  48: suminf.    1.08135 (6) obj. -45.2437 iterations 4
Cbc0038I Pass  49: suminf.    1.00734 (4) obj. -45.2437 iterations 10
Cbc0038I Pass  50: suminf.    0.98458 (4) obj. -45.2437 iterations 2
Cbc0038I Pass  51: suminf.    1.08420 (5) obj. -45.2437 iterations 10
Cbc0038I Pass  52: suminf.    1.02692 (4) obj. -45.2437 iterations 5
Cbc0038I Pass  53: suminf.    1.13538 (3) obj. -45.2437 iterations 5
Cbc0038I Pass  54: suminf.    1.13538 (3) obj. -45.2437 iterations 0
Cbc0038I Pass  55: suminf.    1.16773 (4) obj. -45.2437 iterations 6
Cbc0038I Pass  56: suminf.    1.00445 (4) obj. -45.2437 iterations 5
Cbc0038I Pass  57: suminf.    1.06183 (3) obj. -45.2437 iterations 7
Cbc0038I Pass  58: suminf.    1.06183 (3) obj. -45.2437 iterations 0
Cbc0038I Pass  59: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.126 - took 0.08 seconds
Cbc0012I Integer solution of -39.12596 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 34 rows 20 columns
Cbc0031I 11 added rows had average density of 17.727273
Cbc0013I At root node, 11 cuts changed objective from -68.273458 to -50.579992 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1349 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 494 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -39.12596000000001, took 2486 iterations and 8 nodes (0.21 seconds)
Cbc0032I Strong branching done 100 times (1040 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 2, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-20) rows, 48 (-14) columns and 417 (-229) elements
Clp1000I sum of infeasibilities 7.0326e-08 - average 1.63549e-09, 7 fixed columns
Coin0506I Presolve 38 (-5) rows, 41 (-7) columns and 325 (-92) elements
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 1.3836094 - largest nonzero change 1.9550201e-05 ( 0.0018056464%) - largest zero change 2.7662378e-05
Clp0000I Optimal - objective value 77.45697
Clp0000I Optimal - objective value 77.45697
Coin0511I After Postsolve, objective 77.45697, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.45697
Clp0000I Optimal - objective value 77.45697
Clp0000I Optimal - objective value 77.45697
Coin0511I After Postsolve, objective 77.45697, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.45697026 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 47 columns (47 integer (47 of which binary)) and 403 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.093%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.45587
Cbc0038I Pass   1: suminf.    2.23074 (9) obj. -48.0926 iterations 19
Cbc0038I Solution found of -32.1407
Cbc0038I Rounding solution of -36.1351 is better than previous of -32.1407

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -38.5313
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.23074 (9) obj. -48.0926 iterations 0
Cbc0038I Pass   3: suminf.    0.17399 (1) obj. -38.5313 iterations 15
Cbc0038I Pass   4: suminf.    0.28455 (1) obj. -42.5922 iterations 1
Cbc0038I Pass   5: suminf.    1.05175 (3) obj. -38.5313 iterations 9
Cbc0038I Pass   6: suminf.    0.52308 (3) obj. -41.9549 iterations 6
Cbc0038I Pass   7: suminf.    0.97699 (3) obj. -38.5313 iterations 4
Cbc0038I Pass   8: suminf.    0.59439 (2) obj. -40.6344 iterations 2
Cbc0038I Pass   9: suminf.    1.08107 (3) obj. -38.5313 iterations 2
Cbc0038I Pass  10: suminf.    0.65054 (2) obj. -38.5313 iterations 1
Cbc0038I Pass  11: suminf.    2.22333 (7) obj. -38.5313 iterations 12
Cbc0038I Pass  12: suminf.    1.01768 (5) obj. -38.5313 iterations 5
Cbc0038I Pass  13: suminf.    0.41666 (3) obj. -38.5313 iterations 4
Cbc0038I Pass  14: suminf.    0.09172 (2) obj. -38.5313 iterations 5
Cbc0038I Pass  15: suminf.    0.10093 (2) obj. -38.8667 iterations 1
Cbc0038I Pass  16: suminf.    0.79152 (4) obj. -38.5313 iterations 8
Cbc0038I Pass  17: suminf.    0.79152 (4) obj. -38.5313 iterations 0
Cbc0038I Pass  18: suminf.    0.87252 (4) obj. -38.5313 iterations 3
Cbc0038I Pass  19: suminf.    0.85533 (4) obj. -38.5313 iterations 1
Cbc0038I Pass  20: suminf.    0.34186 (4) obj. -38.5313 iterations 5
Cbc0038I Pass  21: suminf.    0.34186 (4) obj. -38.5313 iterations 0
Cbc0038I Pass  22: suminf.    1.04611 (3) obj. -38.5313 iterations 3
Cbc0038I Pass  23: suminf.    0.93545 (3) obj. -38.5313 iterations 2
Cbc0038I Pass  24: suminf.    0.76180 (3) obj. -38.5313 iterations 2
Cbc0038I Pass  25: suminf.    0.76180 (3) obj. -38.5313 iterations 0
Cbc0038I Pass  26: suminf.    1.19592 (3) obj. -42.0043 iterations 1
Cbc0038I Pass  27: suminf.    2.71015 (8) obj. -38.5313 iterations 10
Cbc0038I Pass  28: suminf.    1.11337 (4) obj. -38.5313 iterations 8
Cbc0038I Pass  29: suminf.    1.11337 (4) obj. -38.5313 iterations 0
Cbc0038I Pass  30: suminf.    1.13215 (4) obj. -38.5313 iterations 7
Cbc0038I Pass  31: suminf.    1.02522 (4) obj. -38.5313 iterations 5
Cbc0038I Rounding solution of -39.126 is better than previous of -36.1351

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 25 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -43.3201
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.23074 (9) obj. -48.0926 iterations 0
Cbc0038I Pass  32: suminf.    0.34253 (3) obj. -43.3201 iterations 15
Cbc0038I Pass  33: suminf.    0.48427 (3) obj. -43.3201 iterations 3
Cbc0038I Pass  34: suminf.    0.48427 (3) obj. -43.3201 iterations 0
Cbc0038I Pass  35: suminf.    0.44710 (3) obj. -45.8654 iterations 1
Cbc0038I Pass  36: suminf.    0.29642 (2) obj. -43.3201 iterations 4
Cbc0038I Pass  37: suminf.    0.48427 (3) obj. -43.3201 iterations 3
Cbc0038I Pass  38: suminf.    3.02169 (11) obj. -43.3201 iterations 23
Cbc0038I Pass  39: suminf.    2.73024 (9) obj. -43.3201 iterations 3
Cbc0038I Pass  40: suminf.    1.53528 (5) obj. -43.3201 iterations 6
Cbc0038I Pass  41: suminf.    0.99013 (6) obj. -43.3201 iterations 10
Cbc0038I Pass  42: suminf.    0.99013 (6) obj. -43.3201 iterations 1
Cbc0038I Pass  43: suminf.    1.54329 (4) obj. -43.3201 iterations 7
Cbc0038I Pass  44: suminf.    1.16813 (4) obj. -43.3201 iterations 3
Cbc0038I Pass  45: suminf.    0.82450 (3) obj. -43.3201 iterations 4
Cbc0038I Pass  46: suminf.    0.82450 (3) obj. -43.3201 iterations 0
Cbc0038I Pass  47: suminf.    0.83712 (3) obj. -43.4211 iterations 1
Cbc0038I Pass  48: suminf.    2.07357 (6) obj. -43.3201 iterations 10
Cbc0038I Pass  49: suminf.    1.46803 (5) obj. -43.3201 iterations 9
Cbc0038I Pass  50: suminf.    2.32646 (7) obj. -43.3201 iterations 7
Cbc0038I Pass  51: suminf.    1.71623 (7) obj. -43.3201 iterations 5
Cbc0038I Pass  52: suminf.    1.70812 (5) obj. -43.3201 iterations 7
Cbc0038I Pass  53: suminf.    1.70812 (5) obj. -43.3201 iterations 0
Cbc0038I Pass  54: suminf.    1.29662 (4) obj. -43.3201 iterations 3
Cbc0038I Pass  55: suminf.    1.29491 (4) obj. -43.3201 iterations 1
Cbc0038I Pass  56: suminf.    1.31896 (4) obj. -43.3201 iterations 2
Cbc0038I Pass  57: suminf.    2.30155 (7) obj. -43.3201 iterations 4
Cbc0038I Pass  58: suminf.    2.30155 (7) obj. -43.3201 iterations 0
Cbc0038I Pass  59: suminf.    3.00682 (10) obj. -43.3201 iterations 8
Cbc0038I Pass  60: suminf.    3.00682 (10) obj. -43.3201 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -39.126 - took 0.01 seconds
Cbc0012I Integer solution of -39.12596 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 41 rows 47 columns, reduced to 3 rows 6 columns
Cbc0031I 11 added rows had average density of 19
Cbc0013I At root node, 11 cuts changed objective from -60.096318 to -41.975231 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 802 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 370 row cuts average 31.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 233 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 82 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 166 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 230 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.723 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.12596 best solution, best possible -41.975231 (1.52 seconds)
Cbc0001I Search completed - best objective -39.12596000000001, took 1691 iterations and 4 nodes (1.75 seconds)
Cbc0032I Strong branching done 58 times (625 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.9633e-05 - average 3.92661e-07, 3 fixed columns
Coin0506I Presolve 43 (-7) rows, 24 (-4) columns and 126 (-22) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Coin0511I After Postsolve, objective 68.879096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Coin0511I After Postsolve, objective 68.879096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.87909649 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.99571
Cbc0038I Solution found of 0.893823
Cbc0038I Relaxing continuous gives 0.27723
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 0.27723 to -36.2875 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.4862
Cbc0038I Pass   1: suminf.    1.39153 (4) obj. -39.4862 iterations 22
Cbc0038I Pass   2: suminf.    0.56705 (2) obj. -39.4862 iterations 8
Cbc0038I Pass   3: suminf.    0.40405 (2) obj. -39.4862 iterations 5
Cbc0038I Pass   4: suminf.    0.94925 (3) obj. -39.4862 iterations 3
Cbc0038I Pass   5: suminf.    1.42067 (6) obj. -39.4862 iterations 7
Cbc0038I Pass   6: suminf.    1.21565 (7) obj. -39.4862 iterations 7
Cbc0038I Pass   7: suminf.    0.61538 (2) obj. -39.4862 iterations 8
Cbc0038I Pass   8: suminf.    0.53356 (2) obj. -39.4862 iterations 1
Cbc0038I Pass   9: suminf.    0.72908 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  10: suminf.    0.65364 (5) obj. -39.4862 iterations 6
Cbc0038I Pass  11: suminf.    0.65364 (5) obj. -39.4862 iterations 2
Cbc0038I Pass  12: suminf.    1.27877 (5) obj. -39.4862 iterations 13
Cbc0038I Pass  13: suminf.    1.22640 (3) obj. -39.4862 iterations 6
Cbc0038I Pass  14: suminf.    0.71399 (2) obj. -45.3879 iterations 2
Cbc0038I Pass  15: suminf.    0.60474 (3) obj. -39.4862 iterations 2
Cbc0038I Pass  16: suminf.    0.59855 (3) obj. -39.4862 iterations 2
Cbc0038I Pass  17: suminf.    0.65228 (3) obj. -39.4862 iterations 6
Cbc0038I Pass  18: suminf.    0.45515 (4) obj. -39.4862 iterations 4
Cbc0038I Pass  19: suminf.    0.60609 (2) obj. -39.4862 iterations 5
Cbc0038I Pass  20: suminf.    0.41282 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  21: suminf.    0.74520 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  22: suminf.    1.05340 (5) obj. -39.4862 iterations 10
Cbc0038I Pass  23: suminf.    1.05340 (5) obj. -39.4862 iterations 3
Cbc0038I Pass  24: suminf.    0.66408 (2) obj. -39.4862 iterations 8
Cbc0038I Pass  25: suminf.    0.70897 (2) obj. -39.4862 iterations 2
Cbc0038I Pass  26: suminf.    1.21755 (5) obj. -39.4862 iterations 8
Cbc0038I Pass  27: suminf.    1.04487 (5) obj. -39.4862 iterations 5
Cbc0038I Pass  28: suminf.    0.82003 (3) obj. -39.4862 iterations 7
Cbc0038I Pass  29: suminf.    0.82003 (3) obj. -39.4862 iterations 0
Cbc0038I Pass  30: suminf.    0.85117 (3) obj. -39.4862 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -36.2875 to -39.126 (0.04 seconds)
Cbc0038I Round again with cutoff of -45.2437
Cbc0038I Pass  30: suminf.    1.42972 (4) obj. -45.2437 iterations 0
Cbc0038I Pass  31: suminf.    1.18413 (4) obj. -45.2437 iterations 9
Cbc0038I Pass  32: suminf.    0.70543 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  33: suminf.    0.50628 (2) obj. -45.2437 iterations 2
Cbc0038I Pass  34: suminf.    0.94624 (3) obj. -45.2437 iterations 2
Cbc0038I Pass  35: suminf.    0.93728 (3) obj. -45.2437 iterations 2
Cbc0038I Pass  36: suminf.    2.80924 (10) obj. -45.2437 iterations 16
Cbc0038I Pass  37: suminf.    1.02492 (5) obj. -45.2437 iterations 9
Cbc0038I Pass  38: suminf.    0.55343 (2) obj. -45.2437 iterations 6
Cbc0038I Pass  39: suminf.    1.06183 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  40: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I Pass  41: suminf.    0.71428 (3) obj. -45.2437 iterations 5
Cbc0038I Pass  42: suminf.    1.02837 (4) obj. -45.2437 iterations 9
Cbc0038I Pass  43: suminf.    1.02837 (4) obj. -45.2437 iterations 1
Cbc0038I Pass  44: suminf.    0.55343 (2) obj. -45.2437 iterations 3
Cbc0038I Pass  45: suminf.    1.06183 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  46: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I Pass  47: suminf.    1.30789 (7) obj. -45.2437 iterations 12
Cbc0038I Pass  48: suminf.    1.08135 (6) obj. -45.2437 iterations 4
Cbc0038I Pass  49: suminf.    1.00734 (4) obj. -45.2437 iterations 10
Cbc0038I Pass  50: suminf.    0.98458 (4) obj. -45.2437 iterations 2
Cbc0038I Pass  51: suminf.    1.08420 (5) obj. -45.2437 iterations 10
Cbc0038I Pass  52: suminf.    1.02692 (4) obj. -45.2437 iterations 5
Cbc0038I Pass  53: suminf.    1.13538 (3) obj. -45.2437 iterations 5
Cbc0038I Pass  54: suminf.    1.13538 (3) obj. -45.2437 iterations 0
Cbc0038I Pass  55: suminf.    1.16773 (4) obj. -45.2437 iterations 6
Cbc0038I Pass  56: suminf.    1.00445 (4) obj. -45.2437 iterations 5
Cbc0038I Pass  57: suminf.    1.06183 (3) obj. -45.2437 iterations 7
Cbc0038I Pass  58: suminf.    1.06183 (3) obj. -45.2437 iterations 0
Cbc0038I Pass  59: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.126 - took 0.04 seconds
Cbc0012I Integer solution of -39.12596 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 34 rows 20 columns
Cbc0031I 11 added rows had average density of 17.727273
Cbc0013I At root node, 11 cuts changed objective from -68.273458 to -50.579992 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1349 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 494 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -39.12596000000001, took 2486 iterations and 8 nodes (0.24 seconds)
Cbc0032I Strong branching done 100 times (1040 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 2, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-23) rows, 46 (-17) columns and 377 (-272) elements
Clp1000I sum of infeasibilities 1.2069e-08 - average 2.87358e-10, 5 fixed columns
Coin0506I Presolve 37 (-5) rows, 41 (-5) columns and 300 (-77) elements
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 1.4111498 - largest nonzero change 1.9632556e-05 ( 0.0018056464%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 75.66625
Clp0000I Optimal - objective value 75.66625
Coin0511I After Postsolve, objective 75.66625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.66625
Clp0000I Optimal - objective value 75.66625
Clp0000I Optimal - objective value 75.66625
Coin0511I After Postsolve, objective 75.66625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.66625002 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 46 columns (46 integer (46 of which binary)) and 386 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.555%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.39704
Cbc0038I Pass   1: suminf.    0.80514 (8) obj. -9.07648 iterations 16
Cbc0038I Pass   2: suminf.    0.80514 (8) obj. -9.07648 iterations 1
Cbc0038I Solution found of 2.54997
Cbc0038I Rounding solution of -22.5963 is better than previous of 2.54997

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -22.5963 to -26.664 (0.01 seconds)
Cbc0038I Round again with cutoff of -29.7104
Cbc0038I Pass   3: suminf.    2.48944 (15) obj. -29.7104 iterations 4
Cbc0038I Pass   4: suminf.    2.16251 (15) obj. -29.7104 iterations 1
Cbc0038I Pass   5: suminf.    0.30000 (1) obj. -37.2357 iterations 21
Cbc0038I Pass   6: suminf.    0.48955 (1) obj. -29.7104 iterations 1
Cbc0038I Pass   7: suminf.    0.83087 (4) obj. -29.7104 iterations 5
Cbc0038I Pass   8: suminf.    0.83087 (4) obj. -29.7104 iterations 1
Cbc0038I Pass   9: suminf.    0.27500 (1) obj. -36.8442 iterations 3
Cbc0038I Pass  10: suminf.    0.27500 (1) obj. -36.8442 iterations 0
Cbc0038I Pass  11: suminf.    0.45469 (1) obj. -29.7104 iterations 1
Cbc0038I Pass  12: suminf.    1.16734 (6) obj. -29.7104 iterations 13
Cbc0038I Pass  13: suminf.    1.16734 (6) obj. -29.7104 iterations 1
Cbc0038I Pass  14: suminf.    0.51302 (3) obj. -29.7104 iterations 6
Cbc0038I Pass  15: suminf.    0.51302 (3) obj. -29.7104 iterations 0
Cbc0038I Pass  16: suminf.    0.74824 (2) obj. -40.4231 iterations 2
Cbc0038I Pass  17: suminf.    0.33202 (1) obj. -29.7104 iterations 3
Cbc0038I Pass  18: suminf.    0.49474 (1) obj. -36.1702 iterations 1
Cbc0038I Pass  19: suminf.    0.57605 (3) obj. -29.7104 iterations 6
Cbc0038I Pass  20: suminf.    0.47715 (2) obj. -29.7104 iterations 1
Cbc0038I Pass  21: suminf.    0.33750 (1) obj. -31.3062 iterations 2
Cbc0038I Pass  22: suminf.    0.29730 (1) obj. -29.7104 iterations 1
Cbc0038I Pass  23: suminf.    2.49809 (9) obj. -29.7104 iterations 12
Cbc0038I Pass  24: suminf.    1.60195 (6) obj. -29.7104 iterations 5
Cbc0038I Pass  25: suminf.    1.20203 (5) obj. -30.9169 iterations 5
Cbc0038I Pass  26: suminf.    1.40486 (4) obj. -29.7104 iterations 8
Cbc0038I Pass  27: suminf.    0.51835 (3) obj. -29.7104 iterations 1
Cbc0038I Pass  28: suminf.    0.39749 (2) obj. -29.7104 iterations 2
Cbc0038I Pass  29: suminf.    0.43684 (3) obj. -29.7104 iterations 6
Cbc0038I Pass  30: suminf.    0.43421 (2) obj. -29.7104 iterations 2
Cbc0038I Pass  31: suminf.    0.68425 (2) obj. -29.7104 iterations 2
Cbc0038I Pass  32: suminf.    1.74300 (9) obj. -29.7104 iterations 17
Cbc0038I Rounding solution of -39.126 is better than previous of -26.664

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 27 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -42.7262
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.41053 (15) obj. -42.7262 iterations 1
Cbc0038I Pass  33: suminf.    0.47407 (3) obj. -42.7262 iterations 25
Cbc0038I Pass  34: suminf.    0.47407 (3) obj. -42.7262 iterations 2
Cbc0038I Pass  35: suminf.    0.54638 (2) obj. -43.9272 iterations 1
Cbc0038I Pass  36: suminf.    1.80278 (8) obj. -42.7262 iterations 16
Cbc0038I Pass  37: suminf.    1.53554 (7) obj. -42.7262 iterations 4
Cbc0038I Pass  38: suminf.    0.58807 (3) obj. -42.7262 iterations 9
Cbc0038I Pass  39: suminf.    0.53428 (3) obj. -42.7262 iterations 4
Cbc0038I Pass  40: suminf.    0.54638 (2) obj. -42.9272 iterations 1
Cbc0038I Pass  41: suminf.    1.18239 (6) obj. -42.7262 iterations 10
Cbc0038I Pass  42: suminf.    0.96518 (6) obj. -42.7262 iterations 3
Cbc0038I Pass  43: suminf.    0.70419 (3) obj. -42.7262 iterations 5
Cbc0038I Pass  44: suminf.    0.70419 (3) obj. -42.7262 iterations 0
Cbc0038I Pass  45: suminf.    0.78876 (3) obj. -43.5148 iterations 2
Cbc0038I Pass  46: suminf.    0.66508 (4) obj. -42.7262 iterations 2
Cbc0038I Pass  47: suminf.    1.89938 (6) obj. -42.7262 iterations 19
Cbc0038I Pass  48: suminf.    1.89938 (6) obj. -42.7262 iterations 1
Cbc0038I Pass  49: suminf.    1.78224 (5) obj. -42.7262 iterations 7
Cbc0038I Pass  50: suminf.    1.78224 (5) obj. -42.7262 iterations 1
Cbc0038I Pass  51: suminf.    1.49157 (4) obj. -42.7262 iterations 7
Cbc0038I Pass  52: suminf.    1.49157 (4) obj. -42.7262 iterations 1
Cbc0038I Pass  53: suminf.    1.69955 (4) obj. -43.5689 iterations 3
Cbc0038I Pass  54: suminf.    1.41866 (4) obj. -42.7262 iterations 4
Cbc0038I Pass  55: suminf.    2.21217 (7) obj. -42.7262 iterations 9
Cbc0038I Pass  56: suminf.    1.57290 (5) obj. -42.7262 iterations 6
Cbc0038I Pass  57: suminf.    1.49157 (4) obj. -42.7262 iterations 4
Cbc0038I Pass  58: suminf.    1.49157 (4) obj. -42.7262 iterations 1
Cbc0038I Pass  59: suminf.    1.69955 (4) obj. -43.5689 iterations 3
Cbc0038I Pass  60: suminf.    1.41866 (4) obj. -42.7262 iterations 4
Cbc0038I Pass  61: suminf.    1.49157 (4) obj. -42.7262 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -39.126 - took 0.02 seconds
Cbc0012I Integer solution of -39.12596 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 15.583333
Cbc0013I At root node, 12 cuts changed objective from -57.126786 to -41.979328 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1102 row cuts average 3.7 elements, 8 column cuts (8 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 396 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 62 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 76 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 182 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 270 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 53 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.768 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.12596 best solution, best possible -41.97929 (1.56 seconds)
Cbc0001I Search completed - best objective -39.12596000000001, took 1963 iterations and 4 nodes (1.89 seconds)
Cbc0032I Strong branching done 56 times (580 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.21   (Wallclock seconds):       1.89

