Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 30 (-2) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 2.82176e-05 - average 5.64352e-07, 4 fixed columns
Coin0506I Presolve 40 (-10) rows, 26 (-4) columns and 125 (-27) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 92.418911
Clp0000I Optimal - objective value 92.418911
Coin0511I After Postsolve, objective 92.418911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.418911
Clp0000I Optimal - objective value 92.418911
Clp0000I Optimal - objective value 92.418911
Coin0511I After Postsolve, objective 92.418911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.41891111 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 50 rows, 30 columns (29 integer (29 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.69319
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.5151 iterations 21
Cbc0038I Solution found of -31.5151
Cbc0038I Relaxing continuous gives -31.5151
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 30 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -31.5151 to -41.5649 (0.03 seconds)
Cbc0038I Round again with cutoff of -46.6504
Cbc0038I Pass   2: suminf.    0.37915 (3) obj. -46.6504 iterations 3
Cbc0038I Pass   3: suminf.    0.50000 (1) obj. -46.6504 iterations 2
Cbc0038I Pass   4: suminf.    0.44799 (2) obj. -46.6504 iterations 2
Cbc0038I Pass   5: suminf.    0.43548 (1) obj. -46.6504 iterations 2
Cbc0038I Pass   6: suminf.    0.46383 (1) obj. -46.6504 iterations 1
Cbc0038I Pass   7: suminf.    3.20900 (8) obj. -46.6504 iterations 8
Cbc0038I Pass   8: suminf.    2.44212 (7) obj. -46.6504 iterations 6
Cbc0038I Pass   9: suminf.    0.44799 (2) obj. -46.6504 iterations 9
Cbc0038I Pass  10: suminf.    0.44799 (2) obj. -46.6504 iterations 0
Cbc0038I Pass  11: suminf.    0.43548 (1) obj. -46.6504 iterations 2
Cbc0038I Pass  12: suminf.    0.46383 (1) obj. -46.6504 iterations 1
Cbc0038I Pass  13: suminf.    0.80788 (3) obj. -46.6504 iterations 6
Cbc0038I Pass  14: suminf.    0.80788 (3) obj. -46.6504 iterations 0
Cbc0038I Pass  15: suminf.    0.50000 (1) obj. -46.6504 iterations 2
Cbc0038I Pass  16: suminf.    0.44799 (2) obj. -46.6504 iterations 2
Cbc0038I Pass  17: suminf.    0.43548 (1) obj. -46.6504 iterations 2
Cbc0038I Pass  18: suminf.    0.46383 (1) obj. -46.6504 iterations 1
Cbc0038I Pass  19: suminf.    2.48219 (7) obj. -46.6504 iterations 9
Cbc0038I Pass  20: suminf.    1.78565 (6) obj. -46.6504 iterations 3
Cbc0038I Pass  21: suminf.    0.38007 (2) obj. -46.6504 iterations 6
Cbc0038I Pass  22: suminf.    0.38007 (2) obj. -46.6504 iterations 0
Cbc0038I Pass  23: suminf.    1.21478 (4) obj. -46.6504 iterations 5
Cbc0038I Pass  24: suminf.    1.61638 (6) obj. -46.6504 iterations 10
Cbc0038I Pass  25: suminf.    1.33395 (5) obj. -46.6504 iterations 1
Cbc0038I Pass  26: suminf.    0.69291 (4) obj. -46.6504 iterations 9
Cbc0038I Pass  27: suminf.    0.50657 (4) obj. -46.6504 iterations 2
Cbc0038I Pass  28: suminf.    0.88499 (3) obj. -46.6504 iterations 3
Cbc0038I Pass  29: suminf.    0.68961 (3) obj. -46.6504 iterations 2
Cbc0038I Pass  30: suminf.    1.97309 (7) obj. -46.6504 iterations 8
Cbc0038I Pass  31: suminf.    1.72677 (5) obj. -46.6504 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 30 columns, reduced to 41 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -41.5649 - took 0.05 seconds
Cbc0012I Integer solution of -41.56494 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 30 columns, reduced to 36 rows 23 columns
Cbc0031I 17 added rows had average density of 18.352941
Cbc0013I At root node, 17 cuts changed objective from -92.418911 to -60.896932 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2644 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1034 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -41.56494000000001, took 3210 iterations and 10 nodes (0.27 seconds)
Cbc0032I Strong branching done 110 times (1525 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-14) rows, 56 (-4) columns and 531 (-81) elements
Clp1000I sum of infeasibilities 9.40488e-08 - average 1.95935e-09, 12 fixed columns
Coin0506I Presolve 37 (-11) rows, 44 (-12) columns and 306 (-225) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 0.97313857 - largest nonzero change 1.8578182e-05 ( 0.0016324266%) - largest zero change 2.7295038e-05
Clp0000I Optimal - objective value 80.668265
Clp0000I Optimal - objective value 80.668265
Coin0511I After Postsolve, objective 80.668265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1963469 - largest nonzero change 1.8516323e-05 ( 0.0016324266%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 108.08188
Clp0000I Optimal - objective value 108.08188
Clp0000I Optimal - objective value 108.08188
Coin0511I After Postsolve, objective 108.08188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.0818817 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 56 columns (56 integer (56 of which binary)) and 533 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.696%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 4.67543
Cbc0038I Pass   1: suminf.    3.09311 (16) obj. -90.3552 iterations 14
Cbc0038I Pass   2: suminf.    3.09311 (16) obj. -90.3552 iterations 2
Cbc0038I Pass   3: suminf.    0.06667 (1) obj. -37.627 iterations 15
Cbc0038I Solution found of -34.827
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 56 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -41.3198
Cbc0038I Pass   4: suminf.    3.09311 (16) obj. -90.3552 iterations 0
Cbc0038I Pass   5: suminf.    3.09311 (16) obj. -90.3552 iterations 1
Cbc0038I Pass   6: suminf.    0.51473 (6) obj. -52.1112 iterations 10
Cbc0038I Pass   7: suminf.    0.41999 (2) obj. -41.3198 iterations 10
Cbc0038I Pass   8: suminf.    0.40121 (2) obj. -44.2436 iterations 1
Cbc0038I Pass   9: suminf.    0.39286 (1) obj. -43.9341 iterations 1
Cbc0038I Pass  10: suminf.    1.09956 (6) obj. -41.3198 iterations 17
Cbc0038I Pass  11: suminf.    1.09956 (6) obj. -41.3198 iterations 0
Cbc0038I Pass  12: suminf.    0.96152 (6) obj. -41.3198 iterations 6
Cbc0038I Pass  13: suminf.    0.95494 (4) obj. -41.3198 iterations 1
Cbc0038I Pass  14: suminf.    0.81425 (4) obj. -41.3198 iterations 1
Cbc0038I Pass  15: suminf.    0.81425 (4) obj. -41.3198 iterations 0
Cbc0038I Pass  16: suminf.    4.49288 (14) obj. -41.3198 iterations 16
Cbc0038I Pass  17: suminf.    2.91505 (11) obj. -41.3198 iterations 2
Cbc0038I Pass  18: suminf.    2.86898 (11) obj. -41.3198 iterations 4
Cbc0038I Pass  19: suminf.    1.71129 (10) obj. -41.3198 iterations 10
Cbc0038I Pass  20: suminf.    1.66204 (10) obj. -41.3198 iterations 2
Cbc0038I Pass  21: suminf.    1.44714 (5) obj. -41.3198 iterations 6
Cbc0038I Pass  22: suminf.    1.44714 (5) obj. -41.3198 iterations 0
Cbc0038I Pass  23: suminf.    1.45864 (5) obj. -41.3198 iterations 1
Cbc0038I Pass  24: suminf.    1.45864 (5) obj. -41.3198 iterations 0
Cbc0038I Pass  25: suminf.    1.44714 (5) obj. -41.3198 iterations 1
Cbc0038I Pass  26: suminf.    3.07052 (10) obj. -41.3198 iterations 12
Cbc0038I Pass  27: suminf.    2.63682 (9) obj. -41.3198 iterations 1
Cbc0038I Pass  28: suminf.    1.40901 (5) obj. -41.3198 iterations 7
Cbc0038I Pass  29: suminf.    1.40901 (5) obj. -41.3198 iterations 0
Cbc0038I Pass  30: suminf.    1.42814 (5) obj. -41.3198 iterations 1
Cbc0038I Pass  31: suminf.    1.42814 (5) obj. -41.3198 iterations 0
Cbc0038I Pass  32: suminf.    1.40901 (5) obj. -41.3198 iterations 1
Cbc0038I Pass  33: suminf.    2.83401 (13) obj. -41.3198 iterations 23
Cbc0038I Rounding solution of -37.6256 is better than previous of -34.827

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 56 columns, reduced to 26 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -37.6256 to -39.5934 (0.03 seconds)
Cbc0038I Round again with cutoff of -53.0066
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.09311 (16) obj. -90.3552 iterations 0
Cbc0038I Pass  34: suminf.    3.09311 (16) obj. -90.3552 iterations 1
Cbc0038I Pass  35: suminf.    0.77828 (6) obj. -53.0066 iterations 18
Cbc0038I Pass  36: suminf.    0.77734 (4) obj. -53.0066 iterations 1
Cbc0038I Pass  37: suminf.    0.69129 (4) obj. -53.0066 iterations 1
Cbc0038I Pass  38: suminf.    0.69129 (4) obj. -53.0066 iterations 0
Cbc0038I Pass  39: suminf.    0.77828 (6) obj. -53.0066 iterations 2
Cbc0038I Pass  40: suminf.    2.10657 (14) obj. -53.0066 iterations 14
Cbc0038I Pass  41: suminf.    1.23898 (7) obj. -53.0066 iterations 5
Cbc0038I Pass  42: suminf.    1.25613 (5) obj. -53.0066 iterations 3
Cbc0038I Pass  43: suminf.    0.85383 (4) obj. -53.9432 iterations 2
Cbc0038I Pass  44: suminf.    1.42586 (8) obj. -53.0066 iterations 3
Cbc0038I Pass  45: suminf.    1.42586 (8) obj. -53.0066 iterations 0
Cbc0038I Pass  46: suminf.    1.61828 (5) obj. -53.0066 iterations 5
Cbc0038I Pass  47: suminf.    1.39642 (5) obj. -55.0033 iterations 1
Cbc0038I Pass  48: suminf.    2.06816 (9) obj. -53.0066 iterations 4
Cbc0038I Pass  49: suminf.    1.69149 (6) obj. -53.0066 iterations 2
Cbc0038I Pass  50: suminf.    1.30992 (6) obj. -53.0066 iterations 1
Cbc0038I Pass  51: suminf.    1.64601 (5) obj. -53.0066 iterations 3
Cbc0038I Pass  52: suminf.    1.39642 (5) obj. -55.0033 iterations 1
Cbc0038I Pass  53: suminf.    2.06816 (9) obj. -53.0066 iterations 4
Cbc0038I Pass  54: suminf.    1.69149 (6) obj. -53.0066 iterations 2
Cbc0038I Pass  55: suminf.    1.30992 (6) obj. -53.0066 iterations 1
Cbc0038I Pass  56: suminf.    1.64601 (5) obj. -53.0066 iterations 3
Cbc0038I Pass  57: suminf.    1.39642 (5) obj. -55.0033 iterations 1
Cbc0038I Pass  58: suminf.    2.06816 (9) obj. -53.0066 iterations 4
Cbc0038I Pass  59: suminf.    1.69149 (6) obj. -53.0066 iterations 2
Cbc0038I Pass  60: suminf.    1.30992 (6) obj. -53.0066 iterations 1
Cbc0038I Pass  61: suminf.    1.64601 (5) obj. -53.0066 iterations 3
Cbc0038I Pass  62: suminf.    1.39642 (5) obj. -55.0033 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 56 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -39.5934 - took 0.03 seconds
Cbc0012I Integer solution of -39.59339 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 56 columns, reduced to 3 rows 6 columns
Cbc0012I Integer solution of -41.56494 found by DiveCoefficient after 170 iterations and 0 nodes (0.22 seconds)
Cbc0031I 25 added rows had average density of 7.32
Cbc0013I At root node, 25 cuts changed objective from -99.753935 to -41.828359 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 254 row cuts average 2.4 elements, 19 column cuts (19 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 56 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0001I Search completed - best objective -41.56494000000001, took 192 iterations and 0 nodes (0.22 seconds)
Cbc0032I Strong branching done 4 times (17 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 30 (-2) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 2.82176e-05 - average 5.64352e-07, 4 fixed columns
Coin0506I Presolve 40 (-10) rows, 26 (-4) columns and 125 (-27) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 92.418911
Clp0000I Optimal - objective value 92.418911
Coin0511I After Postsolve, objective 92.418911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.418911
Clp0000I Optimal - objective value 92.418911
Clp0000I Optimal - objective value 92.418911
Coin0511I After Postsolve, objective 92.418911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.41891111 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 50 rows, 30 columns (29 integer (29 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.69319
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.5151 iterations 21
Cbc0038I Solution found of -31.5151
Cbc0038I Relaxing continuous gives -31.5151
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 30 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -31.5151 to -41.5649 (0.04 seconds)
Cbc0038I Round again with cutoff of -46.6504
Cbc0038I Pass   2: suminf.    0.37915 (3) obj. -46.6504 iterations 3
Cbc0038I Pass   3: suminf.    0.50000 (1) obj. -46.6504 iterations 2
Cbc0038I Pass   4: suminf.    0.44799 (2) obj. -46.6504 iterations 2
Cbc0038I Pass   5: suminf.    0.43548 (1) obj. -46.6504 iterations 2
Cbc0038I Pass   6: suminf.    0.46383 (1) obj. -46.6504 iterations 1
Cbc0038I Pass   7: suminf.    3.20900 (8) obj. -46.6504 iterations 8
Cbc0038I Pass   8: suminf.    2.44212 (7) obj. -46.6504 iterations 6
Cbc0038I Pass   9: suminf.    0.44799 (2) obj. -46.6504 iterations 9
Cbc0038I Pass  10: suminf.    0.44799 (2) obj. -46.6504 iterations 0
Cbc0038I Pass  11: suminf.    0.43548 (1) obj. -46.6504 iterations 2
Cbc0038I Pass  12: suminf.    0.46383 (1) obj. -46.6504 iterations 1
Cbc0038I Pass  13: suminf.    0.80788 (3) obj. -46.6504 iterations 6
Cbc0038I Pass  14: suminf.    0.80788 (3) obj. -46.6504 iterations 0
Cbc0038I Pass  15: suminf.    0.50000 (1) obj. -46.6504 iterations 2
Cbc0038I Pass  16: suminf.    0.44799 (2) obj. -46.6504 iterations 2
Cbc0038I Pass  17: suminf.    0.43548 (1) obj. -46.6504 iterations 2
Cbc0038I Pass  18: suminf.    0.46383 (1) obj. -46.6504 iterations 1
Cbc0038I Pass  19: suminf.    2.48219 (7) obj. -46.6504 iterations 9
Cbc0038I Pass  20: suminf.    1.78565 (6) obj. -46.6504 iterations 3
Cbc0038I Pass  21: suminf.    0.38007 (2) obj. -46.6504 iterations 6
Cbc0038I Pass  22: suminf.    0.38007 (2) obj. -46.6504 iterations 0
Cbc0038I Pass  23: suminf.    1.21478 (4) obj. -46.6504 iterations 5
Cbc0038I Pass  24: suminf.    1.61638 (6) obj. -46.6504 iterations 10
Cbc0038I Pass  25: suminf.    1.33395 (5) obj. -46.6504 iterations 1
Cbc0038I Pass  26: suminf.    0.69291 (4) obj. -46.6504 iterations 9
Cbc0038I Pass  27: suminf.    0.50657 (4) obj. -46.6504 iterations 2
Cbc0038I Pass  28: suminf.    0.88499 (3) obj. -46.6504 iterations 3
Cbc0038I Pass  29: suminf.    0.68961 (3) obj. -46.6504 iterations 2
Cbc0038I Pass  30: suminf.    1.97309 (7) obj. -46.6504 iterations 8
Cbc0038I Pass  31: suminf.    1.72677 (5) obj. -46.6504 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 30 columns, reduced to 41 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -41.5649 - took 0.06 seconds
Cbc0012I Integer solution of -41.56494 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 50 rows 30 columns, reduced to 36 rows 23 columns
Cbc0031I 17 added rows had average density of 18.352941
Cbc0013I At root node, 17 cuts changed objective from -92.418911 to -60.896932 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2644 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1034 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -41.56494000000001, took 3210 iterations and 10 nodes (0.41 seconds)
Cbc0032I Strong branching done 110 times (1525 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 56 (-5) columns and 531 (-82) elements
Clp1000I sum of infeasibilities 9.40488e-08 - average 1.95935e-09, 12 fixed columns
Coin0506I Presolve 37 (-11) rows, 44 (-12) columns and 306 (-225) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 0.97313857 - largest nonzero change 1.8578182e-05 ( 0.0016324266%) - largest zero change 2.7295038e-05
Clp0000I Optimal - objective value 80.668265
Clp0000I Optimal - objective value 80.668265
Coin0511I After Postsolve, objective 80.668265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1963469 - largest nonzero change 1.8516323e-05 ( 0.0016324266%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 108.08188
Clp0000I Optimal - objective value 108.08188
Clp0000I Optimal - objective value 108.08188
Coin0511I After Postsolve, objective 108.08188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.0818817 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 56 columns (56 integer (56 of which binary)) and 533 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.696%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 4.67543
Cbc0038I Pass   1: suminf.    3.09311 (16) obj. -90.3552 iterations 14
Cbc0038I Pass   2: suminf.    3.09311 (16) obj. -90.3552 iterations 2
Cbc0038I Pass   3: suminf.    0.06667 (1) obj. -37.627 iterations 15
Cbc0038I Solution found of -34.827
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 56 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -41.3198
Cbc0038I Pass   4: suminf.    3.09311 (16) obj. -90.3552 iterations 0
Cbc0038I Pass   5: suminf.    3.09311 (16) obj. -90.3552 iterations 1
Cbc0038I Pass   6: suminf.    0.51473 (6) obj. -52.1112 iterations 10
Cbc0038I Pass   7: suminf.    0.41999 (2) obj. -41.3198 iterations 10
Cbc0038I Pass   8: suminf.    0.40121 (2) obj. -44.2436 iterations 1
Cbc0038I Pass   9: suminf.    0.39286 (1) obj. -43.9341 iterations 1
Cbc0038I Pass  10: suminf.    1.09956 (6) obj. -41.3198 iterations 17
Cbc0038I Pass  11: suminf.    1.09956 (6) obj. -41.3198 iterations 0
Cbc0038I Pass  12: suminf.    0.96152 (6) obj. -41.3198 iterations 6
Cbc0038I Pass  13: suminf.    0.95494 (4) obj. -41.3198 iterations 1
Cbc0038I Pass  14: suminf.    0.81425 (4) obj. -41.3198 iterations 1
Cbc0038I Pass  15: suminf.    0.81425 (4) obj. -41.3198 iterations 0
Cbc0038I Pass  16: suminf.    4.49288 (14) obj. -41.3198 iterations 16
Cbc0038I Pass  17: suminf.    2.91505 (11) obj. -41.3198 iterations 2
Cbc0038I Pass  18: suminf.    2.86898 (11) obj. -41.3198 iterations 4
Cbc0038I Pass  19: suminf.    1.71129 (10) obj. -41.3198 iterations 10
Cbc0038I Pass  20: suminf.    1.66204 (10) obj. -41.3198 iterations 2
Cbc0038I Pass  21: suminf.    1.44714 (5) obj. -41.3198 iterations 6
Cbc0038I Pass  22: suminf.    1.44714 (5) obj. -41.3198 iterations 0
Cbc0038I Pass  23: suminf.    1.45864 (5) obj. -41.3198 iterations 1
Cbc0038I Pass  24: suminf.    1.45864 (5) obj. -41.3198 iterations 0
Cbc0038I Pass  25: suminf.    1.44714 (5) obj. -41.3198 iterations 1
Cbc0038I Pass  26: suminf.    3.07052 (10) obj. -41.3198 iterations 12
Cbc0038I Pass  27: suminf.    2.63682 (9) obj. -41.3198 iterations 1
Cbc0038I Pass  28: suminf.    1.40901 (5) obj. -41.3198 iterations 7
Cbc0038I Pass  29: suminf.    1.40901 (5) obj. -41.3198 iterations 0
Cbc0038I Pass  30: suminf.    1.42814 (5) obj. -41.3198 iterations 1
Cbc0038I Pass  31: suminf.    1.42814 (5) obj. -41.3198 iterations 0
Cbc0038I Pass  32: suminf.    1.40901 (5) obj. -41.3198 iterations 1
Cbc0038I Pass  33: suminf.    2.83401 (13) obj. -41.3198 iterations 23
Cbc0038I Rounding solution of -37.6256 is better than previous of -34.827

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 56 columns, reduced to 26 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -37.6256 to -39.5934 (0.03 seconds)
Cbc0038I Round again with cutoff of -53.0066
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.09311 (16) obj. -90.3552 iterations 0
Cbc0038I Pass  34: suminf.    3.09311 (16) obj. -90.3552 iterations 1
Cbc0038I Pass  35: suminf.    0.77828 (6) obj. -53.0066 iterations 18
Cbc0038I Pass  36: suminf.    0.77734 (4) obj. -53.0066 iterations 1
Cbc0038I Pass  37: suminf.    0.69129 (4) obj. -53.0066 iterations 1
Cbc0038I Pass  38: suminf.    0.69129 (4) obj. -53.0066 iterations 0
Cbc0038I Pass  39: suminf.    0.77828 (6) obj. -53.0066 iterations 2
Cbc0038I Pass  40: suminf.    2.10657 (14) obj. -53.0066 iterations 14
Cbc0038I Pass  41: suminf.    1.23898 (7) obj. -53.0066 iterations 5
Cbc0038I Pass  42: suminf.    1.25613 (5) obj. -53.0066 iterations 3
Cbc0038I Pass  43: suminf.    0.85383 (4) obj. -53.9432 iterations 2
Cbc0038I Pass  44: suminf.    1.42586 (8) obj. -53.0066 iterations 3
Cbc0038I Pass  45: suminf.    1.42586 (8) obj. -53.0066 iterations 0
Cbc0038I Pass  46: suminf.    1.61828 (5) obj. -53.0066 iterations 5
Cbc0038I Pass  47: suminf.    1.39642 (5) obj. -55.0033 iterations 1
Cbc0038I Pass  48: suminf.    2.06816 (9) obj. -53.0066 iterations 4
Cbc0038I Pass  49: suminf.    1.69149 (6) obj. -53.0066 iterations 2
Cbc0038I Pass  50: suminf.    1.30992 (6) obj. -53.0066 iterations 1
Cbc0038I Pass  51: suminf.    1.64601 (5) obj. -53.0066 iterations 3
Cbc0038I Pass  52: suminf.    1.39642 (5) obj. -55.0033 iterations 1
Cbc0038I Pass  53: suminf.    2.06816 (9) obj. -53.0066 iterations 4
Cbc0038I Pass  54: suminf.    1.69149 (6) obj. -53.0066 iterations 2
Cbc0038I Pass  55: suminf.    1.30992 (6) obj. -53.0066 iterations 1
Cbc0038I Pass  56: suminf.    1.64601 (5) obj. -53.0066 iterations 3
Cbc0038I Pass  57: suminf.    1.39642 (5) obj. -55.0033 iterations 1
Cbc0038I Pass  58: suminf.    2.06816 (9) obj. -53.0066 iterations 4
Cbc0038I Pass  59: suminf.    1.69149 (6) obj. -53.0066 iterations 2
Cbc0038I Pass  60: suminf.    1.30992 (6) obj. -53.0066 iterations 1
Cbc0038I Pass  61: suminf.    1.64601 (5) obj. -53.0066 iterations 3
Cbc0038I Pass  62: suminf.    1.39642 (5) obj. -55.0033 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 56 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -39.5934 - took 0.03 seconds
Cbc0012I Integer solution of -39.59339 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 56 columns, reduced to 3 rows 6 columns
Cbc0012I Integer solution of -41.56494 found by DiveCoefficient after 170 iterations and 0 nodes (0.27 seconds)
Cbc0031I 25 added rows had average density of 7.32
Cbc0013I At root node, 25 cuts changed objective from -99.753935 to -41.828359 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 254 row cuts average 2.4 elements, 19 column cuts (19 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 56 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0001I Search completed - best objective -41.56494000000001, took 192 iterations and 0 nodes (0.27 seconds)
Cbc0032I Strong branching done 4 times (17 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.28

