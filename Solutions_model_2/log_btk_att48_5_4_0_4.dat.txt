Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-39) rows, 33 (-17) columns and 150 (-135) elements
Clp1000I sum of infeasibilities 3.79665e-09 - average 6.32775e-11, 10 fixed columns
Coin0506I Presolve 40 (-20) rows, 23 (-10) columns and 100 (-50) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 4365.7975
Clp0000I Optimal - objective value 4365.7975
Coin0511I After Postsolve, objective 4365.7975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 24.942022 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 4365.7975
Clp0000I Optimal - objective value 4365.7975
Clp0000I Optimal - objective value 4365.7975
Coin0511I After Postsolve, objective 4365.7975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4365.79752 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 60 rows, 33 columns (32 integer (32 of which binary)) and 150 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.668%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.24249
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2311.66 iterations 27
Cbc0038I Solution found of -2311.66
Cbc0038I Relaxing continuous gives -2311.66
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 28 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -2311.66 to -3005.06 (0.01 seconds)
Cbc0038I Round again with cutoff of -3141.14
Cbc0038I Pass   2: suminf.    1.00000 (3) obj. -3141.14 iterations 5
Cbc0038I Pass   3: suminf.    1.00000 (3) obj. -3141.14 iterations 0
Cbc0038I Pass   4: suminf.    1.33221 (5) obj. -3141.14 iterations 8
Cbc0038I Pass   5: suminf.    0.64545 (3) obj. -3141.14 iterations 2
Cbc0038I Pass   6: suminf.    0.65859 (2) obj. -3141.14 iterations 2
Cbc0038I Pass   7: suminf.    0.81384 (3) obj. -3141.14 iterations 2
Cbc0038I Pass   8: suminf.    1.36950 (4) obj. -3141.14 iterations 2
Cbc0038I Pass   9: suminf.    3.85812 (12) obj. -3141.14 iterations 16
Cbc0038I Pass  10: suminf.    1.90665 (9) obj. -3141.14 iterations 10
Cbc0038I Pass  11: suminf.    1.12663 (7) obj. -3141.14 iterations 4
Cbc0038I Pass  12: suminf.    1.45661 (5) obj. -3141.14 iterations 7
Cbc0038I Pass  13: suminf.    0.84088 (5) obj. -3141.14 iterations 5
Cbc0038I Pass  14: suminf.    0.84088 (5) obj. -3141.14 iterations 0
Cbc0038I Pass  15: suminf.    0.66855 (3) obj. -3141.14 iterations 5
Cbc0038I Pass  16: suminf.    0.66855 (3) obj. -3141.14 iterations 0
Cbc0038I Pass  17: suminf.    1.31482 (4) obj. -3141.14 iterations 2
Cbc0038I Pass  18: suminf.    0.70656 (4) obj. -3141.14 iterations 1
Cbc0038I Pass  19: suminf.    1.41338 (10) obj. -3141.14 iterations 14
Cbc0038I Pass  20: suminf.    1.22810 (7) obj. -3141.14 iterations 3
Cbc0038I Pass  21: suminf.    1.73285 (5) obj. -3141.14 iterations 4
Cbc0038I Pass  22: suminf.    0.65859 (2) obj. -3141.14 iterations 4
Cbc0038I Pass  23: suminf.    0.81384 (3) obj. -3141.14 iterations 2
Cbc0038I Pass  24: suminf.    1.36950 (4) obj. -3141.14 iterations 2
Cbc0038I Pass  25: suminf.    1.88254 (8) obj. -3141.14 iterations 11
Cbc0038I Pass  26: suminf.    1.74390 (9) obj. -3141.14 iterations 4
Cbc0038I Pass  27: suminf.    1.86198 (7) obj. -3141.14 iterations 8
Cbc0038I Pass  28: suminf.    1.35478 (5) obj. -3141.14 iterations 2
Cbc0038I Pass  29: suminf.    1.35478 (5) obj. -3141.14 iterations 0
Cbc0038I Pass  30: suminf.    0.97369 (3) obj. -3141.14 iterations 6
Cbc0038I Pass  31: suminf.    0.97369 (3) obj. -3141.14 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -3005.06 to -3029.13 (0.02 seconds)
Cbc0038I Round again with cutoff of -3386.07
Cbc0038I Pass  31: suminf.    1.00000 (5) obj. -3386.07 iterations 2
Cbc0038I Pass  32: suminf.    1.00000 (5) obj. -3386.07 iterations 0
Cbc0038I Pass  33: suminf.    1.63266 (6) obj. -3386.07 iterations 6
Cbc0038I Pass  34: suminf.    1.53481 (5) obj. -3386.07 iterations 1
Cbc0038I Pass  35: suminf.    0.80292 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  36: suminf.    0.53104 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  37: suminf.    0.51439 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  38: suminf.    0.80497 (3) obj. -3386.07 iterations 2
Cbc0038I Pass  39: suminf.    1.56777 (5) obj. -3386.07 iterations 6
Cbc0038I Pass  40: suminf.    1.54225 (4) obj. -3386.07 iterations 1
Cbc0038I Pass  41: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  42: suminf.    1.30768 (4) obj. -3386.07 iterations 2
Cbc0038I Pass  43: suminf.    0.70760 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  44: suminf.    0.92191 (4) obj. -3386.07 iterations 4
Cbc0038I Pass  45: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  46: suminf.    0.88391 (3) obj. -3386.07 iterations 0
Cbc0038I Pass  47: suminf.    1.30768 (4) obj. -3386.07 iterations 2
Cbc0038I Pass  48: suminf.    0.70760 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  49: suminf.    0.92191 (4) obj. -3386.07 iterations 4
Cbc0038I Pass  50: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  51: suminf.    0.88391 (3) obj. -3386.07 iterations 0
Cbc0038I Pass  52: suminf.    1.30768 (4) obj. -3386.07 iterations 2
Cbc0038I Pass  53: suminf.    0.70760 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  54: suminf.    0.92191 (4) obj. -3386.07 iterations 4
Cbc0038I Pass  55: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  56: suminf.    0.88391 (3) obj. -3386.07 iterations 0
Cbc0038I Pass  57: suminf.    1.30768 (4) obj. -3386.07 iterations 2
Cbc0038I Pass  58: suminf.    0.70760 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  59: suminf.    0.92191 (4) obj. -3386.07 iterations 4
Cbc0038I Pass  60: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 29 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3029.13 - took 0.02 seconds
Cbc0012I Integer solution of -3029.131 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 60 rows 33 columns, reduced to 29 rows 21 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 6.7142857
Cbc0013I At root node, 12 cuts changed objective from -4365.7975 to -3029.131 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 280 row cuts average 4.3 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 81 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 65 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3029.130999999999, took 197 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-25) rows, 77 (-19) columns and 848 (-565) elements
Clp1000I sum of infeasibilities 1.36921e-06 - average 1.87563e-08, 74 fixed columns
Coin0506I Presolve 2 (-71) rows, 3 (-74) columns and 5 (-843) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 1709.381
Clp0000I Optimal - objective value 1709.381
Coin0511I After Postsolve, objective 1709.381, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0438685 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 5575.0561
Clp0000I Optimal - objective value 5575.0561
Clp0000I Optimal - objective value 5575.0561
Coin0511I After Postsolve, objective 5575.0561, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5575.056055 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 78 columns (78 integer (78 of which binary)) and 851 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.721%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.10274
Cbc0038I Pass   1: suminf.    2.61426 (15) obj. -2587.16 iterations 35
Cbc0038I Pass   2: suminf.    2.61426 (15) obj. -2587.16 iterations 5
Cbc0038I Solution found of -904.448
Cbc0038I Rounding solution of -1447.31 is better than previous of -904.448

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 78 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1447.31 to -3005.06 (0.02 seconds)
Cbc0038I Round again with cutoff of -3197.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.86845 (27) obj. -3197.8 iterations 5
Cbc0038I Pass   4: suminf.    3.86845 (27) obj. -3197.8 iterations 1
Cbc0038I Pass   5: suminf.    2.81673 (20) obj. -3197.8 iterations 12
Cbc0038I Pass   6: suminf.    2.81673 (20) obj. -3197.8 iterations 0
Cbc0038I Pass   7: suminf.    0.66382 (5) obj. -3197.8 iterations 26
Cbc0038I Pass   8: suminf.    0.66382 (5) obj. -3197.8 iterations 0
Cbc0038I Pass   9: suminf.    0.22945 (1) obj. -3197.8 iterations 8
Cbc0038I Pass  10: suminf.    0.40000 (1) obj. -3509.06 iterations 1
Cbc0038I Pass  11: suminf.    3.24438 (13) obj. -3197.8 iterations 18
Cbc0038I Pass  12: suminf.    2.06178 (8) obj. -3350.49 iterations 4
Cbc0038I Pass  13: suminf.    0.48848 (2) obj. -3197.8 iterations 16
Cbc0038I Pass  14: suminf.    0.48848 (2) obj. -3197.8 iterations 0
Cbc0038I Pass  15: suminf.    0.80507 (2) obj. -3197.8 iterations 3
Cbc0038I Pass  16: suminf.    2.37593 (11) obj. -3197.8 iterations 12
Cbc0038I Pass  17: suminf.    2.22703 (9) obj. -3241.32 iterations 3
Cbc0038I Pass  18: suminf.    0.45080 (1) obj. -3197.8 iterations 10
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -3240.47 iterations 1
Cbc0038I Pass  20: suminf.    4.65047 (17) obj. -3197.8 iterations 39
Cbc0038I Pass  21: suminf.    4.65047 (17) obj. -3197.8 iterations 3
Cbc0038I Pass  22: suminf.    1.34461 (6) obj. -3197.8 iterations 11
Cbc0038I Pass  23: suminf.    1.34461 (6) obj. -3197.8 iterations 2
Cbc0038I Pass  24: suminf.    0.78883 (3) obj. -3197.8 iterations 9
Cbc0038I Pass  25: suminf.    0.78883 (3) obj. -3197.8 iterations 0
Cbc0038I Pass  26: suminf.    0.87116 (3) obj. -3197.8 iterations 1
Cbc0038I Pass  27: suminf.    0.87116 (3) obj. -3197.8 iterations 0
Cbc0038I Pass  28: suminf.    1.88212 (9) obj. -3197.8 iterations 8
Cbc0038I Pass  29: suminf.    1.41331 (6) obj. -3301.23 iterations 7
Cbc0038I Pass  30: suminf.    0.84906 (2) obj. -3197.8 iterations 7
Cbc0038I Pass  31: suminf.    0.84906 (2) obj. -3197.8 iterations 0
Cbc0038I Pass  32: suminf.    0.83550 (2) obj. -3197.8 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 78 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3005.06 - took 0.01 seconds
Cbc0012I Integer solution of -3005.065 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 74 rows 78 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -3029.131 found by DiveCoefficient after 52 iterations and 0 nodes (0.04 seconds)
Cbc0031I 14 added rows had average density of 5.9285714
Cbc0013I At root node, 14 cuts changed objective from -4932.4499 to -3029.131 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 196 row cuts average 2.0 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3029.130999999999, took 52 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-39) rows, 33 (-17) columns and 150 (-135) elements
Clp1000I sum of infeasibilities 3.79665e-09 - average 6.32775e-11, 10 fixed columns
Coin0506I Presolve 40 (-20) rows, 23 (-10) columns and 100 (-50) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 4365.7975
Clp0000I Optimal - objective value 4365.7975
Coin0511I After Postsolve, objective 4365.7975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 24.942022 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 4365.7975
Clp0000I Optimal - objective value 4365.7975
Clp0000I Optimal - objective value 4365.7975
Coin0511I After Postsolve, objective 4365.7975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4365.79752 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 60 rows, 33 columns (32 integer (32 of which binary)) and 150 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.668%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.24249
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2311.66 iterations 27
Cbc0038I Solution found of -2311.66
Cbc0038I Relaxing continuous gives -2311.66
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 28 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -2311.66 to -3005.06 (0.01 seconds)
Cbc0038I Round again with cutoff of -3141.14
Cbc0038I Pass   2: suminf.    1.00000 (3) obj. -3141.14 iterations 5
Cbc0038I Pass   3: suminf.    1.00000 (3) obj. -3141.14 iterations 0
Cbc0038I Pass   4: suminf.    1.33221 (5) obj. -3141.14 iterations 8
Cbc0038I Pass   5: suminf.    0.64545 (3) obj. -3141.14 iterations 2
Cbc0038I Pass   6: suminf.    0.65859 (2) obj. -3141.14 iterations 2
Cbc0038I Pass   7: suminf.    0.81384 (3) obj. -3141.14 iterations 2
Cbc0038I Pass   8: suminf.    1.36950 (4) obj. -3141.14 iterations 2
Cbc0038I Pass   9: suminf.    3.85812 (12) obj. -3141.14 iterations 16
Cbc0038I Pass  10: suminf.    1.90665 (9) obj. -3141.14 iterations 10
Cbc0038I Pass  11: suminf.    1.12663 (7) obj. -3141.14 iterations 4
Cbc0038I Pass  12: suminf.    1.45661 (5) obj. -3141.14 iterations 7
Cbc0038I Pass  13: suminf.    0.84088 (5) obj. -3141.14 iterations 5
Cbc0038I Pass  14: suminf.    0.84088 (5) obj. -3141.14 iterations 0
Cbc0038I Pass  15: suminf.    0.66855 (3) obj. -3141.14 iterations 5
Cbc0038I Pass  16: suminf.    0.66855 (3) obj. -3141.14 iterations 0
Cbc0038I Pass  17: suminf.    1.31482 (4) obj. -3141.14 iterations 2
Cbc0038I Pass  18: suminf.    0.70656 (4) obj. -3141.14 iterations 1
Cbc0038I Pass  19: suminf.    1.41338 (10) obj. -3141.14 iterations 14
Cbc0038I Pass  20: suminf.    1.22810 (7) obj. -3141.14 iterations 3
Cbc0038I Pass  21: suminf.    1.73285 (5) obj. -3141.14 iterations 4
Cbc0038I Pass  22: suminf.    0.65859 (2) obj. -3141.14 iterations 4
Cbc0038I Pass  23: suminf.    0.81384 (3) obj. -3141.14 iterations 2
Cbc0038I Pass  24: suminf.    1.36950 (4) obj. -3141.14 iterations 2
Cbc0038I Pass  25: suminf.    1.88254 (8) obj. -3141.14 iterations 11
Cbc0038I Pass  26: suminf.    1.74390 (9) obj. -3141.14 iterations 4
Cbc0038I Pass  27: suminf.    1.86198 (7) obj. -3141.14 iterations 8
Cbc0038I Pass  28: suminf.    1.35478 (5) obj. -3141.14 iterations 2
Cbc0038I Pass  29: suminf.    1.35478 (5) obj. -3141.14 iterations 0
Cbc0038I Pass  30: suminf.    0.97369 (3) obj. -3141.14 iterations 6
Cbc0038I Pass  31: suminf.    0.97369 (3) obj. -3141.14 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -3005.06 to -3029.13 (0.03 seconds)
Cbc0038I Round again with cutoff of -3386.07
Cbc0038I Pass  31: suminf.    1.00000 (5) obj. -3386.07 iterations 2
Cbc0038I Pass  32: suminf.    1.00000 (5) obj. -3386.07 iterations 0
Cbc0038I Pass  33: suminf.    1.63266 (6) obj. -3386.07 iterations 6
Cbc0038I Pass  34: suminf.    1.53481 (5) obj. -3386.07 iterations 1
Cbc0038I Pass  35: suminf.    0.80292 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  36: suminf.    0.53104 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  37: suminf.    0.51439 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  38: suminf.    0.80497 (3) obj. -3386.07 iterations 2
Cbc0038I Pass  39: suminf.    1.56777 (5) obj. -3386.07 iterations 6
Cbc0038I Pass  40: suminf.    1.54225 (4) obj. -3386.07 iterations 1
Cbc0038I Pass  41: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  42: suminf.    1.30768 (4) obj. -3386.07 iterations 2
Cbc0038I Pass  43: suminf.    0.70760 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  44: suminf.    0.92191 (4) obj. -3386.07 iterations 4
Cbc0038I Pass  45: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  46: suminf.    0.88391 (3) obj. -3386.07 iterations 0
Cbc0038I Pass  47: suminf.    1.30768 (4) obj. -3386.07 iterations 2
Cbc0038I Pass  48: suminf.    0.70760 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  49: suminf.    0.92191 (4) obj. -3386.07 iterations 4
Cbc0038I Pass  50: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  51: suminf.    0.88391 (3) obj. -3386.07 iterations 0
Cbc0038I Pass  52: suminf.    1.30768 (4) obj. -3386.07 iterations 2
Cbc0038I Pass  53: suminf.    0.70760 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  54: suminf.    0.92191 (4) obj. -3386.07 iterations 4
Cbc0038I Pass  55: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I Pass  56: suminf.    0.88391 (3) obj. -3386.07 iterations 0
Cbc0038I Pass  57: suminf.    1.30768 (4) obj. -3386.07 iterations 2
Cbc0038I Pass  58: suminf.    0.70760 (3) obj. -3386.07 iterations 3
Cbc0038I Pass  59: suminf.    0.92191 (4) obj. -3386.07 iterations 4
Cbc0038I Pass  60: suminf.    0.88391 (3) obj. -3386.07 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 29 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3029.13 - took 0.02 seconds
Cbc0012I Integer solution of -3029.131 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 60 rows 33 columns, reduced to 29 rows 21 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 6.7142857
Cbc0013I At root node, 12 cuts changed objective from -4365.7975 to -3029.131 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 280 row cuts average 4.3 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 81 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 65 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3029.130999999999, took 197 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-26) rows, 77 (-20) columns and 848 (-566) elements
Clp1000I sum of infeasibilities 1.36921e-06 - average 1.87563e-08, 74 fixed columns
Coin0506I Presolve 2 (-71) rows, 3 (-74) columns and 5 (-843) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 1709.381
Clp0000I Optimal - objective value 1709.381
Coin0511I After Postsolve, objective 1709.381, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0438685 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 5575.0561
Clp0000I Optimal - objective value 5575.0561
Clp0000I Optimal - objective value 5575.0561
Coin0511I After Postsolve, objective 5575.0561, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5575.056055 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 78 columns (78 integer (78 of which binary)) and 851 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.721%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.10274
Cbc0038I Pass   1: suminf.    2.61426 (15) obj. -2587.16 iterations 35
Cbc0038I Pass   2: suminf.    2.61426 (15) obj. -2587.16 iterations 5
Cbc0038I Solution found of -904.448
Cbc0038I Rounding solution of -1447.31 is better than previous of -904.448

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 78 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1447.31 to -3005.06 (0.01 seconds)
Cbc0038I Round again with cutoff of -3197.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.86845 (27) obj. -3197.8 iterations 5
Cbc0038I Pass   4: suminf.    3.86845 (27) obj. -3197.8 iterations 1
Cbc0038I Pass   5: suminf.    2.81673 (20) obj. -3197.8 iterations 12
Cbc0038I Pass   6: suminf.    2.81673 (20) obj. -3197.8 iterations 0
Cbc0038I Pass   7: suminf.    0.66382 (5) obj. -3197.8 iterations 26
Cbc0038I Pass   8: suminf.    0.66382 (5) obj. -3197.8 iterations 0
Cbc0038I Pass   9: suminf.    0.22945 (1) obj. -3197.8 iterations 8
Cbc0038I Pass  10: suminf.    0.40000 (1) obj. -3509.06 iterations 1
Cbc0038I Pass  11: suminf.    3.24438 (13) obj. -3197.8 iterations 18
Cbc0038I Pass  12: suminf.    2.06178 (8) obj. -3350.49 iterations 4
Cbc0038I Pass  13: suminf.    0.48848 (2) obj. -3197.8 iterations 16
Cbc0038I Pass  14: suminf.    0.48848 (2) obj. -3197.8 iterations 0
Cbc0038I Pass  15: suminf.    0.80507 (2) obj. -3197.8 iterations 3
Cbc0038I Pass  16: suminf.    2.37593 (11) obj. -3197.8 iterations 12
Cbc0038I Pass  17: suminf.    2.22703 (9) obj. -3241.32 iterations 3
Cbc0038I Pass  18: suminf.    0.45080 (1) obj. -3197.8 iterations 10
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -3240.47 iterations 1
Cbc0038I Pass  20: suminf.    4.65047 (17) obj. -3197.8 iterations 39
Cbc0038I Pass  21: suminf.    4.65047 (17) obj. -3197.8 iterations 3
Cbc0038I Pass  22: suminf.    1.34461 (6) obj. -3197.8 iterations 11
Cbc0038I Pass  23: suminf.    1.34461 (6) obj. -3197.8 iterations 2
Cbc0038I Pass  24: suminf.    0.78883 (3) obj. -3197.8 iterations 9
Cbc0038I Pass  25: suminf.    0.78883 (3) obj. -3197.8 iterations 0
Cbc0038I Pass  26: suminf.    0.87116 (3) obj. -3197.8 iterations 1
Cbc0038I Pass  27: suminf.    0.87116 (3) obj. -3197.8 iterations 0
Cbc0038I Pass  28: suminf.    1.88212 (9) obj. -3197.8 iterations 8
Cbc0038I Pass  29: suminf.    1.41331 (6) obj. -3301.23 iterations 7
Cbc0038I Pass  30: suminf.    0.84906 (2) obj. -3197.8 iterations 7
Cbc0038I Pass  31: suminf.    0.84906 (2) obj. -3197.8 iterations 0
Cbc0038I Pass  32: suminf.    0.83550 (2) obj. -3197.8 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 78 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3005.06 - took 0.01 seconds
Cbc0012I Integer solution of -3005.065 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 74 rows 78 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -3029.131 found by DiveCoefficient after 52 iterations and 0 nodes (0.03 seconds)
Cbc0031I 14 added rows had average density of 5.9285714
Cbc0013I At root node, 14 cuts changed objective from -4932.4499 to -3029.131 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 196 row cuts average 2.0 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3029.130999999999, took 52 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

