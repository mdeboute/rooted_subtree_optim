Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-28) rows, 39 (-11) columns and 213 (-72) elements
Clp1000I sum of infeasibilities 3.21158e-06 - average 4.52335e-08, 26 fixed columns
Coin0506I Presolve 12 (-59) rows, 11 (-28) columns and 39 (-174) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 1.5334106 - largest nonzero change 2.2008941e-05 ( 0.00044017882%) - largest zero change 1.0767134e-05
Clp0000I Optimal - objective value 13909.294
Clp0000I Optimal - objective value 13909.294
Coin0511I After Postsolve, objective 13909.294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6750025 - largest nonzero change 2.6331912e-05 ( 0.0013165956%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 13909.294
Clp0000I Optimal - objective value 13909.294
Clp0000I Optimal - objective value 13909.294
Coin0511I After Postsolve, objective 13909.294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13909.29441 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 71 rows, 39 columns (38 integer (38 of which binary)) and 213 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.240%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.26305
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13076.4 iterations 14
Cbc0038I Solution found of -13076.4
Cbc0038I Relaxing continuous gives -13076.4
Cbc0038I Rounding solution of -13155.4 is better than previous of -13076.4

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 39 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13230.8
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.20752 (6) obj. -13230.8 iterations 6
Cbc0038I Pass   3: suminf.    4.48080 (13) obj. -13230.8 iterations 16
Cbc0038I Pass   4: suminf.    1.00000 (6) obj. -13230.8 iterations 8
Cbc0038I Pass   5: suminf.    1.00000 (4) obj. -13230.8 iterations 8
Cbc0038I Pass   6: suminf.    1.08257 (4) obj. -13230.8 iterations 2
Cbc0038I Pass   7: suminf.    0.30907 (4) obj. -13230.8 iterations 12
Cbc0038I Solution found of -13396.9
Cbc0038I Relaxing continuous gives -13396.9
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 39 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -13499.3
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.56848 (6) obj. -13499.3 iterations 0
Cbc0038I Pass   9: suminf.    4.58655 (13) obj. -13499.3 iterations 17
Cbc0038I Pass  10: suminf.    1.00000 (6) obj. -13499.3 iterations 5
Cbc0038I Pass  11: suminf.    0.71200 (8) obj. -13499.3 iterations 9
Cbc0038I Pass  12: suminf.    0.61815 (7) obj. -13499.3 iterations 9
Cbc0038I Pass  13: suminf.    1.00000 (4) obj. -13499.3 iterations 9
Cbc0038I Pass  14: suminf.    1.00000 (6) obj. -13499.3 iterations 9
Cbc0038I Pass  15: suminf.    1.00000 (6) obj. -13499.3 iterations 1
Cbc0038I Pass  16: suminf.    1.00000 (6) obj. -13499.3 iterations 1
Cbc0038I Pass  17: suminf.    1.16751 (9) obj. -13499.3 iterations 7
Cbc0038I Pass  18: suminf.    1.26240 (10) obj. -13499.3 iterations 11
Cbc0038I Pass  19: suminf.    0.75101 (2) obj. -13499.3 iterations 6
Cbc0038I Pass  20: suminf.    1.00000 (2) obj. -13639.6 iterations 7
Cbc0038I Pass  21: suminf.    1.00000 (5) obj. -13499.3 iterations 12
Cbc0038I Pass  22: suminf.    1.00000 (6) obj. -13499.3 iterations 5
Cbc0038I Pass  23: suminf.    0.71200 (8) obj. -13499.3 iterations 4
Cbc0038I Pass  24: suminf.    0.56848 (6) obj. -13499.3 iterations 3
Cbc0038I Pass  25: suminf.    4.58655 (13) obj. -13499.3 iterations 12
Cbc0038I Pass  26: suminf.    3.71001 (9) obj. -13499.3 iterations 9
Cbc0038I Pass  27: suminf.    4.33570 (11) obj. -13499.3 iterations 5
Cbc0038I Pass  28: suminf.    0.96535 (5) obj. -13499.3 iterations 5
Cbc0038I Pass  29: suminf.    0.88211 (2) obj. -13499.3 iterations 5
Cbc0038I Pass  30: suminf.    1.00000 (2) obj. -13555.9 iterations 7
Cbc0038I Pass  31: suminf.    1.00000 (6) obj. -13499.3 iterations 6
Cbc0038I Pass  32: suminf.    0.71200 (8) obj. -13499.3 iterations 5
Cbc0038I Pass  33: suminf.    0.56848 (6) obj. -13499.3 iterations 3
Cbc0038I Pass  34: suminf.    4.58655 (13) obj. -13499.3 iterations 12
Cbc0038I Pass  35: suminf.    4.00000 (11) obj. -13499.3 iterations 8
Cbc0038I Pass  36: suminf.    3.79578 (11) obj. -13499.3 iterations 7
Cbc0038I Pass  37: suminf.    4.45526 (13) obj. -13499.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 39 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -13396.9 - took 0.02 seconds
Cbc0012I Integer solution of -13396.863 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 71 rows 39 columns, reduced to 12 rows 12 columns
Cbc0031I 3 added rows had average density of 2.3333333
Cbc0013I At root node, 47 cuts changed objective from -13909.294 to -13396.863 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13396.863, took 5 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-18) rows, 85 (-11) columns and 1124 (-289) elements
Clp1000I sum of infeasibilities 7.59406e-08 - average 9.49258e-10, 75 fixed columns
Coin0506I Presolve 9 (-71) rows, 10 (-75) columns and 26 (-1098) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 12288.377
Clp0000I Optimal - objective value 12288.377
Coin0511I After Postsolve, objective 12288.377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7880829 - largest nonzero change 2.2478376e-05 ( 0.00033406013%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 16077.776
Clp0000I Optimal - objective value 16077.776
Clp0000I Optimal - objective value 16077.776
Coin0511I After Postsolve, objective 16077.776, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16077.77647 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 85 columns (85 integer (85 of which binary)) and 1128 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.265%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 11.8289
Cbc0038I Pass   1: suminf.    4.57199 (25) obj. -6510.96 iterations 30
Cbc0038I Pass   2: suminf.    4.57199 (25) obj. -6510.96 iterations 2
Cbc0038I Pass   3: suminf.    0.21374 (4) obj. -5438.46 iterations 21
Cbc0038I Solution found of -5319.2
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 85 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -5319.2 to -13076.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -13313.2
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    9.12507 (40) obj. -13313.2 iterations 16
Cbc0038I Pass   5: suminf.    9.12507 (40) obj. -13313.2 iterations 0
Cbc0038I Pass   6: suminf.    5.67753 (29) obj. -13313.2 iterations 11
Cbc0038I Pass   7: suminf.    2.25235 (15) obj. -13313.2 iterations 14
Cbc0038I Pass   8: suminf.    2.23356 (14) obj. -13905.6 iterations 1
Cbc0038I Pass   9: suminf.    0.33297 (1) obj. -13313.2 iterations 25
Cbc0038I Pass  10: suminf.    0.33333 (1) obj. -13313.4 iterations 7
Cbc0038I Pass  11: suminf.    2.33995 (10) obj. -13313.2 iterations 20
Cbc0038I Pass  12: suminf.    2.33995 (10) obj. -13313.2 iterations 6
Cbc0038I Pass  13: suminf.    6.07141 (21) obj. -13313.2 iterations 25
Cbc0038I Pass  14: suminf.    4.68259 (18) obj. -13313.2 iterations 9
Cbc0038I Pass  15: suminf.    4.15590 (17) obj. -13313.2 iterations 2
Cbc0038I Pass  16: suminf.    1.16423 (6) obj. -13313.2 iterations 18
Cbc0038I Pass  17: suminf.    1.16958 (3) obj. -13313.2 iterations 11
Cbc0038I Pass  18: suminf.    1.16958 (3) obj. -13313.2 iterations 7
Cbc0038I Pass  19: suminf.    1.00000 (4) obj. -13313.2 iterations 9
Cbc0038I Pass  20: suminf.    0.35325 (3) obj. -13313.2 iterations 8
Cbc0038I Pass  21: suminf.    0.35325 (3) obj. -13313.2 iterations 1
Cbc0038I Pass  22: suminf.    1.00000 (4) obj. -13313.2 iterations 9
Cbc0038I Pass  23: suminf.    3.33373 (17) obj. -13313.2 iterations 26
Cbc0038I Pass  24: suminf.    2.56876 (10) obj. -13612.9 iterations 12
Cbc0038I Pass  25: suminf.    0.81708 (2) obj. -13313.2 iterations 18
Cbc0038I Pass  26: suminf.    1.00000 (2) obj. -13400.9 iterations 6
Cbc0038I Pass  27: suminf.    0.64965 (3) obj. -13313.2 iterations 5
Cbc0038I Pass  28: suminf.    1.00000 (4) obj. -13313.2 iterations 8
Cbc0038I Pass  29: suminf.    1.00000 (4) obj. -13313.2 iterations 0
Cbc0038I Pass  30: suminf.    0.64965 (3) obj. -13313.2 iterations 7
Cbc0038I Pass  31: suminf.    2.33207 (8) obj. -13313.2 iterations 16
Cbc0038I Pass  32: suminf.    1.44398 (6) obj. -13313.2 iterations 6
Cbc0038I Pass  33: suminf.    1.44398 (6) obj. -13313.2 iterations 1
Cbc0038I Rounding solution of -13155.4 is better than previous of -13076.4

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 85 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -13155.4 to -13396.9 (0.03 seconds)
Cbc0038I Round again with cutoff of -13806.3
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    9.38129 (40) obj. -13806.3 iterations 0
Cbc0038I Pass  34: suminf.    3.33218 (20) obj. -13806.3 iterations 20
Cbc0038I Pass  35: suminf.    3.33218 (20) obj. -13806.3 iterations 0
Cbc0038I Pass  36: suminf.    1.48069 (3) obj. -13806.3 iterations 45
Cbc0038I Pass  37: suminf.    1.32438 (4) obj. -13806.3 iterations 1
Cbc0038I Pass  38: suminf.    1.48069 (3) obj. -13806.3 iterations 10
Cbc0038I Pass  39: suminf.    1.87200 (9) obj. -13806.3 iterations 13
Cbc0038I Pass  40: suminf.    1.80603 (7) obj. -13806.3 iterations 3
Cbc0038I Pass  41: suminf.    1.21655 (3) obj. -13806.3 iterations 5
Cbc0038I Pass  42: suminf.    1.06727 (3) obj. -13832.2 iterations 13
Cbc0038I Pass  43: suminf.    1.21655 (3) obj. -13806.3 iterations 13
Cbc0038I Pass  44: suminf.    3.35490 (17) obj. -13806.3 iterations 21
Cbc0038I Pass  45: suminf.    2.46894 (10) obj. -13806.3 iterations 6
Cbc0038I Pass  46: suminf.    1.48069 (3) obj. -13806.3 iterations 17
Cbc0038I Pass  47: suminf.    1.32438 (4) obj. -13806.3 iterations 9
Cbc0038I Pass  48: suminf.    2.59078 (14) obj. -13806.3 iterations 17
Cbc0038I Pass  49: suminf.    2.21546 (8) obj. -13806.3 iterations 8
Cbc0038I Pass  50: suminf.    3.88020 (19) obj. -13806.3 iterations 20
Cbc0038I Pass  51: suminf.    3.83720 (17) obj. -13806.3 iterations 1
Cbc0038I Pass  52: suminf.    2.16850 (5) obj. -13806.3 iterations 23
Cbc0038I Pass  53: suminf.    2.16850 (5) obj. -13806.3 iterations 0
Cbc0038I Pass  54: suminf.    1.67617 (4) obj. -13806.3 iterations 8
Cbc0038I Pass  55: suminf.    1.61001 (5) obj. -13806.3 iterations 1
Cbc0038I Pass  56: suminf.    1.83240 (4) obj. -13806.3 iterations 11
Cbc0038I Pass  57: suminf.    1.73513 (5) obj. -13806.3 iterations 9
Cbc0038I Pass  58: suminf.    3.38103 (11) obj. -13806.3 iterations 23
Cbc0038I Pass  59: suminf.    2.84107 (11) obj. -13806.3 iterations 8
Cbc0038I Pass  60: suminf.    1.77606 (4) obj. -13806.3 iterations 14
Cbc0038I Pass  61: suminf.    1.76293 (5) obj. -13806.3 iterations 9
Cbc0038I Pass  62: suminf.    3.31200 (13) obj. -13806.3 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 85 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -13396.9 - took 0.04 seconds
Cbc0012I Integer solution of -13396.863 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 80 rows 85 columns, reduced to 2 rows 3 columns
Cbc0031I 4 added rows had average density of 15.75
Cbc0013I At root node, 63 cuts changed objective from -13651.949 to -13396.863 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.9 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13396.863, took 50 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-28) rows, 39 (-11) columns and 213 (-72) elements
Clp1000I sum of infeasibilities 3.21158e-06 - average 4.52335e-08, 26 fixed columns
Coin0506I Presolve 12 (-59) rows, 11 (-28) columns and 39 (-174) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 1.5334106 - largest nonzero change 2.2008941e-05 ( 0.00044017882%) - largest zero change 1.0767134e-05
Clp0000I Optimal - objective value 13909.294
Clp0000I Optimal - objective value 13909.294
Coin0511I After Postsolve, objective 13909.294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6750025 - largest nonzero change 2.6331912e-05 ( 0.0013165956%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 13909.294
Clp0000I Optimal - objective value 13909.294
Clp0000I Optimal - objective value 13909.294
Coin0511I After Postsolve, objective 13909.294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13909.29441 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 71 rows, 39 columns (38 integer (38 of which binary)) and 213 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.240%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.26305
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13076.4 iterations 14
Cbc0038I Solution found of -13076.4
Cbc0038I Relaxing continuous gives -13076.4
Cbc0038I Rounding solution of -13155.4 is better than previous of -13076.4

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 39 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13230.8
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.20752 (6) obj. -13230.8 iterations 6
Cbc0038I Pass   3: suminf.    4.48080 (13) obj. -13230.8 iterations 16
Cbc0038I Pass   4: suminf.    1.00000 (6) obj. -13230.8 iterations 8
Cbc0038I Pass   5: suminf.    1.00000 (4) obj. -13230.8 iterations 8
Cbc0038I Pass   6: suminf.    1.08257 (4) obj. -13230.8 iterations 2
Cbc0038I Pass   7: suminf.    0.30907 (4) obj. -13230.8 iterations 12
Cbc0038I Solution found of -13396.9
Cbc0038I Relaxing continuous gives -13396.9
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 39 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13499.3
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.56848 (6) obj. -13499.3 iterations 0
Cbc0038I Pass   9: suminf.    4.58655 (13) obj. -13499.3 iterations 17
Cbc0038I Pass  10: suminf.    1.00000 (6) obj. -13499.3 iterations 5
Cbc0038I Pass  11: suminf.    0.71200 (8) obj. -13499.3 iterations 9
Cbc0038I Pass  12: suminf.    0.61815 (7) obj. -13499.3 iterations 9
Cbc0038I Pass  13: suminf.    1.00000 (4) obj. -13499.3 iterations 9
Cbc0038I Pass  14: suminf.    1.00000 (6) obj. -13499.3 iterations 9
Cbc0038I Pass  15: suminf.    1.00000 (6) obj. -13499.3 iterations 1
Cbc0038I Pass  16: suminf.    1.00000 (6) obj. -13499.3 iterations 1
Cbc0038I Pass  17: suminf.    1.16751 (9) obj. -13499.3 iterations 7
Cbc0038I Pass  18: suminf.    1.26240 (10) obj. -13499.3 iterations 11
Cbc0038I Pass  19: suminf.    0.75101 (2) obj. -13499.3 iterations 6
Cbc0038I Pass  20: suminf.    1.00000 (2) obj. -13639.6 iterations 7
Cbc0038I Pass  21: suminf.    1.00000 (5) obj. -13499.3 iterations 12
Cbc0038I Pass  22: suminf.    1.00000 (6) obj. -13499.3 iterations 5
Cbc0038I Pass  23: suminf.    0.71200 (8) obj. -13499.3 iterations 4
Cbc0038I Pass  24: suminf.    0.56848 (6) obj. -13499.3 iterations 3
Cbc0038I Pass  25: suminf.    4.58655 (13) obj. -13499.3 iterations 12
Cbc0038I Pass  26: suminf.    3.71001 (9) obj. -13499.3 iterations 9
Cbc0038I Pass  27: suminf.    4.33570 (11) obj. -13499.3 iterations 5
Cbc0038I Pass  28: suminf.    0.96535 (5) obj. -13499.3 iterations 5
Cbc0038I Pass  29: suminf.    0.88211 (2) obj. -13499.3 iterations 5
Cbc0038I Pass  30: suminf.    1.00000 (2) obj. -13555.9 iterations 7
Cbc0038I Pass  31: suminf.    1.00000 (6) obj. -13499.3 iterations 6
Cbc0038I Pass  32: suminf.    0.71200 (8) obj. -13499.3 iterations 5
Cbc0038I Pass  33: suminf.    0.56848 (6) obj. -13499.3 iterations 3
Cbc0038I Pass  34: suminf.    4.58655 (13) obj. -13499.3 iterations 12
Cbc0038I Pass  35: suminf.    4.00000 (11) obj. -13499.3 iterations 8
Cbc0038I Pass  36: suminf.    3.79578 (11) obj. -13499.3 iterations 7
Cbc0038I Pass  37: suminf.    4.45526 (13) obj. -13499.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 39 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -13396.9 - took 0.02 seconds
Cbc0012I Integer solution of -13396.863 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 71 rows 39 columns, reduced to 12 rows 12 columns
Cbc0031I 3 added rows had average density of 2.3333333
Cbc0013I At root node, 47 cuts changed objective from -13909.294 to -13396.863 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13396.863, took 5 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-19) rows, 85 (-12) columns and 1124 (-290) elements
Clp1000I sum of infeasibilities 7.59406e-08 - average 9.49258e-10, 75 fixed columns
Coin0506I Presolve 9 (-71) rows, 10 (-75) columns and 26 (-1098) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 12288.377
Clp0000I Optimal - objective value 12288.377
Coin0511I After Postsolve, objective 12288.377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7880829 - largest nonzero change 2.2478376e-05 ( 0.00033406013%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 16077.776
Clp0000I Optimal - objective value 16077.776
Clp0000I Optimal - objective value 16077.776
Coin0511I After Postsolve, objective 16077.776, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16077.77647 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 85 columns (85 integer (85 of which binary)) and 1128 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.265%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 11.8289
Cbc0038I Pass   1: suminf.    4.57199 (25) obj. -6510.96 iterations 30
Cbc0038I Pass   2: suminf.    4.57199 (25) obj. -6510.96 iterations 2
Cbc0038I Pass   3: suminf.    0.21374 (4) obj. -5438.46 iterations 21
Cbc0038I Solution found of -5319.2
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 85 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -5319.2 to -13076.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -13313.2
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    9.12507 (40) obj. -13313.2 iterations 16
Cbc0038I Pass   5: suminf.    9.12507 (40) obj. -13313.2 iterations 0
Cbc0038I Pass   6: suminf.    5.67753 (29) obj. -13313.2 iterations 11
Cbc0038I Pass   7: suminf.    2.25235 (15) obj. -13313.2 iterations 14
Cbc0038I Pass   8: suminf.    2.23356 (14) obj. -13905.6 iterations 1
Cbc0038I Pass   9: suminf.    0.33297 (1) obj. -13313.2 iterations 25
Cbc0038I Pass  10: suminf.    0.33333 (1) obj. -13313.4 iterations 7
Cbc0038I Pass  11: suminf.    2.33995 (10) obj. -13313.2 iterations 20
Cbc0038I Pass  12: suminf.    2.33995 (10) obj. -13313.2 iterations 6
Cbc0038I Pass  13: suminf.    6.07141 (21) obj. -13313.2 iterations 25
Cbc0038I Pass  14: suminf.    4.68259 (18) obj. -13313.2 iterations 9
Cbc0038I Pass  15: suminf.    4.15590 (17) obj. -13313.2 iterations 2
Cbc0038I Pass  16: suminf.    1.16423 (6) obj. -13313.2 iterations 18
Cbc0038I Pass  17: suminf.    1.16958 (3) obj. -13313.2 iterations 11
Cbc0038I Pass  18: suminf.    1.16958 (3) obj. -13313.2 iterations 7
Cbc0038I Pass  19: suminf.    1.00000 (4) obj. -13313.2 iterations 9
Cbc0038I Pass  20: suminf.    0.35325 (3) obj. -13313.2 iterations 8
Cbc0038I Pass  21: suminf.    0.35325 (3) obj. -13313.2 iterations 1
Cbc0038I Pass  22: suminf.    1.00000 (4) obj. -13313.2 iterations 9
Cbc0038I Pass  23: suminf.    3.33373 (17) obj. -13313.2 iterations 26
Cbc0038I Pass  24: suminf.    2.56876 (10) obj. -13612.9 iterations 12
Cbc0038I Pass  25: suminf.    0.81708 (2) obj. -13313.2 iterations 18
Cbc0038I Pass  26: suminf.    1.00000 (2) obj. -13400.9 iterations 6
Cbc0038I Pass  27: suminf.    0.64965 (3) obj. -13313.2 iterations 5
Cbc0038I Pass  28: suminf.    1.00000 (4) obj. -13313.2 iterations 8
Cbc0038I Pass  29: suminf.    1.00000 (4) obj. -13313.2 iterations 0
Cbc0038I Pass  30: suminf.    0.64965 (3) obj. -13313.2 iterations 7
Cbc0038I Pass  31: suminf.    2.33207 (8) obj. -13313.2 iterations 16
Cbc0038I Pass  32: suminf.    1.44398 (6) obj. -13313.2 iterations 6
Cbc0038I Pass  33: suminf.    1.44398 (6) obj. -13313.2 iterations 1
Cbc0038I Rounding solution of -13155.4 is better than previous of -13076.4

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 85 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -13155.4 to -13396.9 (0.03 seconds)
Cbc0038I Round again with cutoff of -13806.3
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    9.38129 (40) obj. -13806.3 iterations 0
Cbc0038I Pass  34: suminf.    3.33218 (20) obj. -13806.3 iterations 20
Cbc0038I Pass  35: suminf.    3.33218 (20) obj. -13806.3 iterations 0
Cbc0038I Pass  36: suminf.    1.48069 (3) obj. -13806.3 iterations 45
Cbc0038I Pass  37: suminf.    1.32438 (4) obj. -13806.3 iterations 1
Cbc0038I Pass  38: suminf.    1.48069 (3) obj. -13806.3 iterations 10
Cbc0038I Pass  39: suminf.    1.87200 (9) obj. -13806.3 iterations 13
Cbc0038I Pass  40: suminf.    1.80603 (7) obj. -13806.3 iterations 3
Cbc0038I Pass  41: suminf.    1.21655 (3) obj. -13806.3 iterations 5
Cbc0038I Pass  42: suminf.    1.06727 (3) obj. -13832.2 iterations 13
Cbc0038I Pass  43: suminf.    1.21655 (3) obj. -13806.3 iterations 13
Cbc0038I Pass  44: suminf.    3.35490 (17) obj. -13806.3 iterations 21
Cbc0038I Pass  45: suminf.    2.46894 (10) obj. -13806.3 iterations 6
Cbc0038I Pass  46: suminf.    1.48069 (3) obj. -13806.3 iterations 17
Cbc0038I Pass  47: suminf.    1.32438 (4) obj. -13806.3 iterations 9
Cbc0038I Pass  48: suminf.    2.59078 (14) obj. -13806.3 iterations 17
Cbc0038I Pass  49: suminf.    2.21546 (8) obj. -13806.3 iterations 8
Cbc0038I Pass  50: suminf.    3.88020 (19) obj. -13806.3 iterations 20
Cbc0038I Pass  51: suminf.    3.83720 (17) obj. -13806.3 iterations 1
Cbc0038I Pass  52: suminf.    2.16850 (5) obj. -13806.3 iterations 23
Cbc0038I Pass  53: suminf.    2.16850 (5) obj. -13806.3 iterations 0
Cbc0038I Pass  54: suminf.    1.67617 (4) obj. -13806.3 iterations 8
Cbc0038I Pass  55: suminf.    1.61001 (5) obj. -13806.3 iterations 1
Cbc0038I Pass  56: suminf.    1.83240 (4) obj. -13806.3 iterations 11
Cbc0038I Pass  57: suminf.    1.73513 (5) obj. -13806.3 iterations 9
Cbc0038I Pass  58: suminf.    3.38103 (11) obj. -13806.3 iterations 23
Cbc0038I Pass  59: suminf.    2.84107 (11) obj. -13806.3 iterations 8
Cbc0038I Pass  60: suminf.    1.77606 (4) obj. -13806.3 iterations 14
Cbc0038I Pass  61: suminf.    1.76293 (5) obj. -13806.3 iterations 9
Cbc0038I Pass  62: suminf.    3.31200 (13) obj. -13806.3 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 85 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -13396.9 - took 0.04 seconds
Cbc0012I Integer solution of -13396.863 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 80 rows 85 columns, reduced to 2 rows 3 columns
Cbc0031I 4 added rows had average density of 15.75
Cbc0013I At root node, 63 cuts changed objective from -13651.949 to -13396.863 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.9 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13396.863, took 50 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

