Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 6.69761e-06 - average 3.72089e-07, 0 fixed columns
Coin0506I Presolve 18 (0) rows, 12 (0) columns and 52 (0) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 79.447825
Clp0000I Optimal - objective value 79.447825
Coin0511I After Postsolve, objective 79.447825, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.447825
Clp0000I Optimal - objective value 79.447825
Clp0000I Optimal - objective value 79.447825
Coin0511I After Postsolve, objective 79.447825, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.44782473 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 12 columns (11 integer (11 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.42294
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.1225 iterations 11
Cbc0038I Solution found of -43.1225
Cbc0038I Relaxing continuous gives -43.1225
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 12 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -43.1225 to -47.5025 (0.01 seconds)
Cbc0038I Round again with cutoff of -50.314
Cbc0038I Pass   2: suminf.    0.27010 (2) obj. -50.314 iterations 2
Cbc0038I Pass   3: suminf.    1.17335 (3) obj. -50.314 iterations 2
Cbc0038I Pass   4: suminf.    1.16481 (3) obj. -50.314 iterations 1
Cbc0038I Pass   5: suminf.    1.16481 (3) obj. -50.314 iterations 1
Cbc0038I Pass   6: suminf.    1.16481 (3) obj. -50.314 iterations 1
Cbc0038I Pass   7: suminf.    1.16481 (3) obj. -50.314 iterations 0
Cbc0038I Pass   8: suminf.    1.52279 (6) obj. -50.314 iterations 3
Cbc0038I Pass   9: suminf.    1.31048 (3) obj. -50.314 iterations 5
Cbc0038I Pass  10: suminf.    1.31048 (3) obj. -50.314 iterations 0
Cbc0038I Pass  11: suminf.    0.27010 (2) obj. -50.314 iterations 5
Cbc0038I Pass  12: suminf.    1.17335 (3) obj. -50.314 iterations 2
Cbc0038I Pass  13: suminf.    1.98161 (6) obj. -50.314 iterations 6
Cbc0038I Pass  14: suminf.    1.14662 (4) obj. -50.314 iterations 4
Cbc0038I Pass  15: suminf.    0.64692 (2) obj. -50.314 iterations 5
Cbc0038I Pass  16: suminf.    0.84858 (2) obj. -50.314 iterations 1
Cbc0038I Pass  17: suminf.    0.84858 (2) obj. -50.314 iterations 0
Cbc0038I Pass  18: suminf.    0.84858 (2) obj. -50.314 iterations 0
Cbc0038I Pass  19: suminf.    1.34344 (3) obj. -50.314 iterations 4
Cbc0038I Pass  20: suminf.    1.34344 (3) obj. -50.314 iterations 1
Cbc0038I Pass  21: suminf.    0.27010 (2) obj. -50.314 iterations 5
Cbc0038I Pass  22: suminf.    1.17335 (3) obj. -50.314 iterations 2
Cbc0038I Pass  23: suminf.    1.16481 (3) obj. -50.314 iterations 2
Cbc0038I Pass  24: suminf.    1.16481 (3) obj. -50.314 iterations 0
Cbc0038I Pass  25: suminf.    1.16481 (3) obj. -50.314 iterations 0
Cbc0038I Pass  26: suminf.    1.29907 (3) obj. -50.314 iterations 6
Cbc0038I Pass  27: suminf.    0.64692 (2) obj. -50.314 iterations 4
Cbc0038I Pass  28: suminf.    0.64692 (2) obj. -50.314 iterations 0
Cbc0038I Pass  29: suminf.    0.84858 (2) obj. -50.314 iterations 1
Cbc0038I Pass  30: suminf.    1.25177 (3) obj. -50.314 iterations 1
Cbc0038I Pass  31: suminf.    0.86118 (3) obj. -50.314 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 12 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -47.5025 - took 0.01 seconds
Cbc0012I Integer solution of -47.5025 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 3
Cbc0013I At root node, 8 cuts changed objective from -75.616637 to -47.5025 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -47.5025, took 24 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-8) rows, 24 (-2) columns and 124 (-29) elements
Clp1000I sum of infeasibilities 2.18549e-08 - average 1.09274e-09, 14 fixed columns
Coin0506I Presolve 7 (-13) rows, 10 (-14) columns and 28 (-96) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 78.8967
Clp0000I Optimal - objective value 78.8967
Coin0511I After Postsolve, objective 78.8967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8772812 - largest nonzero change 2.5934314e-05 ( 0.0016870206%) - largest zero change 2.8474941e-05
Clp0000I Optimal - objective value 133.82441
Clp0000I Optimal - objective value 133.82441
Clp0000I Optimal - objective value 133.82441
Coin0511I After Postsolve, objective 133.82441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.8244056 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 24 columns (24 integer (24 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.269%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 4.18711
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.5025 iterations 7
Cbc0038I Solution found of -24.5025
Cbc0038I Rounding solution of -47.5025 is better than previous of -24.5025

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 24 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -47.5025 to -78.8967 (0.01 seconds)
Cbc0038I Round again with cutoff of -82.2932
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.51905 (8) obj. -98.5861 iterations 0
Cbc0038I Pass   3: suminf.    0.67112 (2) obj. -82.2932 iterations 10
Cbc0038I Pass   4: suminf.    0.67112 (2) obj. -82.2932 iterations 0
Cbc0038I Pass   5: suminf.    0.11322 (1) obj. -82.2932 iterations 2
Cbc0038I Pass   6: suminf.    0.37500 (1) obj. -97.6467 iterations 1
Cbc0038I Pass   7: suminf.    1.82913 (5) obj. -89.8008 iterations 6
Cbc0038I Pass   8: suminf.    1.74802 (4) obj. -88.3937 iterations 3
Cbc0038I Pass   9: suminf.    1.24802 (3) obj. -83.3937 iterations 1
Cbc0038I Pass  10: suminf.    0.46772 (3) obj. -82.2932 iterations 4
Cbc0038I Pass  11: suminf.    0.46772 (3) obj. -82.2932 iterations 0
Cbc0038I Pass  12: suminf.    0.70215 (3) obj. -82.2932 iterations 4
Cbc0038I Pass  13: suminf.    0.50000 (1) obj. -83.8967 iterations 2
Cbc0038I Pass  14: suminf.    0.11322 (1) obj. -82.2932 iterations 3
Cbc0038I Pass  15: suminf.    0.37500 (1) obj. -97.6467 iterations 1
Cbc0038I Pass  16: suminf.    0.30556 (2) obj. -84.7997 iterations 2
Cbc0038I Pass  17: suminf.    0.30556 (2) obj. -84.7997 iterations 1
Cbc0038I Pass  18: suminf.    0.67112 (2) obj. -82.2932 iterations 2
Cbc0038I Pass  19: suminf.    0.67112 (2) obj. -82.2932 iterations 0
Cbc0038I Pass  20: suminf.    0.11322 (1) obj. -82.2932 iterations 2
Cbc0038I Pass  21: suminf.    0.37500 (1) obj. -97.6467 iterations 1
Cbc0038I Pass  22: suminf.    0.80357 (2) obj. -98.7896 iterations 2
Cbc0038I Pass  23: suminf.    0.80357 (2) obj. -98.7896 iterations 2
Cbc0038I Pass  24: suminf.    1.79552 (6) obj. -98.1385 iterations 6
Cbc0038I Pass  25: suminf.    1.61905 (5) obj. -95.7394 iterations 1
Cbc0038I Pass  26: suminf.    0.36448 (1) obj. -82.2932 iterations 6
Cbc0038I Pass  27: suminf.    0.25000 (1) obj. -85.7275 iterations 1
Cbc0038I Pass  28: suminf.    1.11905 (4) obj. -90.1861 iterations 4
Cbc0038I Pass  29: suminf.    1.11905 (4) obj. -90.1861 iterations 0
Cbc0038I Pass  30: suminf.    0.67112 (2) obj. -82.2932 iterations 5
Cbc0038I Pass  31: suminf.    0.67112 (2) obj. -82.2932 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -78.8967 - took 0.01 seconds
Cbc0012I Integer solution of -78.8967 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0001I Search completed - best objective -78.89669999999998, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 6.69761e-06 - average 3.72089e-07, 0 fixed columns
Coin0506I Presolve 18 (0) rows, 12 (0) columns and 52 (0) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 79.447825
Clp0000I Optimal - objective value 79.447825
Coin0511I After Postsolve, objective 79.447825, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.447825
Clp0000I Optimal - objective value 79.447825
Clp0000I Optimal - objective value 79.447825
Coin0511I After Postsolve, objective 79.447825, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.44782473 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 12 columns (11 integer (11 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.42294
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.1225 iterations 11
Cbc0038I Solution found of -43.1225
Cbc0038I Relaxing continuous gives -43.1225
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 12 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -43.1225 to -47.5025 (0.01 seconds)
Cbc0038I Round again with cutoff of -50.314
Cbc0038I Pass   2: suminf.    0.27010 (2) obj. -50.314 iterations 2
Cbc0038I Pass   3: suminf.    1.17335 (3) obj. -50.314 iterations 2
Cbc0038I Pass   4: suminf.    1.16481 (3) obj. -50.314 iterations 1
Cbc0038I Pass   5: suminf.    1.16481 (3) obj. -50.314 iterations 1
Cbc0038I Pass   6: suminf.    1.16481 (3) obj. -50.314 iterations 1
Cbc0038I Pass   7: suminf.    1.16481 (3) obj. -50.314 iterations 0
Cbc0038I Pass   8: suminf.    1.52279 (6) obj. -50.314 iterations 3
Cbc0038I Pass   9: suminf.    1.31048 (3) obj. -50.314 iterations 5
Cbc0038I Pass  10: suminf.    1.31048 (3) obj. -50.314 iterations 0
Cbc0038I Pass  11: suminf.    0.27010 (2) obj. -50.314 iterations 5
Cbc0038I Pass  12: suminf.    1.17335 (3) obj. -50.314 iterations 2
Cbc0038I Pass  13: suminf.    1.98161 (6) obj. -50.314 iterations 6
Cbc0038I Pass  14: suminf.    1.14662 (4) obj. -50.314 iterations 4
Cbc0038I Pass  15: suminf.    0.64692 (2) obj. -50.314 iterations 5
Cbc0038I Pass  16: suminf.    0.84858 (2) obj. -50.314 iterations 1
Cbc0038I Pass  17: suminf.    0.84858 (2) obj. -50.314 iterations 0
Cbc0038I Pass  18: suminf.    0.84858 (2) obj. -50.314 iterations 0
Cbc0038I Pass  19: suminf.    1.34344 (3) obj. -50.314 iterations 4
Cbc0038I Pass  20: suminf.    1.34344 (3) obj. -50.314 iterations 1
Cbc0038I Pass  21: suminf.    0.27010 (2) obj. -50.314 iterations 5
Cbc0038I Pass  22: suminf.    1.17335 (3) obj. -50.314 iterations 2
Cbc0038I Pass  23: suminf.    1.16481 (3) obj. -50.314 iterations 2
Cbc0038I Pass  24: suminf.    1.16481 (3) obj. -50.314 iterations 0
Cbc0038I Pass  25: suminf.    1.16481 (3) obj. -50.314 iterations 0
Cbc0038I Pass  26: suminf.    1.29907 (3) obj. -50.314 iterations 6
Cbc0038I Pass  27: suminf.    0.64692 (2) obj. -50.314 iterations 4
Cbc0038I Pass  28: suminf.    0.64692 (2) obj. -50.314 iterations 0
Cbc0038I Pass  29: suminf.    0.84858 (2) obj. -50.314 iterations 1
Cbc0038I Pass  30: suminf.    1.25177 (3) obj. -50.314 iterations 1
Cbc0038I Pass  31: suminf.    0.86118 (3) obj. -50.314 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 12 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -47.5025 - took 0.01 seconds
Cbc0012I Integer solution of -47.5025 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 3
Cbc0013I At root node, 8 cuts changed objective from -75.616637 to -47.5025 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -47.5025, took 24 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 23 (-4) columns and 112 (-42) elements
Clp1000I sum of infeasibilities 4.26369e-10 - average 2.24405e-11, 3 fixed columns
Coin0506I Presolve 16 (-3) rows, 18 (-5) columns and 72 (-40) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 86.916983
Clp0000I Optimal - objective value 86.916983
Coin0511I After Postsolve, objective 86.916983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.916983
Clp0000I Optimal - objective value 86.916983
Clp0000I Optimal - objective value 86.916983
Coin0511I After Postsolve, objective 86.916983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.91698285 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 23 columns (23 integer (23 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.638%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.21492
Cbc0038I Pass   1: suminf.    0.21111 (2) obj. -55.5842 iterations 4
Cbc0038I Pass   2: suminf.    0.21111 (2) obj. -55.5842 iterations 0
Cbc0038I Solution found of -45.7175
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 23 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -48.0306
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.21111 (2) obj. -55.5842 iterations 0
Cbc0038I Pass   4: suminf.    0.21111 (2) obj. -55.5842 iterations 0
Cbc0038I Pass   5: suminf.    0.13607 (1) obj. -48.0306 iterations 3
Cbc0038I Pass   6: suminf.    0.24390 (1) obj. -49.8638 iterations 1
Cbc0038I Pass   7: suminf.    0.88305 (5) obj. -50.2833 iterations 5
Cbc0038I Pass   8: suminf.    0.88305 (5) obj. -50.2833 iterations 0
Cbc0038I Pass   9: suminf.    0.96263 (4) obj. -48.0306 iterations 5
Cbc0038I Pass  10: suminf.    0.68844 (4) obj. -48.0306 iterations 1
Cbc0038I Pass  11: suminf.    0.94117 (3) obj. -48.0306 iterations 2
Cbc0038I Pass  12: suminf.    1.80179 (6) obj. -48.0306 iterations 2
Cbc0038I Pass  13: suminf.    1.80179 (6) obj. -48.0306 iterations 0
Cbc0038I Pass  14: suminf.    0.89563 (4) obj. -48.0306 iterations 3
Cbc0038I Pass  15: suminf.    1.33779 (5) obj. -48.0306 iterations 2
Cbc0038I Pass  16: suminf.    1.10871 (5) obj. -48.0306 iterations 2
Cbc0038I Pass  17: suminf.    0.94117 (3) obj. -48.0306 iterations 4
Cbc0038I Pass  18: suminf.    0.68844 (4) obj. -48.0306 iterations 1
Cbc0038I Pass  19: suminf.    0.94117 (3) obj. -48.0306 iterations 2
Cbc0038I Pass  20: suminf.    1.29492 (5) obj. -48.0306 iterations 4
Cbc0038I Pass  21: suminf.    1.14846 (6) obj. -48.0306 iterations 1
Cbc0038I Pass  22: suminf.    1.56689 (6) obj. -48.0306 iterations 4
Cbc0038I Pass  23: suminf.    0.87075 (5) obj. -48.0306 iterations 4
Cbc0038I Pass  24: suminf.    0.84199 (4) obj. -48.0306 iterations 4
Cbc0038I Pass  25: suminf.    0.76745 (4) obj. -48.0306 iterations 1
Cbc0038I Pass  26: suminf.    0.94117 (3) obj. -48.0306 iterations 3
Cbc0038I Pass  27: suminf.    0.68844 (4) obj. -48.0306 iterations 1
Cbc0038I Pass  28: suminf.    0.94117 (3) obj. -48.0306 iterations 2
Cbc0038I Pass  29: suminf.    0.99286 (6) obj. -57.9637 iterations 6
Cbc0038I Pass  30: suminf.    0.99286 (6) obj. -57.9637 iterations 1
Cbc0038I Pass  31: suminf.    0.96263 (4) obj. -48.0306 iterations 4
Cbc0038I Pass  32: suminf.    1.44220 (6) obj. -48.0306 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 23 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -45.7175 to -47.5025 (0.01 seconds)
Cbc0038I Round again with cutoff of -52.1941
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.21111 (2) obj. -55.5842 iterations 0
Cbc0038I Pass  33: suminf.    0.21111 (2) obj. -55.5842 iterations 0
Cbc0038I Pass  34: suminf.    0.50978 (2) obj. -52.1941 iterations 4
Cbc0038I Pass  35: suminf.    0.45616 (2) obj. -52.1941 iterations 2
Cbc0038I Pass  36: suminf.    0.45616 (2) obj. -52.1941 iterations 0
Cbc0038I Pass  37: suminf.    0.50978 (2) obj. -52.1941 iterations 1
Cbc0038I Pass  38: suminf.    0.85612 (3) obj. -52.1941 iterations 7
Cbc0038I Pass  39: suminf.    0.85612 (3) obj. -52.1941 iterations 0
Cbc0038I Pass  40: suminf.    0.67341 (2) obj. -52.1941 iterations 4
Cbc0038I Pass  41: suminf.    0.88193 (2) obj. -52.1941 iterations 3
Cbc0038I Pass  42: suminf.    0.72353 (2) obj. -53.4613 iterations 1
Cbc0038I Pass  43: suminf.    0.88193 (2) obj. -52.1941 iterations 3
Cbc0038I Pass  44: suminf.    1.19393 (7) obj. -52.1941 iterations 4
Cbc0038I Pass  45: suminf.    0.73819 (2) obj. -52.1941 iterations 2
Cbc0038I Pass  46: suminf.    0.72114 (3) obj. -52.1941 iterations 1
Cbc0038I Pass  47: suminf.    0.88193 (2) obj. -52.1941 iterations 5
Cbc0038I Pass  48: suminf.    0.72353 (2) obj. -53.4613 iterations 2
Cbc0038I Pass  49: suminf.    0.88193 (2) obj. -52.1941 iterations 3
Cbc0038I Pass  50: suminf.    3.01608 (9) obj. -52.1941 iterations 9
Cbc0038I Pass  51: suminf.    2.33639 (7) obj. -52.1941 iterations 4
Cbc0038I Pass  52: suminf.    1.58504 (5) obj. -52.1941 iterations 3
Cbc0038I Pass  53: suminf.    1.46841 (5) obj. -52.1941 iterations 1
Cbc0038I Pass  54: suminf.    1.58873 (5) obj. -52.1941 iterations 2
Cbc0038I Pass  55: suminf.    1.39524 (5) obj. -53.7421 iterations 1
Cbc0038I Pass  56: suminf.    1.46841 (5) obj. -52.1941 iterations 2
Cbc0038I Pass  57: suminf.    0.76999 (4) obj. -52.1941 iterations 8
Cbc0038I Pass  58: suminf.    0.76999 (4) obj. -52.1941 iterations 0
Cbc0038I Pass  59: suminf.    0.61959 (2) obj. -52.1941 iterations 4
Cbc0038I Pass  60: suminf.    0.60422 (3) obj. -52.1941 iterations 2
Cbc0038I Pass  61: suminf.    0.61959 (2) obj. -52.1941 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 23 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -47.5025 - took 0.01 seconds
Cbc0012I Integer solution of -47.5025 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 23 columns, reduced to 5 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -68.848045 to -46.702652 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 24 row cuts average 3.8 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -47.5025, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

