Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 0.000563594 - average 1.04369e-05, 3 fixed columns
Coin0506I Presolve 47 (-7) rows, 27 (-3) columns and 140 (-20) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 92.489496
Clp0000I Optimal - objective value 92.489496
Coin0511I After Postsolve, objective 92.489496, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.489496
Clp0000I Optimal - objective value 92.489496
Clp0000I Optimal - objective value 92.489496
Coin0511I After Postsolve, objective 92.489496, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.48949637 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.1717
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -37.2525 iterations 23
Cbc0038I Solution found of -37.2525
Cbc0038I Relaxing continuous gives -37.2525
Cbc0038I Rounding solution of -38.2837 is better than previous of -37.2525

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.7044
Cbc0038I Pass   2: suminf.    0.16900 (1) obj. -43.7044 iterations 1
Cbc0038I Pass   3: suminf.    0.31924 (1) obj. -43.7044 iterations 1
Cbc0038I Pass   4: suminf.    3.45200 (8) obj. -43.7044 iterations 8
Cbc0038I Pass   5: suminf.    0.09677 (1) obj. -43.7044 iterations 6
Cbc0038I Pass   6: suminf.    0.20196 (1) obj. -43.7044 iterations 1
Cbc0038I Pass   7: suminf.    1.02684 (6) obj. -43.7044 iterations 7
Cbc0038I Pass   8: suminf.    0.36316 (2) obj. -43.7044 iterations 4
Cbc0038I Pass   9: suminf.    1.95393 (5) obj. -43.7044 iterations 8
Cbc0038I Pass  10: suminf.    1.04152 (3) obj. -43.7044 iterations 7
Cbc0038I Pass  11: suminf.    0.39176 (2) obj. -43.7044 iterations 3
Cbc0038I Pass  12: suminf.    0.23967 (1) obj. -43.7044 iterations 2
Cbc0038I Pass  13: suminf.    0.12903 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  14: suminf.    1.02712 (5) obj. -43.7044 iterations 6
Cbc0038I Pass  15: suminf.    0.08065 (1) obj. -43.7044 iterations 5
Cbc0038I Pass  16: suminf.    0.13469 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  17: suminf.    1.73628 (8) obj. -43.7044 iterations 6
Cbc0038I Pass  18: suminf.    1.12120 (4) obj. -43.7044 iterations 4
Cbc0038I Pass  19: suminf.    1.06993 (4) obj. -43.7044 iterations 2
Cbc0038I Pass  20: suminf.    1.68656 (6) obj. -43.7044 iterations 12
Cbc0038I Pass  21: suminf.    1.65962 (7) obj. -43.7044 iterations 1
Cbc0038I Pass  22: suminf.    0.77961 (2) obj. -43.7044 iterations 7
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  24: suminf.    0.26957 (1) obj. -43.7044 iterations 3
Cbc0038I Pass  25: suminf.    0.28038 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  26: suminf.    1.98909 (5) obj. -43.7044 iterations 7
Cbc0038I Pass  27: suminf.    0.30561 (2) obj. -43.7044 iterations 6
Cbc0038I Pass  28: suminf.    0.57635 (2) obj. -43.7044 iterations 2
Cbc0038I Pass  29: suminf.    0.48725 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  30: suminf.    4.43872 (12) obj. -43.7044 iterations 15
Cbc0038I Pass  31: suminf.    1.79327 (7) obj. -43.7044 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 41 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -38.2837 - took 0.04 seconds
Cbc0012I Integer solution of -38.283715 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 27 rows 17 columns
Cbc0031I 13 added rows had average density of 12.076923
Cbc0013I At root node, 13 cuts changed objective from -92.489496 to -59.745781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2808 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 998 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 162 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38.28371500000002, took 2906 iterations and 4 nodes (0.19 seconds)
Cbc0032I Strong branching done 54 times (787 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 54 (-6) columns and 514 (-98) elements
Clp1000I sum of infeasibilities 0 - average 0, 42 fixed columns
Coin0506I Presolve 9 (-41) rows, 12 (-42) columns and 37 (-477) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 1.2264663 - largest nonzero change 1.4220065e-05 ( 0.0012247315%) - largest zero change 0
Clp0000I Optimal - objective value -0.17016023
Clp0000I Optimal - objective value -0.17016023
Coin0511I After Postsolve, objective -0.17016023, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21850397 - largest nonzero change 2.9759326e-05 ( 0.0025228206%) - largest zero change 2.6256504e-05
Clp0000I Optimal - objective value 107.68711
Clp0000I Optimal - objective value 107.68711
Clp0000I Optimal - objective value 107.68711
Coin0511I After Postsolve, objective 107.68711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.6871122 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 54 columns (54 integer (54 of which binary)) and 518 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.968%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 7.64565
Cbc0038I Pass   1: suminf.    2.77370 (16) obj. -77.1941 iterations 18
Cbc0038I Pass   2: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Solution found of 23.3956
Cbc0038I Rounding solution of 16.1585 is better than previous of 23.3956

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 16.1585 to -32.3818 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.1602
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Pass   4: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Pass   5: suminf.    0.85341 (4) obj. -39.1602 iterations 25
Cbc0038I Pass   6: suminf.    0.78125 (4) obj. -40.3148 iterations 3
Cbc0038I Pass   7: suminf.    1.03644 (7) obj. -39.1602 iterations 13
Cbc0038I Pass   8: suminf.    1.03644 (7) obj. -39.1602 iterations 1
Cbc0038I Pass   9: suminf.    1.38548 (6) obj. -39.1602 iterations 3
Cbc0038I Pass  10: suminf.    0.83512 (4) obj. -43.8419 iterations 3
Cbc0038I Pass  11: suminf.    0.98093 (4) obj. -39.1602 iterations 3
Cbc0038I Pass  12: suminf.    0.81200 (6) obj. -39.1602 iterations 2
Cbc0038I Pass  13: suminf.    2.11327 (12) obj. -39.1602 iterations 10
Cbc0038I Pass  14: suminf.    2.09617 (11) obj. -39.1602 iterations 1
Cbc0038I Pass  15: suminf.    0.67074 (5) obj. -39.1602 iterations 12
Cbc0038I Pass  16: suminf.    0.46786 (3) obj. -40.0158 iterations 6
Cbc0038I Pass  17: suminf.    0.54564 (3) obj. -39.1602 iterations 4
Cbc0038I Pass  18: suminf.    1.82377 (8) obj. -39.1602 iterations 22
Cbc0038I Pass  19: suminf.    1.78053 (8) obj. -40.2368 iterations 2
Cbc0038I Pass  20: suminf.    1.18253 (5) obj. -39.1602 iterations 16
Cbc0038I Pass  21: suminf.    1.07491 (7) obj. -39.1602 iterations 4
Cbc0038I Pass  22: suminf.    0.84997 (7) obj. -39.1602 iterations 5
Cbc0038I Pass  23: suminf.    0.84997 (7) obj. -39.1602 iterations 3
Cbc0038I Pass  24: suminf.    1.07491 (7) obj. -39.1602 iterations 4
Cbc0038I Pass  25: suminf.    3.56310 (17) obj. -39.1602 iterations 16
Cbc0038I Pass  26: suminf.    3.44461 (17) obj. -39.1602 iterations 2
Cbc0038I Pass  27: suminf.    3.46049 (10) obj. -39.1602 iterations 21
Cbc0038I Pass  28: suminf.    1.93815 (9) obj. -39.1602 iterations 2
Cbc0038I Pass  29: suminf.    0.99439 (8) obj. -40.2752 iterations 2
Cbc0038I Pass  30: suminf.    3.24769 (11) obj. -39.1602 iterations 7
Cbc0038I Pass  31: suminf.    1.10589 (8) obj. -39.1602 iterations 7
Cbc0038I Pass  32: suminf.    2.27002 (14) obj. -39.1602 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -32.3818 to -38.2837 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.3611
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Pass  33: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Pass  34: suminf.    1.21088 (6) obj. -51.3611 iterations 24
Cbc0038I Pass  35: suminf.    0.98615 (7) obj. -51.3611 iterations 2
Cbc0038I Pass  36: suminf.    1.11092 (7) obj. -51.3611 iterations 7
Cbc0038I Pass  37: suminf.    2.86849 (11) obj. -51.3611 iterations 9
Cbc0038I Pass  38: suminf.    2.76161 (11) obj. -51.3611 iterations 1
Cbc0038I Pass  39: suminf.    1.78816 (9) obj. -51.3611 iterations 9
Cbc0038I Pass  40: suminf.    1.78816 (9) obj. -51.3611 iterations 3
Cbc0038I Pass  41: suminf.    2.11129 (9) obj. -51.3611 iterations 5
Cbc0038I Pass  42: suminf.    2.11129 (9) obj. -51.3611 iterations 3
Cbc0038I Pass  43: suminf.    2.93130 (13) obj. -52.0394 iterations 17
Cbc0038I Pass  44: suminf.    2.44421 (12) obj. -51.3611 iterations 8
Cbc0038I Pass  45: suminf.    1.86319 (9) obj. -51.3611 iterations 11
Cbc0038I Pass  46: suminf.    1.86319 (9) obj. -51.3611 iterations 2
Cbc0038I Pass  47: suminf.    2.15418 (11) obj. -51.3611 iterations 14
Cbc0038I Pass  48: suminf.    1.74741 (10) obj. -51.3611 iterations 5
Cbc0038I Pass  49: suminf.    2.20792 (11) obj. -51.3611 iterations 7
Cbc0038I Pass  50: suminf.    2.14484 (11) obj. -51.9288 iterations 1
Cbc0038I Pass  51: suminf.    2.46099 (11) obj. -51.3611 iterations 3
Cbc0038I Pass  52: suminf.    2.38546 (11) obj. -51.3611 iterations 1
Cbc0038I Pass  53: suminf.    1.96405 (15) obj. -51.3611 iterations 6
Cbc0038I Pass  54: suminf.    1.93177 (10) obj. -51.3611 iterations 4
Cbc0038I Pass  55: suminf.    1.72065 (14) obj. -51.3611 iterations 9
Cbc0038I Pass  56: suminf.    1.51497 (9) obj. -51.7241 iterations 2
Cbc0038I Pass  57: suminf.    1.73180 (14) obj. -51.3611 iterations 6
Cbc0038I Pass  58: suminf.    2.39878 (12) obj. -51.3611 iterations 25
Cbc0038I Pass  59: suminf.    2.39176 (11) obj. -51.3611 iterations 3
Cbc0038I Pass  60: suminf.    1.84037 (14) obj. -51.3611 iterations 13
Cbc0038I Pass  61: suminf.    1.51497 (9) obj. -52.7241 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 23 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -38.2837 - took 0.05 seconds
Cbc0012I Integer solution of -38.283715 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 50 rows 54 columns, reduced to 22 rows 25 columns
Cbc0031I 22 added rows had average density of 13.727273
Cbc0013I At root node, 22 cuts changed objective from -100.16491 to -41.686519 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3272 row cuts average 4.3 elements, 6 column cuts (6 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 737 row cuts average 43.6 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 47 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 69 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 254 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 195 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.733 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.283715 best solution, best possible -41.686519 (1.64 seconds)
Cbc0001I Search completed - best objective -38.28371500000002, took 2273 iterations and 2 nodes (1.86 seconds)
Cbc0032I Strong branching done 78 times (1245 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.86

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 0.000563594 - average 1.04369e-05, 3 fixed columns
Coin0506I Presolve 47 (-7) rows, 27 (-3) columns and 140 (-20) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 92.489496
Clp0000I Optimal - objective value 92.489496
Coin0511I After Postsolve, objective 92.489496, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.489496
Clp0000I Optimal - objective value 92.489496
Clp0000I Optimal - objective value 92.489496
Coin0511I After Postsolve, objective 92.489496, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.48949637 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.1717
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -37.2525 iterations 23
Cbc0038I Solution found of -37.2525
Cbc0038I Relaxing continuous gives -37.2525
Cbc0038I Rounding solution of -38.2837 is better than previous of -37.2525

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.7044
Cbc0038I Pass   2: suminf.    0.16900 (1) obj. -43.7044 iterations 1
Cbc0038I Pass   3: suminf.    0.31924 (1) obj. -43.7044 iterations 1
Cbc0038I Pass   4: suminf.    3.45200 (8) obj. -43.7044 iterations 8
Cbc0038I Pass   5: suminf.    0.09677 (1) obj. -43.7044 iterations 6
Cbc0038I Pass   6: suminf.    0.20196 (1) obj. -43.7044 iterations 1
Cbc0038I Pass   7: suminf.    1.02684 (6) obj. -43.7044 iterations 7
Cbc0038I Pass   8: suminf.    0.36316 (2) obj. -43.7044 iterations 4
Cbc0038I Pass   9: suminf.    1.95393 (5) obj. -43.7044 iterations 8
Cbc0038I Pass  10: suminf.    1.04152 (3) obj. -43.7044 iterations 7
Cbc0038I Pass  11: suminf.    0.39176 (2) obj. -43.7044 iterations 3
Cbc0038I Pass  12: suminf.    0.23967 (1) obj. -43.7044 iterations 2
Cbc0038I Pass  13: suminf.    0.12903 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  14: suminf.    1.02712 (5) obj. -43.7044 iterations 6
Cbc0038I Pass  15: suminf.    0.08065 (1) obj. -43.7044 iterations 5
Cbc0038I Pass  16: suminf.    0.13469 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  17: suminf.    1.73628 (8) obj. -43.7044 iterations 6
Cbc0038I Pass  18: suminf.    1.12120 (4) obj. -43.7044 iterations 4
Cbc0038I Pass  19: suminf.    1.06993 (4) obj. -43.7044 iterations 2
Cbc0038I Pass  20: suminf.    1.68656 (6) obj. -43.7044 iterations 12
Cbc0038I Pass  21: suminf.    1.65962 (7) obj. -43.7044 iterations 1
Cbc0038I Pass  22: suminf.    0.77961 (2) obj. -43.7044 iterations 7
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  24: suminf.    0.26957 (1) obj. -43.7044 iterations 3
Cbc0038I Pass  25: suminf.    0.28038 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  26: suminf.    1.98909 (5) obj. -43.7044 iterations 7
Cbc0038I Pass  27: suminf.    0.30561 (2) obj. -43.7044 iterations 6
Cbc0038I Pass  28: suminf.    0.57635 (2) obj. -43.7044 iterations 2
Cbc0038I Pass  29: suminf.    0.48725 (1) obj. -43.7044 iterations 1
Cbc0038I Pass  30: suminf.    4.43872 (12) obj. -43.7044 iterations 15
Cbc0038I Pass  31: suminf.    1.79327 (7) obj. -43.7044 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 41 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -38.2837 - took 0.01 seconds
Cbc0012I Integer solution of -38.283715 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 27 rows 17 columns
Cbc0031I 13 added rows had average density of 12.076923
Cbc0013I At root node, 13 cuts changed objective from -92.489496 to -59.745781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2808 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 998 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 162 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38.28371500000002, took 2906 iterations and 4 nodes (0.25 seconds)
Cbc0032I Strong branching done 54 times (787 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 54 (-7) columns and 514 (-99) elements
Clp1000I sum of infeasibilities 0 - average 0, 42 fixed columns
Coin0506I Presolve 9 (-41) rows, 12 (-42) columns and 37 (-477) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 1.2264663 - largest nonzero change 1.4220065e-05 ( 0.0012247315%) - largest zero change 0
Clp0000I Optimal - objective value -0.17016023
Clp0000I Optimal - objective value -0.17016023
Coin0511I After Postsolve, objective -0.17016023, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21850397 - largest nonzero change 2.9759326e-05 ( 0.0025228206%) - largest zero change 2.6256504e-05
Clp0000I Optimal - objective value 107.68711
Clp0000I Optimal - objective value 107.68711
Clp0000I Optimal - objective value 107.68711
Coin0511I After Postsolve, objective 107.68711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.6871122 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 54 columns (54 integer (54 of which binary)) and 518 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.968%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 7.64565
Cbc0038I Pass   1: suminf.    2.77370 (16) obj. -77.1941 iterations 18
Cbc0038I Pass   2: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Solution found of 23.3956
Cbc0038I Rounding solution of 16.1585 is better than previous of 23.3956

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 16.1585 to -32.3818 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.1602
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Pass   4: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Pass   5: suminf.    0.85341 (4) obj. -39.1602 iterations 25
Cbc0038I Pass   6: suminf.    0.78125 (4) obj. -40.3148 iterations 3
Cbc0038I Pass   7: suminf.    1.03644 (7) obj. -39.1602 iterations 13
Cbc0038I Pass   8: suminf.    1.03644 (7) obj. -39.1602 iterations 1
Cbc0038I Pass   9: suminf.    1.38548 (6) obj. -39.1602 iterations 3
Cbc0038I Pass  10: suminf.    0.83512 (4) obj. -43.8419 iterations 3
Cbc0038I Pass  11: suminf.    0.98093 (4) obj. -39.1602 iterations 3
Cbc0038I Pass  12: suminf.    0.81200 (6) obj. -39.1602 iterations 2
Cbc0038I Pass  13: suminf.    2.11327 (12) obj. -39.1602 iterations 10
Cbc0038I Pass  14: suminf.    2.09617 (11) obj. -39.1602 iterations 1
Cbc0038I Pass  15: suminf.    0.67074 (5) obj. -39.1602 iterations 12
Cbc0038I Pass  16: suminf.    0.46786 (3) obj. -40.0158 iterations 6
Cbc0038I Pass  17: suminf.    0.54564 (3) obj. -39.1602 iterations 4
Cbc0038I Pass  18: suminf.    1.82377 (8) obj. -39.1602 iterations 22
Cbc0038I Pass  19: suminf.    1.78053 (8) obj. -40.2368 iterations 2
Cbc0038I Pass  20: suminf.    1.18253 (5) obj. -39.1602 iterations 16
Cbc0038I Pass  21: suminf.    1.07491 (7) obj. -39.1602 iterations 4
Cbc0038I Pass  22: suminf.    0.84997 (7) obj. -39.1602 iterations 5
Cbc0038I Pass  23: suminf.    0.84997 (7) obj. -39.1602 iterations 3
Cbc0038I Pass  24: suminf.    1.07491 (7) obj. -39.1602 iterations 4
Cbc0038I Pass  25: suminf.    3.56310 (17) obj. -39.1602 iterations 16
Cbc0038I Pass  26: suminf.    3.44461 (17) obj. -39.1602 iterations 2
Cbc0038I Pass  27: suminf.    3.46049 (10) obj. -39.1602 iterations 21
Cbc0038I Pass  28: suminf.    1.93815 (9) obj. -39.1602 iterations 2
Cbc0038I Pass  29: suminf.    0.99439 (8) obj. -40.2752 iterations 2
Cbc0038I Pass  30: suminf.    3.24769 (11) obj. -39.1602 iterations 7
Cbc0038I Pass  31: suminf.    1.10589 (8) obj. -39.1602 iterations 7
Cbc0038I Pass  32: suminf.    2.27002 (14) obj. -39.1602 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -32.3818 to -38.2837 (0.03 seconds)
Cbc0038I Round again with cutoff of -51.3611
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Pass  33: suminf.    2.77370 (16) obj. -77.1941 iterations 0
Cbc0038I Pass  34: suminf.    1.21088 (6) obj. -51.3611 iterations 24
Cbc0038I Pass  35: suminf.    0.98615 (7) obj. -51.3611 iterations 2
Cbc0038I Pass  36: suminf.    1.11092 (7) obj. -51.3611 iterations 7
Cbc0038I Pass  37: suminf.    2.86849 (11) obj. -51.3611 iterations 9
Cbc0038I Pass  38: suminf.    2.76161 (11) obj. -51.3611 iterations 1
Cbc0038I Pass  39: suminf.    1.78816 (9) obj. -51.3611 iterations 9
Cbc0038I Pass  40: suminf.    1.78816 (9) obj. -51.3611 iterations 3
Cbc0038I Pass  41: suminf.    2.11129 (9) obj. -51.3611 iterations 5
Cbc0038I Pass  42: suminf.    2.11129 (9) obj. -51.3611 iterations 3
Cbc0038I Pass  43: suminf.    2.93130 (13) obj. -52.0394 iterations 17
Cbc0038I Pass  44: suminf.    2.44421 (12) obj. -51.3611 iterations 8
Cbc0038I Pass  45: suminf.    1.86319 (9) obj. -51.3611 iterations 11
Cbc0038I Pass  46: suminf.    1.86319 (9) obj. -51.3611 iterations 2
Cbc0038I Pass  47: suminf.    2.15418 (11) obj. -51.3611 iterations 14
Cbc0038I Pass  48: suminf.    1.74741 (10) obj. -51.3611 iterations 5
Cbc0038I Pass  49: suminf.    2.20792 (11) obj. -51.3611 iterations 7
Cbc0038I Pass  50: suminf.    2.14484 (11) obj. -51.9288 iterations 1
Cbc0038I Pass  51: suminf.    2.46099 (11) obj. -51.3611 iterations 3
Cbc0038I Pass  52: suminf.    2.38546 (11) obj. -51.3611 iterations 1
Cbc0038I Pass  53: suminf.    1.96405 (15) obj. -51.3611 iterations 6
Cbc0038I Pass  54: suminf.    1.93177 (10) obj. -51.3611 iterations 4
Cbc0038I Pass  55: suminf.    1.72065 (14) obj. -51.3611 iterations 9
Cbc0038I Pass  56: suminf.    1.51497 (9) obj. -51.7241 iterations 2
Cbc0038I Pass  57: suminf.    1.73180 (14) obj. -51.3611 iterations 6
Cbc0038I Pass  58: suminf.    2.39878 (12) obj. -51.3611 iterations 25
Cbc0038I Pass  59: suminf.    2.39176 (11) obj. -51.3611 iterations 3
Cbc0038I Pass  60: suminf.    1.84037 (14) obj. -51.3611 iterations 13
Cbc0038I Pass  61: suminf.    1.51497 (9) obj. -52.7241 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 23 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -38.2837 - took 0.06 seconds
Cbc0012I Integer solution of -38.283715 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 50 rows 54 columns, reduced to 22 rows 25 columns
Cbc0031I 22 added rows had average density of 13.727273
Cbc0013I At root node, 22 cuts changed objective from -100.16491 to -41.686519 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3272 row cuts average 4.3 elements, 6 column cuts (6 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 737 row cuts average 43.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 47 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 69 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 254 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 195 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.744 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.283715 best solution, best possible -41.686519 (1.64 seconds)
Cbc0001I Search completed - best objective -38.28371500000002, took 2273 iterations and 2 nodes (1.89 seconds)
Cbc0032I Strong branching done 78 times (1245 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.90

