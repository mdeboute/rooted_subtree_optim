Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 43 (-26) rows, 23 (-12) columns and 125 (-70) elements
Clp0000I Optimal - objective value 142.48487
Coin0511I After Postsolve, objective 142.48487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.4848652 - 28 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 43 rows, 23 columns (22 integer (22 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.793%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.82204
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -62 iterations 21
Cbc0038I Solution found of -62
Cbc0038I Relaxing continuous gives -62
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 23 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -62 to -89.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -94.7986
Cbc0038I Pass   2: suminf.    1.06755 (10) obj. -94.7986 iterations 9
Cbc0038I Pass   3: suminf.    2.10528 (8) obj. -94.7986 iterations 19
Cbc0038I Pass   4: suminf.    2.10528 (8) obj. -94.7986 iterations 0
Cbc0038I Pass   5: suminf.    0.64192 (14) obj. -94.7986 iterations 10
Cbc0038I Pass   6: suminf.    0.64144 (14) obj. -94.7986 iterations 1
Cbc0038I Pass   7: suminf.    2.38768 (10) obj. -94.7986 iterations 14
Cbc0038I Pass   8: suminf.    1.37042 (8) obj. -94.7986 iterations 6
Cbc0038I Pass   9: suminf.    0.64264 (14) obj. -94.7986 iterations 11
Cbc0038I Pass  10: suminf.    0.74629 (12) obj. -94.7986 iterations 5
Cbc0038I Pass  11: suminf.    0.70744 (13) obj. -94.7986 iterations 8
Cbc0038I Pass  12: suminf.    1.64427 (6) obj. -94.7986 iterations 11
Cbc0038I Pass  13: suminf.    1.21937 (5) obj. -94.7986 iterations 4
Cbc0038I Pass  14: suminf.    1.75357 (5) obj. -94.7986 iterations 7
Cbc0038I Pass  15: suminf.    1.59946 (5) obj. -94.7986 iterations 4
Cbc0038I Pass  16: suminf.    1.06755 (10) obj. -94.7986 iterations 7
Cbc0038I Pass  17: suminf.    1.06755 (10) obj. -94.7986 iterations 0
Cbc0038I Pass  18: suminf.    2.10528 (8) obj. -94.7986 iterations 18
Cbc0038I Pass  19: suminf.    2.10528 (8) obj. -94.7986 iterations 0
Cbc0038I Pass  20: suminf.    0.64192 (14) obj. -94.7986 iterations 9
Cbc0038I Pass  21: suminf.    0.64144 (14) obj. -94.7986 iterations 1
Cbc0038I Pass  22: suminf.    2.14994 (9) obj. -94.7986 iterations 15
Cbc0038I Pass  23: suminf.    1.43359 (5) obj. -94.7986 iterations 4
Cbc0038I Pass  24: suminf.    1.43359 (5) obj. -94.7986 iterations 1
Cbc0038I Pass  25: suminf.    1.46079 (7) obj. -94.7986 iterations 6
Cbc0038I Pass  26: suminf.    1.46079 (7) obj. -94.7986 iterations 0
Cbc0038I Pass  27: suminf.    2.35043 (8) obj. -94.7986 iterations 9
Cbc0038I Pass  28: suminf.    1.76519 (6) obj. -94.7986 iterations 4
Cbc0038I Pass  29: suminf.    1.59634 (5) obj. -94.7986 iterations 1
Cbc0038I Pass  30: suminf.    1.43359 (5) obj. -94.7986 iterations 3
Cbc0038I Pass  31: suminf.    1.46079 (7) obj. -94.7986 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 23 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -89.5 - took 0.06 seconds
Cbc0012I Integer solution of -89.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 23 columns, reduced to 31 rows 17 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 9 cuts changed objective from -142.48487 to -45.3333 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 159 row cuts average 3.8 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -89.5, took 105 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-19) rows, 50 (-16) columns and 429 (-294) elements
Clp1000I sum of infeasibilities 1.19197e-07 - average 2.4326e-09, 13 fixed columns
Coin0506I Presolve 37 (-12) rows, 37 (-13) columns and 258 (-171) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 2.0565073 - largest nonzero change 2.9670417e-05 ( 0.0025820745%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 222.71376
Clp0000I Optimal - objective value 222.71376
Coin0511I After Postsolve, objective 222.71376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9695114 - largest nonzero change 2.7744107e-05 ( 0.0021869008%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 223.90791
Clp0000I Optimal - objective value 223.90791
Clp0000I Optimal - objective value 223.90791
Coin0511I After Postsolve, objective 223.90791, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 223.9079109 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 49 columns (49 integer (49 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.710%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.74449
Cbc0038I Pass   1: suminf.    1.96584 (13) obj. -55.5214 iterations 9
Cbc0038I Pass   2: suminf.    1.96584 (13) obj. -55.5214 iterations 0
Cbc0038I Solution found of -13.1667
Cbc0038I Rounding solution of -13.5 is better than previous of -13.1667

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -13.5 to -52.8334 (0.01 seconds)
Cbc0038I Round again with cutoff of -60.4941
Cbc0038I Pass   3: suminf.    2.03490 (14) obj. -60.4941 iterations 1
Cbc0038I Pass   4: suminf.    2.03490 (14) obj. -60.4941 iterations 0
Cbc0038I Pass   5: suminf.    1.13943 (7) obj. -60.4941 iterations 19
Cbc0038I Pass   6: suminf.    1.13943 (7) obj. -60.4941 iterations 1
Cbc0038I Pass   7: suminf.    0.74578 (12) obj. -60.4941 iterations 6
Cbc0038I Pass   8: suminf.    0.74578 (12) obj. -60.4941 iterations 0
Cbc0038I Pass   9: suminf.    0.43215 (3) obj. -60.4941 iterations 20
Cbc0038I Pass  10: suminf.    0.11734 (2) obj. -60.4941 iterations 1
Cbc0038I Pass  11: suminf.    0.40400 (1) obj. -64.4821 iterations 2
Cbc0038I Pass  12: suminf.    1.25292 (4) obj. -60.4941 iterations 7
Cbc0038I Pass  13: suminf.    0.34598 (2) obj. -60.4941 iterations 7
Cbc0038I Pass  14: suminf.    0.11734 (2) obj. -60.4941 iterations 2
Cbc0038I Pass  15: suminf.    3.25620 (10) obj. -60.4941 iterations 14
Cbc0038I Pass  16: suminf.    2.09461 (6) obj. -65.4055 iterations 7
Cbc0038I Pass  17: suminf.    0.11734 (2) obj. -60.4941 iterations 8
Cbc0038I Pass  18: suminf.    0.40400 (1) obj. -64.4821 iterations 2
Cbc0038I Pass  19: suminf.    2.50983 (8) obj. -60.4941 iterations 8
Cbc0038I Pass  20: suminf.    1.81114 (5) obj. -71.6535 iterations 5
Cbc0038I Pass  21: suminf.    1.41394 (5) obj. -60.4941 iterations 3
Cbc0038I Pass  22: suminf.    0.11734 (2) obj. -60.4941 iterations 5
Cbc0038I Pass  23: suminf.    0.11734 (2) obj. -60.4941 iterations 0
Cbc0038I Pass  24: suminf.    0.40400 (1) obj. -64.4821 iterations 2
Cbc0038I Pass  25: suminf.    1.45227 (10) obj. -60.4941 iterations 15
Cbc0038I Pass  26: suminf.    1.34816 (7) obj. -60.4941 iterations 7
Cbc0038I Pass  27: suminf.    1.18226 (7) obj. -60.4941 iterations 14
Cbc0038I Pass  28: suminf.    1.18226 (7) obj. -60.4941 iterations 1
Cbc0038I Pass  29: suminf.    5.26574 (18) obj. -60.4941 iterations 20
Cbc0038I Pass  30: suminf.    5.26574 (18) obj. -60.4941 iterations 0
Cbc0038I Pass  31: suminf.    1.74798 (5) obj. -60.4941 iterations 25
Cbc0038I Pass  32: suminf.    0.50667 (2) obj. -64.7312 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 19 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -52.8334 - took 0.02 seconds
Cbc0012I Integer solution of -52.8334 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -89.5 found by DiveCoefficient after 33 iterations and 0 nodes (0.03 seconds)
Cbc0031I 20 added rows had average density of 4.95
Cbc0013I At root node, 20 cuts changed objective from -129.43943 to -89.5 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 197 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 46 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -89.5, took 33 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 43 (-26) rows, 23 (-12) columns and 125 (-70) elements
Clp0000I Optimal - objective value 142.48487
Coin0511I After Postsolve, objective 142.48487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.4848652 - 28 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 43 rows, 23 columns (22 integer (22 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.793%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.82204
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -62 iterations 21
Cbc0038I Solution found of -62
Cbc0038I Relaxing continuous gives -62
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 23 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -62 to -89.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -94.7986
Cbc0038I Pass   2: suminf.    1.06755 (10) obj. -94.7986 iterations 9
Cbc0038I Pass   3: suminf.    2.10528 (8) obj. -94.7986 iterations 19
Cbc0038I Pass   4: suminf.    2.10528 (8) obj. -94.7986 iterations 0
Cbc0038I Pass   5: suminf.    0.64192 (14) obj. -94.7986 iterations 10
Cbc0038I Pass   6: suminf.    0.64144 (14) obj. -94.7986 iterations 1
Cbc0038I Pass   7: suminf.    2.38768 (10) obj. -94.7986 iterations 14
Cbc0038I Pass   8: suminf.    1.37042 (8) obj. -94.7986 iterations 6
Cbc0038I Pass   9: suminf.    0.64264 (14) obj. -94.7986 iterations 11
Cbc0038I Pass  10: suminf.    0.74629 (12) obj. -94.7986 iterations 5
Cbc0038I Pass  11: suminf.    0.70744 (13) obj. -94.7986 iterations 8
Cbc0038I Pass  12: suminf.    1.64427 (6) obj. -94.7986 iterations 11
Cbc0038I Pass  13: suminf.    1.21937 (5) obj. -94.7986 iterations 4
Cbc0038I Pass  14: suminf.    1.75357 (5) obj. -94.7986 iterations 7
Cbc0038I Pass  15: suminf.    1.59946 (5) obj. -94.7986 iterations 4
Cbc0038I Pass  16: suminf.    1.06755 (10) obj. -94.7986 iterations 7
Cbc0038I Pass  17: suminf.    1.06755 (10) obj. -94.7986 iterations 0
Cbc0038I Pass  18: suminf.    2.10528 (8) obj. -94.7986 iterations 18
Cbc0038I Pass  19: suminf.    2.10528 (8) obj. -94.7986 iterations 0
Cbc0038I Pass  20: suminf.    0.64192 (14) obj. -94.7986 iterations 9
Cbc0038I Pass  21: suminf.    0.64144 (14) obj. -94.7986 iterations 1
Cbc0038I Pass  22: suminf.    2.14994 (9) obj. -94.7986 iterations 15
Cbc0038I Pass  23: suminf.    1.43359 (5) obj. -94.7986 iterations 4
Cbc0038I Pass  24: suminf.    1.43359 (5) obj. -94.7986 iterations 1
Cbc0038I Pass  25: suminf.    1.46079 (7) obj. -94.7986 iterations 6
Cbc0038I Pass  26: suminf.    1.46079 (7) obj. -94.7986 iterations 0
Cbc0038I Pass  27: suminf.    2.35043 (8) obj. -94.7986 iterations 9
Cbc0038I Pass  28: suminf.    1.76519 (6) obj. -94.7986 iterations 4
Cbc0038I Pass  29: suminf.    1.59634 (5) obj. -94.7986 iterations 1
Cbc0038I Pass  30: suminf.    1.43359 (5) obj. -94.7986 iterations 3
Cbc0038I Pass  31: suminf.    1.46079 (7) obj. -94.7986 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 23 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -89.5 - took 0.06 seconds
Cbc0012I Integer solution of -89.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 43 rows 23 columns, reduced to 31 rows 17 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 9 cuts changed objective from -142.48487 to -45.3333 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 159 row cuts average 3.8 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -89.5, took 105 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-21) rows, 49 (-18) columns and 414 (-310) elements
Clp1000I sum of infeasibilities 5.05622e-08 - average 1.05338e-09, 33 fixed columns
Coin0506I Presolve 14 (-34) rows, 15 (-34) columns and 53 (-361) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 2.1766076 - largest nonzero change 2.462683e-05 ( 0.0016324266%) - largest zero change 2.8436127e-05
Clp0000I Optimal - objective value 53.155024
Clp0000I Optimal - objective value 53.155024
Coin0511I After Postsolve, objective 53.155024, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0685026 - largest nonzero change 2.2785687e-05 ( 0.0016324266%) - largest zero change 2.6897328e-05
Clp0000I Optimal - objective value 193.51623
Clp0000I Optimal - objective value 193.51623
Clp0000I Optimal - objective value 193.51623
Coin0511I After Postsolve, objective 193.51623, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.5162338 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 49 columns (49 integer (49 of which binary)) and 421 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.710%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.58427
Cbc0038I Pass   1: suminf.    1.36484 (10) obj. -46.0066 iterations 16
Cbc0038I Pass   2: suminf.    1.36484 (10) obj. -46.0066 iterations 1
Cbc0038I Solution found of -13.1667
Cbc0038I Rounding solution of -13.5 is better than previous of -13.1667

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -13.5 to -52.8334 (0.01 seconds)
Cbc0038I Round again with cutoff of -59.9144
Cbc0038I Pass   3: suminf.    2.46415 (15) obj. -59.9144 iterations 2
Cbc0038I Pass   4: suminf.    2.46415 (15) obj. -59.9144 iterations 0
Cbc0038I Pass   5: suminf.    1.28925 (11) obj. -59.9144 iterations 28
Cbc0038I Pass   6: suminf.    1.28925 (11) obj. -59.9144 iterations 0
Cbc0038I Pass   7: suminf.    0.36002 (2) obj. -59.9144 iterations 10
Cbc0038I Pass   8: suminf.    0.09835 (1) obj. -59.9144 iterations 1
Cbc0038I Pass   9: suminf.    0.16032 (1) obj. -64.3763 iterations 1
Cbc0038I Pass  10: suminf.    2.04328 (5) obj. -59.9144 iterations 7
Cbc0038I Pass  11: suminf.    0.94286 (3) obj. -61.7197 iterations 5
Cbc0038I Pass  12: suminf.    0.79478 (3) obj. -59.9144 iterations 2
Cbc0038I Pass  13: suminf.    0.41486 (2) obj. -59.9144 iterations 5
Cbc0038I Pass  14: suminf.    0.40211 (2) obj. -59.9144 iterations 1
Cbc0038I Pass  15: suminf.    0.50667 (2) obj. -64.7312 iterations 2
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -60.1667 iterations 2
Cbc0038I Pass  17: suminf.    3.01247 (10) obj. -59.9144 iterations 11
Cbc0038I Pass  18: suminf.    2.13943 (9) obj. -59.9144 iterations 3
Cbc0038I Pass  19: suminf.    1.87317 (7) obj. -60.1789 iterations 2
Cbc0038I Pass  20: suminf.    0.36002 (2) obj. -59.9144 iterations 8
Cbc0038I Pass  21: suminf.    0.09835 (1) obj. -59.9144 iterations 1
Cbc0038I Pass  22: suminf.    0.16032 (1) obj. -64.3763 iterations 1
Cbc0038I Pass  23: suminf.    1.48458 (5) obj. -59.9144 iterations 7
Cbc0038I Pass  24: suminf.    1.48458 (5) obj. -59.9144 iterations 1
Cbc0038I Pass  25: suminf.    0.20924 (2) obj. -59.9144 iterations 5
Cbc0038I Pass  26: suminf.    0.20924 (2) obj. -59.9144 iterations 0
Cbc0038I Pass  27: suminf.    0.49365 (2) obj. -66.7096 iterations 2
Cbc0038I Pass  28: suminf.    0.39927 (2) obj. -59.9144 iterations 1
Cbc0038I Pass  29: suminf.    3.04017 (12) obj. -59.9144 iterations 14
Cbc0038I Pass  30: suminf.    2.99234 (9) obj. -59.9144 iterations 3
Cbc0038I Pass  31: suminf.    0.71413 (3) obj. -59.9144 iterations 12
Cbc0038I Pass  32: suminf.    0.71413 (3) obj. -59.9144 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -52.8334 to -62 (0.03 seconds)
Cbc0038I Round again with cutoff of -74.3285
Cbc0038I Pass  32: suminf.    2.63597 (15) obj. -74.3285 iterations 2
Cbc0038I Pass  33: suminf.    2.63597 (15) obj. -74.3285 iterations 1
Cbc0038I Pass  34: suminf.    1.97601 (10) obj. -74.3285 iterations 28
Cbc0038I Pass  35: suminf.    1.86509 (11) obj. -74.3285 iterations 1
Cbc0038I Pass  36: suminf.    0.75554 (3) obj. -74.3285 iterations 11
Cbc0038I Pass  37: suminf.    0.75554 (3) obj. -74.3285 iterations 0
Cbc0038I Pass  38: suminf.    0.72870 (3) obj. -74.3285 iterations 3
Cbc0038I Pass  39: suminf.    0.72870 (3) obj. -74.3285 iterations 0
Cbc0038I Pass  40: suminf.    0.75554 (3) obj. -74.3285 iterations 3
Cbc0038I Pass  41: suminf.    3.53455 (12) obj. -74.3285 iterations 14
Cbc0038I Pass  42: suminf.    2.81403 (10) obj. -74.3285 iterations 5
Cbc0038I Pass  43: suminf.    0.86242 (4) obj. -74.3285 iterations 10
Cbc0038I Pass  44: suminf.    0.86242 (4) obj. -74.3285 iterations 0
Cbc0038I Pass  45: suminf.    1.19781 (4) obj. -74.3285 iterations 6
Cbc0038I Pass  46: suminf.    1.98127 (9) obj. -74.3285 iterations 9
Cbc0038I Pass  47: suminf.    1.95024 (8) obj. -74.3285 iterations 5
Cbc0038I Pass  48: suminf.    1.19781 (4) obj. -74.3285 iterations 10
Cbc0038I Pass  49: suminf.    1.44550 (7) obj. -74.3285 iterations 11
Cbc0038I Pass  50: suminf.    1.05151 (4) obj. -74.3285 iterations 6
Cbc0038I Pass  51: suminf.    0.75554 (3) obj. -74.3285 iterations 5
Cbc0038I Pass  52: suminf.    0.75554 (3) obj. -74.3285 iterations 0
Cbc0038I Pass  53: suminf.    0.72870 (3) obj. -74.3285 iterations 3
Cbc0038I Pass  54: suminf.    0.72870 (3) obj. -74.3285 iterations 0
Cbc0038I Pass  55: suminf.    0.75554 (3) obj. -74.3285 iterations 3
Cbc0038I Pass  56: suminf.    3.47154 (12) obj. -74.3285 iterations 11
Cbc0038I Pass  57: suminf.    3.39686 (11) obj. -74.3285 iterations 2
Cbc0038I Pass  58: suminf.    0.75554 (3) obj. -74.3285 iterations 11
Cbc0038I Pass  59: suminf.    0.75554 (3) obj. -74.3285 iterations 1
Cbc0038I Pass  60: suminf.    0.72870 (3) obj. -74.3285 iterations 3
Cbc0038I Pass  61: suminf.    0.72870 (3) obj. -74.3285 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -62 - took 0.03 seconds
Cbc0012I Integer solution of -62 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 49 columns, reduced to 21 rows 23 columns
Cbc0012I Integer solution of -89.5 found by DiveCoefficient after 42 iterations and 0 nodes (0.05 seconds)
Cbc0031I 22 added rows had average density of 4.2272727
Cbc0013I At root node, 22 cuts changed objective from -123.64211 to -89.5 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 193 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -89.5, took 42 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

