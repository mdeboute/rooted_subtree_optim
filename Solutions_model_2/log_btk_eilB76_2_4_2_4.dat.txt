Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 69 (-9) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 2.51676e-06 - average 1.93597e-08, 10 fixed columns
Coin0506I Presolve 109 (-21) rows, 58 (-11) columns and 326 (-64) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 2.2559841 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 36.548327
Clp0000I Optimal - objective value 36.548327
Coin0511I After Postsolve, objective 36.548327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.548327
Clp0000I Optimal - objective value 36.548327
Clp0000I Optimal - objective value 36.548327
Coin0511I After Postsolve, objective 36.548327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.54832682 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 69 columns (68 integer (68 of which binary)) and 474 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.940%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 4.96397
Cbc0038I Solution found of -0.536245
Cbc0038I Relaxing continuous gives -7.00212
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 69 columns, reduced to 75 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -7.00212 to -10.9056 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.3721
Cbc0038I Pass   1: suminf.    0.99389 (33) obj. -13.3721 iterations 47
Cbc0038I Pass   2: suminf.    2.49816 (7) obj. -13.3721 iterations 39
Cbc0038I Pass   3: suminf.    1.84391 (5) obj. -13.3721 iterations 3
Cbc0038I Pass   4: suminf.    1.28054 (6) obj. -13.3721 iterations 16
Cbc0038I Pass   5: suminf.    1.62226 (5) obj. -13.3721 iterations 8
Cbc0038I Pass   6: suminf.    0.97126 (8) obj. -13.3721 iterations 11
Cbc0038I Pass   7: suminf.    1.85749 (8) obj. -13.3721 iterations 10
Cbc0038I Pass   8: suminf.    1.72936 (6) obj. -13.3721 iterations 10
Cbc0038I Pass   9: suminf.    1.45763 (6) obj. -13.3721 iterations 5
Cbc0038I Pass  10: suminf.    1.67828 (6) obj. -13.3721 iterations 7
Cbc0038I Pass  11: suminf.    2.82605 (9) obj. -13.3721 iterations 17
Cbc0038I Pass  12: suminf.    1.28784 (6) obj. -13.3721 iterations 17
Cbc0038I Pass  13: suminf.    1.38614 (4) obj. -13.3721 iterations 11
Cbc0038I Pass  14: suminf.    0.99861 (4) obj. -13.3721 iterations 8
Cbc0038I Pass  15: suminf.    1.17163 (5) obj. -13.3721 iterations 2
Cbc0038I Pass  16: suminf.    1.12972 (6) obj. -13.3721 iterations 3
Cbc0038I Pass  17: suminf.    1.69781 (6) obj. -13.3721 iterations 9
Cbc0038I Pass  18: suminf.    1.45763 (6) obj. -13.3721 iterations 2
Cbc0038I Pass  19: suminf.    1.67828 (6) obj. -13.3721 iterations 5
Cbc0038I Pass  20: suminf.    1.30959 (5) obj. -13.3721 iterations 25
Cbc0038I Pass  21: suminf.    0.91941 (4) obj. -13.3721 iterations 12
Cbc0038I Pass  22: suminf.    1.22974 (5) obj. -13.3721 iterations 9
Cbc0038I Pass  23: suminf.    1.08352 (6) obj. -13.3721 iterations 4
Cbc0038I Pass  24: suminf.    1.38614 (4) obj. -13.3721 iterations 11
Cbc0038I Pass  25: suminf.    0.99861 (4) obj. -13.3721 iterations 7
Cbc0038I Pass  26: suminf.    1.17163 (5) obj. -13.3721 iterations 4
Cbc0038I Pass  27: suminf.    1.12972 (6) obj. -13.3721 iterations 4
Cbc0038I Pass  28: suminf.    1.69781 (6) obj. -13.3721 iterations 7
Cbc0038I Pass  29: suminf.    1.45763 (6) obj. -13.3721 iterations 2
Cbc0038I Pass  30: suminf.    1.67828 (6) obj. -13.3721 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 69 columns, reduced to 91 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -10.9056 - took 0.04 seconds
Cbc0012I Integer solution of -10.90561 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 123 rows 69 columns, reduced to 75 rows 39 columns
Cbc0031I 29 added rows had average density of 36.206897
Cbc0013I At root node, 29 cuts changed objective from -35.56926 to -27.122066 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10891 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1952 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.90561 best solution, best possible -27.122066 (0.77 seconds)
Cbc0001I Search completed - best objective -10.90561, took 8900 iterations and 22 nodes (0.90 seconds)
Cbc0032I Strong branching done 374 times (9011 iterations), fathomed 0 nodes and fixed 17 variables
Cbc0035I Maximum depth 6, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       0.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-41) rows, 119 (-33) columns and 2084 (-1219) elements
Clp1000I sum of infeasibilities 6.65751e-10 - average 5.8916e-12, 111 fixed columns
Coin0506I Presolve 8 (-105) rows, 8 (-111) columns and 27 (-2057) elements
Clp0006I 0  Obj 109.62905 Dual inf 3.2443533 (8)
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 109.95174
Clp0000I Optimal - objective value 109.95174
Coin0511I After Postsolve, objective 109.95174, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 109.95174 Dual inf 70.050858 (48)
Clp0014I Perturbing problem by 0.001% of 1.9414508 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 201.97002
Clp0000I Optimal - objective value 201.97002
Clp0000I Optimal - objective value 201.97002
Coin0511I After Postsolve, objective 201.97002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 201.9700213 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 75 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 119 columns (119 integer (119 of which binary)) and 2146 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.296%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 12.2525
Cbc0038I Pass   1: suminf.    0.44212 (12) obj. 7.38504 iterations 59
Cbc0038I Pass   2: suminf.    0.44212 (12) obj. 7.38504 iterations 0
Cbc0038I Solution found of 27.5639
Cbc0038I Rounding solution of 15.829 is better than previous of 27.5639

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 119 columns, reduced to 34 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 15.829 to -79.4361 (0.06 seconds)
Cbc0038I Round again with cutoff of -85.3889
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    4.06019 (43) obj. -85.3889 iterations 28
Cbc0038I Pass   4: suminf.    4.06019 (43) obj. -85.3889 iterations 0
Cbc0038I Pass   5: suminf.    2.78964 (16) obj. -85.3889 iterations 33
Cbc0038I Pass   6: suminf.    2.65362 (15) obj. -85.3889 iterations 1
Cbc0038I Pass   7: suminf.    0.44023 (2) obj. -85.3889 iterations 18
Cbc0038I Pass   8: suminf.    0.44023 (2) obj. -85.3889 iterations 0
Cbc0038I Pass   9: suminf.    0.53155 (3) obj. -85.3889 iterations 7
Cbc0038I Pass  10: suminf.    0.44023 (2) obj. -85.3889 iterations 9
Cbc0038I Pass  11: suminf.    2.17977 (11) obj. -85.3889 iterations 15
Cbc0038I Pass  12: suminf.    2.08492 (10) obj. -85.3889 iterations 6
Cbc0038I Pass  13: suminf.    0.44023 (2) obj. -85.3889 iterations 10
Cbc0038I Pass  14: suminf.    0.44023 (2) obj. -85.3889 iterations 0
Cbc0038I Pass  15: suminf.    0.53155 (3) obj. -85.3889 iterations 7
Cbc0038I Pass  16: suminf.    0.44023 (2) obj. -85.3889 iterations 9
Cbc0038I Pass  17: suminf.    2.70325 (12) obj. -85.3889 iterations 17
Cbc0038I Pass  18: suminf.    2.41426 (11) obj. -85.3889 iterations 5
Cbc0038I Pass  19: suminf.    0.46321 (2) obj. -85.3889 iterations 11
Cbc0038I Pass  20: suminf.    0.46321 (2) obj. -85.3889 iterations 1
Cbc0038I Pass  21: suminf.    0.40953 (1) obj. -85.3889 iterations 3
Cbc0038I Pass  22: suminf.    0.42222 (1) obj. -85.5919 iterations 2
Cbc0038I Pass  23: suminf.    3.09168 (12) obj. -85.3889 iterations 33
Cbc0038I Pass  24: suminf.    3.09168 (12) obj. -85.3889 iterations 1
Cbc0038I Pass  25: suminf.    0.46321 (2) obj. -85.3889 iterations 14
Cbc0038I Pass  26: suminf.    0.46321 (2) obj. -85.3889 iterations 1
Cbc0038I Pass  27: suminf.    0.40953 (1) obj. -85.3889 iterations 3
Cbc0038I Pass  28: suminf.    0.42222 (1) obj. -85.5919 iterations 2
Cbc0038I Pass  29: suminf.    2.54349 (11) obj. -85.3889 iterations 29
Cbc0038I Pass  30: suminf.    2.42335 (10) obj. -85.3889 iterations 4
Cbc0038I Pass  31: suminf.    0.40953 (1) obj. -85.3889 iterations 11
Cbc0038I Pass  32: suminf.    1.95154 (9) obj. -85.3889 iterations 29
Cbc0038I Rounding solution of -79.5996 is better than previous of -79.4361

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 119 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -79.5996 to -85.1598 (0.08 seconds)
Cbc0038I Round again with cutoff of -96.1036
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    5.32291 (44) obj. -96.1036 iterations 1
Cbc0038I Pass  33: suminf.    5.32291 (44) obj. -96.1036 iterations 0
Cbc0038I Pass  34: suminf.    4.13274 (23) obj. -96.1036 iterations 22
Cbc0038I Pass  35: suminf.    4.09540 (22) obj. -96.1036 iterations 1
Cbc0038I Pass  36: suminf.    2.80649 (14) obj. -96.1036 iterations 10
Cbc0038I Pass  37: suminf.    2.80649 (14) obj. -96.1036 iterations 1
Cbc0038I Pass  38: suminf.    2.17928 (6) obj. -96.1036 iterations 36
Cbc0038I Pass  39: suminf.    1.47688 (5) obj. -96.1036 iterations 4
Cbc0038I Pass  40: suminf.    1.67651 (6) obj. -96.1036 iterations 5
Cbc0038I Pass  41: suminf.    1.13569 (4) obj. -96.1036 iterations 8
Cbc0038I Pass  42: suminf.    2.57794 (10) obj. -96.1036 iterations 8
Cbc0038I Pass  43: suminf.    2.57794 (10) obj. -96.1036 iterations 0
Cbc0038I Pass  44: suminf.    2.17928 (6) obj. -96.1036 iterations 15
Cbc0038I Pass  45: suminf.    1.47688 (5) obj. -96.1036 iterations 4
Cbc0038I Pass  46: suminf.    1.67651 (6) obj. -96.1036 iterations 4
Cbc0038I Pass  47: suminf.    1.13569 (4) obj. -96.1036 iterations 7
Cbc0038I Pass  48: suminf.    2.17928 (6) obj. -96.1036 iterations 6
Cbc0038I Pass  49: suminf.    3.57873 (14) obj. -96.1036 iterations 19
Cbc0038I Pass  50: suminf.    3.24421 (12) obj. -96.1036 iterations 5
Cbc0038I Pass  51: suminf.    1.47688 (5) obj. -96.1036 iterations 17
Cbc0038I Pass  52: suminf.    1.47688 (5) obj. -96.1036 iterations 0
Cbc0038I Pass  53: suminf.    1.67651 (6) obj. -96.1036 iterations 3
Cbc0038I Pass  54: suminf.    1.13569 (4) obj. -96.1036 iterations 6
Cbc0038I Pass  55: suminf.    2.17928 (6) obj. -96.1036 iterations 6
Cbc0038I Pass  56: suminf.    2.14034 (12) obj. -96.1036 iterations 19
Cbc0038I Pass  57: suminf.    2.08186 (11) obj. -96.1036 iterations 2
Cbc0038I Pass  58: suminf.    1.47688 (5) obj. -96.1036 iterations 25
Cbc0038I Pass  59: suminf.    1.47688 (5) obj. -96.1036 iterations 1
Cbc0038I Pass  60: suminf.    1.67651 (6) obj. -96.1036 iterations 4
Cbc0038I Pass  61: suminf.    1.13569 (4) obj. -96.1036 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -85.1598 - took 0.05 seconds
Cbc0012I Integer solution of -85.15982 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 103 rows 119 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 21 added rows had average density of 3.3333333
Cbc0013I At root node, 22 cuts changed objective from -126.85972 to -85.15982 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 156 row cuts average 13.7 elements, 41 column cuts (41 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -85.15982000000002, took 93 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 69 (-9) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 2.51676e-06 - average 1.93597e-08, 10 fixed columns
Coin0506I Presolve 109 (-21) rows, 58 (-11) columns and 326 (-64) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 2.2559841 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 36.548327
Clp0000I Optimal - objective value 36.548327
Coin0511I After Postsolve, objective 36.548327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.548327
Clp0000I Optimal - objective value 36.548327
Clp0000I Optimal - objective value 36.548327
Coin0511I After Postsolve, objective 36.548327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.54832682 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 69 columns (68 integer (68 of which binary)) and 474 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.940%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 4.96397
Cbc0038I Solution found of -0.536245
Cbc0038I Relaxing continuous gives -7.00212
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 69 columns, reduced to 75 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -7.00212 to -10.9056 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.3721
Cbc0038I Pass   1: suminf.    0.99389 (33) obj. -13.3721 iterations 47
Cbc0038I Pass   2: suminf.    2.49816 (7) obj. -13.3721 iterations 39
Cbc0038I Pass   3: suminf.    1.84391 (5) obj. -13.3721 iterations 3
Cbc0038I Pass   4: suminf.    1.28054 (6) obj. -13.3721 iterations 16
Cbc0038I Pass   5: suminf.    1.62226 (5) obj. -13.3721 iterations 8
Cbc0038I Pass   6: suminf.    0.97126 (8) obj. -13.3721 iterations 11
Cbc0038I Pass   7: suminf.    1.85749 (8) obj. -13.3721 iterations 10
Cbc0038I Pass   8: suminf.    1.72936 (6) obj. -13.3721 iterations 10
Cbc0038I Pass   9: suminf.    1.45763 (6) obj. -13.3721 iterations 5
Cbc0038I Pass  10: suminf.    1.67828 (6) obj. -13.3721 iterations 7
Cbc0038I Pass  11: suminf.    2.82605 (9) obj. -13.3721 iterations 17
Cbc0038I Pass  12: suminf.    1.28784 (6) obj. -13.3721 iterations 17
Cbc0038I Pass  13: suminf.    1.38614 (4) obj. -13.3721 iterations 11
Cbc0038I Pass  14: suminf.    0.99861 (4) obj. -13.3721 iterations 8
Cbc0038I Pass  15: suminf.    1.17163 (5) obj. -13.3721 iterations 2
Cbc0038I Pass  16: suminf.    1.12972 (6) obj. -13.3721 iterations 3
Cbc0038I Pass  17: suminf.    1.69781 (6) obj. -13.3721 iterations 9
Cbc0038I Pass  18: suminf.    1.45763 (6) obj. -13.3721 iterations 2
Cbc0038I Pass  19: suminf.    1.67828 (6) obj. -13.3721 iterations 5
Cbc0038I Pass  20: suminf.    1.30959 (5) obj. -13.3721 iterations 25
Cbc0038I Pass  21: suminf.    0.91941 (4) obj. -13.3721 iterations 12
Cbc0038I Pass  22: suminf.    1.22974 (5) obj. -13.3721 iterations 9
Cbc0038I Pass  23: suminf.    1.08352 (6) obj. -13.3721 iterations 4
Cbc0038I Pass  24: suminf.    1.38614 (4) obj. -13.3721 iterations 11
Cbc0038I Pass  25: suminf.    0.99861 (4) obj. -13.3721 iterations 7
Cbc0038I Pass  26: suminf.    1.17163 (5) obj. -13.3721 iterations 4
Cbc0038I Pass  27: suminf.    1.12972 (6) obj. -13.3721 iterations 4
Cbc0038I Pass  28: suminf.    1.69781 (6) obj. -13.3721 iterations 7
Cbc0038I Pass  29: suminf.    1.45763 (6) obj. -13.3721 iterations 2
Cbc0038I Pass  30: suminf.    1.67828 (6) obj. -13.3721 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 69 columns, reduced to 91 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -10.9056 - took 0.04 seconds
Cbc0012I Integer solution of -10.90561 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 123 rows 69 columns, reduced to 75 rows 39 columns
Cbc0031I 29 added rows had average density of 36.206897
Cbc0013I At root node, 29 cuts changed objective from -35.56926 to -27.122066 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10891 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1952 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.90561 best solution, best possible -27.122066 (0.83 seconds)
Cbc0001I Search completed - best objective -10.90561, took 8900 iterations and 22 nodes (0.98 seconds)
Cbc0032I Strong branching done 374 times (9011 iterations), fathomed 0 nodes and fixed 17 variables
Cbc0035I Maximum depth 6, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       0.99

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 115 (-38) columns and 1920 (-1384) elements
Clp1000I sum of infeasibilities 6.62485e-08 - average 6.07784e-10, 24 fixed columns
Coin0506I Presolve 87 (-22) rows, 91 (-24) columns and 1237 (-683) elements
Clp0006I 0  Obj 38.44986 Dual inf 6.925231 (91)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.3573774 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 42.30469
Clp0000I Optimal - objective value 42.30469
Coin0511I After Postsolve, objective 42.30469, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 42.30469
Clp0000I Optimal - objective value 42.30469
Clp0000I Optimal - objective value 42.30469
Clp0000I Optimal - objective value 42.30469
Coin0511I After Postsolve, objective 42.30469, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.30468979 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 115 columns (115 integer (115 of which binary)) and 1973 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.179%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 0.769855
Cbc0038I Pass   1: suminf.    0.46251 (11) obj. -23.8653 iterations 36
Cbc0038I Solution found of 3.16854
Cbc0038I Rounding solution of 0.16854 is better than previous of 3.16854

Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -2.32792
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.46251 (11) obj. -23.8653 iterations 0
Cbc0038I Pass   3: suminf.    0.50867 (2) obj. -2.32792 iterations 23
Cbc0038I Pass   4: suminf.    0.27619 (2) obj. -6.55209 iterations 2
Cbc0038I Pass   5: suminf.    0.03175 (1) obj. -2.64098 iterations 1
Cbc0038I Pass   6: suminf.    1.30871 (18) obj. -2.32792 iterations 21
Cbc0038I Pass   7: suminf.    1.00864 (17) obj. -4.12837 iterations 1
Cbc0038I Pass   8: suminf.    0.84906 (9) obj. -2.32792 iterations 31
Cbc0038I Pass   9: suminf.    0.84906 (9) obj. -2.32792 iterations 8
Cbc0038I Pass  10: suminf.    0.86387 (9) obj. -2.32792 iterations 7
Cbc0038I Pass  11: suminf.    0.86387 (9) obj. -2.32792 iterations 6
Cbc0038I Pass  12: suminf.    0.84906 (9) obj. -2.32792 iterations 14
Cbc0038I Pass  13: suminf.    0.90218 (14) obj. -2.32792 iterations 29
Cbc0038I Pass  14: suminf.    0.37869 (13) obj. -2.32792 iterations 12
Cbc0038I Pass  15: suminf.    0.81787 (9) obj. -2.32792 iterations 22
Cbc0038I Pass  16: suminf.    0.81787 (9) obj. -2.32792 iterations 2
Cbc0038I Pass  17: suminf.    0.89161 (10) obj. -2.32792 iterations 9
Cbc0038I Pass  18: suminf.    0.89161 (10) obj. -2.32792 iterations 0
Cbc0038I Pass  19: suminf.    0.90469 (10) obj. -2.32792 iterations 10
Cbc0038I Pass  20: suminf.    0.90469 (10) obj. -2.32792 iterations 8
Cbc0038I Pass  21: suminf.    0.89161 (10) obj. -2.32792 iterations 11
Cbc0038I Pass  22: suminf.    0.94979 (14) obj. -2.32792 iterations 22
Cbc0038I Pass  23: suminf.    0.94979 (14) obj. -2.32792 iterations 2
Cbc0038I Pass  24: suminf.    0.94887 (10) obj. -2.32792 iterations 13
Cbc0038I Pass  25: suminf.    0.67311 (9) obj. -2.87943 iterations 5
Cbc0038I Pass  26: suminf.    1.21822 (9) obj. -2.32792 iterations 14
Cbc0038I Pass  27: suminf.    0.81145 (9) obj. -3.14145 iterations 9
Cbc0038I Pass  28: suminf.    0.94646 (12) obj. -2.32792 iterations 5
Cbc0038I Pass  29: suminf.    0.94646 (12) obj. -2.32792 iterations 0
Cbc0038I Pass  30: suminf.    0.90174 (10) obj. -2.32792 iterations 14
Cbc0038I Pass  31: suminf.    0.90174 (10) obj. -2.32792 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 115 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 3.16854 to -7.11699 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.6527
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.46251 (11) obj. -23.8653 iterations 0
Cbc0038I Pass  32: suminf.    0.45607 (3) obj. -10.6527 iterations 22
Cbc0038I Pass  33: suminf.    0.24185 (3) obj. -10.6527 iterations 2
Cbc0038I Pass  34: suminf.    0.45607 (3) obj. -10.6527 iterations 2
Cbc0038I Pass  35: suminf.    1.25227 (28) obj. -10.6527 iterations 28
Cbc0038I Pass  36: suminf.    0.59409 (6) obj. -10.6527 iterations 30
Cbc0038I Pass  37: suminf.    0.68010 (6) obj. -10.6527 iterations 21
Cbc0038I Pass  38: suminf.    0.83548 (10) obj. -10.6527 iterations 21
Cbc0038I Pass  39: suminf.    0.83548 (10) obj. -10.6527 iterations 3
Cbc0038I Pass  40: suminf.    0.79033 (8) obj. -10.6527 iterations 14
Cbc0038I Pass  41: suminf.    0.79033 (8) obj. -10.6527 iterations 3
Cbc0038I Pass  42: suminf.    0.58529 (8) obj. -10.6527 iterations 4
Cbc0038I Pass  43: suminf.    0.57732 (8) obj. -10.6527 iterations 3
Cbc0038I Pass  44: suminf.    0.38788 (9) obj. -10.6527 iterations 12
Cbc0038I Pass  45: suminf.    0.38606 (9) obj. -10.6527 iterations 2
Cbc0038I Pass  46: suminf.    1.63323 (9) obj. -10.6527 iterations 14
Cbc0038I Pass  47: suminf.    1.38300 (18) obj. -10.6527 iterations 4
Cbc0038I Pass  48: suminf.    0.91230 (13) obj. -10.6527 iterations 16
Cbc0038I Pass  49: suminf.    0.34834 (8) obj. -10.6527 iterations 10
Cbc0038I Pass  50: suminf.    0.63344 (8) obj. -10.6527 iterations 11
Cbc0038I Pass  51: suminf.    0.65898 (25) obj. -10.6527 iterations 16
Cbc0038I Pass  52: suminf.    0.41346 (8) obj. -10.6527 iterations 15
Cbc0038I Pass  53: suminf.    0.63344 (8) obj. -10.6527 iterations 21
Cbc0038I Pass  54: suminf.    0.34834 (8) obj. -10.6527 iterations 7
Cbc0038I Pass  55: suminf.    0.75520 (11) obj. -10.6527 iterations 19
Cbc0038I Pass  56: suminf.    0.45273 (10) obj. -10.6527 iterations 9
Cbc0038I Pass  57: suminf.    0.63344 (8) obj. -10.6527 iterations 11
Cbc0038I Pass  58: suminf.    0.34834 (8) obj. -10.6527 iterations 6
Cbc0038I Pass  59: suminf.    0.63344 (8) obj. -10.6527 iterations 7
Cbc0038I Pass  60: suminf.    0.82544 (28) obj. -10.6527 iterations 18
Cbc0038I Rounding solution of -8.29811 is better than previous of -7.11699

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 115 columns, reduced to 30 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -14.8954
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.46251 (11) obj. -23.8653 iterations 0
Cbc0038I Pass  61: suminf.    0.76842 (4) obj. -14.8954 iterations 24
Cbc0038I Pass  62: suminf.    0.76842 (4) obj. -14.8954 iterations 0
Cbc0038I Pass  63: suminf.    0.62002 (4) obj. -14.8954 iterations 6
Cbc0038I Pass  64: suminf.    0.23163 (4) obj. -14.8954 iterations 1
Cbc0038I Pass  65: suminf.    0.76842 (4) obj. -14.8954 iterations 3
Cbc0038I Pass  66: suminf.    0.82747 (8) obj. -14.8954 iterations 14
Cbc0038I Pass  67: suminf.    0.82747 (8) obj. -14.8954 iterations 2
Cbc0038I Pass  68: suminf.    0.37977 (6) obj. -14.8954 iterations 24
Cbc0038I Pass  69: suminf.    0.34540 (6) obj. -14.8954 iterations 8
Cbc0038I Pass  70: suminf.    0.56390 (6) obj. -14.8954 iterations 12
Cbc0038I Pass  71: suminf.    0.31353 (5) obj. -14.8954 iterations 4
Cbc0038I Pass  72: suminf.    0.56390 (5) obj. -14.8954 iterations 5
Cbc0038I Pass  73: suminf.    0.38361 (8) obj. -14.8954 iterations 11
Cbc0038I Pass  74: suminf.    0.36562 (7) obj. -14.8954 iterations 7
Cbc0038I Pass  75: suminf.    0.38233 (7) obj. -14.8954 iterations 7
Cbc0038I Pass  76: suminf.    0.91776 (19) obj. -14.8954 iterations 21
Cbc0038I Pass  77: suminf.    0.55214 (19) obj. -14.8954 iterations 17
Cbc0038I Pass  78: suminf.    1.24356 (18) obj. -14.8954 iterations 20
Cbc0038I Pass  79: suminf.    1.24356 (18) obj. -14.8954 iterations 1
Cbc0038I Pass  80: suminf.    1.07107 (21) obj. -14.8954 iterations 17
Cbc0038I Pass  81: suminf.    1.07107 (21) obj. -14.8954 iterations 0
Cbc0038I Pass  82: suminf.    0.66957 (16) obj. -14.8954 iterations 12
Cbc0038I Pass  83: suminf.    0.50666 (11) obj. -14.8954 iterations 14
Cbc0038I Pass  84: suminf.    0.56012 (11) obj. -14.8954 iterations 8
Cbc0038I Pass  85: suminf.    0.56012 (11) obj. -14.8954 iterations 3
Cbc0038I Pass  86: suminf.    0.50666 (11) obj. -14.8954 iterations 8
Cbc0038I Pass  87: suminf.    0.61551 (11) obj. -14.8954 iterations 27
Cbc0038I Pass  88: suminf.    0.47499 (10) obj. -14.8954 iterations 15
Cbc0038I Pass  89: suminf.    0.39070 (9) obj. -14.8954 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 115 columns, reduced to 30 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -8.29811 to -10.9056 (0.11 seconds)
Cbc0038I Round again with cutoff of -17.8653
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 5
Cbc0038I Pass  89: suminf.    0.46251 (11) obj. -23.8653 iterations 0
Cbc0038I Pass  90: suminf.    0.39482 (6) obj. -17.8653 iterations 30
Cbc0038I Pass  91: suminf.    0.34091 (6) obj. -17.8653 iterations 7
Cbc0038I Pass  92: suminf.    0.57894 (6) obj. -17.8653 iterations 8
Cbc0038I Pass  93: suminf.    0.31165 (5) obj. -17.8653 iterations 4
Cbc0038I Pass  94: suminf.    0.57894 (5) obj. -17.8653 iterations 4
Cbc0038I Pass  95: suminf.    1.72528 (33) obj. -17.8653 iterations 29
Cbc0038I Pass  96: suminf.    1.07173 (31) obj. -17.8653 iterations 9
Cbc0038I Pass  97: suminf.    1.72528 (33) obj. -17.8653 iterations 21
Cbc0038I Pass  98: suminf.    1.03401 (31) obj. -17.8653 iterations 11
Cbc0038I Pass  99: suminf.    1.72528 (33) obj. -17.8653 iterations 16
Cbc0038I Pass 100: suminf.    1.72528 (33) obj. -17.8653 iterations 17
Cbc0038I Pass 101: suminf.    1.04796 (31) obj. -17.8653 iterations 16
Cbc0038I Pass 102: suminf.    1.72528 (33) obj. -17.8653 iterations 12
Cbc0038I Pass 103: suminf.    1.97408 (21) obj. -17.8653 iterations 24
Cbc0038I Pass 104: suminf.    0.86846 (18) obj. -17.8653 iterations 3
Cbc0038I Pass 105: suminf.    1.55400 (19) obj. -17.8653 iterations 17
Cbc0038I Pass 106: suminf.    1.55400 (19) obj. -17.8653 iterations 0
Cbc0038I Pass 107: suminf.    0.69965 (18) obj. -17.8653 iterations 16
Cbc0038I Pass 108: suminf.    0.59567 (12) obj. -17.8653 iterations 8
Cbc0038I Pass 109: suminf.    0.47657 (11) obj. -17.8653 iterations 10
Cbc0038I Pass 110: suminf.    0.47657 (11) obj. -17.8653 iterations 3
Cbc0038I Pass 111: suminf.    0.53003 (11) obj. -17.8653 iterations 5
Cbc0038I Pass 112: suminf.    0.53003 (11) obj. -17.8653 iterations 2
Cbc0038I Pass 113: suminf.    0.47657 (11) obj. -17.8653 iterations 5
Cbc0038I Pass 114: suminf.    0.57611 (11) obj. -17.8653 iterations 18
Cbc0038I Pass 115: suminf.    0.47657 (11) obj. -17.8653 iterations 10
Cbc0038I Pass 116: suminf.    0.42079 (9) obj. -17.8653 iterations 6
Cbc0038I Pass 117: suminf.    0.41514 (9) obj. -17.8653 iterations 5
Cbc0038I Pass 118: suminf.    1.60302 (21) obj. -17.8653 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 115 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -10.9056 - took 0.08 seconds
Cbc0012I Integer solution of -10.90561 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 101 rows 115 columns, reduced to 2 rows 3 columns
Cbc0031I 73 added rows had average density of 10.890411
Cbc0013I At root node, 73 cuts changed objective from -24.795148 to -14.970569 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 4386 row cuts average 7.9 elements, 3 column cuts (25 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 77 row cuts average 61.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 247 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 100 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 59.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 154 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.223 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.90561 best solution, best possible -14.970569 (0.89 seconds)
Cbc0001I Search completed - best objective -10.90561, took 954 iterations and 2 nodes (0.90 seconds)
Cbc0032I Strong branching done 50 times (1597 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.90

