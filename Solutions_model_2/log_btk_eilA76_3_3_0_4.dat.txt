Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-36) rows, 66 (-12) columns and 364 (-89) elements
Clp1000I sum of infeasibilities 8.88362e-06 - average 7.46523e-08, 59 fixed columns
Coin0506I Presolve 7 (-112) rows, 7 (-59) columns and 22 (-342) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 15348.227
Clp0000I Optimal - objective value 15348.227
Coin0511I After Postsolve, objective 15348.227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.38597063 - largest nonzero change 0 ( 0%) - largest zero change 2.8851086e-05
Clp0000I Optimal - objective value 15348.227
Clp0000I Optimal - objective value 15348.227
Clp0000I Optimal - objective value 15348.227
Coin0511I After Postsolve, objective 15348.227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15348.22721 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 119 rows, 66 columns (65 integer (65 of which binary)) and 364 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.27839
Cbc0038I Solution found of -10910
Cbc0038I Relaxing continuous gives -10910
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -10910 to -13325.9 (0.01 seconds)
Cbc0038I Round again with cutoff of -13528.2
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.93217 (2) obj. -13528.2 iterations 18
Cbc0038I Pass   2: suminf.    0.28571 (2) obj. -15113.2 iterations 4
Cbc0038I Pass   3: suminf.    2.30646 (7) obj. -13528.2 iterations 17
Cbc0038I Pass   4: suminf.    0.11611 (5) obj. -13528.2 iterations 19
Cbc0038I Pass   5: suminf.    1.09700 (4) obj. -13528.2 iterations 15
Cbc0038I Pass   6: suminf.    0.69007 (3) obj. -13528.2 iterations 7
Cbc0038I Pass   7: suminf.    1.02536 (3) obj. -13528.2 iterations 7
Cbc0038I Pass   8: suminf.    0.67289 (8) obj. -13528.2 iterations 10
Cbc0038I Pass   9: suminf.    0.52370 (6) obj. -13528.2 iterations 9
Cbc0038I Pass  10: suminf.    0.79598 (3) obj. -13528.2 iterations 14
Cbc0038I Pass  11: suminf.    0.27690 (2) obj. -13528.2 iterations 7
Cbc0038I Pass  12: suminf.    0.44672 (2) obj. -13528.2 iterations 4
Cbc0038I Pass  13: suminf.    3.39785 (10) obj. -13528.2 iterations 13
Cbc0038I Pass  14: suminf.    0.69007 (3) obj. -13528.2 iterations 17
Cbc0038I Pass  15: suminf.    1.02536 (3) obj. -13528.2 iterations 7
Cbc0038I Pass  16: suminf.    1.15381 (6) obj. -13528.2 iterations 18
Cbc0038I Pass  17: suminf.    0.55666 (2) obj. -13528.2 iterations 12
Cbc0038I Pass  18: suminf.    0.89198 (2) obj. -14324.5 iterations 3
Cbc0038I Pass  19: suminf.    1.75000 (4) obj. -13528.2 iterations 15
Cbc0038I Pass  20: suminf.    0.76151 (2) obj. -13528.2 iterations 11
Cbc0038I Pass  21: suminf.    0.71429 (2) obj. -13643.9 iterations 2
Cbc0038I Pass  22: suminf.    0.60951 (2) obj. -13843.3 iterations 8
Cbc0038I Pass  23: suminf.    0.13793 (1) obj. -13756.9 iterations 4
Cbc0038I Pass  24: suminf.    0.40043 (2) obj. -13528.2 iterations 3
Cbc0038I Pass  25: suminf.    0.80247 (2) obj. -14511.3 iterations 3
Cbc0038I Pass  26: suminf.    0.66618 (3) obj. -13528.2 iterations 10
Cbc0038I Pass  27: suminf.    0.37248 (2) obj. -13528.2 iterations 7
Cbc0038I Pass  28: suminf.    0.46429 (2) obj. -13753.3 iterations 2
Cbc0038I Pass  29: suminf.    0.91728 (5) obj. -13528.2 iterations 9
Cbc0038I Pass  30: suminf.    0.91728 (5) obj. -13528.2 iterations 1
Cbc0038I Rounding solution of -13385.4 is better than previous of -13325.9

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 43 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -13385.4 to -14600.2 (0.03 seconds)
Cbc0038I Round again with cutoff of -14749.8
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.43393 (2) obj. -14749.8 iterations 0
Cbc0038I Pass  31: suminf.    0.28571 (2) obj. -15113.2 iterations 6
Cbc0038I Pass  32: suminf.    0.98821 (4) obj. -14749.8 iterations 9
Cbc0038I Pass  33: suminf.    0.59882 (4) obj. -14749.8 iterations 6
Cbc0038I Pass  34: suminf.    0.87500 (3) obj. -14844.9 iterations 11
Cbc0038I Pass  35: suminf.    0.82956 (4) obj. -14749.8 iterations 16
Cbc0038I Pass  36: suminf.    0.82173 (4) obj. -14749.8 iterations 8
Cbc0038I Pass  37: suminf.    1.15358 (4) obj. -14749.8 iterations 13
Cbc0038I Pass  38: suminf.    0.23839 (3) obj. -14749.8 iterations 11
Cbc0038I Pass  39: suminf.    0.30316 (3) obj. -14749.8 iterations 5
Cbc0038I Pass  40: suminf.    0.90395 (3) obj. -14749.8 iterations 8
Cbc0038I Pass  41: suminf.    0.65795 (5) obj. -14749.8 iterations 7
Cbc0038I Pass  42: suminf.    0.28571 (2) obj. -15113.2 iterations 12
Cbc0038I Pass  43: suminf.    0.43393 (2) obj. -14749.8 iterations 2
Cbc0038I Pass  44: suminf.    0.73722 (4) obj. -14749.8 iterations 10
Cbc0038I Pass  45: suminf.    0.73722 (4) obj. -14749.8 iterations 2
Cbc0038I Pass  46: suminf.    0.43393 (2) obj. -14749.8 iterations 5
Cbc0038I Pass  47: suminf.    1.68764 (5) obj. -14749.8 iterations 3
Cbc0038I Pass  48: suminf.    1.26309 (4) obj. -14749.8 iterations 4
Cbc0038I Pass  49: suminf.    0.28571 (2) obj. -15113.2 iterations 7
Cbc0038I Pass  50: suminf.    0.28571 (2) obj. -15113.2 iterations 0
Cbc0038I Pass  51: suminf.    0.43393 (2) obj. -14749.8 iterations 2
Cbc0038I Pass  52: suminf.    0.58225 (3) obj. -14749.8 iterations 8
Cbc0038I Pass  53: suminf.    0.58225 (3) obj. -14749.8 iterations 2
Cbc0038I Pass  54: suminf.    0.89836 (3) obj. -14749.8 iterations 4
Cbc0038I Pass  55: suminf.    0.89836 (3) obj. -14749.8 iterations 0
Cbc0038I Pass  56: suminf.    0.85822 (2) obj. -14749.8 iterations 7
Cbc0038I Pass  57: suminf.    0.72840 (2) obj. -14964.2 iterations 3
Cbc0038I Pass  58: suminf.    0.53949 (2) obj. -14749.8 iterations 2
Cbc0038I Pass  59: suminf.    0.85822 (2) obj. -14749.8 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -14600.2 - took 0.03 seconds
Cbc0012I Integer solution of -14600.196 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 119 rows 66 columns, reduced to 17 rows 12 columns
Cbc0031I 4 added rows had average density of 18.25
Cbc0013I At root node, 4 cuts changed objective from -15348.227 to -14808.052 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.6 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14600.196, took 189 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 48 times (283 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-59) rows, 106 (-46) columns and 1599 (-1704) elements
Clp1000I sum of infeasibilities 8.06335e-08 - average 8.48774e-10, 97 fixed columns
Coin0506I Presolve 7 (-88) rows, 9 (-97) columns and 28 (-1571) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 15326.227
Clp0000I Optimal - objective value 15326.227
Coin0511I After Postsolve, objective 15326.227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.2553765 - largest nonzero change 2.3379487e-05 ( 0.0023379487%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 15384.493
Clp0000I Optimal - objective value 15384.493
Clp0000I Optimal - objective value 15384.493
Coin0511I After Postsolve, objective 15384.493, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15384.49293 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 106 columns (106 integer (106 of which binary)) and 1605 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.564%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.66445
Cbc0038I Pass   1: suminf.    1.53370 (24) obj. -10937 iterations 21
Cbc0038I Pass   2: suminf.    0.40975 (9) obj. -10919.5 iterations 15
Cbc0038I Solution found of -10910
Cbc0038I Rounding solution of -12656.2 is better than previous of -10910

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 106 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -12656.2 to -13325.9 (0.03 seconds)
Cbc0038I Round again with cutoff of -13530.8
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.77552 (27) obj. -13530.8 iterations 4
Cbc0038I Pass   4: suminf.    1.77552 (27) obj. -13530.8 iterations 0
Cbc0038I Pass   5: suminf.    0.40544 (4) obj. -13530.8 iterations 27
Cbc0038I Pass   6: suminf.    0.40544 (4) obj. -13530.8 iterations 1
Cbc0038I Pass   7: suminf.    1.21631 (3) obj. -13530.8 iterations 3
Cbc0038I Pass   8: suminf.    1.02781 (5) obj. -13530.8 iterations 7
Cbc0038I Pass   9: suminf.    0.42370 (4) obj. -14776.7 iterations 5
Cbc0038I Pass  10: suminf.    0.34906 (1) obj. -13530.8 iterations 4
Cbc0038I Pass  11: suminf.    0.28571 (2) obj. -15108.2 iterations 2
Cbc0038I Pass  12: suminf.    0.92907 (2) obj. -13530.8 iterations 3
Cbc0038I Pass  13: suminf.    0.77926 (8) obj. -14177.5 iterations 20
Cbc0038I Pass  14: suminf.    0.51038 (7) obj. -14160.2 iterations 6
Cbc0038I Pass  15: suminf.    0.51418 (2) obj. -13530.8 iterations 11
Cbc0038I Pass  16: suminf.    0.96429 (2) obj. -14809.5 iterations 6
Cbc0038I Pass  17: suminf.    1.51942 (12) obj. -13530.8 iterations 21
Cbc0038I Pass  18: suminf.    1.51942 (12) obj. -13530.8 iterations 3
Cbc0038I Solution found of -14129
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 106 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -14129 to -14132 (0.04 seconds)
Cbc0038I Round again with cutoff of -14380.4
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 3
Cbc0038I Pass  19: suminf.    3.09344 (28) obj. -14380.4 iterations 1
Cbc0038I Pass  20: suminf.    2.29981 (34) obj. -14380.4 iterations 8
Cbc0038I Pass  21: suminf.    0.92462 (6) obj. -14615.5 iterations 29
Cbc0038I Pass  22: suminf.    0.92462 (6) obj. -14615.5 iterations 0
Cbc0038I Pass  23: suminf.    0.71264 (5) obj. -14380.4 iterations 9
Cbc0038I Pass  24: suminf.    0.42370 (4) obj. -14776.7 iterations 5
Cbc0038I Pass  25: suminf.    0.40815 (1) obj. -14380.4 iterations 4
Cbc0038I Pass  26: suminf.    0.28571 (2) obj. -15108.2 iterations 2
Cbc0038I Pass  27: suminf.    0.58255 (2) obj. -14380.4 iterations 3
Cbc0038I Pass  28: suminf.    1.58568 (10) obj. -14380.4 iterations 17
Cbc0038I Pass  29: suminf.    1.00312 (5) obj. -14380.4 iterations 10
Cbc0038I Pass  30: suminf.    0.85185 (2) obj. -14508.7 iterations 7
Cbc0038I Pass  31: suminf.    0.73625 (2) obj. -14380.4 iterations 6
Cbc0038I Pass  32: suminf.    1.49945 (7) obj. -14380.4 iterations 20
Cbc0038I Pass  33: suminf.    1.13116 (6) obj. -14380.4 iterations 8
Cbc0038I Pass  34: suminf.    0.96429 (2) obj. -14803.5 iterations 8
Cbc0038I Pass  35: suminf.    0.86315 (2) obj. -14380.4 iterations 3
Cbc0038I Pass  36: suminf.    3.31489 (13) obj. -14380.4 iterations 11
Cbc0038I Pass  37: suminf.    0.22845 (5) obj. -14380.4 iterations 10
Cbc0038I Pass  38: suminf.    0.22845 (5) obj. -14380.4 iterations 1
Cbc0038I Pass  39: suminf.    0.75528 (4) obj. -14380.4 iterations 8
Cbc0038I Pass  40: suminf.    0.07207 (3) obj. -14380.4 iterations 8
Cbc0038I Pass  41: suminf.    1.41168 (13) obj. -14380.4 iterations 30
Cbc0038I Pass  42: suminf.    1.20606 (10) obj. -14380.4 iterations 7
Cbc0038I Pass  43: suminf.    0.48527 (2) obj. -14380.4 iterations 11
Cbc0038I Pass  44: suminf.    0.46429 (2) obj. -14431.9 iterations 4
Cbc0038I Pass  45: suminf.    1.86483 (9) obj. -14380.4 iterations 18
Cbc0038I Pass  46: suminf.    1.37831 (10) obj. -14380.4 iterations 11
Cbc0038I Pass  47: suminf.    2.95877 (8) obj. -14380.4 iterations 13
Cbc0038I Pass  48: suminf.    1.15497 (6) obj. -14380.4 iterations 16
Cbc0038I Rounding solution of -14236.1 is better than previous of -14132

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 106 columns, reduced to 46 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -14236.1 to -14600.2 (0.08 seconds)
Cbc0038I Round again with cutoff of -14832.4
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 4
Cbc0038I Pass  48: suminf.    3.65374 (34) obj. -14832.4 iterations 7
Cbc0038I Pass  49: suminf.    1.55811 (13) obj. -14832.4 iterations 24
Cbc0038I Pass  50: suminf.    1.55811 (13) obj. -14832.4 iterations 1
Cbc0038I Pass  51: suminf.    0.54497 (5) obj. -14832.4 iterations 10
Cbc0038I Pass  52: suminf.    0.42655 (5) obj. -14832.4 iterations 1
Cbc0038I Pass  53: suminf.    0.39820 (2) obj. -14832.4 iterations 7
Cbc0038I Pass  54: suminf.    0.28571 (2) obj. -15108.2 iterations 5
Cbc0038I Pass  55: suminf.    1.24232 (14) obj. -14832.4 iterations 19
Cbc0038I Pass  56: suminf.    1.21990 (11) obj. -14832.4 iterations 6
Cbc0038I Pass  57: suminf.    0.81038 (4) obj. -14832.4 iterations 15
Cbc0038I Pass  58: suminf.    0.28571 (2) obj. -15107.2 iterations 4
Cbc0038I Pass  59: suminf.    0.39779 (2) obj. -14832.4 iterations 4
Cbc0038I Pass  60: suminf.    3.66839 (12) obj. -14832.4 iterations 15
Cbc0038I Pass  61: suminf.    0.94475 (8) obj. -14832.4 iterations 6
Cbc0038I Pass  62: suminf.    0.80391 (7) obj. -14832.4 iterations 4
Cbc0038I Pass  63: suminf.    0.39616 (2) obj. -14832.4 iterations 9
Cbc0038I Pass  64: suminf.    0.28571 (2) obj. -15103.2 iterations 5
Cbc0038I Pass  65: suminf.    1.36639 (8) obj. -14832.4 iterations 10
Cbc0038I Pass  66: suminf.    1.36639 (8) obj. -14832.4 iterations 3
Cbc0038I Pass  67: suminf.    3.10753 (14) obj. -14832.4 iterations 19
Cbc0038I Pass  68: suminf.    1.01125 (11) obj. -14832.4 iterations 7
Cbc0038I Pass  69: suminf.    0.28282 (3) obj. -14832.4 iterations 12
Cbc0038I Pass  70: suminf.    0.28137 (3) obj. -14832.4 iterations 4
Cbc0038I Pass  71: suminf.    0.81696 (7) obj. -14832.4 iterations 18
Cbc0038I Pass  72: suminf.    0.61828 (7) obj. -14832.4 iterations 8
Cbc0038I Pass  73: suminf.    0.28293 (5) obj. -14832.4 iterations 13
Cbc0038I Pass  74: suminf.    0.28292 (6) obj. -14832.4 iterations 3
Cbc0038I Pass  75: suminf.    0.50654 (3) obj. -14832.4 iterations 13
Cbc0038I Pass  76: suminf.    0.37563 (4) obj. -14832.4 iterations 5
Cbc0038I Pass  77: suminf.    0.28238 (3) obj. -14832.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 106 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -14600.2 - took 0.07 seconds
Cbc0012I Integer solution of -14600.196 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 95 rows 106 columns, reduced to 30 rows 31 columns
Cbc0031I 20 added rows had average density of 8.55
Cbc0013I At root node, 20 cuts changed objective from -15365.445 to -14773.865 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 308 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0010I After 7 nodes, 1 on tree, -14600.196 best solution, best possible -14773.069 (0.61 seconds)
Cbc0001I Search completed - best objective -14600.196, took 413 iterations and 8 nodes (0.61 seconds)
Cbc0032I Strong branching done 94 times (815 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 42 variables fixed on reduced cost
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.62

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-36) rows, 66 (-12) columns and 364 (-89) elements
Clp1000I sum of infeasibilities 8.88362e-06 - average 7.46523e-08, 59 fixed columns
Coin0506I Presolve 7 (-112) rows, 7 (-59) columns and 22 (-342) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 15348.227
Clp0000I Optimal - objective value 15348.227
Coin0511I After Postsolve, objective 15348.227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.38597063 - largest nonzero change 0 ( 0%) - largest zero change 2.8851086e-05
Clp0000I Optimal - objective value 15348.227
Clp0000I Optimal - objective value 15348.227
Clp0000I Optimal - objective value 15348.227
Coin0511I After Postsolve, objective 15348.227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15348.22721 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 119 rows, 66 columns (65 integer (65 of which binary)) and 364 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.27839
Cbc0038I Solution found of -10910
Cbc0038I Relaxing continuous gives -10910
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -10910 to -13325.9 (0.01 seconds)
Cbc0038I Round again with cutoff of -13528.2
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.93217 (2) obj. -13528.2 iterations 18
Cbc0038I Pass   2: suminf.    0.28571 (2) obj. -15113.2 iterations 4
Cbc0038I Pass   3: suminf.    2.30646 (7) obj. -13528.2 iterations 17
Cbc0038I Pass   4: suminf.    0.11611 (5) obj. -13528.2 iterations 19
Cbc0038I Pass   5: suminf.    1.09700 (4) obj. -13528.2 iterations 15
Cbc0038I Pass   6: suminf.    0.69007 (3) obj. -13528.2 iterations 7
Cbc0038I Pass   7: suminf.    1.02536 (3) obj. -13528.2 iterations 7
Cbc0038I Pass   8: suminf.    0.67289 (8) obj. -13528.2 iterations 10
Cbc0038I Pass   9: suminf.    0.52370 (6) obj. -13528.2 iterations 9
Cbc0038I Pass  10: suminf.    0.79598 (3) obj. -13528.2 iterations 14
Cbc0038I Pass  11: suminf.    0.27690 (2) obj. -13528.2 iterations 7
Cbc0038I Pass  12: suminf.    0.44672 (2) obj. -13528.2 iterations 4
Cbc0038I Pass  13: suminf.    3.39785 (10) obj. -13528.2 iterations 13
Cbc0038I Pass  14: suminf.    0.69007 (3) obj. -13528.2 iterations 17
Cbc0038I Pass  15: suminf.    1.02536 (3) obj. -13528.2 iterations 7
Cbc0038I Pass  16: suminf.    1.15381 (6) obj. -13528.2 iterations 18
Cbc0038I Pass  17: suminf.    0.55666 (2) obj. -13528.2 iterations 12
Cbc0038I Pass  18: suminf.    0.89198 (2) obj. -14324.5 iterations 3
Cbc0038I Pass  19: suminf.    1.75000 (4) obj. -13528.2 iterations 15
Cbc0038I Pass  20: suminf.    0.76151 (2) obj. -13528.2 iterations 11
Cbc0038I Pass  21: suminf.    0.71429 (2) obj. -13643.9 iterations 2
Cbc0038I Pass  22: suminf.    0.60951 (2) obj. -13843.3 iterations 8
Cbc0038I Pass  23: suminf.    0.13793 (1) obj. -13756.9 iterations 4
Cbc0038I Pass  24: suminf.    0.40043 (2) obj. -13528.2 iterations 3
Cbc0038I Pass  25: suminf.    0.80247 (2) obj. -14511.3 iterations 3
Cbc0038I Pass  26: suminf.    0.66618 (3) obj. -13528.2 iterations 10
Cbc0038I Pass  27: suminf.    0.37248 (2) obj. -13528.2 iterations 7
Cbc0038I Pass  28: suminf.    0.46429 (2) obj. -13753.3 iterations 2
Cbc0038I Pass  29: suminf.    0.91728 (5) obj. -13528.2 iterations 9
Cbc0038I Pass  30: suminf.    0.91728 (5) obj. -13528.2 iterations 1
Cbc0038I Rounding solution of -13385.4 is better than previous of -13325.9

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 43 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -13385.4 to -14600.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -14749.8
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.43393 (2) obj. -14749.8 iterations 0
Cbc0038I Pass  31: suminf.    0.28571 (2) obj. -15113.2 iterations 6
Cbc0038I Pass  32: suminf.    0.98821 (4) obj. -14749.8 iterations 9
Cbc0038I Pass  33: suminf.    0.59882 (4) obj. -14749.8 iterations 6
Cbc0038I Pass  34: suminf.    0.87500 (3) obj. -14844.9 iterations 11
Cbc0038I Pass  35: suminf.    0.82956 (4) obj. -14749.8 iterations 16
Cbc0038I Pass  36: suminf.    0.82173 (4) obj. -14749.8 iterations 8
Cbc0038I Pass  37: suminf.    1.15358 (4) obj. -14749.8 iterations 13
Cbc0038I Pass  38: suminf.    0.23839 (3) obj. -14749.8 iterations 11
Cbc0038I Pass  39: suminf.    0.30316 (3) obj. -14749.8 iterations 5
Cbc0038I Pass  40: suminf.    0.90395 (3) obj. -14749.8 iterations 8
Cbc0038I Pass  41: suminf.    0.65795 (5) obj. -14749.8 iterations 7
Cbc0038I Pass  42: suminf.    0.28571 (2) obj. -15113.2 iterations 12
Cbc0038I Pass  43: suminf.    0.43393 (2) obj. -14749.8 iterations 2
Cbc0038I Pass  44: suminf.    0.73722 (4) obj. -14749.8 iterations 10
Cbc0038I Pass  45: suminf.    0.73722 (4) obj. -14749.8 iterations 2
Cbc0038I Pass  46: suminf.    0.43393 (2) obj. -14749.8 iterations 5
Cbc0038I Pass  47: suminf.    1.68764 (5) obj. -14749.8 iterations 3
Cbc0038I Pass  48: suminf.    1.26309 (4) obj. -14749.8 iterations 4
Cbc0038I Pass  49: suminf.    0.28571 (2) obj. -15113.2 iterations 7
Cbc0038I Pass  50: suminf.    0.28571 (2) obj. -15113.2 iterations 0
Cbc0038I Pass  51: suminf.    0.43393 (2) obj. -14749.8 iterations 2
Cbc0038I Pass  52: suminf.    0.58225 (3) obj. -14749.8 iterations 8
Cbc0038I Pass  53: suminf.    0.58225 (3) obj. -14749.8 iterations 2
Cbc0038I Pass  54: suminf.    0.89836 (3) obj. -14749.8 iterations 4
Cbc0038I Pass  55: suminf.    0.89836 (3) obj. -14749.8 iterations 0
Cbc0038I Pass  56: suminf.    0.85822 (2) obj. -14749.8 iterations 7
Cbc0038I Pass  57: suminf.    0.72840 (2) obj. -14964.2 iterations 3
Cbc0038I Pass  58: suminf.    0.53949 (2) obj. -14749.8 iterations 2
Cbc0038I Pass  59: suminf.    0.85822 (2) obj. -14749.8 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14600.2 - took 0.03 seconds
Cbc0012I Integer solution of -14600.196 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 119 rows 66 columns, reduced to 17 rows 12 columns
Cbc0031I 4 added rows had average density of 18.25
Cbc0013I At root node, 4 cuts changed objective from -15348.227 to -14808.052 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.6 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14600.196, took 189 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 48 times (283 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 106 (-47) columns and 1599 (-1705) elements
Clp1000I sum of infeasibilities 8.06335e-08 - average 8.48774e-10, 97 fixed columns
Coin0506I Presolve 7 (-88) rows, 9 (-97) columns and 28 (-1571) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 15326.227
Clp0000I Optimal - objective value 15326.227
Coin0511I After Postsolve, objective 15326.227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.2553765 - largest nonzero change 2.3379487e-05 ( 0.0023379487%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 15384.493
Clp0000I Optimal - objective value 15384.493
Clp0000I Optimal - objective value 15384.493
Coin0511I After Postsolve, objective 15384.493, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15384.49293 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 106 columns (106 integer (106 of which binary)) and 1605 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.564%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.66445
Cbc0038I Pass   1: suminf.    1.53370 (24) obj. -10937 iterations 21
Cbc0038I Pass   2: suminf.    0.40975 (9) obj. -10919.5 iterations 15
Cbc0038I Solution found of -10910
Cbc0038I Rounding solution of -12656.2 is better than previous of -10910

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 106 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -12656.2 to -13325.9 (0.03 seconds)
Cbc0038I Round again with cutoff of -13530.8
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.77552 (27) obj. -13530.8 iterations 4
Cbc0038I Pass   4: suminf.    1.77552 (27) obj. -13530.8 iterations 0
Cbc0038I Pass   5: suminf.    0.40544 (4) obj. -13530.8 iterations 27
Cbc0038I Pass   6: suminf.    0.40544 (4) obj. -13530.8 iterations 1
Cbc0038I Pass   7: suminf.    1.21631 (3) obj. -13530.8 iterations 3
Cbc0038I Pass   8: suminf.    1.02781 (5) obj. -13530.8 iterations 7
Cbc0038I Pass   9: suminf.    0.42370 (4) obj. -14776.7 iterations 5
Cbc0038I Pass  10: suminf.    0.34906 (1) obj. -13530.8 iterations 4
Cbc0038I Pass  11: suminf.    0.28571 (2) obj. -15108.2 iterations 2
Cbc0038I Pass  12: suminf.    0.92907 (2) obj. -13530.8 iterations 3
Cbc0038I Pass  13: suminf.    0.77926 (8) obj. -14177.5 iterations 20
Cbc0038I Pass  14: suminf.    0.51038 (7) obj. -14160.2 iterations 6
Cbc0038I Pass  15: suminf.    0.51418 (2) obj. -13530.8 iterations 11
Cbc0038I Pass  16: suminf.    0.96429 (2) obj. -14809.5 iterations 6
Cbc0038I Pass  17: suminf.    1.51942 (12) obj. -13530.8 iterations 21
Cbc0038I Pass  18: suminf.    1.51942 (12) obj. -13530.8 iterations 3
Cbc0038I Solution found of -14129
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 106 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -14129 to -14132 (0.04 seconds)
Cbc0038I Round again with cutoff of -14380.4
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 3
Cbc0038I Pass  19: suminf.    3.09344 (28) obj. -14380.4 iterations 1
Cbc0038I Pass  20: suminf.    2.29981 (34) obj. -14380.4 iterations 8
Cbc0038I Pass  21: suminf.    0.92462 (6) obj. -14615.5 iterations 29
Cbc0038I Pass  22: suminf.    0.92462 (6) obj. -14615.5 iterations 0
Cbc0038I Pass  23: suminf.    0.71264 (5) obj. -14380.4 iterations 9
Cbc0038I Pass  24: suminf.    0.42370 (4) obj. -14776.7 iterations 5
Cbc0038I Pass  25: suminf.    0.40815 (1) obj. -14380.4 iterations 4
Cbc0038I Pass  26: suminf.    0.28571 (2) obj. -15108.2 iterations 2
Cbc0038I Pass  27: suminf.    0.58255 (2) obj. -14380.4 iterations 3
Cbc0038I Pass  28: suminf.    1.58568 (10) obj. -14380.4 iterations 17
Cbc0038I Pass  29: suminf.    1.00312 (5) obj. -14380.4 iterations 10
Cbc0038I Pass  30: suminf.    0.85185 (2) obj. -14508.7 iterations 7
Cbc0038I Pass  31: suminf.    0.73625 (2) obj. -14380.4 iterations 6
Cbc0038I Pass  32: suminf.    1.49945 (7) obj. -14380.4 iterations 20
Cbc0038I Pass  33: suminf.    1.13116 (6) obj. -14380.4 iterations 8
Cbc0038I Pass  34: suminf.    0.96429 (2) obj. -14803.5 iterations 8
Cbc0038I Pass  35: suminf.    0.86315 (2) obj. -14380.4 iterations 3
Cbc0038I Pass  36: suminf.    3.31489 (13) obj. -14380.4 iterations 11
Cbc0038I Pass  37: suminf.    0.22845 (5) obj. -14380.4 iterations 10
Cbc0038I Pass  38: suminf.    0.22845 (5) obj. -14380.4 iterations 1
Cbc0038I Pass  39: suminf.    0.75528 (4) obj. -14380.4 iterations 8
Cbc0038I Pass  40: suminf.    0.07207 (3) obj. -14380.4 iterations 8
Cbc0038I Pass  41: suminf.    1.41168 (13) obj. -14380.4 iterations 30
Cbc0038I Pass  42: suminf.    1.20606 (10) obj. -14380.4 iterations 7
Cbc0038I Pass  43: suminf.    0.48527 (2) obj. -14380.4 iterations 11
Cbc0038I Pass  44: suminf.    0.46429 (2) obj. -14431.9 iterations 4
Cbc0038I Pass  45: suminf.    1.86483 (9) obj. -14380.4 iterations 18
Cbc0038I Pass  46: suminf.    1.37831 (10) obj. -14380.4 iterations 11
Cbc0038I Pass  47: suminf.    2.95877 (8) obj. -14380.4 iterations 13
Cbc0038I Pass  48: suminf.    1.15497 (6) obj. -14380.4 iterations 16
Cbc0038I Rounding solution of -14236.1 is better than previous of -14132

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 106 columns, reduced to 46 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -14236.1 to -14600.2 (0.07 seconds)
Cbc0038I Round again with cutoff of -14832.4
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 4
Cbc0038I Pass  48: suminf.    3.65374 (34) obj. -14832.4 iterations 7
Cbc0038I Pass  49: suminf.    1.55811 (13) obj. -14832.4 iterations 24
Cbc0038I Pass  50: suminf.    1.55811 (13) obj. -14832.4 iterations 1
Cbc0038I Pass  51: suminf.    0.54497 (5) obj. -14832.4 iterations 10
Cbc0038I Pass  52: suminf.    0.42655 (5) obj. -14832.4 iterations 1
Cbc0038I Pass  53: suminf.    0.39820 (2) obj. -14832.4 iterations 7
Cbc0038I Pass  54: suminf.    0.28571 (2) obj. -15108.2 iterations 5
Cbc0038I Pass  55: suminf.    1.24232 (14) obj. -14832.4 iterations 19
Cbc0038I Pass  56: suminf.    1.21990 (11) obj. -14832.4 iterations 6
Cbc0038I Pass  57: suminf.    0.81038 (4) obj. -14832.4 iterations 15
Cbc0038I Pass  58: suminf.    0.28571 (2) obj. -15107.2 iterations 4
Cbc0038I Pass  59: suminf.    0.39779 (2) obj. -14832.4 iterations 4
Cbc0038I Pass  60: suminf.    3.66839 (12) obj. -14832.4 iterations 15
Cbc0038I Pass  61: suminf.    0.94475 (8) obj. -14832.4 iterations 6
Cbc0038I Pass  62: suminf.    0.80391 (7) obj. -14832.4 iterations 4
Cbc0038I Pass  63: suminf.    0.39616 (2) obj. -14832.4 iterations 9
Cbc0038I Pass  64: suminf.    0.28571 (2) obj. -15103.2 iterations 5
Cbc0038I Pass  65: suminf.    1.36639 (8) obj. -14832.4 iterations 10
Cbc0038I Pass  66: suminf.    1.36639 (8) obj. -14832.4 iterations 3
Cbc0038I Pass  67: suminf.    3.10753 (14) obj. -14832.4 iterations 19
Cbc0038I Pass  68: suminf.    1.01125 (11) obj. -14832.4 iterations 7
Cbc0038I Pass  69: suminf.    0.28282 (3) obj. -14832.4 iterations 12
Cbc0038I Pass  70: suminf.    0.28137 (3) obj. -14832.4 iterations 4
Cbc0038I Pass  71: suminf.    0.81696 (7) obj. -14832.4 iterations 18
Cbc0038I Pass  72: suminf.    0.61828 (7) obj. -14832.4 iterations 8
Cbc0038I Pass  73: suminf.    0.28293 (5) obj. -14832.4 iterations 13
Cbc0038I Pass  74: suminf.    0.28292 (6) obj. -14832.4 iterations 3
Cbc0038I Pass  75: suminf.    0.50654 (3) obj. -14832.4 iterations 13
Cbc0038I Pass  76: suminf.    0.37563 (4) obj. -14832.4 iterations 5
Cbc0038I Pass  77: suminf.    0.28238 (3) obj. -14832.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 106 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -14600.2 - took 0.07 seconds
Cbc0012I Integer solution of -14600.196 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 95 rows 106 columns, reduced to 30 rows 31 columns
Cbc0031I 20 added rows had average density of 8.55
Cbc0013I At root node, 20 cuts changed objective from -15365.445 to -14773.865 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 308 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0010I After 7 nodes, 1 on tree, -14600.196 best solution, best possible -14773.069 (0.62 seconds)
Cbc0001I Search completed - best objective -14600.196, took 413 iterations and 8 nodes (0.63 seconds)
Cbc0032I Strong branching done 94 times (815 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 42 variables fixed on reduced cost
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.63

