Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-16) rows, 21 (-4) columns and 100 (-35) elements
Clp1000I sum of infeasibilities 4.63777e-06 - average 1.40539e-07, 3 fixed columns
Coin0506I Presolve 7 (-26) rows, 14 (-7) columns and 36 (-64) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 5446.6744
Clp0000I Optimal - objective value 5446.6744
Coin0511I After Postsolve, objective 5446.6744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 5446.6744
Clp0000I Optimal - objective value 5446.6744
Clp0000I Optimal - objective value 5446.6744
Coin0511I After Postsolve, objective 5446.6744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5446.674384 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 100 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.433%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.163636
Cbc0038I Pass   1: suminf.    0.02000 (1) obj. -5422.79 iterations 5
Cbc0038I Solution found of -5107.26
Cbc0038I Relaxing continuous gives -5107.26
Cbc0038I Rounding solution of -5215.51 is better than previous of -5107.26

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -5238.62
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.02000 (1) obj. -5422.79 iterations 0
Cbc0038I Pass   3: suminf.    0.34158 (1) obj. -5238.62 iterations 3
Cbc0038I Pass   4: suminf.    0.44545 (1) obj. -5278.57 iterations 1
Cbc0038I Pass   5: suminf.    0.74657 (3) obj. -5238.62 iterations 3
Cbc0038I Pass   6: suminf.    0.28023 (2) obj. -5238.62 iterations 1
Cbc0038I Pass   7: suminf.    0.64193 (3) obj. -5238.62 iterations 4
Cbc0038I Pass   8: suminf.    0.98855 (3) obj. -5238.62 iterations 4
Cbc0038I Pass   9: suminf.    0.94975 (3) obj. -5238.62 iterations 4
Cbc0038I Pass  10: suminf.    0.26000 (2) obj. -5395.74 iterations 3
Cbc0038I Pass  11: suminf.    0.26000 (2) obj. -5395.74 iterations 0
Cbc0038I Pass  12: suminf.    0.15044 (1) obj. -5238.62 iterations 4
Cbc0038I Pass  13: suminf.    0.15044 (1) obj. -5238.62 iterations 0
Cbc0038I Pass  14: suminf.    0.33636 (1) obj. -5310.13 iterations 1
Cbc0038I Pass  15: suminf.    0.15044 (1) obj. -5238.62 iterations 2
Cbc0038I Pass  16: suminf.    0.80166 (3) obj. -5238.62 iterations 5
Cbc0038I Pass  17: suminf.    0.80166 (3) obj. -5238.62 iterations 1
Cbc0038I Pass  18: suminf.    0.26000 (2) obj. -5399.02 iterations 3
Cbc0038I Pass  19: suminf.    0.26000 (2) obj. -5399.02 iterations 0
Cbc0038I Pass  20: suminf.    0.06011 (1) obj. -5238.62 iterations 3
Cbc0038I Pass  21: suminf.    0.06011 (1) obj. -5238.62 iterations 0
Cbc0038I Pass  22: suminf.    0.40459 (2) obj. -5325.42 iterations 2
Cbc0038I Pass  23: suminf.    0.30172 (2) obj. -5238.62 iterations 10
Cbc0038I Pass  24: suminf.    0.30172 (2) obj. -5238.62 iterations 2
Cbc0038I Pass  25: suminf.    0.41640 (2) obj. -5238.62 iterations 1
Cbc0038I Pass  26: suminf.    0.29157 (2) obj. -5238.62 iterations 3
Cbc0038I Pass  27: suminf.    0.29157 (2) obj. -5238.62 iterations 1
Cbc0038I Pass  28: suminf.    0.64111 (2) obj. -5294.34 iterations 2
Cbc0038I Pass  29: suminf.    0.41904 (2) obj. -5238.62 iterations 1
Cbc0038I Pass  30: suminf.    0.77378 (2) obj. -5238.62 iterations 1
Cbc0038I Pass  31: suminf.    0.41904 (2) obj. -5238.62 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 6 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -5215.51 - took 0.03 seconds
Cbc0012I Integer solution of -5215.507 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -5308.2294 found by DiveCoefficient after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 4 rows 5 columns
Cbc0012I Integer solution of -5342.9701 found by DiveCoefficient after 822 iterations and 0 nodes (0.09 seconds)
Cbc0031I 7 added rows had average density of 14.571429
Cbc0013I At root node, 7 cuts changed objective from -5446.6744 to -5390.7747 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 4.8 elements, 3 column cuts (3 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 262 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0012I Integer solution of -5345.211 found by DiveCoefficient after 1054 iterations and 5 nodes (0.10 seconds)
Cbc0001I Search completed - best objective -5345.210999999999, took 1057 iterations and 6 nodes (0.11 seconds)
Cbc0032I Strong branching done 32 times (145 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 42 (-4) columns and 318 (-68) elements
Clp1000I sum of infeasibilities 0.00195312 - average 5.74446e-05, 38 fixed columns
Coin0506I Presolve 4 (-30) rows, 4 (-38) columns and 11 (-307) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 5379.053
Clp0000I Optimal - objective value 5379.053
Coin0511I After Postsolve, objective 5379.053, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15115274 - largest nonzero change 0 ( 0%) - largest zero change 2.980213e-05
Clp0000I Optimal - objective value 5500.3801
Clp0000I Optimal - objective value 5500.3801
Clp0000I Optimal - objective value 5500.3801
Coin0511I After Postsolve, objective 5500.3801, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5500.380134 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 42 columns (42 integer (42 of which binary)) and 341 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.768%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.20555
Cbc0038I Pass   1: suminf.    0.02000 (1) obj. -5417.44 iterations 19
Cbc0038I Solution found of -4839.8
Cbc0038I Rounding solution of -5186.44 is better than previous of -4839.8

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 42 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -5186.44 to -5229.6 (0.02 seconds)
Cbc0038I Round again with cutoff of -5252.95
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.02000 (1) obj. -5417.44 iterations 0
Cbc0038I Pass   3: suminf.    0.29906 (1) obj. -5252.95 iterations 3
Cbc0038I Pass   4: suminf.    1.20589 (4) obj. -5252.95 iterations 9
Cbc0038I Pass   5: suminf.    0.32490 (1) obj. -5252.95 iterations 7
Cbc0038I Pass   6: suminf.    0.39909 (1) obj. -5415.64 iterations 1
Cbc0038I Pass   7: suminf.    0.83350 (4) obj. -5425.43 iterations 8
Cbc0038I Pass   8: suminf.    0.93749 (3) obj. -5252.95 iterations 9
Cbc0038I Pass   9: suminf.    0.30302 (1) obj. -5252.95 iterations 6
Cbc0038I Pass  10: suminf.    0.44545 (1) obj. -5307.73 iterations 1
Cbc0038I Pass  11: suminf.    1.34545 (4) obj. -5252.95 iterations 5
Cbc0038I Pass  12: suminf.    0.44545 (1) obj. -5307.73 iterations 5
Cbc0038I Pass  13: suminf.    0.76016 (4) obj. -5252.95 iterations 8
Cbc0038I Pass  14: suminf.    0.04093 (1) obj. -5252.95 iterations 7
Cbc0038I Pass  15: suminf.    0.10455 (1) obj. -5277.42 iterations 1
Cbc0038I Pass  16: suminf.    1.61249 (7) obj. -5252.95 iterations 10
Cbc0038I Pass  17: suminf.    0.01273 (1) obj. -5337.96 iterations 9
Cbc0038I Pass  18: suminf.    0.15695 (1) obj. -5252.95 iterations 1
Cbc0038I Pass  19: suminf.    1.55109 (6) obj. -5252.95 iterations 9
Cbc0038I Pass  20: suminf.    0.74297 (3) obj. -5252.95 iterations 6
Cbc0038I Pass  21: suminf.    0.46156 (2) obj. -5252.95 iterations 2
Cbc0038I Pass  22: suminf.    0.46156 (2) obj. -5252.95 iterations 0
Cbc0038I Pass  23: suminf.    0.74401 (3) obj. -5252.95 iterations 4
Cbc0038I Pass  24: suminf.    1.14456 (5) obj. -5252.95 iterations 8
Cbc0038I Pass  25: suminf.    0.43861 (1) obj. -5252.95 iterations 5
Cbc0038I Pass  26: suminf.    0.44182 (1) obj. -5254.84 iterations 1
Cbc0038I Pass  27: suminf.    1.68476 (6) obj. -5252.95 iterations 5
Cbc0038I Pass  28: suminf.    1.59693 (5) obj. -5252.95 iterations 11
Cbc0038I Pass  29: suminf.    0.44262 (2) obj. -5252.95 iterations 5
Cbc0038I Pass  30: suminf.    0.01428 (2) obj. -5405.35 iterations 2
Cbc0038I Pass  31: suminf.    0.01273 (1) obj. -5404.96 iterations 1
Cbc0038I Rounding solution of -5304.21 is better than previous of -5229.6

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 42 columns, reduced to 7 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -5304.21 to -5345.21 (0.03 seconds)
Cbc0038I Round again with cutoff of -5368.8
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.02000 (1) obj. -5417.44 iterations 0
Cbc0038I Pass  32: suminf.    0.10252 (1) obj. -5368.8 iterations 3
Cbc0038I Pass  33: suminf.    1.06511 (5) obj. -5368.8 iterations 6
Cbc0038I Pass  34: suminf.    0.55365 (2) obj. -5368.8 iterations 4
Cbc0038I Pass  35: suminf.    1.18869 (5) obj. -5368.8 iterations 7
Cbc0038I Pass  36: suminf.    0.46860 (2) obj. -5368.8 iterations 4
Cbc0038I Pass  37: suminf.    0.23688 (2) obj. -5421.81 iterations 2
Cbc0038I Pass  38: suminf.    0.19455 (1) obj. -5411.19 iterations 1
Cbc0038I Pass  39: suminf.    0.26646 (1) obj. -5368.8 iterations 1
Cbc0038I Pass  40: suminf.    1.01278 (5) obj. -5368.8 iterations 7
Cbc0038I Pass  41: suminf.    0.12000 (1) obj. -5420.38 iterations 8
Cbc0038I Pass  42: suminf.    0.20752 (1) obj. -5368.8 iterations 3
Cbc0038I Pass  43: suminf.    0.22800 (3) obj. -5426.67 iterations 5
Cbc0038I Pass  44: suminf.    0.54867 (3) obj. -5368.8 iterations 8
Cbc0038I Pass  45: suminf.    0.47446 (2) obj. -5368.8 iterations 5
Cbc0038I Pass  46: suminf.    0.90503 (2) obj. -5385.69 iterations 2
Cbc0038I Pass  47: suminf.    0.83770 (2) obj. -5368.8 iterations 1
Cbc0038I Pass  48: suminf.    0.93661 (2) obj. -5368.8 iterations 1
Cbc0038I Pass  49: suminf.    1.47074 (5) obj. -5368.8 iterations 7
Cbc0038I Pass  50: suminf.    0.99629 (2) obj. -5368.8 iterations 5
Cbc0038I Pass  51: suminf.    0.91382 (2) obj. -5368.8 iterations 1
Cbc0038I Pass  52: suminf.    0.99629 (2) obj. -5368.8 iterations 2
Cbc0038I Pass  53: suminf.    2.18076 (8) obj. -5368.8 iterations 12
Cbc0038I Pass  54: suminf.    0.14602 (2) obj. -5368.8 iterations 9
Cbc0038I Pass  55: suminf.    0.22159 (2) obj. -5368.8 iterations 1
Cbc0038I Pass  56: suminf.    2.09662 (6) obj. -5368.8 iterations 10
Cbc0038I Pass  57: suminf.    0.71238 (2) obj. -5409.16 iterations 7
Cbc0038I Pass  58: suminf.    0.55152 (2) obj. -5368.8 iterations 1
Cbc0038I Pass  59: suminf.    0.83274 (2) obj. -5368.8 iterations 1
Cbc0038I Pass  60: suminf.    1.74400 (6) obj. -5368.8 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 42 columns, reduced to 7 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -5345.21 - took 0.02 seconds
Cbc0012I Integer solution of -5345.211 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 34 rows 42 columns, reduced to 4 rows 6 columns
Cbc0031I 9 added rows had average density of 13.777778
Cbc0013I At root node, 9 cuts changed objective from -5446.6744 to -5376.4729 in 32 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 7.3 elements, 4 column cuts (4 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 77 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5345.210999999999, took 403 iterations and 6 nodes (0.12 seconds)
Cbc0032I Strong branching done 56 times (252 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-16) rows, 21 (-4) columns and 100 (-35) elements
Clp1000I sum of infeasibilities 4.63777e-06 - average 1.40539e-07, 3 fixed columns
Coin0506I Presolve 7 (-26) rows, 14 (-7) columns and 36 (-64) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 5446.6744
Clp0000I Optimal - objective value 5446.6744
Coin0511I After Postsolve, objective 5446.6744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 5446.6744
Clp0000I Optimal - objective value 5446.6744
Clp0000I Optimal - objective value 5446.6744
Coin0511I After Postsolve, objective 5446.6744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5446.674384 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 100 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.433%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.163636
Cbc0038I Pass   1: suminf.    0.02000 (1) obj. -5422.79 iterations 5
Cbc0038I Solution found of -5107.26
Cbc0038I Relaxing continuous gives -5107.26
Cbc0038I Rounding solution of -5215.51 is better than previous of -5107.26

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5238.62
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.02000 (1) obj. -5422.79 iterations 0
Cbc0038I Pass   3: suminf.    0.34158 (1) obj. -5238.62 iterations 3
Cbc0038I Pass   4: suminf.    0.44545 (1) obj. -5278.57 iterations 1
Cbc0038I Pass   5: suminf.    0.74657 (3) obj. -5238.62 iterations 3
Cbc0038I Pass   6: suminf.    0.28023 (2) obj. -5238.62 iterations 1
Cbc0038I Pass   7: suminf.    0.64193 (3) obj. -5238.62 iterations 4
Cbc0038I Pass   8: suminf.    0.98855 (3) obj. -5238.62 iterations 4
Cbc0038I Pass   9: suminf.    0.94975 (3) obj. -5238.62 iterations 4
Cbc0038I Pass  10: suminf.    0.26000 (2) obj. -5395.74 iterations 3
Cbc0038I Pass  11: suminf.    0.26000 (2) obj. -5395.74 iterations 0
Cbc0038I Pass  12: suminf.    0.15044 (1) obj. -5238.62 iterations 4
Cbc0038I Pass  13: suminf.    0.15044 (1) obj. -5238.62 iterations 0
Cbc0038I Pass  14: suminf.    0.33636 (1) obj. -5310.13 iterations 1
Cbc0038I Pass  15: suminf.    0.15044 (1) obj. -5238.62 iterations 2
Cbc0038I Pass  16: suminf.    0.80166 (3) obj. -5238.62 iterations 5
Cbc0038I Pass  17: suminf.    0.80166 (3) obj. -5238.62 iterations 1
Cbc0038I Pass  18: suminf.    0.26000 (2) obj. -5399.02 iterations 3
Cbc0038I Pass  19: suminf.    0.26000 (2) obj. -5399.02 iterations 0
Cbc0038I Pass  20: suminf.    0.06011 (1) obj. -5238.62 iterations 3
Cbc0038I Pass  21: suminf.    0.06011 (1) obj. -5238.62 iterations 0
Cbc0038I Pass  22: suminf.    0.40459 (2) obj. -5325.42 iterations 2
Cbc0038I Pass  23: suminf.    0.30172 (2) obj. -5238.62 iterations 10
Cbc0038I Pass  24: suminf.    0.30172 (2) obj. -5238.62 iterations 2
Cbc0038I Pass  25: suminf.    0.41640 (2) obj. -5238.62 iterations 1
Cbc0038I Pass  26: suminf.    0.29157 (2) obj. -5238.62 iterations 3
Cbc0038I Pass  27: suminf.    0.29157 (2) obj. -5238.62 iterations 1
Cbc0038I Pass  28: suminf.    0.64111 (2) obj. -5294.34 iterations 2
Cbc0038I Pass  29: suminf.    0.41904 (2) obj. -5238.62 iterations 1
Cbc0038I Pass  30: suminf.    0.77378 (2) obj. -5238.62 iterations 1
Cbc0038I Pass  31: suminf.    0.41904 (2) obj. -5238.62 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 6 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5215.51 - took 0.01 seconds
Cbc0012I Integer solution of -5215.507 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -5308.2294 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 4 rows 5 columns
Cbc0012I Integer solution of -5342.9701 found by DiveCoefficient after 822 iterations and 0 nodes (0.10 seconds)
Cbc0031I 7 added rows had average density of 14.571429
Cbc0013I At root node, 7 cuts changed objective from -5446.6744 to -5390.7747 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 4.8 elements, 3 column cuts (3 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 262 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -5345.211 found by DiveCoefficient after 1054 iterations and 5 nodes (0.13 seconds)
Cbc0001I Search completed - best objective -5345.210999999999, took 1057 iterations and 6 nodes (0.13 seconds)
Cbc0032I Strong branching done 32 times (145 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-17) rows, 39 (-8) columns and 279 (-110) elements
Clp1000I sum of infeasibilities 1.06804e-05 - average 3.33763e-07, 25 fixed columns
Coin0506I Presolve 7 (-25) rows, 14 (-25) columns and 36 (-243) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 1.1844381 - largest nonzero change 1.9398167e-05 ( 0.00096990836%) - largest zero change 0
Clp0000I Optimal - objective value 5446.6744
Clp0000I Optimal - objective value 5446.6744
Coin0511I After Postsolve, objective 5446.6744, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9413193 - largest nonzero change 3.1105132e-05 ( 0.00096990836%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value 5500.3801
Clp0000I Optimal - objective value 5500.3801
Clp0000I Optimal - objective value 5500.3801
Coin0511I After Postsolve, objective 5500.3801, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5500.380134 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 39 columns (39 integer (39 of which binary)) and 293 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.114%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 3.01618
Cbc0038I Pass   1: suminf.    0.02000 (1) obj. -5422.79 iterations 18
Cbc0038I Solution found of -5107.26
Cbc0038I Rounding solution of -5215.51 is better than previous of -5107.26

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -5215.51 to -5229.6 (0.02 seconds)
Cbc0038I Round again with cutoff of -5253.36
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.02000 (1) obj. -5422.79 iterations 0
Cbc0038I Pass   3: suminf.    0.37991 (1) obj. -5253.36 iterations 3
Cbc0038I Pass   4: suminf.    0.44545 (1) obj. -5278.57 iterations 1
Cbc0038I Pass   5: suminf.    2.56268 (8) obj. -5253.36 iterations 14
Cbc0038I Pass   6: suminf.    0.98590 (2) obj. -5253.36 iterations 9
Cbc0038I Pass   7: suminf.    0.07363 (1) obj. -5253.36 iterations 2
Cbc0038I Pass   8: suminf.    0.26364 (1) obj. -5326.44 iterations 1
Cbc0038I Pass   9: suminf.    1.01280 (4) obj. -5253.36 iterations 5
Cbc0038I Pass  10: suminf.    2.36661 (7) obj. -5253.36 iterations 15
Cbc0038I Pass  11: suminf.    0.11723 (1) obj. -5253.36 iterations 9
Cbc0038I Pass  12: suminf.    0.26818 (1) obj. -5311.42 iterations 1
Cbc0038I Pass  13: suminf.    1.23118 (4) obj. -5253.36 iterations 7
Cbc0038I Pass  14: suminf.    0.77991 (3) obj. -5253.36 iterations 4
Cbc0038I Pass  15: suminf.    0.80884 (3) obj. -5253.36 iterations 3
Cbc0038I Pass  16: suminf.    2.28008 (6) obj. -5253.36 iterations 14
Cbc0038I Pass  17: suminf.    0.41455 (1) obj. -5298.16 iterations 6
Cbc0038I Pass  18: suminf.    0.33854 (1) obj. -5253.36 iterations 1
Cbc0038I Pass  19: suminf.    1.76994 (7) obj. -5253.36 iterations 12
Cbc0038I Pass  20: suminf.    0.33854 (1) obj. -5253.36 iterations 9
Cbc0038I Pass  21: suminf.    2.49376 (6) obj. -5253.36 iterations 15
Cbc0038I Pass  22: suminf.    1.71430 (4) obj. -5253.36 iterations 3
Cbc0038I Pass  23: suminf.    0.67847 (3) obj. -5253.36 iterations 5
Cbc0038I Pass  24: suminf.    0.76810 (3) obj. -5253.36 iterations 3
Cbc0038I Pass  25: suminf.    1.49165 (5) obj. -5253.36 iterations 11
Cbc0038I Pass  26: suminf.    1.02694 (3) obj. -5253.36 iterations 3
Cbc0038I Pass  27: suminf.    1.19376 (3) obj. -5253.36 iterations 3
Cbc0038I Pass  28: suminf.    1.49366 (6) obj. -5253.36 iterations 6
Cbc0038I Pass  29: suminf.    0.93867 (4) obj. -5253.36 iterations 5
Cbc0038I Pass  30: suminf.    0.93865 (3) obj. -5253.36 iterations 3
Cbc0038I Pass  31: suminf.    0.53399 (2) obj. -5279.49 iterations 2
Cbc0038I Rounding solution of -5326.2 is better than previous of -5229.6

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 7 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -5326.2 to -5345.21 (0.03 seconds)
Cbc0038I Round again with cutoff of -5369.62
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.02000 (1) obj. -5422.79 iterations 0
Cbc0038I Pass  32: suminf.    0.54550 (2) obj. -5369.62 iterations 2
Cbc0038I Pass  33: suminf.    1.39527 (6) obj. -5369.62 iterations 7
Cbc0038I Pass  34: suminf.    1.50715 (5) obj. -5369.62 iterations 5
Cbc0038I Pass  35: suminf.    0.72204 (2) obj. -5369.62 iterations 5
Cbc0038I Pass  36: suminf.    0.71238 (2) obj. -5409.16 iterations 2
Cbc0038I Pass  37: suminf.    0.55481 (2) obj. -5369.62 iterations 1
Cbc0038I Pass  38: suminf.    0.83165 (2) obj. -5369.62 iterations 1
Cbc0038I Pass  39: suminf.    1.58857 (5) obj. -5369.62 iterations 5
Cbc0038I Pass  40: suminf.    0.48947 (3) obj. -5369.62 iterations 3
Cbc0038I Pass  41: suminf.    0.48947 (3) obj. -5369.62 iterations 1
Cbc0038I Pass  42: suminf.    0.62125 (2) obj. -5417.27 iterations 5
Cbc0038I Pass  43: suminf.    0.49443 (1) obj. -5369.62 iterations 2
Cbc0038I Pass  44: suminf.    0.49000 (1) obj. -5378.8 iterations 1
Cbc0038I Pass  45: suminf.    1.56558 (5) obj. -5369.62 iterations 10
Cbc0038I Pass  46: suminf.    0.85857 (2) obj. -5369.62 iterations 4
Cbc0038I Pass  47: suminf.    0.85857 (2) obj. -5369.62 iterations 0
Cbc0038I Pass  48: suminf.    0.71238 (2) obj. -5409.16 iterations 2
Cbc0038I Pass  49: suminf.    0.55481 (2) obj. -5369.62 iterations 1
Cbc0038I Pass  50: suminf.    0.83165 (2) obj. -5369.62 iterations 1
Cbc0038I Pass  51: suminf.    1.05900 (4) obj. -5369.62 iterations 7
Cbc0038I Pass  52: suminf.    0.78530 (2) obj. -5369.62 iterations 3
Cbc0038I Pass  53: suminf.    0.77370 (2) obj. -5377.78 iterations 1
Cbc0038I Pass  54: suminf.    0.74509 (2) obj. -5369.62 iterations 1
Cbc0038I Pass  55: suminf.    0.78530 (2) obj. -5369.62 iterations 1
Cbc0038I Pass  56: suminf.    0.86077 (3) obj. -5369.62 iterations 2
Cbc0038I Pass  57: suminf.    0.96804 (4) obj. -5369.62 iterations 4
Cbc0038I Pass  58: suminf.    0.55481 (2) obj. -5369.62 iterations 3
Cbc0038I Pass  59: suminf.    0.83165 (2) obj. -5369.62 iterations 1
Cbc0038I Pass  60: suminf.    0.71238 (2) obj. -5409.16 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 5 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -5345.21 - took 0.02 seconds
Cbc0012I Integer solution of -5345.211 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 32 rows 39 columns, reduced to 4 rows 6 columns
Cbc0031I 7 added rows had average density of 11.142857
Cbc0013I At root node, 7 cuts changed objective from -5446.6744 to -5388.0348 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 6.5 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 62 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 58 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5345.210999999999, took 363 iterations and 12 nodes (0.12 seconds)
Cbc0032I Strong branching done 90 times (328 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.13

