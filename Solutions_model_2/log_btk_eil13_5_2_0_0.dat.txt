Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 22 (-7) rows, 13 (-2) columns and 62 (-13) elements
Clp1000I sum of infeasibilities 0 - average 0, 2 fixed columns
Coin0506I Presolve 18 (-4) rows, 11 (-2) columns and 50 (-12) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 35.857733
Clp0000I Optimal - objective value 35.857733
Coin0511I After Postsolve, objective 35.857733, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.857733
Clp0000I Optimal - objective value 35.857733
Clp0000I Optimal - objective value 35.857733
Coin0511I After Postsolve, objective 35.857733, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.85773305 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 61 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.123%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.95371
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.1 iterations 9
Cbc0038I Solution found of 1.1
Cbc0038I Relaxing continuous gives 1.1
Cbc0038I Rounding solution of -9.85 is better than previous of 1.1

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -12.2877
Cbc0038I Pass   2: suminf.    0.76720 (2) obj. -12.2877 iterations 2
Cbc0038I Pass   3: suminf.    0.44000 (1) obj. -12.2877 iterations 4
Cbc0038I Pass   4: suminf.    0.10178 (1) obj. -12.2877 iterations 1
Cbc0038I Pass   5: suminf.    0.67863 (4) obj. -12.2877 iterations 5
Cbc0038I Pass   6: suminf.    0.32129 (2) obj. -12.2877 iterations 4
Cbc0038I Pass   7: suminf.    0.76445 (2) obj. -12.2877 iterations 3
Cbc0038I Pass   8: suminf.    0.76445 (2) obj. -12.2877 iterations 0
Cbc0038I Pass   9: suminf.    0.76445 (2) obj. -12.2877 iterations 0
Cbc0038I Pass  10: suminf.    1.12573 (5) obj. -12.2877 iterations 2
Cbc0038I Pass  11: suminf.    1.83180 (6) obj. -12.2877 iterations 3
Cbc0038I Pass  12: suminf.    0.90625 (4) obj. -12.2877 iterations 2
Cbc0038I Pass  13: suminf.    0.66011 (7) obj. -12.2877 iterations 8
Cbc0038I Pass  14: suminf.    1.07399 (5) obj. -12.2877 iterations 6
Cbc0038I Pass  15: suminf.    0.94925 (4) obj. -12.2877 iterations 1
Cbc0038I Pass  16: suminf.    0.94925 (4) obj. -12.2877 iterations 0
Cbc0038I Pass  17: suminf.    0.94925 (4) obj. -12.2877 iterations 0
Cbc0038I Pass  18: suminf.    0.94925 (4) obj. -12.2877 iterations 0
Cbc0038I Pass  19: suminf.    0.94925 (4) obj. -12.2877 iterations 0
Cbc0038I Pass  20: suminf.    0.84778 (3) obj. -12.2877 iterations 7
Cbc0038I Pass  21: suminf.    0.78535 (3) obj. -12.2877 iterations 1
Cbc0038I Pass  22: suminf.    0.60418 (2) obj. -12.2877 iterations 3
Cbc0038I Pass  23: suminf.    0.32129 (2) obj. -12.2877 iterations 4
Cbc0038I Pass  24: suminf.    0.76445 (2) obj. -12.2877 iterations 3
Cbc0038I Pass  25: suminf.    0.87546 (4) obj. -12.2877 iterations 4
Cbc0038I Pass  26: suminf.    0.73774 (3) obj. -12.2877 iterations 1
Cbc0038I Pass  27: suminf.    0.82847 (4) obj. -12.2877 iterations 4
Cbc0038I Pass  28: suminf.    0.55860 (3) obj. -12.2877 iterations 2
Cbc0038I Pass  29: suminf.    0.98377 (4) obj. -12.2877 iterations 4
Cbc0038I Pass  30: suminf.    0.79966 (5) obj. -12.2877 iterations 5
Cbc0038I Pass  31: suminf.    0.60418 (2) obj. -12.2877 iterations 3
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -16.6754
Cbc0038I Pass  31: suminf.    0.98135 (2) obj. -16.6754 iterations 0
Cbc0038I Pass  32: suminf.    0.44000 (1) obj. -16.6754 iterations 4
Cbc0038I Pass  33: suminf.    0.28499 (1) obj. -16.6754 iterations 1
Cbc0038I Pass  34: suminf.    1.24828 (4) obj. -16.6754 iterations 4
Cbc0038I Pass  35: suminf.    1.15937 (4) obj. -16.6754 iterations 6
Cbc0038I Pass  36: suminf.    0.85190 (5) obj. -16.6754 iterations 4
Cbc0038I Pass  37: suminf.    0.58749 (5) obj. -16.6754 iterations 7
Cbc0038I Pass  38: suminf.    1.08938 (4) obj. -16.6754 iterations 5
Cbc0038I Pass  39: suminf.    1.08938 (4) obj. -16.6754 iterations 0
Cbc0038I Pass  40: suminf.    1.11711 (7) obj. -16.6754 iterations 4
Cbc0038I Pass  41: suminf.    1.69909 (5) obj. -16.6754 iterations 6
Cbc0038I Pass  42: suminf.    1.17484 (4) obj. -16.6754 iterations 3
Cbc0038I Pass  43: suminf.    1.23648 (5) obj. -16.6754 iterations 5
Cbc0038I Pass  44: suminf.    1.09098 (3) obj. -16.6754 iterations 1
Cbc0038I Pass  45: suminf.    1.08938 (4) obj. -16.6754 iterations 1
Cbc0038I Pass  46: suminf.    1.11711 (7) obj. -16.6754 iterations 4
Cbc0038I Pass  47: suminf.    1.69909 (5) obj. -16.6754 iterations 6
Cbc0038I Pass  48: suminf.    1.17484 (4) obj. -16.6754 iterations 3
Cbc0038I Pass  49: suminf.    1.23648 (5) obj. -16.6754 iterations 5
Cbc0038I Pass  50: suminf.    1.09098 (3) obj. -16.6754 iterations 1
Cbc0038I Pass  51: suminf.    1.08938 (4) obj. -16.6754 iterations 1
Cbc0038I Pass  52: suminf.    1.11711 (7) obj. -16.6754 iterations 4
Cbc0038I Pass  53: suminf.    1.69909 (5) obj. -16.6754 iterations 6
Cbc0038I Pass  54: suminf.    1.17484 (4) obj. -16.6754 iterations 3
Cbc0038I Pass  55: suminf.    1.23648 (5) obj. -16.6754 iterations 5
Cbc0038I Pass  56: suminf.    1.09098 (3) obj. -16.6754 iterations 1
Cbc0038I Pass  57: suminf.    1.08938 (4) obj. -16.6754 iterations 1
Cbc0038I Pass  58: suminf.    1.11711 (7) obj. -16.6754 iterations 4
Cbc0038I Pass  59: suminf.    1.69909 (5) obj. -16.6754 iterations 6
Cbc0038I Pass  60: suminf.    1.17484 (4) obj. -16.6754 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9.85 - took 0.02 seconds
Cbc0012I Integer solution of -9.85 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 16 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 3
Cbc0013I At root node, 3 cuts changed objective from -34.22625 to -11.34304 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 2.5 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9.849999999999994, took 16 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-11) rows, 19 (-7) columns and 103 (-50) elements
Clp1000I sum of infeasibilities 2.3334e-09 - average 1.37259e-10, 5 fixed columns
Coin0506I Presolve 12 (-5) rows, 14 (-5) columns and 61 (-42) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 41.858608
Clp0000I Optimal - objective value 41.858608
Coin0511I After Postsolve, objective 41.858608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.858608
Clp0000I Optimal - objective value 41.858608
Clp0000I Optimal - objective value 41.858608
Coin0511I After Postsolve, objective 41.858608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.85860826 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 23 columns (23 integer (23 of which binary)) and 124 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.008%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.12283
Cbc0038I Pass   1: suminf.    0.97222 (4) obj. -18.4672 iterations 4
Cbc0038I Solution found of 9.31783
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 23 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 6.01736
Cbc0038I Pass   2: suminf.    0.97222 (4) obj. -18.4672 iterations 0
Cbc0038I Pass   3: suminf.    0.18914 (2) obj. 6.01736 iterations 5
Cbc0038I Pass   4: suminf.    0.11765 (1) obj. -0.343935 iterations 2
Cbc0038I Pass   5: suminf.    0.11765 (1) obj. -0.343935 iterations 0
Cbc0038I Pass   6: suminf.    0.41147 (3) obj. 6.01736 iterations 4
Cbc0038I Pass   7: suminf.    0.11765 (1) obj. 4.65607 iterations 2
Cbc0038I Pass   8: suminf.    0.47567 (2) obj. 6.01736 iterations 2
Cbc0038I Pass   9: suminf.    0.11765 (1) obj. 4.65607 iterations 2
Cbc0038I Pass  10: suminf.    0.90371 (3) obj. 6.01736 iterations 7
Cbc0038I Pass  11: suminf.    0.45093 (3) obj. 6.01736 iterations 4
Cbc0038I Pass  12: suminf.    0.06250 (1) obj. 0.685018 iterations 5
Cbc0038I Pass  13: suminf.    0.06250 (1) obj. 0.685018 iterations 0
Cbc0038I Pass  14: suminf.    0.59028 (2) obj. 6.01736 iterations 3
Cbc0038I Pass  15: suminf.    0.31874 (2) obj. 6.01736 iterations 2
Cbc0038I Pass  16: suminf.    0.16678 (2) obj. 6.01736 iterations 1
Cbc0038I Pass  17: suminf.    0.12500 (1) obj. 4.94283 iterations 2
Cbc0038I Pass  18: suminf.    0.54167 (2) obj. -0.30717 iterations 1
Cbc0038I Pass  19: suminf.    0.66846 (4) obj. -1.29432 iterations 7
Cbc0038I Pass  20: suminf.    0.66846 (4) obj. -1.29432 iterations 0
Cbc0038I Pass  21: suminf.    0.61712 (2) obj. 6.01736 iterations 5
Cbc0038I Pass  22: suminf.    0.61712 (2) obj. 6.01736 iterations 0
Cbc0038I Pass  23: suminf.    0.56667 (2) obj. 0.47143 iterations 1
Cbc0038I Pass  24: suminf.    0.16667 (1) obj. 4.87143 iterations 1
Cbc0038I Pass  25: suminf.    1.26839 (4) obj. 6.01736 iterations 4
Cbc0038I Pass  26: suminf.    0.23529 (1) obj. 4.9979 iterations 6
Cbc0038I Pass  27: suminf.    0.32840 (1) obj. 6.01736 iterations 1
Cbc0038I Pass  28: suminf.    0.23529 (1) obj. -2.0021 iterations 3
Cbc0038I Pass  29: suminf.    0.23529 (1) obj. -2.0021 iterations 0
Cbc0038I Pass  30: suminf.    0.03234 (1) obj. 6.01736 iterations 1
Cbc0038I Pass  31: suminf.    0.71325 (3) obj. 6.01736 iterations 5
Cbc0038I Rounding solution of 0.37143 is better than previous of 9.31783

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 23 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 0.37143 to -9.85 (0.01 seconds)
Cbc0038I Round again with cutoff of -12.6173
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.97222 (4) obj. -18.4672 iterations 0
Cbc0038I Pass  32: suminf.    0.54729 (2) obj. -12.6173 iterations 4
Cbc0038I Pass  33: suminf.    0.54729 (2) obj. -12.6173 iterations 1
Cbc0038I Pass  34: suminf.    0.34246 (3) obj. -12.6173 iterations 4
Cbc0038I Pass  35: suminf.    0.34246 (3) obj. -12.6173 iterations 1
Cbc0038I Pass  36: suminf.    1.17250 (3) obj. -12.6173 iterations 3
Cbc0038I Pass  37: suminf.    1.03931 (4) obj. -12.6173 iterations 2
Cbc0038I Pass  38: suminf.    0.34246 (3) obj. -12.6173 iterations 5
Cbc0038I Pass  39: suminf.    1.35641 (4) obj. -12.6173 iterations 7
Cbc0038I Pass  40: suminf.    0.42188 (2) obj. -12.6431 iterations 3
Cbc0038I Pass  41: suminf.    0.42386 (2) obj. -12.6173 iterations 3
Cbc0038I Pass  42: suminf.    1.43679 (5) obj. -12.6173 iterations 8
Cbc0038I Pass  43: suminf.    0.62641 (4) obj. -12.6173 iterations 3
Cbc0038I Pass  44: suminf.    0.62641 (4) obj. -12.6173 iterations 2
Cbc0038I Pass  45: suminf.    0.90551 (5) obj. -12.6173 iterations 5
Cbc0038I Pass  46: suminf.    0.87197 (4) obj. -12.6173 iterations 2
Cbc0038I Pass  47: suminf.    1.32014 (5) obj. -12.6173 iterations 5
Cbc0038I Pass  48: suminf.    1.32014 (5) obj. -12.6173 iterations 0
Cbc0038I Pass  49: suminf.    1.06286 (4) obj. -12.6173 iterations 4
Cbc0038I Pass  50: suminf.    1.06286 (4) obj. -12.6173 iterations 0
Cbc0038I Pass  51: suminf.    0.85296 (3) obj. -12.6173 iterations 6
Cbc0038I Pass  52: suminf.    0.85243 (3) obj. -12.6292 iterations 2
Cbc0038I Pass  53: suminf.    0.87197 (4) obj. -12.6173 iterations 3
Cbc0038I Pass  54: suminf.    0.87197 (4) obj. -12.6173 iterations 2
Cbc0038I Pass  55: suminf.    1.32014 (5) obj. -12.6173 iterations 5
Cbc0038I Pass  56: suminf.    1.32014 (5) obj. -12.6173 iterations 0
Cbc0038I Pass  57: suminf.    1.06286 (4) obj. -12.6173 iterations 4
Cbc0038I Pass  58: suminf.    1.06286 (4) obj. -12.6173 iterations 0
Cbc0038I Pass  59: suminf.    0.85296 (3) obj. -12.6173 iterations 6
Cbc0038I Pass  60: suminf.    0.85243 (3) obj. -12.6292 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9.85 - took 0.01 seconds
Cbc0012I Integer solution of -9.85 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 23 columns, reduced to 8 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -23.685977 to -23.685977 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9.849999999999994, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 22 (-7) rows, 13 (-2) columns and 62 (-13) elements
Clp1000I sum of infeasibilities 0 - average 0, 2 fixed columns
Coin0506I Presolve 18 (-4) rows, 11 (-2) columns and 50 (-12) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 35.857733
Clp0000I Optimal - objective value 35.857733
Coin0511I After Postsolve, objective 35.857733, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.857733
Clp0000I Optimal - objective value 35.857733
Clp0000I Optimal - objective value 35.857733
Coin0511I After Postsolve, objective 35.857733, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.85773305 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 61 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.123%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.95371
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.1 iterations 9
Cbc0038I Solution found of 1.1
Cbc0038I Relaxing continuous gives 1.1
Cbc0038I Rounding solution of -9.85 is better than previous of 1.1

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -12.2877
Cbc0038I Pass   2: suminf.    0.76720 (2) obj. -12.2877 iterations 2
Cbc0038I Pass   3: suminf.    0.44000 (1) obj. -12.2877 iterations 4
Cbc0038I Pass   4: suminf.    0.10178 (1) obj. -12.2877 iterations 1
Cbc0038I Pass   5: suminf.    0.67863 (4) obj. -12.2877 iterations 5
Cbc0038I Pass   6: suminf.    0.32129 (2) obj. -12.2877 iterations 4
Cbc0038I Pass   7: suminf.    0.76445 (2) obj. -12.2877 iterations 3
Cbc0038I Pass   8: suminf.    0.76445 (2) obj. -12.2877 iterations 0
Cbc0038I Pass   9: suminf.    0.76445 (2) obj. -12.2877 iterations 0
Cbc0038I Pass  10: suminf.    1.12573 (5) obj. -12.2877 iterations 2
Cbc0038I Pass  11: suminf.    1.83180 (6) obj. -12.2877 iterations 3
Cbc0038I Pass  12: suminf.    0.90625 (4) obj. -12.2877 iterations 2
Cbc0038I Pass  13: suminf.    0.66011 (7) obj. -12.2877 iterations 8
Cbc0038I Pass  14: suminf.    1.07399 (5) obj. -12.2877 iterations 6
Cbc0038I Pass  15: suminf.    0.94925 (4) obj. -12.2877 iterations 1
Cbc0038I Pass  16: suminf.    0.94925 (4) obj. -12.2877 iterations 0
Cbc0038I Pass  17: suminf.    0.94925 (4) obj. -12.2877 iterations 0
Cbc0038I Pass  18: suminf.    0.94925 (4) obj. -12.2877 iterations 0
Cbc0038I Pass  19: suminf.    0.94925 (4) obj. -12.2877 iterations 0
Cbc0038I Pass  20: suminf.    0.84778 (3) obj. -12.2877 iterations 7
Cbc0038I Pass  21: suminf.    0.78535 (3) obj. -12.2877 iterations 1
Cbc0038I Pass  22: suminf.    0.60418 (2) obj. -12.2877 iterations 3
Cbc0038I Pass  23: suminf.    0.32129 (2) obj. -12.2877 iterations 4
Cbc0038I Pass  24: suminf.    0.76445 (2) obj. -12.2877 iterations 3
Cbc0038I Pass  25: suminf.    0.87546 (4) obj. -12.2877 iterations 4
Cbc0038I Pass  26: suminf.    0.73774 (3) obj. -12.2877 iterations 1
Cbc0038I Pass  27: suminf.    0.82847 (4) obj. -12.2877 iterations 4
Cbc0038I Pass  28: suminf.    0.55860 (3) obj. -12.2877 iterations 2
Cbc0038I Pass  29: suminf.    0.98377 (4) obj. -12.2877 iterations 4
Cbc0038I Pass  30: suminf.    0.79966 (5) obj. -12.2877 iterations 5
Cbc0038I Pass  31: suminf.    0.60418 (2) obj. -12.2877 iterations 3
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -16.6754
Cbc0038I Pass  31: suminf.    0.98135 (2) obj. -16.6754 iterations 0
Cbc0038I Pass  32: suminf.    0.44000 (1) obj. -16.6754 iterations 4
Cbc0038I Pass  33: suminf.    0.28499 (1) obj. -16.6754 iterations 1
Cbc0038I Pass  34: suminf.    1.24828 (4) obj. -16.6754 iterations 4
Cbc0038I Pass  35: suminf.    1.15937 (4) obj. -16.6754 iterations 6
Cbc0038I Pass  36: suminf.    0.85190 (5) obj. -16.6754 iterations 4
Cbc0038I Pass  37: suminf.    0.58749 (5) obj. -16.6754 iterations 7
Cbc0038I Pass  38: suminf.    1.08938 (4) obj. -16.6754 iterations 5
Cbc0038I Pass  39: suminf.    1.08938 (4) obj. -16.6754 iterations 0
Cbc0038I Pass  40: suminf.    1.11711 (7) obj. -16.6754 iterations 4
Cbc0038I Pass  41: suminf.    1.69909 (5) obj. -16.6754 iterations 6
Cbc0038I Pass  42: suminf.    1.17484 (4) obj. -16.6754 iterations 3
Cbc0038I Pass  43: suminf.    1.23648 (5) obj. -16.6754 iterations 5
Cbc0038I Pass  44: suminf.    1.09098 (3) obj. -16.6754 iterations 1
Cbc0038I Pass  45: suminf.    1.08938 (4) obj. -16.6754 iterations 1
Cbc0038I Pass  46: suminf.    1.11711 (7) obj. -16.6754 iterations 4
Cbc0038I Pass  47: suminf.    1.69909 (5) obj. -16.6754 iterations 6
Cbc0038I Pass  48: suminf.    1.17484 (4) obj. -16.6754 iterations 3
Cbc0038I Pass  49: suminf.    1.23648 (5) obj. -16.6754 iterations 5
Cbc0038I Pass  50: suminf.    1.09098 (3) obj. -16.6754 iterations 1
Cbc0038I Pass  51: suminf.    1.08938 (4) obj. -16.6754 iterations 1
Cbc0038I Pass  52: suminf.    1.11711 (7) obj. -16.6754 iterations 4
Cbc0038I Pass  53: suminf.    1.69909 (5) obj. -16.6754 iterations 6
Cbc0038I Pass  54: suminf.    1.17484 (4) obj. -16.6754 iterations 3
Cbc0038I Pass  55: suminf.    1.23648 (5) obj. -16.6754 iterations 5
Cbc0038I Pass  56: suminf.    1.09098 (3) obj. -16.6754 iterations 1
Cbc0038I Pass  57: suminf.    1.08938 (4) obj. -16.6754 iterations 1
Cbc0038I Pass  58: suminf.    1.11711 (7) obj. -16.6754 iterations 4
Cbc0038I Pass  59: suminf.    1.69909 (5) obj. -16.6754 iterations 6
Cbc0038I Pass  60: suminf.    1.17484 (4) obj. -16.6754 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9.85 - took 0.02 seconds
Cbc0012I Integer solution of -9.85 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 16 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 3
Cbc0013I At root node, 3 cuts changed objective from -34.22625 to -11.34304 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 2.5 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9.849999999999994, took 16 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-12) rows, 19 (-8) columns and 103 (-51) elements
Clp1000I sum of infeasibilities 2.3334e-09 - average 1.37259e-10, 5 fixed columns
Coin0506I Presolve 12 (-5) rows, 14 (-5) columns and 61 (-42) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 41.858608
Clp0000I Optimal - objective value 41.858608
Coin0511I After Postsolve, objective 41.858608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.858608
Clp0000I Optimal - objective value 41.858608
Clp0000I Optimal - objective value 41.858608
Coin0511I After Postsolve, objective 41.858608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.85860826 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 23 columns (23 integer (23 of which binary)) and 124 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.008%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.12283
Cbc0038I Pass   1: suminf.    0.97222 (4) obj. -18.4672 iterations 4
Cbc0038I Solution found of 9.31783
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 23 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 6.01736
Cbc0038I Pass   2: suminf.    0.97222 (4) obj. -18.4672 iterations 0
Cbc0038I Pass   3: suminf.    0.18914 (2) obj. 6.01736 iterations 5
Cbc0038I Pass   4: suminf.    0.11765 (1) obj. -0.343935 iterations 2
Cbc0038I Pass   5: suminf.    0.11765 (1) obj. -0.343935 iterations 0
Cbc0038I Pass   6: suminf.    0.41147 (3) obj. 6.01736 iterations 4
Cbc0038I Pass   7: suminf.    0.11765 (1) obj. 4.65607 iterations 2
Cbc0038I Pass   8: suminf.    0.47567 (2) obj. 6.01736 iterations 2
Cbc0038I Pass   9: suminf.    0.11765 (1) obj. 4.65607 iterations 2
Cbc0038I Pass  10: suminf.    0.90371 (3) obj. 6.01736 iterations 7
Cbc0038I Pass  11: suminf.    0.45093 (3) obj. 6.01736 iterations 4
Cbc0038I Pass  12: suminf.    0.06250 (1) obj. 0.685018 iterations 5
Cbc0038I Pass  13: suminf.    0.06250 (1) obj. 0.685018 iterations 0
Cbc0038I Pass  14: suminf.    0.59028 (2) obj. 6.01736 iterations 3
Cbc0038I Pass  15: suminf.    0.31874 (2) obj. 6.01736 iterations 2
Cbc0038I Pass  16: suminf.    0.16678 (2) obj. 6.01736 iterations 1
Cbc0038I Pass  17: suminf.    0.12500 (1) obj. 4.94283 iterations 2
Cbc0038I Pass  18: suminf.    0.54167 (2) obj. -0.30717 iterations 1
Cbc0038I Pass  19: suminf.    0.66846 (4) obj. -1.29432 iterations 7
Cbc0038I Pass  20: suminf.    0.66846 (4) obj. -1.29432 iterations 0
Cbc0038I Pass  21: suminf.    0.61712 (2) obj. 6.01736 iterations 5
Cbc0038I Pass  22: suminf.    0.61712 (2) obj. 6.01736 iterations 0
Cbc0038I Pass  23: suminf.    0.56667 (2) obj. 0.47143 iterations 1
Cbc0038I Pass  24: suminf.    0.16667 (1) obj. 4.87143 iterations 1
Cbc0038I Pass  25: suminf.    1.26839 (4) obj. 6.01736 iterations 4
Cbc0038I Pass  26: suminf.    0.23529 (1) obj. 4.9979 iterations 6
Cbc0038I Pass  27: suminf.    0.32840 (1) obj. 6.01736 iterations 1
Cbc0038I Pass  28: suminf.    0.23529 (1) obj. -2.0021 iterations 3
Cbc0038I Pass  29: suminf.    0.23529 (1) obj. -2.0021 iterations 0
Cbc0038I Pass  30: suminf.    0.03234 (1) obj. 6.01736 iterations 1
Cbc0038I Pass  31: suminf.    0.71325 (3) obj. 6.01736 iterations 5
Cbc0038I Rounding solution of 0.37143 is better than previous of 9.31783

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 23 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 0.37143 to -9.85 (0.01 seconds)
Cbc0038I Round again with cutoff of -12.6173
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.97222 (4) obj. -18.4672 iterations 0
Cbc0038I Pass  32: suminf.    0.54729 (2) obj. -12.6173 iterations 4
Cbc0038I Pass  33: suminf.    0.54729 (2) obj. -12.6173 iterations 1
Cbc0038I Pass  34: suminf.    0.34246 (3) obj. -12.6173 iterations 4
Cbc0038I Pass  35: suminf.    0.34246 (3) obj. -12.6173 iterations 1
Cbc0038I Pass  36: suminf.    1.17250 (3) obj. -12.6173 iterations 3
Cbc0038I Pass  37: suminf.    1.03931 (4) obj. -12.6173 iterations 2
Cbc0038I Pass  38: suminf.    0.34246 (3) obj. -12.6173 iterations 5
Cbc0038I Pass  39: suminf.    1.35641 (4) obj. -12.6173 iterations 7
Cbc0038I Pass  40: suminf.    0.42188 (2) obj. -12.6431 iterations 3
Cbc0038I Pass  41: suminf.    0.42386 (2) obj. -12.6173 iterations 3
Cbc0038I Pass  42: suminf.    1.43679 (5) obj. -12.6173 iterations 8
Cbc0038I Pass  43: suminf.    0.62641 (4) obj. -12.6173 iterations 3
Cbc0038I Pass  44: suminf.    0.62641 (4) obj. -12.6173 iterations 2
Cbc0038I Pass  45: suminf.    0.90551 (5) obj. -12.6173 iterations 5
Cbc0038I Pass  46: suminf.    0.87197 (4) obj. -12.6173 iterations 2
Cbc0038I Pass  47: suminf.    1.32014 (5) obj. -12.6173 iterations 5
Cbc0038I Pass  48: suminf.    1.32014 (5) obj. -12.6173 iterations 0
Cbc0038I Pass  49: suminf.    1.06286 (4) obj. -12.6173 iterations 4
Cbc0038I Pass  50: suminf.    1.06286 (4) obj. -12.6173 iterations 0
Cbc0038I Pass  51: suminf.    0.85296 (3) obj. -12.6173 iterations 6
Cbc0038I Pass  52: suminf.    0.85243 (3) obj. -12.6292 iterations 2
Cbc0038I Pass  53: suminf.    0.87197 (4) obj. -12.6173 iterations 3
Cbc0038I Pass  54: suminf.    0.87197 (4) obj. -12.6173 iterations 2
Cbc0038I Pass  55: suminf.    1.32014 (5) obj. -12.6173 iterations 5
Cbc0038I Pass  56: suminf.    1.32014 (5) obj. -12.6173 iterations 0
Cbc0038I Pass  57: suminf.    1.06286 (4) obj. -12.6173 iterations 4
Cbc0038I Pass  58: suminf.    1.06286 (4) obj. -12.6173 iterations 0
Cbc0038I Pass  59: suminf.    0.85296 (3) obj. -12.6173 iterations 6
Cbc0038I Pass  60: suminf.    0.85243 (3) obj. -12.6292 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9.85 - took 0.01 seconds
Cbc0012I Integer solution of -9.85 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 23 columns, reduced to 8 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -23.685977 to -23.685977 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9.849999999999994, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

