Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 172 (-33) rows, 97 (-6) columns and 530 (-73) elements
Clp1000I sum of infeasibilities 2.22035e-05 - average 1.2909e-07, 17 fixed columns
Coin0506I Presolve 140 (-32) rows, 80 (-17) columns and 432 (-98) elements
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 1.7512534 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Coin0511I After Postsolve, objective 47.842918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Coin0511I After Postsolve, objective 47.842918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.84291842 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 172 rows, 97 columns (96 integer (96 of which binary)) and 531 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.909%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 7.78942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.22896 iterations 50
Cbc0038I Solution found of 0.22896
Cbc0038I Relaxing continuous gives 0.22896
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 172 rows 97 columns, reduced to 65 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 0.22896 to -19.8333 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.6344
Cbc0038I Pass   2: suminf.    1.50607 (6) obj. -22.6344 iterations 13
Cbc0038I Pass   3: suminf.    1.40993 (5) obj. -22.6344 iterations 13
Cbc0038I Pass   4: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass   5: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass   6: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass   7: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass   8: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass   9: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  10: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  11: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  12: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  13: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  14: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  15: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  16: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  17: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  18: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  19: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  20: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  21: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  22: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  23: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  24: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  25: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  26: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  27: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  28: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  29: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  30: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  31: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 172 rows 97 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -19.8333 - took 0.08 seconds
Cbc0012I Integer solution of -19.83335 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 172 rows 97 columns, reduced to 65 rows 40 columns
Cbc0031I 28 added rows had average density of 54.107143
Cbc0013I At root node, 28 cuts changed objective from -47.842918 to -41.156599 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12683 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1725 row cuts average 96.6 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.83335 best solution, best possible -41.156599 (1.13 seconds)
Cbc0038I Full problem 172 rows 97 columns, reduced to 7 rows 9 columns
Cbc0001I Search completed - best objective -19.83335, took 10013 iterations and 72 nodes (1.37 seconds)
Cbc0032I Strong branching done 706 times (13576 iterations), fathomed 7 nodes and fixed 17 variables
Cbc0035I Maximum depth 20, 274 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-79) rows, 145 (-57) columns and 2816 (-2837) elements
Clp1000I sum of infeasibilities 3.66854e-07 - average 2.93483e-09, 27 fixed columns
Coin0506I Presolve 97 (-28) rows, 117 (-28) columns and 1827 (-989) elements
Clp0006I 0  Obj 51.142097 Dual inf 11.61705 (116)
Clp0029I End of values pass after 117 iterations
Clp0014I Perturbing problem by 0.001% of 2.3177511 - largest nonzero change 2.9836783e-05 ( 0.0026945801%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 63.080704
Clp0000I Optimal - objective value 63.080704
Coin0511I After Postsolve, objective 63.080704, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 63.080704
Clp0000I Optimal - objective value 63.080704
Clp0000I Optimal - objective value 63.080704
Clp0000I Optimal - objective value 63.080704
Coin0511I After Postsolve, objective 63.080704, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.08070397 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 145 columns (145 integer (145 of which binary)) and 2825 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 4.41875
Cbc0038I Pass   1: suminf.    1.92649 (33) obj. -42.1518 iterations 26
Cbc0038I Pass   2: suminf.    1.92649 (33) obj. -42.1518 iterations 1
Cbc0038I Pass   3: suminf.    0.22614 (8) obj. -6.00072 iterations 25
Cbc0038I Solution found of 2.74814
Cbc0038I Rounding solution of -5.69511 is better than previous of 2.74814

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 145 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -10.0811
Cbc0038I Pass   4: suminf.    1.92649 (33) obj. -42.1518 iterations 0
Cbc0038I Pass   5: suminf.    1.92649 (33) obj. -42.1518 iterations 1
Cbc0038I Pass   6: suminf.    0.86378 (19) obj. -17.2949 iterations 14
Cbc0038I Pass   7: suminf.    0.64043 (6) obj. -10.0811 iterations 15
Cbc0038I Pass   8: suminf.    0.26513 (6) obj. -15.4325 iterations 1
Cbc0038I Pass   9: suminf.    0.30442 (2) obj. -10.0811 iterations 16
Cbc0038I Pass  10: suminf.    0.25677 (2) obj. -10.0811 iterations 10
Cbc0038I Pass  11: suminf.    0.63734 (7) obj. -10.0811 iterations 16
Cbc0038I Pass  12: suminf.    1.81359 (12) obj. -10.0811 iterations 20
Cbc0038I Pass  13: suminf.    1.52524 (4) obj. -10.0811 iterations 12
Cbc0038I Pass  14: suminf.    1.41084 (4) obj. -10.0811 iterations 7
Cbc0038I Pass  15: suminf.    1.16962 (4) obj. -11.0165 iterations 9
Cbc0038I Pass  16: suminf.    1.01710 (4) obj. -10.0811 iterations 2
Cbc0038I Pass  17: suminf.    1.81359 (12) obj. -10.0811 iterations 16
Cbc0038I Pass  18: suminf.    1.52524 (4) obj. -10.0811 iterations 12
Cbc0038I Pass  19: suminf.    1.41084 (4) obj. -10.0811 iterations 9
Cbc0038I Pass  20: suminf.    1.16962 (4) obj. -11.0165 iterations 10
Cbc0038I Pass  21: suminf.    1.01710 (4) obj. -10.0811 iterations 1
Cbc0038I Pass  22: suminf.    1.81359 (12) obj. -10.0811 iterations 14
Cbc0038I Pass  23: suminf.    1.52524 (4) obj. -10.0811 iterations 12
Cbc0038I Pass  24: suminf.    1.41084 (4) obj. -10.0811 iterations 8
Cbc0038I Pass  25: suminf.    1.16962 (4) obj. -11.0165 iterations 9
Cbc0038I Pass  26: suminf.    1.01710 (4) obj. -10.0811 iterations 1
Cbc0038I Pass  27: suminf.    1.81359 (12) obj. -10.0811 iterations 14
Cbc0038I Pass  28: suminf.    1.52524 (4) obj. -10.0811 iterations 13
Cbc0038I Pass  29: suminf.    1.41084 (4) obj. -10.0811 iterations 11
Cbc0038I Pass  30: suminf.    1.16962 (4) obj. -11.0165 iterations 10
Cbc0038I Pass  31: suminf.    1.01710 (4) obj. -10.0811 iterations 1
Cbc0038I Pass  32: suminf.    1.81359 (12) obj. -10.0811 iterations 14
Cbc0038I Pass  33: suminf.    1.52524 (4) obj. -10.0811 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 145 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 2.74814 to -6.48999 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.9756
Cbc0038I Pass  33: suminf.    1.92649 (33) obj. -42.1518 iterations 0
Cbc0038I Pass  34: suminf.    1.92649 (33) obj. -42.1518 iterations 1
Cbc0038I Pass  35: suminf.    0.69969 (7) obj. -17.9756 iterations 35
Cbc0038I Pass  36: suminf.    0.69969 (7) obj. -17.9756 iterations 0
Cbc0038I Pass  37: suminf.    1.51656 (10) obj. -17.9756 iterations 27
Cbc0038I Pass  38: suminf.    0.97511 (16) obj. -17.9756 iterations 9
Cbc0038I Pass  39: suminf.    1.78941 (12) obj. -17.9756 iterations 20
Cbc0038I Pass  40: suminf.    1.77125 (13) obj. -17.9756 iterations 8
Cbc0038I Pass  41: suminf.    1.95814 (13) obj. -17.9756 iterations 22
Cbc0038I Pass  42: suminf.    1.95327 (15) obj. -17.9756 iterations 8
Cbc0038I Pass  43: suminf.    2.02151 (13) obj. -17.9756 iterations 10
Cbc0038I Pass  44: suminf.    2.01668 (15) obj. -17.9756 iterations 6
Cbc0038I Pass  45: suminf.    1.95814 (13) obj. -17.9756 iterations 10
Cbc0038I Pass  46: suminf.    2.21859 (20) obj. -17.9756 iterations 33
Cbc0038I Pass  47: suminf.    1.78027 (18) obj. -17.9756 iterations 12
Cbc0038I Pass  48: suminf.    1.95814 (13) obj. -17.9756 iterations 26
Cbc0038I Pass  49: suminf.    1.95327 (15) obj. -17.9756 iterations 2
Cbc0038I Pass  50: suminf.    2.02151 (13) obj. -17.9756 iterations 9
Cbc0038I Pass  51: suminf.    2.01668 (15) obj. -17.9756 iterations 5
Cbc0038I Pass  52: suminf.    1.95814 (13) obj. -17.9756 iterations 9
Cbc0038I Pass  53: suminf.    2.77731 (18) obj. -17.9756 iterations 21
Cbc0038I Pass  54: suminf.    1.96002 (16) obj. -17.9756 iterations 17
Cbc0038I Pass  55: suminf.    2.16937 (14) obj. -17.9756 iterations 26
Cbc0038I Pass  56: suminf.    2.16422 (16) obj. -17.9756 iterations 7
Cbc0038I Pass  57: suminf.    2.12481 (14) obj. -17.9756 iterations 9
Cbc0038I Pass  58: suminf.    2.11946 (16) obj. -17.9756 iterations 6
Cbc0038I Pass  59: suminf.    2.16937 (14) obj. -17.9756 iterations 10
Cbc0038I Pass  60: suminf.    2.71276 (18) obj. -17.9756 iterations 17
Cbc0038I Pass  61: suminf.    1.71618 (16) obj. -18.4938 iterations 8
Cbc0038I Pass  62: suminf.    2.06637 (14) obj. -17.9756 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 145 columns, reduced to 10 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -6.48999 to -11.3123 (0.11 seconds)
Cbc0038I Round again with cutoff of -27.449
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.92649 (33) obj. -42.1518 iterations 0
Cbc0038I Pass  63: suminf.    1.92649 (33) obj. -42.1518 iterations 1
Cbc0038I Pass  64: suminf.    1.62462 (20) obj. -27.449 iterations 46
Cbc0038I Pass  65: suminf.    1.60314 (15) obj. -27.449 iterations 10
Cbc0038I Pass  66: suminf.    3.13058 (25) obj. -27.449 iterations 30
Cbc0038I Pass  67: suminf.    3.13024 (24) obj. -27.449 iterations 4
Cbc0038I Pass  68: suminf.    3.11026 (23) obj. -27.449 iterations 21
Cbc0038I Pass  69: suminf.    3.10208 (25) obj. -27.449 iterations 6
Cbc0038I Pass  70: suminf.    3.05558 (23) obj. -27.449 iterations 11
Cbc0038I Pass  71: suminf.    3.04739 (25) obj. -27.449 iterations 6
Cbc0038I Pass  72: suminf.    3.06685 (23) obj. -27.449 iterations 11
Cbc0038I Pass  73: suminf.    3.05862 (25) obj. -27.449 iterations 6
Cbc0038I Pass  74: suminf.    3.13066 (23) obj. -27.449 iterations 12
Cbc0038I Pass  75: suminf.    3.12260 (25) obj. -27.449 iterations 7
Cbc0038I Pass  76: suminf.    3.05428 (23) obj. -27.449 iterations 11
Cbc0038I Pass  77: suminf.    3.04626 (25) obj. -27.449 iterations 6
Cbc0038I Pass  78: suminf.    3.06556 (23) obj. -27.449 iterations 10
Cbc0038I Pass  79: suminf.    3.05749 (25) obj. -27.449 iterations 5
Cbc0038I Pass  80: suminf.    3.13066 (23) obj. -27.449 iterations 8
Cbc0038I Pass  81: suminf.    3.12260 (25) obj. -27.449 iterations 6
Cbc0038I Pass  82: suminf.    3.05428 (23) obj. -27.449 iterations 11
Cbc0038I Pass  83: suminf.    3.04626 (25) obj. -27.449 iterations 6
Cbc0038I Pass  84: suminf.    3.06556 (23) obj. -27.449 iterations 11
Cbc0038I Pass  85: suminf.    3.05749 (25) obj. -27.449 iterations 6
Cbc0038I Pass  86: suminf.    3.05428 (23) obj. -27.449 iterations 10
Cbc0038I Pass  87: suminf.    2.79078 (28) obj. -27.449 iterations 31
Cbc0038I Pass  88: suminf.    2.79078 (28) obj. -27.449 iterations 7
Cbc0038I Pass  89: suminf.    2.93412 (23) obj. -27.449 iterations 20
Cbc0038I Pass  90: suminf.    2.92623 (25) obj. -27.449 iterations 6
Cbc0038I Pass  91: suminf.    3.13066 (23) obj. -27.449 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -11.3123 - took 0.09 seconds
Cbc0012I Integer solution of -11.31226 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 125 rows 145 columns, reduced to 8 rows 9 columns
Cbc0031I 53 added rows had average density of 46.679245
Cbc0013I At root node, 53 cuts changed objective from -49.55364 to -25.898585 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11710 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1456 row cuts average 133.1 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 936 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1570 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 453 row cuts average 78.3 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 162 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.402 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.31226 best solution, best possible -25.898585 (2.15 seconds)
Cbc0012I Integer solution of -18.26259 found by rounding after 4361 iterations and 1 nodes (2.15 seconds)
Cbc0010I After 5 nodes, 2 on tree, -18.26259 best solution, best possible -25.553995 (2.91 seconds)
Cbc0010I After 18 nodes, 9 on tree, -18.26259 best solution, best possible -25.553995 (3.63 seconds)
Cbc0016I Integer solution of -19.20992 found by strong branching after 5673 iterations and 25 nodes (3.90 seconds)
Cbc0010I After 36 nodes, 13 on tree, -19.20992 best solution, best possible -25.553995 (4.37 seconds)
Cbc0038I Full problem 125 rows 145 columns, reduced to 10 rows 16 columns
Cbc0010I After 51 nodes, 16 on tree, -19.20992 best solution, best possible -25.553995 (5.08 seconds)
Cbc0016I Integer solution of -19.31393 found by strong branching after 6900 iterations and 71 nodes (5.69 seconds)
Cbc0010I After 76 nodes, 11 on tree, -19.31393 best solution, best possible -25.553995 (5.80 seconds)
Cbc0016I Integer solution of -19.83335 found by strong branching after 7433 iterations and 88 nodes (6.32 seconds)
Cbc0010I After 93 nodes, 6 on tree, -19.83335 best solution, best possible -25.553995 (6.55 seconds)
Cbc0038I Full problem 125 rows 145 columns, reduced to 12 rows 21 columns
Cbc0001I Search completed - best objective -19.83335, took 8302 iterations and 104 nodes (6.93 seconds)
Cbc0032I Strong branching done 1036 times (14798 iterations), fathomed 15 nodes and fixed 18 variables
Cbc0035I Maximum depth 23, 368 variables fixed on reduced cost
Total time (CPU seconds):       4.74   (Wallclock seconds):       6.95

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 172 (-33) rows, 97 (-6) columns and 530 (-73) elements
Clp1000I sum of infeasibilities 2.22035e-05 - average 1.2909e-07, 17 fixed columns
Coin0506I Presolve 140 (-32) rows, 80 (-17) columns and 432 (-98) elements
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 1.7512534 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Coin0511I After Postsolve, objective 47.842918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Coin0511I After Postsolve, objective 47.842918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.84291842 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 172 rows, 97 columns (96 integer (96 of which binary)) and 531 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.909%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 7.78942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.22896 iterations 50
Cbc0038I Solution found of 0.22896
Cbc0038I Relaxing continuous gives 0.22896
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 172 rows 97 columns, reduced to 65 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 0.22896 to -19.8333 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.6344
Cbc0038I Pass   2: suminf.    1.50607 (6) obj. -22.6344 iterations 13
Cbc0038I Pass   3: suminf.    1.40993 (5) obj. -22.6344 iterations 13
Cbc0038I Pass   4: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass   5: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass   6: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass   7: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass   8: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass   9: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  10: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  11: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  12: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  13: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  14: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  15: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  16: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  17: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  18: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  19: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  20: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  21: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  22: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  23: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  24: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  25: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  26: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  27: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  28: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  29: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  30: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  31: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 172 rows 97 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -19.8333 - took 0.08 seconds
Cbc0012I Integer solution of -19.83335 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 172 rows 97 columns, reduced to 65 rows 40 columns
Cbc0031I 28 added rows had average density of 54.107143
Cbc0013I At root node, 28 cuts changed objective from -47.842918 to -41.156599 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12683 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1725 row cuts average 96.6 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.83335 best solution, best possible -41.156599 (1.03 seconds)
Cbc0038I Full problem 172 rows 97 columns, reduced to 7 rows 9 columns
Cbc0001I Search completed - best objective -19.83335, took 10013 iterations and 72 nodes (1.28 seconds)
Cbc0032I Strong branching done 706 times (13576 iterations), fathomed 7 nodes and fixed 17 variables
Cbc0035I Maximum depth 20, 274 variables fixed on reduced cost
Total time (CPU seconds):       1.25   (Wallclock seconds):       1.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-80) rows, 145 (-58) columns and 2816 (-2838) elements
Clp1000I sum of infeasibilities 3.66854e-07 - average 2.93483e-09, 27 fixed columns
Coin0506I Presolve 97 (-28) rows, 117 (-28) columns and 1827 (-989) elements
Clp0006I 0  Obj 51.142097 Dual inf 11.61705 (116)
Clp0029I End of values pass after 117 iterations
Clp0014I Perturbing problem by 0.001% of 2.3177511 - largest nonzero change 2.9836783e-05 ( 0.0026945801%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 63.080704
Clp0000I Optimal - objective value 63.080704
Coin0511I After Postsolve, objective 63.080704, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 63.080704
Clp0000I Optimal - objective value 63.080704
Clp0000I Optimal - objective value 63.080704
Clp0000I Optimal - objective value 63.080704
Coin0511I After Postsolve, objective 63.080704, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.08070397 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 145 columns (145 integer (145 of which binary)) and 2825 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 4.41875
Cbc0038I Pass   1: suminf.    1.92649 (33) obj. -42.1518 iterations 26
Cbc0038I Pass   2: suminf.    1.92649 (33) obj. -42.1518 iterations 1
Cbc0038I Pass   3: suminf.    0.22614 (8) obj. -6.00072 iterations 25
Cbc0038I Solution found of 2.74814
Cbc0038I Rounding solution of -5.69511 is better than previous of 2.74814

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 145 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -10.0811
Cbc0038I Pass   4: suminf.    1.92649 (33) obj. -42.1518 iterations 0
Cbc0038I Pass   5: suminf.    1.92649 (33) obj. -42.1518 iterations 1
Cbc0038I Pass   6: suminf.    0.86378 (19) obj. -17.2949 iterations 14
Cbc0038I Pass   7: suminf.    0.64043 (6) obj. -10.0811 iterations 15
Cbc0038I Pass   8: suminf.    0.26513 (6) obj. -15.4325 iterations 1
Cbc0038I Pass   9: suminf.    0.30442 (2) obj. -10.0811 iterations 16
Cbc0038I Pass  10: suminf.    0.25677 (2) obj. -10.0811 iterations 10
Cbc0038I Pass  11: suminf.    0.63734 (7) obj. -10.0811 iterations 16
Cbc0038I Pass  12: suminf.    1.81359 (12) obj. -10.0811 iterations 20
Cbc0038I Pass  13: suminf.    1.52524 (4) obj. -10.0811 iterations 12
Cbc0038I Pass  14: suminf.    1.41084 (4) obj. -10.0811 iterations 7
Cbc0038I Pass  15: suminf.    1.16962 (4) obj. -11.0165 iterations 9
Cbc0038I Pass  16: suminf.    1.01710 (4) obj. -10.0811 iterations 2
Cbc0038I Pass  17: suminf.    1.81359 (12) obj. -10.0811 iterations 16
Cbc0038I Pass  18: suminf.    1.52524 (4) obj. -10.0811 iterations 12
Cbc0038I Pass  19: suminf.    1.41084 (4) obj. -10.0811 iterations 9
Cbc0038I Pass  20: suminf.    1.16962 (4) obj. -11.0165 iterations 10
Cbc0038I Pass  21: suminf.    1.01710 (4) obj. -10.0811 iterations 1
Cbc0038I Pass  22: suminf.    1.81359 (12) obj. -10.0811 iterations 14
Cbc0038I Pass  23: suminf.    1.52524 (4) obj. -10.0811 iterations 12
Cbc0038I Pass  24: suminf.    1.41084 (4) obj. -10.0811 iterations 8
Cbc0038I Pass  25: suminf.    1.16962 (4) obj. -11.0165 iterations 9
Cbc0038I Pass  26: suminf.    1.01710 (4) obj. -10.0811 iterations 1
Cbc0038I Pass  27: suminf.    1.81359 (12) obj. -10.0811 iterations 14
Cbc0038I Pass  28: suminf.    1.52524 (4) obj. -10.0811 iterations 13
Cbc0038I Pass  29: suminf.    1.41084 (4) obj. -10.0811 iterations 11
Cbc0038I Pass  30: suminf.    1.16962 (4) obj. -11.0165 iterations 10
Cbc0038I Pass  31: suminf.    1.01710 (4) obj. -10.0811 iterations 1
Cbc0038I Pass  32: suminf.    1.81359 (12) obj. -10.0811 iterations 14
Cbc0038I Pass  33: suminf.    1.52524 (4) obj. -10.0811 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 145 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 2.74814 to -6.48999 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.9756
Cbc0038I Pass  33: suminf.    1.92649 (33) obj. -42.1518 iterations 0
Cbc0038I Pass  34: suminf.    1.92649 (33) obj. -42.1518 iterations 1
Cbc0038I Pass  35: suminf.    0.69969 (7) obj. -17.9756 iterations 35
Cbc0038I Pass  36: suminf.    0.69969 (7) obj. -17.9756 iterations 0
Cbc0038I Pass  37: suminf.    1.51656 (10) obj. -17.9756 iterations 27
Cbc0038I Pass  38: suminf.    0.97511 (16) obj. -17.9756 iterations 9
Cbc0038I Pass  39: suminf.    1.78941 (12) obj. -17.9756 iterations 20
Cbc0038I Pass  40: suminf.    1.77125 (13) obj. -17.9756 iterations 8
Cbc0038I Pass  41: suminf.    1.95814 (13) obj. -17.9756 iterations 22
Cbc0038I Pass  42: suminf.    1.95327 (15) obj. -17.9756 iterations 8
Cbc0038I Pass  43: suminf.    2.02151 (13) obj. -17.9756 iterations 10
Cbc0038I Pass  44: suminf.    2.01668 (15) obj. -17.9756 iterations 6
Cbc0038I Pass  45: suminf.    1.95814 (13) obj. -17.9756 iterations 10
Cbc0038I Pass  46: suminf.    2.21859 (20) obj. -17.9756 iterations 33
Cbc0038I Pass  47: suminf.    1.78027 (18) obj. -17.9756 iterations 12
Cbc0038I Pass  48: suminf.    1.95814 (13) obj. -17.9756 iterations 26
Cbc0038I Pass  49: suminf.    1.95327 (15) obj. -17.9756 iterations 2
Cbc0038I Pass  50: suminf.    2.02151 (13) obj. -17.9756 iterations 9
Cbc0038I Pass  51: suminf.    2.01668 (15) obj. -17.9756 iterations 5
Cbc0038I Pass  52: suminf.    1.95814 (13) obj. -17.9756 iterations 9
Cbc0038I Pass  53: suminf.    2.77731 (18) obj. -17.9756 iterations 21
Cbc0038I Pass  54: suminf.    1.96002 (16) obj. -17.9756 iterations 17
Cbc0038I Pass  55: suminf.    2.16937 (14) obj. -17.9756 iterations 26
Cbc0038I Pass  56: suminf.    2.16422 (16) obj. -17.9756 iterations 7
Cbc0038I Pass  57: suminf.    2.12481 (14) obj. -17.9756 iterations 9
Cbc0038I Pass  58: suminf.    2.11946 (16) obj. -17.9756 iterations 6
Cbc0038I Pass  59: suminf.    2.16937 (14) obj. -17.9756 iterations 10
Cbc0038I Pass  60: suminf.    2.71276 (18) obj. -17.9756 iterations 17
Cbc0038I Pass  61: suminf.    1.71618 (16) obj. -18.4938 iterations 8
Cbc0038I Pass  62: suminf.    2.06637 (14) obj. -17.9756 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 145 columns, reduced to 10 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -6.48999 to -11.3123 (0.11 seconds)
Cbc0038I Round again with cutoff of -27.449
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.92649 (33) obj. -42.1518 iterations 0
Cbc0038I Pass  63: suminf.    1.92649 (33) obj. -42.1518 iterations 1
Cbc0038I Pass  64: suminf.    1.62462 (20) obj. -27.449 iterations 46
Cbc0038I Pass  65: suminf.    1.60314 (15) obj. -27.449 iterations 10
Cbc0038I Pass  66: suminf.    3.13058 (25) obj. -27.449 iterations 30
Cbc0038I Pass  67: suminf.    3.13024 (24) obj. -27.449 iterations 4
Cbc0038I Pass  68: suminf.    3.11026 (23) obj. -27.449 iterations 21
Cbc0038I Pass  69: suminf.    3.10208 (25) obj. -27.449 iterations 6
Cbc0038I Pass  70: suminf.    3.05558 (23) obj. -27.449 iterations 11
Cbc0038I Pass  71: suminf.    3.04739 (25) obj. -27.449 iterations 6
Cbc0038I Pass  72: suminf.    3.06685 (23) obj. -27.449 iterations 11
Cbc0038I Pass  73: suminf.    3.05862 (25) obj. -27.449 iterations 6
Cbc0038I Pass  74: suminf.    3.13066 (23) obj. -27.449 iterations 12
Cbc0038I Pass  75: suminf.    3.12260 (25) obj. -27.449 iterations 7
Cbc0038I Pass  76: suminf.    3.05428 (23) obj. -27.449 iterations 11
Cbc0038I Pass  77: suminf.    3.04626 (25) obj. -27.449 iterations 6
Cbc0038I Pass  78: suminf.    3.06556 (23) obj. -27.449 iterations 10
Cbc0038I Pass  79: suminf.    3.05749 (25) obj. -27.449 iterations 5
Cbc0038I Pass  80: suminf.    3.13066 (23) obj. -27.449 iterations 8
Cbc0038I Pass  81: suminf.    3.12260 (25) obj. -27.449 iterations 6
Cbc0038I Pass  82: suminf.    3.05428 (23) obj. -27.449 iterations 11
Cbc0038I Pass  83: suminf.    3.04626 (25) obj. -27.449 iterations 6
Cbc0038I Pass  84: suminf.    3.06556 (23) obj. -27.449 iterations 11
Cbc0038I Pass  85: suminf.    3.05749 (25) obj. -27.449 iterations 6
Cbc0038I Pass  86: suminf.    3.05428 (23) obj. -27.449 iterations 10
Cbc0038I Pass  87: suminf.    2.79078 (28) obj. -27.449 iterations 31
Cbc0038I Pass  88: suminf.    2.79078 (28) obj. -27.449 iterations 7
Cbc0038I Pass  89: suminf.    2.93412 (23) obj. -27.449 iterations 20
Cbc0038I Pass  90: suminf.    2.92623 (25) obj. -27.449 iterations 6
Cbc0038I Pass  91: suminf.    3.13066 (23) obj. -27.449 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -11.3123 - took 0.09 seconds
Cbc0012I Integer solution of -11.31226 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 125 rows 145 columns, reduced to 8 rows 9 columns
Cbc0031I 53 added rows had average density of 46.679245
Cbc0013I At root node, 53 cuts changed objective from -49.55364 to -25.898585 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11710 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1456 row cuts average 133.1 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 936 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1570 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 453 row cuts average 78.3 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 162 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.399 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.31226 best solution, best possible -25.898585 (2.11 seconds)
Cbc0012I Integer solution of -18.26259 found by rounding after 4361 iterations and 1 nodes (2.11 seconds)
Cbc0010I After 6 nodes, 3 on tree, -18.26259 best solution, best possible -25.553995 (2.88 seconds)
Cbc0016I Integer solution of -19.20992 found by strong branching after 5673 iterations and 25 nodes (3.53 seconds)
Cbc0010I After 28 nodes, 10 on tree, -19.20992 best solution, best possible -25.553995 (3.59 seconds)
Cbc0038I Full problem 125 rows 145 columns, reduced to 10 rows 16 columns
Cbc0010I After 45 nodes, 16 on tree, -19.20992 best solution, best possible -25.553995 (4.31 seconds)
Cbc0010I After 69 nodes, 14 on tree, -19.20992 best solution, best possible -25.553995 (5.05 seconds)
Cbc0016I Integer solution of -19.31393 found by strong branching after 6900 iterations and 71 nodes (5.12 seconds)
Cbc0016I Integer solution of -19.83335 found by strong branching after 7433 iterations and 88 nodes (5.70 seconds)
Cbc0010I After 90 nodes, 8 on tree, -19.83335 best solution, best possible -25.553995 (5.78 seconds)
Cbc0038I Full problem 125 rows 145 columns, reduced to 12 rows 21 columns
Cbc0001I Search completed - best objective -19.83335, took 8302 iterations and 104 nodes (6.25 seconds)
Cbc0032I Strong branching done 1036 times (14798 iterations), fathomed 15 nodes and fixed 18 variables
Cbc0035I Maximum depth 23, 368 variables fixed on reduced cost
Total time (CPU seconds):       4.38   (Wallclock seconds):       6.27

