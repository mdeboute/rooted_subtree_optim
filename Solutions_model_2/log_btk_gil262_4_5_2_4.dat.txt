Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1503 (-42) elements
Clp1000I sum of infeasibilities 2.76391e-05 - average 5.47308e-08, 56 fixed columns
Coin0506I Presolve 391 (-114) rows, 204 (-58) columns and 1162 (-341) elements
Clp0029I End of values pass after 204 iterations
Clp0014I Perturbing problem by 0.001% of 1.9597866 - largest nonzero change 0 ( 0%) - largest zero change 2.9414656e-05
Clp0000I Optimal - objective value 137.16301
Clp0000I Optimal - objective value 137.16301
Coin0511I After Postsolve, objective 137.16301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 137.16301
Clp0000I Optimal - objective value 137.16301
Clp0000I Optimal - objective value 137.16301
Coin0511I After Postsolve, objective 137.16301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 137.1630098 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 100 integers unsatisfied sum - 12.8263
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.1266 iterations 242
Cbc0038I Solution found of 15.1266
Cbc0038I Relaxing continuous gives 15.1266
Cbc0038I Rounding solution of -0.87311 is better than previous of 15.1266

Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 188 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -0.87311 to -66.3458 (0.12 seconds)
Cbc0038I Round again with cutoff of -73.4276
Cbc0038I Pass   2: suminf.    5.17445 (30) obj. -73.4276 iterations 66
Cbc0038I Pass   3: suminf.    5.13253 (29) obj. -73.4276 iterations 6
Cbc0038I Pass   4: suminf.    2.66024 (8) obj. -73.4276 iterations 53
Cbc0038I Pass   5: suminf.    2.63419 (9) obj. -73.4276 iterations 17
Cbc0038I Pass   6: suminf.    2.94637 (8) obj. -73.4276 iterations 14
Cbc0038I Pass   7: suminf.    2.53084 (7) obj. -73.4276 iterations 7
Cbc0038I Pass   8: suminf.    2.20352 (7) obj. -73.4276 iterations 18
Cbc0038I Pass   9: suminf.    2.19866 (6) obj. -73.4276 iterations 1
Cbc0038I Pass  10: suminf.    2.62673 (7) obj. -73.4276 iterations 11
Cbc0038I Pass  11: suminf.    2.62673 (7) obj. -73.4276 iterations 0
Cbc0038I Pass  12: suminf.    2.29004 (7) obj. -73.4276 iterations 11
Cbc0038I Pass  13: suminf.    2.23767 (8) obj. -73.4276 iterations 11
Cbc0038I Pass  14: suminf.    2.53277 (6) obj. -73.4276 iterations 14
Cbc0038I Pass  15: suminf.    2.09643 (5) obj. -73.4276 iterations 7
Cbc0038I Pass  16: suminf.    1.59319 (5) obj. -73.4276 iterations 5
Cbc0038I Pass  17: suminf.    1.59319 (5) obj. -73.4276 iterations 1
Cbc0038I Pass  18: suminf.    2.29299 (6) obj. -73.4276 iterations 14
Cbc0038I Pass  19: suminf.    1.97016 (5) obj. -73.4276 iterations 9
Cbc0038I Pass  20: suminf.    1.97016 (5) obj. -73.4276 iterations 0
Cbc0038I Pass  21: suminf.    1.77585 (5) obj. -73.4276 iterations 17
Cbc0038I Pass  22: suminf.    1.59319 (5) obj. -73.4276 iterations 9
Cbc0038I Pass  23: suminf.    1.59319 (5) obj. -73.4276 iterations 0
Cbc0038I Pass  24: suminf.    2.29299 (6) obj. -73.4276 iterations 14
Cbc0038I Pass  25: suminf.    1.97016 (5) obj. -73.4276 iterations 9
Cbc0038I Pass  26: suminf.    1.97016 (5) obj. -73.4276 iterations 0
Cbc0038I Pass  27: suminf.    1.77585 (5) obj. -73.4276 iterations 17
Cbc0038I Pass  28: suminf.    1.59319 (5) obj. -73.4276 iterations 9
Cbc0038I Pass  29: suminf.    1.59319 (5) obj. -73.4276 iterations 0
Cbc0038I Pass  30: suminf.    2.29299 (6) obj. -73.4276 iterations 14
Cbc0038I Pass  31: suminf.    1.97016 (5) obj. -73.4276 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 200 rows 107 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -66.3458 - took 0.17 seconds
Cbc0012I Integer solution of -66.34581 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 188 rows 101 columns
Cbc0012I Integer solution of -67.64946 found by RINS after 0 iterations and 0 nodes (0.29 seconds)
Cbc0031I 40 added rows had average density of 189.675
Cbc0013I At root node, 40 cuts changed objective from -137.16301 to -127.12922 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 52998 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.543 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3609 row cuts average 259.8 elements, 0 column cuts (0 active)  in 0.605 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.733 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 258.5 elements, 0 column cuts (0 active)  in 0.245 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -67.64946 best solution, best possible -127.12922 (6.57 seconds)
Cbc0010I After 6 nodes, 7 on tree, -67.64946 best solution, best possible -127.12922 (7.29 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 228 rows 122 columns
Cbc0012I Integer solution of -70.87155 found by RINS after 24030 iterations and 42 nodes (7.82 seconds)
Cbc0010I After 57 nodes, 11 on tree, -70.87155 best solution, best possible -127.12922 (7.99 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 175 rows 96 columns
Cbc0012I Integer solution of -72.93354 found by RINS after 27130 iterations and 94 nodes (8.38 seconds)
Cbc0010I After 147 nodes, 13 on tree, -72.93354 best solution, best possible -127.12922 (8.69 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 163 rows 93 columns
Cbc0012I Integer solution of -74.28559 found by RINS after 32028 iterations and 200 nodes (9.15 seconds)
Cbc0010I After 234 nodes, 16 on tree, -74.28559 best solution, best possible -127.12922 (9.39 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 10 rows 15 columns
Cbc0010I After 427 nodes, 6 on tree, -74.28559 best solution, best possible -127.12922 (10.10 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 8 rows 10 columns
Cbc0012I Integer solution of -74.40714 found by rounding after 43243 iterations and 536 nodes (10.70 seconds)
Cbc0012I Integer solution of -75.20979 found by rounding after 43256 iterations and 537 nodes (10.70 seconds)
Cbc0010I After 577 nodes, 5 on tree, -75.20979 best solution, best possible -127.12922 (10.80 seconds)
Cbc0001I Search completed - best objective -75.20979000000001, took 44866 iterations and 582 nodes (10.83 seconds)
Cbc0032I Strong branching done 5542 times (124601 iterations), fathomed 82 nodes and fixed 311 variables
Cbc0035I Maximum depth 82, 2021 variables fixed on reduced cost
Total time (CPU seconds):       10.61   (Wallclock seconds):       10.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 383 (-143) rows, 400 (-124) columns and 18923 (-16813) elements
Clp1000I sum of infeasibilities 1.64393e-06 - average 4.29224e-09, 193 fixed columns
Coin0506I Presolve 190 (-193) rows, 206 (-194) columns and 768 (-18155) elements
Clp0006I 0  Obj -42.160684 Dual inf 24.657295 (206)
Clp0029I End of values pass after 206 iterations
Clp0014I Perturbing problem by 0.001% of 1.4470862 - largest nonzero change 1.6230276e-05 ( 0.00100586%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value -39.820732
Clp0000I Optimal - objective value -39.820732
Coin0511I After Postsolve, objective -39.820732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -39.820732 Dual inf 399.59923 (144)
Clp0014I Perturbing problem by 0.001% of 2.0475059 - largest nonzero change 2.6650741e-05 ( 0.002519157%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 166.98828
Clp0000I Optimal - objective value 166.98828
Clp0000I Optimal - objective value 166.98828
Coin0511I After Postsolve, objective 166.98828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 166.9882834 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0004I processed model has 383 rows, 400 columns (400 integer (400 of which binary)) and 18923 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.757%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 111 integers unsatisfied sum - 5.16873
Cbc0038I Pass   1: suminf.    3.65622 (105) obj. -160.476 iterations 45
Cbc0038I Pass   2: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass   3: suminf.    2.26466 (86) obj. -99.0706 iterations 25
Cbc0038I Pass   4: suminf.    1.38182 (59) obj. -71.0154 iterations 27
Cbc0038I Pass   5: suminf.    0.91872 (42) obj. -51.5569 iterations 17
Cbc0038I Pass   6: suminf.    0.57463 (28) obj. -37.901 iterations 14
Cbc0038I Pass   7: suminf.    0.07331 (4) obj. -14.4023 iterations 24
Cbc0038I Solution found of -9.49435
Cbc0038I Rounding solution of -20.5744 is better than previous of -9.49435

Cbc0038I Before mini branch and bound, 288 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -20.5744 to -25.4749 (0.15 seconds)
Cbc0038I Round again with cutoff of -39.6263
Cbc0038I Pass   8: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass   9: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass  10: suminf.    2.10693 (82) obj. -95.2283 iterations 30
Cbc0038I Pass  11: suminf.    1.58666 (66) obj. -77.8105 iterations 16
Cbc0038I Pass  12: suminf.    0.91872 (42) obj. -51.5569 iterations 24
Cbc0038I Pass  13: suminf.    0.74137 (25) obj. -39.6263 iterations 24
Cbc0038I Pass  14: suminf.    0.86811 (12) obj. -39.6263 iterations 19
Cbc0038I Pass  15: suminf.    0.53655 (3) obj. -39.6263 iterations 14
Cbc0038I Pass  16: suminf.    0.14456 (2) obj. -42.2612 iterations 7
Cbc0038I Pass  17: suminf.    0.38534 (3) obj. -39.6263 iterations 4
Cbc0038I Pass  18: suminf.    2.18561 (30) obj. -39.6263 iterations 86
Cbc0038I Pass  19: suminf.    1.26712 (26) obj. -39.6263 iterations 46
Cbc0038I Pass  20: suminf.    1.04815 (27) obj. -47.3915 iterations 3
Cbc0038I Pass  21: suminf.    1.12121 (13) obj. -39.6263 iterations 34
Cbc0038I Pass  22: suminf.    0.93971 (13) obj. -39.6263 iterations 2
Cbc0038I Pass  23: suminf.    0.85463 (5) obj. -39.6263 iterations 31
Cbc0038I Pass  24: suminf.    0.65170 (5) obj. -39.6263 iterations 13
Cbc0038I Pass  25: suminf.    0.93690 (4) obj. -39.6263 iterations 19
Cbc0038I Pass  26: suminf.    0.37718 (4) obj. -39.6263 iterations 9
Cbc0038I Pass  27: suminf.    0.89213 (4) obj. -39.6263 iterations 20
Cbc0038I Pass  28: suminf.    3.17949 (23) obj. -39.6263 iterations 84
Cbc0038I Pass  29: suminf.    1.57204 (20) obj. -39.6263 iterations 42
Cbc0038I Pass  30: suminf.    0.79500 (19) obj. -39.6263 iterations 13
Cbc0038I Pass  31: suminf.    1.97135 (11) obj. -39.6263 iterations 24
Cbc0038I Pass  32: suminf.    1.97135 (11) obj. -39.6263 iterations 0
Cbc0038I Pass  33: suminf.    1.07174 (5) obj. -39.6263 iterations 49
Cbc0038I Pass  34: suminf.    0.60504 (6) obj. -39.6263 iterations 1
Cbc0038I Pass  35: suminf.    0.97953 (5) obj. -39.6263 iterations 18
Cbc0038I Pass  36: suminf.    0.97953 (5) obj. -39.6263 iterations 14
Cbc0038I Pass  37: suminf.    0.30723 (5) obj. -39.6263 iterations 16
Cbc0038I Rounding solution of -29.3705 is better than previous of -25.4749

Cbc0038I Before mini branch and bound, 258 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 73 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -29.3705 to -48.1877 (0.29 seconds)
Cbc0038I Round again with cutoff of -71.9479
Cbc0038I Pass  37: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass  38: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass  39: suminf.    2.03216 (80) obj. -93.3031 iterations 32
Cbc0038I Pass  40: suminf.    1.61736 (67) obj. -78.7798 iterations 13
Cbc0038I Pass  41: suminf.    1.48234 (57) obj. -71.9479 iterations 14
Cbc0038I Pass  42: suminf.    1.43247 (35) obj. -71.9479 iterations 36
Cbc0038I Pass  43: suminf.    1.43247 (35) obj. -71.9479 iterations 0
Cbc0038I Pass  44: suminf.    1.15003 (24) obj. -71.9479 iterations 45
Cbc0038I Pass  45: suminf.    1.13949 (23) obj. -71.9479 iterations 9
Cbc0038I Pass  46: suminf.    1.08267 (16) obj. -71.9479 iterations 33
Cbc0038I Pass  47: suminf.    0.91252 (17) obj. -71.9479 iterations 14
Cbc0038I Pass  48: suminf.    0.89432 (12) obj. -71.9479 iterations 43
Cbc0038I Pass  49: suminf.    0.88096 (13) obj. -71.9479 iterations 16
Cbc0038I Pass  50: suminf.    1.41957 (27) obj. -71.9479 iterations 104
Cbc0038I Pass  51: suminf.    1.39906 (27) obj. -71.9479 iterations 18
Cbc0038I Pass  52: suminf.    1.44257 (15) obj. -71.9479 iterations 48
Cbc0038I Pass  53: suminf.    1.44257 (15) obj. -71.9479 iterations 11
Cbc0038I Pass  54: suminf.    1.45913 (15) obj. -71.9479 iterations 29
Cbc0038I Pass  55: suminf.    1.45913 (15) obj. -71.9479 iterations 17
Cbc0038I Pass  56: suminf.    1.44257 (15) obj. -71.9479 iterations 29
Cbc0038I Pass  57: suminf.    2.93546 (36) obj. -71.9479 iterations 89
Cbc0038I Pass  58: suminf.    2.09144 (32) obj. -72.6082 iterations 16
Cbc0038I Pass  59: suminf.    1.84551 (32) obj. -71.9479 iterations 4
Cbc0038I Pass  60: suminf.    1.31892 (29) obj. -71.9479 iterations 24
Cbc0038I Pass  61: suminf.    1.31892 (29) obj. -71.9479 iterations 4
Cbc0038I Pass  62: suminf.    2.48597 (27) obj. -71.9479 iterations 63
Cbc0038I Pass  63: suminf.    2.12768 (26) obj. -71.9479 iterations 14
Cbc0038I Pass  64: suminf.    1.25580 (23) obj. -71.9479 iterations 52
Cbc0038I Pass  65: suminf.    1.25580 (23) obj. -71.9479 iterations 1
Cbc0038I Pass  66: suminf.    1.20734 (22) obj. -71.9479 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 61 rows 68 columns
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I After 0.39 seconds - Feasibility pump exiting with objective of -48.1877 - took 0.28 seconds
Cbc0012I Integer solution of -48.18766 found by feasibility pump after 0 iterations and 0 nodes (0.39 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 57 rows 60 columns
Cbc0031I 171 added rows had average density of 70.093567
Cbc0013I At root node, 171 cuts changed objective from -166.98828 to -102.98783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44013 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.575 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3325 row cuts average 384.4 elements, 0 column cuts (0 active)  in 1.520 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 723 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7734 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.320 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2073 row cuts average 16.0 elements, 0 column cuts (0 active)  in 1.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 341 row cuts average 252.6 elements, 0 column cuts (0 active)  in 0.327 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 276 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.727 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.18766 best solution, best possible -102.98783 (11.09 seconds)
Cbc0010I After 2 nodes, 1 on tree, -48.18766 best solution, best possible -97.929431 (12.09 seconds)
Cbc0010I After 3 nodes, 2 on tree, -48.18766 best solution, best possible -97.929431 (12.94 seconds)
Cbc0012I Integer solution of -60.6799 found by rounding after 17270 iterations and 4 nodes (13.02 seconds)
Cbc0010I After 9 nodes, 6 on tree, -60.6799 best solution, best possible -97.929431 (13.65 seconds)
Cbc0012I Integer solution of -61.9709 found by rounding after 17948 iterations and 11 nodes (13.71 seconds)
Cbc0012I Integer solution of -75.20979 found by rounding after 18481 iterations and 20 nodes (13.90 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 52 rows 63 columns
Cbc0010I After 44 nodes, 11 on tree, -75.20979 best solution, best possible -97.929431 (14.40 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 193 rows 207 columns - 27 fixed gives 160, 180 - ok now
Cbc0038I Full problem 383 rows 400 columns, reduced to 160 rows 180 columns
Cbc0010I After 95 nodes, 2 on tree, -75.20979 best solution, best possible -97.929431 (16.29 seconds)
Cbc0010I After 106 nodes, 5 on tree, -75.20979 best solution, best possible -97.929431 (17.00 seconds)
Cbc0010I After 137 nodes, 2 on tree, -75.20979 best solution, best possible -97.929431 (17.81 seconds)
Cbc0010I After 140 nodes, 5 on tree, -75.20979 best solution, best possible -97.929431 (18.58 seconds)
Cbc0010I After 148 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (19.44 seconds)
Cbc0010I After 168 nodes, 9 on tree, -75.20979 best solution, best possible -97.929431 (20.16 seconds)
Cbc0010I After 236 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (20.87 seconds)
Cbc0010I After 248 nodes, 3 on tree, -75.20979 best solution, best possible -97.929431 (22.55 seconds)
Cbc0010I After 253 nodes, 4 on tree, -75.20979 best solution, best possible -97.929431 (24.29 seconds)
Cbc0010I After 255 nodes, 5 on tree, -75.20979 best solution, best possible -97.929431 (25.31 seconds)
Cbc0010I After 260 nodes, 7 on tree, -75.20979 best solution, best possible -97.929431 (26.03 seconds)
Cbc0010I After 285 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (26.74 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 175 rows 201 columns
Cbc0010I After 295 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (28.28 seconds)
Cbc0010I After 331 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (29.01 seconds)
Cbc0001I Search completed - best objective -75.20979000000001, took 41356 iterations and 362 nodes (29.55 seconds)
Cbc0032I Strong branching done 2786 times (51104 iterations), fathomed 21 nodes and fixed 24 variables
Cbc0035I Maximum depth 23, 1366 variables fixed on reduced cost
Total time (CPU seconds):       28.85   (Wallclock seconds):       29.66

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1503 (-42) elements
Clp1000I sum of infeasibilities 2.76391e-05 - average 5.47308e-08, 56 fixed columns
Coin0506I Presolve 391 (-114) rows, 204 (-58) columns and 1162 (-341) elements
Clp0029I End of values pass after 204 iterations
Clp0014I Perturbing problem by 0.001% of 1.9597866 - largest nonzero change 0 ( 0%) - largest zero change 2.9414656e-05
Clp0000I Optimal - objective value 137.16301
Clp0000I Optimal - objective value 137.16301
Coin0511I After Postsolve, objective 137.16301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 137.16301
Clp0000I Optimal - objective value 137.16301
Clp0000I Optimal - objective value 137.16301
Coin0511I After Postsolve, objective 137.16301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 137.1630098 - 0 iterations time 0.072, Presolve 0.00, Idiot 0.07

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 100 integers unsatisfied sum - 12.8263
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.1266 iterations 242
Cbc0038I Solution found of 15.1266
Cbc0038I Relaxing continuous gives 15.1266
Cbc0038I Rounding solution of -0.87311 is better than previous of 15.1266

Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 188 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -0.87311 to -66.3458 (0.09 seconds)
Cbc0038I Round again with cutoff of -73.4276
Cbc0038I Pass   2: suminf.    5.17445 (30) obj. -73.4276 iterations 66
Cbc0038I Pass   3: suminf.    5.13253 (29) obj. -73.4276 iterations 6
Cbc0038I Pass   4: suminf.    2.66024 (8) obj. -73.4276 iterations 53
Cbc0038I Pass   5: suminf.    2.63419 (9) obj. -73.4276 iterations 17
Cbc0038I Pass   6: suminf.    2.94637 (8) obj. -73.4276 iterations 14
Cbc0038I Pass   7: suminf.    2.53084 (7) obj. -73.4276 iterations 7
Cbc0038I Pass   8: suminf.    2.20352 (7) obj. -73.4276 iterations 18
Cbc0038I Pass   9: suminf.    2.19866 (6) obj. -73.4276 iterations 1
Cbc0038I Pass  10: suminf.    2.62673 (7) obj. -73.4276 iterations 11
Cbc0038I Pass  11: suminf.    2.62673 (7) obj. -73.4276 iterations 0
Cbc0038I Pass  12: suminf.    2.29004 (7) obj. -73.4276 iterations 11
Cbc0038I Pass  13: suminf.    2.23767 (8) obj. -73.4276 iterations 11
Cbc0038I Pass  14: suminf.    2.53277 (6) obj. -73.4276 iterations 14
Cbc0038I Pass  15: suminf.    2.09643 (5) obj. -73.4276 iterations 7
Cbc0038I Pass  16: suminf.    1.59319 (5) obj. -73.4276 iterations 5
Cbc0038I Pass  17: suminf.    1.59319 (5) obj. -73.4276 iterations 1
Cbc0038I Pass  18: suminf.    2.29299 (6) obj. -73.4276 iterations 14
Cbc0038I Pass  19: suminf.    1.97016 (5) obj. -73.4276 iterations 9
Cbc0038I Pass  20: suminf.    1.97016 (5) obj. -73.4276 iterations 0
Cbc0038I Pass  21: suminf.    1.77585 (5) obj. -73.4276 iterations 17
Cbc0038I Pass  22: suminf.    1.59319 (5) obj. -73.4276 iterations 9
Cbc0038I Pass  23: suminf.    1.59319 (5) obj. -73.4276 iterations 0
Cbc0038I Pass  24: suminf.    2.29299 (6) obj. -73.4276 iterations 14
Cbc0038I Pass  25: suminf.    1.97016 (5) obj. -73.4276 iterations 9
Cbc0038I Pass  26: suminf.    1.97016 (5) obj. -73.4276 iterations 0
Cbc0038I Pass  27: suminf.    1.77585 (5) obj. -73.4276 iterations 17
Cbc0038I Pass  28: suminf.    1.59319 (5) obj. -73.4276 iterations 9
Cbc0038I Pass  29: suminf.    1.59319 (5) obj. -73.4276 iterations 0
Cbc0038I Pass  30: suminf.    2.29299 (6) obj. -73.4276 iterations 14
Cbc0038I Pass  31: suminf.    1.97016 (5) obj. -73.4276 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 200 rows 107 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -66.3458 - took 0.16 seconds
Cbc0012I Integer solution of -66.34581 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 188 rows 101 columns
Cbc0012I Integer solution of -67.64946 found by RINS after 0 iterations and 0 nodes (0.26 seconds)
Cbc0031I 40 added rows had average density of 189.675
Cbc0013I At root node, 40 cuts changed objective from -137.16301 to -127.12922 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 52998 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.540 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3609 row cuts average 259.8 elements, 0 column cuts (0 active)  in 0.601 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.733 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 258.5 elements, 0 column cuts (0 active)  in 0.245 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -67.64946 best solution, best possible -127.12922 (6.50 seconds)
Cbc0010I After 6 nodes, 7 on tree, -67.64946 best solution, best possible -127.12922 (7.22 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 228 rows 122 columns
Cbc0012I Integer solution of -70.87155 found by RINS after 24030 iterations and 42 nodes (7.77 seconds)
Cbc0010I After 57 nodes, 11 on tree, -70.87155 best solution, best possible -127.12922 (7.94 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 175 rows 96 columns
Cbc0012I Integer solution of -72.93354 found by RINS after 27130 iterations and 94 nodes (8.33 seconds)
Cbc0010I After 148 nodes, 14 on tree, -72.93354 best solution, best possible -127.12922 (8.64 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 163 rows 93 columns
Cbc0012I Integer solution of -74.28559 found by RINS after 32028 iterations and 200 nodes (9.10 seconds)
Cbc0010I After 240 nodes, 12 on tree, -74.28559 best solution, best possible -127.12922 (9.35 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 10 rows 15 columns
Cbc0010I After 428 nodes, 7 on tree, -74.28559 best solution, best possible -127.12922 (10.05 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 8 rows 10 columns
Cbc0012I Integer solution of -74.40714 found by rounding after 43243 iterations and 536 nodes (10.64 seconds)
Cbc0012I Integer solution of -75.20979 found by rounding after 43256 iterations and 537 nodes (10.65 seconds)
Cbc0010I After 580 nodes, 2 on tree, -75.20979 best solution, best possible -127.12922 (10.75 seconds)
Cbc0001I Search completed - best objective -75.20979000000001, took 44866 iterations and 582 nodes (10.77 seconds)
Cbc0032I Strong branching done 5542 times (124601 iterations), fathomed 82 nodes and fixed 311 variables
Cbc0035I Maximum depth 82, 2021 variables fixed on reduced cost
Total time (CPU seconds):       10.56   (Wallclock seconds):       10.84

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 383 (-144) rows, 400 (-125) columns and 18923 (-16814) elements
Clp1000I sum of infeasibilities 1.64393e-06 - average 4.29224e-09, 193 fixed columns
Coin0506I Presolve 190 (-193) rows, 206 (-194) columns and 768 (-18155) elements
Clp0006I 0  Obj -42.160684 Dual inf 24.657295 (206)
Clp0029I End of values pass after 206 iterations
Clp0014I Perturbing problem by 0.001% of 1.4470862 - largest nonzero change 1.6230276e-05 ( 0.00100586%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value -39.820732
Clp0000I Optimal - objective value -39.820732
Coin0511I After Postsolve, objective -39.820732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -39.820732 Dual inf 399.59923 (144)
Clp0014I Perturbing problem by 0.001% of 2.0475059 - largest nonzero change 2.6650741e-05 ( 0.002519157%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 166.98828
Clp0000I Optimal - objective value 166.98828
Clp0000I Optimal - objective value 166.98828
Coin0511I After Postsolve, objective 166.98828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 166.9882834 - 0 iterations time 0.162, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 383 rows, 400 columns (400 integer (400 of which binary)) and 18923 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.757%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 111 integers unsatisfied sum - 5.16873
Cbc0038I Pass   1: suminf.    3.65622 (105) obj. -160.476 iterations 45
Cbc0038I Pass   2: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass   3: suminf.    2.26466 (86) obj. -99.0706 iterations 25
Cbc0038I Pass   4: suminf.    1.38182 (59) obj. -71.0154 iterations 27
Cbc0038I Pass   5: suminf.    0.91872 (42) obj. -51.5569 iterations 17
Cbc0038I Pass   6: suminf.    0.57463 (28) obj. -37.901 iterations 14
Cbc0038I Pass   7: suminf.    0.07331 (4) obj. -14.4023 iterations 24
Cbc0038I Solution found of -9.49435
Cbc0038I Rounding solution of -20.5744 is better than previous of -9.49435

Cbc0038I Before mini branch and bound, 288 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -20.5744 to -25.4749 (0.15 seconds)
Cbc0038I Round again with cutoff of -39.6263
Cbc0038I Pass   8: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass   9: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass  10: suminf.    2.10693 (82) obj. -95.2283 iterations 30
Cbc0038I Pass  11: suminf.    1.58666 (66) obj. -77.8105 iterations 16
Cbc0038I Pass  12: suminf.    0.91872 (42) obj. -51.5569 iterations 24
Cbc0038I Pass  13: suminf.    0.74137 (25) obj. -39.6263 iterations 24
Cbc0038I Pass  14: suminf.    0.86811 (12) obj. -39.6263 iterations 19
Cbc0038I Pass  15: suminf.    0.53655 (3) obj. -39.6263 iterations 14
Cbc0038I Pass  16: suminf.    0.14456 (2) obj. -42.2612 iterations 7
Cbc0038I Pass  17: suminf.    0.38534 (3) obj. -39.6263 iterations 4
Cbc0038I Pass  18: suminf.    2.18561 (30) obj. -39.6263 iterations 86
Cbc0038I Pass  19: suminf.    1.26712 (26) obj. -39.6263 iterations 46
Cbc0038I Pass  20: suminf.    1.04815 (27) obj. -47.3915 iterations 3
Cbc0038I Pass  21: suminf.    1.12121 (13) obj. -39.6263 iterations 34
Cbc0038I Pass  22: suminf.    0.93971 (13) obj. -39.6263 iterations 2
Cbc0038I Pass  23: suminf.    0.85463 (5) obj. -39.6263 iterations 31
Cbc0038I Pass  24: suminf.    0.65170 (5) obj. -39.6263 iterations 13
Cbc0038I Pass  25: suminf.    0.93690 (4) obj. -39.6263 iterations 19
Cbc0038I Pass  26: suminf.    0.37718 (4) obj. -39.6263 iterations 9
Cbc0038I Pass  27: suminf.    0.89213 (4) obj. -39.6263 iterations 20
Cbc0038I Pass  28: suminf.    3.17949 (23) obj. -39.6263 iterations 84
Cbc0038I Pass  29: suminf.    1.57204 (20) obj. -39.6263 iterations 42
Cbc0038I Pass  30: suminf.    0.79500 (19) obj. -39.6263 iterations 13
Cbc0038I Pass  31: suminf.    1.97135 (11) obj. -39.6263 iterations 24
Cbc0038I Pass  32: suminf.    1.97135 (11) obj. -39.6263 iterations 0
Cbc0038I Pass  33: suminf.    1.07174 (5) obj. -39.6263 iterations 49
Cbc0038I Pass  34: suminf.    0.60504 (6) obj. -39.6263 iterations 1
Cbc0038I Pass  35: suminf.    0.97953 (5) obj. -39.6263 iterations 18
Cbc0038I Pass  36: suminf.    0.97953 (5) obj. -39.6263 iterations 14
Cbc0038I Pass  37: suminf.    0.30723 (5) obj. -39.6263 iterations 16
Cbc0038I Rounding solution of -29.3705 is better than previous of -25.4749

Cbc0038I Before mini branch and bound, 258 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 73 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -29.3705 to -48.1877 (0.30 seconds)
Cbc0038I Round again with cutoff of -71.9479
Cbc0038I Pass  37: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass  38: suminf.    3.65622 (105) obj. -160.476 iterations 0
Cbc0038I Pass  39: suminf.    2.03216 (80) obj. -93.3031 iterations 32
Cbc0038I Pass  40: suminf.    1.61736 (67) obj. -78.7798 iterations 13
Cbc0038I Pass  41: suminf.    1.48234 (57) obj. -71.9479 iterations 14
Cbc0038I Pass  42: suminf.    1.43247 (35) obj. -71.9479 iterations 36
Cbc0038I Pass  43: suminf.    1.43247 (35) obj. -71.9479 iterations 0
Cbc0038I Pass  44: suminf.    1.15003 (24) obj. -71.9479 iterations 45
Cbc0038I Pass  45: suminf.    1.13949 (23) obj. -71.9479 iterations 9
Cbc0038I Pass  46: suminf.    1.08267 (16) obj. -71.9479 iterations 33
Cbc0038I Pass  47: suminf.    0.91252 (17) obj. -71.9479 iterations 14
Cbc0038I Pass  48: suminf.    0.89432 (12) obj. -71.9479 iterations 43
Cbc0038I Pass  49: suminf.    0.88096 (13) obj. -71.9479 iterations 16
Cbc0038I Pass  50: suminf.    1.41957 (27) obj. -71.9479 iterations 104
Cbc0038I Pass  51: suminf.    1.39906 (27) obj. -71.9479 iterations 18
Cbc0038I Pass  52: suminf.    1.44257 (15) obj. -71.9479 iterations 48
Cbc0038I Pass  53: suminf.    1.44257 (15) obj. -71.9479 iterations 11
Cbc0038I Pass  54: suminf.    1.45913 (15) obj. -71.9479 iterations 29
Cbc0038I Pass  55: suminf.    1.45913 (15) obj. -71.9479 iterations 17
Cbc0038I Pass  56: suminf.    1.44257 (15) obj. -71.9479 iterations 29
Cbc0038I Pass  57: suminf.    2.93546 (36) obj. -71.9479 iterations 89
Cbc0038I Pass  58: suminf.    2.09144 (32) obj. -72.6082 iterations 16
Cbc0038I Pass  59: suminf.    1.84551 (32) obj. -71.9479 iterations 4
Cbc0038I Pass  60: suminf.    1.31892 (29) obj. -71.9479 iterations 24
Cbc0038I Pass  61: suminf.    1.31892 (29) obj. -71.9479 iterations 4
Cbc0038I Pass  62: suminf.    2.48597 (27) obj. -71.9479 iterations 63
Cbc0038I Pass  63: suminf.    2.12768 (26) obj. -71.9479 iterations 14
Cbc0038I Pass  64: suminf.    1.25580 (23) obj. -71.9479 iterations 52
Cbc0038I Pass  65: suminf.    1.25580 (23) obj. -71.9479 iterations 1
Cbc0038I Pass  66: suminf.    1.20734 (22) obj. -71.9479 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 400 columns, reduced to 61 rows 68 columns
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I After 0.39 seconds - Feasibility pump exiting with objective of -48.1877 - took 0.28 seconds
Cbc0012I Integer solution of -48.18766 found by feasibility pump after 0 iterations and 0 nodes (0.39 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 57 rows 60 columns
Cbc0031I 171 added rows had average density of 70.093567
Cbc0013I At root node, 171 cuts changed objective from -166.98828 to -102.98783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44013 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.586 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3325 row cuts average 384.4 elements, 0 column cuts (0 active)  in 1.531 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 723 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7734 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.323 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2073 row cuts average 16.0 elements, 0 column cuts (0 active)  in 1.093 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 341 row cuts average 252.6 elements, 0 column cuts (0 active)  in 0.335 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 276 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.18766 best solution, best possible -102.98783 (11.15 seconds)
Cbc0010I After 2 nodes, 1 on tree, -48.18766 best solution, best possible -97.929431 (12.17 seconds)
Cbc0010I After 3 nodes, 2 on tree, -48.18766 best solution, best possible -97.929431 (13.02 seconds)
Cbc0012I Integer solution of -60.6799 found by rounding after 17270 iterations and 4 nodes (13.10 seconds)
Cbc0010I After 9 nodes, 6 on tree, -60.6799 best solution, best possible -97.929431 (13.73 seconds)
Cbc0012I Integer solution of -61.9709 found by rounding after 17948 iterations and 11 nodes (13.79 seconds)
Cbc0012I Integer solution of -75.20979 found by rounding after 18481 iterations and 20 nodes (13.98 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 52 rows 63 columns
Cbc0010I After 44 nodes, 11 on tree, -75.20979 best solution, best possible -97.929431 (14.48 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 193 rows 207 columns - 27 fixed gives 160, 180 - ok now
Cbc0038I Full problem 383 rows 400 columns, reduced to 160 rows 180 columns
Cbc0010I After 95 nodes, 2 on tree, -75.20979 best solution, best possible -97.929431 (16.38 seconds)
Cbc0010I After 105 nodes, 4 on tree, -75.20979 best solution, best possible -97.929431 (17.08 seconds)
Cbc0010I After 137 nodes, 2 on tree, -75.20979 best solution, best possible -97.929431 (17.93 seconds)
Cbc0010I After 140 nodes, 5 on tree, -75.20979 best solution, best possible -97.929431 (18.70 seconds)
Cbc0010I After 148 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (19.54 seconds)
Cbc0010I After 174 nodes, 10 on tree, -75.20979 best solution, best possible -97.929431 (20.25 seconds)
Cbc0010I After 247 nodes, 2 on tree, -75.20979 best solution, best possible -97.929431 (21.15 seconds)
Cbc0010I After 248 nodes, 3 on tree, -75.20979 best solution, best possible -97.929431 (22.47 seconds)
Cbc0010I After 253 nodes, 4 on tree, -75.20979 best solution, best possible -97.929431 (23.87 seconds)
Cbc0010I After 255 nodes, 5 on tree, -75.20979 best solution, best possible -97.929431 (24.83 seconds)
Cbc0010I After 261 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (25.53 seconds)
Cbc0010I After 289 nodes, 5 on tree, -75.20979 best solution, best possible -97.929431 (26.23 seconds)
Cbc0038I Full problem 383 rows 400 columns, reduced to 175 rows 201 columns
Cbc0010I After 295 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (27.61 seconds)
Cbc0010I After 333 nodes, 6 on tree, -75.20979 best solution, best possible -97.929431 (28.36 seconds)
Cbc0001I Search completed - best objective -75.20979000000001, took 41356 iterations and 362 nodes (28.78 seconds)
Cbc0032I Strong branching done 2786 times (51104 iterations), fathomed 21 nodes and fixed 24 variables
Cbc0035I Maximum depth 23, 1366 variables fixed on reduced cost
Total time (CPU seconds):       28.24   (Wallclock seconds):       28.89

