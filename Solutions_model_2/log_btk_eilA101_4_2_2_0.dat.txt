Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 1.89769e-06 - average 1.04269e-08, 10 fixed columns
Coin0506I Presolve 155 (-27) rows, 90 (-10) columns and 484 (-74) elements
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.2036106 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 34.627167
Clp0000I Optimal - objective value 34.627167
Coin0511I After Postsolve, objective 34.627167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.627167
Clp0000I Optimal - objective value 34.627167
Clp0000I Optimal - objective value 34.627167
Coin0511I After Postsolve, objective 34.627167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.62716708 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 12.7996
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.7832 iterations 67
Cbc0038I Solution found of 12.7832
Cbc0038I Relaxing continuous gives 12.7832
Cbc0038I Rounding solution of 4.77131 is better than previous of 12.7832

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 100 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 4.77131 to -1.57432 (0.07 seconds)
Cbc0038I Round again with cutoff of -4.87969
Cbc0038I Pass   2: suminf.    2.29326 (11) obj. -4.87969 iterations 16
Cbc0038I Pass   3: suminf.    0.81361 (5) obj. -4.87969 iterations 13
Cbc0038I Pass   4: suminf.    2.25080 (8) obj. -4.87969 iterations 9
Cbc0038I Pass   5: suminf.    2.23142 (7) obj. -4.87969 iterations 1
Cbc0038I Pass   6: suminf.    2.18281 (6) obj. -4.87969 iterations 12
Cbc0038I Pass   7: suminf.    2.18281 (6) obj. -4.87969 iterations 0
Cbc0038I Pass   8: suminf.    2.54141 (7) obj. -4.87969 iterations 6
Cbc0038I Pass   9: suminf.    2.43077 (7) obj. -4.87969 iterations 6
Cbc0038I Pass  10: suminf.    2.92221 (8) obj. -4.87969 iterations 6
Cbc0038I Pass  11: suminf.    2.92221 (8) obj. -4.87969 iterations 0
Cbc0038I Pass  12: suminf.    2.48689 (6) obj. -4.87969 iterations 13
Cbc0038I Pass  13: suminf.    2.46618 (11) obj. -4.87969 iterations 27
Cbc0038I Pass  14: suminf.    1.25118 (7) obj. -4.87969 iterations 13
Cbc0038I Pass  15: suminf.    1.14019 (6) obj. -4.87969 iterations 1
Cbc0038I Pass  16: suminf.    0.83614 (7) obj. -4.87969 iterations 8
Cbc0038I Pass  17: suminf.    2.31724 (11) obj. -4.87969 iterations 14
Cbc0038I Pass  18: suminf.    1.82854 (9) obj. -4.87969 iterations 2
Cbc0038I Pass  19: suminf.    1.74092 (8) obj. -4.87969 iterations 1
Cbc0038I Pass  20: suminf.    1.68124 (5) obj. -4.87969 iterations 15
Cbc0038I Pass  21: suminf.    1.10648 (5) obj. -4.87969 iterations 6
Cbc0038I Pass  22: suminf.    1.85710 (9) obj. -4.87969 iterations 10
Cbc0038I Pass  23: suminf.    1.66870 (7) obj. -4.87969 iterations 2
Cbc0038I Pass  24: suminf.    1.66870 (7) obj. -4.87969 iterations 0
Cbc0038I Pass  25: suminf.    2.18257 (6) obj. -4.87969 iterations 12
Cbc0038I Pass  26: suminf.    2.18257 (6) obj. -4.87969 iterations 0
Cbc0038I Pass  27: suminf.    2.25869 (6) obj. -4.87969 iterations 13
Cbc0038I Pass  28: suminf.    2.00959 (8) obj. -4.87969 iterations 5
Cbc0038I Pass  29: suminf.    2.84350 (7) obj. -4.87969 iterations 8
Cbc0038I Pass  30: suminf.    2.33474 (8) obj. -4.87969 iterations 12
Cbc0038I Pass  31: suminf.    2.31826 (8) obj. -4.87969 iterations 1
Cbc0038I Rounding solution of -3.26435 is better than previous of -1.57432

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 109 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -10.8292
Cbc0038I Pass  31: suminf.    3.65567 (16) obj. -10.8292 iterations 5
Cbc0038I Pass  32: suminf.    2.73961 (10) obj. -10.8292 iterations 15
Cbc0038I Pass  33: suminf.    1.88513 (8) obj. -10.8292 iterations 6
Cbc0038I Pass  34: suminf.    1.71227 (9) obj. -10.8292 iterations 2
Cbc0038I Pass  35: suminf.    2.87958 (8) obj. -10.8292 iterations 12
Cbc0038I Pass  36: suminf.    1.90885 (7) obj. -10.8292 iterations 4
Cbc0038I Pass  37: suminf.    1.88520 (7) obj. -10.8292 iterations 1
Cbc0038I Pass  38: suminf.    3.20895 (11) obj. -10.8292 iterations 11
Cbc0038I Pass  39: suminf.    2.99038 (8) obj. -10.8292 iterations 3
Cbc0038I Pass  40: suminf.    2.49896 (8) obj. -10.8292 iterations 2
Cbc0038I Pass  41: suminf.    4.77845 (16) obj. -10.8292 iterations 44
Cbc0038I Pass  42: suminf.    2.99297 (10) obj. -10.8292 iterations 23
Cbc0038I Pass  43: suminf.    2.94777 (11) obj. -10.8292 iterations 1
Cbc0038I Pass  44: suminf.    3.03337 (10) obj. -10.8292 iterations 22
Cbc0038I Pass  45: suminf.    2.87884 (8) obj. -10.8292 iterations 2
Cbc0038I Pass  46: suminf.    2.48430 (8) obj. -10.8292 iterations 9
Cbc0038I Pass  47: suminf.    2.48430 (8) obj. -10.8292 iterations 0
Cbc0038I Pass  48: suminf.    2.20208 (7) obj. -10.8292 iterations 12
Cbc0038I Pass  49: suminf.    2.01856 (7) obj. -10.8292 iterations 3
Cbc0038I Pass  50: suminf.    2.01856 (7) obj. -10.8292 iterations 1
Cbc0038I Pass  51: suminf.    2.45208 (8) obj. -10.8292 iterations 10
Cbc0038I Pass  52: suminf.    2.45208 (8) obj. -10.8292 iterations 0
Cbc0038I Pass  53: suminf.    2.25978 (6) obj. -10.8292 iterations 11
Cbc0038I Pass  54: suminf.    2.01856 (7) obj. -10.8292 iterations 4
Cbc0038I Pass  55: suminf.    2.01856 (7) obj. -10.8292 iterations 1
Cbc0038I Pass  56: suminf.    2.45208 (8) obj. -10.8292 iterations 10
Cbc0038I Pass  57: suminf.    2.45208 (8) obj. -10.8292 iterations 0
Cbc0038I Pass  58: suminf.    2.25978 (6) obj. -10.8292 iterations 11
Cbc0038I Pass  59: suminf.    2.01856 (7) obj. -10.8292 iterations 4
Cbc0038I Pass  60: suminf.    2.01856 (7) obj. -10.8292 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 113 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -3.26435 - took 0.21 seconds
Cbc0012I Integer solution of -3.264349 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 109 rows 65 columns
Cbc0031I 29 added rows had average density of 80.034483
Cbc0013I At root node, 29 cuts changed objective from -34.627167 to -26.257295 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22949 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2898 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.264349 best solution, best possible -26.257295 (1.81 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -3.490139 found by RINS after 12227 iterations and 41 nodes (2.13 seconds)
Cbc0016I Integer solution of -3.790989 found by strong branching after 12698 iterations and 54 nodes (2.17 seconds)
Cbc0016I Integer solution of -3.873949 found by strong branching after 13449 iterations and 89 nodes (2.28 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 22 rows 17 columns
Cbc0012I Integer solution of -4.425399 found by RINS after 13690 iterations and 98 nodes (2.30 seconds)
Cbc0012I Integer solution of -4.767099 found by rounding after 13805 iterations and 105 nodes (2.31 seconds)
Cbc0001I Search completed - best objective -4.767098999999998, took 14733 iterations and 121 nodes (2.36 seconds)
Cbc0032I Strong branching done 1344 times (24555 iterations), fathomed 6 nodes and fixed 71 variables
Cbc0035I Maximum depth 46, 381 variables fixed on reduced cost
Total time (CPU seconds):       2.26   (Wallclock seconds):       2.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-80) rows, 140 (-62) columns and 2474 (-3179) elements
Clp1000I sum of infeasibilities 1.0389e-07 - average 8.37826e-10, 73 fixed columns
Coin0506I Presolve 49 (-75) rows, 67 (-73) columns and 228 (-2246) elements
Clp0006I 0  Obj -6.5823122 Dual inf 2.7143871 (66)
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 1.4784919 - largest nonzero change 2.2755842e-05 ( 0.0012247315%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value -5.8548233
Clp0000I Optimal - objective value -5.8548233
Coin0511I After Postsolve, objective -5.8548233, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -5.8548233 Dual inf 36.033877 (42)
Clp0014I Perturbing problem by 0.001% of 1.7411285 - largest nonzero change 2.3379487e-05 ( 0.0023379487%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 47.939377
Clp0000I Optimal - objective value 47.939377
Clp0000I Optimal - objective value 47.939377
Coin0511I After Postsolve, objective 47.939377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.93937718 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 140 columns (140 integer (140 of which binary)) and 2476 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.831%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 7.80096
Cbc0038I Pass   1: suminf.    2.88455 (32) obj. -30.8445 iterations 26
Cbc0038I Pass   2: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass   3: suminf.    0.83896 (13) obj. -3.29144 iterations 19
Cbc0038I Solution found of 9.80711
Cbc0038I Rounding solution of 6.51869 is better than previous of 9.80711

Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 6.51869 to 5.02324 (0.04 seconds)
Cbc0038I Round again with cutoff of 0.243678
Cbc0038I Pass   4: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass   5: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass   6: suminf.    1.22715 (17) obj. -6.90324 iterations 15
Cbc0038I Pass   7: suminf.    0.40609 (2) obj. 0.243678 iterations 34
Cbc0038I Pass   8: suminf.    0.23585 (2) obj. -0.777786 iterations 3
Cbc0038I Pass   9: suminf.    2.01869 (17) obj. -8.40492 iterations 34
Cbc0038I Pass  10: suminf.    2.01869 (17) obj. -8.40492 iterations 5
Cbc0038I Pass  11: suminf.    1.36464 (6) obj. 0.243678 iterations 23
Cbc0038I Pass  12: suminf.    1.36464 (6) obj. 0.243678 iterations 0
Cbc0038I Pass  13: suminf.    1.17982 (4) obj. 0.243678 iterations 10
Cbc0038I Pass  14: suminf.    0.51851 (4) obj. 0.243678 iterations 4
Cbc0038I Pass  15: suminf.    0.65748 (4) obj. 0.243678 iterations 3
Cbc0038I Pass  16: suminf.    1.93106 (17) obj. 0.243678 iterations 37
Cbc0038I Pass  17: suminf.    1.57388 (10) obj. -1.22122 iterations 18
Cbc0038I Pass  18: suminf.    1.05443 (9) obj. -0.229846 iterations 1
Cbc0038I Pass  19: suminf.    1.11179 (6) obj. 0.243678 iterations 18
Cbc0038I Pass  20: suminf.    0.79717 (4) obj. -0.817252 iterations 9
Cbc0038I Pass  21: suminf.    0.36748 (3) obj. 0.0783689 iterations 1
Cbc0038I Pass  22: suminf.    1.08832 (8) obj. 0.243678 iterations 9
Cbc0038I Pass  23: suminf.    1.08224 (9) obj. 0.243678 iterations 1
Cbc0038I Pass  24: suminf.    1.10336 (9) obj. 0.243678 iterations 14
Cbc0038I Pass  25: suminf.    1.10336 (9) obj. 0.243678 iterations 0
Cbc0038I Pass  26: suminf.    0.80251 (6) obj. 0.243678 iterations 9
Cbc0038I Pass  27: suminf.    0.25636 (2) obj. -0.782346 iterations 9
Cbc0038I Pass  28: suminf.    0.42737 (2) obj. 0.243678 iterations 1
Cbc0038I Pass  29: suminf.    2.92459 (16) obj. 0.243678 iterations 36
Cbc0038I Pass  30: suminf.    2.19676 (12) obj. 0.243678 iterations 6
Cbc0038I Pass  31: suminf.    1.84823 (11) obj. 0.243678 iterations 1
Cbc0038I Pass  32: suminf.    0.79865 (5) obj. 0.243678 iterations 20
Cbc0038I Pass  33: suminf.    0.79865 (5) obj. 0.243678 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 5.02324 to -0.290332 (0.09 seconds)
Cbc0038I Round again with cutoff of -8.78664
Cbc0038I Pass  33: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass  34: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass  35: suminf.    1.11564 (13) obj. -8.78664 iterations 20
Cbc0038I Pass  36: suminf.    1.11564 (13) obj. -8.78664 iterations 0
Cbc0038I Pass  37: suminf.    1.66042 (11) obj. -8.78664 iterations 21
Cbc0038I Pass  38: suminf.    0.96740 (5) obj. -8.78664 iterations 5
Cbc0038I Pass  39: suminf.    0.90406 (5) obj. -8.91332 iterations 2
Cbc0038I Pass  40: suminf.    1.66042 (11) obj. -8.78664 iterations 5
Cbc0038I Pass  41: suminf.    1.45436 (13) obj. -8.78664 iterations 20
Cbc0038I Pass  42: suminf.    1.35912 (13) obj. -8.78664 iterations 10
Cbc0038I Pass  43: suminf.    1.81568 (11) obj. -8.78664 iterations 18
Cbc0038I Pass  44: suminf.    1.34504 (11) obj. -8.78664 iterations 5
Cbc0038I Pass  45: suminf.    2.75578 (12) obj. -8.78664 iterations 16
Cbc0038I Pass  46: suminf.    1.33010 (8) obj. -8.78664 iterations 11
Cbc0038I Pass  47: suminf.    1.45297 (8) obj. -8.78664 iterations 7
Cbc0038I Pass  48: suminf.    3.42309 (19) obj. -8.78664 iterations 33
Cbc0038I Pass  49: suminf.    2.18913 (13) obj. -8.88825 iterations 19
Cbc0038I Pass  50: suminf.    1.51691 (9) obj. -8.78664 iterations 16
Cbc0038I Pass  51: suminf.    1.39939 (10) obj. -8.78664 iterations 3
Cbc0038I Pass  52: suminf.    3.63959 (14) obj. -8.78664 iterations 13
Cbc0038I Pass  53: suminf.    2.17254 (11) obj. -8.78664 iterations 4
Cbc0038I Pass  54: suminf.    1.68249 (11) obj. -8.78664 iterations 7
Cbc0038I Pass  55: suminf.    1.11788 (10) obj. -8.78664 iterations 22
Cbc0038I Pass  56: suminf.    1.08384 (6) obj. -8.78664 iterations 4
Cbc0038I Pass  57: suminf.    1.07040 (6) obj. -8.78664 iterations 3
Cbc0038I Pass  58: suminf.    1.07040 (6) obj. -8.78664 iterations 0
Cbc0038I Pass  59: suminf.    1.08384 (6) obj. -8.78664 iterations 2
Cbc0038I Pass  60: suminf.    1.08384 (6) obj. -8.78664 iterations 0
Cbc0038I Pass  61: suminf.    2.10413 (13) obj. -8.78664 iterations 23
Cbc0038I Pass  62: suminf.    1.79205 (11) obj. -8.78664 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 44 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -0.290332 to -1.54579 (0.16 seconds)
Cbc0038I Round again with cutoff of -18.9821
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass  63: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass  64: suminf.    2.52602 (20) obj. -18.9821 iterations 33
Cbc0038I Pass  65: suminf.    2.34192 (19) obj. -18.9821 iterations 2
Cbc0038I Pass  66: suminf.    3.38847 (17) obj. -18.9821 iterations 19
Cbc0038I Pass  67: suminf.    3.21628 (17) obj. -18.9821 iterations 5
Cbc0038I Pass  68: suminf.    3.63314 (18) obj. -18.9821 iterations 11
Cbc0038I Pass  69: suminf.    3.38847 (17) obj. -18.9821 iterations 2
Cbc0038I Pass  70: suminf.    2.98488 (17) obj. -18.9821 iterations 6
Cbc0038I Pass  71: suminf.    2.11272 (24) obj. -18.9821 iterations 32
Cbc0038I Pass  72: suminf.    1.92043 (24) obj. -18.9821 iterations 14
Cbc0038I Pass  73: suminf.    3.91927 (18) obj. -18.9821 iterations 33
Cbc0038I Pass  74: suminf.    3.64340 (20) obj. -18.9821 iterations 16
Cbc0038I Pass  75: suminf.    3.60386 (19) obj. -18.9821 iterations 8
Cbc0038I Pass  76: suminf.    3.36223 (16) obj. -18.9821 iterations 23
Cbc0038I Pass  77: suminf.    2.98488 (17) obj. -18.9821 iterations 6
Cbc0038I Pass  78: suminf.    3.63314 (18) obj. -18.9821 iterations 10
Cbc0038I Pass  79: suminf.    3.38847 (17) obj. -18.9821 iterations 2
Cbc0038I Pass  80: suminf.    3.37896 (20) obj. -18.9821 iterations 29
Cbc0038I Pass  81: suminf.    3.37388 (20) obj. -18.9821 iterations 3
Cbc0038I Pass  82: suminf.    3.31087 (19) obj. -18.9821 iterations 13
Cbc0038I Pass  83: suminf.    3.30492 (19) obj. -18.9821 iterations 4
Cbc0038I Pass  84: suminf.    3.98192 (20) obj. -18.9821 iterations 21
Cbc0038I Pass  85: suminf.    3.35526 (20) obj. -18.9821 iterations 4
Cbc0038I Pass  86: suminf.    3.72668 (20) obj. -18.9821 iterations 16
Cbc0038I Pass  87: suminf.    3.28442 (20) obj. -18.9821 iterations 5
Cbc0038I Pass  88: suminf.    3.28442 (20) obj. -18.9821 iterations 0
Cbc0038I Pass  89: suminf.    3.39577 (23) obj. -18.9821 iterations 20
Cbc0038I Pass  90: suminf.    3.29784 (21) obj. -18.9821 iterations 10
Cbc0038I Pass  91: suminf.    3.23304 (19) obj. -18.9821 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 38 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -1.54579 - took 0.14 seconds
Cbc0012I Integer solution of -1.545794 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 26 rows 31 columns
Cbc0031I 61 added rows had average density of 43.967213
Cbc0013I At root node, 61 cuts changed objective from -42.771464 to -9.7051807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15631 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1893 row cuts average 135.5 elements, 0 column cuts (0 active)  in 0.251 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 975 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1528 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 393 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 90 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.445 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.545794 best solution, best possible -9.7051807 (2.71 seconds)
Cbc0012I Integer solution of -2.767099 found by rounding after 6227 iterations and 7 nodes (2.96 seconds)
Cbc0012I Integer solution of -3.767099 found by rounding after 6238 iterations and 8 nodes (2.96 seconds)
Cbc0012I Integer solution of -4.767099 found by rounding after 6595 iterations and 20 nodes (3.04 seconds)
Cbc0010I After 27 nodes, 2 on tree, -4.767099 best solution, best possible -9.3207252 (3.46 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 59 rows 79 columns
Cbc0010I After 44 nodes, 7 on tree, -4.767099 best solution, best possible -9.3207252 (4.51 seconds)
Cbc0001I Search completed - best objective -4.767098999999998, took 9919 iterations and 66 nodes (4.94 seconds)
Cbc0032I Strong branching done 1040 times (21467 iterations), fathomed 5 nodes and fixed 0 variables
Cbc0035I Maximum depth 12, 264 variables fixed on reduced cost
Total time (CPU seconds):       4.36   (Wallclock seconds):       4.96

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 1.89769e-06 - average 1.04269e-08, 10 fixed columns
Coin0506I Presolve 155 (-27) rows, 90 (-10) columns and 484 (-74) elements
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.2036106 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 34.627167
Clp0000I Optimal - objective value 34.627167
Coin0511I After Postsolve, objective 34.627167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.627167
Clp0000I Optimal - objective value 34.627167
Clp0000I Optimal - objective value 34.627167
Coin0511I After Postsolve, objective 34.627167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.62716708 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 12.7996
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.7832 iterations 67
Cbc0038I Solution found of 12.7832
Cbc0038I Relaxing continuous gives 12.7832
Cbc0038I Rounding solution of 4.77131 is better than previous of 12.7832

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 100 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 4.77131 to -1.57432 (0.08 seconds)
Cbc0038I Round again with cutoff of -4.87969
Cbc0038I Pass   2: suminf.    2.29326 (11) obj. -4.87969 iterations 16
Cbc0038I Pass   3: suminf.    0.81361 (5) obj. -4.87969 iterations 13
Cbc0038I Pass   4: suminf.    2.25080 (8) obj. -4.87969 iterations 9
Cbc0038I Pass   5: suminf.    2.23142 (7) obj. -4.87969 iterations 1
Cbc0038I Pass   6: suminf.    2.18281 (6) obj. -4.87969 iterations 12
Cbc0038I Pass   7: suminf.    2.18281 (6) obj. -4.87969 iterations 0
Cbc0038I Pass   8: suminf.    2.54141 (7) obj. -4.87969 iterations 6
Cbc0038I Pass   9: suminf.    2.43077 (7) obj. -4.87969 iterations 6
Cbc0038I Pass  10: suminf.    2.92221 (8) obj. -4.87969 iterations 6
Cbc0038I Pass  11: suminf.    2.92221 (8) obj. -4.87969 iterations 0
Cbc0038I Pass  12: suminf.    2.48689 (6) obj. -4.87969 iterations 13
Cbc0038I Pass  13: suminf.    2.46618 (11) obj. -4.87969 iterations 27
Cbc0038I Pass  14: suminf.    1.25118 (7) obj. -4.87969 iterations 13
Cbc0038I Pass  15: suminf.    1.14019 (6) obj. -4.87969 iterations 1
Cbc0038I Pass  16: suminf.    0.83614 (7) obj. -4.87969 iterations 8
Cbc0038I Pass  17: suminf.    2.31724 (11) obj. -4.87969 iterations 14
Cbc0038I Pass  18: suminf.    1.82854 (9) obj. -4.87969 iterations 2
Cbc0038I Pass  19: suminf.    1.74092 (8) obj. -4.87969 iterations 1
Cbc0038I Pass  20: suminf.    1.68124 (5) obj. -4.87969 iterations 15
Cbc0038I Pass  21: suminf.    1.10648 (5) obj. -4.87969 iterations 6
Cbc0038I Pass  22: suminf.    1.85710 (9) obj. -4.87969 iterations 10
Cbc0038I Pass  23: suminf.    1.66870 (7) obj. -4.87969 iterations 2
Cbc0038I Pass  24: suminf.    1.66870 (7) obj. -4.87969 iterations 0
Cbc0038I Pass  25: suminf.    2.18257 (6) obj. -4.87969 iterations 12
Cbc0038I Pass  26: suminf.    2.18257 (6) obj. -4.87969 iterations 0
Cbc0038I Pass  27: suminf.    2.25869 (6) obj. -4.87969 iterations 13
Cbc0038I Pass  28: suminf.    2.00959 (8) obj. -4.87969 iterations 5
Cbc0038I Pass  29: suminf.    2.84350 (7) obj. -4.87969 iterations 8
Cbc0038I Pass  30: suminf.    2.33474 (8) obj. -4.87969 iterations 12
Cbc0038I Pass  31: suminf.    2.31826 (8) obj. -4.87969 iterations 1
Cbc0038I Rounding solution of -3.26435 is better than previous of -1.57432

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 109 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I Round again with cutoff of -10.8292
Cbc0038I Pass  31: suminf.    3.65567 (16) obj. -10.8292 iterations 5
Cbc0038I Pass  32: suminf.    2.73961 (10) obj. -10.8292 iterations 15
Cbc0038I Pass  33: suminf.    1.88513 (8) obj. -10.8292 iterations 6
Cbc0038I Pass  34: suminf.    1.71227 (9) obj. -10.8292 iterations 2
Cbc0038I Pass  35: suminf.    2.87958 (8) obj. -10.8292 iterations 12
Cbc0038I Pass  36: suminf.    1.90885 (7) obj. -10.8292 iterations 4
Cbc0038I Pass  37: suminf.    1.88520 (7) obj. -10.8292 iterations 1
Cbc0038I Pass  38: suminf.    3.20895 (11) obj. -10.8292 iterations 11
Cbc0038I Pass  39: suminf.    2.99038 (8) obj. -10.8292 iterations 3
Cbc0038I Pass  40: suminf.    2.49896 (8) obj. -10.8292 iterations 2
Cbc0038I Pass  41: suminf.    4.77845 (16) obj. -10.8292 iterations 44
Cbc0038I Pass  42: suminf.    2.99297 (10) obj. -10.8292 iterations 23
Cbc0038I Pass  43: suminf.    2.94777 (11) obj. -10.8292 iterations 1
Cbc0038I Pass  44: suminf.    3.03337 (10) obj. -10.8292 iterations 22
Cbc0038I Pass  45: suminf.    2.87884 (8) obj. -10.8292 iterations 2
Cbc0038I Pass  46: suminf.    2.48430 (8) obj. -10.8292 iterations 9
Cbc0038I Pass  47: suminf.    2.48430 (8) obj. -10.8292 iterations 0
Cbc0038I Pass  48: suminf.    2.20208 (7) obj. -10.8292 iterations 12
Cbc0038I Pass  49: suminf.    2.01856 (7) obj. -10.8292 iterations 3
Cbc0038I Pass  50: suminf.    2.01856 (7) obj. -10.8292 iterations 1
Cbc0038I Pass  51: suminf.    2.45208 (8) obj. -10.8292 iterations 10
Cbc0038I Pass  52: suminf.    2.45208 (8) obj. -10.8292 iterations 0
Cbc0038I Pass  53: suminf.    2.25978 (6) obj. -10.8292 iterations 11
Cbc0038I Pass  54: suminf.    2.01856 (7) obj. -10.8292 iterations 4
Cbc0038I Pass  55: suminf.    2.01856 (7) obj. -10.8292 iterations 1
Cbc0038I Pass  56: suminf.    2.45208 (8) obj. -10.8292 iterations 10
Cbc0038I Pass  57: suminf.    2.45208 (8) obj. -10.8292 iterations 0
Cbc0038I Pass  58: suminf.    2.25978 (6) obj. -10.8292 iterations 11
Cbc0038I Pass  59: suminf.    2.01856 (7) obj. -10.8292 iterations 4
Cbc0038I Pass  60: suminf.    2.01856 (7) obj. -10.8292 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 113 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -3.26435 - took 0.22 seconds
Cbc0012I Integer solution of -3.264349 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 109 rows 65 columns
Cbc0031I 29 added rows had average density of 80.034483
Cbc0013I At root node, 29 cuts changed objective from -34.627167 to -26.257295 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22949 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2898 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.264349 best solution, best possible -26.257295 (1.77 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -3.490139 found by RINS after 12227 iterations and 41 nodes (2.09 seconds)
Cbc0016I Integer solution of -3.790989 found by strong branching after 12698 iterations and 54 nodes (2.13 seconds)
Cbc0016I Integer solution of -3.873949 found by strong branching after 13449 iterations and 89 nodes (2.24 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 22 rows 17 columns
Cbc0012I Integer solution of -4.425399 found by RINS after 13690 iterations and 98 nodes (2.25 seconds)
Cbc0012I Integer solution of -4.767099 found by rounding after 13805 iterations and 105 nodes (2.26 seconds)
Cbc0001I Search completed - best objective -4.767098999999998, took 14733 iterations and 121 nodes (2.31 seconds)
Cbc0032I Strong branching done 1344 times (24555 iterations), fathomed 6 nodes and fixed 71 variables
Cbc0035I Maximum depth 46, 381 variables fixed on reduced cost
Total time (CPU seconds):       2.22   (Wallclock seconds):       2.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-81) rows, 140 (-63) columns and 2474 (-3180) elements
Clp1000I sum of infeasibilities 1.0389e-07 - average 8.37826e-10, 73 fixed columns
Coin0506I Presolve 49 (-75) rows, 67 (-73) columns and 228 (-2246) elements
Clp0006I 0  Obj -6.5823122 Dual inf 2.7143871 (66)
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 1.4784919 - largest nonzero change 2.2755842e-05 ( 0.0012247315%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value -5.8548233
Clp0000I Optimal - objective value -5.8548233
Coin0511I After Postsolve, objective -5.8548233, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -5.8548233 Dual inf 36.033877 (42)
Clp0014I Perturbing problem by 0.001% of 1.7411285 - largest nonzero change 2.3379487e-05 ( 0.0023379487%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 47.939377
Clp0000I Optimal - objective value 47.939377
Clp0000I Optimal - objective value 47.939377
Coin0511I After Postsolve, objective 47.939377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.93937718 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 140 columns (140 integer (140 of which binary)) and 2476 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.831%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 7.80096
Cbc0038I Pass   1: suminf.    2.88455 (32) obj. -30.8445 iterations 26
Cbc0038I Pass   2: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass   3: suminf.    0.83896 (13) obj. -3.29144 iterations 19
Cbc0038I Solution found of 9.80711
Cbc0038I Rounding solution of 6.51869 is better than previous of 9.80711

Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 6.51869 to 5.02324 (0.04 seconds)
Cbc0038I Round again with cutoff of 0.243678
Cbc0038I Pass   4: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass   5: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass   6: suminf.    1.22715 (17) obj. -6.90324 iterations 15
Cbc0038I Pass   7: suminf.    0.40609 (2) obj. 0.243678 iterations 34
Cbc0038I Pass   8: suminf.    0.23585 (2) obj. -0.777786 iterations 3
Cbc0038I Pass   9: suminf.    2.01869 (17) obj. -8.40492 iterations 34
Cbc0038I Pass  10: suminf.    2.01869 (17) obj. -8.40492 iterations 5
Cbc0038I Pass  11: suminf.    1.36464 (6) obj. 0.243678 iterations 23
Cbc0038I Pass  12: suminf.    1.36464 (6) obj. 0.243678 iterations 0
Cbc0038I Pass  13: suminf.    1.17982 (4) obj. 0.243678 iterations 10
Cbc0038I Pass  14: suminf.    0.51851 (4) obj. 0.243678 iterations 4
Cbc0038I Pass  15: suminf.    0.65748 (4) obj. 0.243678 iterations 3
Cbc0038I Pass  16: suminf.    1.93106 (17) obj. 0.243678 iterations 37
Cbc0038I Pass  17: suminf.    1.57388 (10) obj. -1.22122 iterations 18
Cbc0038I Pass  18: suminf.    1.05443 (9) obj. -0.229846 iterations 1
Cbc0038I Pass  19: suminf.    1.11179 (6) obj. 0.243678 iterations 18
Cbc0038I Pass  20: suminf.    0.79717 (4) obj. -0.817252 iterations 9
Cbc0038I Pass  21: suminf.    0.36748 (3) obj. 0.0783689 iterations 1
Cbc0038I Pass  22: suminf.    1.08832 (8) obj. 0.243678 iterations 9
Cbc0038I Pass  23: suminf.    1.08224 (9) obj. 0.243678 iterations 1
Cbc0038I Pass  24: suminf.    1.10336 (9) obj. 0.243678 iterations 14
Cbc0038I Pass  25: suminf.    1.10336 (9) obj. 0.243678 iterations 0
Cbc0038I Pass  26: suminf.    0.80251 (6) obj. 0.243678 iterations 9
Cbc0038I Pass  27: suminf.    0.25636 (2) obj. -0.782346 iterations 9
Cbc0038I Pass  28: suminf.    0.42737 (2) obj. 0.243678 iterations 1
Cbc0038I Pass  29: suminf.    2.92459 (16) obj. 0.243678 iterations 36
Cbc0038I Pass  30: suminf.    2.19676 (12) obj. 0.243678 iterations 6
Cbc0038I Pass  31: suminf.    1.84823 (11) obj. 0.243678 iterations 1
Cbc0038I Pass  32: suminf.    0.79865 (5) obj. 0.243678 iterations 20
Cbc0038I Pass  33: suminf.    0.79865 (5) obj. 0.243678 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 5.02324 to -0.290332 (0.08 seconds)
Cbc0038I Round again with cutoff of -8.78664
Cbc0038I Pass  33: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass  34: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass  35: suminf.    1.11564 (13) obj. -8.78664 iterations 20
Cbc0038I Pass  36: suminf.    1.11564 (13) obj. -8.78664 iterations 0
Cbc0038I Pass  37: suminf.    1.66042 (11) obj. -8.78664 iterations 21
Cbc0038I Pass  38: suminf.    0.96740 (5) obj. -8.78664 iterations 5
Cbc0038I Pass  39: suminf.    0.90406 (5) obj. -8.91332 iterations 2
Cbc0038I Pass  40: suminf.    1.66042 (11) obj. -8.78664 iterations 5
Cbc0038I Pass  41: suminf.    1.45436 (13) obj. -8.78664 iterations 20
Cbc0038I Pass  42: suminf.    1.35912 (13) obj. -8.78664 iterations 10
Cbc0038I Pass  43: suminf.    1.81568 (11) obj. -8.78664 iterations 18
Cbc0038I Pass  44: suminf.    1.34504 (11) obj. -8.78664 iterations 5
Cbc0038I Pass  45: suminf.    2.75578 (12) obj. -8.78664 iterations 16
Cbc0038I Pass  46: suminf.    1.33010 (8) obj. -8.78664 iterations 11
Cbc0038I Pass  47: suminf.    1.45297 (8) obj. -8.78664 iterations 7
Cbc0038I Pass  48: suminf.    3.42309 (19) obj. -8.78664 iterations 33
Cbc0038I Pass  49: suminf.    2.18913 (13) obj. -8.88825 iterations 19
Cbc0038I Pass  50: suminf.    1.51691 (9) obj. -8.78664 iterations 16
Cbc0038I Pass  51: suminf.    1.39939 (10) obj. -8.78664 iterations 3
Cbc0038I Pass  52: suminf.    3.63959 (14) obj. -8.78664 iterations 13
Cbc0038I Pass  53: suminf.    2.17254 (11) obj. -8.78664 iterations 4
Cbc0038I Pass  54: suminf.    1.68249 (11) obj. -8.78664 iterations 7
Cbc0038I Pass  55: suminf.    1.11788 (10) obj. -8.78664 iterations 22
Cbc0038I Pass  56: suminf.    1.08384 (6) obj. -8.78664 iterations 4
Cbc0038I Pass  57: suminf.    1.07040 (6) obj. -8.78664 iterations 3
Cbc0038I Pass  58: suminf.    1.07040 (6) obj. -8.78664 iterations 0
Cbc0038I Pass  59: suminf.    1.08384 (6) obj. -8.78664 iterations 2
Cbc0038I Pass  60: suminf.    1.08384 (6) obj. -8.78664 iterations 0
Cbc0038I Pass  61: suminf.    2.10413 (13) obj. -8.78664 iterations 23
Cbc0038I Pass  62: suminf.    1.79205 (11) obj. -8.78664 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 44 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -0.290332 to -1.54579 (0.15 seconds)
Cbc0038I Round again with cutoff of -18.9821
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass  63: suminf.    2.88455 (32) obj. -30.8445 iterations 0
Cbc0038I Pass  64: suminf.    2.52602 (20) obj. -18.9821 iterations 33
Cbc0038I Pass  65: suminf.    2.34192 (19) obj. -18.9821 iterations 2
Cbc0038I Pass  66: suminf.    3.38847 (17) obj. -18.9821 iterations 19
Cbc0038I Pass  67: suminf.    3.21628 (17) obj. -18.9821 iterations 5
Cbc0038I Pass  68: suminf.    3.63314 (18) obj. -18.9821 iterations 11
Cbc0038I Pass  69: suminf.    3.38847 (17) obj. -18.9821 iterations 2
Cbc0038I Pass  70: suminf.    2.98488 (17) obj. -18.9821 iterations 6
Cbc0038I Pass  71: suminf.    2.11272 (24) obj. -18.9821 iterations 32
Cbc0038I Pass  72: suminf.    1.92043 (24) obj. -18.9821 iterations 14
Cbc0038I Pass  73: suminf.    3.91927 (18) obj. -18.9821 iterations 33
Cbc0038I Pass  74: suminf.    3.64340 (20) obj. -18.9821 iterations 16
Cbc0038I Pass  75: suminf.    3.60386 (19) obj. -18.9821 iterations 8
Cbc0038I Pass  76: suminf.    3.36223 (16) obj. -18.9821 iterations 23
Cbc0038I Pass  77: suminf.    2.98488 (17) obj. -18.9821 iterations 6
Cbc0038I Pass  78: suminf.    3.63314 (18) obj. -18.9821 iterations 10
Cbc0038I Pass  79: suminf.    3.38847 (17) obj. -18.9821 iterations 2
Cbc0038I Pass  80: suminf.    3.37896 (20) obj. -18.9821 iterations 29
Cbc0038I Pass  81: suminf.    3.37388 (20) obj. -18.9821 iterations 3
Cbc0038I Pass  82: suminf.    3.31087 (19) obj. -18.9821 iterations 13
Cbc0038I Pass  83: suminf.    3.30492 (19) obj. -18.9821 iterations 4
Cbc0038I Pass  84: suminf.    3.98192 (20) obj. -18.9821 iterations 21
Cbc0038I Pass  85: suminf.    3.35526 (20) obj. -18.9821 iterations 4
Cbc0038I Pass  86: suminf.    3.72668 (20) obj. -18.9821 iterations 16
Cbc0038I Pass  87: suminf.    3.28442 (20) obj. -18.9821 iterations 5
Cbc0038I Pass  88: suminf.    3.28442 (20) obj. -18.9821 iterations 0
Cbc0038I Pass  89: suminf.    3.39577 (23) obj. -18.9821 iterations 20
Cbc0038I Pass  90: suminf.    3.29784 (21) obj. -18.9821 iterations 10
Cbc0038I Pass  91: suminf.    3.23304 (19) obj. -18.9821 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 38 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -1.54579 - took 0.14 seconds
Cbc0012I Integer solution of -1.545794 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 26 rows 31 columns
Cbc0031I 61 added rows had average density of 43.967213
Cbc0013I At root node, 61 cuts changed objective from -42.771464 to -9.7051807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15631 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1893 row cuts average 135.5 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 975 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1528 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 393 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 90 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.416 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.545794 best solution, best possible -9.7051807 (2.54 seconds)
Cbc0012I Integer solution of -2.767099 found by rounding after 6227 iterations and 7 nodes (2.79 seconds)
Cbc0012I Integer solution of -3.767099 found by rounding after 6238 iterations and 8 nodes (2.79 seconds)
Cbc0012I Integer solution of -4.767099 found by rounding after 6595 iterations and 20 nodes (2.88 seconds)
Cbc0010I After 27 nodes, 2 on tree, -4.767099 best solution, best possible -9.3207252 (3.29 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 59 rows 79 columns
Cbc0010I After 44 nodes, 7 on tree, -4.767099 best solution, best possible -9.3207252 (4.34 seconds)
Cbc0001I Search completed - best objective -4.767098999999998, took 9919 iterations and 66 nodes (4.74 seconds)
Cbc0032I Strong branching done 1040 times (21467 iterations), fathomed 5 nodes and fixed 0 variables
Cbc0035I Maximum depth 12, 264 variables fixed on reduced cost
Total time (CPU seconds):       4.24   (Wallclock seconds):       4.76

