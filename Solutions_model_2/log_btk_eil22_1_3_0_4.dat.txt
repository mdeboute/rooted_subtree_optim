Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-19) rows, 17 (-7) columns and 84 (-45) elements
Clp1000I sum of infeasibilities 5.8714e-06 - average 2.09693e-07, 6 fixed columns
Coin0506I Presolve 17 (-11) rows, 10 (-7) columns and 48 (-36) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 82.059237
Clp0000I Optimal - objective value 82.059237
Coin0511I After Postsolve, objective 82.059237, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.059237
Clp0000I Optimal - objective value 82.059237
Clp0000I Optimal - objective value 82.059237
Coin0511I After Postsolve, objective 82.059237, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.05923688 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 17 columns (16 integer (16 of which binary)) and 89 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.546%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.9831
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.25 iterations 7
Cbc0038I Solution found of -3.25
Cbc0038I Relaxing continuous gives -3.25
Cbc0038I Rounding solution of -22.1667 is better than previous of -3.25

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 19 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -22.1667 to -35.1667 (0.00 seconds)
Cbc0038I Round again with cutoff of -38.951
Cbc0038I Pass   2: suminf.    0.71037 (3) obj. -38.951 iterations 2
Cbc0038I Pass   3: suminf.    0.55556 (2) obj. -38.951 iterations 3
Cbc0038I Pass   4: suminf.    0.55556 (2) obj. -38.951 iterations 0
Cbc0038I Pass   5: suminf.    0.55556 (2) obj. -38.951 iterations 1
Cbc0038I Pass   6: suminf.    0.55556 (2) obj. -38.951 iterations 1
Cbc0038I Pass   7: suminf.    1.43901 (5) obj. -38.951 iterations 5
Cbc0038I Pass   8: suminf.    0.52218 (2) obj. -38.951 iterations 3
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -38.951 iterations 1
Cbc0038I Pass  10: suminf.    0.28569 (1) obj. -38.951 iterations 1
Cbc0038I Pass  11: suminf.    1.26991 (4) obj. -38.951 iterations 5
Cbc0038I Pass  12: suminf.    0.82138 (3) obj. -38.951 iterations 3
Cbc0038I Pass  13: suminf.    1.04504 (4) obj. -38.951 iterations 3
Cbc0038I Pass  14: suminf.    0.77946 (2) obj. -38.951 iterations 2
Cbc0038I Pass  15: suminf.    0.52218 (2) obj. -38.951 iterations 1
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -38.951 iterations 1
Cbc0038I Pass  17: suminf.    0.28569 (1) obj. -38.951 iterations 1
Cbc0038I Pass  18: suminf.    1.38975 (3) obj. -38.951 iterations 5
Cbc0038I Pass  19: suminf.    0.55791 (3) obj. -38.951 iterations 4
Cbc0038I Pass  20: suminf.    0.57138 (2) obj. -38.951 iterations 4
Cbc0038I Pass  21: suminf.    0.57138 (2) obj. -38.951 iterations 0
Cbc0038I Pass  22: suminf.    0.33333 (1) obj. -38.951 iterations 2
Cbc0038I Pass  23: suminf.    0.28569 (1) obj. -38.951 iterations 1
Cbc0038I Pass  24: suminf.    1.61909 (4) obj. -38.951 iterations 7
Cbc0038I Pass  25: suminf.    1.59931 (4) obj. -38.951 iterations 1
Cbc0038I Pass  26: suminf.    0.63405 (3) obj. -38.951 iterations 5
Cbc0038I Pass  27: suminf.    0.61111 (2) obj. -38.951 iterations 2
Cbc0038I Pass  28: suminf.    0.71037 (3) obj. -38.951 iterations 2
Cbc0038I Pass  29: suminf.    0.61111 (2) obj. -38.951 iterations 3
Cbc0038I Pass  30: suminf.    0.63405 (3) obj. -38.951 iterations 2
Cbc0038I Pass  31: suminf.    1.85417 (4) obj. -38.951 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -35.1667 - took 0.02 seconds
Cbc0012I Integer solution of -35.1667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 28 rows 17 columns, reduced to 19 rows 10 columns
Cbc0031I 5 added rows had average density of 12.8
Cbc0013I At root node, 5 cuts changed objective from -73.008538 to -36.560579 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 220 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 325 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -35.16669999999999, took 765 iterations and 2 nodes (0.08 seconds)
Cbc0032I Strong branching done 14 times (73 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-15) rows, 35 (-9) columns and 243 (-115) elements
Clp1000I sum of infeasibilities 3.04201e-14 - average 1.014e-15, 31 fixed columns
Coin0506I Presolve 5 (-25) rows, 4 (-31) columns and 14 (-229) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 65.609391
Clp0000I Optimal - objective value 65.609391
Coin0511I After Postsolve, objective 65.609391, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30075946 - largest nonzero change 0 ( 0%) - largest zero change 2.6458211e-05
Clp0000I Optimal - objective value 134.35915
Clp0000I Optimal - objective value 134.35915
Clp0000I Optimal - objective value 134.35915
Coin0511I After Postsolve, objective 134.35915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 134.3591452 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 35 columns (35 integer (35 of which binary)) and 248 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.296%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.72161
Cbc0038I Pass   1: suminf.    1.15758 (7) obj. -78.7849 iterations 4
Cbc0038I Pass   2: suminf.    1.15758 (7) obj. -78.7849 iterations 0
Cbc0038I Solution found of -52.1667
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 35 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -52.1667 to -52.3334 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.8311
Cbc0038I Pass   3: suminf.    1.15758 (7) obj. -78.7849 iterations 0
Cbc0038I Pass   4: suminf.    1.15758 (7) obj. -78.7849 iterations 0
Cbc0038I Pass   5: suminf.    0.25994 (3) obj. -56.8311 iterations 11
Cbc0038I Pass   6: suminf.    0.28571 (1) obj. -62.5358 iterations 4
Cbc0038I Pass   7: suminf.    0.46535 (1) obj. -56.8311 iterations 2
Cbc0038I Pass   8: suminf.    0.70667 (4) obj. -58.8786 iterations 9
Cbc0038I Pass   9: suminf.    0.33202 (4) obj. -56.8311 iterations 4
Cbc0038I Pass  10: suminf.    0.23810 (1) obj. -60.627 iterations 5
Cbc0038I Pass  11: suminf.    0.40374 (1) obj. -56.8311 iterations 2
Cbc0038I Pass  12: suminf.    0.38492 (2) obj. -60.0397 iterations 6
Cbc0038I Pass  13: suminf.    0.38492 (2) obj. -60.0397 iterations 0
Cbc0038I Pass  14: suminf.    0.29699 (5) obj. -56.8311 iterations 4
Cbc0038I Pass  15: suminf.    0.25665 (2) obj. -56.8311 iterations 5
Cbc0038I Pass  16: suminf.    0.62624 (2) obj. -56.8311 iterations 3
Cbc0038I Pass  17: suminf.    1.18451 (7) obj. -56.8311 iterations 7
Cbc0038I Pass  18: suminf.    1.18451 (7) obj. -56.8311 iterations 0
Cbc0038I Pass  19: suminf.    1.07245 (4) obj. -56.8311 iterations 11
Cbc0038I Pass  20: suminf.    1.07245 (4) obj. -56.8311 iterations 1
Cbc0038I Pass  21: suminf.    1.22614 (4) obj. -56.8311 iterations 6
Cbc0038I Pass  22: suminf.    1.47757 (4) obj. -56.8311 iterations 4
Cbc0038I Pass  23: suminf.    0.94172 (5) obj. -56.8311 iterations 5
Cbc0038I Pass  24: suminf.    0.73424 (3) obj. -56.8311 iterations 3
Cbc0038I Pass  25: suminf.    1.24573 (5) obj. -56.8311 iterations 4
Cbc0038I Pass  26: suminf.    0.98479 (3) obj. -56.8311 iterations 4
Cbc0038I Pass  27: suminf.    0.98479 (3) obj. -56.8311 iterations 0
Cbc0038I Pass  28: suminf.    0.27809 (2) obj. -56.8311 iterations 3
Cbc0038I Pass  29: suminf.    0.05556 (1) obj. -61.7361 iterations 3
Cbc0038I Pass  30: suminf.    0.13905 (1) obj. -56.8311 iterations 1
Cbc0038I Pass  31: suminf.    1.25094 (3) obj. -56.8311 iterations 4
Cbc0038I Pass  32: suminf.    0.52778 (2) obj. -63.3194 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 35 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -52.3334 to -56.3334 (0.02 seconds)
Cbc0038I Round again with cutoff of -64.9268
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.15758 (7) obj. -78.7849 iterations 0
Cbc0038I Pass  33: suminf.    1.15758 (7) obj. -78.7849 iterations 0
Cbc0038I Pass  34: suminf.    0.56055 (3) obj. -64.9268 iterations 11
Cbc0038I Pass  35: suminf.    0.45437 (3) obj. -68.01 iterations 2
Cbc0038I Pass  36: suminf.    0.89588 (5) obj. -64.9268 iterations 5
Cbc0038I Pass  37: suminf.    0.95494 (3) obj. -64.9268 iterations 3
Cbc0038I Pass  38: suminf.    0.77575 (3) obj. -64.9268 iterations 2
Cbc0038I Pass  39: suminf.    0.95494 (3) obj. -64.9268 iterations 3
Cbc0038I Pass  40: suminf.    1.55060 (5) obj. -64.9268 iterations 5
Cbc0038I Pass  41: suminf.    0.97229 (5) obj. -64.9268 iterations 2
Cbc0038I Pass  42: suminf.    0.55647 (3) obj. -64.9268 iterations 3
Cbc0038I Pass  43: suminf.    0.61265 (2) obj. -64.9268 iterations 3
Cbc0038I Pass  44: suminf.    0.48889 (2) obj. -67.8683 iterations 1
Cbc0038I Pass  45: suminf.    0.89352 (3) obj. -64.9268 iterations 5
Cbc0038I Pass  46: suminf.    1.00166 (3) obj. -64.9268 iterations 3
Cbc0038I Pass  47: suminf.    1.79548 (6) obj. -64.9268 iterations 16
Cbc0038I Pass  48: suminf.    1.71195 (7) obj. -64.9268 iterations 2
Cbc0038I Pass  49: suminf.    0.74578 (3) obj. -64.9268 iterations 8
Cbc0038I Pass  50: suminf.    0.74578 (3) obj. -64.9268 iterations 0
Cbc0038I Pass  51: suminf.    1.19425 (3) obj. -64.9268 iterations 1
Cbc0038I Pass  52: suminf.    1.03632 (3) obj. -64.9268 iterations 1
Cbc0038I Pass  53: suminf.    0.74578 (3) obj. -64.9268 iterations 2
Cbc0038I Pass  54: suminf.    1.94868 (9) obj. -64.9268 iterations 10
Cbc0038I Pass  55: suminf.    1.32939 (6) obj. -64.9268 iterations 2
Cbc0038I Pass  56: suminf.    1.32939 (6) obj. -64.9268 iterations 1
Cbc0038I Pass  57: suminf.    1.74414 (5) obj. -64.9268 iterations 7
Cbc0038I Pass  58: suminf.    1.81056 (5) obj. -64.9268 iterations 4
Cbc0038I Pass  59: suminf.    1.74768 (6) obj. -64.9268 iterations 3
Cbc0038I Pass  60: suminf.    1.71203 (8) obj. -64.9268 iterations 12
Cbc0038I Pass  61: suminf.    1.50394 (6) obj. -64.9268 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 35 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -56.3334 - took 0.01 seconds
Cbc0012I Integer solution of -56.3334 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 29 rows 35 columns, reduced to 4 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 11.571429
Cbc0013I At root node, 11 cuts changed objective from -97.309443 to -69.638852 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 1.9 elements, 18 column cuts (18 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 26 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -56.3334, took 34 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-19) rows, 17 (-7) columns and 84 (-45) elements
Clp1000I sum of infeasibilities 5.8714e-06 - average 2.09693e-07, 6 fixed columns
Coin0506I Presolve 17 (-11) rows, 10 (-7) columns and 48 (-36) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 82.059237
Clp0000I Optimal - objective value 82.059237
Coin0511I After Postsolve, objective 82.059237, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.059237
Clp0000I Optimal - objective value 82.059237
Clp0000I Optimal - objective value 82.059237
Coin0511I After Postsolve, objective 82.059237, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.05923688 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 17 columns (16 integer (16 of which binary)) and 89 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.546%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.9831
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.25 iterations 7
Cbc0038I Solution found of -3.25
Cbc0038I Relaxing continuous gives -3.25
Cbc0038I Rounding solution of -22.1667 is better than previous of -3.25

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 19 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -22.1667 to -35.1667 (0.01 seconds)
Cbc0038I Round again with cutoff of -38.951
Cbc0038I Pass   2: suminf.    0.71037 (3) obj. -38.951 iterations 2
Cbc0038I Pass   3: suminf.    0.55556 (2) obj. -38.951 iterations 3
Cbc0038I Pass   4: suminf.    0.55556 (2) obj. -38.951 iterations 0
Cbc0038I Pass   5: suminf.    0.55556 (2) obj. -38.951 iterations 1
Cbc0038I Pass   6: suminf.    0.55556 (2) obj. -38.951 iterations 1
Cbc0038I Pass   7: suminf.    1.43901 (5) obj. -38.951 iterations 5
Cbc0038I Pass   8: suminf.    0.52218 (2) obj. -38.951 iterations 3
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -38.951 iterations 1
Cbc0038I Pass  10: suminf.    0.28569 (1) obj. -38.951 iterations 1
Cbc0038I Pass  11: suminf.    1.26991 (4) obj. -38.951 iterations 5
Cbc0038I Pass  12: suminf.    0.82138 (3) obj. -38.951 iterations 3
Cbc0038I Pass  13: suminf.    1.04504 (4) obj. -38.951 iterations 3
Cbc0038I Pass  14: suminf.    0.77946 (2) obj. -38.951 iterations 2
Cbc0038I Pass  15: suminf.    0.52218 (2) obj. -38.951 iterations 1
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -38.951 iterations 1
Cbc0038I Pass  17: suminf.    0.28569 (1) obj. -38.951 iterations 1
Cbc0038I Pass  18: suminf.    1.38975 (3) obj. -38.951 iterations 5
Cbc0038I Pass  19: suminf.    0.55791 (3) obj. -38.951 iterations 4
Cbc0038I Pass  20: suminf.    0.57138 (2) obj. -38.951 iterations 4
Cbc0038I Pass  21: suminf.    0.57138 (2) obj. -38.951 iterations 0
Cbc0038I Pass  22: suminf.    0.33333 (1) obj. -38.951 iterations 2
Cbc0038I Pass  23: suminf.    0.28569 (1) obj. -38.951 iterations 1
Cbc0038I Pass  24: suminf.    1.61909 (4) obj. -38.951 iterations 7
Cbc0038I Pass  25: suminf.    1.59931 (4) obj. -38.951 iterations 1
Cbc0038I Pass  26: suminf.    0.63405 (3) obj. -38.951 iterations 5
Cbc0038I Pass  27: suminf.    0.61111 (2) obj. -38.951 iterations 2
Cbc0038I Pass  28: suminf.    0.71037 (3) obj. -38.951 iterations 2
Cbc0038I Pass  29: suminf.    0.61111 (2) obj. -38.951 iterations 3
Cbc0038I Pass  30: suminf.    0.63405 (3) obj. -38.951 iterations 2
Cbc0038I Pass  31: suminf.    1.85417 (4) obj. -38.951 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -35.1667 - took 0.02 seconds
Cbc0012I Integer solution of -35.1667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 28 rows 17 columns, reduced to 19 rows 10 columns
Cbc0031I 5 added rows had average density of 12.8
Cbc0013I At root node, 5 cuts changed objective from -73.008538 to -36.560579 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 220 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 325 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -35.16669999999999, took 765 iterations and 2 nodes (0.08 seconds)
Cbc0032I Strong branching done 14 times (73 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-17) rows, 34 (-11) columns and 232 (-129) elements
Clp1000I sum of infeasibilities 1.4988e-14 - average 4.996e-16, 29 fixed columns
Coin0506I Presolve 5 (-25) rows, 4 (-30) columns and 14 (-218) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 36.617208
Clp0000I Optimal - objective value 36.617208
Coin0511I After Postsolve, objective 36.617208, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30711389 - largest nonzero change 0 ( 0%) - largest zero change 2.6587464e-05
Clp0000I Optimal - objective value 106.71147
Clp0000I Optimal - objective value 106.71147
Clp0000I Optimal - objective value 106.71147
Coin0511I After Postsolve, objective 106.71147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.7114693 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 34 columns (34 integer (34 of which binary)) and 236 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.378%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 3.15618
Cbc0038I Pass   1: suminf.    1.75285 (10) obj. -57.6645 iterations 8
Cbc0038I Pass   2: suminf.    1.75285 (10) obj. -57.6645 iterations 1
Cbc0038I Solution found of -21.0834
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 34 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -21.0834 to -22.1667 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.3238
Cbc0038I Pass   3: suminf.    1.75285 (10) obj. -57.6645 iterations 0
Cbc0038I Pass   4: suminf.    1.75285 (10) obj. -57.6645 iterations 1
Cbc0038I Pass   5: suminf.    0.30154 (5) obj. -26.3238 iterations 22
Cbc0038I Pass   6: suminf.    1.12967 (4) obj. -26.3238 iterations 10
Cbc0038I Pass   7: suminf.    0.97356 (3) obj. -26.3238 iterations 3
Cbc0038I Pass   8: suminf.    1.46939 (3) obj. -34.5953 iterations 3
Cbc0038I Pass   9: suminf.    1.14466 (3) obj. -26.3238 iterations 2
Cbc0038I Pass  10: suminf.    0.97356 (3) obj. -26.3238 iterations 5
Cbc0038I Pass  11: suminf.    1.00966 (5) obj. -26.3238 iterations 13
Cbc0038I Pass  12: suminf.    1.00966 (5) obj. -26.3238 iterations 0
Cbc0038I Pass  13: suminf.    1.56867 (5) obj. -26.3238 iterations 8
Cbc0038I Pass  14: suminf.    0.93846 (3) obj. -26.3238 iterations 4
Cbc0038I Pass  15: suminf.    0.93846 (3) obj. -26.3238 iterations 0
Cbc0038I Pass  16: suminf.    0.16487 (2) obj. -26.3238 iterations 2
Cbc0038I Solution found of -31.1667
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 34 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -31.1667 to -35.1667 (0.01 seconds)
Cbc0038I Round again with cutoff of -40.8807
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  17: suminf.    1.75285 (10) obj. -57.6645 iterations 0
Cbc0038I Pass  18: suminf.    1.75285 (10) obj. -57.6645 iterations 1
Cbc0038I Pass  19: suminf.    0.94935 (7) obj. -40.8807 iterations 20
Cbc0038I Pass  20: suminf.    0.90624 (5) obj. -40.8807 iterations 3
Cbc0038I Pass  21: suminf.    1.26721 (7) obj. -40.8807 iterations 6
Cbc0038I Pass  22: suminf.    1.26721 (7) obj. -40.8807 iterations 1
Cbc0038I Pass  23: suminf.    2.15953 (5) obj. -40.8807 iterations 7
Cbc0038I Pass  24: suminf.    2.15953 (5) obj. -40.8807 iterations 2
Cbc0038I Pass  25: suminf.    2.13098 (5) obj. -40.8807 iterations 3
Cbc0038I Pass  26: suminf.    2.13098 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  27: suminf.    2.20947 (5) obj. -40.8807 iterations 3
Cbc0038I Pass  28: suminf.    2.15953 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  29: suminf.    2.15953 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  30: suminf.    2.13098 (5) obj. -40.8807 iterations 3
Cbc0038I Pass  31: suminf.    2.13098 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  32: suminf.    2.20947 (5) obj. -40.8807 iterations 5
Cbc0038I Pass  33: suminf.    2.15953 (5) obj. -40.8807 iterations 2
Cbc0038I Pass  34: suminf.    2.15953 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  35: suminf.    2.13098 (5) obj. -40.8807 iterations 4
Cbc0038I Pass  36: suminf.    2.13098 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  37: suminf.    2.20947 (5) obj. -40.8807 iterations 4
Cbc0038I Pass  38: suminf.    2.15953 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  39: suminf.    2.15953 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  40: suminf.    2.13098 (5) obj. -40.8807 iterations 6
Cbc0038I Pass  41: suminf.    2.13098 (5) obj. -40.8807 iterations 2
Cbc0038I Pass  42: suminf.    2.20947 (5) obj. -40.8807 iterations 6
Cbc0038I Pass  43: suminf.    2.15953 (5) obj. -40.8807 iterations 2
Cbc0038I Pass  44: suminf.    2.15953 (5) obj. -40.8807 iterations 1
Cbc0038I Pass  45: suminf.    2.13098 (5) obj. -40.8807 iterations 4
Cbc0038I Pass  46: suminf.    2.13098 (5) obj. -40.8807 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -35.1667 - took 0.01 seconds
Cbc0012I Integer solution of -35.1667 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 11.4
Cbc0013I At root node, 10 cuts changed objective from -63.736457 to -41.194262 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 51 row cuts average 2.0 elements, 15 column cuts (15 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 34 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.16669999999999, took 30 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

