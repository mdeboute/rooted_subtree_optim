Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-16) rows, 45 (-5) columns and 249 (-36) elements
Clp1000I sum of infeasibilities 1.35813e-06 - average 1.6363e-08, 10 fixed columns
Coin0506I Presolve 57 (-26) rows, 34 (-11) columns and 175 (-74) elements
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Coin0511I After Postsolve, objective 2245.2588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 25.057703 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Coin0511I After Postsolve, objective 2245.2588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2245.258751 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 45 columns (44 integer (44 of which binary)) and 249 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.978%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 10.138
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 542.558 iterations 31
Cbc0038I Solution found of 542.558
Cbc0038I Relaxing continuous gives 542.558
Cbc0038I Rounding solution of 194.217 is better than previous of 542.558

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 45 columns, reduced to 51 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 194.217 to -306.035 (0.03 seconds)
Cbc0038I Round again with cutoff of -499.957
Cbc0038I Pass   2: suminf.    2.02003 (7) obj. -499.957 iterations 8
Cbc0038I Pass   3: suminf.    1.96827 (8) obj. -499.957 iterations 6
Cbc0038I Pass   4: suminf.    1.57789 (9) obj. -499.957 iterations 2
Cbc0038I Pass   5: suminf.    1.61649 (6) obj. -499.957 iterations 10
Cbc0038I Pass   6: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass   7: suminf.    2.57228 (8) obj. -499.957 iterations 8
Cbc0038I Pass   8: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass   9: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  10: suminf.    0.66256 (5) obj. -499.957 iterations 3
Cbc0038I Pass  11: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  12: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  13: suminf.    1.20642 (6) obj. -499.957 iterations 6
Cbc0038I Pass  14: suminf.    2.57228 (8) obj. -499.957 iterations 6
Cbc0038I Pass  15: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  16: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  17: suminf.    0.66256 (5) obj. -499.957 iterations 1
Cbc0038I Pass  18: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  19: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  20: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass  21: suminf.    2.57228 (8) obj. -499.957 iterations 6
Cbc0038I Pass  22: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  23: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  24: suminf.    0.66256 (5) obj. -499.957 iterations 1
Cbc0038I Pass  25: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  26: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  27: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass  28: suminf.    2.57228 (8) obj. -499.957 iterations 8
Cbc0038I Pass  29: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  30: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  31: suminf.    0.66256 (5) obj. -499.957 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 45 columns, reduced to 54 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -306.035 - took 0.04 seconds
Cbc0012I Integer solution of -306.0348 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 83 rows 45 columns, reduced to 51 rows 31 columns
Cbc0031I 21 added rows had average density of 31.761905
Cbc0013I At root node, 21 cuts changed objective from -2245.2588 to -1206.4414 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5687 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1299 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 182 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -306.0348000000004, took 4918 iterations and 12 nodes (0.49 seconds)
Cbc0032I Strong branching done 230 times (3858 iterations), fathomed 0 nodes and fixed 16 variables
Cbc0035I Maximum depth 4, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-12) rows, 91 (-5) columns and 1262 (-151) elements
Clp1000I sum of infeasibilities 9.28872e-07 - average 1.08008e-08, 84 fixed columns
Coin0506I Presolve 4 (-82) rows, 7 (-84) columns and 13 (-1249) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -297.0848
Clp0000I Optimal - objective value -297.0848
Coin0511I After Postsolve, objective -297.0848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5642239 - largest nonzero change 3.5000165e-05 ( 0.0005514513%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3023.8029
Clp0000I Optimal - objective value 3023.8029
Clp0000I Optimal - objective value 3023.8029
Coin0511I After Postsolve, objective 3023.8029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3023.802878 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 91 columns (91 integer (91 of which binary)) and 1264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 14.5316
Cbc0038I Pass   1: suminf.    2.80554 (26) obj. -1063.75 iterations 26
Cbc0038I Pass   2: suminf.    2.80554 (26) obj. -1063.75 iterations 4
Cbc0038I Pass   3: suminf.    0.17060 (4) obj. 783.106 iterations 22
Cbc0038I Solution found of 870.34
Cbc0038I Rounding solution of 293.036 is better than previous of 870.34

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 91 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 293.036 to 286.92 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.5283
Cbc0038I Pass   4: suminf.    2.80554 (26) obj. -1063.75 iterations 0
Cbc0038I Pass   5: suminf.    2.80554 (26) obj. -1063.75 iterations 2
Cbc0038I Pass   6: suminf.    1.61093 (17) obj. -10.5283 iterations 12
Cbc0038I Pass   7: suminf.    0.90099 (5) obj. -10.5283 iterations 32
Cbc0038I Pass   8: suminf.    0.90099 (5) obj. -10.5283 iterations 0
Cbc0038I Pass   9: suminf.    0.93113 (5) obj. -10.5283 iterations 3
Cbc0038I Pass  10: suminf.    0.93113 (5) obj. -10.5283 iterations 0
Cbc0038I Pass  11: suminf.    0.90099 (5) obj. -10.5283 iterations 3
Cbc0038I Pass  12: suminf.    1.19304 (7) obj. -10.5283 iterations 23
Cbc0038I Pass  13: suminf.    1.19304 (7) obj. -10.5283 iterations 1
Cbc0038I Pass  14: suminf.    0.92030 (4) obj. -10.5283 iterations 13
Cbc0038I Pass  15: suminf.    0.92030 (4) obj. -10.5283 iterations 0
Cbc0038I Pass  16: suminf.    0.90316 (4) obj. -10.5283 iterations 5
Cbc0038I Pass  17: suminf.    0.90316 (4) obj. -10.5283 iterations 1
Cbc0038I Pass  18: suminf.    0.92030 (4) obj. -10.5283 iterations 4
Cbc0038I Pass  19: suminf.    3.80751 (15) obj. -10.5283 iterations 27
Cbc0038I Pass  20: suminf.    2.42449 (14) obj. -10.5283 iterations 7
Cbc0038I Pass  21: suminf.    2.32817 (13) obj. -10.5283 iterations 21
Cbc0038I Pass  22: suminf.    1.20644 (4) obj. -10.5283 iterations 15
Cbc0038I Pass  23: suminf.    1.20644 (4) obj. -10.5283 iterations 0
Cbc0038I Pass  24: suminf.    1.23048 (4) obj. -10.5283 iterations 1
Cbc0038I Pass  25: suminf.    1.23048 (4) obj. -10.5283 iterations 0
Cbc0038I Pass  26: suminf.    1.20644 (4) obj. -10.5283 iterations 1
Cbc0038I Pass  27: suminf.    3.66414 (22) obj. -10.5283 iterations 25
Cbc0038I Pass  28: suminf.    2.92430 (17) obj. -10.5283 iterations 8
Cbc0038I Pass  29: suminf.    3.02550 (10) obj. -10.5283 iterations 14
Cbc0038I Pass  30: suminf.    1.74481 (10) obj. -10.5283 iterations 5
Cbc0038I Pass  31: suminf.    1.70911 (8) obj. -17.9452 iterations 2
Cbc0038I Pass  32: suminf.    2.53287 (9) obj. -10.5283 iterations 8
Cbc0038I Pass  33: suminf.    2.53287 (9) obj. -10.5283 iterations 0
Cbc0038I Rounding solution of 259.541 is better than previous of 286.92

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 91 columns, reduced to 40 rows 49 columns
Cbc0038I Mini branch and bound improved solution from 259.541 to -14.4424 (0.05 seconds)
Cbc0038I Round again with cutoff of -549.066
Cbc0038I Pass  33: suminf.    2.80554 (26) obj. -1063.75 iterations 0
Cbc0038I Pass  34: suminf.    2.80554 (26) obj. -1063.75 iterations 2
Cbc0038I Pass  35: suminf.    1.77629 (15) obj. -549.066 iterations 22
Cbc0038I Pass  36: suminf.    1.57476 (15) obj. -549.066 iterations 3
Cbc0038I Pass  37: suminf.    1.26771 (13) obj. -549.066 iterations 21
Cbc0038I Pass  38: suminf.    1.26771 (13) obj. -549.066 iterations 2
Cbc0038I Pass  39: suminf.    1.78583 (11) obj. -549.066 iterations 4
Cbc0038I Pass  40: suminf.    1.33641 (11) obj. -549.066 iterations 1
Cbc0038I Pass  41: suminf.    2.25969 (13) obj. -549.066 iterations 10
Cbc0038I Pass  42: suminf.    1.64270 (10) obj. -695.781 iterations 4
Cbc0038I Pass  43: suminf.    1.89112 (13) obj. -549.066 iterations 13
Cbc0038I Pass  44: suminf.    1.54055 (8) obj. -549.066 iterations 1
Cbc0038I Pass  45: suminf.    1.37123 (8) obj. -549.066 iterations 3
Cbc0038I Pass  46: suminf.    1.96759 (9) obj. -549.066 iterations 7
Cbc0038I Pass  47: suminf.    1.96097 (8) obj. -549.066 iterations 2
Cbc0038I Pass  48: suminf.    1.09696 (4) obj. -549.066 iterations 16
Cbc0038I Pass  49: suminf.    1.05471 (4) obj. -560.011 iterations 4
Cbc0038I Pass  50: suminf.    1.09696 (4) obj. -549.066 iterations 4
Cbc0038I Pass  51: suminf.    2.78146 (11) obj. -549.066 iterations 20
Cbc0038I Pass  52: suminf.    2.78146 (11) obj. -549.066 iterations 5
Cbc0038I Pass  53: suminf.    2.01724 (7) obj. -549.066 iterations 12
Cbc0038I Pass  54: suminf.    2.01724 (7) obj. -549.066 iterations 2
Cbc0038I Pass  55: suminf.    1.68661 (7) obj. -549.066 iterations 3
Cbc0038I Pass  56: suminf.    1.68661 (7) obj. -549.066 iterations 1
Cbc0038I Pass  57: suminf.    2.01724 (7) obj. -549.066 iterations 3
Cbc0038I Pass  58: suminf.    3.87459 (16) obj. -549.066 iterations 29
Cbc0038I Pass  59: suminf.    3.63022 (16) obj. -549.066 iterations 4
Cbc0038I Pass  60: suminf.    1.61594 (6) obj. -549.066 iterations 15
Cbc0038I Pass  61: suminf.    1.49800 (6) obj. -577.373 iterations 5
Cbc0038I Pass  62: suminf.    1.61594 (6) obj. -549.066 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 91 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -14.4424 - took 0.05 seconds
Cbc0012I Integer solution of -14.4424 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 91 columns, reduced to 14 rows 17 columns
Cbc0031I 56 added rows had average density of 25.571429
Cbc0013I At root node, 56 cuts changed objective from -2687.5608 to -636.53065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13624 row cuts average 2.1 elements, 0 column cuts (10 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1986 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 28 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1591 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 568 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.699 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.4424 best solution, best possible -636.53065 (2.27 seconds)
Cbc0012I Integer solution of -306.0348 found by DiveCoefficient after 4672 iterations and 7 nodes (2.64 seconds)
Cbc0001I Search completed - best objective -306.0348000000004, took 5024 iterations and 14 nodes (2.67 seconds)
Cbc0032I Strong branching done 376 times (9515 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 22 variables fixed on reduced cost
Total time (CPU seconds):       2.01   (Wallclock seconds):       2.68

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-16) rows, 45 (-5) columns and 249 (-36) elements
Clp1000I sum of infeasibilities 1.35813e-06 - average 1.6363e-08, 10 fixed columns
Coin0506I Presolve 57 (-26) rows, 34 (-11) columns and 175 (-74) elements
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Coin0511I After Postsolve, objective 2245.2588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 25.057703 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Coin0511I After Postsolve, objective 2245.2588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2245.258751 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 45 columns (44 integer (44 of which binary)) and 249 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.978%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 10.138
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 542.558 iterations 31
Cbc0038I Solution found of 542.558
Cbc0038I Relaxing continuous gives 542.558
Cbc0038I Rounding solution of 194.217 is better than previous of 542.558

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 45 columns, reduced to 51 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 194.217 to -306.035 (0.02 seconds)
Cbc0038I Round again with cutoff of -499.957
Cbc0038I Pass   2: suminf.    2.02003 (7) obj. -499.957 iterations 8
Cbc0038I Pass   3: suminf.    1.96827 (8) obj. -499.957 iterations 6
Cbc0038I Pass   4: suminf.    1.57789 (9) obj. -499.957 iterations 2
Cbc0038I Pass   5: suminf.    1.61649 (6) obj. -499.957 iterations 10
Cbc0038I Pass   6: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass   7: suminf.    2.57228 (8) obj. -499.957 iterations 8
Cbc0038I Pass   8: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass   9: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  10: suminf.    0.66256 (5) obj. -499.957 iterations 3
Cbc0038I Pass  11: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  12: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  13: suminf.    1.20642 (6) obj. -499.957 iterations 6
Cbc0038I Pass  14: suminf.    2.57228 (8) obj. -499.957 iterations 6
Cbc0038I Pass  15: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  16: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  17: suminf.    0.66256 (5) obj. -499.957 iterations 1
Cbc0038I Pass  18: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  19: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  20: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass  21: suminf.    2.57228 (8) obj. -499.957 iterations 6
Cbc0038I Pass  22: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  23: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  24: suminf.    0.66256 (5) obj. -499.957 iterations 1
Cbc0038I Pass  25: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  26: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  27: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass  28: suminf.    2.57228 (8) obj. -499.957 iterations 8
Cbc0038I Pass  29: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  30: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  31: suminf.    0.66256 (5) obj. -499.957 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 45 columns, reduced to 54 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -306.035 - took 0.06 seconds
Cbc0012I Integer solution of -306.0348 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 83 rows 45 columns, reduced to 51 rows 31 columns
Cbc0031I 21 added rows had average density of 31.761905
Cbc0013I At root node, 21 cuts changed objective from -2245.2588 to -1206.4414 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5687 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1299 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 182 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -306.0348000000004, took 4918 iterations and 12 nodes (0.48 seconds)
Cbc0032I Strong branching done 230 times (3858 iterations), fathomed 0 nodes and fixed 16 variables
Cbc0035I Maximum depth 4, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 91 (-6) columns and 1262 (-152) elements
Clp1000I sum of infeasibilities 9.28872e-07 - average 1.08008e-08, 84 fixed columns
Coin0506I Presolve 4 (-82) rows, 7 (-84) columns and 13 (-1249) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -297.0848
Clp0000I Optimal - objective value -297.0848
Coin0511I After Postsolve, objective -297.0848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5642239 - largest nonzero change 3.5000165e-05 ( 0.0005514513%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3023.8029
Clp0000I Optimal - objective value 3023.8029
Clp0000I Optimal - objective value 3023.8029
Coin0511I After Postsolve, objective 3023.8029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3023.802878 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 91 columns (91 integer (91 of which binary)) and 1264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 14.5316
Cbc0038I Pass   1: suminf.    2.80554 (26) obj. -1063.75 iterations 26
Cbc0038I Pass   2: suminf.    2.80554 (26) obj. -1063.75 iterations 4
Cbc0038I Pass   3: suminf.    0.17060 (4) obj. 783.106 iterations 22
Cbc0038I Solution found of 870.34
Cbc0038I Rounding solution of 293.036 is better than previous of 870.34

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 91 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 293.036 to 286.92 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.5283
Cbc0038I Pass   4: suminf.    2.80554 (26) obj. -1063.75 iterations 0
Cbc0038I Pass   5: suminf.    2.80554 (26) obj. -1063.75 iterations 2
Cbc0038I Pass   6: suminf.    1.61093 (17) obj. -10.5283 iterations 12
Cbc0038I Pass   7: suminf.    0.90099 (5) obj. -10.5283 iterations 32
Cbc0038I Pass   8: suminf.    0.90099 (5) obj. -10.5283 iterations 0
Cbc0038I Pass   9: suminf.    0.93113 (5) obj. -10.5283 iterations 3
Cbc0038I Pass  10: suminf.    0.93113 (5) obj. -10.5283 iterations 0
Cbc0038I Pass  11: suminf.    0.90099 (5) obj. -10.5283 iterations 3
Cbc0038I Pass  12: suminf.    1.19304 (7) obj. -10.5283 iterations 23
Cbc0038I Pass  13: suminf.    1.19304 (7) obj. -10.5283 iterations 1
Cbc0038I Pass  14: suminf.    0.92030 (4) obj. -10.5283 iterations 13
Cbc0038I Pass  15: suminf.    0.92030 (4) obj. -10.5283 iterations 0
Cbc0038I Pass  16: suminf.    0.90316 (4) obj. -10.5283 iterations 5
Cbc0038I Pass  17: suminf.    0.90316 (4) obj. -10.5283 iterations 1
Cbc0038I Pass  18: suminf.    0.92030 (4) obj. -10.5283 iterations 4
Cbc0038I Pass  19: suminf.    3.80751 (15) obj. -10.5283 iterations 27
Cbc0038I Pass  20: suminf.    2.42449 (14) obj. -10.5283 iterations 7
Cbc0038I Pass  21: suminf.    2.32817 (13) obj. -10.5283 iterations 21
Cbc0038I Pass  22: suminf.    1.20644 (4) obj. -10.5283 iterations 15
Cbc0038I Pass  23: suminf.    1.20644 (4) obj. -10.5283 iterations 0
Cbc0038I Pass  24: suminf.    1.23048 (4) obj. -10.5283 iterations 1
Cbc0038I Pass  25: suminf.    1.23048 (4) obj. -10.5283 iterations 0
Cbc0038I Pass  26: suminf.    1.20644 (4) obj. -10.5283 iterations 1
Cbc0038I Pass  27: suminf.    3.66414 (22) obj. -10.5283 iterations 25
Cbc0038I Pass  28: suminf.    2.92430 (17) obj. -10.5283 iterations 8
Cbc0038I Pass  29: suminf.    3.02550 (10) obj. -10.5283 iterations 14
Cbc0038I Pass  30: suminf.    1.74481 (10) obj. -10.5283 iterations 5
Cbc0038I Pass  31: suminf.    1.70911 (8) obj. -17.9452 iterations 2
Cbc0038I Pass  32: suminf.    2.53287 (9) obj. -10.5283 iterations 8
Cbc0038I Pass  33: suminf.    2.53287 (9) obj. -10.5283 iterations 0
Cbc0038I Rounding solution of 259.541 is better than previous of 286.92

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 91 columns, reduced to 40 rows 49 columns
Cbc0038I Mini branch and bound improved solution from 259.541 to -14.4424 (0.06 seconds)
Cbc0038I Round again with cutoff of -549.066
Cbc0038I Pass  33: suminf.    2.80554 (26) obj. -1063.75 iterations 0
Cbc0038I Pass  34: suminf.    2.80554 (26) obj. -1063.75 iterations 2
Cbc0038I Pass  35: suminf.    1.77629 (15) obj. -549.066 iterations 22
Cbc0038I Pass  36: suminf.    1.57476 (15) obj. -549.066 iterations 3
Cbc0038I Pass  37: suminf.    1.26771 (13) obj. -549.066 iterations 21
Cbc0038I Pass  38: suminf.    1.26771 (13) obj. -549.066 iterations 2
Cbc0038I Pass  39: suminf.    1.78583 (11) obj. -549.066 iterations 4
Cbc0038I Pass  40: suminf.    1.33641 (11) obj. -549.066 iterations 1
Cbc0038I Pass  41: suminf.    2.25969 (13) obj. -549.066 iterations 10
Cbc0038I Pass  42: suminf.    1.64270 (10) obj. -695.781 iterations 4
Cbc0038I Pass  43: suminf.    1.89112 (13) obj. -549.066 iterations 13
Cbc0038I Pass  44: suminf.    1.54055 (8) obj. -549.066 iterations 1
Cbc0038I Pass  45: suminf.    1.37123 (8) obj. -549.066 iterations 3
Cbc0038I Pass  46: suminf.    1.96759 (9) obj. -549.066 iterations 7
Cbc0038I Pass  47: suminf.    1.96097 (8) obj. -549.066 iterations 2
Cbc0038I Pass  48: suminf.    1.09696 (4) obj. -549.066 iterations 16
Cbc0038I Pass  49: suminf.    1.05471 (4) obj. -560.011 iterations 4
Cbc0038I Pass  50: suminf.    1.09696 (4) obj. -549.066 iterations 4
Cbc0038I Pass  51: suminf.    2.78146 (11) obj. -549.066 iterations 20
Cbc0038I Pass  52: suminf.    2.78146 (11) obj. -549.066 iterations 5
Cbc0038I Pass  53: suminf.    2.01724 (7) obj. -549.066 iterations 12
Cbc0038I Pass  54: suminf.    2.01724 (7) obj. -549.066 iterations 2
Cbc0038I Pass  55: suminf.    1.68661 (7) obj. -549.066 iterations 3
Cbc0038I Pass  56: suminf.    1.68661 (7) obj. -549.066 iterations 1
Cbc0038I Pass  57: suminf.    2.01724 (7) obj. -549.066 iterations 3
Cbc0038I Pass  58: suminf.    3.87459 (16) obj. -549.066 iterations 29
Cbc0038I Pass  59: suminf.    3.63022 (16) obj. -549.066 iterations 4
Cbc0038I Pass  60: suminf.    1.61594 (6) obj. -549.066 iterations 15
Cbc0038I Pass  61: suminf.    1.49800 (6) obj. -577.373 iterations 5
Cbc0038I Pass  62: suminf.    1.61594 (6) obj. -549.066 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 91 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -14.4424 - took 0.05 seconds
Cbc0012I Integer solution of -14.4424 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 91 columns, reduced to 14 rows 17 columns
Cbc0031I 56 added rows had average density of 25.571429
Cbc0013I At root node, 56 cuts changed objective from -2687.5608 to -636.53065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13624 row cuts average 2.1 elements, 0 column cuts (10 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1986 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 28 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1591 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 568 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.704 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.4424 best solution, best possible -636.53065 (2.30 seconds)
Cbc0012I Integer solution of -306.0348 found by DiveCoefficient after 4672 iterations and 7 nodes (2.69 seconds)
Cbc0001I Search completed - best objective -306.0348000000004, took 5024 iterations and 14 nodes (2.72 seconds)
Cbc0032I Strong branching done 376 times (9515 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 22 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       2.73

