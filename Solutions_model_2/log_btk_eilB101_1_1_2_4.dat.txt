Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 174 (-31) rows, 99 (-4) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 1.68054e-05 - average 9.65825e-08, 13 fixed columns
Coin0506I Presolve 151 (-23) rows, 86 (-13) columns and 467 (-71) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 1.6774414 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Coin0511I After Postsolve, objective 35.544273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Coin0511I After Postsolve, objective 35.544273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.54427308 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 99 columns (98 integer (98 of which binary)) and 545 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.48055
Cbc0038I Solution found of 2.98866
Cbc0038I Relaxing continuous gives -4.33921
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 99 columns, reduced to 84 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -7.43812
Cbc0038I Pass   1: suminf.    0.60554 (43) obj. -7.43812 iterations 65
Cbc0038I Pass   2: suminf.    1.61191 (9) obj. -7.43812 iterations 49
Cbc0038I Pass   3: suminf.    1.42938 (6) obj. -7.43812 iterations 5
Cbc0038I Pass   4: suminf.    1.39847 (6) obj. -7.43812 iterations 20
Cbc0038I Pass   5: suminf.    1.22016 (3) obj. -7.43812 iterations 8
Cbc0038I Pass   6: suminf.    1.04281 (3) obj. -7.43812 iterations 1
Cbc0038I Pass   7: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass   8: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass   9: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  10: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  11: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  12: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  13: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  14: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  15: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  16: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  17: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  18: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  19: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  20: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  21: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  22: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  23: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  24: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  25: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  26: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  27: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  28: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  29: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  30: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 99 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -4.33921 - took 0.08 seconds
Cbc0012I Integer solution of -4.33921 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 173 rows 99 columns, reduced to 84 rows 48 columns
Cbc0031I 28 added rows had average density of 58.535714
Cbc0013I At root node, 28 cuts changed objective from -35.327404 to -29.402672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16874 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1923 row cuts average 98.6 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 97.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.33921 best solution, best possible -29.402672 (1.34 seconds)
Cbc0038I Full problem 173 rows 99 columns, reduced to 73 rows 44 columns
Cbc0001I Search completed - best objective -4.33921, took 15134 iterations and 100 nodes (1.89 seconds)
Cbc0032I Strong branching done 1130 times (23510 iterations), fathomed 3 nodes and fixed 41 variables
Cbc0035I Maximum depth 41, 238 variables fixed on reduced cost
Total time (CPU seconds):       1.85   (Wallclock seconds):       1.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-78) rows, 148 (-54) columns and 2718 (-2935) elements
Clp1000I sum of infeasibilities 3.15845e-07 - average 2.5067e-09, 121 fixed columns
Coin0506I Presolve 19 (-107) rows, 27 (-121) columns and 87 (-2631) elements
Clp0006I 0  Obj 33.040565 Dual inf 0.87268449 (27)
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 3.0653319 - largest nonzero change 2.5227354e-05 ( 0.00089285843%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 33.041529
Clp0000I Optimal - objective value 33.041529
Coin0511I After Postsolve, objective 33.041529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 33.041529 Dual inf 101.137 (49)
Clp0014I Perturbing problem by 0.001% of 1.5277547 - largest nonzero change 1.4343638e-05 ( 0.00096990836%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 111.69526
Clp0000I Optimal - objective value 111.69526
Clp0000I Optimal - objective value 111.69526
Coin0511I After Postsolve, objective 111.69526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 111.6952611 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 51 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 148 columns (148 integer (148 of which binary)) and 2728 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.824%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 11.0144
Cbc0038I Pass   1: suminf.    0.56201 (23) obj. -15.2998 iterations 34
Cbc0038I Pass   2: suminf.    0.56201 (23) obj. -15.2998 iterations 1
Cbc0038I Pass   3: suminf.    0.04112 (3) obj. 19.4813 iterations 46
Cbc0038I Solution found of 22.4402
Cbc0038I Rounding solution of 16.2769 is better than previous of 22.4402

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 148 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 16.2769 to -26.5737 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.6215
Cbc0038I Pass   4: suminf.    2.50014 (45) obj. -31.6215 iterations 17
Cbc0038I Pass   5: suminf.    2.50014 (45) obj. -31.6215 iterations 0
Cbc0038I Pass   6: suminf.    3.40075 (37) obj. -31.6215 iterations 11
Cbc0038I Pass   7: suminf.    3.40075 (37) obj. -31.6215 iterations 0
Cbc0038I Pass   8: suminf.    3.32637 (20) obj. -31.6215 iterations 19
Cbc0038I Pass   9: suminf.    3.32637 (20) obj. -31.6215 iterations 0
Cbc0038I Pass  10: suminf.    2.12107 (9) obj. -31.6215 iterations 14
Cbc0038I Pass  11: suminf.    1.82840 (7) obj. -31.6215 iterations 13
Cbc0038I Pass  12: suminf.    0.33999 (4) obj. -31.6215 iterations 25
Cbc0038I Pass  13: suminf.    0.68133 (3) obj. -31.6215 iterations 22
Cbc0038I Pass  14: suminf.    4.53252 (22) obj. -31.6215 iterations 33
Cbc0038I Pass  15: suminf.    4.22270 (17) obj. -31.6215 iterations 2
Cbc0038I Pass  16: suminf.    2.78379 (12) obj. -31.6215 iterations 4
Cbc0038I Pass  17: suminf.    1.20040 (11) obj. -31.6215 iterations 15
Cbc0038I Pass  18: suminf.    1.12661 (8) obj. -31.6215 iterations 1
Cbc0038I Pass  19: suminf.    0.35180 (5) obj. -31.6215 iterations 32
Cbc0038I Pass  20: suminf.    0.35180 (5) obj. -31.6215 iterations 0
Cbc0038I Pass  21: suminf.    0.47348 (4) obj. -31.6215 iterations 22
Cbc0038I Pass  22: suminf.    0.44908 (2) obj. -31.6215 iterations 22
Cbc0038I Pass  23: suminf.    3.10489 (17) obj. -31.6215 iterations 28
Cbc0038I Pass  24: suminf.    2.84042 (14) obj. -31.6215 iterations 7
Cbc0038I Pass  25: suminf.    2.30139 (11) obj. -31.6215 iterations 3
Cbc0038I Pass  26: suminf.    0.42802 (4) obj. -31.6215 iterations 17
Cbc0038I Pass  27: suminf.    0.35180 (5) obj. -31.6215 iterations 16
Cbc0038I Pass  28: suminf.    0.47348 (4) obj. -31.6215 iterations 21
Cbc0038I Pass  29: suminf.    0.44908 (2) obj. -31.6215 iterations 20
Cbc0038I Pass  30: suminf.    1.42924 (12) obj. -31.6215 iterations 26
Cbc0038I Pass  31: suminf.    1.40926 (11) obj. -31.6215 iterations 12
Cbc0038I Pass  32: suminf.    0.46399 (3) obj. -31.6215 iterations 20
Cbc0038I Pass  33: suminf.    0.35180 (5) obj. -31.6215 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 148 columns, reduced to 29 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -26.5737 - took 0.03 seconds
Cbc0012I Integer solution of -26.57373 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 124 rows 148 columns, reduced to 0 rows 0 columns
Cbc0031I 54 added rows had average density of 35.833333
Cbc0013I At root node, 54 cuts changed objective from -77.050595 to -32.981445 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10702 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1087 row cuts average 133.4 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 800 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 469 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1526 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 394 row cuts average 63.4 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.594 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.57373 best solution, best possible -32.981445 (2.44 seconds)
Cbc0012I Integer solution of -27.42793 found by DiveCoefficient after 3955 iterations and 7 nodes (2.74 seconds)
Cbc0001I Search completed - best objective -27.42793, took 4224 iterations and 14 nodes (2.75 seconds)
Cbc0032I Strong branching done 394 times (9251 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 55 variables fixed on reduced cost
Total time (CPU seconds):       2.02   (Wallclock seconds):       2.76

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 174 (-31) rows, 99 (-4) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 1.68054e-05 - average 9.65825e-08, 13 fixed columns
Coin0506I Presolve 151 (-23) rows, 86 (-13) columns and 467 (-71) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 1.6774414 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Coin0511I After Postsolve, objective 35.544273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Coin0511I After Postsolve, objective 35.544273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.54427308 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 99 columns (98 integer (98 of which binary)) and 545 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.48055
Cbc0038I Solution found of 2.98866
Cbc0038I Relaxing continuous gives -4.33921
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 99 columns, reduced to 84 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -7.43812
Cbc0038I Pass   1: suminf.    0.60554 (43) obj. -7.43812 iterations 65
Cbc0038I Pass   2: suminf.    1.61191 (9) obj. -7.43812 iterations 49
Cbc0038I Pass   3: suminf.    1.42938 (6) obj. -7.43812 iterations 5
Cbc0038I Pass   4: suminf.    1.39847 (6) obj. -7.43812 iterations 20
Cbc0038I Pass   5: suminf.    1.22016 (3) obj. -7.43812 iterations 8
Cbc0038I Pass   6: suminf.    1.04281 (3) obj. -7.43812 iterations 1
Cbc0038I Pass   7: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass   8: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass   9: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  10: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  11: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  12: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  13: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  14: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  15: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  16: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  17: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  18: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  19: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  20: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  21: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  22: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  23: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  24: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  25: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  26: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  27: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  28: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  29: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  30: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 99 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -4.33921 - took 0.08 seconds
Cbc0012I Integer solution of -4.33921 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 173 rows 99 columns, reduced to 84 rows 48 columns
Cbc0031I 28 added rows had average density of 58.535714
Cbc0013I At root node, 28 cuts changed objective from -35.327404 to -29.402672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16874 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1923 row cuts average 98.6 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 97.7 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.33921 best solution, best possible -29.402672 (1.32 seconds)
Cbc0038I Full problem 173 rows 99 columns, reduced to 73 rows 44 columns
Cbc0001I Search completed - best objective -4.33921, took 15134 iterations and 100 nodes (1.87 seconds)
Cbc0032I Strong branching done 1130 times (23510 iterations), fathomed 3 nodes and fixed 41 variables
Cbc0035I Maximum depth 41, 238 variables fixed on reduced cost
Total time (CPU seconds):       1.83   (Wallclock seconds):       1.89

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-81) rows, 146 (-57) columns and 2631 (-3023) elements
Clp1000I sum of infeasibilities 3.25844e-07 - average 2.62777e-09, 75 fixed columns
Coin0506I Presolve 56 (-68) rows, 71 (-75) columns and 249 (-2382) elements
Clp0006I 0  Obj -28.192759 Dual inf 1.2146291 (70)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 3.5223363 - largest nonzero change 1.5019044e-05 ( 0.00040824385%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value -21.906826
Clp0000I Optimal - objective value -21.906826
Coin0511I After Postsolve, objective -21.906826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -21.906826 Dual inf 91.336437 (48)
Clp0014I Perturbing problem by 0.001% of 1.553873 - largest nonzero change 2.9445518e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 49.854611
Clp0000I Optimal - objective value 49.854611
Clp0000I Optimal - objective value 49.854611
Coin0511I After Postsolve, objective 49.854611, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.85461138 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 146 columns (146 integer (146 of which binary)) and 2643 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.786%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 5.92485
Cbc0038I Pass   1: suminf.    0.44578 (24) obj. -15.3142 iterations 36
Cbc0038I Pass   2: suminf.    0.44578 (24) obj. -15.3142 iterations 1
Cbc0038I Pass   3: suminf.    0.01136 (1) obj. 24.7738 iterations 23
Cbc0038I Solution found of 25.7624
Cbc0038I Rounding solution of 11.0563 is better than previous of 25.7624

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 146 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 5.75691
Cbc0038I Pass   4: suminf.    0.44578 (24) obj. -15.3142 iterations 0
Cbc0038I Pass   5: suminf.    0.44578 (24) obj. -15.3142 iterations 1
Cbc0038I Pass   6: suminf.    0.32125 (11) obj. 5.75691 iterations 14
Cbc0038I Pass   7: suminf.    0.16948 (11) obj. 4.23914 iterations 1
Cbc0038I Pass   8: suminf.    0.25369 (7) obj. 5.75691 iterations 18
Cbc0038I Pass   9: suminf.    0.25369 (7) obj. 5.75691 iterations 0
Cbc0038I Pass  10: suminf.    0.48679 (2) obj. 5.75691 iterations 14
Cbc0038I Pass  11: suminf.    0.05102 (1) obj. 4.7639 iterations 3
Cbc0038I Pass  12: suminf.    0.15032 (1) obj. 5.75691 iterations 1
Cbc0038I Pass  13: suminf.    0.67604 (21) obj. 2.81154 iterations 56
Cbc0038I Pass  14: suminf.    0.35646 (13) obj. 3.92958 iterations 13
Cbc0038I Pass  15: suminf.    0.35720 (5) obj. 5.75691 iterations 21
Cbc0038I Pass  16: suminf.    0.29147 (5) obj. 5.75691 iterations 2
Cbc0038I Pass  17: suminf.    0.80880 (18) obj. 5.75691 iterations 17
Cbc0038I Pass  18: suminf.    0.80880 (18) obj. 5.75691 iterations 0
Cbc0038I Pass  19: suminf.    1.04635 (8) obj. 5.75691 iterations 20
Cbc0038I Pass  20: suminf.    0.75058 (8) obj. 4.8696 iterations 3
Cbc0038I Pass  21: suminf.    1.70543 (6) obj. 5.75691 iterations 13
Cbc0038I Pass  22: suminf.    1.70543 (6) obj. 5.75691 iterations 0
Cbc0038I Pass  23: suminf.    1.71152 (6) obj. 5.75691 iterations 3
Cbc0038I Pass  24: suminf.    1.71152 (6) obj. 5.75691 iterations 1
Cbc0038I Pass  25: suminf.    1.76125 (7) obj. 5.75691 iterations 3
Cbc0038I Pass  26: suminf.    1.76125 (7) obj. 5.75691 iterations 0
Cbc0038I Pass  27: suminf.    1.83963 (8) obj. 5.75691 iterations 8
Cbc0038I Pass  28: suminf.    1.23123 (7) obj. 5.75691 iterations 8
Cbc0038I Pass  29: suminf.    1.28367 (6) obj. 5.75691 iterations 9
Cbc0038I Pass  30: suminf.    1.12067 (8) obj. 5.75691 iterations 1
Cbc0038I Pass  31: suminf.    1.57372 (6) obj. 5.75691 iterations 11
Cbc0038I Pass  32: suminf.    1.55814 (13) obj. 5.75691 iterations 25
Cbc0038I Pass  33: suminf.    0.94493 (12) obj. 3.54967 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 146 columns, reduced to 31 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 25.7624 to 7.72152 (0.07 seconds)
Cbc0038I Round again with cutoff of -3.78185
Cbc0038I Pass  33: suminf.    0.44578 (24) obj. -15.3142 iterations 0
Cbc0038I Pass  34: suminf.    0.44578 (24) obj. -15.3142 iterations 1
Cbc0038I Pass  35: suminf.    0.87766 (24) obj. -3.78185 iterations 44
Cbc0038I Pass  36: suminf.    0.87766 (24) obj. -3.78185 iterations 1
Cbc0038I Pass  37: suminf.    2.03609 (11) obj. -3.78185 iterations 37
Cbc0038I Pass  38: suminf.    2.03609 (11) obj. -3.78185 iterations 0
Cbc0038I Pass  39: suminf.    2.68951 (11) obj. -3.78185 iterations 12
Cbc0038I Pass  40: suminf.    1.92676 (10) obj. -3.78185 iterations 8
Cbc0038I Pass  41: suminf.    2.54558 (11) obj. -3.78185 iterations 9
Cbc0038I Pass  42: suminf.    1.83570 (10) obj. -3.78185 iterations 7
Cbc0038I Pass  43: suminf.    1.80950 (10) obj. -3.78185 iterations 15
Cbc0038I Pass  44: suminf.    1.80950 (10) obj. -3.78185 iterations 6
Cbc0038I Pass  45: suminf.    1.44892 (16) obj. -3.78185 iterations 20
Cbc0038I Pass  46: suminf.    1.42554 (15) obj. -3.78185 iterations 7
Cbc0038I Pass  47: suminf.    1.09153 (12) obj. -3.78185 iterations 19
Cbc0038I Pass  48: suminf.    0.92021 (11) obj. -3.78185 iterations 7
Cbc0038I Pass  49: suminf.    1.92676 (10) obj. -3.78185 iterations 14
Cbc0038I Pass  50: suminf.    1.92676 (10) obj. -3.78185 iterations 0
Cbc0038I Pass  51: suminf.    2.54558 (11) obj. -3.78185 iterations 7
Cbc0038I Pass  52: suminf.    1.83570 (10) obj. -3.78185 iterations 5
Cbc0038I Pass  53: suminf.    1.80950 (10) obj. -3.78185 iterations 12
Cbc0038I Pass  54: suminf.    1.80950 (10) obj. -3.78185 iterations 5
Cbc0038I Pass  55: suminf.    2.11111 (22) obj. -3.78185 iterations 18
Cbc0038I Pass  56: suminf.    1.47275 (20) obj. -3.78185 iterations 4
Cbc0038I Pass  57: suminf.    1.69402 (11) obj. -3.78185 iterations 21
Cbc0038I Pass  58: suminf.    1.33189 (11) obj. -3.78185 iterations 5
Cbc0038I Pass  59: suminf.    1.44946 (11) obj. -3.78185 iterations 9
Cbc0038I Pass  60: suminf.    1.33386 (12) obj. -3.78185 iterations 5
Cbc0038I Pass  61: suminf.    2.98631 (11) obj. -3.78185 iterations 8
Cbc0038I Pass  62: suminf.    2.81022 (12) obj. -3.78185 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 146 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of 7.72152 - took 0.07 seconds
Cbc0012I Integer solution of 7.721525 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 123 rows 146 columns, reduced to 21 rows 25 columns
Cbc0031I 65 added rows had average density of 53.784615
Cbc0013I At root node, 65 cuts changed objective from -41.936861 to -13.31484 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19651 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2796 row cuts average 141.3 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 76 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1324 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 589 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1135 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 402 row cuts average 86.9 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 208 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.248 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 7.721525 best solution, best possible -13.31484 (2.37 seconds)
Cbc0012I Integer solution of 7.53589 found by DiveCoefficient after 8952 iterations and 1 nodes (2.44 seconds)
Cbc0012I Integer solution of 0.195716 found by rounding after 9724 iterations and 2 nodes (3.03 seconds)
Cbc0010I After 2 nodes, 3 on tree, 0.195716 best solution, best possible -13.31484 (3.14 seconds)
Cbc0010I After 7 nodes, 8 on tree, 0.195716 best solution, best possible -13.31484 (3.85 seconds)
Cbc0012I Integer solution of -0.274474 found by rounding after 10939 iterations and 20 nodes (4.39 seconds)
Cbc0012I Integer solution of -1.61702 found by rounding after 11089 iterations and 27 nodes (4.56 seconds)
Cbc0010I After 27 nodes, 11 on tree, -1.61702 best solution, best possible -13.31484 (4.56 seconds)
Cbc0038I Full problem 123 rows 146 columns, reduced to 21 rows 29 columns
Cbc0010I After 48 nodes, 9 on tree, -1.61702 best solution, best possible -13.31484 (5.36 seconds)
Cbc0010I After 62 nodes, 8 on tree, -1.61702 best solution, best possible -13.31484 (6.07 seconds)
Cbc0010I After 80 nodes, 7 on tree, -1.61702 best solution, best possible -13.31484 (6.77 seconds)
Cbc0004I Integer solution of -2.61702 found after 14359 iterations and 83 nodes (6.84 seconds)
Cbc0038I Full problem 123 rows 146 columns, reduced to 11 rows 17 columns
Cbc0010I After 103 nodes, 7 on tree, -2.61702 best solution, best possible -13.31484 (7.54 seconds)
Cbc0010I After 120 nodes, 8 on tree, -2.61702 best solution, best possible -13.31484 (8.25 seconds)
Cbc0010I After 139 nodes, 7 on tree, -2.61702 best solution, best possible -13.31484 (8.95 seconds)
Cbc0016I Integer solution of -3.61702 found by strong branching after 16231 iterations and 145 nodes (9.17 seconds)
Cbc0010I After 158 nodes, 7 on tree, -3.61702 best solution, best possible -13.31484 (9.66 seconds)
Cbc0010I After 174 nodes, 3 on tree, -3.61702 best solution, best possible -13.31484 (10.40 seconds)
Cbc0012I Integer solution of -4.33921 found by rounding after 18588 iterations and 188 nodes (11.05 seconds)
Cbc0001I Search completed - best objective -4.33921, took 18588 iterations and 188 nodes (11.06 seconds)
Cbc0032I Strong branching done 2266 times (40217 iterations), fathomed 19 nodes and fixed 27 variables
Cbc0035I Maximum depth 20, 498 variables fixed on reduced cost
Total time (CPU seconds):       8.59   (Wallclock seconds):       11.09

