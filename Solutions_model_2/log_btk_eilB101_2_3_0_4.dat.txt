Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-62) rows, 79 (-24) columns and 438 (-165) elements
Clp1000I sum of infeasibilities 4.10346e-05 - average 2.86955e-07, 73 fixed columns
Coin0506I Presolve 5 (-138) rows, 6 (-73) columns and 16 (-422) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Coin0511I After Postsolve, objective 22010.757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2129414 - largest nonzero change 2.7285729e-05 ( 0.0023600025%) - largest zero change 2.9750873e-05
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Coin0511I After Postsolve, objective 22010.757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22010.75702 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 143 rows, 79 columns (78 integer (78 of which binary)) and 444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.202%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.51074
Cbc0038I Solution found of -20309.1
Cbc0038I Relaxing continuous gives -20309.1
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20479.3
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.04319 (1) obj. -20479.3 iterations 14
Cbc0038I Pass   2: suminf.    0.34483 (1) obj. -21667.7 iterations 5
Cbc0038I Pass   3: suminf.    1.00529 (4) obj. -20479.3 iterations 10
Cbc0038I Pass   4: suminf.    0.79874 (2) obj. -21167.9 iterations 4
Cbc0038I Pass   5: suminf.    0.16288 (1) obj. -20479.3 iterations 6
Cbc0038I Pass   6: suminf.    0.06897 (1) obj. -20849.3 iterations 5
Cbc0038I Pass   7: suminf.    0.54502 (3) obj. -20479.3 iterations 6
Cbc0038I Pass   8: suminf.    0.43434 (2) obj. -20586 iterations 3
Cbc0038I Pass   9: suminf.    0.30480 (2) obj. -20479.3 iterations 10
Cbc0038I Pass  10: suminf.    0.30480 (2) obj. -20479.3 iterations 1
Cbc0038I Pass  11: suminf.    0.57006 (2) obj. -20733.3 iterations 6
Cbc0038I Pass  12: suminf.    0.93125 (4) obj. -20479.3 iterations 17
Cbc0038I Pass  13: suminf.    0.80130 (3) obj. -20479.3 iterations 14
Cbc0038I Pass  14: suminf.    0.46328 (2) obj. -21264.8 iterations 11
Cbc0038I Pass  15: suminf.    0.03448 (1) obj. -20691.2 iterations 2
Cbc0038I Pass  16: suminf.    0.08827 (1) obj. -20479.3 iterations 5
Cbc0038I Pass  17: suminf.    0.45860 (2) obj. -21459.6 iterations 9
Cbc0038I Pass  18: suminf.    0.45860 (2) obj. -21459.6 iterations 3
Cbc0038I Pass  19: suminf.    0.14756 (1) obj. -20479.3 iterations 8
Cbc0038I Pass  20: suminf.    0.14756 (1) obj. -20479.3 iterations 1
Cbc0038I Pass  21: suminf.    0.84746 (2) obj. -20586.5 iterations 5
Cbc0038I Pass  22: suminf.    0.39857 (2) obj. -21243.9 iterations 10
Cbc0038I Pass  23: suminf.    0.39857 (2) obj. -21243.9 iterations 3
Cbc0038I Pass  24: suminf.    0.24817 (2) obj. -20479.3 iterations 11
Cbc0038I Pass  25: suminf.    0.24817 (2) obj. -20479.3 iterations 6
Cbc0038I Pass  26: suminf.    0.58289 (2) obj. -20479.3 iterations 3
Cbc0038I Pass  27: suminf.    0.27208 (3) obj. -20479.3 iterations 10
Cbc0038I Pass  28: suminf.    0.25034 (2) obj. -20479.3 iterations 10
Cbc0038I Pass  29: suminf.    0.48460 (2) obj. -20962.5 iterations 7
Cbc0038I Pass  30: suminf.    0.36993 (2) obj. -21418.3 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20309.1 to -20901 (0.02 seconds)
Cbc0038I Round again with cutoff of -21122.9
Cbc0038I Reduced cost fixing fixed 46 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.20655 (1) obj. -21122.9 iterations 0
Cbc0038I Pass  31: suminf.    0.34483 (1) obj. -21667.7 iterations 8
Cbc0038I Pass  32: suminf.    1.36803 (4) obj. -21122.9 iterations 13
Cbc0038I Pass  33: suminf.    0.87216 (3) obj. -21122.9 iterations 5
Cbc0038I Pass  34: suminf.    0.42106 (3) obj. -21122.9 iterations 11
Cbc0038I Pass  35: suminf.    0.42106 (3) obj. -21122.9 iterations 0
Cbc0038I Pass  36: suminf.    0.64906 (3) obj. -21122.9 iterations 14
Cbc0038I Pass  37: suminf.    0.38930 (2) obj. -21122.9 iterations 3
Cbc0038I Pass  38: suminf.    0.89457 (3) obj. -21122.9 iterations 7
Cbc0038I Pass  39: suminf.    0.59250 (2) obj. -21122.9 iterations 6
Cbc0038I Pass  40: suminf.    1.33705 (5) obj. -21122.9 iterations 10
Cbc0038I Pass  41: suminf.    0.40840 (4) obj. -21122.9 iterations 7
Cbc0038I Pass  42: suminf.    0.21361 (2) obj. -21122.9 iterations 12
Cbc0038I Pass  43: suminf.    0.95430 (3) obj. -21122.9 iterations 10
Cbc0038I Pass  44: suminf.    0.36842 (1) obj. -21463.3 iterations 4
Cbc0038I Pass  45: suminf.    0.05634 (1) obj. -21122.9 iterations 15
Cbc0038I Pass  46: suminf.    0.05634 (1) obj. -21122.9 iterations 5
Cbc0038I Pass  47: suminf.    0.13793 (1) obj. -21444.4 iterations 6
Cbc0038I Pass  48: suminf.    0.13793 (1) obj. -21444.4 iterations 2
Cbc0038I Pass  49: suminf.    0.37037 (2) obj. -21450.2 iterations 9
Cbc0038I Pass  50: suminf.    0.21361 (2) obj. -21122.9 iterations 14
Cbc0038I Pass  51: suminf.    0.95430 (3) obj. -21122.9 iterations 9
Cbc0038I Pass  52: suminf.    0.36842 (1) obj. -21463.3 iterations 4
Cbc0038I Pass  53: suminf.    0.90105 (2) obj. -21122.9 iterations 10
Cbc0038I Pass  54: suminf.    0.81818 (2) obj. -21480.6 iterations 8
Cbc0038I Pass  55: suminf.    0.26635 (2) obj. -21122.9 iterations 10
Cbc0038I Pass  56: suminf.    0.26635 (2) obj. -21122.9 iterations 7
Cbc0038I Pass  57: suminf.    0.71447 (2) obj. -21122.9 iterations 3
Cbc0038I Pass  58: suminf.    1.04057 (3) obj. -21122.9 iterations 9
Cbc0038I Pass  59: suminf.    1.04057 (3) obj. -21122.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20901 - took 0.02 seconds
Cbc0012I Integer solution of -20900.966 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 143 rows 79 columns, reduced to 3 rows 3 columns
Cbc0031I 6 added rows had average density of 12.166667
Cbc0013I At root node, 6 cuts changed objective from -22010.757 to -21674.69 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 46 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20900.966, took 257 iterations and 8 nodes (0.08 seconds)
Cbc0032I Strong branching done 72 times (298 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 60 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-97) rows, 120 (-82) columns and 1914 (-3739) elements
Clp1000I sum of infeasibilities 1.77853e-09 - average 1.66218e-11, 116 fixed columns
Coin0506I Presolve 4 (-103) rows, 4 (-116) columns and 12 (-1902) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Coin0511I After Postsolve, objective 22010.757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4964803 - largest nonzero change 1.1547553e-05 ( 0.00089285843%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 22070.041
Clp0000I Optimal - objective value 22070.041
Clp0000I Optimal - objective value 22070.041
Coin0511I After Postsolve, objective 22070.041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22070.0413 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 122 columns (122 integer (122 of which binary)) and 1929 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.992%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.67774
Cbc0038I Pass   1: suminf.    1.60680 (30) obj. -15159 iterations 26
Cbc0038I Pass   2: suminf.    1.60680 (30) obj. -15159 iterations 0
Cbc0038I Pass   3: suminf.    0.03704 (1) obj. -15121.3 iterations 29
Cbc0038I Solution found of -15120.3
Cbc0038I Rounding solution of -17628 is better than previous of -15120.3

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -17628 to -20309.1 (0.04 seconds)
Cbc0038I Round again with cutoff of -20484.2
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.97539 (41) obj. -20484.2 iterations 11
Cbc0038I Pass   5: suminf.    1.44787 (22) obj. -20484.2 iterations 19
Cbc0038I Pass   6: suminf.    0.28518 (6) obj. -20484.2 iterations 18
Cbc0038I Pass   7: suminf.    0.33898 (2) obj. -21679.3 iterations 10
Cbc0038I Pass   8: suminf.    0.04444 (1) obj. -20484.2 iterations 6
Cbc0038I Pass   9: suminf.    0.34483 (1) obj. -21667.7 iterations 6
Cbc0038I Pass  10: suminf.    1.84663 (12) obj. -20484.2 iterations 19
Cbc0038I Pass  11: suminf.    1.65954 (11) obj. -20484.2 iterations 6
Cbc0038I Pass  12: suminf.    0.43025 (2) obj. -20897.9 iterations 21
Cbc0038I Pass  13: suminf.    0.28442 (1) obj. -20484.2 iterations 2
Cbc0038I Pass  14: suminf.    1.30444 (8) obj. -20484.2 iterations 30
Cbc0038I Pass  15: suminf.    1.30444 (8) obj. -20484.2 iterations 2
Cbc0038I Pass  16: suminf.    1.24878 (3) obj. -20484.2 iterations 11
Cbc0038I Pass  17: suminf.    0.70730 (2) obj. -20484.2 iterations 6
Cbc0038I Pass  18: suminf.    0.75796 (2) obj. -20609.5 iterations 7
Cbc0038I Pass  19: suminf.    1.54433 (7) obj. -20484.2 iterations 15
Cbc0038I Pass  20: suminf.    1.01585 (6) obj. -20484.2 iterations 5
Cbc0038I Pass  21: suminf.    0.97650 (6) obj. -20484.2 iterations 5
Cbc0038I Pass  22: suminf.    0.71641 (2) obj. -20484.2 iterations 5
Cbc0038I Pass  23: suminf.    0.65627 (2) obj. -20484.2 iterations 1
Cbc0038I Pass  24: suminf.    0.72867 (6) obj. -20484.2 iterations 19
Cbc0038I Pass  25: suminf.    0.43743 (5) obj. -20484.2 iterations 7
Cbc0038I Pass  26: suminf.    0.22101 (2) obj. -20484.2 iterations 4
Cbc0038I Pass  27: suminf.    0.21706 (2) obj. -20484.2 iterations 1
Cbc0038I Pass  28: suminf.    1.04994 (8) obj. -20484.2 iterations 14
Cbc0038I Pass  29: suminf.    0.59515 (7) obj. -20484.2 iterations 6
Cbc0038I Pass  30: suminf.    0.22160 (2) obj. -20484.2 iterations 6
Cbc0038I Pass  31: suminf.    0.21603 (2) obj. -20484.2 iterations 1
Cbc0038I Pass  32: suminf.    1.35498 (7) obj. -20484.2 iterations 16
Cbc0038I Pass  33: suminf.    0.49121 (6) obj. -20484.2 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -20309.1 to -20901 (0.05 seconds)
Cbc0038I Round again with cutoff of -21132.8
Cbc0038I Reduced cost fixing fixed 49 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.19905 (40) obj. -21132.8 iterations 1
Cbc0038I Pass  34: suminf.    1.35905 (15) obj. -21680.7 iterations 29
Cbc0038I Pass  35: suminf.    1.18590 (15) obj. -21132.8 iterations 4
Cbc0038I Pass  36: suminf.    0.34483 (1) obj. -21667.7 iterations 19
Cbc0038I Pass  37: suminf.    0.20906 (1) obj. -21132.8 iterations 5
Cbc0038I Pass  38: suminf.    1.61626 (8) obj. -21132.8 iterations 13
Cbc0038I Pass  39: suminf.    0.61934 (6) obj. -21132.8 iterations 8
Cbc0038I Pass  40: suminf.    0.34483 (1) obj. -21665.7 iterations 11
Cbc0038I Pass  41: suminf.    0.20957 (1) obj. -21132.8 iterations 6
Cbc0038I Pass  42: suminf.    1.15532 (6) obj. -21132.8 iterations 9
Cbc0038I Pass  43: suminf.    0.77566 (5) obj. -21132.8 iterations 4
Cbc0038I Pass  44: suminf.    1.94744 (20) obj. -21132.8 iterations 22
Cbc0038I Pass  45: suminf.    1.81021 (18) obj. -21132.8 iterations 6
Cbc0038I Pass  46: suminf.    0.50783 (8) obj. -21132.8 iterations 14
Cbc0038I Pass  47: suminf.    0.68214 (3) obj. -21132.8 iterations 17
Cbc0038I Pass  48: suminf.    0.68214 (3) obj. -21132.8 iterations 0
Cbc0038I Pass  49: suminf.    0.76998 (2) obj. -21132.8 iterations 7
Cbc0038I Pass  50: suminf.    0.76998 (2) obj. -21132.8 iterations 6
Cbc0038I Pass  51: suminf.    0.65062 (2) obj. -21132.8 iterations 3
Cbc0038I Pass  52: suminf.    1.43572 (13) obj. -21132.8 iterations 17
Cbc0038I Pass  53: suminf.    1.21658 (12) obj. -21132.8 iterations 5
Cbc0038I Pass  54: suminf.    0.48982 (3) obj. -21667.6 iterations 14
Cbc0038I Pass  55: suminf.    0.35004 (3) obj. -21132.8 iterations 4
Cbc0038I Pass  56: suminf.    0.34483 (1) obj. -21665.7 iterations 7
Cbc0038I Pass  57: suminf.    0.20957 (1) obj. -21132.8 iterations 5
Cbc0038I Pass  58: suminf.    1.87704 (5) obj. -21132.8 iterations 11
Cbc0038I Pass  59: suminf.    0.51985 (3) obj. -21132.8 iterations 13
Cbc0038I Pass  60: suminf.    0.59322 (2) obj. -21482.3 iterations 9
Cbc0038I Pass  61: suminf.    0.42267 (2) obj. -21132.8 iterations 6
Cbc0038I Pass  62: suminf.    1.76697 (8) obj. -21132.8 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 21 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -20901 - took 0.04 seconds
Cbc0012I Integer solution of -20900.966 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 3 rows 3 columns
Cbc0031I 14 added rows had average density of 5.7857143
Cbc0013I At root node, 14 cuts changed objective from -22022.793 to -21522.072 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 2.5 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 40.8 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0010I After 5 nodes, 3 on tree, -20900.966 best solution, best possible -21522.072 (0.56 seconds)
Cbc0001I Search completed - best objective -20900.966, took 301 iterations and 10 nodes (0.65 seconds)
Cbc0032I Strong branching done 142 times (551 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 62 variables fixed on reduced cost
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.66

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-62) rows, 79 (-24) columns and 438 (-165) elements
Clp1000I sum of infeasibilities 4.10346e-05 - average 2.86955e-07, 73 fixed columns
Coin0506I Presolve 5 (-138) rows, 6 (-73) columns and 16 (-422) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Coin0511I After Postsolve, objective 22010.757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2129414 - largest nonzero change 2.7285729e-05 ( 0.0023600025%) - largest zero change 2.9750873e-05
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Coin0511I After Postsolve, objective 22010.757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22010.75702 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 143 rows, 79 columns (78 integer (78 of which binary)) and 444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.202%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.51074
Cbc0038I Solution found of -20309.1
Cbc0038I Relaxing continuous gives -20309.1
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20479.3
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.04319 (1) obj. -20479.3 iterations 14
Cbc0038I Pass   2: suminf.    0.34483 (1) obj. -21667.7 iterations 5
Cbc0038I Pass   3: suminf.    1.00529 (4) obj. -20479.3 iterations 10
Cbc0038I Pass   4: suminf.    0.79874 (2) obj. -21167.9 iterations 4
Cbc0038I Pass   5: suminf.    0.16288 (1) obj. -20479.3 iterations 6
Cbc0038I Pass   6: suminf.    0.06897 (1) obj. -20849.3 iterations 5
Cbc0038I Pass   7: suminf.    0.54502 (3) obj. -20479.3 iterations 6
Cbc0038I Pass   8: suminf.    0.43434 (2) obj. -20586 iterations 3
Cbc0038I Pass   9: suminf.    0.30480 (2) obj. -20479.3 iterations 10
Cbc0038I Pass  10: suminf.    0.30480 (2) obj. -20479.3 iterations 1
Cbc0038I Pass  11: suminf.    0.57006 (2) obj. -20733.3 iterations 6
Cbc0038I Pass  12: suminf.    0.93125 (4) obj. -20479.3 iterations 17
Cbc0038I Pass  13: suminf.    0.80130 (3) obj. -20479.3 iterations 14
Cbc0038I Pass  14: suminf.    0.46328 (2) obj. -21264.8 iterations 11
Cbc0038I Pass  15: suminf.    0.03448 (1) obj. -20691.2 iterations 2
Cbc0038I Pass  16: suminf.    0.08827 (1) obj. -20479.3 iterations 5
Cbc0038I Pass  17: suminf.    0.45860 (2) obj. -21459.6 iterations 9
Cbc0038I Pass  18: suminf.    0.45860 (2) obj. -21459.6 iterations 3
Cbc0038I Pass  19: suminf.    0.14756 (1) obj. -20479.3 iterations 8
Cbc0038I Pass  20: suminf.    0.14756 (1) obj. -20479.3 iterations 1
Cbc0038I Pass  21: suminf.    0.84746 (2) obj. -20586.5 iterations 5
Cbc0038I Pass  22: suminf.    0.39857 (2) obj. -21243.9 iterations 10
Cbc0038I Pass  23: suminf.    0.39857 (2) obj. -21243.9 iterations 3
Cbc0038I Pass  24: suminf.    0.24817 (2) obj. -20479.3 iterations 11
Cbc0038I Pass  25: suminf.    0.24817 (2) obj. -20479.3 iterations 6
Cbc0038I Pass  26: suminf.    0.58289 (2) obj. -20479.3 iterations 3
Cbc0038I Pass  27: suminf.    0.27208 (3) obj. -20479.3 iterations 10
Cbc0038I Pass  28: suminf.    0.25034 (2) obj. -20479.3 iterations 10
Cbc0038I Pass  29: suminf.    0.48460 (2) obj. -20962.5 iterations 7
Cbc0038I Pass  30: suminf.    0.36993 (2) obj. -21418.3 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20309.1 to -20901 (0.02 seconds)
Cbc0038I Round again with cutoff of -21122.9
Cbc0038I Reduced cost fixing fixed 46 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.20655 (1) obj. -21122.9 iterations 0
Cbc0038I Pass  31: suminf.    0.34483 (1) obj. -21667.7 iterations 8
Cbc0038I Pass  32: suminf.    1.36803 (4) obj. -21122.9 iterations 13
Cbc0038I Pass  33: suminf.    0.87216 (3) obj. -21122.9 iterations 5
Cbc0038I Pass  34: suminf.    0.42106 (3) obj. -21122.9 iterations 11
Cbc0038I Pass  35: suminf.    0.42106 (3) obj. -21122.9 iterations 0
Cbc0038I Pass  36: suminf.    0.64906 (3) obj. -21122.9 iterations 14
Cbc0038I Pass  37: suminf.    0.38930 (2) obj. -21122.9 iterations 3
Cbc0038I Pass  38: suminf.    0.89457 (3) obj. -21122.9 iterations 7
Cbc0038I Pass  39: suminf.    0.59250 (2) obj. -21122.9 iterations 6
Cbc0038I Pass  40: suminf.    1.33705 (5) obj. -21122.9 iterations 10
Cbc0038I Pass  41: suminf.    0.40840 (4) obj. -21122.9 iterations 7
Cbc0038I Pass  42: suminf.    0.21361 (2) obj. -21122.9 iterations 12
Cbc0038I Pass  43: suminf.    0.95430 (3) obj. -21122.9 iterations 10
Cbc0038I Pass  44: suminf.    0.36842 (1) obj. -21463.3 iterations 4
Cbc0038I Pass  45: suminf.    0.05634 (1) obj. -21122.9 iterations 15
Cbc0038I Pass  46: suminf.    0.05634 (1) obj. -21122.9 iterations 5
Cbc0038I Pass  47: suminf.    0.13793 (1) obj. -21444.4 iterations 6
Cbc0038I Pass  48: suminf.    0.13793 (1) obj. -21444.4 iterations 2
Cbc0038I Pass  49: suminf.    0.37037 (2) obj. -21450.2 iterations 9
Cbc0038I Pass  50: suminf.    0.21361 (2) obj. -21122.9 iterations 14
Cbc0038I Pass  51: suminf.    0.95430 (3) obj. -21122.9 iterations 9
Cbc0038I Pass  52: suminf.    0.36842 (1) obj. -21463.3 iterations 4
Cbc0038I Pass  53: suminf.    0.90105 (2) obj. -21122.9 iterations 10
Cbc0038I Pass  54: suminf.    0.81818 (2) obj. -21480.6 iterations 8
Cbc0038I Pass  55: suminf.    0.26635 (2) obj. -21122.9 iterations 10
Cbc0038I Pass  56: suminf.    0.26635 (2) obj. -21122.9 iterations 7
Cbc0038I Pass  57: suminf.    0.71447 (2) obj. -21122.9 iterations 3
Cbc0038I Pass  58: suminf.    1.04057 (3) obj. -21122.9 iterations 9
Cbc0038I Pass  59: suminf.    1.04057 (3) obj. -21122.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -20901 - took 0.04 seconds
Cbc0012I Integer solution of -20900.966 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 143 rows 79 columns, reduced to 3 rows 3 columns
Cbc0031I 6 added rows had average density of 12.166667
Cbc0013I At root node, 6 cuts changed objective from -22010.757 to -21674.69 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 46 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20900.966, took 257 iterations and 8 nodes (0.07 seconds)
Cbc0032I Strong branching done 72 times (298 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 60 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-100) rows, 118 (-85) columns and 1834 (-3820) elements
Clp1000I sum of infeasibilities 2.77719e-07 - average 2.64495e-09, 74 fixed columns
Coin0506I Presolve 17 (-88) rows, 17 (-101) columns and 59 (-1775) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 22070.041
Clp0000I Optimal - objective value 22070.041
Coin0511I After Postsolve, objective 22070.041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5009775 - largest nonzero change 1.1547553e-05 ( 0.00089285843%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 22070.041
Clp0000I Optimal - objective value 22070.041
Clp0000I Optimal - objective value 22070.041
Coin0511I After Postsolve, objective 22070.041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22070.0413 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 120 columns (120 integer (120 of which binary)) and 1847 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.906%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.11047
Cbc0038I Pass   1: suminf.    1.69914 (30) obj. -15158.9 iterations 26
Cbc0038I Pass   2: suminf.    1.69914 (30) obj. -15158.9 iterations 0
Cbc0038I Pass   3: suminf.    0.21472 (5) obj. -15125.1 iterations 25
Cbc0038I Solution found of -15120.3
Cbc0038I Rounding solution of -17628 is better than previous of -15120.3

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -17628 to -20309.1 (0.04 seconds)
Cbc0038I Round again with cutoff of -20484.2
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.39789 (41) obj. -20484.2 iterations 11
Cbc0038I Pass   5: suminf.    1.95810 (27) obj. -20484.2 iterations 14
Cbc0038I Pass   6: suminf.    0.56496 (10) obj. -20484.2 iterations 19
Cbc0038I Pass   7: suminf.    0.33898 (2) obj. -21679.3 iterations 14
Cbc0038I Pass   8: suminf.    0.04442 (1) obj. -20484.2 iterations 6
Cbc0038I Pass   9: suminf.    0.34483 (1) obj. -21667.7 iterations 6
Cbc0038I Pass  10: suminf.    2.06445 (11) obj. -20484.2 iterations 15
Cbc0038I Pass  11: suminf.    2.03074 (11) obj. -20484.2 iterations 5
Cbc0038I Pass  12: suminf.    0.04468 (1) obj. -20484.2 iterations 17
Cbc0038I Pass  13: suminf.    0.34483 (1) obj. -21666.7 iterations 6
Cbc0038I Pass  14: suminf.    2.26819 (15) obj. -20484.2 iterations 25
Cbc0038I Pass  15: suminf.    1.99485 (13) obj. -20484.2 iterations 5
Cbc0038I Pass  16: suminf.    0.93117 (3) obj. -20484.2 iterations 21
Cbc0038I Pass  17: suminf.    0.82189 (3) obj. -20484.2 iterations 2
Cbc0038I Pass  18: suminf.    0.21053 (1) obj. -20575.7 iterations 8
Cbc0038I Pass  19: suminf.    0.21053 (1) obj. -20575.7 iterations 0
Cbc0038I Pass  20: suminf.    0.59338 (2) obj. -20484.2 iterations 13
Cbc0038I Pass  21: suminf.    0.83090 (2) obj. -20893.5 iterations 7
Cbc0038I Pass  22: suminf.    1.60133 (13) obj. -20484.2 iterations 14
Cbc0038I Pass  23: suminf.    1.40022 (9) obj. -20484.2 iterations 5
Cbc0038I Pass  24: suminf.    1.14203 (8) obj. -20484.2 iterations 3
Cbc0038I Pass  25: suminf.    0.56203 (2) obj. -20484.2 iterations 7
Cbc0038I Pass  26: suminf.    0.41379 (1) obj. -21099.1 iterations 1
Cbc0038I Pass  27: suminf.    0.22870 (2) obj. -20484.2 iterations 11
Cbc0038I Pass  28: suminf.    0.61017 (2) obj. -21265.8 iterations 8
Cbc0038I Pass  29: suminf.    0.78710 (9) obj. -20484.2 iterations 19
Cbc0038I Pass  30: suminf.    0.78710 (9) obj. -20484.2 iterations 2
Cbc0038I Pass  31: suminf.    0.51146 (2) obj. -20484.2 iterations 12
Cbc0038I Pass  32: suminf.    0.24074 (2) obj. -20484.2 iterations 11
Cbc0038I Pass  33: suminf.    0.49153 (2) obj. -20998 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -20309.1 to -20745 (0.06 seconds)
Cbc0038I Round again with cutoff of -21007.9
Cbc0038I Reduced cost fixing fixed 45 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.58017 (40) obj. -21007.9 iterations 1
Cbc0038I Pass  34: suminf.    2.92149 (30) obj. -21007.9 iterations 14
Cbc0038I Pass  35: suminf.    2.18877 (22) obj. -21007.9 iterations 10
Cbc0038I Pass  36: suminf.    2.18877 (22) obj. -21007.9 iterations 2
Cbc0038I Pass  37: suminf.    0.17735 (1) obj. -21007.9 iterations 25
Cbc0038I Pass  38: suminf.    0.17735 (1) obj. -21007.9 iterations 0
Cbc0038I Pass  39: suminf.    0.34483 (1) obj. -21667.7 iterations 6
Cbc0038I Pass  40: suminf.    1.40384 (8) obj. -21007.9 iterations 21
Cbc0038I Pass  41: suminf.    1.40384 (8) obj. -21007.9 iterations 12
Cbc0038I Pass  42: suminf.    0.61385 (2) obj. -21007.9 iterations 8
Cbc0038I Pass  43: suminf.    0.70576 (2) obj. -21007.9 iterations 3
Cbc0038I Pass  44: suminf.    1.24530 (7) obj. -21007.9 iterations 11
Cbc0038I Pass  45: suminf.    0.87898 (6) obj. -21007.9 iterations 4
Cbc0038I Pass  46: suminf.    0.57246 (6) obj. -21007.9 iterations 6
Cbc0038I Pass  47: suminf.    0.84393 (3) obj. -21007.9 iterations 8
Cbc0038I Pass  48: suminf.    0.51008 (2) obj. -21007.9 iterations 6
Cbc0038I Pass  49: suminf.    0.21086 (2) obj. -21007.9 iterations 7
Cbc0038I Pass  50: suminf.    1.31505 (9) obj. -21007.9 iterations 11
Cbc0038I Pass  51: suminf.    1.31505 (9) obj. -21007.9 iterations 2
Cbc0038I Pass  52: suminf.    0.84357 (3) obj. -21007.9 iterations 13
Cbc0038I Pass  53: suminf.    0.51071 (2) obj. -21007.9 iterations 5
Cbc0038I Pass  54: suminf.    0.21053 (2) obj. -21007.9 iterations 6
Cbc0038I Pass  55: suminf.    0.82154 (7) obj. -21007.9 iterations 13
Cbc0038I Pass  56: suminf.    0.73419 (6) obj. -21007.9 iterations 13
Cbc0038I Pass  57: suminf.    1.20200 (3) obj. -21007.9 iterations 21
Cbc0038I Pass  58: suminf.    0.02739 (1) obj. -21007.9 iterations 7
Cbc0038I Pass  59: suminf.    0.13793 (1) obj. -21443.4 iterations 6
Cbc0038I Pass  60: suminf.    2.06723 (12) obj. -21007.9 iterations 14
Cbc0038I Pass  61: suminf.    0.83783 (9) obj. -21007.9 iterations 8
Cbc0038I Pass  62: suminf.    0.13793 (1) obj. -21441.4 iterations 12
Cbc0038I Rounding solution of -20901 is better than previous of -20745

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -21323.3
Cbc0038I Reduced cost fixing fixed 48 variables on major pass 4
Cbc0038I Pass  62: suminf.    4.68910 (40) obj. -21323.3 iterations 0
Cbc0038I Pass  63: suminf.    1.23622 (13) obj. -21678.8 iterations 31
Cbc0038I Pass  64: suminf.    1.12639 (13) obj. -21323.3 iterations 5
Cbc0038I Pass  65: suminf.    0.55412 (4) obj. -21670.5 iterations 15
Cbc0038I Pass  66: suminf.    0.46070 (4) obj. -21323.3 iterations 5
Cbc0038I Pass  67: suminf.    0.34483 (1) obj. -21667.7 iterations 9
Cbc0038I Pass  68: suminf.    0.25742 (1) obj. -21323.3 iterations 5
Cbc0038I Pass  69: suminf.    2.43998 (11) obj. -21323.3 iterations 13
Cbc0038I Pass  70: suminf.    0.93386 (7) obj. -21323.3 iterations 8
Cbc0038I Pass  71: suminf.    2.53447 (12) obj. -21323.3 iterations 14
Cbc0038I Pass  72: suminf.    0.90403 (10) obj. -21323.3 iterations 13
Cbc0038I Pass  73: suminf.    0.55901 (8) obj. -21353.4 iterations 5
Cbc0038I Pass  74: suminf.    0.17745 (1) obj. -21323.3 iterations 12
Cbc0038I Pass  75: suminf.    0.17241 (1) obj. -21343.1 iterations 5
Cbc0038I Pass  76: suminf.    0.76264 (9) obj. -21323.3 iterations 18
Cbc0038I Pass  77: suminf.    0.38082 (6) obj. -21349.9 iterations 9
Cbc0038I Pass  78: suminf.    0.17796 (1) obj. -21323.3 iterations 8
Cbc0038I Pass  79: suminf.    0.17241 (1) obj. -21345.1 iterations 3
Cbc0038I Pass  80: suminf.    0.81465 (8) obj. -21323.3 iterations 17
Cbc0038I Pass  81: suminf.    0.40381 (6) obj. -21351.6 iterations 8
Cbc0038I Pass  82: suminf.    0.17770 (1) obj. -21323.3 iterations 8
Cbc0038I Pass  83: suminf.    0.17241 (1) obj. -21344.1 iterations 3
Cbc0038I Pass  84: suminf.    0.55305 (7) obj. -21351.8 iterations 13
Cbc0038I Pass  85: suminf.    0.55305 (7) obj. -21351.8 iterations 4
Cbc0038I Pass  86: suminf.    0.17821 (1) obj. -21323.3 iterations 9
Cbc0038I Pass  87: suminf.    0.17241 (1) obj. -21346.1 iterations 3
Cbc0038I Pass  88: suminf.    1.56855 (10) obj. -21323.3 iterations 22
Cbc0038I Pass  89: suminf.    0.85371 (7) obj. -21323.3 iterations 15
Cbc0038I Pass  90: suminf.    0.59322 (2) obj. -21492.3 iterations 12
Cbc0038I Pass  91: suminf.    0.51076 (2) obj. -21323.3 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -20901 - took 0.06 seconds
Cbc0012I Integer solution of -20900.966 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 107 rows 120 columns, reduced to 3 rows 3 columns
Cbc0031I 14 added rows had average density of 5.6428571
Cbc0013I At root node, 14 cuts changed objective from -22022.208 to -21522.948 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 36 row cuts average 2.4 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 39.2 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0010I After 6 nodes, 2 on tree, -20900.966 best solution, best possible -21522.948 (0.56 seconds)
Cbc0001I Search completed - best objective -20900.966, took 305 iterations and 8 nodes (0.57 seconds)
Cbc0032I Strong branching done 138 times (624 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 63 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.58

