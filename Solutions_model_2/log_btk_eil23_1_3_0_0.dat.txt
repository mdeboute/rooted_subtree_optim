Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 20 (-5) columns and 105 (-30) elements
Clp1000I sum of infeasibilities 1.1877e-06 - average 3.29918e-08, 4 fixed columns
Coin0506I Presolve 29 (-7) rows, 16 (-4) columns and 83 (-22) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 4.137282 - largest nonzero change 0 ( 0%) - largest zero change 1.8429708e-05
Clp0000I Optimal - objective value 304.68514
Clp0000I Optimal - objective value 304.68514
Coin0511I After Postsolve, objective 304.68514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 304.68514
Clp0000I Optimal - objective value 304.68514
Clp0000I Optimal - objective value 304.68514
Coin0511I After Postsolve, objective 304.68514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 304.6851426 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 20 columns (19 integer (19 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.63767
Cbc0038I Pass   1: suminf.    0.42460 (1) obj. -219.464 iterations 8
Cbc0038I Solution found of -90.9955
Cbc0038I Relaxing continuous gives -90.9955
Cbc0038I Rounding solution of -117.396 is better than previous of -90.9955

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -117.396 to -128.135 (0.01 seconds)
Cbc0038I Round again with cutoff of -145.388
Cbc0038I Pass   2: suminf.    0.42460 (1) obj. -219.464 iterations 0
Cbc0038I Pass   3: suminf.    0.24362 (1) obj. -145.388 iterations 1
Cbc0038I Pass   4: suminf.    0.27661 (1) obj. -145.388 iterations 2
Cbc0038I Pass   5: suminf.    0.27661 (1) obj. -145.388 iterations 1
Cbc0038I Pass   6: suminf.    0.38492 (1) obj. -220.958 iterations 1
Cbc0038I Pass   7: suminf.    0.38492 (1) obj. -220.958 iterations 1
Cbc0038I Pass   8: suminf.    0.38492 (1) obj. -220.958 iterations 2
Cbc0038I Pass   9: suminf.    0.47376 (1) obj. -171.614 iterations 7
Cbc0038I Pass  10: suminf.    0.35630 (1) obj. -145.388 iterations 1
Cbc0038I Pass  11: suminf.    0.47376 (1) obj. -171.614 iterations 1
Cbc0038I Pass  12: suminf.    0.42927 (1) obj. -145.388 iterations 2
Cbc0038I Pass  13: suminf.    0.44121 (1) obj. -174.307 iterations 1
Cbc0038I Pass  14: suminf.    0.42927 (1) obj. -145.388 iterations 1
Cbc0038I Pass  15: suminf.    0.34140 (1) obj. -145.388 iterations 7
Cbc0038I Pass  16: suminf.    0.47862 (1) obj. -176.025 iterations 1
Cbc0038I Pass  17: suminf.    0.34140 (1) obj. -145.388 iterations 1
Cbc0038I Pass  18: suminf.    0.55877 (4) obj. -145.388 iterations 10
Cbc0038I Pass  19: suminf.    0.55877 (4) obj. -145.388 iterations 1
Cbc0038I Pass  20: suminf.    0.39021 (1) obj. -145.388 iterations 3
Cbc0038I Pass  21: suminf.    0.24611 (1) obj. -145.388 iterations 1
Cbc0038I Pass  22: suminf.    0.54584 (2) obj. -145.388 iterations 5
Cbc0038I Pass  23: suminf.    0.54584 (2) obj. -145.388 iterations 1
Cbc0038I Pass  24: suminf.    0.41667 (1) obj. -145.388 iterations 1
Cbc0038I Pass  25: suminf.    0.29676 (1) obj. -145.388 iterations 1
Cbc0038I Pass  26: suminf.    0.82873 (3) obj. -145.388 iterations 3
Cbc0038I Pass  27: suminf.    0.73746 (3) obj. -145.388 iterations 2
Cbc0038I Pass  28: suminf.    0.33730 (1) obj. -145.388 iterations 2
Cbc0038I Pass  29: suminf.    0.28518 (1) obj. -145.388 iterations 1
Cbc0038I Pass  30: suminf.    0.35700 (3) obj. -145.388 iterations 6
Cbc0038I Pass  31: suminf.    0.37698 (1) obj. -176.118 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -128.135 - took 0.03 seconds
Cbc0012I Integer solution of -128.13481 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 20 columns, reduced to 13 rows 10 columns
Cbc0012I Integer solution of -162.43338 found by DiveCoefficient after 95 iterations and 0 nodes (0.02 seconds)
Cbc0031I 16 added rows had average density of 3.8125
Cbc0013I At root node, 16 cuts changed objective from -300.66952 to -162.43338 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 182 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -162.433379, took 95 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-11) rows, 39 (-7) columns and 302 (-86) elements
Clp1000I sum of infeasibilities 4.72287e-06 - average 1.27645e-07, 20 fixed columns
Coin0506I Presolve 2 (-35) rows, 2 (-37) columns and 4 (-298) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 563.01601
Clp0000I Optimal - objective value 563.01601
Coin0511I After Postsolve, objective 563.01601, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.028278 - largest nonzero change 1.7295075e-05 ( 0.0017295075%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 563.01601
Clp0000I Optimal - objective value 563.01601
Clp0000I Optimal - objective value 563.01601
Coin0511I After Postsolve, objective 563.01601, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 563.016008 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 39 columns (39 integer (39 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.958%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.79844
Cbc0038I Pass   1: suminf.    2.22738 (6) obj. -268.363 iterations 15
Cbc0038I Solution found of -252.629
Cbc0038I Rounding solution of -284.827 is better than previous of -252.629

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -294.823
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.34589 (7) obj. -294.823 iterations 1
Cbc0038I Pass   3: suminf.    0.35228 (1) obj. -331.283 iterations 9
Cbc0038I Pass   4: suminf.    0.18898 (1) obj. -294.823 iterations 1
Cbc0038I Pass   5: suminf.    2.23459 (6) obj. -294.823 iterations 8
Cbc0038I Pass   6: suminf.    1.69883 (4) obj. -309.118 iterations 3
Cbc0038I Pass   7: suminf.    0.13107 (1) obj. -294.823 iterations 5
Cbc0038I Pass   8: suminf.    0.23081 (1) obj. -317.092 iterations 1
Cbc0038I Pass   9: suminf.    2.18462 (5) obj. -307.211 iterations 7
Cbc0038I Pass  10: suminf.    1.40000 (3) obj. -301.226 iterations 2
Cbc0038I Pass  11: suminf.    0.09807 (1) obj. -294.823 iterations 4
Cbc0038I Pass  12: suminf.    0.21623 (1) obj. -321.204 iterations 1
Cbc0038I Pass  13: suminf.    1.06016 (4) obj. -294.823 iterations 7
Cbc0038I Pass  14: suminf.    0.62740 (2) obj. -294.823 iterations 3
Cbc0038I Pass  15: suminf.    0.31341 (1) obj. -307.819 iterations 2
Cbc0038I Pass  16: suminf.    0.25520 (1) obj. -294.823 iterations 1
Cbc0038I Pass  17: suminf.    0.54545 (2) obj. -294.823 iterations 3
Cbc0038I Pass  18: suminf.    0.24397 (1) obj. -294.823 iterations 2
Cbc0038I Pass  19: suminf.    0.27089 (1) obj. -300.834 iterations 1
Cbc0038I Pass  20: suminf.    1.57118 (4) obj. -294.823 iterations 8
Cbc0038I Pass  21: suminf.    1.12372 (3) obj. -294.823 iterations 3
Cbc0038I Pass  22: suminf.    0.28855 (1) obj. -294.823 iterations 2
Cbc0038I Pass  23: suminf.    0.31584 (1) obj. -300.916 iterations 1
Cbc0038I Pass  24: suminf.    3.02069 (8) obj. -294.823 iterations 15
Cbc0038I Pass  25: suminf.    2.07803 (6) obj. -294.823 iterations 4
Cbc0038I Pass  26: suminf.    1.61222 (5) obj. -294.823 iterations 1
Cbc0038I Pass  27: suminf.    0.32191 (1) obj. -317.525 iterations 5
Cbc0038I Pass  28: suminf.    0.22023 (1) obj. -294.823 iterations 1
Cbc0038I Pass  29: suminf.    1.75282 (8) obj. -300.683 iterations 17
Cbc0038I Pass  30: suminf.    0.14194 (1) obj. -294.823 iterations 9
Cbc0038I Pass  31: suminf.    0.15792 (1) obj. -298.391 iterations 1
Cbc0038I Rounding solution of -287.028 is better than previous of -284.827

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 39 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -287.028 to -289.768 (0.03 seconds)
Cbc0038I Round again with cutoff of -312.816
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.42648 (7) obj. -312.816 iterations 0
Cbc0038I Pass  32: suminf.    0.35228 (1) obj. -331.283 iterations 9
Cbc0038I Pass  33: suminf.    0.26957 (1) obj. -312.816 iterations 1
Cbc0038I Pass  34: suminf.    0.75496 (4) obj. -312.816 iterations 6
Cbc0038I Pass  35: suminf.    0.25062 (2) obj. -312.816 iterations 2
Cbc0038I Pass  36: suminf.    0.48000 (2) obj. -326.596 iterations 2
Cbc0038I Pass  37: suminf.    1.06714 (6) obj. -312.816 iterations 8
Cbc0038I Pass  38: suminf.    0.28049 (5) obj. -312.816 iterations 3
Cbc0038I Pass  39: suminf.    0.59155 (2) obj. -329.315 iterations 5
Cbc0038I Pass  40: suminf.    0.31693 (2) obj. -312.816 iterations 1
Cbc0038I Pass  41: suminf.    2.00963 (6) obj. -312.816 iterations 11
Cbc0038I Pass  42: suminf.    1.99325 (6) obj. -312.816 iterations 4
Cbc0038I Pass  43: suminf.    1.55904 (5) obj. -312.816 iterations 1
Cbc0038I Pass  44: suminf.    0.66519 (2) obj. -312.816 iterations 6
Cbc0038I Pass  45: suminf.    0.36531 (1) obj. -312.816 iterations 1
Cbc0038I Pass  46: suminf.    0.39480 (1) obj. -319.399 iterations 1
Cbc0038I Pass  47: suminf.    1.26961 (4) obj. -312.816 iterations 6
Cbc0038I Pass  48: suminf.    0.33131 (1) obj. -312.816 iterations 3
Cbc0038I Pass  49: suminf.    0.39480 (1) obj. -326.991 iterations 1
Cbc0038I Pass  50: suminf.    1.64663 (5) obj. -312.816 iterations 7
Cbc0038I Pass  51: suminf.    0.63642 (2) obj. -312.816 iterations 3
Cbc0038I Pass  52: suminf.    0.36443 (1) obj. -324.511 iterations 2
Cbc0038I Pass  53: suminf.    0.31205 (1) obj. -312.816 iterations 1
Cbc0038I Pass  54: suminf.    0.89739 (4) obj. -312.816 iterations 6
Cbc0038I Pass  55: suminf.    0.58823 (3) obj. -312.816 iterations 1
Cbc0038I Pass  56: suminf.    0.47865 (2) obj. -322.464 iterations 5
Cbc0038I Pass  57: suminf.    0.31806 (2) obj. -312.816 iterations 1
Cbc0038I Pass  58: suminf.    1.29290 (4) obj. -312.816 iterations 7
Cbc0038I Pass  59: suminf.    1.02095 (4) obj. -312.816 iterations 2
Cbc0038I Pass  60: suminf.    0.59236 (2) obj. -331.968 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 39 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -289.768 - took 0.02 seconds
Cbc0012I Integer solution of -289.76814 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 10
Cbc0013I At root node, 1 cuts changed objective from -350.46362 to -293.39552 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 5.6 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -289.7681399999999, took 31 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 20 (-5) columns and 105 (-30) elements
Clp1000I sum of infeasibilities 1.1877e-06 - average 3.29918e-08, 4 fixed columns
Coin0506I Presolve 29 (-7) rows, 16 (-4) columns and 83 (-22) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 4.137282 - largest nonzero change 0 ( 0%) - largest zero change 1.8429708e-05
Clp0000I Optimal - objective value 304.68514
Clp0000I Optimal - objective value 304.68514
Coin0511I After Postsolve, objective 304.68514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 304.68514
Clp0000I Optimal - objective value 304.68514
Clp0000I Optimal - objective value 304.68514
Coin0511I After Postsolve, objective 304.68514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 304.6851426 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 20 columns (19 integer (19 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.63767
Cbc0038I Pass   1: suminf.    0.42460 (1) obj. -219.464 iterations 8
Cbc0038I Solution found of -90.9955
Cbc0038I Relaxing continuous gives -90.9955
Cbc0038I Rounding solution of -117.396 is better than previous of -90.9955

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -117.396 to -128.135 (0.01 seconds)
Cbc0038I Round again with cutoff of -145.388
Cbc0038I Pass   2: suminf.    0.42460 (1) obj. -219.464 iterations 0
Cbc0038I Pass   3: suminf.    0.24362 (1) obj. -145.388 iterations 1
Cbc0038I Pass   4: suminf.    0.27661 (1) obj. -145.388 iterations 2
Cbc0038I Pass   5: suminf.    0.27661 (1) obj. -145.388 iterations 1
Cbc0038I Pass   6: suminf.    0.38492 (1) obj. -220.958 iterations 1
Cbc0038I Pass   7: suminf.    0.38492 (1) obj. -220.958 iterations 1
Cbc0038I Pass   8: suminf.    0.38492 (1) obj. -220.958 iterations 2
Cbc0038I Pass   9: suminf.    0.47376 (1) obj. -171.614 iterations 7
Cbc0038I Pass  10: suminf.    0.35630 (1) obj. -145.388 iterations 1
Cbc0038I Pass  11: suminf.    0.47376 (1) obj. -171.614 iterations 1
Cbc0038I Pass  12: suminf.    0.42927 (1) obj. -145.388 iterations 2
Cbc0038I Pass  13: suminf.    0.44121 (1) obj. -174.307 iterations 1
Cbc0038I Pass  14: suminf.    0.42927 (1) obj. -145.388 iterations 1
Cbc0038I Pass  15: suminf.    0.34140 (1) obj. -145.388 iterations 7
Cbc0038I Pass  16: suminf.    0.47862 (1) obj. -176.025 iterations 1
Cbc0038I Pass  17: suminf.    0.34140 (1) obj. -145.388 iterations 1
Cbc0038I Pass  18: suminf.    0.55877 (4) obj. -145.388 iterations 10
Cbc0038I Pass  19: suminf.    0.55877 (4) obj. -145.388 iterations 1
Cbc0038I Pass  20: suminf.    0.39021 (1) obj. -145.388 iterations 3
Cbc0038I Pass  21: suminf.    0.24611 (1) obj. -145.388 iterations 1
Cbc0038I Pass  22: suminf.    0.54584 (2) obj. -145.388 iterations 5
Cbc0038I Pass  23: suminf.    0.54584 (2) obj. -145.388 iterations 1
Cbc0038I Pass  24: suminf.    0.41667 (1) obj. -145.388 iterations 1
Cbc0038I Pass  25: suminf.    0.29676 (1) obj. -145.388 iterations 1
Cbc0038I Pass  26: suminf.    0.82873 (3) obj. -145.388 iterations 3
Cbc0038I Pass  27: suminf.    0.73746 (3) obj. -145.388 iterations 2
Cbc0038I Pass  28: suminf.    0.33730 (1) obj. -145.388 iterations 2
Cbc0038I Pass  29: suminf.    0.28518 (1) obj. -145.388 iterations 1
Cbc0038I Pass  30: suminf.    0.35700 (3) obj. -145.388 iterations 6
Cbc0038I Pass  31: suminf.    0.37698 (1) obj. -176.118 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -128.135 - took 0.01 seconds
Cbc0012I Integer solution of -128.13481 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 20 columns, reduced to 13 rows 10 columns
Cbc0012I Integer solution of -162.43338 found by DiveCoefficient after 95 iterations and 0 nodes (0.02 seconds)
Cbc0031I 16 added rows had average density of 3.8125
Cbc0013I At root node, 16 cuts changed objective from -300.66952 to -162.43338 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 182 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -162.433379, took 95 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 37 (-10) columns and 273 (-116) elements
Clp1000I sum of infeasibilities 1.35144e-06 - average 3.86126e-08, 34 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-37) columns and 0 (-273) elements
Clp0000I Optimal - objective value 229.06351
Clp0000I Optimal - objective value 229.06351
Coin0511I After Postsolve, objective 229.06351, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4344287 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 380.40349
Clp0000I Optimal - objective value 380.40349
Clp0000I Optimal - objective value 380.40349
Coin0511I After Postsolve, objective 380.40349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 380.4034863 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 38 columns (38 integer (38 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.886%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 3.70714
Cbc0038I Pass   1: suminf.    0.91137 (5) obj. -224.532 iterations 12
Cbc0038I Pass   2: suminf.    0.91137 (5) obj. -224.532 iterations 0
Cbc0038I Solution found of -44.4247
Cbc0038I Rounding solution of -103.484 is better than previous of -44.4247

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -118.307
Cbc0038I Pass   3: suminf.    0.91137 (5) obj. -224.532 iterations 0
Cbc0038I Pass   4: suminf.    0.91137 (5) obj. -224.532 iterations 0
Cbc0038I Pass   5: suminf.    0.33091 (1) obj. -118.307 iterations 5
Cbc0038I Pass   6: suminf.    0.25899 (1) obj. -209.87 iterations 1
Cbc0038I Pass   7: suminf.    2.05523 (5) obj. -118.307 iterations 11
Cbc0038I Pass   8: suminf.    1.57335 (4) obj. -118.307 iterations 2
Cbc0038I Pass   9: suminf.    0.56781 (2) obj. -168.534 iterations 3
Cbc0038I Pass  10: suminf.    0.39747 (1) obj. -159.361 iterations 1
Cbc0038I Pass  11: suminf.    0.41865 (1) obj. -118.307 iterations 1
Cbc0038I Pass  12: suminf.    1.74209 (5) obj. -118.307 iterations 7
Cbc0038I Pass  13: suminf.    1.59064 (5) obj. -128.757 iterations 1
Cbc0038I Pass  14: suminf.    0.32743 (1) obj. -118.307 iterations 6
Cbc0038I Pass  15: suminf.    0.41205 (1) obj. -176.473 iterations 1
Cbc0038I Pass  16: suminf.    1.18621 (4) obj. -118.307 iterations 10
Cbc0038I Pass  17: suminf.    0.87192 (3) obj. -118.307 iterations 2
Cbc0038I Pass  18: suminf.    0.30847 (1) obj. -122.968 iterations 3
Cbc0038I Pass  19: suminf.    0.28759 (1) obj. -118.307 iterations 1
Cbc0038I Pass  20: suminf.    0.69439 (3) obj. -118.307 iterations 5
Cbc0038I Pass  21: suminf.    0.30940 (2) obj. -118.307 iterations 2
Cbc0038I Pass  22: suminf.    0.51454 (2) obj. -130.459 iterations 1
Cbc0038I Pass  23: suminf.    0.70552 (3) obj. -118.307 iterations 10
Cbc0038I Pass  24: suminf.    0.56367 (3) obj. -118.307 iterations 1
Cbc0038I Pass  25: suminf.    0.56568 (2) obj. -124.318 iterations 2
Cbc0038I Pass  26: suminf.    0.46422 (2) obj. -118.307 iterations 1
Cbc0038I Pass  27: suminf.    3.09444 (8) obj. -118.307 iterations 16
Cbc0038I Pass  28: suminf.    2.90670 (7) obj. -118.307 iterations 1
Cbc0038I Pass  29: suminf.    0.55899 (2) obj. -118.307 iterations 7
Cbc0038I Pass  30: suminf.    0.21546 (1) obj. -118.307 iterations 1
Cbc0038I Pass  31: suminf.    0.22222 (1) obj. -119.817 iterations 1
Cbc0038I Pass  32: suminf.    2.60123 (8) obj. -118.307 iterations 18
Cbc0038I Rounding solution of -105.28 is better than previous of -103.484

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 38 columns, reduced to 23 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -105.28 to -119.597 (0.02 seconds)
Cbc0038I Round again with cutoff of -146.021
Cbc0038I Pass  32: suminf.    0.91137 (5) obj. -224.532 iterations 0
Cbc0038I Pass  33: suminf.    0.91137 (5) obj. -224.532 iterations 0
Cbc0038I Pass  34: suminf.    0.45504 (1) obj. -146.021 iterations 5
Cbc0038I Pass  35: suminf.    0.25899 (1) obj. -209.87 iterations 1
Cbc0038I Pass  36: suminf.    0.79850 (3) obj. -146.021 iterations 9
Cbc0038I Pass  37: suminf.    0.42520 (1) obj. -146.021 iterations 5
Cbc0038I Pass  38: suminf.    0.49806 (1) obj. -163.156 iterations 1
Cbc0038I Pass  39: suminf.    0.88922 (2) obj. -146.021 iterations 7
Cbc0038I Pass  40: suminf.    0.80704 (3) obj. -146.021 iterations 1
Cbc0038I Pass  41: suminf.    0.59319 (2) obj. -177.881 iterations 2
Cbc0038I Pass  42: suminf.    0.47012 (1) obj. -171.254 iterations 1
Cbc0038I Pass  43: suminf.    0.41687 (1) obj. -146.021 iterations 1
Cbc0038I Pass  44: suminf.    2.23120 (7) obj. -146.021 iterations 12
Cbc0038I Pass  45: suminf.    1.30766 (5) obj. -146.021 iterations 4
Cbc0038I Pass  46: suminf.    0.58211 (2) obj. -185.056 iterations 4
Cbc0038I Pass  47: suminf.    0.33529 (1) obj. -146.021 iterations 2
Cbc0038I Pass  48: suminf.    0.48413 (1) obj. -179.252 iterations 1
Cbc0038I Pass  49: suminf.    1.06684 (4) obj. -146.021 iterations 7
Cbc0038I Pass  50: suminf.    1.06684 (4) obj. -146.021 iterations 0
Cbc0038I Pass  51: suminf.    0.58245 (2) obj. -180.553 iterations 3
Cbc0038I Pass  52: suminf.    0.35989 (1) obj. -146.021 iterations 2
Cbc0038I Pass  53: suminf.    0.48955 (1) obj. -174.972 iterations 1
Cbc0038I Pass  54: suminf.    1.13333 (4) obj. -146.021 iterations 8
Cbc0038I Pass  55: suminf.    0.99558 (3) obj. -146.021 iterations 2
Cbc0038I Pass  56: suminf.    0.31987 (2) obj. -146.021 iterations 3
Cbc0038I Pass  57: suminf.    0.31987 (2) obj. -146.021 iterations 0
Cbc0038I Pass  58: suminf.    0.46103 (2) obj. -155.522 iterations 2
Cbc0038I Pass  59: suminf.    1.42295 (5) obj. -146.021 iterations 9
Cbc0038I Pass  60: suminf.    1.06635 (3) obj. -146.021 iterations 3
Cbc0038I Pass  61: suminf.    0.39035 (2) obj. -146.021 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -119.597 - took 0.02 seconds
Cbc0012I Integer solution of -119.59734 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -162.43338 found by DiveCoefficient after 39 iterations and 0 nodes (0.03 seconds)
Cbc0031I 13 added rows had average density of 2.6153846
Cbc0013I At root node, 13 cuts changed objective from -251.71758 to -162.43338 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 47 row cuts average 2.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 29 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -162.433379, took 39 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

