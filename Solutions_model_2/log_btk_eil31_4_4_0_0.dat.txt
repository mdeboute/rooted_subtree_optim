Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 1.19235e-05 - average 2.59207e-07, 16 fixed columns
Coin0506I Presolve 15 (-31) rows, 9 (-16) columns and 42 (-93) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Coin0511I After Postsolve, objective 2732.0168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Coin0511I After Postsolve, objective 2732.0168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2732.016771 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 25 columns (24 integer (24 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.196%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.363636
Cbc0038I Pass   1: suminf.    0.27153 (3) obj. -2242.13 iterations 3
Cbc0038I Solution found of 2.75894
Cbc0038I Relaxing continuous gives -14.4007
Cbc0038I Rounding solution of -1185.28 is better than previous of -14.4007

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -1185.28 to -1242.79 (0.01 seconds)
Cbc0038I Round again with cutoff of -1344.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27153 (3) obj. -2242.13 iterations 0
Cbc0038I Pass   3: suminf.    0.16587 (2) obj. -1344.2 iterations 7
Cbc0038I Pass   4: suminf.    0.16587 (2) obj. -1344.2 iterations 0
Cbc0038I Pass   5: suminf.    0.42722 (3) obj. -1344.2 iterations 4
Cbc0038I Pass   6: suminf.    0.42722 (3) obj. -1344.2 iterations 0
Cbc0038I Pass   7: suminf.    0.12710 (3) obj. -1344.2 iterations 4
Cbc0038I Pass   8: suminf.    0.91525 (3) obj. -1558.49 iterations 6
Cbc0038I Pass   9: suminf.    0.24849 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  10: suminf.    0.34286 (1) obj. -1608.92 iterations 3
Cbc0038I Pass  11: suminf.    0.13575 (1) obj. -1344.2 iterations 1
Cbc0038I Pass  12: suminf.    2.94118 (7) obj. -1344.2 iterations 10
Cbc0038I Pass  13: suminf.    0.25442 (2) obj. -1344.2 iterations 9
Cbc0038I Pass  14: suminf.    0.31429 (1) obj. -1584.22 iterations 2
Cbc0038I Pass  15: suminf.    0.12650 (1) obj. -1344.2 iterations 1
Cbc0038I Pass  16: suminf.    0.56153 (4) obj. -1344.2 iterations 3
Cbc0038I Pass  17: suminf.    0.38723 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  18: suminf.    0.49555 (3) obj. -1344.2 iterations 9
Cbc0038I Pass  19: suminf.    0.49555 (3) obj. -1344.2 iterations 0
Cbc0038I Pass  20: suminf.    0.62069 (2) obj. -1582.3 iterations 6
Cbc0038I Pass  21: suminf.    0.10979 (1) obj. -1344.2 iterations 2
Cbc0038I Pass  22: suminf.    0.17143 (1) obj. -1422.99 iterations 1
Cbc0038I Pass  23: suminf.    0.22102 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  24: suminf.    0.17143 (1) obj. -1422.99 iterations 3
Cbc0038I Pass  25: suminf.    0.55467 (3) obj. -1344.2 iterations 6
Cbc0038I Pass  26: suminf.    0.11265 (1) obj. -1344.2 iterations 4
Cbc0038I Pass  27: suminf.    0.17143 (1) obj. -1419.34 iterations 2
Cbc0038I Pass  28: suminf.    0.52190 (3) obj. -1344.2 iterations 6
Cbc0038I Pass  29: suminf.    0.16399 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  30: suminf.    0.20715 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  31: suminf.    0.16949 (3) obj. -1344.2 iterations 1
Cbc0038I Rounding solution of -1266.43 is better than previous of -1242.79

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 37 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1266.43 to -1275.13 (0.01 seconds)
Cbc0038I Round again with cutoff of -1526.74
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27153 (3) obj. -2242.13 iterations 0
Cbc0038I Pass  32: suminf.    0.49060 (2) obj. -1526.74 iterations 5
Cbc0038I Pass  33: suminf.    0.49060 (2) obj. -1526.74 iterations 0
Cbc0038I Pass  34: suminf.    1.18326 (4) obj. -1526.74 iterations 7
Cbc0038I Pass  35: suminf.    0.85438 (3) obj. -1526.74 iterations 1
Cbc0038I Pass  36: suminf.    1.10350 (3) obj. -1526.74 iterations 2
Cbc0038I Pass  37: suminf.    0.98106 (3) obj. -1746.85 iterations 1
Cbc0038I Pass  38: suminf.    0.87431 (4) obj. -1526.74 iterations 3
Cbc0038I Pass  39: suminf.    2.17575 (7) obj. -1526.74 iterations 9
Cbc0038I Pass  40: suminf.    0.85242 (3) obj. -1526.74 iterations 7
Cbc0038I Pass  41: suminf.    0.96552 (2) obj. -1762.3 iterations 5
Cbc0038I Pass  42: suminf.    0.57917 (2) obj. -1526.74 iterations 2
Cbc0038I Pass  43: suminf.    1.28077 (5) obj. -1526.74 iterations 8
Cbc0038I Pass  44: suminf.    0.51033 (2) obj. -1526.74 iterations 4
Cbc0038I Pass  45: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  46: suminf.    0.94079 (4) obj. -1526.74 iterations 8
Cbc0038I Pass  47: suminf.    0.94079 (4) obj. -1526.74 iterations 0
Cbc0038I Pass  48: suminf.    0.86207 (2) obj. -1865.64 iterations 5
Cbc0038I Pass  49: suminf.    0.58207 (2) obj. -1526.74 iterations 1
Cbc0038I Pass  50: suminf.    0.78634 (4) obj. -1526.74 iterations 9
Cbc0038I Pass  51: suminf.    0.63344 (3) obj. -1526.74 iterations 4
Cbc0038I Pass  52: suminf.    0.73146 (3) obj. -1526.74 iterations 3
Cbc0038I Pass  53: suminf.    0.51033 (2) obj. -1526.74 iterations 1
Cbc0038I Pass  54: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  55: suminf.    0.93103 (2) obj. -1867.34 iterations 3
Cbc0038I Pass  56: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  57: suminf.    0.82759 (2) obj. -1911.59 iterations 3
Cbc0038I Pass  58: suminf.    0.82759 (2) obj. -1911.59 iterations 0
Cbc0038I Pass  59: suminf.    0.54120 (2) obj. -1526.74 iterations 3
Cbc0038I Pass  60: suminf.    1.44165 (4) obj. -1526.74 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1275.13 - took 0.04 seconds
Cbc0012I Integer solution of -1275.1259 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 44 rows 25 columns, reduced to 16 rows 9 columns
Cbc0012I Integer solution of -1275.168 found by DiveCoefficient after 1021 iterations and 0 nodes (1.28 seconds)
Cbc0031I 10 added rows had average density of 11.1
Cbc0013I At root node, 10 cuts changed objective from -2256.9162 to -1290.6442 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 368 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.693 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1275.168 best solution, best possible -1290.644 (1.29 seconds)
Cbc0012I Integer solution of -1276.3181 found by DiveCoefficient after 1024 iterations and 1 nodes (1.30 seconds)
Cbc0001I Search completed - best objective -1276.31807, took 1089 iterations and 4 nodes (1.36 seconds)
Cbc0032I Strong branching done 28 times (165 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-16) rows, 50 (-12) columns and 463 (-185) elements
Clp1000I sum of infeasibilities 3.08934e-08 - average 6.43613e-10, 42 fixed columns
Coin0506I Presolve 7 (-41) rows, 8 (-42) columns and 26 (-437) elements
Clp0006I 0  Obj 2710.2386 Dual inf 47.246882 (8)
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 2710.2885
Clp0000I Optimal - objective value 2710.2885
Coin0511I After Postsolve, objective 2710.2885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2710.2885 Dual inf 44.723294 (21)
Clp0014I Perturbing problem by 0.001% of 1.6701851 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 2746.8702
Clp0000I Optimal - objective value 2746.8702
Clp0000I Optimal - objective value 2746.8702
Coin0511I After Postsolve, objective 2746.8702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2746.87018 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 2.62324
Cbc0038I Pass   1: suminf.    0.27153 (3) obj. -2241.29 iterations 21
Cbc0038I Solution found of 3.59931
Cbc0038I Rounding solution of -1242.79 is better than previous of 3.59931

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1344.43
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27153 (3) obj. -2241.29 iterations 0
Cbc0038I Pass   3: suminf.    0.16624 (2) obj. -1344.43 iterations 6
Cbc0038I Pass   4: suminf.    0.16624 (2) obj. -1344.43 iterations 0
Cbc0038I Pass   5: suminf.    0.43507 (3) obj. -1344.43 iterations 4
Cbc0038I Pass   6: suminf.    0.43507 (3) obj. -1344.43 iterations 0
Cbc0038I Pass   7: suminf.    0.15570 (3) obj. -1344.43 iterations 1
Cbc0038I Pass   8: suminf.    0.52716 (5) obj. -1344.43 iterations 6
Cbc0038I Pass   9: suminf.    0.52716 (5) obj. -1344.43 iterations 1
Cbc0038I Pass  10: suminf.    0.75862 (2) obj. -1894.55 iterations 11
Cbc0038I Pass  11: suminf.    0.63768 (2) obj. -1981.9 iterations 3
Cbc0038I Pass  12: suminf.    0.12832 (1) obj. -1344.43 iterations 2
Cbc0038I Pass  13: suminf.    0.43089 (1) obj. -1731.16 iterations 1
Cbc0038I Pass  14: suminf.    2.05423 (10) obj. -1344.43 iterations 15
Cbc0038I Pass  15: suminf.    1.54525 (8) obj. -1344.43 iterations 4
Cbc0038I Pass  16: suminf.    0.63768 (2) obj. -1571.9 iterations 7
Cbc0038I Pass  17: suminf.    0.23355 (2) obj. -1344.43 iterations 3
Cbc0038I Pass  18: suminf.    0.43089 (1) obj. -1734.16 iterations 2
Cbc0038I Pass  19: suminf.    0.12598 (1) obj. -1344.43 iterations 1
Cbc0038I Pass  20: suminf.    2.06892 (7) obj. -1344.43 iterations 7
Cbc0038I Pass  21: suminf.    0.77462 (5) obj. -1344.43 iterations 2
Cbc0038I Pass  22: suminf.    0.42673 (3) obj. -1344.43 iterations 2
Cbc0038I Pass  23: suminf.    0.31429 (1) obj. -1566.22 iterations 3
Cbc0038I Pass  24: suminf.    0.14076 (1) obj. -1344.43 iterations 1
Cbc0038I Pass  25: suminf.    1.08175 (5) obj. -1344.43 iterations 7
Cbc0038I Pass  26: suminf.    1.08175 (5) obj. -1344.43 iterations 1
Cbc0038I Pass  27: suminf.    0.82759 (2) obj. -1691.75 iterations 4
Cbc0038I Pass  28: suminf.    0.24586 (2) obj. -1344.43 iterations 2
Cbc0038I Pass  29: suminf.    0.17143 (1) obj. -1407.34 iterations 2
Cbc0038I Pass  30: suminf.    0.12222 (1) obj. -1344.43 iterations 1
Cbc0038I Pass  31: suminf.    1.25898 (9) obj. -1344.43 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 3.59931 to -1276.32 (0.04 seconds)
Cbc0038I Round again with cutoff of -1527.39
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27153 (3) obj. -2241.29 iterations 0
Cbc0038I Pass  32: suminf.    0.49171 (2) obj. -1527.39 iterations 4
Cbc0038I Pass  33: suminf.    0.49171 (2) obj. -1527.39 iterations 0
Cbc0038I Pass  34: suminf.    1.90810 (7) obj. -1527.39 iterations 13
Cbc0038I Pass  35: suminf.    0.92970 (5) obj. -1527.39 iterations 7
Cbc0038I Pass  36: suminf.    0.93103 (2) obj. -1848.34 iterations 5
Cbc0038I Pass  37: suminf.    0.54256 (2) obj. -1527.39 iterations 2
Cbc0038I Pass  38: suminf.    0.76493 (4) obj. -1527.39 iterations 6
Cbc0038I Pass  39: suminf.    0.76493 (4) obj. -1527.39 iterations 1
Cbc0038I Pass  40: suminf.    0.82759 (2) obj. -1897.59 iterations 4
Cbc0038I Pass  41: suminf.    0.56523 (2) obj. -1527.39 iterations 1
Cbc0038I Pass  42: suminf.    0.83514 (5) obj. -1527.39 iterations 4
Cbc0038I Pass  43: suminf.    0.82759 (2) obj. -1896.59 iterations 5
Cbc0038I Pass  44: suminf.    0.56687 (2) obj. -1527.39 iterations 1
Cbc0038I Pass  45: suminf.    3.36605 (11) obj. -1527.39 iterations 12
Cbc0038I Pass  46: suminf.    1.48493 (7) obj. -1527.39 iterations 5
Cbc0038I Pass  47: suminf.    0.65517 (2) obj. -1981.74 iterations 7
Cbc0038I Pass  48: suminf.    0.59961 (2) obj. -1527.39 iterations 2
Cbc0038I Pass  49: suminf.    0.91305 (4) obj. -1527.39 iterations 5
Cbc0038I Pass  50: suminf.    0.65517 (2) obj. -1975.74 iterations 4
Cbc0038I Pass  51: suminf.    0.60945 (2) obj. -1527.39 iterations 2
Cbc0038I Pass  52: suminf.    2.75169 (11) obj. -1527.39 iterations 9
Cbc0038I Pass  53: suminf.    1.77208 (7) obj. -1527.39 iterations 5
Cbc0038I Pass  54: suminf.    0.96552 (2) obj. -1752.64 iterations 8
Cbc0038I Pass  55: suminf.    0.59607 (2) obj. -1527.39 iterations 1
Cbc0038I Pass  56: suminf.    3.08266 (11) obj. -1527.39 iterations 7
Cbc0038I Pass  57: suminf.    0.93107 (4) obj. -1527.39 iterations 7
Cbc0038I Pass  58: suminf.    0.65517 (2) obj. -1979.74 iterations 4
Cbc0038I Pass  59: suminf.    0.60289 (2) obj. -1527.39 iterations 1
Cbc0038I Pass  60: suminf.    1.20438 (6) obj. -1527.39 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1276.32 - took 0.03 seconds
Cbc0012I Integer solution of -1276.3181 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 26 rows 27 columns
Cbc0031I 22 added rows had average density of 12.454545
Cbc0013I At root node, 22 cuts changed objective from -2259.2376 to -1286.2251 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 769 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 863 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 23 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 175 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 213 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 80 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1276.3181 best solution, best possible -1286.2247 (1.39 seconds)
Cbc0001I Search completed - best objective -1276.31807, took 1798 iterations and 4 nodes (1.47 seconds)
Cbc0032I Strong branching done 92 times (1127 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.48

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 1.19235e-05 - average 2.59207e-07, 16 fixed columns
Coin0506I Presolve 15 (-31) rows, 9 (-16) columns and 42 (-93) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Coin0511I After Postsolve, objective 2732.0168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Coin0511I After Postsolve, objective 2732.0168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2732.016771 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 25 columns (24 integer (24 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.196%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.363636
Cbc0038I Pass   1: suminf.    0.27153 (3) obj. -2242.13 iterations 3
Cbc0038I Solution found of 2.75894
Cbc0038I Relaxing continuous gives -14.4007
Cbc0038I Rounding solution of -1185.28 is better than previous of -14.4007

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -1185.28 to -1242.79 (0.01 seconds)
Cbc0038I Round again with cutoff of -1344.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27153 (3) obj. -2242.13 iterations 0
Cbc0038I Pass   3: suminf.    0.16587 (2) obj. -1344.2 iterations 7
Cbc0038I Pass   4: suminf.    0.16587 (2) obj. -1344.2 iterations 0
Cbc0038I Pass   5: suminf.    0.42722 (3) obj. -1344.2 iterations 4
Cbc0038I Pass   6: suminf.    0.42722 (3) obj. -1344.2 iterations 0
Cbc0038I Pass   7: suminf.    0.12710 (3) obj. -1344.2 iterations 4
Cbc0038I Pass   8: suminf.    0.91525 (3) obj. -1558.49 iterations 6
Cbc0038I Pass   9: suminf.    0.24849 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  10: suminf.    0.34286 (1) obj. -1608.92 iterations 3
Cbc0038I Pass  11: suminf.    0.13575 (1) obj. -1344.2 iterations 1
Cbc0038I Pass  12: suminf.    2.94118 (7) obj. -1344.2 iterations 10
Cbc0038I Pass  13: suminf.    0.25442 (2) obj. -1344.2 iterations 9
Cbc0038I Pass  14: suminf.    0.31429 (1) obj. -1584.22 iterations 2
Cbc0038I Pass  15: suminf.    0.12650 (1) obj. -1344.2 iterations 1
Cbc0038I Pass  16: suminf.    0.56153 (4) obj. -1344.2 iterations 3
Cbc0038I Pass  17: suminf.    0.38723 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  18: suminf.    0.49555 (3) obj. -1344.2 iterations 9
Cbc0038I Pass  19: suminf.    0.49555 (3) obj. -1344.2 iterations 0
Cbc0038I Pass  20: suminf.    0.62069 (2) obj. -1582.3 iterations 6
Cbc0038I Pass  21: suminf.    0.10979 (1) obj. -1344.2 iterations 2
Cbc0038I Pass  22: suminf.    0.17143 (1) obj. -1422.99 iterations 1
Cbc0038I Pass  23: suminf.    0.22102 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  24: suminf.    0.17143 (1) obj. -1422.99 iterations 3
Cbc0038I Pass  25: suminf.    0.55467 (3) obj. -1344.2 iterations 6
Cbc0038I Pass  26: suminf.    0.11265 (1) obj. -1344.2 iterations 4
Cbc0038I Pass  27: suminf.    0.17143 (1) obj. -1419.34 iterations 2
Cbc0038I Pass  28: suminf.    0.52190 (3) obj. -1344.2 iterations 6
Cbc0038I Pass  29: suminf.    0.16399 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  30: suminf.    0.20715 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  31: suminf.    0.16949 (3) obj. -1344.2 iterations 1
Cbc0038I Rounding solution of -1266.43 is better than previous of -1242.79

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 37 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1266.43 to -1275.13 (0.02 seconds)
Cbc0038I Round again with cutoff of -1526.74
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27153 (3) obj. -2242.13 iterations 0
Cbc0038I Pass  32: suminf.    0.49060 (2) obj. -1526.74 iterations 5
Cbc0038I Pass  33: suminf.    0.49060 (2) obj. -1526.74 iterations 0
Cbc0038I Pass  34: suminf.    1.18326 (4) obj. -1526.74 iterations 7
Cbc0038I Pass  35: suminf.    0.85438 (3) obj. -1526.74 iterations 1
Cbc0038I Pass  36: suminf.    1.10350 (3) obj. -1526.74 iterations 2
Cbc0038I Pass  37: suminf.    0.98106 (3) obj. -1746.85 iterations 1
Cbc0038I Pass  38: suminf.    0.87431 (4) obj. -1526.74 iterations 3
Cbc0038I Pass  39: suminf.    2.17575 (7) obj. -1526.74 iterations 9
Cbc0038I Pass  40: suminf.    0.85242 (3) obj. -1526.74 iterations 7
Cbc0038I Pass  41: suminf.    0.96552 (2) obj. -1762.3 iterations 5
Cbc0038I Pass  42: suminf.    0.57917 (2) obj. -1526.74 iterations 2
Cbc0038I Pass  43: suminf.    1.28077 (5) obj. -1526.74 iterations 8
Cbc0038I Pass  44: suminf.    0.51033 (2) obj. -1526.74 iterations 4
Cbc0038I Pass  45: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  46: suminf.    0.94079 (4) obj. -1526.74 iterations 8
Cbc0038I Pass  47: suminf.    0.94079 (4) obj. -1526.74 iterations 0
Cbc0038I Pass  48: suminf.    0.86207 (2) obj. -1865.64 iterations 5
Cbc0038I Pass  49: suminf.    0.58207 (2) obj. -1526.74 iterations 1
Cbc0038I Pass  50: suminf.    0.78634 (4) obj. -1526.74 iterations 9
Cbc0038I Pass  51: suminf.    0.63344 (3) obj. -1526.74 iterations 4
Cbc0038I Pass  52: suminf.    0.73146 (3) obj. -1526.74 iterations 3
Cbc0038I Pass  53: suminf.    0.51033 (2) obj. -1526.74 iterations 1
Cbc0038I Pass  54: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  55: suminf.    0.93103 (2) obj. -1867.34 iterations 3
Cbc0038I Pass  56: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  57: suminf.    0.82759 (2) obj. -1911.59 iterations 3
Cbc0038I Pass  58: suminf.    0.82759 (2) obj. -1911.59 iterations 0
Cbc0038I Pass  59: suminf.    0.54120 (2) obj. -1526.74 iterations 3
Cbc0038I Pass  60: suminf.    1.44165 (4) obj. -1526.74 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1275.13 - took 0.02 seconds
Cbc0012I Integer solution of -1275.1259 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 44 rows 25 columns, reduced to 16 rows 9 columns
Cbc0012I Integer solution of -1275.168 found by DiveCoefficient after 1021 iterations and 0 nodes (1.41 seconds)
Cbc0031I 10 added rows had average density of 11.1
Cbc0013I At root node, 10 cuts changed objective from -2256.9162 to -1290.6442 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 368 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.732 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1275.168 best solution, best possible -1290.644 (1.41 seconds)
Cbc0012I Integer solution of -1276.3181 found by DiveCoefficient after 1024 iterations and 1 nodes (1.43 seconds)
Cbc0001I Search completed - best objective -1276.31807, took 1089 iterations and 4 nodes (1.49 seconds)
Cbc0032I Strong branching done 28 times (165 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.93   (Wallclock seconds):       1.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 45 (-18) columns and 371 (-278) elements
Clp1000I sum of infeasibilities 4.92903e-09 - average 1.14629e-10, 37 fixed columns
Coin0506I Presolve 7 (-36) rows, 8 (-37) columns and 26 (-345) elements
Clp0006I 0  Obj 2710.1936 Dual inf 47.246882 (8)
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 2710.2885
Clp0000I Optimal - objective value 2710.2885
Coin0511I After Postsolve, objective 2710.2885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2710.2885 Dual inf 49.95597 (21)
Clp0014I Perturbing problem by 0.001% of 1.6920407 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 2746.8702
Clp0000I Optimal - objective value 2746.8702
Clp0000I Optimal - objective value 2746.8702
Coin0511I After Postsolve, objective 2746.8702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2746.87018 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 2.91292
Cbc0038I Pass   1: suminf.    0.27153 (3) obj. -2241.29 iterations 21
Cbc0038I Solution found of 3.59931
Cbc0038I Rounding solution of -1242.79 is better than previous of 3.59931

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1344.48
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27153 (3) obj. -2241.29 iterations 0
Cbc0038I Pass   3: suminf.    0.16630 (2) obj. -1344.48 iterations 6
Cbc0038I Pass   4: suminf.    0.16630 (2) obj. -1344.48 iterations 0
Cbc0038I Pass   5: suminf.    0.43516 (3) obj. -1344.48 iterations 4
Cbc0038I Pass   6: suminf.    0.43516 (3) obj. -1344.48 iterations 0
Cbc0038I Pass   7: suminf.    0.15577 (3) obj. -1344.48 iterations 1
Cbc0038I Pass   8: suminf.    0.52726 (5) obj. -1344.48 iterations 6
Cbc0038I Pass   9: suminf.    0.52726 (5) obj. -1344.48 iterations 1
Cbc0038I Pass  10: suminf.    0.75862 (2) obj. -1894.55 iterations 11
Cbc0038I Pass  11: suminf.    0.63768 (2) obj. -1981.9 iterations 3
Cbc0038I Pass  12: suminf.    0.12836 (1) obj. -1344.48 iterations 2
Cbc0038I Pass  13: suminf.    0.43089 (1) obj. -1731.16 iterations 1
Cbc0038I Pass  14: suminf.    2.22151 (10) obj. -1344.48 iterations 17
Cbc0038I Pass  15: suminf.    1.71811 (8) obj. -1344.48 iterations 4
Cbc0038I Pass  16: suminf.    0.63768 (2) obj. -1571.9 iterations 7
Cbc0038I Pass  17: suminf.    0.23361 (2) obj. -1344.48 iterations 3
Cbc0038I Pass  18: suminf.    0.43089 (1) obj. -1734.16 iterations 2
Cbc0038I Pass  19: suminf.    0.12601 (1) obj. -1344.48 iterations 1
Cbc0038I Pass  20: suminf.    2.12363 (7) obj. -1344.48 iterations 7
Cbc0038I Pass  21: suminf.    0.81359 (5) obj. -1344.48 iterations 2
Cbc0038I Pass  22: suminf.    0.45742 (3) obj. -1344.48 iterations 2
Cbc0038I Pass  23: suminf.    0.31429 (1) obj. -1566.22 iterations 3
Cbc0038I Pass  24: suminf.    0.14080 (1) obj. -1344.48 iterations 1
Cbc0038I Pass  25: suminf.    1.11912 (5) obj. -1344.48 iterations 7
Cbc0038I Pass  26: suminf.    1.11912 (5) obj. -1344.48 iterations 1
Cbc0038I Pass  27: suminf.    0.82759 (2) obj. -1691.75 iterations 4
Cbc0038I Pass  28: suminf.    0.24592 (2) obj. -1344.48 iterations 2
Cbc0038I Pass  29: suminf.    0.17143 (1) obj. -1407.34 iterations 2
Cbc0038I Pass  30: suminf.    0.12225 (1) obj. -1344.48 iterations 1
Cbc0038I Pass  31: suminf.    1.36638 (9) obj. -1344.48 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 3.59931 to -1276.32 (0.04 seconds)
Cbc0038I Round again with cutoff of -1527.51
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27153 (3) obj. -2241.29 iterations 0
Cbc0038I Pass  32: suminf.    0.49191 (2) obj. -1527.51 iterations 4
Cbc0038I Pass  33: suminf.    0.49191 (2) obj. -1527.51 iterations 0
Cbc0038I Pass  34: suminf.    1.88049 (7) obj. -1527.51 iterations 14
Cbc0038I Pass  35: suminf.    1.01098 (5) obj. -1527.51 iterations 7
Cbc0038I Pass  36: suminf.    0.93103 (2) obj. -1848.34 iterations 5
Cbc0038I Pass  37: suminf.    0.54276 (2) obj. -1527.51 iterations 2
Cbc0038I Pass  38: suminf.    0.81458 (4) obj. -1527.51 iterations 6
Cbc0038I Pass  39: suminf.    0.81458 (4) obj. -1527.51 iterations 1
Cbc0038I Pass  40: suminf.    0.82759 (2) obj. -1897.59 iterations 4
Cbc0038I Pass  41: suminf.    0.56542 (2) obj. -1527.51 iterations 1
Cbc0038I Pass  42: suminf.    0.89200 (5) obj. -1527.51 iterations 4
Cbc0038I Pass  43: suminf.    0.82759 (2) obj. -1896.59 iterations 5
Cbc0038I Pass  44: suminf.    0.56706 (2) obj. -1527.51 iterations 1
Cbc0038I Pass  45: suminf.    3.53368 (11) obj. -1527.51 iterations 12
Cbc0038I Pass  46: suminf.    1.62371 (7) obj. -1527.51 iterations 5
Cbc0038I Pass  47: suminf.    0.65517 (2) obj. -1981.74 iterations 7
Cbc0038I Pass  48: suminf.    0.59980 (2) obj. -1527.51 iterations 2
Cbc0038I Pass  49: suminf.    0.97612 (4) obj. -1527.51 iterations 5
Cbc0038I Pass  50: suminf.    0.65517 (2) obj. -1975.74 iterations 4
Cbc0038I Pass  51: suminf.    0.60964 (2) obj. -1527.51 iterations 2
Cbc0038I Pass  52: suminf.    2.82664 (11) obj. -1527.51 iterations 10
Cbc0038I Pass  53: suminf.    1.61126 (6) obj. -1527.51 iterations 9
Cbc0038I Pass  54: suminf.    0.96552 (2) obj. -1752.64 iterations 7
Cbc0038I Pass  55: suminf.    0.59626 (2) obj. -1527.51 iterations 3
Cbc0038I Pass  56: suminf.    3.15275 (11) obj. -1527.51 iterations 10
Cbc0038I Pass  57: suminf.    0.96064 (4) obj. -1527.51 iterations 8
Cbc0038I Pass  58: suminf.    0.65517 (2) obj. -1979.74 iterations 6
Cbc0038I Pass  59: suminf.    0.60308 (2) obj. -1527.51 iterations 3
Cbc0038I Pass  60: suminf.    1.32168 (6) obj. -1527.51 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1276.32 - took 0.03 seconds
Cbc0012I Integer solution of -1276.3181 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 26 rows 27 columns
Cbc0031I 21 added rows had average density of 10.047619
Cbc0013I At root node, 21 cuts changed objective from -2259.6663 to -1288.0339 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 319 row cuts average 3.1 elements, 12 column cuts (12 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 245 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 10 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 50 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 130 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1276.3181 best solution, best possible -1286.5867 (0.49 seconds)
Cbc0001I Search completed - best objective -1276.31807, took 579 iterations and 2 nodes (0.49 seconds)
Cbc0032I Strong branching done 22 times (113 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.49

