Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.0813e-05 - average 8.38215e-08, 6 fixed columns
Coin0506I Presolve 120 (-9) rows, 70 (-6) columns and 372 (-30) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 2.6148013 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Coin0511I After Postsolve, objective 35.995058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Coin0511I After Postsolve, objective 35.995058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.99505808 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 11.5189
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.92851 iterations 58
Cbc0038I Solution found of 7.92851
Cbc0038I Relaxing continuous gives 7.92851
Cbc0038I Rounding solution of 0.467403 is better than previous of 7.92851

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 84 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 0.467403 to -10.7707 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.2932
Cbc0038I Pass   2: suminf.    2.55359 (12) obj. -13.2932 iterations 16
Cbc0038I Pass   3: suminf.    2.51017 (11) obj. -13.2932 iterations 1
Cbc0038I Pass   4: suminf.    2.98151 (8) obj. -13.2932 iterations 12
Cbc0038I Pass   5: suminf.    1.91690 (7) obj. -13.2932 iterations 2
Cbc0038I Pass   6: suminf.    1.91690 (7) obj. -13.2932 iterations 0
Cbc0038I Pass   7: suminf.    2.38324 (7) obj. -13.2932 iterations 10
Cbc0038I Pass   8: suminf.    2.10325 (9) obj. -13.2932 iterations 5
Cbc0038I Pass   9: suminf.    2.09545 (8) obj. -13.2932 iterations 1
Cbc0038I Pass  10: suminf.    2.31657 (7) obj. -13.2932 iterations 9
Cbc0038I Pass  11: suminf.    2.31657 (7) obj. -13.2932 iterations 0
Cbc0038I Pass  12: suminf.    2.15702 (8) obj. -13.2932 iterations 9
Cbc0038I Pass  13: suminf.    2.05927 (8) obj. -13.2932 iterations 21
Cbc0038I Pass  14: suminf.    1.17618 (7) obj. -13.2932 iterations 7
Cbc0038I Pass  15: suminf.    1.71018 (6) obj. -13.2932 iterations 10
Cbc0038I Pass  16: suminf.    1.48192 (6) obj. -13.2932 iterations 9
Cbc0038I Pass  17: suminf.    2.50728 (6) obj. -13.2932 iterations 3
Cbc0038I Pass  18: suminf.    1.80503 (7) obj. -13.2932 iterations 3
Cbc0038I Pass  19: suminf.    1.79370 (7) obj. -13.2932 iterations 1
Cbc0038I Pass  20: suminf.    1.86902 (5) obj. -13.2932 iterations 6
Cbc0038I Pass  21: suminf.    1.85613 (6) obj. -13.2932 iterations 4
Cbc0038I Pass  22: suminf.    1.41721 (5) obj. -13.2932 iterations 6
Cbc0038I Pass  23: suminf.    1.41721 (5) obj. -13.2932 iterations 0
Cbc0038I Pass  24: suminf.    2.19747 (5) obj. -13.2932 iterations 2
Cbc0038I Pass  25: suminf.    1.20351 (5) obj. -13.2932 iterations 1
Cbc0038I Pass  26: suminf.    1.37371 (6) obj. -13.2932 iterations 15
Cbc0038I Pass  27: suminf.    0.81473 (4) obj. -13.2932 iterations 9
Cbc0038I Pass  28: suminf.    1.32967 (4) obj. -13.2932 iterations 10
Cbc0038I Pass  29: suminf.    1.21851 (5) obj. -13.2932 iterations 1
Cbc0038I Pass  30: suminf.    1.77335 (6) obj. -13.2932 iterations 7
Cbc0038I Pass  31: suminf.    1.76240 (6) obj. -13.2932 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 91 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -10.7707 - took 0.08 seconds
Cbc0012I Integer solution of -10.77072 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 84 rows 50 columns
Cbc0031I 34 added rows had average density of 39.882353
Cbc0013I At root node, 34 cuts changed objective from -35.995058 to -26.207905 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19047 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2281 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 158 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.77072 best solution, best possible -26.207905 (1.12 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 43 columns
Cbc0012I Integer solution of -11.58618 found by RINS after 11020 iterations and 45 nodes (1.38 seconds)
Cbc0001I Search completed - best objective -11.58618, took 11904 iterations and 64 nodes (1.41 seconds)
Cbc0032I Strong branching done 804 times (17152 iterations), fathomed 4 nodes and fixed 12 variables
Cbc0035I Maximum depth 25, 97 variables fixed on reduced cost
Total time (CPU seconds):       1.38   (Wallclock seconds):       1.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 118 (-34) columns and 1838 (-1465) elements
Clp1000I sum of infeasibilities 6.7262e-08 - average 6.93423e-10, 62 fixed columns
Coin0506I Presolve 39 (-58) rows, 56 (-62) columns and 184 (-1654) elements
Clp0006I 0  Obj -30.494116 Dual inf 1.0186261 (56)
Clp0014I Perturbing problem by 0.001% of 2.4585153 - largest nonzero change 2.5426151e-05 ( 0.0010393299%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value -29.588073
Clp0000I Optimal - objective value -29.588073
Coin0511I After Postsolve, objective -29.588073, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -29.588073 Dual inf 127.93221 (45)
Clp0014I Perturbing problem by 0.001% of 1.7505531 - largest nonzero change 2.8427645e-05 ( 0.0015420975%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 53.583999
Clp0000I Optimal - objective value 53.583999
Clp0000I Optimal - objective value 53.583999
Coin0511I After Postsolve, objective 53.583999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.58399868 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 119 columns (119 integer (119 of which binary)) and 1845 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.034%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 5.48198
Cbc0038I Pass   1: suminf.    1.59299 (24) obj. -34.5822 iterations 22
Cbc0038I Pass   2: suminf.    1.59299 (24) obj. -34.5822 iterations 1
Cbc0038I Solution found of 7.52695
Cbc0038I Rounding solution of 1.82061 is better than previous of 7.52695

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 119 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 1.82061 to 0.93621 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.91381
Cbc0038I Pass   3: suminf.    1.59299 (24) obj. -34.5822 iterations 0
Cbc0038I Pass   4: suminf.    1.59299 (24) obj. -34.5822 iterations 1
Cbc0038I Pass   5: suminf.    0.23728 (1) obj. -3.91381 iterations 24
Cbc0038I Pass   6: suminf.    0.12000 (1) obj. -5.67305 iterations 1
Cbc0038I Pass   7: suminf.    1.16793 (12) obj. -3.91381 iterations 51
Cbc0038I Pass   8: suminf.    0.96124 (12) obj. -3.91381 iterations 11
Cbc0038I Pass   9: suminf.    2.22382 (15) obj. -3.91381 iterations 15
Cbc0038I Pass  10: suminf.    1.72733 (14) obj. -3.91381 iterations 3
Cbc0038I Pass  11: suminf.    2.04757 (9) obj. -3.91381 iterations 16
Cbc0038I Pass  12: suminf.    2.02632 (11) obj. -3.91381 iterations 3
Cbc0038I Pass  13: suminf.    1.28117 (9) obj. -3.91381 iterations 8
Cbc0038I Pass  14: suminf.    1.09615 (9) obj. -3.91381 iterations 2
Cbc0038I Pass  15: suminf.    0.95358 (8) obj. -3.91381 iterations 11
Cbc0038I Pass  16: suminf.    0.95358 (8) obj. -3.91381 iterations 0
Cbc0038I Pass  17: suminf.    1.98626 (8) obj. -3.91381 iterations 4
Cbc0038I Pass  18: suminf.    1.72605 (8) obj. -3.91381 iterations 3
Cbc0038I Pass  19: suminf.    0.99260 (7) obj. -3.91381 iterations 7
Cbc0038I Pass  20: suminf.    3.69504 (16) obj. -3.91381 iterations 30
Cbc0038I Pass  21: suminf.    1.41490 (11) obj. -4.11197 iterations 12
Cbc0038I Pass  22: suminf.    1.50591 (8) obj. -3.91381 iterations 12
Cbc0038I Pass  23: suminf.    1.13144 (9) obj. -3.91381 iterations 3
Cbc0038I Pass  24: suminf.    1.20418 (8) obj. -3.91381 iterations 14
Cbc0038I Pass  25: suminf.    1.19434 (8) obj. -3.91381 iterations 1
Cbc0038I Pass  26: suminf.    0.96125 (6) obj. -3.91381 iterations 8
Cbc0038I Pass  27: suminf.    0.96125 (6) obj. -3.91381 iterations 1
Cbc0038I Pass  28: suminf.    1.17085 (6) obj. -3.91381 iterations 2
Cbc0038I Pass  29: suminf.    1.17085 (6) obj. -3.91381 iterations 1
Cbc0038I Pass  30: suminf.    0.96125 (6) obj. -3.91381 iterations 2
Cbc0038I Pass  31: suminf.    1.15745 (10) obj. -3.91381 iterations 19
Cbc0038I Pass  32: suminf.    0.91186 (9) obj. -4.11285 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 119 columns, reduced to 56 rows 71 columns
Cbc0038I Mini branch and bound improved solution from 0.93621 to -10.5263 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.9338
Cbc0038I Pass  32: suminf.    1.59299 (24) obj. -34.5822 iterations 0
Cbc0038I Pass  33: suminf.    1.59299 (24) obj. -34.5822 iterations 1
Cbc0038I Pass  34: suminf.    0.70074 (10) obj. -17.9338 iterations 22
Cbc0038I Pass  35: suminf.    0.44283 (9) obj. -19.2083 iterations 2
Cbc0038I Pass  36: suminf.    1.41920 (20) obj. -17.9338 iterations 26
Cbc0038I Pass  37: suminf.    1.41920 (20) obj. -17.9338 iterations 0
Cbc0038I Pass  38: suminf.    2.31874 (14) obj. -17.9338 iterations 28
Cbc0038I Pass  39: suminf.    1.59374 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  40: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  41: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  42: suminf.    1.26190 (12) obj. -18.4142 iterations 2
Cbc0038I Pass  43: suminf.    1.59374 (12) obj. -17.9338 iterations 6
Cbc0038I Pass  44: suminf.    1.59374 (12) obj. -17.9338 iterations 1
Cbc0038I Pass  45: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  46: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  47: suminf.    1.26190 (12) obj. -18.4142 iterations 2
Cbc0038I Pass  48: suminf.    1.59374 (12) obj. -17.9338 iterations 6
Cbc0038I Pass  49: suminf.    1.59374 (12) obj. -17.9338 iterations 1
Cbc0038I Pass  50: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  51: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  52: suminf.    1.26190 (12) obj. -18.4142 iterations 2
Cbc0038I Pass  53: suminf.    1.59374 (12) obj. -17.9338 iterations 6
Cbc0038I Pass  54: suminf.    1.59374 (12) obj. -17.9338 iterations 1
Cbc0038I Pass  55: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  56: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  57: suminf.    1.26190 (12) obj. -18.4142 iterations 2
Cbc0038I Pass  58: suminf.    1.59374 (12) obj. -17.9338 iterations 6
Cbc0038I Pass  59: suminf.    1.59374 (12) obj. -17.9338 iterations 1
Cbc0038I Pass  60: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  61: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -10.5263 - took 0.07 seconds
Cbc0012I Integer solution of -10.52631 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 98 rows 119 columns, reduced to 15 rows 18 columns
Cbc0031I 75 added rows had average density of 24.266667
Cbc0013I At root node, 75 cuts changed objective from -47.563124 to -13.097868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21401 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.251 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1664 row cuts average 108.9 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 494 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 851 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 309 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 158 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.790 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.52631 best solution, best possible -13.097868 (3.14 seconds)
Cbc0016I Integer solution of -11.58618 found by strong branching after 6203 iterations and 3 nodes (3.77 seconds)
Cbc0010I After 6 nodes, 1 on tree, -11.58618 best solution, best possible -13.096615 (3.97 seconds)
Cbc0001I Search completed - best objective -11.58618, took 7266 iterations and 14 nodes (4.55 seconds)
Cbc0032I Strong branching done 434 times (7246 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 14 variables fixed on reduced cost
Total time (CPU seconds):       3.42   (Wallclock seconds):       4.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.0813e-05 - average 8.38215e-08, 6 fixed columns
Coin0506I Presolve 120 (-9) rows, 70 (-6) columns and 372 (-30) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 2.6148013 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Coin0511I After Postsolve, objective 35.995058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Coin0511I After Postsolve, objective 35.995058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.99505808 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 11.5189
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.92851 iterations 58
Cbc0038I Solution found of 7.92851
Cbc0038I Relaxing continuous gives 7.92851
Cbc0038I Rounding solution of 0.467403 is better than previous of 7.92851

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 84 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 0.467403 to -10.7707 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.2932
Cbc0038I Pass   2: suminf.    2.55359 (12) obj. -13.2932 iterations 16
Cbc0038I Pass   3: suminf.    2.51017 (11) obj. -13.2932 iterations 1
Cbc0038I Pass   4: suminf.    2.98151 (8) obj. -13.2932 iterations 12
Cbc0038I Pass   5: suminf.    1.91690 (7) obj. -13.2932 iterations 2
Cbc0038I Pass   6: suminf.    1.91690 (7) obj. -13.2932 iterations 0
Cbc0038I Pass   7: suminf.    2.38324 (7) obj. -13.2932 iterations 10
Cbc0038I Pass   8: suminf.    2.10325 (9) obj. -13.2932 iterations 5
Cbc0038I Pass   9: suminf.    2.09545 (8) obj. -13.2932 iterations 1
Cbc0038I Pass  10: suminf.    2.31657 (7) obj. -13.2932 iterations 9
Cbc0038I Pass  11: suminf.    2.31657 (7) obj. -13.2932 iterations 0
Cbc0038I Pass  12: suminf.    2.15702 (8) obj. -13.2932 iterations 9
Cbc0038I Pass  13: suminf.    2.05927 (8) obj. -13.2932 iterations 21
Cbc0038I Pass  14: suminf.    1.17618 (7) obj. -13.2932 iterations 7
Cbc0038I Pass  15: suminf.    1.71018 (6) obj. -13.2932 iterations 10
Cbc0038I Pass  16: suminf.    1.48192 (6) obj. -13.2932 iterations 9
Cbc0038I Pass  17: suminf.    2.50728 (6) obj. -13.2932 iterations 3
Cbc0038I Pass  18: suminf.    1.80503 (7) obj. -13.2932 iterations 3
Cbc0038I Pass  19: suminf.    1.79370 (7) obj. -13.2932 iterations 1
Cbc0038I Pass  20: suminf.    1.86902 (5) obj. -13.2932 iterations 6
Cbc0038I Pass  21: suminf.    1.85613 (6) obj. -13.2932 iterations 4
Cbc0038I Pass  22: suminf.    1.41721 (5) obj. -13.2932 iterations 6
Cbc0038I Pass  23: suminf.    1.41721 (5) obj. -13.2932 iterations 0
Cbc0038I Pass  24: suminf.    2.19747 (5) obj. -13.2932 iterations 2
Cbc0038I Pass  25: suminf.    1.20351 (5) obj. -13.2932 iterations 1
Cbc0038I Pass  26: suminf.    1.37371 (6) obj. -13.2932 iterations 15
Cbc0038I Pass  27: suminf.    0.81473 (4) obj. -13.2932 iterations 9
Cbc0038I Pass  28: suminf.    1.32967 (4) obj. -13.2932 iterations 10
Cbc0038I Pass  29: suminf.    1.21851 (5) obj. -13.2932 iterations 1
Cbc0038I Pass  30: suminf.    1.77335 (6) obj. -13.2932 iterations 7
Cbc0038I Pass  31: suminf.    1.76240 (6) obj. -13.2932 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 91 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -10.7707 - took 0.08 seconds
Cbc0012I Integer solution of -10.77072 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 84 rows 50 columns
Cbc0031I 34 added rows had average density of 39.882353
Cbc0013I At root node, 34 cuts changed objective from -35.995058 to -26.207905 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19047 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2281 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 158 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.77072 best solution, best possible -26.207905 (1.25 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 43 columns
Cbc0012I Integer solution of -11.58618 found by RINS after 11020 iterations and 45 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -11.58618, took 11904 iterations and 64 nodes (1.54 seconds)
Cbc0032I Strong branching done 804 times (17152 iterations), fathomed 4 nodes and fixed 12 variables
Cbc0035I Maximum depth 25, 97 variables fixed on reduced cost
Total time (CPU seconds):       1.50   (Wallclock seconds):       1.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 118 (-35) columns and 1838 (-1466) elements
Clp1000I sum of infeasibilities 6.7262e-08 - average 6.93423e-10, 62 fixed columns
Coin0506I Presolve 39 (-58) rows, 56 (-62) columns and 184 (-1654) elements
Clp0006I 0  Obj -30.494116 Dual inf 1.0186261 (56)
Clp0014I Perturbing problem by 0.001% of 2.4585153 - largest nonzero change 2.5426151e-05 ( 0.0010393299%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value -29.588073
Clp0000I Optimal - objective value -29.588073
Coin0511I After Postsolve, objective -29.588073, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -29.588073 Dual inf 127.93221 (45)
Clp0014I Perturbing problem by 0.001% of 1.7505531 - largest nonzero change 2.8427645e-05 ( 0.0015420975%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 53.583999
Clp0000I Optimal - objective value 53.583999
Clp0000I Optimal - objective value 53.583999
Coin0511I After Postsolve, objective 53.583999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.58399868 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 119 columns (119 integer (119 of which binary)) and 1845 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.034%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 5.48198
Cbc0038I Pass   1: suminf.    1.59299 (24) obj. -34.5822 iterations 22
Cbc0038I Pass   2: suminf.    1.59299 (24) obj. -34.5822 iterations 1
Cbc0038I Solution found of 7.52695
Cbc0038I Rounding solution of 1.82061 is better than previous of 7.52695

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 119 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 1.82061 to 0.93621 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.91381
Cbc0038I Pass   3: suminf.    1.59299 (24) obj. -34.5822 iterations 0
Cbc0038I Pass   4: suminf.    1.59299 (24) obj. -34.5822 iterations 1
Cbc0038I Pass   5: suminf.    0.23728 (1) obj. -3.91381 iterations 24
Cbc0038I Pass   6: suminf.    0.12000 (1) obj. -5.67305 iterations 1
Cbc0038I Pass   7: suminf.    1.16793 (12) obj. -3.91381 iterations 51
Cbc0038I Pass   8: suminf.    0.96124 (12) obj. -3.91381 iterations 11
Cbc0038I Pass   9: suminf.    2.22382 (15) obj. -3.91381 iterations 15
Cbc0038I Pass  10: suminf.    1.72733 (14) obj. -3.91381 iterations 3
Cbc0038I Pass  11: suminf.    2.04757 (9) obj. -3.91381 iterations 16
Cbc0038I Pass  12: suminf.    2.02632 (11) obj. -3.91381 iterations 3
Cbc0038I Pass  13: suminf.    1.28117 (9) obj. -3.91381 iterations 8
Cbc0038I Pass  14: suminf.    1.09615 (9) obj. -3.91381 iterations 2
Cbc0038I Pass  15: suminf.    0.95358 (8) obj. -3.91381 iterations 11
Cbc0038I Pass  16: suminf.    0.95358 (8) obj. -3.91381 iterations 0
Cbc0038I Pass  17: suminf.    1.98626 (8) obj. -3.91381 iterations 4
Cbc0038I Pass  18: suminf.    1.72605 (8) obj. -3.91381 iterations 3
Cbc0038I Pass  19: suminf.    0.99260 (7) obj. -3.91381 iterations 7
Cbc0038I Pass  20: suminf.    3.69504 (16) obj. -3.91381 iterations 30
Cbc0038I Pass  21: suminf.    1.41490 (11) obj. -4.11197 iterations 12
Cbc0038I Pass  22: suminf.    1.50591 (8) obj. -3.91381 iterations 12
Cbc0038I Pass  23: suminf.    1.13144 (9) obj. -3.91381 iterations 3
Cbc0038I Pass  24: suminf.    1.20418 (8) obj. -3.91381 iterations 14
Cbc0038I Pass  25: suminf.    1.19434 (8) obj. -3.91381 iterations 1
Cbc0038I Pass  26: suminf.    0.96125 (6) obj. -3.91381 iterations 8
Cbc0038I Pass  27: suminf.    0.96125 (6) obj. -3.91381 iterations 1
Cbc0038I Pass  28: suminf.    1.17085 (6) obj. -3.91381 iterations 2
Cbc0038I Pass  29: suminf.    1.17085 (6) obj. -3.91381 iterations 1
Cbc0038I Pass  30: suminf.    0.96125 (6) obj. -3.91381 iterations 2
Cbc0038I Pass  31: suminf.    1.15745 (10) obj. -3.91381 iterations 19
Cbc0038I Pass  32: suminf.    0.91186 (9) obj. -4.11285 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 119 columns, reduced to 56 rows 71 columns
Cbc0038I Mini branch and bound improved solution from 0.93621 to -10.5263 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.9338
Cbc0038I Pass  32: suminf.    1.59299 (24) obj. -34.5822 iterations 0
Cbc0038I Pass  33: suminf.    1.59299 (24) obj. -34.5822 iterations 1
Cbc0038I Pass  34: suminf.    0.70074 (10) obj. -17.9338 iterations 22
Cbc0038I Pass  35: suminf.    0.44283 (9) obj. -19.2083 iterations 2
Cbc0038I Pass  36: suminf.    1.41920 (20) obj. -17.9338 iterations 26
Cbc0038I Pass  37: suminf.    1.41920 (20) obj. -17.9338 iterations 0
Cbc0038I Pass  38: suminf.    2.31874 (14) obj. -17.9338 iterations 28
Cbc0038I Pass  39: suminf.    1.59374 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  40: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  41: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  42: suminf.    1.26190 (12) obj. -18.4142 iterations 2
Cbc0038I Pass  43: suminf.    1.59374 (12) obj. -17.9338 iterations 6
Cbc0038I Pass  44: suminf.    1.59374 (12) obj. -17.9338 iterations 1
Cbc0038I Pass  45: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  46: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  47: suminf.    1.26190 (12) obj. -18.4142 iterations 2
Cbc0038I Pass  48: suminf.    1.59374 (12) obj. -17.9338 iterations 6
Cbc0038I Pass  49: suminf.    1.59374 (12) obj. -17.9338 iterations 1
Cbc0038I Pass  50: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  51: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  52: suminf.    1.26190 (12) obj. -18.4142 iterations 2
Cbc0038I Pass  53: suminf.    1.59374 (12) obj. -17.9338 iterations 6
Cbc0038I Pass  54: suminf.    1.59374 (12) obj. -17.9338 iterations 1
Cbc0038I Pass  55: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  56: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I Pass  57: suminf.    1.26190 (12) obj. -18.4142 iterations 2
Cbc0038I Pass  58: suminf.    1.59374 (12) obj. -17.9338 iterations 6
Cbc0038I Pass  59: suminf.    1.59374 (12) obj. -17.9338 iterations 1
Cbc0038I Pass  60: suminf.    2.45114 (14) obj. -17.9338 iterations 8
Cbc0038I Pass  61: suminf.    1.64876 (12) obj. -17.9338 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -10.5263 - took 0.08 seconds
Cbc0012I Integer solution of -10.52631 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 98 rows 119 columns, reduced to 15 rows 18 columns
Cbc0031I 75 added rows had average density of 24.266667
Cbc0013I At root node, 75 cuts changed objective from -47.563124 to -13.097868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21401 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.266 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1664 row cuts average 108.9 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 494 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 851 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 309 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 158 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.828 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.52631 best solution, best possible -13.097868 (3.28 seconds)
Cbc0016I Integer solution of -11.58618 found by strong branching after 6203 iterations and 3 nodes (3.98 seconds)
Cbc0010I After 3 nodes, 3 on tree, -11.58618 best solution, best possible -13.097868 (3.99 seconds)
Cbc0010I After 11 nodes, 3 on tree, -11.58618 best solution, best possible -13.096615 (4.73 seconds)
Cbc0001I Search completed - best objective -11.58618, took 7266 iterations and 14 nodes (4.86 seconds)
Cbc0032I Strong branching done 434 times (7246 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 14 variables fixed on reduced cost
Total time (CPU seconds):       3.66   (Wallclock seconds):       4.88

