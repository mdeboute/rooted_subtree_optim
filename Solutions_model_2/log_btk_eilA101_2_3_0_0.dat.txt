Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 4.01448e-05 - average 2.16999e-07, 9 fixed columns
Coin0506I Presolve 167 (-18) rows, 92 (-9) columns and 510 (-54) elements
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.3038189 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Coin0511I After Postsolve, objective 50.069123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Coin0511I After Postsolve, objective 50.069123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.06912322 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 12.9638
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.9501 iterations 69
Cbc0038I Solution found of -3.9501
Cbc0038I Relaxing continuous gives -3.9501
Cbc0038I Rounding solution of -10.3236 is better than previous of -3.9501

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 102 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -10.3236 to -20.2116 (0.06 seconds)
Cbc0038I Round again with cutoff of -23.1974
Cbc0038I Pass   2: suminf.    2.80262 (12) obj. -23.1974 iterations 15
Cbc0038I Pass   3: suminf.    1.74085 (8) obj. -23.1974 iterations 16
Cbc0038I Pass   4: suminf.    1.63033 (8) obj. -23.1974 iterations 5
Cbc0038I Pass   5: suminf.    0.87408 (5) obj. -23.1974 iterations 9
Cbc0038I Pass   6: suminf.    1.87399 (5) obj. -23.1974 iterations 5
Cbc0038I Pass   7: suminf.    1.73574 (5) obj. -23.1974 iterations 1
Cbc0038I Pass   8: suminf.    1.56333 (6) obj. -23.1974 iterations 2
Cbc0038I Pass   9: suminf.    1.87871 (6) obj. -23.1974 iterations 5
Cbc0038I Pass  10: suminf.    1.87871 (6) obj. -23.1974 iterations 0
Cbc0038I Pass  11: suminf.    1.80659 (6) obj. -23.1974 iterations 8
Cbc0038I Pass  12: suminf.    1.80659 (6) obj. -23.1974 iterations 0
Cbc0038I Pass  13: suminf.    1.73672 (6) obj. -23.1974 iterations 7
Cbc0038I Pass  14: suminf.    1.73012 (6) obj. -23.1974 iterations 1
Cbc0038I Pass  15: suminf.    1.96585 (5) obj. -23.1974 iterations 5
Cbc0038I Pass  16: suminf.    1.70838 (7) obj. -23.1974 iterations 4
Cbc0038I Pass  17: suminf.    1.70838 (7) obj. -23.1974 iterations 0
Cbc0038I Pass  18: suminf.    1.86109 (7) obj. -23.1974 iterations 7
Cbc0038I Pass  19: suminf.    1.86109 (7) obj. -23.1974 iterations 0
Cbc0038I Pass  20: suminf.    1.89193 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  21: suminf.    1.89251 (7) obj. -23.1974 iterations 1
Cbc0038I Pass  22: suminf.    1.71485 (6) obj. -23.1974 iterations 4
Cbc0038I Pass  23: suminf.    1.68031 (6) obj. -23.1974 iterations 2
Cbc0038I Pass  24: suminf.    2.11088 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  25: suminf.    1.83504 (7) obj. -23.1974 iterations 2
Cbc0038I Pass  26: suminf.    1.89251 (7) obj. -23.1974 iterations 7
Cbc0038I Pass  27: suminf.    1.71485 (6) obj. -23.1974 iterations 4
Cbc0038I Pass  28: suminf.    1.68031 (6) obj. -23.1974 iterations 2
Cbc0038I Pass  29: suminf.    2.11088 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  30: suminf.    1.83504 (7) obj. -23.1974 iterations 2
Cbc0038I Pass  31: suminf.    1.89251 (7) obj. -23.1974 iterations 7
Cbc0038I Rounding solution of -21.4594 is better than previous of -20.2116

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -21.4594 to -22.2029 (0.12 seconds)
Cbc0038I Round again with cutoff of -28.5718
Cbc0038I Pass  31: suminf.    3.46215 (15) obj. -28.5718 iterations 3
Cbc0038I Pass  32: suminf.    3.46215 (15) obj. -28.5718 iterations 0
Cbc0038I Pass  33: suminf.    3.08525 (10) obj. -28.5718 iterations 12
Cbc0038I Pass  34: suminf.    2.65929 (11) obj. -28.5718 iterations 3
Cbc0038I Pass  35: suminf.    2.65929 (11) obj. -28.5718 iterations 0
Cbc0038I Pass  36: suminf.    2.71889 (11) obj. -28.5718 iterations 10
Cbc0038I Pass  37: suminf.    2.71889 (11) obj. -28.5718 iterations 0
Cbc0038I Pass  38: suminf.    3.15462 (10) obj. -28.5718 iterations 8
Cbc0038I Pass  39: suminf.    2.74325 (9) obj. -28.5718 iterations 3
Cbc0038I Pass  40: suminf.    2.14129 (8) obj. -28.5718 iterations 1
Cbc0038I Pass  41: suminf.    2.42893 (7) obj. -28.5718 iterations 9
Cbc0038I Pass  42: suminf.    2.36973 (7) obj. -28.5718 iterations 1
Cbc0038I Pass  43: suminf.    2.54803 (7) obj. -28.5718 iterations 4
Cbc0038I Pass  44: suminf.    2.19604 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  45: suminf.    2.19604 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  46: suminf.    2.59365 (7) obj. -28.5718 iterations 9
Cbc0038I Pass  47: suminf.    2.59459 (7) obj. -28.5718 iterations 1
Cbc0038I Pass  48: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I Pass  49: suminf.    2.35435 (6) obj. -28.5718 iterations 2
Cbc0038I Pass  50: suminf.    2.15871 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  51: suminf.    2.15871 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  52: suminf.    2.60611 (7) obj. -28.5718 iterations 7
Cbc0038I Pass  53: suminf.    2.59459 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  54: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I Pass  55: suminf.    2.35435 (6) obj. -28.5718 iterations 2
Cbc0038I Pass  56: suminf.    2.15871 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  57: suminf.    2.15871 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  58: suminf.    2.60611 (7) obj. -28.5718 iterations 7
Cbc0038I Pass  59: suminf.    2.59459 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  60: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -22.2029 - took 0.16 seconds
Cbc0012I Integer solution of -22.202902 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 102 rows 58 columns
Cbc0031I 35 added rows had average density of 57
Cbc0013I At root node, 35 cuts changed objective from -50.069123 to -41.258279 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27067 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3074 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.185 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 225 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.202902 best solution, best possible -41.258279 (2.11 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 12 rows 13 columns
Cbc0004I Integer solution of -22.311062 found after 14917 iterations and 43 nodes (2.47 seconds)
Cbc0004I Integer solution of -22.54477 found after 14951 iterations and 47 nodes (2.48 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 70 rows 41 columns
Cbc0001I Search completed - best objective -22.54477, took 18948 iterations and 152 nodes (2.81 seconds)
Cbc0032I Strong branching done 1496 times (29015 iterations), fathomed 8 nodes and fixed 59 variables
Cbc0035I Maximum depth 45, 299 variables fixed on reduced cost
Total time (CPU seconds):       2.73   (Wallclock seconds):       2.83

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-72) rows, 147 (-55) columns and 2948 (-2705) elements
Clp1000I sum of infeasibilities 2.1018e-07 - average 1.59227e-09, 42 fixed columns
Coin0506I Presolve 91 (-41) rows, 103 (-44) columns and 1635 (-1313) elements
Clp0006I 0  Obj 51.264978 Dual inf 6.4241576 (103)
Clp0029I End of values pass after 103 iterations
Clp0014I Perturbing problem by 0.001% of 1.9370235 - largest nonzero change 1.8608195e-05 ( 0.0015823696%) - largest zero change 2.8203985e-05
Clp0000I Optimal - objective value 64.408245
Clp0000I Optimal - objective value 64.408245
Coin0511I After Postsolve, objective 64.408245, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 64.408245
Clp0000I Optimal - objective value 64.408245
Clp0000I Optimal - objective value 64.408245
Clp0000I Optimal - objective value 64.408245
Coin0511I After Postsolve, objective 64.408245, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.40824523 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 147 columns (147 integer (147 of which binary)) and 2952 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.381%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 6.94509
Cbc0038I Pass   1: suminf.    2.87195 (39) obj. -50.1899 iterations 11
Cbc0038I Pass   2: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass   3: suminf.    0.71361 (14) obj. -17.5106 iterations 25
Cbc0038I Solution found of -3.29086
Cbc0038I Rounding solution of -5.83155 is better than previous of -3.29086

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -10.977
Cbc0038I Pass   4: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass   5: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass   6: suminf.    1.62344 (26) obj. -30.4381 iterations 13
Cbc0038I Pass   7: suminf.    0.85420 (16) obj. -19.37 iterations 10
Cbc0038I Pass   8: suminf.    0.66161 (2) obj. -10.977 iterations 19
Cbc0038I Pass   9: suminf.    0.54222 (2) obj. -11.4546 iterations 2
Cbc0038I Pass  10: suminf.    1.48545 (14) obj. -12.3135 iterations 39
Cbc0038I Pass  11: suminf.    1.48545 (14) obj. -12.3135 iterations 5
Cbc0038I Pass  12: suminf.    0.77146 (6) obj. -10.977 iterations 22
Cbc0038I Pass  13: suminf.    0.68452 (5) obj. -11.4496 iterations 3
Cbc0038I Pass  14: suminf.    0.59006 (4) obj. -10.977 iterations 8
Cbc0038I Pass  15: suminf.    0.57141 (4) obj. -11.033 iterations 4
Cbc0038I Pass  16: suminf.    2.32167 (12) obj. -10.977 iterations 23
Cbc0038I Pass  17: suminf.    2.14475 (11) obj. -10.977 iterations 8
Cbc0038I Pass  18: suminf.    1.68369 (10) obj. -10.977 iterations 1
Cbc0038I Pass  19: suminf.    1.45443 (10) obj. -13.6709 iterations 1
Cbc0038I Pass  20: suminf.    1.54745 (6) obj. -10.977 iterations 12
Cbc0038I Pass  21: suminf.    1.54745 (6) obj. -10.977 iterations 1
Cbc0038I Pass  22: suminf.    1.21729 (6) obj. -10.977 iterations 11
Cbc0038I Pass  23: suminf.    1.02698 (7) obj. -10.977 iterations 1
Cbc0038I Pass  24: suminf.    1.28369 (6) obj. -10.977 iterations 5
Cbc0038I Pass  25: suminf.    1.27469 (6) obj. -10.977 iterations 4
Cbc0038I Pass  26: suminf.    1.28369 (6) obj. -10.977 iterations 5
Cbc0038I Pass  27: suminf.    2.07512 (11) obj. -10.977 iterations 25
Cbc0038I Pass  28: suminf.    1.50520 (10) obj. -10.977 iterations 13
Cbc0038I Pass  29: suminf.    1.48857 (7) obj. -10.977 iterations 11
Cbc0038I Pass  30: suminf.    1.14367 (6) obj. -10.977 iterations 4
Cbc0038I Pass  31: suminf.    1.48857 (7) obj. -10.977 iterations 6
Cbc0038I Pass  32: suminf.    1.51456 (11) obj. -10.977 iterations 20
Cbc0038I Pass  33: suminf.    1.23896 (10) obj. -10.977 iterations 7
Cbc0038I Rounding solution of -6.94345 is better than previous of -5.83155

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 24 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -6.94345 to -13.9804 (0.08 seconds)
Cbc0038I Round again with cutoff of -22.6414
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass  34: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass  35: suminf.    1.50770 (15) obj. -22.6414 iterations 28
Cbc0038I Pass  36: suminf.    1.22514 (15) obj. -23.7716 iterations 1
Cbc0038I Pass  37: suminf.    2.31769 (13) obj. -22.6414 iterations 25
Cbc0038I Pass  38: suminf.    1.88782 (12) obj. -22.6414 iterations 3
Cbc0038I Pass  39: suminf.    2.05051 (10) obj. -22.6414 iterations 10
Cbc0038I Pass  40: suminf.    1.63010 (10) obj. -22.6414 iterations 2
Cbc0038I Pass  41: suminf.    2.23631 (12) obj. -22.6414 iterations 6
Cbc0038I Pass  42: suminf.    1.85884 (13) obj. -22.6414 iterations 4
Cbc0038I Pass  43: suminf.    2.25913 (13) obj. -22.6414 iterations 5
Cbc0038I Pass  44: suminf.    2.20653 (13) obj. -22.6414 iterations 1
Cbc0038I Pass  45: suminf.    2.77779 (10) obj. -22.6414 iterations 16
Cbc0038I Pass  46: suminf.    2.02533 (11) obj. -22.6414 iterations 4
Cbc0038I Pass  47: suminf.    2.02533 (11) obj. -22.6414 iterations 2
Cbc0038I Pass  48: suminf.    2.29298 (11) obj. -22.6414 iterations 4
Cbc0038I Pass  49: suminf.    2.29298 (11) obj. -22.6414 iterations 2
Cbc0038I Pass  50: suminf.    2.02533 (11) obj. -22.6414 iterations 4
Cbc0038I Pass  51: suminf.    3.21881 (16) obj. -22.6414 iterations 22
Cbc0038I Pass  52: suminf.    3.21881 (16) obj. -22.6414 iterations 7
Cbc0038I Pass  53: suminf.    2.71038 (13) obj. -22.6414 iterations 10
Cbc0038I Pass  54: suminf.    2.66340 (13) obj. -22.6414 iterations 2
Cbc0038I Pass  55: suminf.    3.01919 (13) obj. -22.6414 iterations 5
Cbc0038I Pass  56: suminf.    3.01919 (13) obj. -22.6414 iterations 1
Cbc0038I Pass  57: suminf.    3.00446 (13) obj. -22.6414 iterations 4
Cbc0038I Pass  58: suminf.    3.00446 (13) obj. -22.6414 iterations 1
Cbc0038I Pass  59: suminf.    3.01919 (13) obj. -22.6414 iterations 3
Cbc0038I Pass  60: suminf.    3.42040 (20) obj. -22.6414 iterations 34
Cbc0038I Pass  61: suminf.    2.26441 (18) obj. -22.6414 iterations 11
Cbc0038I Pass  62: suminf.    2.84135 (17) obj. -22.6414 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 32 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -13.9804 to -18.1284 (0.13 seconds)
Cbc0038I Round again with cutoff of -33.0345
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass  63: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass  64: suminf.    1.81768 (21) obj. -33.0345 iterations 26
Cbc0038I Pass  65: suminf.    1.81768 (21) obj. -33.0345 iterations 0
Cbc0038I Pass  66: suminf.    2.32659 (23) obj. -33.0345 iterations 17
Cbc0038I Pass  67: suminf.    2.32659 (23) obj. -33.0345 iterations 0
Cbc0038I Pass  68: suminf.    2.74776 (23) obj. -33.0345 iterations 8
Cbc0038I Pass  69: suminf.    2.72441 (23) obj. -33.0345 iterations 5
Cbc0038I Pass  70: suminf.    2.56537 (23) obj. -33.0345 iterations 4
Cbc0038I Pass  71: suminf.    2.52977 (21) obj. -33.0345 iterations 5
Cbc0038I Pass  72: suminf.    2.82554 (23) obj. -33.0345 iterations 9
Cbc0038I Pass  73: suminf.    2.47264 (23) obj. -33.0345 iterations 4
Cbc0038I Pass  74: suminf.    3.30513 (22) obj. -33.0345 iterations 15
Cbc0038I Pass  75: suminf.    2.86977 (23) obj. -33.0345 iterations 2
Cbc0038I Pass  76: suminf.    3.37527 (22) obj. -33.0345 iterations 8
Cbc0038I Pass  77: suminf.    3.05406 (24) obj. -33.0345 iterations 26
Cbc0038I Pass  78: suminf.    3.05406 (24) obj. -33.0345 iterations 4
Cbc0038I Pass  79: suminf.    3.98896 (21) obj. -33.0345 iterations 18
Cbc0038I Pass  80: suminf.    2.85964 (22) obj. -33.0345 iterations 9
Cbc0038I Pass  81: suminf.    3.90181 (22) obj. -33.0345 iterations 8
Cbc0038I Pass  82: suminf.    2.58561 (22) obj. -33.0345 iterations 4
Cbc0038I Pass  83: suminf.    3.95387 (23) obj. -33.0345 iterations 16
Cbc0038I Pass  84: suminf.    3.95387 (23) obj. -33.0345 iterations 2
Cbc0038I Pass  85: suminf.    3.88228 (20) obj. -33.0345 iterations 15
Cbc0038I Pass  86: suminf.    3.66874 (20) obj. -33.0345 iterations 4
Cbc0038I Pass  87: suminf.    4.42423 (21) obj. -33.0345 iterations 10
Cbc0038I Pass  88: suminf.    4.40206 (23) obj. -33.0345 iterations 3
Cbc0038I Pass  89: suminf.    4.18736 (23) obj. -33.0345 iterations 4
Cbc0038I Pass  90: suminf.    4.18736 (23) obj. -33.0345 iterations 1
Cbc0038I Pass  91: suminf.    4.40206 (23) obj. -33.0345 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -18.1284 - took 0.11 seconds
Cbc0012I Integer solution of -18.128428 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 19 rows 25 columns
Cbc0031I 76 added rows had average density of 37.736842
Cbc0013I At root node, 76 cuts changed objective from -57.285122 to -27.383672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13508 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2289 row cuts average 142.5 elements, 0 column cuts (0 active)  in 0.223 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 723 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1483 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 324 row cuts average 91.4 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 216 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.432 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.128428 best solution, best possible -27.383672 (2.77 seconds)
Cbc0012I Integer solution of -19.40868 found by rounding after 6724 iterations and 1 nodes (2.78 seconds)
Cbc0010I After 4 nodes, 3 on tree, -19.40868 best solution, best possible -27.038439 (3.65 seconds)
Cbc0012I Integer solution of -19.99714 found by DiveCoefficient after 7655 iterations and 5 nodes (3.69 seconds)
Cbc0016I Integer solution of -21.202902 found by strong branching after 7848 iterations and 7 nodes (3.94 seconds)
Cbc0010I After 12 nodes, 5 on tree, -21.202902 best solution, best possible -27.038439 (4.39 seconds)
Cbc0010I After 22 nodes, 10 on tree, -21.202902 best solution, best possible -27.038439 (5.12 seconds)
Cbc0016I Integer solution of -21.54477 found by strong branching after 9544 iterations and 36 nodes (5.75 seconds)
Cbc0010I After 39 nodes, 11 on tree, -21.54477 best solution, best possible -27.038439 (5.87 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 53 rows 71 columns
Cbc0010I After 55 nodes, 9 on tree, -21.54477 best solution, best possible -27.038439 (6.60 seconds)
Cbc0010I After 72 nodes, 8 on tree, -21.54477 best solution, best possible -27.038439 (7.33 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 44 rows 58 columns
Cbc0012I Integer solution of -22.54477 found by RINS after 12727 iterations and 91 nodes (7.97 seconds)
Cbc0010I After 92 nodes, 3 on tree, -22.54477 best solution, best possible -27.001026 (8.07 seconds)
Cbc0010I After 107 nodes, 8 on tree, -22.54477 best solution, best possible -27.001026 (8.82 seconds)
Cbc0001I Search completed - best objective -22.54477, took 14020 iterations and 122 nodes (9.27 seconds)
Cbc0032I Strong branching done 1338 times (24539 iterations), fathomed 10 nodes and fixed 34 variables
Cbc0035I Maximum depth 20, 324 variables fixed on reduced cost
Total time (CPU seconds):       6.70   (Wallclock seconds):       9.30

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 4.01448e-05 - average 2.16999e-07, 9 fixed columns
Coin0506I Presolve 167 (-18) rows, 92 (-9) columns and 510 (-54) elements
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.3038189 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Coin0511I After Postsolve, objective 50.069123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Coin0511I After Postsolve, objective 50.069123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.06912322 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 12.9638
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.9501 iterations 69
Cbc0038I Solution found of -3.9501
Cbc0038I Relaxing continuous gives -3.9501
Cbc0038I Rounding solution of -10.3236 is better than previous of -3.9501

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 102 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -10.3236 to -20.2116 (0.06 seconds)
Cbc0038I Round again with cutoff of -23.1974
Cbc0038I Pass   2: suminf.    2.80262 (12) obj. -23.1974 iterations 15
Cbc0038I Pass   3: suminf.    1.74085 (8) obj. -23.1974 iterations 16
Cbc0038I Pass   4: suminf.    1.63033 (8) obj. -23.1974 iterations 5
Cbc0038I Pass   5: suminf.    0.87408 (5) obj. -23.1974 iterations 9
Cbc0038I Pass   6: suminf.    1.87399 (5) obj. -23.1974 iterations 5
Cbc0038I Pass   7: suminf.    1.73574 (5) obj. -23.1974 iterations 1
Cbc0038I Pass   8: suminf.    1.56333 (6) obj. -23.1974 iterations 2
Cbc0038I Pass   9: suminf.    1.87871 (6) obj. -23.1974 iterations 5
Cbc0038I Pass  10: suminf.    1.87871 (6) obj. -23.1974 iterations 0
Cbc0038I Pass  11: suminf.    1.80659 (6) obj. -23.1974 iterations 8
Cbc0038I Pass  12: suminf.    1.80659 (6) obj. -23.1974 iterations 0
Cbc0038I Pass  13: suminf.    1.73672 (6) obj. -23.1974 iterations 7
Cbc0038I Pass  14: suminf.    1.73012 (6) obj. -23.1974 iterations 1
Cbc0038I Pass  15: suminf.    1.96585 (5) obj. -23.1974 iterations 5
Cbc0038I Pass  16: suminf.    1.70838 (7) obj. -23.1974 iterations 4
Cbc0038I Pass  17: suminf.    1.70838 (7) obj. -23.1974 iterations 0
Cbc0038I Pass  18: suminf.    1.86109 (7) obj. -23.1974 iterations 7
Cbc0038I Pass  19: suminf.    1.86109 (7) obj. -23.1974 iterations 0
Cbc0038I Pass  20: suminf.    1.89193 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  21: suminf.    1.89251 (7) obj. -23.1974 iterations 1
Cbc0038I Pass  22: suminf.    1.71485 (6) obj. -23.1974 iterations 4
Cbc0038I Pass  23: suminf.    1.68031 (6) obj. -23.1974 iterations 2
Cbc0038I Pass  24: suminf.    2.11088 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  25: suminf.    1.83504 (7) obj. -23.1974 iterations 2
Cbc0038I Pass  26: suminf.    1.89251 (7) obj. -23.1974 iterations 7
Cbc0038I Pass  27: suminf.    1.71485 (6) obj. -23.1974 iterations 4
Cbc0038I Pass  28: suminf.    1.68031 (6) obj. -23.1974 iterations 2
Cbc0038I Pass  29: suminf.    2.11088 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  30: suminf.    1.83504 (7) obj. -23.1974 iterations 2
Cbc0038I Pass  31: suminf.    1.89251 (7) obj. -23.1974 iterations 7
Cbc0038I Rounding solution of -21.4594 is better than previous of -20.2116

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -21.4594 to -22.2029 (0.12 seconds)
Cbc0038I Round again with cutoff of -28.5718
Cbc0038I Pass  31: suminf.    3.46215 (15) obj. -28.5718 iterations 3
Cbc0038I Pass  32: suminf.    3.46215 (15) obj. -28.5718 iterations 0
Cbc0038I Pass  33: suminf.    3.08525 (10) obj. -28.5718 iterations 12
Cbc0038I Pass  34: suminf.    2.65929 (11) obj. -28.5718 iterations 3
Cbc0038I Pass  35: suminf.    2.65929 (11) obj. -28.5718 iterations 0
Cbc0038I Pass  36: suminf.    2.71889 (11) obj. -28.5718 iterations 10
Cbc0038I Pass  37: suminf.    2.71889 (11) obj. -28.5718 iterations 0
Cbc0038I Pass  38: suminf.    3.15462 (10) obj. -28.5718 iterations 8
Cbc0038I Pass  39: suminf.    2.74325 (9) obj. -28.5718 iterations 3
Cbc0038I Pass  40: suminf.    2.14129 (8) obj. -28.5718 iterations 1
Cbc0038I Pass  41: suminf.    2.42893 (7) obj. -28.5718 iterations 9
Cbc0038I Pass  42: suminf.    2.36973 (7) obj. -28.5718 iterations 1
Cbc0038I Pass  43: suminf.    2.54803 (7) obj. -28.5718 iterations 4
Cbc0038I Pass  44: suminf.    2.19604 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  45: suminf.    2.19604 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  46: suminf.    2.59365 (7) obj. -28.5718 iterations 9
Cbc0038I Pass  47: suminf.    2.59459 (7) obj. -28.5718 iterations 1
Cbc0038I Pass  48: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I Pass  49: suminf.    2.35435 (6) obj. -28.5718 iterations 2
Cbc0038I Pass  50: suminf.    2.15871 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  51: suminf.    2.15871 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  52: suminf.    2.60611 (7) obj. -28.5718 iterations 7
Cbc0038I Pass  53: suminf.    2.59459 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  54: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I Pass  55: suminf.    2.35435 (6) obj. -28.5718 iterations 2
Cbc0038I Pass  56: suminf.    2.15871 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  57: suminf.    2.15871 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  58: suminf.    2.60611 (7) obj. -28.5718 iterations 7
Cbc0038I Pass  59: suminf.    2.59459 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  60: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -22.2029 - took 0.16 seconds
Cbc0012I Integer solution of -22.202902 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 102 rows 58 columns
Cbc0031I 35 added rows had average density of 57
Cbc0013I At root node, 35 cuts changed objective from -50.069123 to -41.258279 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27067 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3074 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.185 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 225 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.202902 best solution, best possible -41.258279 (2.18 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 12 rows 13 columns
Cbc0004I Integer solution of -22.311062 found after 14917 iterations and 43 nodes (2.56 seconds)
Cbc0004I Integer solution of -22.54477 found after 14951 iterations and 47 nodes (2.57 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 70 rows 41 columns
Cbc0010I After 133 nodes, 4 on tree, -22.54477 best solution, best possible -36.439736 (2.88 seconds)
Cbc0001I Search completed - best objective -22.54477, took 18948 iterations and 152 nodes (2.93 seconds)
Cbc0032I Strong branching done 1496 times (29015 iterations), fathomed 8 nodes and fixed 59 variables
Cbc0035I Maximum depth 45, 299 variables fixed on reduced cost
Total time (CPU seconds):       2.83   (Wallclock seconds):       2.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-73) rows, 147 (-56) columns and 2948 (-2706) elements
Clp1000I sum of infeasibilities 2.1018e-07 - average 1.59227e-09, 42 fixed columns
Coin0506I Presolve 91 (-41) rows, 103 (-44) columns and 1635 (-1313) elements
Clp0006I 0  Obj 51.264978 Dual inf 6.4241576 (103)
Clp0029I End of values pass after 103 iterations
Clp0014I Perturbing problem by 0.001% of 1.9370235 - largest nonzero change 1.8608195e-05 ( 0.0015823696%) - largest zero change 2.8203985e-05
Clp0000I Optimal - objective value 64.408245
Clp0000I Optimal - objective value 64.408245
Coin0511I After Postsolve, objective 64.408245, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 64.408245
Clp0000I Optimal - objective value 64.408245
Clp0000I Optimal - objective value 64.408245
Clp0000I Optimal - objective value 64.408245
Coin0511I After Postsolve, objective 64.408245, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.40824523 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 147 columns (147 integer (147 of which binary)) and 2952 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.381%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 6.94509
Cbc0038I Pass   1: suminf.    2.87195 (39) obj. -50.1899 iterations 11
Cbc0038I Pass   2: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass   3: suminf.    0.71361 (14) obj. -17.5106 iterations 25
Cbc0038I Solution found of -3.29086
Cbc0038I Rounding solution of -5.83155 is better than previous of -3.29086

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -10.977
Cbc0038I Pass   4: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass   5: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass   6: suminf.    1.62344 (26) obj. -30.4381 iterations 13
Cbc0038I Pass   7: suminf.    0.85420 (16) obj. -19.37 iterations 10
Cbc0038I Pass   8: suminf.    0.66161 (2) obj. -10.977 iterations 19
Cbc0038I Pass   9: suminf.    0.54222 (2) obj. -11.4546 iterations 2
Cbc0038I Pass  10: suminf.    1.48545 (14) obj. -12.3135 iterations 39
Cbc0038I Pass  11: suminf.    1.48545 (14) obj. -12.3135 iterations 5
Cbc0038I Pass  12: suminf.    0.77146 (6) obj. -10.977 iterations 22
Cbc0038I Pass  13: suminf.    0.68452 (5) obj. -11.4496 iterations 3
Cbc0038I Pass  14: suminf.    0.59006 (4) obj. -10.977 iterations 8
Cbc0038I Pass  15: suminf.    0.57141 (4) obj. -11.033 iterations 4
Cbc0038I Pass  16: suminf.    2.32167 (12) obj. -10.977 iterations 23
Cbc0038I Pass  17: suminf.    2.14475 (11) obj. -10.977 iterations 8
Cbc0038I Pass  18: suminf.    1.68369 (10) obj. -10.977 iterations 1
Cbc0038I Pass  19: suminf.    1.45443 (10) obj. -13.6709 iterations 1
Cbc0038I Pass  20: suminf.    1.54745 (6) obj. -10.977 iterations 12
Cbc0038I Pass  21: suminf.    1.54745 (6) obj. -10.977 iterations 1
Cbc0038I Pass  22: suminf.    1.21729 (6) obj. -10.977 iterations 11
Cbc0038I Pass  23: suminf.    1.02698 (7) obj. -10.977 iterations 1
Cbc0038I Pass  24: suminf.    1.28369 (6) obj. -10.977 iterations 5
Cbc0038I Pass  25: suminf.    1.27469 (6) obj. -10.977 iterations 4
Cbc0038I Pass  26: suminf.    1.28369 (6) obj. -10.977 iterations 5
Cbc0038I Pass  27: suminf.    2.07512 (11) obj. -10.977 iterations 25
Cbc0038I Pass  28: suminf.    1.50520 (10) obj. -10.977 iterations 13
Cbc0038I Pass  29: suminf.    1.48857 (7) obj. -10.977 iterations 11
Cbc0038I Pass  30: suminf.    1.14367 (6) obj. -10.977 iterations 4
Cbc0038I Pass  31: suminf.    1.48857 (7) obj. -10.977 iterations 6
Cbc0038I Pass  32: suminf.    1.51456 (11) obj. -10.977 iterations 20
Cbc0038I Pass  33: suminf.    1.23896 (10) obj. -10.977 iterations 7
Cbc0038I Rounding solution of -6.94345 is better than previous of -5.83155

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 24 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -6.94345 to -13.9804 (0.08 seconds)
Cbc0038I Round again with cutoff of -22.6414
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass  34: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass  35: suminf.    1.50770 (15) obj. -22.6414 iterations 28
Cbc0038I Pass  36: suminf.    1.22514 (15) obj. -23.7716 iterations 1
Cbc0038I Pass  37: suminf.    2.31769 (13) obj. -22.6414 iterations 25
Cbc0038I Pass  38: suminf.    1.88782 (12) obj. -22.6414 iterations 3
Cbc0038I Pass  39: suminf.    2.05051 (10) obj. -22.6414 iterations 10
Cbc0038I Pass  40: suminf.    1.63010 (10) obj. -22.6414 iterations 2
Cbc0038I Pass  41: suminf.    2.23631 (12) obj. -22.6414 iterations 6
Cbc0038I Pass  42: suminf.    1.85884 (13) obj. -22.6414 iterations 4
Cbc0038I Pass  43: suminf.    2.25913 (13) obj. -22.6414 iterations 5
Cbc0038I Pass  44: suminf.    2.20653 (13) obj. -22.6414 iterations 1
Cbc0038I Pass  45: suminf.    2.77779 (10) obj. -22.6414 iterations 16
Cbc0038I Pass  46: suminf.    2.02533 (11) obj. -22.6414 iterations 4
Cbc0038I Pass  47: suminf.    2.02533 (11) obj. -22.6414 iterations 2
Cbc0038I Pass  48: suminf.    2.29298 (11) obj. -22.6414 iterations 4
Cbc0038I Pass  49: suminf.    2.29298 (11) obj. -22.6414 iterations 2
Cbc0038I Pass  50: suminf.    2.02533 (11) obj. -22.6414 iterations 4
Cbc0038I Pass  51: suminf.    3.21881 (16) obj. -22.6414 iterations 22
Cbc0038I Pass  52: suminf.    3.21881 (16) obj. -22.6414 iterations 7
Cbc0038I Pass  53: suminf.    2.71038 (13) obj. -22.6414 iterations 10
Cbc0038I Pass  54: suminf.    2.66340 (13) obj. -22.6414 iterations 2
Cbc0038I Pass  55: suminf.    3.01919 (13) obj. -22.6414 iterations 5
Cbc0038I Pass  56: suminf.    3.01919 (13) obj. -22.6414 iterations 1
Cbc0038I Pass  57: suminf.    3.00446 (13) obj. -22.6414 iterations 4
Cbc0038I Pass  58: suminf.    3.00446 (13) obj. -22.6414 iterations 1
Cbc0038I Pass  59: suminf.    3.01919 (13) obj. -22.6414 iterations 3
Cbc0038I Pass  60: suminf.    3.42040 (20) obj. -22.6414 iterations 34
Cbc0038I Pass  61: suminf.    2.26441 (18) obj. -22.6414 iterations 11
Cbc0038I Pass  62: suminf.    2.84135 (17) obj. -22.6414 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 32 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -13.9804 to -18.1284 (0.13 seconds)
Cbc0038I Round again with cutoff of -33.0345
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass  63: suminf.    2.87195 (39) obj. -50.1899 iterations 0
Cbc0038I Pass  64: suminf.    1.81768 (21) obj. -33.0345 iterations 26
Cbc0038I Pass  65: suminf.    1.81768 (21) obj. -33.0345 iterations 0
Cbc0038I Pass  66: suminf.    2.32659 (23) obj. -33.0345 iterations 17
Cbc0038I Pass  67: suminf.    2.32659 (23) obj. -33.0345 iterations 0
Cbc0038I Pass  68: suminf.    2.74776 (23) obj. -33.0345 iterations 8
Cbc0038I Pass  69: suminf.    2.72441 (23) obj. -33.0345 iterations 5
Cbc0038I Pass  70: suminf.    2.56537 (23) obj. -33.0345 iterations 4
Cbc0038I Pass  71: suminf.    2.52977 (21) obj. -33.0345 iterations 5
Cbc0038I Pass  72: suminf.    2.82554 (23) obj. -33.0345 iterations 9
Cbc0038I Pass  73: suminf.    2.47264 (23) obj. -33.0345 iterations 4
Cbc0038I Pass  74: suminf.    3.30513 (22) obj. -33.0345 iterations 15
Cbc0038I Pass  75: suminf.    2.86977 (23) obj. -33.0345 iterations 2
Cbc0038I Pass  76: suminf.    3.37527 (22) obj. -33.0345 iterations 8
Cbc0038I Pass  77: suminf.    3.05406 (24) obj. -33.0345 iterations 26
Cbc0038I Pass  78: suminf.    3.05406 (24) obj. -33.0345 iterations 4
Cbc0038I Pass  79: suminf.    3.98896 (21) obj. -33.0345 iterations 18
Cbc0038I Pass  80: suminf.    2.85964 (22) obj. -33.0345 iterations 9
Cbc0038I Pass  81: suminf.    3.90181 (22) obj. -33.0345 iterations 8
Cbc0038I Pass  82: suminf.    2.58561 (22) obj. -33.0345 iterations 4
Cbc0038I Pass  83: suminf.    3.95387 (23) obj. -33.0345 iterations 16
Cbc0038I Pass  84: suminf.    3.95387 (23) obj. -33.0345 iterations 2
Cbc0038I Pass  85: suminf.    3.88228 (20) obj. -33.0345 iterations 15
Cbc0038I Pass  86: suminf.    3.66874 (20) obj. -33.0345 iterations 4
Cbc0038I Pass  87: suminf.    4.42423 (21) obj. -33.0345 iterations 10
Cbc0038I Pass  88: suminf.    4.40206 (23) obj. -33.0345 iterations 3
Cbc0038I Pass  89: suminf.    4.18736 (23) obj. -33.0345 iterations 4
Cbc0038I Pass  90: suminf.    4.18736 (23) obj. -33.0345 iterations 1
Cbc0038I Pass  91: suminf.    4.40206 (23) obj. -33.0345 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -18.1284 - took 0.12 seconds
Cbc0012I Integer solution of -18.128428 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 19 rows 25 columns
Cbc0031I 76 added rows had average density of 37.736842
Cbc0013I At root node, 76 cuts changed objective from -57.285122 to -27.383672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13508 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2289 row cuts average 142.5 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 723 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1483 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 324 row cuts average 91.4 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 216 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.444 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.128428 best solution, best possible -27.383672 (2.81 seconds)
Cbc0012I Integer solution of -19.40868 found by rounding after 6724 iterations and 1 nodes (2.82 seconds)
Cbc0010I After 3 nodes, 2 on tree, -19.40868 best solution, best possible -27.038439 (3.70 seconds)
Cbc0012I Integer solution of -19.99714 found by DiveCoefficient after 7655 iterations and 5 nodes (3.93 seconds)
Cbc0016I Integer solution of -21.202902 found by strong branching after 7848 iterations and 7 nodes (4.19 seconds)
Cbc0010I After 9 nodes, 6 on tree, -21.202902 best solution, best possible -27.038439 (4.43 seconds)
Cbc0010I After 18 nodes, 7 on tree, -21.202902 best solution, best possible -27.038439 (5.17 seconds)
Cbc0010I After 35 nodes, 11 on tree, -21.202902 best solution, best possible -27.038439 (5.95 seconds)
Cbc0016I Integer solution of -21.54477 found by strong branching after 9544 iterations and 36 nodes (6.04 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 53 rows 71 columns
Cbc0010I After 44 nodes, 11 on tree, -21.54477 best solution, best possible -27.038439 (6.73 seconds)
Cbc0010I After 56 nodes, 9 on tree, -21.54477 best solution, best possible -27.038439 (7.43 seconds)
Cbc0010I After 72 nodes, 8 on tree, -21.54477 best solution, best possible -27.038439 (8.17 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 44 rows 58 columns
Cbc0012I Integer solution of -22.54477 found by RINS after 12727 iterations and 91 nodes (8.92 seconds)
Cbc0010I After 91 nodes, 2 on tree, -22.54477 best solution, best possible -27.001026 (8.92 seconds)
Cbc0010I After 103 nodes, 9 on tree, -22.54477 best solution, best possible -27.001026 (9.63 seconds)
Cbc0001I Search completed - best objective -22.54477, took 14020 iterations and 122 nodes (10.33 seconds)
Cbc0032I Strong branching done 1338 times (24539 iterations), fathomed 10 nodes and fixed 34 variables
Cbc0035I Maximum depth 20, 324 variables fixed on reduced cost
Total time (CPU seconds):       7.19   (Wallclock seconds):       10.36

