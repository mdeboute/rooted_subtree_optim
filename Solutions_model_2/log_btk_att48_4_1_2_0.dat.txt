Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 47 (-3) columns and 254 (-31) elements
Clp1000I sum of infeasibilities 1.98501e-06 - average 2.3631e-08, 7 fixed columns
Coin0506I Presolve 72 (-12) rows, 40 (-7) columns and 216 (-38) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 21.258917 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 2109.7655
Clp0000I Optimal - objective value 2109.7655
Coin0511I After Postsolve, objective 2109.7655, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 20.766314 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 2109.7655
Clp0000I Optimal - objective value 2109.7655
Clp0000I Optimal - objective value 2109.7655
Coin0511I After Postsolve, objective 2109.7655, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2109.765486 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 84 rows, 47 columns (46 integer (46 of which binary)) and 254 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.837%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.2081
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -846.253 iterations 34
Cbc0038I Solution found of -846.253
Cbc0038I Relaxing continuous gives -846.253
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 47 columns, reduced to 53 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -972.605
Cbc0038I Pass   2: suminf.    0.32197 (5) obj. -972.605 iterations 4
Cbc0038I Pass   3: suminf.    1.62924 (6) obj. -972.605 iterations 8
Cbc0038I Pass   4: suminf.    1.00151 (4) obj. -972.605 iterations 4
Cbc0038I Pass   5: suminf.    1.89335 (7) obj. -972.605 iterations 6
Cbc0038I Pass   6: suminf.    1.89335 (7) obj. -972.605 iterations 0
Cbc0038I Pass   7: suminf.    1.17369 (6) obj. -972.605 iterations 7
Cbc0038I Pass   8: suminf.    1.17369 (6) obj. -972.605 iterations 0
Cbc0038I Pass   9: suminf.    1.90048 (6) obj. -972.605 iterations 4
Cbc0038I Pass  10: suminf.    1.90048 (6) obj. -972.605 iterations 0
Cbc0038I Pass  11: suminf.    3.22210 (10) obj. -972.605 iterations 15
Cbc0038I Pass  12: suminf.    2.41684 (10) obj. -972.605 iterations 6
Cbc0038I Pass  13: suminf.    2.40108 (10) obj. -972.605 iterations 1
Cbc0038I Pass  14: suminf.    3.22158 (8) obj. -972.605 iterations 9
Cbc0038I Pass  15: suminf.    1.92588 (7) obj. -972.605 iterations 3
Cbc0038I Pass  16: suminf.    1.50846 (5) obj. -972.605 iterations 3
Cbc0038I Pass  17: suminf.    1.42102 (5) obj. -972.605 iterations 3
Cbc0038I Pass  18: suminf.    1.42102 (5) obj. -972.605 iterations 0
Cbc0038I Pass  19: suminf.    1.75045 (6) obj. -972.605 iterations 4
Cbc0038I Pass  20: suminf.    1.75045 (6) obj. -972.605 iterations 0
Cbc0038I Pass  21: suminf.    1.17369 (6) obj. -972.605 iterations 5
Cbc0038I Pass  22: suminf.    1.17369 (6) obj. -972.605 iterations 0
Cbc0038I Pass  23: suminf.    1.90048 (6) obj. -972.605 iterations 4
Cbc0038I Pass  24: suminf.    1.90048 (6) obj. -972.605 iterations 0
Cbc0038I Pass  25: suminf.    1.17369 (6) obj. -972.605 iterations 3
Cbc0038I Pass  26: suminf.    2.62952 (8) obj. -972.605 iterations 14
Cbc0038I Pass  27: suminf.    2.62952 (8) obj. -972.605 iterations 1
Cbc0038I Pass  28: suminf.    2.55142 (8) obj. -972.605 iterations 11
Cbc0038I Pass  29: suminf.    1.98800 (8) obj. -972.605 iterations 3
Cbc0038I Pass  30: suminf.    1.81184 (7) obj. -972.605 iterations 1
Cbc0038I Pass  31: suminf.    1.49928 (6) obj. -972.605 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 47 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -846.253 - took 0.04 seconds
Cbc0012I Integer solution of -846.2535 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 84 rows 47 columns, reduced to 53 rows 30 columns
Cbc0031I 19 added rows had average density of 30.263158
Cbc0013I At root node, 19 cuts changed objective from -2109.7655 to -1368.2874 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6346 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1556 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 139 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -846.2535000000003, took 5073 iterations and 16 nodes (0.50 seconds)
Cbc0032I Strong branching done 314 times (6234 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 6, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-13) rows, 93 (-3) columns and 1321 (-92) elements
Clp1000I sum of infeasibilities 1.20483e-08 - average 1.41745e-10, 78 fixed columns
Coin0506I Presolve 12 (-73) rows, 15 (-78) columns and 49 (-1272) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 1.8235353 - largest nonzero change 1.7857169e-05 ( 0.00089285843%) - largest zero change 1.6818804e-05
Clp0000I Optimal - objective value -1018.1878
Clp0000I Optimal - objective value -1018.1878
Coin0511I After Postsolve, objective -1018.1878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.4972281 - largest nonzero change 2.1867126e-05 ( 0.0015823696%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2562.7639
Clp0000I Optimal - objective value 2562.7639
Clp0000I Optimal - objective value 2562.7639
Coin0511I After Postsolve, objective 2562.7639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2562.763894 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 93 columns (93 integer (93 of which binary)) and 1323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.136%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.79926
Cbc0038I Pass   1: suminf.    2.60334 (25) obj. -1527.15 iterations 20
Cbc0038I Pass   2: suminf.    2.60334 (25) obj. -1527.15 iterations 5
Cbc0038I Pass   3: suminf.    1.08237 (14) obj. -699.727 iterations 11
Cbc0038I Pass   4: suminf.    0.15790 (3) obj. -332.67 iterations 11
Cbc0038I Solution found of -287.569
Cbc0038I Rounding solution of -506.678 is better than previous of -287.569

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 93 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -506.678 to -610.822 (0.02 seconds)
Cbc0038I Round again with cutoff of -781.381
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.60334 (25) obj. -1527.15 iterations 0
Cbc0038I Pass   6: suminf.    2.60334 (25) obj. -1527.15 iterations 2
Cbc0038I Pass   7: suminf.    0.93768 (14) obj. -781.381 iterations 37
Cbc0038I Pass   8: suminf.    0.93768 (14) obj. -781.381 iterations 0
Cbc0038I Pass   9: suminf.    0.74016 (4) obj. -781.381 iterations 16
Cbc0038I Pass  10: suminf.    0.52500 (3) obj. -836.297 iterations 4
Cbc0038I Pass  11: suminf.    0.27112 (1) obj. -781.381 iterations 5
Cbc0038I Pass  12: suminf.    0.26667 (1) obj. -782.422 iterations 3
Cbc0038I Pass  13: suminf.    2.39370 (14) obj. -781.381 iterations 23
Cbc0038I Pass  14: suminf.    1.56225 (7) obj. -781.381 iterations 9
Cbc0038I Pass  15: suminf.    1.20792 (6) obj. -874.538 iterations 2
Cbc0038I Pass  16: suminf.    0.77835 (2) obj. -781.381 iterations 10
Cbc0038I Pass  17: suminf.    0.77835 (2) obj. -781.381 iterations 0
Cbc0038I Pass  18: suminf.    0.22899 (1) obj. -781.381 iterations 2
Cbc0038I Pass  19: suminf.    0.31111 (1) obj. -888.999 iterations 4
Cbc0038I Pass  20: suminf.    2.79295 (20) obj. -781.381 iterations 32
Cbc0038I Pass  21: suminf.    2.64651 (13) obj. -792.281 iterations 10
Cbc0038I Pass  22: suminf.    1.13404 (6) obj. -781.381 iterations 21
Cbc0038I Pass  23: suminf.    1.13404 (6) obj. -781.381 iterations 1
Cbc0038I Pass  24: suminf.    0.69527 (3) obj. -781.381 iterations 21
Cbc0038I Pass  25: suminf.    0.69527 (3) obj. -781.381 iterations 0
Cbc0038I Pass  26: suminf.    0.77060 (3) obj. -781.381 iterations 1
Cbc0038I Pass  27: suminf.    0.77060 (3) obj. -781.381 iterations 0
Cbc0038I Pass  28: suminf.    0.69527 (3) obj. -781.381 iterations 1
Cbc0038I Pass  29: suminf.    5.28088 (19) obj. -781.381 iterations 20
Cbc0038I Pass  30: suminf.    1.99467 (10) obj. -781.381 iterations 15
Cbc0038I Pass  31: suminf.    1.55875 (8) obj. -804.783 iterations 3
Cbc0038I Pass  32: suminf.    1.25584 (4) obj. -781.381 iterations 16
Cbc0038I Pass  33: suminf.    0.89435 (4) obj. -838.134 iterations 2
Cbc0038I Pass  34: suminf.    2.47444 (11) obj. -781.381 iterations 14
Cbc0038I Rounding solution of -727.799 is better than previous of -610.822

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 93 columns, reduced to 31 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -1088.39
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.60334 (25) obj. -1527.15 iterations 0
Cbc0038I Pass  35: suminf.    2.60334 (25) obj. -1527.15 iterations 2
Cbc0038I Pass  36: suminf.    2.09595 (23) obj. -1088.39 iterations 26
Cbc0038I Pass  37: suminf.    2.09595 (23) obj. -1088.39 iterations 1
Cbc0038I Pass  38: suminf.    1.48468 (7) obj. -1088.39 iterations 22
Cbc0038I Pass  39: suminf.    1.48468 (7) obj. -1088.39 iterations 0
Cbc0038I Pass  40: suminf.    1.13599 (6) obj. -1088.39 iterations 6
Cbc0038I Pass  41: suminf.    1.12195 (4) obj. -1088.39 iterations 1
Cbc0038I Pass  42: suminf.    0.92632 (5) obj. -1088.39 iterations 6
Cbc0038I Pass  43: suminf.    0.92964 (4) obj. -1088.39 iterations 1
Cbc0038I Pass  44: suminf.    1.80579 (10) obj. -1088.39 iterations 18
Cbc0038I Pass  45: suminf.    1.78823 (9) obj. -1104.99 iterations 6
Cbc0038I Pass  46: suminf.    1.66333 (7) obj. -1088.39 iterations 11
Cbc0038I Pass  47: suminf.    1.66333 (7) obj. -1088.39 iterations 0
Cbc0038I Pass  48: suminf.    1.84131 (7) obj. -1088.39 iterations 1
Cbc0038I Pass  49: suminf.    1.84131 (7) obj. -1088.39 iterations 0
Cbc0038I Pass  50: suminf.    1.66333 (7) obj. -1088.39 iterations 3
Cbc0038I Pass  51: suminf.    2.44994 (11) obj. -1088.39 iterations 15
Cbc0038I Pass  52: suminf.    2.25410 (11) obj. -1113.45 iterations 6
Cbc0038I Pass  53: suminf.    2.02409 (8) obj. -1088.39 iterations 11
Cbc0038I Pass  54: suminf.    2.02409 (8) obj. -1088.39 iterations 0
Cbc0038I Pass  55: suminf.    2.02072 (8) obj. -1088.39 iterations 2
Cbc0038I Pass  56: suminf.    2.02072 (8) obj. -1088.39 iterations 0
Cbc0038I Pass  57: suminf.    2.02409 (8) obj. -1088.39 iterations 2
Cbc0038I Pass  58: suminf.    2.81802 (15) obj. -1088.39 iterations 16
Cbc0038I Pass  59: suminf.    2.73268 (13) obj. -1105 iterations 4
Cbc0038I Pass  60: suminf.    1.95515 (8) obj. -1088.39 iterations 13
Cbc0038I Pass  61: suminf.    1.73418 (8) obj. -1114.24 iterations 4
Cbc0038I Pass  62: suminf.    2.68244 (13) obj. -1088.39 iterations 15
Cbc0038I Pass  63: suminf.    2.48368 (12) obj. -1276.21 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 93 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -727.799 to -846.254 (0.06 seconds)
Cbc0038I Round again with cutoff of -1456.79
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.60334 (25) obj. -1527.15 iterations 0
Cbc0038I Pass  64: suminf.    2.60334 (25) obj. -1527.15 iterations 2
Cbc0038I Pass  65: suminf.    3.17803 (25) obj. -1456.79 iterations 25
Cbc0038I Pass  66: suminf.    3.02888 (25) obj. -1456.79 iterations 2
Cbc0038I Pass  67: suminf.    3.29128 (22) obj. -1456.79 iterations 13
Cbc0038I Pass  68: suminf.    2.58131 (20) obj. -1456.79 iterations 6
Cbc0038I Pass  69: suminf.    2.58131 (20) obj. -1456.79 iterations 1
Cbc0038I Pass  70: suminf.    2.29625 (11) obj. -1456.79 iterations 18
Cbc0038I Pass  71: suminf.    2.29625 (11) obj. -1456.79 iterations 0
Cbc0038I Pass  72: suminf.    3.54886 (11) obj. -1456.79 iterations 8
Cbc0038I Pass  73: suminf.    3.54886 (11) obj. -1456.79 iterations 1
Cbc0038I Pass  74: suminf.    2.53415 (11) obj. -1456.79 iterations 7
Cbc0038I Pass  75: suminf.    2.53415 (11) obj. -1456.79 iterations 1
Cbc0038I Pass  76: suminf.    2.46240 (11) obj. -1456.79 iterations 8
Cbc0038I Pass  77: suminf.    2.46240 (11) obj. -1456.79 iterations 6
Cbc0038I Pass  78: suminf.    2.53415 (11) obj. -1456.79 iterations 7
Cbc0038I Pass  79: suminf.    4.95201 (17) obj. -1456.79 iterations 22
Cbc0038I Pass  80: suminf.    4.88587 (18) obj. -1456.79 iterations 5
Cbc0038I Pass  81: suminf.    2.74906 (10) obj. -1456.79 iterations 19
Cbc0038I Pass  82: suminf.    2.52735 (10) obj. -1478.74 iterations 4
Cbc0038I Pass  83: suminf.    2.74906 (10) obj. -1456.79 iterations 7
Cbc0038I Pass  84: suminf.    3.82072 (16) obj. -1456.79 iterations 12
Cbc0038I Pass  85: suminf.    3.79816 (17) obj. -1456.79 iterations 10
Cbc0038I Pass  86: suminf.    2.28361 (9) obj. -1456.79 iterations 10
Cbc0038I Pass  87: suminf.    2.28361 (9) obj. -1456.79 iterations 1
Cbc0038I Pass  88: suminf.    1.85618 (8) obj. -1456.79 iterations 4
Cbc0038I Pass  89: suminf.    1.85618 (8) obj. -1456.79 iterations 1
Cbc0038I Pass  90: suminf.    1.94389 (8) obj. -1456.79 iterations 2
Cbc0038I Pass  91: suminf.    1.94389 (8) obj. -1456.79 iterations 0
Cbc0038I Pass  92: suminf.    1.85618 (8) obj. -1456.79 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -846.254 - took 0.06 seconds
Cbc0012I Integer solution of -846.2535 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 93 columns, reduced to 15 rows 19 columns
Cbc0031I 27 added rows had average density of 6.3333333
Cbc0013I At root node, 91 cuts changed objective from -2316.4107 to -842.03142 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 551 row cuts average 2.7 elements, 32 column cuts (32 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 49 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 84 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0001I Search completed - best objective -846.2535000000003, took 188 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 47 (-3) columns and 254 (-31) elements
Clp1000I sum of infeasibilities 1.98501e-06 - average 2.3631e-08, 7 fixed columns
Coin0506I Presolve 72 (-12) rows, 40 (-7) columns and 216 (-38) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 21.258917 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 2109.7655
Clp0000I Optimal - objective value 2109.7655
Coin0511I After Postsolve, objective 2109.7655, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 20.766314 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 2109.7655
Clp0000I Optimal - objective value 2109.7655
Clp0000I Optimal - objective value 2109.7655
Coin0511I After Postsolve, objective 2109.7655, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2109.765486 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 84 rows, 47 columns (46 integer (46 of which binary)) and 254 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.837%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.2081
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -846.253 iterations 34
Cbc0038I Solution found of -846.253
Cbc0038I Relaxing continuous gives -846.253
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 47 columns, reduced to 53 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -972.605
Cbc0038I Pass   2: suminf.    0.32197 (5) obj. -972.605 iterations 4
Cbc0038I Pass   3: suminf.    1.62924 (6) obj. -972.605 iterations 8
Cbc0038I Pass   4: suminf.    1.00151 (4) obj. -972.605 iterations 4
Cbc0038I Pass   5: suminf.    1.89335 (7) obj. -972.605 iterations 6
Cbc0038I Pass   6: suminf.    1.89335 (7) obj. -972.605 iterations 0
Cbc0038I Pass   7: suminf.    1.17369 (6) obj. -972.605 iterations 7
Cbc0038I Pass   8: suminf.    1.17369 (6) obj. -972.605 iterations 0
Cbc0038I Pass   9: suminf.    1.90048 (6) obj. -972.605 iterations 4
Cbc0038I Pass  10: suminf.    1.90048 (6) obj. -972.605 iterations 0
Cbc0038I Pass  11: suminf.    3.22210 (10) obj. -972.605 iterations 15
Cbc0038I Pass  12: suminf.    2.41684 (10) obj. -972.605 iterations 6
Cbc0038I Pass  13: suminf.    2.40108 (10) obj. -972.605 iterations 1
Cbc0038I Pass  14: suminf.    3.22158 (8) obj. -972.605 iterations 9
Cbc0038I Pass  15: suminf.    1.92588 (7) obj. -972.605 iterations 3
Cbc0038I Pass  16: suminf.    1.50846 (5) obj. -972.605 iterations 3
Cbc0038I Pass  17: suminf.    1.42102 (5) obj. -972.605 iterations 3
Cbc0038I Pass  18: suminf.    1.42102 (5) obj. -972.605 iterations 0
Cbc0038I Pass  19: suminf.    1.75045 (6) obj. -972.605 iterations 4
Cbc0038I Pass  20: suminf.    1.75045 (6) obj. -972.605 iterations 0
Cbc0038I Pass  21: suminf.    1.17369 (6) obj. -972.605 iterations 5
Cbc0038I Pass  22: suminf.    1.17369 (6) obj. -972.605 iterations 0
Cbc0038I Pass  23: suminf.    1.90048 (6) obj. -972.605 iterations 4
Cbc0038I Pass  24: suminf.    1.90048 (6) obj. -972.605 iterations 0
Cbc0038I Pass  25: suminf.    1.17369 (6) obj. -972.605 iterations 3
Cbc0038I Pass  26: suminf.    2.62952 (8) obj. -972.605 iterations 14
Cbc0038I Pass  27: suminf.    2.62952 (8) obj. -972.605 iterations 1
Cbc0038I Pass  28: suminf.    2.55142 (8) obj. -972.605 iterations 11
Cbc0038I Pass  29: suminf.    1.98800 (8) obj. -972.605 iterations 3
Cbc0038I Pass  30: suminf.    1.81184 (7) obj. -972.605 iterations 1
Cbc0038I Pass  31: suminf.    1.49928 (6) obj. -972.605 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 47 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -846.253 - took 0.04 seconds
Cbc0012I Integer solution of -846.2535 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 84 rows 47 columns, reduced to 53 rows 30 columns
Cbc0031I 19 added rows had average density of 30.263158
Cbc0013I At root node, 19 cuts changed objective from -2109.7655 to -1368.2874 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6346 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1556 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 139 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -846.2535000000003, took 5073 iterations and 16 nodes (0.58 seconds)
Cbc0032I Strong branching done 314 times (6234 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 6, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 93 (-4) columns and 1321 (-93) elements
Clp1000I sum of infeasibilities 1.20483e-08 - average 1.41745e-10, 78 fixed columns
Coin0506I Presolve 12 (-73) rows, 15 (-78) columns and 49 (-1272) elements
Clp0006I 0  Obj -1167.7373 Dual inf 28.672044 (13)
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 1.8235353 - largest nonzero change 1.7857169e-05 ( 0.00089285843%) - largest zero change 1.6818804e-05
Clp0000I Optimal - objective value -1018.1878
Clp0000I Optimal - objective value -1018.1878
Coin0511I After Postsolve, objective -1018.1878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1018.1878 Dual inf 4504.7629 (53)
Clp0014I Perturbing problem by 0.001% of 3.4972281 - largest nonzero change 2.1867126e-05 ( 0.0015823696%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2562.7639
Clp0000I Optimal - objective value 2562.7639
Clp0000I Optimal - objective value 2562.7639
Coin0511I After Postsolve, objective 2562.7639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2562.763894 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 93 columns (93 integer (93 of which binary)) and 1323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.136%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.79926
Cbc0038I Pass   1: suminf.    2.60334 (25) obj. -1527.15 iterations 20
Cbc0038I Pass   2: suminf.    2.60334 (25) obj. -1527.15 iterations 5
Cbc0038I Pass   3: suminf.    1.08237 (14) obj. -699.727 iterations 11
Cbc0038I Pass   4: suminf.    0.15790 (3) obj. -332.67 iterations 11
Cbc0038I Solution found of -287.569
Cbc0038I Rounding solution of -506.678 is better than previous of -287.569

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 93 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -506.678 to -610.822 (0.02 seconds)
Cbc0038I Round again with cutoff of -781.381
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.60334 (25) obj. -1527.15 iterations 0
Cbc0038I Pass   6: suminf.    2.60334 (25) obj. -1527.15 iterations 2
Cbc0038I Pass   7: suminf.    0.93768 (14) obj. -781.381 iterations 37
Cbc0038I Pass   8: suminf.    0.93768 (14) obj. -781.381 iterations 0
Cbc0038I Pass   9: suminf.    0.74016 (4) obj. -781.381 iterations 16
Cbc0038I Pass  10: suminf.    0.52500 (3) obj. -836.297 iterations 4
Cbc0038I Pass  11: suminf.    0.27112 (1) obj. -781.381 iterations 5
Cbc0038I Pass  12: suminf.    0.26667 (1) obj. -782.422 iterations 3
Cbc0038I Pass  13: suminf.    2.39370 (14) obj. -781.381 iterations 23
Cbc0038I Pass  14: suminf.    1.56225 (7) obj. -781.381 iterations 9
Cbc0038I Pass  15: suminf.    1.20792 (6) obj. -874.538 iterations 2
Cbc0038I Pass  16: suminf.    0.77835 (2) obj. -781.381 iterations 10
Cbc0038I Pass  17: suminf.    0.77835 (2) obj. -781.381 iterations 0
Cbc0038I Pass  18: suminf.    0.22899 (1) obj. -781.381 iterations 2
Cbc0038I Pass  19: suminf.    0.31111 (1) obj. -888.999 iterations 4
Cbc0038I Pass  20: suminf.    2.79295 (20) obj. -781.381 iterations 32
Cbc0038I Pass  21: suminf.    2.64651 (13) obj. -792.281 iterations 10
Cbc0038I Pass  22: suminf.    1.13404 (6) obj. -781.381 iterations 21
Cbc0038I Pass  23: suminf.    1.13404 (6) obj. -781.381 iterations 1
Cbc0038I Pass  24: suminf.    0.69527 (3) obj. -781.381 iterations 21
Cbc0038I Pass  25: suminf.    0.69527 (3) obj. -781.381 iterations 0
Cbc0038I Pass  26: suminf.    0.77060 (3) obj. -781.381 iterations 1
Cbc0038I Pass  27: suminf.    0.77060 (3) obj. -781.381 iterations 0
Cbc0038I Pass  28: suminf.    0.69527 (3) obj. -781.381 iterations 1
Cbc0038I Pass  29: suminf.    5.28088 (19) obj. -781.381 iterations 20
Cbc0038I Pass  30: suminf.    1.99467 (10) obj. -781.381 iterations 15
Cbc0038I Pass  31: suminf.    1.55875 (8) obj. -804.783 iterations 3
Cbc0038I Pass  32: suminf.    1.25584 (4) obj. -781.381 iterations 16
Cbc0038I Pass  33: suminf.    0.89435 (4) obj. -838.134 iterations 2
Cbc0038I Pass  34: suminf.    2.47444 (11) obj. -781.381 iterations 14
Cbc0038I Rounding solution of -727.799 is better than previous of -610.822

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 93 columns, reduced to 31 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -1088.39
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.60334 (25) obj. -1527.15 iterations 0
Cbc0038I Pass  35: suminf.    2.60334 (25) obj. -1527.15 iterations 2
Cbc0038I Pass  36: suminf.    2.09595 (23) obj. -1088.39 iterations 26
Cbc0038I Pass  37: suminf.    2.09595 (23) obj. -1088.39 iterations 1
Cbc0038I Pass  38: suminf.    1.48468 (7) obj. -1088.39 iterations 22
Cbc0038I Pass  39: suminf.    1.48468 (7) obj. -1088.39 iterations 0
Cbc0038I Pass  40: suminf.    1.13599 (6) obj. -1088.39 iterations 6
Cbc0038I Pass  41: suminf.    1.12195 (4) obj. -1088.39 iterations 1
Cbc0038I Pass  42: suminf.    0.92632 (5) obj. -1088.39 iterations 6
Cbc0038I Pass  43: suminf.    0.92964 (4) obj. -1088.39 iterations 1
Cbc0038I Pass  44: suminf.    1.80579 (10) obj. -1088.39 iterations 18
Cbc0038I Pass  45: suminf.    1.78823 (9) obj. -1104.99 iterations 6
Cbc0038I Pass  46: suminf.    1.66333 (7) obj. -1088.39 iterations 11
Cbc0038I Pass  47: suminf.    1.66333 (7) obj. -1088.39 iterations 0
Cbc0038I Pass  48: suminf.    1.84131 (7) obj. -1088.39 iterations 1
Cbc0038I Pass  49: suminf.    1.84131 (7) obj. -1088.39 iterations 0
Cbc0038I Pass  50: suminf.    1.66333 (7) obj. -1088.39 iterations 3
Cbc0038I Pass  51: suminf.    2.44994 (11) obj. -1088.39 iterations 15
Cbc0038I Pass  52: suminf.    2.25410 (11) obj. -1113.45 iterations 6
Cbc0038I Pass  53: suminf.    2.02409 (8) obj. -1088.39 iterations 11
Cbc0038I Pass  54: suminf.    2.02409 (8) obj. -1088.39 iterations 0
Cbc0038I Pass  55: suminf.    2.02072 (8) obj. -1088.39 iterations 2
Cbc0038I Pass  56: suminf.    2.02072 (8) obj. -1088.39 iterations 0
Cbc0038I Pass  57: suminf.    2.02409 (8) obj. -1088.39 iterations 2
Cbc0038I Pass  58: suminf.    2.81802 (15) obj. -1088.39 iterations 16
Cbc0038I Pass  59: suminf.    2.73268 (13) obj. -1105 iterations 4
Cbc0038I Pass  60: suminf.    1.95515 (8) obj. -1088.39 iterations 13
Cbc0038I Pass  61: suminf.    1.73418 (8) obj. -1114.24 iterations 4
Cbc0038I Pass  62: suminf.    2.68244 (13) obj. -1088.39 iterations 15
Cbc0038I Pass  63: suminf.    2.48368 (12) obj. -1276.21 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 93 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -727.799 to -846.254 (0.07 seconds)
Cbc0038I Round again with cutoff of -1456.79
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.60334 (25) obj. -1527.15 iterations 0
Cbc0038I Pass  64: suminf.    2.60334 (25) obj. -1527.15 iterations 2
Cbc0038I Pass  65: suminf.    3.17803 (25) obj. -1456.79 iterations 25
Cbc0038I Pass  66: suminf.    3.02888 (25) obj. -1456.79 iterations 2
Cbc0038I Pass  67: suminf.    3.29128 (22) obj. -1456.79 iterations 13
Cbc0038I Pass  68: suminf.    2.58131 (20) obj. -1456.79 iterations 6
Cbc0038I Pass  69: suminf.    2.58131 (20) obj. -1456.79 iterations 1
Cbc0038I Pass  70: suminf.    2.29625 (11) obj. -1456.79 iterations 18
Cbc0038I Pass  71: suminf.    2.29625 (11) obj. -1456.79 iterations 0
Cbc0038I Pass  72: suminf.    3.54886 (11) obj. -1456.79 iterations 8
Cbc0038I Pass  73: suminf.    3.54886 (11) obj. -1456.79 iterations 1
Cbc0038I Pass  74: suminf.    2.53415 (11) obj. -1456.79 iterations 7
Cbc0038I Pass  75: suminf.    2.53415 (11) obj. -1456.79 iterations 1
Cbc0038I Pass  76: suminf.    2.46240 (11) obj. -1456.79 iterations 8
Cbc0038I Pass  77: suminf.    2.46240 (11) obj. -1456.79 iterations 6
Cbc0038I Pass  78: suminf.    2.53415 (11) obj. -1456.79 iterations 7
Cbc0038I Pass  79: suminf.    4.95201 (17) obj. -1456.79 iterations 22
Cbc0038I Pass  80: suminf.    4.88587 (18) obj. -1456.79 iterations 5
Cbc0038I Pass  81: suminf.    2.74906 (10) obj. -1456.79 iterations 19
Cbc0038I Pass  82: suminf.    2.52735 (10) obj. -1478.74 iterations 4
Cbc0038I Pass  83: suminf.    2.74906 (10) obj. -1456.79 iterations 7
Cbc0038I Pass  84: suminf.    3.82072 (16) obj. -1456.79 iterations 12
Cbc0038I Pass  85: suminf.    3.79816 (17) obj. -1456.79 iterations 10
Cbc0038I Pass  86: suminf.    2.28361 (9) obj. -1456.79 iterations 10
Cbc0038I Pass  87: suminf.    2.28361 (9) obj. -1456.79 iterations 1
Cbc0038I Pass  88: suminf.    1.85618 (8) obj. -1456.79 iterations 4
Cbc0038I Pass  89: suminf.    1.85618 (8) obj. -1456.79 iterations 1
Cbc0038I Pass  90: suminf.    1.94389 (8) obj. -1456.79 iterations 2
Cbc0038I Pass  91: suminf.    1.94389 (8) obj. -1456.79 iterations 0
Cbc0038I Pass  92: suminf.    1.85618 (8) obj. -1456.79 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -846.254 - took 0.07 seconds
Cbc0012I Integer solution of -846.2535 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 85 rows 93 columns, reduced to 15 rows 19 columns
Cbc0031I 27 added rows had average density of 6.3333333
Cbc0013I At root node, 91 cuts changed objective from -2316.4107 to -842.03142 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 551 row cuts average 2.7 elements, 32 column cuts (32 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 49 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 84 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0001I Search completed - best objective -846.2535000000003, took 188 iterations and 0 nodes (0.21 seconds)
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.22

