Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 497 (-30) rows, 258 (-6) columns and 1483 (-62) elements
Clp1000I sum of infeasibilities 0.000126927 - average 2.55387e-07, 164 fixed columns
Coin0506I Presolve 160 (-337) rows, 87 (-171) columns and 480 (-1003) elements
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 0.20206725 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 202.79466
Clp0000I Optimal - objective value 202.79466
Coin0511I After Postsolve, objective 202.79466, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13451776 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 202.79466
Clp0000I Optimal - objective value 202.79466
Clp0000I Optimal - objective value 202.79466
Coin0511I After Postsolve, objective 202.79466, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 202.7946572 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 497 rows, 258 columns (257 integer (257 of which binary)) and 1483 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.371%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 9.94034
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.59855 iterations 183
Cbc0038I Solution found of -4.59855
Cbc0038I Relaxing continuous gives -4.59855
Cbc0038I Rounding solution of -37.262 is better than previous of -4.59855

Cbc0038I Before mini branch and bound, 210 integers at bound fixed and 0 continuous
Cbc0038I Full problem 497 rows 258 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -37.262 to -129.463 (0.07 seconds)
Cbc0038I Round again with cutoff of -136.796
Cbc0038I Pass   2: suminf.    3.45075 (16) obj. -136.796 iterations 51
Cbc0038I Pass   3: suminf.    2.10550 (6) obj. -136.796 iterations 50
Cbc0038I Pass   4: suminf.    2.10550 (6) obj. -136.796 iterations 0
Cbc0038I Pass   5: suminf.    2.26805 (6) obj. -136.796 iterations 29
Cbc0038I Pass   6: suminf.    1.61017 (5) obj. -136.796 iterations 22
Cbc0038I Pass   7: suminf.    1.61017 (5) obj. -136.796 iterations 17
Cbc0038I Pass   8: suminf.    1.57900 (6) obj. -136.796 iterations 25
Cbc0038I Pass   9: suminf.    1.30426 (5) obj. -136.796 iterations 1
Cbc0038I Pass  10: suminf.    0.67184 (3) obj. -136.796 iterations 15
Cbc0038I Pass  11: suminf.    0.21747 (3) obj. -136.796 iterations 14
Cbc0038I Pass  12: suminf.    0.89687 (4) obj. -136.796 iterations 32
Cbc0038I Pass  13: suminf.    0.89687 (4) obj. -136.796 iterations 14
Cbc0038I Pass  14: suminf.    1.40136 (4) obj. -136.796 iterations 26
Cbc0038I Pass  15: suminf.    0.21747 (3) obj. -136.796 iterations 12
Cbc0038I Pass  16: suminf.    0.21747 (3) obj. -136.796 iterations 0
Cbc0038I Pass  17: suminf.    0.89687 (4) obj. -136.796 iterations 32
Cbc0038I Pass  18: suminf.    0.89687 (4) obj. -136.796 iterations 14
Cbc0038I Pass  19: suminf.    1.40136 (4) obj. -136.796 iterations 27
Cbc0038I Pass  20: suminf.    0.21747 (3) obj. -136.796 iterations 13
Cbc0038I Pass  21: suminf.    0.21747 (3) obj. -136.796 iterations 0
Cbc0038I Pass  22: suminf.    0.89687 (4) obj. -136.796 iterations 32
Cbc0038I Pass  23: suminf.    0.89687 (4) obj. -136.796 iterations 14
Cbc0038I Pass  24: suminf.    1.40136 (4) obj. -136.796 iterations 26
Cbc0038I Pass  25: suminf.    0.21747 (3) obj. -136.796 iterations 12
Cbc0038I Pass  26: suminf.    0.21747 (3) obj. -136.796 iterations 0
Cbc0038I Pass  27: suminf.    0.89687 (4) obj. -136.796 iterations 32
Cbc0038I Pass  28: suminf.    0.89687 (4) obj. -136.796 iterations 14
Cbc0038I Pass  29: suminf.    1.40136 (4) obj. -136.796 iterations 26
Cbc0038I Pass  30: suminf.    0.21747 (3) obj. -136.796 iterations 12
Cbc0038I Pass  31: suminf.    0.21747 (3) obj. -136.796 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 497 rows 258 columns, reduced to 98 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -129.463 to -144.127 (0.14 seconds)
Cbc0038I Round again with cutoff of -155.861
Cbc0038I Pass  31: suminf.    4.20795 (21) obj. -155.861 iterations 8
Cbc0038I Pass  32: suminf.    2.66393 (7) obj. -155.861 iterations 34
Cbc0038I Pass  33: suminf.    1.62080 (6) obj. -155.861 iterations 18
Cbc0038I Pass  34: suminf.    1.59340 (5) obj. -155.861 iterations 24
Cbc0038I Pass  35: suminf.    2.27537 (7) obj. -155.861 iterations 31
Cbc0038I Pass  36: suminf.    1.62080 (6) obj. -155.861 iterations 13
Cbc0038I Pass  37: suminf.    6.02102 (26) obj. -155.861 iterations 71
Cbc0038I Pass  38: suminf.    1.55051 (5) obj. -155.861 iterations 69
Cbc0038I Pass  39: suminf.    1.41884 (5) obj. -155.861 iterations 14
Cbc0038I Pass  40: suminf.    1.78376 (5) obj. -155.861 iterations 18
Cbc0038I Pass  41: suminf.    1.45125 (5) obj. -155.861 iterations 16
Cbc0038I Pass  42: suminf.    3.76697 (13) obj. -155.861 iterations 46
Cbc0038I Pass  43: suminf.    1.74273 (7) obj. -155.861 iterations 43
Cbc0038I Pass  44: suminf.    3.32782 (8) obj. -155.861 iterations 29
Cbc0038I Pass  45: suminf.    1.43365 (7) obj. -155.861 iterations 39
Cbc0038I Pass  46: suminf.    3.65151 (12) obj. -155.861 iterations 44
Cbc0038I Pass  47: suminf.    2.19194 (8) obj. -155.861 iterations 41
Cbc0038I Pass  48: suminf.    1.65388 (7) obj. -155.861 iterations 17
Cbc0038I Pass  49: suminf.    1.61620 (6) obj. -155.861 iterations 14
Cbc0038I Pass  50: suminf.    1.78577 (6) obj. -155.861 iterations 23
Cbc0038I Pass  51: suminf.    1.18633 (6) obj. -155.861 iterations 6
Cbc0038I Pass  52: suminf.    1.18295 (5) obj. -155.861 iterations 3
Cbc0038I Pass  53: suminf.    1.77662 (7) obj. -155.861 iterations 36
Cbc0038I Pass  54: suminf.    1.61620 (6) obj. -155.861 iterations 12
Cbc0038I Pass  55: suminf.    1.78577 (6) obj. -155.861 iterations 23
Cbc0038I Pass  56: suminf.    1.18633 (6) obj. -155.861 iterations 6
Cbc0038I Pass  57: suminf.    1.18295 (5) obj. -155.861 iterations 3
Cbc0038I Pass  58: suminf.    1.77662 (7) obj. -155.861 iterations 36
Cbc0038I Pass  59: suminf.    1.61620 (6) obj. -155.861 iterations 12
Cbc0038I Pass  60: suminf.    1.78577 (6) obj. -155.861 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 497 rows 258 columns, reduced to 134 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -144.127 - took 0.20 seconds
Cbc0012I Integer solution of -144.12696 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 497 rows 258 columns, reduced to 83 rows 48 columns
Cbc0031I 24 added rows had average density of 140.125
Cbc0013I At root node, 24 cuts changed objective from -202.79466 to -182.52456 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16817 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.398 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2247 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.268 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 52 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.196 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 247.7 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -144.12696 best solution, best possible -182.52456 (2.50 seconds)
Cbc0038I Full problem 497 rows 258 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 497 rows 258 columns, reduced to 68 rows 41 columns
Cbc0010I After 94 nodes, 7 on tree, -144.12696 best solution, best possible -182.52456 (3.20 seconds)
Cbc0001I Search completed - best objective -144.12696, took 15296 iterations and 162 nodes (3.86 seconds)
Cbc0032I Strong branching done 1676 times (37016 iterations), fathomed 29 nodes and fixed 41 variables
Cbc0035I Maximum depth 24, 1380 variables fixed on reduced cost
Total time (CPU seconds):       3.79   (Wallclock seconds):       3.93

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 371 (-155) rows, 388 (-136) columns and 19240 (-16496) elements
Clp1000I sum of infeasibilities 8.71022e-06 - average 2.34777e-08, 210 fixed columns
Coin0506I Presolve 161 (-210) rows, 178 (-210) columns and 659 (-18581) elements
Clp0006I 0  Obj 5.5978281 Primal inf 7.2215514e-08 (1) Dual inf 2.0000118e+09 (172)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 0.14926167 - largest nonzero change 2.4472375e-05 ( 0.0022247614%) - largest zero change 2.9785502e-05
Clp0000I Optimal - objective value 12.945736
Clp0000I Optimal - objective value 12.945736
Coin0511I After Postsolve, objective 12.945736, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 12.945736 Dual inf 404.44491 (134)
Clp0014I Perturbing problem by 0.001% of 1.7103936 - largest nonzero change 2.7321357e-05 ( 0.0016125406%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 252.4949
Clp0000I Optimal - objective value 252.4949
Clp0000I Optimal - objective value 252.4949
Coin0511I After Postsolve, objective 252.4949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 252.4949042 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0004I processed model has 371 rows, 388 columns (388 integer (388 of which binary)) and 19240 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.225%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 115 integers unsatisfied sum - 4.74879
Cbc0038I Pass   1: suminf.    3.19438 (74) obj. -247.668 iterations 71
Cbc0038I Pass   2: suminf.    3.19438 (74) obj. -247.668 iterations 0
Cbc0038I Pass   3: suminf.    0.36027 (42) obj. -86.9747 iterations 41
Cbc0038I Pass   4: suminf.    0.10076 (19) obj. -50.4141 iterations 23
Cbc0038I Solution found of -18.5861
Cbc0038I Rounding solution of -63.445 is better than previous of -18.5861

Cbc0038I Before mini branch and bound, 272 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 388 columns, reduced to 50 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -63.445 to -109.021 (0.16 seconds)
Cbc0038I Round again with cutoff of -123.361
Cbc0038I Pass   5: suminf.    3.19438 (74) obj. -247.668 iterations 0
Cbc0038I Pass   6: suminf.    3.19438 (74) obj. -247.668 iterations 0
Cbc0038I Pass   7: suminf.    0.57204 (45) obj. -123.361 iterations 53
Cbc0038I Pass   8: suminf.    0.57204 (45) obj. -123.361 iterations 0
Cbc0038I Pass   9: suminf.    0.70032 (21) obj. -123.361 iterations 33
Cbc0038I Pass  10: suminf.    0.70032 (21) obj. -123.361 iterations 7
Cbc0038I Pass  11: suminf.    0.52778 (12) obj. -123.361 iterations 26
Cbc0038I Pass  12: suminf.    0.51709 (13) obj. -123.361 iterations 13
Cbc0038I Pass  13: suminf.    0.66528 (4) obj. -123.361 iterations 25
Cbc0038I Pass  14: suminf.    0.54432 (4) obj. -123.361 iterations 24
Cbc0038I Pass  15: suminf.    2.05190 (21) obj. -123.361 iterations 180
Cbc0038I Pass  16: suminf.    1.39880 (19) obj. -123.361 iterations 87
Cbc0038I Pass  17: suminf.    2.24514 (11) obj. -123.361 iterations 21
Cbc0038I Pass  18: suminf.    1.96299 (16) obj. -123.361 iterations 45
Cbc0038I Pass  19: suminf.    0.82391 (47) obj. -123.361 iterations 12
Cbc0038I Pass  20: suminf.    0.65633 (47) obj. -123.361 iterations 25
Cbc0038I Pass  21: suminf.    1.69014 (42) obj. -123.361 iterations 28
Cbc0038I Pass  22: suminf.    0.86061 (41) obj. -123.361 iterations 4
Cbc0038I Pass  23: suminf.    0.67916 (44) obj. -123.361 iterations 25
Cbc0038I Pass  24: suminf.    1.69615 (42) obj. -123.361 iterations 25
Cbc0038I Pass  25: suminf.    0.88360 (41) obj. -123.361 iterations 4
Cbc0038I Pass  26: suminf.    0.70670 (44) obj. -123.361 iterations 26
Cbc0038I Pass  27: suminf.    1.69014 (42) obj. -123.361 iterations 25
Cbc0038I Pass  28: suminf.    0.86061 (41) obj. -123.361 iterations 4
Cbc0038I Pass  29: suminf.    0.67916 (44) obj. -123.361 iterations 26
Cbc0038I Pass  30: suminf.    1.69615 (42) obj. -123.361 iterations 24
Cbc0038I Pass  31: suminf.    0.88360 (41) obj. -123.361 iterations 4
Cbc0038I Pass  32: suminf.    0.70670 (44) obj. -123.361 iterations 24
Cbc0038I Pass  33: suminf.    1.69014 (42) obj. -123.361 iterations 25
Cbc0038I Pass  34: suminf.    0.86061 (41) obj. -123.361 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 260 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 388 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of -109.021 - took 0.14 seconds
Cbc0012I Integer solution of -109.02126 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0038I Full problem 371 rows 388 columns, reduced to 9 rows 9 columns
Cbc0012I Integer solution of -134.26688 found by DiveCoefficient after 5689 iterations and 0 nodes (3.89 seconds)
Cbc0031I 75 added rows had average density of 115.44
Cbc0013I At root node, 75 cuts changed objective from -252.41349 to -158.40361 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6265 row cuts average 2.0 elements, 0 column cuts (14 active)  in 0.445 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2114 row cuts average 320.7 elements, 0 column cuts (0 active)  in 0.574 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 220 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2505 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1423 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.394 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 374 row cuts average 231.3 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 792 row cuts average 84.6 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -134.26688 best solution, best possible -158.40361 (4.31 seconds)
Cbc0012I Integer solution of -140.73665 found by DiveCoefficient after 6351 iterations and 2 nodes (4.86 seconds)
Cbc0010I After 4 nodes, 5 on tree, -140.73665 best solution, best possible -158.40361 (5.03 seconds)
Cbc0012I Integer solution of -144.12696 found by DiveCoefficient after 6533 iterations and 7 nodes (5.21 seconds)
Cbc0010I After 11 nodes, 9 on tree, -144.12696 best solution, best possible -158.40361 (5.76 seconds)
Cbc0010I After 22 nodes, 10 on tree, -144.12696 best solution, best possible -158.40361 (6.52 seconds)
Cbc0010I After 38 nodes, 9 on tree, -144.12696 best solution, best possible -158.40361 (7.25 seconds)
Cbc0038I Full problem 371 rows 388 columns, reduced to 12 rows 14 columns
Cbc0010I After 52 nodes, 7 on tree, -144.12696 best solution, best possible -158.40361 (8.03 seconds)
Cbc0010I After 75 nodes, 4 on tree, -144.12696 best solution, best possible -158.40361 (8.78 seconds)
Cbc0010I After 84 nodes, 1 on tree, -144.12696 best solution, best possible -155.81112 (9.55 seconds)
Cbc0010I After 89 nodes, 6 on tree, -144.12696 best solution, best possible -155.81112 (10.25 seconds)
Cbc0038I Full problem 371 rows 388 columns, reduced to 77 rows 85 columns
Cbc0010I After 97 nodes, 7 on tree, -144.12696 best solution, best possible -155.81112 (10.96 seconds)
Cbc0010I After 112 nodes, 3 on tree, -144.12696 best solution, best possible -155.81112 (11.73 seconds)
Cbc0001I Search completed - best objective -144.12696, took 16131 iterations and 128 nodes (12.40 seconds)
Cbc0032I Strong branching done 1330 times (32196 iterations), fathomed 7 nodes and fixed 15 variables
Cbc0035I Maximum depth 16, 1091 variables fixed on reduced cost
Total time (CPU seconds):       10.80   (Wallclock seconds):       12.46

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 497 (-30) rows, 258 (-6) columns and 1483 (-62) elements
Clp1000I sum of infeasibilities 0.000126927 - average 2.55387e-07, 164 fixed columns
Coin0506I Presolve 160 (-337) rows, 87 (-171) columns and 480 (-1003) elements
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 0.20206725 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 202.79466
Clp0000I Optimal - objective value 202.79466
Coin0511I After Postsolve, objective 202.79466, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13451776 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 202.79466
Clp0000I Optimal - objective value 202.79466
Clp0000I Optimal - objective value 202.79466
Coin0511I After Postsolve, objective 202.79466, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 202.7946572 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 497 rows, 258 columns (257 integer (257 of which binary)) and 1483 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.371%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 9.94034
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.59855 iterations 183
Cbc0038I Solution found of -4.59855
Cbc0038I Relaxing continuous gives -4.59855
Cbc0038I Rounding solution of -37.262 is better than previous of -4.59855

Cbc0038I Before mini branch and bound, 210 integers at bound fixed and 0 continuous
Cbc0038I Full problem 497 rows 258 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -37.262 to -129.463 (0.07 seconds)
Cbc0038I Round again with cutoff of -136.796
Cbc0038I Pass   2: suminf.    3.45075 (16) obj. -136.796 iterations 51
Cbc0038I Pass   3: suminf.    2.10550 (6) obj. -136.796 iterations 50
Cbc0038I Pass   4: suminf.    2.10550 (6) obj. -136.796 iterations 0
Cbc0038I Pass   5: suminf.    2.26805 (6) obj. -136.796 iterations 29
Cbc0038I Pass   6: suminf.    1.61017 (5) obj. -136.796 iterations 22
Cbc0038I Pass   7: suminf.    1.61017 (5) obj. -136.796 iterations 17
Cbc0038I Pass   8: suminf.    1.57900 (6) obj. -136.796 iterations 25
Cbc0038I Pass   9: suminf.    1.30426 (5) obj. -136.796 iterations 1
Cbc0038I Pass  10: suminf.    0.67184 (3) obj. -136.796 iterations 15
Cbc0038I Pass  11: suminf.    0.21747 (3) obj. -136.796 iterations 14
Cbc0038I Pass  12: suminf.    0.89687 (4) obj. -136.796 iterations 32
Cbc0038I Pass  13: suminf.    0.89687 (4) obj. -136.796 iterations 14
Cbc0038I Pass  14: suminf.    1.40136 (4) obj. -136.796 iterations 26
Cbc0038I Pass  15: suminf.    0.21747 (3) obj. -136.796 iterations 12
Cbc0038I Pass  16: suminf.    0.21747 (3) obj. -136.796 iterations 0
Cbc0038I Pass  17: suminf.    0.89687 (4) obj. -136.796 iterations 32
Cbc0038I Pass  18: suminf.    0.89687 (4) obj. -136.796 iterations 14
Cbc0038I Pass  19: suminf.    1.40136 (4) obj. -136.796 iterations 27
Cbc0038I Pass  20: suminf.    0.21747 (3) obj. -136.796 iterations 13
Cbc0038I Pass  21: suminf.    0.21747 (3) obj. -136.796 iterations 0
Cbc0038I Pass  22: suminf.    0.89687 (4) obj. -136.796 iterations 32
Cbc0038I Pass  23: suminf.    0.89687 (4) obj. -136.796 iterations 14
Cbc0038I Pass  24: suminf.    1.40136 (4) obj. -136.796 iterations 26
Cbc0038I Pass  25: suminf.    0.21747 (3) obj. -136.796 iterations 12
Cbc0038I Pass  26: suminf.    0.21747 (3) obj. -136.796 iterations 0
Cbc0038I Pass  27: suminf.    0.89687 (4) obj. -136.796 iterations 32
Cbc0038I Pass  28: suminf.    0.89687 (4) obj. -136.796 iterations 14
Cbc0038I Pass  29: suminf.    1.40136 (4) obj. -136.796 iterations 26
Cbc0038I Pass  30: suminf.    0.21747 (3) obj. -136.796 iterations 12
Cbc0038I Pass  31: suminf.    0.21747 (3) obj. -136.796 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 497 rows 258 columns, reduced to 98 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -129.463 to -144.127 (0.14 seconds)
Cbc0038I Round again with cutoff of -155.861
Cbc0038I Pass  31: suminf.    4.20795 (21) obj. -155.861 iterations 8
Cbc0038I Pass  32: suminf.    2.66393 (7) obj. -155.861 iterations 34
Cbc0038I Pass  33: suminf.    1.62080 (6) obj. -155.861 iterations 18
Cbc0038I Pass  34: suminf.    1.59340 (5) obj. -155.861 iterations 24
Cbc0038I Pass  35: suminf.    2.27537 (7) obj. -155.861 iterations 31
Cbc0038I Pass  36: suminf.    1.62080 (6) obj. -155.861 iterations 13
Cbc0038I Pass  37: suminf.    6.02102 (26) obj. -155.861 iterations 71
Cbc0038I Pass  38: suminf.    1.55051 (5) obj. -155.861 iterations 69
Cbc0038I Pass  39: suminf.    1.41884 (5) obj. -155.861 iterations 14
Cbc0038I Pass  40: suminf.    1.78376 (5) obj. -155.861 iterations 18
Cbc0038I Pass  41: suminf.    1.45125 (5) obj. -155.861 iterations 16
Cbc0038I Pass  42: suminf.    3.76697 (13) obj. -155.861 iterations 46
Cbc0038I Pass  43: suminf.    1.74273 (7) obj. -155.861 iterations 43
Cbc0038I Pass  44: suminf.    3.32782 (8) obj. -155.861 iterations 29
Cbc0038I Pass  45: suminf.    1.43365 (7) obj. -155.861 iterations 39
Cbc0038I Pass  46: suminf.    3.65151 (12) obj. -155.861 iterations 44
Cbc0038I Pass  47: suminf.    2.19194 (8) obj. -155.861 iterations 41
Cbc0038I Pass  48: suminf.    1.65388 (7) obj. -155.861 iterations 17
Cbc0038I Pass  49: suminf.    1.61620 (6) obj. -155.861 iterations 14
Cbc0038I Pass  50: suminf.    1.78577 (6) obj. -155.861 iterations 23
Cbc0038I Pass  51: suminf.    1.18633 (6) obj. -155.861 iterations 6
Cbc0038I Pass  52: suminf.    1.18295 (5) obj. -155.861 iterations 3
Cbc0038I Pass  53: suminf.    1.77662 (7) obj. -155.861 iterations 36
Cbc0038I Pass  54: suminf.    1.61620 (6) obj. -155.861 iterations 12
Cbc0038I Pass  55: suminf.    1.78577 (6) obj. -155.861 iterations 23
Cbc0038I Pass  56: suminf.    1.18633 (6) obj. -155.861 iterations 6
Cbc0038I Pass  57: suminf.    1.18295 (5) obj. -155.861 iterations 3
Cbc0038I Pass  58: suminf.    1.77662 (7) obj. -155.861 iterations 36
Cbc0038I Pass  59: suminf.    1.61620 (6) obj. -155.861 iterations 12
Cbc0038I Pass  60: suminf.    1.78577 (6) obj. -155.861 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 497 rows 258 columns, reduced to 134 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -144.127 - took 0.20 seconds
Cbc0012I Integer solution of -144.12696 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 497 rows 258 columns, reduced to 83 rows 48 columns
Cbc0031I 24 added rows had average density of 140.125
Cbc0013I At root node, 24 cuts changed objective from -202.79466 to -182.52456 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16817 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.370 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2247 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.243 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 52 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 247.7 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -144.12696 best solution, best possible -182.52456 (2.32 seconds)
Cbc0038I Full problem 497 rows 258 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 497 rows 258 columns, reduced to 68 rows 41 columns
Cbc0010I After 96 nodes, 9 on tree, -144.12696 best solution, best possible -182.52456 (3.02 seconds)
Cbc0001I Search completed - best objective -144.12696, took 15296 iterations and 162 nodes (3.63 seconds)
Cbc0032I Strong branching done 1676 times (37016 iterations), fathomed 29 nodes and fixed 41 variables
Cbc0035I Maximum depth 24, 1380 variables fixed on reduced cost
Total time (CPU seconds):       3.57   (Wallclock seconds):       3.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 371 (-156) rows, 388 (-137) columns and 19240 (-16497) elements
Clp1000I sum of infeasibilities 8.71022e-06 - average 2.34777e-08, 210 fixed columns
Coin0506I Presolve 161 (-210) rows, 178 (-210) columns and 659 (-18581) elements
Clp0006I 0  Obj 5.5978281 Primal inf 7.2215514e-08 (1) Dual inf 2.0000118e+09 (172)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 0.14926167 - largest nonzero change 2.4472375e-05 ( 0.0022247614%) - largest zero change 2.9785502e-05
Clp0000I Optimal - objective value 12.945736
Clp0000I Optimal - objective value 12.945736
Coin0511I After Postsolve, objective 12.945736, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 12.945736 Dual inf 404.44491 (134)
Clp0014I Perturbing problem by 0.001% of 1.7103936 - largest nonzero change 2.7321357e-05 ( 0.0016125406%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 252.4949
Clp0000I Optimal - objective value 252.4949
Clp0000I Optimal - objective value 252.4949
Coin0511I After Postsolve, objective 252.4949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 252.4949042 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 371 rows, 388 columns (388 integer (388 of which binary)) and 19240 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.225%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 115 integers unsatisfied sum - 4.74879
Cbc0038I Pass   1: suminf.    3.19438 (74) obj. -247.668 iterations 71
Cbc0038I Pass   2: suminf.    3.19438 (74) obj. -247.668 iterations 0
Cbc0038I Pass   3: suminf.    0.36027 (42) obj. -86.9747 iterations 41
Cbc0038I Pass   4: suminf.    0.10076 (19) obj. -50.4141 iterations 23
Cbc0038I Solution found of -18.5861
Cbc0038I Rounding solution of -63.445 is better than previous of -18.5861

Cbc0038I Before mini branch and bound, 272 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 388 columns, reduced to 50 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -63.445 to -109.021 (0.15 seconds)
Cbc0038I Round again with cutoff of -123.361
Cbc0038I Pass   5: suminf.    3.19438 (74) obj. -247.668 iterations 0
Cbc0038I Pass   6: suminf.    3.19438 (74) obj. -247.668 iterations 0
Cbc0038I Pass   7: suminf.    0.57204 (45) obj. -123.361 iterations 53
Cbc0038I Pass   8: suminf.    0.57204 (45) obj. -123.361 iterations 0
Cbc0038I Pass   9: suminf.    0.70032 (21) obj. -123.361 iterations 33
Cbc0038I Pass  10: suminf.    0.70032 (21) obj. -123.361 iterations 7
Cbc0038I Pass  11: suminf.    0.52778 (12) obj. -123.361 iterations 26
Cbc0038I Pass  12: suminf.    0.51709 (13) obj. -123.361 iterations 13
Cbc0038I Pass  13: suminf.    0.66528 (4) obj. -123.361 iterations 25
Cbc0038I Pass  14: suminf.    0.54432 (4) obj. -123.361 iterations 24
Cbc0038I Pass  15: suminf.    2.05190 (21) obj. -123.361 iterations 180
Cbc0038I Pass  16: suminf.    1.39880 (19) obj. -123.361 iterations 87
Cbc0038I Pass  17: suminf.    2.24514 (11) obj. -123.361 iterations 21
Cbc0038I Pass  18: suminf.    1.96299 (16) obj. -123.361 iterations 45
Cbc0038I Pass  19: suminf.    0.82391 (47) obj. -123.361 iterations 12
Cbc0038I Pass  20: suminf.    0.65633 (47) obj. -123.361 iterations 25
Cbc0038I Pass  21: suminf.    1.69014 (42) obj. -123.361 iterations 28
Cbc0038I Pass  22: suminf.    0.86061 (41) obj. -123.361 iterations 4
Cbc0038I Pass  23: suminf.    0.67916 (44) obj. -123.361 iterations 25
Cbc0038I Pass  24: suminf.    1.69615 (42) obj. -123.361 iterations 25
Cbc0038I Pass  25: suminf.    0.88360 (41) obj. -123.361 iterations 4
Cbc0038I Pass  26: suminf.    0.70670 (44) obj. -123.361 iterations 26
Cbc0038I Pass  27: suminf.    1.69014 (42) obj. -123.361 iterations 25
Cbc0038I Pass  28: suminf.    0.86061 (41) obj. -123.361 iterations 4
Cbc0038I Pass  29: suminf.    0.67916 (44) obj. -123.361 iterations 26
Cbc0038I Pass  30: suminf.    1.69615 (42) obj. -123.361 iterations 24
Cbc0038I Pass  31: suminf.    0.88360 (41) obj. -123.361 iterations 4
Cbc0038I Pass  32: suminf.    0.70670 (44) obj. -123.361 iterations 24
Cbc0038I Pass  33: suminf.    1.69014 (42) obj. -123.361 iterations 25
Cbc0038I Pass  34: suminf.    0.86061 (41) obj. -123.361 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 260 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 388 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -109.021 - took 0.13 seconds
Cbc0012I Integer solution of -109.02126 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 371 rows 388 columns, reduced to 9 rows 9 columns
Cbc0012I Integer solution of -134.26688 found by DiveCoefficient after 5689 iterations and 0 nodes (3.86 seconds)
Cbc0031I 75 added rows had average density of 115.44
Cbc0013I At root node, 75 cuts changed objective from -252.41349 to -158.40361 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6265 row cuts average 2.0 elements, 0 column cuts (14 active)  in 0.443 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2114 row cuts average 320.7 elements, 0 column cuts (0 active)  in 0.574 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 220 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2505 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1423 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.396 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 374 row cuts average 231.3 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 792 row cuts average 84.6 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -134.26688 best solution, best possible -158.40361 (4.23 seconds)
Cbc0012I Integer solution of -140.73665 found by DiveCoefficient after 6351 iterations and 2 nodes (4.74 seconds)
Cbc0010I After 5 nodes, 6 on tree, -140.73665 best solution, best possible -158.40361 (4.96 seconds)
Cbc0012I Integer solution of -144.12696 found by DiveCoefficient after 6533 iterations and 7 nodes (5.06 seconds)
Cbc0010I After 12 nodes, 10 on tree, -144.12696 best solution, best possible -158.40361 (5.67 seconds)
Cbc0010I After 24 nodes, 11 on tree, -144.12696 best solution, best possible -158.40361 (6.39 seconds)
Cbc0038I Full problem 371 rows 388 columns, reduced to 12 rows 14 columns
Cbc0010I After 45 nodes, 6 on tree, -144.12696 best solution, best possible -158.40361 (7.16 seconds)
Cbc0010I After 61 nodes, 6 on tree, -144.12696 best solution, best possible -158.40361 (7.87 seconds)
Cbc0010I After 82 nodes, 1 on tree, -144.12696 best solution, best possible -157.06417 (8.71 seconds)
Cbc0010I After 86 nodes, 3 on tree, -144.12696 best solution, best possible -155.81112 (9.44 seconds)
Cbc0038I Full problem 371 rows 388 columns, reduced to 77 rows 85 columns
Cbc0010I After 92 nodes, 6 on tree, -144.12696 best solution, best possible -155.81112 (10.22 seconds)
Cbc0010I After 108 nodes, 6 on tree, -144.12696 best solution, best possible -155.81112 (10.98 seconds)
Cbc0010I After 121 nodes, 4 on tree, -144.12696 best solution, best possible -155.81112 (11.68 seconds)
Cbc0001I Search completed - best objective -144.12696, took 16131 iterations and 128 nodes (11.83 seconds)
Cbc0032I Strong branching done 1330 times (32196 iterations), fathomed 7 nodes and fixed 15 variables
Cbc0035I Maximum depth 16, 1091 variables fixed on reduced cost
Total time (CPU seconds):       10.41   (Wallclock seconds):       11.89

