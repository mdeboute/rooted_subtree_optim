Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 274 (-29) elements
Clp1000I sum of infeasibilities 1.28299e-05 - average 1.42554e-07, 5 fixed columns
Coin0506I Presolve 80 (-10) rows, 46 (-5) columns and 245 (-29) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 59.422664
Clp0000I Optimal - objective value 59.422664
Coin0511I After Postsolve, objective 59.422664, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.422664
Clp0000I Optimal - objective value 59.422664
Clp0000I Optimal - objective value 59.422664
Coin0511I After Postsolve, objective 59.422664, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.42266422 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.50827
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.02704 iterations 46
Cbc0038I Solution found of 5.02704
Cbc0038I Relaxing continuous gives 5.02704
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 5.02704 to -24.1925 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.7156
Cbc0038I Pass   2: suminf.    2.65597 (10) obj. -27.7156 iterations 10
Cbc0038I Pass   3: suminf.    2.01652 (7) obj. -27.7156 iterations 2
Cbc0038I Pass   4: suminf.    1.97318 (6) obj. -27.7156 iterations 1
Cbc0038I Pass   5: suminf.    1.97318 (6) obj. -27.7156 iterations 0
Cbc0038I Pass   6: suminf.    1.40778 (4) obj. -27.7156 iterations 8
Cbc0038I Pass   7: suminf.    1.35972 (4) obj. -27.7156 iterations 3
Cbc0038I Pass   8: suminf.    1.58327 (4) obj. -27.7156 iterations 4
Cbc0038I Pass   9: suminf.    1.12853 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  10: suminf.    0.76306 (4) obj. -27.7156 iterations 1
Cbc0038I Pass  11: suminf.    0.75937 (4) obj. -27.7156 iterations 2
Cbc0038I Pass  12: suminf.    1.61241 (4) obj. -27.7156 iterations 5
Cbc0038I Pass  13: suminf.    1.61241 (4) obj. -27.7156 iterations 0
Cbc0038I Pass  14: suminf.    1.99726 (5) obj. -27.7156 iterations 5
Cbc0038I Pass  15: suminf.    1.97318 (6) obj. -27.7156 iterations 3
Cbc0038I Pass  16: suminf.    1.40778 (4) obj. -27.7156 iterations 8
Cbc0038I Pass  17: suminf.    1.35972 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  18: suminf.    1.58327 (4) obj. -27.7156 iterations 4
Cbc0038I Pass  19: suminf.    1.12853 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  20: suminf.    0.76306 (4) obj. -27.7156 iterations 1
Cbc0038I Pass  21: suminf.    0.75937 (4) obj. -27.7156 iterations 2
Cbc0038I Pass  22: suminf.    1.61241 (4) obj. -27.7156 iterations 5
Cbc0038I Pass  23: suminf.    1.61241 (4) obj. -27.7156 iterations 0
Cbc0038I Pass  24: suminf.    1.99726 (5) obj. -27.7156 iterations 5
Cbc0038I Pass  25: suminf.    1.97318 (6) obj. -27.7156 iterations 3
Cbc0038I Pass  26: suminf.    1.40778 (4) obj. -27.7156 iterations 8
Cbc0038I Pass  27: suminf.    1.35972 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  28: suminf.    1.58327 (4) obj. -27.7156 iterations 4
Cbc0038I Pass  29: suminf.    1.12853 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  30: suminf.    0.76306 (4) obj. -27.7156 iterations 1
Cbc0038I Pass  31: suminf.    0.75937 (4) obj. -27.7156 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -24.1925 - took 0.06 seconds
Cbc0012I Integer solution of -24.1925 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 69 rows 40 columns
Cbc0031I 25 added rows had average density of 31.96
Cbc0013I At root node, 25 cuts changed objective from -59.422664 to -44.766895 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8767 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1523 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 12 nodes, 7 on tree, -24.1925 best solution, best possible -44.766895 (0.68 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 17 rows 13 columns
Cbc0001I Search completed - best objective -24.19250000000001, took 8018 iterations and 46 nodes (0.83 seconds)
Cbc0032I Strong branching done 702 times (11469 iterations), fathomed 2 nodes and fixed 21 variables
Cbc0035I Maximum depth 11, 74 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.83

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-26) rows, 88 (-14) columns and 1183 (-395) elements
Clp1000I sum of infeasibilities 9.51225e-09 - average 1.21952e-10, 13 fixed columns
Coin0506I Presolve 67 (-11) rows, 75 (-13) columns and 810 (-373) elements
Clp0006I 0  Obj 61.058436 Dual inf 2.590243 (73)
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 5.0125123 - largest nonzero change 1.9088959e-05 ( 0.00090868118%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 71.7692
Clp0000I Optimal - objective value 71.7692
Coin0511I After Postsolve, objective 71.7692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 71.7692
Clp0000I Optimal - objective value 71.7692
Clp0000I Optimal - objective value 71.7692
Clp0000I Optimal - objective value 71.7692
Coin0511I After Postsolve, objective 71.7692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.76920047 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 78 rows, 88 columns (88 integer (88 of which binary)) and 1185 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.043%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.42486
Cbc0038I Pass   1: suminf.    2.02724 (27) obj. -47.0679 iterations 16
Cbc0038I Pass   2: suminf.    2.02724 (27) obj. -47.0679 iterations 2
Cbc0038I Pass   3: suminf.    0.47419 (10) obj. -9.50919 iterations 17
Cbc0038I Solution found of 4.77659
Cbc0038I Rounding solution of -0.658463 is better than previous of 4.77659

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6.12633
Cbc0038I Pass   4: suminf.    2.02724 (27) obj. -47.0679 iterations 0
Cbc0038I Pass   5: suminf.    2.02724 (27) obj. -47.0679 iterations 2
Cbc0038I Pass   6: suminf.    0.47419 (10) obj. -9.50919 iterations 17
Cbc0038I Pass   7: suminf.    0.29632 (6) obj. -6.12633 iterations 19
Cbc0038I Pass   8: suminf.    0.29632 (6) obj. -6.12633 iterations 0
Cbc0038I Pass   9: suminf.    0.56924 (2) obj. -6.12633 iterations 8
Cbc0038I Pass  10: suminf.    0.56924 (2) obj. -6.12633 iterations 0
Cbc0038I Pass  11: suminf.    0.62905 (3) obj. -6.12633 iterations 4
Cbc0038I Pass  12: suminf.    4.06069 (14) obj. -7.64511 iterations 25
Cbc0038I Pass  13: suminf.    1.48383 (8) obj. -6.55686 iterations 7
Cbc0038I Pass  14: suminf.    0.86697 (3) obj. -6.12633 iterations 8
Cbc0038I Pass  15: suminf.    0.71354 (4) obj. -6.12633 iterations 2
Cbc0038I Pass  16: suminf.    0.37592 (3) obj. -6.12633 iterations 3
Cbc0038I Pass  17: suminf.    0.37555 (3) obj. -6.12633 iterations 1
Cbc0038I Pass  18: suminf.    0.89119 (4) obj. -6.12633 iterations 5
Cbc0038I Pass  19: suminf.    0.58892 (2) obj. -6.82834 iterations 4
Cbc0038I Pass  20: suminf.    0.58892 (2) obj. -6.82834 iterations 0
Cbc0038I Pass  21: suminf.    0.65912 (2) obj. -6.12633 iterations 4
Cbc0038I Pass  22: suminf.    2.48487 (11) obj. -6.12633 iterations 31
Cbc0038I Pass  23: suminf.    2.31291 (10) obj. -6.12633 iterations 9
Cbc0038I Pass  24: suminf.    0.56616 (3) obj. -6.12633 iterations 10
Cbc0038I Pass  25: suminf.    0.54743 (4) obj. -6.12633 iterations 3
Cbc0038I Pass  26: suminf.    0.56616 (3) obj. -6.12633 iterations 3
Cbc0038I Pass  27: suminf.    2.68266 (12) obj. -6.12633 iterations 28
Cbc0038I Pass  28: suminf.    2.09111 (11) obj. -6.12633 iterations 10
Cbc0038I Pass  29: suminf.    1.92702 (11) obj. -6.12633 iterations 3
Cbc0038I Pass  30: suminf.    1.46353 (5) obj. -6.12633 iterations 14
Cbc0038I Pass  31: suminf.    0.98544 (6) obj. -6.12633 iterations 4
Cbc0038I Pass  32: suminf.    1.34765 (6) obj. -6.12633 iterations 7
Cbc0038I Pass  33: suminf.    0.99480 (5) obj. -7.36565 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 38 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 4.77659 to -11.7638 (0.07 seconds)
Cbc0038I Round again with cutoff of -20.4784
Cbc0038I Pass  33: suminf.    2.02724 (27) obj. -47.0679 iterations 0
Cbc0038I Pass  34: suminf.    2.02724 (27) obj. -47.0679 iterations 2
Cbc0038I Pass  35: suminf.    1.14110 (18) obj. -20.4784 iterations 13
Cbc0038I Pass  36: suminf.    0.80244 (11) obj. -20.4784 iterations 21
Cbc0038I Pass  37: suminf.    0.78842 (8) obj. -20.4784 iterations 2
Cbc0038I Pass  38: suminf.    1.10622 (5) obj. -20.4784 iterations 10
Cbc0038I Pass  39: suminf.    1.10622 (5) obj. -20.4784 iterations 0
Cbc0038I Pass  40: suminf.    1.20880 (8) obj. -20.4784 iterations 4
Cbc0038I Pass  41: suminf.    0.73742 (7) obj. -20.6443 iterations 5
Cbc0038I Pass  42: suminf.    0.54936 (5) obj. -20.4784 iterations 15
Cbc0038I Pass  43: suminf.    0.54936 (5) obj. -20.4784 iterations 4
Cbc0038I Pass  44: suminf.    0.87883 (5) obj. -20.4784 iterations 2
Cbc0038I Pass  45: suminf.    0.87883 (5) obj. -20.4784 iterations 0
Cbc0038I Pass  46: suminf.    0.54936 (5) obj. -20.4784 iterations 5
Cbc0038I Pass  47: suminf.    2.42019 (13) obj. -20.4784 iterations 23
Cbc0038I Pass  48: suminf.    1.43217 (10) obj. -20.4784 iterations 2
Cbc0038I Pass  49: suminf.    1.43217 (10) obj. -20.4784 iterations 4
Cbc0038I Pass  50: suminf.    1.01436 (6) obj. -20.4784 iterations 12
Cbc0038I Pass  51: suminf.    0.73397 (5) obj. -21.3196 iterations 3
Cbc0038I Pass  52: suminf.    1.01436 (5) obj. -20.4784 iterations 2
Cbc0038I Pass  53: suminf.    1.50110 (12) obj. -20.4784 iterations 12
Cbc0038I Pass  54: suminf.    1.22967 (11) obj. -20.4784 iterations 4
Cbc0038I Pass  55: suminf.    1.12559 (8) obj. -20.4784 iterations 15
Cbc0038I Pass  56: suminf.    1.09306 (8) obj. -20.4784 iterations 2
Cbc0038I Pass  57: suminf.    0.73263 (6) obj. -20.4784 iterations 9
Cbc0038I Pass  58: suminf.    0.73263 (6) obj. -20.4784 iterations 2
Cbc0038I Pass  59: suminf.    1.01436 (5) obj. -20.4784 iterations 5
Cbc0038I Pass  60: suminf.    0.73397 (5) obj. -21.3196 iterations 3
Cbc0038I Pass  61: suminf.    1.01436 (5) obj. -20.4784 iterations 3
Cbc0038I Pass  62: suminf.    1.41686 (8) obj. -20.4784 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 29 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.7638 - took 0.07 seconds
Cbc0012I Integer solution of -11.763813 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 78 rows 88 columns, reduced to 20 rows 24 columns
Cbc0031I 63 added rows had average density of 14.31746
Cbc0013I At root node, 63 cuts changed objective from -55.336228 to -28.880316 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9838 row cuts average 2.1 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1035 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 61 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 44 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 509 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 298 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 273 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.708 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.763813 best solution, best possible -28.880316 (1.95 seconds)
Cbc0012I Integer solution of -14.64308 found by DiveCoefficient after 4177 iterations and 3 nodes (2.50 seconds)
Cbc0012I Integer solution of -23.64308 found by DiveCoefficient after 4186 iterations and 4 nodes (2.54 seconds)
Cbc0010I After 5 nodes, 6 on tree, -23.64308 best solution, best possible -28.880316 (2.67 seconds)
Cbc0004I Integer solution of -24.1925 found after 4326 iterations and 6 nodes (2.72 seconds)
Cbc0001I Search completed - best objective -24.19250000000001, took 4652 iterations and 12 nodes (2.80 seconds)
Cbc0032I Strong branching done 322 times (7145 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Total time (CPU seconds):       2.09   (Wallclock seconds):       2.81

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 274 (-29) elements
Clp1000I sum of infeasibilities 1.28299e-05 - average 1.42554e-07, 5 fixed columns
Coin0506I Presolve 80 (-10) rows, 46 (-5) columns and 245 (-29) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 59.422664
Clp0000I Optimal - objective value 59.422664
Coin0511I After Postsolve, objective 59.422664, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.422664
Clp0000I Optimal - objective value 59.422664
Clp0000I Optimal - objective value 59.422664
Coin0511I After Postsolve, objective 59.422664, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.42266422 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.50827
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.02704 iterations 46
Cbc0038I Solution found of 5.02704
Cbc0038I Relaxing continuous gives 5.02704
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 5.02704 to -24.1925 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.7156
Cbc0038I Pass   2: suminf.    2.65597 (10) obj. -27.7156 iterations 10
Cbc0038I Pass   3: suminf.    2.01652 (7) obj. -27.7156 iterations 2
Cbc0038I Pass   4: suminf.    1.97318 (6) obj. -27.7156 iterations 1
Cbc0038I Pass   5: suminf.    1.97318 (6) obj. -27.7156 iterations 0
Cbc0038I Pass   6: suminf.    1.40778 (4) obj. -27.7156 iterations 8
Cbc0038I Pass   7: suminf.    1.35972 (4) obj. -27.7156 iterations 3
Cbc0038I Pass   8: suminf.    1.58327 (4) obj. -27.7156 iterations 4
Cbc0038I Pass   9: suminf.    1.12853 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  10: suminf.    0.76306 (4) obj. -27.7156 iterations 1
Cbc0038I Pass  11: suminf.    0.75937 (4) obj. -27.7156 iterations 2
Cbc0038I Pass  12: suminf.    1.61241 (4) obj. -27.7156 iterations 5
Cbc0038I Pass  13: suminf.    1.61241 (4) obj. -27.7156 iterations 0
Cbc0038I Pass  14: suminf.    1.99726 (5) obj. -27.7156 iterations 5
Cbc0038I Pass  15: suminf.    1.97318 (6) obj. -27.7156 iterations 3
Cbc0038I Pass  16: suminf.    1.40778 (4) obj. -27.7156 iterations 8
Cbc0038I Pass  17: suminf.    1.35972 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  18: suminf.    1.58327 (4) obj. -27.7156 iterations 4
Cbc0038I Pass  19: suminf.    1.12853 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  20: suminf.    0.76306 (4) obj. -27.7156 iterations 1
Cbc0038I Pass  21: suminf.    0.75937 (4) obj. -27.7156 iterations 2
Cbc0038I Pass  22: suminf.    1.61241 (4) obj. -27.7156 iterations 5
Cbc0038I Pass  23: suminf.    1.61241 (4) obj. -27.7156 iterations 0
Cbc0038I Pass  24: suminf.    1.99726 (5) obj. -27.7156 iterations 5
Cbc0038I Pass  25: suminf.    1.97318 (6) obj. -27.7156 iterations 3
Cbc0038I Pass  26: suminf.    1.40778 (4) obj. -27.7156 iterations 8
Cbc0038I Pass  27: suminf.    1.35972 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  28: suminf.    1.58327 (4) obj. -27.7156 iterations 4
Cbc0038I Pass  29: suminf.    1.12853 (4) obj. -27.7156 iterations 3
Cbc0038I Pass  30: suminf.    0.76306 (4) obj. -27.7156 iterations 1
Cbc0038I Pass  31: suminf.    0.75937 (4) obj. -27.7156 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -24.1925 - took 0.06 seconds
Cbc0012I Integer solution of -24.1925 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 69 rows 40 columns
Cbc0031I 25 added rows had average density of 31.96
Cbc0013I At root node, 25 cuts changed objective from -59.422664 to -44.766895 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8767 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1523 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -24.1925 best solution, best possible -44.766895 (0.69 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 17 rows 13 columns
Cbc0001I Search completed - best objective -24.19250000000001, took 8018 iterations and 46 nodes (0.95 seconds)
Cbc0032I Strong branching done 702 times (11469 iterations), fathomed 2 nodes and fixed 21 variables
Cbc0035I Maximum depth 11, 74 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       0.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-27) rows, 88 (-15) columns and 1183 (-396) elements
Clp1000I sum of infeasibilities 9.51225e-09 - average 1.21952e-10, 13 fixed columns
Coin0506I Presolve 67 (-11) rows, 75 (-13) columns and 810 (-373) elements
Clp0006I 0  Obj 61.058436 Dual inf 2.590243 (73)
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 5.0125123 - largest nonzero change 1.9088959e-05 ( 0.00090868118%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 71.7692
Clp0000I Optimal - objective value 71.7692
Coin0511I After Postsolve, objective 71.7692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 71.7692
Clp0000I Optimal - objective value 71.7692
Clp0000I Optimal - objective value 71.7692
Clp0000I Optimal - objective value 71.7692
Coin0511I After Postsolve, objective 71.7692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.76920047 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 78 rows, 88 columns (88 integer (88 of which binary)) and 1185 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.043%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.42486
Cbc0038I Pass   1: suminf.    2.02724 (27) obj. -47.0679 iterations 16
Cbc0038I Pass   2: suminf.    2.02724 (27) obj. -47.0679 iterations 2
Cbc0038I Pass   3: suminf.    0.47419 (10) obj. -9.50919 iterations 17
Cbc0038I Solution found of 4.77659
Cbc0038I Rounding solution of -0.658463 is better than previous of 4.77659

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6.12633
Cbc0038I Pass   4: suminf.    2.02724 (27) obj. -47.0679 iterations 0
Cbc0038I Pass   5: suminf.    2.02724 (27) obj. -47.0679 iterations 2
Cbc0038I Pass   6: suminf.    0.47419 (10) obj. -9.50919 iterations 17
Cbc0038I Pass   7: suminf.    0.29632 (6) obj. -6.12633 iterations 19
Cbc0038I Pass   8: suminf.    0.29632 (6) obj. -6.12633 iterations 0
Cbc0038I Pass   9: suminf.    0.56924 (2) obj. -6.12633 iterations 8
Cbc0038I Pass  10: suminf.    0.56924 (2) obj. -6.12633 iterations 0
Cbc0038I Pass  11: suminf.    0.62905 (3) obj. -6.12633 iterations 4
Cbc0038I Pass  12: suminf.    4.06069 (14) obj. -7.64511 iterations 25
Cbc0038I Pass  13: suminf.    1.48383 (8) obj. -6.55686 iterations 7
Cbc0038I Pass  14: suminf.    0.86697 (3) obj. -6.12633 iterations 8
Cbc0038I Pass  15: suminf.    0.71354 (4) obj. -6.12633 iterations 2
Cbc0038I Pass  16: suminf.    0.37592 (3) obj. -6.12633 iterations 3
Cbc0038I Pass  17: suminf.    0.37555 (3) obj. -6.12633 iterations 1
Cbc0038I Pass  18: suminf.    0.89119 (4) obj. -6.12633 iterations 5
Cbc0038I Pass  19: suminf.    0.58892 (2) obj. -6.82834 iterations 4
Cbc0038I Pass  20: suminf.    0.58892 (2) obj. -6.82834 iterations 0
Cbc0038I Pass  21: suminf.    0.65912 (2) obj. -6.12633 iterations 4
Cbc0038I Pass  22: suminf.    2.48487 (11) obj. -6.12633 iterations 31
Cbc0038I Pass  23: suminf.    2.31291 (10) obj. -6.12633 iterations 9
Cbc0038I Pass  24: suminf.    0.56616 (3) obj. -6.12633 iterations 10
Cbc0038I Pass  25: suminf.    0.54743 (4) obj. -6.12633 iterations 3
Cbc0038I Pass  26: suminf.    0.56616 (3) obj. -6.12633 iterations 3
Cbc0038I Pass  27: suminf.    2.68266 (12) obj. -6.12633 iterations 28
Cbc0038I Pass  28: suminf.    2.09111 (11) obj. -6.12633 iterations 10
Cbc0038I Pass  29: suminf.    1.92702 (11) obj. -6.12633 iterations 3
Cbc0038I Pass  30: suminf.    1.46353 (5) obj. -6.12633 iterations 14
Cbc0038I Pass  31: suminf.    0.98544 (6) obj. -6.12633 iterations 4
Cbc0038I Pass  32: suminf.    1.34765 (6) obj. -6.12633 iterations 7
Cbc0038I Pass  33: suminf.    0.99480 (5) obj. -7.36565 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 38 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 4.77659 to -11.7638 (0.07 seconds)
Cbc0038I Round again with cutoff of -20.4784
Cbc0038I Pass  33: suminf.    2.02724 (27) obj. -47.0679 iterations 0
Cbc0038I Pass  34: suminf.    2.02724 (27) obj. -47.0679 iterations 2
Cbc0038I Pass  35: suminf.    1.14110 (18) obj. -20.4784 iterations 13
Cbc0038I Pass  36: suminf.    0.80244 (11) obj. -20.4784 iterations 21
Cbc0038I Pass  37: suminf.    0.78842 (8) obj. -20.4784 iterations 2
Cbc0038I Pass  38: suminf.    1.10622 (5) obj. -20.4784 iterations 10
Cbc0038I Pass  39: suminf.    1.10622 (5) obj. -20.4784 iterations 0
Cbc0038I Pass  40: suminf.    1.20880 (8) obj. -20.4784 iterations 4
Cbc0038I Pass  41: suminf.    0.73742 (7) obj. -20.6443 iterations 5
Cbc0038I Pass  42: suminf.    0.54936 (5) obj. -20.4784 iterations 15
Cbc0038I Pass  43: suminf.    0.54936 (5) obj. -20.4784 iterations 4
Cbc0038I Pass  44: suminf.    0.87883 (5) obj. -20.4784 iterations 2
Cbc0038I Pass  45: suminf.    0.87883 (5) obj. -20.4784 iterations 0
Cbc0038I Pass  46: suminf.    0.54936 (5) obj. -20.4784 iterations 5
Cbc0038I Pass  47: suminf.    2.42019 (13) obj. -20.4784 iterations 23
Cbc0038I Pass  48: suminf.    1.43217 (10) obj. -20.4784 iterations 2
Cbc0038I Pass  49: suminf.    1.43217 (10) obj. -20.4784 iterations 4
Cbc0038I Pass  50: suminf.    1.01436 (6) obj. -20.4784 iterations 12
Cbc0038I Pass  51: suminf.    0.73397 (5) obj. -21.3196 iterations 3
Cbc0038I Pass  52: suminf.    1.01436 (5) obj. -20.4784 iterations 2
Cbc0038I Pass  53: suminf.    1.50110 (12) obj. -20.4784 iterations 12
Cbc0038I Pass  54: suminf.    1.22967 (11) obj. -20.4784 iterations 4
Cbc0038I Pass  55: suminf.    1.12559 (8) obj. -20.4784 iterations 15
Cbc0038I Pass  56: suminf.    1.09306 (8) obj. -20.4784 iterations 2
Cbc0038I Pass  57: suminf.    0.73263 (6) obj. -20.4784 iterations 9
Cbc0038I Pass  58: suminf.    0.73263 (6) obj. -20.4784 iterations 2
Cbc0038I Pass  59: suminf.    1.01436 (5) obj. -20.4784 iterations 5
Cbc0038I Pass  60: suminf.    0.73397 (5) obj. -21.3196 iterations 3
Cbc0038I Pass  61: suminf.    1.01436 (5) obj. -20.4784 iterations 3
Cbc0038I Pass  62: suminf.    1.41686 (8) obj. -20.4784 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 29 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.7638 - took 0.07 seconds
Cbc0012I Integer solution of -11.763813 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 78 rows 88 columns, reduced to 20 rows 24 columns
Cbc0031I 63 added rows had average density of 14.31746
Cbc0013I At root node, 63 cuts changed objective from -55.336228 to -28.880316 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9838 row cuts average 2.1 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1035 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 61 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 44 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 509 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 298 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 273 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.763813 best solution, best possible -28.880316 (2.06 seconds)
Cbc0012I Integer solution of -14.64308 found by DiveCoefficient after 4177 iterations and 3 nodes (2.61 seconds)
Cbc0012I Integer solution of -23.64308 found by DiveCoefficient after 4186 iterations and 4 nodes (2.64 seconds)
Cbc0010I After 5 nodes, 6 on tree, -23.64308 best solution, best possible -28.880316 (2.77 seconds)
Cbc0004I Integer solution of -24.1925 found after 4326 iterations and 6 nodes (2.83 seconds)
Cbc0001I Search completed - best objective -24.19250000000001, took 4652 iterations and 12 nodes (2.91 seconds)
Cbc0032I Strong branching done 322 times (7145 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Total time (CPU seconds):       2.14   (Wallclock seconds):       2.92

