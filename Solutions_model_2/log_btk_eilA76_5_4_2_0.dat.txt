Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 69 (-9) columns and 364 (-89) elements
Clp1000I sum of infeasibilities 1.16923e-05 - average 9.9934e-08, 25 fixed columns
Coin0506I Presolve 71 (-46) rows, 44 (-25) columns and 222 (-142) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Coin0511I After Postsolve, objective 40.860445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25159519 - largest nonzero change 0 ( 0%) - largest zero change 2.7845006e-05
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Coin0511I After Postsolve, objective 40.860445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.86044501 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 69 columns (68 integer (68 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 6.87611
Cbc0038I Solution found of 11.4372
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 69 columns, reduced to 45 rows 30 columns
Cbc0038I Mini branch and bound improved solution from 0 to -7.9883 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.2756
Cbc0038I Pass   1: suminf.    1.74642 (23) obj. -11.2756 iterations 20
Cbc0038I Pass   2: suminf.    0.94542 (8) obj. -11.2756 iterations 30
Cbc0038I Pass   3: suminf.    0.54845 (5) obj. -11.2756 iterations 6
Cbc0038I Pass   4: suminf.    1.20639 (5) obj. -11.2756 iterations 8
Cbc0038I Pass   5: suminf.    1.12167 (4) obj. -11.2756 iterations 1
Cbc0038I Pass   6: suminf.    1.36369 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   7: suminf.    0.93919 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   8: suminf.    1.32192 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   9: suminf.    1.12316 (4) obj. -11.2756 iterations 1
Cbc0038I Pass  10: suminf.    0.89414 (5) obj. -11.2756 iterations 15
Cbc0038I Pass  11: suminf.    0.82125 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  12: suminf.    1.10390 (4) obj. -11.2756 iterations 7
Cbc0038I Pass  13: suminf.    1.10390 (4) obj. -11.2756 iterations 0
Cbc0038I Pass  14: suminf.    1.78578 (4) obj. -11.2756 iterations 9
Cbc0038I Pass  15: suminf.    1.75676 (5) obj. -11.2756 iterations 1
Cbc0038I Pass  16: suminf.    1.66867 (6) obj. -11.2756 iterations 9
Cbc0038I Pass  17: suminf.    1.34039 (4) obj. -11.2756 iterations 8
Cbc0038I Pass  18: suminf.    1.33635 (4) obj. -11.2756 iterations 1
Cbc0038I Pass  19: suminf.    1.69362 (4) obj. -11.2756 iterations 5
Cbc0038I Pass  20: suminf.    1.53421 (5) obj. -11.2756 iterations 1
Cbc0038I Pass  21: suminf.    1.62630 (5) obj. -11.2756 iterations 10
Cbc0038I Pass  22: suminf.    1.53681 (5) obj. -11.2756 iterations 3
Cbc0038I Pass  23: suminf.    1.47028 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  24: suminf.    1.98220 (5) obj. -11.2756 iterations 6
Cbc0038I Pass  25: suminf.    1.92499 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  26: suminf.    1.47922 (4) obj. -11.2756 iterations 8
Cbc0038I Pass  27: suminf.    1.39804 (6) obj. -11.2756 iterations 2
Cbc0038I Pass  28: suminf.    1.54179 (5) obj. -11.2756 iterations 4
Cbc0038I Pass  29: suminf.    1.47028 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  30: suminf.    1.98220 (5) obj. -11.2756 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 69 columns, reduced to 49 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7.9883 - took 0.04 seconds
Cbc0012I Integer solution of -7.9883 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 117 rows 69 columns, reduced to 45 rows 30 columns
Cbc0031I 18 added rows had average density of 65.388889
Cbc0013I At root node, 18 cuts changed objective from -40.860445 to -27.463016 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5428 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1170 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0038I Full problem 117 rows 69 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -7.988299999999995, took 5312 iterations and 60 nodes (0.59 seconds)
Cbc0032I Strong branching done 544 times (8619 iterations), fathomed 6 nodes and fixed 18 variables
Cbc0035I Maximum depth 14, 256 variables fixed on reduced cost
Total time (CPU seconds):       0.57   (Wallclock seconds):       0.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-68) rows, 105 (-47) columns and 1476 (-1827) elements
Clp1000I sum of infeasibilities 1.82646e-07 - average 2.12379e-09, 63 fixed columns
Coin0506I Presolve 29 (-57) rows, 42 (-63) columns and 136 (-1340) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value -13.412548
Clp0000I Optimal - objective value -13.412548
Coin0511I After Postsolve, objective -13.412548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5473404 - largest nonzero change 2.4166217e-05 ( 0.0015380202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 57.964649
Clp0000I Optimal - objective value 57.964649
Clp0000I Optimal - objective value 57.964649
Coin0511I After Postsolve, objective 57.964649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.96464879 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 105 columns (105 integer (105 of which binary)) and 1495 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.05695
Cbc0038I Pass   1: suminf.    2.87866 (28) obj. -44.0914 iterations 14
Cbc0038I Pass   2: suminf.    1.27312 (15) obj. -29.1855 iterations 13
Cbc0038I Solution found of 2.85688
Cbc0038I Rounding solution of 2.85549 is better than previous of 2.85688

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 105 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from 2.85549 to -6.16306 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.485
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.87866 (28) obj. -44.0914 iterations 0
Cbc0038I Pass   4: suminf.    1.60852 (18) obj. -32.7438 iterations 10
Cbc0038I Pass   5: suminf.    0.24344 (2) obj. -10.485 iterations 17
Cbc0038I Pass   6: suminf.    0.15074 (2) obj. -11.7828 iterations 1
Cbc0038I Pass   7: suminf.    0.14612 (2) obj. -10.485 iterations 4
Cbc0038I Pass   8: suminf.    0.14612 (2) obj. -10.485 iterations 0
Cbc0038I Pass   9: suminf.    0.72074 (3) obj. -10.485 iterations 7
Cbc0038I Pass  10: suminf.    0.17020 (2) obj. -13.58 iterations 8
Cbc0038I Pass  11: suminf.    2.42270 (10) obj. -10.485 iterations 21
Cbc0038I Pass  12: suminf.    2.22337 (10) obj. -10.485 iterations 5
Cbc0038I Pass  13: suminf.    1.15801 (8) obj. -10.485 iterations 4
Cbc0038I Pass  14: suminf.    0.53153 (7) obj. -10.485 iterations 15
Cbc0038I Pass  15: suminf.    0.53095 (7) obj. -10.485 iterations 1
Cbc0038I Pass  16: suminf.    1.48670 (5) obj. -10.485 iterations 11
Cbc0038I Pass  17: suminf.    1.15922 (4) obj. -10.485 iterations 9
Cbc0038I Pass  18: suminf.    1.63255 (13) obj. -10.485 iterations 33
Cbc0038I Pass  19: suminf.    1.20667 (12) obj. -15.5956 iterations 5
Cbc0038I Pass  20: suminf.    0.92479 (8) obj. -10.485 iterations 18
Cbc0038I Pass  21: suminf.    0.52258 (8) obj. -10.485 iterations 3
Cbc0038I Pass  22: suminf.    1.93383 (5) obj. -10.485 iterations 6
Cbc0038I Pass  23: suminf.    1.17395 (5) obj. -10.485 iterations 4
Cbc0038I Pass  24: suminf.    1.93383 (5) obj. -10.485 iterations 5
Cbc0038I Pass  25: suminf.    1.31699 (9) obj. -10.485 iterations 8
Cbc0038I Pass  26: suminf.    0.84872 (6) obj. -10.485 iterations 4
Cbc0038I Pass  27: suminf.    1.61501 (7) obj. -10.485 iterations 8
Cbc0038I Pass  28: suminf.    1.61501 (7) obj. -10.485 iterations 0
Cbc0038I Pass  29: suminf.    1.96400 (6) obj. -10.485 iterations 4
Cbc0038I Pass  30: suminf.    1.17395 (5) obj. -10.485 iterations 2
Cbc0038I Pass  31: suminf.    1.93383 (5) obj. -10.485 iterations 5
Cbc0038I Pass  32: suminf.    2.37644 (10) obj. -10.485 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 105 columns, reduced to 18 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -6.16306 to -7.9883 (0.05 seconds)
Cbc0038I Round again with cutoff of -18.2644
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.87866 (28) obj. -44.0914 iterations 0
Cbc0038I Pass  33: suminf.    1.06786 (13) obj. -27.3908 iterations 15
Cbc0038I Pass  34: suminf.    1.12991 (5) obj. -18.2644 iterations 18
Cbc0038I Pass  35: suminf.    0.69434 (4) obj. -18.2644 iterations 3
Cbc0038I Pass  36: suminf.    0.88184 (4) obj. -18.2644 iterations 6
Cbc0038I Pass  37: suminf.    1.49497 (7) obj. -18.2644 iterations 18
Cbc0038I Pass  38: suminf.    0.34740 (4) obj. -18.2644 iterations 6
Cbc0038I Pass  39: suminf.    0.27822 (3) obj. -18.3826 iterations 4
Cbc0038I Pass  40: suminf.    0.72141 (5) obj. -18.2644 iterations 9
Cbc0038I Pass  41: suminf.    1.53355 (19) obj. -18.2644 iterations 24
Cbc0038I Pass  42: suminf.    1.22733 (12) obj. -18.2644 iterations 10
Cbc0038I Pass  43: suminf.    1.34947 (10) obj. -18.2644 iterations 17
Cbc0038I Pass  44: suminf.    1.12657 (10) obj. -18.2644 iterations 3
Cbc0038I Pass  45: suminf.    1.34947 (10) obj. -18.2644 iterations 3
Cbc0038I Pass  46: suminf.    1.78132 (12) obj. -18.2644 iterations 10
Cbc0038I Pass  47: suminf.    1.32495 (12) obj. -18.2644 iterations 3
Cbc0038I Pass  48: suminf.    2.50798 (16) obj. -18.2644 iterations 12
Cbc0038I Pass  49: suminf.    1.71206 (14) obj. -18.2644 iterations 3
Cbc0038I Pass  50: suminf.    1.33777 (11) obj. -18.2644 iterations 15
Cbc0038I Pass  51: suminf.    1.33777 (11) obj. -18.2644 iterations 1
Cbc0038I Pass  52: suminf.    1.68997 (10) obj. -18.2644 iterations 7
Cbc0038I Pass  53: suminf.    1.52151 (11) obj. -18.2644 iterations 2
Cbc0038I Pass  54: suminf.    1.68997 (10) obj. -18.2644 iterations 4
Cbc0038I Pass  55: suminf.    1.47967 (11) obj. -18.2644 iterations 2
Cbc0038I Pass  56: suminf.    1.07185 (12) obj. -18.2644 iterations 11
Cbc0038I Pass  57: suminf.    0.92682 (11) obj. -18.2644 iterations 4
Cbc0038I Pass  58: suminf.    0.94404 (11) obj. -18.2644 iterations 14
Cbc0038I Pass  59: suminf.    0.94375 (12) obj. -18.2644 iterations 2
Cbc0038I Pass  60: suminf.    1.52870 (7) obj. -18.2644 iterations 11
Cbc0038I Pass  61: suminf.    1.27097 (9) obj. -18.2644 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -7.9883 - took 0.05 seconds
Cbc0012I Integer solution of -7.9883 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 105 columns, reduced to 7 rows 9 columns
Cbc0031I 46 added rows had average density of 33
Cbc0013I At root node, 46 cuts changed objective from -49.38185 to -18.240931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12089 row cuts average 5.7 elements, 2 column cuts (14 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1264 row cuts average 91.6 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 404 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1376 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 392 row cuts average 53.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.572 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.9883 best solution, best possible -18.240931 (2.01 seconds)
Cbc0038I Full problem 86 rows 105 columns, reduced to 10 rows 13 columns
Cbc0001I Search completed - best objective -7.988299999999995, took 5526 iterations and 54 nodes (2.47 seconds)
Cbc0032I Strong branching done 626 times (9666 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 20, 119 variables fixed on reduced cost
Total time (CPU seconds):       1.89   (Wallclock seconds):       2.48

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 69 (-9) columns and 364 (-89) elements
Clp1000I sum of infeasibilities 1.16923e-05 - average 9.9934e-08, 25 fixed columns
Coin0506I Presolve 71 (-46) rows, 44 (-25) columns and 222 (-142) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Coin0511I After Postsolve, objective 40.860445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25159519 - largest nonzero change 0 ( 0%) - largest zero change 2.7845006e-05
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Coin0511I After Postsolve, objective 40.860445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.86044501 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 69 columns (68 integer (68 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 6.87611
Cbc0038I Solution found of 11.4372
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 69 columns, reduced to 45 rows 30 columns
Cbc0038I Mini branch and bound improved solution from 0 to -7.9883 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.2756
Cbc0038I Pass   1: suminf.    1.74642 (23) obj. -11.2756 iterations 20
Cbc0038I Pass   2: suminf.    0.94542 (8) obj. -11.2756 iterations 30
Cbc0038I Pass   3: suminf.    0.54845 (5) obj. -11.2756 iterations 6
Cbc0038I Pass   4: suminf.    1.20639 (5) obj. -11.2756 iterations 8
Cbc0038I Pass   5: suminf.    1.12167 (4) obj. -11.2756 iterations 1
Cbc0038I Pass   6: suminf.    1.36369 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   7: suminf.    0.93919 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   8: suminf.    1.32192 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   9: suminf.    1.12316 (4) obj. -11.2756 iterations 1
Cbc0038I Pass  10: suminf.    0.89414 (5) obj. -11.2756 iterations 15
Cbc0038I Pass  11: suminf.    0.82125 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  12: suminf.    1.10390 (4) obj. -11.2756 iterations 7
Cbc0038I Pass  13: suminf.    1.10390 (4) obj. -11.2756 iterations 0
Cbc0038I Pass  14: suminf.    1.78578 (4) obj. -11.2756 iterations 9
Cbc0038I Pass  15: suminf.    1.75676 (5) obj. -11.2756 iterations 1
Cbc0038I Pass  16: suminf.    1.66867 (6) obj. -11.2756 iterations 9
Cbc0038I Pass  17: suminf.    1.34039 (4) obj. -11.2756 iterations 8
Cbc0038I Pass  18: suminf.    1.33635 (4) obj. -11.2756 iterations 1
Cbc0038I Pass  19: suminf.    1.69362 (4) obj. -11.2756 iterations 5
Cbc0038I Pass  20: suminf.    1.53421 (5) obj. -11.2756 iterations 1
Cbc0038I Pass  21: suminf.    1.62630 (5) obj. -11.2756 iterations 10
Cbc0038I Pass  22: suminf.    1.53681 (5) obj. -11.2756 iterations 3
Cbc0038I Pass  23: suminf.    1.47028 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  24: suminf.    1.98220 (5) obj. -11.2756 iterations 6
Cbc0038I Pass  25: suminf.    1.92499 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  26: suminf.    1.47922 (4) obj. -11.2756 iterations 8
Cbc0038I Pass  27: suminf.    1.39804 (6) obj. -11.2756 iterations 2
Cbc0038I Pass  28: suminf.    1.54179 (5) obj. -11.2756 iterations 4
Cbc0038I Pass  29: suminf.    1.47028 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  30: suminf.    1.98220 (5) obj. -11.2756 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 69 columns, reduced to 49 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7.9883 - took 0.05 seconds
Cbc0012I Integer solution of -7.9883 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 117 rows 69 columns, reduced to 45 rows 30 columns
Cbc0031I 18 added rows had average density of 65.388889
Cbc0013I At root node, 18 cuts changed objective from -40.860445 to -27.463016 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5428 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1170 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 16 nodes, 7 on tree, -7.9883 best solution, best possible -27.463016 (0.69 seconds)
Cbc0038I Full problem 117 rows 69 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -7.988299999999995, took 5312 iterations and 60 nodes (0.78 seconds)
Cbc0032I Strong branching done 544 times (8619 iterations), fathomed 6 nodes and fixed 18 variables
Cbc0035I Maximum depth 14, 256 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.79

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-69) rows, 105 (-48) columns and 1476 (-1828) elements
Clp1000I sum of infeasibilities 1.82646e-07 - average 2.12379e-09, 63 fixed columns
Coin0506I Presolve 29 (-57) rows, 42 (-63) columns and 136 (-1340) elements
Clp0006I 0  Obj -13.500552 Dual inf 2.7113319 (38)
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value -13.412548
Clp0000I Optimal - objective value -13.412548
Coin0511I After Postsolve, objective -13.412548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -13.412548 Dual inf 102.87069 (38)
Clp0014I Perturbing problem by 0.001% of 1.5473404 - largest nonzero change 2.4166217e-05 ( 0.0015380202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 57.964649
Clp0000I Optimal - objective value 57.964649
Clp0000I Optimal - objective value 57.964649
Coin0511I After Postsolve, objective 57.964649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.96464879 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 105 columns (105 integer (105 of which binary)) and 1495 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.05695
Cbc0038I Pass   1: suminf.    2.87866 (28) obj. -44.0914 iterations 14
Cbc0038I Pass   2: suminf.    1.27312 (15) obj. -29.1855 iterations 13
Cbc0038I Solution found of 2.85688
Cbc0038I Rounding solution of 2.85549 is better than previous of 2.85688

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 105 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from 2.85549 to -6.16306 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.485
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.87866 (28) obj. -44.0914 iterations 0
Cbc0038I Pass   4: suminf.    1.60852 (18) obj. -32.7438 iterations 10
Cbc0038I Pass   5: suminf.    0.24344 (2) obj. -10.485 iterations 17
Cbc0038I Pass   6: suminf.    0.15074 (2) obj. -11.7828 iterations 1
Cbc0038I Pass   7: suminf.    0.14612 (2) obj. -10.485 iterations 4
Cbc0038I Pass   8: suminf.    0.14612 (2) obj. -10.485 iterations 0
Cbc0038I Pass   9: suminf.    0.72074 (3) obj. -10.485 iterations 7
Cbc0038I Pass  10: suminf.    0.17020 (2) obj. -13.58 iterations 8
Cbc0038I Pass  11: suminf.    2.42270 (10) obj. -10.485 iterations 21
Cbc0038I Pass  12: suminf.    2.22337 (10) obj. -10.485 iterations 5
Cbc0038I Pass  13: suminf.    1.15801 (8) obj. -10.485 iterations 4
Cbc0038I Pass  14: suminf.    0.53153 (7) obj. -10.485 iterations 15
Cbc0038I Pass  15: suminf.    0.53095 (7) obj. -10.485 iterations 1
Cbc0038I Pass  16: suminf.    1.48670 (5) obj. -10.485 iterations 11
Cbc0038I Pass  17: suminf.    1.15922 (4) obj. -10.485 iterations 9
Cbc0038I Pass  18: suminf.    1.63255 (13) obj. -10.485 iterations 33
Cbc0038I Pass  19: suminf.    1.20667 (12) obj. -15.5956 iterations 5
Cbc0038I Pass  20: suminf.    0.92479 (8) obj. -10.485 iterations 18
Cbc0038I Pass  21: suminf.    0.52258 (8) obj. -10.485 iterations 3
Cbc0038I Pass  22: suminf.    1.93383 (5) obj. -10.485 iterations 6
Cbc0038I Pass  23: suminf.    1.17395 (5) obj. -10.485 iterations 4
Cbc0038I Pass  24: suminf.    1.93383 (5) obj. -10.485 iterations 5
Cbc0038I Pass  25: suminf.    1.31699 (9) obj. -10.485 iterations 8
Cbc0038I Pass  26: suminf.    0.84872 (6) obj. -10.485 iterations 4
Cbc0038I Pass  27: suminf.    1.61501 (7) obj. -10.485 iterations 8
Cbc0038I Pass  28: suminf.    1.61501 (7) obj. -10.485 iterations 0
Cbc0038I Pass  29: suminf.    1.96400 (6) obj. -10.485 iterations 4
Cbc0038I Pass  30: suminf.    1.17395 (5) obj. -10.485 iterations 2
Cbc0038I Pass  31: suminf.    1.93383 (5) obj. -10.485 iterations 5
Cbc0038I Pass  32: suminf.    2.37644 (10) obj. -10.485 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 105 columns, reduced to 18 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -6.16306 to -7.9883 (0.06 seconds)
Cbc0038I Round again with cutoff of -18.2644
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.87866 (28) obj. -44.0914 iterations 0
Cbc0038I Pass  33: suminf.    1.06786 (13) obj. -27.3908 iterations 15
Cbc0038I Pass  34: suminf.    1.12991 (5) obj. -18.2644 iterations 18
Cbc0038I Pass  35: suminf.    0.69434 (4) obj. -18.2644 iterations 3
Cbc0038I Pass  36: suminf.    0.88184 (4) obj. -18.2644 iterations 6
Cbc0038I Pass  37: suminf.    1.49497 (7) obj. -18.2644 iterations 18
Cbc0038I Pass  38: suminf.    0.34740 (4) obj. -18.2644 iterations 6
Cbc0038I Pass  39: suminf.    0.27822 (3) obj. -18.3826 iterations 4
Cbc0038I Pass  40: suminf.    0.72141 (5) obj. -18.2644 iterations 9
Cbc0038I Pass  41: suminf.    1.53355 (19) obj. -18.2644 iterations 24
Cbc0038I Pass  42: suminf.    1.22733 (12) obj. -18.2644 iterations 10
Cbc0038I Pass  43: suminf.    1.34947 (10) obj. -18.2644 iterations 17
Cbc0038I Pass  44: suminf.    1.12657 (10) obj. -18.2644 iterations 3
Cbc0038I Pass  45: suminf.    1.34947 (10) obj. -18.2644 iterations 3
Cbc0038I Pass  46: suminf.    1.78132 (12) obj. -18.2644 iterations 10
Cbc0038I Pass  47: suminf.    1.32495 (12) obj. -18.2644 iterations 3
Cbc0038I Pass  48: suminf.    2.50798 (16) obj. -18.2644 iterations 12
Cbc0038I Pass  49: suminf.    1.71206 (14) obj. -18.2644 iterations 3
Cbc0038I Pass  50: suminf.    1.33777 (11) obj. -18.2644 iterations 15
Cbc0038I Pass  51: suminf.    1.33777 (11) obj. -18.2644 iterations 1
Cbc0038I Pass  52: suminf.    1.68997 (10) obj. -18.2644 iterations 7
Cbc0038I Pass  53: suminf.    1.52151 (11) obj. -18.2644 iterations 2
Cbc0038I Pass  54: suminf.    1.68997 (10) obj. -18.2644 iterations 4
Cbc0038I Pass  55: suminf.    1.47967 (11) obj. -18.2644 iterations 2
Cbc0038I Pass  56: suminf.    1.07185 (12) obj. -18.2644 iterations 11
Cbc0038I Pass  57: suminf.    0.92682 (11) obj. -18.2644 iterations 4
Cbc0038I Pass  58: suminf.    0.94404 (11) obj. -18.2644 iterations 14
Cbc0038I Pass  59: suminf.    0.94375 (12) obj. -18.2644 iterations 2
Cbc0038I Pass  60: suminf.    1.52870 (7) obj. -18.2644 iterations 11
Cbc0038I Pass  61: suminf.    1.27097 (9) obj. -18.2644 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.9883 - took 0.06 seconds
Cbc0012I Integer solution of -7.9883 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 86 rows 105 columns, reduced to 7 rows 9 columns
Cbc0031I 46 added rows had average density of 33
Cbc0013I At root node, 46 cuts changed objective from -49.38185 to -18.240931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12089 row cuts average 5.7 elements, 2 column cuts (14 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1264 row cuts average 91.6 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 404 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1376 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 392 row cuts average 53.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.656 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.9883 best solution, best possible -18.240931 (2.49 seconds)
Cbc0038I Full problem 86 rows 105 columns, reduced to 10 rows 13 columns
Cbc0001I Search completed - best objective -7.988299999999995, took 5526 iterations and 54 nodes (3.02 seconds)
Cbc0032I Strong branching done 626 times (9666 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 20, 119 variables fixed on reduced cost
Total time (CPU seconds):       2.19   (Wallclock seconds):       3.03

