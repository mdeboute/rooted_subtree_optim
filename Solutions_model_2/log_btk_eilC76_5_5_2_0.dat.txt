Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.72739e-05 - average 1.27014e-07, 11 fixed columns
Coin0506I Presolve 114 (-22) rows, 65 (-11) columns and 350 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Coin0511I After Postsolve, objective 39.564906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Coin0511I After Postsolve, objective 39.564906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.56490641 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.3675
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.62642 iterations 51
Cbc0038I Solution found of 0.62642
Cbc0038I Relaxing continuous gives 0.62642
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 0.62642 to -2.36584 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.08584
Cbc0038I Pass   2: suminf.    0.74699 (3) obj. -6.08584 iterations 3
Cbc0038I Pass   3: suminf.    0.20766 (2) obj. -6.08584 iterations 1
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -6.08584 iterations 2
Cbc0038I Solution found of -6.08584
Cbc0038I Relaxing continuous gives -8.60778
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.60778 to -9.24784 (0.09 seconds)
Cbc0038I Round again with cutoff of -15.3113
Cbc0038I Pass   5: suminf.    2.29117 (10) obj. -15.3113 iterations 15
Cbc0038I Pass   6: suminf.    1.61709 (6) obj. -15.3113 iterations 14
Cbc0038I Pass   7: suminf.    1.61709 (6) obj. -15.3113 iterations 0
Cbc0038I Pass   8: suminf.    2.79366 (8) obj. -15.3113 iterations 7
Cbc0038I Pass   9: suminf.    2.75896 (7) obj. -15.3113 iterations 1
Cbc0038I Pass  10: suminf.    1.78141 (6) obj. -15.3113 iterations 9
Cbc0038I Pass  11: suminf.    1.75187 (6) obj. -15.3113 iterations 2
Cbc0038I Pass  12: suminf.    2.24659 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  13: suminf.    1.65706 (7) obj. -15.3113 iterations 2
Cbc0038I Pass  14: suminf.    1.65706 (7) obj. -15.3113 iterations 0
Cbc0038I Pass  15: suminf.    2.92791 (8) obj. -15.3113 iterations 11
Cbc0038I Pass  16: suminf.    2.92791 (8) obj. -15.3113 iterations 0
Cbc0038I Pass  17: suminf.    1.89407 (6) obj. -15.3113 iterations 8
Cbc0038I Pass  18: suminf.    1.89407 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  19: suminf.    2.43899 (6) obj. -15.3113 iterations 6
Cbc0038I Pass  20: suminf.    2.43899 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  21: suminf.    2.65492 (7) obj. -15.3113 iterations 10
Cbc0038I Pass  22: suminf.    1.78141 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  23: suminf.    1.75187 (6) obj. -15.3113 iterations 2
Cbc0038I Pass  24: suminf.    2.24659 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  25: suminf.    1.65706 (7) obj. -15.3113 iterations 2
Cbc0038I Pass  26: suminf.    1.65706 (7) obj. -15.3113 iterations 0
Cbc0038I Pass  27: suminf.    2.92791 (8) obj. -15.3113 iterations 11
Cbc0038I Pass  28: suminf.    2.92791 (8) obj. -15.3113 iterations 0
Cbc0038I Pass  29: suminf.    1.89407 (6) obj. -15.3113 iterations 8
Cbc0038I Pass  30: suminf.    1.89407 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  31: suminf.    2.43899 (6) obj. -15.3113 iterations 6
Cbc0038I Pass  32: suminf.    2.43899 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  33: suminf.    2.65492 (7) obj. -15.3113 iterations 10
Cbc0038I Pass  34: suminf.    1.78141 (6) obj. -15.3113 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -9.24784 - took 0.12 seconds
Cbc0012I Integer solution of -9.247842 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0031I 23 added rows had average density of 44.695652
Cbc0013I At root node, 23 cuts changed objective from -39.564906 to -32.053435 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14891 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2090 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.247842 best solution, best possible -32.053435 (0.97 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 13 rows 15 columns
Cbc0012I Integer solution of -9.251392 found by RINS after 10333 iterations and 43 nodes (1.19 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 10 rows 13 columns
Cbc0012I Integer solution of -9.4167 found by rounding after 12013 iterations and 145 nodes (1.33 seconds)
Cbc0012I Integer solution of -9.492202 found by rounding after 12365 iterations and 177 nodes (1.36 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 26 rows 20 columns
Cbc0001I Search completed - best objective -9.492201999999992, took 13334 iterations and 208 nodes (1.41 seconds)
Cbc0032I Strong branching done 1438 times (18617 iterations), fathomed 27 nodes and fixed 66 variables
Cbc0035I Maximum depth 26, 593 variables fixed on reduced cost
Total time (CPU seconds):       1.38   (Wallclock seconds):       1.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 115 (-37) columns and 1783 (-1520) elements
Clp1000I sum of infeasibilities 2.91478e-06 - average 2.88592e-08, 20 fixed columns
Coin0506I Presolve 81 (-20) rows, 93 (-22) columns and 1175 (-608) elements
Clp0006I 0  Obj 40.832307 Dual inf 4.1663103 (92)
Clp0029I End of values pass after 93 iterations
Clp0014I Perturbing problem by 0.001% of 1.7923163 - largest nonzero change 2.2220536e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 60.970339
Clp0000I Optimal - objective value 60.970339
Coin0511I After Postsolve, objective 60.970339, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.970339
Clp0000I Optimal - objective value 60.970339
Clp0000I Optimal - objective value 60.970339
Clp0000I Optimal - objective value 60.970339
Coin0511I After Postsolve, objective 60.970339, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.97033938 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 115 columns (115 integer (115 of which binary)) and 1793 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.215%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.72085
Cbc0038I Pass   1: suminf.    2.48743 (29) obj. -34.2486 iterations 17
Cbc0038I Pass   2: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass   3: suminf.    0.45469 (7) obj. 4.69844 iterations 22
Cbc0038I Solution found of 12.1668
Cbc0038I Rounding solution of 2.62875 is better than previous of 12.1668

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 115 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 2.62875 to -0.7877 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.41629
Cbc0038I Pass   4: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass   5: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass   6: suminf.    0.79258 (4) obj. -5.41629 iterations 30
Cbc0038I Pass   7: suminf.    0.79258 (4) obj. -5.41629 iterations 0
Cbc0038I Pass   8: suminf.    0.37687 (2) obj. -5.41629 iterations 5
Cbc0038I Pass   9: suminf.    0.10667 (1) obj. -7.49628 iterations 3
Cbc0038I Pass  10: suminf.    0.25524 (1) obj. -5.41629 iterations 1
Cbc0038I Pass  11: suminf.    1.85100 (10) obj. -5.41629 iterations 24
Cbc0038I Pass  12: suminf.    0.91998 (8) obj. -5.41629 iterations 9
Cbc0038I Pass  13: suminf.    0.66455 (5) obj. -5.41629 iterations 12
Cbc0038I Pass  14: suminf.    0.66455 (5) obj. -5.41629 iterations 0
Cbc0038I Pass  15: suminf.    0.27517 (2) obj. -5.41629 iterations 8
Cbc0038I Pass  16: suminf.    0.20333 (2) obj. -6.42203 iterations 1
Cbc0038I Pass  17: suminf.    0.53519 (7) obj. -5.41629 iterations 5
Cbc0038I Pass  18: suminf.    0.53519 (7) obj. -5.41629 iterations 0
Cbc0038I Pass  19: suminf.    0.54755 (3) obj. -5.41629 iterations 12
Cbc0038I Pass  20: suminf.    0.50125 (4) obj. -5.89355 iterations 3
Cbc0038I Pass  21: suminf.    1.38223 (4) obj. -5.41629 iterations 4
Cbc0038I Pass  22: suminf.    1.38223 (4) obj. -5.41629 iterations 0
Cbc0038I Pass  23: suminf.    0.54755 (3) obj. -5.41629 iterations 4
Cbc0038I Pass  24: suminf.    1.41766 (9) obj. -5.41629 iterations 16
Cbc0038I Pass  25: suminf.    1.08114 (8) obj. -5.41629 iterations 11
Cbc0038I Pass  26: suminf.    1.27846 (6) obj. -5.41629 iterations 10
Cbc0038I Pass  27: suminf.    0.78501 (5) obj. -5.41629 iterations 6
Cbc0038I Pass  28: suminf.    1.65478 (5) obj. -5.41629 iterations 6
Cbc0038I Pass  29: suminf.    1.18899 (6) obj. -5.41629 iterations 2
Cbc0038I Pass  30: suminf.    1.15617 (6) obj. -5.41629 iterations 2
Cbc0038I Pass  31: suminf.    1.25816 (6) obj. -5.41629 iterations 5
Cbc0038I Pass  32: suminf.    1.25816 (6) obj. -5.41629 iterations 0
Cbc0038I Pass  33: suminf.    1.52987 (5) obj. -5.41629 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 115 columns, reduced to 11 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -0.7877 to -1.30905 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.7476
Cbc0038I Pass  33: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass  34: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass  35: suminf.    1.22231 (13) obj. -13.7476 iterations 20
Cbc0038I Pass  36: suminf.    1.22231 (13) obj. -13.7476 iterations 1
Cbc0038I Pass  37: suminf.    1.09991 (12) obj. -13.7476 iterations 31
Cbc0038I Pass  38: suminf.    1.09991 (12) obj. -13.7476 iterations 0
Cbc0038I Pass  39: suminf.    0.93001 (7) obj. -13.7476 iterations 13
Cbc0038I Pass  40: suminf.    0.92517 (7) obj. -13.7476 iterations 1
Cbc0038I Pass  41: suminf.    1.50300 (7) obj. -13.7476 iterations 1
Cbc0038I Pass  42: suminf.    0.51135 (6) obj. -13.7476 iterations 6
Cbc0038I Pass  43: suminf.    0.93001 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  44: suminf.    1.93300 (10) obj. -13.7476 iterations 14
Cbc0038I Pass  45: suminf.    1.41425 (10) obj. -13.7476 iterations 7
Cbc0038I Pass  46: suminf.    1.05894 (12) obj. -13.7476 iterations 3
Cbc0038I Pass  47: suminf.    1.09570 (7) obj. -13.7476 iterations 14
Cbc0038I Pass  48: suminf.    0.72269 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  49: suminf.    0.92517 (7) obj. -13.7476 iterations 5
Cbc0038I Pass  50: suminf.    0.92517 (7) obj. -13.7476 iterations 0
Cbc0038I Pass  51: suminf.    1.50300 (7) obj. -13.7476 iterations 1
Cbc0038I Pass  52: suminf.    0.51135 (6) obj. -13.7476 iterations 6
Cbc0038I Pass  53: suminf.    0.93001 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  54: suminf.    1.92000 (11) obj. -13.7476 iterations 15
Cbc0038I Pass  55: suminf.    1.26336 (8) obj. -13.9786 iterations 11
Cbc0038I Pass  56: suminf.    1.12112 (7) obj. -13.7476 iterations 14
Cbc0038I Pass  57: suminf.    1.12112 (7) obj. -13.7476 iterations 0
Cbc0038I Pass  58: suminf.    1.90158 (7) obj. -13.7476 iterations 6
Cbc0038I Pass  59: suminf.    1.19901 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  60: suminf.    1.88060 (7) obj. -13.7476 iterations 6
Cbc0038I Pass  61: suminf.    1.08742 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  62: suminf.    1.91340 (7) obj. -13.7476 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1.30905 - took 0.04 seconds
Cbc0012I Integer solution of -1.30905 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 101 rows 115 columns, reduced to 9 rows 13 columns
Cbc0031I 56 added rows had average density of 30.696429
Cbc0013I At root node, 56 cuts changed objective from -47.072678 to -14.094018 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7577 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1229 row cuts average 108.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 380 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 680 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 260 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.640 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.30905 best solution, best possible -14.094018 (2.00 seconds)
Cbc0016I Integer solution of -8.60778 found by strong branching after 3654 iterations and 1 nodes (2.05 seconds)
Cbc0012I Integer solution of -8.909042 found by rounding after 3699 iterations and 2 nodes (2.07 seconds)
Cbc0012I Integer solution of -9.092262 found by DiveCoefficient after 3791 iterations and 4 nodes (2.10 seconds)
Cbc0012I Integer solution of -9.352132 found by rounding after 3801 iterations and 7 nodes (2.11 seconds)
Cbc0038I Full problem 101 rows 115 columns, reduced to 18 rows 27 columns
Cbc0010I After 56 nodes, 9 on tree, -9.352132 best solution, best possible -13.291743 (2.71 seconds)
Cbc0038I Full problem 101 rows 115 columns, reduced to 9 rows 17 columns
Cbc0012I Integer solution of -9.492202 found by RINS after 5780 iterations and 91 nodes (2.87 seconds)
Cbc0001I Search completed - best objective -9.492201999999992, took 8106 iterations and 196 nodes (3.32 seconds)
Cbc0032I Strong branching done 1754 times (22968 iterations), fathomed 40 nodes and fixed 37 variables
Cbc0035I Maximum depth 15, 582 variables fixed on reduced cost
Total time (CPU seconds):       2.62   (Wallclock seconds):       3.33

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.72739e-05 - average 1.27014e-07, 11 fixed columns
Coin0506I Presolve 114 (-22) rows, 65 (-11) columns and 350 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Coin0511I After Postsolve, objective 39.564906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Coin0511I After Postsolve, objective 39.564906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.56490641 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.3675
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.62642 iterations 51
Cbc0038I Solution found of 0.62642
Cbc0038I Relaxing continuous gives 0.62642
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 0.62642 to -2.36584 (0.04 seconds)
Cbc0038I Round again with cutoff of -6.08584
Cbc0038I Pass   2: suminf.    0.74699 (3) obj. -6.08584 iterations 3
Cbc0038I Pass   3: suminf.    0.20766 (2) obj. -6.08584 iterations 1
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -6.08584 iterations 2
Cbc0038I Solution found of -6.08584
Cbc0038I Relaxing continuous gives -8.60778
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.60778 to -9.24784 (0.09 seconds)
Cbc0038I Round again with cutoff of -15.3113
Cbc0038I Pass   5: suminf.    2.29117 (10) obj. -15.3113 iterations 15
Cbc0038I Pass   6: suminf.    1.61709 (6) obj. -15.3113 iterations 14
Cbc0038I Pass   7: suminf.    1.61709 (6) obj. -15.3113 iterations 0
Cbc0038I Pass   8: suminf.    2.79366 (8) obj. -15.3113 iterations 7
Cbc0038I Pass   9: suminf.    2.75896 (7) obj. -15.3113 iterations 1
Cbc0038I Pass  10: suminf.    1.78141 (6) obj. -15.3113 iterations 9
Cbc0038I Pass  11: suminf.    1.75187 (6) obj. -15.3113 iterations 2
Cbc0038I Pass  12: suminf.    2.24659 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  13: suminf.    1.65706 (7) obj. -15.3113 iterations 2
Cbc0038I Pass  14: suminf.    1.65706 (7) obj. -15.3113 iterations 0
Cbc0038I Pass  15: suminf.    2.92791 (8) obj. -15.3113 iterations 11
Cbc0038I Pass  16: suminf.    2.92791 (8) obj. -15.3113 iterations 0
Cbc0038I Pass  17: suminf.    1.89407 (6) obj. -15.3113 iterations 8
Cbc0038I Pass  18: suminf.    1.89407 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  19: suminf.    2.43899 (6) obj. -15.3113 iterations 6
Cbc0038I Pass  20: suminf.    2.43899 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  21: suminf.    2.65492 (7) obj. -15.3113 iterations 10
Cbc0038I Pass  22: suminf.    1.78141 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  23: suminf.    1.75187 (6) obj. -15.3113 iterations 2
Cbc0038I Pass  24: suminf.    2.24659 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  25: suminf.    1.65706 (7) obj. -15.3113 iterations 2
Cbc0038I Pass  26: suminf.    1.65706 (7) obj. -15.3113 iterations 0
Cbc0038I Pass  27: suminf.    2.92791 (8) obj. -15.3113 iterations 11
Cbc0038I Pass  28: suminf.    2.92791 (8) obj. -15.3113 iterations 0
Cbc0038I Pass  29: suminf.    1.89407 (6) obj. -15.3113 iterations 8
Cbc0038I Pass  30: suminf.    1.89407 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  31: suminf.    2.43899 (6) obj. -15.3113 iterations 6
Cbc0038I Pass  32: suminf.    2.43899 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  33: suminf.    2.65492 (7) obj. -15.3113 iterations 10
Cbc0038I Pass  34: suminf.    1.78141 (6) obj. -15.3113 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -9.24784 - took 0.12 seconds
Cbc0012I Integer solution of -9.247842 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0031I 23 added rows had average density of 44.695652
Cbc0013I At root node, 23 cuts changed objective from -39.564906 to -32.053435 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14891 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2090 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.247842 best solution, best possible -32.053435 (0.94 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 13 rows 15 columns
Cbc0012I Integer solution of -9.251392 found by RINS after 10333 iterations and 43 nodes (1.15 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 10 rows 13 columns
Cbc0012I Integer solution of -9.4167 found by rounding after 12013 iterations and 145 nodes (1.30 seconds)
Cbc0012I Integer solution of -9.492202 found by rounding after 12365 iterations and 177 nodes (1.33 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 26 rows 20 columns
Cbc0001I Search completed - best objective -9.492201999999992, took 13334 iterations and 208 nodes (1.38 seconds)
Cbc0032I Strong branching done 1438 times (18617 iterations), fathomed 27 nodes and fixed 66 variables
Cbc0035I Maximum depth 26, 593 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 115 (-38) columns and 1783 (-1521) elements
Clp1000I sum of infeasibilities 2.91478e-06 - average 2.88592e-08, 20 fixed columns
Coin0506I Presolve 81 (-20) rows, 93 (-22) columns and 1175 (-608) elements
Clp0006I 0  Obj 40.832307 Dual inf 4.1663103 (92)
Clp0029I End of values pass after 93 iterations
Clp0014I Perturbing problem by 0.001% of 1.7923163 - largest nonzero change 2.2220536e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 60.970339
Clp0000I Optimal - objective value 60.970339
Coin0511I After Postsolve, objective 60.970339, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.970339
Clp0000I Optimal - objective value 60.970339
Clp0000I Optimal - objective value 60.970339
Clp0000I Optimal - objective value 60.970339
Coin0511I After Postsolve, objective 60.970339, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.97033938 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 115 columns (115 integer (115 of which binary)) and 1793 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.215%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.72085
Cbc0038I Pass   1: suminf.    2.48743 (29) obj. -34.2486 iterations 17
Cbc0038I Pass   2: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass   3: suminf.    0.45469 (7) obj. 4.69844 iterations 22
Cbc0038I Solution found of 12.1668
Cbc0038I Rounding solution of 2.62875 is better than previous of 12.1668

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 115 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 2.62875 to -0.7877 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.41629
Cbc0038I Pass   4: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass   5: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass   6: suminf.    0.79258 (4) obj. -5.41629 iterations 30
Cbc0038I Pass   7: suminf.    0.79258 (4) obj. -5.41629 iterations 0
Cbc0038I Pass   8: suminf.    0.37687 (2) obj. -5.41629 iterations 5
Cbc0038I Pass   9: suminf.    0.10667 (1) obj. -7.49628 iterations 3
Cbc0038I Pass  10: suminf.    0.25524 (1) obj. -5.41629 iterations 1
Cbc0038I Pass  11: suminf.    1.85100 (10) obj. -5.41629 iterations 24
Cbc0038I Pass  12: suminf.    0.91998 (8) obj. -5.41629 iterations 9
Cbc0038I Pass  13: suminf.    0.66455 (5) obj. -5.41629 iterations 12
Cbc0038I Pass  14: suminf.    0.66455 (5) obj. -5.41629 iterations 0
Cbc0038I Pass  15: suminf.    0.27517 (2) obj. -5.41629 iterations 8
Cbc0038I Pass  16: suminf.    0.20333 (2) obj. -6.42203 iterations 1
Cbc0038I Pass  17: suminf.    0.53519 (7) obj. -5.41629 iterations 5
Cbc0038I Pass  18: suminf.    0.53519 (7) obj. -5.41629 iterations 0
Cbc0038I Pass  19: suminf.    0.54755 (3) obj. -5.41629 iterations 12
Cbc0038I Pass  20: suminf.    0.50125 (4) obj. -5.89355 iterations 3
Cbc0038I Pass  21: suminf.    1.38223 (4) obj. -5.41629 iterations 4
Cbc0038I Pass  22: suminf.    1.38223 (4) obj. -5.41629 iterations 0
Cbc0038I Pass  23: suminf.    0.54755 (3) obj. -5.41629 iterations 4
Cbc0038I Pass  24: suminf.    1.41766 (9) obj. -5.41629 iterations 16
Cbc0038I Pass  25: suminf.    1.08114 (8) obj. -5.41629 iterations 11
Cbc0038I Pass  26: suminf.    1.27846 (6) obj. -5.41629 iterations 10
Cbc0038I Pass  27: suminf.    0.78501 (5) obj. -5.41629 iterations 6
Cbc0038I Pass  28: suminf.    1.65478 (5) obj. -5.41629 iterations 6
Cbc0038I Pass  29: suminf.    1.18899 (6) obj. -5.41629 iterations 2
Cbc0038I Pass  30: suminf.    1.15617 (6) obj. -5.41629 iterations 2
Cbc0038I Pass  31: suminf.    1.25816 (6) obj. -5.41629 iterations 5
Cbc0038I Pass  32: suminf.    1.25816 (6) obj. -5.41629 iterations 0
Cbc0038I Pass  33: suminf.    1.52987 (5) obj. -5.41629 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 115 columns, reduced to 11 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -0.7877 to -1.30905 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.7476
Cbc0038I Pass  33: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass  34: suminf.    2.48743 (29) obj. -34.2486 iterations 0
Cbc0038I Pass  35: suminf.    1.22231 (13) obj. -13.7476 iterations 20
Cbc0038I Pass  36: suminf.    1.22231 (13) obj. -13.7476 iterations 1
Cbc0038I Pass  37: suminf.    1.09991 (12) obj. -13.7476 iterations 31
Cbc0038I Pass  38: suminf.    1.09991 (12) obj. -13.7476 iterations 0
Cbc0038I Pass  39: suminf.    0.93001 (7) obj. -13.7476 iterations 13
Cbc0038I Pass  40: suminf.    0.92517 (7) obj. -13.7476 iterations 1
Cbc0038I Pass  41: suminf.    1.50300 (7) obj. -13.7476 iterations 1
Cbc0038I Pass  42: suminf.    0.51135 (6) obj. -13.7476 iterations 6
Cbc0038I Pass  43: suminf.    0.93001 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  44: suminf.    1.93300 (10) obj. -13.7476 iterations 14
Cbc0038I Pass  45: suminf.    1.41425 (10) obj. -13.7476 iterations 7
Cbc0038I Pass  46: suminf.    1.05894 (12) obj. -13.7476 iterations 3
Cbc0038I Pass  47: suminf.    1.09570 (7) obj. -13.7476 iterations 14
Cbc0038I Pass  48: suminf.    0.72269 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  49: suminf.    0.92517 (7) obj. -13.7476 iterations 5
Cbc0038I Pass  50: suminf.    0.92517 (7) obj. -13.7476 iterations 0
Cbc0038I Pass  51: suminf.    1.50300 (7) obj. -13.7476 iterations 1
Cbc0038I Pass  52: suminf.    0.51135 (6) obj. -13.7476 iterations 6
Cbc0038I Pass  53: suminf.    0.93001 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  54: suminf.    1.92000 (11) obj. -13.7476 iterations 15
Cbc0038I Pass  55: suminf.    1.26336 (8) obj. -13.9786 iterations 11
Cbc0038I Pass  56: suminf.    1.12112 (7) obj. -13.7476 iterations 14
Cbc0038I Pass  57: suminf.    1.12112 (7) obj. -13.7476 iterations 0
Cbc0038I Pass  58: suminf.    1.90158 (7) obj. -13.7476 iterations 6
Cbc0038I Pass  59: suminf.    1.19901 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  60: suminf.    1.88060 (7) obj. -13.7476 iterations 6
Cbc0038I Pass  61: suminf.    1.08742 (7) obj. -13.7476 iterations 4
Cbc0038I Pass  62: suminf.    1.91340 (7) obj. -13.7476 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -1.30905 - took 0.04 seconds
Cbc0012I Integer solution of -1.30905 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 101 rows 115 columns, reduced to 9 rows 13 columns
Cbc0031I 56 added rows had average density of 30.696429
Cbc0013I At root node, 56 cuts changed objective from -47.072678 to -14.094018 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7577 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1229 row cuts average 108.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 380 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 680 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 260 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.649 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.30905 best solution, best possible -14.094018 (2.02 seconds)
Cbc0016I Integer solution of -8.60778 found by strong branching after 3654 iterations and 1 nodes (2.05 seconds)
Cbc0012I Integer solution of -8.909042 found by rounding after 3699 iterations and 2 nodes (2.06 seconds)
Cbc0012I Integer solution of -9.092262 found by DiveCoefficient after 3791 iterations and 4 nodes (2.07 seconds)
Cbc0012I Integer solution of -9.352132 found by rounding after 3801 iterations and 7 nodes (2.08 seconds)
Cbc0038I Full problem 101 rows 115 columns, reduced to 18 rows 27 columns
Cbc0038I Full problem 101 rows 115 columns, reduced to 9 rows 17 columns
Cbc0012I Integer solution of -9.492202 found by RINS after 5780 iterations and 91 nodes (2.65 seconds)
Cbc0010I After 114 nodes, 3 on tree, -9.492202 best solution, best possible -13.291743 (2.74 seconds)
Cbc0001I Search completed - best objective -9.492201999999992, took 8106 iterations and 196 nodes (3.07 seconds)
Cbc0032I Strong branching done 1754 times (22968 iterations), fathomed 40 nodes and fixed 37 variables
Cbc0035I Maximum depth 15, 582 variables fixed on reduced cost
Total time (CPU seconds):       2.48   (Wallclock seconds):       3.08

