Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 508 (-19) rows, 262 (-2) columns and 1508 (-37) elements
Clp1000I sum of infeasibilities 8.73203e-05 - average 1.7189e-07, 111 fixed columns
Coin0506I Presolve 277 (-231) rows, 145 (-117) columns and 822 (-686) elements
Clp0029I End of values pass after 145 iterations
Clp0014I Perturbing problem by 0.001% of 0.16191849 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 197.89986
Clp0000I Optimal - objective value 197.89986
Coin0511I After Postsolve, objective 197.89986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.134373 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 197.89986
Clp0000I Optimal - objective value 197.89986
Clp0000I Optimal - objective value 197.89986
Coin0511I After Postsolve, objective 197.89986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 197.899855 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 508 rows, 262 columns (261 integer (261 of which binary)) and 1508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 91 integers unsatisfied sum - 10.4665
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.9012 iterations 221
Cbc0038I Solution found of -9.9012
Cbc0038I Relaxing continuous gives -9.9012
Cbc0038I Rounding solution of -60.2852 is better than previous of -9.9012

Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 173 rows 92 columns
Cbc0038I Mini branch and bound improved solution from -60.2852 to -89.9985 (0.09 seconds)
Cbc0038I Round again with cutoff of -100.789
Cbc0038I Pass   2: suminf.    3.20355 (13) obj. -100.789 iterations 63
Cbc0038I Pass   3: suminf.    2.60770 (10) obj. -100.789 iterations 33
Cbc0038I Pass   4: suminf.    2.30787 (8) obj. -100.789 iterations 41
Cbc0038I Pass   5: suminf.    2.97536 (9) obj. -100.789 iterations 38
Cbc0038I Pass   6: suminf.    2.60770 (10) obj. -100.789 iterations 41
Cbc0038I Pass   7: suminf.    4.19961 (15) obj. -100.789 iterations 77
Cbc0038I Pass   8: suminf.    2.13120 (8) obj. -100.789 iterations 35
Cbc0038I Pass   9: suminf.    2.11604 (9) obj. -100.789 iterations 1
Cbc0038I Pass  10: suminf.    1.53352 (6) obj. -100.789 iterations 46
Cbc0038I Pass  11: suminf.    1.41493 (5) obj. -100.789 iterations 5
Cbc0038I Pass  12: suminf.    1.43909 (4) obj. -100.789 iterations 11
Cbc0038I Pass  13: suminf.    1.31321 (5) obj. -100.789 iterations 8
Cbc0038I Pass  14: suminf.    1.20454 (7) obj. -100.789 iterations 17
Cbc0038I Pass  15: suminf.    0.71582 (5) obj. -100.789 iterations 4
Cbc0038I Pass  16: suminf.    2.12185 (8) obj. -100.789 iterations 31
Cbc0038I Pass  17: suminf.    1.34161 (6) obj. -100.789 iterations 23
Cbc0038I Pass  18: suminf.    1.74694 (6) obj. -100.789 iterations 16
Cbc0038I Pass  19: suminf.    1.37671 (6) obj. -100.789 iterations 7
Cbc0038I Pass  20: suminf.    1.90849 (7) obj. -100.789 iterations 23
Cbc0038I Pass  21: suminf.    1.57664 (5) obj. -100.789 iterations 11
Cbc0038I Pass  22: suminf.    2.97791 (13) obj. -100.789 iterations 65
Cbc0038I Pass  23: suminf.    2.04587 (11) obj. -100.789 iterations 43
Cbc0038I Pass  24: suminf.    3.14606 (7) obj. -100.789 iterations 23
Cbc0038I Pass  25: suminf.    1.10201 (4) obj. -100.789 iterations 5
Cbc0038I Pass  26: suminf.    1.00436 (6) obj. -100.789 iterations 13
Cbc0038I Pass  27: suminf.    2.05172 (6) obj. -100.789 iterations 9
Cbc0038I Pass  28: suminf.    1.74952 (8) obj. -100.789 iterations 14
Cbc0038I Pass  29: suminf.    2.07430 (6) obj. -100.789 iterations 15
Cbc0038I Pass  30: suminf.    1.84062 (6) obj. -100.789 iterations 22
Cbc0038I Pass  31: suminf.    2.65826 (8) obj. -100.789 iterations 25
Cbc0038I Rounding solution of -109.185 is better than previous of -89.9985

Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 190 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -109.185 to -133.511 (0.18 seconds)
Cbc0038I Round again with cutoff of -146.389
Cbc0038I Pass  31: suminf.    5.07574 (30) obj. -146.389 iterations 3
Cbc0038I Pass  32: suminf.    5.04510 (31) obj. -146.389 iterations 7
Cbc0038I Pass  33: suminf.    5.12663 (14) obj. -146.389 iterations 51
Cbc0038I Pass  34: suminf.    3.22756 (15) obj. -146.389 iterations 27
Cbc0038I Pass  35: suminf.    3.19509 (17) obj. -146.389 iterations 6
Cbc0038I Pass  36: suminf.    5.11712 (16) obj. -146.389 iterations 51
Cbc0038I Pass  37: suminf.    3.10553 (12) obj. -146.389 iterations 29
Cbc0038I Pass  38: suminf.    4.44750 (14) obj. -146.389 iterations 29
Cbc0038I Pass  39: suminf.    2.73161 (11) obj. -146.389 iterations 30
Cbc0038I Pass  40: suminf.    2.43797 (17) obj. -146.389 iterations 20
Cbc0038I Pass  41: suminf.    4.23560 (14) obj. -146.389 iterations 35
Cbc0038I Pass  42: suminf.    2.81861 (12) obj. -146.389 iterations 14
Cbc0038I Pass  43: suminf.    2.79709 (12) obj. -146.389 iterations 1
Cbc0038I Pass  44: suminf.    3.87950 (18) obj. -146.389 iterations 47
Cbc0038I Pass  45: suminf.    2.42954 (10) obj. -146.389 iterations 47
Cbc0038I Pass  46: suminf.    1.99816 (9) obj. -146.389 iterations 7
Cbc0038I Pass  47: suminf.    1.66975 (7) obj. -146.389 iterations 32
Cbc0038I Pass  48: suminf.    2.06615 (12) obj. -146.389 iterations 15
Cbc0038I Pass  49: suminf.    2.06615 (12) obj. -146.389 iterations 0
Cbc0038I Pass  50: suminf.    3.51738 (15) obj. -146.389 iterations 39
Cbc0038I Pass  51: suminf.    3.20946 (15) obj. -146.389 iterations 10
Cbc0038I Pass  52: suminf.    5.42106 (14) obj. -146.389 iterations 45
Cbc0038I Pass  53: suminf.    2.73161 (11) obj. -146.389 iterations 46
Cbc0038I Pass  54: suminf.    2.43797 (17) obj. -146.389 iterations 17
Cbc0038I Pass  55: suminf.    5.10426 (16) obj. -146.389 iterations 36
Cbc0038I Pass  56: suminf.    3.09152 (13) obj. -146.389 iterations 19
Cbc0038I Pass  57: suminf.    3.09062 (13) obj. -146.389 iterations 2
Cbc0038I Pass  58: suminf.    3.67926 (13) obj. -146.389 iterations 42
Cbc0038I Pass  59: suminf.    2.77206 (12) obj. -146.389 iterations 19
Cbc0038I Pass  60: suminf.    2.74241 (16) obj. -146.389 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 195 rows 103 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -133.511 - took 0.27 seconds
Cbc0012I Integer solution of -133.51138 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 173 rows 92 columns
Cbc0031I 40 added rows had average density of 117.975
Cbc0013I At root node, 40 cuts changed objective from -197.89986 to -183.9081 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44478 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.560 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3387 row cuts average 256.7 elements, 0 column cuts (0 active)  in 0.574 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.665 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 231 row cuts average 251.5 elements, 0 column cuts (0 active)  in 0.261 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -133.51138 best solution, best possible -183.9081 (6.16 seconds)
Cbc0010I After 11 nodes, 12 on tree, -133.51138 best solution, best possible -183.9081 (6.87 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 185 rows 99 columns
Cbc0010I After 66 nodes, 19 on tree, -133.51138 best solution, best possible -183.9081 (7.57 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 146 rows 80 columns
Cbc0010I After 189 nodes, 9 on tree, -133.51138 best solution, best possible -183.9081 (8.27 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 74 rows 42 columns
Cbc0001I Search completed - best objective -133.51138, took 29888 iterations and 222 nodes (8.40 seconds)
Cbc0032I Strong branching done 2218 times (64036 iterations), fathomed 9 nodes and fixed 31 variables
Cbc0035I Maximum depth 98, 381 variables fixed on reduced cost
Total time (CPU seconds):       8.20   (Wallclock seconds):       8.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 389 (-137) rows, 403 (-121) columns and 20250 (-15486) elements
Clp1000I sum of infeasibilities 6.11761e-06 - average 1.57265e-08, 200 fixed columns
Coin0506I Presolve 190 (-199) rows, 202 (-201) columns and 766 (-19484) elements
Clp0006I 0  Obj -45.129762 Dual inf 9612.4677 (202)
Clp0029I End of values pass after 149 iterations
Clp0014I Perturbing problem by 0.001% of 0.14413775 - largest nonzero change 2.8668667e-05 ( 0.0026062425%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value -38.633141
Clp0000I Optimal - objective value -38.633141
Coin0511I After Postsolve, objective -38.633141, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -38.633141 Dual inf 502.2321 (145)
Clp0014I Perturbing problem by 0.001% of 1.7829113 - largest nonzero change 0 ( 0%) - largest zero change 2.9753512e-05
Clp0000I Optimal - objective value 222.99869
Clp0000I Optimal - objective value 222.99869
Clp0000I Optimal - objective value 222.99869
Coin0511I After Postsolve, objective 222.99869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 222.9986898 - 0 iterations time 0.192, Presolve 0.00, Idiot 0.18

Starting MIP optimization
Cgl0004I processed model has 389 rows, 403 columns (403 integer (403 of which binary)) and 20250 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.079%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 154 integers unsatisfied sum - 6.554
Cbc0038I Pass   1: suminf.    1.56811 (72) obj. -177.274 iterations 121
Cbc0038I Pass   2: suminf.    0.99709 (55) obj. -111.686 iterations 17
Cbc0038I Pass   3: suminf.    0.65609 (41) obj. -83.3825 iterations 14
Cbc0038I Pass   4: suminf.    0.21258 (17) obj. -54.9164 iterations 24
Cbc0038I Pass   5: suminf.    0.04292 (4) obj. -34.1906 iterations 13
Cbc0038I Solution found of -28.2573
Cbc0038I Rounding solution of -51.7376 is better than previous of -28.2573

Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 389 rows 403 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -51.7376 to -55.5708 (0.15 seconds)
Cbc0038I Round again with cutoff of -72.3137
Cbc0038I Pass   6: suminf.    1.56811 (72) obj. -177.274 iterations 0
Cbc0038I Pass   7: suminf.    0.85810 (50) obj. -103.91 iterations 22
Cbc0038I Pass   8: suminf.    0.51429 (34) obj. -75.5453 iterations 16
Cbc0038I Pass   9: suminf.    0.18867 (11) obj. -72.3137 iterations 46
Cbc0038I Pass  10: suminf.    0.14164 (11) obj. -73.6438 iterations 8
Cbc0038I Pass  11: suminf.    0.20145 (2) obj. -72.3137 iterations 105
Cbc0038I Pass  12: suminf.    0.06615 (2) obj. -75.0196 iterations 13
Cbc0038I Pass  13: suminf.    1.40269 (27) obj. -72.3137 iterations 204
Cbc0038I Pass  14: suminf.    0.40821 (22) obj. -72.3137 iterations 32
Cbc0038I Pass  15: suminf.    1.03515 (8) obj. -72.3137 iterations 49
Cbc0038I Pass  16: suminf.    0.21176 (7) obj. -74.7304 iterations 13
Cbc0038I Pass  17: suminf.    0.74246 (5) obj. -72.3137 iterations 21
Cbc0038I Pass  18: suminf.    0.23491 (5) obj. -72.3137 iterations 18
Cbc0038I Pass  19: suminf.    0.81527 (5) obj. -72.3137 iterations 12
Cbc0038I Pass  20: suminf.    0.68820 (7) obj. -72.3137 iterations 13
Cbc0038I Pass  21: suminf.    1.80424 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  22: suminf.    0.69549 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  23: suminf.    0.69549 (7) obj. -72.3137 iterations 0
Cbc0038I Pass  24: suminf.    1.80158 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  25: suminf.    0.68820 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  26: suminf.    0.68820 (7) obj. -72.3137 iterations 0
Cbc0038I Pass  27: suminf.    1.80424 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  28: suminf.    0.69549 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  29: suminf.    0.69549 (7) obj. -72.3137 iterations 0
Cbc0038I Pass  30: suminf.    1.80158 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  31: suminf.    0.68820 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  32: suminf.    0.68820 (7) obj. -72.3137 iterations 0
Cbc0038I Pass  33: suminf.    1.80424 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  34: suminf.    0.69549 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  35: suminf.    0.69549 (7) obj. -72.3137 iterations 0
Cbc0038I Rounding solution of -57.1806 is better than previous of -55.5708

Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 389 rows 403 columns, reduced to 107 rows 112 columns
Cbc0038I Mini branch and bound improved solution from -57.1806 to -73.7684 (0.27 seconds)
Cbc0038I Round again with cutoff of -103.615
Cbc0038I Pass  35: suminf.    1.56811 (72) obj. -177.274 iterations 0
Cbc0038I Pass  36: suminf.    1.08340 (58) obj. -118.485 iterations 14
Cbc0038I Pass  37: suminf.    0.57610 (36) obj. -103.615 iterations 29
Cbc0038I Pass  38: suminf.    0.55790 (36) obj. -104.129 iterations 6
Cbc0038I Pass  39: suminf.    0.36227 (21) obj. -103.615 iterations 63
Cbc0038I Pass  40: suminf.    0.31152 (21) obj. -104.63 iterations 11
Cbc0038I Pass  41: suminf.    2.61925 (47) obj. -103.615 iterations 87
Cbc0038I Pass  42: suminf.    0.80600 (46) obj. -103.615 iterations 8
Cbc0038I Pass  43: suminf.    0.80600 (46) obj. -103.615 iterations 0
Cbc0038I Pass  44: suminf.    2.36797 (30) obj. -103.615 iterations 109
Cbc0038I Pass  45: suminf.    1.31639 (29) obj. -103.615 iterations 9
Cbc0038I Pass  46: suminf.    1.30781 (30) obj. -103.615 iterations 8
Cbc0038I Pass  47: suminf.    0.85480 (26) obj. -103.615 iterations 87
Cbc0038I Pass  48: suminf.    0.83371 (27) obj. -103.615 iterations 7
Cbc0038I Pass  49: suminf.    1.74581 (26) obj. -103.615 iterations 42
Cbc0038I Pass  50: suminf.    1.74037 (27) obj. -103.615 iterations 22
Cbc0038I Pass  51: suminf.    2.16098 (23) obj. -103.615 iterations 66
Cbc0038I Pass  52: suminf.    2.16098 (23) obj. -103.615 iterations 25
Cbc0038I Pass  53: suminf.    2.10878 (23) obj. -103.615 iterations 36
Cbc0038I Pass  54: suminf.    2.10878 (23) obj. -103.615 iterations 25
Cbc0038I Pass  55: suminf.    2.03378 (21) obj. -103.615 iterations 29
Cbc0038I Pass  56: suminf.    1.68599 (21) obj. -103.615 iterations 24
Cbc0038I Pass  57: suminf.    2.74199 (44) obj. -103.615 iterations 49
Cbc0038I Pass  58: suminf.    2.74199 (44) obj. -103.615 iterations 0
Cbc0038I Pass  59: suminf.    2.74072 (41) obj. -103.615 iterations 28
Cbc0038I Pass  60: suminf.    2.38752 (41) obj. -103.615 iterations 12
Cbc0038I Pass  61: suminf.    2.07435 (20) obj. -103.615 iterations 36
Cbc0038I Pass  62: suminf.    2.04276 (20) obj. -103.615 iterations 53
Cbc0038I Pass  63: suminf.    2.04276 (20) obj. -103.615 iterations 28
Cbc0038I Pass  64: suminf.    2.07435 (20) obj. -103.615 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 389 rows 403 columns, reduced to 83 rows 87 columns
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -73.7684 - took 0.26 seconds
Cbc0012I Integer solution of -73.76837 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
Cbc0038I Full problem 389 rows 403 columns, reduced to 98 rows 100 columns
Cbc0012I Integer solution of -95.11788 found by DiveCoefficient after 20189 iterations and 0 nodes (12.67 seconds)
Cbc0031I 166 added rows had average density of 72.222892
Cbc0013I At root node, 166 cuts changed objective from -222.99869 to -150.59732 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 49748 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.599 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3432 row cuts average 377.3 elements, 0 column cuts (0 active)  in 1.616 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1641 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6236 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.318 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.213 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2937 row cuts average 14.4 elements, 0 column cuts (0 active)  in 1.224 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 216.3 elements, 0 column cuts (0 active)  in 0.246 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 634 row cuts average 32.1 elements, 0 column cuts (0 active)  in 2.094 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -95.11788 best solution, best possible -150.59732 (13.70 seconds)
Cbc0010I After 1 nodes, 2 on tree, -95.11788 best solution, best possible -150.59732 (15.78 seconds)
Cbc0012I Integer solution of -115.69178 found by DiveCoefficient after 21753 iterations and 3 nodes (16.46 seconds)
Cbc0010I After 3 nodes, 4 on tree, -115.69178 best solution, best possible -150.59732 (16.57 seconds)
Cbc0012I Integer solution of -117.43278 found by DiveCoefficient after 21923 iterations and 6 nodes (16.66 seconds)
Cbc0012I Integer solution of -119.62717 found by rounding after 22016 iterations and 9 nodes (16.75 seconds)
Cbc0012I Integer solution of -130.05468 found by DiveCoefficient after 22016 iterations and 9 nodes (16.75 seconds)
Cbc0004I Integer solution of -133.51138 found after 22468 iterations and 22 nodes (17.28 seconds)
Cbc0010I After 22 nodes, 8 on tree, -133.51138 best solution, best possible -150.59732 (17.29 seconds)
Cbc0010I After 30 nodes, 3 on tree, -133.51138 best solution, best possible -150.59732 (18.36 seconds)
Cbc0010I After 32 nodes, 5 on tree, -133.51138 best solution, best possible -150.59732 (19.25 seconds)
Cbc0010I After 35 nodes, 8 on tree, -133.51138 best solution, best possible -150.59732 (19.99 seconds)
Cbc0038I Full problem 389 rows 403 columns, reduced to 9 rows 14 columns
Cbc0010I After 45 nodes, 9 on tree, -133.51138 best solution, best possible -150.59732 (20.69 seconds)
Cbc0010I After 59 nodes, 7 on tree, -133.51138 best solution, best possible -150.59732 (21.46 seconds)
Cbc0010I After 65 nodes, 7 on tree, -133.51138 best solution, best possible -150.59732 (22.23 seconds)
Cbc0010I After 75 nodes, 9 on tree, -133.51138 best solution, best possible -150.59732 (23.05 seconds)
Cbc0010I After 89 nodes, 8 on tree, -133.51138 best solution, best possible -150.59732 (23.83 seconds)
Cbc0038I Full problem 389 rows 403 columns, reduced to 220 rows 231 columns - 21 fixed gives 199, 210 - still too large
Cbc0038I Full problem 389 rows 403 columns, reduced to 186 rows 197 columns
Cbc0010I After 98 nodes, 9 on tree, -133.51138 best solution, best possible -150.59732 (24.56 seconds)
Cbc0010I After 107 nodes, 8 on tree, -133.51138 best solution, best possible -150.59732 (25.31 seconds)
Cbc0001I Search completed - best objective -133.51138, took 31655 iterations and 120 nodes (25.76 seconds)
Cbc0032I Strong branching done 1412 times (41406 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 25, 640 variables fixed on reduced cost
Total time (CPU seconds):       24.82   (Wallclock seconds):       25.87

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 508 (-19) rows, 262 (-2) columns and 1508 (-37) elements
Clp1000I sum of infeasibilities 8.73203e-05 - average 1.7189e-07, 111 fixed columns
Coin0506I Presolve 277 (-231) rows, 145 (-117) columns and 822 (-686) elements
Clp0029I End of values pass after 145 iterations
Clp0014I Perturbing problem by 0.001% of 0.16191849 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 197.89986
Clp0000I Optimal - objective value 197.89986
Coin0511I After Postsolve, objective 197.89986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.134373 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 197.89986
Clp0000I Optimal - objective value 197.89986
Clp0000I Optimal - objective value 197.89986
Coin0511I After Postsolve, objective 197.89986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 197.899855 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 508 rows, 262 columns (261 integer (261 of which binary)) and 1508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 91 integers unsatisfied sum - 10.4665
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.9012 iterations 221
Cbc0038I Solution found of -9.9012
Cbc0038I Relaxing continuous gives -9.9012
Cbc0038I Rounding solution of -60.2852 is better than previous of -9.9012

Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 173 rows 92 columns
Cbc0038I Mini branch and bound improved solution from -60.2852 to -89.9985 (0.09 seconds)
Cbc0038I Round again with cutoff of -100.789
Cbc0038I Pass   2: suminf.    3.20355 (13) obj. -100.789 iterations 63
Cbc0038I Pass   3: suminf.    2.60770 (10) obj. -100.789 iterations 33
Cbc0038I Pass   4: suminf.    2.30787 (8) obj. -100.789 iterations 41
Cbc0038I Pass   5: suminf.    2.97536 (9) obj. -100.789 iterations 38
Cbc0038I Pass   6: suminf.    2.60770 (10) obj. -100.789 iterations 41
Cbc0038I Pass   7: suminf.    4.19961 (15) obj. -100.789 iterations 77
Cbc0038I Pass   8: suminf.    2.13120 (8) obj. -100.789 iterations 35
Cbc0038I Pass   9: suminf.    2.11604 (9) obj. -100.789 iterations 1
Cbc0038I Pass  10: suminf.    1.53352 (6) obj. -100.789 iterations 46
Cbc0038I Pass  11: suminf.    1.41493 (5) obj. -100.789 iterations 5
Cbc0038I Pass  12: suminf.    1.43909 (4) obj. -100.789 iterations 11
Cbc0038I Pass  13: suminf.    1.31321 (5) obj. -100.789 iterations 8
Cbc0038I Pass  14: suminf.    1.20454 (7) obj. -100.789 iterations 17
Cbc0038I Pass  15: suminf.    0.71582 (5) obj. -100.789 iterations 4
Cbc0038I Pass  16: suminf.    2.12185 (8) obj. -100.789 iterations 31
Cbc0038I Pass  17: suminf.    1.34161 (6) obj. -100.789 iterations 23
Cbc0038I Pass  18: suminf.    1.74694 (6) obj. -100.789 iterations 16
Cbc0038I Pass  19: suminf.    1.37671 (6) obj. -100.789 iterations 7
Cbc0038I Pass  20: suminf.    1.90849 (7) obj. -100.789 iterations 23
Cbc0038I Pass  21: suminf.    1.57664 (5) obj. -100.789 iterations 11
Cbc0038I Pass  22: suminf.    2.97791 (13) obj. -100.789 iterations 65
Cbc0038I Pass  23: suminf.    2.04587 (11) obj. -100.789 iterations 43
Cbc0038I Pass  24: suminf.    3.14606 (7) obj. -100.789 iterations 23
Cbc0038I Pass  25: suminf.    1.10201 (4) obj. -100.789 iterations 5
Cbc0038I Pass  26: suminf.    1.00436 (6) obj. -100.789 iterations 13
Cbc0038I Pass  27: suminf.    2.05172 (6) obj. -100.789 iterations 9
Cbc0038I Pass  28: suminf.    1.74952 (8) obj. -100.789 iterations 14
Cbc0038I Pass  29: suminf.    2.07430 (6) obj. -100.789 iterations 15
Cbc0038I Pass  30: suminf.    1.84062 (6) obj. -100.789 iterations 22
Cbc0038I Pass  31: suminf.    2.65826 (8) obj. -100.789 iterations 25
Cbc0038I Rounding solution of -109.185 is better than previous of -89.9985

Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 190 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -109.185 to -133.511 (0.17 seconds)
Cbc0038I Round again with cutoff of -146.389
Cbc0038I Pass  31: suminf.    5.07574 (30) obj. -146.389 iterations 3
Cbc0038I Pass  32: suminf.    5.04510 (31) obj. -146.389 iterations 7
Cbc0038I Pass  33: suminf.    5.12663 (14) obj. -146.389 iterations 51
Cbc0038I Pass  34: suminf.    3.22756 (15) obj. -146.389 iterations 27
Cbc0038I Pass  35: suminf.    3.19509 (17) obj. -146.389 iterations 6
Cbc0038I Pass  36: suminf.    5.11712 (16) obj. -146.389 iterations 51
Cbc0038I Pass  37: suminf.    3.10553 (12) obj. -146.389 iterations 29
Cbc0038I Pass  38: suminf.    4.44750 (14) obj. -146.389 iterations 29
Cbc0038I Pass  39: suminf.    2.73161 (11) obj. -146.389 iterations 30
Cbc0038I Pass  40: suminf.    2.43797 (17) obj. -146.389 iterations 20
Cbc0038I Pass  41: suminf.    4.23560 (14) obj. -146.389 iterations 35
Cbc0038I Pass  42: suminf.    2.81861 (12) obj. -146.389 iterations 14
Cbc0038I Pass  43: suminf.    2.79709 (12) obj. -146.389 iterations 1
Cbc0038I Pass  44: suminf.    3.87950 (18) obj. -146.389 iterations 47
Cbc0038I Pass  45: suminf.    2.42954 (10) obj. -146.389 iterations 47
Cbc0038I Pass  46: suminf.    1.99816 (9) obj. -146.389 iterations 7
Cbc0038I Pass  47: suminf.    1.66975 (7) obj. -146.389 iterations 32
Cbc0038I Pass  48: suminf.    2.06615 (12) obj. -146.389 iterations 15
Cbc0038I Pass  49: suminf.    2.06615 (12) obj. -146.389 iterations 0
Cbc0038I Pass  50: suminf.    3.51738 (15) obj. -146.389 iterations 39
Cbc0038I Pass  51: suminf.    3.20946 (15) obj. -146.389 iterations 10
Cbc0038I Pass  52: suminf.    5.42106 (14) obj. -146.389 iterations 45
Cbc0038I Pass  53: suminf.    2.73161 (11) obj. -146.389 iterations 46
Cbc0038I Pass  54: suminf.    2.43797 (17) obj. -146.389 iterations 17
Cbc0038I Pass  55: suminf.    5.10426 (16) obj. -146.389 iterations 36
Cbc0038I Pass  56: suminf.    3.09152 (13) obj. -146.389 iterations 19
Cbc0038I Pass  57: suminf.    3.09062 (13) obj. -146.389 iterations 2
Cbc0038I Pass  58: suminf.    3.67926 (13) obj. -146.389 iterations 42
Cbc0038I Pass  59: suminf.    2.77206 (12) obj. -146.389 iterations 19
Cbc0038I Pass  60: suminf.    2.74241 (16) obj. -146.389 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 195 rows 103 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -133.511 - took 0.26 seconds
Cbc0012I Integer solution of -133.51138 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 173 rows 92 columns
Cbc0031I 40 added rows had average density of 117.975
Cbc0013I At root node, 40 cuts changed objective from -197.89986 to -183.9081 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44478 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.537 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3387 row cuts average 256.7 elements, 0 column cuts (0 active)  in 0.555 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.648 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 231 row cuts average 251.5 elements, 0 column cuts (0 active)  in 0.248 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -133.51138 best solution, best possible -183.9081 (5.95 seconds)
Cbc0010I After 11 nodes, 12 on tree, -133.51138 best solution, best possible -183.9081 (6.65 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 185 rows 99 columns
Cbc0010I After 72 nodes, 19 on tree, -133.51138 best solution, best possible -183.9081 (7.35 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 146 rows 80 columns
Cbc0010I After 186 nodes, 10 on tree, -133.51138 best solution, best possible -183.9081 (8.06 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 74 rows 42 columns
Cbc0001I Search completed - best objective -133.51138, took 29888 iterations and 222 nodes (8.21 seconds)
Cbc0032I Strong branching done 2218 times (64036 iterations), fathomed 9 nodes and fixed 31 variables
Cbc0035I Maximum depth 98, 381 variables fixed on reduced cost
Total time (CPU seconds):       8.08   (Wallclock seconds):       8.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 389 (-138) rows, 403 (-122) columns and 20250 (-15487) elements
Clp1000I sum of infeasibilities 6.11761e-06 - average 1.57265e-08, 200 fixed columns
Coin0506I Presolve 190 (-199) rows, 202 (-201) columns and 766 (-19484) elements
Clp0006I 0  Obj -45.129762 Dual inf 9612.4677 (202)
Clp0029I End of values pass after 149 iterations
Clp0014I Perturbing problem by 0.001% of 0.14413775 - largest nonzero change 2.8668667e-05 ( 0.0026062425%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value -38.633141
Clp0000I Optimal - objective value -38.633141
Coin0511I After Postsolve, objective -38.633141, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -38.633141 Dual inf 502.2321 (145)
Clp0014I Perturbing problem by 0.001% of 1.7829113 - largest nonzero change 0 ( 0%) - largest zero change 2.9753512e-05
Clp0000I Optimal - objective value 222.99869
Clp0000I Optimal - objective value 222.99869
Clp0000I Optimal - objective value 222.99869
Coin0511I After Postsolve, objective 222.99869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 222.9986898 - 0 iterations time 0.202, Presolve 0.00, Idiot 0.19

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 389 rows, 403 columns (403 integer (403 of which binary)) and 20250 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.079%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 154 integers unsatisfied sum - 6.554
Cbc0038I Pass   1: suminf.    1.56811 (72) obj. -177.274 iterations 121
Cbc0038I Pass   2: suminf.    0.99709 (55) obj. -111.686 iterations 17
Cbc0038I Pass   3: suminf.    0.65609 (41) obj. -83.3825 iterations 14
Cbc0038I Pass   4: suminf.    0.21258 (17) obj. -54.9164 iterations 24
Cbc0038I Pass   5: suminf.    0.04292 (4) obj. -34.1906 iterations 13
Cbc0038I Solution found of -28.2573
Cbc0038I Rounding solution of -51.7376 is better than previous of -28.2573

Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 389 rows 403 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -51.7376 to -55.5708 (0.15 seconds)
Cbc0038I Round again with cutoff of -72.3137
Cbc0038I Pass   6: suminf.    1.56811 (72) obj. -177.274 iterations 0
Cbc0038I Pass   7: suminf.    0.85810 (50) obj. -103.91 iterations 22
Cbc0038I Pass   8: suminf.    0.51429 (34) obj. -75.5453 iterations 16
Cbc0038I Pass   9: suminf.    0.18867 (11) obj. -72.3137 iterations 46
Cbc0038I Pass  10: suminf.    0.14164 (11) obj. -73.6438 iterations 8
Cbc0038I Pass  11: suminf.    0.20145 (2) obj. -72.3137 iterations 105
Cbc0038I Pass  12: suminf.    0.06615 (2) obj. -75.0196 iterations 13
Cbc0038I Pass  13: suminf.    1.40269 (27) obj. -72.3137 iterations 204
Cbc0038I Pass  14: suminf.    0.40821 (22) obj. -72.3137 iterations 32
Cbc0038I Pass  15: suminf.    1.03515 (8) obj. -72.3137 iterations 49
Cbc0038I Pass  16: suminf.    0.21176 (7) obj. -74.7304 iterations 13
Cbc0038I Pass  17: suminf.    0.74246 (5) obj. -72.3137 iterations 21
Cbc0038I Pass  18: suminf.    0.23491 (5) obj. -72.3137 iterations 18
Cbc0038I Pass  19: suminf.    0.81527 (5) obj. -72.3137 iterations 12
Cbc0038I Pass  20: suminf.    0.68820 (7) obj. -72.3137 iterations 13
Cbc0038I Pass  21: suminf.    1.80424 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  22: suminf.    0.69549 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  23: suminf.    0.69549 (7) obj. -72.3137 iterations 0
Cbc0038I Pass  24: suminf.    1.80158 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  25: suminf.    0.68820 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  26: suminf.    0.68820 (7) obj. -72.3137 iterations 0
Cbc0038I Pass  27: suminf.    1.80424 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  28: suminf.    0.69549 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  29: suminf.    0.69549 (7) obj. -72.3137 iterations 0
Cbc0038I Pass  30: suminf.    1.80158 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  31: suminf.    0.68820 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  32: suminf.    0.68820 (7) obj. -72.3137 iterations 0
Cbc0038I Pass  33: suminf.    1.80424 (7) obj. -72.3137 iterations 9
Cbc0038I Pass  34: suminf.    0.69549 (7) obj. -72.3137 iterations 8
Cbc0038I Pass  35: suminf.    0.69549 (7) obj. -72.3137 iterations 0
Cbc0038I Rounding solution of -57.1806 is better than previous of -55.5708

Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 389 rows 403 columns, reduced to 107 rows 112 columns
Cbc0038I Mini branch and bound improved solution from -57.1806 to -73.7684 (0.28 seconds)
Cbc0038I Round again with cutoff of -103.615
Cbc0038I Pass  35: suminf.    1.56811 (72) obj. -177.274 iterations 0
Cbc0038I Pass  36: suminf.    1.08340 (58) obj. -118.485 iterations 14
Cbc0038I Pass  37: suminf.    0.57610 (36) obj. -103.615 iterations 29
Cbc0038I Pass  38: suminf.    0.55790 (36) obj. -104.129 iterations 6
Cbc0038I Pass  39: suminf.    0.36227 (21) obj. -103.615 iterations 63
Cbc0038I Pass  40: suminf.    0.31152 (21) obj. -104.63 iterations 11
Cbc0038I Pass  41: suminf.    2.61925 (47) obj. -103.615 iterations 87
Cbc0038I Pass  42: suminf.    0.80600 (46) obj. -103.615 iterations 8
Cbc0038I Pass  43: suminf.    0.80600 (46) obj. -103.615 iterations 0
Cbc0038I Pass  44: suminf.    2.36797 (30) obj. -103.615 iterations 109
Cbc0038I Pass  45: suminf.    1.31639 (29) obj. -103.615 iterations 9
Cbc0038I Pass  46: suminf.    1.30781 (30) obj. -103.615 iterations 8
Cbc0038I Pass  47: suminf.    0.85480 (26) obj. -103.615 iterations 87
Cbc0038I Pass  48: suminf.    0.83371 (27) obj. -103.615 iterations 7
Cbc0038I Pass  49: suminf.    1.74581 (26) obj. -103.615 iterations 42
Cbc0038I Pass  50: suminf.    1.74037 (27) obj. -103.615 iterations 22
Cbc0038I Pass  51: suminf.    2.16098 (23) obj. -103.615 iterations 66
Cbc0038I Pass  52: suminf.    2.16098 (23) obj. -103.615 iterations 25
Cbc0038I Pass  53: suminf.    2.10878 (23) obj. -103.615 iterations 36
Cbc0038I Pass  54: suminf.    2.10878 (23) obj. -103.615 iterations 25
Cbc0038I Pass  55: suminf.    2.03378 (21) obj. -103.615 iterations 29
Cbc0038I Pass  56: suminf.    1.68599 (21) obj. -103.615 iterations 24
Cbc0038I Pass  57: suminf.    2.74199 (44) obj. -103.615 iterations 49
Cbc0038I Pass  58: suminf.    2.74199 (44) obj. -103.615 iterations 0
Cbc0038I Pass  59: suminf.    2.74072 (41) obj. -103.615 iterations 28
Cbc0038I Pass  60: suminf.    2.38752 (41) obj. -103.615 iterations 12
Cbc0038I Pass  61: suminf.    2.07435 (20) obj. -103.615 iterations 36
Cbc0038I Pass  62: suminf.    2.04276 (20) obj. -103.615 iterations 53
Cbc0038I Pass  63: suminf.    2.04276 (20) obj. -103.615 iterations 28
Cbc0038I Pass  64: suminf.    2.07435 (20) obj. -103.615 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 389 rows 403 columns, reduced to 83 rows 87 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -73.7684 - took 0.26 seconds
Cbc0012I Integer solution of -73.76837 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 389 rows 403 columns, reduced to 98 rows 100 columns
Cbc0012I Integer solution of -95.11788 found by DiveCoefficient after 20189 iterations and 0 nodes (12.77 seconds)
Cbc0031I 166 added rows had average density of 72.222892
Cbc0013I At root node, 166 cuts changed objective from -222.99869 to -150.59732 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 49748 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.594 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3432 row cuts average 377.3 elements, 0 column cuts (0 active)  in 1.625 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1641 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6236 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.321 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.223 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2937 row cuts average 14.4 elements, 0 column cuts (0 active)  in 1.233 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 216.3 elements, 0 column cuts (0 active)  in 0.247 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 634 row cuts average 32.1 elements, 0 column cuts (0 active)  in 2.125 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -95.11788 best solution, best possible -150.59732 (13.80 seconds)
Cbc0010I After 1 nodes, 2 on tree, -95.11788 best solution, best possible -150.59732 (15.84 seconds)
Cbc0012I Integer solution of -115.69178 found by DiveCoefficient after 21753 iterations and 3 nodes (16.51 seconds)
Cbc0010I After 3 nodes, 4 on tree, -115.69178 best solution, best possible -150.59732 (16.62 seconds)
Cbc0012I Integer solution of -117.43278 found by DiveCoefficient after 21923 iterations and 6 nodes (16.72 seconds)
Cbc0012I Integer solution of -119.62717 found by rounding after 22016 iterations and 9 nodes (16.81 seconds)
Cbc0012I Integer solution of -130.05468 found by DiveCoefficient after 22016 iterations and 9 nodes (16.81 seconds)
Cbc0004I Integer solution of -133.51138 found after 22468 iterations and 22 nodes (17.36 seconds)
Cbc0010I After 22 nodes, 8 on tree, -133.51138 best solution, best possible -150.59732 (17.36 seconds)
Cbc0010I After 30 nodes, 3 on tree, -133.51138 best solution, best possible -150.59732 (18.40 seconds)
Cbc0010I After 32 nodes, 5 on tree, -133.51138 best solution, best possible -150.59732 (19.28 seconds)
Cbc0010I After 35 nodes, 8 on tree, -133.51138 best solution, best possible -150.59732 (20.01 seconds)
Cbc0038I Full problem 389 rows 403 columns, reduced to 9 rows 14 columns
Cbc0010I After 45 nodes, 9 on tree, -133.51138 best solution, best possible -150.59732 (20.71 seconds)
Cbc0010I After 59 nodes, 7 on tree, -133.51138 best solution, best possible -150.59732 (21.48 seconds)
Cbc0010I After 65 nodes, 7 on tree, -133.51138 best solution, best possible -150.59732 (22.24 seconds)
Cbc0010I After 75 nodes, 9 on tree, -133.51138 best solution, best possible -150.59732 (23.06 seconds)
Cbc0010I After 89 nodes, 8 on tree, -133.51138 best solution, best possible -150.59732 (23.84 seconds)
Cbc0038I Full problem 389 rows 403 columns, reduced to 220 rows 231 columns - 21 fixed gives 199, 210 - still too large
Cbc0038I Full problem 389 rows 403 columns, reduced to 186 rows 197 columns
Cbc0010I After 100 nodes, 8 on tree, -133.51138 best solution, best possible -150.59732 (24.63 seconds)
Cbc0010I After 109 nodes, 9 on tree, -133.51138 best solution, best possible -150.59732 (25.52 seconds)
Cbc0001I Search completed - best objective -133.51138, took 31655 iterations and 120 nodes (25.67 seconds)
Cbc0032I Strong branching done 1412 times (41406 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 25, 640 variables fixed on reduced cost
Total time (CPU seconds):       24.73   (Wallclock seconds):       25.78

