Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 12 (-17) rows, 8 (-7) columns and 33 (-42) elements
Clp1000I sum of infeasibilities 7.83037e-09 - average 6.5253e-10, 0 fixed columns
Coin0506I Presolve 12 (0) rows, 8 (0) columns and 33 (0) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Coin0511I After Postsolve, objective 30.629719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Coin0511I After Postsolve, objective 30.629719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30.62971883 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 12 rows, 8 columns (7 integer (7 of which binary)) and 33 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.353%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.50473
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10 iterations 6
Cbc0038I Solution found of 10
Cbc0038I Relaxing continuous gives 10
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 12 rows 8 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 10 to -10 (0.00 seconds)
Cbc0038I Round again with cutoff of -12.9312
Cbc0038I Pass   2: suminf.    0.88285 (4) obj. -12.9312 iterations 3
Cbc0038I Pass   3: suminf.    1.21840 (3) obj. -12.9312 iterations 4
Cbc0038I Pass   4: suminf.    0.91689 (3) obj. -12.9312 iterations 1
Cbc0038I Pass   5: suminf.    0.86980 (3) obj. -12.9312 iterations 5
Cbc0038I Pass   6: suminf.    0.81975 (4) obj. -12.9312 iterations 2
Cbc0038I Pass   7: suminf.    0.53511 (7) obj. -12.9312 iterations 5
Cbc0038I Pass   8: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I Pass   9: suminf.    0.87311 (6) obj. -12.9312 iterations 7
Cbc0038I Pass  10: suminf.    1.00630 (5) obj. -12.9312 iterations 2
Cbc0038I Pass  11: suminf.    1.21840 (3) obj. -12.9312 iterations 7
Cbc0038I Pass  12: suminf.    0.91689 (3) obj. -12.9312 iterations 1
Cbc0038I Pass  13: suminf.    0.91689 (3) obj. -12.9312 iterations 0
Cbc0038I Pass  14: suminf.    1.00347 (4) obj. -12.9312 iterations 5
Cbc0038I Pass  15: suminf.    0.81975 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  16: suminf.    0.53511 (7) obj. -12.9312 iterations 5
Cbc0038I Pass  17: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I Pass  18: suminf.    0.87311 (6) obj. -12.9312 iterations 7
Cbc0038I Pass  19: suminf.    0.86980 (3) obj. -12.9312 iterations 3
Cbc0038I Pass  20: suminf.    0.72429 (4) obj. -12.9312 iterations 7
Cbc0038I Pass  21: suminf.    0.83276 (2) obj. -12.9312 iterations 6
Cbc0038I Pass  22: suminf.    0.83029 (2) obj. -12.9312 iterations 2
Cbc0038I Pass  23: suminf.    0.83774 (2) obj. -12.9312 iterations 2
Cbc0038I Pass  24: suminf.    0.94053 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  25: suminf.    0.72429 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  26: suminf.    0.72429 (4) obj. -12.9312 iterations 0
Cbc0038I Pass  27: suminf.    0.72429 (4) obj. -12.9312 iterations 0
Cbc0038I Pass  28: suminf.    1.19315 (3) obj. -12.9312 iterations 3
Cbc0038I Pass  29: suminf.    0.98290 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  30: suminf.    0.53511 (7) obj. -12.9312 iterations 6
Cbc0038I Pass  31: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 12 rows 8 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -10 - took 0.00 seconds
Cbc0012I Integer solution of -10 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -30.312668 to -30.312668 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -10, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-9) rows, 21 (-5) columns and 100 (-53) elements
Clp1000I sum of infeasibilities 7.64452e-09 - average 4.02343e-10, 14 fixed columns
Coin0506I Presolve 7 (-12) rows, 7 (-14) columns and 23 (-77) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 44.455696
Clp0000I Optimal - objective value 44.455696
Coin0511I After Postsolve, objective 44.455696, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0492379 - largest nonzero change 0 ( 0%) - largest zero change 1.06059e-05
Clp0000I Optimal - objective value 110.12791
Clp0000I Optimal - objective value 110.12791
Clp0000I Optimal - objective value 110.12791
Coin0511I After Postsolve, objective 110.12791, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 110.1279084 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 18 columns (18 integer (18 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.009%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.428947
Cbc0038I Pass   1: suminf.    0.29268 (1) obj. -11.9268 iterations 6
Cbc0038I Solution found of 10
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 18 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 6.66956
Cbc0038I Pass   2: suminf.    0.29268 (1) obj. -11.9268 iterations 0
Cbc0038I Pass   3: suminf.    0.10743 (1) obj. 6.66956 iterations 1
Cbc0038I Pass   4: suminf.    0.97996 (5) obj. 6.66956 iterations 4
Cbc0038I Pass   5: suminf.    0.76508 (3) obj. 6.66956 iterations 6
Cbc0038I Pass   6: suminf.    0.24741 (1) obj. 6.66956 iterations 3
Cbc0038I Pass   7: suminf.    0.17500 (1) obj. 4.425 iterations 1
Cbc0038I Pass   8: suminf.    0.64167 (2) obj. 4.775 iterations 4
Cbc0038I Pass   9: suminf.    0.58055 (2) obj. 6.66956 iterations 2
Cbc0038I Pass  10: suminf.    0.85217 (2) obj. 6.66956 iterations 2
Cbc0038I Pass  11: suminf.    0.56993 (3) obj. 6.66956 iterations 5
Cbc0038I Pass  12: suminf.    0.51667 (2) obj. 6.35 iterations 2
Cbc0038I Pass  13: suminf.    0.55217 (2) obj. 6.66956 iterations 3
Cbc0038I Pass  14: suminf.    0.56232 (3) obj. 6.66956 iterations 1
Cbc0038I Pass  15: suminf.    0.75378 (3) obj. 6.66956 iterations 5
Cbc0038I Pass  16: suminf.    0.51667 (2) obj. 3.35 iterations 2
Cbc0038I Pass  17: suminf.    0.81449 (2) obj. 6.66956 iterations 4
Cbc0038I Pass  18: suminf.    0.81449 (2) obj. 6.66956 iterations 0
Cbc0038I Pass  19: suminf.    0.62375 (2) obj. 6.66956 iterations 2
Cbc0038I Pass  20: suminf.    0.49565 (2) obj. 6.66956 iterations 9
Cbc0038I Pass  21: suminf.    0.17500 (1) obj. 4.425 iterations 2
Cbc0038I Pass  22: suminf.    0.24741 (1) obj. 6.66956 iterations 1
Cbc0038I Pass  23: suminf.    0.44095 (1) obj. 6.66956 iterations 1
Cbc0038I Pass  24: suminf.    0.17500 (1) obj. -1.575 iterations 1
Cbc0038I Pass  25: suminf.    0.44095 (1) obj. 6.66956 iterations 1
Cbc0038I Pass  26: suminf.    0.40870 (1) obj. 6.66956 iterations 2
Cbc0038I Pass  27: suminf.    0.29268 (1) obj. 3.07317 iterations 1
Cbc0038I Pass  28: suminf.    0.40870 (1) obj. 6.66956 iterations 1
Cbc0038I Pass  29: suminf.    0.43314 (3) obj. 6.66956 iterations 3
Cbc0038I Pass  30: suminf.    0.24741 (1) obj. 6.66956 iterations 3
Cbc0038I Pass  31: suminf.    0.17500 (1) obj. 4.425 iterations 1
Cbc0038I Rounding solution of 9 is better than previous of 10

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 18 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 9 to -10 (0.01 seconds)
Cbc0038I Round again with cutoff of -11.661
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.29268 (1) obj. -11.9268 iterations 0
Cbc0038I Pass  32: suminf.    0.30126 (1) obj. -11.661 iterations 1
Cbc0038I Pass  33: suminf.    1.16219 (4) obj. -11.661 iterations 6
Cbc0038I Pass  34: suminf.    1.16219 (4) obj. -11.661 iterations 0
Cbc0038I Pass  35: suminf.    1.23663 (4) obj. -11.661 iterations 1
Cbc0038I Pass  36: suminf.    1.23663 (4) obj. -11.661 iterations 0
Cbc0038I Pass  37: suminf.    1.16219 (4) obj. -11.661 iterations 1
Cbc0038I Pass  38: suminf.    1.16219 (4) obj. -11.661 iterations 0
Cbc0038I Pass  39: suminf.    1.00432 (4) obj. -11.661 iterations 3
Cbc0038I Pass  40: suminf.    1.00432 (4) obj. -11.661 iterations 1
Cbc0038I Pass  41: suminf.    1.23663 (4) obj. -11.661 iterations 3
Cbc0038I Pass  42: suminf.    1.95081 (8) obj. -11.661 iterations 4
Cbc0038I Pass  43: suminf.    1.95081 (8) obj. -11.661 iterations 0
Cbc0038I Pass  44: suminf.    0.55781 (2) obj. -11.661 iterations 4
Cbc0038I Pass  45: suminf.    0.39203 (2) obj. -11.661 iterations 2
Cbc0038I Pass  46: suminf.    0.55781 (2) obj. -11.661 iterations 1
Cbc0038I Pass  47: suminf.    1.23663 (4) obj. -11.661 iterations 2
Cbc0038I Pass  48: suminf.    1.23663 (4) obj. -11.661 iterations 0
Cbc0038I Pass  49: suminf.    1.16219 (4) obj. -11.661 iterations 1
Cbc0038I Pass  50: suminf.    1.16219 (4) obj. -11.661 iterations 0
Cbc0038I Pass  51: suminf.    1.23663 (4) obj. -11.661 iterations 1
Cbc0038I Pass  52: suminf.    1.23663 (4) obj. -11.661 iterations 0
Cbc0038I Pass  53: suminf.    2.45447 (8) obj. -11.661 iterations 2
Cbc0038I Pass  54: suminf.    2.24324 (8) obj. -11.661 iterations 2
Cbc0038I Pass  55: suminf.    1.23663 (4) obj. -11.661 iterations 3
Cbc0038I Pass  56: suminf.    1.23663 (4) obj. -11.661 iterations 0
Cbc0038I Pass  57: suminf.    1.16219 (4) obj. -11.661 iterations 1
Cbc0038I Pass  58: suminf.    1.16219 (4) obj. -11.661 iterations 0
Cbc0038I Pass  59: suminf.    1.23663 (4) obj. -11.661 iterations 1
Cbc0038I Pass  60: suminf.    1.23663 (4) obj. -11.661 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -10 - took 0.01 seconds
Cbc0012I Integer solution of -10 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0001I Search completed - best objective -10, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 12 (-17) rows, 8 (-7) columns and 33 (-42) elements
Clp1000I sum of infeasibilities 7.83037e-09 - average 6.5253e-10, 0 fixed columns
Coin0506I Presolve 12 (0) rows, 8 (0) columns and 33 (0) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Coin0511I After Postsolve, objective 30.629719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Coin0511I After Postsolve, objective 30.629719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30.62971883 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 12 rows, 8 columns (7 integer (7 of which binary)) and 33 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.353%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.50473
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10 iterations 6
Cbc0038I Solution found of 10
Cbc0038I Relaxing continuous gives 10
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 12 rows 8 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 10 to -10 (0.00 seconds)
Cbc0038I Round again with cutoff of -12.9312
Cbc0038I Pass   2: suminf.    0.88285 (4) obj. -12.9312 iterations 3
Cbc0038I Pass   3: suminf.    1.21840 (3) obj. -12.9312 iterations 4
Cbc0038I Pass   4: suminf.    0.91689 (3) obj. -12.9312 iterations 1
Cbc0038I Pass   5: suminf.    0.86980 (3) obj. -12.9312 iterations 5
Cbc0038I Pass   6: suminf.    0.81975 (4) obj. -12.9312 iterations 2
Cbc0038I Pass   7: suminf.    0.53511 (7) obj. -12.9312 iterations 5
Cbc0038I Pass   8: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I Pass   9: suminf.    0.87311 (6) obj. -12.9312 iterations 7
Cbc0038I Pass  10: suminf.    1.00630 (5) obj. -12.9312 iterations 2
Cbc0038I Pass  11: suminf.    1.21840 (3) obj. -12.9312 iterations 7
Cbc0038I Pass  12: suminf.    0.91689 (3) obj. -12.9312 iterations 1
Cbc0038I Pass  13: suminf.    0.91689 (3) obj. -12.9312 iterations 0
Cbc0038I Pass  14: suminf.    1.00347 (4) obj. -12.9312 iterations 5
Cbc0038I Pass  15: suminf.    0.81975 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  16: suminf.    0.53511 (7) obj. -12.9312 iterations 5
Cbc0038I Pass  17: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I Pass  18: suminf.    0.87311 (6) obj. -12.9312 iterations 7
Cbc0038I Pass  19: suminf.    0.86980 (3) obj. -12.9312 iterations 3
Cbc0038I Pass  20: suminf.    0.72429 (4) obj. -12.9312 iterations 7
Cbc0038I Pass  21: suminf.    0.83276 (2) obj. -12.9312 iterations 6
Cbc0038I Pass  22: suminf.    0.83029 (2) obj. -12.9312 iterations 2
Cbc0038I Pass  23: suminf.    0.83774 (2) obj. -12.9312 iterations 2
Cbc0038I Pass  24: suminf.    0.94053 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  25: suminf.    0.72429 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  26: suminf.    0.72429 (4) obj. -12.9312 iterations 0
Cbc0038I Pass  27: suminf.    0.72429 (4) obj. -12.9312 iterations 0
Cbc0038I Pass  28: suminf.    1.19315 (3) obj. -12.9312 iterations 3
Cbc0038I Pass  29: suminf.    0.98290 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  30: suminf.    0.53511 (7) obj. -12.9312 iterations 6
Cbc0038I Pass  31: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 12 rows 8 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -10 - took 0.01 seconds
Cbc0012I Integer solution of -10 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -30.312668 to -30.312668 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -10, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 13 (-16) rows, 15 (-12) columns and 63 (-91) elements
Clp1000I sum of infeasibilities 8.04589e-10 - average 6.18914e-11, 2 fixed columns
Coin0506I Presolve 12 (-1) rows, 13 (-2) columns and 52 (-11) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 37.90489
Clp0000I Optimal - objective value 37.90489
Coin0511I After Postsolve, objective 37.90489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.3443498 - largest nonzero change 2.6346279e-05 ( 0.0016580886%) - largest zero change 0
Clp0000I Optimal - objective value 41.741625
Clp0000I Optimal - objective value 41.741625
Clp0000I Optimal - objective value 41.741625
Coin0511I After Postsolve, objective 41.741625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.7416247 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 18 columns (18 integer (18 of which binary)) and 73 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.009%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.93826
Cbc0038I Pass   1: suminf.    0.53333 (2) obj. 4.2 iterations 6
Cbc0038I Pass   2: suminf.    0.53333 (2) obj. 4.2 iterations 0
Cbc0038I Solution found of 15
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 18 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 15 to 6 (0.01 seconds)
Cbc0038I Round again with cutoff of 2.04005
Cbc0038I Pass   3: suminf.    0.84062 (6) obj. 2.04005 iterations 1
Cbc0038I Pass   4: suminf.    0.60301 (3) obj. 2.04005 iterations 1
Cbc0038I Pass   5: suminf.    0.51724 (2) obj. -1.93103 iterations 4
Cbc0038I Pass   6: suminf.    0.59872 (2) obj. 2.04005 iterations 2
Cbc0038I Pass   7: suminf.    0.59872 (2) obj. 2.04005 iterations 0
Cbc0038I Pass   8: suminf.    0.60344 (2) obj. 2.04005 iterations 1
Cbc0038I Pass   9: suminf.    0.45238 (2) obj. -2.64286 iterations 1
Cbc0038I Pass  10: suminf.    0.49881 (3) obj. 2.04005 iterations 4
Cbc0038I Pass  11: suminf.    0.14286 (1) obj. 0.428571 iterations 2
Cbc0038I Pass  12: suminf.    0.19484 (1) obj. 2.04005 iterations 1
Cbc0038I Pass  13: suminf.    0.90238 (4) obj. -1.19286 iterations 4
Cbc0038I Pass  14: suminf.    0.84769 (3) obj. 2.04005 iterations 3
Cbc0038I Pass  15: suminf.    0.76190 (2) obj. 1.28571 iterations 1
Cbc0038I Pass  16: suminf.    0.84572 (2) obj. 2.04005 iterations 1
Cbc0038I Pass  17: suminf.    0.64377 (3) obj. 2.04005 iterations 3
Cbc0038I Pass  18: suminf.    0.45238 (2) obj. 0.357143 iterations 1
Cbc0038I Pass  19: suminf.    0.63937 (2) obj. 2.04005 iterations 1
Cbc0038I Pass  20: suminf.    0.63937 (2) obj. 2.04005 iterations 0
Cbc0038I Pass  21: suminf.    0.68615 (3) obj. -3.31818 iterations 5
Cbc0038I Pass  22: suminf.    0.68615 (3) obj. -3.31818 iterations 0
Cbc0038I Pass  23: suminf.    0.51936 (2) obj. 2.04005 iterations 2
Cbc0038I Pass  24: suminf.    0.51936 (2) obj. 2.04005 iterations 0
Cbc0038I Pass  25: suminf.    0.44215 (2) obj. 2.04005 iterations 1
Cbc0038I Pass  26: suminf.    0.30952 (2) obj. -2.07143 iterations 1
Cbc0038I Pass  27: suminf.    0.74981 (4) obj. 2.04005 iterations 4
Cbc0038I Pass  28: suminf.    0.55952 (3) obj. 1.17857 iterations 3
Cbc0038I Pass  29: suminf.    0.93254 (3) obj. 2.04005 iterations 2
Cbc0038I Pass  30: suminf.    0.79094 (3) obj. 2.04005 iterations 2
Cbc0038I Pass  31: suminf.    0.72191 (3) obj. 2.04005 iterations 1
Cbc0038I Pass  32: suminf.    0.50952 (3) obj. 0.128571 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 18 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 6 to -10 (0.01 seconds)
Cbc0038I Round again with cutoff of -13.72
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.87699 (6) obj. -13.72 iterations 1
Cbc0038I Pass  33: suminf.    1.59885 (4) obj. -13.72 iterations 6
Cbc0038I Pass  34: suminf.    1.48138 (5) obj. -13.72 iterations 2
Cbc0038I Pass  35: suminf.    0.92220 (6) obj. -13.72 iterations 3
Cbc0038I Pass  36: suminf.    0.66781 (3) obj. -13.72 iterations 1
Cbc0038I Pass  37: suminf.    0.68317 (2) obj. -13.72 iterations 1
Cbc0038I Pass  38: suminf.    0.68317 (2) obj. -13.72 iterations 0
Cbc0038I Pass  39: suminf.    0.57892 (2) obj. -13.72 iterations 1
Cbc0038I Pass  40: suminf.    0.45238 (2) obj. -17.6429 iterations 1
Cbc0038I Pass  41: suminf.    0.14286 (1) obj. -14.5714 iterations 3
Cbc0038I Pass  42: suminf.    0.17032 (1) obj. -13.72 iterations 1
Cbc0038I Pass  43: suminf.    0.14286 (1) obj. -14.5714 iterations 1
Cbc0038I Pass  44: suminf.    0.20367 (2) obj. -13.72 iterations 1
Cbc0038I Pass  45: suminf.    0.14286 (1) obj. -14.5714 iterations 1
Cbc0038I Pass  46: suminf.    1.57638 (5) obj. -13.72 iterations 6
Cbc0038I Pass  47: suminf.    1.57638 (5) obj. -13.72 iterations 0
Cbc0038I Pass  48: suminf.    1.47051 (4) obj. -13.72 iterations 4
Cbc0038I Pass  49: suminf.    1.34108 (4) obj. -13.72 iterations 2
Cbc0038I Pass  50: suminf.    1.59639 (4) obj. -13.72 iterations 6
Cbc0038I Pass  51: suminf.    1.48138 (5) obj. -13.72 iterations 3
Cbc0038I Pass  52: suminf.    0.92220 (6) obj. -13.72 iterations 3
Cbc0038I Pass  53: suminf.    0.66781 (3) obj. -13.72 iterations 1
Cbc0038I Pass  54: suminf.    0.68317 (2) obj. -13.72 iterations 1
Cbc0038I Pass  55: suminf.    0.68317 (2) obj. -13.72 iterations 0
Cbc0038I Pass  56: suminf.    0.57892 (2) obj. -13.72 iterations 1
Cbc0038I Pass  57: suminf.    0.45238 (2) obj. -17.6429 iterations 1
Cbc0038I Pass  58: suminf.    1.75117 (7) obj. -13.72 iterations 3
Cbc0038I Pass  59: suminf.    2.16704 (7) obj. -13.72 iterations 2
Cbc0038I Pass  60: suminf.    0.92220 (6) obj. -13.72 iterations 2
Cbc0038I Pass  61: suminf.    0.66781 (3) obj. -13.72 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -10 - took 0.01 seconds
Cbc0012I Integer solution of -10 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 18 columns, reduced to 12 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -24.600414 to -24.600414 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -10, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

