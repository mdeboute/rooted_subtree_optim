Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 150 (-56) rows, 78 (-26) columns and 375 (-134) elements
Clp0000I Optimal - objective value 4895.5565
Coin0511I After Postsolve, objective 4895.5565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4895.556543 - 85 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 150 rows, 78 columns (77 integer (77 of which binary)) and 375 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.217%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 11.739
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -971.669 iterations 67
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -971.669 iterations 0
Cbc0038I Solution found of -814.169
Cbc0038I Relaxing continuous gives -814.169
Cbc0038I Rounding solution of -821.669 is better than previous of -814.169

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 78 columns, reduced to 83 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -821.669 to -3280.83 (0.02 seconds)
Cbc0038I Round again with cutoff of -3441.98
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.05325 (18) obj. -3441.98 iterations 19
Cbc0038I Pass   4: suminf.    0.74646 (10) obj. -3441.98 iterations 26
Cbc0038I Pass   5: suminf.    2.12041 (13) obj. -3441.98 iterations 25
Cbc0038I Pass   6: suminf.    2.12041 (13) obj. -3441.98 iterations 1
Cbc0038I Pass   7: suminf.    2.47701 (17) obj. -3441.98 iterations 16
Cbc0038I Pass   8: suminf.    1.80166 (13) obj. -3441.98 iterations 4
Cbc0038I Pass   9: suminf.    1.41949 (12) obj. -3441.98 iterations 5
Cbc0038I Pass  10: suminf.    4.01641 (20) obj. -3441.98 iterations 16
Cbc0038I Pass  11: suminf.    4.51466 (22) obj. -3441.98 iterations 19
Cbc0038I Pass  12: suminf.    1.50807 (11) obj. -3441.98 iterations 19
Cbc0038I Pass  13: suminf.    1.05912 (8) obj. -3441.98 iterations 5
Cbc0038I Pass  14: suminf.    3.03696 (17) obj. -3441.98 iterations 15
Cbc0038I Pass  15: suminf.    1.51432 (11) obj. -3441.98 iterations 8
Cbc0038I Pass  16: suminf.    2.41113 (22) obj. -3441.98 iterations 17
Cbc0038I Pass  17: suminf.    1.44738 (10) obj. -3441.98 iterations 15
Cbc0038I Pass  18: suminf.    2.52029 (15) obj. -3441.98 iterations 16
Cbc0038I Pass  19: suminf.    1.00855 (10) obj. -3441.98 iterations 7
Cbc0038I Pass  20: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I Pass  21: suminf.    3.06047 (16) obj. -3441.98 iterations 13
Cbc0038I Pass  22: suminf.    1.79153 (11) obj. -3441.98 iterations 7
Cbc0038I Pass  23: suminf.    0.89661 (8) obj. -3441.98 iterations 7
Cbc0038I Pass  24: suminf.    2.55436 (15) obj. -3441.98 iterations 15
Cbc0038I Pass  25: suminf.    1.00855 (10) obj. -3441.98 iterations 8
Cbc0038I Pass  26: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I Pass  27: suminf.    3.06047 (16) obj. -3441.98 iterations 13
Cbc0038I Pass  28: suminf.    1.79153 (11) obj. -3441.98 iterations 7
Cbc0038I Pass  29: suminf.    0.89661 (8) obj. -3441.98 iterations 7
Cbc0038I Pass  30: suminf.    2.55436 (15) obj. -3441.98 iterations 15
Cbc0038I Pass  31: suminf.    1.00855 (10) obj. -3441.98 iterations 8
Cbc0038I Pass  32: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 78 columns, reduced to 89 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3280.83 - took 0.05 seconds
Cbc0012I Integer solution of -3280.8321 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 150 rows 78 columns, reduced to 82 rows 52 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 15.666667
Cbc0013I At root node, 9 cuts changed objective from -4892.3065 to -3280.8321 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1944 row cuts average 3.2 elements, 25 column cuts (29 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 69 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3280.832099999998, took 324 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-81) rows, 128 (-76) columns and 2095 (-3565) elements
Clp1000I sum of infeasibilities 4.97755e-08 - average 4.01416e-10, 83 fixed columns
Coin0506I Presolve 40 (-84) rows, 41 (-87) columns and 247 (-1848) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 6419.7112
Clp0000I Optimal - objective value 6419.7112
Coin0511I After Postsolve, objective 6419.7112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6039789 - largest nonzero change 1.2277928e-05 ( 0.0012182239%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 6960.3387
Clp0000I Optimal - objective value 6960.3387
Clp0000I Optimal - objective value 6960.3387
Coin0511I After Postsolve, objective 6960.3387, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6960.338709 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 128 columns (128 integer (128 of which binary)) and 2104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.150%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 18.3266
Cbc0038I Pass   1: suminf.    6.33605 (20) obj. -3720 iterations 38
Cbc0038I Pass   2: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Solution found of -2332.5
Cbc0038I Rounding solution of -2377.5 is better than previous of -2332.5

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 128 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -2377.5 to -2790.41 (0.09 seconds)
Cbc0038I Round again with cutoff of -3109.29
Cbc0038I Pass   3: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Pass   4: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Pass   5: suminf.    1.22004 (6) obj. -3109.29 iterations 18
Cbc0038I Pass   6: suminf.    0.88690 (2) obj. -3149.16 iterations 5
Cbc0038I Pass   7: suminf.    0.83706 (2) obj. -3109.29 iterations 1
Cbc0038I Pass   8: suminf.    6.58056 (17) obj. -3109.29 iterations 30
Cbc0038I Pass   9: suminf.    5.19209 (13) obj. -3308.37 iterations 4
Cbc0038I Pass  10: suminf.    5.00248 (13) obj. -3109.29 iterations 1
Cbc0038I Pass  11: suminf.    3.09094 (12) obj. -3109.29 iterations 13
Cbc0038I Pass  12: suminf.    2.81372 (11) obj. -3109.29 iterations 3
Cbc0038I Pass  13: suminf.    2.92778 (7) obj. -3109.29 iterations 12
Cbc0038I Pass  14: suminf.    2.92778 (7) obj. -3109.29 iterations 0
Cbc0038I Pass  15: suminf.    2.29383 (5) obj. -3109.29 iterations 6
Cbc0038I Pass  16: suminf.    2.29383 (5) obj. -3109.29 iterations 0
Cbc0038I Pass  17: suminf.    2.22884 (5) obj. -3109.29 iterations 3
Cbc0038I Pass  18: suminf.    2.22884 (5) obj. -3109.29 iterations 0
Cbc0038I Pass  19: suminf.    2.29383 (5) obj. -3109.29 iterations 3
Cbc0038I Pass  20: suminf.    6.17935 (17) obj. -3109.29 iterations 40
Cbc0038I Pass  21: suminf.    5.31025 (15) obj. -3109.29 iterations 9
Cbc0038I Pass  22: suminf.    5.31025 (15) obj. -3109.29 iterations 0
Cbc0038I Pass  23: suminf.    3.42312 (9) obj. -3109.29 iterations 8
Cbc0038I Pass  24: suminf.    3.34131 (9) obj. -3109.29 iterations 1
Cbc0038I Pass  25: suminf.    3.11343 (8) obj. -3109.29 iterations 4
Cbc0038I Pass  26: suminf.    3.11343 (8) obj. -3109.29 iterations 0
Cbc0038I Pass  27: suminf.    3.44754 (8) obj. -3109.29 iterations 2
Cbc0038I Pass  28: suminf.    3.11343 (8) obj. -3109.29 iterations 1
Cbc0038I Pass  29: suminf.    4.58988 (12) obj. -3109.29 iterations 20
Cbc0038I Pass  30: suminf.    4.09123 (11) obj. -3109.29 iterations 11
Cbc0038I Pass  31: suminf.    3.80817 (9) obj. -3109.29 iterations 6
Cbc0038I Pass  32: suminf.    3.50049 (9) obj. -3109.29 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 128 columns, reduced to 19 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -2790.41 to -2913.33 (0.11 seconds)
Cbc0038I Round again with cutoff of -3683.26
Cbc0038I Pass  32: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Pass  33: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Pass  34: suminf.    2.05476 (5) obj. -3683.26 iterations 29
Cbc0038I Pass  35: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  36: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  37: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  38: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  39: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  40: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  41: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  42: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  43: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  44: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  45: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  46: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  47: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  48: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  49: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  50: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  51: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  52: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  53: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  54: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  55: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  56: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  57: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  58: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  59: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  60: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  61: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -2913.33 - took 0.04 seconds
Cbc0012I Integer solution of -2913.3314 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 124 rows 128 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -3280.8321 found by DiveCoefficient after 114 iterations and 0 nodes (0.15 seconds)
Cbc0031I 29 added rows had average density of 7.6896552
Cbc0013I At root node, 29 cuts changed objective from -5979.1645 to -3280.8321 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 957 row cuts average 2.0 elements, 38 column cuts (38 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3280.832099999998, took 114 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 150 (-56) rows, 78 (-26) columns and 375 (-134) elements
Clp0000I Optimal - objective value 4895.5565
Coin0511I After Postsolve, objective 4895.5565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4895.556543 - 85 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 150 rows, 78 columns (77 integer (77 of which binary)) and 375 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.217%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 11.739
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -971.669 iterations 67
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -971.669 iterations 0
Cbc0038I Solution found of -814.169
Cbc0038I Relaxing continuous gives -814.169
Cbc0038I Rounding solution of -821.669 is better than previous of -814.169

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 78 columns, reduced to 83 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -821.669 to -3280.83 (0.02 seconds)
Cbc0038I Round again with cutoff of -3441.98
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.05325 (18) obj. -3441.98 iterations 19
Cbc0038I Pass   4: suminf.    0.74646 (10) obj. -3441.98 iterations 26
Cbc0038I Pass   5: suminf.    2.12041 (13) obj. -3441.98 iterations 25
Cbc0038I Pass   6: suminf.    2.12041 (13) obj. -3441.98 iterations 1
Cbc0038I Pass   7: suminf.    2.47701 (17) obj. -3441.98 iterations 16
Cbc0038I Pass   8: suminf.    1.80166 (13) obj. -3441.98 iterations 4
Cbc0038I Pass   9: suminf.    1.41949 (12) obj. -3441.98 iterations 5
Cbc0038I Pass  10: suminf.    4.01641 (20) obj. -3441.98 iterations 16
Cbc0038I Pass  11: suminf.    4.51466 (22) obj. -3441.98 iterations 19
Cbc0038I Pass  12: suminf.    1.50807 (11) obj. -3441.98 iterations 19
Cbc0038I Pass  13: suminf.    1.05912 (8) obj. -3441.98 iterations 5
Cbc0038I Pass  14: suminf.    3.03696 (17) obj. -3441.98 iterations 15
Cbc0038I Pass  15: suminf.    1.51432 (11) obj. -3441.98 iterations 8
Cbc0038I Pass  16: suminf.    2.41113 (22) obj. -3441.98 iterations 17
Cbc0038I Pass  17: suminf.    1.44738 (10) obj. -3441.98 iterations 15
Cbc0038I Pass  18: suminf.    2.52029 (15) obj. -3441.98 iterations 16
Cbc0038I Pass  19: suminf.    1.00855 (10) obj. -3441.98 iterations 7
Cbc0038I Pass  20: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I Pass  21: suminf.    3.06047 (16) obj. -3441.98 iterations 13
Cbc0038I Pass  22: suminf.    1.79153 (11) obj. -3441.98 iterations 7
Cbc0038I Pass  23: suminf.    0.89661 (8) obj. -3441.98 iterations 7
Cbc0038I Pass  24: suminf.    2.55436 (15) obj. -3441.98 iterations 15
Cbc0038I Pass  25: suminf.    1.00855 (10) obj. -3441.98 iterations 8
Cbc0038I Pass  26: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I Pass  27: suminf.    3.06047 (16) obj. -3441.98 iterations 13
Cbc0038I Pass  28: suminf.    1.79153 (11) obj. -3441.98 iterations 7
Cbc0038I Pass  29: suminf.    0.89661 (8) obj. -3441.98 iterations 7
Cbc0038I Pass  30: suminf.    2.55436 (15) obj. -3441.98 iterations 15
Cbc0038I Pass  31: suminf.    1.00855 (10) obj. -3441.98 iterations 8
Cbc0038I Pass  32: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 78 columns, reduced to 89 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3280.83 - took 0.04 seconds
Cbc0012I Integer solution of -3280.8321 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 150 rows 78 columns, reduced to 82 rows 52 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 15.666667
Cbc0013I At root node, 9 cuts changed objective from -4892.3065 to -3280.8321 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1944 row cuts average 3.2 elements, 25 column cuts (29 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 69 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3280.832099999998, took 324 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-82) rows, 128 (-77) columns and 2095 (-3566) elements
Clp1000I sum of infeasibilities 4.97755e-08 - average 4.01416e-10, 83 fixed columns
Coin0506I Presolve 40 (-84) rows, 41 (-87) columns and 247 (-1848) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 6419.7112
Clp0000I Optimal - objective value 6419.7112
Coin0511I After Postsolve, objective 6419.7112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6039789 - largest nonzero change 1.2277928e-05 ( 0.0012182239%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 6960.3387
Clp0000I Optimal - objective value 6960.3387
Clp0000I Optimal - objective value 6960.3387
Coin0511I After Postsolve, objective 6960.3387, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6960.338709 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 128 columns (128 integer (128 of which binary)) and 2104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.150%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 18.3266
Cbc0038I Pass   1: suminf.    6.33605 (20) obj. -3720 iterations 38
Cbc0038I Pass   2: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Solution found of -2332.5
Cbc0038I Rounding solution of -2377.5 is better than previous of -2332.5

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 128 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -2377.5 to -2790.41 (0.10 seconds)
Cbc0038I Round again with cutoff of -3109.29
Cbc0038I Pass   3: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Pass   4: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Pass   5: suminf.    1.22004 (6) obj. -3109.29 iterations 18
Cbc0038I Pass   6: suminf.    0.88690 (2) obj. -3149.16 iterations 5
Cbc0038I Pass   7: suminf.    0.83706 (2) obj. -3109.29 iterations 1
Cbc0038I Pass   8: suminf.    6.58056 (17) obj. -3109.29 iterations 30
Cbc0038I Pass   9: suminf.    5.19209 (13) obj. -3308.37 iterations 4
Cbc0038I Pass  10: suminf.    5.00248 (13) obj. -3109.29 iterations 1
Cbc0038I Pass  11: suminf.    3.09094 (12) obj. -3109.29 iterations 13
Cbc0038I Pass  12: suminf.    2.81372 (11) obj. -3109.29 iterations 3
Cbc0038I Pass  13: suminf.    2.92778 (7) obj. -3109.29 iterations 12
Cbc0038I Pass  14: suminf.    2.92778 (7) obj. -3109.29 iterations 0
Cbc0038I Pass  15: suminf.    2.29383 (5) obj. -3109.29 iterations 6
Cbc0038I Pass  16: suminf.    2.29383 (5) obj. -3109.29 iterations 0
Cbc0038I Pass  17: suminf.    2.22884 (5) obj. -3109.29 iterations 3
Cbc0038I Pass  18: suminf.    2.22884 (5) obj. -3109.29 iterations 0
Cbc0038I Pass  19: suminf.    2.29383 (5) obj. -3109.29 iterations 3
Cbc0038I Pass  20: suminf.    6.17935 (17) obj. -3109.29 iterations 40
Cbc0038I Pass  21: suminf.    5.31025 (15) obj. -3109.29 iterations 9
Cbc0038I Pass  22: suminf.    5.31025 (15) obj. -3109.29 iterations 0
Cbc0038I Pass  23: suminf.    3.42312 (9) obj. -3109.29 iterations 8
Cbc0038I Pass  24: suminf.    3.34131 (9) obj. -3109.29 iterations 1
Cbc0038I Pass  25: suminf.    3.11343 (8) obj. -3109.29 iterations 4
Cbc0038I Pass  26: suminf.    3.11343 (8) obj. -3109.29 iterations 0
Cbc0038I Pass  27: suminf.    3.44754 (8) obj. -3109.29 iterations 2
Cbc0038I Pass  28: suminf.    3.11343 (8) obj. -3109.29 iterations 1
Cbc0038I Pass  29: suminf.    4.58988 (12) obj. -3109.29 iterations 20
Cbc0038I Pass  30: suminf.    4.09123 (11) obj. -3109.29 iterations 11
Cbc0038I Pass  31: suminf.    3.80817 (9) obj. -3109.29 iterations 6
Cbc0038I Pass  32: suminf.    3.50049 (9) obj. -3109.29 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 128 columns, reduced to 19 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -2790.41 to -2913.33 (0.12 seconds)
Cbc0038I Round again with cutoff of -3683.26
Cbc0038I Pass  32: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Pass  33: suminf.    6.33605 (20) obj. -3720 iterations 0
Cbc0038I Pass  34: suminf.    2.05476 (5) obj. -3683.26 iterations 29
Cbc0038I Pass  35: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  36: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  37: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  38: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  39: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  40: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  41: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  42: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  43: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  44: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  45: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  46: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  47: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  48: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  49: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  50: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  51: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  52: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  53: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  54: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  55: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  56: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I Pass  57: suminf.    1.98621 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  58: suminf.    1.98621 (5) obj. -3683.26 iterations 1
Cbc0038I Pass  59: suminf.    2.05476 (5) obj. -3683.26 iterations 2
Cbc0038I Pass  60: suminf.    2.05476 (5) obj. -3683.26 iterations 0
Cbc0038I Pass  61: suminf.    2.10159 (5) obj. -3683.26 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -2913.33 - took 0.04 seconds
Cbc0012I Integer solution of -2913.3314 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 124 rows 128 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -3280.8321 found by DiveCoefficient after 114 iterations and 0 nodes (0.16 seconds)
Cbc0031I 29 added rows had average density of 7.6896552
Cbc0013I At root node, 29 cuts changed objective from -5979.1645 to -3280.8321 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 957 row cuts average 2.0 elements, 38 column cuts (38 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3280.832099999998, took 114 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.16

