Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 7.51257e-06 - average 1.9263e-07, 1 fixed columns
Coin0506I Presolve 37 (-2) rows, 21 (-1) columns and 108 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 116.53884
Clp0000I Optimal - objective value 116.53884
Coin0511I After Postsolve, objective 116.53884, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 116.53884
Clp0000I Optimal - objective value 116.53884
Clp0000I Optimal - objective value 116.53884
Coin0511I After Postsolve, objective 116.53884, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.5388415 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.49873
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.10046 iterations 19
Cbc0038I Solution found of -2.10046
Cbc0038I Relaxing continuous gives -2.10046
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2.10046 to -31.6596 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.8674
Cbc0038I Pass   2: suminf.    0.42198 (2) obj. -39.8674 iterations 2
Cbc0038I Pass   3: suminf.    0.33878 (1) obj. -39.8674 iterations 2
Cbc0038I Pass   4: suminf.    0.53487 (2) obj. -39.8674 iterations 2
Cbc0038I Pass   5: suminf.    0.30951 (1) obj. -39.8674 iterations 2
Cbc0038I Pass   6: suminf.    0.51091 (2) obj. -39.8674 iterations 2
Cbc0038I Pass   7: suminf.    0.20269 (1) obj. -39.8674 iterations 13
Cbc0038I Pass   8: suminf.    0.20269 (1) obj. -39.8674 iterations 1
Cbc0038I Pass   9: suminf.    0.46983 (5) obj. -39.8674 iterations 6
Cbc0038I Pass  10: suminf.    0.78458 (3) obj. -39.8674 iterations 4
Cbc0038I Pass  11: suminf.    0.68386 (4) obj. -39.8674 iterations 2
Cbc0038I Pass  12: suminf.    1.06429 (3) obj. -39.8674 iterations 4
Cbc0038I Pass  13: suminf.    1.03201 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  14: suminf.    1.43114 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  15: suminf.    0.86039 (3) obj. -39.8674 iterations 9
Cbc0038I Pass  16: suminf.    0.75107 (3) obj. -39.8674 iterations 2
Cbc0038I Pass  17: suminf.    0.87401 (3) obj. -39.8674 iterations 4
Cbc0038I Pass  18: suminf.    0.87401 (3) obj. -39.8674 iterations 0
Cbc0038I Pass  19: suminf.    1.06429 (3) obj. -39.8674 iterations 3
Cbc0038I Pass  20: suminf.    1.03201 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  21: suminf.    1.43114 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  22: suminf.    1.03201 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  23: suminf.    1.10092 (6) obj. -39.8674 iterations 9
Cbc0038I Pass  24: suminf.    1.10092 (6) obj. -39.8674 iterations 0
Cbc0038I Pass  25: suminf.    1.44293 (3) obj. -39.8674 iterations 6
Cbc0038I Pass  26: suminf.    1.19063 (3) obj. -39.8674 iterations 2
Cbc0038I Pass  27: suminf.    1.23557 (3) obj. -39.8674 iterations 3
Cbc0038I Pass  28: suminf.    1.16529 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  29: suminf.    1.40573 (4) obj. -39.8674 iterations 3
Cbc0038I Pass  30: suminf.    1.16529 (4) obj. -39.8674 iterations 3
Cbc0038I Pass  31: suminf.    1.49482 (4) obj. -39.8674 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -31.6596 - took 0.02 seconds
Cbc0012I Integer solution of -31.659637 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 16.166667
Cbc0013I At root node, 12 cuts changed objective from -113.73638 to -45.886765 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1201 row cuts average 3.9 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 813 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 105 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -32.059787 found by rounding after 1888 iterations and 4 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -32.05978699999997, took 2372 iterations and 24 nodes (0.18 seconds)
Cbc0032I Strong branching done 128 times (724 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-8) rows, 43 (-3) columns and 338 (-50) elements
Clp1000I sum of infeasibilities 0 - average 0, 37 fixed columns
Coin0506I Presolve 5 (-35) rows, 6 (-37) columns and 18 (-320) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 23.398994
Clp0000I Optimal - objective value 23.398994
Coin0511I After Postsolve, objective 23.398994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15843872 - largest nonzero change 0 ( 0%) - largest zero change 2.991175e-05
Clp0000I Optimal - objective value 177.37972
Clp0000I Optimal - objective value 177.37972
Clp0000I Optimal - objective value 177.37972
Coin0511I After Postsolve, objective 177.37972, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 177.3797167 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 43 columns (43 integer (43 of which binary)) and 346 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.794%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.14089
Cbc0038I Pass   1: suminf.    1.61775 (7) obj. -27.4808 iterations 16
Cbc0038I Pass   2: suminf.    1.61775 (7) obj. -27.4808 iterations 4
Cbc0038I Solution found of -4.55516
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13.1246
Cbc0038I Pass   3: suminf.    1.61775 (7) obj. -27.4808 iterations 0
Cbc0038I Pass   4: suminf.    1.61775 (7) obj. -27.4808 iterations 10
Cbc0038I Pass   5: suminf.    0.23804 (1) obj. -13.1246 iterations 26
Cbc0038I Pass   6: suminf.    0.38069 (1) obj. -18.26 iterations 3
Cbc0038I Pass   7: suminf.    1.37159 (5) obj. -13.1246 iterations 7
Cbc0038I Pass   8: suminf.    1.37159 (5) obj. -13.1246 iterations 0
Cbc0038I Pass   9: suminf.    1.24049 (3) obj. -13.1246 iterations 10
Cbc0038I Pass  10: suminf.    1.24049 (3) obj. -13.1246 iterations 3
Cbc0038I Pass  11: suminf.    0.76903 (2) obj. -23.1669 iterations 4
Cbc0038I Pass  12: suminf.    0.43429 (2) obj. -13.1246 iterations 3
Cbc0038I Pass  13: suminf.    1.23587 (3) obj. -13.1246 iterations 18
Cbc0038I Pass  14: suminf.    1.01670 (3) obj. -13.1246 iterations 1
Cbc0038I Pass  15: suminf.    0.85809 (2) obj. -13.1246 iterations 3
Cbc0038I Pass  16: suminf.    0.72040 (2) obj. -13.1246 iterations 2
Cbc0038I Pass  17: suminf.    0.98538 (8) obj. -13.1246 iterations 6
Cbc0038I Pass  18: suminf.    0.98708 (4) obj. -13.1246 iterations 1
Cbc0038I Pass  19: suminf.    0.87489 (2) obj. -13.1246 iterations 2
Cbc0038I Pass  20: suminf.    0.72112 (2) obj. -17.7377 iterations 1
Cbc0038I Pass  21: suminf.    2.75358 (10) obj. -51.9716 iterations 9
Cbc0038I Pass  22: suminf.    2.35565 (9) obj. -37.6461 iterations 1
Cbc0038I Pass  23: suminf.    0.69128 (2) obj. -13.1246 iterations 12
Cbc0038I Pass  24: suminf.    0.67915 (2) obj. -14.5356 iterations 2
Cbc0038I Pass  25: suminf.    0.53764 (2) obj. -13.1246 iterations 3
Cbc0038I Pass  26: suminf.    0.53764 (2) obj. -13.1246 iterations 1
Cbc0038I Pass  27: suminf.    1.22319 (4) obj. -13.1246 iterations 6
Cbc0038I Pass  28: suminf.    1.80496 (7) obj. -13.1246 iterations 10
Cbc0038I Pass  29: suminf.    1.73593 (6) obj. -13.1246 iterations 3
Cbc0038I Pass  30: suminf.    1.72591 (5) obj. -13.1246 iterations 9
Cbc0038I Pass  31: suminf.    0.97698 (4) obj. -13.1246 iterations 3
Cbc0038I Pass  32: suminf.    0.77962 (3) obj. -13.1246 iterations 5
Cbc0038I Rounding solution of -23.7352 is better than previous of -4.55516

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -37.0381
Cbc0038I Pass  32: suminf.    2.62776 (12) obj. -37.0381 iterations 2
Cbc0038I Pass  33: suminf.    1.88323 (8) obj. -37.0381 iterations 7
Cbc0038I Pass  34: suminf.    0.95342 (7) obj. -37.0381 iterations 30
Cbc0038I Pass  35: suminf.    0.95342 (7) obj. -37.0381 iterations 1
Cbc0038I Pass  36: suminf.    0.98180 (4) obj. -37.0381 iterations 14
Cbc0038I Pass  37: suminf.    0.76073 (3) obj. -37.0381 iterations 2
Cbc0038I Pass  38: suminf.    0.76073 (3) obj. -37.0381 iterations 1
Cbc0038I Pass  39: suminf.    1.14638 (4) obj. -37.0381 iterations 7
Cbc0038I Pass  40: suminf.    0.72421 (3) obj. -37.0381 iterations 1
Cbc0038I Pass  41: suminf.    0.72421 (3) obj. -37.0381 iterations 3
Cbc0038I Pass  42: suminf.    0.85276 (3) obj. -37.0381 iterations 5
Cbc0038I Pass  43: suminf.    1.14638 (4) obj. -37.0381 iterations 3
Cbc0038I Pass  44: suminf.    3.38146 (8) obj. -37.0381 iterations 12
Cbc0038I Pass  45: suminf.    2.13037 (6) obj. -37.0381 iterations 6
Cbc0038I Pass  46: suminf.    1.77939 (5) obj. -37.0381 iterations 9
Cbc0038I Pass  47: suminf.    1.44884 (4) obj. -37.0381 iterations 6
Cbc0038I Pass  48: suminf.    1.42407 (4) obj. -37.0381 iterations 4
Cbc0038I Pass  49: suminf.    1.76892 (5) obj. -37.0381 iterations 10
Cbc0038I Pass  50: suminf.    1.76892 (5) obj. -37.0381 iterations 3
Cbc0038I Pass  51: suminf.    1.15361 (4) obj. -37.0381 iterations 12
Cbc0038I Pass  52: suminf.    1.10058 (8) obj. -37.0381 iterations 5
Cbc0038I Pass  53: suminf.    1.39736 (5) obj. -42.653 iterations 7
Cbc0038I Pass  54: suminf.    1.21019 (5) obj. -37.0381 iterations 2
Cbc0038I Pass  55: suminf.    1.37722 (5) obj. -37.0381 iterations 6
Cbc0038I Pass  56: suminf.    0.59626 (3) obj. -37.0381 iterations 7
Cbc0038I Pass  57: suminf.    0.56213 (3) obj. -37.0381 iterations 3
Cbc0038I Pass  58: suminf.    0.56213 (3) obj. -37.0381 iterations 1
Cbc0038I Pass  59: suminf.    0.81813 (3) obj. -43.6941 iterations 4
Cbc0038I Pass  60: suminf.    2.17762 (7) obj. -37.0381 iterations 11
Cbc0038I Pass  61: suminf.    2.17762 (7) obj. -37.0381 iterations 0
Cbc0038I Rounding solution of -27.4577 is better than previous of -23.7352

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 16 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -27.4577 to -31.1135 (0.04 seconds)
Cbc0038I Round again with cutoff of -53.0014
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.95875 (12) obj. -53.0014 iterations 2
Cbc0038I Pass  62: suminf.    2.95875 (12) obj. -53.0014 iterations 1
Cbc0038I Pass  63: suminf.    1.53301 (5) obj. -53.0014 iterations 21
Cbc0038I Pass  64: suminf.    1.23144 (5) obj. -53.0014 iterations 5
Cbc0038I Pass  65: suminf.    1.78660 (6) obj. -53.0014 iterations 5
Cbc0038I Pass  66: suminf.    1.78660 (6) obj. -53.0014 iterations 2
Cbc0038I Pass  67: suminf.    1.41107 (5) obj. -53.0014 iterations 7
Cbc0038I Pass  68: suminf.    1.22187 (4) obj. -53.0014 iterations 2
Cbc0038I Pass  69: suminf.    1.22187 (4) obj. -53.0014 iterations 1
Cbc0038I Pass  70: suminf.    1.29890 (4) obj. -53.0014 iterations 4
Cbc0038I Pass  71: suminf.    1.29075 (4) obj. -53.0014 iterations 3
Cbc0038I Pass  72: suminf.    1.41107 (5) obj. -53.0014 iterations 5
Cbc0038I Pass  73: suminf.    1.22187 (4) obj. -53.0014 iterations 3
Cbc0038I Pass  74: suminf.    1.22187 (4) obj. -53.0014 iterations 2
Cbc0038I Pass  75: suminf.    1.29890 (4) obj. -53.0014 iterations 4
Cbc0038I Pass  76: suminf.    1.29075 (4) obj. -53.0014 iterations 2
Cbc0038I Pass  77: suminf.    1.41107 (5) obj. -53.0014 iterations 4
Cbc0038I Pass  78: suminf.    1.22187 (4) obj. -53.0014 iterations 2
Cbc0038I Pass  79: suminf.    1.22187 (4) obj. -53.0014 iterations 1
Cbc0038I Pass  80: suminf.    1.29890 (4) obj. -53.0014 iterations 4
Cbc0038I Pass  81: suminf.    1.29075 (4) obj. -53.0014 iterations 3
Cbc0038I Pass  82: suminf.    1.41107 (5) obj. -53.0014 iterations 4
Cbc0038I Pass  83: suminf.    1.22187 (4) obj. -53.0014 iterations 1
Cbc0038I Pass  84: suminf.    1.22187 (4) obj. -53.0014 iterations 0
Cbc0038I Pass  85: suminf.    1.29890 (4) obj. -53.0014 iterations 2
Cbc0038I Pass  86: suminf.    1.29075 (4) obj. -53.0014 iterations 2
Cbc0038I Pass  87: suminf.    1.41107 (5) obj. -53.0014 iterations 4
Cbc0038I Pass  88: suminf.    1.22187 (4) obj. -53.0014 iterations 1
Cbc0038I Pass  89: suminf.    1.22187 (4) obj. -53.0014 iterations 0
Cbc0038I Pass  90: suminf.    1.29890 (4) obj. -53.0014 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -31.1135 - took 0.03 seconds
Cbc0012I Integer solution of -31.113457 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 40 rows 43 columns, reduced to 0 rows 0 columns
Cbc0031I 9 added rows had average density of 11.444444
Cbc0013I At root node, 9 cuts changed objective from -90.249156 to -34.531936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 151 row cuts average 2.7 elements, 22 column cuts (22 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 367 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 121 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 177 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 228 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.804 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.113457 best solution, best possible -34.531936 (1.56 seconds)
Cbc0012I Integer solution of -31.605717 found by DiveCoefficient after 871 iterations and 1 nodes (1.56 seconds)
Cbc0016I Integer solution of -31.659637 found by strong branching after 1081 iterations and 6 nodes (1.59 seconds)
Cbc0012I Integer solution of -32.059787 found by DiveCoefficient after 1270 iterations and 13 nodes (1.62 seconds)
Cbc0001I Search completed - best objective -32.05978699999997, took 1345 iterations and 18 nodes (1.63 seconds)
Cbc0032I Strong branching done 148 times (472 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 10 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 7.51257e-06 - average 1.9263e-07, 1 fixed columns
Coin0506I Presolve 37 (-2) rows, 21 (-1) columns and 108 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 116.53884
Clp0000I Optimal - objective value 116.53884
Coin0511I After Postsolve, objective 116.53884, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 116.53884
Clp0000I Optimal - objective value 116.53884
Clp0000I Optimal - objective value 116.53884
Coin0511I After Postsolve, objective 116.53884, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.5388415 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.49873
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.10046 iterations 19
Cbc0038I Solution found of -2.10046
Cbc0038I Relaxing continuous gives -2.10046
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2.10046 to -31.6596 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.8674
Cbc0038I Pass   2: suminf.    0.42198 (2) obj. -39.8674 iterations 2
Cbc0038I Pass   3: suminf.    0.33878 (1) obj. -39.8674 iterations 2
Cbc0038I Pass   4: suminf.    0.53487 (2) obj. -39.8674 iterations 2
Cbc0038I Pass   5: suminf.    0.30951 (1) obj. -39.8674 iterations 2
Cbc0038I Pass   6: suminf.    0.51091 (2) obj. -39.8674 iterations 2
Cbc0038I Pass   7: suminf.    0.20269 (1) obj. -39.8674 iterations 13
Cbc0038I Pass   8: suminf.    0.20269 (1) obj. -39.8674 iterations 1
Cbc0038I Pass   9: suminf.    0.46983 (5) obj. -39.8674 iterations 6
Cbc0038I Pass  10: suminf.    0.78458 (3) obj. -39.8674 iterations 4
Cbc0038I Pass  11: suminf.    0.68386 (4) obj. -39.8674 iterations 2
Cbc0038I Pass  12: suminf.    1.06429 (3) obj. -39.8674 iterations 4
Cbc0038I Pass  13: suminf.    1.03201 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  14: suminf.    1.43114 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  15: suminf.    0.86039 (3) obj. -39.8674 iterations 9
Cbc0038I Pass  16: suminf.    0.75107 (3) obj. -39.8674 iterations 2
Cbc0038I Pass  17: suminf.    0.87401 (3) obj. -39.8674 iterations 4
Cbc0038I Pass  18: suminf.    0.87401 (3) obj. -39.8674 iterations 0
Cbc0038I Pass  19: suminf.    1.06429 (3) obj. -39.8674 iterations 3
Cbc0038I Pass  20: suminf.    1.03201 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  21: suminf.    1.43114 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  22: suminf.    1.03201 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  23: suminf.    1.10092 (6) obj. -39.8674 iterations 9
Cbc0038I Pass  24: suminf.    1.10092 (6) obj. -39.8674 iterations 0
Cbc0038I Pass  25: suminf.    1.44293 (3) obj. -39.8674 iterations 6
Cbc0038I Pass  26: suminf.    1.19063 (3) obj. -39.8674 iterations 2
Cbc0038I Pass  27: suminf.    1.23557 (3) obj. -39.8674 iterations 3
Cbc0038I Pass  28: suminf.    1.16529 (4) obj. -39.8674 iterations 1
Cbc0038I Pass  29: suminf.    1.40573 (4) obj. -39.8674 iterations 3
Cbc0038I Pass  30: suminf.    1.16529 (4) obj. -39.8674 iterations 3
Cbc0038I Pass  31: suminf.    1.49482 (4) obj. -39.8674 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -31.6596 - took 0.03 seconds
Cbc0012I Integer solution of -31.659637 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 16.166667
Cbc0013I At root node, 12 cuts changed objective from -113.73638 to -45.886765 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1201 row cuts average 3.9 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 813 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 105 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -32.059787 found by rounding after 1888 iterations and 4 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -32.05978699999997, took 2372 iterations and 24 nodes (0.19 seconds)
Cbc0032I Strong branching done 128 times (724 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 42 (-5) columns and 320 (-69) elements
Clp1000I sum of infeasibilities 4.10217e-09 - average 1.05184e-10, 32 fixed columns
Coin0506I Presolve 8 (-31) rows, 10 (-32) columns and 31 (-289) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 2.5038794 - largest nonzero change 1.0289694e-05 ( 0.00063396804%) - largest zero change 0
Clp0000I Optimal - objective value 11.182427
Clp0000I Optimal - objective value 11.182427
Coin0511I After Postsolve, objective 11.182427, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4549074 - largest nonzero change 0 ( 0%) - largest zero change 2.2293194e-05
Clp0000I Optimal - objective value 133.95995
Clp0000I Optimal - objective value 133.95995
Clp0000I Optimal - objective value 133.95995
Coin0511I After Postsolve, objective 133.95995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.9599531 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 42 columns (42 integer (42 of which binary)) and 332 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.263%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.9037
Cbc0038I Pass   1: suminf.    1.11648 (5) obj. -21.7817 iterations 13
Cbc0038I Pass   2: suminf.    1.11648 (5) obj. -21.7817 iterations 0
Cbc0038I Solution found of -0.890499
Cbc0038I Rounding solution of -2.8905 is better than previous of -0.890499

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -2.8905 to -25.2097 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.1862
Cbc0038I Pass   3: suminf.    2.19717 (11) obj. -32.1862 iterations 1
Cbc0038I Pass   4: suminf.    1.40550 (6) obj. -32.1862 iterations 1
Cbc0038I Pass   5: suminf.    0.78605 (2) obj. -32.1862 iterations 8
Cbc0038I Pass   6: suminf.    0.76932 (2) obj. -32.1862 iterations 1
Cbc0038I Pass   7: suminf.    1.68146 (10) obj. -32.1862 iterations 8
Cbc0038I Pass   8: suminf.    1.30291 (5) obj. -32.1862 iterations 3
Cbc0038I Pass   9: suminf.    0.86108 (2) obj. -32.1862 iterations 3
Cbc0038I Pass  10: suminf.    0.86108 (2) obj. -32.1862 iterations 0
Cbc0038I Pass  11: suminf.    0.82748 (2) obj. -32.1862 iterations 1
Cbc0038I Pass  12: suminf.    1.79293 (7) obj. -32.1862 iterations 7
Cbc0038I Pass  13: suminf.    1.64412 (6) obj. -37.2455 iterations 1
Cbc0038I Pass  14: suminf.    1.07428 (6) obj. -32.1862 iterations 6
Cbc0038I Pass  15: suminf.    1.07428 (6) obj. -32.1862 iterations 0
Cbc0038I Pass  16: suminf.    0.95548 (4) obj. -32.1862 iterations 5
Cbc0038I Pass  17: suminf.    0.95548 (4) obj. -32.1862 iterations 0
Cbc0038I Pass  18: suminf.    0.94563 (3) obj. -32.1862 iterations 3
Cbc0038I Pass  19: suminf.    0.89762 (3) obj. -33.6266 iterations 2
Cbc0038I Pass  20: suminf.    0.85378 (3) obj. -32.1862 iterations 3
Cbc0038I Pass  21: suminf.    0.85378 (3) obj. -32.1862 iterations 0
Cbc0038I Pass  22: suminf.    1.76178 (6) obj. -32.1862 iterations 4
Cbc0038I Pass  23: suminf.    0.85378 (3) obj. -32.1862 iterations 4
Cbc0038I Pass  24: suminf.    0.94563 (3) obj. -32.1862 iterations 2
Cbc0038I Pass  25: suminf.    0.89762 (3) obj. -33.6266 iterations 2
Cbc0038I Pass  26: suminf.    0.85378 (3) obj. -32.1862 iterations 3
Cbc0038I Pass  27: suminf.    1.41706 (5) obj. -32.1862 iterations 8
Cbc0038I Pass  28: suminf.    1.35000 (4) obj. -33.4603 iterations 1
Cbc0038I Pass  29: suminf.    1.15886 (4) obj. -32.1862 iterations 4
Cbc0038I Pass  30: suminf.    1.15886 (4) obj. -32.1862 iterations 0
Cbc0038I Pass  31: suminf.    0.83610 (3) obj. -32.1862 iterations 4
Cbc0038I Pass  32: suminf.    0.83610 (3) obj. -32.1862 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.2097 to -30.8743 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.7438
Cbc0038I Pass  32: suminf.    2.34819 (11) obj. -44.7438 iterations 1
Cbc0038I Pass  33: suminf.    2.34819 (11) obj. -44.7438 iterations 0
Cbc0038I Pass  34: suminf.    1.42430 (3) obj. -44.7438 iterations 19
Cbc0038I Pass  35: suminf.    1.42430 (3) obj. -44.7438 iterations 0
Cbc0038I Pass  36: suminf.    0.90233 (3) obj. -44.7438 iterations 1
Cbc0038I Pass  37: suminf.    0.90233 (3) obj. -44.7438 iterations 0
Cbc0038I Pass  38: suminf.    1.42430 (3) obj. -44.7438 iterations 2
Cbc0038I Pass  39: suminf.    3.27935 (10) obj. -44.7438 iterations 14
Cbc0038I Pass  40: suminf.    3.27935 (10) obj. -44.7438 iterations 1
Cbc0038I Pass  41: suminf.    1.32429 (5) obj. -44.7438 iterations 11
Cbc0038I Pass  42: suminf.    1.32429 (5) obj. -44.7438 iterations 0
Cbc0038I Pass  43: suminf.    1.27393 (5) obj. -44.7438 iterations 2
Cbc0038I Pass  44: suminf.    1.19191 (4) obj. -44.7438 iterations 1
Cbc0038I Pass  45: suminf.    1.32429 (5) obj. -44.7438 iterations 2
Cbc0038I Pass  46: suminf.    2.75409 (8) obj. -44.7438 iterations 20
Cbc0038I Pass  47: suminf.    2.10381 (6) obj. -44.7438 iterations 4
Cbc0038I Pass  48: suminf.    1.18263 (3) obj. -44.7438 iterations 5
Cbc0038I Pass  49: suminf.    1.11413 (3) obj. -44.7438 iterations 1
Cbc0038I Pass  50: suminf.    1.18263 (3) obj. -44.7438 iterations 2
Cbc0038I Pass  51: suminf.    2.00354 (6) obj. -44.7438 iterations 8
Cbc0038I Pass  52: suminf.    1.56183 (5) obj. -44.7438 iterations 2
Cbc0038I Pass  53: suminf.    1.36179 (4) obj. -44.7438 iterations 3
Cbc0038I Pass  54: suminf.    1.27135 (4) obj. -44.7438 iterations 5
Cbc0038I Pass  55: suminf.    1.32756 (5) obj. -44.7438 iterations 2
Cbc0038I Pass  56: suminf.    1.32756 (5) obj. -44.7438 iterations 0
Cbc0038I Pass  57: suminf.    1.33760 (4) obj. -44.7438 iterations 3
Cbc0038I Pass  58: suminf.    2.21566 (7) obj. -44.7438 iterations 10
Cbc0038I Pass  59: suminf.    1.74391 (6) obj. -44.7438 iterations 2
Cbc0038I Pass  60: suminf.    1.84497 (4) obj. -44.7438 iterations 6
Cbc0038I Pass  61: suminf.    1.78431 (5) obj. -44.7438 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30.8743 - took 0.02 seconds
Cbc0012I Integer solution of -30.874337 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 42 columns, reduced to 11 rows 12 columns
Cbc0031I 11 added rows had average density of 10.181818
Cbc0013I At root node, 11 cuts changed objective from -94.973976 to -35.367477 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 110 row cuts average 2.3 elements, 20 column cuts (20 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0012I Integer solution of -31.203527 found by DiveCoefficient after 176 iterations and 2 nodes (0.41 seconds)
Cbc0010I After 4 nodes, 2 on tree, -31.203527 best solution, best possible -35.367477 (0.50 seconds)
Cbc0016I Integer solution of -31.429847 found by strong branching after 282 iterations and 9 nodes (0.76 seconds)
Cbc0012I Integer solution of -32.024007 found by rounding after 432 iterations and 13 nodes (1.16 seconds)
Cbc0010I After 16 nodes, 1 on tree, -32.024007 best solution, best possible -32.556881 (1.25 seconds)
Cbc0012I Integer solution of -32.059787 found by DiveCoefficient after 501 iterations and 22 nodes (1.37 seconds)
Cbc0001I Search completed - best objective -32.05978699999997, took 513 iterations and 22 nodes (1.38 seconds)
Cbc0032I Strong branching done 218 times (670 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       1.39

