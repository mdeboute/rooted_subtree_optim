Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 100 (-3) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 5.79292e-05 - average 3.13131e-07, 17 fixed columns
Coin0506I Presolve 147 (-38) rows, 80 (-20) columns and 446 (-116) elements
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 2.4285341 - largest nonzero change 0 ( 0%) - largest zero change 2.933443e-05
Clp0000I Optimal - objective value 34.394781
Clp0000I Optimal - objective value 34.394781
Coin0511I After Postsolve, objective 34.394781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.394781
Clp0000I Optimal - objective value 34.394781
Clp0000I Optimal - objective value 34.394781
Coin0511I After Postsolve, objective 34.394781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.39478101 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 100 columns (99 integer (99 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.910%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 13.243
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.2291 iterations 69
Cbc0038I Solution found of 13.2291
Cbc0038I Relaxing continuous gives 13.2291
Cbc0038I Rounding solution of -0.464553 is better than previous of 13.2291

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 98 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -0.464553 to -5.50823 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.39698
Cbc0038I Pass   2: suminf.    2.76893 (9) obj. -8.39698 iterations 13
Cbc0038I Pass   3: suminf.    2.76893 (9) obj. -8.39698 iterations 0
Cbc0038I Pass   4: suminf.    0.96627 (4) obj. -8.39698 iterations 15
Cbc0038I Pass   5: suminf.    0.96627 (4) obj. -8.39698 iterations 4
Cbc0038I Pass   6: suminf.    1.54605 (5) obj. -8.39698 iterations 4
Cbc0038I Pass   7: suminf.    1.08269 (5) obj. -8.39698 iterations 1
Cbc0038I Pass   8: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass   9: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  10: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  11: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I Pass  12: suminf.    1.08269 (5) obj. -8.39698 iterations 2
Cbc0038I Pass  13: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  14: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  15: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  16: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I Pass  17: suminf.    1.08269 (5) obj. -8.39698 iterations 2
Cbc0038I Pass  18: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  19: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  20: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  21: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I Pass  22: suminf.    1.08269 (5) obj. -8.39698 iterations 2
Cbc0038I Pass  23: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  24: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  25: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  26: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I Pass  27: suminf.    1.08269 (5) obj. -8.39698 iterations 2
Cbc0038I Pass  28: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  29: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  30: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  31: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 98 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -5.50823 to -10.2487 (0.11 seconds)
Cbc0038I Round again with cutoff of -15.078
Cbc0038I Pass  31: suminf.    3.56395 (14) obj. -15.078 iterations 7
Cbc0038I Pass  32: suminf.    1.74469 (8) obj. -15.078 iterations 8
Cbc0038I Pass  33: suminf.    1.50595 (7) obj. -15.078 iterations 1
Cbc0038I Pass  34: suminf.    0.95120 (6) obj. -15.078 iterations 2
Cbc0038I Pass  35: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  36: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  37: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  38: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  39: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  40: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  41: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  42: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  43: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  44: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  45: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  46: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  47: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  48: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  49: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  50: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  51: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  52: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  53: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  54: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  55: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  56: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  57: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  58: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  59: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  60: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 100 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -10.2487 - took 0.15 seconds
Cbc0012I Integer solution of -10.248749 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 185 rows 100 columns, reduced to 98 rows 54 columns
Cbc0031I 33 added rows had average density of 59.757576
Cbc0013I At root node, 33 cuts changed objective from -34.394781 to -27.02787 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23716 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.155 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2773 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 147 row cuts average 99.8 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.248749 best solution, best possible -27.02787 (1.99 seconds)
Cbc0038I Full problem 185 rows 100 columns, reduced to 69 rows 43 columns
Cbc0012I Integer solution of -10.523124 found by rounding after 15473 iterations and 56 nodes (2.45 seconds)
Cbc0004I Integer solution of -10.537753 found after 15817 iterations and 92 nodes (2.51 seconds)
Cbc0038I Full problem 185 rows 100 columns, reduced to 34 rows 27 columns
Cbc0001I Search completed - best objective -10.537753, took 17285 iterations and 134 nodes (2.66 seconds)
Cbc0032I Strong branching done 1466 times (28229 iterations), fathomed 20 nodes and fixed 42 variables
Cbc0035I Maximum depth 22, 310 variables fixed on reduced cost
Total time (CPU seconds):       2.56   (Wallclock seconds):       2.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-68) rows, 149 (-53) columns and 2910 (-2743) elements
Clp1000I sum of infeasibilities 9.0856e-08 - average 6.68059e-10, 32 fixed columns
Coin0506I Presolve 108 (-28) rows, 117 (-32) columns and 1991 (-919) elements
Clp0006I 0  Obj 38.016566 Dual inf 6.054191 (117)
Clp0029I End of values pass after 117 iterations
Clp0014I Perturbing problem by 0.001% of 2.0006275 - largest nonzero change 2.2118904e-05 ( 0.0018056464%) - largest zero change 2.7928853e-05
Clp0000I Optimal - objective value 50.657973
Clp0000I Optimal - objective value 50.657973
Coin0511I After Postsolve, objective 50.657973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.657973
Clp0000I Optimal - objective value 50.657973
Clp0000I Optimal - objective value 50.657973
Clp0000I Optimal - objective value 50.657973
Coin0511I After Postsolve, objective 50.657973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.65797255 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 149 columns (149 integer (149 of which binary)) and 2912 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.126%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 8.73933
Cbc0038I Pass   1: suminf.    3.04617 (35) obj. -37.5147 iterations 19
Cbc0038I Pass   2: suminf.    3.04617 (35) obj. -37.5147 iterations 1
Cbc0038I Pass   3: suminf.    1.63944 (21) obj. -21.3715 iterations 14
Cbc0038I Pass   4: suminf.    0.42026 (7) obj. -5.85678 iterations 14
Cbc0038I Solution found of 0.722966
Cbc0038I Rounding solution of -3.2134 is better than previous of 0.722966

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 149 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -7.43382
Cbc0038I Pass   5: suminf.    3.04617 (35) obj. -37.5147 iterations 0
Cbc0038I Pass   6: suminf.    3.04617 (35) obj. -37.5147 iterations 2
Cbc0038I Pass   7: suminf.    1.18789 (16) obj. -15.0022 iterations 19
Cbc0038I Pass   8: suminf.    0.91505 (3) obj. -7.43382 iterations 23
Cbc0038I Pass   9: suminf.    0.91505 (3) obj. -7.43382 iterations 1
Cbc0038I Pass  10: suminf.    0.93410 (3) obj. -7.43382 iterations 2
Cbc0038I Pass  11: suminf.    0.57412 (3) obj. -8.87373 iterations 1
Cbc0038I Pass  12: suminf.    2.61964 (17) obj. -7.43382 iterations 34
Cbc0038I Pass  13: suminf.    1.68251 (15) obj. -8.10918 iterations 5
Cbc0038I Pass  14: suminf.    1.48839 (14) obj. -7.43382 iterations 2
Cbc0038I Pass  15: suminf.    1.48024 (7) obj. -7.43382 iterations 18
Cbc0038I Pass  16: suminf.    1.24625 (6) obj. -7.43382 iterations 2
Cbc0038I Pass  17: suminf.    0.85373 (5) obj. -8.39893 iterations 4
Cbc0038I Pass  18: suminf.    0.85709 (6) obj. -7.43382 iterations 8
Cbc0038I Pass  19: suminf.    0.85709 (6) obj. -7.43382 iterations 0
Cbc0038I Pass  20: suminf.    0.56344 (3) obj. -7.43382 iterations 8
Cbc0038I Pass  21: suminf.    0.56344 (3) obj. -7.43382 iterations 4
Cbc0038I Pass  22: suminf.    0.28768 (2) obj. -7.43382 iterations 7
Cbc0038I Pass  23: suminf.    0.26226 (2) obj. -7.5355 iterations 3
Cbc0038I Pass  24: suminf.    0.29615 (2) obj. -7.43382 iterations 4
Cbc0038I Pass  25: suminf.    1.62317 (11) obj. -7.43382 iterations 38
Cbc0038I Pass  26: suminf.    1.50397 (11) obj. -7.91062 iterations 10
Cbc0038I Pass  27: suminf.    0.91724 (5) obj. -7.43382 iterations 17
Cbc0038I Pass  28: suminf.    0.91724 (5) obj. -7.43382 iterations 2
Cbc0038I Pass  29: suminf.    0.77150 (4) obj. -7.43382 iterations 4
Cbc0038I Pass  30: suminf.    0.77150 (4) obj. -7.43382 iterations 0
Cbc0038I Pass  31: suminf.    0.46729 (4) obj. -7.43382 iterations 4
Cbc0038I Pass  32: suminf.    0.46729 (4) obj. -7.43382 iterations 1
Cbc0038I Pass  33: suminf.    0.75604 (4) obj. -7.43382 iterations 1
Cbc0038I Pass  34: suminf.    0.75604 (4) obj. -7.43382 iterations 0
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 149 columns, reduced to 11 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -3.2134 to -5.08377 (0.07 seconds)
Cbc0038I Round again with cutoff of -15.0304
Cbc0038I Pass  34: suminf.    3.04617 (35) obj. -37.5147 iterations 0
Cbc0038I Pass  35: suminf.    3.04617 (35) obj. -37.5147 iterations 2
Cbc0038I Pass  36: suminf.    1.22680 (12) obj. -15.0304 iterations 28
Cbc0038I Pass  37: suminf.    1.22680 (12) obj. -15.0304 iterations 0
Cbc0038I Pass  38: suminf.    1.03242 (10) obj. -15.0304 iterations 22
Cbc0038I Pass  39: suminf.    1.03242 (10) obj. -15.0304 iterations 0
Cbc0038I Pass  40: suminf.    1.32885 (9) obj. -15.0304 iterations 10
Cbc0038I Pass  41: suminf.    1.32885 (9) obj. -15.0304 iterations 4
Cbc0038I Pass  42: suminf.    1.36261 (9) obj. -15.0304 iterations 16
Cbc0038I Pass  43: suminf.    1.36261 (9) obj. -15.0304 iterations 0
Cbc0038I Pass  44: suminf.    1.33402 (9) obj. -15.0304 iterations 12
Cbc0038I Pass  45: suminf.    1.33402 (9) obj. -15.0304 iterations 3
Cbc0038I Pass  46: suminf.    2.58655 (16) obj. -15.0304 iterations 8
Cbc0038I Pass  47: suminf.    2.54555 (15) obj. -15.0304 iterations 6
Cbc0038I Pass  48: suminf.    2.64549 (16) obj. -15.0304 iterations 11
Cbc0038I Pass  49: suminf.    2.62819 (16) obj. -15.0304 iterations 2
Cbc0038I Pass  50: suminf.    2.64549 (16) obj. -15.0304 iterations 7
Cbc0038I Pass  51: suminf.    2.81302 (17) obj. -15.0304 iterations 25
Cbc0038I Pass  52: suminf.    2.60223 (19) obj. -15.0304 iterations 4
Cbc0038I Pass  53: suminf.    3.33611 (16) obj. -15.0304 iterations 34
Cbc0038I Pass  54: suminf.    2.70827 (16) obj. -15.0304 iterations 4
Cbc0038I Pass  55: suminf.    2.63809 (14) obj. -15.0304 iterations 14
Cbc0038I Pass  56: suminf.    2.63809 (14) obj. -15.0304 iterations 5
Cbc0038I Pass  57: suminf.    2.64078 (14) obj. -15.0304 iterations 10
Cbc0038I Pass  58: suminf.    2.64078 (14) obj. -15.0304 iterations 5
Cbc0038I Pass  59: suminf.    2.63809 (14) obj. -15.0304 iterations 9
Cbc0038I Pass  60: suminf.    3.52352 (19) obj. -15.0304 iterations 30
Cbc0038I Pass  61: suminf.    2.88850 (18) obj. -15.9241 iterations 11
Cbc0038I Pass  62: suminf.    3.06634 (15) obj. -15.0304 iterations 32
Cbc0038I Pass  63: suminf.    3.06196 (15) obj. -15.0304 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -5.08377 - took 0.09 seconds
Cbc0012I Integer solution of -5.083768 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 136 rows 149 columns, reduced to 9 rows 12 columns
Cbc0031I 72 added rows had average density of 40.597222
Cbc0013I At root node, 72 cuts changed objective from -45.416696 to -15.602725 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17157 row cuts average 2.0 elements, 0 column cuts (9 active)  in 0.174 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2468 row cuts average 138.7 elements, 0 column cuts (0 active)  in 0.232 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1222 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1864 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 458 row cuts average 69.3 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 95 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.083768 best solution, best possible -15.602725 (2.26 seconds)
Cbc0010I After 4 nodes, 5 on tree, -5.083768 best solution, best possible -15.602725 (3.03 seconds)
Cbc0012I Integer solution of -7.523124 found by rounding after 7992 iterations and 20 nodes (3.26 seconds)
Cbc0012I Integer solution of -7.537753 found by rounding after 8043 iterations and 23 nodes (3.27 seconds)
Cbc0038I Full problem 136 rows 149 columns, reduced to 3 rows 5 columns
Cbc0012I Integer solution of -10.523124 found by rounding after 9300 iterations and 73 nodes (3.44 seconds)
Cbc0012I Integer solution of -10.537753 found by DiveCoefficient after 9377 iterations and 84 nodes (3.48 seconds)
Cbc0038I Full problem 136 rows 149 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -10.537753, took 9660 iterations and 104 nodes (3.54 seconds)
Cbc0032I Strong branching done 808 times (15474 iterations), fathomed 21 nodes and fixed 17 variables
Cbc0035I Maximum depth 18, 219 variables fixed on reduced cost
Total time (CPU seconds):       3.30   (Wallclock seconds):       3.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 100 (-3) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 5.79292e-05 - average 3.13131e-07, 17 fixed columns
Coin0506I Presolve 147 (-38) rows, 80 (-20) columns and 446 (-116) elements
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 2.4285341 - largest nonzero change 0 ( 0%) - largest zero change 2.933443e-05
Clp0000I Optimal - objective value 34.394781
Clp0000I Optimal - objective value 34.394781
Coin0511I After Postsolve, objective 34.394781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.394781
Clp0000I Optimal - objective value 34.394781
Clp0000I Optimal - objective value 34.394781
Coin0511I After Postsolve, objective 34.394781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.39478101 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 100 columns (99 integer (99 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.910%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 13.243
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.2291 iterations 69
Cbc0038I Solution found of 13.2291
Cbc0038I Relaxing continuous gives 13.2291
Cbc0038I Rounding solution of -0.464553 is better than previous of 13.2291

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 98 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -0.464553 to -5.50823 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.39698
Cbc0038I Pass   2: suminf.    2.76893 (9) obj. -8.39698 iterations 13
Cbc0038I Pass   3: suminf.    2.76893 (9) obj. -8.39698 iterations 0
Cbc0038I Pass   4: suminf.    0.96627 (4) obj. -8.39698 iterations 15
Cbc0038I Pass   5: suminf.    0.96627 (4) obj. -8.39698 iterations 4
Cbc0038I Pass   6: suminf.    1.54605 (5) obj. -8.39698 iterations 4
Cbc0038I Pass   7: suminf.    1.08269 (5) obj. -8.39698 iterations 1
Cbc0038I Pass   8: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass   9: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  10: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  11: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I Pass  12: suminf.    1.08269 (5) obj. -8.39698 iterations 2
Cbc0038I Pass  13: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  14: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  15: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  16: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I Pass  17: suminf.    1.08269 (5) obj. -8.39698 iterations 2
Cbc0038I Pass  18: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  19: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  20: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  21: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I Pass  22: suminf.    1.08269 (5) obj. -8.39698 iterations 2
Cbc0038I Pass  23: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  24: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  25: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  26: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I Pass  27: suminf.    1.08269 (5) obj. -8.39698 iterations 2
Cbc0038I Pass  28: suminf.    1.05261 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  29: suminf.    1.52650 (5) obj. -8.39698 iterations 4
Cbc0038I Pass  30: suminf.    1.51109 (4) obj. -8.39698 iterations 1
Cbc0038I Pass  31: suminf.    1.34525 (4) obj. -8.39698 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 98 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -5.50823 to -10.2487 (0.11 seconds)
Cbc0038I Round again with cutoff of -15.078
Cbc0038I Pass  31: suminf.    3.56395 (14) obj. -15.078 iterations 7
Cbc0038I Pass  32: suminf.    1.74469 (8) obj. -15.078 iterations 8
Cbc0038I Pass  33: suminf.    1.50595 (7) obj. -15.078 iterations 1
Cbc0038I Pass  34: suminf.    0.95120 (6) obj. -15.078 iterations 2
Cbc0038I Pass  35: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  36: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  37: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  38: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  39: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  40: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  41: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  42: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  43: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  44: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  45: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  46: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  47: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  48: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  49: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  50: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  51: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  52: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  53: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  54: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  55: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I Pass  56: suminf.    1.73468 (5) obj. -15.078 iterations 0
Cbc0038I Pass  57: suminf.    1.83347 (6) obj. -15.078 iterations 8
Cbc0038I Pass  58: suminf.    0.96111 (6) obj. -15.078 iterations 1
Cbc0038I Pass  59: suminf.    0.95120 (6) obj. -15.078 iterations 1
Cbc0038I Pass  60: suminf.    1.73468 (5) obj. -15.078 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 100 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -10.2487 - took 0.14 seconds
Cbc0012I Integer solution of -10.248749 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 185 rows 100 columns, reduced to 98 rows 54 columns
Cbc0031I 33 added rows had average density of 59.757576
Cbc0013I At root node, 33 cuts changed objective from -34.394781 to -27.02787 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23716 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2773 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 147 row cuts average 99.8 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.248749 best solution, best possible -27.02787 (1.80 seconds)
Cbc0038I Full problem 185 rows 100 columns, reduced to 69 rows 43 columns
Cbc0012I Integer solution of -10.523124 found by rounding after 15473 iterations and 56 nodes (2.19 seconds)
Cbc0004I Integer solution of -10.537753 found after 15817 iterations and 92 nodes (2.22 seconds)
Cbc0038I Full problem 185 rows 100 columns, reduced to 34 rows 27 columns
Cbc0001I Search completed - best objective -10.537753, took 17285 iterations and 134 nodes (2.35 seconds)
Cbc0032I Strong branching done 1466 times (28229 iterations), fathomed 20 nodes and fixed 42 variables
Cbc0035I Maximum depth 22, 310 variables fixed on reduced cost
Total time (CPU seconds):       2.29   (Wallclock seconds):       2.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-69) rows, 149 (-54) columns and 2910 (-2744) elements
Clp1000I sum of infeasibilities 9.0856e-08 - average 6.68059e-10, 32 fixed columns
Coin0506I Presolve 108 (-28) rows, 117 (-32) columns and 1991 (-919) elements
Clp0006I 0  Obj 38.016566 Dual inf 6.054191 (117)
Clp0029I End of values pass after 117 iterations
Clp0014I Perturbing problem by 0.001% of 2.0006275 - largest nonzero change 2.2118904e-05 ( 0.0018056464%) - largest zero change 2.7928853e-05
Clp0000I Optimal - objective value 50.657973
Clp0000I Optimal - objective value 50.657973
Coin0511I After Postsolve, objective 50.657973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.657973
Clp0000I Optimal - objective value 50.657973
Clp0000I Optimal - objective value 50.657973
Clp0000I Optimal - objective value 50.657973
Coin0511I After Postsolve, objective 50.657973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.65797255 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 149 columns (149 integer (149 of which binary)) and 2912 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.126%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 8.73933
Cbc0038I Pass   1: suminf.    3.04617 (35) obj. -37.5147 iterations 19
Cbc0038I Pass   2: suminf.    3.04617 (35) obj. -37.5147 iterations 1
Cbc0038I Pass   3: suminf.    1.63944 (21) obj. -21.3715 iterations 14
Cbc0038I Pass   4: suminf.    0.42026 (7) obj. -5.85678 iterations 14
Cbc0038I Solution found of 0.722966
Cbc0038I Rounding solution of -3.2134 is better than previous of 0.722966

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 149 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -7.43382
Cbc0038I Pass   5: suminf.    3.04617 (35) obj. -37.5147 iterations 0
Cbc0038I Pass   6: suminf.    3.04617 (35) obj. -37.5147 iterations 2
Cbc0038I Pass   7: suminf.    1.18789 (16) obj. -15.0022 iterations 19
Cbc0038I Pass   8: suminf.    0.91505 (3) obj. -7.43382 iterations 23
Cbc0038I Pass   9: suminf.    0.91505 (3) obj. -7.43382 iterations 1
Cbc0038I Pass  10: suminf.    0.93410 (3) obj. -7.43382 iterations 2
Cbc0038I Pass  11: suminf.    0.57412 (3) obj. -8.87373 iterations 1
Cbc0038I Pass  12: suminf.    2.61964 (17) obj. -7.43382 iterations 34
Cbc0038I Pass  13: suminf.    1.68251 (15) obj. -8.10918 iterations 5
Cbc0038I Pass  14: suminf.    1.48839 (14) obj. -7.43382 iterations 2
Cbc0038I Pass  15: suminf.    1.48024 (7) obj. -7.43382 iterations 18
Cbc0038I Pass  16: suminf.    1.24625 (6) obj. -7.43382 iterations 2
Cbc0038I Pass  17: suminf.    0.85373 (5) obj. -8.39893 iterations 4
Cbc0038I Pass  18: suminf.    0.85709 (6) obj. -7.43382 iterations 8
Cbc0038I Pass  19: suminf.    0.85709 (6) obj. -7.43382 iterations 0
Cbc0038I Pass  20: suminf.    0.56344 (3) obj. -7.43382 iterations 8
Cbc0038I Pass  21: suminf.    0.56344 (3) obj. -7.43382 iterations 4
Cbc0038I Pass  22: suminf.    0.28768 (2) obj. -7.43382 iterations 7
Cbc0038I Pass  23: suminf.    0.26226 (2) obj. -7.5355 iterations 3
Cbc0038I Pass  24: suminf.    0.29615 (2) obj. -7.43382 iterations 4
Cbc0038I Pass  25: suminf.    1.62317 (11) obj. -7.43382 iterations 38
Cbc0038I Pass  26: suminf.    1.50397 (11) obj. -7.91062 iterations 10
Cbc0038I Pass  27: suminf.    0.91724 (5) obj. -7.43382 iterations 17
Cbc0038I Pass  28: suminf.    0.91724 (5) obj. -7.43382 iterations 2
Cbc0038I Pass  29: suminf.    0.77150 (4) obj. -7.43382 iterations 4
Cbc0038I Pass  30: suminf.    0.77150 (4) obj. -7.43382 iterations 0
Cbc0038I Pass  31: suminf.    0.46729 (4) obj. -7.43382 iterations 4
Cbc0038I Pass  32: suminf.    0.46729 (4) obj. -7.43382 iterations 1
Cbc0038I Pass  33: suminf.    0.75604 (4) obj. -7.43382 iterations 1
Cbc0038I Pass  34: suminf.    0.75604 (4) obj. -7.43382 iterations 0
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 149 columns, reduced to 11 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -3.2134 to -5.08377 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.0304
Cbc0038I Pass  34: suminf.    3.04617 (35) obj. -37.5147 iterations 0
Cbc0038I Pass  35: suminf.    3.04617 (35) obj. -37.5147 iterations 2
Cbc0038I Pass  36: suminf.    1.22680 (12) obj. -15.0304 iterations 28
Cbc0038I Pass  37: suminf.    1.22680 (12) obj. -15.0304 iterations 0
Cbc0038I Pass  38: suminf.    1.03242 (10) obj. -15.0304 iterations 22
Cbc0038I Pass  39: suminf.    1.03242 (10) obj. -15.0304 iterations 0
Cbc0038I Pass  40: suminf.    1.32885 (9) obj. -15.0304 iterations 10
Cbc0038I Pass  41: suminf.    1.32885 (9) obj. -15.0304 iterations 4
Cbc0038I Pass  42: suminf.    1.36261 (9) obj. -15.0304 iterations 16
Cbc0038I Pass  43: suminf.    1.36261 (9) obj. -15.0304 iterations 0
Cbc0038I Pass  44: suminf.    1.33402 (9) obj. -15.0304 iterations 12
Cbc0038I Pass  45: suminf.    1.33402 (9) obj. -15.0304 iterations 3
Cbc0038I Pass  46: suminf.    2.58655 (16) obj. -15.0304 iterations 8
Cbc0038I Pass  47: suminf.    2.54555 (15) obj. -15.0304 iterations 6
Cbc0038I Pass  48: suminf.    2.64549 (16) obj. -15.0304 iterations 11
Cbc0038I Pass  49: suminf.    2.62819 (16) obj. -15.0304 iterations 2
Cbc0038I Pass  50: suminf.    2.64549 (16) obj. -15.0304 iterations 7
Cbc0038I Pass  51: suminf.    2.81302 (17) obj. -15.0304 iterations 25
Cbc0038I Pass  52: suminf.    2.60223 (19) obj. -15.0304 iterations 4
Cbc0038I Pass  53: suminf.    3.33611 (16) obj. -15.0304 iterations 34
Cbc0038I Pass  54: suminf.    2.70827 (16) obj. -15.0304 iterations 4
Cbc0038I Pass  55: suminf.    2.63809 (14) obj. -15.0304 iterations 14
Cbc0038I Pass  56: suminf.    2.63809 (14) obj. -15.0304 iterations 5
Cbc0038I Pass  57: suminf.    2.64078 (14) obj. -15.0304 iterations 10
Cbc0038I Pass  58: suminf.    2.64078 (14) obj. -15.0304 iterations 5
Cbc0038I Pass  59: suminf.    2.63809 (14) obj. -15.0304 iterations 9
Cbc0038I Pass  60: suminf.    3.52352 (19) obj. -15.0304 iterations 30
Cbc0038I Pass  61: suminf.    2.88850 (18) obj. -15.9241 iterations 11
Cbc0038I Pass  62: suminf.    3.06634 (15) obj. -15.0304 iterations 32
Cbc0038I Pass  63: suminf.    3.06196 (15) obj. -15.0304 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -5.08377 - took 0.07 seconds
Cbc0012I Integer solution of -5.083768 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 136 rows 149 columns, reduced to 9 rows 12 columns
Cbc0031I 72 added rows had average density of 40.597222
Cbc0013I At root node, 72 cuts changed objective from -45.416696 to -15.602725 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17157 row cuts average 2.0 elements, 0 column cuts (9 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2468 row cuts average 138.7 elements, 0 column cuts (0 active)  in 0.209 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1222 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1864 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 458 row cuts average 69.3 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 95 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.083768 best solution, best possible -15.602725 (2.08 seconds)
Cbc0010I After 5 nodes, 6 on tree, -5.083768 best solution, best possible -15.602725 (2.79 seconds)
Cbc0012I Integer solution of -7.523124 found by rounding after 7992 iterations and 20 nodes (2.97 seconds)
Cbc0012I Integer solution of -7.537753 found by rounding after 8043 iterations and 23 nodes (2.98 seconds)
Cbc0038I Full problem 136 rows 149 columns, reduced to 3 rows 5 columns
Cbc0012I Integer solution of -10.523124 found by rounding after 9300 iterations and 73 nodes (3.11 seconds)
Cbc0012I Integer solution of -10.537753 found by DiveCoefficient after 9377 iterations and 84 nodes (3.14 seconds)
Cbc0038I Full problem 136 rows 149 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -10.537753, took 9660 iterations and 104 nodes (3.20 seconds)
Cbc0032I Strong branching done 808 times (15474 iterations), fathomed 21 nodes and fixed 17 variables
Cbc0035I Maximum depth 18, 219 variables fixed on reduced cost
Total time (CPU seconds):       2.95   (Wallclock seconds):       3.22

