Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 59 (-19) columns and 320 (-133) elements
Clp1000I sum of infeasibilities 0 - average 0, 54 fixed columns
Coin0506I Presolve 5 (-100) rows, 5 (-54) columns and 12 (-308) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 4405.0538
Clp0000I Optimal - objective value 4405.0538
Coin0511I After Postsolve, objective 4405.0538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26342519 - largest nonzero change 0 ( 0%) - largest zero change 2.6300117e-05
Clp0000I Optimal - objective value 4405.0538
Clp0000I Optimal - objective value 4405.0538
Clp0000I Optimal - objective value 4405.0538
Coin0511I After Postsolve, objective 4405.0538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4405.053762 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 59 columns (58 integer (58 of which binary)) and 322 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.567%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.655087
Cbc0038I Pass   1: suminf.    0.45455 (1) obj. -4400.66 iterations 11
Cbc0038I Solution found of -4094.18
Cbc0038I Relaxing continuous gives -4094.18
Cbc0038I Rounding solution of -4130.61 is better than previous of -4094.18

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 59 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -4130.61 to -4287.18 (0.01 seconds)
Cbc0038I Round again with cutoff of -4298.97
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45455 (1) obj. -4400.66 iterations 0
Cbc0038I Pass   3: suminf.    0.18414 (1) obj. -4298.97 iterations 2
Cbc0038I Pass   4: suminf.    0.27027 (1) obj. -4394.75 iterations 1
Cbc0038I Pass   5: suminf.    0.79686 (2) obj. -4298.97 iterations 11
Cbc0038I Pass   6: suminf.    0.79686 (2) obj. -4298.97 iterations 0
Cbc0038I Pass   7: suminf.    0.31256 (1) obj. -4298.97 iterations 5
Cbc0038I Pass   8: suminf.    0.24324 (1) obj. -4376.05 iterations 1
Cbc0038I Pass   9: suminf.    0.21679 (2) obj. -4298.97 iterations 10
Cbc0038I Pass  10: suminf.    0.21679 (2) obj. -4298.97 iterations 3
Cbc0038I Pass  11: suminf.    0.54304 (3) obj. -4298.97 iterations 14
Cbc0038I Pass  12: suminf.    0.26583 (2) obj. -4298.97 iterations 6
Cbc0038I Pass  13: suminf.    0.40200 (1) obj. -4298.97 iterations 8
Cbc0038I Pass  14: suminf.    0.35135 (1) obj. -4355.29 iterations 1
Cbc0038I Pass  15: suminf.    0.83061 (4) obj. -4298.97 iterations 12
Cbc0038I Pass  16: suminf.    0.36940 (2) obj. -4298.97 iterations 5
Cbc0038I Pass  17: suminf.    0.30436 (2) obj. -4298.97 iterations 5
Cbc0038I Pass  18: suminf.    0.36842 (1) obj. -4358.01 iterations 5
Cbc0038I Pass  19: suminf.    0.11553 (1) obj. -4298.97 iterations 2
Cbc0038I Pass  20: suminf.    0.18919 (1) obj. -4380.89 iterations 1
Cbc0038I Pass  21: suminf.    1.64649 (5) obj. -4298.97 iterations 12
Cbc0038I Pass  22: suminf.    0.47539 (1) obj. -4298.97 iterations 9
Cbc0038I Pass  23: suminf.    0.45946 (1) obj. -4316.69 iterations 1
Cbc0038I Pass  24: suminf.    1.62517 (7) obj. -4298.97 iterations 11
Cbc0038I Pass  25: suminf.    0.81673 (3) obj. -4298.97 iterations 8
Cbc0038I Pass  26: suminf.    0.89053 (2) obj. -4298.97 iterations 7
Cbc0038I Pass  27: suminf.    0.20609 (1) obj. -4298.97 iterations 3
Cbc0038I Pass  28: suminf.    0.24324 (1) obj. -4340.28 iterations 1
Cbc0038I Pass  29: suminf.    0.47368 (1) obj. -4310.87 iterations 6
Cbc0038I Pass  30: suminf.    0.48039 (3) obj. -4298.97 iterations 11
Cbc0038I Pass  31: suminf.    0.32540 (2) obj. -4298.97 iterations 8
Cbc0038I Rounding solution of -4309.79 is better than previous of -4287.18

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 59 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4328.84
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.45455 (1) obj. -4400.66 iterations 0
Cbc0038I Pass  32: suminf.    0.21101 (1) obj. -4328.84 iterations 2
Cbc0038I Pass  33: suminf.    0.27027 (1) obj. -4394.75 iterations 1
Cbc0038I Pass  34: suminf.    0.50504 (2) obj. -4328.84 iterations 8
Cbc0038I Pass  35: suminf.    0.27027 (1) obj. -4351.31 iterations 6
Cbc0038I Pass  36: suminf.    0.29047 (1) obj. -4328.84 iterations 1
Cbc0038I Pass  37: suminf.    0.27027 (1) obj. -4351.31 iterations 2
Cbc0038I Pass  38: suminf.    0.42254 (3) obj. -4340.97 iterations 5
Cbc0038I Pass  39: suminf.    0.56538 (4) obj. -4328.84 iterations 12
Cbc0038I Pass  40: suminf.    0.26451 (2) obj. -4328.84 iterations 11
Cbc0038I Pass  41: suminf.    0.07211 (1) obj. -4328.84 iterations 6
Cbc0038I Pass  42: suminf.    0.05405 (1) obj. -4348.92 iterations 1
Cbc0038I Pass  43: suminf.    0.05405 (1) obj. -4348.92 iterations 2
Cbc0038I Pass  44: suminf.    0.05405 (1) obj. -4348.92 iterations 2
Cbc0038I Pass  45: suminf.    0.05405 (1) obj. -4348.92 iterations 5
Cbc0038I Pass  46: suminf.    0.45946 (1) obj. -4367.62 iterations 6
Cbc0038I Pass  47: suminf.    0.42459 (1) obj. -4328.84 iterations 3
Cbc0038I Pass  48: suminf.    0.45946 (1) obj. -4367.62 iterations 1
Cbc0038I Pass  49: suminf.    0.68224 (2) obj. -4328.84 iterations 5
Cbc0038I Pass  50: suminf.    0.68224 (2) obj. -4328.84 iterations 1
Cbc0038I Pass  51: suminf.    0.25212 (1) obj. -4328.84 iterations 4
Cbc0038I Pass  52: suminf.    0.21622 (1) obj. -4368.77 iterations 1
Cbc0038I Pass  53: suminf.    0.61526 (3) obj. -4328.84 iterations 6
Cbc0038I Pass  54: suminf.    0.41981 (1) obj. -4328.84 iterations 3
Cbc0038I Pass  55: suminf.    0.43243 (1) obj. -4342.88 iterations 1
Cbc0038I Pass  56: suminf.    0.52632 (2) obj. -4328.84 iterations 8
Cbc0038I Pass  57: suminf.    0.47368 (1) obj. -4340.6 iterations 5
Cbc0038I Pass  58: suminf.    0.20622 (1) obj. -4328.84 iterations 2
Cbc0038I Pass  59: suminf.    0.24324 (1) obj. -4370.01 iterations 1
Cbc0038I Pass  60: suminf.    0.29047 (1) obj. -4328.84 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 59 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -4309.79 - took 0.02 seconds
Cbc0012I Integer solution of -4309.791 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 104 rows 59 columns, reduced to 7 rows 5 columns
Cbc0031I 6 added rows had average density of 18.666667
Cbc0013I At root node, 6 cuts changed objective from -4405.0538 to -4360.5214 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 49 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -4309.791, took 285 iterations and 12 nodes (0.07 seconds)
Cbc0032I Strong branching done 84 times (335 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 56 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 108 (-44) columns and 1702 (-1601) elements
Clp1000I sum of infeasibilities 1.40443e-07 - average 1.44786e-09, 93 fixed columns
Coin0506I Presolve 9 (-88) rows, 15 (-93) columns and 44 (-1658) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 3.3843506 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 4373.6637
Clp0000I Optimal - objective value 4373.6637
Coin0511I After Postsolve, objective 4373.6637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8974157 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4461.1975
Clp0000I Optimal - objective value 4461.1975
Clp0000I Optimal - objective value 4461.1975
Coin0511I After Postsolve, objective 4461.1975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4461.197512 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 109 columns (109 integer (109 of which binary)) and 1708 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.745%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 2.49874
Cbc0038I Pass   1: suminf.    1.51825 (32) obj. -4144.5 iterations 12
Cbc0038I Pass   2: suminf.    0.57277 (15) obj. -4116.3 iterations 17
Cbc0038I Solution found of -4094.18
Cbc0038I Rounding solution of -4179.8 is better than previous of -4094.18

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4206.84
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.58286 (33) obj. -4206.84 iterations 1
Cbc0038I Pass   4: suminf.    0.67549 (12) obj. -4413.02 iterations 22
Cbc0038I Pass   5: suminf.    0.48631 (12) obj. -4206.84 iterations 1
Cbc0038I Pass   6: suminf.    0.27027 (1) obj. -4394.75 iterations 12
Cbc0038I Pass   7: suminf.    0.10131 (1) obj. -4206.84 iterations 1
Cbc0038I Pass   8: suminf.    1.51021 (13) obj. -4206.84 iterations 22
Cbc0038I Pass   9: suminf.    0.90554 (9) obj. -4282.92 iterations 8
Cbc0038I Pass  10: suminf.    0.31460 (1) obj. -4206.84 iterations 10
Cbc0038I Pass  11: suminf.    0.43243 (1) obj. -4337.88 iterations 1
Cbc0038I Pass  12: suminf.    1.56207 (21) obj. -4206.84 iterations 28
Cbc0038I Pass  13: suminf.    0.88482 (16) obj. -4206.84 iterations 4
Cbc0038I Pass  14: suminf.    0.13514 (1) obj. -4222.97 iterations 16
Cbc0038I Pass  15: suminf.    0.12063 (1) obj. -4206.84 iterations 1
Cbc0038I Pass  16: suminf.    1.57736 (7) obj. -4206.84 iterations 17
Cbc0038I Pass  17: suminf.    0.92345 (7) obj. -4206.84 iterations 3
Cbc0038I Pass  18: suminf.    0.85213 (7) obj. -4206.84 iterations 4
Cbc0038I Pass  19: suminf.    0.41667 (1) obj. -4296.54 iterations 11
Cbc0038I Pass  20: suminf.    0.41667 (1) obj. -4296.54 iterations 0
Cbc0038I Pass  21: suminf.    0.25886 (1) obj. -4206.84 iterations 2
Cbc0038I Pass  22: suminf.    0.37838 (1) obj. -4339.76 iterations 1
Cbc0038I Pass  23: suminf.    1.33231 (8) obj. -4206.84 iterations 16
Cbc0038I Pass  24: suminf.    0.46125 (6) obj. -4206.84 iterations 4
Cbc0038I Pass  25: suminf.    0.37838 (1) obj. -4342.76 iterations 8
Cbc0038I Pass  26: suminf.    0.25617 (1) obj. -4206.84 iterations 1
Cbc0038I Pass  27: suminf.    1.18738 (7) obj. -4206.84 iterations 13
Cbc0038I Pass  28: suminf.    0.34327 (5) obj. -4206.84 iterations 3
Cbc0038I Pass  29: suminf.    0.16216 (1) obj. -4302.5 iterations 5
Cbc0038I Pass  30: suminf.    0.07615 (1) obj. -4206.84 iterations 1
Cbc0038I Pass  31: suminf.    1.45835 (8) obj. -4206.84 iterations 26
Cbc0038I Pass  32: suminf.    0.61379 (6) obj. -4273.63 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 56 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -4094.18 to -4304.59 (0.06 seconds)
Cbc0038I Round again with cutoff of -4333.72
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.71436 (33) obj. -4333.72 iterations 0
Cbc0038I Pass  33: suminf.    0.53211 (8) obj. -4369.89 iterations 13
Cbc0038I Pass  34: suminf.    0.53211 (8) obj. -4369.89 iterations 0
Cbc0038I Pass  35: suminf.    0.37075 (1) obj. -4333.72 iterations 8
Cbc0038I Pass  36: suminf.    0.35135 (1) obj. -4355.29 iterations 1
Cbc0038I Pass  37: suminf.    1.35601 (14) obj. -4333.72 iterations 17
Cbc0038I Pass  38: suminf.    1.35601 (14) obj. -4333.72 iterations 0
Cbc0038I Pass  39: suminf.    0.30212 (3) obj. -4364.96 iterations 14
Cbc0038I Pass  40: suminf.    0.26871 (1) obj. -4333.72 iterations 3
Cbc0038I Pass  41: suminf.    0.24324 (1) obj. -4362.05 iterations 1
Cbc0038I Pass  42: suminf.    0.51746 (6) obj. -4337.75 iterations 15
Cbc0038I Pass  43: suminf.    0.51746 (6) obj. -4337.75 iterations 0
Cbc0038I Pass  44: suminf.    0.27978 (2) obj. -4333.72 iterations 11
Cbc0038I Pass  45: suminf.    0.27926 (3) obj. -4333.72 iterations 5
Cbc0038I Pass  46: suminf.    0.43497 (5) obj. -4333.72 iterations 7
Cbc0038I Pass  47: suminf.    0.43497 (5) obj. -4333.72 iterations 0
Cbc0038I Pass  48: suminf.    0.45455 (1) obj. -4388.66 iterations 7
Cbc0038I Pass  49: suminf.    0.22618 (1) obj. -4333.72 iterations 2
Cbc0038I Pass  50: suminf.    0.27027 (1) obj. -4382.75 iterations 1
Cbc0038I Pass  51: suminf.    1.04354 (7) obj. -4333.72 iterations 12
Cbc0038I Pass  52: suminf.    0.69636 (5) obj. -4341.18 iterations 6
Cbc0038I Pass  53: suminf.    0.46662 (6) obj. -4333.72 iterations 5
Cbc0038I Pass  54: suminf.    0.47368 (1) obj. -4334.15 iterations 11
Cbc0038I Pass  55: suminf.    0.46571 (2) obj. -4333.72 iterations 4
Cbc0038I Pass  56: suminf.    1.03649 (8) obj. -4333.72 iterations 14
Cbc0038I Pass  57: suminf.    1.03649 (8) obj. -4333.72 iterations 1
Cbc0038I Pass  58: suminf.    0.22259 (1) obj. -4333.72 iterations 11
Cbc0038I Pass  59: suminf.    0.27027 (1) obj. -4386.75 iterations 1
Cbc0038I Pass  60: suminf.    1.08368 (7) obj. -4333.72 iterations 14
Cbc0038I Pass  61: suminf.    1.08368 (7) obj. -4333.72 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 36 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -4304.59 to -4309.79 (0.08 seconds)
Cbc0038I Round again with cutoff of -4368.68
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.75058 (33) obj. -4368.68 iterations 0
Cbc0038I Pass  62: suminf.    0.71612 (13) obj. -4410.16 iterations 21
Cbc0038I Pass  63: suminf.    0.67881 (13) obj. -4368.68 iterations 1
Cbc0038I Pass  64: suminf.    0.27027 (1) obj. -4394.75 iterations 13
Cbc0038I Pass  65: suminf.    0.24682 (1) obj. -4368.68 iterations 1
Cbc0038I Pass  66: suminf.    0.52580 (8) obj. -4371.93 iterations 20
Cbc0038I Pass  67: suminf.    0.52580 (8) obj. -4371.93 iterations 0
Cbc0038I Pass  68: suminf.    0.53032 (2) obj. -4368.68 iterations 13
Cbc0038I Pass  69: suminf.    0.49261 (2) obj. -4368.68 iterations 2
Cbc0038I Pass  70: suminf.    0.25312 (1) obj. -4368.68 iterations 6
Cbc0038I Pass  71: suminf.    0.27027 (1) obj. -4387.75 iterations 1
Cbc0038I Pass  72: suminf.    0.69383 (7) obj. -4368.68 iterations 12
Cbc0038I Pass  73: suminf.    0.58423 (6) obj. -4368.68 iterations 3
Cbc0038I Pass  74: suminf.    0.27027 (1) obj. -4378.75 iterations 6
Cbc0038I Pass  75: suminf.    0.26121 (1) obj. -4368.68 iterations 1
Cbc0038I Pass  76: suminf.    1.45910 (10) obj. -4368.68 iterations 16
Cbc0038I Pass  77: suminf.    0.27043 (4) obj. -4381.71 iterations 6
Cbc0038I Pass  78: suminf.    0.69916 (2) obj. -4368.68 iterations 6
Cbc0038I Pass  79: suminf.    0.10526 (1) obj. -4378.87 iterations 4
Cbc0038I Pass  80: suminf.    0.48033 (7) obj. -4368.68 iterations 17
Cbc0038I Pass  81: suminf.    0.33383 (6) obj. -4382.65 iterations 5
Cbc0038I Pass  82: suminf.    0.64091 (2) obj. -4368.68 iterations 8
Cbc0038I Pass  83: suminf.    0.10526 (1) obj. -4377.87 iterations 4
Cbc0038I Pass  84: suminf.    0.96348 (12) obj. -4368.68 iterations 14
Cbc0038I Pass  85: suminf.    0.46746 (9) obj. -4388.85 iterations 7
Cbc0038I Pass  86: suminf.    0.67327 (2) obj. -4368.68 iterations 13
Cbc0038I Pass  87: suminf.    0.10526 (1) obj. -4375.87 iterations 7
Cbc0038I Pass  88: suminf.    0.10526 (1) obj. -4375.87 iterations 0
Cbc0038I Pass  89: suminf.    0.52442 (2) obj. -4368.68 iterations 3
Cbc0038I Pass  90: suminf.    0.54255 (8) obj. -4368.68 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 34 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -4309.79 - took 0.08 seconds
Cbc0012I Integer solution of -4309.791 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 97 rows 109 columns, reduced to 7 rows 7 columns
Cbc0031I 41 added rows had average density of 7.5121951
Cbc0013I At root node, 41 cuts changed objective from -4450.2385 to -4352.5676 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 994 row cuts average 5.3 elements, 16 column cuts (16 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 187 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 35.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4309.791, took 923 iterations and 10 nodes (0.25 seconds)
Cbc0032I Strong branching done 224 times (1976 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.26

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 59 (-19) columns and 320 (-133) elements
Clp1000I sum of infeasibilities 0 - average 0, 54 fixed columns
Coin0506I Presolve 5 (-100) rows, 5 (-54) columns and 12 (-308) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 4405.0538
Clp0000I Optimal - objective value 4405.0538
Coin0511I After Postsolve, objective 4405.0538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26342519 - largest nonzero change 0 ( 0%) - largest zero change 2.6300117e-05
Clp0000I Optimal - objective value 4405.0538
Clp0000I Optimal - objective value 4405.0538
Clp0000I Optimal - objective value 4405.0538
Coin0511I After Postsolve, objective 4405.0538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4405.053762 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 59 columns (58 integer (58 of which binary)) and 322 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.567%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.655087
Cbc0038I Pass   1: suminf.    0.45455 (1) obj. -4400.66 iterations 11
Cbc0038I Solution found of -4094.18
Cbc0038I Relaxing continuous gives -4094.18
Cbc0038I Rounding solution of -4130.61 is better than previous of -4094.18

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 59 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -4130.61 to -4287.18 (0.01 seconds)
Cbc0038I Round again with cutoff of -4298.97
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45455 (1) obj. -4400.66 iterations 0
Cbc0038I Pass   3: suminf.    0.18414 (1) obj. -4298.97 iterations 2
Cbc0038I Pass   4: suminf.    0.27027 (1) obj. -4394.75 iterations 1
Cbc0038I Pass   5: suminf.    0.79686 (2) obj. -4298.97 iterations 11
Cbc0038I Pass   6: suminf.    0.79686 (2) obj. -4298.97 iterations 0
Cbc0038I Pass   7: suminf.    0.31256 (1) obj. -4298.97 iterations 5
Cbc0038I Pass   8: suminf.    0.24324 (1) obj. -4376.05 iterations 1
Cbc0038I Pass   9: suminf.    0.21679 (2) obj. -4298.97 iterations 10
Cbc0038I Pass  10: suminf.    0.21679 (2) obj. -4298.97 iterations 3
Cbc0038I Pass  11: suminf.    0.54304 (3) obj. -4298.97 iterations 14
Cbc0038I Pass  12: suminf.    0.26583 (2) obj. -4298.97 iterations 6
Cbc0038I Pass  13: suminf.    0.40200 (1) obj. -4298.97 iterations 8
Cbc0038I Pass  14: suminf.    0.35135 (1) obj. -4355.29 iterations 1
Cbc0038I Pass  15: suminf.    0.83061 (4) obj. -4298.97 iterations 12
Cbc0038I Pass  16: suminf.    0.36940 (2) obj. -4298.97 iterations 5
Cbc0038I Pass  17: suminf.    0.30436 (2) obj. -4298.97 iterations 5
Cbc0038I Pass  18: suminf.    0.36842 (1) obj. -4358.01 iterations 5
Cbc0038I Pass  19: suminf.    0.11553 (1) obj. -4298.97 iterations 2
Cbc0038I Pass  20: suminf.    0.18919 (1) obj. -4380.89 iterations 1
Cbc0038I Pass  21: suminf.    1.64649 (5) obj. -4298.97 iterations 12
Cbc0038I Pass  22: suminf.    0.47539 (1) obj. -4298.97 iterations 9
Cbc0038I Pass  23: suminf.    0.45946 (1) obj. -4316.69 iterations 1
Cbc0038I Pass  24: suminf.    1.62517 (7) obj. -4298.97 iterations 11
Cbc0038I Pass  25: suminf.    0.81673 (3) obj. -4298.97 iterations 8
Cbc0038I Pass  26: suminf.    0.89053 (2) obj. -4298.97 iterations 7
Cbc0038I Pass  27: suminf.    0.20609 (1) obj. -4298.97 iterations 3
Cbc0038I Pass  28: suminf.    0.24324 (1) obj. -4340.28 iterations 1
Cbc0038I Pass  29: suminf.    0.47368 (1) obj. -4310.87 iterations 6
Cbc0038I Pass  30: suminf.    0.48039 (3) obj. -4298.97 iterations 11
Cbc0038I Pass  31: suminf.    0.32540 (2) obj. -4298.97 iterations 8
Cbc0038I Rounding solution of -4309.79 is better than previous of -4287.18

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 59 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4328.84
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.45455 (1) obj. -4400.66 iterations 0
Cbc0038I Pass  32: suminf.    0.21101 (1) obj. -4328.84 iterations 2
Cbc0038I Pass  33: suminf.    0.27027 (1) obj. -4394.75 iterations 1
Cbc0038I Pass  34: suminf.    0.50504 (2) obj. -4328.84 iterations 8
Cbc0038I Pass  35: suminf.    0.27027 (1) obj. -4351.31 iterations 6
Cbc0038I Pass  36: suminf.    0.29047 (1) obj. -4328.84 iterations 1
Cbc0038I Pass  37: suminf.    0.27027 (1) obj. -4351.31 iterations 2
Cbc0038I Pass  38: suminf.    0.42254 (3) obj. -4340.97 iterations 5
Cbc0038I Pass  39: suminf.    0.56538 (4) obj. -4328.84 iterations 12
Cbc0038I Pass  40: suminf.    0.26451 (2) obj. -4328.84 iterations 11
Cbc0038I Pass  41: suminf.    0.07211 (1) obj. -4328.84 iterations 6
Cbc0038I Pass  42: suminf.    0.05405 (1) obj. -4348.92 iterations 1
Cbc0038I Pass  43: suminf.    0.05405 (1) obj. -4348.92 iterations 2
Cbc0038I Pass  44: suminf.    0.05405 (1) obj. -4348.92 iterations 2
Cbc0038I Pass  45: suminf.    0.05405 (1) obj. -4348.92 iterations 5
Cbc0038I Pass  46: suminf.    0.45946 (1) obj. -4367.62 iterations 6
Cbc0038I Pass  47: suminf.    0.42459 (1) obj. -4328.84 iterations 3
Cbc0038I Pass  48: suminf.    0.45946 (1) obj. -4367.62 iterations 1
Cbc0038I Pass  49: suminf.    0.68224 (2) obj. -4328.84 iterations 5
Cbc0038I Pass  50: suminf.    0.68224 (2) obj. -4328.84 iterations 1
Cbc0038I Pass  51: suminf.    0.25212 (1) obj. -4328.84 iterations 4
Cbc0038I Pass  52: suminf.    0.21622 (1) obj. -4368.77 iterations 1
Cbc0038I Pass  53: suminf.    0.61526 (3) obj. -4328.84 iterations 6
Cbc0038I Pass  54: suminf.    0.41981 (1) obj. -4328.84 iterations 3
Cbc0038I Pass  55: suminf.    0.43243 (1) obj. -4342.88 iterations 1
Cbc0038I Pass  56: suminf.    0.52632 (2) obj. -4328.84 iterations 8
Cbc0038I Pass  57: suminf.    0.47368 (1) obj. -4340.6 iterations 5
Cbc0038I Pass  58: suminf.    0.20622 (1) obj. -4328.84 iterations 2
Cbc0038I Pass  59: suminf.    0.24324 (1) obj. -4370.01 iterations 1
Cbc0038I Pass  60: suminf.    0.29047 (1) obj. -4328.84 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 59 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -4309.79 - took 0.02 seconds
Cbc0012I Integer solution of -4309.791 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 104 rows 59 columns, reduced to 7 rows 5 columns
Cbc0031I 6 added rows had average density of 18.666667
Cbc0013I At root node, 6 cuts changed objective from -4405.0538 to -4360.5214 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 49 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -4309.791, took 285 iterations and 12 nodes (0.08 seconds)
Cbc0032I Strong branching done 84 times (335 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 56 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 108 (-45) columns and 1702 (-1602) elements
Clp1000I sum of infeasibilities 1.40443e-07 - average 1.44786e-09, 93 fixed columns
Coin0506I Presolve 9 (-88) rows, 15 (-93) columns and 44 (-1658) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 3.3843506 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 4373.6637
Clp0000I Optimal - objective value 4373.6637
Coin0511I After Postsolve, objective 4373.6637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8974157 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4461.1975
Clp0000I Optimal - objective value 4461.1975
Clp0000I Optimal - objective value 4461.1975
Coin0511I After Postsolve, objective 4461.1975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4461.197512 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 109 columns (109 integer (109 of which binary)) and 1708 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.745%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 2.49874
Cbc0038I Pass   1: suminf.    1.51825 (32) obj. -4144.5 iterations 12
Cbc0038I Pass   2: suminf.    0.57277 (15) obj. -4116.3 iterations 17
Cbc0038I Solution found of -4094.18
Cbc0038I Rounding solution of -4179.8 is better than previous of -4094.18

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4206.84
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.58286 (33) obj. -4206.84 iterations 1
Cbc0038I Pass   4: suminf.    0.67549 (12) obj. -4413.02 iterations 22
Cbc0038I Pass   5: suminf.    0.48631 (12) obj. -4206.84 iterations 1
Cbc0038I Pass   6: suminf.    0.27027 (1) obj. -4394.75 iterations 12
Cbc0038I Pass   7: suminf.    0.10131 (1) obj. -4206.84 iterations 1
Cbc0038I Pass   8: suminf.    1.51021 (13) obj. -4206.84 iterations 22
Cbc0038I Pass   9: suminf.    0.90554 (9) obj. -4282.92 iterations 8
Cbc0038I Pass  10: suminf.    0.31460 (1) obj. -4206.84 iterations 10
Cbc0038I Pass  11: suminf.    0.43243 (1) obj. -4337.88 iterations 1
Cbc0038I Pass  12: suminf.    1.56207 (21) obj. -4206.84 iterations 28
Cbc0038I Pass  13: suminf.    0.88482 (16) obj. -4206.84 iterations 4
Cbc0038I Pass  14: suminf.    0.13514 (1) obj. -4222.97 iterations 16
Cbc0038I Pass  15: suminf.    0.12063 (1) obj. -4206.84 iterations 1
Cbc0038I Pass  16: suminf.    1.57736 (7) obj. -4206.84 iterations 17
Cbc0038I Pass  17: suminf.    0.92345 (7) obj. -4206.84 iterations 3
Cbc0038I Pass  18: suminf.    0.85213 (7) obj. -4206.84 iterations 4
Cbc0038I Pass  19: suminf.    0.41667 (1) obj. -4296.54 iterations 11
Cbc0038I Pass  20: suminf.    0.41667 (1) obj. -4296.54 iterations 0
Cbc0038I Pass  21: suminf.    0.25886 (1) obj. -4206.84 iterations 2
Cbc0038I Pass  22: suminf.    0.37838 (1) obj. -4339.76 iterations 1
Cbc0038I Pass  23: suminf.    1.33231 (8) obj. -4206.84 iterations 16
Cbc0038I Pass  24: suminf.    0.46125 (6) obj. -4206.84 iterations 4
Cbc0038I Pass  25: suminf.    0.37838 (1) obj. -4342.76 iterations 8
Cbc0038I Pass  26: suminf.    0.25617 (1) obj. -4206.84 iterations 1
Cbc0038I Pass  27: suminf.    1.18738 (7) obj. -4206.84 iterations 13
Cbc0038I Pass  28: suminf.    0.34327 (5) obj. -4206.84 iterations 3
Cbc0038I Pass  29: suminf.    0.16216 (1) obj. -4302.5 iterations 5
Cbc0038I Pass  30: suminf.    0.07615 (1) obj. -4206.84 iterations 1
Cbc0038I Pass  31: suminf.    1.45835 (8) obj. -4206.84 iterations 26
Cbc0038I Pass  32: suminf.    0.61379 (6) obj. -4273.63 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 56 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -4094.18 to -4304.59 (0.07 seconds)
Cbc0038I Round again with cutoff of -4333.72
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.71436 (33) obj. -4333.72 iterations 0
Cbc0038I Pass  33: suminf.    0.53211 (8) obj. -4369.89 iterations 13
Cbc0038I Pass  34: suminf.    0.53211 (8) obj. -4369.89 iterations 0
Cbc0038I Pass  35: suminf.    0.37075 (1) obj. -4333.72 iterations 8
Cbc0038I Pass  36: suminf.    0.35135 (1) obj. -4355.29 iterations 1
Cbc0038I Pass  37: suminf.    1.35601 (14) obj. -4333.72 iterations 17
Cbc0038I Pass  38: suminf.    1.35601 (14) obj. -4333.72 iterations 0
Cbc0038I Pass  39: suminf.    0.30212 (3) obj. -4364.96 iterations 14
Cbc0038I Pass  40: suminf.    0.26871 (1) obj. -4333.72 iterations 3
Cbc0038I Pass  41: suminf.    0.24324 (1) obj. -4362.05 iterations 1
Cbc0038I Pass  42: suminf.    0.51746 (6) obj. -4337.75 iterations 15
Cbc0038I Pass  43: suminf.    0.51746 (6) obj. -4337.75 iterations 0
Cbc0038I Pass  44: suminf.    0.27978 (2) obj. -4333.72 iterations 11
Cbc0038I Pass  45: suminf.    0.27926 (3) obj. -4333.72 iterations 5
Cbc0038I Pass  46: suminf.    0.43497 (5) obj. -4333.72 iterations 7
Cbc0038I Pass  47: suminf.    0.43497 (5) obj. -4333.72 iterations 0
Cbc0038I Pass  48: suminf.    0.45455 (1) obj. -4388.66 iterations 7
Cbc0038I Pass  49: suminf.    0.22618 (1) obj. -4333.72 iterations 2
Cbc0038I Pass  50: suminf.    0.27027 (1) obj. -4382.75 iterations 1
Cbc0038I Pass  51: suminf.    1.04354 (7) obj. -4333.72 iterations 12
Cbc0038I Pass  52: suminf.    0.69636 (5) obj. -4341.18 iterations 6
Cbc0038I Pass  53: suminf.    0.46662 (6) obj. -4333.72 iterations 5
Cbc0038I Pass  54: suminf.    0.47368 (1) obj. -4334.15 iterations 11
Cbc0038I Pass  55: suminf.    0.46571 (2) obj. -4333.72 iterations 4
Cbc0038I Pass  56: suminf.    1.03649 (8) obj. -4333.72 iterations 14
Cbc0038I Pass  57: suminf.    1.03649 (8) obj. -4333.72 iterations 1
Cbc0038I Pass  58: suminf.    0.22259 (1) obj. -4333.72 iterations 11
Cbc0038I Pass  59: suminf.    0.27027 (1) obj. -4386.75 iterations 1
Cbc0038I Pass  60: suminf.    1.08368 (7) obj. -4333.72 iterations 14
Cbc0038I Pass  61: suminf.    1.08368 (7) obj. -4333.72 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 36 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -4304.59 to -4309.79 (0.10 seconds)
Cbc0038I Round again with cutoff of -4368.68
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.75058 (33) obj. -4368.68 iterations 0
Cbc0038I Pass  62: suminf.    0.71612 (13) obj. -4410.16 iterations 21
Cbc0038I Pass  63: suminf.    0.67881 (13) obj. -4368.68 iterations 1
Cbc0038I Pass  64: suminf.    0.27027 (1) obj. -4394.75 iterations 13
Cbc0038I Pass  65: suminf.    0.24682 (1) obj. -4368.68 iterations 1
Cbc0038I Pass  66: suminf.    0.52580 (8) obj. -4371.93 iterations 20
Cbc0038I Pass  67: suminf.    0.52580 (8) obj. -4371.93 iterations 0
Cbc0038I Pass  68: suminf.    0.53032 (2) obj. -4368.68 iterations 13
Cbc0038I Pass  69: suminf.    0.49261 (2) obj. -4368.68 iterations 2
Cbc0038I Pass  70: suminf.    0.25312 (1) obj. -4368.68 iterations 6
Cbc0038I Pass  71: suminf.    0.27027 (1) obj. -4387.75 iterations 1
Cbc0038I Pass  72: suminf.    0.69383 (7) obj. -4368.68 iterations 12
Cbc0038I Pass  73: suminf.    0.58423 (6) obj. -4368.68 iterations 3
Cbc0038I Pass  74: suminf.    0.27027 (1) obj. -4378.75 iterations 6
Cbc0038I Pass  75: suminf.    0.26121 (1) obj. -4368.68 iterations 1
Cbc0038I Pass  76: suminf.    1.45910 (10) obj. -4368.68 iterations 16
Cbc0038I Pass  77: suminf.    0.27043 (4) obj. -4381.71 iterations 6
Cbc0038I Pass  78: suminf.    0.69916 (2) obj. -4368.68 iterations 6
Cbc0038I Pass  79: suminf.    0.10526 (1) obj. -4378.87 iterations 4
Cbc0038I Pass  80: suminf.    0.48033 (7) obj. -4368.68 iterations 17
Cbc0038I Pass  81: suminf.    0.33383 (6) obj. -4382.65 iterations 5
Cbc0038I Pass  82: suminf.    0.64091 (2) obj. -4368.68 iterations 8
Cbc0038I Pass  83: suminf.    0.10526 (1) obj. -4377.87 iterations 4
Cbc0038I Pass  84: suminf.    0.96348 (12) obj. -4368.68 iterations 14
Cbc0038I Pass  85: suminf.    0.46746 (9) obj. -4388.85 iterations 7
Cbc0038I Pass  86: suminf.    0.67327 (2) obj. -4368.68 iterations 13
Cbc0038I Pass  87: suminf.    0.10526 (1) obj. -4375.87 iterations 7
Cbc0038I Pass  88: suminf.    0.10526 (1) obj. -4375.87 iterations 0
Cbc0038I Pass  89: suminf.    0.52442 (2) obj. -4368.68 iterations 3
Cbc0038I Pass  90: suminf.    0.54255 (8) obj. -4368.68 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 34 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -4309.79 - took 0.09 seconds
Cbc0012I Integer solution of -4309.791 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 97 rows 109 columns, reduced to 7 rows 7 columns
Cbc0031I 41 added rows had average density of 7.5121951
Cbc0013I At root node, 41 cuts changed objective from -4450.2385 to -4352.5676 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 994 row cuts average 5.3 elements, 16 column cuts (16 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 187 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 35.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4309.791, took 923 iterations and 10 nodes (0.28 seconds)
Cbc0032I Strong branching done 224 times (1976 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.29

