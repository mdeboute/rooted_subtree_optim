Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.54141e-05 - average 1.1857e-07, 7 fixed columns
Coin0506I Presolve 114 (-16) rows, 68 (-8) columns and 356 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.88443 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 37.432105
Clp0000I Optimal - objective value 37.432105
Coin0511I After Postsolve, objective 37.432105, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.432105
Clp0000I Optimal - objective value 37.432105
Clp0000I Optimal - objective value 37.432105
Coin0511I After Postsolve, objective 37.432105, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.43210475 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.6254
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.4381 iterations 55
Cbc0038I Solution found of 10.4381
Cbc0038I Relaxing continuous gives 10.4381
Cbc0038I Rounding solution of 6.35627 is better than previous of 10.4381

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 6.35627 to -9.88788 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.6424
Cbc0038I Pass   2: suminf.    3.16610 (11) obj. -12.6424 iterations 14
Cbc0038I Pass   3: suminf.    3.05561 (8) obj. -12.6424 iterations 8
Cbc0038I Pass   4: suminf.    1.40619 (5) obj. -12.6424 iterations 9
Cbc0038I Pass   5: suminf.    0.71774 (4) obj. -12.6424 iterations 3
Cbc0038I Pass   6: suminf.    1.29200 (5) obj. -12.6424 iterations 7
Cbc0038I Pass   7: suminf.    1.13801 (4) obj. -12.6424 iterations 3
Cbc0038I Pass   8: suminf.    1.10571 (5) obj. -12.6424 iterations 6
Cbc0038I Pass   9: suminf.    1.06812 (4) obj. -12.6424 iterations 1
Cbc0038I Pass  10: suminf.    1.28008 (5) obj. -12.6424 iterations 7
Cbc0038I Pass  11: suminf.    1.32329 (4) obj. -12.6424 iterations 19
Cbc0038I Pass  12: suminf.    0.86070 (4) obj. -12.6424 iterations 7
Cbc0038I Pass  13: suminf.    1.34301 (5) obj. -12.6424 iterations 4
Cbc0038I Pass  14: suminf.    0.89367 (4) obj. -12.6424 iterations 1
Cbc0038I Pass  15: suminf.    0.33162 (2) obj. -12.6424 iterations 2
Cbc0038I Pass  16: suminf.    0.54863 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  17: suminf.    0.54863 (4) obj. -12.6424 iterations 0
Cbc0038I Pass  18: suminf.    0.90590 (4) obj. -12.6424 iterations 4
Cbc0038I Pass  19: suminf.    0.87239 (3) obj. -12.6424 iterations 1
Cbc0038I Pass  20: suminf.    0.64714 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  21: suminf.    0.60483 (3) obj. -12.6424 iterations 1
Cbc0038I Pass  22: suminf.    1.42938 (8) obj. -12.6424 iterations 18
Cbc0038I Pass  23: suminf.    1.18130 (5) obj. -12.6424 iterations 10
Cbc0038I Pass  24: suminf.    1.38489 (5) obj. -12.6424 iterations 17
Cbc0038I Pass  25: suminf.    0.40349 (2) obj. -12.6424 iterations 5
Cbc0038I Pass  26: suminf.    0.58263 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  27: suminf.    0.57820 (3) obj. -12.6424 iterations 1
Cbc0038I Pass  28: suminf.    0.85320 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  29: suminf.    0.85216 (3) obj. -12.6424 iterations 1
Cbc0038I Pass  30: suminf.    0.58263 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  31: suminf.    4.45958 (13) obj. -12.6424 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -9.88788 to -12.2449 (0.11 seconds)
Cbc0038I Round again with cutoff of -17.6003
Cbc0038I Pass  31: suminf.    4.15489 (14) obj. -17.6003 iterations 2
Cbc0038I Pass  32: suminf.    4.04372 (12) obj. -17.6003 iterations 1
Cbc0038I Pass  33: suminf.    4.04372 (12) obj. -17.6003 iterations 1
Cbc0038I Pass  34: suminf.    1.41190 (7) obj. -17.6003 iterations 9
Cbc0038I Pass  35: suminf.    3.12524 (8) obj. -17.6003 iterations 12
Cbc0038I Pass  36: suminf.    1.05499 (5) obj. -17.6003 iterations 7
Cbc0038I Pass  37: suminf.    0.97577 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  38: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  39: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  40: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  41: suminf.    1.22272 (6) obj. -17.6003 iterations 5
Cbc0038I Pass  42: suminf.    0.97577 (4) obj. -17.6003 iterations 2
Cbc0038I Pass  43: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  44: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  45: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  46: suminf.    1.22272 (6) obj. -17.6003 iterations 5
Cbc0038I Pass  47: suminf.    0.97577 (4) obj. -17.6003 iterations 2
Cbc0038I Pass  48: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  49: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  50: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  51: suminf.    1.22272 (6) obj. -17.6003 iterations 5
Cbc0038I Pass  52: suminf.    0.97577 (4) obj. -17.6003 iterations 2
Cbc0038I Pass  53: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  54: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  55: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  56: suminf.    1.22272 (6) obj. -17.6003 iterations 5
Cbc0038I Pass  57: suminf.    0.97577 (4) obj. -17.6003 iterations 2
Cbc0038I Pass  58: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  59: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  60: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -12.2449 - took 0.12 seconds
Cbc0012I Integer solution of -12.244871 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 77 rows 47 columns
Cbc0031I 31 added rows had average density of 48.16129
Cbc0013I At root node, 31 cuts changed objective from -37.432105 to -29.542344 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15984 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2216 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.244871 best solution, best possible -29.542344 (1.05 seconds)
Cbc0012I Integer solution of -12.624081 found by rounding after 9235 iterations and 30 nodes (1.15 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 98 rows 60 columns
Cbc0038I Full problem 130 rows 76 columns, reduced to 51 rows 37 columns
Cbc0001I Search completed - best objective -12.624081, took 11777 iterations and 102 nodes (1.50 seconds)
Cbc0032I Strong branching done 1036 times (17132 iterations), fathomed 11 nodes and fixed 33 variables
Cbc0035I Maximum depth 27, 328 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       1.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-59) rows, 115 (-37) columns and 1806 (-1497) elements
Clp1000I sum of infeasibilities 1.43472e-07 - average 1.51023e-09, 30 fixed columns
Coin0506I Presolve 68 (-27) rows, 84 (-31) columns and 994 (-812) elements
Clp0006I 0  Obj 52.027798 Dual inf 4.0801732 (84)
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.8170467 - largest nonzero change 1.4526681e-05 ( 0.00099891329%) - largest zero change 2.964033e-05
Clp0000I Optimal - objective value 60.895474
Clp0000I Optimal - objective value 60.895474
Coin0511I After Postsolve, objective 60.895474, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.895474
Clp0000I Optimal - objective value 60.895474
Clp0000I Optimal - objective value 60.895474
Clp0000I Optimal - objective value 60.895474
Coin0511I After Postsolve, objective 60.895474, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.89547372 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 115 columns (115 integer (115 of which binary)) and 1810 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 4.8543
Cbc0038I Pass   1: suminf.    3.96800 (31) obj. -53.9986 iterations 6
Cbc0038I Pass   2: suminf.    2.36493 (20) obj. -40.3396 iterations 11
Cbc0038I Solution found of -1.8589
Cbc0038I Rounding solution of -3.57244 is better than previous of -1.8589

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -3.57244 to -4.87539 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.0783
Cbc0038I Pass   3: suminf.    3.96800 (31) obj. -53.9986 iterations 0
Cbc0038I Pass   4: suminf.    2.09420 (18) obj. -37.7459 iterations 13
Cbc0038I Pass   5: suminf.    0.82485 (9) obj. -10.0783 iterations 10
Cbc0038I Pass   6: suminf.    0.13333 (1) obj. -18.3256 iterations 9
Cbc0038I Pass   7: suminf.    0.43260 (1) obj. -10.0783 iterations 1
Cbc0038I Pass   8: suminf.    1.13144 (11) obj. -10.0783 iterations 30
Cbc0038I Pass   9: suminf.    1.11371 (10) obj. -10.0783 iterations 13
Cbc0038I Pass  10: suminf.    0.59404 (4) obj. -10.0783 iterations 12
Cbc0038I Pass  11: suminf.    0.47010 (2) obj. -10.0783 iterations 5
Cbc0038I Pass  12: suminf.    0.47010 (2) obj. -10.0783 iterations 0
Cbc0038I Pass  13: suminf.    0.38761 (1) obj. -10.0783 iterations 4
Cbc0038I Pass  14: suminf.    0.21392 (2) obj. -14.1888 iterations 2
Cbc0038I Pass  15: suminf.    0.47010 (2) obj. -10.0783 iterations 2
Cbc0038I Pass  16: suminf.    1.70385 (8) obj. -10.0783 iterations 41
Cbc0038I Pass  17: suminf.    0.62272 (5) obj. -12.1601 iterations 10
Cbc0038I Pass  18: suminf.    1.18967 (7) obj. -10.0783 iterations 8
Cbc0038I Pass  19: suminf.    0.96027 (7) obj. -10.3058 iterations 2
Cbc0038I Pass  20: suminf.    1.41919 (6) obj. -10.0783 iterations 7
Cbc0038I Pass  21: suminf.    1.41919 (6) obj. -10.0783 iterations 0
Cbc0038I Pass  22: suminf.    1.23527 (5) obj. -10.0783 iterations 12
Cbc0038I Pass  23: suminf.    0.80156 (4) obj. -10.0783 iterations 3
Cbc0038I Pass  24: suminf.    0.68901 (4) obj. -10.0783 iterations 5
Cbc0038I Pass  25: suminf.    0.69220 (3) obj. -10.0783 iterations 4
Cbc0038I Pass  26: suminf.    0.28952 (2) obj. -12.7498 iterations 6
Cbc0038I Pass  27: suminf.    0.15193 (1) obj. -10.0783 iterations 2
Cbc0038I Pass  28: suminf.    0.14667 (1) obj. -10.1784 iterations 1
Cbc0038I Pass  29: suminf.    1.45395 (8) obj. -10.0783 iterations 17
Cbc0038I Pass  30: suminf.    1.45395 (8) obj. -10.0783 iterations 2
Cbc0038I Pass  31: suminf.    1.20516 (4) obj. -10.0783 iterations 17
Cbc0038I Pass  32: suminf.    1.20516 (4) obj. -10.0783 iterations 0
Cbc0038I Rounding solution of -8.06321 is better than previous of -4.87539

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 34 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -8.06321 to -8.83525 (0.06 seconds)
Cbc0038I Round again with cutoff of -19.4433
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.96800 (31) obj. -53.9986 iterations 0
Cbc0038I Pass  33: suminf.    1.96087 (17) obj. -21.2792 iterations 14
Cbc0038I Pass  34: suminf.    0.83109 (6) obj. -19.4433 iterations 13
Cbc0038I Pass  35: suminf.    0.60447 (6) obj. -23.7492 iterations 1
Cbc0038I Pass  36: suminf.    0.36882 (3) obj. -19.4433 iterations 9
Cbc0038I Pass  37: suminf.    0.36882 (3) obj. -19.4433 iterations 0
Cbc0038I Pass  38: suminf.    1.09443 (5) obj. -19.4433 iterations 8
Cbc0038I Pass  39: suminf.    0.50098 (3) obj. -19.4433 iterations 3
Cbc0038I Pass  40: suminf.    0.74601 (3) obj. -19.4433 iterations 3
Cbc0038I Pass  41: suminf.    0.71063 (3) obj. -19.4433 iterations 2
Cbc0038I Pass  42: suminf.    1.95753 (12) obj. -19.4433 iterations 24
Cbc0038I Pass  43: suminf.    0.66236 (7) obj. -19.4433 iterations 11
Cbc0038I Pass  44: suminf.    0.58712 (6) obj. -19.9775 iterations 2
Cbc0038I Pass  45: suminf.    0.91411 (7) obj. -19.4433 iterations 12
Cbc0038I Pass  46: suminf.    0.91411 (7) obj. -19.4433 iterations 0
Cbc0038I Pass  47: suminf.    1.85181 (6) obj. -19.4433 iterations 8
Cbc0038I Pass  48: suminf.    1.81664 (6) obj. -19.4433 iterations 1
Cbc0038I Pass  49: suminf.    1.28253 (6) obj. -19.4433 iterations 1
Cbc0038I Pass  50: suminf.    0.96604 (6) obj. -20.3928 iterations 1
Cbc0038I Pass  51: suminf.    2.15294 (6) obj. -19.4433 iterations 9
Cbc0038I Pass  52: suminf.    2.15294 (6) obj. -19.4433 iterations 0
Cbc0038I Pass  53: suminf.    1.11186 (5) obj. -19.4433 iterations 3
Cbc0038I Pass  54: suminf.    0.63865 (3) obj. -20.1824 iterations 2
Cbc0038I Pass  55: suminf.    0.52719 (3) obj. -19.4433 iterations 1
Cbc0038I Pass  56: suminf.    0.88499 (3) obj. -19.4433 iterations 4
Cbc0038I Pass  57: suminf.    2.44389 (10) obj. -19.4433 iterations 9
Cbc0038I Pass  58: suminf.    2.44389 (10) obj. -19.4433 iterations 0
Cbc0038I Pass  59: suminf.    2.15294 (6) obj. -19.4433 iterations 6
Cbc0038I Pass  60: suminf.    2.15294 (6) obj. -19.4433 iterations 0
Cbc0038I Pass  61: suminf.    1.11186 (5) obj. -19.4433 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.83525 - took 0.05 seconds
Cbc0012I Integer solution of -8.835251 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 19 rows 28 columns
Cbc0031I 47 added rows had average density of 35.680851
Cbc0013I At root node, 47 cuts changed objective from -56.903482 to -14.636301 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9170 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 889 row cuts average 103.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 473 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1064 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 319 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.661 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.835251 best solution, best possible -14.636301 (2.13 seconds)
Cbc0012I Integer solution of -9.5676 found by rounding after 4161 iterations and 16 nodes (2.47 seconds)
Cbc0016I Integer solution of -9.66059 found by strong branching after 4342 iterations and 23 nodes (2.48 seconds)
Cbc0012I Integer solution of -9.715921 found by rounding after 4513 iterations and 35 nodes (2.53 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 2 rows 8 columns
Cbc0012I Integer solution of -10.152661 found by RINS after 4677 iterations and 41 nodes (2.57 seconds)
Cbc0012I Integer solution of -10.442101 found by rounding after 5055 iterations and 58 nodes (2.63 seconds)
Cbc0016I Integer solution of -10.569671 found by strong branching after 5209 iterations and 62 nodes (2.65 seconds)
Cbc0012I Integer solution of -11.083001 found by rounding after 5235 iterations and 65 nodes (2.66 seconds)
Cbc0012I Integer solution of -11.624081 found by rounding after 5255 iterations and 66 nodes (2.66 seconds)
Cbc0012I Integer solution of -12.624081 found by rounding after 5732 iterations and 82 nodes (2.71 seconds)
Cbc0001I Search completed - best objective -12.624081, took 6102 iterations and 93 nodes (2.75 seconds)
Cbc0032I Strong branching done 928 times (10096 iterations), fathomed 11 nodes and fixed 27 variables
Cbc0035I Maximum depth 19, 367 variables fixed on reduced cost
Total time (CPU seconds):       2.10   (Wallclock seconds):       2.77

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.54141e-05 - average 1.1857e-07, 7 fixed columns
Coin0506I Presolve 114 (-16) rows, 68 (-8) columns and 356 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.88443 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 37.432105
Clp0000I Optimal - objective value 37.432105
Coin0511I After Postsolve, objective 37.432105, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.432105
Clp0000I Optimal - objective value 37.432105
Clp0000I Optimal - objective value 37.432105
Coin0511I After Postsolve, objective 37.432105, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.43210475 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.6254
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.4381 iterations 55
Cbc0038I Solution found of 10.4381
Cbc0038I Relaxing continuous gives 10.4381
Cbc0038I Rounding solution of 6.35627 is better than previous of 10.4381

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 6.35627 to -9.88788 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.6424
Cbc0038I Pass   2: suminf.    3.16610 (11) obj. -12.6424 iterations 14
Cbc0038I Pass   3: suminf.    3.05561 (8) obj. -12.6424 iterations 8
Cbc0038I Pass   4: suminf.    1.40619 (5) obj. -12.6424 iterations 9
Cbc0038I Pass   5: suminf.    0.71774 (4) obj. -12.6424 iterations 3
Cbc0038I Pass   6: suminf.    1.29200 (5) obj. -12.6424 iterations 7
Cbc0038I Pass   7: suminf.    1.13801 (4) obj. -12.6424 iterations 3
Cbc0038I Pass   8: suminf.    1.10571 (5) obj. -12.6424 iterations 6
Cbc0038I Pass   9: suminf.    1.06812 (4) obj. -12.6424 iterations 1
Cbc0038I Pass  10: suminf.    1.28008 (5) obj. -12.6424 iterations 7
Cbc0038I Pass  11: suminf.    1.32329 (4) obj. -12.6424 iterations 19
Cbc0038I Pass  12: suminf.    0.86070 (4) obj. -12.6424 iterations 7
Cbc0038I Pass  13: suminf.    1.34301 (5) obj. -12.6424 iterations 4
Cbc0038I Pass  14: suminf.    0.89367 (4) obj. -12.6424 iterations 1
Cbc0038I Pass  15: suminf.    0.33162 (2) obj. -12.6424 iterations 2
Cbc0038I Pass  16: suminf.    0.54863 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  17: suminf.    0.54863 (4) obj. -12.6424 iterations 0
Cbc0038I Pass  18: suminf.    0.90590 (4) obj. -12.6424 iterations 4
Cbc0038I Pass  19: suminf.    0.87239 (3) obj. -12.6424 iterations 1
Cbc0038I Pass  20: suminf.    0.64714 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  21: suminf.    0.60483 (3) obj. -12.6424 iterations 1
Cbc0038I Pass  22: suminf.    1.42938 (8) obj. -12.6424 iterations 18
Cbc0038I Pass  23: suminf.    1.18130 (5) obj. -12.6424 iterations 10
Cbc0038I Pass  24: suminf.    1.38489 (5) obj. -12.6424 iterations 17
Cbc0038I Pass  25: suminf.    0.40349 (2) obj. -12.6424 iterations 5
Cbc0038I Pass  26: suminf.    0.58263 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  27: suminf.    0.57820 (3) obj. -12.6424 iterations 1
Cbc0038I Pass  28: suminf.    0.85320 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  29: suminf.    0.85216 (3) obj. -12.6424 iterations 1
Cbc0038I Pass  30: suminf.    0.58263 (4) obj. -12.6424 iterations 3
Cbc0038I Pass  31: suminf.    4.45958 (13) obj. -12.6424 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -9.88788 to -12.2449 (0.11 seconds)
Cbc0038I Round again with cutoff of -17.6003
Cbc0038I Pass  31: suminf.    4.15489 (14) obj. -17.6003 iterations 2
Cbc0038I Pass  32: suminf.    4.04372 (12) obj. -17.6003 iterations 1
Cbc0038I Pass  33: suminf.    4.04372 (12) obj. -17.6003 iterations 1
Cbc0038I Pass  34: suminf.    1.41190 (7) obj. -17.6003 iterations 9
Cbc0038I Pass  35: suminf.    3.12524 (8) obj. -17.6003 iterations 12
Cbc0038I Pass  36: suminf.    1.05499 (5) obj. -17.6003 iterations 7
Cbc0038I Pass  37: suminf.    0.97577 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  38: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  39: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  40: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  41: suminf.    1.22272 (6) obj. -17.6003 iterations 5
Cbc0038I Pass  42: suminf.    0.97577 (4) obj. -17.6003 iterations 2
Cbc0038I Pass  43: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  44: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  45: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  46: suminf.    1.22272 (6) obj. -17.6003 iterations 5
Cbc0038I Pass  47: suminf.    0.97577 (4) obj. -17.6003 iterations 2
Cbc0038I Pass  48: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  49: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  50: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  51: suminf.    1.22272 (6) obj. -17.6003 iterations 5
Cbc0038I Pass  52: suminf.    0.97577 (4) obj. -17.6003 iterations 2
Cbc0038I Pass  53: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  54: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  55: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  56: suminf.    1.22272 (6) obj. -17.6003 iterations 5
Cbc0038I Pass  57: suminf.    0.97577 (4) obj. -17.6003 iterations 2
Cbc0038I Pass  58: suminf.    1.40244 (5) obj. -17.6003 iterations 3
Cbc0038I Pass  59: suminf.    1.24032 (4) obj. -17.6003 iterations 1
Cbc0038I Pass  60: suminf.    0.81871 (4) obj. -17.6003 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -12.2449 - took 0.12 seconds
Cbc0012I Integer solution of -12.244871 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 77 rows 47 columns
Cbc0031I 31 added rows had average density of 48.16129
Cbc0013I At root node, 31 cuts changed objective from -37.432105 to -29.542344 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15984 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2216 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.244871 best solution, best possible -29.542344 (1.15 seconds)
Cbc0012I Integer solution of -12.624081 found by rounding after 9235 iterations and 30 nodes (1.25 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 98 rows 60 columns
Cbc0038I Full problem 130 rows 76 columns, reduced to 51 rows 37 columns
Cbc0001I Search completed - best objective -12.624081, took 11777 iterations and 102 nodes (1.67 seconds)
Cbc0032I Strong branching done 1036 times (17132 iterations), fathomed 11 nodes and fixed 33 variables
Cbc0035I Maximum depth 27, 328 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       1.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 115 (-38) columns and 1806 (-1498) elements
Clp1000I sum of infeasibilities 1.43472e-07 - average 1.51023e-09, 30 fixed columns
Coin0506I Presolve 68 (-27) rows, 84 (-31) columns and 994 (-812) elements
Clp0006I 0  Obj 52.027798 Dual inf 4.0801732 (84)
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.8170467 - largest nonzero change 1.4526681e-05 ( 0.00099891329%) - largest zero change 2.964033e-05
Clp0000I Optimal - objective value 60.895474
Clp0000I Optimal - objective value 60.895474
Coin0511I After Postsolve, objective 60.895474, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.895474
Clp0000I Optimal - objective value 60.895474
Clp0000I Optimal - objective value 60.895474
Clp0000I Optimal - objective value 60.895474
Coin0511I After Postsolve, objective 60.895474, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.89547372 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 115 columns (115 integer (115 of which binary)) and 1810 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 4.8543
Cbc0038I Pass   1: suminf.    3.96800 (31) obj. -53.9986 iterations 6
Cbc0038I Pass   2: suminf.    2.36493 (20) obj. -40.3396 iterations 11
Cbc0038I Solution found of -1.8589
Cbc0038I Rounding solution of -3.57244 is better than previous of -1.8589

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -3.57244 to -4.87539 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.0783
Cbc0038I Pass   3: suminf.    3.96800 (31) obj. -53.9986 iterations 0
Cbc0038I Pass   4: suminf.    2.09420 (18) obj. -37.7459 iterations 13
Cbc0038I Pass   5: suminf.    0.82485 (9) obj. -10.0783 iterations 10
Cbc0038I Pass   6: suminf.    0.13333 (1) obj. -18.3256 iterations 9
Cbc0038I Pass   7: suminf.    0.43260 (1) obj. -10.0783 iterations 1
Cbc0038I Pass   8: suminf.    1.13144 (11) obj. -10.0783 iterations 30
Cbc0038I Pass   9: suminf.    1.11371 (10) obj. -10.0783 iterations 13
Cbc0038I Pass  10: suminf.    0.59404 (4) obj. -10.0783 iterations 12
Cbc0038I Pass  11: suminf.    0.47010 (2) obj. -10.0783 iterations 5
Cbc0038I Pass  12: suminf.    0.47010 (2) obj. -10.0783 iterations 0
Cbc0038I Pass  13: suminf.    0.38761 (1) obj. -10.0783 iterations 4
Cbc0038I Pass  14: suminf.    0.21392 (2) obj. -14.1888 iterations 2
Cbc0038I Pass  15: suminf.    0.47010 (2) obj. -10.0783 iterations 2
Cbc0038I Pass  16: suminf.    1.70385 (8) obj. -10.0783 iterations 41
Cbc0038I Pass  17: suminf.    0.62272 (5) obj. -12.1601 iterations 10
Cbc0038I Pass  18: suminf.    1.18967 (7) obj. -10.0783 iterations 8
Cbc0038I Pass  19: suminf.    0.96027 (7) obj. -10.3058 iterations 2
Cbc0038I Pass  20: suminf.    1.41919 (6) obj. -10.0783 iterations 7
Cbc0038I Pass  21: suminf.    1.41919 (6) obj. -10.0783 iterations 0
Cbc0038I Pass  22: suminf.    1.23527 (5) obj. -10.0783 iterations 12
Cbc0038I Pass  23: suminf.    0.80156 (4) obj. -10.0783 iterations 3
Cbc0038I Pass  24: suminf.    0.68901 (4) obj. -10.0783 iterations 5
Cbc0038I Pass  25: suminf.    0.69220 (3) obj. -10.0783 iterations 4
Cbc0038I Pass  26: suminf.    0.28952 (2) obj. -12.7498 iterations 6
Cbc0038I Pass  27: suminf.    0.15193 (1) obj. -10.0783 iterations 2
Cbc0038I Pass  28: suminf.    0.14667 (1) obj. -10.1784 iterations 1
Cbc0038I Pass  29: suminf.    1.45395 (8) obj. -10.0783 iterations 17
Cbc0038I Pass  30: suminf.    1.45395 (8) obj. -10.0783 iterations 2
Cbc0038I Pass  31: suminf.    1.20516 (4) obj. -10.0783 iterations 17
Cbc0038I Pass  32: suminf.    1.20516 (4) obj. -10.0783 iterations 0
Cbc0038I Rounding solution of -8.06321 is better than previous of -4.87539

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 34 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -8.06321 to -8.83525 (0.09 seconds)
Cbc0038I Round again with cutoff of -19.4433
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.96800 (31) obj. -53.9986 iterations 0
Cbc0038I Pass  33: suminf.    1.96087 (17) obj. -21.2792 iterations 14
Cbc0038I Pass  34: suminf.    0.83109 (6) obj. -19.4433 iterations 13
Cbc0038I Pass  35: suminf.    0.60447 (6) obj. -23.7492 iterations 1
Cbc0038I Pass  36: suminf.    0.36882 (3) obj. -19.4433 iterations 9
Cbc0038I Pass  37: suminf.    0.36882 (3) obj. -19.4433 iterations 0
Cbc0038I Pass  38: suminf.    1.09443 (5) obj. -19.4433 iterations 8
Cbc0038I Pass  39: suminf.    0.50098 (3) obj. -19.4433 iterations 3
Cbc0038I Pass  40: suminf.    0.74601 (3) obj. -19.4433 iterations 3
Cbc0038I Pass  41: suminf.    0.71063 (3) obj. -19.4433 iterations 2
Cbc0038I Pass  42: suminf.    1.95753 (12) obj. -19.4433 iterations 24
Cbc0038I Pass  43: suminf.    0.66236 (7) obj. -19.4433 iterations 11
Cbc0038I Pass  44: suminf.    0.58712 (6) obj. -19.9775 iterations 2
Cbc0038I Pass  45: suminf.    0.91411 (7) obj. -19.4433 iterations 12
Cbc0038I Pass  46: suminf.    0.91411 (7) obj. -19.4433 iterations 0
Cbc0038I Pass  47: suminf.    1.85181 (6) obj. -19.4433 iterations 8
Cbc0038I Pass  48: suminf.    1.81664 (6) obj. -19.4433 iterations 1
Cbc0038I Pass  49: suminf.    1.28253 (6) obj. -19.4433 iterations 1
Cbc0038I Pass  50: suminf.    0.96604 (6) obj. -20.3928 iterations 1
Cbc0038I Pass  51: suminf.    2.15294 (6) obj. -19.4433 iterations 9
Cbc0038I Pass  52: suminf.    2.15294 (6) obj. -19.4433 iterations 0
Cbc0038I Pass  53: suminf.    1.11186 (5) obj. -19.4433 iterations 3
Cbc0038I Pass  54: suminf.    0.63865 (3) obj. -20.1824 iterations 2
Cbc0038I Pass  55: suminf.    0.52719 (3) obj. -19.4433 iterations 1
Cbc0038I Pass  56: suminf.    0.88499 (3) obj. -19.4433 iterations 4
Cbc0038I Pass  57: suminf.    2.44389 (10) obj. -19.4433 iterations 9
Cbc0038I Pass  58: suminf.    2.44389 (10) obj. -19.4433 iterations 0
Cbc0038I Pass  59: suminf.    2.15294 (6) obj. -19.4433 iterations 6
Cbc0038I Pass  60: suminf.    2.15294 (6) obj. -19.4433 iterations 0
Cbc0038I Pass  61: suminf.    1.11186 (5) obj. -19.4433 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -8.83525 - took 0.07 seconds
Cbc0012I Integer solution of -8.835251 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 19 rows 28 columns
Cbc0031I 47 added rows had average density of 35.680851
Cbc0013I At root node, 47 cuts changed objective from -56.903482 to -14.636301 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9170 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 889 row cuts average 103.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 473 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1064 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 319 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.835251 best solution, best possible -14.636301 (2.31 seconds)
Cbc0012I Integer solution of -9.5676 found by rounding after 4161 iterations and 16 nodes (2.68 seconds)
Cbc0016I Integer solution of -9.66059 found by strong branching after 4342 iterations and 23 nodes (2.69 seconds)
Cbc0012I Integer solution of -9.715921 found by rounding after 4513 iterations and 35 nodes (2.74 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 2 rows 8 columns
Cbc0012I Integer solution of -10.152661 found by RINS after 4677 iterations and 41 nodes (2.79 seconds)
Cbc0012I Integer solution of -10.442101 found by rounding after 5055 iterations and 58 nodes (2.86 seconds)
Cbc0016I Integer solution of -10.569671 found by strong branching after 5209 iterations and 62 nodes (2.88 seconds)
Cbc0012I Integer solution of -11.083001 found by rounding after 5235 iterations and 65 nodes (2.89 seconds)
Cbc0012I Integer solution of -11.624081 found by rounding after 5255 iterations and 66 nodes (2.89 seconds)
Cbc0012I Integer solution of -12.624081 found by rounding after 5732 iterations and 82 nodes (2.95 seconds)
Cbc0001I Search completed - best objective -12.624081, took 6102 iterations and 93 nodes (2.99 seconds)
Cbc0032I Strong branching done 928 times (10096 iterations), fathomed 11 nodes and fixed 27 variables
Cbc0035I Maximum depth 19, 367 variables fixed on reduced cost
Total time (CPU seconds):       2.23   (Wallclock seconds):       3.00

