Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-8) rows, 54 (-2) columns and 255 (-14) elements
Clp1000I sum of infeasibilities 0.00340026 - average 3.33359e-05, 9 fixed columns
Coin0506I Presolve 75 (-27) rows, 44 (-10) columns and 191 (-64) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 2121.905
Clp0000I Optimal - objective value 2121.905
Coin0511I After Postsolve, objective 2121.905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4012364 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 2121.905
Clp0000I Optimal - objective value 2121.905
Clp0000I Optimal - objective value 2121.905
Coin0511I After Postsolve, objective 2121.905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2121.904973 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 54 columns (53 integer (53 of which binary)) and 255 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 13.3825
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -95.8654 iterations 46
Cbc0038I Solution found of -95.8654
Cbc0038I Relaxing continuous gives -95.8654
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 54 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -95.8654 to -270.034 (0.03 seconds)
Cbc0038I Round again with cutoff of -454.77
Cbc0038I Pass   2: suminf.    0.57986 (8) obj. -454.77 iterations 6
Cbc0038I Pass   3: suminf.    0.33093 (6) obj. -454.77 iterations 4
Cbc0038I Pass   4: suminf.    1.89041 (11) obj. -454.77 iterations 19
Cbc0038I Pass   5: suminf.    3.34853 (14) obj. -454.77 iterations 19
Cbc0038I Pass   6: suminf.    2.84242 (12) obj. -454.77 iterations 6
Cbc0038I Pass   7: suminf.    2.94592 (13) obj. -454.77 iterations 17
Cbc0038I Pass   8: suminf.    2.36446 (18) obj. -454.77 iterations 3
Cbc0038I Pass   9: suminf.    2.26898 (11) obj. -454.77 iterations 6
Cbc0038I Pass  10: suminf.    4.25355 (21) obj. -454.77 iterations 15
Cbc0038I Pass  11: suminf.    4.09577 (18) obj. -454.77 iterations 3
Cbc0038I Pass  12: suminf.    3.73035 (16) obj. -454.77 iterations 1
Cbc0038I Pass  13: suminf.    3.64002 (16) obj. -454.77 iterations 1
Cbc0038I Pass  14: suminf.    3.55209 (11) obj. -454.77 iterations 15
Cbc0038I Pass  15: suminf.    3.21707 (12) obj. -454.77 iterations 3
Cbc0038I Pass  16: suminf.    4.82015 (17) obj. -454.77 iterations 15
Cbc0038I Pass  17: suminf.    4.09577 (18) obj. -454.77 iterations 4
Cbc0038I Pass  18: suminf.    3.73035 (16) obj. -454.77 iterations 1
Cbc0038I Pass  19: suminf.    3.64002 (16) obj. -454.77 iterations 1
Cbc0038I Pass  20: suminf.    5.71140 (17) obj. -454.77 iterations 14
Cbc0038I Pass  21: suminf.    3.07937 (16) obj. -454.77 iterations 12
Cbc0038I Pass  22: suminf.    2.91332 (14) obj. -454.77 iterations 3
Cbc0038I Pass  23: suminf.    5.59818 (16) obj. -454.77 iterations 14
Cbc0038I Pass  24: suminf.    3.25729 (13) obj. -454.77 iterations 11
Cbc0038I Pass  25: suminf.    3.09766 (11) obj. -454.77 iterations 1
Cbc0038I Pass  26: suminf.    2.64194 (10) obj. -454.77 iterations 4
Cbc0038I Pass  27: suminf.    4.15431 (19) obj. -454.77 iterations 15
Cbc0038I Pass  28: suminf.    3.73035 (16) obj. -454.77 iterations 3
Cbc0038I Pass  29: suminf.    3.64002 (16) obj. -454.77 iterations 1
Cbc0038I Pass  30: suminf.    5.71140 (17) obj. -454.77 iterations 14
Cbc0038I Pass  31: suminf.    3.07937 (16) obj. -454.77 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 54 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -270.034 to -296.256 (0.06 seconds)
Cbc0038I Round again with cutoff of -787.296
Cbc0038I Pass  31: suminf.    1.18026 (14) obj. -787.296 iterations 8
Cbc0038I Pass  32: suminf.    1.18026 (14) obj. -787.296 iterations 0
Cbc0038I Pass  33: suminf.    2.58277 (18) obj. -787.296 iterations 31
Cbc0038I Pass  34: suminf.    2.50025 (16) obj. -787.296 iterations 2
Cbc0038I Pass  35: suminf.    4.54984 (16) obj. -787.296 iterations 17
Cbc0038I Pass  36: suminf.    4.28901 (15) obj. -787.296 iterations 5
Cbc0038I Pass  37: suminf.    6.35086 (18) obj. -787.296 iterations 14
Cbc0038I Pass  38: suminf.    5.30887 (17) obj. -787.296 iterations 4
Cbc0038I Pass  39: suminf.    4.35496 (15) obj. -787.296 iterations 5
Cbc0038I Pass  40: suminf.    3.92364 (13) obj. -787.296 iterations 2
Cbc0038I Pass  41: suminf.    5.33366 (17) obj. -787.296 iterations 11
Cbc0038I Pass  42: suminf.    4.28682 (13) obj. -787.296 iterations 8
Cbc0038I Pass  43: suminf.    3.89177 (13) obj. -787.296 iterations 3
Cbc0038I Pass  44: suminf.    5.92374 (19) obj. -787.296 iterations 16
Cbc0038I Pass  45: suminf.    5.22091 (17) obj. -787.296 iterations 4
Cbc0038I Pass  46: suminf.    4.50363 (15) obj. -787.296 iterations 4
Cbc0038I Pass  47: suminf.    3.92364 (13) obj. -787.296 iterations 8
Cbc0038I Pass  48: suminf.    5.98012 (19) obj. -787.296 iterations 14
Cbc0038I Pass  49: suminf.    8.05018 (23) obj. -787.296 iterations 18
Cbc0038I Pass  50: suminf.    5.11141 (18) obj. -787.296 iterations 19
Cbc0038I Pass  51: suminf.    5.11141 (18) obj. -787.296 iterations 0
Cbc0038I Pass  52: suminf.    5.80207 (18) obj. -787.296 iterations 23
Cbc0038I Pass  53: suminf.    4.91950 (16) obj. -787.296 iterations 5
Cbc0038I Pass  54: suminf.    4.43714 (15) obj. -787.296 iterations 6
Cbc0038I Pass  55: suminf.    6.48838 (19) obj. -787.296 iterations 17
Cbc0038I Pass  56: suminf.    5.40227 (17) obj. -787.296 iterations 6
Cbc0038I Pass  57: suminf.    4.35496 (15) obj. -787.296 iterations 6
Cbc0038I Pass  58: suminf.    3.92364 (13) obj. -787.296 iterations 2
Cbc0038I Pass  59: suminf.    5.98012 (19) obj. -787.296 iterations 14
Cbc0038I Pass  60: suminf.    5.22091 (17) obj. -787.296 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 54 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -296.256 - took 0.10 seconds
Cbc0012I Integer solution of -296.25563 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 102 rows 54 columns, reduced to 69 rows 41 columns
Cbc0031I 27 added rows had average density of 19.814815
Cbc0013I At root node, 27 cuts changed objective from -2117.3974 to -567.8655 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9434 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2168 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 336 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 39.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 8 nodes, 1 on tree, -296.25563 best solution, best possible -466.14235 (0.70 seconds)
Cbc0001I Search completed - best objective -296.2556289999993, took 5304 iterations and 10 nodes (0.70 seconds)
Cbc0032I Strong branching done 226 times (4310 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-32) rows, 81 (-27) columns and 880 (-820) elements
Clp1000I sum of infeasibilities 3.58705e-08 - average 4.65851e-10, 75 fixed columns
Coin0506I Presolve 0 (-77) rows, 0 (-81) columns and 0 (-880) elements
Clp0000I Optimal - objective value -1641.3151
Clp0000I Optimal - objective value -1641.3151
Coin0511I After Postsolve, objective -1641.3151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1641.3151 Dual inf 5317.6476 (44)
Clp0014I Perturbing problem by 0.001% of 3.080107 - largest nonzero change 9.9829434e-05 ( 0.019727394%) - largest zero change 0
Clp0000I Optimal - objective value 2315.6628
Clp0000I Optimal - objective value 2315.6628
Clp0000I Optimal - objective value 2315.6628
Coin0511I After Postsolve, objective 2315.6628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2315.662822 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 81 columns (81 integer (81 of which binary)) and 886 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.302%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.21882
Cbc0038I Pass   1: suminf.    3.58975 (13) obj. -1211.07 iterations 14
Cbc0038I Solution found of 129.796
Cbc0038I Rounding solution of -90.2319 is better than previous of 129.796

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -310.4
Cbc0038I Pass   2: suminf.    3.58975 (13) obj. -1211.07 iterations 0
Cbc0038I Pass   3: suminf.    0.43232 (2) obj. -310.4 iterations 15
Cbc0038I Pass   4: suminf.    0.79403 (2) obj. -599.764 iterations 1
Cbc0038I Pass   5: suminf.    2.14609 (8) obj. -310.4 iterations 19
Cbc0038I Pass   6: suminf.    2.14609 (8) obj. -310.4 iterations 3
Cbc0038I Pass   7: suminf.    2.04465 (6) obj. -310.4 iterations 5
Cbc0038I Pass   8: suminf.    2.04465 (6) obj. -310.4 iterations 0
Cbc0038I Pass   9: suminf.    1.66773 (5) obj. -310.4 iterations 4
Cbc0038I Pass  10: suminf.    1.66773 (5) obj. -310.4 iterations 0
Cbc0038I Pass  11: suminf.    1.44094 (4) obj. -310.4 iterations 2
Cbc0038I Pass  12: suminf.    1.37974 (4) obj. -310.4 iterations 1
Cbc0038I Pass  13: suminf.    2.34005 (8) obj. -310.4 iterations 14
Cbc0038I Pass  14: suminf.    2.34005 (8) obj. -310.4 iterations 6
Cbc0038I Pass  15: suminf.    2.34005 (8) obj. -310.4 iterations 0
Cbc0038I Pass  16: suminf.    1.87479 (5) obj. -310.4 iterations 6
Cbc0038I Pass  17: suminf.    1.87479 (5) obj. -310.4 iterations 0
Cbc0038I Pass  18: suminf.    1.53743 (5) obj. -310.4 iterations 1
Cbc0038I Pass  19: suminf.    1.53743 (5) obj. -310.4 iterations 0
Cbc0038I Pass  20: suminf.    1.87479 (5) obj. -310.4 iterations 2
Cbc0038I Pass  21: suminf.    2.39932 (9) obj. -310.4 iterations 28
Cbc0038I Pass  22: suminf.    2.39932 (9) obj. -310.4 iterations 6
Cbc0038I Pass  23: suminf.    2.27522 (6) obj. -310.4 iterations 6
Cbc0038I Pass  24: suminf.    1.73692 (5) obj. -310.4 iterations 2
Cbc0038I Pass  25: suminf.    2.01893 (5) obj. -310.4 iterations 3
Cbc0038I Pass  26: suminf.    2.01893 (5) obj. -310.4 iterations 0
Cbc0038I Pass  27: suminf.    1.72929 (5) obj. -310.4 iterations 1
Cbc0038I Pass  28: suminf.    1.72929 (5) obj. -310.4 iterations 0
Cbc0038I Pass  29: suminf.    2.01893 (5) obj. -310.4 iterations 2
Cbc0038I Pass  30: suminf.    1.94928 (6) obj. -310.4 iterations 10
Cbc0038I Pass  31: suminf.    1.94928 (6) obj. -310.4 iterations 4
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 81 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -90.2319 to -101.259 (0.04 seconds)
Cbc0038I Round again with cutoff of -706.702
Cbc0038I Pass  31: suminf.    3.58975 (13) obj. -1211.07 iterations 0
Cbc0038I Pass  32: suminf.    1.01916 (3) obj. -706.702 iterations 15
Cbc0038I Pass  33: suminf.    1.04403 (3) obj. -956.014 iterations 1
Cbc0038I Pass  34: suminf.    0.73239 (3) obj. -706.702 iterations 1
Cbc0038I Pass  35: suminf.    1.01916 (3) obj. -706.702 iterations 2
Cbc0038I Pass  36: suminf.    1.57882 (5) obj. -706.702 iterations 16
Cbc0038I Pass  37: suminf.    1.57882 (5) obj. -706.702 iterations 7
Cbc0038I Pass  38: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  39: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  40: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Pass  41: suminf.    1.57882 (5) obj. -706.702 iterations 2
Cbc0038I Pass  42: suminf.    1.57882 (5) obj. -706.702 iterations 0
Cbc0038I Pass  43: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  44: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  45: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Pass  46: suminf.    1.57882 (5) obj. -706.702 iterations 2
Cbc0038I Pass  47: suminf.    1.57882 (5) obj. -706.702 iterations 0
Cbc0038I Pass  48: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  49: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  50: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Pass  51: suminf.    1.57882 (5) obj. -706.702 iterations 2
Cbc0038I Pass  52: suminf.    1.57882 (5) obj. -706.702 iterations 0
Cbc0038I Pass  53: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  54: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  55: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Pass  56: suminf.    1.57882 (5) obj. -706.702 iterations 2
Cbc0038I Pass  57: suminf.    1.57882 (5) obj. -706.702 iterations 0
Cbc0038I Pass  58: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  59: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  60: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Rounding solution of -110.745 is better than previous of -101.259

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -1182.26
Cbc0038I Pass  60: suminf.    3.58975 (13) obj. -1211.07 iterations 0
Cbc0038I Pass  61: suminf.    1.58240 (5) obj. -1182.26 iterations 15
Cbc0038I Pass  62: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  63: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  64: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  65: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  66: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  67: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  68: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  69: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  70: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  71: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  72: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  73: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  74: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  75: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  76: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  77: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  78: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  79: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  80: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  81: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  82: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  83: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  84: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  85: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  86: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  87: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  88: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  89: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -110.745 - took 0.03 seconds
Cbc0012I Integer solution of -110.74463 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 77 rows 81 columns, reduced to 3 rows 8 columns
Cbc0012I Integer solution of -146.85973 found by RINS after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 49 added rows had average density of 11.469388
Cbc0013I At root node, 49 cuts changed objective from -2291.9113 to -301.89981 in 83 passes
Cbc0014I Cut generator 0 (Probing) - 1940 row cuts average 9.7 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 276 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 256 row cuts average 39.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 41.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 214 row cuts average 53.5 elements, 0 column cuts (0 active)  in 0.611 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -146.85973 best solution, best possible -301.8998 (1.41 seconds)
Cbc0016I Integer solution of -295.18303 found by strong branching after 1030 iterations and 1 nodes (1.47 seconds)
Cbc0004I Integer solution of -296.25563 found after 1083 iterations and 2 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -296.2556289999993, took 1083 iterations and 2 nodes (1.53 seconds)
Cbc0032I Strong branching done 20 times (191 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.55

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-8) rows, 54 (-2) columns and 255 (-14) elements
Clp1000I sum of infeasibilities 0.00340026 - average 3.33359e-05, 9 fixed columns
Coin0506I Presolve 75 (-27) rows, 44 (-10) columns and 191 (-64) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 2121.905
Clp0000I Optimal - objective value 2121.905
Coin0511I After Postsolve, objective 2121.905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4012364 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 2121.905
Clp0000I Optimal - objective value 2121.905
Clp0000I Optimal - objective value 2121.905
Coin0511I After Postsolve, objective 2121.905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2121.904973 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 54 columns (53 integer (53 of which binary)) and 255 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 13.3825
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -95.8654 iterations 46
Cbc0038I Solution found of -95.8654
Cbc0038I Relaxing continuous gives -95.8654
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 54 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -95.8654 to -270.034 (0.03 seconds)
Cbc0038I Round again with cutoff of -454.77
Cbc0038I Pass   2: suminf.    0.57986 (8) obj. -454.77 iterations 6
Cbc0038I Pass   3: suminf.    0.33093 (6) obj. -454.77 iterations 4
Cbc0038I Pass   4: suminf.    1.89041 (11) obj. -454.77 iterations 19
Cbc0038I Pass   5: suminf.    3.34853 (14) obj. -454.77 iterations 19
Cbc0038I Pass   6: suminf.    2.84242 (12) obj. -454.77 iterations 6
Cbc0038I Pass   7: suminf.    2.94592 (13) obj. -454.77 iterations 17
Cbc0038I Pass   8: suminf.    2.36446 (18) obj. -454.77 iterations 3
Cbc0038I Pass   9: suminf.    2.26898 (11) obj. -454.77 iterations 6
Cbc0038I Pass  10: suminf.    4.25355 (21) obj. -454.77 iterations 15
Cbc0038I Pass  11: suminf.    4.09577 (18) obj. -454.77 iterations 3
Cbc0038I Pass  12: suminf.    3.73035 (16) obj. -454.77 iterations 1
Cbc0038I Pass  13: suminf.    3.64002 (16) obj. -454.77 iterations 1
Cbc0038I Pass  14: suminf.    3.55209 (11) obj. -454.77 iterations 15
Cbc0038I Pass  15: suminf.    3.21707 (12) obj. -454.77 iterations 3
Cbc0038I Pass  16: suminf.    4.82015 (17) obj. -454.77 iterations 15
Cbc0038I Pass  17: suminf.    4.09577 (18) obj. -454.77 iterations 4
Cbc0038I Pass  18: suminf.    3.73035 (16) obj. -454.77 iterations 1
Cbc0038I Pass  19: suminf.    3.64002 (16) obj. -454.77 iterations 1
Cbc0038I Pass  20: suminf.    5.71140 (17) obj. -454.77 iterations 14
Cbc0038I Pass  21: suminf.    3.07937 (16) obj. -454.77 iterations 12
Cbc0038I Pass  22: suminf.    2.91332 (14) obj. -454.77 iterations 3
Cbc0038I Pass  23: suminf.    5.59818 (16) obj. -454.77 iterations 14
Cbc0038I Pass  24: suminf.    3.25729 (13) obj. -454.77 iterations 11
Cbc0038I Pass  25: suminf.    3.09766 (11) obj. -454.77 iterations 1
Cbc0038I Pass  26: suminf.    2.64194 (10) obj. -454.77 iterations 4
Cbc0038I Pass  27: suminf.    4.15431 (19) obj. -454.77 iterations 15
Cbc0038I Pass  28: suminf.    3.73035 (16) obj. -454.77 iterations 3
Cbc0038I Pass  29: suminf.    3.64002 (16) obj. -454.77 iterations 1
Cbc0038I Pass  30: suminf.    5.71140 (17) obj. -454.77 iterations 14
Cbc0038I Pass  31: suminf.    3.07937 (16) obj. -454.77 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 54 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -270.034 to -296.256 (0.06 seconds)
Cbc0038I Round again with cutoff of -787.296
Cbc0038I Pass  31: suminf.    1.18026 (14) obj. -787.296 iterations 8
Cbc0038I Pass  32: suminf.    1.18026 (14) obj. -787.296 iterations 0
Cbc0038I Pass  33: suminf.    2.58277 (18) obj. -787.296 iterations 31
Cbc0038I Pass  34: suminf.    2.50025 (16) obj. -787.296 iterations 2
Cbc0038I Pass  35: suminf.    4.54984 (16) obj. -787.296 iterations 17
Cbc0038I Pass  36: suminf.    4.28901 (15) obj. -787.296 iterations 5
Cbc0038I Pass  37: suminf.    6.35086 (18) obj. -787.296 iterations 14
Cbc0038I Pass  38: suminf.    5.30887 (17) obj. -787.296 iterations 4
Cbc0038I Pass  39: suminf.    4.35496 (15) obj. -787.296 iterations 5
Cbc0038I Pass  40: suminf.    3.92364 (13) obj. -787.296 iterations 2
Cbc0038I Pass  41: suminf.    5.33366 (17) obj. -787.296 iterations 11
Cbc0038I Pass  42: suminf.    4.28682 (13) obj. -787.296 iterations 8
Cbc0038I Pass  43: suminf.    3.89177 (13) obj. -787.296 iterations 3
Cbc0038I Pass  44: suminf.    5.92374 (19) obj. -787.296 iterations 16
Cbc0038I Pass  45: suminf.    5.22091 (17) obj. -787.296 iterations 4
Cbc0038I Pass  46: suminf.    4.50363 (15) obj. -787.296 iterations 4
Cbc0038I Pass  47: suminf.    3.92364 (13) obj. -787.296 iterations 8
Cbc0038I Pass  48: suminf.    5.98012 (19) obj. -787.296 iterations 14
Cbc0038I Pass  49: suminf.    8.05018 (23) obj. -787.296 iterations 18
Cbc0038I Pass  50: suminf.    5.11141 (18) obj. -787.296 iterations 19
Cbc0038I Pass  51: suminf.    5.11141 (18) obj. -787.296 iterations 0
Cbc0038I Pass  52: suminf.    5.80207 (18) obj. -787.296 iterations 23
Cbc0038I Pass  53: suminf.    4.91950 (16) obj. -787.296 iterations 5
Cbc0038I Pass  54: suminf.    4.43714 (15) obj. -787.296 iterations 6
Cbc0038I Pass  55: suminf.    6.48838 (19) obj. -787.296 iterations 17
Cbc0038I Pass  56: suminf.    5.40227 (17) obj. -787.296 iterations 6
Cbc0038I Pass  57: suminf.    4.35496 (15) obj. -787.296 iterations 6
Cbc0038I Pass  58: suminf.    3.92364 (13) obj. -787.296 iterations 2
Cbc0038I Pass  59: suminf.    5.98012 (19) obj. -787.296 iterations 14
Cbc0038I Pass  60: suminf.    5.22091 (17) obj. -787.296 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 54 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -296.256 - took 0.10 seconds
Cbc0012I Integer solution of -296.25563 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 102 rows 54 columns, reduced to 69 rows 41 columns
Cbc0031I 27 added rows had average density of 19.814815
Cbc0013I At root node, 27 cuts changed objective from -2117.3974 to -567.8655 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9434 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2168 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 336 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 39.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0001I Search completed - best objective -296.2556289999993, took 5304 iterations and 10 nodes (0.62 seconds)
Cbc0032I Strong branching done 226 times (4310 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-33) rows, 81 (-28) columns and 880 (-821) elements
Clp1000I sum of infeasibilities 3.58705e-08 - average 4.65851e-10, 75 fixed columns
Coin0506I Presolve 0 (-77) rows, 0 (-81) columns and 0 (-880) elements
Clp0000I Optimal - objective value -1641.3151
Clp0000I Optimal - objective value -1641.3151
Coin0511I After Postsolve, objective -1641.3151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.080107 - largest nonzero change 9.9829434e-05 ( 0.019727394%) - largest zero change 0
Clp0000I Optimal - objective value 2315.6628
Clp0000I Optimal - objective value 2315.6628
Clp0000I Optimal - objective value 2315.6628
Coin0511I After Postsolve, objective 2315.6628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2315.662822 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 81 columns (81 integer (81 of which binary)) and 886 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.302%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.21882
Cbc0038I Pass   1: suminf.    3.58975 (13) obj. -1211.07 iterations 14
Cbc0038I Solution found of 129.796
Cbc0038I Rounding solution of -90.2319 is better than previous of 129.796

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -310.4
Cbc0038I Pass   2: suminf.    3.58975 (13) obj. -1211.07 iterations 0
Cbc0038I Pass   3: suminf.    0.43232 (2) obj. -310.4 iterations 15
Cbc0038I Pass   4: suminf.    0.79403 (2) obj. -599.764 iterations 1
Cbc0038I Pass   5: suminf.    2.14609 (8) obj. -310.4 iterations 19
Cbc0038I Pass   6: suminf.    2.14609 (8) obj. -310.4 iterations 3
Cbc0038I Pass   7: suminf.    2.04465 (6) obj. -310.4 iterations 5
Cbc0038I Pass   8: suminf.    2.04465 (6) obj. -310.4 iterations 0
Cbc0038I Pass   9: suminf.    1.66773 (5) obj. -310.4 iterations 4
Cbc0038I Pass  10: suminf.    1.66773 (5) obj. -310.4 iterations 0
Cbc0038I Pass  11: suminf.    1.44094 (4) obj. -310.4 iterations 2
Cbc0038I Pass  12: suminf.    1.37974 (4) obj. -310.4 iterations 1
Cbc0038I Pass  13: suminf.    2.34005 (8) obj. -310.4 iterations 14
Cbc0038I Pass  14: suminf.    2.34005 (8) obj. -310.4 iterations 6
Cbc0038I Pass  15: suminf.    2.34005 (8) obj. -310.4 iterations 0
Cbc0038I Pass  16: suminf.    1.87479 (5) obj. -310.4 iterations 6
Cbc0038I Pass  17: suminf.    1.87479 (5) obj. -310.4 iterations 0
Cbc0038I Pass  18: suminf.    1.53743 (5) obj. -310.4 iterations 1
Cbc0038I Pass  19: suminf.    1.53743 (5) obj. -310.4 iterations 0
Cbc0038I Pass  20: suminf.    1.87479 (5) obj. -310.4 iterations 2
Cbc0038I Pass  21: suminf.    2.39932 (9) obj. -310.4 iterations 28
Cbc0038I Pass  22: suminf.    2.39932 (9) obj. -310.4 iterations 6
Cbc0038I Pass  23: suminf.    2.27522 (6) obj. -310.4 iterations 6
Cbc0038I Pass  24: suminf.    1.73692 (5) obj. -310.4 iterations 2
Cbc0038I Pass  25: suminf.    2.01893 (5) obj. -310.4 iterations 3
Cbc0038I Pass  26: suminf.    2.01893 (5) obj. -310.4 iterations 0
Cbc0038I Pass  27: suminf.    1.72929 (5) obj. -310.4 iterations 1
Cbc0038I Pass  28: suminf.    1.72929 (5) obj. -310.4 iterations 0
Cbc0038I Pass  29: suminf.    2.01893 (5) obj. -310.4 iterations 2
Cbc0038I Pass  30: suminf.    1.94928 (6) obj. -310.4 iterations 10
Cbc0038I Pass  31: suminf.    1.94928 (6) obj. -310.4 iterations 4
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 81 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -90.2319 to -101.259 (0.04 seconds)
Cbc0038I Round again with cutoff of -706.702
Cbc0038I Pass  31: suminf.    3.58975 (13) obj. -1211.07 iterations 0
Cbc0038I Pass  32: suminf.    1.01916 (3) obj. -706.702 iterations 15
Cbc0038I Pass  33: suminf.    1.04403 (3) obj. -956.014 iterations 1
Cbc0038I Pass  34: suminf.    0.73239 (3) obj. -706.702 iterations 1
Cbc0038I Pass  35: suminf.    1.01916 (3) obj. -706.702 iterations 2
Cbc0038I Pass  36: suminf.    1.57882 (5) obj. -706.702 iterations 16
Cbc0038I Pass  37: suminf.    1.57882 (5) obj. -706.702 iterations 7
Cbc0038I Pass  38: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  39: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  40: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Pass  41: suminf.    1.57882 (5) obj. -706.702 iterations 2
Cbc0038I Pass  42: suminf.    1.57882 (5) obj. -706.702 iterations 0
Cbc0038I Pass  43: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  44: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  45: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Pass  46: suminf.    1.57882 (5) obj. -706.702 iterations 2
Cbc0038I Pass  47: suminf.    1.57882 (5) obj. -706.702 iterations 0
Cbc0038I Pass  48: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  49: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  50: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Pass  51: suminf.    1.57882 (5) obj. -706.702 iterations 2
Cbc0038I Pass  52: suminf.    1.57882 (5) obj. -706.702 iterations 0
Cbc0038I Pass  53: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  54: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  55: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Pass  56: suminf.    1.57882 (5) obj. -706.702 iterations 2
Cbc0038I Pass  57: suminf.    1.57882 (5) obj. -706.702 iterations 0
Cbc0038I Pass  58: suminf.    1.93148 (5) obj. -706.702 iterations 1
Cbc0038I Pass  59: suminf.    1.46698 (5) obj. -706.702 iterations 1
Cbc0038I Pass  60: suminf.    1.46698 (5) obj. -706.702 iterations 0
Cbc0038I Rounding solution of -110.745 is better than previous of -101.259

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -1182.26
Cbc0038I Pass  60: suminf.    3.58975 (13) obj. -1211.07 iterations 0
Cbc0038I Pass  61: suminf.    1.58240 (5) obj. -1182.26 iterations 15
Cbc0038I Pass  62: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  63: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  64: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  65: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  66: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  67: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  68: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  69: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  70: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  71: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  72: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  73: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  74: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  75: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  76: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  77: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  78: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  79: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  80: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  81: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  82: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  83: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  84: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  85: suminf.    1.41520 (4) obj. -1182.26 iterations 1
Cbc0038I Pass  86: suminf.    1.58240 (5) obj. -1182.26 iterations 3
Cbc0038I Pass  87: suminf.    1.58240 (5) obj. -1182.26 iterations 0
Cbc0038I Pass  88: suminf.    1.96092 (5) obj. -1182.26 iterations 1
Cbc0038I Pass  89: suminf.    1.43703 (4) obj. -1182.26 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -110.745 - took 0.03 seconds
Cbc0012I Integer solution of -110.74463 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 77 rows 81 columns, reduced to 3 rows 8 columns
Cbc0012I Integer solution of -146.85973 found by RINS after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 49 added rows had average density of 11.469388
Cbc0013I At root node, 49 cuts changed objective from -2291.9113 to -301.89981 in 83 passes
Cbc0014I Cut generator 0 (Probing) - 1940 row cuts average 9.7 elements, 1 column cuts (1 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 276 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 256 row cuts average 39.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 41.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 214 row cuts average 53.5 elements, 0 column cuts (0 active)  in 0.616 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -146.85973 best solution, best possible -301.8998 (1.45 seconds)
Cbc0016I Integer solution of -295.18303 found by strong branching after 1030 iterations and 1 nodes (1.51 seconds)
Cbc0004I Integer solution of -296.25563 found after 1083 iterations and 2 nodes (1.57 seconds)
Cbc0001I Search completed - best objective -296.2556289999993, took 1083 iterations and 2 nodes (1.57 seconds)
Cbc0032I Strong branching done 20 times (191 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.58

