Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 32 (-3) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 8.71781e-05 - average 1.50307e-06, 7 fixed columns
Coin0506I Presolve 38 (-20) rows, 22 (-10) columns and 113 (-59) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Coin0511I After Postsolve, objective 81.794541, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Coin0511I After Postsolve, objective 81.794541, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.79454095 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 32 columns (31 integer (31 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.029%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.35849
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.560052 iterations 21
Cbc0038I Solution found of 0.560052
Cbc0038I Relaxing continuous gives 0.560052
Cbc0038I Rounding solution of -23.4216 is better than previous of 0.560052

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -23.4216 to -34.3296 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.0333
Cbc0038I Pass   2: suminf.    1.62240 (5) obj. -39.0333 iterations 6
Cbc0038I Pass   3: suminf.    1.30651 (4) obj. -39.0333 iterations 6
Cbc0038I Pass   4: suminf.    1.30651 (4) obj. -39.0333 iterations 0
Cbc0038I Pass   5: suminf.    1.34330 (4) obj. -39.0333 iterations 2
Cbc0038I Pass   6: suminf.    0.71603 (2) obj. -39.0333 iterations 3
Cbc0038I Pass   7: suminf.    0.92096 (2) obj. -39.0333 iterations 5
Cbc0038I Pass   8: suminf.    0.82770 (2) obj. -39.0333 iterations 2
Cbc0038I Pass   9: suminf.    0.71743 (2) obj. -39.0333 iterations 4
Cbc0038I Pass  10: suminf.    1.93861 (6) obj. -39.0333 iterations 12
Cbc0038I Pass  11: suminf.    1.50813 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  12: suminf.    0.86230 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  13: suminf.    0.81740 (4) obj. -39.0333 iterations 2
Cbc0038I Pass  14: suminf.    0.85373 (3) obj. -39.0333 iterations 4
Cbc0038I Pass  15: suminf.    0.74796 (3) obj. -39.0333 iterations 1
Cbc0038I Pass  16: suminf.    0.94095 (5) obj. -39.0333 iterations 3
Cbc0038I Pass  17: suminf.    0.74796 (3) obj. -39.0333 iterations 4
Cbc0038I Pass  18: suminf.    1.97335 (6) obj. -39.0333 iterations 9
Cbc0038I Pass  19: suminf.    1.10631 (5) obj. -39.0333 iterations 3
Cbc0038I Pass  20: suminf.    0.98416 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  21: suminf.    0.95412 (3) obj. -39.0333 iterations 3
Cbc0038I Pass  22: suminf.    0.72495 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  23: suminf.    1.01065 (3) obj. -39.0333 iterations 5
Cbc0038I Pass  24: suminf.    0.60887 (3) obj. -39.0333 iterations 3
Cbc0038I Pass  25: suminf.    0.88351 (3) obj. -39.0333 iterations 11
Cbc0038I Pass  26: suminf.    0.53999 (3) obj. -39.0333 iterations 6
Cbc0038I Pass  27: suminf.    1.25561 (5) obj. -39.0333 iterations 5
Cbc0038I Pass  28: suminf.    1.17687 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  29: suminf.    0.62886 (4) obj. -39.0333 iterations 3
Cbc0038I Pass  30: suminf.    0.54311 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  31: suminf.    0.92516 (3) obj. -39.0333 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -34.3296 to -37.4061 (0.03 seconds)
Cbc0038I Round again with cutoff of -47.4996
Cbc0038I Pass  31: suminf.    2.08686 (7) obj. -47.4996 iterations 1
Cbc0038I Pass  32: suminf.    0.53928 (2) obj. -47.4996 iterations 8
Cbc0038I Pass  33: suminf.    0.53928 (2) obj. -47.4996 iterations 0
Cbc0038I Pass  34: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  35: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  36: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  37: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  38: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  39: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  40: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  41: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  42: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  43: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  44: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  45: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  46: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  47: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  48: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  49: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  50: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  51: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  52: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  53: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  54: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  55: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  56: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  57: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  58: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  59: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  60: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -37.4061 - took 0.04 seconds
Cbc0012I Integer solution of -37.40606 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 58 rows 32 columns, reduced to 34 rows 20 columns
Cbc0031I 12 added rows had average density of 25
Cbc0013I At root node, 12 cuts changed objective from -81.365038 to -59.983005 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1450 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 551 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 96 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -38.438898 found by rounding after 3229 iterations and 9 nodes (0.26 seconds)
Cbc0001I Search completed - best objective -38.43889799999999, took 3410 iterations and 18 nodes (0.27 seconds)
Cbc0032I Strong branching done 216 times (2438 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-13) rows, 59 (-7) columns and 595 (-128) elements
Clp1000I sum of infeasibilities 1.05762e-07 - average 1.92294e-09, 9 fixed columns
Coin0506I Presolve 46 (-9) rows, 50 (-9) columns and 394 (-201) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 1.9856233 - largest nonzero change 2.1889082e-05 ( 0.0018908272%) - largest zero change 2.6831081e-05
Clp0000I Optimal - objective value 104.71209
Clp0000I Optimal - objective value 104.71209
Coin0511I After Postsolve, objective 104.71209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 104.71209
Clp0000I Optimal - objective value 104.71209
Clp0000I Optimal - objective value 104.71209
Coin0511I After Postsolve, objective 104.71209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.7120877 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 59 columns (59 integer (59 of which binary)) and 601 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.834%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 7.49044
Cbc0038I Pass   1: suminf.    2.55178 (18) obj. -72.0504 iterations 19
Cbc0038I Pass   2: suminf.    2.55178 (18) obj. -72.0504 iterations 1
Cbc0038I Solution found of -29.1731
Cbc0038I Rounding solution of -32.842 is better than previous of -29.1731

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -39.4232
Cbc0038I Pass   3: suminf.    2.55178 (18) obj. -72.0504 iterations 0
Cbc0038I Pass   4: suminf.    2.55178 (18) obj. -72.0504 iterations 1
Cbc0038I Pass   5: suminf.    0.37675 (5) obj. -39.4232 iterations 20
Cbc0038I Pass   6: suminf.    0.19250 (1) obj. -46.3006 iterations 7
Cbc0038I Pass   7: suminf.    0.48326 (1) obj. -39.4232 iterations 4
Cbc0038I Pass   8: suminf.    1.54935 (9) obj. -39.4232 iterations 16
Cbc0038I Pass   9: suminf.    1.02353 (6) obj. -39.4232 iterations 5
Cbc0038I Pass  10: suminf.    1.37871 (10) obj. -39.4232 iterations 6
Cbc0038I Pass  11: suminf.    0.97625 (4) obj. -39.4232 iterations 1
Cbc0038I Pass  12: suminf.    0.49600 (2) obj. -41.4687 iterations 3
Cbc0038I Pass  13: suminf.    0.55561 (3) obj. -39.4232 iterations 3
Cbc0038I Pass  14: suminf.    0.55561 (3) obj. -39.4232 iterations 0
Cbc0038I Pass  15: suminf.    0.67248 (3) obj. -39.4232 iterations 1
Cbc0038I Pass  16: suminf.    2.58256 (10) obj. -39.4232 iterations 11
Cbc0038I Pass  17: suminf.    1.99930 (9) obj. -39.4232 iterations 4
Cbc0038I Pass  18: suminf.    0.66563 (3) obj. -39.4232 iterations 9
Cbc0038I Pass  19: suminf.    0.65083 (2) obj. -40.0539 iterations 1
Cbc0038I Pass  20: suminf.    0.78623 (3) obj. -39.4232 iterations 2
Cbc0038I Pass  21: suminf.    0.78623 (3) obj. -39.4232 iterations 0
Cbc0038I Pass  22: suminf.    1.02320 (3) obj. -39.4232 iterations 2
Cbc0038I Pass  23: suminf.    1.59622 (8) obj. -39.4232 iterations 13
Cbc0038I Pass  24: suminf.    1.52322 (7) obj. -39.4232 iterations 2
Cbc0038I Pass  25: suminf.    1.23987 (5) obj. -39.4232 iterations 6
Cbc0038I Pass  26: suminf.    1.23987 (5) obj. -39.4232 iterations 0
Cbc0038I Pass  27: suminf.    1.30235 (5) obj. -39.4232 iterations 1
Cbc0038I Pass  28: suminf.    1.02558 (4) obj. -41.9123 iterations 2
Cbc0038I Pass  29: suminf.    1.23987 (5) obj. -39.4232 iterations 5
Cbc0038I Pass  30: suminf.    3.35326 (15) obj. -39.4232 iterations 20
Cbc0038I Pass  31: suminf.    3.03688 (14) obj. -39.4232 iterations 3
Cbc0038I Pass  32: suminf.    2.38668 (12) obj. -39.4232 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -29.1731 to -33.6346 (0.03 seconds)
Cbc0038I Round again with cutoff of -51.2693
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.55178 (18) obj. -72.0504 iterations 0
Cbc0038I Pass  33: suminf.    2.55178 (18) obj. -72.0504 iterations 1
Cbc0038I Pass  34: suminf.    0.64530 (5) obj. -51.2693 iterations 32
Cbc0038I Pass  35: suminf.    0.50400 (2) obj. -51.8086 iterations 5
Cbc0038I Pass  36: suminf.    1.40543 (7) obj. -51.2693 iterations 15
Cbc0038I Pass  37: suminf.    1.21269 (6) obj. -51.2693 iterations 6
Cbc0038I Pass  38: suminf.    1.63281 (8) obj. -51.2693 iterations 6
Cbc0038I Pass  39: suminf.    1.26084 (7) obj. -51.2693 iterations 1
Cbc0038I Pass  40: suminf.    1.40655 (6) obj. -51.2693 iterations 10
Cbc0038I Pass  41: suminf.    1.40655 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  42: suminf.    1.13450 (6) obj. -51.2693 iterations 3
Cbc0038I Pass  43: suminf.    1.13450 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  44: suminf.    1.40655 (6) obj. -51.2693 iterations 1
Cbc0038I Pass  45: suminf.    2.11555 (12) obj. -51.2693 iterations 10
Cbc0038I Pass  46: suminf.    2.07440 (11) obj. -51.2693 iterations 2
Cbc0038I Pass  47: suminf.    1.53421 (7) obj. -51.2693 iterations 10
Cbc0038I Pass  48: suminf.    1.53539 (7) obj. -51.2693 iterations 3
Cbc0038I Pass  49: suminf.    1.27150 (6) obj. -51.2693 iterations 7
Cbc0038I Pass  50: suminf.    1.27150 (6) obj. -51.2693 iterations 2
Cbc0038I Pass  51: suminf.    1.07530 (6) obj. -51.2693 iterations 3
Cbc0038I Pass  52: suminf.    1.07530 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  53: suminf.    1.27150 (6) obj. -51.2693 iterations 1
Cbc0038I Pass  54: suminf.    1.66274 (9) obj. -51.2693 iterations 6
Cbc0038I Pass  55: suminf.    1.65201 (8) obj. -51.2693 iterations 3
Cbc0038I Pass  56: suminf.    1.42141 (6) obj. -51.2693 iterations 4
Cbc0038I Pass  57: suminf.    1.42141 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  58: suminf.    1.28897 (6) obj. -51.2693 iterations 5
Cbc0038I Pass  59: suminf.    1.28897 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  60: suminf.    1.42141 (6) obj. -51.2693 iterations 1
Cbc0038I Pass  61: suminf.    2.93836 (11) obj. -51.2693 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.6346 - took 0.03 seconds
Cbc0012I Integer solution of -33.63464 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 55 rows 59 columns, reduced to 12 rows 15 columns
Cbc0031I 25 added rows had average density of 16.72
Cbc0013I At root node, 25 cuts changed objective from -98.65376 to -45.078747 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1781 row cuts average 3.1 elements, 12 column cuts (12 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 802 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 40 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 27 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 180 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 265 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.641 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.63464 best solution, best possible -45.078747 (1.37 seconds)
Cbc0012I Integer solution of -35.362468 found by rounding after 1724 iterations and 2 nodes (1.39 seconds)
Cbc0012I Integer solution of -35.852578 found by DiveCoefficient after 2260 iterations and 7 nodes (1.46 seconds)
Cbc0012I Integer solution of -36.439968 found by DiveCoefficient after 2264 iterations and 8 nodes (1.46 seconds)
Cbc0012I Integer solution of -37.40606 found by DiveCoefficient after 2269 iterations and 8 nodes (1.46 seconds)
Cbc0004I Integer solution of -38.438898 found after 2307 iterations and 11 nodes (1.47 seconds)
Cbc0001I Search completed - best objective -38.43889799999999, took 2602 iterations and 20 nodes (1.49 seconds)
Cbc0032I Strong branching done 256 times (1830 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 7, 29 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 32 (-3) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 8.71781e-05 - average 1.50307e-06, 7 fixed columns
Coin0506I Presolve 38 (-20) rows, 22 (-10) columns and 113 (-59) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Coin0511I After Postsolve, objective 81.794541, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Coin0511I After Postsolve, objective 81.794541, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.79454095 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 32 columns (31 integer (31 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.029%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.35849
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.560052 iterations 21
Cbc0038I Solution found of 0.560052
Cbc0038I Relaxing continuous gives 0.560052
Cbc0038I Rounding solution of -23.4216 is better than previous of 0.560052

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -23.4216 to -34.3296 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.0333
Cbc0038I Pass   2: suminf.    1.62240 (5) obj. -39.0333 iterations 6
Cbc0038I Pass   3: suminf.    1.30651 (4) obj. -39.0333 iterations 6
Cbc0038I Pass   4: suminf.    1.30651 (4) obj. -39.0333 iterations 0
Cbc0038I Pass   5: suminf.    1.34330 (4) obj. -39.0333 iterations 2
Cbc0038I Pass   6: suminf.    0.71603 (2) obj. -39.0333 iterations 3
Cbc0038I Pass   7: suminf.    0.92096 (2) obj. -39.0333 iterations 5
Cbc0038I Pass   8: suminf.    0.82770 (2) obj. -39.0333 iterations 2
Cbc0038I Pass   9: suminf.    0.71743 (2) obj. -39.0333 iterations 4
Cbc0038I Pass  10: suminf.    1.93861 (6) obj. -39.0333 iterations 12
Cbc0038I Pass  11: suminf.    1.50813 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  12: suminf.    0.86230 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  13: suminf.    0.81740 (4) obj. -39.0333 iterations 2
Cbc0038I Pass  14: suminf.    0.85373 (3) obj. -39.0333 iterations 4
Cbc0038I Pass  15: suminf.    0.74796 (3) obj. -39.0333 iterations 1
Cbc0038I Pass  16: suminf.    0.94095 (5) obj. -39.0333 iterations 3
Cbc0038I Pass  17: suminf.    0.74796 (3) obj. -39.0333 iterations 4
Cbc0038I Pass  18: suminf.    1.97335 (6) obj. -39.0333 iterations 9
Cbc0038I Pass  19: suminf.    1.10631 (5) obj. -39.0333 iterations 3
Cbc0038I Pass  20: suminf.    0.98416 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  21: suminf.    0.95412 (3) obj. -39.0333 iterations 3
Cbc0038I Pass  22: suminf.    0.72495 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  23: suminf.    1.01065 (3) obj. -39.0333 iterations 5
Cbc0038I Pass  24: suminf.    0.60887 (3) obj. -39.0333 iterations 3
Cbc0038I Pass  25: suminf.    0.88351 (3) obj. -39.0333 iterations 11
Cbc0038I Pass  26: suminf.    0.53999 (3) obj. -39.0333 iterations 6
Cbc0038I Pass  27: suminf.    1.25561 (5) obj. -39.0333 iterations 5
Cbc0038I Pass  28: suminf.    1.17687 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  29: suminf.    0.62886 (4) obj. -39.0333 iterations 3
Cbc0038I Pass  30: suminf.    0.54311 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  31: suminf.    0.92516 (3) obj. -39.0333 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -34.3296 to -37.4061 (0.03 seconds)
Cbc0038I Round again with cutoff of -47.4996
Cbc0038I Pass  31: suminf.    2.08686 (7) obj. -47.4996 iterations 1
Cbc0038I Pass  32: suminf.    0.53928 (2) obj. -47.4996 iterations 8
Cbc0038I Pass  33: suminf.    0.53928 (2) obj. -47.4996 iterations 0
Cbc0038I Pass  34: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  35: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  36: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  37: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  38: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  39: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  40: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  41: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  42: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  43: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  44: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  45: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  46: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  47: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  48: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  49: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  50: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  51: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  52: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  53: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  54: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  55: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  56: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  57: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  58: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  59: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  60: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -37.4061 - took 0.05 seconds
Cbc0012I Integer solution of -37.40606 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 58 rows 32 columns, reduced to 34 rows 20 columns
Cbc0031I 12 added rows had average density of 25
Cbc0013I At root node, 12 cuts changed objective from -81.365038 to -59.983005 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1450 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 551 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 96 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0012I Integer solution of -38.438898 found by rounding after 3229 iterations and 9 nodes (0.26 seconds)
Cbc0001I Search completed - best objective -38.43889799999999, took 3410 iterations and 18 nodes (0.26 seconds)
Cbc0032I Strong branching done 216 times (2438 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 59 (-8) columns and 595 (-129) elements
Clp1000I sum of infeasibilities 1.05762e-07 - average 1.92294e-09, 9 fixed columns
Coin0506I Presolve 46 (-9) rows, 50 (-9) columns and 394 (-201) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 1.9856233 - largest nonzero change 2.1889082e-05 ( 0.0018908272%) - largest zero change 2.6831081e-05
Clp0000I Optimal - objective value 104.71209
Clp0000I Optimal - objective value 104.71209
Coin0511I After Postsolve, objective 104.71209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 104.71209
Clp0000I Optimal - objective value 104.71209
Clp0000I Optimal - objective value 104.71209
Coin0511I After Postsolve, objective 104.71209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.7120877 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 59 columns (59 integer (59 of which binary)) and 601 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.834%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 7.49044
Cbc0038I Pass   1: suminf.    2.55178 (18) obj. -72.0504 iterations 19
Cbc0038I Pass   2: suminf.    2.55178 (18) obj. -72.0504 iterations 1
Cbc0038I Solution found of -29.1731
Cbc0038I Rounding solution of -32.842 is better than previous of -29.1731

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -39.4232
Cbc0038I Pass   3: suminf.    2.55178 (18) obj. -72.0504 iterations 0
Cbc0038I Pass   4: suminf.    2.55178 (18) obj. -72.0504 iterations 1
Cbc0038I Pass   5: suminf.    0.37675 (5) obj. -39.4232 iterations 20
Cbc0038I Pass   6: suminf.    0.19250 (1) obj. -46.3006 iterations 7
Cbc0038I Pass   7: suminf.    0.48326 (1) obj. -39.4232 iterations 4
Cbc0038I Pass   8: suminf.    1.54935 (9) obj. -39.4232 iterations 16
Cbc0038I Pass   9: suminf.    1.02353 (6) obj. -39.4232 iterations 5
Cbc0038I Pass  10: suminf.    1.37871 (10) obj. -39.4232 iterations 6
Cbc0038I Pass  11: suminf.    0.97625 (4) obj. -39.4232 iterations 1
Cbc0038I Pass  12: suminf.    0.49600 (2) obj. -41.4687 iterations 3
Cbc0038I Pass  13: suminf.    0.55561 (3) obj. -39.4232 iterations 3
Cbc0038I Pass  14: suminf.    0.55561 (3) obj. -39.4232 iterations 0
Cbc0038I Pass  15: suminf.    0.67248 (3) obj. -39.4232 iterations 1
Cbc0038I Pass  16: suminf.    2.58256 (10) obj. -39.4232 iterations 11
Cbc0038I Pass  17: suminf.    1.99930 (9) obj. -39.4232 iterations 4
Cbc0038I Pass  18: suminf.    0.66563 (3) obj. -39.4232 iterations 9
Cbc0038I Pass  19: suminf.    0.65083 (2) obj. -40.0539 iterations 1
Cbc0038I Pass  20: suminf.    0.78623 (3) obj. -39.4232 iterations 2
Cbc0038I Pass  21: suminf.    0.78623 (3) obj. -39.4232 iterations 0
Cbc0038I Pass  22: suminf.    1.02320 (3) obj. -39.4232 iterations 2
Cbc0038I Pass  23: suminf.    1.59622 (8) obj. -39.4232 iterations 13
Cbc0038I Pass  24: suminf.    1.52322 (7) obj. -39.4232 iterations 2
Cbc0038I Pass  25: suminf.    1.23987 (5) obj. -39.4232 iterations 6
Cbc0038I Pass  26: suminf.    1.23987 (5) obj. -39.4232 iterations 0
Cbc0038I Pass  27: suminf.    1.30235 (5) obj. -39.4232 iterations 1
Cbc0038I Pass  28: suminf.    1.02558 (4) obj. -41.9123 iterations 2
Cbc0038I Pass  29: suminf.    1.23987 (5) obj. -39.4232 iterations 5
Cbc0038I Pass  30: suminf.    3.35326 (15) obj. -39.4232 iterations 20
Cbc0038I Pass  31: suminf.    3.03688 (14) obj. -39.4232 iterations 3
Cbc0038I Pass  32: suminf.    2.38668 (12) obj. -39.4232 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -29.1731 to -33.6346 (0.03 seconds)
Cbc0038I Round again with cutoff of -51.2693
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.55178 (18) obj. -72.0504 iterations 0
Cbc0038I Pass  33: suminf.    2.55178 (18) obj. -72.0504 iterations 1
Cbc0038I Pass  34: suminf.    0.64530 (5) obj. -51.2693 iterations 32
Cbc0038I Pass  35: suminf.    0.50400 (2) obj. -51.8086 iterations 5
Cbc0038I Pass  36: suminf.    1.40543 (7) obj. -51.2693 iterations 15
Cbc0038I Pass  37: suminf.    1.21269 (6) obj. -51.2693 iterations 6
Cbc0038I Pass  38: suminf.    1.63281 (8) obj. -51.2693 iterations 6
Cbc0038I Pass  39: suminf.    1.26084 (7) obj. -51.2693 iterations 1
Cbc0038I Pass  40: suminf.    1.40655 (6) obj. -51.2693 iterations 10
Cbc0038I Pass  41: suminf.    1.40655 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  42: suminf.    1.13450 (6) obj. -51.2693 iterations 3
Cbc0038I Pass  43: suminf.    1.13450 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  44: suminf.    1.40655 (6) obj. -51.2693 iterations 1
Cbc0038I Pass  45: suminf.    2.11555 (12) obj. -51.2693 iterations 10
Cbc0038I Pass  46: suminf.    2.07440 (11) obj. -51.2693 iterations 2
Cbc0038I Pass  47: suminf.    1.53421 (7) obj. -51.2693 iterations 10
Cbc0038I Pass  48: suminf.    1.53539 (7) obj. -51.2693 iterations 3
Cbc0038I Pass  49: suminf.    1.27150 (6) obj. -51.2693 iterations 7
Cbc0038I Pass  50: suminf.    1.27150 (6) obj. -51.2693 iterations 2
Cbc0038I Pass  51: suminf.    1.07530 (6) obj. -51.2693 iterations 3
Cbc0038I Pass  52: suminf.    1.07530 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  53: suminf.    1.27150 (6) obj. -51.2693 iterations 1
Cbc0038I Pass  54: suminf.    1.66274 (9) obj. -51.2693 iterations 6
Cbc0038I Pass  55: suminf.    1.65201 (8) obj. -51.2693 iterations 3
Cbc0038I Pass  56: suminf.    1.42141 (6) obj. -51.2693 iterations 4
Cbc0038I Pass  57: suminf.    1.42141 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  58: suminf.    1.28897 (6) obj. -51.2693 iterations 5
Cbc0038I Pass  59: suminf.    1.28897 (6) obj. -51.2693 iterations 0
Cbc0038I Pass  60: suminf.    1.42141 (6) obj. -51.2693 iterations 1
Cbc0038I Pass  61: suminf.    2.93836 (11) obj. -51.2693 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.6346 - took 0.02 seconds
Cbc0012I Integer solution of -33.63464 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 55 rows 59 columns, reduced to 12 rows 15 columns
Cbc0031I 25 added rows had average density of 16.72
Cbc0013I At root node, 25 cuts changed objective from -98.65376 to -45.078747 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1781 row cuts average 3.1 elements, 12 column cuts (12 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 802 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 40 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 27 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 180 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 265 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.735 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.63464 best solution, best possible -45.078747 (1.58 seconds)
Cbc0012I Integer solution of -35.362468 found by rounding after 1724 iterations and 2 nodes (1.61 seconds)
Cbc0012I Integer solution of -35.852578 found by DiveCoefficient after 2260 iterations and 7 nodes (1.67 seconds)
Cbc0012I Integer solution of -36.439968 found by DiveCoefficient after 2264 iterations and 8 nodes (1.67 seconds)
Cbc0012I Integer solution of -37.40606 found by DiveCoefficient after 2269 iterations and 8 nodes (1.67 seconds)
Cbc0004I Integer solution of -38.438898 found after 2307 iterations and 11 nodes (1.68 seconds)
Cbc0001I Search completed - best objective -38.43889799999999, took 2602 iterations and 20 nodes (1.70 seconds)
Cbc0032I Strong branching done 256 times (1830 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 7, 29 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.71

