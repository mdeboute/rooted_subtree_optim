Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 111 (-18) elements
Clp1000I sum of infeasibilities 9.97679e-05 - average 2.69643e-06, 2 fixed columns
Coin0506I Presolve 33 (-4) rows, 20 (-2) columns and 99 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 83.053942
Clp0000I Optimal - objective value 83.053942
Coin0511I After Postsolve, objective 83.053942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.053942
Clp0000I Optimal - objective value 83.053942
Clp0000I Optimal - objective value 83.053942
Coin0511I After Postsolve, objective 83.053942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.0539422 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.26729
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.2032 iterations 16
Cbc0038I Solution found of 1.2032
Cbc0038I Relaxing continuous gives 1.2032
Cbc0038I Rounding solution of -17.0676 is better than previous of 1.2032

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -17.0676 to -36.0856 (0.01 seconds)
Cbc0038I Round again with cutoff of -40.7825
Cbc0038I Pass   2: suminf.    1.07843 (3) obj. -40.7825 iterations 4
Cbc0038I Pass   3: suminf.    0.62839 (7) obj. -40.7825 iterations 8
Cbc0038I Pass   4: suminf.    1.40750 (5) obj. -40.7825 iterations 12
Cbc0038I Pass   5: suminf.    1.08203 (4) obj. -40.7825 iterations 2
Cbc0038I Pass   6: suminf.    0.17669 (2) obj. -40.7825 iterations 9
Cbc0038I Pass   7: suminf.    0.11913 (1) obj. -40.7825 iterations 1
Cbc0038I Pass   8: suminf.    0.60581 (2) obj. -40.7825 iterations 2
Cbc0038I Pass   9: suminf.    0.35362 (1) obj. -40.7825 iterations 2
Cbc0038I Pass  10: suminf.    0.59946 (2) obj. -40.7825 iterations 2
Cbc0038I Pass  11: suminf.    0.80597 (2) obj. -40.7825 iterations 5
Cbc0038I Pass  12: suminf.    0.94018 (2) obj. -40.7825 iterations 2
Cbc0038I Pass  13: suminf.    1.40668 (5) obj. -40.7825 iterations 7
Cbc0038I Pass  14: suminf.    1.17511 (3) obj. -40.7825 iterations 2
Cbc0038I Pass  15: suminf.    0.78000 (3) obj. -40.7825 iterations 6
Cbc0038I Pass  16: suminf.    0.55679 (2) obj. -40.7825 iterations 3
Cbc0038I Pass  17: suminf.    1.17879 (3) obj. -40.7825 iterations 2
Cbc0038I Pass  18: suminf.    0.98733 (4) obj. -40.7825 iterations 2
Cbc0038I Pass  19: suminf.    0.96735 (4) obj. -40.7825 iterations 6
Cbc0038I Pass  20: suminf.    0.94298 (4) obj. -40.7825 iterations 1
Cbc0038I Pass  21: suminf.    0.70390 (3) obj. -40.7825 iterations 4
Cbc0038I Pass  22: suminf.    0.70390 (3) obj. -40.7825 iterations 0
Cbc0038I Pass  23: suminf.    0.96836 (3) obj. -40.7825 iterations 4
Cbc0038I Pass  24: suminf.    0.88908 (3) obj. -40.7825 iterations 2
Cbc0038I Pass  25: suminf.    0.98733 (4) obj. -40.7825 iterations 4
Cbc0038I Pass  26: suminf.    0.98733 (4) obj. -40.7825 iterations 0
Cbc0038I Pass  27: suminf.    0.96735 (4) obj. -40.7825 iterations 6
Cbc0038I Pass  28: suminf.    0.94298 (4) obj. -40.7825 iterations 1
Cbc0038I Pass  29: suminf.    0.70390 (3) obj. -40.7825 iterations 4
Cbc0038I Pass  30: suminf.    0.70390 (3) obj. -40.7825 iterations 0
Cbc0038I Pass  31: suminf.    0.96836 (3) obj. -40.7825 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -36.0856 - took 0.04 seconds
Cbc0012I Integer solution of -36.0856 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 29 rows 17 columns
Cbc0031I 11 added rows had average density of 18.909091
Cbc0013I At root node, 11 cuts changed objective from -83.053942 to -66.704902 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1674 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 679 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0004I Integer solution of -36.9145 found after 3346 iterations and 26 nodes (0.23 seconds)
Cbc0001I Search completed - best objective -36.9145, took 3346 iterations and 26 nodes (0.23 seconds)
Cbc0032I Strong branching done 218 times (1844 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-11) rows, 40 (-4) columns and 298 (-62) elements
Clp1000I sum of infeasibilities 1.68687e-08 - average 4.81964e-10, 26 fixed columns
Coin0506I Presolve 11 (-24) rows, 14 (-26) columns and 46 (-252) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 1.9637306 - largest nonzero change 0 ( 0%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 27.160085
Clp0000I Optimal - objective value 27.160085
Coin0511I After Postsolve, objective 27.160085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0036105 - largest nonzero change 2.0786599e-05 ( 0.0020786599%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 101.93501
Clp0000I Optimal - objective value 101.93501
Clp0000I Optimal - objective value 101.93501
Coin0511I After Postsolve, objective 101.93501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.9350149 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 305 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.68068
Cbc0038I Pass   1: suminf.    1.76202 (11) obj. -60.2382 iterations 9
Cbc0038I Pass   2: suminf.    1.76202 (11) obj. -60.2382 iterations 1
Cbc0038I Solution found of -17.3873
Cbc0038I Rounding solution of -27.7879 is better than previous of -17.3873

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -27.7879 to -35.6581 (0.01 seconds)
Cbc0038I Round again with cutoff of -40.4773
Cbc0038I Pass   3: suminf.    1.76202 (11) obj. -60.2382 iterations 0
Cbc0038I Pass   4: suminf.    1.76202 (11) obj. -60.2382 iterations 1
Cbc0038I Pass   5: suminf.    0.31371 (3) obj. -40.4773 iterations 18
Cbc0038I Pass   6: suminf.    0.31371 (3) obj. -40.4773 iterations 0
Cbc0038I Pass   7: suminf.    0.47619 (1) obj. -41.1933 iterations 10
Cbc0038I Pass   8: suminf.    0.48462 (1) obj. -40.4773 iterations 3
Cbc0038I Pass   9: suminf.    0.87366 (5) obj. -41.5676 iterations 15
Cbc0038I Pass  10: suminf.    0.87366 (5) obj. -41.5676 iterations 0
Cbc0038I Pass  11: suminf.    0.85548 (5) obj. -40.4773 iterations 10
Cbc0038I Pass  12: suminf.    0.76456 (4) obj. -40.4773 iterations 4
Cbc0038I Pass  13: suminf.    0.50241 (3) obj. -40.4773 iterations 2
Cbc0038I Pass  14: suminf.    0.48011 (3) obj. -40.974 iterations 1
Cbc0038I Pass  15: suminf.    2.61620 (9) obj. -58.4592 iterations 11
Cbc0038I Pass  16: suminf.    2.05117 (7) obj. -57.4333 iterations 2
Cbc0038I Pass  17: suminf.    0.68912 (4) obj. -40.4773 iterations 12
Cbc0038I Pass  18: suminf.    0.66997 (3) obj. -40.4773 iterations 5
Cbc0038I Pass  19: suminf.    0.53263 (3) obj. -40.4773 iterations 5
Cbc0038I Pass  20: suminf.    0.32323 (2) obj. -40.6849 iterations 2
Cbc0038I Pass  21: suminf.    1.25022 (6) obj. -47.9069 iterations 5
Cbc0038I Pass  22: suminf.    0.94175 (4) obj. -46.8868 iterations 3
Cbc0038I Pass  23: suminf.    0.68912 (4) obj. -40.4773 iterations 8
Cbc0038I Pass  24: suminf.    0.66997 (3) obj. -40.4773 iterations 5
Cbc0038I Pass  25: suminf.    0.53263 (3) obj. -40.4773 iterations 5
Cbc0038I Pass  26: suminf.    0.32323 (2) obj. -40.6849 iterations 2
Cbc0038I Pass  27: suminf.    2.31566 (9) obj. -53.4604 iterations 9
Cbc0038I Pass  28: suminf.    1.63719 (7) obj. -49.0314 iterations 2
Cbc0038I Pass  29: suminf.    0.70588 (5) obj. -40.4773 iterations 9
Cbc0038I Pass  30: suminf.    0.63011 (5) obj. -40.4773 iterations 2
Cbc0038I Pass  31: suminf.    1.16227 (6) obj. -40.4773 iterations 4
Cbc0038I Pass  32: suminf.    0.94685 (3) obj. -40.4773 iterations 10
Cbc0038I Rounding solution of -36.0856 is better than previous of -35.6581

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -49.1517
Cbc0038I Pass  32: suminf.    1.76202 (11) obj. -60.2382 iterations 0
Cbc0038I Pass  33: suminf.    1.76202 (11) obj. -60.2382 iterations 1
Cbc0038I Pass  34: suminf.    1.31848 (5) obj. -49.1517 iterations 26
Cbc0038I Pass  35: suminf.    0.56960 (5) obj. -49.1517 iterations 2
Cbc0038I Pass  36: suminf.    0.56960 (5) obj. -49.1517 iterations 0
Cbc0038I Pass  37: suminf.    0.85985 (3) obj. -49.1517 iterations 11
Cbc0038I Pass  38: suminf.    0.85985 (3) obj. -49.1517 iterations 1
Cbc0038I Pass  39: suminf.    1.05728 (3) obj. -49.1517 iterations 4
Cbc0038I Pass  40: suminf.    0.78975 (3) obj. -49.1517 iterations 6
Cbc0038I Pass  41: suminf.    0.77276 (5) obj. -49.1517 iterations 5
Cbc0038I Pass  42: suminf.    0.63355 (4) obj. -49.1517 iterations 7
Cbc0038I Pass  43: suminf.    0.63355 (4) obj. -49.1517 iterations 0
Cbc0038I Pass  44: suminf.    1.21893 (4) obj. -49.1517 iterations 3
Cbc0038I Pass  45: suminf.    0.66831 (3) obj. -49.1517 iterations 5
Cbc0038I Pass  46: suminf.    0.85985 (3) obj. -49.1517 iterations 7
Cbc0038I Pass  47: suminf.    0.85985 (3) obj. -49.1517 iterations 0
Cbc0038I Pass  48: suminf.    1.05728 (3) obj. -49.1517 iterations 2
Cbc0038I Pass  49: suminf.    0.78975 (3) obj. -49.1517 iterations 6
Cbc0038I Pass  50: suminf.    0.77276 (5) obj. -49.1517 iterations 3
Cbc0038I Pass  51: suminf.    0.63355 (4) obj. -49.1517 iterations 7
Cbc0038I Pass  52: suminf.    0.63355 (4) obj. -49.1517 iterations 0
Cbc0038I Pass  53: suminf.    1.21893 (4) obj. -49.1517 iterations 3
Cbc0038I Pass  54: suminf.    0.66831 (3) obj. -49.1517 iterations 5
Cbc0038I Pass  55: suminf.    0.85985 (3) obj. -49.1517 iterations 7
Cbc0038I Pass  56: suminf.    0.85985 (3) obj. -49.1517 iterations 0
Cbc0038I Pass  57: suminf.    1.05728 (3) obj. -49.1517 iterations 2
Cbc0038I Pass  58: suminf.    0.78975 (3) obj. -49.1517 iterations 6
Cbc0038I Pass  59: suminf.    0.77276 (5) obj. -49.1517 iterations 3
Cbc0038I Pass  60: suminf.    0.63355 (4) obj. -49.1517 iterations 8
Cbc0038I Pass  61: suminf.    0.63355 (4) obj. -49.1517 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -36.0856 - took 0.02 seconds
Cbc0012I Integer solution of -36.085636 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 9 rows 10 columns
Cbc0031I 19 added rows had average density of 12.052632
Cbc0013I At root node, 19 cuts changed objective from -83.849188 to -45.200423 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1880 row cuts average 3.3 elements, 5 column cuts (5 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 517 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 11 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 184 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.809 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.085636 best solution, best possible -45.200423 (1.60 seconds)
Cbc0010I After 6 nodes, 3 on tree, -36.085636 best solution, best possible -44.320838 (2.43 seconds)
Cbc0004I Integer solution of -36.9145 found after 2120 iterations and 12 nodes (2.78 seconds)
Cbc0010I After 22 nodes, 1 on tree, -36.9145 best solution, best possible -40.4975 (3.14 seconds)
Cbc0001I Search completed - best objective -36.9145, took 2530 iterations and 30 nodes (3.45 seconds)
Cbc0032I Strong branching done 376 times (1991 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 6, 38 variables fixed on reduced cost
Total time (CPU seconds):       2.19   (Wallclock seconds):       3.45

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 111 (-18) elements
Clp1000I sum of infeasibilities 9.97679e-05 - average 2.69643e-06, 2 fixed columns
Coin0506I Presolve 33 (-4) rows, 20 (-2) columns and 99 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 83.053942
Clp0000I Optimal - objective value 83.053942
Coin0511I After Postsolve, objective 83.053942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.053942
Clp0000I Optimal - objective value 83.053942
Clp0000I Optimal - objective value 83.053942
Coin0511I After Postsolve, objective 83.053942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.0539422 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.26729
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.2032 iterations 16
Cbc0038I Solution found of 1.2032
Cbc0038I Relaxing continuous gives 1.2032
Cbc0038I Rounding solution of -17.0676 is better than previous of 1.2032

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -17.0676 to -36.0856 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.7825
Cbc0038I Pass   2: suminf.    1.07843 (3) obj. -40.7825 iterations 4
Cbc0038I Pass   3: suminf.    0.62839 (7) obj. -40.7825 iterations 8
Cbc0038I Pass   4: suminf.    1.40750 (5) obj. -40.7825 iterations 12
Cbc0038I Pass   5: suminf.    1.08203 (4) obj. -40.7825 iterations 2
Cbc0038I Pass   6: suminf.    0.17669 (2) obj. -40.7825 iterations 9
Cbc0038I Pass   7: suminf.    0.11913 (1) obj. -40.7825 iterations 1
Cbc0038I Pass   8: suminf.    0.60581 (2) obj. -40.7825 iterations 2
Cbc0038I Pass   9: suminf.    0.35362 (1) obj. -40.7825 iterations 2
Cbc0038I Pass  10: suminf.    0.59946 (2) obj. -40.7825 iterations 2
Cbc0038I Pass  11: suminf.    0.80597 (2) obj. -40.7825 iterations 5
Cbc0038I Pass  12: suminf.    0.94018 (2) obj. -40.7825 iterations 2
Cbc0038I Pass  13: suminf.    1.40668 (5) obj. -40.7825 iterations 7
Cbc0038I Pass  14: suminf.    1.17511 (3) obj. -40.7825 iterations 2
Cbc0038I Pass  15: suminf.    0.78000 (3) obj. -40.7825 iterations 6
Cbc0038I Pass  16: suminf.    0.55679 (2) obj. -40.7825 iterations 3
Cbc0038I Pass  17: suminf.    1.17879 (3) obj. -40.7825 iterations 2
Cbc0038I Pass  18: suminf.    0.98733 (4) obj. -40.7825 iterations 2
Cbc0038I Pass  19: suminf.    0.96735 (4) obj. -40.7825 iterations 6
Cbc0038I Pass  20: suminf.    0.94298 (4) obj. -40.7825 iterations 1
Cbc0038I Pass  21: suminf.    0.70390 (3) obj. -40.7825 iterations 4
Cbc0038I Pass  22: suminf.    0.70390 (3) obj. -40.7825 iterations 0
Cbc0038I Pass  23: suminf.    0.96836 (3) obj. -40.7825 iterations 4
Cbc0038I Pass  24: suminf.    0.88908 (3) obj. -40.7825 iterations 2
Cbc0038I Pass  25: suminf.    0.98733 (4) obj. -40.7825 iterations 4
Cbc0038I Pass  26: suminf.    0.98733 (4) obj. -40.7825 iterations 0
Cbc0038I Pass  27: suminf.    0.96735 (4) obj. -40.7825 iterations 6
Cbc0038I Pass  28: suminf.    0.94298 (4) obj. -40.7825 iterations 1
Cbc0038I Pass  29: suminf.    0.70390 (3) obj. -40.7825 iterations 4
Cbc0038I Pass  30: suminf.    0.70390 (3) obj. -40.7825 iterations 0
Cbc0038I Pass  31: suminf.    0.96836 (3) obj. -40.7825 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.0856 - took 0.03 seconds
Cbc0012I Integer solution of -36.0856 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 29 rows 17 columns
Cbc0031I 11 added rows had average density of 18.909091
Cbc0013I At root node, 11 cuts changed objective from -83.053942 to -66.704902 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1674 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 679 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0004I Integer solution of -36.9145 found after 3346 iterations and 26 nodes (0.24 seconds)
Cbc0001I Search completed - best objective -36.9145, took 3346 iterations and 26 nodes (0.24 seconds)
Cbc0032I Strong branching done 218 times (1844 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 40 (-5) columns and 298 (-63) elements
Clp1000I sum of infeasibilities 1.68687e-08 - average 4.81964e-10, 26 fixed columns
Coin0506I Presolve 11 (-24) rows, 14 (-26) columns and 46 (-252) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 1.9637306 - largest nonzero change 0 ( 0%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 27.160085
Clp0000I Optimal - objective value 27.160085
Coin0511I After Postsolve, objective 27.160085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0036105 - largest nonzero change 2.0786599e-05 ( 0.0020786599%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 101.93501
Clp0000I Optimal - objective value 101.93501
Clp0000I Optimal - objective value 101.93501
Coin0511I After Postsolve, objective 101.93501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.9350149 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 305 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.68068
Cbc0038I Pass   1: suminf.    1.76202 (11) obj. -60.2382 iterations 9
Cbc0038I Pass   2: suminf.    1.76202 (11) obj. -60.2382 iterations 1
Cbc0038I Solution found of -17.3873
Cbc0038I Rounding solution of -27.7879 is better than previous of -17.3873

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -27.7879 to -35.6581 (0.01 seconds)
Cbc0038I Round again with cutoff of -40.4773
Cbc0038I Pass   3: suminf.    1.76202 (11) obj. -60.2382 iterations 0
Cbc0038I Pass   4: suminf.    1.76202 (11) obj. -60.2382 iterations 1
Cbc0038I Pass   5: suminf.    0.31371 (3) obj. -40.4773 iterations 18
Cbc0038I Pass   6: suminf.    0.31371 (3) obj. -40.4773 iterations 0
Cbc0038I Pass   7: suminf.    0.47619 (1) obj. -41.1933 iterations 10
Cbc0038I Pass   8: suminf.    0.48462 (1) obj. -40.4773 iterations 3
Cbc0038I Pass   9: suminf.    0.87366 (5) obj. -41.5676 iterations 15
Cbc0038I Pass  10: suminf.    0.87366 (5) obj. -41.5676 iterations 0
Cbc0038I Pass  11: suminf.    0.85548 (5) obj. -40.4773 iterations 10
Cbc0038I Pass  12: suminf.    0.76456 (4) obj. -40.4773 iterations 4
Cbc0038I Pass  13: suminf.    0.50241 (3) obj. -40.4773 iterations 2
Cbc0038I Pass  14: suminf.    0.48011 (3) obj. -40.974 iterations 1
Cbc0038I Pass  15: suminf.    2.61620 (9) obj. -58.4592 iterations 11
Cbc0038I Pass  16: suminf.    2.05117 (7) obj. -57.4333 iterations 2
Cbc0038I Pass  17: suminf.    0.68912 (4) obj. -40.4773 iterations 12
Cbc0038I Pass  18: suminf.    0.66997 (3) obj. -40.4773 iterations 5
Cbc0038I Pass  19: suminf.    0.53263 (3) obj. -40.4773 iterations 5
Cbc0038I Pass  20: suminf.    0.32323 (2) obj. -40.6849 iterations 2
Cbc0038I Pass  21: suminf.    1.25022 (6) obj. -47.9069 iterations 5
Cbc0038I Pass  22: suminf.    0.94175 (4) obj. -46.8868 iterations 3
Cbc0038I Pass  23: suminf.    0.68912 (4) obj. -40.4773 iterations 8
Cbc0038I Pass  24: suminf.    0.66997 (3) obj. -40.4773 iterations 5
Cbc0038I Pass  25: suminf.    0.53263 (3) obj. -40.4773 iterations 5
Cbc0038I Pass  26: suminf.    0.32323 (2) obj. -40.6849 iterations 2
Cbc0038I Pass  27: suminf.    2.31566 (9) obj. -53.4604 iterations 9
Cbc0038I Pass  28: suminf.    1.63719 (7) obj. -49.0314 iterations 2
Cbc0038I Pass  29: suminf.    0.70588 (5) obj. -40.4773 iterations 9
Cbc0038I Pass  30: suminf.    0.63011 (5) obj. -40.4773 iterations 2
Cbc0038I Pass  31: suminf.    1.16227 (6) obj. -40.4773 iterations 4
Cbc0038I Pass  32: suminf.    0.94685 (3) obj. -40.4773 iterations 10
Cbc0038I Rounding solution of -36.0856 is better than previous of -35.6581

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -49.1517
Cbc0038I Pass  32: suminf.    1.76202 (11) obj. -60.2382 iterations 0
Cbc0038I Pass  33: suminf.    1.76202 (11) obj. -60.2382 iterations 1
Cbc0038I Pass  34: suminf.    1.31848 (5) obj. -49.1517 iterations 26
Cbc0038I Pass  35: suminf.    0.56960 (5) obj. -49.1517 iterations 2
Cbc0038I Pass  36: suminf.    0.56960 (5) obj. -49.1517 iterations 0
Cbc0038I Pass  37: suminf.    0.85985 (3) obj. -49.1517 iterations 11
Cbc0038I Pass  38: suminf.    0.85985 (3) obj. -49.1517 iterations 1
Cbc0038I Pass  39: suminf.    1.05728 (3) obj. -49.1517 iterations 4
Cbc0038I Pass  40: suminf.    0.78975 (3) obj. -49.1517 iterations 6
Cbc0038I Pass  41: suminf.    0.77276 (5) obj. -49.1517 iterations 5
Cbc0038I Pass  42: suminf.    0.63355 (4) obj. -49.1517 iterations 7
Cbc0038I Pass  43: suminf.    0.63355 (4) obj. -49.1517 iterations 0
Cbc0038I Pass  44: suminf.    1.21893 (4) obj. -49.1517 iterations 3
Cbc0038I Pass  45: suminf.    0.66831 (3) obj. -49.1517 iterations 5
Cbc0038I Pass  46: suminf.    0.85985 (3) obj. -49.1517 iterations 7
Cbc0038I Pass  47: suminf.    0.85985 (3) obj. -49.1517 iterations 0
Cbc0038I Pass  48: suminf.    1.05728 (3) obj. -49.1517 iterations 2
Cbc0038I Pass  49: suminf.    0.78975 (3) obj. -49.1517 iterations 6
Cbc0038I Pass  50: suminf.    0.77276 (5) obj. -49.1517 iterations 3
Cbc0038I Pass  51: suminf.    0.63355 (4) obj. -49.1517 iterations 7
Cbc0038I Pass  52: suminf.    0.63355 (4) obj. -49.1517 iterations 0
Cbc0038I Pass  53: suminf.    1.21893 (4) obj. -49.1517 iterations 3
Cbc0038I Pass  54: suminf.    0.66831 (3) obj. -49.1517 iterations 5
Cbc0038I Pass  55: suminf.    0.85985 (3) obj. -49.1517 iterations 7
Cbc0038I Pass  56: suminf.    0.85985 (3) obj. -49.1517 iterations 0
Cbc0038I Pass  57: suminf.    1.05728 (3) obj. -49.1517 iterations 2
Cbc0038I Pass  58: suminf.    0.78975 (3) obj. -49.1517 iterations 6
Cbc0038I Pass  59: suminf.    0.77276 (5) obj. -49.1517 iterations 3
Cbc0038I Pass  60: suminf.    0.63355 (4) obj. -49.1517 iterations 8
Cbc0038I Pass  61: suminf.    0.63355 (4) obj. -49.1517 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -36.0856 - took 0.03 seconds
Cbc0012I Integer solution of -36.085636 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 9 rows 10 columns
Cbc0031I 19 added rows had average density of 12.052632
Cbc0013I At root node, 19 cuts changed objective from -83.849188 to -45.200423 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1880 row cuts average 3.3 elements, 5 column cuts (5 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 517 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 11 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 184 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.756 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.085636 best solution, best possible -45.200423 (1.52 seconds)
Cbc0010I After 6 nodes, 3 on tree, -36.085636 best solution, best possible -44.320838 (2.24 seconds)
Cbc0004I Integer solution of -36.9145 found after 2120 iterations and 12 nodes (2.61 seconds)
Cbc0010I After 21 nodes, 1 on tree, -36.9145 best solution, best possible -44.320838 (2.95 seconds)
Cbc0001I Search completed - best objective -36.9145, took 2530 iterations and 30 nodes (3.35 seconds)
Cbc0032I Strong branching done 376 times (1991 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 6, 38 variables fixed on reduced cost
Total time (CPU seconds):       2.12   (Wallclock seconds):       3.35

