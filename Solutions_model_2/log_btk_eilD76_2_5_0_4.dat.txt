Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 59 (-19) columns and 318 (-135) elements
Clp1000I sum of infeasibilities 0.00029017 - average 2.81718e-06, 37 fixed columns
Coin0506I Presolve 18 (-85) rows, 16 (-43) columns and 62 (-256) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 387.56544
Clp0000I Optimal - objective value 387.56544
Coin0511I After Postsolve, objective 387.56544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.47030253 - largest nonzero change 0 ( 0%) - largest zero change 2.8303351e-05
Clp0000I Optimal - objective value 387.56544
Clp0000I Optimal - objective value 387.56544
Clp0000I Optimal - objective value 387.56544
Coin0511I After Postsolve, objective 387.56544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 387.5654426 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 103 rows, 59 columns (58 integer (58 of which binary)) and 318 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 1.28778
Cbc0038I Pass   1: suminf.    0.06452 (1) obj. -384.641 iterations 14
Cbc0038I Solution found of -321.209
Cbc0038I Relaxing continuous gives -321.37
Cbc0038I Rounding solution of -338.211 is better than previous of -321.37

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 59 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -338.211 to -360.89 (0.01 seconds)
Cbc0038I Round again with cutoff of -363.558
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.06452 (1) obj. -384.641 iterations 0
Cbc0038I Pass   3: suminf.    0.37783 (1) obj. -363.558 iterations 2
Cbc0038I Pass   4: suminf.    0.58991 (4) obj. -363.558 iterations 9
Cbc0038I Pass   5: suminf.    0.50805 (3) obj. -363.558 iterations 9
Cbc0038I Pass   6: suminf.    0.49666 (6) obj. -363.558 iterations 12
Cbc0038I Pass   7: suminf.    0.22857 (2) obj. -363.558 iterations 3
Cbc0038I Pass   8: suminf.    0.06452 (1) obj. -384.641 iterations 8
Cbc0038I Pass   9: suminf.    0.37783 (1) obj. -363.558 iterations 2
Cbc0038I Pass  10: suminf.    1.70051 (4) obj. -363.558 iterations 9
Cbc0038I Pass  11: suminf.    0.40408 (1) obj. -363.558 iterations 9
Cbc0038I Pass  12: suminf.    0.40408 (1) obj. -363.558 iterations 0
Cbc0038I Pass  13: suminf.    0.84626 (5) obj. -363.558 iterations 11
Cbc0038I Pass  14: suminf.    0.62503 (3) obj. -363.558 iterations 8
Cbc0038I Pass  15: suminf.    2.20832 (10) obj. -363.558 iterations 13
Cbc0038I Pass  16: suminf.    2.32665 (7) obj. -363.558 iterations 12
Cbc0038I Pass  17: suminf.    2.28313 (9) obj. -363.558 iterations 8
Cbc0038I Pass  18: suminf.    0.62942 (5) obj. -363.558 iterations 10
Cbc0038I Pass  19: suminf.    0.11325 (4) obj. -363.558 iterations 8
Cbc0038I Pass  20: suminf.    0.62942 (5) obj. -363.558 iterations 6
Cbc0038I Pass  21: suminf.    1.08622 (7) obj. -363.558 iterations 8
Cbc0038I Pass  22: suminf.    0.99576 (5) obj. -363.558 iterations 6
Cbc0038I Pass  23: suminf.    0.69380 (5) obj. -363.558 iterations 12
Cbc0038I Pass  24: suminf.    0.94870 (3) obj. -363.558 iterations 13
Cbc0038I Solution found of -364.385
Cbc0038I Relaxing continuous gives -364.385
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 59 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -369.021
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 3
Cbc0038I Pass  25: suminf.    0.06452 (1) obj. -384.641 iterations 0
Cbc0038I Pass  26: suminf.    0.29725 (1) obj. -369.021 iterations 2
Cbc0038I Pass  27: suminf.    0.88646 (3) obj. -369.021 iterations 6
Cbc0038I Pass  28: suminf.    0.93437 (6) obj. -369.021 iterations 13
Cbc0038I Pass  29: suminf.    0.13755 (3) obj. -369.021 iterations 11
Cbc0038I Pass  30: suminf.    2.45193 (8) obj. -369.021 iterations 13
Cbc0038I Pass  31: suminf.    1.00417 (4) obj. -369.021 iterations 11
Cbc0038I Pass  32: suminf.    0.88783 (3) obj. -369.021 iterations 1
Cbc0038I Pass  33: suminf.    1.83874 (7) obj. -369.021 iterations 11
Cbc0038I Pass  34: suminf.    1.04162 (5) obj. -369.021 iterations 9
Cbc0038I Pass  35: suminf.    0.43852 (4) obj. -369.021 iterations 4
Cbc0038I Pass  36: suminf.    0.88125 (3) obj. -369.021 iterations 5
Cbc0038I Pass  37: suminf.    0.47759 (4) obj. -369.021 iterations 8
Cbc0038I Pass  38: suminf.    0.91540 (4) obj. -369.021 iterations 7
Cbc0038I Pass  39: suminf.    1.42054 (4) obj. -369.021 iterations 14
Cbc0038I Pass  40: suminf.    0.30429 (2) obj. -369.021 iterations 4
Cbc0038I Pass  41: suminf.    0.25926 (1) obj. -372.215 iterations 4
Cbc0038I Pass  42: suminf.    0.24126 (3) obj. -369.021 iterations 8
Cbc0038I Pass  43: suminf.    1.95431 (7) obj. -369.021 iterations 11
Cbc0038I Pass  44: suminf.    1.18010 (4) obj. -369.021 iterations 4
Cbc0038I Pass  45: suminf.    1.18010 (4) obj. -369.021 iterations 1
Cbc0038I Pass  46: suminf.    0.35761 (4) obj. -369.021 iterations 11
Cbc0038I Pass  47: suminf.    0.24126 (3) obj. -369.021 iterations 1
Cbc0038I Pass  48: suminf.    1.95431 (7) obj. -369.021 iterations 11
Cbc0038I Pass  49: suminf.    1.18010 (4) obj. -369.021 iterations 4
Cbc0038I Pass  50: suminf.    1.18010 (4) obj. -369.021 iterations 1
Cbc0038I Pass  51: suminf.    0.35761 (4) obj. -369.021 iterations 11
Cbc0038I Pass  52: suminf.    0.24126 (3) obj. -369.021 iterations 1
Cbc0038I Pass  53: suminf.    1.95431 (7) obj. -369.021 iterations 11
Cbc0038I Pass  54: suminf.    1.18010 (4) obj. -369.021 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 59 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -364.385 - took 0.02 seconds
Cbc0012I Integer solution of -364.3853 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 103 rows 59 columns, reduced to 16 rows 13 columns
Cbc0031I 6 added rows had average density of 29
Cbc0013I At root node, 6 cuts changed objective from -387.56544 to -374.75013 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 74 row cuts average 2.9 elements, 6 column cuts (6 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 58.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0001I Search completed - best objective -364.3853000000001, took 311 iterations and 8 nodes (0.62 seconds)
Cbc0032I Strong branching done 42 times (210 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-72) rows, 95 (-57) columns and 1426 (-1877) elements
Clp1000I sum of infeasibilities 1.49398e-06 - average 1.82192e-08, 61 fixed columns
Coin0506I Presolve 23 (-59) rows, 32 (-63) columns and 106 (-1320) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 1.2370796 - largest nonzero change 1.721383e-05 ( 0.00086069148%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 375.49716
Clp0000I Optimal - objective value 375.49716
Coin0511I After Postsolve, objective 375.49716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.9338452 - largest nonzero change 2.9144298e-05 ( 0.0016580886%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 423.00951
Clp0000I Optimal - objective value 423.00951
Clp0000I Optimal - objective value 423.00951
Coin0511I After Postsolve, objective 423.00951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 423.0095145 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 99 columns (99 integer (99 of which binary)) and 1443 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.792%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.93871
Cbc0038I Pass   1: suminf.    4.14715 (28) obj. -412.185 iterations 9
Cbc0038I Solution found of -321.37
Cbc0038I Rounding solution of -324.764 is better than previous of -321.37

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 99 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -324.764 to -339.872 (0.03 seconds)
Cbc0038I Round again with cutoff of -347.337
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    4.14715 (28) obj. -412.185 iterations 0
Cbc0038I Pass   3: suminf.    2.03546 (16) obj. -398.212 iterations 12
Cbc0038I Pass   4: suminf.    0.42719 (1) obj. -347.337 iterations 16
Cbc0038I Pass   5: suminf.    0.06452 (1) obj. -381.802 iterations 1
Cbc0038I Pass   6: suminf.    2.19619 (11) obj. -347.337 iterations 10
Cbc0038I Pass   7: suminf.    0.95468 (5) obj. -347.337 iterations 12
Cbc0038I Pass   8: suminf.    2.28753 (16) obj. -347.337 iterations 24
Cbc0038I Pass   9: suminf.    1.91231 (13) obj. -351.172 iterations 9
Cbc0038I Pass  10: suminf.    0.25965 (2) obj. -347.337 iterations 15
Cbc0038I Pass  11: suminf.    0.26776 (5) obj. -347.337 iterations 4
Cbc0038I Pass  12: suminf.    0.25168 (1) obj. -347.337 iterations 6
Cbc0038I Solution found of -356.89
Cbc0038I Rounding solution of -364.283 is better than previous of -356.89

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 99 columns, reduced to 31 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -374.331
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  13: suminf.    4.14715 (28) obj. -412.185 iterations 0
Cbc0038I Pass  14: suminf.    0.17471 (1) obj. -374.331 iterations 28
Cbc0038I Pass  15: suminf.    0.06452 (1) obj. -381.802 iterations 1
Cbc0038I Pass  16: suminf.    1.58568 (10) obj. -374.331 iterations 18
Cbc0038I Pass  17: suminf.    1.26003 (10) obj. -374.331 iterations 9
Cbc0038I Pass  18: suminf.    0.81342 (2) obj. -374.331 iterations 13
Cbc0038I Pass  19: suminf.    0.59209 (9) obj. -374.331 iterations 4
Cbc0038I Pass  20: suminf.    0.85886 (5) obj. -374.331 iterations 16
Cbc0038I Pass  21: suminf.    0.85886 (5) obj. -374.331 iterations 0
Cbc0038I Pass  22: suminf.    1.08379 (5) obj. -374.331 iterations 2
Cbc0038I Pass  23: suminf.    0.98481 (5) obj. -374.331 iterations 2
Cbc0038I Pass  24: suminf.    0.86149 (5) obj. -374.331 iterations 3
Cbc0038I Pass  25: suminf.    1.63009 (8) obj. -374.331 iterations 7
Cbc0038I Pass  26: suminf.    1.12415 (8) obj. -374.331 iterations 5
Cbc0038I Pass  27: suminf.    1.69414 (5) obj. -374.331 iterations 11
Cbc0038I Pass  28: suminf.    1.69414 (5) obj. -374.331 iterations 0
Cbc0038I Pass  29: suminf.    1.54293 (5) obj. -374.331 iterations 1
Cbc0038I Pass  30: suminf.    0.95435 (5) obj. -374.331 iterations 1
Cbc0038I Pass  31: suminf.    0.88264 (6) obj. -374.331 iterations 4
Cbc0038I Pass  32: suminf.    1.69414 (5) obj. -374.331 iterations 9
Cbc0038I Pass  33: suminf.    1.69414 (5) obj. -374.331 iterations 0
Cbc0038I Pass  34: suminf.    1.54293 (5) obj. -374.331 iterations 1
Cbc0038I Pass  35: suminf.    0.95435 (5) obj. -374.331 iterations 1
Cbc0038I Pass  36: suminf.    0.88264 (6) obj. -374.331 iterations 4
Cbc0038I Pass  37: suminf.    1.69414 (5) obj. -374.331 iterations 9
Cbc0038I Pass  38: suminf.    1.69414 (5) obj. -374.331 iterations 0
Cbc0038I Pass  39: suminf.    1.54293 (5) obj. -374.331 iterations 1
Cbc0038I Pass  40: suminf.    0.95435 (5) obj. -374.331 iterations 1
Cbc0038I Pass  41: suminf.    0.88264 (6) obj. -374.331 iterations 4
Cbc0038I Pass  42: suminf.    1.69414 (5) obj. -374.331 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 99 columns, reduced to 23 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -364.283 - took 0.03 seconds
Cbc0012I Integer solution of -364.28324 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 86 rows 99 columns, reduced to 13 rows 15 columns
Cbc0031I 24 added rows had average density of 15.625
Cbc0013I At root node, 24 cuts changed objective from -414.52085 to -369.24208 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 667 row cuts average 13.3 elements, 28 column cuts (28 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 117 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 34.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.229 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -364.28324 best solution, best possible -369.24202 (0.54 seconds)
Cbc0012I Integer solution of -364.3853 found by DiveCoefficient after 434 iterations and 4 nodes (0.80 seconds)
Cbc0001I Search completed - best objective -364.3853000000001, took 526 iterations and 8 nodes (0.90 seconds)
Cbc0032I Strong branching done 110 times (778 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.57   (Wallclock seconds):       0.91

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 59 (-19) columns and 318 (-135) elements
Clp1000I sum of infeasibilities 0.00029017 - average 2.81718e-06, 37 fixed columns
Coin0506I Presolve 18 (-85) rows, 16 (-43) columns and 62 (-256) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 387.56544
Clp0000I Optimal - objective value 387.56544
Coin0511I After Postsolve, objective 387.56544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.47030253 - largest nonzero change 0 ( 0%) - largest zero change 2.8303351e-05
Clp0000I Optimal - objective value 387.56544
Clp0000I Optimal - objective value 387.56544
Clp0000I Optimal - objective value 387.56544
Coin0511I After Postsolve, objective 387.56544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 387.5654426 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 103 rows, 59 columns (58 integer (58 of which binary)) and 318 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 1.28778
Cbc0038I Pass   1: suminf.    0.06452 (1) obj. -384.641 iterations 14
Cbc0038I Solution found of -321.209
Cbc0038I Relaxing continuous gives -321.37
Cbc0038I Rounding solution of -338.211 is better than previous of -321.37

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 59 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -338.211 to -360.89 (0.01 seconds)
Cbc0038I Round again with cutoff of -363.558
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.06452 (1) obj. -384.641 iterations 0
Cbc0038I Pass   3: suminf.    0.37783 (1) obj. -363.558 iterations 2
Cbc0038I Pass   4: suminf.    0.58991 (4) obj. -363.558 iterations 9
Cbc0038I Pass   5: suminf.    0.50805 (3) obj. -363.558 iterations 9
Cbc0038I Pass   6: suminf.    0.49666 (6) obj. -363.558 iterations 12
Cbc0038I Pass   7: suminf.    0.22857 (2) obj. -363.558 iterations 3
Cbc0038I Pass   8: suminf.    0.06452 (1) obj. -384.641 iterations 8
Cbc0038I Pass   9: suminf.    0.37783 (1) obj. -363.558 iterations 2
Cbc0038I Pass  10: suminf.    1.70051 (4) obj. -363.558 iterations 9
Cbc0038I Pass  11: suminf.    0.40408 (1) obj. -363.558 iterations 9
Cbc0038I Pass  12: suminf.    0.40408 (1) obj. -363.558 iterations 0
Cbc0038I Pass  13: suminf.    0.84626 (5) obj. -363.558 iterations 11
Cbc0038I Pass  14: suminf.    0.62503 (3) obj. -363.558 iterations 8
Cbc0038I Pass  15: suminf.    2.20832 (10) obj. -363.558 iterations 13
Cbc0038I Pass  16: suminf.    2.32665 (7) obj. -363.558 iterations 12
Cbc0038I Pass  17: suminf.    2.28313 (9) obj. -363.558 iterations 8
Cbc0038I Pass  18: suminf.    0.62942 (5) obj. -363.558 iterations 10
Cbc0038I Pass  19: suminf.    0.11325 (4) obj. -363.558 iterations 8
Cbc0038I Pass  20: suminf.    0.62942 (5) obj. -363.558 iterations 6
Cbc0038I Pass  21: suminf.    1.08622 (7) obj. -363.558 iterations 8
Cbc0038I Pass  22: suminf.    0.99576 (5) obj. -363.558 iterations 6
Cbc0038I Pass  23: suminf.    0.69380 (5) obj. -363.558 iterations 12
Cbc0038I Pass  24: suminf.    0.94870 (3) obj. -363.558 iterations 13
Cbc0038I Solution found of -364.385
Cbc0038I Relaxing continuous gives -364.385
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 59 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -369.021
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 3
Cbc0038I Pass  25: suminf.    0.06452 (1) obj. -384.641 iterations 0
Cbc0038I Pass  26: suminf.    0.29725 (1) obj. -369.021 iterations 2
Cbc0038I Pass  27: suminf.    0.88646 (3) obj. -369.021 iterations 6
Cbc0038I Pass  28: suminf.    0.93437 (6) obj. -369.021 iterations 13
Cbc0038I Pass  29: suminf.    0.13755 (3) obj. -369.021 iterations 11
Cbc0038I Pass  30: suminf.    2.45193 (8) obj. -369.021 iterations 13
Cbc0038I Pass  31: suminf.    1.00417 (4) obj. -369.021 iterations 11
Cbc0038I Pass  32: suminf.    0.88783 (3) obj. -369.021 iterations 1
Cbc0038I Pass  33: suminf.    1.83874 (7) obj. -369.021 iterations 11
Cbc0038I Pass  34: suminf.    1.04162 (5) obj. -369.021 iterations 9
Cbc0038I Pass  35: suminf.    0.43852 (4) obj. -369.021 iterations 4
Cbc0038I Pass  36: suminf.    0.88125 (3) obj. -369.021 iterations 5
Cbc0038I Pass  37: suminf.    0.47759 (4) obj. -369.021 iterations 8
Cbc0038I Pass  38: suminf.    0.91540 (4) obj. -369.021 iterations 7
Cbc0038I Pass  39: suminf.    1.42054 (4) obj. -369.021 iterations 14
Cbc0038I Pass  40: suminf.    0.30429 (2) obj. -369.021 iterations 4
Cbc0038I Pass  41: suminf.    0.25926 (1) obj. -372.215 iterations 4
Cbc0038I Pass  42: suminf.    0.24126 (3) obj. -369.021 iterations 8
Cbc0038I Pass  43: suminf.    1.95431 (7) obj. -369.021 iterations 11
Cbc0038I Pass  44: suminf.    1.18010 (4) obj. -369.021 iterations 4
Cbc0038I Pass  45: suminf.    1.18010 (4) obj. -369.021 iterations 1
Cbc0038I Pass  46: suminf.    0.35761 (4) obj. -369.021 iterations 11
Cbc0038I Pass  47: suminf.    0.24126 (3) obj. -369.021 iterations 1
Cbc0038I Pass  48: suminf.    1.95431 (7) obj. -369.021 iterations 11
Cbc0038I Pass  49: suminf.    1.18010 (4) obj. -369.021 iterations 4
Cbc0038I Pass  50: suminf.    1.18010 (4) obj. -369.021 iterations 1
Cbc0038I Pass  51: suminf.    0.35761 (4) obj. -369.021 iterations 11
Cbc0038I Pass  52: suminf.    0.24126 (3) obj. -369.021 iterations 1
Cbc0038I Pass  53: suminf.    1.95431 (7) obj. -369.021 iterations 11
Cbc0038I Pass  54: suminf.    1.18010 (4) obj. -369.021 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 59 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -364.385 - took 0.02 seconds
Cbc0012I Integer solution of -364.3853 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 103 rows 59 columns, reduced to 16 rows 13 columns
Cbc0031I 6 added rows had average density of 29
Cbc0013I At root node, 6 cuts changed objective from -387.56544 to -374.75013 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 74 row cuts average 2.9 elements, 6 column cuts (6 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 58.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0001I Search completed - best objective -364.3853000000001, took 311 iterations and 8 nodes (0.60 seconds)
Cbc0032I Strong branching done 42 times (210 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-73) rows, 95 (-58) columns and 1426 (-1878) elements
Clp1000I sum of infeasibilities 1.49398e-06 - average 1.82192e-08, 61 fixed columns
Coin0506I Presolve 23 (-59) rows, 32 (-63) columns and 106 (-1320) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 1.2370796 - largest nonzero change 1.721383e-05 ( 0.00086069148%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 375.49716
Clp0000I Optimal - objective value 375.49716
Coin0511I After Postsolve, objective 375.49716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.9338452 - largest nonzero change 2.9144298e-05 ( 0.0016580886%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 423.00951
Clp0000I Optimal - objective value 423.00951
Clp0000I Optimal - objective value 423.00951
Coin0511I After Postsolve, objective 423.00951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 423.0095145 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 99 columns (99 integer (99 of which binary)) and 1443 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.792%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.93871
Cbc0038I Pass   1: suminf.    4.14715 (28) obj. -412.185 iterations 9
Cbc0038I Solution found of -321.37
Cbc0038I Rounding solution of -324.764 is better than previous of -321.37

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 99 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -324.764 to -339.872 (0.03 seconds)
Cbc0038I Round again with cutoff of -347.337
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    4.14715 (28) obj. -412.185 iterations 0
Cbc0038I Pass   3: suminf.    2.03546 (16) obj. -398.212 iterations 12
Cbc0038I Pass   4: suminf.    0.42719 (1) obj. -347.337 iterations 16
Cbc0038I Pass   5: suminf.    0.06452 (1) obj. -381.802 iterations 1
Cbc0038I Pass   6: suminf.    2.19619 (11) obj. -347.337 iterations 10
Cbc0038I Pass   7: suminf.    0.95468 (5) obj. -347.337 iterations 12
Cbc0038I Pass   8: suminf.    2.28753 (16) obj. -347.337 iterations 24
Cbc0038I Pass   9: suminf.    1.91231 (13) obj. -351.172 iterations 9
Cbc0038I Pass  10: suminf.    0.25965 (2) obj. -347.337 iterations 15
Cbc0038I Pass  11: suminf.    0.26776 (5) obj. -347.337 iterations 4
Cbc0038I Pass  12: suminf.    0.25168 (1) obj. -347.337 iterations 6
Cbc0038I Solution found of -356.89
Cbc0038I Rounding solution of -364.283 is better than previous of -356.89

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 99 columns, reduced to 31 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -374.331
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  13: suminf.    4.14715 (28) obj. -412.185 iterations 0
Cbc0038I Pass  14: suminf.    0.17471 (1) obj. -374.331 iterations 28
Cbc0038I Pass  15: suminf.    0.06452 (1) obj. -381.802 iterations 1
Cbc0038I Pass  16: suminf.    1.58568 (10) obj. -374.331 iterations 18
Cbc0038I Pass  17: suminf.    1.26003 (10) obj. -374.331 iterations 9
Cbc0038I Pass  18: suminf.    0.81342 (2) obj. -374.331 iterations 13
Cbc0038I Pass  19: suminf.    0.59209 (9) obj. -374.331 iterations 4
Cbc0038I Pass  20: suminf.    0.85886 (5) obj. -374.331 iterations 16
Cbc0038I Pass  21: suminf.    0.85886 (5) obj. -374.331 iterations 0
Cbc0038I Pass  22: suminf.    1.08379 (5) obj. -374.331 iterations 2
Cbc0038I Pass  23: suminf.    0.98481 (5) obj. -374.331 iterations 2
Cbc0038I Pass  24: suminf.    0.86149 (5) obj. -374.331 iterations 3
Cbc0038I Pass  25: suminf.    1.63009 (8) obj. -374.331 iterations 7
Cbc0038I Pass  26: suminf.    1.12415 (8) obj. -374.331 iterations 5
Cbc0038I Pass  27: suminf.    1.69414 (5) obj. -374.331 iterations 11
Cbc0038I Pass  28: suminf.    1.69414 (5) obj. -374.331 iterations 0
Cbc0038I Pass  29: suminf.    1.54293 (5) obj. -374.331 iterations 1
Cbc0038I Pass  30: suminf.    0.95435 (5) obj. -374.331 iterations 1
Cbc0038I Pass  31: suminf.    0.88264 (6) obj. -374.331 iterations 4
Cbc0038I Pass  32: suminf.    1.69414 (5) obj. -374.331 iterations 9
Cbc0038I Pass  33: suminf.    1.69414 (5) obj. -374.331 iterations 0
Cbc0038I Pass  34: suminf.    1.54293 (5) obj. -374.331 iterations 1
Cbc0038I Pass  35: suminf.    0.95435 (5) obj. -374.331 iterations 1
Cbc0038I Pass  36: suminf.    0.88264 (6) obj. -374.331 iterations 4
Cbc0038I Pass  37: suminf.    1.69414 (5) obj. -374.331 iterations 9
Cbc0038I Pass  38: suminf.    1.69414 (5) obj. -374.331 iterations 0
Cbc0038I Pass  39: suminf.    1.54293 (5) obj. -374.331 iterations 1
Cbc0038I Pass  40: suminf.    0.95435 (5) obj. -374.331 iterations 1
Cbc0038I Pass  41: suminf.    0.88264 (6) obj. -374.331 iterations 4
Cbc0038I Pass  42: suminf.    1.69414 (5) obj. -374.331 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 99 columns, reduced to 23 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -364.283 - took 0.03 seconds
Cbc0012I Integer solution of -364.28324 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 86 rows 99 columns, reduced to 13 rows 15 columns
Cbc0031I 24 added rows had average density of 15.625
Cbc0013I At root node, 24 cuts changed objective from -414.52085 to -369.24208 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 667 row cuts average 13.3 elements, 28 column cuts (28 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 117 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 34.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -364.28324 best solution, best possible -369.24202 (0.53 seconds)
Cbc0012I Integer solution of -364.3853 found by DiveCoefficient after 434 iterations and 4 nodes (0.77 seconds)
Cbc0001I Search completed - best objective -364.3853000000001, took 526 iterations and 8 nodes (0.85 seconds)
Cbc0032I Strong branching done 110 times (778 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.86

