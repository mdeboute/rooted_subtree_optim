Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 43 (-7) columns and 240 (-45) elements
Clp1000I sum of infeasibilities 0.0326169 - average 0.000402678, 25 fixed columns
Coin0506I Presolve 31 (-50) rows, 18 (-25) columns and 90 (-150) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 2.0982358 - largest nonzero change 0 ( 0%) - largest zero change 1.103913e-05
Clp0000I Optimal - objective value 184716.53
Clp0000I Optimal - objective value 184716.53
Coin0511I After Postsolve, objective 184716.53, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5909114 - largest nonzero change 1.4300704e-05 ( 9.5338024e-05%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 184716.53
Clp0000I Optimal - objective value 184716.53
Clp0000I Optimal - objective value 184716.53
Coin0511I After Postsolve, objective 184716.53, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184716.534 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 43 columns (42 integer (42 of which binary)) and 240 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.112%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.25
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -109501 iterations 18
Cbc0038I Solution found of -109501
Cbc0038I Relaxing continuous gives -109501
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -109501 to -169810 (0.01 seconds)
Cbc0038I Round again with cutoff of -171300
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.80350 (17) obj. -171300 iterations 18
Cbc0038I Pass   3: suminf.    1.29988 (17) obj. -171300 iterations 2
Cbc0038I Pass   4: suminf.    1.10195 (17) obj. -171300 iterations 9
Cbc0038I Pass   5: suminf.    1.10195 (17) obj. -171300 iterations 0
Cbc0038I Pass   6: suminf.    1.28508 (16) obj. -171300 iterations 3
Cbc0038I Pass   7: suminf.    1.28508 (16) obj. -171300 iterations 0
Cbc0038I Pass   8: suminf.    1.10195 (17) obj. -171300 iterations 7
Cbc0038I Pass   9: suminf.    1.77601 (19) obj. -171300 iterations 10
Cbc0038I Pass  10: suminf.    1.66320 (19) obj. -171300 iterations 2
Cbc0038I Pass  11: suminf.    5.35653 (17) obj. -171300 iterations 3
Cbc0038I Pass  12: suminf.    5.00662 (20) obj. -171300 iterations 3
Cbc0038I Pass  13: suminf.    1.10195 (17) obj. -171300 iterations 29
Cbc0038I Pass  14: suminf.    1.28508 (16) obj. -171300 iterations 3
Cbc0038I Pass  15: suminf.    1.28508 (16) obj. -171300 iterations 0
Cbc0038I Pass  16: suminf.    1.10195 (17) obj. -171300 iterations 7
Cbc0038I Pass  17: suminf.    0.68252 (3) obj. -171300 iterations 15
Cbc0038I Pass  18: suminf.    0.46076 (2) obj. -171300 iterations 3
Cbc0038I Pass  19: suminf.    0.21676 (18) obj. -171300 iterations 6
Cbc0038I Pass  20: suminf.    1.80350 (17) obj. -171300 iterations 11
Cbc0038I Pass  21: suminf.    1.29988 (17) obj. -171300 iterations 2
Cbc0038I Pass  22: suminf.    1.10195 (17) obj. -171300 iterations 12
Cbc0038I Pass  23: suminf.    1.10195 (17) obj. -171300 iterations 0
Cbc0038I Pass  24: suminf.    3.00000 (15) obj. -171300 iterations 6
Cbc0038I Pass  25: suminf.    2.00000 (14) obj. -171300 iterations 4
Cbc0038I Pass  26: suminf.    2.00000 (14) obj. -171300 iterations 0
Cbc0038I Pass  27: suminf.    1.15641 (16) obj. -171300 iterations 7
Cbc0038I Pass  28: suminf.    1.10195 (17) obj. -171300 iterations 1
Cbc0038I Pass  29: suminf.    1.80350 (17) obj. -171300 iterations 7
Cbc0038I Pass  30: suminf.    1.29988 (17) obj. -171300 iterations 3
Cbc0038I Pass  31: suminf.    1.10195 (17) obj. -171300 iterations 5
Cbc0038I Rounding solution of -170877 is better than previous of -169810

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 48 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -170877 to -171055 (0.02 seconds)
Cbc0038I Round again with cutoff of -173984
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.67538 (17) obj. -173984 iterations 0
Cbc0038I Pass  32: suminf.    2.18991 (17) obj. -173984 iterations 2
Cbc0038I Pass  33: suminf.    3.08545 (17) obj. -173984 iterations 11
Cbc0038I Pass  34: suminf.    3.08545 (17) obj. -173984 iterations 0
Cbc0038I Pass  35: suminf.    3.76620 (19) obj. -173984 iterations 4
Cbc0038I Pass  36: suminf.    3.14305 (18) obj. -173984 iterations 3
Cbc0038I Pass  37: suminf.    2.67538 (17) obj. -173984 iterations 7
Cbc0038I Pass  38: suminf.    2.18991 (17) obj. -173984 iterations 3
Cbc0038I Pass  39: suminf.    3.08545 (17) obj. -173984 iterations 9
Cbc0038I Pass  40: suminf.    3.08545 (17) obj. -173984 iterations 0
Cbc0038I Pass  41: suminf.    2.67538 (17) obj. -173984 iterations 5
Cbc0038I Pass  42: suminf.    3.31723 (18) obj. -173984 iterations 12
Cbc0038I Pass  43: suminf.    3.26100 (18) obj. -173984 iterations 3
Cbc0038I Pass  44: suminf.    3.08545 (17) obj. -173984 iterations 6
Cbc0038I Pass  45: suminf.    7.00000 (16) obj. -173984 iterations 14
Cbc0038I Pass  46: suminf.    4.05228 (20) obj. -173984 iterations 10
Cbc0038I Pass  47: suminf.    2.67538 (17) obj. -173984 iterations 12
Cbc0038I Pass  48: suminf.    2.18991 (17) obj. -173984 iterations 3
Cbc0038I Pass  49: suminf.    3.23794 (16) obj. -173984 iterations 7
Cbc0038I Pass  50: suminf.    3.08545 (17) obj. -173984 iterations 1
Cbc0038I Pass  51: suminf.    2.67538 (17) obj. -173984 iterations 5
Cbc0038I Pass  52: suminf.    4.78931 (16) obj. -173984 iterations 10
Cbc0038I Pass  53: suminf.    4.76671 (16) obj. -173984 iterations 2
Cbc0038I Pass  54: suminf.    2.57389 (17) obj. -173984 iterations 7
Cbc0038I Pass  55: suminf.    2.57389 (17) obj. -173984 iterations 0
Cbc0038I Pass  56: suminf.    2.67538 (17) obj. -173984 iterations 6
Cbc0038I Pass  57: suminf.    2.18991 (17) obj. -173984 iterations 3
Cbc0038I Pass  58: suminf.    3.08545 (17) obj. -173984 iterations 9
Cbc0038I Pass  59: suminf.    3.08545 (17) obj. -173984 iterations 0
Cbc0038I Pass  60: suminf.    2.67538 (17) obj. -173984 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 44 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -171055 - took 0.03 seconds
Cbc0012I Integer solution of -171055.25 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 81 rows 43 columns, reduced to 39 rows 25 columns
Cbc0031I 12 added rows had average density of 35.166667
Cbc0013I At root node, 12 cuts changed objective from -184716.53 to -172081.13 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1734 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 400 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 183 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0016I Integer solution of -171539.12 found by strong branching after 1980 iterations and 2 nodes (0.26 seconds)
Cbc0016I Integer solution of -171557.62 found by strong branching after 1985 iterations and 2 nodes (0.26 seconds)
Cbc0001I Search completed - best objective -171557.6241, took 2088 iterations and 6 nodes (0.26 seconds)
Cbc0032I Strong branching done 126 times (2170 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-14) rows, 87 (-9) columns and 1162 (-251) elements
Clp1000I sum of infeasibilities 1.91472e-06 - average 2.27943e-08, 18 fixed columns
Coin0506I Presolve 67 (-17) rows, 69 (-18) columns and 684 (-478) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 188256.78
Clp0000I Optimal - objective value 188256.78
Coin0511I After Postsolve, objective 188256.78, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6344874 - largest nonzero change 1.6442817e-05 ( 0.00025906771%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 188256.78
Clp0000I Optimal - objective value 188256.78
Clp0000I Optimal - objective value 188256.78
Coin0511I After Postsolve, objective 188256.78, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 188256.7772 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 88 columns (88 integer (88 of which binary)) and 1166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.979%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 12.2224
Cbc0038I Pass   1: suminf.    4.02408 (22) obj. -154383 iterations 12
Cbc0038I Pass   2: suminf.    4.02408 (22) obj. -154383 iterations 1
Cbc0038I Pass   3: suminf.    0.25589 (5) obj. -153132 iterations 19
Cbc0038I Solution found of -152830
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 52 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -152830 to -169810 (0.02 seconds)
Cbc0038I Round again with cutoff of -171554
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    7.85928 (42) obj. -171554 iterations 10
Cbc0038I Pass   5: suminf.    7.85928 (42) obj. -171554 iterations 0
Cbc0038I Pass   6: suminf.    2.77516 (43) obj. -171554 iterations 18
Cbc0038I Pass   7: suminf.    2.77516 (43) obj. -171554 iterations 0
Cbc0038I Pass   8: suminf.    1.79712 (33) obj. -171554 iterations 10
Cbc0038I Pass   9: suminf.    1.79712 (33) obj. -171554 iterations 0
Cbc0038I Pass  10: suminf.    2.40791 (33) obj. -171554 iterations 4
Cbc0038I Pass  11: suminf.    2.40791 (33) obj. -171554 iterations 0
Cbc0038I Pass  12: suminf.    3.12363 (16) obj. -171554 iterations 13
Cbc0038I Pass  13: suminf.    1.79535 (25) obj. -171554 iterations 3
Cbc0038I Pass  14: suminf.    1.79535 (25) obj. -171554 iterations 0
Cbc0038I Pass  15: suminf.    4.18789 (17) obj. -171554 iterations 38
Cbc0038I Pass  16: suminf.    4.18789 (17) obj. -171554 iterations 0
Cbc0038I Pass  17: suminf.    3.38302 (17) obj. -171554 iterations 2
Cbc0038I Pass  18: suminf.    4.18789 (17) obj. -171554 iterations 5
Cbc0038I Pass  19: suminf.    8.76567 (22) obj. -171554 iterations 18
Cbc0038I Pass  20: suminf.    3.71035 (23) obj. -171554 iterations 8
Cbc0038I Pass  21: suminf.    3.14036 (16) obj. -171554 iterations 7
Cbc0038I Pass  22: suminf.    2.99247 (17) obj. -171554 iterations 1
Cbc0038I Pass  23: suminf.    7.48227 (17) obj. -171554 iterations 1
Cbc0038I Pass  24: suminf.    9.16728 (27) obj. -171554 iterations 24
Cbc0038I Pass  25: suminf.    5.31958 (28) obj. -171554 iterations 4
Cbc0038I Pass  26: suminf.    3.15374 (16) obj. -171554 iterations 22
Cbc0038I Pass  27: suminf.    3.15374 (16) obj. -171554 iterations 0
Cbc0038I Pass  28: suminf.    4.88194 (19) obj. -171554 iterations 6
Cbc0038I Pass  29: suminf.    2.65743 (18) obj. -171554 iterations 2
Cbc0038I Pass  30: suminf.    2.65743 (18) obj. -171554 iterations 0
Cbc0038I Pass  31: suminf.    4.88194 (19) obj. -171554 iterations 3
Cbc0038I Pass  32: suminf.    7.50002 (25) obj. -171554 iterations 22
Cbc0038I Pass  33: suminf.    3.39993 (26) obj. -171554 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 60 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -169810 to -170889 (0.04 seconds)
Cbc0038I Round again with cutoff of -174694
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    8.37958 (45) obj. -174694 iterations 1
Cbc0038I Pass  34: suminf.    8.37958 (45) obj. -174694 iterations 1
Cbc0038I Pass  35: suminf.    5.30834 (34) obj. -174694 iterations 11
Cbc0038I Pass  36: suminf.    3.98131 (26) obj. -174694 iterations 11
Cbc0038I Pass  37: suminf.    3.98131 (26) obj. -174694 iterations 0
Cbc0038I Pass  38: suminf.    5.08540 (32) obj. -174694 iterations 14
Cbc0038I Pass  39: suminf.    5.08540 (32) obj. -174694 iterations 0
Cbc0038I Pass  40: suminf.    3.18777 (18) obj. -174694 iterations 8
Cbc0038I Pass  41: suminf.    3.18777 (18) obj. -174694 iterations 2
Cbc0038I Pass  42: suminf.    5.76823 (26) obj. -174694 iterations 7
Cbc0038I Pass  43: suminf.    5.76823 (26) obj. -174694 iterations 0
Cbc0038I Pass  44: suminf.    2.11393 (15) obj. -174694 iterations 13
Cbc0038I Pass  45: suminf.    2.11393 (15) obj. -174694 iterations 0
Cbc0038I Pass  46: suminf.    6.83045 (16) obj. -174694 iterations 5
Cbc0038I Pass  47: suminf.    6.50877 (17) obj. -174694 iterations 1
Cbc0038I Pass  48: suminf.    7.48717 (25) obj. -174694 iterations 13
Cbc0038I Pass  49: suminf.    7.48717 (25) obj. -174694 iterations 1
Cbc0038I Pass  50: suminf.    4.66162 (22) obj. -174694 iterations 7
Cbc0038I Pass  51: suminf.    4.66162 (22) obj. -174694 iterations 0
Cbc0038I Pass  52: suminf.    6.73864 (19) obj. -174694 iterations 13
Cbc0038I Pass  53: suminf.    3.55388 (19) obj. -174694 iterations 1
Cbc0038I Pass  54: suminf.    3.55388 (19) obj. -174694 iterations 0
Cbc0038I Pass  55: suminf.    3.30734 (18) obj. -174694 iterations 5
Cbc0038I Pass  56: suminf.    3.26891 (18) obj. -174694 iterations 4
Cbc0038I Pass  57: suminf.    6.73864 (19) obj. -174694 iterations 7
Cbc0038I Pass  58: suminf.    6.73864 (19) obj. -174694 iterations 0
Cbc0038I Pass  59: suminf.    2.87537 (18) obj. -174694 iterations 4
Cbc0038I Pass  60: suminf.    2.87537 (18) obj. -174694 iterations 2
Cbc0038I Pass  61: suminf.    6.79263 (17) obj. -174694 iterations 8
Cbc0038I Pass  62: suminf.    6.79263 (17) obj. -174694 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 53 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -170889 - took 0.04 seconds
Cbc0012I Integer solution of -170888.77 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 85 rows 88 columns, reduced to 52 rows 53 columns
Cbc0012I Integer solution of -171557.62 found by DiveCoefficient after 195 iterations and 0 nodes (0.15 seconds)
Cbc0031I 40 added rows had average density of 11.475
Cbc0013I At root node, 40 cuts changed objective from -186518.29 to -171557.62 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 880 row cuts average 4.4 elements, 0 column cuts (19 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 95 row cuts average 35.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 118 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0001I Search completed - best objective -171557.6241, took 195 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 43 (-7) columns and 240 (-45) elements
Clp1000I sum of infeasibilities 0.0326169 - average 0.000402678, 25 fixed columns
Coin0506I Presolve 31 (-50) rows, 18 (-25) columns and 90 (-150) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 2.0982358 - largest nonzero change 0 ( 0%) - largest zero change 1.103913e-05
Clp0000I Optimal - objective value 184716.53
Clp0000I Optimal - objective value 184716.53
Coin0511I After Postsolve, objective 184716.53, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5909114 - largest nonzero change 1.4300704e-05 ( 9.5338024e-05%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 184716.53
Clp0000I Optimal - objective value 184716.53
Clp0000I Optimal - objective value 184716.53
Coin0511I After Postsolve, objective 184716.53, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184716.534 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 43 columns (42 integer (42 of which binary)) and 240 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.112%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.25
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -109501 iterations 18
Cbc0038I Solution found of -109501
Cbc0038I Relaxing continuous gives -109501
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -109501 to -169810 (0.01 seconds)
Cbc0038I Round again with cutoff of -171300
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.80350 (17) obj. -171300 iterations 18
Cbc0038I Pass   3: suminf.    1.29988 (17) obj. -171300 iterations 2
Cbc0038I Pass   4: suminf.    1.10195 (17) obj. -171300 iterations 9
Cbc0038I Pass   5: suminf.    1.10195 (17) obj. -171300 iterations 0
Cbc0038I Pass   6: suminf.    1.28508 (16) obj. -171300 iterations 3
Cbc0038I Pass   7: suminf.    1.28508 (16) obj. -171300 iterations 0
Cbc0038I Pass   8: suminf.    1.10195 (17) obj. -171300 iterations 7
Cbc0038I Pass   9: suminf.    1.77601 (19) obj. -171300 iterations 10
Cbc0038I Pass  10: suminf.    1.66320 (19) obj. -171300 iterations 2
Cbc0038I Pass  11: suminf.    5.35653 (17) obj. -171300 iterations 3
Cbc0038I Pass  12: suminf.    5.00662 (20) obj. -171300 iterations 3
Cbc0038I Pass  13: suminf.    1.10195 (17) obj. -171300 iterations 29
Cbc0038I Pass  14: suminf.    1.28508 (16) obj. -171300 iterations 3
Cbc0038I Pass  15: suminf.    1.28508 (16) obj. -171300 iterations 0
Cbc0038I Pass  16: suminf.    1.10195 (17) obj. -171300 iterations 7
Cbc0038I Pass  17: suminf.    0.68252 (3) obj. -171300 iterations 15
Cbc0038I Pass  18: suminf.    0.46076 (2) obj. -171300 iterations 3
Cbc0038I Pass  19: suminf.    0.21676 (18) obj. -171300 iterations 6
Cbc0038I Pass  20: suminf.    1.80350 (17) obj. -171300 iterations 11
Cbc0038I Pass  21: suminf.    1.29988 (17) obj. -171300 iterations 2
Cbc0038I Pass  22: suminf.    1.10195 (17) obj. -171300 iterations 12
Cbc0038I Pass  23: suminf.    1.10195 (17) obj. -171300 iterations 0
Cbc0038I Pass  24: suminf.    3.00000 (15) obj. -171300 iterations 6
Cbc0038I Pass  25: suminf.    2.00000 (14) obj. -171300 iterations 4
Cbc0038I Pass  26: suminf.    2.00000 (14) obj. -171300 iterations 0
Cbc0038I Pass  27: suminf.    1.15641 (16) obj. -171300 iterations 7
Cbc0038I Pass  28: suminf.    1.10195 (17) obj. -171300 iterations 1
Cbc0038I Pass  29: suminf.    1.80350 (17) obj. -171300 iterations 7
Cbc0038I Pass  30: suminf.    1.29988 (17) obj. -171300 iterations 3
Cbc0038I Pass  31: suminf.    1.10195 (17) obj. -171300 iterations 5
Cbc0038I Rounding solution of -170877 is better than previous of -169810

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 48 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -170877 to -171055 (0.03 seconds)
Cbc0038I Round again with cutoff of -173984
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.67538 (17) obj. -173984 iterations 0
Cbc0038I Pass  32: suminf.    2.18991 (17) obj. -173984 iterations 2
Cbc0038I Pass  33: suminf.    3.08545 (17) obj. -173984 iterations 11
Cbc0038I Pass  34: suminf.    3.08545 (17) obj. -173984 iterations 0
Cbc0038I Pass  35: suminf.    3.76620 (19) obj. -173984 iterations 4
Cbc0038I Pass  36: suminf.    3.14305 (18) obj. -173984 iterations 3
Cbc0038I Pass  37: suminf.    2.67538 (17) obj. -173984 iterations 7
Cbc0038I Pass  38: suminf.    2.18991 (17) obj. -173984 iterations 3
Cbc0038I Pass  39: suminf.    3.08545 (17) obj. -173984 iterations 9
Cbc0038I Pass  40: suminf.    3.08545 (17) obj. -173984 iterations 0
Cbc0038I Pass  41: suminf.    2.67538 (17) obj. -173984 iterations 5
Cbc0038I Pass  42: suminf.    3.31723 (18) obj. -173984 iterations 12
Cbc0038I Pass  43: suminf.    3.26100 (18) obj. -173984 iterations 3
Cbc0038I Pass  44: suminf.    3.08545 (17) obj. -173984 iterations 6
Cbc0038I Pass  45: suminf.    7.00000 (16) obj. -173984 iterations 14
Cbc0038I Pass  46: suminf.    4.05228 (20) obj. -173984 iterations 10
Cbc0038I Pass  47: suminf.    2.67538 (17) obj. -173984 iterations 12
Cbc0038I Pass  48: suminf.    2.18991 (17) obj. -173984 iterations 3
Cbc0038I Pass  49: suminf.    3.23794 (16) obj. -173984 iterations 7
Cbc0038I Pass  50: suminf.    3.08545 (17) obj. -173984 iterations 1
Cbc0038I Pass  51: suminf.    2.67538 (17) obj. -173984 iterations 5
Cbc0038I Pass  52: suminf.    4.78931 (16) obj. -173984 iterations 10
Cbc0038I Pass  53: suminf.    4.76671 (16) obj. -173984 iterations 2
Cbc0038I Pass  54: suminf.    2.57389 (17) obj. -173984 iterations 7
Cbc0038I Pass  55: suminf.    2.57389 (17) obj. -173984 iterations 0
Cbc0038I Pass  56: suminf.    2.67538 (17) obj. -173984 iterations 6
Cbc0038I Pass  57: suminf.    2.18991 (17) obj. -173984 iterations 3
Cbc0038I Pass  58: suminf.    3.08545 (17) obj. -173984 iterations 9
Cbc0038I Pass  59: suminf.    3.08545 (17) obj. -173984 iterations 0
Cbc0038I Pass  60: suminf.    2.67538 (17) obj. -173984 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 43 columns, reduced to 44 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -171055 - took 0.03 seconds
Cbc0012I Integer solution of -171055.25 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 81 rows 43 columns, reduced to 39 rows 25 columns
Cbc0031I 12 added rows had average density of 35.166667
Cbc0013I At root node, 12 cuts changed objective from -184716.53 to -172081.13 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1734 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 400 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 183 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0016I Integer solution of -171539.12 found by strong branching after 1980 iterations and 2 nodes (0.25 seconds)
Cbc0016I Integer solution of -171557.62 found by strong branching after 1985 iterations and 2 nodes (0.25 seconds)
Cbc0001I Search completed - best objective -171557.6241, took 2088 iterations and 6 nodes (0.25 seconds)
Cbc0032I Strong branching done 126 times (2170 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 87 (-10) columns and 1162 (-252) elements
Clp1000I sum of infeasibilities 1.91472e-06 - average 2.27943e-08, 18 fixed columns
Coin0506I Presolve 67 (-17) rows, 69 (-18) columns and 684 (-478) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 188256.78
Clp0000I Optimal - objective value 188256.78
Coin0511I After Postsolve, objective 188256.78, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6344874 - largest nonzero change 1.6442817e-05 ( 0.00025906771%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 188256.78
Clp0000I Optimal - objective value 188256.78
Clp0000I Optimal - objective value 188256.78
Coin0511I After Postsolve, objective 188256.78, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 188256.7772 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 88 columns (88 integer (88 of which binary)) and 1166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.979%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 12.2224
Cbc0038I Pass   1: suminf.    4.02408 (22) obj. -154383 iterations 12
Cbc0038I Pass   2: suminf.    4.02408 (22) obj. -154383 iterations 1
Cbc0038I Pass   3: suminf.    0.25589 (5) obj. -153132 iterations 19
Cbc0038I Solution found of -152830
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 52 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -152830 to -169810 (0.02 seconds)
Cbc0038I Round again with cutoff of -171554
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    7.85928 (42) obj. -171554 iterations 10
Cbc0038I Pass   5: suminf.    7.85928 (42) obj. -171554 iterations 0
Cbc0038I Pass   6: suminf.    2.77516 (43) obj. -171554 iterations 18
Cbc0038I Pass   7: suminf.    2.77516 (43) obj. -171554 iterations 0
Cbc0038I Pass   8: suminf.    1.79712 (33) obj. -171554 iterations 10
Cbc0038I Pass   9: suminf.    1.79712 (33) obj. -171554 iterations 0
Cbc0038I Pass  10: suminf.    2.40791 (33) obj. -171554 iterations 4
Cbc0038I Pass  11: suminf.    2.40791 (33) obj. -171554 iterations 0
Cbc0038I Pass  12: suminf.    3.12363 (16) obj. -171554 iterations 13
Cbc0038I Pass  13: suminf.    1.79535 (25) obj. -171554 iterations 3
Cbc0038I Pass  14: suminf.    1.79535 (25) obj. -171554 iterations 0
Cbc0038I Pass  15: suminf.    4.18789 (17) obj. -171554 iterations 38
Cbc0038I Pass  16: suminf.    4.18789 (17) obj. -171554 iterations 0
Cbc0038I Pass  17: suminf.    3.38302 (17) obj. -171554 iterations 2
Cbc0038I Pass  18: suminf.    4.18789 (17) obj. -171554 iterations 5
Cbc0038I Pass  19: suminf.    8.76567 (22) obj. -171554 iterations 18
Cbc0038I Pass  20: suminf.    3.71035 (23) obj. -171554 iterations 8
Cbc0038I Pass  21: suminf.    3.14036 (16) obj. -171554 iterations 7
Cbc0038I Pass  22: suminf.    2.99247 (17) obj. -171554 iterations 1
Cbc0038I Pass  23: suminf.    7.48227 (17) obj. -171554 iterations 1
Cbc0038I Pass  24: suminf.    9.16728 (27) obj. -171554 iterations 24
Cbc0038I Pass  25: suminf.    5.31958 (28) obj. -171554 iterations 4
Cbc0038I Pass  26: suminf.    3.15374 (16) obj. -171554 iterations 22
Cbc0038I Pass  27: suminf.    3.15374 (16) obj. -171554 iterations 0
Cbc0038I Pass  28: suminf.    4.88194 (19) obj. -171554 iterations 6
Cbc0038I Pass  29: suminf.    2.65743 (18) obj. -171554 iterations 2
Cbc0038I Pass  30: suminf.    2.65743 (18) obj. -171554 iterations 0
Cbc0038I Pass  31: suminf.    4.88194 (19) obj. -171554 iterations 3
Cbc0038I Pass  32: suminf.    7.50002 (25) obj. -171554 iterations 22
Cbc0038I Pass  33: suminf.    3.39993 (26) obj. -171554 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 60 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -169810 to -170889 (0.05 seconds)
Cbc0038I Round again with cutoff of -174694
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    8.37958 (45) obj. -174694 iterations 1
Cbc0038I Pass  34: suminf.    8.37958 (45) obj. -174694 iterations 1
Cbc0038I Pass  35: suminf.    5.30834 (34) obj. -174694 iterations 11
Cbc0038I Pass  36: suminf.    3.98131 (26) obj. -174694 iterations 11
Cbc0038I Pass  37: suminf.    3.98131 (26) obj. -174694 iterations 0
Cbc0038I Pass  38: suminf.    5.08540 (32) obj. -174694 iterations 14
Cbc0038I Pass  39: suminf.    5.08540 (32) obj. -174694 iterations 0
Cbc0038I Pass  40: suminf.    3.18777 (18) obj. -174694 iterations 8
Cbc0038I Pass  41: suminf.    3.18777 (18) obj. -174694 iterations 2
Cbc0038I Pass  42: suminf.    5.76823 (26) obj. -174694 iterations 7
Cbc0038I Pass  43: suminf.    5.76823 (26) obj. -174694 iterations 0
Cbc0038I Pass  44: suminf.    2.11393 (15) obj. -174694 iterations 13
Cbc0038I Pass  45: suminf.    2.11393 (15) obj. -174694 iterations 0
Cbc0038I Pass  46: suminf.    6.83045 (16) obj. -174694 iterations 5
Cbc0038I Pass  47: suminf.    6.50877 (17) obj. -174694 iterations 1
Cbc0038I Pass  48: suminf.    7.48717 (25) obj. -174694 iterations 13
Cbc0038I Pass  49: suminf.    7.48717 (25) obj. -174694 iterations 1
Cbc0038I Pass  50: suminf.    4.66162 (22) obj. -174694 iterations 7
Cbc0038I Pass  51: suminf.    4.66162 (22) obj. -174694 iterations 0
Cbc0038I Pass  52: suminf.    6.73864 (19) obj. -174694 iterations 13
Cbc0038I Pass  53: suminf.    3.55388 (19) obj. -174694 iterations 1
Cbc0038I Pass  54: suminf.    3.55388 (19) obj. -174694 iterations 0
Cbc0038I Pass  55: suminf.    3.30734 (18) obj. -174694 iterations 5
Cbc0038I Pass  56: suminf.    3.26891 (18) obj. -174694 iterations 4
Cbc0038I Pass  57: suminf.    6.73864 (19) obj. -174694 iterations 7
Cbc0038I Pass  58: suminf.    6.73864 (19) obj. -174694 iterations 0
Cbc0038I Pass  59: suminf.    2.87537 (18) obj. -174694 iterations 4
Cbc0038I Pass  60: suminf.    2.87537 (18) obj. -174694 iterations 2
Cbc0038I Pass  61: suminf.    6.79263 (17) obj. -174694 iterations 8
Cbc0038I Pass  62: suminf.    6.79263 (17) obj. -174694 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 88 columns, reduced to 53 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -170889 - took 0.04 seconds
Cbc0012I Integer solution of -170888.77 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 85 rows 88 columns, reduced to 52 rows 53 columns
Cbc0012I Integer solution of -171557.62 found by DiveCoefficient after 195 iterations and 0 nodes (0.16 seconds)
Cbc0031I 40 added rows had average density of 11.475
Cbc0013I At root node, 40 cuts changed objective from -186518.29 to -171557.62 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 880 row cuts average 4.4 elements, 0 column cuts (19 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 95 row cuts average 35.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 118 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0001I Search completed - best objective -171557.6241, took 195 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.16

