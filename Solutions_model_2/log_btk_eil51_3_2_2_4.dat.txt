Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 1.41032e-05 - average 1.5498e-07, 7 fixed columns
Coin0506I Presolve 71 (-20) rows, 43 (-8) columns and 221 (-55) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Coin0511I After Postsolve, objective 39.201998, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.3890858 - largest nonzero change 0 ( 0%) - largest zero change 2.0026479e-05
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Coin0511I After Postsolve, objective 39.201998, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.20199796 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.75137
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.29599 iterations 43
Cbc0038I Solution found of 4.29599
Cbc0038I Relaxing continuous gives 4.29599
Cbc0038I Rounding solution of 0.60827 is better than previous of 4.29599

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 0.60827 to -8.68154 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.7337
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.74902 (12) obj. -11.7337 iterations 12
Cbc0038I Pass   3: suminf.    1.46665 (11) obj. -11.7337 iterations 1
Cbc0038I Pass   4: suminf.    1.88272 (7) obj. -11.7337 iterations 12
Cbc0038I Pass   5: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass   6: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass   7: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass   8: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass   9: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  10: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  11: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I Pass  12: suminf.    1.33058 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  13: suminf.    1.02591 (10) obj. -11.7337 iterations 7
Cbc0038I Pass  14: suminf.    1.88272 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  15: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  16: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  17: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  18: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  19: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  20: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  21: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I Pass  22: suminf.    1.33058 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  23: suminf.    1.02591 (10) obj. -11.7337 iterations 7
Cbc0038I Pass  24: suminf.    1.88272 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  25: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  26: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  27: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  28: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  29: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  30: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  31: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -8.68154 to -8.69853 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.2273
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.88408 (19) obj. -17.2273 iterations 2
Cbc0038I Pass  32: suminf.    2.60883 (18) obj. -17.2273 iterations 1
Cbc0038I Pass  33: suminf.    2.89436 (9) obj. -17.2273 iterations 15
Cbc0038I Pass  34: suminf.    2.24849 (8) obj. -17.2273 iterations 3
Cbc0038I Pass  35: suminf.    2.24849 (8) obj. -17.2273 iterations 0
Cbc0038I Pass  36: suminf.    2.77852 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  37: suminf.    2.55444 (8) obj. -17.2273 iterations 4
Cbc0038I Pass  38: suminf.    2.29961 (10) obj. -17.2273 iterations 2
Cbc0038I Pass  39: suminf.    2.28564 (8) obj. -17.2273 iterations 2
Cbc0038I Pass  40: suminf.    2.63347 (13) obj. -17.2273 iterations 9
Cbc0038I Pass  41: suminf.    2.32767 (13) obj. -17.2273 iterations 2
Cbc0038I Pass  42: suminf.    2.21980 (13) obj. -17.2273 iterations 1
Cbc0038I Pass  43: suminf.    3.25013 (9) obj. -17.2273 iterations 10
Cbc0038I Pass  44: suminf.    2.65351 (9) obj. -17.2273 iterations 3
Cbc0038I Pass  45: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  46: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I Pass  47: suminf.    3.18727 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  48: suminf.    2.97370 (9) obj. -17.2273 iterations 6
Cbc0038I Pass  49: suminf.    2.74077 (9) obj. -17.2273 iterations 2
Cbc0038I Pass  50: suminf.    3.23013 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  51: suminf.    2.65351 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  52: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  53: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I Pass  54: suminf.    3.18727 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  55: suminf.    2.97370 (9) obj. -17.2273 iterations 6
Cbc0038I Pass  56: suminf.    2.74077 (9) obj. -17.2273 iterations 2
Cbc0038I Pass  57: suminf.    3.23013 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  58: suminf.    2.65351 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  59: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  60: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -8.69853 - took 0.12 seconds
Cbc0012I Integer solution of -8.69853 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0031I 25 added rows had average density of 31.36
Cbc0013I At root node, 25 cuts changed objective from -39.201998 to -28.890965 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9155 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1785 row cuts average 45.9 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 66 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 5 nodes, 6 on tree, -8.69853 best solution, best possible -28.890965 (0.68 seconds)
Cbc0004I Integer solution of -8.71283 found after 6839 iterations and 15 nodes (0.71 seconds)
Cbc0004I Integer solution of -8.71349 found after 6894 iterations and 20 nodes (0.71 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 61 rows 36 columns
Cbc0012I Integer solution of -8.71423 found by RINS after 7712 iterations and 41 nodes (0.91 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 4 rows 10 columns
Cbc0016I Integer solution of -8.72522 found by strong branching after 9153 iterations and 120 nodes (1.06 seconds)
Cbc0001I Search completed - best objective -8.725220000000007, took 9367 iterations and 124 nodes (1.07 seconds)
Cbc0032I Strong branching done 1116 times (11117 iterations), fathomed 11 nodes and fixed 46 variables
Cbc0035I Maximum depth 13, 206 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-30) rows, 83 (-19) columns and 1002 (-576) elements
Clp1000I sum of infeasibilities 4.12004e-06 - average 5.56762e-08, 10 fixed columns
Coin0506I Presolve 59 (-15) rows, 71 (-12) columns and 757 (-245) elements
Clp0006I 0  Obj 18.05024 Dual inf 1.6614474 (70)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 4.6328237 - largest nonzero change 2.0969497e-05 ( 0.00096271338%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 48.587147
Clp0000I Optimal - objective value 48.587147
Coin0511I After Postsolve, objective 48.587147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.587147 Dual inf 6.8270921 (3)
Clp0014I Perturbing problem by 0.001% of 4.1374872 - largest nonzero change 1.5877905e-05 ( 0.00097726898%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 48.595864
Clp0000I Optimal - objective value 48.595864
Clp0000I Optimal - objective value 48.595864
Coin0511I After Postsolve, objective 48.595864, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.59586387 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 83 columns (83 integer (83 of which binary)) and 1004 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.601%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 5.08089
Cbc0038I Pass   1: suminf.    3.53252 (23) obj. -38.0022 iterations 9
Cbc0038I Pass   2: suminf.    0.15476 (2) obj. -0.187601 iterations 21
Cbc0038I Solution found of 1.65764
Cbc0038I Rounding solution of -0.309993 is better than previous of 1.65764

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.45465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.53252 (23) obj. -38.0022 iterations 0
Cbc0038I Pass   4: suminf.    0.68795 (4) obj. -4.45465 iterations 26
Cbc0038I Pass   5: suminf.    0.34226 (3) obj. -5.0626 iterations 3
Cbc0038I Pass   6: suminf.    0.35753 (3) obj. -4.45465 iterations 6
Cbc0038I Pass   7: suminf.    0.35753 (3) obj. -4.45465 iterations 0
Cbc0038I Pass   8: suminf.    0.65094 (2) obj. -4.45465 iterations 3
Cbc0038I Pass   9: suminf.    0.65094 (2) obj. -4.45465 iterations 0
Cbc0038I Pass  10: suminf.    2.16582 (9) obj. -4.45465 iterations 17
Cbc0038I Pass  11: suminf.    0.84332 (5) obj. -5.15205 iterations 10
Cbc0038I Pass  12: suminf.    0.66667 (5) obj. -4.45465 iterations 4
Cbc0038I Pass  13: suminf.    0.77450 (5) obj. -4.45465 iterations 6
Cbc0038I Pass  14: suminf.    0.75002 (4) obj. -4.45465 iterations 5
Cbc0038I Pass  15: suminf.    0.88140 (5) obj. -4.45465 iterations 7
Cbc0038I Pass  16: suminf.    0.85700 (4) obj. -4.45465 iterations 5
Cbc0038I Pass  17: suminf.    0.77450 (5) obj. -4.45465 iterations 6
Cbc0038I Pass  18: suminf.    2.46435 (14) obj. -4.45465 iterations 24
Cbc0038I Pass  19: suminf.    1.72247 (12) obj. -4.45465 iterations 8
Cbc0038I Pass  20: suminf.    0.98638 (8) obj. -4.9779 iterations 3
Cbc0038I Pass  21: suminf.    1.70352 (8) obj. -4.45465 iterations 16
Cbc0038I Pass  22: suminf.    0.91681 (7) obj. -4.45465 iterations 5
Cbc0038I Pass  23: suminf.    1.30170 (6) obj. -4.45465 iterations 4
Cbc0038I Pass  24: suminf.    2.22525 (8) obj. -4.45465 iterations 27
Cbc0038I Pass  25: suminf.    1.38774 (8) obj. -4.45465 iterations 13
Cbc0038I Pass  26: suminf.    1.16154 (5) obj. -4.45465 iterations 10
Cbc0038I Pass  27: suminf.    0.82948 (6) obj. -4.45465 iterations 9
Cbc0038I Pass  28: suminf.    1.01994 (5) obj. -4.45465 iterations 5
Cbc0038I Pass  29: suminf.    2.06072 (9) obj. -4.45465 iterations 12
Cbc0038I Pass  30: suminf.    1.69896 (9) obj. -4.45465 iterations 4
Cbc0038I Pass  31: suminf.    1.47047 (8) obj. -4.81059 iterations 2
Cbc0038I Pass  32: suminf.    1.35878 (6) obj. -4.45465 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 83 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 1.65764 to -6.63997 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.6632
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.53252 (23) obj. -38.0022 iterations 0
Cbc0038I Pass  33: suminf.    0.87041 (4) obj. -13.6632 iterations 35
Cbc0038I Pass  34: suminf.    0.81219 (4) obj. -13.8961 iterations 6
Cbc0038I Pass  35: suminf.    1.44315 (9) obj. -13.6632 iterations 17
Cbc0038I Pass  36: suminf.    1.42569 (8) obj. -13.6632 iterations 6
Cbc0038I Pass  37: suminf.    1.47288 (6) obj. -13.6632 iterations 11
Cbc0038I Pass  38: suminf.    1.09066 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  39: suminf.    1.86303 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  40: suminf.    1.86303 (7) obj. -13.6632 iterations 0
Cbc0038I Pass  41: suminf.    1.78754 (7) obj. -13.6632 iterations 6
Cbc0038I Pass  42: suminf.    1.78754 (7) obj. -13.6632 iterations 1
Cbc0038I Pass  43: suminf.    1.80274 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  44: suminf.    1.40065 (7) obj. -13.6632 iterations 3
Cbc0038I Pass  45: suminf.    1.79351 (7) obj. -13.6632 iterations 11
Cbc0038I Pass  46: suminf.    1.38160 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  47: suminf.    1.78754 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  48: suminf.    1.78754 (7) obj. -13.6632 iterations 1
Cbc0038I Pass  49: suminf.    1.80274 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  50: suminf.    1.40065 (7) obj. -13.6632 iterations 3
Cbc0038I Pass  51: suminf.    1.79351 (7) obj. -13.6632 iterations 11
Cbc0038I Pass  52: suminf.    1.38160 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  53: suminf.    1.78754 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  54: suminf.    1.78754 (7) obj. -13.6632 iterations 1
Cbc0038I Pass  55: suminf.    1.80274 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  56: suminf.    1.40065 (7) obj. -13.6632 iterations 3
Cbc0038I Pass  57: suminf.    1.79351 (7) obj. -13.6632 iterations 11
Cbc0038I Pass  58: suminf.    1.38160 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  59: suminf.    1.78754 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  60: suminf.    1.78754 (7) obj. -13.6632 iterations 1
Cbc0038I Pass  61: suminf.    1.80274 (7) obj. -13.6632 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -6.63997 - took 0.04 seconds
Cbc0012I Integer solution of -6.6399726 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 74 rows 83 columns, reduced to 19 rows 25 columns
Cbc0031I 47 added rows had average density of 28.808511
Cbc0013I At root node, 47 cuts changed objective from -41.755711 to -13.904645 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9108 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 958 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 878 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 255 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.649 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.6399726 best solution, best possible -13.904645 (1.86 seconds)
Cbc0012I Integer solution of -6.7817826 found by rounding after 4200 iterations and 1 nodes (1.87 seconds)
Cbc0012I Integer solution of -7.0501626 found by rounding after 4730 iterations and 9 nodes (2.10 seconds)
Cbc0012I Integer solution of -7.6074626 found by rounding after 4768 iterations and 10 nodes (2.10 seconds)
Cbc0012I Integer solution of -8.5620426 found by rounding after 4802 iterations and 12 nodes (2.11 seconds)
Cbc0012I Integer solution of -8.6932826 found by rounding after 4813 iterations and 13 nodes (2.11 seconds)
Cbc0004I Integer solution of -8.71348 found after 4949 iterations and 20 nodes (2.13 seconds)
Cbc0004I Integer solution of -8.72522 found after 5120 iterations and 36 nodes (2.15 seconds)
Cbc0038I Full problem 74 rows 83 columns, reduced to 26 rows 36 columns
Cbc0001I Search completed - best objective -8.725220000000007, took 6130 iterations and 72 nodes (2.36 seconds)
Cbc0032I Strong branching done 788 times (9267 iterations), fathomed 4 nodes and fixed 5 variables
Cbc0035I Maximum depth 15, 62 variables fixed on reduced cost
Total time (CPU seconds):       1.84   (Wallclock seconds):       2.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 1.41032e-05 - average 1.5498e-07, 7 fixed columns
Coin0506I Presolve 71 (-20) rows, 43 (-8) columns and 221 (-55) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Coin0511I After Postsolve, objective 39.201998, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.3890858 - largest nonzero change 0 ( 0%) - largest zero change 2.0026479e-05
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Coin0511I After Postsolve, objective 39.201998, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.20199796 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.75137
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.29599 iterations 43
Cbc0038I Solution found of 4.29599
Cbc0038I Relaxing continuous gives 4.29599
Cbc0038I Rounding solution of 0.60827 is better than previous of 4.29599

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 0.60827 to -8.68154 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.7337
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.74902 (12) obj. -11.7337 iterations 12
Cbc0038I Pass   3: suminf.    1.46665 (11) obj. -11.7337 iterations 1
Cbc0038I Pass   4: suminf.    1.88272 (7) obj. -11.7337 iterations 12
Cbc0038I Pass   5: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass   6: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass   7: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass   8: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass   9: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  10: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  11: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I Pass  12: suminf.    1.33058 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  13: suminf.    1.02591 (10) obj. -11.7337 iterations 7
Cbc0038I Pass  14: suminf.    1.88272 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  15: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  16: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  17: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  18: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  19: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  20: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  21: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I Pass  22: suminf.    1.33058 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  23: suminf.    1.02591 (10) obj. -11.7337 iterations 7
Cbc0038I Pass  24: suminf.    1.88272 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  25: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  26: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  27: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  28: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  29: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  30: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  31: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -8.68154 to -8.69853 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.2273
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.88408 (19) obj. -17.2273 iterations 2
Cbc0038I Pass  32: suminf.    2.60883 (18) obj. -17.2273 iterations 1
Cbc0038I Pass  33: suminf.    2.89436 (9) obj. -17.2273 iterations 15
Cbc0038I Pass  34: suminf.    2.24849 (8) obj. -17.2273 iterations 3
Cbc0038I Pass  35: suminf.    2.24849 (8) obj. -17.2273 iterations 0
Cbc0038I Pass  36: suminf.    2.77852 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  37: suminf.    2.55444 (8) obj. -17.2273 iterations 4
Cbc0038I Pass  38: suminf.    2.29961 (10) obj. -17.2273 iterations 2
Cbc0038I Pass  39: suminf.    2.28564 (8) obj. -17.2273 iterations 2
Cbc0038I Pass  40: suminf.    2.63347 (13) obj. -17.2273 iterations 9
Cbc0038I Pass  41: suminf.    2.32767 (13) obj. -17.2273 iterations 2
Cbc0038I Pass  42: suminf.    2.21980 (13) obj. -17.2273 iterations 1
Cbc0038I Pass  43: suminf.    3.25013 (9) obj. -17.2273 iterations 10
Cbc0038I Pass  44: suminf.    2.65351 (9) obj. -17.2273 iterations 3
Cbc0038I Pass  45: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  46: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I Pass  47: suminf.    3.18727 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  48: suminf.    2.97370 (9) obj. -17.2273 iterations 6
Cbc0038I Pass  49: suminf.    2.74077 (9) obj. -17.2273 iterations 2
Cbc0038I Pass  50: suminf.    3.23013 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  51: suminf.    2.65351 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  52: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  53: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I Pass  54: suminf.    3.18727 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  55: suminf.    2.97370 (9) obj. -17.2273 iterations 6
Cbc0038I Pass  56: suminf.    2.74077 (9) obj. -17.2273 iterations 2
Cbc0038I Pass  57: suminf.    3.23013 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  58: suminf.    2.65351 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  59: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  60: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -8.69853 - took 0.12 seconds
Cbc0012I Integer solution of -8.69853 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 25 added rows had average density of 31.36
Cbc0013I At root node, 25 cuts changed objective from -39.201998 to -28.890965 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9155 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1785 row cuts average 45.9 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 66 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -8.69853 best solution, best possible -28.890965 (0.68 seconds)
Cbc0004I Integer solution of -8.71283 found after 6839 iterations and 15 nodes (0.74 seconds)
Cbc0004I Integer solution of -8.71349 found after 6894 iterations and 20 nodes (0.75 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 61 rows 36 columns
Cbc0012I Integer solution of -8.71423 found by RINS after 7712 iterations and 41 nodes (0.98 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 4 rows 10 columns
Cbc0016I Integer solution of -8.72522 found by strong branching after 9153 iterations and 120 nodes (1.16 seconds)
Cbc0001I Search completed - best objective -8.725220000000007, took 9367 iterations and 124 nodes (1.18 seconds)
Cbc0032I Strong branching done 1116 times (11117 iterations), fathomed 11 nodes and fixed 46 variables
Cbc0035I Maximum depth 13, 206 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-31) rows, 83 (-20) columns and 1002 (-577) elements
Clp1000I sum of infeasibilities 4.12004e-06 - average 5.56762e-08, 10 fixed columns
Coin0506I Presolve 59 (-15) rows, 71 (-12) columns and 757 (-245) elements
Clp0006I 0  Obj 18.05024 Dual inf 1.6614474 (70)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 4.6328237 - largest nonzero change 2.0969497e-05 ( 0.00096271338%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 48.587147
Clp0000I Optimal - objective value 48.587147
Coin0511I After Postsolve, objective 48.587147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.587147 Dual inf 6.8270921 (3)
Clp0014I Perturbing problem by 0.001% of 4.1374872 - largest nonzero change 1.5877905e-05 ( 0.00097726898%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 48.595864
Clp0000I Optimal - objective value 48.595864
Clp0000I Optimal - objective value 48.595864
Coin0511I After Postsolve, objective 48.595864, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.59586387 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 83 columns (83 integer (83 of which binary)) and 1004 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.601%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 5.08089
Cbc0038I Pass   1: suminf.    3.53252 (23) obj. -38.0022 iterations 9
Cbc0038I Pass   2: suminf.    0.15476 (2) obj. -0.187601 iterations 21
Cbc0038I Solution found of 1.65764
Cbc0038I Rounding solution of -0.309993 is better than previous of 1.65764

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.45465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.53252 (23) obj. -38.0022 iterations 0
Cbc0038I Pass   4: suminf.    0.68795 (4) obj. -4.45465 iterations 26
Cbc0038I Pass   5: suminf.    0.34226 (3) obj. -5.0626 iterations 3
Cbc0038I Pass   6: suminf.    0.35753 (3) obj. -4.45465 iterations 6
Cbc0038I Pass   7: suminf.    0.35753 (3) obj. -4.45465 iterations 0
Cbc0038I Pass   8: suminf.    0.65094 (2) obj. -4.45465 iterations 3
Cbc0038I Pass   9: suminf.    0.65094 (2) obj. -4.45465 iterations 0
Cbc0038I Pass  10: suminf.    2.16582 (9) obj. -4.45465 iterations 17
Cbc0038I Pass  11: suminf.    0.84332 (5) obj. -5.15205 iterations 10
Cbc0038I Pass  12: suminf.    0.66667 (5) obj. -4.45465 iterations 4
Cbc0038I Pass  13: suminf.    0.77450 (5) obj. -4.45465 iterations 6
Cbc0038I Pass  14: suminf.    0.75002 (4) obj. -4.45465 iterations 5
Cbc0038I Pass  15: suminf.    0.88140 (5) obj. -4.45465 iterations 7
Cbc0038I Pass  16: suminf.    0.85700 (4) obj. -4.45465 iterations 5
Cbc0038I Pass  17: suminf.    0.77450 (5) obj. -4.45465 iterations 6
Cbc0038I Pass  18: suminf.    2.46435 (14) obj. -4.45465 iterations 24
Cbc0038I Pass  19: suminf.    1.72247 (12) obj. -4.45465 iterations 8
Cbc0038I Pass  20: suminf.    0.98638 (8) obj. -4.9779 iterations 3
Cbc0038I Pass  21: suminf.    1.70352 (8) obj. -4.45465 iterations 16
Cbc0038I Pass  22: suminf.    0.91681 (7) obj. -4.45465 iterations 5
Cbc0038I Pass  23: suminf.    1.30170 (6) obj. -4.45465 iterations 4
Cbc0038I Pass  24: suminf.    2.22525 (8) obj. -4.45465 iterations 27
Cbc0038I Pass  25: suminf.    1.38774 (8) obj. -4.45465 iterations 13
Cbc0038I Pass  26: suminf.    1.16154 (5) obj. -4.45465 iterations 10
Cbc0038I Pass  27: suminf.    0.82948 (6) obj. -4.45465 iterations 9
Cbc0038I Pass  28: suminf.    1.01994 (5) obj. -4.45465 iterations 5
Cbc0038I Pass  29: suminf.    2.06072 (9) obj. -4.45465 iterations 12
Cbc0038I Pass  30: suminf.    1.69896 (9) obj. -4.45465 iterations 4
Cbc0038I Pass  31: suminf.    1.47047 (8) obj. -4.81059 iterations 2
Cbc0038I Pass  32: suminf.    1.35878 (6) obj. -4.45465 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 83 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 1.65764 to -6.63997 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.6632
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.53252 (23) obj. -38.0022 iterations 0
Cbc0038I Pass  33: suminf.    0.87041 (4) obj. -13.6632 iterations 35
Cbc0038I Pass  34: suminf.    0.81219 (4) obj. -13.8961 iterations 6
Cbc0038I Pass  35: suminf.    1.44315 (9) obj. -13.6632 iterations 17
Cbc0038I Pass  36: suminf.    1.42569 (8) obj. -13.6632 iterations 6
Cbc0038I Pass  37: suminf.    1.47288 (6) obj. -13.6632 iterations 11
Cbc0038I Pass  38: suminf.    1.09066 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  39: suminf.    1.86303 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  40: suminf.    1.86303 (7) obj. -13.6632 iterations 0
Cbc0038I Pass  41: suminf.    1.78754 (7) obj. -13.6632 iterations 6
Cbc0038I Pass  42: suminf.    1.78754 (7) obj. -13.6632 iterations 1
Cbc0038I Pass  43: suminf.    1.80274 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  44: suminf.    1.40065 (7) obj. -13.6632 iterations 3
Cbc0038I Pass  45: suminf.    1.79351 (7) obj. -13.6632 iterations 11
Cbc0038I Pass  46: suminf.    1.38160 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  47: suminf.    1.78754 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  48: suminf.    1.78754 (7) obj. -13.6632 iterations 1
Cbc0038I Pass  49: suminf.    1.80274 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  50: suminf.    1.40065 (7) obj. -13.6632 iterations 3
Cbc0038I Pass  51: suminf.    1.79351 (7) obj. -13.6632 iterations 11
Cbc0038I Pass  52: suminf.    1.38160 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  53: suminf.    1.78754 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  54: suminf.    1.78754 (7) obj. -13.6632 iterations 1
Cbc0038I Pass  55: suminf.    1.80274 (7) obj. -13.6632 iterations 5
Cbc0038I Pass  56: suminf.    1.40065 (7) obj. -13.6632 iterations 3
Cbc0038I Pass  57: suminf.    1.79351 (7) obj. -13.6632 iterations 11
Cbc0038I Pass  58: suminf.    1.38160 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  59: suminf.    1.78754 (7) obj. -13.6632 iterations 7
Cbc0038I Pass  60: suminf.    1.78754 (7) obj. -13.6632 iterations 1
Cbc0038I Pass  61: suminf.    1.80274 (7) obj. -13.6632 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -6.63997 - took 0.04 seconds
Cbc0012I Integer solution of -6.6399726 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 74 rows 83 columns, reduced to 19 rows 25 columns
Cbc0031I 47 added rows had average density of 28.808511
Cbc0013I At root node, 47 cuts changed objective from -41.755711 to -13.904645 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9108 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 958 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 878 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 255 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.752 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.6399726 best solution, best possible -13.904645 (2.23 seconds)
Cbc0012I Integer solution of -6.7817826 found by rounding after 4200 iterations and 1 nodes (2.24 seconds)
Cbc0012I Integer solution of -7.0501626 found by rounding after 4730 iterations and 9 nodes (2.50 seconds)
Cbc0012I Integer solution of -7.6074626 found by rounding after 4768 iterations and 10 nodes (2.50 seconds)
Cbc0012I Integer solution of -8.5620426 found by rounding after 4802 iterations and 12 nodes (2.51 seconds)
Cbc0012I Integer solution of -8.6932826 found by rounding after 4813 iterations and 13 nodes (2.52 seconds)
Cbc0004I Integer solution of -8.71348 found after 4949 iterations and 20 nodes (2.53 seconds)
Cbc0004I Integer solution of -8.72522 found after 5120 iterations and 36 nodes (2.57 seconds)
Cbc0038I Full problem 74 rows 83 columns, reduced to 26 rows 36 columns
Cbc0001I Search completed - best objective -8.725220000000007, took 6130 iterations and 72 nodes (2.80 seconds)
Cbc0032I Strong branching done 788 times (9267 iterations), fathomed 4 nodes and fixed 5 variables
Cbc0035I Maximum depth 15, 62 variables fixed on reduced cost
Total time (CPU seconds):       2.11   (Wallclock seconds):       2.81

