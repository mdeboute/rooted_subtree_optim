Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 72 (-6) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 2.31206e-05 - average 1.8063e-07, 16 fixed columns
Coin0506I Presolve 96 (-32) rows, 55 (-17) columns and 294 (-98) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.35131709 - largest nonzero change 0 ( 0%) - largest zero change 2.888273e-05
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Coin0511I After Postsolve, objective 72.383804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Coin0511I After Postsolve, objective 72.383804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.38380361 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 72 columns (71 integer (71 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.734%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.00604
Cbc0038I Solution found of -3.95129
Cbc0038I Relaxing continuous gives -13.4567
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -13.4567 to -40.2329 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.4121
Cbc0038I Pass   1: suminf.    2.04073 (18) obj. -43.4121 iterations 35
Cbc0038I Pass   2: suminf.    0.88876 (3) obj. -43.4121 iterations 31
Cbc0038I Pass   3: suminf.    0.34796 (2) obj. -43.4121 iterations 2
Cbc0038I Pass   4: suminf.    1.07628 (4) obj. -43.4121 iterations 10
Cbc0038I Pass   5: suminf.    0.52946 (3) obj. -43.4121 iterations 6
Cbc0038I Pass   6: suminf.    0.46887 (2) obj. -43.4121 iterations 3
Cbc0038I Pass   7: suminf.    0.51398 (3) obj. -43.4121 iterations 3
Cbc0038I Pass   8: suminf.    0.65110 (4) obj. -43.4121 iterations 16
Cbc0038I Pass   9: suminf.    0.56319 (3) obj. -43.4121 iterations 4
Cbc0038I Pass  10: suminf.    1.09848 (4) obj. -43.4121 iterations 12
Cbc0038I Pass  11: suminf.    0.57731 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  12: suminf.    0.72321 (2) obj. -43.4121 iterations 3
Cbc0038I Pass  13: suminf.    1.05586 (5) obj. -43.4121 iterations 15
Cbc0038I Pass  14: suminf.    0.37449 (3) obj. -43.4121 iterations 4
Cbc0038I Pass  15: suminf.    1.20910 (4) obj. -43.4121 iterations 9
Cbc0038I Pass  16: suminf.    0.41102 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  17: suminf.    0.41102 (2) obj. -43.4121 iterations 0
Cbc0038I Pass  18: suminf.    0.95914 (4) obj. -43.4121 iterations 6
Cbc0038I Pass  19: suminf.    0.51626 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  20: suminf.    0.33341 (1) obj. -43.4121 iterations 3
Cbc0038I Pass  21: suminf.    0.35420 (1) obj. -43.4121 iterations 2
Cbc0038I Pass  22: suminf.    0.66111 (4) obj. -43.4121 iterations 19
Cbc0038I Pass  23: suminf.    0.50508 (6) obj. -43.4121 iterations 11
Cbc0038I Pass  24: suminf.    1.28394 (5) obj. -43.4121 iterations 12
Cbc0038I Pass  25: suminf.    0.69755 (5) obj. -43.4121 iterations 7
Cbc0038I Pass  26: suminf.    1.22523 (4) obj. -43.4121 iterations 11
Cbc0038I Pass  27: suminf.    1.21684 (4) obj. -43.4121 iterations 4
Cbc0038I Pass  28: suminf.    0.67616 (4) obj. -43.4121 iterations 6
Cbc0038I Pass  29: suminf.    0.60267 (4) obj. -43.4121 iterations 4
Cbc0038I Pass  30: suminf.    1.45661 (4) obj. -43.4121 iterations 9
Cbc0038I Rounding solution of -45.2006 is better than previous of -40.2329

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 63 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -50.5654
Cbc0038I Pass  30: suminf.    2.52805 (18) obj. -50.5654 iterations 0
Cbc0038I Pass  31: suminf.    1.47097 (6) obj. -50.5654 iterations 22
Cbc0038I Pass  32: suminf.    1.29645 (5) obj. -50.5654 iterations 2
Cbc0038I Pass  33: suminf.    1.13132 (7) obj. -50.5654 iterations 16
Cbc0038I Pass  34: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  35: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  36: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  37: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  38: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  39: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  40: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  41: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  42: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  43: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  44: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  45: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  46: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  47: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  48: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  49: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  50: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  51: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  52: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  53: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  54: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  55: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  56: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  57: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  58: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  59: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 54 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -45.2006 - took 0.05 seconds
Cbc0012I Integer solution of -45.20059 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 43 rows 26 columns
Cbc0031I 21 added rows had average density of 43.47619
Cbc0013I At root node, 21 cuts changed objective from -72.024366 to -63.426448 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5854 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1158 row cuts average 70.6 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 58.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 19 nodes, 8 on tree, -45.20059 best solution, best possible -63.426448 (0.67 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 20 rows 14 columns
Cbc0001I Search completed - best objective -45.20059000000001, took 6510 iterations and 56 nodes (0.78 seconds)
Cbc0032I Strong branching done 684 times (12320 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 23, 282 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.79

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 120 (-32) columns and 2038 (-1265) elements
Clp1000I sum of infeasibilities 1.63947e-07 - average 1.54667e-09, 105 fixed columns
Coin0506I Presolve 10 (-96) rows, 15 (-105) columns and 45 (-1993) elements
Clp0006I 0  Obj 99.245786 Dual inf 1.0169983 (14)
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 99.2465
Clp0000I Optimal - objective value 99.2465
Coin0511I After Postsolve, objective 99.2465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 99.2465 Dual inf 153.90895 (47)
Clp0014I Perturbing problem by 0.001% of 1.4892975 - largest nonzero change 2.8993023e-05 ( 0.0017125872%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 168.31966
Clp0000I Optimal - objective value 168.31966
Clp0000I Optimal - objective value 168.31966
Coin0511I After Postsolve, objective 168.31966, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.3196633 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 120 columns (120 integer (120 of which binary)) and 2083 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.833%
Cgl0015I Clique Strengthening extended 1 cliques, 3 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 15.1608
Cbc0038I Pass   1: suminf.    1.58584 (30) obj. -105.492 iterations 19
Cbc0038I Pass   2: suminf.    1.58584 (30) obj. -105.492 iterations 0
Cbc0038I Pass   3: suminf.    0.17930 (5) obj. -79.9861 iterations 39
Cbc0038I Solution found of -73.2465
Cbc0038I Rounding solution of -87.7067 is better than previous of -73.2465

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 120 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -87.7067 to -120.246 (0.05 seconds)
Cbc0038I Round again with cutoff of -122.797
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.91007 (33) obj. -122.797 iterations 13
Cbc0038I Pass   5: suminf.    2.91007 (33) obj. -122.797 iterations 0
Cbc0038I Pass   6: suminf.    3.23758 (22) obj. -122.797 iterations 41
Cbc0038I Pass   7: suminf.    3.23758 (22) obj. -122.797 iterations 0
Cbc0038I Pass   8: suminf.    3.31475 (10) obj. -122.797 iterations 20
Cbc0038I Pass   9: suminf.    3.31475 (10) obj. -122.797 iterations 4
Cbc0038I Pass  10: suminf.    0.58607 (2) obj. -122.797 iterations 14
Cbc0038I Pass  11: suminf.    0.58607 (2) obj. -122.797 iterations 1
Cbc0038I Pass  12: suminf.    0.83164 (2) obj. -122.797 iterations 24
Cbc0038I Pass  13: suminf.    3.95490 (9) obj. -122.797 iterations 14
Cbc0038I Pass  14: suminf.    2.91974 (7) obj. -122.797 iterations 6
Cbc0038I Pass  15: suminf.    1.08607 (3) obj. -122.797 iterations 35
Cbc0038I Pass  16: suminf.    1.08607 (3) obj. -122.797 iterations 0
Cbc0038I Pass  17: suminf.    1.19167 (3) obj. -122.797 iterations 7
Cbc0038I Pass  18: suminf.    0.73223 (3) obj. -122.797 iterations 1
Cbc0038I Pass  19: suminf.    0.73223 (3) obj. -122.797 iterations 0
Cbc0038I Pass  20: suminf.    1.08607 (3) obj. -122.797 iterations 24
Cbc0038I Pass  21: suminf.    1.08607 (3) obj. -122.797 iterations 0
Cbc0038I Pass  22: suminf.    1.19167 (3) obj. -122.797 iterations 7
Cbc0038I Pass  23: suminf.    0.73223 (3) obj. -122.797 iterations 1
Cbc0038I Pass  24: suminf.    0.73223 (3) obj. -122.797 iterations 0
Cbc0038I Pass  25: suminf.    1.08607 (3) obj. -122.797 iterations 24
Cbc0038I Pass  26: suminf.    1.08607 (3) obj. -122.797 iterations 0
Cbc0038I Pass  27: suminf.    1.19167 (3) obj. -122.797 iterations 7
Cbc0038I Pass  28: suminf.    0.73223 (3) obj. -122.797 iterations 1
Cbc0038I Pass  29: suminf.    0.73223 (3) obj. -122.797 iterations 0
Cbc0038I Pass  30: suminf.    1.08607 (3) obj. -122.797 iterations 25
Cbc0038I Pass  31: suminf.    1.08607 (3) obj. -122.797 iterations 0
Cbc0038I Pass  32: suminf.    1.19167 (3) obj. -122.797 iterations 7
Cbc0038I Pass  33: suminf.    0.73223 (3) obj. -122.797 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -120.246 - took 0.02 seconds
Cbc0012I Integer solution of -120.2465 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 43 added rows had average density of 17.255814
Cbc0013I At root node, 470 cuts changed objective from -145.75084 to -120.2465 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 311 row cuts average 7.1 elements, 14 column cuts (14 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 23.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -120.2465, took 0 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 72 (-6) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 2.31206e-05 - average 1.8063e-07, 16 fixed columns
Coin0506I Presolve 96 (-32) rows, 55 (-17) columns and 294 (-98) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.35131709 - largest nonzero change 0 ( 0%) - largest zero change 2.888273e-05
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Coin0511I After Postsolve, objective 72.383804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Coin0511I After Postsolve, objective 72.383804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.38380361 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 72 columns (71 integer (71 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.734%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.00604
Cbc0038I Solution found of -3.95129
Cbc0038I Relaxing continuous gives -13.4567
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -13.4567 to -40.2329 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.4121
Cbc0038I Pass   1: suminf.    2.04073 (18) obj. -43.4121 iterations 35
Cbc0038I Pass   2: suminf.    0.88876 (3) obj. -43.4121 iterations 31
Cbc0038I Pass   3: suminf.    0.34796 (2) obj. -43.4121 iterations 2
Cbc0038I Pass   4: suminf.    1.07628 (4) obj. -43.4121 iterations 10
Cbc0038I Pass   5: suminf.    0.52946 (3) obj. -43.4121 iterations 6
Cbc0038I Pass   6: suminf.    0.46887 (2) obj. -43.4121 iterations 3
Cbc0038I Pass   7: suminf.    0.51398 (3) obj. -43.4121 iterations 3
Cbc0038I Pass   8: suminf.    0.65110 (4) obj. -43.4121 iterations 16
Cbc0038I Pass   9: suminf.    0.56319 (3) obj. -43.4121 iterations 4
Cbc0038I Pass  10: suminf.    1.09848 (4) obj. -43.4121 iterations 12
Cbc0038I Pass  11: suminf.    0.57731 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  12: suminf.    0.72321 (2) obj. -43.4121 iterations 3
Cbc0038I Pass  13: suminf.    1.05586 (5) obj. -43.4121 iterations 15
Cbc0038I Pass  14: suminf.    0.37449 (3) obj. -43.4121 iterations 4
Cbc0038I Pass  15: suminf.    1.20910 (4) obj. -43.4121 iterations 9
Cbc0038I Pass  16: suminf.    0.41102 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  17: suminf.    0.41102 (2) obj. -43.4121 iterations 0
Cbc0038I Pass  18: suminf.    0.95914 (4) obj. -43.4121 iterations 6
Cbc0038I Pass  19: suminf.    0.51626 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  20: suminf.    0.33341 (1) obj. -43.4121 iterations 3
Cbc0038I Pass  21: suminf.    0.35420 (1) obj. -43.4121 iterations 2
Cbc0038I Pass  22: suminf.    0.66111 (4) obj. -43.4121 iterations 19
Cbc0038I Pass  23: suminf.    0.50508 (6) obj. -43.4121 iterations 11
Cbc0038I Pass  24: suminf.    1.28394 (5) obj. -43.4121 iterations 12
Cbc0038I Pass  25: suminf.    0.69755 (5) obj. -43.4121 iterations 7
Cbc0038I Pass  26: suminf.    1.22523 (4) obj. -43.4121 iterations 11
Cbc0038I Pass  27: suminf.    1.21684 (4) obj. -43.4121 iterations 4
Cbc0038I Pass  28: suminf.    0.67616 (4) obj. -43.4121 iterations 6
Cbc0038I Pass  29: suminf.    0.60267 (4) obj. -43.4121 iterations 4
Cbc0038I Pass  30: suminf.    1.45661 (4) obj. -43.4121 iterations 9
Cbc0038I Rounding solution of -45.2006 is better than previous of -40.2329

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 63 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -50.5654
Cbc0038I Pass  30: suminf.    2.52805 (18) obj. -50.5654 iterations 0
Cbc0038I Pass  31: suminf.    1.47097 (6) obj. -50.5654 iterations 22
Cbc0038I Pass  32: suminf.    1.29645 (5) obj. -50.5654 iterations 2
Cbc0038I Pass  33: suminf.    1.13132 (7) obj. -50.5654 iterations 16
Cbc0038I Pass  34: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  35: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  36: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  37: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  38: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  39: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  40: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  41: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  42: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  43: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  44: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  45: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  46: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  47: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  48: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  49: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  50: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  51: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  52: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  53: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  54: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  55: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  56: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  57: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  58: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  59: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 54 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -45.2006 - took 0.06 seconds
Cbc0012I Integer solution of -45.20059 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 43 rows 26 columns
Cbc0031I 21 added rows had average density of 43.47619
Cbc0013I At root node, 21 cuts changed objective from -72.024366 to -63.426448 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5854 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1158 row cuts average 70.6 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 58.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 6 nodes, 7 on tree, -45.20059 best solution, best possible -63.426448 (0.70 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 20 rows 14 columns
Cbc0001I Search completed - best objective -45.20059000000001, took 6510 iterations and 56 nodes (0.84 seconds)
Cbc0032I Strong branching done 684 times (12320 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 23, 282 variables fixed on reduced cost
Total time (CPU seconds):       0.80   (Wallclock seconds):       0.85

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 116 (-37) columns and 1886 (-1418) elements
Clp1000I sum of infeasibilities 8.32789e-08 - average 8.1646e-10, 75 fixed columns
Coin0506I Presolve 30 (-72) rows, 41 (-75) columns and 136 (-1750) elements
Clp0006I 0  Obj 16.171523 Dual inf 159.47659 (39)
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 0.36285206 - largest nonzero change 0 ( 0%) - largest zero change 2.9555761e-05
Clp0000I Optimal - objective value 16.476039
Clp0000I Optimal - objective value 16.476039
Coin0511I After Postsolve, objective 16.476039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 16.476039 Dual inf 129.65622 (45)
Clp0014I Perturbing problem by 0.001% of 1.5153637 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 83.655428
Clp0000I Optimal - objective value 83.655428
Clp0000I Optimal - objective value 83.655428
Coin0511I After Postsolve, objective 83.655428, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.65542801 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 57 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 53 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 116 columns (116 integer (116 of which binary)) and 1909 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.700%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.28146
Cbc0038I Pass   1: suminf.    1.84656 (34) obj. -63.2919 iterations 16
Cbc0038I Pass   2: suminf.    0.53517 (12) obj. -39.7702 iterations 22
Cbc0038I Solution found of -26.3987
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 116 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -26.3987 to -32.2557 (0.04 seconds)
Cbc0038I Round again with cutoff of -36.4881
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.84656 (34) obj. -63.2919 iterations 0
Cbc0038I Pass   4: suminf.    1.18909 (24) obj. -53.9494 iterations 10
Cbc0038I Pass   5: suminf.    0.58412 (5) obj. -36.4881 iterations 35
Cbc0038I Pass   6: suminf.    0.89524 (2) obj. -36.5364 iterations 8
Cbc0038I Pass   7: suminf.    0.20899 (2) obj. -36.4881 iterations 4
Cbc0038I Pass   8: suminf.    1.24879 (3) obj. -36.4881 iterations 3
Cbc0038I Pass   9: suminf.    0.27842 (2) obj. -37.0962 iterations 2
Cbc0038I Pass  10: suminf.    1.79780 (11) obj. -36.4881 iterations 20
Cbc0038I Pass  11: suminf.    1.05755 (10) obj. -40.3353 iterations 4
Cbc0038I Pass  12: suminf.    0.89019 (5) obj. -36.4881 iterations 22
Cbc0038I Pass  13: suminf.    0.72704 (5) obj. -36.4881 iterations 4
Cbc0038I Pass  14: suminf.    0.88359 (5) obj. -36.4881 iterations 7
Cbc0038I Pass  15: suminf.    0.88359 (5) obj. -36.4881 iterations 2
Cbc0038I Pass  16: suminf.    0.90214 (4) obj. -36.4881 iterations 20
Cbc0038I Pass  17: suminf.    0.68180 (5) obj. -36.4881 iterations 5
Cbc0038I Pass  18: suminf.    0.97601 (4) obj. -36.4881 iterations 7
Cbc0038I Pass  19: suminf.    0.40906 (3) obj. -36.4881 iterations 5
Cbc0038I Pass  20: suminf.    1.45530 (4) obj. -36.4881 iterations 3
Cbc0038I Pass  21: suminf.    0.34981 (3) obj. -38.882 iterations 2
Cbc0038I Pass  22: suminf.    0.14444 (2) obj. -37.0953 iterations 1
Cbc0038I Pass  23: suminf.    0.40906 (3) obj. -36.4881 iterations 7
Cbc0038I Pass  24: suminf.    0.40906 (3) obj. -36.4881 iterations 0
Cbc0038I Pass  25: suminf.    1.45530 (4) obj. -36.4881 iterations 3
Cbc0038I Pass  26: suminf.    0.34981 (3) obj. -38.882 iterations 2
Cbc0038I Pass  27: suminf.    0.14444 (2) obj. -37.0953 iterations 1
Cbc0038I Pass  28: suminf.    0.40906 (3) obj. -36.4881 iterations 7
Cbc0038I Pass  29: suminf.    0.40906 (3) obj. -36.4881 iterations 0
Cbc0038I Pass  30: suminf.    1.45530 (4) obj. -36.4881 iterations 3
Cbc0038I Pass  31: suminf.    0.34981 (3) obj. -38.882 iterations 2
Cbc0038I Pass  32: suminf.    0.14444 (2) obj. -37.0953 iterations 1
Cbc0038I Rounding solution of -38.3768 is better than previous of -32.2557

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 116 columns, reduced to 42 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -45.6173
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.84656 (34) obj. -63.2919 iterations 0
Cbc0038I Pass  33: suminf.    0.80411 (18) obj. -45.6173 iterations 18
Cbc0038I Pass  34: suminf.    1.20955 (8) obj. -45.6173 iterations 28
Cbc0038I Pass  35: suminf.    0.88202 (9) obj. -45.6173 iterations 6
Cbc0038I Pass  36: suminf.    1.82081 (8) obj. -45.6173 iterations 8
Cbc0038I Pass  37: suminf.    0.97685 (8) obj. -45.6173 iterations 21
Cbc0038I Pass  38: suminf.    0.90555 (8) obj. -45.6173 iterations 5
Cbc0038I Pass  39: suminf.    1.12314 (9) obj. -45.6173 iterations 11
Cbc0038I Pass  40: suminf.    1.07298 (8) obj. -45.6173 iterations 5
Cbc0038I Pass  41: suminf.    0.72270 (9) obj. -45.6173 iterations 15
Cbc0038I Pass  42: suminf.    0.72270 (9) obj. -45.6173 iterations 1
Cbc0038I Pass  43: suminf.    0.75356 (9) obj. -45.6173 iterations 5
Cbc0038I Pass  44: suminf.    0.75108 (9) obj. -45.6173 iterations 4
Cbc0038I Pass  45: suminf.    0.72195 (9) obj. -45.6173 iterations 14
Cbc0038I Pass  46: suminf.    1.16288 (10) obj. -45.6173 iterations 23
Cbc0038I Pass  47: suminf.    0.66180 (9) obj. -45.6173 iterations 5
Cbc0038I Pass  48: suminf.    1.01482 (9) obj. -45.6173 iterations 18
Cbc0038I Pass  49: suminf.    0.86506 (10) obj. -45.6173 iterations 4
Cbc0038I Pass  50: suminf.    1.01482 (9) obj. -45.6173 iterations 10
Cbc0038I Pass  51: suminf.    0.82956 (10) obj. -45.6173 iterations 5
Cbc0038I Pass  52: suminf.    1.01482 (9) obj. -45.6173 iterations 6
Cbc0038I Pass  53: suminf.    2.14928 (13) obj. -45.6173 iterations 16
Cbc0038I Pass  54: suminf.    2.14928 (13) obj. -45.6173 iterations 2
Cbc0038I Pass  55: suminf.    1.58168 (11) obj. -45.6173 iterations 16
Cbc0038I Pass  56: suminf.    1.58168 (11) obj. -45.6173 iterations 0
Cbc0038I Pass  57: suminf.    1.93425 (12) obj. -45.6173 iterations 13
Cbc0038I Pass  58: suminf.    1.62561 (11) obj. -45.6173 iterations 9
Cbc0038I Pass  59: suminf.    1.82000 (11) obj. -45.6173 iterations 15
Cbc0038I Pass  60: suminf.    1.50061 (10) obj. -45.6173 iterations 9
Cbc0038I Pass  61: suminf.    1.79014 (11) obj. -45.6173 iterations 15
Cbc0038I Rounding solution of -40.2329 is better than previous of -38.3768

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 116 columns, reduced to 41 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -54.3058
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.84656 (34) obj. -63.2919 iterations 0
Cbc0038I Pass  62: suminf.    1.39095 (21) obj. -54.3058 iterations 24
Cbc0038I Pass  63: suminf.    2.19829 (17) obj. -54.3058 iterations 36
Cbc0038I Pass  64: suminf.    1.92688 (16) obj. -54.3058 iterations 6
Cbc0038I Pass  65: suminf.    2.16492 (17) obj. -54.3058 iterations 13
Cbc0038I Pass  66: suminf.    1.87651 (16) obj. -54.3058 iterations 6
Cbc0038I Pass  67: suminf.    2.19829 (17) obj. -54.3058 iterations 14
Cbc0038I Pass  68: suminf.    0.90585 (18) obj. -54.3058 iterations 16
Cbc0038I Pass  69: suminf.    0.90585 (18) obj. -54.3058 iterations 1
Cbc0038I Pass  70: suminf.    1.90374 (17) obj. -54.3058 iterations 11
Cbc0038I Pass  71: suminf.    0.77832 (16) obj. -54.3058 iterations 5
Cbc0038I Pass  72: suminf.    0.77673 (17) obj. -54.3058 iterations 2
Cbc0038I Pass  73: suminf.    2.29549 (18) obj. -54.3058 iterations 11
Cbc0038I Pass  74: suminf.    2.01937 (17) obj. -54.3058 iterations 7
Cbc0038I Pass  75: suminf.    2.36041 (18) obj. -54.3058 iterations 12
Cbc0038I Pass  76: suminf.    2.07603 (17) obj. -54.3058 iterations 6
Cbc0038I Pass  77: suminf.    1.55693 (18) obj. -54.3058 iterations 11
Cbc0038I Pass  78: suminf.    2.29549 (18) obj. -54.3058 iterations 14
Cbc0038I Pass  79: suminf.    2.01937 (17) obj. -54.3058 iterations 7
Cbc0038I Pass  80: suminf.    2.36041 (18) obj. -54.3058 iterations 12
Cbc0038I Pass  81: suminf.    2.07603 (17) obj. -54.3058 iterations 6
Cbc0038I Pass  82: suminf.    1.55693 (18) obj. -54.3058 iterations 11
Cbc0038I Pass  83: suminf.    2.29549 (18) obj. -54.3058 iterations 13
Cbc0038I Pass  84: suminf.    2.01937 (17) obj. -54.3058 iterations 6
Cbc0038I Pass  85: suminf.    2.36041 (18) obj. -54.3058 iterations 12
Cbc0038I Pass  86: suminf.    2.07603 (17) obj. -54.3058 iterations 6
Cbc0038I Pass  87: suminf.    1.55693 (18) obj. -54.3058 iterations 11
Cbc0038I Pass  88: suminf.    2.29549 (18) obj. -54.3058 iterations 14
Cbc0038I Pass  89: suminf.    2.01937 (17) obj. -54.3058 iterations 7
Cbc0038I Pass  90: suminf.    2.36041 (18) obj. -54.3058 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 116 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -40.2329 - took 0.06 seconds
Cbc0012I Integer solution of -40.23287 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 98 rows 116 columns, reduced to 38 rows 40 columns
Cbc0031I 56 added rows had average density of 32.946429
Cbc0013I At root node, 56 cuts changed objective from -74.578952 to -50.928674 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6207 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1170 row cuts average 105.7 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 728 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 551 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 336 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 125 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.698 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -40.23287 best solution, best possible -50.928674 (2.38 seconds)
Cbc0012I Integer solution of -41.69319 found by rounding after 3332 iterations and 1 nodes (2.39 seconds)
Cbc0004I Integer solution of -41.99199 found after 3359 iterations and 1 nodes (2.43 seconds)
Cbc0010I After 9 nodes, 8 on tree, -41.99199 best solution, best possible -50.7521 (3.11 seconds)
Cbc0004I Integer solution of -44.20059 found after 4139 iterations and 16 nodes (3.29 seconds)
Cbc0010I After 32 nodes, 8 on tree, -44.20059 best solution, best possible -50.7521 (3.84 seconds)
Cbc0038I Full problem 98 rows 116 columns, reduced to 52 rows 61 columns
Cbc0010I After 48 nodes, 5 on tree, -44.20059 best solution, best possible -50.7521 (4.64 seconds)
Cbc0010I After 66 nodes, 5 on tree, -44.20059 best solution, best possible -50.7521 (5.35 seconds)
Cbc0016I Integer solution of -45.20059 found by strong branching after 6708 iterations and 73 nodes (5.60 seconds)
Cbc0001I Search completed - best objective -45.20059000000001, took 6825 iterations and 74 nodes (5.61 seconds)
Cbc0032I Strong branching done 976 times (15376 iterations), fathomed 9 nodes and fixed 8 variables
Cbc0035I Maximum depth 16, 176 variables fixed on reduced cost
Total time (CPU seconds):       3.82   (Wallclock seconds):       5.63

