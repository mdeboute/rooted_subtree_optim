Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 1.95285e-06 - average 5.57956e-08, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 21 (-1) columns and 100 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Coin0511I After Postsolve, objective 66.644015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Coin0511I After Postsolve, objective 66.644015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.64401495 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.68683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.48407 iterations 12
Cbc0038I Solution found of -4.48407
Cbc0038I Relaxing continuous gives -4.48407
Cbc0038I Rounding solution of -14.0714 is better than previous of -4.48407

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -14.0714 to -26.4999 (0.01 seconds)
Cbc0038I Round again with cutoff of -30.5144
Cbc0038I Pass   2: suminf.    0.87204 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   3: suminf.    0.87204 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   4: suminf.    0.93656 (2) obj. -30.5144 iterations 1
Cbc0038I Pass   5: suminf.    0.60340 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   6: suminf.    0.60340 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   7: suminf.    0.52709 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   8: suminf.    0.52709 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   9: suminf.    0.59161 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  10: suminf.    1.77770 (5) obj. -30.5144 iterations 4
Cbc0038I Pass  11: suminf.    0.99799 (3) obj. -30.5144 iterations 4
Cbc0038I Pass  12: suminf.    0.72481 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  13: suminf.    0.90940 (3) obj. -30.5144 iterations 2
Cbc0038I Pass  14: suminf.    0.73034 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  15: suminf.    0.73034 (2) obj. -30.5144 iterations 0
Cbc0038I Pass  16: suminf.    1.30923 (4) obj. -30.5144 iterations 7
Cbc0038I Pass  17: suminf.    0.52709 (2) obj. -30.5144 iterations 6
Cbc0038I Pass  18: suminf.    0.59161 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  19: suminf.    0.52709 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  20: suminf.    0.69156 (4) obj. -30.5144 iterations 9
Cbc0038I Pass  21: suminf.    0.60705 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  22: suminf.    0.43027 (1) obj. -30.5144 iterations 4
Cbc0038I Pass  23: suminf.    0.33333 (1) obj. -30.5144 iterations 1
Cbc0038I Pass  24: suminf.    0.59632 (3) obj. -30.5144 iterations 3
Cbc0038I Pass  25: suminf.    0.48490 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  26: suminf.    0.64846 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  27: suminf.    0.61993 (4) obj. -30.5144 iterations 6
Cbc0038I Pass  28: suminf.    0.61993 (4) obj. -30.5144 iterations 1
Cbc0038I Pass  29: suminf.    1.37871 (4) obj. -30.5144 iterations 8
Cbc0038I Pass  30: suminf.    0.73107 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  31: suminf.    0.54838 (2) obj. -30.5144 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 27 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -26.4999 to -27.7936 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.7403
Cbc0038I Pass  31: suminf.    1.21991 (3) obj. -37.7403 iterations 1
Cbc0038I Pass  32: suminf.    1.21991 (3) obj. -37.7403 iterations 0
Cbc0038I Pass  33: suminf.    0.85705 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  34: suminf.    2.31503 (6) obj. -37.7403 iterations 7
Cbc0038I Pass  35: suminf.    1.00162 (4) obj. -37.7403 iterations 3
Cbc0038I Pass  36: suminf.    0.86640 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  37: suminf.    0.93219 (5) obj. -37.7403 iterations 5
Cbc0038I Pass  38: suminf.    0.83827 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  39: suminf.    0.70587 (2) obj. -37.7403 iterations 4
Cbc0038I Pass  40: suminf.    0.78708 (2) obj. -37.7403 iterations 2
Cbc0038I Pass  41: suminf.    0.78708 (2) obj. -37.7403 iterations 0
Cbc0038I Pass  42: suminf.    0.85159 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  43: suminf.    0.78708 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  44: suminf.    0.85159 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  45: suminf.    1.05750 (6) obj. -37.7403 iterations 11
Cbc0038I Pass  46: suminf.    0.82338 (4) obj. -37.7403 iterations 4
Cbc0038I Pass  47: suminf.    0.62694 (2) obj. -37.7403 iterations 5
Cbc0038I Pass  48: suminf.    0.77673 (4) obj. -37.7403 iterations 3
Cbc0038I Pass  49: suminf.    0.77673 (4) obj. -37.7403 iterations 0
Cbc0038I Pass  50: suminf.    0.76667 (2) obj. -37.7403 iterations 4
Cbc0038I Pass  51: suminf.    0.67826 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  52: suminf.    2.86850 (8) obj. -37.7403 iterations 8
Cbc0038I Pass  53: suminf.    1.54753 (5) obj. -37.7403 iterations 4
Cbc0038I Pass  54: suminf.    1.41142 (5) obj. -37.7403 iterations 1
Cbc0038I Pass  55: suminf.    2.20085 (7) obj. -37.7403 iterations 5
Cbc0038I Pass  56: suminf.    2.11523 (11) obj. -37.7403 iterations 2
Cbc0038I Pass  57: suminf.    0.73333 (3) obj. -37.7403 iterations 13
Cbc0038I Pass  58: suminf.    0.34739 (3) obj. -37.7403 iterations 4
Cbc0038I Pass  59: suminf.    0.76667 (2) obj. -37.7403 iterations 2
Cbc0038I Pass  60: suminf.    0.67826 (2) obj. -37.7403 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -27.7936 - took 0.04 seconds
Cbc0012I Integer solution of -27.79362 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 25 rows 17 columns
Cbc0031I 9 added rows had average density of 16.555556
Cbc0013I At root node, 9 cuts changed objective from -66.644015 to -46.512839 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1626 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -27.79362, took 2563 iterations and 20 nodes (0.19 seconds)
Cbc0032I Strong branching done 120 times (808 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 6, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-13) rows, 40 (-4) columns and 294 (-66) elements
Clp1000I sum of infeasibilities 0 - average 0, 12 fixed columns
Coin0506I Presolve 22 (-11) rows, 26 (-14) columns and 151 (-143) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 2.734191 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 80.742228
Clp0000I Optimal - objective value 80.742228
Coin0511I After Postsolve, objective 80.742228, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.742228
Clp0000I Optimal - objective value 80.742228
Clp0000I Optimal - objective value 80.742228
Coin0511I After Postsolve, objective 80.742228, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.74222827 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 40 columns (40 integer (40 of which binary)) and 298 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.117%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.59976
Cbc0038I Pass   1: suminf.    0.63960 (9) obj. -11.8725 iterations 9
Cbc0038I Pass   2: suminf.    0.63960 (9) obj. -11.8725 iterations 0
Cbc0038I Solution found of 20.0477
Cbc0038I Rounding solution of -14.1587 is better than previous of 20.0477

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -14.1587 to -18.8888 (0.01 seconds)
Cbc0038I Round again with cutoff of -24.003
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.73385 (14) obj. -24.003 iterations 1
Cbc0038I Pass   4: suminf.    1.73385 (14) obj. -24.003 iterations 0
Cbc0038I Pass   5: suminf.    0.49429 (2) obj. -24.003 iterations 19
Cbc0038I Pass   6: suminf.    0.49429 (2) obj. -24.003 iterations 0
Cbc0038I Pass   7: suminf.    0.65675 (2) obj. -24.003 iterations 6
Cbc0038I Pass   8: suminf.    0.50300 (2) obj. -24.003 iterations 3
Cbc0038I Pass   9: suminf.    0.28462 (3) obj. -24.003 iterations 5
Cbc0038I Pass  10: suminf.    0.50300 (2) obj. -24.003 iterations 5
Cbc0038I Pass  11: suminf.    1.62609 (6) obj. -24.003 iterations 13
Cbc0038I Pass  12: suminf.    1.38518 (6) obj. -24.003 iterations 4
Cbc0038I Pass  13: suminf.    2.06772 (8) obj. -24.003 iterations 9
Cbc0038I Pass  14: suminf.    2.06772 (8) obj. -24.003 iterations 1
Cbc0038I Pass  15: suminf.    0.55813 (2) obj. -24.003 iterations 10
Cbc0038I Pass  16: suminf.    0.35200 (2) obj. -26.8888 iterations 1
Cbc0038I Pass  17: suminf.    0.55813 (2) obj. -24.003 iterations 4
Cbc0038I Pass  18: suminf.    1.21612 (5) obj. -24.003 iterations 5
Cbc0038I Pass  19: suminf.    1.02647 (4) obj. -24.003 iterations 2
Cbc0038I Pass  20: suminf.    0.94875 (3) obj. -24.003 iterations 4
Cbc0038I Pass  21: suminf.    0.63500 (3) obj. -24.003 iterations 2
Cbc0038I Pass  22: suminf.    0.94875 (3) obj. -24.003 iterations 3
Cbc0038I Pass  23: suminf.    1.47081 (7) obj. -31.846 iterations 14
Cbc0038I Pass  24: suminf.    1.47081 (7) obj. -31.846 iterations 0
Cbc0038I Pass  25: suminf.    1.04832 (3) obj. -24.003 iterations 7
Cbc0038I Pass  26: suminf.    1.01000 (3) obj. -24.5395 iterations 1
Cbc0038I Pass  27: suminf.    1.56058 (8) obj. -24.003 iterations 10
Cbc0038I Pass  28: suminf.    1.56058 (8) obj. -24.003 iterations 1
Cbc0038I Pass  29: suminf.    0.75060 (2) obj. -24.003 iterations 9
Cbc0038I Pass  30: suminf.    0.75060 (2) obj. -24.003 iterations 1
Cbc0038I Pass  31: suminf.    0.47287 (2) obj. -24.003 iterations 1
Cbc0038I Pass  32: suminf.    1.55566 (10) obj. -24.003 iterations 21
Cbc0038I Rounding solution of -24.4603 is better than previous of -18.8888

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -24.4603 to -27.7936 (0.05 seconds)
Cbc0038I Round again with cutoff of -36.2409
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.88411 (15) obj. -36.2409 iterations 1
Cbc0038I Pass  33: suminf.    1.86195 (14) obj. -36.2409 iterations 3
Cbc0038I Pass  34: suminf.    0.55793 (4) obj. -36.2409 iterations 15
Cbc0038I Pass  35: suminf.    0.55789 (3) obj. -36.2424 iterations 2
Cbc0038I Pass  36: suminf.    0.56121 (4) obj. -36.2409 iterations 9
Cbc0038I Pass  37: suminf.    0.48827 (4) obj. -36.2409 iterations 4
Cbc0038I Pass  38: suminf.    0.90154 (3) obj. -36.2409 iterations 6
Cbc0038I Pass  39: suminf.    0.87688 (4) obj. -36.2409 iterations 2
Cbc0038I Pass  40: suminf.    0.56121 (4) obj. -36.2409 iterations 4
Cbc0038I Pass  41: suminf.    1.93703 (9) obj. -36.2409 iterations 19
Cbc0038I Pass  42: suminf.    1.27062 (8) obj. -39.976 iterations 5
Cbc0038I Pass  43: suminf.    1.38010 (5) obj. -36.2409 iterations 11
Cbc0038I Pass  44: suminf.    1.04015 (5) obj. -36.2409 iterations 2
Cbc0038I Pass  45: suminf.    1.04007 (4) obj. -36.2409 iterations 3
Cbc0038I Pass  46: suminf.    1.02891 (3) obj. -36.2409 iterations 2
Cbc0038I Pass  47: suminf.    1.03715 (4) obj. -36.2409 iterations 6
Cbc0038I Pass  48: suminf.    0.87615 (4) obj. -38.4948 iterations 1
Cbc0038I Pass  49: suminf.    1.12659 (4) obj. -36.2409 iterations 2
Cbc0038I Pass  50: suminf.    1.88006 (9) obj. -36.2409 iterations 7
Cbc0038I Pass  51: suminf.    1.74034 (8) obj. -38.5469 iterations 3
Cbc0038I Pass  52: suminf.    1.47604 (8) obj. -36.2409 iterations 2
Cbc0038I Pass  53: suminf.    1.34456 (4) obj. -36.2409 iterations 9
Cbc0038I Pass  54: suminf.    1.10959 (4) obj. -36.2409 iterations 2
Cbc0038I Pass  55: suminf.    0.88758 (5) obj. -36.2409 iterations 2
Cbc0038I Pass  56: suminf.    0.41411 (4) obj. -36.2409 iterations 4
Cbc0038I Pass  57: suminf.    0.88529 (5) obj. -36.2409 iterations 5
Cbc0038I Pass  58: suminf.    0.76464 (4) obj. -37.5334 iterations 2
Cbc0038I Pass  59: suminf.    1.15529 (4) obj. -36.2409 iterations 4
Cbc0038I Pass  60: suminf.    1.08077 (5) obj. -36.2409 iterations 2
Cbc0038I Pass  61: suminf.    0.73278 (3) obj. -36.2409 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -27.7936 - took 0.05 seconds
Cbc0012I Integer solution of -27.79362 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 33 rows 40 columns, reduced to 19 rows 23 columns
Cbc0031I 18 added rows had average density of 11.888889
Cbc0013I At root node, 18 cuts changed objective from -70.029605 to -33.869569 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2112 row cuts average 4.0 elements, 5 column cuts (5 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 907 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 77 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 181 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -27.79362, took 2123 iterations and 6 nodes (0.28 seconds)
Cbc0032I Strong branching done 106 times (1023 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 1.95285e-06 - average 5.57956e-08, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 21 (-1) columns and 100 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Coin0511I After Postsolve, objective 66.644015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Coin0511I After Postsolve, objective 66.644015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.64401495 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.68683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.48407 iterations 12
Cbc0038I Solution found of -4.48407
Cbc0038I Relaxing continuous gives -4.48407
Cbc0038I Rounding solution of -14.0714 is better than previous of -4.48407

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -14.0714 to -26.4999 (0.01 seconds)
Cbc0038I Round again with cutoff of -30.5144
Cbc0038I Pass   2: suminf.    0.87204 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   3: suminf.    0.87204 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   4: suminf.    0.93656 (2) obj. -30.5144 iterations 1
Cbc0038I Pass   5: suminf.    0.60340 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   6: suminf.    0.60340 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   7: suminf.    0.52709 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   8: suminf.    0.52709 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   9: suminf.    0.59161 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  10: suminf.    1.77770 (5) obj. -30.5144 iterations 4
Cbc0038I Pass  11: suminf.    0.99799 (3) obj. -30.5144 iterations 4
Cbc0038I Pass  12: suminf.    0.72481 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  13: suminf.    0.90940 (3) obj. -30.5144 iterations 2
Cbc0038I Pass  14: suminf.    0.73034 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  15: suminf.    0.73034 (2) obj. -30.5144 iterations 0
Cbc0038I Pass  16: suminf.    1.30923 (4) obj. -30.5144 iterations 7
Cbc0038I Pass  17: suminf.    0.52709 (2) obj. -30.5144 iterations 6
Cbc0038I Pass  18: suminf.    0.59161 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  19: suminf.    0.52709 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  20: suminf.    0.69156 (4) obj. -30.5144 iterations 9
Cbc0038I Pass  21: suminf.    0.60705 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  22: suminf.    0.43027 (1) obj. -30.5144 iterations 4
Cbc0038I Pass  23: suminf.    0.33333 (1) obj. -30.5144 iterations 1
Cbc0038I Pass  24: suminf.    0.59632 (3) obj. -30.5144 iterations 3
Cbc0038I Pass  25: suminf.    0.48490 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  26: suminf.    0.64846 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  27: suminf.    0.61993 (4) obj. -30.5144 iterations 6
Cbc0038I Pass  28: suminf.    0.61993 (4) obj. -30.5144 iterations 1
Cbc0038I Pass  29: suminf.    1.37871 (4) obj. -30.5144 iterations 8
Cbc0038I Pass  30: suminf.    0.73107 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  31: suminf.    0.54838 (2) obj. -30.5144 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 27 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -26.4999 to -27.7936 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.7403
Cbc0038I Pass  31: suminf.    1.21991 (3) obj. -37.7403 iterations 1
Cbc0038I Pass  32: suminf.    1.21991 (3) obj. -37.7403 iterations 0
Cbc0038I Pass  33: suminf.    0.85705 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  34: suminf.    2.31503 (6) obj. -37.7403 iterations 7
Cbc0038I Pass  35: suminf.    1.00162 (4) obj. -37.7403 iterations 3
Cbc0038I Pass  36: suminf.    0.86640 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  37: suminf.    0.93219 (5) obj. -37.7403 iterations 5
Cbc0038I Pass  38: suminf.    0.83827 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  39: suminf.    0.70587 (2) obj. -37.7403 iterations 4
Cbc0038I Pass  40: suminf.    0.78708 (2) obj. -37.7403 iterations 2
Cbc0038I Pass  41: suminf.    0.78708 (2) obj. -37.7403 iterations 0
Cbc0038I Pass  42: suminf.    0.85159 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  43: suminf.    0.78708 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  44: suminf.    0.85159 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  45: suminf.    1.05750 (6) obj. -37.7403 iterations 11
Cbc0038I Pass  46: suminf.    0.82338 (4) obj. -37.7403 iterations 4
Cbc0038I Pass  47: suminf.    0.62694 (2) obj. -37.7403 iterations 5
Cbc0038I Pass  48: suminf.    0.77673 (4) obj. -37.7403 iterations 3
Cbc0038I Pass  49: suminf.    0.77673 (4) obj. -37.7403 iterations 0
Cbc0038I Pass  50: suminf.    0.76667 (2) obj. -37.7403 iterations 4
Cbc0038I Pass  51: suminf.    0.67826 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  52: suminf.    2.86850 (8) obj. -37.7403 iterations 8
Cbc0038I Pass  53: suminf.    1.54753 (5) obj. -37.7403 iterations 4
Cbc0038I Pass  54: suminf.    1.41142 (5) obj. -37.7403 iterations 1
Cbc0038I Pass  55: suminf.    2.20085 (7) obj. -37.7403 iterations 5
Cbc0038I Pass  56: suminf.    2.11523 (11) obj. -37.7403 iterations 2
Cbc0038I Pass  57: suminf.    0.73333 (3) obj. -37.7403 iterations 13
Cbc0038I Pass  58: suminf.    0.34739 (3) obj. -37.7403 iterations 4
Cbc0038I Pass  59: suminf.    0.76667 (2) obj. -37.7403 iterations 2
Cbc0038I Pass  60: suminf.    0.67826 (2) obj. -37.7403 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -27.7936 - took 0.07 seconds
Cbc0012I Integer solution of -27.79362 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 25 rows 17 columns
Cbc0031I 9 added rows had average density of 16.555556
Cbc0013I At root node, 9 cuts changed objective from -66.644015 to -46.512839 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1626 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -27.79362, took 2563 iterations and 20 nodes (0.19 seconds)
Cbc0032I Strong branching done 120 times (808 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 6, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 40 (-5) columns and 294 (-67) elements
Clp1000I sum of infeasibilities 0 - average 0, 12 fixed columns
Coin0506I Presolve 22 (-11) rows, 26 (-14) columns and 151 (-143) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 2.734191 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 80.742228
Clp0000I Optimal - objective value 80.742228
Coin0511I After Postsolve, objective 80.742228, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.742228
Clp0000I Optimal - objective value 80.742228
Clp0000I Optimal - objective value 80.742228
Coin0511I After Postsolve, objective 80.742228, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.74222827 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 40 columns (40 integer (40 of which binary)) and 298 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.117%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.59976
Cbc0038I Pass   1: suminf.    0.63960 (9) obj. -11.8725 iterations 9
Cbc0038I Pass   2: suminf.    0.63960 (9) obj. -11.8725 iterations 0
Cbc0038I Solution found of 20.0477
Cbc0038I Rounding solution of -14.1587 is better than previous of 20.0477

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -14.1587 to -18.8888 (0.01 seconds)
Cbc0038I Round again with cutoff of -24.003
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.73385 (14) obj. -24.003 iterations 1
Cbc0038I Pass   4: suminf.    1.73385 (14) obj. -24.003 iterations 0
Cbc0038I Pass   5: suminf.    0.49429 (2) obj. -24.003 iterations 19
Cbc0038I Pass   6: suminf.    0.49429 (2) obj. -24.003 iterations 0
Cbc0038I Pass   7: suminf.    0.65675 (2) obj. -24.003 iterations 6
Cbc0038I Pass   8: suminf.    0.50300 (2) obj. -24.003 iterations 3
Cbc0038I Pass   9: suminf.    0.28462 (3) obj. -24.003 iterations 5
Cbc0038I Pass  10: suminf.    0.50300 (2) obj. -24.003 iterations 5
Cbc0038I Pass  11: suminf.    1.62609 (6) obj. -24.003 iterations 13
Cbc0038I Pass  12: suminf.    1.38518 (6) obj. -24.003 iterations 4
Cbc0038I Pass  13: suminf.    2.06772 (8) obj. -24.003 iterations 9
Cbc0038I Pass  14: suminf.    2.06772 (8) obj. -24.003 iterations 1
Cbc0038I Pass  15: suminf.    0.55813 (2) obj. -24.003 iterations 10
Cbc0038I Pass  16: suminf.    0.35200 (2) obj. -26.8888 iterations 1
Cbc0038I Pass  17: suminf.    0.55813 (2) obj. -24.003 iterations 4
Cbc0038I Pass  18: suminf.    1.21612 (5) obj. -24.003 iterations 5
Cbc0038I Pass  19: suminf.    1.02647 (4) obj. -24.003 iterations 2
Cbc0038I Pass  20: suminf.    0.94875 (3) obj. -24.003 iterations 4
Cbc0038I Pass  21: suminf.    0.63500 (3) obj. -24.003 iterations 2
Cbc0038I Pass  22: suminf.    0.94875 (3) obj. -24.003 iterations 3
Cbc0038I Pass  23: suminf.    1.47081 (7) obj. -31.846 iterations 14
Cbc0038I Pass  24: suminf.    1.47081 (7) obj. -31.846 iterations 0
Cbc0038I Pass  25: suminf.    1.04832 (3) obj. -24.003 iterations 7
Cbc0038I Pass  26: suminf.    1.01000 (3) obj. -24.5395 iterations 1
Cbc0038I Pass  27: suminf.    1.56058 (8) obj. -24.003 iterations 10
Cbc0038I Pass  28: suminf.    1.56058 (8) obj. -24.003 iterations 1
Cbc0038I Pass  29: suminf.    0.75060 (2) obj. -24.003 iterations 9
Cbc0038I Pass  30: suminf.    0.75060 (2) obj. -24.003 iterations 1
Cbc0038I Pass  31: suminf.    0.47287 (2) obj. -24.003 iterations 1
Cbc0038I Pass  32: suminf.    1.55566 (10) obj. -24.003 iterations 21
Cbc0038I Rounding solution of -24.4603 is better than previous of -18.8888

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -24.4603 to -27.7936 (0.04 seconds)
Cbc0038I Round again with cutoff of -36.2409
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.88411 (15) obj. -36.2409 iterations 1
Cbc0038I Pass  33: suminf.    1.86195 (14) obj. -36.2409 iterations 3
Cbc0038I Pass  34: suminf.    0.55793 (4) obj. -36.2409 iterations 15
Cbc0038I Pass  35: suminf.    0.55789 (3) obj. -36.2424 iterations 2
Cbc0038I Pass  36: suminf.    0.56121 (4) obj. -36.2409 iterations 9
Cbc0038I Pass  37: suminf.    0.48827 (4) obj. -36.2409 iterations 4
Cbc0038I Pass  38: suminf.    0.90154 (3) obj. -36.2409 iterations 6
Cbc0038I Pass  39: suminf.    0.87688 (4) obj. -36.2409 iterations 2
Cbc0038I Pass  40: suminf.    0.56121 (4) obj. -36.2409 iterations 4
Cbc0038I Pass  41: suminf.    1.93703 (9) obj. -36.2409 iterations 19
Cbc0038I Pass  42: suminf.    1.27062 (8) obj. -39.976 iterations 5
Cbc0038I Pass  43: suminf.    1.38010 (5) obj. -36.2409 iterations 11
Cbc0038I Pass  44: suminf.    1.04015 (5) obj. -36.2409 iterations 2
Cbc0038I Pass  45: suminf.    1.04007 (4) obj. -36.2409 iterations 3
Cbc0038I Pass  46: suminf.    1.02891 (3) obj. -36.2409 iterations 2
Cbc0038I Pass  47: suminf.    1.03715 (4) obj. -36.2409 iterations 6
Cbc0038I Pass  48: suminf.    0.87615 (4) obj. -38.4948 iterations 1
Cbc0038I Pass  49: suminf.    1.12659 (4) obj. -36.2409 iterations 2
Cbc0038I Pass  50: suminf.    1.88006 (9) obj. -36.2409 iterations 7
Cbc0038I Pass  51: suminf.    1.74034 (8) obj. -38.5469 iterations 3
Cbc0038I Pass  52: suminf.    1.47604 (8) obj. -36.2409 iterations 2
Cbc0038I Pass  53: suminf.    1.34456 (4) obj. -36.2409 iterations 9
Cbc0038I Pass  54: suminf.    1.10959 (4) obj. -36.2409 iterations 2
Cbc0038I Pass  55: suminf.    0.88758 (5) obj. -36.2409 iterations 2
Cbc0038I Pass  56: suminf.    0.41411 (4) obj. -36.2409 iterations 4
Cbc0038I Pass  57: suminf.    0.88529 (5) obj. -36.2409 iterations 5
Cbc0038I Pass  58: suminf.    0.76464 (4) obj. -37.5334 iterations 2
Cbc0038I Pass  59: suminf.    1.15529 (4) obj. -36.2409 iterations 4
Cbc0038I Pass  60: suminf.    1.08077 (5) obj. -36.2409 iterations 2
Cbc0038I Pass  61: suminf.    0.73278 (3) obj. -36.2409 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -27.7936 - took 0.05 seconds
Cbc0012I Integer solution of -27.79362 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 33 rows 40 columns, reduced to 19 rows 23 columns
Cbc0031I 18 added rows had average density of 11.888889
Cbc0013I At root node, 18 cuts changed objective from -70.029605 to -33.869569 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2112 row cuts average 4.0 elements, 5 column cuts (5 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 907 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 77 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 181 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -27.79362, took 2123 iterations and 6 nodes (0.28 seconds)
Cbc0032I Strong branching done 106 times (1023 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

