Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-18) rows, 27 (-8) columns and 149 (-46) elements
Clp1000I sum of infeasibilities 6.0698e-05 - average 1.19016e-06, 4 fixed columns
Coin0506I Presolve 43 (-8) rows, 23 (-4) columns and 125 (-24) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 602.91069
Clp0000I Optimal - objective value 602.91069
Coin0511I After Postsolve, objective 602.91069, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 602.91069
Clp0000I Optimal - objective value 602.91069
Clp0000I Optimal - objective value 602.91069
Coin0511I After Postsolve, objective 602.91069, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 602.9106938 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 27 columns (26 integer (26 of which binary)) and 149 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.8683
Cbc0038I Pass   1: suminf.    0.39200 (1) obj. -477.484 iterations 17
Cbc0038I Solution found of -377.421
Cbc0038I Relaxing continuous gives -377.421
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 27 columns, reduced to 17 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -377.421 to -508.737 (0.01 seconds)
Cbc0038I Round again with cutoff of -517.252
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.74548 (3) obj. -517.252 iterations 2
Cbc0038I Pass   3: suminf.    0.05536 (3) obj. -517.252 iterations 5
Cbc0038I Pass   4: suminf.    0.05536 (3) obj. -517.252 iterations 0
Cbc0038I Pass   5: suminf.    0.30539 (3) obj. -517.252 iterations 3
Cbc0038I Pass   6: suminf.    0.27413 (2) obj. -517.252 iterations 1
Cbc0038I Pass   7: suminf.    0.48539 (2) obj. -546.918 iterations 2
Cbc0038I Pass   8: suminf.    0.28488 (2) obj. -517.252 iterations 1
Cbc0038I Pass   9: suminf.    0.05536 (3) obj. -517.252 iterations 2
Cbc0038I Pass  10: suminf.    0.05536 (3) obj. -517.252 iterations 0
Cbc0038I Pass  11: suminf.    0.78474 (3) obj. -517.252 iterations 3
Cbc0038I Pass  12: suminf.    0.56071 (2) obj. -517.252 iterations 1
Cbc0038I Pass  13: suminf.    0.28488 (2) obj. -517.252 iterations 2
Cbc0038I Pass  14: suminf.    0.24588 (4) obj. -517.252 iterations 6
Cbc0038I Pass  15: suminf.    0.16012 (2) obj. -517.252 iterations 5
Cbc0038I Pass  16: suminf.    0.28488 (2) obj. -517.252 iterations 3
Cbc0038I Pass  17: suminf.    0.45594 (2) obj. -517.252 iterations 7
Cbc0038I Pass  18: suminf.    0.45594 (2) obj. -517.252 iterations 2
Cbc0038I Pass  19: suminf.    0.05536 (3) obj. -517.252 iterations 4
Cbc0038I Pass  20: suminf.    0.05536 (3) obj. -517.252 iterations 0
Cbc0038I Pass  21: suminf.    0.78474 (3) obj. -517.252 iterations 3
Cbc0038I Pass  22: suminf.    0.56071 (2) obj. -517.252 iterations 1
Cbc0038I Pass  23: suminf.    0.28488 (2) obj. -517.252 iterations 2
Cbc0038I Pass  24: suminf.    1.44871 (5) obj. -517.252 iterations 6
Cbc0038I Pass  25: suminf.    1.44871 (5) obj. -517.252 iterations 1
Cbc0038I Pass  26: suminf.    0.58476 (4) obj. -517.252 iterations 3
Cbc0038I Pass  27: suminf.    0.29843 (1) obj. -517.252 iterations 3
Cbc0038I Pass  28: suminf.    0.38250 (1) obj. -535.828 iterations 1
Cbc0038I Pass  29: suminf.    0.55611 (5) obj. -517.252 iterations 3
Cbc0038I Pass  30: suminf.    0.55611 (5) obj. -517.252 iterations 0
Cbc0038I Pass  31: suminf.    1.11441 (6) obj. -517.252 iterations 3
Cbc0038I Rounding solution of -513 is better than previous of -508.737

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 27 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -513 to -539.052 (0.02 seconds)
Cbc0038I Round again with cutoff of -550.019
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.93998 (5) obj. -550.019 iterations 2
Cbc0038I Pass  32: suminf.    1.42562 (5) obj. -550.019 iterations 11
Cbc0038I Pass  33: suminf.    1.42562 (5) obj. -550.019 iterations 0
Cbc0038I Pass  34: suminf.    0.91580 (6) obj. -550.019 iterations 2
Cbc0038I Pass  35: suminf.    0.76955 (6) obj. -550.019 iterations 1
Cbc0038I Pass  36: suminf.    0.84601 (6) obj. -550.019 iterations 4
Cbc0038I Pass  37: suminf.    0.84601 (6) obj. -550.019 iterations 0
Cbc0038I Pass  38: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  39: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  40: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I Pass  41: suminf.    1.10754 (6) obj. -550.019 iterations 2
Cbc0038I Pass  42: suminf.    0.84601 (6) obj. -550.019 iterations 2
Cbc0038I Pass  43: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  44: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  45: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I Pass  46: suminf.    1.10754 (6) obj. -550.019 iterations 2
Cbc0038I Pass  47: suminf.    0.84601 (6) obj. -550.019 iterations 2
Cbc0038I Pass  48: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  49: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  50: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I Pass  51: suminf.    1.10754 (6) obj. -550.019 iterations 2
Cbc0038I Pass  52: suminf.    0.84601 (6) obj. -550.019 iterations 2
Cbc0038I Pass  53: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  54: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  55: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I Pass  56: suminf.    1.10754 (6) obj. -550.019 iterations 2
Cbc0038I Pass  57: suminf.    0.84601 (6) obj. -550.019 iterations 2
Cbc0038I Pass  58: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  59: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  60: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 27 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -539.052 - took 0.04 seconds
Cbc0012I Integer solution of -539.05222 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 27 columns, reduced to 19 rows 15 columns
Cbc0031I 5 added rows had average density of 5
Cbc0013I At root node, 16 cuts changed objective from -593.88515 to -528.19035 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 38 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0001I Search completed - best objective -539.05222, took 47 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-14) rows, 55 (-11) columns and 505 (-218) elements
Clp1000I sum of infeasibilities 1.50903e-08 - average 2.79451e-10, 13 fixed columns
Coin0506I Presolve 43 (-11) rows, 42 (-13) columns and 283 (-222) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.8823619 - largest nonzero change 0 ( 0%) - largest zero change 2.3539002e-05
Clp0000I Optimal - objective value 744.74999
Clp0000I Optimal - objective value 744.74999
Coin0511I After Postsolve, objective 744.74999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.977799 - largest nonzero change 1.7085143e-05 ( 0.0017085143%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 744.74999
Clp0000I Optimal - objective value 744.74999
Clp0000I Optimal - objective value 744.74999
Coin0511I After Postsolve, objective 744.74999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 744.7499863 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 55 columns (55 integer (55 of which binary)) and 507 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.502%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.72795
Cbc0038I Pass   1: suminf.    0.88419 (9) obj. -80.7042 iterations 11
Cbc0038I Pass   2: suminf.    0.88419 (9) obj. -80.7042 iterations 1
Cbc0038I Solution found of -47.5792
Cbc0038I Rounding solution of -85.4739 is better than previous of -47.5792

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 55 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -85.4739 to -539.052 (0.01 seconds)
Cbc0038I Round again with cutoff of -548.044
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.91461 (20) obj. -548.044 iterations 3
Cbc0038I Pass   4: suminf.    0.75002 (12) obj. -548.044 iterations 21
Cbc0038I Pass   5: suminf.    0.75002 (12) obj. -548.044 iterations 0
Cbc0038I Pass   6: suminf.    1.01243 (4) obj. -548.044 iterations 12
Cbc0038I Pass   7: suminf.    1.01243 (4) obj. -548.044 iterations 0
Cbc0038I Pass   8: suminf.    1.23412 (4) obj. -548.044 iterations 1
Cbc0038I Pass   9: suminf.    1.09587 (5) obj. -548.044 iterations 2
Cbc0038I Pass  10: suminf.    0.63969 (5) obj. -548.044 iterations 1
Cbc0038I Pass  11: suminf.    0.55271 (5) obj. -548.044 iterations 1
Cbc0038I Pass  12: suminf.    1.60025 (6) obj. -548.044 iterations 3
Cbc0038I Pass  13: suminf.    1.60025 (6) obj. -548.044 iterations 0
Cbc0038I Pass  14: suminf.    0.63969 (5) obj. -548.044 iterations 6
Cbc0038I Pass  15: suminf.    1.18525 (8) obj. -548.044 iterations 10
Cbc0038I Pass  16: suminf.    1.17234 (9) obj. -548.044 iterations 4
Cbc0038I Pass  17: suminf.    0.63969 (5) obj. -548.044 iterations 14
Cbc0038I Pass  18: suminf.    0.55271 (5) obj. -548.044 iterations 1
Cbc0038I Pass  19: suminf.    1.60025 (6) obj. -548.044 iterations 3
Cbc0038I Pass  20: suminf.    1.60025 (6) obj. -548.044 iterations 0
Cbc0038I Pass  21: suminf.    0.63969 (5) obj. -548.044 iterations 6
Cbc0038I Pass  22: suminf.    1.35260 (7) obj. -548.044 iterations 10
Cbc0038I Pass  23: suminf.    1.35142 (7) obj. -548.044 iterations 2
Cbc0038I Pass  24: suminf.    0.96949 (6) obj. -548.044 iterations 6
Cbc0038I Pass  25: suminf.    0.96949 (6) obj. -548.044 iterations 1
Cbc0038I Pass  26: suminf.    1.56322 (6) obj. -548.044 iterations 1
Cbc0038I Pass  27: suminf.    1.13981 (6) obj. -548.044 iterations 2
Cbc0038I Pass  28: suminf.    2.98466 (14) obj. -548.044 iterations 10
Cbc0038I Pass  29: suminf.    2.44820 (11) obj. -548.044 iterations 5
Cbc0038I Pass  30: suminf.    1.18476 (5) obj. -548.044 iterations 9
Cbc0038I Pass  31: suminf.    0.96949 (6) obj. -548.044 iterations 1
Cbc0038I Pass  32: suminf.    1.56322 (6) obj. -548.044 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 55 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -539.052 - took 0.02 seconds
Cbc0012I Integer solution of -539.05222 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 54 rows 55 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 12 added rows had average density of 5.9166667
Cbc0013I At root node, 12 cuts changed objective from -587.46626 to -546.08951 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 4.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 30 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -539.05222, took 68 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-18) rows, 27 (-8) columns and 149 (-46) elements
Clp1000I sum of infeasibilities 6.0698e-05 - average 1.19016e-06, 4 fixed columns
Coin0506I Presolve 43 (-8) rows, 23 (-4) columns and 125 (-24) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 602.91069
Clp0000I Optimal - objective value 602.91069
Coin0511I After Postsolve, objective 602.91069, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 602.91069
Clp0000I Optimal - objective value 602.91069
Clp0000I Optimal - objective value 602.91069
Coin0511I After Postsolve, objective 602.91069, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 602.9106938 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 27 columns (26 integer (26 of which binary)) and 149 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.8683
Cbc0038I Pass   1: suminf.    0.39200 (1) obj. -477.484 iterations 17
Cbc0038I Solution found of -377.421
Cbc0038I Relaxing continuous gives -377.421
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 27 columns, reduced to 17 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -377.421 to -508.737 (0.01 seconds)
Cbc0038I Round again with cutoff of -517.252
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.74548 (3) obj. -517.252 iterations 2
Cbc0038I Pass   3: suminf.    0.05536 (3) obj. -517.252 iterations 5
Cbc0038I Pass   4: suminf.    0.05536 (3) obj. -517.252 iterations 0
Cbc0038I Pass   5: suminf.    0.30539 (3) obj. -517.252 iterations 3
Cbc0038I Pass   6: suminf.    0.27413 (2) obj. -517.252 iterations 1
Cbc0038I Pass   7: suminf.    0.48539 (2) obj. -546.918 iterations 2
Cbc0038I Pass   8: suminf.    0.28488 (2) obj. -517.252 iterations 1
Cbc0038I Pass   9: suminf.    0.05536 (3) obj. -517.252 iterations 2
Cbc0038I Pass  10: suminf.    0.05536 (3) obj. -517.252 iterations 0
Cbc0038I Pass  11: suminf.    0.78474 (3) obj. -517.252 iterations 3
Cbc0038I Pass  12: suminf.    0.56071 (2) obj. -517.252 iterations 1
Cbc0038I Pass  13: suminf.    0.28488 (2) obj. -517.252 iterations 2
Cbc0038I Pass  14: suminf.    0.24588 (4) obj. -517.252 iterations 6
Cbc0038I Pass  15: suminf.    0.16012 (2) obj. -517.252 iterations 5
Cbc0038I Pass  16: suminf.    0.28488 (2) obj. -517.252 iterations 3
Cbc0038I Pass  17: suminf.    0.45594 (2) obj. -517.252 iterations 7
Cbc0038I Pass  18: suminf.    0.45594 (2) obj. -517.252 iterations 2
Cbc0038I Pass  19: suminf.    0.05536 (3) obj. -517.252 iterations 4
Cbc0038I Pass  20: suminf.    0.05536 (3) obj. -517.252 iterations 0
Cbc0038I Pass  21: suminf.    0.78474 (3) obj. -517.252 iterations 3
Cbc0038I Pass  22: suminf.    0.56071 (2) obj. -517.252 iterations 1
Cbc0038I Pass  23: suminf.    0.28488 (2) obj. -517.252 iterations 2
Cbc0038I Pass  24: suminf.    1.44871 (5) obj. -517.252 iterations 6
Cbc0038I Pass  25: suminf.    1.44871 (5) obj. -517.252 iterations 1
Cbc0038I Pass  26: suminf.    0.58476 (4) obj. -517.252 iterations 3
Cbc0038I Pass  27: suminf.    0.29843 (1) obj. -517.252 iterations 3
Cbc0038I Pass  28: suminf.    0.38250 (1) obj. -535.828 iterations 1
Cbc0038I Pass  29: suminf.    0.55611 (5) obj. -517.252 iterations 3
Cbc0038I Pass  30: suminf.    0.55611 (5) obj. -517.252 iterations 0
Cbc0038I Pass  31: suminf.    1.11441 (6) obj. -517.252 iterations 3
Cbc0038I Rounding solution of -513 is better than previous of -508.737

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 27 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -513 to -539.052 (0.02 seconds)
Cbc0038I Round again with cutoff of -550.019
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.93998 (5) obj. -550.019 iterations 2
Cbc0038I Pass  32: suminf.    1.42562 (5) obj. -550.019 iterations 11
Cbc0038I Pass  33: suminf.    1.42562 (5) obj. -550.019 iterations 0
Cbc0038I Pass  34: suminf.    0.91580 (6) obj. -550.019 iterations 2
Cbc0038I Pass  35: suminf.    0.76955 (6) obj. -550.019 iterations 1
Cbc0038I Pass  36: suminf.    0.84601 (6) obj. -550.019 iterations 4
Cbc0038I Pass  37: suminf.    0.84601 (6) obj. -550.019 iterations 0
Cbc0038I Pass  38: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  39: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  40: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I Pass  41: suminf.    1.10754 (6) obj. -550.019 iterations 2
Cbc0038I Pass  42: suminf.    0.84601 (6) obj. -550.019 iterations 2
Cbc0038I Pass  43: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  44: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  45: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I Pass  46: suminf.    1.10754 (6) obj. -550.019 iterations 2
Cbc0038I Pass  47: suminf.    0.84601 (6) obj. -550.019 iterations 2
Cbc0038I Pass  48: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  49: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  50: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I Pass  51: suminf.    1.10754 (6) obj. -550.019 iterations 2
Cbc0038I Pass  52: suminf.    0.84601 (6) obj. -550.019 iterations 2
Cbc0038I Pass  53: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  54: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  55: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I Pass  56: suminf.    1.10754 (6) obj. -550.019 iterations 2
Cbc0038I Pass  57: suminf.    0.84601 (6) obj. -550.019 iterations 2
Cbc0038I Pass  58: suminf.    0.88170 (7) obj. -550.019 iterations 9
Cbc0038I Pass  59: suminf.    0.66973 (4) obj. -550.019 iterations 4
Cbc0038I Pass  60: suminf.    0.49191 (5) obj. -550.019 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 27 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -539.052 - took 0.03 seconds
Cbc0012I Integer solution of -539.05222 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 27 columns, reduced to 19 rows 15 columns
Cbc0031I 5 added rows had average density of 5
Cbc0013I At root node, 16 cuts changed objective from -593.88515 to -528.19035 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 38 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0001I Search completed - best objective -539.05222, took 47 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 55 (-12) columns and 505 (-219) elements
Clp1000I sum of infeasibilities 1.50903e-08 - average 2.79451e-10, 13 fixed columns
Coin0506I Presolve 43 (-11) rows, 42 (-13) columns and 283 (-222) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.8823619 - largest nonzero change 0 ( 0%) - largest zero change 2.3539002e-05
Clp0000I Optimal - objective value 744.74999
Clp0000I Optimal - objective value 744.74999
Coin0511I After Postsolve, objective 744.74999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.977799 - largest nonzero change 1.7085143e-05 ( 0.0017085143%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 744.74999
Clp0000I Optimal - objective value 744.74999
Clp0000I Optimal - objective value 744.74999
Coin0511I After Postsolve, objective 744.74999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 744.7499863 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 55 columns (55 integer (55 of which binary)) and 507 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.502%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.72795
Cbc0038I Pass   1: suminf.    0.88419 (9) obj. -80.7042 iterations 11
Cbc0038I Pass   2: suminf.    0.88419 (9) obj. -80.7042 iterations 1
Cbc0038I Solution found of -47.5792
Cbc0038I Rounding solution of -85.4739 is better than previous of -47.5792

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 55 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -85.4739 to -539.052 (0.01 seconds)
Cbc0038I Round again with cutoff of -548.044
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.91461 (20) obj. -548.044 iterations 3
Cbc0038I Pass   4: suminf.    0.75002 (12) obj. -548.044 iterations 21
Cbc0038I Pass   5: suminf.    0.75002 (12) obj. -548.044 iterations 0
Cbc0038I Pass   6: suminf.    1.01243 (4) obj. -548.044 iterations 12
Cbc0038I Pass   7: suminf.    1.01243 (4) obj. -548.044 iterations 0
Cbc0038I Pass   8: suminf.    1.23412 (4) obj. -548.044 iterations 1
Cbc0038I Pass   9: suminf.    1.09587 (5) obj. -548.044 iterations 2
Cbc0038I Pass  10: suminf.    0.63969 (5) obj. -548.044 iterations 1
Cbc0038I Pass  11: suminf.    0.55271 (5) obj. -548.044 iterations 1
Cbc0038I Pass  12: suminf.    1.60025 (6) obj. -548.044 iterations 3
Cbc0038I Pass  13: suminf.    1.60025 (6) obj. -548.044 iterations 0
Cbc0038I Pass  14: suminf.    0.63969 (5) obj. -548.044 iterations 6
Cbc0038I Pass  15: suminf.    1.18525 (8) obj. -548.044 iterations 10
Cbc0038I Pass  16: suminf.    1.17234 (9) obj. -548.044 iterations 4
Cbc0038I Pass  17: suminf.    0.63969 (5) obj. -548.044 iterations 14
Cbc0038I Pass  18: suminf.    0.55271 (5) obj. -548.044 iterations 1
Cbc0038I Pass  19: suminf.    1.60025 (6) obj. -548.044 iterations 3
Cbc0038I Pass  20: suminf.    1.60025 (6) obj. -548.044 iterations 0
Cbc0038I Pass  21: suminf.    0.63969 (5) obj. -548.044 iterations 6
Cbc0038I Pass  22: suminf.    1.35260 (7) obj. -548.044 iterations 10
Cbc0038I Pass  23: suminf.    1.35142 (7) obj. -548.044 iterations 2
Cbc0038I Pass  24: suminf.    0.96949 (6) obj. -548.044 iterations 6
Cbc0038I Pass  25: suminf.    0.96949 (6) obj. -548.044 iterations 1
Cbc0038I Pass  26: suminf.    1.56322 (6) obj. -548.044 iterations 1
Cbc0038I Pass  27: suminf.    1.13981 (6) obj. -548.044 iterations 2
Cbc0038I Pass  28: suminf.    2.98466 (14) obj. -548.044 iterations 10
Cbc0038I Pass  29: suminf.    2.44820 (11) obj. -548.044 iterations 5
Cbc0038I Pass  30: suminf.    1.18476 (5) obj. -548.044 iterations 9
Cbc0038I Pass  31: suminf.    0.96949 (6) obj. -548.044 iterations 1
Cbc0038I Pass  32: suminf.    1.56322 (6) obj. -548.044 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 55 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -539.052 - took 0.02 seconds
Cbc0012I Integer solution of -539.05222 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 54 rows 55 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 12 added rows had average density of 5.9166667
Cbc0013I At root node, 12 cuts changed objective from -587.46626 to -546.08951 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 4.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 30 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -539.05222, took 68 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

