Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 71 (-28) rows, 38 (-12) columns and 177 (-108) elements
Clp0000I Optimal - objective value 4086.099
Coin0511I After Postsolve, objective 4086.099, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4086.098996 - 35 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 71 rows, 38 columns (37 integer (37 of which binary)) and 177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.392%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3490.42 iterations 18
Cbc0038I Solution found of -3490.42
Cbc0038I Relaxing continuous gives -3490.42
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 38 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3490.42 to -3766.23 (0.01 seconds)
Cbc0038I Round again with cutoff of -3798.22
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.51556 (4) obj. -3798.22 iterations 3
Cbc0038I Pass   3: suminf.    0.51556 (4) obj. -3798.22 iterations 0
Cbc0038I Pass   4: suminf.    0.92106 (5) obj. -3798.22 iterations 10
Cbc0038I Pass   5: suminf.    0.82136 (5) obj. -3798.22 iterations 1
Cbc0038I Pass   6: suminf.    0.95131 (5) obj. -3798.22 iterations 2
Cbc0038I Pass   7: suminf.    0.77538 (5) obj. -3798.22 iterations 1
Cbc0038I Pass   8: suminf.    1.01037 (5) obj. -3798.22 iterations 2
Cbc0038I Pass   9: suminf.    0.83953 (5) obj. -3798.22 iterations 1
Cbc0038I Pass  10: suminf.    0.95131 (5) obj. -3798.22 iterations 2
Cbc0038I Pass  11: suminf.    1.17865 (7) obj. -3798.22 iterations 7
Cbc0038I Pass  12: suminf.    1.17865 (7) obj. -3798.22 iterations 1
Cbc0038I Pass  13: suminf.    2.34857 (11) obj. -3798.22 iterations 10
Cbc0038I Pass  14: suminf.    1.00000 (9) obj. -3798.22 iterations 6
Cbc0038I Pass  15: suminf.    1.00000 (9) obj. -3798.22 iterations 0
Cbc0038I Pass  16: suminf.    0.95096 (7) obj. -3798.22 iterations 4
Cbc0038I Pass  17: suminf.    0.00925 (1) obj. -3798.22 iterations 9
Cbc0038I Pass  18: suminf.    0.11107 (2) obj. -3798.22 iterations 2
Cbc0038I Pass  19: suminf.    0.78148 (5) obj. -3798.22 iterations 4
Cbc0038I Pass  20: suminf.    1.12488 (10) obj. -3798.22 iterations 15
Cbc0038I Pass  21: suminf.    1.00000 (7) obj. -3798.22 iterations 5
Cbc0038I Pass  22: suminf.    2.96301 (12) obj. -3798.22 iterations 13
Cbc0038I Pass  23: suminf.    0.51556 (4) obj. -3798.22 iterations 13
Cbc0038I Pass  24: suminf.    0.51556 (4) obj. -3798.22 iterations 0
Cbc0038I Pass  25: suminf.    0.92106 (5) obj. -3798.22 iterations 10
Cbc0038I Pass  26: suminf.    0.82136 (5) obj. -3798.22 iterations 1
Cbc0038I Pass  27: suminf.    0.95131 (5) obj. -3798.22 iterations 2
Cbc0038I Pass  28: suminf.    0.77538 (5) obj. -3798.22 iterations 1
Cbc0038I Pass  29: suminf.    1.01037 (5) obj. -3798.22 iterations 2
Cbc0038I Pass  30: suminf.    0.83953 (5) obj. -3798.22 iterations 1
Cbc0038I Pass  31: suminf.    0.95131 (5) obj. -3798.22 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 38 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3766.23 - took 0.02 seconds
Cbc0012I Integer solution of -3766.2283 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 71 rows 38 columns, reduced to 8 rows 9 columns
Cbc0031I 6 added rows had average density of 2.8333333
Cbc0013I At root node, 81 cuts changed objective from -4086.099 to -3766.2283 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3766.228300000001, took 6 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-22) rows, 79 (-17) columns and 912 (-501) elements
Clp1000I sum of infeasibilities 0 - average 0, 79 fixed columns
Coin0506I Presolve 0 (-76) rows, 0 (-79) columns and 0 (-912) elements
Clp0000I Optimal - objective value 3766.2283
Clp0000I Optimal - objective value 3766.2283
Coin0511I After Postsolve, objective 3766.2283, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9721411 - largest nonzero change 9.9568823e-05 ( 0.026070409%) - largest zero change 0
Clp0000I Optimal - objective value 7178.2425
Clp0000I Optimal - objective value 7178.2425
Clp0000I Optimal - objective value 7178.2425
Coin0511I After Postsolve, objective 7178.2425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7178.24253 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 82 columns (82 integer (82 of which binary)) and 964 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.874%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 15.8336
Cbc0038I Pass   1: suminf.    1.11831 (11) obj. 181.987 iterations 17
Cbc0038I Pass   2: suminf.    1.11831 (11) obj. 181.987 iterations 0
Cbc0038I Solution found of 1603.48
Cbc0038I Rounding solution of 1095.94 is better than previous of 1603.48

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 1095.94 to -3766.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -3981.86
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    8.32852 (36) obj. -3981.86 iterations 1
Cbc0038I Pass   4: suminf.    8.32852 (36) obj. -3981.86 iterations 0
Cbc0038I Pass   5: suminf.    4.43339 (16) obj. -3981.86 iterations 21
Cbc0038I Pass   6: suminf.    4.40260 (16) obj. -3981.86 iterations 1
Cbc0038I Pass   7: suminf.    1.32120 (5) obj. -3981.86 iterations 14
Cbc0038I Pass   8: suminf.    1.32120 (5) obj. -3981.86 iterations 0
Cbc0038I Pass   9: suminf.    0.30769 (1) obj. -4044.54 iterations 5
Cbc0038I Pass  10: suminf.    0.46360 (1) obj. -3981.86 iterations 1
Cbc0038I Pass  11: suminf.    3.88749 (13) obj. -3981.86 iterations 17
Cbc0038I Pass  12: suminf.    2.95035 (10) obj. -3981.86 iterations 6
Cbc0038I Pass  13: suminf.    4.88518 (16) obj. -3981.86 iterations 21
Cbc0038I Pass  14: suminf.    4.87147 (16) obj. -3981.86 iterations 4
Cbc0038I Pass  15: suminf.    0.80304 (2) obj. -3981.86 iterations 21
Cbc0038I Pass  16: suminf.    0.80304 (2) obj. -3981.86 iterations 2
Cbc0038I Pass  17: suminf.    0.75270 (2) obj. -3981.86 iterations 1
Cbc0038I Pass  18: suminf.    0.65144 (2) obj. -4022.57 iterations 9
Cbc0038I Pass  19: suminf.    0.80304 (2) obj. -3981.86 iterations 6
Cbc0038I Pass  20: suminf.    5.36555 (17) obj. -3981.86 iterations 26
Cbc0038I Pass  21: suminf.    5.11459 (16) obj. -3981.86 iterations 9
Cbc0038I Pass  22: suminf.    0.49731 (3) obj. -3981.86 iterations 19
Cbc0038I Pass  23: suminf.    0.30769 (1) obj. -4044.54 iterations 10
Cbc0038I Pass  24: suminf.    0.46360 (1) obj. -3981.86 iterations 5
Cbc0038I Pass  25: suminf.    3.14988 (10) obj. -3981.86 iterations 10
Cbc0038I Pass  26: suminf.    2.34343 (8) obj. -3981.86 iterations 5
Cbc0038I Pass  27: suminf.    4.19613 (14) obj. -3981.86 iterations 13
Cbc0038I Pass  28: suminf.    4.09413 (13) obj. -4078.7 iterations 5
Cbc0038I Pass  29: suminf.    0.39593 (2) obj. -3981.86 iterations 15
Cbc0038I Pass  30: suminf.    0.39593 (2) obj. -3981.86 iterations 0
Cbc0038I Pass  31: suminf.    0.67858 (2) obj. -3981.86 iterations 2
Cbc0038I Pass  32: suminf.    3.66395 (11) obj. -3981.86 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3766.23 - took 0.02 seconds
Cbc0012I Integer solution of -3766.2283 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 79 rows 82 columns, reduced to 0 rows 0 columns
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 269 cuts changed objective from -5922.5433 to -3766.2283 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 266 row cuts average 2.0 elements, 40 column cuts (40 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3766.228300000001, took 42 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 71 (-28) rows, 38 (-12) columns and 177 (-108) elements
Clp0000I Optimal - objective value 4086.099
Coin0511I After Postsolve, objective 4086.099, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4086.098996 - 35 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 71 rows, 38 columns (37 integer (37 of which binary)) and 177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.392%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3490.42 iterations 18
Cbc0038I Solution found of -3490.42
Cbc0038I Relaxing continuous gives -3490.42
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 38 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3490.42 to -3766.23 (0.01 seconds)
Cbc0038I Round again with cutoff of -3798.22
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.51556 (4) obj. -3798.22 iterations 3
Cbc0038I Pass   3: suminf.    0.51556 (4) obj. -3798.22 iterations 0
Cbc0038I Pass   4: suminf.    0.92106 (5) obj. -3798.22 iterations 10
Cbc0038I Pass   5: suminf.    0.82136 (5) obj. -3798.22 iterations 1
Cbc0038I Pass   6: suminf.    0.95131 (5) obj. -3798.22 iterations 2
Cbc0038I Pass   7: suminf.    0.77538 (5) obj. -3798.22 iterations 1
Cbc0038I Pass   8: suminf.    1.01037 (5) obj. -3798.22 iterations 2
Cbc0038I Pass   9: suminf.    0.83953 (5) obj. -3798.22 iterations 1
Cbc0038I Pass  10: suminf.    0.95131 (5) obj. -3798.22 iterations 2
Cbc0038I Pass  11: suminf.    1.17865 (7) obj. -3798.22 iterations 7
Cbc0038I Pass  12: suminf.    1.17865 (7) obj. -3798.22 iterations 1
Cbc0038I Pass  13: suminf.    2.34857 (11) obj. -3798.22 iterations 10
Cbc0038I Pass  14: suminf.    1.00000 (9) obj. -3798.22 iterations 6
Cbc0038I Pass  15: suminf.    1.00000 (9) obj. -3798.22 iterations 0
Cbc0038I Pass  16: suminf.    0.95096 (7) obj. -3798.22 iterations 4
Cbc0038I Pass  17: suminf.    0.00925 (1) obj. -3798.22 iterations 9
Cbc0038I Pass  18: suminf.    0.11107 (2) obj. -3798.22 iterations 2
Cbc0038I Pass  19: suminf.    0.78148 (5) obj. -3798.22 iterations 4
Cbc0038I Pass  20: suminf.    1.12488 (10) obj. -3798.22 iterations 15
Cbc0038I Pass  21: suminf.    1.00000 (7) obj. -3798.22 iterations 5
Cbc0038I Pass  22: suminf.    2.96301 (12) obj. -3798.22 iterations 13
Cbc0038I Pass  23: suminf.    0.51556 (4) obj. -3798.22 iterations 13
Cbc0038I Pass  24: suminf.    0.51556 (4) obj. -3798.22 iterations 0
Cbc0038I Pass  25: suminf.    0.92106 (5) obj. -3798.22 iterations 10
Cbc0038I Pass  26: suminf.    0.82136 (5) obj. -3798.22 iterations 1
Cbc0038I Pass  27: suminf.    0.95131 (5) obj. -3798.22 iterations 2
Cbc0038I Pass  28: suminf.    0.77538 (5) obj. -3798.22 iterations 1
Cbc0038I Pass  29: suminf.    1.01037 (5) obj. -3798.22 iterations 2
Cbc0038I Pass  30: suminf.    0.83953 (5) obj. -3798.22 iterations 1
Cbc0038I Pass  31: suminf.    0.95131 (5) obj. -3798.22 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 38 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3766.23 - took 0.02 seconds
Cbc0012I Integer solution of -3766.2283 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 71 rows 38 columns, reduced to 8 rows 9 columns
Cbc0031I 6 added rows had average density of 2.8333333
Cbc0013I At root node, 81 cuts changed objective from -4086.099 to -3766.2283 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3766.228300000001, took 6 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-23) rows, 79 (-18) columns and 912 (-502) elements
Clp1000I sum of infeasibilities 0 - average 0, 79 fixed columns
Coin0506I Presolve 0 (-76) rows, 0 (-79) columns and 0 (-912) elements
Clp0000I Optimal - objective value 3766.2283
Clp0000I Optimal - objective value 3766.2283
Coin0511I After Postsolve, objective 3766.2283, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9721411 - largest nonzero change 9.9568823e-05 ( 0.026070409%) - largest zero change 0
Clp0000I Optimal - objective value 7178.2425
Clp0000I Optimal - objective value 7178.2425
Clp0000I Optimal - objective value 7178.2425
Coin0511I After Postsolve, objective 7178.2425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7178.24253 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 82 columns (82 integer (82 of which binary)) and 964 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.874%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 15.8336
Cbc0038I Pass   1: suminf.    1.11831 (11) obj. 181.987 iterations 17
Cbc0038I Pass   2: suminf.    1.11831 (11) obj. 181.987 iterations 0
Cbc0038I Solution found of 1603.48
Cbc0038I Rounding solution of 1095.94 is better than previous of 1603.48

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 1095.94 to -3766.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -3981.86
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    8.32852 (36) obj. -3981.86 iterations 1
Cbc0038I Pass   4: suminf.    8.32852 (36) obj. -3981.86 iterations 0
Cbc0038I Pass   5: suminf.    4.43339 (16) obj. -3981.86 iterations 21
Cbc0038I Pass   6: suminf.    4.40260 (16) obj. -3981.86 iterations 1
Cbc0038I Pass   7: suminf.    1.32120 (5) obj. -3981.86 iterations 14
Cbc0038I Pass   8: suminf.    1.32120 (5) obj. -3981.86 iterations 0
Cbc0038I Pass   9: suminf.    0.30769 (1) obj. -4044.54 iterations 5
Cbc0038I Pass  10: suminf.    0.46360 (1) obj. -3981.86 iterations 1
Cbc0038I Pass  11: suminf.    3.88749 (13) obj. -3981.86 iterations 17
Cbc0038I Pass  12: suminf.    2.95035 (10) obj. -3981.86 iterations 6
Cbc0038I Pass  13: suminf.    4.88518 (16) obj. -3981.86 iterations 21
Cbc0038I Pass  14: suminf.    4.87147 (16) obj. -3981.86 iterations 4
Cbc0038I Pass  15: suminf.    0.80304 (2) obj. -3981.86 iterations 21
Cbc0038I Pass  16: suminf.    0.80304 (2) obj. -3981.86 iterations 2
Cbc0038I Pass  17: suminf.    0.75270 (2) obj. -3981.86 iterations 1
Cbc0038I Pass  18: suminf.    0.65144 (2) obj. -4022.57 iterations 9
Cbc0038I Pass  19: suminf.    0.80304 (2) obj. -3981.86 iterations 6
Cbc0038I Pass  20: suminf.    5.36555 (17) obj. -3981.86 iterations 26
Cbc0038I Pass  21: suminf.    5.11459 (16) obj. -3981.86 iterations 9
Cbc0038I Pass  22: suminf.    0.49731 (3) obj. -3981.86 iterations 19
Cbc0038I Pass  23: suminf.    0.30769 (1) obj. -4044.54 iterations 10
Cbc0038I Pass  24: suminf.    0.46360 (1) obj. -3981.86 iterations 5
Cbc0038I Pass  25: suminf.    3.14988 (10) obj. -3981.86 iterations 10
Cbc0038I Pass  26: suminf.    2.34343 (8) obj. -3981.86 iterations 5
Cbc0038I Pass  27: suminf.    4.19613 (14) obj. -3981.86 iterations 13
Cbc0038I Pass  28: suminf.    4.09413 (13) obj. -4078.7 iterations 5
Cbc0038I Pass  29: suminf.    0.39593 (2) obj. -3981.86 iterations 15
Cbc0038I Pass  30: suminf.    0.39593 (2) obj. -3981.86 iterations 0
Cbc0038I Pass  31: suminf.    0.67858 (2) obj. -3981.86 iterations 2
Cbc0038I Pass  32: suminf.    3.66395 (11) obj. -3981.86 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3766.23 - took 0.02 seconds
Cbc0012I Integer solution of -3766.2283 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 79 rows 82 columns, reduced to 0 rows 0 columns
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 269 cuts changed objective from -5922.5433 to -3766.2283 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 266 row cuts average 2.0 elements, 40 column cuts (40 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3766.228300000001, took 42 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

