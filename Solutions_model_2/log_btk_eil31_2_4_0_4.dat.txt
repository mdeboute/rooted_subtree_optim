Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-31) rows, 20 (-13) columns and 102 (-81) elements
Clp1000I sum of infeasibilities 4.80411e-06 - average 1.41297e-07, 10 fixed columns
Coin0506I Presolve 12 (-22) rows, 10 (-10) columns and 38 (-64) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 3469.2416
Clp0000I Optimal - objective value 3469.2416
Coin0511I After Postsolve, objective 3469.2416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3469.2416
Clp0000I Optimal - objective value 3469.2416
Clp0000I Optimal - objective value 3469.2416
Coin0511I After Postsolve, objective 3469.2416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3469.241642 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 20 columns (19 integer (19 of which binary)) and 111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.244%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.04672
Cbc0038I Pass   1: suminf.    0.61962 (2) obj. -2997.56 iterations 6
Cbc0038I Solution found of -2048.64
Cbc0038I Relaxing continuous gives -2048.64
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -2048.64 to -2367.08 (0.01 seconds)
Cbc0038I Round again with cutoff of -2440.83
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.61962 (2) obj. -2997.56 iterations 0
Cbc0038I Pass   3: suminf.    0.38250 (1) obj. -2440.83 iterations 5
Cbc0038I Pass   4: suminf.    0.47154 (1) obj. -2532.12 iterations 2
Cbc0038I Pass   5: suminf.    0.34144 (2) obj. -2440.83 iterations 4
Cbc0038I Pass   6: suminf.    0.34144 (2) obj. -2440.83 iterations 1
Cbc0038I Pass   7: suminf.    0.12195 (1) obj. -2569.48 iterations 2
Cbc0038I Pass   8: suminf.    0.24743 (1) obj. -2440.83 iterations 1
Cbc0038I Pass   9: suminf.    1.15489 (3) obj. -2440.83 iterations 5
Cbc0038I Pass  10: suminf.    0.71808 (3) obj. -2440.83 iterations 3
Cbc0038I Pass  11: suminf.    0.44083 (2) obj. -2440.83 iterations 6
Cbc0038I Pass  12: suminf.    0.55593 (2) obj. -2518.95 iterations 2
Cbc0038I Pass  13: suminf.    0.98289 (3) obj. -2440.83 iterations 9
Cbc0038I Pass  14: suminf.    0.58015 (3) obj. -2440.83 iterations 4
Cbc0038I Pass  15: suminf.    0.46295 (2) obj. -2940.73 iterations 5
Cbc0038I Pass  16: suminf.    0.03333 (1) obj. -2723.26 iterations 1
Cbc0038I Pass  17: suminf.    0.38250 (1) obj. -2440.83 iterations 3
Cbc0038I Pass  18: suminf.    0.47154 (1) obj. -2532.12 iterations 2
Cbc0038I Pass  19: suminf.    0.46295 (2) obj. -2940.73 iterations 2
Cbc0038I Pass  20: suminf.    1.62617 (4) obj. -2440.83 iterations 8
Cbc0038I Pass  21: suminf.    0.23092 (3) obj. -2440.83 iterations 5
Cbc0038I Pass  22: suminf.    0.08822 (2) obj. -2440.83 iterations 3
Cbc0038I Pass  23: suminf.    0.36842 (2) obj. -2440.83 iterations 2
Cbc0038I Pass  24: suminf.    0.03333 (1) obj. -2723.26 iterations 2
Cbc0038I Pass  25: suminf.    0.38250 (1) obj. -2440.83 iterations 3
Cbc0038I Pass  26: suminf.    0.47154 (1) obj. -2532.12 iterations 2
Cbc0038I Pass  27: suminf.    0.86567 (2) obj. -2638.49 iterations 1
Cbc0038I Pass  28: suminf.    0.66392 (4) obj. -2440.83 iterations 2
Cbc0038I Pass  29: suminf.    0.38567 (3) obj. -2440.83 iterations 4
Cbc0038I Pass  30: suminf.    0.38567 (3) obj. -2440.83 iterations 0
Cbc0038I Pass  31: suminf.    1.96544 (6) obj. -2440.83 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2367.08 to -2385.08 (0.02 seconds)
Cbc0038I Round again with cutoff of -2573.5
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.61962 (2) obj. -2997.56 iterations 0
Cbc0038I Pass  32: suminf.    0.53251 (2) obj. -2573.5 iterations 3
Cbc0038I Pass  33: suminf.    0.78977 (2) obj. -2748.1 iterations 1
Cbc0038I Pass  34: suminf.    0.66241 (3) obj. -2573.5 iterations 2
Cbc0038I Pass  35: suminf.    0.56977 (3) obj. -2573.5 iterations 4
Cbc0038I Pass  36: suminf.    0.66968 (2) obj. -2616.01 iterations 3
Cbc0038I Pass  37: suminf.    0.61984 (2) obj. -2573.5 iterations 1
Cbc0038I Pass  38: suminf.    0.67445 (2) obj. -2573.5 iterations 1
Cbc0038I Pass  39: suminf.    0.67445 (2) obj. -2573.5 iterations 0
Cbc0038I Pass  40: suminf.    0.66968 (2) obj. -2616.01 iterations 1
Cbc0038I Pass  41: suminf.    0.79960 (3) obj. -2573.5 iterations 9
Cbc0038I Pass  42: suminf.    0.79960 (3) obj. -2573.5 iterations 0
Cbc0038I Pass  43: suminf.    0.35432 (2) obj. -2647.74 iterations 3
Cbc0038I Pass  44: suminf.    0.22525 (2) obj. -2573.5 iterations 2
Cbc0038I Pass  45: suminf.    0.30668 (2) obj. -2628.77 iterations 1
Cbc0038I Pass  46: suminf.    0.47729 (5) obj. -2573.5 iterations 9
Cbc0038I Pass  47: suminf.    0.45002 (5) obj. -2573.5 iterations 1
Cbc0038I Pass  48: suminf.    0.14702 (3) obj. -2573.5 iterations 14
Cbc0038I Pass  49: suminf.    0.14702 (3) obj. -2573.5 iterations 1
Cbc0038I Pass  50: suminf.    0.49017 (2) obj. -2573.5 iterations 5
Cbc0038I Pass  51: suminf.    0.12893 (2) obj. -2573.5 iterations 1
Cbc0038I Pass  52: suminf.    0.61301 (4) obj. -2573.5 iterations 4
Cbc0038I Pass  53: suminf.    0.27607 (3) obj. -2573.5 iterations 2
Cbc0038I Pass  54: suminf.    0.43914 (2) obj. -2573.5 iterations 4
Cbc0038I Pass  55: suminf.    0.17778 (1) obj. -2610.27 iterations 10
Cbc0038I Pass  56: suminf.    0.32205 (2) obj. -2573.5 iterations 2
Cbc0038I Pass  57: suminf.    0.17778 (1) obj. -2610.27 iterations 2
Cbc0038I Pass  58: suminf.    1.36231 (4) obj. -2573.5 iterations 7
Cbc0038I Pass  59: suminf.    0.68915 (2) obj. -2650.06 iterations 7
Cbc0038I Pass  60: suminf.    0.57069 (2) obj. -2573.5 iterations 1
Cbc0038I Rounding solution of -2398.08 is better than previous of -2385.08

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2732.72
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.61962 (2) obj. -2997.56 iterations 0
Cbc0038I Pass  61: suminf.    0.76710 (2) obj. -2732.72 iterations 3
Cbc0038I Pass  62: suminf.    0.78977 (2) obj. -2748.1 iterations 1
Cbc0038I Pass  63: suminf.    0.84121 (3) obj. -2732.72 iterations 2
Cbc0038I Pass  64: suminf.    1.34716 (4) obj. -2732.72 iterations 5
Cbc0038I Pass  65: suminf.    0.11850 (3) obj. -2732.72 iterations 1
Cbc0038I Pass  66: suminf.    0.11850 (3) obj. -2732.72 iterations 0
Cbc0038I Pass  67: suminf.    0.77517 (2) obj. -2732.72 iterations 7
Cbc0038I Pass  68: suminf.    0.76710 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  69: suminf.    0.78977 (2) obj. -2748.1 iterations 1
Cbc0038I Pass  70: suminf.    0.40503 (2) obj. -2732.72 iterations 5
Cbc0038I Pass  71: suminf.    0.40503 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  72: suminf.    0.66864 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  73: suminf.    0.66864 (2) obj. -2732.72 iterations 0
Cbc0038I Pass  74: suminf.    0.66864 (2) obj. -2732.72 iterations 0
Cbc0038I Pass  75: suminf.    0.31762 (2) obj. -2732.72 iterations 7
Cbc0038I Pass  76: suminf.    0.31762 (2) obj. -2732.72 iterations 3
Cbc0038I Pass  77: suminf.    0.62683 (2) obj. -2732.72 iterations 2
Cbc0038I Pass  78: suminf.    0.51671 (4) obj. -2732.72 iterations 7
Cbc0038I Pass  79: suminf.    0.51671 (4) obj. -2732.72 iterations 1
Cbc0038I Pass  80: suminf.    0.89728 (3) obj. -2732.72 iterations 6
Cbc0038I Pass  81: suminf.    0.40341 (2) obj. -3057.15 iterations 2
Cbc0038I Pass  82: suminf.    0.40503 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  83: suminf.    0.40503 (2) obj. -2732.72 iterations 0
Cbc0038I Pass  84: suminf.    0.66864 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  85: suminf.    0.79165 (2) obj. -2732.72 iterations 2
Cbc0038I Pass  86: suminf.    0.62787 (2) obj. -2732.72 iterations 2
Cbc0038I Pass  87: suminf.    0.62787 (2) obj. -2732.72 iterations 0
Cbc0038I Pass  88: suminf.    0.79165 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  89: suminf.    1.90529 (5) obj. -2732.72 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2398.08 - took 0.04 seconds
Cbc0012I Integer solution of -2398.08 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 20 columns, reduced to 12 rows 9 columns
Cbc0031I 8 added rows had average density of 11.5
Cbc0013I At root node, 8 cuts changed objective from -3104.2068 to -2490.4609 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 237 row cuts average 2.7 elements, 5 column cuts (5 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 257 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 168 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.737 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2398.08 best solution, best possible -2490.4609 (1.41 seconds)
Cbc0001I Search completed - best objective -2398.08, took 1108 iterations and 8 nodes (1.43 seconds)
Cbc0032I Strong branching done 54 times (204 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-19) rows, 49 (-13) columns and 384 (-264) elements
Clp1000I sum of infeasibilities 3.0673e-09 - average 6.81622e-11, 21 fixed columns
Coin0506I Presolve 26 (-19) rows, 27 (-22) columns and 100 (-284) elements
Clp0006I 0  Obj 3481.554 Dual inf 145.31452 (26)
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 3496.4296
Clp0000I Optimal - objective value 3496.4296
Coin0511I After Postsolve, objective 3496.4296, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3496.4296 Dual inf 1418.543 (3)
Clp0014I Perturbing problem by 0.001% of 1.2200881 - largest nonzero change 2.398299e-05 ( 0.002398299%) - largest zero change 2.8304e-05
Clp0000I Optimal - objective value 3497.7629
Clp0000I Optimal - objective value 3497.7629
Clp0000I Optimal - objective value 3497.7629
Coin0511I After Postsolve, objective 3497.7629, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3497.762915 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 7 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.487%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.59642
Cbc0038I Pass   1: suminf.    1.30485 (8) obj. -1688.14 iterations 16
Cbc0038I Pass   2: suminf.    1.30485 (8) obj. -1688.14 iterations 0
Cbc0038I Solution found of -1678.2
Cbc0038I Rounding solution of -1688.2 is better than previous of -1678.2

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -1688.2 to -2379.08 (0.02 seconds)
Cbc0038I Round again with cutoff of -2453.07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.92857 (17) obj. -2453.07 iterations 1
Cbc0038I Pass   4: suminf.    2.92857 (17) obj. -2453.07 iterations 0
Cbc0038I Pass   5: suminf.    0.08387 (1) obj. -2453.07 iterations 20
Cbc0038I Pass   6: suminf.    0.12195 (1) obj. -2492.12 iterations 1
Cbc0038I Pass   7: suminf.    1.78769 (8) obj. -2453.07 iterations 10
Cbc0038I Pass   8: suminf.    0.82768 (5) obj. -2453.07 iterations 3
Cbc0038I Pass   9: suminf.    0.08518 (2) obj. -2453.07 iterations 5
Cbc0038I Pass  10: suminf.    0.08518 (2) obj. -2453.07 iterations 0
Cbc0038I Pass  11: suminf.    0.35252 (2) obj. -2634.52 iterations 2
Cbc0038I Pass  12: suminf.    2.21255 (9) obj. -2453.07 iterations 12
Cbc0038I Pass  13: suminf.    1.64234 (5) obj. -2453.07 iterations 2
Cbc0038I Pass  14: suminf.    1.04411 (4) obj. -2630.4 iterations 2
Cbc0038I Pass  15: suminf.    0.68404 (2) obj. -2453.07 iterations 4
Cbc0038I Pass  16: suminf.    0.23722 (2) obj. -2453.07 iterations 1
Cbc0038I Pass  17: suminf.    0.74303 (2) obj. -2453.07 iterations 2
Cbc0038I Pass  18: suminf.    0.92311 (2) obj. -2453.07 iterations 1
Cbc0038I Pass  19: suminf.    0.82968 (2) obj. -2625.05 iterations 1
Cbc0038I Pass  20: suminf.    0.68404 (2) obj. -2453.07 iterations 2
Cbc0038I Pass  21: suminf.    0.23722 (2) obj. -2453.07 iterations 1
Cbc0038I Pass  22: suminf.    0.74303 (2) obj. -2453.07 iterations 2
Cbc0038I Pass  23: suminf.    0.92311 (2) obj. -2453.07 iterations 1
Cbc0038I Pass  24: suminf.    0.82968 (2) obj. -2625.05 iterations 1
Cbc0038I Pass  25: suminf.    0.68404 (2) obj. -2453.07 iterations 2
Cbc0038I Pass  26: suminf.    0.23722 (2) obj. -2453.07 iterations 1
Cbc0038I Pass  27: suminf.    0.74303 (2) obj. -2453.07 iterations 2
Cbc0038I Pass  28: suminf.    0.92311 (2) obj. -2453.07 iterations 1
Cbc0038I Pass  29: suminf.    0.82968 (2) obj. -2625.05 iterations 1
Cbc0038I Pass  30: suminf.    0.68404 (2) obj. -2453.07 iterations 2
Cbc0038I Pass  31: suminf.    0.23722 (2) obj. -2453.07 iterations 1
Cbc0038I Pass  32: suminf.    0.74303 (2) obj. -2453.07 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -2379.08 to -2385.08 (0.03 seconds)
Cbc0038I Round again with cutoff of -2586.19
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.09271 (19) obj. -2586.19 iterations 1
Cbc0038I Pass  33: suminf.    3.09271 (19) obj. -2586.19 iterations 0
Cbc0038I Pass  34: suminf.    0.67397 (2) obj. -2703.11 iterations 27
Cbc0038I Pass  35: suminf.    0.59281 (2) obj. -2586.19 iterations 1
Cbc0038I Pass  36: suminf.    0.71430 (2) obj. -2586.19 iterations 1
Cbc0038I Pass  37: suminf.    0.60603 (2) obj. -2586.19 iterations 1
Cbc0038I Pass  38: suminf.    0.70230 (2) obj. -2680.29 iterations 2
Cbc0038I Pass  39: suminf.    1.26056 (6) obj. -2586.19 iterations 5
Cbc0038I Pass  40: suminf.    1.24529 (6) obj. -2586.19 iterations 1
Cbc0038I Pass  41: suminf.    0.67397 (2) obj. -2703.11 iterations 5
Cbc0038I Pass  42: suminf.    0.59281 (2) obj. -2586.19 iterations 1
Cbc0038I Pass  43: suminf.    0.71430 (2) obj. -2586.19 iterations 1
Cbc0038I Pass  44: suminf.    0.60603 (2) obj. -2586.19 iterations 1
Cbc0038I Pass  45: suminf.    0.70230 (2) obj. -2680.29 iterations 2
Cbc0038I Pass  46: suminf.    1.82085 (7) obj. -2586.19 iterations 9
Cbc0038I Pass  47: suminf.    1.32705 (3) obj. -2586.19 iterations 5
Cbc0038I Pass  48: suminf.    1.31246 (4) obj. -2586.19 iterations 2
Cbc0038I Pass  49: suminf.    1.34735 (3) obj. -2586.19 iterations 2
Cbc0038I Pass  50: suminf.    1.34735 (3) obj. -2586.19 iterations 0
Cbc0038I Pass  51: suminf.    1.32705 (3) obj. -2586.19 iterations 1
Cbc0038I Pass  52: suminf.    1.87992 (6) obj. -2586.19 iterations 12
Cbc0038I Pass  53: suminf.    1.87992 (6) obj. -2586.19 iterations 2
Cbc0038I Pass  54: suminf.    1.30126 (3) obj. -2586.19 iterations 4
Cbc0038I Pass  55: suminf.    1.28014 (4) obj. -2586.19 iterations 2
Cbc0038I Pass  56: suminf.    1.33655 (3) obj. -2586.19 iterations 2
Cbc0038I Pass  57: suminf.    1.33655 (3) obj. -2586.19 iterations 0
Cbc0038I Pass  58: suminf.    2.38784 (11) obj. -2586.19 iterations 12
Cbc0038I Pass  59: suminf.    2.38784 (11) obj. -2586.19 iterations 2
Cbc0038I Pass  60: suminf.    0.86271 (2) obj. -2586.19 iterations 10
Cbc0038I Pass  61: suminf.    0.82968 (2) obj. -2619.05 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2385.08 - took 0.02 seconds
Cbc0012I Integer solution of -2385.08 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 18 rows 19 columns
Cbc0031I 11 added rows had average density of 12.181818
Cbc0013I At root node, 11 cuts changed objective from -3118.6421 to -2443.8172 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 498 row cuts average 2.4 elements, 20 column cuts (20 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 205 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 75 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 147 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2385.08 best solution, best possible -2443.8055 (1.40 seconds)
Cbc0004I Integer solution of -2398.08 found after 1102 iterations and 2 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -2398.08, took 1181 iterations and 4 nodes (1.57 seconds)
Cbc0032I Strong branching done 44 times (266 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-31) rows, 20 (-13) columns and 102 (-81) elements
Clp1000I sum of infeasibilities 4.80411e-06 - average 1.41297e-07, 10 fixed columns
Coin0506I Presolve 12 (-22) rows, 10 (-10) columns and 38 (-64) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 3469.2416
Clp0000I Optimal - objective value 3469.2416
Coin0511I After Postsolve, objective 3469.2416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3469.2416
Clp0000I Optimal - objective value 3469.2416
Clp0000I Optimal - objective value 3469.2416
Coin0511I After Postsolve, objective 3469.2416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3469.241642 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 20 columns (19 integer (19 of which binary)) and 111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.244%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.04672
Cbc0038I Pass   1: suminf.    0.61962 (2) obj. -2997.56 iterations 6
Cbc0038I Solution found of -2048.64
Cbc0038I Relaxing continuous gives -2048.64
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -2048.64 to -2367.08 (0.01 seconds)
Cbc0038I Round again with cutoff of -2440.83
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.61962 (2) obj. -2997.56 iterations 0
Cbc0038I Pass   3: suminf.    0.38250 (1) obj. -2440.83 iterations 5
Cbc0038I Pass   4: suminf.    0.47154 (1) obj. -2532.12 iterations 2
Cbc0038I Pass   5: suminf.    0.34144 (2) obj. -2440.83 iterations 4
Cbc0038I Pass   6: suminf.    0.34144 (2) obj. -2440.83 iterations 1
Cbc0038I Pass   7: suminf.    0.12195 (1) obj. -2569.48 iterations 2
Cbc0038I Pass   8: suminf.    0.24743 (1) obj. -2440.83 iterations 1
Cbc0038I Pass   9: suminf.    1.15489 (3) obj. -2440.83 iterations 5
Cbc0038I Pass  10: suminf.    0.71808 (3) obj. -2440.83 iterations 3
Cbc0038I Pass  11: suminf.    0.44083 (2) obj. -2440.83 iterations 6
Cbc0038I Pass  12: suminf.    0.55593 (2) obj. -2518.95 iterations 2
Cbc0038I Pass  13: suminf.    0.98289 (3) obj. -2440.83 iterations 9
Cbc0038I Pass  14: suminf.    0.58015 (3) obj. -2440.83 iterations 4
Cbc0038I Pass  15: suminf.    0.46295 (2) obj. -2940.73 iterations 5
Cbc0038I Pass  16: suminf.    0.03333 (1) obj. -2723.26 iterations 1
Cbc0038I Pass  17: suminf.    0.38250 (1) obj. -2440.83 iterations 3
Cbc0038I Pass  18: suminf.    0.47154 (1) obj. -2532.12 iterations 2
Cbc0038I Pass  19: suminf.    0.46295 (2) obj. -2940.73 iterations 2
Cbc0038I Pass  20: suminf.    1.62617 (4) obj. -2440.83 iterations 8
Cbc0038I Pass  21: suminf.    0.23092 (3) obj. -2440.83 iterations 5
Cbc0038I Pass  22: suminf.    0.08822 (2) obj. -2440.83 iterations 3
Cbc0038I Pass  23: suminf.    0.36842 (2) obj. -2440.83 iterations 2
Cbc0038I Pass  24: suminf.    0.03333 (1) obj. -2723.26 iterations 2
Cbc0038I Pass  25: suminf.    0.38250 (1) obj. -2440.83 iterations 3
Cbc0038I Pass  26: suminf.    0.47154 (1) obj. -2532.12 iterations 2
Cbc0038I Pass  27: suminf.    0.86567 (2) obj. -2638.49 iterations 1
Cbc0038I Pass  28: suminf.    0.66392 (4) obj. -2440.83 iterations 2
Cbc0038I Pass  29: suminf.    0.38567 (3) obj. -2440.83 iterations 4
Cbc0038I Pass  30: suminf.    0.38567 (3) obj. -2440.83 iterations 0
Cbc0038I Pass  31: suminf.    1.96544 (6) obj. -2440.83 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2367.08 to -2385.08 (0.02 seconds)
Cbc0038I Round again with cutoff of -2573.5
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.61962 (2) obj. -2997.56 iterations 0
Cbc0038I Pass  32: suminf.    0.53251 (2) obj. -2573.5 iterations 3
Cbc0038I Pass  33: suminf.    0.78977 (2) obj. -2748.1 iterations 1
Cbc0038I Pass  34: suminf.    0.66241 (3) obj. -2573.5 iterations 2
Cbc0038I Pass  35: suminf.    0.56977 (3) obj. -2573.5 iterations 4
Cbc0038I Pass  36: suminf.    0.66968 (2) obj. -2616.01 iterations 3
Cbc0038I Pass  37: suminf.    0.61984 (2) obj. -2573.5 iterations 1
Cbc0038I Pass  38: suminf.    0.67445 (2) obj. -2573.5 iterations 1
Cbc0038I Pass  39: suminf.    0.67445 (2) obj. -2573.5 iterations 0
Cbc0038I Pass  40: suminf.    0.66968 (2) obj. -2616.01 iterations 1
Cbc0038I Pass  41: suminf.    0.79960 (3) obj. -2573.5 iterations 9
Cbc0038I Pass  42: suminf.    0.79960 (3) obj. -2573.5 iterations 0
Cbc0038I Pass  43: suminf.    0.35432 (2) obj. -2647.74 iterations 3
Cbc0038I Pass  44: suminf.    0.22525 (2) obj. -2573.5 iterations 2
Cbc0038I Pass  45: suminf.    0.30668 (2) obj. -2628.77 iterations 1
Cbc0038I Pass  46: suminf.    0.47729 (5) obj. -2573.5 iterations 9
Cbc0038I Pass  47: suminf.    0.45002 (5) obj. -2573.5 iterations 1
Cbc0038I Pass  48: suminf.    0.14702 (3) obj. -2573.5 iterations 14
Cbc0038I Pass  49: suminf.    0.14702 (3) obj. -2573.5 iterations 1
Cbc0038I Pass  50: suminf.    0.49017 (2) obj. -2573.5 iterations 5
Cbc0038I Pass  51: suminf.    0.12893 (2) obj. -2573.5 iterations 1
Cbc0038I Pass  52: suminf.    0.61301 (4) obj. -2573.5 iterations 4
Cbc0038I Pass  53: suminf.    0.27607 (3) obj. -2573.5 iterations 2
Cbc0038I Pass  54: suminf.    0.43914 (2) obj. -2573.5 iterations 4
Cbc0038I Pass  55: suminf.    0.17778 (1) obj. -2610.27 iterations 10
Cbc0038I Pass  56: suminf.    0.32205 (2) obj. -2573.5 iterations 2
Cbc0038I Pass  57: suminf.    0.17778 (1) obj. -2610.27 iterations 2
Cbc0038I Pass  58: suminf.    1.36231 (4) obj. -2573.5 iterations 7
Cbc0038I Pass  59: suminf.    0.68915 (2) obj. -2650.06 iterations 7
Cbc0038I Pass  60: suminf.    0.57069 (2) obj. -2573.5 iterations 1
Cbc0038I Rounding solution of -2398.08 is better than previous of -2385.08

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2732.72
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.61962 (2) obj. -2997.56 iterations 0
Cbc0038I Pass  61: suminf.    0.76710 (2) obj. -2732.72 iterations 3
Cbc0038I Pass  62: suminf.    0.78977 (2) obj. -2748.1 iterations 1
Cbc0038I Pass  63: suminf.    0.84121 (3) obj. -2732.72 iterations 2
Cbc0038I Pass  64: suminf.    1.34716 (4) obj. -2732.72 iterations 5
Cbc0038I Pass  65: suminf.    0.11850 (3) obj. -2732.72 iterations 1
Cbc0038I Pass  66: suminf.    0.11850 (3) obj. -2732.72 iterations 0
Cbc0038I Pass  67: suminf.    0.77517 (2) obj. -2732.72 iterations 7
Cbc0038I Pass  68: suminf.    0.76710 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  69: suminf.    0.78977 (2) obj. -2748.1 iterations 1
Cbc0038I Pass  70: suminf.    0.40503 (2) obj. -2732.72 iterations 5
Cbc0038I Pass  71: suminf.    0.40503 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  72: suminf.    0.66864 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  73: suminf.    0.66864 (2) obj. -2732.72 iterations 0
Cbc0038I Pass  74: suminf.    0.66864 (2) obj. -2732.72 iterations 0
Cbc0038I Pass  75: suminf.    0.31762 (2) obj. -2732.72 iterations 7
Cbc0038I Pass  76: suminf.    0.31762 (2) obj. -2732.72 iterations 3
Cbc0038I Pass  77: suminf.    0.62683 (2) obj. -2732.72 iterations 2
Cbc0038I Pass  78: suminf.    0.51671 (4) obj. -2732.72 iterations 7
Cbc0038I Pass  79: suminf.    0.51671 (4) obj. -2732.72 iterations 1
Cbc0038I Pass  80: suminf.    0.89728 (3) obj. -2732.72 iterations 6
Cbc0038I Pass  81: suminf.    0.40341 (2) obj. -3057.15 iterations 2
Cbc0038I Pass  82: suminf.    0.40503 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  83: suminf.    0.40503 (2) obj. -2732.72 iterations 0
Cbc0038I Pass  84: suminf.    0.66864 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  85: suminf.    0.79165 (2) obj. -2732.72 iterations 2
Cbc0038I Pass  86: suminf.    0.62787 (2) obj. -2732.72 iterations 2
Cbc0038I Pass  87: suminf.    0.62787 (2) obj. -2732.72 iterations 0
Cbc0038I Pass  88: suminf.    0.79165 (2) obj. -2732.72 iterations 1
Cbc0038I Pass  89: suminf.    1.90529 (5) obj. -2732.72 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2398.08 - took 0.02 seconds
Cbc0012I Integer solution of -2398.08 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 20 columns, reduced to 12 rows 9 columns
Cbc0031I 8 added rows had average density of 11.5
Cbc0013I At root node, 8 cuts changed objective from -3104.2068 to -2490.4609 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 237 row cuts average 2.7 elements, 5 column cuts (5 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 257 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 168 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.737 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2398.08 best solution, best possible -2490.4609 (1.37 seconds)
Cbc0001I Search completed - best objective -2398.08, took 1108 iterations and 8 nodes (1.39 seconds)
Cbc0032I Strong branching done 54 times (204 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       1.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 42 (-21) columns and 285 (-364) elements
Clp1000I sum of infeasibilities 6.02595e-09 - average 1.58578e-10, 14 fixed columns
Coin0506I Presolve 26 (-12) rows, 27 (-15) columns and 100 (-185) elements
Clp0006I 0  Obj 3476.5537 Dual inf 145.31452 (26)
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 3496.4296
Clp0000I Optimal - objective value 3496.4296
Coin0511I After Postsolve, objective 3496.4296, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3496.4296 Dual inf 1436.2667 (3)
Clp0014I Perturbing problem by 0.001% of 1.2145176 - largest nonzero change 2.843899e-05 ( 0.002843899%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 3497.7629
Clp0000I Optimal - objective value 3497.7629
Clp0000I Optimal - objective value 3497.7629
Coin0511I After Postsolve, objective 3497.7629, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3497.762915 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.571%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 9.40831
Cbc0038I Pass   1: suminf.    0.36111 (2) obj. -1677.84 iterations 21
Cbc0038I Pass   2: suminf.    0.36111 (2) obj. -1677.84 iterations 0
Cbc0038I Solution found of -1676.2
Cbc0038I Rounding solution of -1688.2 is better than previous of -1676.2

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -1688.2 to -2379.08 (0.02 seconds)
Cbc0038I Round again with cutoff of -2452.88
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.82785 (9) obj. -2452.88 iterations 1
Cbc0038I Pass   4: suminf.    1.48235 (9) obj. -2452.88 iterations 2
Cbc0038I Pass   5: suminf.    0.12195 (1) obj. -2492.12 iterations 9
Cbc0038I Pass   6: suminf.    0.08368 (1) obj. -2452.88 iterations 1
Cbc0038I Pass   7: suminf.    1.96561 (8) obj. -2452.88 iterations 10
Cbc0038I Pass   8: suminf.    1.05824 (5) obj. -2452.88 iterations 3
Cbc0038I Pass   9: suminf.    0.08490 (2) obj. -2452.88 iterations 5
Cbc0038I Pass  10: suminf.    0.08490 (2) obj. -2452.88 iterations 0
Cbc0038I Pass  11: suminf.    0.35252 (2) obj. -2634.52 iterations 2
Cbc0038I Pass  12: suminf.    2.38828 (9) obj. -2452.88 iterations 11
Cbc0038I Pass  13: suminf.    2.38828 (9) obj. -2452.88 iterations 1
Cbc0038I Pass  14: suminf.    0.18699 (1) obj. -2516.79 iterations 9
Cbc0038I Pass  15: suminf.    0.18699 (1) obj. -2516.79 iterations 0
Cbc0038I Pass  16: suminf.    0.24933 (1) obj. -2452.88 iterations 1
Cbc0038I Pass  17: suminf.    0.95720 (4) obj. -2452.88 iterations 4
Cbc0038I Pass  18: suminf.    0.92033 (3) obj. -2518.06 iterations 2
Cbc0038I Pass  19: suminf.    1.65207 (7) obj. -2518.19 iterations 8
Cbc0038I Pass  20: suminf.    1.65207 (7) obj. -2518.19 iterations 2
Cbc0038I Pass  21: suminf.    0.24543 (1) obj. -2452.88 iterations 7
Cbc0038I Pass  22: suminf.    0.18699 (1) obj. -2512.79 iterations 1
Cbc0038I Pass  23: suminf.    2.56349 (7) obj. -2452.88 iterations 8
Cbc0038I Pass  24: suminf.    0.24348 (1) obj. -2452.88 iterations 6
Cbc0038I Pass  25: suminf.    0.18699 (1) obj. -2510.79 iterations 1
Cbc0038I Pass  26: suminf.    3.81663 (13) obj. -2452.88 iterations 14
Cbc0038I Pass  27: suminf.    1.34198 (6) obj. -2452.88 iterations 6
Cbc0038I Pass  28: suminf.    1.07230 (9) obj. -2452.88 iterations 6
Cbc0038I Pass  29: suminf.    0.33538 (2) obj. -2935.78 iterations 14
Cbc0038I Pass  30: suminf.    0.23333 (1) obj. -2884.12 iterations 1
Cbc0038I Pass  31: suminf.    0.10124 (1) obj. -2452.88 iterations 2
Cbc0038I Pass  32: suminf.    0.37398 (1) obj. -2732.53 iterations 1
Cbc0038I Rounding solution of -2385.08 is better than previous of -2379.08

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -2585.65
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.43762 (9) obj. -2585.65 iterations 0
Cbc0038I Pass  33: suminf.    2.43762 (9) obj. -2585.65 iterations 0
Cbc0038I Pass  34: suminf.    0.25976 (2) obj. -2585.65 iterations 11
Cbc0038I Pass  35: suminf.    0.53424 (2) obj. -2831.01 iterations 2
Cbc0038I Pass  36: suminf.    0.45000 (1) obj. -2755.86 iterations 1
Cbc0038I Pass  37: suminf.    0.97493 (5) obj. -2585.65 iterations 8
Cbc0038I Pass  38: suminf.    0.95228 (5) obj. -2585.65 iterations 1
Cbc0038I Pass  39: suminf.    0.54333 (3) obj. -2585.65 iterations 6
Cbc0038I Pass  40: suminf.    0.52022 (3) obj. -2585.65 iterations 1
Cbc0038I Pass  41: suminf.    0.52007 (3) obj. -2585.65 iterations 3
Cbc0038I Pass  42: suminf.    0.33317 (3) obj. -2585.65 iterations 1
Cbc0038I Pass  43: suminf.    0.50378 (2) obj. -2585.65 iterations 3
Cbc0038I Pass  44: suminf.    0.14999 (2) obj. -2585.65 iterations 1
Cbc0038I Pass  45: suminf.    0.43623 (3) obj. -2585.65 iterations 3
Cbc0038I Pass  46: suminf.    0.43623 (3) obj. -2585.65 iterations 2
Cbc0038I Pass  47: suminf.    2.72086 (8) obj. -2585.65 iterations 10
Cbc0038I Pass  48: suminf.    1.85636 (7) obj. -2585.65 iterations 5
Cbc0038I Pass  49: suminf.    0.65060 (3) obj. -2585.65 iterations 5
Cbc0038I Pass  50: suminf.    0.52086 (3) obj. -2585.65 iterations 2
Cbc0038I Pass  51: suminf.    2.02407 (6) obj. -2605.34 iterations 9
Cbc0038I Pass  52: suminf.    1.50375 (5) obj. -2585.65 iterations 4
Cbc0038I Pass  53: suminf.    0.80952 (3) obj. -2643.4 iterations 4
Cbc0038I Pass  54: suminf.    0.64394 (4) obj. -2585.65 iterations 5
Cbc0038I Pass  55: suminf.    0.39750 (3) obj. -2585.65 iterations 2
Cbc0038I Pass  56: suminf.    0.39750 (3) obj. -2585.65 iterations 0
Cbc0038I Pass  57: suminf.    0.54162 (3) obj. -2585.65 iterations 4
Cbc0038I Pass  58: suminf.    0.51617 (3) obj. -2585.65 iterations 1
Cbc0038I Pass  59: suminf.    0.51105 (3) obj. -2585.65 iterations 3
Cbc0038I Pass  60: suminf.    0.38218 (4) obj. -2585.65 iterations 1
Cbc0038I Pass  61: suminf.    0.50378 (2) obj. -2585.65 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2385.08 - took 0.03 seconds
Cbc0012I Integer solution of -2385.08 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 18 rows 19 columns
Cbc0031I 8 added rows had average density of 12.5
Cbc0013I At root node, 8 cuts changed objective from -3116.7161 to -2413.3768 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 466 row cuts average 2.4 elements, 19 column cuts (19 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 268 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 93 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.834 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2385.08 best solution, best possible -2413.3734 (1.63 seconds)
Cbc0012I Integer solution of -2398.08 found by DiveCoefficient after 1137 iterations and 4 nodes (1.70 seconds)
Cbc0001I Search completed - best objective -2398.08, took 1141 iterations and 4 nodes (1.70 seconds)
Cbc0032I Strong branching done 44 times (245 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 8 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.71

