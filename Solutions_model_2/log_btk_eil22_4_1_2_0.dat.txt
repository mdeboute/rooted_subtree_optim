Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 9.76777e-06 - average 2.79079e-07, 2 fixed columns
Coin0506I Presolve 31 (-4) rows, 20 (-2) columns and 94 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Coin0511I After Postsolve, objective 70.494879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Coin0511I After Postsolve, objective 70.494879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.49487929 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.636%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.09837
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.4237 iterations 19
Cbc0038I Solution found of -0.4237
Cbc0038I Relaxing continuous gives -0.4237
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -0.4237 to -26.4974 (0.02 seconds)
Cbc0038I Round again with cutoff of -30.7469
Cbc0038I Pass   2: suminf.    1.57417 (6) obj. -30.7469 iterations 6
Cbc0038I Pass   3: suminf.    1.54103 (4) obj. -30.7469 iterations 6
Cbc0038I Pass   4: suminf.    1.14905 (4) obj. -30.7469 iterations 1
Cbc0038I Pass   5: suminf.    1.06184 (5) obj. -30.7469 iterations 1
Cbc0038I Pass   6: suminf.    1.56269 (4) obj. -30.7469 iterations 6
Cbc0038I Pass   7: suminf.    0.90769 (3) obj. -30.7469 iterations 2
Cbc0038I Pass   8: suminf.    0.56016 (2) obj. -30.7469 iterations 3
Cbc0038I Pass   9: suminf.    0.47712 (2) obj. -30.7469 iterations 3
Cbc0038I Pass  10: suminf.    0.97421 (3) obj. -30.7469 iterations 5
Cbc0038I Pass  11: suminf.    0.66887 (5) obj. -30.7469 iterations 10
Cbc0038I Pass  12: suminf.    0.51332 (4) obj. -30.7469 iterations 3
Cbc0038I Pass  13: suminf.    0.62087 (4) obj. -30.7469 iterations 6
Cbc0038I Pass  14: suminf.    0.58988 (4) obj. -30.7469 iterations 1
Cbc0038I Pass  15: suminf.    1.20963 (4) obj. -30.7469 iterations 6
Cbc0038I Pass  16: suminf.    1.15231 (3) obj. -30.7469 iterations 1
Cbc0038I Pass  17: suminf.    0.47712 (2) obj. -30.7469 iterations 3
Cbc0038I Pass  18: suminf.    0.97421 (3) obj. -30.7469 iterations 5
Cbc0038I Pass  19: suminf.    0.56016 (2) obj. -30.7469 iterations 5
Cbc0038I Pass  20: suminf.    1.05785 (6) obj. -30.7469 iterations 6
Cbc0038I Pass  21: suminf.    0.88048 (3) obj. -30.7469 iterations 2
Cbc0038I Pass  22: suminf.    0.88048 (3) obj. -30.7469 iterations 0
Cbc0038I Pass  23: suminf.    0.52152 (6) obj. -30.7469 iterations 9
Cbc0038I Pass  24: suminf.    0.50327 (8) obj. -30.7469 iterations 2
Cbc0038I Pass  25: suminf.    1.24402 (12) obj. -30.7469 iterations 13
Cbc0038I Pass  26: suminf.    1.24402 (12) obj. -30.7469 iterations 1
Cbc0038I Pass  27: suminf.    0.66727 (4) obj. -30.7469 iterations 13
Cbc0038I Pass  28: suminf.    0.60915 (3) obj. -30.7469 iterations 2
Cbc0038I Pass  29: suminf.    0.30894 (3) obj. -30.7469 iterations 4
Cbc0038I Pass  30: suminf.    1.43936 (5) obj. -30.7469 iterations 8
Cbc0038I Pass  31: suminf.    0.92446 (4) obj. -30.7469 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.4974 - took 0.04 seconds
Cbc0012I Integer solution of -26.4974 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 13 added rows had average density of 15.384615
Cbc0013I At root node, 13 cuts changed objective from -68.991317 to -52.324603 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1991 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 894 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.49740000000001, took 3106 iterations and 14 nodes (0.21 seconds)
Cbc0032I Strong branching done 140 times (1152 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-14) rows, 39 (-5) columns and 281 (-79) elements
Clp1000I sum of infeasibilities 5.1006e-11 - average 1.59394e-12, 5 fixed columns
Coin0506I Presolve 28 (-4) rows, 34 (-5) columns and 213 (-68) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 4.1909439 - largest nonzero change 0 ( 0%) - largest zero change 1.8314621e-05
Clp0000I Optimal - objective value 78.244547
Clp0000I Optimal - objective value 78.244547
Coin0511I After Postsolve, objective 78.244547, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 78.244547
Clp0000I Optimal - objective value 78.244547
Clp0000I Optimal - objective value 78.244547
Coin0511I After Postsolve, objective 78.244547, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.24454713 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 39 columns (39 integer (39 of which binary)) and 286 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.212%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.32687
Cbc0038I Pass   1: suminf.    1.76820 (7) obj. -41.5875 iterations 10
Cbc0038I Pass   2: suminf.    1.76820 (7) obj. -41.5875 iterations 1
Cbc0038I Solution found of -15.8349
Cbc0038I Rounding solution of -21.4849 is better than previous of -15.8349

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 39 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -21.4849 to -23.2049 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.7793
Cbc0038I Pass   3: suminf.    1.76820 (7) obj. -41.5875 iterations 0
Cbc0038I Pass   4: suminf.    1.76820 (7) obj. -41.5875 iterations 1
Cbc0038I Pass   5: suminf.    0.48894 (1) obj. -26.7793 iterations 8
Cbc0038I Pass   6: suminf.    0.47619 (1) obj. -27.0523 iterations 1
Cbc0038I Pass   7: suminf.    0.89744 (4) obj. -42.4697 iterations 6
Cbc0038I Pass   8: suminf.    0.84982 (3) obj. -41.4499 iterations 1
Cbc0038I Pass   9: suminf.    0.06674 (2) obj. -26.7793 iterations 4
Cbc0038I Pass  10: suminf.    0.38095 (2) obj. -37.14 iterations 1
Cbc0038I Pass  11: suminf.    0.33333 (1) obj. -36.1203 iterations 1
Cbc0038I Pass  12: suminf.    1.05001 (5) obj. -26.7793 iterations 10
Cbc0038I Pass  13: suminf.    1.01589 (4) obj. -26.7793 iterations 3
Cbc0038I Pass  14: suminf.    0.87220 (2) obj. -26.7793 iterations 4
Cbc0038I Pass  15: suminf.    0.49924 (2) obj. -26.7793 iterations 1
Cbc0038I Pass  16: suminf.    2.73630 (10) obj. -26.7793 iterations 9
Cbc0038I Pass  17: suminf.    1.32249 (6) obj. -26.7793 iterations 4
Cbc0038I Pass  18: suminf.    0.53031 (5) obj. -26.7793 iterations 7
Cbc0038I Pass  19: suminf.    0.53031 (5) obj. -26.7793 iterations 0
Cbc0038I Pass  20: suminf.    0.71501 (2) obj. -26.7793 iterations 7
Cbc0038I Pass  21: suminf.    0.60016 (3) obj. -26.7793 iterations 1
Cbc0038I Pass  22: suminf.    0.88466 (5) obj. -26.7793 iterations 6
Cbc0038I Pass  23: suminf.    0.58565 (4) obj. -26.7793 iterations 2
Cbc0038I Pass  24: suminf.    0.97643 (5) obj. -26.7793 iterations 10
Cbc0038I Pass  25: suminf.    0.97643 (5) obj. -26.7793 iterations 0
Cbc0038I Pass  26: suminf.    0.79327 (4) obj. -26.7793 iterations 4
Cbc0038I Pass  27: suminf.    0.73829 (4) obj. -26.7793 iterations 1
Cbc0038I Pass  28: suminf.    0.46961 (3) obj. -26.7793 iterations 5
Cbc0038I Pass  29: suminf.    0.27778 (1) obj. -28.0029 iterations 2
Cbc0038I Pass  30: suminf.    0.35425 (1) obj. -26.7793 iterations 1
Cbc0038I Pass  31: suminf.    0.91411 (6) obj. -26.7793 iterations 7
Cbc0038I Pass  32: suminf.    0.86233 (3) obj. -26.7793 iterations 3
Cbc0038I Rounding solution of -26.4536 is better than previous of -23.2049

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 39 columns, reduced to 25 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.2131
Cbc0038I Pass  32: suminf.    1.76820 (7) obj. -41.5875 iterations 0
Cbc0038I Pass  33: suminf.    1.76820 (7) obj. -41.5875 iterations 1
Cbc0038I Pass  34: suminf.    0.86124 (2) obj. -33.2131 iterations 8
Cbc0038I Pass  35: suminf.    0.86124 (2) obj. -33.2131 iterations 0
Cbc0038I Pass  36: suminf.    0.54967 (2) obj. -33.2131 iterations 1
Cbc0038I Pass  37: suminf.    2.12534 (11) obj. -33.2131 iterations 15
Cbc0038I Pass  38: suminf.    0.93612 (5) obj. -33.2131 iterations 4
Cbc0038I Pass  39: suminf.    0.76795 (4) obj. -36.9865 iterations 1
Cbc0038I Pass  40: suminf.    0.34410 (3) obj. -33.2131 iterations 6
Cbc0038I Pass  41: suminf.    0.34410 (3) obj. -33.2131 iterations 1
Cbc0038I Pass  42: suminf.    0.73226 (2) obj. -33.2131 iterations 5
Cbc0038I Pass  43: suminf.    0.65079 (2) obj. -34.5165 iterations 1
Cbc0038I Pass  44: suminf.    0.73226 (2) obj. -33.2131 iterations 2
Cbc0038I Pass  45: suminf.    2.29555 (8) obj. -33.2131 iterations 16
Cbc0038I Pass  46: suminf.    2.29555 (8) obj. -33.2131 iterations 3
Cbc0038I Pass  47: suminf.    0.88143 (5) obj. -33.2131 iterations 10
Cbc0038I Pass  48: suminf.    0.40017 (6) obj. -33.2131 iterations 5
Cbc0038I Pass  49: suminf.    0.87106 (4) obj. -33.2131 iterations 5
Cbc0038I Pass  50: suminf.    0.87106 (4) obj. -33.2131 iterations 3
Cbc0038I Pass  51: suminf.    1.20429 (4) obj. -33.2131 iterations 4
Cbc0038I Pass  52: suminf.    0.66240 (4) obj. -33.2131 iterations 3
Cbc0038I Pass  53: suminf.    0.87106 (4) obj. -33.2131 iterations 4
Cbc0038I Pass  54: suminf.    1.27912 (7) obj. -33.2131 iterations 7
Cbc0038I Pass  55: suminf.    1.27024 (6) obj. -33.2131 iterations 3
Cbc0038I Pass  56: suminf.    1.61133 (4) obj. -33.2131 iterations 6
Cbc0038I Pass  57: suminf.    1.61133 (4) obj. -33.2131 iterations 0
Cbc0038I Pass  58: suminf.    1.25624 (4) obj. -33.2131 iterations 2
Cbc0038I Pass  59: suminf.    1.25624 (4) obj. -33.2131 iterations 0
Cbc0038I Pass  60: suminf.    1.31392 (4) obj. -33.2131 iterations 2
Cbc0038I Pass  61: suminf.    0.79620 (4) obj. -33.2131 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 39 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.4536 - took 0.02 seconds
Cbc0012I Integer solution of -26.4536 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 30 rows 39 columns, reduced to 5 rows 5 columns
Cbc0031I 16 added rows had average density of 16.1875
Cbc0013I At root node, 16 cuts changed objective from -58.948101 to -31.090154 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 798 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 627 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 80 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 59 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 211 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 89 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.4536 best solution, best possible -31.090154 (1.41 seconds)
Cbc0012I Integer solution of -26.4974 found by rounding after 1642 iterations and 12 nodes (1.96 seconds)
Cbc0001I Search completed - best objective -26.49740000000001, took 1756 iterations and 14 nodes (2.04 seconds)
Cbc0032I Strong branching done 152 times (1114 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       2.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 9.76777e-06 - average 2.79079e-07, 2 fixed columns
Coin0506I Presolve 31 (-4) rows, 20 (-2) columns and 94 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Coin0511I After Postsolve, objective 70.494879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Coin0511I After Postsolve, objective 70.494879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.49487929 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.636%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.09837
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.4237 iterations 19
Cbc0038I Solution found of -0.4237
Cbc0038I Relaxing continuous gives -0.4237
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -0.4237 to -26.4974 (0.02 seconds)
Cbc0038I Round again with cutoff of -30.7469
Cbc0038I Pass   2: suminf.    1.57417 (6) obj. -30.7469 iterations 6
Cbc0038I Pass   3: suminf.    1.54103 (4) obj. -30.7469 iterations 6
Cbc0038I Pass   4: suminf.    1.14905 (4) obj. -30.7469 iterations 1
Cbc0038I Pass   5: suminf.    1.06184 (5) obj. -30.7469 iterations 1
Cbc0038I Pass   6: suminf.    1.56269 (4) obj. -30.7469 iterations 6
Cbc0038I Pass   7: suminf.    0.90769 (3) obj. -30.7469 iterations 2
Cbc0038I Pass   8: suminf.    0.56016 (2) obj. -30.7469 iterations 3
Cbc0038I Pass   9: suminf.    0.47712 (2) obj. -30.7469 iterations 3
Cbc0038I Pass  10: suminf.    0.97421 (3) obj. -30.7469 iterations 5
Cbc0038I Pass  11: suminf.    0.66887 (5) obj. -30.7469 iterations 10
Cbc0038I Pass  12: suminf.    0.51332 (4) obj. -30.7469 iterations 3
Cbc0038I Pass  13: suminf.    0.62087 (4) obj. -30.7469 iterations 6
Cbc0038I Pass  14: suminf.    0.58988 (4) obj. -30.7469 iterations 1
Cbc0038I Pass  15: suminf.    1.20963 (4) obj. -30.7469 iterations 6
Cbc0038I Pass  16: suminf.    1.15231 (3) obj. -30.7469 iterations 1
Cbc0038I Pass  17: suminf.    0.47712 (2) obj. -30.7469 iterations 3
Cbc0038I Pass  18: suminf.    0.97421 (3) obj. -30.7469 iterations 5
Cbc0038I Pass  19: suminf.    0.56016 (2) obj. -30.7469 iterations 5
Cbc0038I Pass  20: suminf.    1.05785 (6) obj. -30.7469 iterations 6
Cbc0038I Pass  21: suminf.    0.88048 (3) obj. -30.7469 iterations 2
Cbc0038I Pass  22: suminf.    0.88048 (3) obj. -30.7469 iterations 0
Cbc0038I Pass  23: suminf.    0.52152 (6) obj. -30.7469 iterations 9
Cbc0038I Pass  24: suminf.    0.50327 (8) obj. -30.7469 iterations 2
Cbc0038I Pass  25: suminf.    1.24402 (12) obj. -30.7469 iterations 13
Cbc0038I Pass  26: suminf.    1.24402 (12) obj. -30.7469 iterations 1
Cbc0038I Pass  27: suminf.    0.66727 (4) obj. -30.7469 iterations 13
Cbc0038I Pass  28: suminf.    0.60915 (3) obj. -30.7469 iterations 2
Cbc0038I Pass  29: suminf.    0.30894 (3) obj. -30.7469 iterations 4
Cbc0038I Pass  30: suminf.    1.43936 (5) obj. -30.7469 iterations 8
Cbc0038I Pass  31: suminf.    0.92446 (4) obj. -30.7469 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.4974 - took 0.03 seconds
Cbc0012I Integer solution of -26.4974 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 13 added rows had average density of 15.384615
Cbc0013I At root node, 13 cuts changed objective from -68.991317 to -52.324603 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1991 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 894 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.49740000000001, took 3106 iterations and 14 nodes (0.22 seconds)
Cbc0032I Strong branching done 140 times (1152 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 39 (-6) columns and 281 (-80) elements
Clp1000I sum of infeasibilities 5.1006e-11 - average 1.59394e-12, 5 fixed columns
Coin0506I Presolve 28 (-4) rows, 34 (-5) columns and 213 (-68) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 4.1909439 - largest nonzero change 0 ( 0%) - largest zero change 1.8314621e-05
Clp0000I Optimal - objective value 78.244547
Clp0000I Optimal - objective value 78.244547
Coin0511I After Postsolve, objective 78.244547, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 78.244547
Clp0000I Optimal - objective value 78.244547
Clp0000I Optimal - objective value 78.244547
Coin0511I After Postsolve, objective 78.244547, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.24454713 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 39 columns (39 integer (39 of which binary)) and 286 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.212%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.32687
Cbc0038I Pass   1: suminf.    1.76820 (7) obj. -41.5875 iterations 10
Cbc0038I Pass   2: suminf.    1.76820 (7) obj. -41.5875 iterations 1
Cbc0038I Solution found of -15.8349
Cbc0038I Rounding solution of -21.4849 is better than previous of -15.8349

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 39 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -21.4849 to -23.2049 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.7793
Cbc0038I Pass   3: suminf.    1.76820 (7) obj. -41.5875 iterations 0
Cbc0038I Pass   4: suminf.    1.76820 (7) obj. -41.5875 iterations 1
Cbc0038I Pass   5: suminf.    0.48894 (1) obj. -26.7793 iterations 8
Cbc0038I Pass   6: suminf.    0.47619 (1) obj. -27.0523 iterations 1
Cbc0038I Pass   7: suminf.    0.89744 (4) obj. -42.4697 iterations 6
Cbc0038I Pass   8: suminf.    0.84982 (3) obj. -41.4499 iterations 1
Cbc0038I Pass   9: suminf.    0.06674 (2) obj. -26.7793 iterations 4
Cbc0038I Pass  10: suminf.    0.38095 (2) obj. -37.14 iterations 1
Cbc0038I Pass  11: suminf.    0.33333 (1) obj. -36.1203 iterations 1
Cbc0038I Pass  12: suminf.    1.05001 (5) obj. -26.7793 iterations 10
Cbc0038I Pass  13: suminf.    1.01589 (4) obj. -26.7793 iterations 3
Cbc0038I Pass  14: suminf.    0.87220 (2) obj. -26.7793 iterations 4
Cbc0038I Pass  15: suminf.    0.49924 (2) obj. -26.7793 iterations 1
Cbc0038I Pass  16: suminf.    2.73630 (10) obj. -26.7793 iterations 9
Cbc0038I Pass  17: suminf.    1.32249 (6) obj. -26.7793 iterations 4
Cbc0038I Pass  18: suminf.    0.53031 (5) obj. -26.7793 iterations 7
Cbc0038I Pass  19: suminf.    0.53031 (5) obj. -26.7793 iterations 0
Cbc0038I Pass  20: suminf.    0.71501 (2) obj. -26.7793 iterations 7
Cbc0038I Pass  21: suminf.    0.60016 (3) obj. -26.7793 iterations 1
Cbc0038I Pass  22: suminf.    0.88466 (5) obj. -26.7793 iterations 6
Cbc0038I Pass  23: suminf.    0.58565 (4) obj. -26.7793 iterations 2
Cbc0038I Pass  24: suminf.    0.97643 (5) obj. -26.7793 iterations 10
Cbc0038I Pass  25: suminf.    0.97643 (5) obj. -26.7793 iterations 0
Cbc0038I Pass  26: suminf.    0.79327 (4) obj. -26.7793 iterations 4
Cbc0038I Pass  27: suminf.    0.73829 (4) obj. -26.7793 iterations 1
Cbc0038I Pass  28: suminf.    0.46961 (3) obj. -26.7793 iterations 5
Cbc0038I Pass  29: suminf.    0.27778 (1) obj. -28.0029 iterations 2
Cbc0038I Pass  30: suminf.    0.35425 (1) obj. -26.7793 iterations 1
Cbc0038I Pass  31: suminf.    0.91411 (6) obj. -26.7793 iterations 7
Cbc0038I Pass  32: suminf.    0.86233 (3) obj. -26.7793 iterations 3
Cbc0038I Rounding solution of -26.4536 is better than previous of -23.2049

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 39 columns, reduced to 25 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.2131
Cbc0038I Pass  32: suminf.    1.76820 (7) obj. -41.5875 iterations 0
Cbc0038I Pass  33: suminf.    1.76820 (7) obj. -41.5875 iterations 1
Cbc0038I Pass  34: suminf.    0.86124 (2) obj. -33.2131 iterations 8
Cbc0038I Pass  35: suminf.    0.86124 (2) obj. -33.2131 iterations 0
Cbc0038I Pass  36: suminf.    0.54967 (2) obj. -33.2131 iterations 1
Cbc0038I Pass  37: suminf.    2.12534 (11) obj. -33.2131 iterations 15
Cbc0038I Pass  38: suminf.    0.93612 (5) obj. -33.2131 iterations 4
Cbc0038I Pass  39: suminf.    0.76795 (4) obj. -36.9865 iterations 1
Cbc0038I Pass  40: suminf.    0.34410 (3) obj. -33.2131 iterations 6
Cbc0038I Pass  41: suminf.    0.34410 (3) obj. -33.2131 iterations 1
Cbc0038I Pass  42: suminf.    0.73226 (2) obj. -33.2131 iterations 5
Cbc0038I Pass  43: suminf.    0.65079 (2) obj. -34.5165 iterations 1
Cbc0038I Pass  44: suminf.    0.73226 (2) obj. -33.2131 iterations 2
Cbc0038I Pass  45: suminf.    2.29555 (8) obj. -33.2131 iterations 16
Cbc0038I Pass  46: suminf.    2.29555 (8) obj. -33.2131 iterations 3
Cbc0038I Pass  47: suminf.    0.88143 (5) obj. -33.2131 iterations 10
Cbc0038I Pass  48: suminf.    0.40017 (6) obj. -33.2131 iterations 5
Cbc0038I Pass  49: suminf.    0.87106 (4) obj. -33.2131 iterations 5
Cbc0038I Pass  50: suminf.    0.87106 (4) obj. -33.2131 iterations 3
Cbc0038I Pass  51: suminf.    1.20429 (4) obj. -33.2131 iterations 4
Cbc0038I Pass  52: suminf.    0.66240 (4) obj. -33.2131 iterations 3
Cbc0038I Pass  53: suminf.    0.87106 (4) obj. -33.2131 iterations 4
Cbc0038I Pass  54: suminf.    1.27912 (7) obj. -33.2131 iterations 7
Cbc0038I Pass  55: suminf.    1.27024 (6) obj. -33.2131 iterations 3
Cbc0038I Pass  56: suminf.    1.61133 (4) obj. -33.2131 iterations 6
Cbc0038I Pass  57: suminf.    1.61133 (4) obj. -33.2131 iterations 0
Cbc0038I Pass  58: suminf.    1.25624 (4) obj. -33.2131 iterations 2
Cbc0038I Pass  59: suminf.    1.25624 (4) obj. -33.2131 iterations 0
Cbc0038I Pass  60: suminf.    1.31392 (4) obj. -33.2131 iterations 2
Cbc0038I Pass  61: suminf.    0.79620 (4) obj. -33.2131 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 39 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.4536 - took 0.02 seconds
Cbc0012I Integer solution of -26.4536 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 30 rows 39 columns, reduced to 5 rows 5 columns
Cbc0031I 16 added rows had average density of 16.1875
Cbc0013I At root node, 16 cuts changed objective from -58.948101 to -31.090154 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 798 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 627 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 80 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 59 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 211 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 89 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.794 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.4536 best solution, best possible -31.090154 (1.57 seconds)
Cbc0012I Integer solution of -26.4974 found by rounding after 1642 iterations and 12 nodes (2.18 seconds)
Cbc0010I After 13 nodes, 1 on tree, -26.4974 best solution, best possible -31.090154 (2.28 seconds)
Cbc0001I Search completed - best objective -26.49740000000001, took 1756 iterations and 14 nodes (2.28 seconds)
Cbc0032I Strong branching done 152 times (1114 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.42   (Wallclock seconds):       2.28

