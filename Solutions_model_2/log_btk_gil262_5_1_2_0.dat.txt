Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 510 (-17) rows, 261 (-3) columns and 1511 (-34) elements
Clp1000I sum of infeasibilities 9.83042e-05 - average 1.92753e-07, 167 fixed columns
Coin0506I Presolve 172 (-338) rows, 91 (-170) columns and 509 (-1002) elements
Clp0029I End of values pass after 91 iterations
Clp0000I Optimal - objective value 220.66126
Clp0000I Optimal - objective value 220.66126
Coin0511I After Postsolve, objective 220.66126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13416069 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 220.66126
Clp0000I Optimal - objective value 220.66126
Clp0000I Optimal - objective value 220.66126
Coin0511I After Postsolve, objective 220.66126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 220.6612621 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 510 rows, 261 columns (260 integer (260 of which binary)) and 1511 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.372%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 60 integers unsatisfied sum - 11.947
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.9574 iterations 167
Cbc0038I Solution found of -11.9574
Cbc0038I Relaxing continuous gives -11.9574
Cbc0038I Rounding solution of -119.729 is better than previous of -11.9574

Cbc0038I Before mini branch and bound, 200 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 112 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -119.729 to -140.835 (0.08 seconds)
Cbc0038I Round again with cutoff of -148.817
Cbc0038I Pass   2: suminf.    3.91273 (14) obj. -148.817 iterations 43
Cbc0038I Pass   3: suminf.    3.02002 (8) obj. -148.817 iterations 27
Cbc0038I Pass   4: suminf.    2.91962 (8) obj. -148.817 iterations 18
Cbc0038I Pass   5: suminf.    2.06918 (7) obj. -148.817 iterations 27
Cbc0038I Pass   6: suminf.    2.04774 (6) obj. -148.817 iterations 19
Cbc0038I Pass   7: suminf.    1.58067 (5) obj. -148.817 iterations 8
Cbc0038I Pass   8: suminf.    1.54666 (5) obj. -148.817 iterations 39
Cbc0038I Pass   9: suminf.    1.38835 (5) obj. -148.817 iterations 11
Cbc0038I Pass  10: suminf.    3.02002 (8) obj. -148.817 iterations 38
Cbc0038I Pass  11: suminf.    2.91962 (8) obj. -148.817 iterations 18
Cbc0038I Pass  12: suminf.    2.06918 (7) obj. -148.817 iterations 26
Cbc0038I Pass  13: suminf.    2.04774 (6) obj. -148.817 iterations 19
Cbc0038I Pass  14: suminf.    1.58067 (5) obj. -148.817 iterations 8
Cbc0038I Pass  15: suminf.    1.54666 (5) obj. -148.817 iterations 35
Cbc0038I Pass  16: suminf.    1.38835 (5) obj. -148.817 iterations 11
Cbc0038I Pass  17: suminf.    3.02002 (8) obj. -148.817 iterations 33
Cbc0038I Pass  18: suminf.    2.91962 (8) obj. -148.817 iterations 17
Cbc0038I Pass  19: suminf.    2.06918 (7) obj. -148.817 iterations 27
Cbc0038I Pass  20: suminf.    2.04774 (6) obj. -148.817 iterations 18
Cbc0038I Pass  21: suminf.    1.58067 (5) obj. -148.817 iterations 7
Cbc0038I Pass  22: suminf.    1.54666 (5) obj. -148.817 iterations 37
Cbc0038I Pass  23: suminf.    1.38835 (5) obj. -148.817 iterations 10
Cbc0038I Pass  24: suminf.    3.02002 (8) obj. -148.817 iterations 37
Cbc0038I Pass  25: suminf.    2.91962 (8) obj. -148.817 iterations 18
Cbc0038I Pass  26: suminf.    2.06918 (7) obj. -148.817 iterations 26
Cbc0038I Pass  27: suminf.    2.04774 (6) obj. -148.817 iterations 19
Cbc0038I Pass  28: suminf.    1.58067 (5) obj. -148.817 iterations 8
Cbc0038I Pass  29: suminf.    1.54666 (5) obj. -148.817 iterations 37
Cbc0038I Pass  30: suminf.    1.38835 (5) obj. -148.817 iterations 11
Cbc0038I Pass  31: suminf.    3.02002 (8) obj. -148.817 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 129 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -140.835 to -143.821 (0.17 seconds)
Cbc0038I Round again with cutoff of -163.186
Cbc0038I Pass  31: suminf.    4.43594 (14) obj. -163.186 iterations 1
Cbc0038I Pass  32: suminf.    3.75868 (10) obj. -163.186 iterations 27
Cbc0038I Pass  33: suminf.    3.38164 (10) obj. -163.186 iterations 31
Cbc0038I Pass  34: suminf.    3.37560 (11) obj. -163.186 iterations 13
Cbc0038I Pass  35: suminf.    3.19932 (9) obj. -163.186 iterations 26
Cbc0038I Pass  36: suminf.    2.98754 (9) obj. -163.186 iterations 3
Cbc0038I Pass  37: suminf.    2.58120 (8) obj. -163.186 iterations 13
Cbc0038I Pass  38: suminf.    2.56946 (7) obj. -163.186 iterations 1
Cbc0038I Pass  39: suminf.    3.19932 (9) obj. -163.186 iterations 34
Cbc0038I Pass  40: suminf.    7.20618 (20) obj. -163.186 iterations 46
Cbc0038I Pass  41: suminf.    4.02897 (15) obj. -163.186 iterations 36
Cbc0038I Pass  42: suminf.    4.00238 (14) obj. -163.186 iterations 1
Cbc0038I Pass  43: suminf.    3.10624 (12) obj. -163.186 iterations 11
Cbc0038I Pass  44: suminf.    3.11217 (10) obj. -163.186 iterations 59
Cbc0038I Pass  45: suminf.    3.10173 (9) obj. -163.186 iterations 9
Cbc0038I Pass  46: suminf.    3.51767 (9) obj. -163.186 iterations 21
Cbc0038I Pass  47: suminf.    3.23675 (9) obj. -163.186 iterations 14
Cbc0038I Pass  48: suminf.    2.50842 (9) obj. -163.186 iterations 6
Cbc0038I Pass  49: suminf.    2.50842 (9) obj. -163.186 iterations 3
Cbc0038I Pass  50: suminf.    3.32055 (8) obj. -163.186 iterations 20
Cbc0038I Pass  51: suminf.    2.68362 (9) obj. -163.186 iterations 9
Cbc0038I Pass  52: suminf.    2.09200 (10) obj. -163.186 iterations 10
Cbc0038I Pass  53: suminf.    2.09200 (10) obj. -163.186 iterations 1
Cbc0038I Pass  54: suminf.    2.89766 (8) obj. -163.186 iterations 26
Cbc0038I Pass  55: suminf.    2.58628 (7) obj. -163.186 iterations 7
Cbc0038I Pass  56: suminf.    2.58628 (7) obj. -163.186 iterations 4
Cbc0038I Pass  57: suminf.    3.34124 (9) obj. -163.186 iterations 18
Cbc0038I Pass  58: suminf.    3.29546 (9) obj. -163.186 iterations 4
Cbc0038I Pass  59: suminf.    2.45872 (8) obj. -163.186 iterations 14
Cbc0038I Pass  60: suminf.    2.41610 (8) obj. -163.186 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 143 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -143.821 - took 0.25 seconds
Cbc0012I Integer solution of -143.82065 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 114 rows 62 columns
Cbc0031I 26 added rows had average density of 223.15385
Cbc0013I At root node, 26 cuts changed objective from -220.66126 to -202.91238 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20189 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.442 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2527 row cuts average 252.2 elements, 0 column cuts (0 active)  in 0.360 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.372 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 226 row cuts average 248.8 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -143.82065 best solution, best possible -202.91238 (3.84 seconds)
Cbc0010I After 17 nodes, 12 on tree, -143.82065 best solution, best possible -202.91238 (4.54 seconds)
Cbc0012I Integer solution of -147.06058 found by rounding after 15523 iterations and 41 nodes (4.75 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of -151.79606 found by rounding after 15853 iterations and 49 nodes (4.81 seconds)
Cbc0012I Integer solution of -152.55626 found by rounding after 16081 iterations and 57 nodes (4.85 seconds)
Cbc0016I Integer solution of -152.64042 found by strong branching after 16337 iterations and 66 nodes (4.89 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 10 rows 11 columns
Cbc0010I After 145 nodes, 11 on tree, -152.64042 best solution, best possible -202.91238 (5.25 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 8 rows 14 columns
Cbc0012I Integer solution of -157.09103 found by RINS after 20655 iterations and 200 nodes (5.55 seconds)
Cbc0001I Search completed - best objective -157.09103, took 23326 iterations and 257 nodes (5.72 seconds)
Cbc0032I Strong branching done 2084 times (54749 iterations), fathomed 31 nodes and fixed 121 variables
Cbc0035I Maximum depth 71, 1393 variables fixed on reduced cost
Total time (CPU seconds):       5.58   (Wallclock seconds):       5.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 367 (-159) rows, 377 (-147) columns and 16887 (-18849) elements
Clp1000I sum of infeasibilities 4.23738e-06 - average 1.1546e-08, 210 fixed columns
Coin0506I Presolve 148 (-219) rows, 165 (-212) columns and 605 (-16282) elements
Clp0006I 0  Obj 100.85221 Dual inf 36.901335 (163)
Clp0029I End of values pass after 165 iterations
Clp0014I Perturbing problem by 0.001% of 1.2251472 - largest nonzero change 2.7461081e-05 ( 0.0016756202%) - largest zero change 2.9933214e-05
Clp0000I Optimal - objective value 113.12439
Clp0000I Optimal - objective value 113.12439
Coin0511I After Postsolve, objective 113.12439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 113.12439 Dual inf 300.21268 (123)
Clp0014I Perturbing problem by 0.001% of 1.8609141 - largest nonzero change 2.0260153e-05 ( 0.0016649836%) - largest zero change 2.997751e-05
Clp0000I Optimal - objective value 275.40441
Clp0000I Optimal - objective value 275.40441
Clp0000I Optimal - objective value 275.40441
Coin0511I After Postsolve, objective 275.40441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 275.4044111 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0004I processed model has 367 rows, 377 columns (377 integer (377 of which binary)) and 16887 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.763%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 8.17873
Cbc0038I Pass   1: suminf.    3.06177 (79) obj. -205.807 iterations 33
Cbc0038I Pass   2: suminf.    3.06177 (79) obj. -205.807 iterations 1
Cbc0038I Pass   3: suminf.    2.14200 (62) obj. -157.728 iterations 17
Cbc0038I Pass   4: suminf.    1.45739 (46) obj. -139.542 iterations 16
Cbc0038I Pass   5: suminf.    0.77140 (28) obj. -119.341 iterations 18
Cbc0038I Pass   6: suminf.    0.10047 (8) obj. -96.1393 iterations 20
Cbc0038I Solution found of -88.2397
Cbc0038I Rounding solution of -114.432 is better than previous of -88.2397

Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 377 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -114.432 to -118.377 (0.14 seconds)
Cbc0038I Round again with cutoff of -134.079
Cbc0038I Pass   7: suminf.    3.06177 (79) obj. -205.807 iterations 0
Cbc0038I Pass   8: suminf.    3.06177 (79) obj. -205.807 iterations 1
Cbc0038I Pass   9: suminf.    2.23602 (64) obj. -161.54 iterations 15
Cbc0038I Pass  10: suminf.    1.22060 (40) obj. -134.079 iterations 27
Cbc0038I Pass  11: suminf.    1.18310 (29) obj. -134.079 iterations 12
Cbc0038I Pass  12: suminf.    0.74449 (17) obj. -134.079 iterations 26
Cbc0038I Pass  13: suminf.    0.88523 (3) obj. -134.079 iterations 22
Cbc0038I Pass  14: suminf.    0.74408 (30) obj. -134.079 iterations 8
Cbc0038I Pass  15: suminf.    1.32741 (11) obj. -134.079 iterations 37
Cbc0038I Pass  16: suminf.    1.01492 (11) obj. -138.309 iterations 11
Cbc0038I Pass  17: suminf.    1.20720 (4) obj. -134.079 iterations 21
Cbc0038I Pass  18: suminf.    0.77137 (5) obj. -134.079 iterations 12
Cbc0038I Pass  19: suminf.    0.22348 (4) obj. -134.079 iterations 2
Cbc0038I Pass  20: suminf.    0.68303 (3) obj. -134.079 iterations 18
Cbc0038I Pass  21: suminf.    0.58351 (4) obj. -134.079 iterations 15
Cbc0038I Pass  22: suminf.    2.39605 (22) obj. -134.079 iterations 52
Cbc0038I Pass  23: suminf.    1.81691 (25) obj. -134.079 iterations 22
Cbc0038I Pass  24: suminf.    2.60005 (8) obj. -134.079 iterations 38
Cbc0038I Pass  25: suminf.    1.88681 (7) obj. -134.079 iterations 19
Cbc0038I Pass  26: suminf.    1.55176 (10) obj. -134.079 iterations 19
Cbc0038I Pass  27: suminf.    1.49776 (6) obj. -134.079 iterations 15
Cbc0038I Pass  28: suminf.    0.62278 (4) obj. -134.079 iterations 5
Cbc0038I Pass  29: suminf.    0.57295 (4) obj. -134.896 iterations 3
Cbc0038I Pass  30: suminf.    0.67508 (4) obj. -134.079 iterations 11
Cbc0038I Pass  31: suminf.    1.75837 (26) obj. -134.079 iterations 52
Cbc0038I Pass  32: suminf.    1.53367 (25) obj. -134.079 iterations 20
Cbc0038I Pass  33: suminf.    1.46254 (11) obj. -134.079 iterations 24
Cbc0038I Pass  34: suminf.    1.45101 (12) obj. -134.079 iterations 12
Cbc0038I Pass  35: suminf.    0.97402 (6) obj. -134.079 iterations 22
Cbc0038I Pass  36: suminf.    0.85062 (6) obj. -134.079 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 236 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 377 columns, reduced to 43 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -118.377 to -126.985 (0.24 seconds)
Cbc0038I Round again with cutoff of -162.341
Cbc0038I Pass  36: suminf.    3.06177 (79) obj. -205.807 iterations 0
Cbc0038I Pass  37: suminf.    3.06177 (79) obj. -205.807 iterations 1
Cbc0038I Pass  38: suminf.    2.26023 (65) obj. -162.341 iterations 18
Cbc0038I Pass  39: suminf.    2.14982 (52) obj. -162.341 iterations 14
Cbc0038I Pass  40: suminf.    1.78490 (37) obj. -162.341 iterations 35
Cbc0038I Pass  41: suminf.    1.97760 (46) obj. -162.341 iterations 41
Cbc0038I Pass  42: suminf.    1.73725 (42) obj. -162.341 iterations 12
Cbc0038I Pass  43: suminf.    2.07942 (26) obj. -162.341 iterations 51
Cbc0038I Pass  44: suminf.    1.63060 (29) obj. -162.341 iterations 7
Cbc0038I Pass  45: suminf.    1.64599 (12) obj. -162.341 iterations 54
Cbc0038I Pass  46: suminf.    1.18910 (12) obj. -162.341 iterations 12
Cbc0038I Pass  47: suminf.    1.21030 (9) obj. -162.341 iterations 45
Cbc0038I Pass  48: suminf.    1.17682 (9) obj. -162.341 iterations 11
Cbc0038I Pass  49: suminf.    1.46474 (21) obj. -162.341 iterations 46
Cbc0038I Pass  50: suminf.    1.08962 (19) obj. -162.341 iterations 31
Cbc0038I Pass  51: suminf.    1.87004 (10) obj. -162.341 iterations 31
Cbc0038I Pass  52: suminf.    2.94646 (30) obj. -162.341 iterations 41
Cbc0038I Pass  53: suminf.    2.67503 (31) obj. -162.341 iterations 18
Cbc0038I Pass  54: suminf.    3.73898 (22) obj. -162.341 iterations 38
Cbc0038I Pass  55: suminf.    1.76401 (23) obj. -162.341 iterations 16
Cbc0038I Pass  56: suminf.    2.14103 (18) obj. -162.341 iterations 17
Cbc0038I Pass  57: suminf.    1.59377 (24) obj. -162.341 iterations 14
Cbc0038I Pass  58: suminf.    1.85247 (14) obj. -162.341 iterations 41
Cbc0038I Pass  59: suminf.    1.85247 (14) obj. -162.341 iterations 0
Cbc0038I Pass  60: suminf.    1.75928 (13) obj. -162.341 iterations 29
Cbc0038I Pass  61: suminf.    1.45683 (17) obj. -162.341 iterations 13
Cbc0038I Pass  62: suminf.    2.03388 (13) obj. -162.341 iterations 25
Cbc0038I Pass  63: suminf.    1.82048 (14) obj. -162.341 iterations 12
Cbc0038I Pass  64: suminf.    2.03388 (13) obj. -162.341 iterations 18
Cbc0038I Pass  65: suminf.    2.97482 (30) obj. -162.341 iterations 66
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 232 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 377 columns, reduced to 53 rows 70 columns
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -126.985 - took 0.25 seconds
Cbc0012I Integer solution of -126.98506 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
Cbc0038I Full problem 367 rows 377 columns, reduced to 36 rows 40 columns
Cbc0031I 130 added rows had average density of 118.55385
Cbc0013I At root node, 130 cuts changed objective from -275.38842 to -178.32559 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26037 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.496 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3402 row cuts average 344.0 elements, 0 column cuts (0 active)  in 1.394 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 284 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5392 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.635 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2672 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.891 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 397 row cuts average 214.3 elements, 0 column cuts (0 active)  in 0.252 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 169 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.365 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -126.98506 best solution, best possible -178.32559 (8.63 seconds)
Cbc0012I Integer solution of -128.45806 found by rounding after 12846 iterations and 1 nodes (8.68 seconds)
Cbc0012I Integer solution of -140.0309 found by DiveCoefficient after 12846 iterations and 1 nodes (8.69 seconds)
Cbc0012I Integer solution of -141.69575 found by DiveCoefficient after 13172 iterations and 6 nodes (8.98 seconds)
Cbc0012I Integer solution of -143.58237 found by rounding after 13261 iterations and 7 nodes (9.04 seconds)
Cbc0012I Integer solution of -147.41043 found by DiveCoefficient after 13279 iterations and 8 nodes (9.05 seconds)
Cbc0012I Integer solution of -149.99685 found by rounding after 13321 iterations and 9 nodes (9.08 seconds)
Cbc0016I Integer solution of -150.83041 found by strong branching after 13555 iterations and 16 nodes (9.23 seconds)
Cbc0012I Integer solution of -156.09103 found by DiveCoefficient after 13593 iterations and 18 nodes (9.27 seconds)
Cbc0012I Integer solution of -157.09103 found by rounding after 13613 iterations and 19 nodes (9.29 seconds)
Cbc0010I After 24 nodes, 6 on tree, -157.09103 best solution, best possible -178.32559 (9.34 seconds)
Cbc0038I Full problem 367 rows 377 columns, reduced to 165 rows 173 columns
Cbc0010I After 44 nodes, 1 on tree, -157.09103 best solution, best possible -177.84966 (11.28 seconds)
Cbc0010I After 47 nodes, 4 on tree, -157.09103 best solution, best possible -177.84966 (12.24 seconds)
Cbc0010I After 53 nodes, 7 on tree, -157.09103 best solution, best possible -177.84966 (13.00 seconds)
Cbc0010I After 69 nodes, 8 on tree, -157.09103 best solution, best possible -177.84966 (13.75 seconds)
Cbc0038I Full problem 367 rows 377 columns, reduced to 148 rows 156 columns
Cbc0010I After 91 nodes, 12 on tree, -157.09103 best solution, best possible -177.84966 (15.13 seconds)
Cbc0010I After 125 nodes, 14 on tree, -157.09103 best solution, best possible -177.84966 (15.84 seconds)
Cbc0010I After 182 nodes, 11 on tree, -157.09103 best solution, best possible -177.84966 (16.57 seconds)
Cbc0010I After 210 nodes, 12 on tree, -157.09103 best solution, best possible -177.84966 (17.31 seconds)
Cbc0001I Search completed - best objective -157.09103, took 31447 iterations and 264 nodes (18.01 seconds)
Cbc0032I Strong branching done 1782 times (35304 iterations), fathomed 3 nodes and fixed 27 variables
Cbc0035I Maximum depth 52, 1809 variables fixed on reduced cost
Total time (CPU seconds):       17.46   (Wallclock seconds):       18.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 510 (-17) rows, 261 (-3) columns and 1511 (-34) elements
Clp1000I sum of infeasibilities 9.83042e-05 - average 1.92753e-07, 167 fixed columns
Coin0506I Presolve 172 (-338) rows, 91 (-170) columns and 509 (-1002) elements
Clp0029I End of values pass after 91 iterations
Clp0000I Optimal - objective value 220.66126
Clp0000I Optimal - objective value 220.66126
Coin0511I After Postsolve, objective 220.66126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13416069 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 220.66126
Clp0000I Optimal - objective value 220.66126
Clp0000I Optimal - objective value 220.66126
Coin0511I After Postsolve, objective 220.66126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 220.6612621 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 510 rows, 261 columns (260 integer (260 of which binary)) and 1511 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.372%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 60 integers unsatisfied sum - 11.947
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.9574 iterations 167
Cbc0038I Solution found of -11.9574
Cbc0038I Relaxing continuous gives -11.9574
Cbc0038I Rounding solution of -119.729 is better than previous of -11.9574

Cbc0038I Before mini branch and bound, 200 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 112 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -119.729 to -140.835 (0.08 seconds)
Cbc0038I Round again with cutoff of -148.817
Cbc0038I Pass   2: suminf.    3.91273 (14) obj. -148.817 iterations 43
Cbc0038I Pass   3: suminf.    3.02002 (8) obj. -148.817 iterations 27
Cbc0038I Pass   4: suminf.    2.91962 (8) obj. -148.817 iterations 18
Cbc0038I Pass   5: suminf.    2.06918 (7) obj. -148.817 iterations 27
Cbc0038I Pass   6: suminf.    2.04774 (6) obj. -148.817 iterations 19
Cbc0038I Pass   7: suminf.    1.58067 (5) obj. -148.817 iterations 8
Cbc0038I Pass   8: suminf.    1.54666 (5) obj. -148.817 iterations 39
Cbc0038I Pass   9: suminf.    1.38835 (5) obj. -148.817 iterations 11
Cbc0038I Pass  10: suminf.    3.02002 (8) obj. -148.817 iterations 38
Cbc0038I Pass  11: suminf.    2.91962 (8) obj. -148.817 iterations 18
Cbc0038I Pass  12: suminf.    2.06918 (7) obj. -148.817 iterations 26
Cbc0038I Pass  13: suminf.    2.04774 (6) obj. -148.817 iterations 19
Cbc0038I Pass  14: suminf.    1.58067 (5) obj. -148.817 iterations 8
Cbc0038I Pass  15: suminf.    1.54666 (5) obj. -148.817 iterations 35
Cbc0038I Pass  16: suminf.    1.38835 (5) obj. -148.817 iterations 11
Cbc0038I Pass  17: suminf.    3.02002 (8) obj. -148.817 iterations 33
Cbc0038I Pass  18: suminf.    2.91962 (8) obj. -148.817 iterations 17
Cbc0038I Pass  19: suminf.    2.06918 (7) obj. -148.817 iterations 27
Cbc0038I Pass  20: suminf.    2.04774 (6) obj. -148.817 iterations 18
Cbc0038I Pass  21: suminf.    1.58067 (5) obj. -148.817 iterations 7
Cbc0038I Pass  22: suminf.    1.54666 (5) obj. -148.817 iterations 37
Cbc0038I Pass  23: suminf.    1.38835 (5) obj. -148.817 iterations 10
Cbc0038I Pass  24: suminf.    3.02002 (8) obj. -148.817 iterations 37
Cbc0038I Pass  25: suminf.    2.91962 (8) obj. -148.817 iterations 18
Cbc0038I Pass  26: suminf.    2.06918 (7) obj. -148.817 iterations 26
Cbc0038I Pass  27: suminf.    2.04774 (6) obj. -148.817 iterations 19
Cbc0038I Pass  28: suminf.    1.58067 (5) obj. -148.817 iterations 8
Cbc0038I Pass  29: suminf.    1.54666 (5) obj. -148.817 iterations 37
Cbc0038I Pass  30: suminf.    1.38835 (5) obj. -148.817 iterations 11
Cbc0038I Pass  31: suminf.    3.02002 (8) obj. -148.817 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 129 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -140.835 to -143.821 (0.16 seconds)
Cbc0038I Round again with cutoff of -163.186
Cbc0038I Pass  31: suminf.    4.43594 (14) obj. -163.186 iterations 1
Cbc0038I Pass  32: suminf.    3.75868 (10) obj. -163.186 iterations 27
Cbc0038I Pass  33: suminf.    3.38164 (10) obj. -163.186 iterations 31
Cbc0038I Pass  34: suminf.    3.37560 (11) obj. -163.186 iterations 13
Cbc0038I Pass  35: suminf.    3.19932 (9) obj. -163.186 iterations 26
Cbc0038I Pass  36: suminf.    2.98754 (9) obj. -163.186 iterations 3
Cbc0038I Pass  37: suminf.    2.58120 (8) obj. -163.186 iterations 13
Cbc0038I Pass  38: suminf.    2.56946 (7) obj. -163.186 iterations 1
Cbc0038I Pass  39: suminf.    3.19932 (9) obj. -163.186 iterations 34
Cbc0038I Pass  40: suminf.    7.20618 (20) obj. -163.186 iterations 46
Cbc0038I Pass  41: suminf.    4.02897 (15) obj. -163.186 iterations 36
Cbc0038I Pass  42: suminf.    4.00238 (14) obj. -163.186 iterations 1
Cbc0038I Pass  43: suminf.    3.10624 (12) obj. -163.186 iterations 11
Cbc0038I Pass  44: suminf.    3.11217 (10) obj. -163.186 iterations 59
Cbc0038I Pass  45: suminf.    3.10173 (9) obj. -163.186 iterations 9
Cbc0038I Pass  46: suminf.    3.51767 (9) obj. -163.186 iterations 21
Cbc0038I Pass  47: suminf.    3.23675 (9) obj. -163.186 iterations 14
Cbc0038I Pass  48: suminf.    2.50842 (9) obj. -163.186 iterations 6
Cbc0038I Pass  49: suminf.    2.50842 (9) obj. -163.186 iterations 3
Cbc0038I Pass  50: suminf.    3.32055 (8) obj. -163.186 iterations 20
Cbc0038I Pass  51: suminf.    2.68362 (9) obj. -163.186 iterations 9
Cbc0038I Pass  52: suminf.    2.09200 (10) obj. -163.186 iterations 10
Cbc0038I Pass  53: suminf.    2.09200 (10) obj. -163.186 iterations 1
Cbc0038I Pass  54: suminf.    2.89766 (8) obj. -163.186 iterations 26
Cbc0038I Pass  55: suminf.    2.58628 (7) obj. -163.186 iterations 7
Cbc0038I Pass  56: suminf.    2.58628 (7) obj. -163.186 iterations 4
Cbc0038I Pass  57: suminf.    3.34124 (9) obj. -163.186 iterations 18
Cbc0038I Pass  58: suminf.    3.29546 (9) obj. -163.186 iterations 4
Cbc0038I Pass  59: suminf.    2.45872 (8) obj. -163.186 iterations 14
Cbc0038I Pass  60: suminf.    2.41610 (8) obj. -163.186 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 510 rows 261 columns, reduced to 143 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -143.821 - took 0.24 seconds
Cbc0012I Integer solution of -143.82065 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 114 rows 62 columns
Cbc0031I 26 added rows had average density of 223.15385
Cbc0013I At root node, 26 cuts changed objective from -220.66126 to -202.91238 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20189 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.415 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2527 row cuts average 252.2 elements, 0 column cuts (0 active)  in 0.344 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.359 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 226 row cuts average 248.8 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -143.82065 best solution, best possible -202.91238 (3.63 seconds)
Cbc0010I After 21 nodes, 10 on tree, -143.82065 best solution, best possible -202.91238 (4.34 seconds)
Cbc0012I Integer solution of -147.06058 found by rounding after 15523 iterations and 41 nodes (4.50 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of -151.79606 found by rounding after 15853 iterations and 49 nodes (4.56 seconds)
Cbc0012I Integer solution of -152.55626 found by rounding after 16081 iterations and 57 nodes (4.60 seconds)
Cbc0016I Integer solution of -152.64042 found by strong branching after 16337 iterations and 66 nodes (4.63 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 10 rows 11 columns
Cbc0010I After 153 nodes, 15 on tree, -152.64042 best solution, best possible -202.91238 (5.05 seconds)
Cbc0038I Full problem 510 rows 261 columns, reduced to 8 rows 14 columns
Cbc0012I Integer solution of -157.09103 found by RINS after 20655 iterations and 200 nodes (5.27 seconds)
Cbc0001I Search completed - best objective -157.09103, took 23326 iterations and 257 nodes (5.43 seconds)
Cbc0032I Strong branching done 2084 times (54749 iterations), fathomed 31 nodes and fixed 121 variables
Cbc0035I Maximum depth 71, 1393 variables fixed on reduced cost
Total time (CPU seconds):       5.33   (Wallclock seconds):       5.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 367 (-160) rows, 377 (-148) columns and 16887 (-18850) elements
Clp1000I sum of infeasibilities 4.23738e-06 - average 1.1546e-08, 210 fixed columns
Coin0506I Presolve 148 (-219) rows, 165 (-212) columns and 605 (-16282) elements
Clp0006I 0  Obj 100.85221 Dual inf 36.901335 (163)
Clp0029I End of values pass after 165 iterations
Clp0014I Perturbing problem by 0.001% of 1.2251472 - largest nonzero change 2.7461081e-05 ( 0.0016756202%) - largest zero change 2.9933214e-05
Clp0000I Optimal - objective value 113.12439
Clp0000I Optimal - objective value 113.12439
Coin0511I After Postsolve, objective 113.12439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 113.12439 Dual inf 300.21268 (123)
Clp0014I Perturbing problem by 0.001% of 1.8609141 - largest nonzero change 2.0260153e-05 ( 0.0016649836%) - largest zero change 2.997751e-05
Clp0000I Optimal - objective value 275.40441
Clp0000I Optimal - objective value 275.40441
Clp0000I Optimal - objective value 275.40441
Coin0511I After Postsolve, objective 275.40441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 275.4044111 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 367 rows, 377 columns (377 integer (377 of which binary)) and 16887 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.763%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 8.17873
Cbc0038I Pass   1: suminf.    3.06177 (79) obj. -205.807 iterations 33
Cbc0038I Pass   2: suminf.    3.06177 (79) obj. -205.807 iterations 1
Cbc0038I Pass   3: suminf.    2.14200 (62) obj. -157.728 iterations 17
Cbc0038I Pass   4: suminf.    1.45739 (46) obj. -139.542 iterations 16
Cbc0038I Pass   5: suminf.    0.77140 (28) obj. -119.341 iterations 18
Cbc0038I Pass   6: suminf.    0.10047 (8) obj. -96.1393 iterations 20
Cbc0038I Solution found of -88.2397
Cbc0038I Rounding solution of -114.432 is better than previous of -88.2397

Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 377 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -114.432 to -118.377 (0.14 seconds)
Cbc0038I Round again with cutoff of -134.079
Cbc0038I Pass   7: suminf.    3.06177 (79) obj. -205.807 iterations 0
Cbc0038I Pass   8: suminf.    3.06177 (79) obj. -205.807 iterations 1
Cbc0038I Pass   9: suminf.    2.23602 (64) obj. -161.54 iterations 15
Cbc0038I Pass  10: suminf.    1.22060 (40) obj. -134.079 iterations 27
Cbc0038I Pass  11: suminf.    1.18310 (29) obj. -134.079 iterations 12
Cbc0038I Pass  12: suminf.    0.74449 (17) obj. -134.079 iterations 26
Cbc0038I Pass  13: suminf.    0.88523 (3) obj. -134.079 iterations 22
Cbc0038I Pass  14: suminf.    0.74408 (30) obj. -134.079 iterations 8
Cbc0038I Pass  15: suminf.    1.32741 (11) obj. -134.079 iterations 37
Cbc0038I Pass  16: suminf.    1.01492 (11) obj. -138.309 iterations 11
Cbc0038I Pass  17: suminf.    1.20720 (4) obj. -134.079 iterations 21
Cbc0038I Pass  18: suminf.    0.77137 (5) obj. -134.079 iterations 12
Cbc0038I Pass  19: suminf.    0.22348 (4) obj. -134.079 iterations 2
Cbc0038I Pass  20: suminf.    0.68303 (3) obj. -134.079 iterations 18
Cbc0038I Pass  21: suminf.    0.58351 (4) obj. -134.079 iterations 15
Cbc0038I Pass  22: suminf.    2.39605 (22) obj. -134.079 iterations 52
Cbc0038I Pass  23: suminf.    1.81691 (25) obj. -134.079 iterations 22
Cbc0038I Pass  24: suminf.    2.60005 (8) obj. -134.079 iterations 38
Cbc0038I Pass  25: suminf.    1.88681 (7) obj. -134.079 iterations 19
Cbc0038I Pass  26: suminf.    1.55176 (10) obj. -134.079 iterations 19
Cbc0038I Pass  27: suminf.    1.49776 (6) obj. -134.079 iterations 15
Cbc0038I Pass  28: suminf.    0.62278 (4) obj. -134.079 iterations 5
Cbc0038I Pass  29: suminf.    0.57295 (4) obj. -134.896 iterations 3
Cbc0038I Pass  30: suminf.    0.67508 (4) obj. -134.079 iterations 11
Cbc0038I Pass  31: suminf.    1.75837 (26) obj. -134.079 iterations 52
Cbc0038I Pass  32: suminf.    1.53367 (25) obj. -134.079 iterations 20
Cbc0038I Pass  33: suminf.    1.46254 (11) obj. -134.079 iterations 24
Cbc0038I Pass  34: suminf.    1.45101 (12) obj. -134.079 iterations 12
Cbc0038I Pass  35: suminf.    0.97402 (6) obj. -134.079 iterations 22
Cbc0038I Pass  36: suminf.    0.85062 (6) obj. -134.079 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 236 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 377 columns, reduced to 43 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -118.377 to -126.985 (0.22 seconds)
Cbc0038I Round again with cutoff of -162.341
Cbc0038I Pass  36: suminf.    3.06177 (79) obj. -205.807 iterations 0
Cbc0038I Pass  37: suminf.    3.06177 (79) obj. -205.807 iterations 1
Cbc0038I Pass  38: suminf.    2.26023 (65) obj. -162.341 iterations 18
Cbc0038I Pass  39: suminf.    2.14982 (52) obj. -162.341 iterations 14
Cbc0038I Pass  40: suminf.    1.78490 (37) obj. -162.341 iterations 35
Cbc0038I Pass  41: suminf.    1.97760 (46) obj. -162.341 iterations 41
Cbc0038I Pass  42: suminf.    1.73725 (42) obj. -162.341 iterations 12
Cbc0038I Pass  43: suminf.    2.07942 (26) obj. -162.341 iterations 51
Cbc0038I Pass  44: suminf.    1.63060 (29) obj. -162.341 iterations 7
Cbc0038I Pass  45: suminf.    1.64599 (12) obj. -162.341 iterations 54
Cbc0038I Pass  46: suminf.    1.18910 (12) obj. -162.341 iterations 12
Cbc0038I Pass  47: suminf.    1.21030 (9) obj. -162.341 iterations 45
Cbc0038I Pass  48: suminf.    1.17682 (9) obj. -162.341 iterations 11
Cbc0038I Pass  49: suminf.    1.46474 (21) obj. -162.341 iterations 46
Cbc0038I Pass  50: suminf.    1.08962 (19) obj. -162.341 iterations 31
Cbc0038I Pass  51: suminf.    1.87004 (10) obj. -162.341 iterations 31
Cbc0038I Pass  52: suminf.    2.94646 (30) obj. -162.341 iterations 41
Cbc0038I Pass  53: suminf.    2.67503 (31) obj. -162.341 iterations 18
Cbc0038I Pass  54: suminf.    3.73898 (22) obj. -162.341 iterations 38
Cbc0038I Pass  55: suminf.    1.76401 (23) obj. -162.341 iterations 16
Cbc0038I Pass  56: suminf.    2.14103 (18) obj. -162.341 iterations 17
Cbc0038I Pass  57: suminf.    1.59377 (24) obj. -162.341 iterations 14
Cbc0038I Pass  58: suminf.    1.85247 (14) obj. -162.341 iterations 41
Cbc0038I Pass  59: suminf.    1.85247 (14) obj. -162.341 iterations 0
Cbc0038I Pass  60: suminf.    1.75928 (13) obj. -162.341 iterations 29
Cbc0038I Pass  61: suminf.    1.45683 (17) obj. -162.341 iterations 13
Cbc0038I Pass  62: suminf.    2.03388 (13) obj. -162.341 iterations 25
Cbc0038I Pass  63: suminf.    1.82048 (14) obj. -162.341 iterations 12
Cbc0038I Pass  64: suminf.    2.03388 (13) obj. -162.341 iterations 18
Cbc0038I Pass  65: suminf.    2.97482 (30) obj. -162.341 iterations 66
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 232 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 377 columns, reduced to 53 rows 70 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -126.985 - took 0.24 seconds
Cbc0012I Integer solution of -126.98506 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 367 rows 377 columns, reduced to 36 rows 40 columns
Cbc0031I 130 added rows had average density of 118.55385
Cbc0013I At root node, 130 cuts changed objective from -275.38842 to -178.32559 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26037 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.476 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3402 row cuts average 344.0 elements, 0 column cuts (0 active)  in 1.327 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 284 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5392 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.604 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2672 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.862 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 397 row cuts average 214.3 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 169 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.353 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -126.98506 best solution, best possible -178.32559 (8.29 seconds)
Cbc0012I Integer solution of -128.45806 found by rounding after 12846 iterations and 1 nodes (8.34 seconds)
Cbc0012I Integer solution of -140.0309 found by DiveCoefficient after 12846 iterations and 1 nodes (8.34 seconds)
Cbc0012I Integer solution of -141.69575 found by DiveCoefficient after 13172 iterations and 6 nodes (8.59 seconds)
Cbc0012I Integer solution of -143.58237 found by rounding after 13261 iterations and 7 nodes (8.65 seconds)
Cbc0012I Integer solution of -147.41043 found by DiveCoefficient after 13279 iterations and 8 nodes (8.66 seconds)
Cbc0012I Integer solution of -149.99685 found by rounding after 13321 iterations and 9 nodes (8.69 seconds)
Cbc0016I Integer solution of -150.83041 found by strong branching after 13555 iterations and 16 nodes (8.83 seconds)
Cbc0012I Integer solution of -156.09103 found by DiveCoefficient after 13593 iterations and 18 nodes (8.86 seconds)
Cbc0012I Integer solution of -157.09103 found by rounding after 13613 iterations and 19 nodes (8.88 seconds)
Cbc0010I After 30 nodes, 7 on tree, -157.09103 best solution, best possible -178.32559 (8.99 seconds)
Cbc0038I Full problem 367 rows 377 columns, reduced to 165 rows 173 columns
Cbc0010I After 44 nodes, 1 on tree, -157.09103 best solution, best possible -177.84966 (10.79 seconds)
Cbc0010I After 47 nodes, 4 on tree, -157.09103 best solution, best possible -177.84966 (11.71 seconds)
Cbc0010I After 53 nodes, 7 on tree, -157.09103 best solution, best possible -177.84966 (12.45 seconds)
Cbc0010I After 69 nodes, 8 on tree, -157.09103 best solution, best possible -177.84966 (13.15 seconds)
Cbc0038I Full problem 367 rows 377 columns, reduced to 148 rows 156 columns
Cbc0010I After 91 nodes, 12 on tree, -157.09103 best solution, best possible -177.84966 (14.49 seconds)
Cbc0010I After 130 nodes, 13 on tree, -157.09103 best solution, best possible -177.84966 (15.20 seconds)
Cbc0010I After 185 nodes, 10 on tree, -157.09103 best solution, best possible -177.84966 (15.95 seconds)
Cbc0010I After 216 nodes, 12 on tree, -157.09103 best solution, best possible -177.84966 (16.69 seconds)
Cbc0001I Search completed - best objective -157.09103, took 31447 iterations and 264 nodes (17.27 seconds)
Cbc0032I Strong branching done 1782 times (35304 iterations), fathomed 3 nodes and fixed 27 variables
Cbc0035I Maximum depth 52, 1809 variables fixed on reduced cost
Total time (CPU seconds):       16.83   (Wallclock seconds):       17.38

