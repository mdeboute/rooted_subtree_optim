Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 19 (-6) columns and 99 (-36) elements
Clp1000I sum of infeasibilities 6.50743e-09 - average 1.91395e-10, 17 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-19) columns and 0 (-99) elements
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Coin0511I After Postsolve, objective 10776.432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1936216 - largest nonzero change 1.2037643e-05 ( 0.0012037643%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Coin0511I After Postsolve, objective 10776.432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10776.43171 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 19 columns (18 integer (18 of which binary)) and 99 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.208%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.275641
Cbc0038I Solution found of -7579.5
Cbc0038I Relaxing continuous gives -7579.5
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 19 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -7728.63
Cbc0038I Pass   1: suminf.    0.02765 (1) obj. -7728.63 iterations 7
Cbc0038I Pass   2: suminf.    0.27564 (1) obj. -9066.31 iterations 1
Cbc0038I Pass   3: suminf.    0.01411 (1) obj. -7728.63 iterations 3
Cbc0038I Pass   4: suminf.    0.01411 (1) obj. -7728.63 iterations 1
Cbc0038I Pass   5: suminf.    0.12179 (1) obj. -8309.46 iterations 1
Cbc0038I Pass   6: suminf.    1.62109 (4) obj. -7728.63 iterations 3
Cbc0038I Pass   7: suminf.    0.11559 (3) obj. -7728.63 iterations 11
Cbc0038I Pass   8: suminf.    0.05327 (2) obj. -7728.63 iterations 3
Cbc0038I Pass   9: suminf.    0.66305 (2) obj. -7728.63 iterations 2
Cbc0038I Pass  10: suminf.    0.11538 (1) obj. -8407.88 iterations 1
Cbc0038I Solution found of -7785.5
Cbc0038I Relaxing continuous gives -7785.5
Cbc0038I Rounding solution of -7856.5 is better than previous of -7785.5

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8098.86
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.09629 (1) obj. -8098.86 iterations 0
Cbc0038I Pass  12: suminf.    0.27564 (1) obj. -9066.31 iterations 1
Cbc0038I Pass  13: suminf.    0.08943 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  14: suminf.    0.24487 (1) obj. -8937.34 iterations 1
Cbc0038I Pass  15: suminf.    0.08943 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  16: suminf.    0.21728 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  17: suminf.    0.07367 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  18: suminf.    0.09103 (1) obj. -8192.49 iterations 1
Cbc0038I Pass  19: suminf.    0.14865 (2) obj. -8098.86 iterations 9
Cbc0038I Pass  20: suminf.    0.14865 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  21: suminf.    0.14103 (1) obj. -8463.19 iterations 3
Cbc0038I Pass  22: suminf.    0.07348 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  23: suminf.    0.57427 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  24: suminf.    0.07348 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  25: suminf.    0.22237 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  26: suminf.    0.52545 (3) obj. -8098.86 iterations 1
Cbc0038I Pass  27: suminf.    0.22237 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  28: suminf.    0.82429 (3) obj. -8098.86 iterations 7
Cbc0038I Pass  29: suminf.    0.82429 (3) obj. -8098.86 iterations 2
Cbc0038I Pass  30: suminf.    0.14103 (1) obj. -8463.19 iterations 3
Cbc0038I Pass  31: suminf.    0.06662 (1) obj. -8098.86 iterations 3
Cbc0038I Pass  32: suminf.    0.06662 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  33: suminf.    0.11026 (1) obj. -8334.22 iterations 1
Cbc0038I Pass  34: suminf.    0.28592 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  35: suminf.    0.05123 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  36: suminf.    0.08462 (1) obj. -8278.92 iterations 1
Cbc0038I Pass  37: suminf.    0.35392 (2) obj. -8098.86 iterations 6
Cbc0038I Pass  38: suminf.    0.35392 (2) obj. -8098.86 iterations 7
Cbc0038I Pass  39: suminf.    0.35881 (3) obj. -8098.86 iterations 10
Cbc0038I Pass  40: suminf.    0.14588 (2) obj. -8098.86 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 19 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7856.5 - took 0.03 seconds
Cbc0012I Integer solution of -7856.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 3 added rows had average density of 3
Cbc0013I At root node, 14 cuts changed objective from -7903.2677 to -7856.5 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 4.3 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7856.5, took 4 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-10) rows, 40 (-6) columns and 291 (-97) elements
Clp1000I sum of infeasibilities 2.84199e-08 - average 7.47892e-10, 39 fixed columns
Coin0506I Presolve 0 (-38) rows, 0 (-40) columns and 0 (-291) elements
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Coin0511I After Postsolve, objective 10776.432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.17356209 - largest nonzero change 0 ( 0%) - largest zero change 2.78061e-05
Clp0000I Optimal - objective value 10864.392
Clp0000I Optimal - objective value 10864.392
Clp0000I Optimal - objective value 10864.392
Coin0511I After Postsolve, objective 10864.392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10864.39155 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 40 columns (40 integer (40 of which binary)) and 301 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.827%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.84061
Cbc0038I Pass   1: suminf.    0.16667 (1) obj. -5055.83 iterations 23
Cbc0038I Pass   2: suminf.    0.16667 (1) obj. -5055.83 iterations 0
Cbc0038I Solution found of -5055
Cbc0038I Rounding solution of -5300 is better than previous of -5055

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -5300 to -7616.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -7867.73
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.64537 (2) obj. -7867.73 iterations 1
Cbc0038I Pass   4: suminf.    0.63725 (2) obj. -7911.48 iterations 1
Cbc0038I Pass   5: suminf.    0.47854 (1) obj. -7867.73 iterations 2
Cbc0038I Pass   6: suminf.    0.47059 (1) obj. -7910.65 iterations 1
Cbc0038I Pass   7: suminf.    1.21148 (6) obj. -7867.73 iterations 7
Cbc0038I Pass   8: suminf.    0.70364 (2) obj. -7867.73 iterations 5
Cbc0038I Pass   9: suminf.    0.49208 (1) obj. -7867.73 iterations 1
Cbc0038I Pass  10: suminf.    0.37683 (1) obj. -8489.38 iterations 1
Cbc0038I Pass  11: suminf.    0.93678 (4) obj. -7867.73 iterations 7
Cbc0038I Pass  12: suminf.    0.54350 (2) obj. -8476.22 iterations 3
Cbc0038I Pass  13: suminf.    0.48948 (1) obj. -7867.73 iterations 2
Cbc0038I Pass  14: suminf.    0.37683 (1) obj. -8475.38 iterations 1
Cbc0038I Pass  15: suminf.    1.65040 (7) obj. -7867.73 iterations 9
Cbc0038I Pass  16: suminf.    0.66176 (2) obj. -8261.69 iterations 8
Cbc0038I Pass  17: suminf.    0.48355 (1) obj. -7867.73 iterations 2
Cbc0038I Pass  18: suminf.    0.41176 (1) obj. -8254.94 iterations 1
Cbc0038I Pass  19: suminf.    1.36795 (5) obj. -7867.73 iterations 8
Cbc0038I Pass  20: suminf.    0.41176 (1) obj. -8254.94 iterations 8
Cbc0038I Pass  21: suminf.    2.41880 (7) obj. -7867.73 iterations 15
Cbc0038I Pass  22: suminf.    2.19897 (6) obj. -7867.73 iterations 1
Cbc0038I Pass  23: suminf.    0.28615 (2) obj. -9208.99 iterations 5
Cbc0038I Pass  24: suminf.    0.01151 (2) obj. -7867.73 iterations 1
Cbc0038I Pass  25: suminf.    2.45754 (13) obj. -7867.73 iterations 14
Cbc0038I Pass  26: suminf.    0.46969 (3) obj. -7867.73 iterations 11
Cbc0038I Pass  27: suminf.    0.01710 (1) obj. -7867.73 iterations 2
Cbc0038I Pass  28: suminf.    0.26341 (1) obj. -9196.36 iterations 1
Cbc0038I Pass  29: suminf.    2.18770 (7) obj. -7867.73 iterations 10
Cbc0038I Pass  30: suminf.    1.35602 (4) obj. -7867.73 iterations 3
Cbc0038I Pass  31: suminf.    0.22683 (1) obj. -8963.02 iterations 4
Cbc0038I Pass  32: suminf.    0.02377 (1) obj. -7867.73 iterations 1
Cbc0038I Rounding solution of -7823.5 is better than previous of -7616.5

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 40 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -7823.5 to -7856.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -8319.05
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.15214 (8) obj. -8319.05 iterations 2
Cbc0038I Pass  33: suminf.    0.98987 (3) obj. -8319.05 iterations 1
Cbc0038I Pass  34: suminf.    0.39487 (1) obj. -8319.05 iterations 4
Cbc0038I Pass  35: suminf.    0.35244 (1) obj. -8547.94 iterations 1
Cbc0038I Pass  36: suminf.    0.72869 (3) obj. -8544.2 iterations 6
Cbc0038I Pass  37: suminf.    0.51911 (2) obj. -8543.78 iterations 1
Cbc0038I Pass  38: suminf.    0.39395 (1) obj. -8319.05 iterations 2
Cbc0038I Pass  39: suminf.    0.35244 (1) obj. -8542.94 iterations 1
Cbc0038I Pass  40: suminf.    0.90866 (5) obj. -8319.05 iterations 5
Cbc0038I Pass  41: suminf.    0.35244 (1) obj. -8545.94 iterations 4
Cbc0038I Pass  42: suminf.    0.39450 (1) obj. -8319.05 iterations 1
Cbc0038I Pass  43: suminf.    1.95343 (9) obj. -8319.05 iterations 13
Cbc0038I Pass  44: suminf.    1.26887 (6) obj. -8319.05 iterations 4
Cbc0038I Pass  45: suminf.    0.40000 (1) obj. -9738.1 iterations 5
Cbc0038I Pass  46: suminf.    0.13692 (1) obj. -8319.05 iterations 1
Cbc0038I Pass  47: suminf.    1.74321 (5) obj. -8319.05 iterations 4
Cbc0038I Pass  48: suminf.    0.63155 (2) obj. -8319.05 iterations 3
Cbc0038I Pass  49: suminf.    2.49020 (9) obj. -8319.05 iterations 7
Cbc0038I Pass  50: suminf.    0.63553 (3) obj. -8319.05 iterations 6
Cbc0038I Pass  51: suminf.    1.40764 (5) obj. -8319.05 iterations 5
Cbc0038I Pass  52: suminf.    1.11597 (3) obj. -8319.05 iterations 4
Cbc0038I Pass  53: suminf.    0.14146 (1) obj. -8451.55 iterations 3
Cbc0038I Pass  54: suminf.    0.11690 (1) obj. -8319.05 iterations 1
Cbc0038I Pass  55: suminf.    0.77254 (3) obj. -8319.05 iterations 3
Cbc0038I Pass  56: suminf.    0.53137 (2) obj. -8319.05 iterations 1
Cbc0038I Pass  57: suminf.    0.26341 (1) obj. -9113.36 iterations 1
Cbc0038I Pass  58: suminf.    0.11616 (1) obj. -8319.05 iterations 1
Cbc0038I Pass  59: suminf.    0.61253 (4) obj. -8319.05 iterations 4
Cbc0038I Pass  60: suminf.    0.10781 (1) obj. -8319.05 iterations 3
Cbc0038I Pass  61: suminf.    0.22073 (1) obj. -8928.13 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -7856.5 - took 0.02 seconds
Cbc0012I Integer solution of -7856.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 40 columns, reduced to 1 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 5
Cbc0013I At root node, 3 cuts changed objective from -10124.322 to -7869.6558 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 1.7 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7856.5, took 31 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 19 (-6) columns and 99 (-36) elements
Clp1000I sum of infeasibilities 6.50743e-09 - average 1.91395e-10, 17 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-19) columns and 0 (-99) elements
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Coin0511I After Postsolve, objective 10776.432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1936216 - largest nonzero change 1.2037643e-05 ( 0.0012037643%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Coin0511I After Postsolve, objective 10776.432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10776.43171 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 19 columns (18 integer (18 of which binary)) and 99 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.208%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.275641
Cbc0038I Solution found of -7579.5
Cbc0038I Relaxing continuous gives -7579.5
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 19 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7728.63
Cbc0038I Pass   1: suminf.    0.02765 (1) obj. -7728.63 iterations 7
Cbc0038I Pass   2: suminf.    0.27564 (1) obj. -9066.31 iterations 1
Cbc0038I Pass   3: suminf.    0.01411 (1) obj. -7728.63 iterations 3
Cbc0038I Pass   4: suminf.    0.01411 (1) obj. -7728.63 iterations 1
Cbc0038I Pass   5: suminf.    0.12179 (1) obj. -8309.46 iterations 1
Cbc0038I Pass   6: suminf.    1.62109 (4) obj. -7728.63 iterations 3
Cbc0038I Pass   7: suminf.    0.11559 (3) obj. -7728.63 iterations 11
Cbc0038I Pass   8: suminf.    0.05327 (2) obj. -7728.63 iterations 3
Cbc0038I Pass   9: suminf.    0.66305 (2) obj. -7728.63 iterations 2
Cbc0038I Pass  10: suminf.    0.11538 (1) obj. -8407.88 iterations 1
Cbc0038I Solution found of -7785.5
Cbc0038I Relaxing continuous gives -7785.5
Cbc0038I Rounding solution of -7856.5 is better than previous of -7785.5

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8098.86
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.09629 (1) obj. -8098.86 iterations 0
Cbc0038I Pass  12: suminf.    0.27564 (1) obj. -9066.31 iterations 1
Cbc0038I Pass  13: suminf.    0.08943 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  14: suminf.    0.24487 (1) obj. -8937.34 iterations 1
Cbc0038I Pass  15: suminf.    0.08943 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  16: suminf.    0.21728 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  17: suminf.    0.07367 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  18: suminf.    0.09103 (1) obj. -8192.49 iterations 1
Cbc0038I Pass  19: suminf.    0.14865 (2) obj. -8098.86 iterations 9
Cbc0038I Pass  20: suminf.    0.14865 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  21: suminf.    0.14103 (1) obj. -8463.19 iterations 3
Cbc0038I Pass  22: suminf.    0.07348 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  23: suminf.    0.57427 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  24: suminf.    0.07348 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  25: suminf.    0.22237 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  26: suminf.    0.52545 (3) obj. -8098.86 iterations 1
Cbc0038I Pass  27: suminf.    0.22237 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  28: suminf.    0.82429 (3) obj. -8098.86 iterations 7
Cbc0038I Pass  29: suminf.    0.82429 (3) obj. -8098.86 iterations 2
Cbc0038I Pass  30: suminf.    0.14103 (1) obj. -8463.19 iterations 3
Cbc0038I Pass  31: suminf.    0.06662 (1) obj. -8098.86 iterations 3
Cbc0038I Pass  32: suminf.    0.06662 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  33: suminf.    0.11026 (1) obj. -8334.22 iterations 1
Cbc0038I Pass  34: suminf.    0.28592 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  35: suminf.    0.05123 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  36: suminf.    0.08462 (1) obj. -8278.92 iterations 1
Cbc0038I Pass  37: suminf.    0.35392 (2) obj. -8098.86 iterations 6
Cbc0038I Pass  38: suminf.    0.35392 (2) obj. -8098.86 iterations 7
Cbc0038I Pass  39: suminf.    0.35881 (3) obj. -8098.86 iterations 10
Cbc0038I Pass  40: suminf.    0.14588 (2) obj. -8098.86 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 19 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7856.5 - took 0.01 seconds
Cbc0012I Integer solution of -7856.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 3 added rows had average density of 3
Cbc0013I At root node, 14 cuts changed objective from -7903.2677 to -7856.5 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 4.3 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7856.5, took 4 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-12) rows, 39 (-8) columns and 282 (-107) elements
Clp1000I sum of infeasibilities 1.12e-06 - average 3.02702e-08, 25 fixed columns
Coin0506I Presolve 0 (-37) rows, 0 (-39) columns and 0 (-282) elements
Clp0000I Optimal - objective value 10827.268
Clp0000I Optimal - objective value 10827.268
Coin0511I After Postsolve, objective 10827.268, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4473747 - largest nonzero change 2.6331912e-05 ( 0.0026331912%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 10864.392
Clp0000I Optimal - objective value 10864.392
Clp0000I Optimal - objective value 10864.392
Coin0511I After Postsolve, objective 10864.392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10864.39155 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 39 columns (39 integer (39 of which binary)) and 286 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.634%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.67244
Cbc0038I Pass   1: suminf.    0.16667 (1) obj. -5055.83 iterations 23
Cbc0038I Pass   2: suminf.    0.16667 (1) obj. -5055.83 iterations 0
Cbc0038I Solution found of -5055
Cbc0038I Rounding solution of -5300 is better than previous of -5055

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 39 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -5300 to -7579.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -7732.52
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.27709 (8) obj. -7732.52 iterations 2
Cbc0038I Pass   4: suminf.    1.27709 (8) obj. -7732.52 iterations 0
Cbc0038I Pass   5: suminf.    0.27564 (1) obj. -9066.31 iterations 12
Cbc0038I Pass   6: suminf.    0.02837 (1) obj. -7732.52 iterations 1
Cbc0038I Pass   7: suminf.    2.28019 (6) obj. -7732.52 iterations 6
Cbc0038I Pass   8: suminf.    1.01502 (3) obj. -7732.52 iterations 3
Cbc0038I Pass   9: suminf.    0.23077 (1) obj. -8895.27 iterations 3
Cbc0038I Pass  10: suminf.    0.01521 (1) obj. -7732.52 iterations 1
Cbc0038I Pass  11: suminf.    1.82250 (5) obj. -7732.52 iterations 4
Cbc0038I Pass  12: suminf.    1.01428 (3) obj. -7732.52 iterations 2
Cbc0038I Pass  13: suminf.    1.84452 (6) obj. -7732.52 iterations 9
Cbc0038I Pass  14: suminf.    0.50547 (2) obj. -7732.52 iterations 8
Cbc0038I Pass  15: suminf.    0.12821 (1) obj. -8390.04 iterations 2
Cbc0038I Pass  16: suminf.    0.00631 (1) obj. -7732.52 iterations 1
Cbc0038I Pass  17: suminf.    0.49083 (3) obj. -7732.52 iterations 5
Cbc0038I Pass  18: suminf.    0.15760 (2) obj. -7732.52 iterations 2
Cbc0038I Pass  19: suminf.    0.66312 (2) obj. -7732.52 iterations 2
Cbc0038I Pass  20: suminf.    0.55495 (4) obj. -7732.52 iterations 8
Cbc0038I Pass  21: suminf.    0.01818 (1) obj. -7762.21 iterations 4
Cbc0038I Pass  22: suminf.    0.00742 (1) obj. -7732.52 iterations 2
Cbc0038I Pass  23: suminf.    0.14872 (1) obj. -8494.68 iterations 1
Cbc0038I Pass  24: suminf.    3.00205 (9) obj. -7732.52 iterations 12
Cbc0038I Pass  25: suminf.    1.28539 (5) obj. -7732.52 iterations 4
Cbc0038I Pass  26: suminf.    0.09103 (1) obj. -8192.49 iterations 5
Cbc0038I Pass  27: suminf.    0.00575 (1) obj. -7732.52 iterations 1
Cbc0038I Pass  28: suminf.    1.26195 (7) obj. -7732.52 iterations 15
Cbc0038I Pass  29: suminf.    0.15455 (1) obj. -7799.53 iterations 9
Cbc0038I Solution found of -7739.5
Cbc0038I Rounding solution of -7856.5 is better than previous of -7739.5

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 39 columns, reduced to 7 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -8106.64
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.01124 (7) obj. -8106.64 iterations 1
Cbc0038I Pass  31: suminf.    0.27564 (1) obj. -9066.31 iterations 11
Cbc0038I Pass  32: suminf.    0.09773 (1) obj. -8106.64 iterations 1
Cbc0038I Pass  33: suminf.    0.60543 (3) obj. -8106.64 iterations 5
Cbc0038I Pass  34: suminf.    0.07511 (1) obj. -8106.64 iterations 3
Cbc0038I Pass  35: suminf.    0.20513 (1) obj. -8807.96 iterations 1
Cbc0038I Pass  36: suminf.    0.35849 (3) obj. -8106.64 iterations 5
Cbc0038I Pass  37: suminf.    0.13594 (2) obj. -8106.64 iterations 7
Cbc0038I Pass  38: suminf.    1.07088 (8) obj. -8106.64 iterations 12
Cbc0038I Pass  39: suminf.    0.15305 (2) obj. -8106.64 iterations 8
Cbc0038I Pass  40: suminf.    0.11538 (1) obj. -8407.88 iterations 2
Cbc0038I Pass  41: suminf.    0.05954 (1) obj. -8106.64 iterations 1
Cbc0038I Pass  42: suminf.    0.40741 (2) obj. -8106.64 iterations 4
Cbc0038I Pass  43: suminf.    0.07511 (1) obj. -8106.64 iterations 3
Cbc0038I Pass  44: suminf.    0.20513 (1) obj. -8807.96 iterations 1
Cbc0038I Pass  45: suminf.    1.80224 (5) obj. -8106.64 iterations 8
Cbc0038I Pass  46: suminf.    0.90240 (3) obj. -8106.64 iterations 2
Cbc0038I Pass  47: suminf.    0.24487 (1) obj. -8937.34 iterations 3
Cbc0038I Pass  48: suminf.    0.09087 (1) obj. -8106.64 iterations 1
Cbc0038I Pass  49: suminf.    1.20659 (4) obj. -8106.64 iterations 7
Cbc0038I Pass  50: suminf.    0.09068 (1) obj. -8106.64 iterations 4
Cbc0038I Pass  51: suminf.    0.18077 (1) obj. -8592.57 iterations 1
Cbc0038I Pass  52: suminf.    1.51267 (6) obj. -8106.64 iterations 7
Cbc0038I Pass  53: suminf.    0.82143 (3) obj. -8106.64 iterations 4
Cbc0038I Pass  54: suminf.    0.32400 (2) obj. -8106.64 iterations 1
Cbc0038I Pass  55: suminf.    0.09103 (1) obj. -8192.49 iterations 2
Cbc0038I Pass  56: suminf.    0.07511 (1) obj. -8106.64 iterations 1
Cbc0038I Pass  57: suminf.    1.44456 (4) obj. -8106.64 iterations 3
Cbc0038I Pass  58: suminf.    0.51564 (2) obj. -8106.64 iterations 2
Cbc0038I Pass  59: suminf.    0.84079 (3) obj. -8106.64 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 39 columns, reduced to 2 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -7856.5 - took 0.02 seconds
Cbc0012I Integer solution of -7856.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 3.6666667
Cbc0013I At root node, 3 cuts changed objective from -7903.2677 to -7860.3885 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7856.5, took 28 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

