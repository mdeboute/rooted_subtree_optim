Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 26 (-7) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 5.2832e-06 - average 1.17404e-07, 19 fixed columns
Coin0506I Presolve 7 (-38) rows, 6 (-20) columns and 20 (-115) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Coin0511I After Postsolve, objective 3617.3261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Coin0511I After Postsolve, objective 3617.3261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3617.326096 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 26 columns (25 integer (25 of which binary)) and 143 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.806%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.802725
Cbc0038I Pass   1: suminf.    0.32222 (1) obj. -3240.12 iterations 4
Cbc0038I Solution found of -2637.75
Cbc0038I Relaxing continuous gives -2637.75
Cbc0038I Rounding solution of -2638.75 is better than previous of -2637.75

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2736.83
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.32222 (1) obj. -3240.12 iterations 0
Cbc0038I Pass   3: suminf.    0.05560 (1) obj. -2736.83 iterations 3
Cbc0038I Pass   4: suminf.    0.45556 (1) obj. -3449.55 iterations 2
Cbc0038I Pass   5: suminf.    0.40663 (4) obj. -3276.08 iterations 6
Cbc0038I Pass   6: suminf.    0.04045 (1) obj. -2736.83 iterations 6
Cbc0038I Pass   7: suminf.    0.32500 (1) obj. -3243.9 iterations 2
Cbc0038I Pass   8: suminf.    1.05082 (4) obj. -2736.83 iterations 12
Cbc0038I Pass   9: suminf.    0.58739 (2) obj. -2736.83 iterations 7
Cbc0038I Pass  10: suminf.    0.53863 (2) obj. -2736.83 iterations 1
Cbc0038I Pass  11: suminf.    0.54094 (2) obj. -2740.96 iterations 1
Cbc0038I Pass  12: suminf.    0.54094 (2) obj. -2740.96 iterations 1
Cbc0038I Pass  13: suminf.    0.10669 (3) obj. -2736.83 iterations 8
Cbc0038I Pass  14: suminf.    0.05170 (2) obj. -2736.83 iterations 3
Cbc0038I Pass  15: suminf.    0.16250 (1) obj. -2918.1 iterations 3
Cbc0038I Pass  16: suminf.    0.05841 (1) obj. -2736.83 iterations 2
Cbc0038I Pass  17: suminf.    0.13684 (1) obj. -2876.6 iterations 1
Cbc0038I Pass  18: suminf.    0.16783 (3) obj. -2736.83 iterations 3
Cbc0038I Pass  19: suminf.    0.44762 (1) obj. -2736.83 iterations 14
Cbc0038I Pass  20: suminf.    0.37778 (1) obj. -2861.3 iterations 2
Cbc0038I Pass  21: suminf.    0.44762 (1) obj. -2736.83 iterations 1
Cbc0038I Pass  22: suminf.    0.05280 (1) obj. -2736.83 iterations 8
Cbc0038I Pass  23: suminf.    0.05280 (1) obj. -2736.83 iterations 2
Cbc0038I Pass  24: suminf.    0.07778 (1) obj. -2781.35 iterations 1
Cbc0038I Pass  25: suminf.    1.06208 (3) obj. -2736.83 iterations 5
Cbc0038I Pass  26: suminf.    0.45397 (1) obj. -2736.83 iterations 3
Cbc0038I Pass  27: suminf.    0.43750 (1) obj. -2765.75 iterations 1
Cbc0038I Pass  28: suminf.    0.96568 (3) obj. -2736.83 iterations 7
Cbc0038I Pass  29: suminf.    1.35139 (5) obj. -2736.83 iterations 10
Cbc0038I Pass  30: suminf.    0.37657 (3) obj. -2736.83 iterations 2
Cbc0038I Pass  31: suminf.    0.31266 (2) obj. -2736.83 iterations 3
Cbc0038I Rounding solution of -2665.75 is better than previous of -2638.75

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 26 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -2665.75 to -2670.75 (0.01 seconds)
Cbc0038I Round again with cutoff of -2912.93
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.32222 (1) obj. -3240.12 iterations 0
Cbc0038I Pass  32: suminf.    0.15442 (1) obj. -2912.93 iterations 3
Cbc0038I Pass  33: suminf.    0.45556 (1) obj. -3449.55 iterations 2
Cbc0038I Pass  34: suminf.    1.39915 (5) obj. -2912.93 iterations 9
Cbc0038I Pass  35: suminf.    0.67810 (2) obj. -2912.93 iterations 3
Cbc0038I Pass  36: suminf.    0.34824 (1) obj. -2912.93 iterations 5
Cbc0038I Pass  37: suminf.    0.26667 (1) obj. -3058.3 iterations 2
Cbc0038I Pass  38: suminf.    1.24321 (4) obj. -2912.93 iterations 6
Cbc0038I Pass  39: suminf.    0.65395 (4) obj. -2912.93 iterations 1
Cbc0038I Pass  40: suminf.    0.62619 (3) obj. -2912.93 iterations 1
Cbc0038I Pass  41: suminf.    0.34415 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  42: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  43: suminf.    0.28421 (1) obj. -3017.7 iterations 3
Cbc0038I Pass  44: suminf.    0.28421 (1) obj. -3017.7 iterations 2
Cbc0038I Pass  45: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  46: suminf.    1.35356 (7) obj. -2912.93 iterations 9
Cbc0038I Pass  47: suminf.    0.36360 (2) obj. -2912.93 iterations 12
Cbc0038I Pass  48: suminf.    0.15930 (2) obj. -2912.93 iterations 7
Cbc0038I Pass  49: suminf.    0.16250 (1) obj. -2918.1 iterations 1
Cbc0038I Pass  50: suminf.    1.87942 (5) obj. -2912.93 iterations 4
Cbc0038I Pass  51: suminf.    0.15723 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  52: suminf.    0.34737 (1) obj. -3251.76 iterations 1
Cbc0038I Pass  53: suminf.    0.34737 (1) obj. -3251.76 iterations 2
Cbc0038I Pass  54: suminf.    1.51724 (4) obj. -2984.47 iterations 5
Cbc0038I Pass  55: suminf.    0.62619 (3) obj. -2912.93 iterations 14
Cbc0038I Pass  56: suminf.    0.62619 (3) obj. -2912.93 iterations 2
Cbc0038I Pass  57: suminf.    0.34415 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  58: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  59: suminf.    0.56877 (4) obj. -2912.93 iterations 6
Cbc0038I Pass  60: suminf.    0.56877 (4) obj. -2912.93 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 26 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2670.75 - took 0.04 seconds
Cbc0012I Integer solution of -2670.75 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 26 columns, reduced to 10 rows 9 columns
Cbc0012I Integer solution of -2671.75 found by DiveCoefficient after 682 iterations and 0 nodes (0.08 seconds)
Cbc0031I 9 added rows had average density of 19.666667
Cbc0013I At root node, 9 cuts changed objective from -3617.3261 to -2707.1542 in 80 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 3.2 elements, 5 column cuts (5 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 146 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 91 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2671.75, took 823 iterations and 6 nodes (0.09 seconds)
Cbc0032I Strong branching done 54 times (305 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-25) rows, 44 (-18) columns and 403 (-245) elements
Clp1000I sum of infeasibilities 2.38591e-07 - average 6.11772e-09, 41 fixed columns
Coin0506I Presolve 3 (-36) rows, 3 (-41) columns and 8 (-395) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 3599.3261
Clp0000I Optimal - objective value 3599.3261
Coin0511I After Postsolve, objective 3599.3261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5437262 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 3629.1548
Clp0000I Optimal - objective value 3629.1548
Clp0000I Optimal - objective value 3629.1548
Coin0511I After Postsolve, objective 3629.1548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3629.154824 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 389 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.133%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.37821
Cbc0038I Pass   1: suminf.    0.32222 (1) obj. -3235.12 iterations 16
Cbc0038I Solution found of -2632.75
Cbc0038I Rounding solution of -2638.75 is better than previous of -2632.75

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2736.84
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.32222 (1) obj. -3235.12 iterations 0
Cbc0038I Pass   3: suminf.    0.05841 (1) obj. -2736.84 iterations 2
Cbc0038I Pass   4: suminf.    0.45556 (1) obj. -3444.55 iterations 1
Cbc0038I Pass   5: suminf.    0.14444 (1) obj. -2888.15 iterations 5
Cbc0038I Pass   6: suminf.    0.05954 (1) obj. -2736.84 iterations 2
Cbc0038I Pass   7: suminf.    0.14444 (1) obj. -2888.15 iterations 1
Cbc0038I Pass   8: suminf.    0.65637 (5) obj. -2880.83 iterations 13
Cbc0038I Pass   9: suminf.    0.56019 (5) obj. -2736.84 iterations 4
Cbc0038I Pass  10: suminf.    0.15000 (1) obj. -2903.15 iterations 5
Cbc0038I Pass  11: suminf.    0.05448 (1) obj. -2736.84 iterations 2
Cbc0038I Pass  12: suminf.    0.13333 (1) obj. -2877.35 iterations 1
Cbc0038I Pass  13: suminf.    0.78267 (8) obj. -2782.71 iterations 8
Cbc0038I Pass  14: suminf.    0.22987 (2) obj. -2736.84 iterations 8
Cbc0038I Pass  15: suminf.    0.15000 (1) obj. -2901.15 iterations 2
Cbc0038I Pass  16: suminf.    0.05561 (1) obj. -2736.84 iterations 2
Cbc0038I Pass  17: suminf.    0.13333 (1) obj. -2875.35 iterations 1
Cbc0038I Pass  18: suminf.    0.57905 (4) obj. -2736.84 iterations 9
Cbc0038I Pass  19: suminf.    0.57905 (4) obj. -2736.84 iterations 1
Cbc0038I Pass  20: suminf.    0.43920 (1) obj. -2736.84 iterations 5
Cbc0038I Pass  21: suminf.    0.30000 (1) obj. -2984.9 iterations 1
Cbc0038I Pass  22: suminf.    1.48890 (11) obj. -2936.16 iterations 16
Cbc0038I Pass  23: suminf.    1.21724 (9) obj. -2736.84 iterations 3
Cbc0038I Pass  24: suminf.    0.17500 (1) obj. -2933.6 iterations 9
Cbc0038I Pass  25: suminf.    0.06459 (1) obj. -2736.84 iterations 1
Cbc0038I Pass  26: suminf.    0.89482 (5) obj. -2736.84 iterations 14
Cbc0038I Pass  27: suminf.    0.89482 (5) obj. -2736.84 iterations 0
Cbc0038I Pass  28: suminf.    0.12500 (1) obj. -2842.25 iterations 16
Cbc0038I Pass  29: suminf.    0.06402 (1) obj. -2736.84 iterations 2
Cbc0038I Pass  30: suminf.    0.11111 (1) obj. -2820.75 iterations 1
Cbc0038I Pass  31: suminf.    1.39843 (8) obj. -2736.84 iterations 9
Cbc0038I Rounding solution of -2652.75 is better than previous of -2638.75

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -2652.75 to -2654.25 (0.02 seconds)
Cbc0038I Round again with cutoff of -2912.96
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.32222 (1) obj. -3235.12 iterations 0
Cbc0038I Pass  32: suminf.    0.15724 (1) obj. -2912.96 iterations 2
Cbc0038I Pass  33: suminf.    0.45556 (1) obj. -3444.55 iterations 1
Cbc0038I Pass  34: suminf.    0.43162 (2) obj. -3016.91 iterations 7
Cbc0038I Pass  35: suminf.    0.43162 (2) obj. -3016.91 iterations 1
Cbc0038I Pass  36: suminf.    0.34626 (1) obj. -2912.96 iterations 2
Cbc0038I Pass  37: suminf.    0.28889 (1) obj. -3015.2 iterations 1
Cbc0038I Pass  38: suminf.    0.62820 (5) obj. -2912.96 iterations 12
Cbc0038I Pass  39: suminf.    0.62820 (5) obj. -2912.96 iterations 1
Cbc0038I Pass  40: suminf.    0.23894 (3) obj. -2912.96 iterations 7
Cbc0038I Pass  41: suminf.    0.80502 (2) obj. -3208.15 iterations 3
Cbc0038I Pass  42: suminf.    0.61024 (2) obj. -2912.96 iterations 1
Cbc0038I Pass  43: suminf.    0.26250 (1) obj. -3035.55 iterations 2
Cbc0038I Pass  44: suminf.    0.39118 (2) obj. -2912.96 iterations 2
Cbc0038I Pass  45: suminf.    0.35470 (2) obj. -2912.96 iterations 1
Cbc0038I Pass  46: suminf.    0.34206 (1) obj. -2912.96 iterations 1
Cbc0038I Pass  47: suminf.    0.16250 (1) obj. -3232.93 iterations 1
Cbc0038I Pass  48: suminf.    0.52398 (3) obj. -2913.52 iterations 6
Cbc0038I Pass  49: suminf.    0.35824 (2) obj. -2912.96 iterations 4
Cbc0038I Pass  50: suminf.    0.34747 (2) obj. -2912.96 iterations 1
Cbc0038I Pass  51: suminf.    0.34374 (1) obj. -2912.96 iterations 1
Cbc0038I Pass  52: suminf.    0.16250 (1) obj. -3235.93 iterations 1
Cbc0038I Pass  53: suminf.    1.65262 (8) obj. -2912.96 iterations 8
Cbc0038I Pass  54: suminf.    1.28351 (7) obj. -2912.96 iterations 3
Cbc0038I Pass  55: suminf.    1.28351 (7) obj. -2912.96 iterations 0
Cbc0038I Pass  56: suminf.    0.62612 (2) obj. -2912.96 iterations 6
Cbc0038I Pass  57: suminf.    0.62612 (2) obj. -2912.96 iterations 0
Cbc0038I Pass  58: suminf.    0.45361 (2) obj. -3028.02 iterations 2
Cbc0038I Pass  59: suminf.    0.15893 (1) obj. -2912.96 iterations 2
Cbc0038I Pass  60: suminf.    0.24444 (1) obj. -3065.35 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2654.25 - took 0.02 seconds
Cbc0012I Integer solution of -2654.25 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 14 rows 12 columns
Cbc0031I 16 added rows had average density of 22.75
Cbc0013I At root node, 16 cuts changed objective from -3617.4147 to -2696.9621 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1251 row cuts average 3.6 elements, 10 column cuts (10 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 518 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 94 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 65 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 288 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -2665.75 found by rounding after 1830 iterations and 2 nodes (0.19 seconds)
Cbc0012I Integer solution of -2671.75 found by DiveCoefficient after 2101 iterations and 3 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -2671.75, took 2168 iterations and 6 nodes (0.23 seconds)
Cbc0032I Strong branching done 110 times (948 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 26 (-7) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 5.2832e-06 - average 1.17404e-07, 19 fixed columns
Coin0506I Presolve 7 (-38) rows, 6 (-20) columns and 20 (-115) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Coin0511I After Postsolve, objective 3617.3261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Coin0511I After Postsolve, objective 3617.3261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3617.326096 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 26 columns (25 integer (25 of which binary)) and 143 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.806%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.802725
Cbc0038I Pass   1: suminf.    0.32222 (1) obj. -3240.12 iterations 4
Cbc0038I Solution found of -2637.75
Cbc0038I Relaxing continuous gives -2637.75
Cbc0038I Rounding solution of -2638.75 is better than previous of -2637.75

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2736.83
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.32222 (1) obj. -3240.12 iterations 0
Cbc0038I Pass   3: suminf.    0.05560 (1) obj. -2736.83 iterations 3
Cbc0038I Pass   4: suminf.    0.45556 (1) obj. -3449.55 iterations 2
Cbc0038I Pass   5: suminf.    0.40663 (4) obj. -3276.08 iterations 6
Cbc0038I Pass   6: suminf.    0.04045 (1) obj. -2736.83 iterations 6
Cbc0038I Pass   7: suminf.    0.32500 (1) obj. -3243.9 iterations 2
Cbc0038I Pass   8: suminf.    1.05082 (4) obj. -2736.83 iterations 12
Cbc0038I Pass   9: suminf.    0.58739 (2) obj. -2736.83 iterations 7
Cbc0038I Pass  10: suminf.    0.53863 (2) obj. -2736.83 iterations 1
Cbc0038I Pass  11: suminf.    0.54094 (2) obj. -2740.96 iterations 1
Cbc0038I Pass  12: suminf.    0.54094 (2) obj. -2740.96 iterations 1
Cbc0038I Pass  13: suminf.    0.10669 (3) obj. -2736.83 iterations 8
Cbc0038I Pass  14: suminf.    0.05170 (2) obj. -2736.83 iterations 3
Cbc0038I Pass  15: suminf.    0.16250 (1) obj. -2918.1 iterations 3
Cbc0038I Pass  16: suminf.    0.05841 (1) obj. -2736.83 iterations 2
Cbc0038I Pass  17: suminf.    0.13684 (1) obj. -2876.6 iterations 1
Cbc0038I Pass  18: suminf.    0.16783 (3) obj. -2736.83 iterations 3
Cbc0038I Pass  19: suminf.    0.44762 (1) obj. -2736.83 iterations 14
Cbc0038I Pass  20: suminf.    0.37778 (1) obj. -2861.3 iterations 2
Cbc0038I Pass  21: suminf.    0.44762 (1) obj. -2736.83 iterations 1
Cbc0038I Pass  22: suminf.    0.05280 (1) obj. -2736.83 iterations 8
Cbc0038I Pass  23: suminf.    0.05280 (1) obj. -2736.83 iterations 2
Cbc0038I Pass  24: suminf.    0.07778 (1) obj. -2781.35 iterations 1
Cbc0038I Pass  25: suminf.    1.06208 (3) obj. -2736.83 iterations 5
Cbc0038I Pass  26: suminf.    0.45397 (1) obj. -2736.83 iterations 3
Cbc0038I Pass  27: suminf.    0.43750 (1) obj. -2765.75 iterations 1
Cbc0038I Pass  28: suminf.    0.96568 (3) obj. -2736.83 iterations 7
Cbc0038I Pass  29: suminf.    1.35139 (5) obj. -2736.83 iterations 10
Cbc0038I Pass  30: suminf.    0.37657 (3) obj. -2736.83 iterations 2
Cbc0038I Pass  31: suminf.    0.31266 (2) obj. -2736.83 iterations 3
Cbc0038I Rounding solution of -2665.75 is better than previous of -2638.75

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 26 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -2665.75 to -2670.75 (0.01 seconds)
Cbc0038I Round again with cutoff of -2912.93
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.32222 (1) obj. -3240.12 iterations 0
Cbc0038I Pass  32: suminf.    0.15442 (1) obj. -2912.93 iterations 3
Cbc0038I Pass  33: suminf.    0.45556 (1) obj. -3449.55 iterations 2
Cbc0038I Pass  34: suminf.    1.39915 (5) obj. -2912.93 iterations 9
Cbc0038I Pass  35: suminf.    0.67810 (2) obj. -2912.93 iterations 3
Cbc0038I Pass  36: suminf.    0.34824 (1) obj. -2912.93 iterations 5
Cbc0038I Pass  37: suminf.    0.26667 (1) obj. -3058.3 iterations 2
Cbc0038I Pass  38: suminf.    1.24321 (4) obj. -2912.93 iterations 6
Cbc0038I Pass  39: suminf.    0.65395 (4) obj. -2912.93 iterations 1
Cbc0038I Pass  40: suminf.    0.62619 (3) obj. -2912.93 iterations 1
Cbc0038I Pass  41: suminf.    0.34415 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  42: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  43: suminf.    0.28421 (1) obj. -3017.7 iterations 3
Cbc0038I Pass  44: suminf.    0.28421 (1) obj. -3017.7 iterations 2
Cbc0038I Pass  45: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  46: suminf.    1.35356 (7) obj. -2912.93 iterations 9
Cbc0038I Pass  47: suminf.    0.36360 (2) obj. -2912.93 iterations 12
Cbc0038I Pass  48: suminf.    0.15930 (2) obj. -2912.93 iterations 7
Cbc0038I Pass  49: suminf.    0.16250 (1) obj. -2918.1 iterations 1
Cbc0038I Pass  50: suminf.    1.87942 (5) obj. -2912.93 iterations 4
Cbc0038I Pass  51: suminf.    0.15723 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  52: suminf.    0.34737 (1) obj. -3251.76 iterations 1
Cbc0038I Pass  53: suminf.    0.34737 (1) obj. -3251.76 iterations 2
Cbc0038I Pass  54: suminf.    1.51724 (4) obj. -2984.47 iterations 5
Cbc0038I Pass  55: suminf.    0.62619 (3) obj. -2912.93 iterations 14
Cbc0038I Pass  56: suminf.    0.62619 (3) obj. -2912.93 iterations 2
Cbc0038I Pass  57: suminf.    0.34415 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  58: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  59: suminf.    0.56877 (4) obj. -2912.93 iterations 6
Cbc0038I Pass  60: suminf.    0.56877 (4) obj. -2912.93 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 26 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2670.75 - took 0.02 seconds
Cbc0012I Integer solution of -2670.75 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 26 columns, reduced to 10 rows 9 columns
Cbc0012I Integer solution of -2671.75 found by DiveCoefficient after 682 iterations and 0 nodes (0.09 seconds)
Cbc0031I 9 added rows had average density of 19.666667
Cbc0013I At root node, 9 cuts changed objective from -3617.3261 to -2707.1542 in 80 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 3.2 elements, 5 column cuts (5 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 146 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 91 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2671.75, took 823 iterations and 6 nodes (0.10 seconds)
Cbc0032I Strong branching done 54 times (305 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-28) rows, 42 (-21) columns and 368 (-281) elements
Clp1000I sum of infeasibilities 8.72031e-10 - average 2.35684e-11, 39 fixed columns
Coin0506I Presolve 3 (-34) rows, 3 (-39) columns and 8 (-360) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 3599.3261
Clp0000I Optimal - objective value 3599.3261
Coin0511I After Postsolve, objective 3599.3261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.544927 - largest nonzero change 0 ( 0%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 3629.1548
Clp0000I Optimal - objective value 3629.1548
Clp0000I Optimal - objective value 3629.1548
Coin0511I After Postsolve, objective 3629.1548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3629.154824 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 389 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.133%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.39668
Cbc0038I Pass   1: suminf.    0.32222 (1) obj. -3235.12 iterations 16
Cbc0038I Solution found of -2632.75
Cbc0038I Rounding solution of -2638.75 is better than previous of -2632.75

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2736.85
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.32222 (1) obj. -3235.12 iterations 0
Cbc0038I Pass   3: suminf.    0.05841 (1) obj. -2736.85 iterations 2
Cbc0038I Pass   4: suminf.    0.45556 (1) obj. -3444.55 iterations 1
Cbc0038I Pass   5: suminf.    0.14444 (1) obj. -2888.15 iterations 5
Cbc0038I Pass   6: suminf.    0.05954 (1) obj. -2736.85 iterations 2
Cbc0038I Pass   7: suminf.    0.14444 (1) obj. -2888.15 iterations 1
Cbc0038I Pass   8: suminf.    0.71019 (5) obj. -2880.77 iterations 13
Cbc0038I Pass   9: suminf.    0.61237 (5) obj. -2736.85 iterations 4
Cbc0038I Pass  10: suminf.    0.15000 (1) obj. -2903.15 iterations 5
Cbc0038I Pass  11: suminf.    0.05449 (1) obj. -2736.85 iterations 2
Cbc0038I Pass  12: suminf.    0.13333 (1) obj. -2877.35 iterations 1
Cbc0038I Pass  13: suminf.    0.80119 (8) obj. -2782.69 iterations 8
Cbc0038I Pass  14: suminf.    0.24645 (2) obj. -2736.85 iterations 8
Cbc0038I Pass  15: suminf.    0.15000 (1) obj. -2901.15 iterations 2
Cbc0038I Pass  16: suminf.    0.05561 (1) obj. -2736.85 iterations 2
Cbc0038I Pass  17: suminf.    0.13333 (1) obj. -2875.35 iterations 1
Cbc0038I Pass  18: suminf.    0.60381 (4) obj. -2736.85 iterations 9
Cbc0038I Pass  19: suminf.    0.60381 (4) obj. -2736.85 iterations 1
Cbc0038I Pass  20: suminf.    0.43920 (1) obj. -2736.85 iterations 5
Cbc0038I Pass  21: suminf.    0.30000 (1) obj. -2984.9 iterations 1
Cbc0038I Pass  22: suminf.    1.58495 (11) obj. -2936.01 iterations 16
Cbc0038I Pass  23: suminf.    1.30914 (9) obj. -2736.85 iterations 3
Cbc0038I Pass  24: suminf.    0.17500 (1) obj. -2933.6 iterations 9
Cbc0038I Pass  25: suminf.    0.06459 (1) obj. -2736.85 iterations 1
Cbc0038I Pass  26: suminf.    0.92367 (5) obj. -2736.85 iterations 14
Cbc0038I Pass  27: suminf.    0.92367 (5) obj. -2736.85 iterations 0
Cbc0038I Pass  28: suminf.    0.12500 (1) obj. -2842.25 iterations 12
Cbc0038I Pass  29: suminf.    0.06403 (1) obj. -2736.85 iterations 2
Cbc0038I Pass  30: suminf.    0.11111 (1) obj. -2820.75 iterations 1
Cbc0038I Pass  31: suminf.    1.41676 (8) obj. -2736.85 iterations 9
Cbc0038I Rounding solution of -2652.75 is better than previous of -2638.75

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -2652.75 to -2654.25 (0.03 seconds)
Cbc0038I Round again with cutoff of -2912.97
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.32222 (1) obj. -3235.12 iterations 0
Cbc0038I Pass  32: suminf.    0.15725 (1) obj. -2912.97 iterations 2
Cbc0038I Pass  33: suminf.    0.45556 (1) obj. -3444.55 iterations 1
Cbc0038I Pass  34: suminf.    0.44352 (2) obj. -3016.89 iterations 7
Cbc0038I Pass  35: suminf.    0.44352 (2) obj. -3016.89 iterations 1
Cbc0038I Pass  36: suminf.    0.34626 (1) obj. -2912.97 iterations 2
Cbc0038I Pass  37: suminf.    0.28889 (1) obj. -3015.2 iterations 1
Cbc0038I Pass  38: suminf.    0.64380 (5) obj. -2912.97 iterations 12
Cbc0038I Pass  39: suminf.    0.64380 (5) obj. -2912.97 iterations 1
Cbc0038I Pass  40: suminf.    0.23897 (3) obj. -2912.97 iterations 7
Cbc0038I Pass  41: suminf.    0.80502 (2) obj. -3208.15 iterations 3
Cbc0038I Pass  42: suminf.    0.61025 (2) obj. -2912.97 iterations 1
Cbc0038I Pass  43: suminf.    0.26250 (1) obj. -3035.55 iterations 2
Cbc0038I Pass  44: suminf.    0.39130 (2) obj. -2912.97 iterations 2
Cbc0038I Pass  45: suminf.    0.35473 (2) obj. -2912.97 iterations 1
Cbc0038I Pass  46: suminf.    0.34205 (1) obj. -2912.97 iterations 1
Cbc0038I Pass  47: suminf.    0.16250 (1) obj. -3232.92 iterations 1
Cbc0038I Pass  48: suminf.    0.54389 (3) obj. -2913.5 iterations 6
Cbc0038I Pass  49: suminf.    0.35835 (2) obj. -2912.97 iterations 4
Cbc0038I Pass  50: suminf.    0.34750 (2) obj. -2912.97 iterations 1
Cbc0038I Pass  51: suminf.    0.34373 (1) obj. -2912.97 iterations 1
Cbc0038I Pass  52: suminf.    0.16250 (1) obj. -3235.92 iterations 1
Cbc0038I Pass  53: suminf.    1.69998 (8) obj. -2912.97 iterations 8
Cbc0038I Pass  54: suminf.    1.33060 (7) obj. -2912.97 iterations 3
Cbc0038I Pass  55: suminf.    1.33060 (7) obj. -2912.97 iterations 0
Cbc0038I Pass  56: suminf.    0.62616 (2) obj. -2912.97 iterations 6
Cbc0038I Pass  57: suminf.    0.62616 (2) obj. -2912.97 iterations 0
Cbc0038I Pass  58: suminf.    0.45361 (2) obj. -3028.02 iterations 2
Cbc0038I Pass  59: suminf.    0.15893 (1) obj. -2912.97 iterations 2
Cbc0038I Pass  60: suminf.    0.24444 (1) obj. -3065.35 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2654.25 - took 0.02 seconds
Cbc0012I Integer solution of -2654.25 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 14 rows 12 columns
Cbc0031I 16 added rows had average density of 13.125
Cbc0013I At root node, 16 cuts changed objective from -3617.4526 to -2680.0427 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 777 row cuts average 3.5 elements, 10 column cuts (10 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 469 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 37 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 18 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 162 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -2665.75 found by DiveCoefficient after 1460 iterations and 2 nodes (0.21 seconds)
Cbc0012I Integer solution of -2671.75 found by DiveCoefficient after 1484 iterations and 2 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -2671.75, took 1666 iterations and 10 nodes (0.24 seconds)
Cbc0032I Strong branching done 122 times (936 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.24

