Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 3.92297e-06 - average 1.12085e-07, 2 fixed columns
Coin0506I Presolve 32 (-3) rows, 20 (-2) columns and 97 (-10) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Coin0511I After Postsolve, objective 54.033671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Coin0511I After Postsolve, objective 54.033671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.03367101 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.39804
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -17.5009 iterations 18
Cbc0038I Solution found of -17.5009
Cbc0038I Relaxing continuous gives -17.5009
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -17.5009 to -21.7635 (0.01 seconds)
Cbc0038I Round again with cutoff of -24.898
Cbc0038I Pass   2: suminf.    0.42069 (2) obj. -24.898 iterations 2
Cbc0038I Pass   3: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass   4: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass   5: suminf.    0.51947 (3) obj. -24.898 iterations 4
Cbc0038I Pass   6: suminf.    0.24174 (1) obj. -24.898 iterations 2
Cbc0038I Pass   7: suminf.    0.13448 (1) obj. -24.898 iterations 2
Cbc0038I Pass   8: suminf.    0.42069 (2) obj. -24.898 iterations 3
Cbc0038I Pass   9: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass  10: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass  11: suminf.    0.75417 (2) obj. -24.898 iterations 5
Cbc0038I Pass  12: suminf.    0.75417 (2) obj. -24.898 iterations 1
Cbc0038I Pass  13: suminf.    0.56129 (3) obj. -24.898 iterations 6
Cbc0038I Pass  14: suminf.    0.51394 (3) obj. -24.898 iterations 2
Cbc0038I Pass  15: suminf.    0.42069 (2) obj. -24.898 iterations 4
Cbc0038I Pass  16: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass  17: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass  18: suminf.    0.21396 (1) obj. -24.898 iterations 0
Cbc0038I Pass  19: suminf.    2.59165 (8) obj. -24.898 iterations 8
Cbc0038I Pass  20: suminf.    1.49467 (5) obj. -24.898 iterations 3
Cbc0038I Pass  21: suminf.    1.49467 (5) obj. -24.898 iterations 0
Cbc0038I Pass  22: suminf.    1.43645 (4) obj. -24.898 iterations 8
Cbc0038I Pass  23: suminf.    1.43645 (4) obj. -24.898 iterations 0
Cbc0038I Pass  24: suminf.    0.76087 (3) obj. -24.898 iterations 3
Cbc0038I Pass  25: suminf.    0.70310 (3) obj. -24.898 iterations 3
Cbc0038I Pass  26: suminf.    0.77049 (4) obj. -24.898 iterations 4
Cbc0038I Pass  27: suminf.    0.72573 (4) obj. -24.898 iterations 2
Cbc0038I Pass  28: suminf.    1.10518 (4) obj. -24.898 iterations 9
Cbc0038I Pass  29: suminf.    0.39716 (2) obj. -24.898 iterations 5
Cbc0038I Pass  30: suminf.    0.39716 (2) obj. -24.898 iterations 1
Cbc0038I Pass  31: suminf.    0.42069 (2) obj. -24.898 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -21.7635 - took 0.02 seconds
Cbc0012I Integer solution of -21.76346 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 22 rows 14 columns
Cbc0031I 12 added rows had average density of 16.416667
Cbc0013I At root node, 12 cuts changed objective from -53.108308 to -35.749659 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1004 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 507 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -21.76345999999999, took 1891 iterations and 12 nodes (0.15 seconds)
Cbc0032I Strong branching done 104 times (975 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-15) rows, 38 (-6) columns and 250 (-110) elements
Clp1000I sum of infeasibilities 1.3733e-09 - average 4.42999e-11, 7 fixed columns
Coin0506I Presolve 25 (-6) rows, 31 (-7) columns and 174 (-76) elements
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 1.1337932 - largest nonzero change 1.5247086e-05 ( 0.0010932318%) - largest zero change 2.5873332e-05
Clp0000I Optimal - objective value 65.349323
Clp0000I Optimal - objective value 65.349323
Coin0511I After Postsolve, objective 65.349323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.349323
Clp0000I Optimal - objective value 65.349323
Clp0000I Optimal - objective value 65.349323
Coin0511I After Postsolve, objective 65.349323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.34932305 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 38 columns (38 integer (38 of which binary)) and 251 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.621%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.76615
Cbc0038I Pass   1: suminf.    1.25865 (9) obj. -43.2025 iterations 13
Cbc0038I Pass   2: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Solution found of -19.093
Cbc0038I Rounding solution of -20.9363 is better than previous of -19.093

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24.0799
Cbc0038I Pass   3: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Pass   4: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Pass   5: suminf.    0.41768 (3) obj. -24.0799 iterations 15
Cbc0038I Pass   6: suminf.    0.37500 (2) obj. -24.3683 iterations 5
Cbc0038I Pass   7: suminf.    0.37500 (2) obj. -24.3683 iterations 0
Cbc0038I Pass   8: suminf.    0.39915 (2) obj. -24.0799 iterations 3
Cbc0038I Pass   9: suminf.    0.92628 (5) obj. -28.917 iterations 9
Cbc0038I Pass  10: suminf.    0.92628 (5) obj. -28.917 iterations 0
Cbc0038I Pass  11: suminf.    0.49360 (3) obj. -24.0799 iterations 6
Cbc0038I Pass  12: suminf.    0.46824 (4) obj. -24.0799 iterations 2
Cbc0038I Pass  13: suminf.    1.31410 (7) obj. -24.0799 iterations 6
Cbc0038I Pass  14: suminf.    1.31410 (7) obj. -24.0799 iterations 0
Cbc0038I Pass  15: suminf.    1.32091 (4) obj. -24.0799 iterations 5
Cbc0038I Pass  16: suminf.    0.98148 (3) obj. -24.0799 iterations 1
Cbc0038I Pass  17: suminf.    0.76433 (3) obj. -25.3827 iterations 1
Cbc0038I Pass  18: suminf.    1.42023 (4) obj. -24.0799 iterations 5
Cbc0038I Pass  19: suminf.    1.97974 (6) obj. -24.0799 iterations 8
Cbc0038I Pass  20: suminf.    1.04576 (5) obj. -24.0799 iterations 6
Cbc0038I Pass  21: suminf.    1.64127 (6) obj. -24.0799 iterations 9
Cbc0038I Pass  22: suminf.    1.03898 (3) obj. -24.0799 iterations 4
Cbc0038I Pass  23: suminf.    0.88816 (3) obj. -24.9848 iterations 1
Cbc0038I Pass  24: suminf.    1.54531 (5) obj. -24.0799 iterations 6
Cbc0038I Pass  25: suminf.    0.93817 (3) obj. -24.0799 iterations 4
Cbc0038I Pass  26: suminf.    0.93817 (3) obj. -24.0799 iterations 0
Cbc0038I Pass  27: suminf.    0.88878 (5) obj. -24.0799 iterations 4
Cbc0038I Pass  28: suminf.    0.77420 (3) obj. -24.0799 iterations 2
Cbc0038I Pass  29: suminf.    1.08126 (5) obj. -24.0799 iterations 3
Cbc0038I Pass  30: suminf.    1.00936 (5) obj. -24.0799 iterations 7
Cbc0038I Pass  31: suminf.    1.00936 (5) obj. -24.0799 iterations 1
Cbc0038I Pass  32: suminf.    0.91799 (4) obj. -24.0799 iterations 7
Cbc0038I Rounding solution of -21.7635 is better than previous of -20.9363

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29.7381
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Pass  33: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Pass  34: suminf.    1.17874 (6) obj. -29.7381 iterations 16
Cbc0038I Pass  35: suminf.    0.97495 (5) obj. -29.7381 iterations 10
Cbc0038I Pass  36: suminf.    0.95477 (5) obj. -29.7381 iterations 1
Cbc0038I Pass  37: suminf.    1.82716 (6) obj. -29.7381 iterations 10
Cbc0038I Pass  38: suminf.    1.73886 (6) obj. -29.7381 iterations 2
Cbc0038I Pass  39: suminf.    1.66551 (6) obj. -29.7381 iterations 4
Cbc0038I Pass  40: suminf.    1.34592 (6) obj. -29.7381 iterations 1
Cbc0038I Pass  41: suminf.    1.34592 (6) obj. -29.7381 iterations 0
Cbc0038I Pass  42: suminf.    1.66551 (6) obj. -29.7381 iterations 3
Cbc0038I Pass  43: suminf.    2.86393 (10) obj. -29.7381 iterations 9
Cbc0038I Pass  44: suminf.    2.34492 (9) obj. -29.7381 iterations 3
Cbc0038I Pass  45: suminf.    1.75432 (6) obj. -29.7381 iterations 9
Cbc0038I Pass  46: suminf.    1.68524 (5) obj. -29.7381 iterations 1
Cbc0038I Pass  47: suminf.    1.55466 (6) obj. -29.7381 iterations 2
Cbc0038I Pass  48: suminf.    1.53818 (5) obj. -29.7381 iterations 1
Cbc0038I Pass  49: suminf.    1.69971 (6) obj. -29.7381 iterations 3
Cbc0038I Pass  50: suminf.    2.41023 (9) obj. -29.7381 iterations 11
Cbc0038I Pass  51: suminf.    2.30392 (10) obj. -29.7381 iterations 2
Cbc0038I Pass  52: suminf.    1.27615 (5) obj. -29.7381 iterations 6
Cbc0038I Pass  53: suminf.    1.24090 (6) obj. -29.7381 iterations 3
Cbc0038I Pass  54: suminf.    1.29811 (6) obj. -29.7381 iterations 1
Cbc0038I Pass  55: suminf.    1.29811 (6) obj. -29.7381 iterations 1
Cbc0038I Pass  56: suminf.    1.24090 (6) obj. -29.7381 iterations 3
Cbc0038I Pass  57: suminf.    4.10808 (12) obj. -29.7381 iterations 12
Cbc0038I Pass  58: suminf.    2.86866 (10) obj. -29.7381 iterations 3
Cbc0038I Pass  59: suminf.    1.81280 (9) obj. -29.7381 iterations 3
Cbc0038I Pass  60: suminf.    1.53110 (8) obj. -29.7381 iterations 5
Cbc0038I Pass  61: suminf.    1.61516 (6) obj. -29.7381 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 9 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -21.7635 - took 0.02 seconds
Cbc0012I Integer solution of -21.76346 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 38 columns, reduced to 7 rows 9 columns
Cbc0031I 15 added rows had average density of 15.733333
Cbc0013I At root node, 15 cuts changed objective from -52.370968 to -25.538885 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1447 row cuts average 3.4 elements, 9 column cuts (9 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 545 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 92 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 288 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 112 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.819 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.76346 best solution, best possible -25.538885 (1.60 seconds)
Cbc0001I Search completed - best objective -21.76345999999999, took 1719 iterations and 4 nodes (1.85 seconds)
Cbc0032I Strong branching done 60 times (504 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.20   (Wallclock seconds):       1.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 3.92297e-06 - average 1.12085e-07, 2 fixed columns
Coin0506I Presolve 32 (-3) rows, 20 (-2) columns and 97 (-10) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Coin0511I After Postsolve, objective 54.033671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Coin0511I After Postsolve, objective 54.033671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.03367101 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.39804
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -17.5009 iterations 18
Cbc0038I Solution found of -17.5009
Cbc0038I Relaxing continuous gives -17.5009
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -17.5009 to -21.7635 (0.01 seconds)
Cbc0038I Round again with cutoff of -24.898
Cbc0038I Pass   2: suminf.    0.42069 (2) obj. -24.898 iterations 2
Cbc0038I Pass   3: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass   4: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass   5: suminf.    0.51947 (3) obj. -24.898 iterations 4
Cbc0038I Pass   6: suminf.    0.24174 (1) obj. -24.898 iterations 2
Cbc0038I Pass   7: suminf.    0.13448 (1) obj. -24.898 iterations 2
Cbc0038I Pass   8: suminf.    0.42069 (2) obj. -24.898 iterations 3
Cbc0038I Pass   9: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass  10: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass  11: suminf.    0.75417 (2) obj. -24.898 iterations 5
Cbc0038I Pass  12: suminf.    0.75417 (2) obj. -24.898 iterations 1
Cbc0038I Pass  13: suminf.    0.56129 (3) obj. -24.898 iterations 6
Cbc0038I Pass  14: suminf.    0.51394 (3) obj. -24.898 iterations 2
Cbc0038I Pass  15: suminf.    0.42069 (2) obj. -24.898 iterations 4
Cbc0038I Pass  16: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass  17: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass  18: suminf.    0.21396 (1) obj. -24.898 iterations 0
Cbc0038I Pass  19: suminf.    2.59165 (8) obj. -24.898 iterations 8
Cbc0038I Pass  20: suminf.    1.49467 (5) obj. -24.898 iterations 3
Cbc0038I Pass  21: suminf.    1.49467 (5) obj. -24.898 iterations 0
Cbc0038I Pass  22: suminf.    1.43645 (4) obj. -24.898 iterations 8
Cbc0038I Pass  23: suminf.    1.43645 (4) obj. -24.898 iterations 0
Cbc0038I Pass  24: suminf.    0.76087 (3) obj. -24.898 iterations 3
Cbc0038I Pass  25: suminf.    0.70310 (3) obj. -24.898 iterations 3
Cbc0038I Pass  26: suminf.    0.77049 (4) obj. -24.898 iterations 4
Cbc0038I Pass  27: suminf.    0.72573 (4) obj. -24.898 iterations 2
Cbc0038I Pass  28: suminf.    1.10518 (4) obj. -24.898 iterations 9
Cbc0038I Pass  29: suminf.    0.39716 (2) obj. -24.898 iterations 5
Cbc0038I Pass  30: suminf.    0.39716 (2) obj. -24.898 iterations 1
Cbc0038I Pass  31: suminf.    0.42069 (2) obj. -24.898 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -21.7635 - took 0.03 seconds
Cbc0012I Integer solution of -21.76346 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 22 rows 14 columns
Cbc0031I 12 added rows had average density of 16.416667
Cbc0013I At root node, 12 cuts changed objective from -53.108308 to -35.749659 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1004 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 507 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -21.76345999999999, took 1891 iterations and 12 nodes (0.15 seconds)
Cbc0032I Strong branching done 104 times (975 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 38 (-7) columns and 250 (-111) elements
Clp1000I sum of infeasibilities 1.3733e-09 - average 4.42999e-11, 7 fixed columns
Coin0506I Presolve 25 (-6) rows, 31 (-7) columns and 174 (-76) elements
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 1.1337932 - largest nonzero change 1.5247086e-05 ( 0.0010932318%) - largest zero change 2.5873332e-05
Clp0000I Optimal - objective value 65.349323
Clp0000I Optimal - objective value 65.349323
Coin0511I After Postsolve, objective 65.349323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.349323
Clp0000I Optimal - objective value 65.349323
Clp0000I Optimal - objective value 65.349323
Coin0511I After Postsolve, objective 65.349323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.34932305 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 38 columns (38 integer (38 of which binary)) and 251 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.621%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.76615
Cbc0038I Pass   1: suminf.    1.25865 (9) obj. -43.2025 iterations 13
Cbc0038I Pass   2: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Solution found of -19.093
Cbc0038I Rounding solution of -20.9363 is better than previous of -19.093

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24.0799
Cbc0038I Pass   3: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Pass   4: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Pass   5: suminf.    0.41768 (3) obj. -24.0799 iterations 15
Cbc0038I Pass   6: suminf.    0.37500 (2) obj. -24.3683 iterations 5
Cbc0038I Pass   7: suminf.    0.37500 (2) obj. -24.3683 iterations 0
Cbc0038I Pass   8: suminf.    0.39915 (2) obj. -24.0799 iterations 3
Cbc0038I Pass   9: suminf.    0.92628 (5) obj. -28.917 iterations 9
Cbc0038I Pass  10: suminf.    0.92628 (5) obj. -28.917 iterations 0
Cbc0038I Pass  11: suminf.    0.49360 (3) obj. -24.0799 iterations 6
Cbc0038I Pass  12: suminf.    0.46824 (4) obj. -24.0799 iterations 2
Cbc0038I Pass  13: suminf.    1.31410 (7) obj. -24.0799 iterations 6
Cbc0038I Pass  14: suminf.    1.31410 (7) obj. -24.0799 iterations 0
Cbc0038I Pass  15: suminf.    1.32091 (4) obj. -24.0799 iterations 5
Cbc0038I Pass  16: suminf.    0.98148 (3) obj. -24.0799 iterations 1
Cbc0038I Pass  17: suminf.    0.76433 (3) obj. -25.3827 iterations 1
Cbc0038I Pass  18: suminf.    1.42023 (4) obj. -24.0799 iterations 5
Cbc0038I Pass  19: suminf.    1.97974 (6) obj. -24.0799 iterations 8
Cbc0038I Pass  20: suminf.    1.04576 (5) obj. -24.0799 iterations 6
Cbc0038I Pass  21: suminf.    1.64127 (6) obj. -24.0799 iterations 9
Cbc0038I Pass  22: suminf.    1.03898 (3) obj. -24.0799 iterations 4
Cbc0038I Pass  23: suminf.    0.88816 (3) obj. -24.9848 iterations 1
Cbc0038I Pass  24: suminf.    1.54531 (5) obj. -24.0799 iterations 6
Cbc0038I Pass  25: suminf.    0.93817 (3) obj. -24.0799 iterations 4
Cbc0038I Pass  26: suminf.    0.93817 (3) obj. -24.0799 iterations 0
Cbc0038I Pass  27: suminf.    0.88878 (5) obj. -24.0799 iterations 4
Cbc0038I Pass  28: suminf.    0.77420 (3) obj. -24.0799 iterations 2
Cbc0038I Pass  29: suminf.    1.08126 (5) obj. -24.0799 iterations 3
Cbc0038I Pass  30: suminf.    1.00936 (5) obj. -24.0799 iterations 7
Cbc0038I Pass  31: suminf.    1.00936 (5) obj. -24.0799 iterations 1
Cbc0038I Pass  32: suminf.    0.91799 (4) obj. -24.0799 iterations 7
Cbc0038I Rounding solution of -21.7635 is better than previous of -20.9363

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29.7381
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Pass  33: suminf.    1.25865 (9) obj. -43.2025 iterations 0
Cbc0038I Pass  34: suminf.    1.17874 (6) obj. -29.7381 iterations 16
Cbc0038I Pass  35: suminf.    0.97495 (5) obj. -29.7381 iterations 10
Cbc0038I Pass  36: suminf.    0.95477 (5) obj. -29.7381 iterations 1
Cbc0038I Pass  37: suminf.    1.82716 (6) obj. -29.7381 iterations 10
Cbc0038I Pass  38: suminf.    1.73886 (6) obj. -29.7381 iterations 2
Cbc0038I Pass  39: suminf.    1.66551 (6) obj. -29.7381 iterations 4
Cbc0038I Pass  40: suminf.    1.34592 (6) obj. -29.7381 iterations 1
Cbc0038I Pass  41: suminf.    1.34592 (6) obj. -29.7381 iterations 0
Cbc0038I Pass  42: suminf.    1.66551 (6) obj. -29.7381 iterations 3
Cbc0038I Pass  43: suminf.    2.86393 (10) obj. -29.7381 iterations 9
Cbc0038I Pass  44: suminf.    2.34492 (9) obj. -29.7381 iterations 3
Cbc0038I Pass  45: suminf.    1.75432 (6) obj. -29.7381 iterations 9
Cbc0038I Pass  46: suminf.    1.68524 (5) obj. -29.7381 iterations 1
Cbc0038I Pass  47: suminf.    1.55466 (6) obj. -29.7381 iterations 2
Cbc0038I Pass  48: suminf.    1.53818 (5) obj. -29.7381 iterations 1
Cbc0038I Pass  49: suminf.    1.69971 (6) obj. -29.7381 iterations 3
Cbc0038I Pass  50: suminf.    2.41023 (9) obj. -29.7381 iterations 11
Cbc0038I Pass  51: suminf.    2.30392 (10) obj. -29.7381 iterations 2
Cbc0038I Pass  52: suminf.    1.27615 (5) obj. -29.7381 iterations 6
Cbc0038I Pass  53: suminf.    1.24090 (6) obj. -29.7381 iterations 3
Cbc0038I Pass  54: suminf.    1.29811 (6) obj. -29.7381 iterations 1
Cbc0038I Pass  55: suminf.    1.29811 (6) obj. -29.7381 iterations 1
Cbc0038I Pass  56: suminf.    1.24090 (6) obj. -29.7381 iterations 3
Cbc0038I Pass  57: suminf.    4.10808 (12) obj. -29.7381 iterations 12
Cbc0038I Pass  58: suminf.    2.86866 (10) obj. -29.7381 iterations 3
Cbc0038I Pass  59: suminf.    1.81280 (9) obj. -29.7381 iterations 3
Cbc0038I Pass  60: suminf.    1.53110 (8) obj. -29.7381 iterations 5
Cbc0038I Pass  61: suminf.    1.61516 (6) obj. -29.7381 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 9 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -21.7635 - took 0.01 seconds
Cbc0012I Integer solution of -21.76346 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 38 columns, reduced to 7 rows 9 columns
Cbc0031I 15 added rows had average density of 15.733333
Cbc0013I At root node, 15 cuts changed objective from -52.370968 to -25.538885 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1447 row cuts average 3.4 elements, 9 column cuts (9 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 545 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 92 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 288 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 112 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.760 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.76346 best solution, best possible -25.538885 (1.52 seconds)
Cbc0001I Search completed - best objective -21.76345999999999, took 1719 iterations and 4 nodes (1.74 seconds)
Cbc0032I Strong branching done 60 times (504 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.75

