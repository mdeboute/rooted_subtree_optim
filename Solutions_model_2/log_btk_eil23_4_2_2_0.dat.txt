Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-17) rows, 21 (-4) columns and 98 (-37) elements
Clp1000I sum of infeasibilities 3.65207e-06 - average 1.14127e-07, 3 fixed columns
Coin0506I Presolve 20 (-12) rows, 18 (-3) columns and 68 (-30) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Coin0511I After Postsolve, objective 149.72011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Coin0511I After Postsolve, objective 149.72011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.7201141 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 21 columns (20 integer (20 of which binary)) and 98 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.28058
Cbc0038I Pass   1: suminf.    0.29091 (1) obj. -93.9836 iterations 8
Cbc0038I Solution found of -62.7529
Cbc0038I Relaxing continuous gives -62.7529
Cbc0038I Rounding solution of -69.6497 is better than previous of -62.7529

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 21 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -77.4354
Cbc0038I Pass   2: suminf.    0.29091 (1) obj. -93.9836 iterations 0
Cbc0038I Pass   3: suminf.    0.13352 (2) obj. -77.4354 iterations 3
Cbc0038I Pass   4: suminf.    0.44260 (2) obj. -77.4354 iterations 2
Cbc0038I Pass   5: suminf.    0.43323 (2) obj. -77.4354 iterations 1
Cbc0038I Pass   6: suminf.    0.46863 (2) obj. -77.4354 iterations 2
Cbc0038I Pass   7: suminf.    0.42715 (2) obj. -77.4354 iterations 3
Cbc0038I Pass   8: suminf.    0.42715 (2) obj. -77.4354 iterations 0
Cbc0038I Pass   9: suminf.    0.76326 (3) obj. -77.4354 iterations 2
Cbc0038I Pass  10: suminf.    0.75217 (4) obj. -77.4354 iterations 2
Cbc0038I Pass  11: suminf.    0.73611 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  12: suminf.    0.64838 (2) obj. -77.4354 iterations 1
Cbc0038I Pass  13: suminf.    0.58518 (3) obj. -77.4354 iterations 3
Cbc0038I Pass  14: suminf.    0.60129 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  15: suminf.    0.72437 (3) obj. -77.4354 iterations 3
Cbc0038I Pass  16: suminf.    0.72437 (3) obj. -77.4354 iterations 0
Cbc0038I Pass  17: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  18: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  19: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  20: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  21: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  22: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  23: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  24: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  25: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  26: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  27: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  28: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  29: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  30: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  31: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 21 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -69.6497 - took 0.02 seconds
Cbc0012I Integer solution of -69.649668 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 32 rows 21 columns, reduced to 13 rows 13 columns
Cbc0012I Integer solution of -91.88192 found by DiveCoefficient after 274 iterations and 0 nodes (0.04 seconds)
Cbc0031I 14 added rows had average density of 9.2142857
Cbc0013I At root node, 14 cuts changed objective from -147.50561 to -93.592483 in 32 passes
Cbc0014I Cut generator 0 (Probing) - 262 row cuts average 5.7 elements, 2 column cuts (2 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 120 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -93.589341 found by strong branching after 274 iterations and 0 nodes (0.04 seconds)
Cbc0001I Search completed - best objective -93.58934099999999, took 274 iterations and 0 nodes (0.04 seconds)
Cbc0032I Strong branching done 4 times (24 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 42 (-4) columns and 309 (-77) elements
Clp1000I sum of infeasibilities 0 - average 0, 38 fixed columns
Coin0506I Presolve 3 (-30) rows, 4 (-38) columns and 10 (-299) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 216.37662
Clp0000I Optimal - objective value 216.37662
Coin0511I After Postsolve, objective 216.37662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15915379 - largest nonzero change 0 ( 0%) - largest zero change 2.580193e-05
Clp0000I Optimal - objective value 352.75287
Clp0000I Optimal - objective value 352.75287
Clp0000I Optimal - objective value 352.75287
Coin0511I After Postsolve, objective 352.75287, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 352.7528741 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 41 columns (41 integer (41 of which binary)) and 301 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.257%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.0293
Cbc0038I Pass   1: suminf.    0.50000 (2) obj. 15.754 iterations 14
Cbc0038I Pass   2: suminf.    0.50000 (2) obj. 15.754 iterations 0
Cbc0038I Solution found of 95.2937
Cbc0038I Rounding solution of -77.1239 is better than previous of 95.2937

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -92.124
Cbc0038I Pass   3: suminf.    1.51439 (5) obj. -92.124 iterations 1
Cbc0038I Pass   4: suminf.    1.51439 (5) obj. -92.124 iterations 0
Cbc0038I Pass   5: suminf.    0.05488 (1) obj. -109.92 iterations 9
Cbc0038I Pass   6: suminf.    0.13125 (1) obj. -92.124 iterations 1
Cbc0038I Pass   7: suminf.    2.30040 (7) obj. -92.124 iterations 9
Cbc0038I Pass   8: suminf.    1.85293 (6) obj. -92.124 iterations 1
Cbc0038I Pass   9: suminf.    0.79630 (3) obj. -92.124 iterations 4
Cbc0038I Pass  10: suminf.    0.22217 (2) obj. -133.872 iterations 2
Cbc0038I Pass  11: suminf.    0.45535 (2) obj. -92.124 iterations 1
Cbc0038I Pass  12: suminf.    0.45535 (2) obj. -92.124 iterations 0
Cbc0038I Pass  13: suminf.    0.39946 (2) obj. -92.124 iterations 1
Cbc0038I Pass  14: suminf.    2.66059 (8) obj. -92.124 iterations 9
Cbc0038I Pass  15: suminf.    2.00707 (6) obj. -92.124 iterations 4
Cbc0038I Pass  16: suminf.    0.46950 (2) obj. -92.124 iterations 5
Cbc0038I Pass  17: suminf.    0.46950 (2) obj. -92.124 iterations 0
Cbc0038I Pass  18: suminf.    0.37983 (2) obj. -92.124 iterations 1
Cbc0038I Pass  19: suminf.    0.19827 (2) obj. -134.876 iterations 1
Cbc0038I Pass  20: suminf.    0.97488 (4) obj. -189.624 iterations 5
Cbc0038I Pass  21: suminf.    0.58712 (3) obj. -186.134 iterations 2
Cbc0038I Pass  22: suminf.    0.08406 (1) obj. -92.124 iterations 3
Cbc0038I Pass  23: suminf.    0.01829 (1) obj. -107.448 iterations 1
Cbc0038I Pass  24: suminf.    3.56872 (9) obj. -92.124 iterations 12
Cbc0038I Pass  25: suminf.    3.21551 (8) obj. -92.124 iterations 1
Cbc0038I Pass  26: suminf.    2.28375 (6) obj. -92.124 iterations 2
Cbc0038I Pass  27: suminf.    0.21565 (2) obj. -92.124 iterations 6
Cbc0038I Pass  28: suminf.    0.21565 (2) obj. -92.124 iterations 0
Cbc0038I Pass  29: suminf.    0.78340 (2) obj. -92.124 iterations 1
Cbc0038I Pass  30: suminf.    0.52599 (2) obj. -152.737 iterations 1
Cbc0038I Pass  31: suminf.    2.97989 (7) obj. -92.124 iterations 7
Cbc0038I Pass  32: suminf.    2.00840 (5) obj. -92.124 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -77.1239 - took 0.01 seconds
Cbc0012I Integer solution of -77.123858 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -122.0426 found by DiveCoefficient after 32 iterations and 0 nodes (0.03 seconds)
Cbc0031I 11 added rows had average density of 4.1818182
Cbc0013I At root node, 11 cuts changed objective from -227.12394 to -122.0426 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 66 row cuts average 2.7 elements, 16 column cuts (16 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 20 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -122.0426, took 32 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-17) rows, 21 (-4) columns and 98 (-37) elements
Clp1000I sum of infeasibilities 3.65207e-06 - average 1.14127e-07, 3 fixed columns
Coin0506I Presolve 20 (-12) rows, 18 (-3) columns and 68 (-30) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Coin0511I After Postsolve, objective 149.72011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Coin0511I After Postsolve, objective 149.72011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.7201141 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 21 columns (20 integer (20 of which binary)) and 98 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.28058
Cbc0038I Pass   1: suminf.    0.29091 (1) obj. -93.9836 iterations 8
Cbc0038I Solution found of -62.7529
Cbc0038I Relaxing continuous gives -62.7529
Cbc0038I Rounding solution of -69.6497 is better than previous of -62.7529

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 21 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -77.4354
Cbc0038I Pass   2: suminf.    0.29091 (1) obj. -93.9836 iterations 0
Cbc0038I Pass   3: suminf.    0.13352 (2) obj. -77.4354 iterations 3
Cbc0038I Pass   4: suminf.    0.44260 (2) obj. -77.4354 iterations 2
Cbc0038I Pass   5: suminf.    0.43323 (2) obj. -77.4354 iterations 1
Cbc0038I Pass   6: suminf.    0.46863 (2) obj. -77.4354 iterations 2
Cbc0038I Pass   7: suminf.    0.42715 (2) obj. -77.4354 iterations 3
Cbc0038I Pass   8: suminf.    0.42715 (2) obj. -77.4354 iterations 0
Cbc0038I Pass   9: suminf.    0.76326 (3) obj. -77.4354 iterations 2
Cbc0038I Pass  10: suminf.    0.75217 (4) obj. -77.4354 iterations 2
Cbc0038I Pass  11: suminf.    0.73611 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  12: suminf.    0.64838 (2) obj. -77.4354 iterations 1
Cbc0038I Pass  13: suminf.    0.58518 (3) obj. -77.4354 iterations 3
Cbc0038I Pass  14: suminf.    0.60129 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  15: suminf.    0.72437 (3) obj. -77.4354 iterations 3
Cbc0038I Pass  16: suminf.    0.72437 (3) obj. -77.4354 iterations 0
Cbc0038I Pass  17: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  18: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  19: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  20: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  21: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  22: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  23: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  24: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  25: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  26: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  27: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  28: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  29: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  30: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  31: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 21 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -69.6497 - took 0.01 seconds
Cbc0012I Integer solution of -69.649668 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 32 rows 21 columns, reduced to 13 rows 13 columns
Cbc0012I Integer solution of -91.88192 found by DiveCoefficient after 274 iterations and 0 nodes (0.05 seconds)
Cbc0031I 14 added rows had average density of 9.2142857
Cbc0013I At root node, 14 cuts changed objective from -147.50561 to -93.592483 in 32 passes
Cbc0014I Cut generator 0 (Probing) - 262 row cuts average 5.7 elements, 2 column cuts (2 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 120 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -93.589341 found by strong branching after 274 iterations and 0 nodes (0.05 seconds)
Cbc0001I Search completed - best objective -93.58934099999999, took 274 iterations and 0 nodes (0.05 seconds)
Cbc0032I Strong branching done 4 times (24 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 39 (-8) columns and 271 (-118) elements
Clp1000I sum of infeasibilities 8.82089e-09 - average 2.84545e-10, 23 fixed columns
Coin0506I Presolve 11 (-20) rows, 15 (-24) columns and 40 (-231) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 186.67099
Clp0000I Optimal - objective value 186.67099
Coin0511I After Postsolve, objective 186.67099, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4045906 - largest nonzero change 2.9773964e-05 ( 0.0023599538%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 210.94002
Clp0000I Optimal - objective value 210.94002
Clp0000I Optimal - objective value 210.94002
Coin0511I After Postsolve, objective 210.94002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 210.9400208 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 39 columns (39 integer (39 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.179%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.09562
Cbc0038I Pass   1: suminf.    2.10455 (5) obj. -89.5347 iterations 12
Cbc0038I Solution found of -70.2271
Cbc0038I Rounding solution of -77.1239 is better than previous of -70.2271

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -85.5717
Cbc0038I Pass   2: suminf.    2.10455 (5) obj. -89.5347 iterations 0
Cbc0038I Pass   3: suminf.    1.62990 (5) obj. -85.5717 iterations 2
Cbc0038I Pass   4: suminf.    0.47341 (1) obj. -117.594 iterations 5
Cbc0038I Pass   5: suminf.    0.15336 (1) obj. -85.5717 iterations 1
Cbc0038I Pass   6: suminf.    3.25902 (9) obj. -85.5717 iterations 10
Cbc0038I Pass   7: suminf.    2.38540 (6) obj. -85.5717 iterations 4
Cbc0038I Pass   8: suminf.    0.79487 (2) obj. -90.4298 iterations 4
Cbc0038I Solution found of -85.8913
Cbc0038I Rounding solution of -87.7338 is better than previous of -85.8913

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -102.507
Cbc0038I Pass   9: suminf.    2.23420 (6) obj. -102.507 iterations 1
Cbc0038I Pass  10: suminf.    1.79917 (5) obj. -102.507 iterations 1
Cbc0038I Pass  11: suminf.    0.47341 (1) obj. -117.594 iterations 5
Cbc0038I Pass  12: suminf.    0.32263 (1) obj. -102.507 iterations 1
Cbc0038I Pass  13: suminf.    2.32543 (7) obj. -102.507 iterations 9
Cbc0038I Pass  14: suminf.    2.11019 (6) obj. -102.507 iterations 2
Cbc0038I Pass  15: suminf.    1.42776 (4) obj. -102.507 iterations 7
Cbc0038I Pass  16: suminf.    1.11753 (3) obj. -102.507 iterations 1
Cbc0038I Pass  17: suminf.    0.40259 (1) obj. -102.507 iterations 2
Cbc0038I Pass  18: suminf.    0.47341 (1) obj. -109.594 iterations 1
Cbc0038I Pass  19: suminf.    1.55476 (5) obj. -102.507 iterations 9
Cbc0038I Pass  20: suminf.    0.55826 (3) obj. -102.507 iterations 7
Cbc0038I Pass  21: suminf.    1.71687 (5) obj. -102.507 iterations 3
Cbc0038I Pass  22: suminf.    1.71687 (5) obj. -102.507 iterations 0
Cbc0038I Pass  23: suminf.    0.98079 (4) obj. -111.935 iterations 3
Cbc0038I Pass  24: suminf.    2.84495 (9) obj. -102.507 iterations 12
Cbc0038I Pass  25: suminf.    2.20446 (7) obj. -102.507 iterations 1
Cbc0038I Pass  26: suminf.    1.74246 (5) obj. -103.979 iterations 2
Cbc0038I Pass  27: suminf.    1.15346 (5) obj. -102.507 iterations 6
Cbc0038I Pass  28: suminf.    1.15346 (5) obj. -102.507 iterations 0
Cbc0038I Pass  29: suminf.    0.61518 (2) obj. -102.507 iterations 3
Cbc0038I Pass  30: suminf.    0.57283 (2) obj. -102.507 iterations 1
Cbc0038I Pass  31: suminf.    0.57283 (2) obj. -102.507 iterations 0
Cbc0038I Pass  32: suminf.    2.80686 (9) obj. -102.507 iterations 11
Cbc0038I Pass  33: suminf.    2.27552 (6) obj. -102.507 iterations 3
Cbc0038I Pass  34: suminf.    1.11589 (3) obj. -104.397 iterations 5
Cbc0038I Pass  35: suminf.    1.07768 (3) obj. -102.507 iterations 1
Cbc0038I Pass  36: suminf.    1.04589 (3) obj. -102.507 iterations 1
Cbc0038I Pass  37: suminf.    1.04589 (3) obj. -102.507 iterations 0
Cbc0038I Pass  38: suminf.    2.07385 (8) obj. -102.507 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 39 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -85.8913 to -92.2682 (0.03 seconds)
Cbc0038I Round again with cutoff of -120.235
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  38: suminf.    2.42441 (7) obj. -120.235 iterations 1
Cbc0038I Pass  39: suminf.    0.84978 (3) obj. -120.235 iterations 10
Cbc0038I Pass  40: suminf.    0.52683 (2) obj. -120.235 iterations 1
Cbc0038I Pass  41: suminf.    0.66360 (2) obj. -127 iterations 1
Cbc0038I Pass  42: suminf.    2.11460 (8) obj. -120.235 iterations 12
Cbc0038I Pass  43: suminf.    1.06737 (4) obj. -120.235 iterations 7
Cbc0038I Pass  44: suminf.    0.80811 (3) obj. -120.235 iterations 1
Cbc0038I Pass  45: suminf.    0.92576 (3) obj. -123.412 iterations 2
Cbc0038I Pass  46: suminf.    2.45917 (7) obj. -120.235 iterations 8
Cbc0038I Pass  47: suminf.    1.27403 (4) obj. -120.235 iterations 6
Cbc0038I Pass  48: suminf.    3.03248 (7) obj. -120.235 iterations 9
Cbc0038I Pass  49: suminf.    0.91644 (2) obj. -120.235 iterations 6
Cbc0038I Pass  50: suminf.    0.52950 (2) obj. -120.235 iterations 2
Cbc0038I Pass  51: suminf.    0.55076 (2) obj. -121.287 iterations 1
Cbc0038I Pass  52: suminf.    2.02485 (7) obj. -120.235 iterations 8
Cbc0038I Pass  53: suminf.    1.54964 (5) obj. -120.235 iterations 4
Cbc0038I Pass  54: suminf.    0.86729 (3) obj. -120.235 iterations 2
Cbc0038I Pass  55: suminf.    1.42045 (4) obj. -120.235 iterations 5
Cbc0038I Pass  56: suminf.    0.98463 (3) obj. -120.235 iterations 3
Cbc0038I Pass  57: suminf.    0.60544 (2) obj. -124.21 iterations 2
Cbc0038I Pass  58: suminf.    0.52507 (2) obj. -120.235 iterations 1
Cbc0038I Pass  59: suminf.    1.86128 (7) obj. -120.235 iterations 8
Cbc0038I Pass  60: suminf.    0.71748 (3) obj. -120.235 iterations 5
Cbc0038I Pass  61: suminf.    0.98044 (3) obj. -127.335 iterations 2
Cbc0038I Pass  62: suminf.    2.12711 (6) obj. -120.235 iterations 8
Cbc0038I Pass  63: suminf.    2.12711 (6) obj. -120.235 iterations 1
Cbc0038I Pass  64: suminf.    1.38371 (4) obj. -120.235 iterations 4
Cbc0038I Pass  65: suminf.    1.38371 (4) obj. -120.235 iterations 0
Cbc0038I Pass  66: suminf.    1.60404 (4) obj. -120.235 iterations 3
Cbc0038I Pass  67: suminf.    1.41623 (4) obj. -120.235 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -92.2682 - took 0.02 seconds
Cbc0012I Integer solution of -92.268211 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -93.589341 found by DiveCoefficient after 28 iterations and 0 nodes (0.04 seconds)
Cbc0031I 4 added rows had average density of 7.75
Cbc0013I At root node, 4 cuts changed objective from -161.6011 to -93.589341 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 71 row cuts average 2.1 elements, 24 column cuts (24 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -93.58934099999999, took 28 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

