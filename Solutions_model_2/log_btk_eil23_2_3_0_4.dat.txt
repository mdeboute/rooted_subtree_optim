Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 21 (-28) rows, 14 (-11) columns and 53 (-82) elements
Clp0000I Optimal - objective value 9686.7248
Coin0511I After Postsolve, objective 9686.7248, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9686.724756 - 13 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 21 rows, 14 columns (13 integer (13 of which binary)) and 53 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.926%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.41805
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9602 iterations 5
Cbc0038I Solution found of -9602
Cbc0038I Relaxing continuous gives -9602
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 14 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -9610.84
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.07962 (1) obj. -9610.84 iterations 1
Cbc0038I Pass   3: suminf.    0.38150 (1) obj. -9610.84 iterations 1
Cbc0038I Pass   4: suminf.    0.59945 (3) obj. -9610.84 iterations 2
Cbc0038I Pass   5: suminf.    0.59945 (3) obj. -9610.84 iterations 0
Cbc0038I Pass   6: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass   7: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I Pass   8: suminf.    0.74693 (2) obj. -9610.84 iterations 2
Cbc0038I Pass   9: suminf.    0.50994 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  10: suminf.    0.97255 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  11: suminf.    0.42644 (2) obj. -9610.84 iterations 1
Cbc0038I Pass  12: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  13: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I Pass  14: suminf.    0.74693 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  15: suminf.    0.50994 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  16: suminf.    0.97255 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  17: suminf.    0.42644 (2) obj. -9610.84 iterations 1
Cbc0038I Pass  18: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  19: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I Pass  20: suminf.    0.74693 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  21: suminf.    0.50994 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  22: suminf.    0.97255 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  23: suminf.    0.42644 (2) obj. -9610.84 iterations 1
Cbc0038I Pass  24: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  25: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I Pass  26: suminf.    0.74693 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  27: suminf.    0.50994 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  28: suminf.    0.97255 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  29: suminf.    0.42644 (2) obj. -9610.84 iterations 1
Cbc0038I Pass  30: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  31: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 14 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9602 - took 0.01 seconds
Cbc0012I Integer solution of -9602 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 14 columns, reduced to 6 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -9681.3797 to -9681.3797 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9602, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-19) rows, 33 (-13) columns and 217 (-171) elements
Clp1000I sum of infeasibilities 0 - average 0, 29 fixed columns
Coin0506I Presolve 5 (-24) rows, 4 (-29) columns and 14 (-203) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 9581.2873
Clp0000I Optimal - objective value 9581.2873
Coin0511I After Postsolve, objective 9581.2873, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.17871704 - largest nonzero change 0 ( 0%) - largest zero change 2.7518533e-05
Clp0000I Optimal - objective value 9729.4647
Clp0000I Optimal - objective value 9729.4647
Clp0000I Optimal - objective value 9729.4647
Coin0511I After Postsolve, objective 9729.4647, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9729.464691 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 34 columns (34 integer (34 of which binary)) and 191 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.502%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.48056
Cbc0038I Pass   1: suminf.    0.40000 (2) obj. -9599.8 iterations 15
Cbc0038I Pass   2: suminf.    0.40000 (2) obj. -9599.8 iterations 1
Cbc0038I Solution found of -9591
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 34 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -9591 to -9602 (0.01 seconds)
Cbc0038I Round again with cutoff of -9608.61
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.61491 (3) obj. -9608.61 iterations 4
Cbc0038I Pass   4: suminf.    0.61491 (3) obj. -9608.61 iterations 1
Cbc0038I Pass   5: suminf.    0.61442 (7) obj. -9608.61 iterations 7
Cbc0038I Pass   6: suminf.    0.61442 (7) obj. -9608.61 iterations 0
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -9612.25 iterations 8
Cbc0038I Pass   8: suminf.    0.16125 (1) obj. -9608.61 iterations 2
Cbc0038I Pass   9: suminf.    0.99980 (4) obj. -9608.61 iterations 5
Cbc0038I Pass  10: suminf.    0.16125 (1) obj. -9608.61 iterations 5
Cbc0038I Pass  11: suminf.    1.10590 (4) obj. -9608.61 iterations 4
Cbc0038I Pass  12: suminf.    0.37467 (2) obj. -9608.61 iterations 3
Cbc0038I Pass  13: suminf.    2.63217 (8) obj. -9608.61 iterations 10
Cbc0038I Pass  14: suminf.    0.98333 (3) obj. -9621.57 iterations 6
Cbc0038I Pass  15: suminf.    1.58692 (6) obj. -9608.61 iterations 5
Cbc0038I Pass  16: suminf.    1.24587 (5) obj. -9608.61 iterations 4
Cbc0038I Pass  17: suminf.    0.25000 (1) obj. -9612.25 iterations 5
Cbc0038I Pass  18: suminf.    0.16125 (1) obj. -9608.61 iterations 2
Cbc0038I Pass  19: suminf.    2.10286 (6) obj. -9608.61 iterations 9
Cbc0038I Pass  20: suminf.    0.88076 (3) obj. -9608.61 iterations 4
Cbc0038I Pass  21: suminf.    1.48796 (5) obj. -9608.61 iterations 6
Cbc0038I Pass  22: suminf.    0.88076 (3) obj. -9608.61 iterations 6
Cbc0038I Pass  23: suminf.    3.56343 (11) obj. -9608.61 iterations 14
Cbc0038I Pass  24: suminf.    0.99387 (8) obj. -9608.61 iterations 11
Cbc0038I Pass  25: suminf.    0.99387 (8) obj. -9608.61 iterations 0
Cbc0038I Pass  26: suminf.    0.25000 (1) obj. -9612.25 iterations 9
Cbc0038I Pass  27: suminf.    0.16125 (1) obj. -9608.61 iterations 2
Cbc0038I Pass  28: suminf.    2.93709 (9) obj. -9608.61 iterations 7
Cbc0038I Pass  29: suminf.    1.13564 (5) obj. -9608.61 iterations 4
Cbc0038I Pass  30: suminf.    0.16125 (1) obj. -9608.61 iterations 6
Cbc0038I Pass  31: suminf.    1.18222 (5) obj. -9608.61 iterations 11
Cbc0038I Pass  32: suminf.    1.74826 (6) obj. -9612.49 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -9602 - took 0.01 seconds
Cbc0012I Integer solution of -9602 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -9629.5 to -9629.5 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9602, took 9 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 21 (-28) rows, 14 (-11) columns and 53 (-82) elements
Clp0000I Optimal - objective value 9686.7248
Coin0511I After Postsolve, objective 9686.7248, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9686.724756 - 13 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 21 rows, 14 columns (13 integer (13 of which binary)) and 53 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.926%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.41805
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9602 iterations 5
Cbc0038I Solution found of -9602
Cbc0038I Relaxing continuous gives -9602
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 14 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -9610.84
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.07962 (1) obj. -9610.84 iterations 1
Cbc0038I Pass   3: suminf.    0.38150 (1) obj. -9610.84 iterations 1
Cbc0038I Pass   4: suminf.    0.59945 (3) obj. -9610.84 iterations 2
Cbc0038I Pass   5: suminf.    0.59945 (3) obj. -9610.84 iterations 0
Cbc0038I Pass   6: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass   7: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I Pass   8: suminf.    0.74693 (2) obj. -9610.84 iterations 2
Cbc0038I Pass   9: suminf.    0.50994 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  10: suminf.    0.97255 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  11: suminf.    0.42644 (2) obj. -9610.84 iterations 1
Cbc0038I Pass  12: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  13: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I Pass  14: suminf.    0.74693 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  15: suminf.    0.50994 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  16: suminf.    0.97255 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  17: suminf.    0.42644 (2) obj. -9610.84 iterations 1
Cbc0038I Pass  18: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  19: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I Pass  20: suminf.    0.74693 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  21: suminf.    0.50994 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  22: suminf.    0.97255 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  23: suminf.    0.42644 (2) obj. -9610.84 iterations 1
Cbc0038I Pass  24: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  25: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I Pass  26: suminf.    0.74693 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  27: suminf.    0.50994 (2) obj. -9610.84 iterations 2
Cbc0038I Pass  28: suminf.    0.97255 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  29: suminf.    0.42644 (2) obj. -9610.84 iterations 1
Cbc0038I Pass  30: suminf.    0.69657 (3) obj. -9610.84 iterations 2
Cbc0038I Pass  31: suminf.    0.69657 (3) obj. -9610.84 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 14 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9602 - took 0.00 seconds
Cbc0012I Integer solution of -9602 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 14 columns, reduced to 6 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -9681.3797 to -9681.3797 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9602, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-25) rows, 28 (-19) columns and 148 (-241) elements
Clp1000I sum of infeasibilities 0 - average 0, 26 fixed columns
Coin0506I Presolve 2 (-22) rows, 2 (-26) columns and 4 (-144) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 9570.0489
Clp0000I Optimal - objective value 9570.0489
Coin0511I After Postsolve, objective 9570.0489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5365002 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 9710.3332
Clp0000I Optimal - objective value 9710.3332
Clp0000I Optimal - objective value 9710.3332
Coin0511I After Postsolve, objective 9710.3332, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9710.333238 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 34 columns (34 integer (34 of which binary)) and 191 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.502%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.48056
Cbc0038I Pass   1: suminf.    0.40000 (2) obj. -9599.8 iterations 13
Cbc0038I Pass   2: suminf.    0.40000 (2) obj. -9599.8 iterations 1
Cbc0038I Solution found of -9591
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 34 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -9591 to -9602 (0.01 seconds)
Cbc0038I Round again with cutoff of -9608.61
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.61491 (3) obj. -9608.61 iterations 3
Cbc0038I Pass   4: suminf.    0.61491 (3) obj. -9608.61 iterations 1
Cbc0038I Pass   5: suminf.    0.61442 (7) obj. -9608.61 iterations 6
Cbc0038I Pass   6: suminf.    0.61442 (7) obj. -9608.61 iterations 0
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -9612.25 iterations 8
Cbc0038I Pass   8: suminf.    0.16125 (1) obj. -9608.61 iterations 2
Cbc0038I Pass   9: suminf.    0.99980 (4) obj. -9608.61 iterations 5
Cbc0038I Pass  10: suminf.    0.16125 (1) obj. -9608.61 iterations 5
Cbc0038I Pass  11: suminf.    1.10590 (4) obj. -9608.61 iterations 4
Cbc0038I Pass  12: suminf.    0.37467 (2) obj. -9608.61 iterations 3
Cbc0038I Pass  13: suminf.    2.63217 (8) obj. -9608.61 iterations 10
Cbc0038I Pass  14: suminf.    0.98333 (3) obj. -9621.57 iterations 6
Cbc0038I Pass  15: suminf.    1.58692 (6) obj. -9608.61 iterations 5
Cbc0038I Pass  16: suminf.    1.24587 (5) obj. -9608.61 iterations 5
Cbc0038I Pass  17: suminf.    0.25000 (1) obj. -9612.25 iterations 5
Cbc0038I Pass  18: suminf.    0.16125 (1) obj. -9608.61 iterations 2
Cbc0038I Pass  19: suminf.    2.10286 (6) obj. -9608.61 iterations 8
Cbc0038I Pass  20: suminf.    0.88076 (3) obj. -9608.61 iterations 4
Cbc0038I Pass  21: suminf.    1.48796 (5) obj. -9608.61 iterations 5
Cbc0038I Pass  22: suminf.    0.88076 (3) obj. -9608.61 iterations 5
Cbc0038I Pass  23: suminf.    3.56343 (11) obj. -9608.61 iterations 14
Cbc0038I Pass  24: suminf.    0.99387 (8) obj. -9608.61 iterations 10
Cbc0038I Pass  25: suminf.    0.99387 (8) obj. -9608.61 iterations 1
Cbc0038I Pass  26: suminf.    0.25000 (1) obj. -9612.25 iterations 9
Cbc0038I Pass  27: suminf.    0.16125 (1) obj. -9608.61 iterations 1
Cbc0038I Pass  28: suminf.    2.93709 (9) obj. -9608.61 iterations 8
Cbc0038I Pass  29: suminf.    1.13564 (5) obj. -9608.61 iterations 4
Cbc0038I Pass  30: suminf.    0.16125 (1) obj. -9608.61 iterations 5
Cbc0038I Pass  31: suminf.    1.18222 (5) obj. -9608.61 iterations 11
Cbc0038I Pass  32: suminf.    1.74826 (6) obj. -9612.49 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -9602 - took 0.01 seconds
Cbc0012I Integer solution of -9602 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -9629.5 to -9629.5 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9602, took 8 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

