Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 58 (-17) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 20 (0) rows, 13 (0) columns and 58 (0) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 36.557184
Clp0000I Optimal - objective value 36.557184
Coin0511I After Postsolve, objective 36.557184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.557184
Clp0000I Optimal - objective value 36.557184
Clp0000I Optimal - objective value 36.557184
Coin0511I After Postsolve, objective 36.557184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.55718403 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.262%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.42052
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.8555 iterations 9
Cbc0038I Solution found of -10.8555
Cbc0038I Relaxing continuous gives -10.8555
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -10.8555 to -18.1576 (0.00 seconds)
Cbc0038I Round again with cutoff of -19.8003
Cbc0038I Pass   2: suminf.    0.54970 (3) obj. -19.8003 iterations 2
Cbc0038I Pass   3: suminf.    1.36605 (3) obj. -19.8003 iterations 3
Cbc0038I Pass   4: suminf.    0.78356 (3) obj. -19.8003 iterations 1
Cbc0038I Pass   5: suminf.    0.58949 (3) obj. -19.8003 iterations 3
Cbc0038I Pass   6: suminf.    0.11803 (2) obj. -19.8003 iterations 3
Cbc0038I Pass   7: suminf.    0.09295 (1) obj. -19.8003 iterations 1
Cbc0038I Pass   8: suminf.    0.50000 (1) obj. -19.8003 iterations 1
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -19.8003 iterations 0
Cbc0038I Pass  10: suminf.    0.67038 (4) obj. -19.8003 iterations 3
Cbc0038I Pass  11: suminf.    0.67038 (4) obj. -19.8003 iterations 0
Cbc0038I Pass  12: suminf.    0.94702 (9) obj. -19.8003 iterations 10
Cbc0038I Pass  13: suminf.    1.27531 (4) obj. -19.8003 iterations 11
Cbc0038I Pass  14: suminf.    0.49989 (2) obj. -19.8003 iterations 5
Cbc0038I Pass  15: suminf.    0.22222 (1) obj. -19.8003 iterations 2
Cbc0038I Pass  16: suminf.    0.46784 (1) obj. -19.8003 iterations 1
Cbc0038I Pass  17: suminf.    0.74394 (4) obj. -19.8003 iterations 3
Cbc0038I Pass  18: suminf.    0.51257 (2) obj. -19.8003 iterations 2
Cbc0038I Pass  19: suminf.    0.66118 (3) obj. -19.8003 iterations 6
Cbc0038I Pass  20: suminf.    1.34529 (3) obj. -19.8003 iterations 3
Cbc0038I Pass  21: suminf.    0.84280 (3) obj. -19.8003 iterations 1
Cbc0038I Pass  22: suminf.    0.69295 (3) obj. -19.8003 iterations 3
Cbc0038I Pass  23: suminf.    0.69295 (3) obj. -19.8003 iterations 0
Cbc0038I Pass  24: suminf.    0.93125 (5) obj. -19.8003 iterations 2
Cbc0038I Pass  25: suminf.    1.36605 (3) obj. -19.8003 iterations 7
Cbc0038I Pass  26: suminf.    0.78356 (3) obj. -19.8003 iterations 1
Cbc0038I Pass  27: suminf.    0.58949 (3) obj. -19.8003 iterations 3
Cbc0038I Pass  28: suminf.    0.54970 (3) obj. -19.8003 iterations 1
Cbc0038I Pass  29: suminf.    1.36605 (3) obj. -19.8003 iterations 3
Cbc0038I Pass  30: suminf.    1.89256 (5) obj. -19.8003 iterations 5
Cbc0038I Pass  31: suminf.    0.73088 (2) obj. -19.8003 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -18.1576 - took 0.02 seconds
Cbc0012I Integer solution of -18.15764 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 5 cuts changed objective from -34.583277 to -10.85549 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 64 row cuts average 3.2 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 82 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is -100
Cbc0001I Search completed - best objective -18.15764, took 135 iterations and 0 nodes (0.36 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-10) rows, 22 (-4) columns and 108 (-45) elements
Clp1000I sum of infeasibilities 3.98827e-08 - average 2.2157e-09, 3 fixed columns
Coin0506I Presolve 16 (-2) rows, 19 (-3) columns and 76 (-32) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 1.5638975 - largest nonzero change 0 ( 0%) - largest zero change 1.8144163e-05
Clp0000I Optimal - objective value 42.033068
Clp0000I Optimal - objective value 42.033068
Coin0511I After Postsolve, objective 42.033068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.033068
Clp0000I Optimal - objective value 42.033068
Clp0000I Optimal - objective value 42.033068
Coin0511I After Postsolve, objective 42.033068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.03306819 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 22 columns (22 integer (22 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.606%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.785974
Cbc0038I Pass   1: suminf.    0.66022 (5) obj. -32.446 iterations 6
Cbc0038I Solution found of 7.76942
Cbc0038I Rounding solution of -11.5327 is better than previous of 7.76942

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -11.5327 to -14.1351 (0.01 seconds)
Cbc0038I Round again with cutoff of -16.0173
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.66022 (5) obj. -32.446 iterations 0
Cbc0038I Pass   3: suminf.    0.57974 (2) obj. -16.0173 iterations 12
Cbc0038I Pass   4: suminf.    0.57974 (2) obj. -16.0173 iterations 0
Cbc0038I Pass   5: suminf.    0.23375 (2) obj. -16.0173 iterations 5
Cbc0038I Pass   6: suminf.    0.23375 (2) obj. -16.0173 iterations 0
Cbc0038I Pass   7: suminf.    0.41975 (3) obj. -24.228 iterations 3
Cbc0038I Pass   8: suminf.    0.47078 (2) obj. -16.0173 iterations 3
Cbc0038I Pass   9: suminf.    0.76049 (4) obj. -16.0173 iterations 3
Cbc0038I Pass  10: suminf.    0.41296 (3) obj. -16.0173 iterations 1
Cbc0038I Pass  11: suminf.    0.48763 (2) obj. -16.0173 iterations 5
Cbc0038I Pass  12: suminf.    0.30039 (2) obj. -16.0173 iterations 5
Cbc0038I Pass  13: suminf.    0.30215 (2) obj. -16.0173 iterations 1
Cbc0038I Pass  14: suminf.    0.42412 (3) obj. -20.7003 iterations 4
Cbc0038I Pass  15: suminf.    0.42412 (3) obj. -20.7003 iterations 1
Cbc0038I Pass  16: suminf.    0.30215 (2) obj. -16.0173 iterations 6
Cbc0038I Pass  17: suminf.    0.33445 (3) obj. -17.3279 iterations 10
Cbc0038I Pass  18: suminf.    0.33445 (3) obj. -17.3279 iterations 0
Cbc0038I Pass  19: suminf.    0.59701 (2) obj. -16.0173 iterations 5
Cbc0038I Pass  20: suminf.    0.38151 (3) obj. -16.0173 iterations 5
Cbc0038I Pass  21: suminf.    0.38151 (3) obj. -16.0173 iterations 0
Cbc0038I Pass  22: suminf.    0.55929 (3) obj. -16.0173 iterations 2
Cbc0038I Pass  23: suminf.    0.55929 (3) obj. -16.0173 iterations 1
Cbc0038I Pass  24: suminf.    0.38151 (3) obj. -16.0173 iterations 2
Cbc0038I Pass  25: suminf.    0.33445 (3) obj. -17.3279 iterations 5
Cbc0038I Pass  26: suminf.    0.33445 (3) obj. -17.3279 iterations 1
Cbc0038I Pass  27: suminf.    0.59701 (2) obj. -16.0173 iterations 5
Cbc0038I Pass  28: suminf.    0.33445 (3) obj. -17.3279 iterations 4
Cbc0038I Pass  29: suminf.    0.59050 (5) obj. -16.0173 iterations 9
Cbc0038I Pass  30: suminf.    0.50785 (4) obj. -16.0173 iterations 1
Cbc0038I Pass  31: suminf.    0.95870 (3) obj. -16.0173 iterations 6
Cbc0038I Rounding solution of -18.1576 is better than previous of -14.1351

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 6 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -21.1174
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.66022 (5) obj. -32.446 iterations 0
Cbc0038I Pass  32: suminf.    0.72557 (2) obj. -21.1174 iterations 7
Cbc0038I Pass  33: suminf.    0.33445 (3) obj. -23.3279 iterations 4
Cbc0038I Pass  34: suminf.    0.33445 (3) obj. -23.3279 iterations 0
Cbc0038I Pass  35: suminf.    0.33445 (3) obj. -23.3279 iterations 0
Cbc0038I Pass  36: suminf.    0.83399 (3) obj. -28.2411 iterations 8
Cbc0038I Pass  37: suminf.    0.42222 (2) obj. -24.1234 iterations 2
Cbc0038I Pass  38: suminf.    0.85166 (2) obj. -21.1174 iterations 9
Cbc0038I Pass  39: suminf.    0.48162 (2) obj. -21.1174 iterations 3
Cbc0038I Pass  40: suminf.    1.02275 (3) obj. -21.1174 iterations 2
Cbc0038I Pass  41: suminf.    2.68318 (8) obj. -21.1174 iterations 13
Cbc0038I Pass  42: suminf.    1.64026 (6) obj. -21.1174 iterations 4
Cbc0038I Pass  43: suminf.    0.57215 (4) obj. -21.1174 iterations 8
Cbc0038I Pass  44: suminf.    0.57215 (4) obj. -21.1174 iterations 0
Cbc0038I Pass  45: suminf.    1.20414 (4) obj. -21.1174 iterations 4
Cbc0038I Pass  46: suminf.    1.13060 (3) obj. -21.1174 iterations 1
Cbc0038I Pass  47: suminf.    1.16129 (4) obj. -21.1174 iterations 2
Cbc0038I Pass  48: suminf.    1.08616 (3) obj. -21.1174 iterations 1
Cbc0038I Pass  49: suminf.    1.20414 (4) obj. -21.1174 iterations 2
Cbc0038I Pass  50: suminf.    1.19620 (5) obj. -21.1174 iterations 7
Cbc0038I Pass  51: suminf.    0.87460 (4) obj. -24.0118 iterations 1
Cbc0038I Pass  52: suminf.    2.07966 (5) obj. -21.1174 iterations 5
Cbc0038I Pass  53: suminf.    1.08363 (5) obj. -21.1174 iterations 2
Cbc0038I Pass  54: suminf.    0.54495 (4) obj. -21.1174 iterations 4
Cbc0038I Pass  55: suminf.    0.54495 (4) obj. -21.1174 iterations 0
Cbc0038I Pass  56: suminf.    1.34588 (4) obj. -21.1174 iterations 5
Cbc0038I Pass  57: suminf.    0.41791 (3) obj. -21.1174 iterations 2
Cbc0038I Pass  58: suminf.    1.10620 (4) obj. -21.1174 iterations 3
Cbc0038I Pass  59: suminf.    1.10620 (4) obj. -21.1174 iterations 0
Cbc0038I Pass  60: suminf.    1.08398 (4) obj. -21.1174 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -18.1576 - took 0.01 seconds
Cbc0012I Integer solution of -18.15764 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 16 rows 22 columns, reduced to 6 rows 9 columns
Cbc0031I 7 added rows had average density of 5.1428571
Cbc0013I At root node, 45 cuts changed objective from -32.956107 to -14.782821 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 5.8 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -18.15764, took 3 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 58 (-17) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 20 (0) rows, 13 (0) columns and 58 (0) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 36.557184
Clp0000I Optimal - objective value 36.557184
Coin0511I After Postsolve, objective 36.557184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.557184
Clp0000I Optimal - objective value 36.557184
Clp0000I Optimal - objective value 36.557184
Coin0511I After Postsolve, objective 36.557184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.55718403 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.262%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.42052
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.8555 iterations 9
Cbc0038I Solution found of -10.8555
Cbc0038I Relaxing continuous gives -10.8555
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -10.8555 to -18.1576 (0.00 seconds)
Cbc0038I Round again with cutoff of -19.8003
Cbc0038I Pass   2: suminf.    0.54970 (3) obj. -19.8003 iterations 2
Cbc0038I Pass   3: suminf.    1.36605 (3) obj. -19.8003 iterations 3
Cbc0038I Pass   4: suminf.    0.78356 (3) obj. -19.8003 iterations 1
Cbc0038I Pass   5: suminf.    0.58949 (3) obj. -19.8003 iterations 3
Cbc0038I Pass   6: suminf.    0.11803 (2) obj. -19.8003 iterations 3
Cbc0038I Pass   7: suminf.    0.09295 (1) obj. -19.8003 iterations 1
Cbc0038I Pass   8: suminf.    0.50000 (1) obj. -19.8003 iterations 1
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -19.8003 iterations 0
Cbc0038I Pass  10: suminf.    0.67038 (4) obj. -19.8003 iterations 3
Cbc0038I Pass  11: suminf.    0.67038 (4) obj. -19.8003 iterations 0
Cbc0038I Pass  12: suminf.    0.94702 (9) obj. -19.8003 iterations 10
Cbc0038I Pass  13: suminf.    1.27531 (4) obj. -19.8003 iterations 11
Cbc0038I Pass  14: suminf.    0.49989 (2) obj. -19.8003 iterations 5
Cbc0038I Pass  15: suminf.    0.22222 (1) obj. -19.8003 iterations 2
Cbc0038I Pass  16: suminf.    0.46784 (1) obj. -19.8003 iterations 1
Cbc0038I Pass  17: suminf.    0.74394 (4) obj. -19.8003 iterations 3
Cbc0038I Pass  18: suminf.    0.51257 (2) obj. -19.8003 iterations 2
Cbc0038I Pass  19: suminf.    0.66118 (3) obj. -19.8003 iterations 6
Cbc0038I Pass  20: suminf.    1.34529 (3) obj. -19.8003 iterations 3
Cbc0038I Pass  21: suminf.    0.84280 (3) obj. -19.8003 iterations 1
Cbc0038I Pass  22: suminf.    0.69295 (3) obj. -19.8003 iterations 3
Cbc0038I Pass  23: suminf.    0.69295 (3) obj. -19.8003 iterations 0
Cbc0038I Pass  24: suminf.    0.93125 (5) obj. -19.8003 iterations 2
Cbc0038I Pass  25: suminf.    1.36605 (3) obj. -19.8003 iterations 7
Cbc0038I Pass  26: suminf.    0.78356 (3) obj. -19.8003 iterations 1
Cbc0038I Pass  27: suminf.    0.58949 (3) obj. -19.8003 iterations 3
Cbc0038I Pass  28: suminf.    0.54970 (3) obj. -19.8003 iterations 1
Cbc0038I Pass  29: suminf.    1.36605 (3) obj. -19.8003 iterations 3
Cbc0038I Pass  30: suminf.    1.89256 (5) obj. -19.8003 iterations 5
Cbc0038I Pass  31: suminf.    0.73088 (2) obj. -19.8003 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -18.1576 - took 0.02 seconds
Cbc0012I Integer solution of -18.15764 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 5 cuts changed objective from -34.583277 to -10.85549 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 64 row cuts average 3.2 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 82 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is -100
Cbc0001I Search completed - best objective -18.15764, took 135 iterations and 0 nodes (0.32 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 22 (-5) columns and 108 (-46) elements
Clp1000I sum of infeasibilities 3.98827e-08 - average 2.2157e-09, 3 fixed columns
Coin0506I Presolve 16 (-2) rows, 19 (-3) columns and 76 (-32) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 1.5638975 - largest nonzero change 0 ( 0%) - largest zero change 1.8144163e-05
Clp0000I Optimal - objective value 42.033068
Clp0000I Optimal - objective value 42.033068
Coin0511I After Postsolve, objective 42.033068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.033068
Clp0000I Optimal - objective value 42.033068
Clp0000I Optimal - objective value 42.033068
Coin0511I After Postsolve, objective 42.033068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.03306819 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 22 columns (22 integer (22 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.606%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.785974
Cbc0038I Pass   1: suminf.    0.66022 (5) obj. -32.446 iterations 6
Cbc0038I Solution found of 7.76942
Cbc0038I Rounding solution of -11.5327 is better than previous of 7.76942

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -11.5327 to -14.1351 (0.01 seconds)
Cbc0038I Round again with cutoff of -16.0173
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.66022 (5) obj. -32.446 iterations 0
Cbc0038I Pass   3: suminf.    0.57974 (2) obj. -16.0173 iterations 12
Cbc0038I Pass   4: suminf.    0.57974 (2) obj. -16.0173 iterations 0
Cbc0038I Pass   5: suminf.    0.23375 (2) obj. -16.0173 iterations 5
Cbc0038I Pass   6: suminf.    0.23375 (2) obj. -16.0173 iterations 0
Cbc0038I Pass   7: suminf.    0.41975 (3) obj. -24.228 iterations 3
Cbc0038I Pass   8: suminf.    0.47078 (2) obj. -16.0173 iterations 3
Cbc0038I Pass   9: suminf.    0.76049 (4) obj. -16.0173 iterations 3
Cbc0038I Pass  10: suminf.    0.41296 (3) obj. -16.0173 iterations 1
Cbc0038I Pass  11: suminf.    0.48763 (2) obj. -16.0173 iterations 5
Cbc0038I Pass  12: suminf.    0.30039 (2) obj. -16.0173 iterations 5
Cbc0038I Pass  13: suminf.    0.30215 (2) obj. -16.0173 iterations 1
Cbc0038I Pass  14: suminf.    0.42412 (3) obj. -20.7003 iterations 4
Cbc0038I Pass  15: suminf.    0.42412 (3) obj. -20.7003 iterations 1
Cbc0038I Pass  16: suminf.    0.30215 (2) obj. -16.0173 iterations 6
Cbc0038I Pass  17: suminf.    0.33445 (3) obj. -17.3279 iterations 10
Cbc0038I Pass  18: suminf.    0.33445 (3) obj. -17.3279 iterations 0
Cbc0038I Pass  19: suminf.    0.59701 (2) obj. -16.0173 iterations 5
Cbc0038I Pass  20: suminf.    0.38151 (3) obj. -16.0173 iterations 5
Cbc0038I Pass  21: suminf.    0.38151 (3) obj. -16.0173 iterations 0
Cbc0038I Pass  22: suminf.    0.55929 (3) obj. -16.0173 iterations 2
Cbc0038I Pass  23: suminf.    0.55929 (3) obj. -16.0173 iterations 1
Cbc0038I Pass  24: suminf.    0.38151 (3) obj. -16.0173 iterations 2
Cbc0038I Pass  25: suminf.    0.33445 (3) obj. -17.3279 iterations 5
Cbc0038I Pass  26: suminf.    0.33445 (3) obj. -17.3279 iterations 1
Cbc0038I Pass  27: suminf.    0.59701 (2) obj. -16.0173 iterations 5
Cbc0038I Pass  28: suminf.    0.33445 (3) obj. -17.3279 iterations 4
Cbc0038I Pass  29: suminf.    0.59050 (5) obj. -16.0173 iterations 9
Cbc0038I Pass  30: suminf.    0.50785 (4) obj. -16.0173 iterations 1
Cbc0038I Pass  31: suminf.    0.95870 (3) obj. -16.0173 iterations 6
Cbc0038I Rounding solution of -18.1576 is better than previous of -14.1351

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 6 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -21.1174
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.66022 (5) obj. -32.446 iterations 0
Cbc0038I Pass  32: suminf.    0.72557 (2) obj. -21.1174 iterations 7
Cbc0038I Pass  33: suminf.    0.33445 (3) obj. -23.3279 iterations 4
Cbc0038I Pass  34: suminf.    0.33445 (3) obj. -23.3279 iterations 0
Cbc0038I Pass  35: suminf.    0.33445 (3) obj. -23.3279 iterations 0
Cbc0038I Pass  36: suminf.    0.83399 (3) obj. -28.2411 iterations 8
Cbc0038I Pass  37: suminf.    0.42222 (2) obj. -24.1234 iterations 2
Cbc0038I Pass  38: suminf.    0.85166 (2) obj. -21.1174 iterations 9
Cbc0038I Pass  39: suminf.    0.48162 (2) obj. -21.1174 iterations 3
Cbc0038I Pass  40: suminf.    1.02275 (3) obj. -21.1174 iterations 2
Cbc0038I Pass  41: suminf.    2.68318 (8) obj. -21.1174 iterations 13
Cbc0038I Pass  42: suminf.    1.64026 (6) obj. -21.1174 iterations 4
Cbc0038I Pass  43: suminf.    0.57215 (4) obj. -21.1174 iterations 8
Cbc0038I Pass  44: suminf.    0.57215 (4) obj. -21.1174 iterations 0
Cbc0038I Pass  45: suminf.    1.20414 (4) obj. -21.1174 iterations 4
Cbc0038I Pass  46: suminf.    1.13060 (3) obj. -21.1174 iterations 1
Cbc0038I Pass  47: suminf.    1.16129 (4) obj. -21.1174 iterations 2
Cbc0038I Pass  48: suminf.    1.08616 (3) obj. -21.1174 iterations 1
Cbc0038I Pass  49: suminf.    1.20414 (4) obj. -21.1174 iterations 2
Cbc0038I Pass  50: suminf.    1.19620 (5) obj. -21.1174 iterations 7
Cbc0038I Pass  51: suminf.    0.87460 (4) obj. -24.0118 iterations 1
Cbc0038I Pass  52: suminf.    2.07966 (5) obj. -21.1174 iterations 5
Cbc0038I Pass  53: suminf.    1.08363 (5) obj. -21.1174 iterations 2
Cbc0038I Pass  54: suminf.    0.54495 (4) obj. -21.1174 iterations 4
Cbc0038I Pass  55: suminf.    0.54495 (4) obj. -21.1174 iterations 0
Cbc0038I Pass  56: suminf.    1.34588 (4) obj. -21.1174 iterations 5
Cbc0038I Pass  57: suminf.    0.41791 (3) obj. -21.1174 iterations 2
Cbc0038I Pass  58: suminf.    1.10620 (4) obj. -21.1174 iterations 3
Cbc0038I Pass  59: suminf.    1.10620 (4) obj. -21.1174 iterations 0
Cbc0038I Pass  60: suminf.    1.08398 (4) obj. -21.1174 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -18.1576 - took 0.01 seconds
Cbc0012I Integer solution of -18.15764 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 16 rows 22 columns, reduced to 6 rows 9 columns
Cbc0031I 7 added rows had average density of 5.1428571
Cbc0013I At root node, 45 cuts changed objective from -32.956107 to -14.782821 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 5.8 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -18.15764, took 3 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

