Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 44 (-6) columns and 248 (-37) elements
Clp1000I sum of infeasibilities 0.00822756 - average 9.79471e-05, 23 fixed columns
Coin0506I Presolve 29 (-55) rows, 20 (-24) columns and 90 (-158) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Coin0511I After Postsolve, objective 8059.8134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.57778 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Coin0511I After Postsolve, objective 8059.8134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8059.813388 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 84 rows, 44 columns (43 integer (43 of which binary)) and 248 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.094%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.15899
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7025.2 iterations 21
Cbc0038I Solution found of -7025.2
Cbc0038I Relaxing continuous gives -7025.2
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 44 columns, reduced to 23 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7025.2 to -7426.72 (0.01 seconds)
Cbc0038I Round again with cutoff of -7490.03
Cbc0038I Pass   2: suminf.    0.73385 (4) obj. -7490.03 iterations 8
Cbc0038I Pass   3: suminf.    0.41302 (3) obj. -7490.03 iterations 10
Cbc0038I Pass   4: suminf.    1.00000 (9) obj. -7490.03 iterations 13
Cbc0038I Pass   5: suminf.    0.52536 (5) obj. -7490.03 iterations 7
Cbc0038I Pass   6: suminf.    0.51803 (5) obj. -7490.03 iterations 5
Cbc0038I Pass   7: suminf.    0.43298 (3) obj. -7490.03 iterations 12
Cbc0038I Pass   8: suminf.    0.15605 (1) obj. -7490.03 iterations 5
Cbc0038I Pass   9: suminf.    0.25930 (2) obj. -7490.03 iterations 2
Cbc0038I Pass  10: suminf.    2.78303 (10) obj. -7490.03 iterations 11
Cbc0038I Pass  11: suminf.    2.18723 (12) obj. -7490.03 iterations 11
Cbc0038I Pass  12: suminf.    1.00000 (6) obj. -7490.03 iterations 18
Cbc0038I Pass  13: suminf.    0.43298 (3) obj. -7490.03 iterations 7
Cbc0038I Pass  14: suminf.    1.70348 (7) obj. -7490.03 iterations 7
Cbc0038I Pass  15: suminf.    1.49858 (11) obj. -7490.03 iterations 7
Cbc0038I Pass  16: suminf.    0.50292 (4) obj. -7490.03 iterations 16
Cbc0038I Pass  17: suminf.    1.00000 (9) obj. -7490.03 iterations 12
Cbc0038I Pass  18: suminf.    0.66672 (4) obj. -7490.03 iterations 6
Cbc0038I Pass  19: suminf.    0.60863 (6) obj. -7490.03 iterations 5
Cbc0038I Pass  20: suminf.    0.92326 (5) obj. -7490.03 iterations 10
Cbc0038I Pass  21: suminf.    0.85792 (4) obj. -7490.03 iterations 1
Cbc0038I Pass  22: suminf.    0.22940 (1) obj. -7490.03 iterations 6
Cbc0038I Pass  23: suminf.    0.16770 (1) obj. -7490.03 iterations 1
Cbc0038I Pass  24: suminf.    1.63831 (7) obj. -7490.03 iterations 14
Cbc0038I Pass  25: suminf.    0.43697 (3) obj. -7490.03 iterations 20
Cbc0038I Pass  26: suminf.    0.35088 (2) obj. -7490.03 iterations 3
Cbc0038I Pass  27: suminf.    0.03479 (1) obj. -7490.03 iterations 2
Cbc0038I Pass  28: suminf.    4.59909 (15) obj. -7490.03 iterations 17
Cbc0038I Pass  29: suminf.    1.98545 (8) obj. -7490.03 iterations 4
Cbc0038I Pass  30: suminf.    1.00000 (6) obj. -7490.03 iterations 6
Cbc0038I Pass  31: suminf.    0.94857 (5) obj. -7490.03 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 44 columns, reduced to 45 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7426.72 - took 0.01 seconds
Cbc0012I Integer solution of -7426.7229 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 84 rows 44 columns, reduced to 23 rows 17 columns
Cbc0031I 6 added rows had average density of 4.3333333
Cbc0013I At root node, 15 cuts changed objective from -8059.8134 to -7426.7229 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 4.5 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7426.722899999999, took 10 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-11) rows, 89 (-7) columns and 1234 (-179) elements
Clp1000I sum of infeasibilities 1.76049e-06 - average 2.02355e-08, 80 fixed columns
Coin0506I Presolve 8 (-79) rows, 9 (-80) columns and 28 (-1206) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 7193.6372
Clp0000I Optimal - objective value 7193.6372
Coin0511I After Postsolve, objective 7193.6372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6262474 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 10497.476
Clp0000I Optimal - objective value 10497.476
Clp0000I Optimal - objective value 10497.476
Coin0511I After Postsolve, objective 10497.476, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10497.47621 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 90 columns (90 integer (90 of which binary)) and 1239 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.103%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.03432
Cbc0038I Pass   1: suminf.    4.68565 (28) obj. -7073.55 iterations 31
Cbc0038I Pass   2: suminf.    4.68565 (28) obj. -7073.55 iterations 0
Cbc0038I Pass   3: suminf.    1.64636 (13) obj. -5916.49 iterations 15
Cbc0038I Solution found of -5469.84
Cbc0038I Rounding solution of -5553.64 is better than previous of -5469.84

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -5553.64 to -7426.72 (0.02 seconds)
Cbc0038I Round again with cutoff of -7642.93
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.01855 (45) obj. -7642.93 iterations 17
Cbc0038I Pass   5: suminf.    6.01855 (45) obj. -7642.93 iterations 0
Cbc0038I Pass   6: suminf.    5.15574 (34) obj. -7642.93 iterations 11
Cbc0038I Pass   7: suminf.    5.15574 (34) obj. -7642.93 iterations 0
Cbc0038I Pass   8: suminf.    2.11665 (18) obj. -7642.93 iterations 17
Cbc0038I Pass   9: suminf.    2.11665 (18) obj. -7642.93 iterations 1
Cbc0038I Pass  10: suminf.    0.41249 (1) obj. -7642.93 iterations 31
Cbc0038I Pass  11: suminf.    0.30952 (1) obj. -7680.82 iterations 9
Cbc0038I Pass  12: suminf.    0.41249 (1) obj. -7642.93 iterations 5
Cbc0038I Pass  13: suminf.    2.65905 (9) obj. -7642.93 iterations 16
Cbc0038I Pass  14: suminf.    2.65905 (9) obj. -7642.93 iterations 1
Cbc0038I Pass  15: suminf.    0.38367 (2) obj. -7642.93 iterations 17
Cbc0038I Pass  16: suminf.    3.65379 (16) obj. -7642.93 iterations 26
Cbc0038I Pass  17: suminf.    2.99891 (16) obj. -7642.93 iterations 7
Cbc0038I Pass  18: suminf.    2.99891 (16) obj. -7642.93 iterations 0
Cbc0038I Pass  19: suminf.    0.41249 (1) obj. -7642.93 iterations 22
Cbc0038I Pass  20: suminf.    0.30952 (1) obj. -7680.82 iterations 10
Cbc0038I Pass  21: suminf.    0.41249 (1) obj. -7642.93 iterations 3
Cbc0038I Pass  22: suminf.    3.23253 (15) obj. -7642.93 iterations 27
Cbc0038I Pass  23: suminf.    3.23253 (15) obj. -7642.93 iterations 8
Cbc0038I Pass  24: suminf.    0.73078 (3) obj. -7642.93 iterations 22
Cbc0038I Pass  25: suminf.    0.55397 (3) obj. -7708 iterations 7
Cbc0038I Pass  26: suminf.    2.41323 (12) obj. -7642.93 iterations 15
Cbc0038I Pass  27: suminf.    2.41323 (12) obj. -7642.93 iterations 4
Cbc0038I Pass  28: suminf.    0.41249 (1) obj. -7642.93 iterations 27
Cbc0038I Pass  29: suminf.    0.30952 (1) obj. -7680.82 iterations 16
Cbc0038I Pass  30: suminf.    3.10177 (12) obj. -7642.93 iterations 14
Cbc0038I Pass  31: suminf.    2.45941 (10) obj. -8178.57 iterations 6
Cbc0038I Pass  32: suminf.    4.18267 (17) obj. -7642.93 iterations 10
Cbc0038I Pass  33: suminf.    3.88755 (16) obj. -7642.93 iterations 1
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -8032.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    6.82170 (45) obj. -8032.1 iterations 0
Cbc0038I Pass  34: suminf.    6.82170 (45) obj. -8032.1 iterations 0
Cbc0038I Pass  35: suminf.    4.52478 (29) obj. -8032.1 iterations 16
Cbc0038I Pass  36: suminf.    1.28086 (10) obj. -8032.1 iterations 35
Cbc0038I Pass  37: suminf.    1.28086 (10) obj. -8032.1 iterations 0
Cbc0038I Pass  38: suminf.    0.92014 (3) obj. -8032.1 iterations 13
Cbc0038I Pass  39: suminf.    0.84158 (3) obj. -8050.01 iterations 11
Cbc0038I Pass  40: suminf.    0.92014 (3) obj. -8032.1 iterations 9
Cbc0038I Pass  41: suminf.    2.72945 (14) obj. -8032.1 iterations 20
Cbc0038I Pass  42: suminf.    2.38754 (11) obj. -8110.29 iterations 13
Cbc0038I Pass  43: suminf.    3.88156 (18) obj. -8032.1 iterations 20
Cbc0038I Pass  44: suminf.    3.88156 (18) obj. -8032.1 iterations 4
Cbc0038I Pass  45: suminf.    1.52368 (9) obj. -8032.1 iterations 22
Cbc0038I Pass  46: suminf.    1.52368 (9) obj. -8032.1 iterations 3
Cbc0038I Pass  47: suminf.    0.90695 (3) obj. -8032.1 iterations 11
Cbc0038I Pass  48: suminf.    0.84158 (3) obj. -8050.01 iterations 15
Cbc0038I Pass  49: suminf.    0.92014 (3) obj. -8032.1 iterations 9
Cbc0038I Pass  50: suminf.    2.81145 (15) obj. -8032.1 iterations 18
Cbc0038I Pass  51: suminf.    2.54195 (13) obj. -8032.1 iterations 4
Cbc0038I Pass  52: suminf.    2.08482 (7) obj. -8032.1 iterations 22
Cbc0038I Pass  53: suminf.    1.41152 (5) obj. -8032.1 iterations 6
Cbc0038I Pass  54: suminf.    1.08482 (4) obj. -8229.36 iterations 4
Cbc0038I Pass  55: suminf.    0.92014 (3) obj. -8032.1 iterations 9
Cbc0038I Pass  56: suminf.    0.84158 (3) obj. -8050.01 iterations 14
Cbc0038I Pass  57: suminf.    2.99450 (11) obj. -8032.1 iterations 19
Cbc0038I Pass  58: suminf.    1.92816 (8) obj. -8356.12 iterations 11
Cbc0038I Pass  59: suminf.    1.92816 (8) obj. -8356.12 iterations 0
Cbc0038I Pass  60: suminf.    3.74597 (16) obj. -8032.1 iterations 12
Cbc0038I Pass  61: suminf.    2.92456 (14) obj. -8032.1 iterations 7
Cbc0038I Pass  62: suminf.    2.64204 (12) obj. -8278.87 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -7426.72 - took 0.04 seconds
Cbc0012I Integer solution of -7426.7229 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 90 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 20 added rows had average density of 10.65
Cbc0013I At root node, 20 cuts changed objective from -9588.7764 to -7437.6372 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 255 row cuts average 2.0 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 35 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7426.722899999999, took 47 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 44 (-6) columns and 248 (-37) elements
Clp1000I sum of infeasibilities 0.00822756 - average 9.79471e-05, 23 fixed columns
Coin0506I Presolve 29 (-55) rows, 20 (-24) columns and 90 (-158) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Coin0511I After Postsolve, objective 8059.8134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.57778 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Coin0511I After Postsolve, objective 8059.8134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8059.813388 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 84 rows, 44 columns (43 integer (43 of which binary)) and 248 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.094%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.15899
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7025.2 iterations 21
Cbc0038I Solution found of -7025.2
Cbc0038I Relaxing continuous gives -7025.2
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 44 columns, reduced to 23 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7025.2 to -7426.72 (0.01 seconds)
Cbc0038I Round again with cutoff of -7490.03
Cbc0038I Pass   2: suminf.    0.73385 (4) obj. -7490.03 iterations 8
Cbc0038I Pass   3: suminf.    0.41302 (3) obj. -7490.03 iterations 10
Cbc0038I Pass   4: suminf.    1.00000 (9) obj. -7490.03 iterations 13
Cbc0038I Pass   5: suminf.    0.52536 (5) obj. -7490.03 iterations 7
Cbc0038I Pass   6: suminf.    0.51803 (5) obj. -7490.03 iterations 5
Cbc0038I Pass   7: suminf.    0.43298 (3) obj. -7490.03 iterations 12
Cbc0038I Pass   8: suminf.    0.15605 (1) obj. -7490.03 iterations 5
Cbc0038I Pass   9: suminf.    0.25930 (2) obj. -7490.03 iterations 2
Cbc0038I Pass  10: suminf.    2.78303 (10) obj. -7490.03 iterations 11
Cbc0038I Pass  11: suminf.    2.18723 (12) obj. -7490.03 iterations 11
Cbc0038I Pass  12: suminf.    1.00000 (6) obj. -7490.03 iterations 18
Cbc0038I Pass  13: suminf.    0.43298 (3) obj. -7490.03 iterations 7
Cbc0038I Pass  14: suminf.    1.70348 (7) obj. -7490.03 iterations 7
Cbc0038I Pass  15: suminf.    1.49858 (11) obj. -7490.03 iterations 7
Cbc0038I Pass  16: suminf.    0.50292 (4) obj. -7490.03 iterations 16
Cbc0038I Pass  17: suminf.    1.00000 (9) obj. -7490.03 iterations 12
Cbc0038I Pass  18: suminf.    0.66672 (4) obj. -7490.03 iterations 6
Cbc0038I Pass  19: suminf.    0.60863 (6) obj. -7490.03 iterations 5
Cbc0038I Pass  20: suminf.    0.92326 (5) obj. -7490.03 iterations 10
Cbc0038I Pass  21: suminf.    0.85792 (4) obj. -7490.03 iterations 1
Cbc0038I Pass  22: suminf.    0.22940 (1) obj. -7490.03 iterations 6
Cbc0038I Pass  23: suminf.    0.16770 (1) obj. -7490.03 iterations 1
Cbc0038I Pass  24: suminf.    1.63831 (7) obj. -7490.03 iterations 14
Cbc0038I Pass  25: suminf.    0.43697 (3) obj. -7490.03 iterations 20
Cbc0038I Pass  26: suminf.    0.35088 (2) obj. -7490.03 iterations 3
Cbc0038I Pass  27: suminf.    0.03479 (1) obj. -7490.03 iterations 2
Cbc0038I Pass  28: suminf.    4.59909 (15) obj. -7490.03 iterations 17
Cbc0038I Pass  29: suminf.    1.98545 (8) obj. -7490.03 iterations 4
Cbc0038I Pass  30: suminf.    1.00000 (6) obj. -7490.03 iterations 6
Cbc0038I Pass  31: suminf.    0.94857 (5) obj. -7490.03 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 44 columns, reduced to 45 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7426.72 - took 0.03 seconds
Cbc0012I Integer solution of -7426.7229 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 84 rows 44 columns, reduced to 23 rows 17 columns
Cbc0031I 6 added rows had average density of 4.3333333
Cbc0013I At root node, 15 cuts changed objective from -8059.8134 to -7426.7229 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 4.5 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7426.722899999999, took 10 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 89 (-8) columns and 1234 (-180) elements
Clp1000I sum of infeasibilities 1.76049e-06 - average 2.02355e-08, 80 fixed columns
Coin0506I Presolve 8 (-79) rows, 9 (-80) columns and 28 (-1206) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 7193.6372
Clp0000I Optimal - objective value 7193.6372
Coin0511I After Postsolve, objective 7193.6372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6262474 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 10497.476
Clp0000I Optimal - objective value 10497.476
Clp0000I Optimal - objective value 10497.476
Coin0511I After Postsolve, objective 10497.476, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10497.47621 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 90 columns (90 integer (90 of which binary)) and 1239 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.103%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.03432
Cbc0038I Pass   1: suminf.    4.68565 (28) obj. -7073.55 iterations 31
Cbc0038I Pass   2: suminf.    4.68565 (28) obj. -7073.55 iterations 0
Cbc0038I Pass   3: suminf.    1.64636 (13) obj. -5916.49 iterations 15
Cbc0038I Solution found of -5469.84
Cbc0038I Rounding solution of -5553.64 is better than previous of -5469.84

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -5553.64 to -7426.72 (0.02 seconds)
Cbc0038I Round again with cutoff of -7642.93
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.01855 (45) obj. -7642.93 iterations 17
Cbc0038I Pass   5: suminf.    6.01855 (45) obj. -7642.93 iterations 0
Cbc0038I Pass   6: suminf.    5.15574 (34) obj. -7642.93 iterations 11
Cbc0038I Pass   7: suminf.    5.15574 (34) obj. -7642.93 iterations 0
Cbc0038I Pass   8: suminf.    2.11665 (18) obj. -7642.93 iterations 17
Cbc0038I Pass   9: suminf.    2.11665 (18) obj. -7642.93 iterations 1
Cbc0038I Pass  10: suminf.    0.41249 (1) obj. -7642.93 iterations 31
Cbc0038I Pass  11: suminf.    0.30952 (1) obj. -7680.82 iterations 9
Cbc0038I Pass  12: suminf.    0.41249 (1) obj. -7642.93 iterations 5
Cbc0038I Pass  13: suminf.    2.65905 (9) obj. -7642.93 iterations 16
Cbc0038I Pass  14: suminf.    2.65905 (9) obj. -7642.93 iterations 1
Cbc0038I Pass  15: suminf.    0.38367 (2) obj. -7642.93 iterations 17
Cbc0038I Pass  16: suminf.    3.65379 (16) obj. -7642.93 iterations 26
Cbc0038I Pass  17: suminf.    2.99891 (16) obj. -7642.93 iterations 7
Cbc0038I Pass  18: suminf.    2.99891 (16) obj. -7642.93 iterations 0
Cbc0038I Pass  19: suminf.    0.41249 (1) obj. -7642.93 iterations 22
Cbc0038I Pass  20: suminf.    0.30952 (1) obj. -7680.82 iterations 10
Cbc0038I Pass  21: suminf.    0.41249 (1) obj. -7642.93 iterations 3
Cbc0038I Pass  22: suminf.    3.23253 (15) obj. -7642.93 iterations 27
Cbc0038I Pass  23: suminf.    3.23253 (15) obj. -7642.93 iterations 8
Cbc0038I Pass  24: suminf.    0.73078 (3) obj. -7642.93 iterations 22
Cbc0038I Pass  25: suminf.    0.55397 (3) obj. -7708 iterations 7
Cbc0038I Pass  26: suminf.    2.41323 (12) obj. -7642.93 iterations 15
Cbc0038I Pass  27: suminf.    2.41323 (12) obj. -7642.93 iterations 4
Cbc0038I Pass  28: suminf.    0.41249 (1) obj. -7642.93 iterations 27
Cbc0038I Pass  29: suminf.    0.30952 (1) obj. -7680.82 iterations 16
Cbc0038I Pass  30: suminf.    3.10177 (12) obj. -7642.93 iterations 14
Cbc0038I Pass  31: suminf.    2.45941 (10) obj. -8178.57 iterations 6
Cbc0038I Pass  32: suminf.    4.18267 (17) obj. -7642.93 iterations 10
Cbc0038I Pass  33: suminf.    3.88755 (16) obj. -7642.93 iterations 1
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 90 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -8032.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    6.82170 (45) obj. -8032.1 iterations 0
Cbc0038I Pass  34: suminf.    6.82170 (45) obj. -8032.1 iterations 0
Cbc0038I Pass  35: suminf.    4.52478 (29) obj. -8032.1 iterations 16
Cbc0038I Pass  36: suminf.    1.28086 (10) obj. -8032.1 iterations 35
Cbc0038I Pass  37: suminf.    1.28086 (10) obj. -8032.1 iterations 0
Cbc0038I Pass  38: suminf.    0.92014 (3) obj. -8032.1 iterations 13
Cbc0038I Pass  39: suminf.    0.84158 (3) obj. -8050.01 iterations 11
Cbc0038I Pass  40: suminf.    0.92014 (3) obj. -8032.1 iterations 9
Cbc0038I Pass  41: suminf.    2.72945 (14) obj. -8032.1 iterations 20
Cbc0038I Pass  42: suminf.    2.38754 (11) obj. -8110.29 iterations 13
Cbc0038I Pass  43: suminf.    3.88156 (18) obj. -8032.1 iterations 20
Cbc0038I Pass  44: suminf.    3.88156 (18) obj. -8032.1 iterations 4
Cbc0038I Pass  45: suminf.    1.52368 (9) obj. -8032.1 iterations 22
Cbc0038I Pass  46: suminf.    1.52368 (9) obj. -8032.1 iterations 3
Cbc0038I Pass  47: suminf.    0.90695 (3) obj. -8032.1 iterations 11
Cbc0038I Pass  48: suminf.    0.84158 (3) obj. -8050.01 iterations 15
Cbc0038I Pass  49: suminf.    0.92014 (3) obj. -8032.1 iterations 9
Cbc0038I Pass  50: suminf.    2.81145 (15) obj. -8032.1 iterations 18
Cbc0038I Pass  51: suminf.    2.54195 (13) obj. -8032.1 iterations 4
Cbc0038I Pass  52: suminf.    2.08482 (7) obj. -8032.1 iterations 22
Cbc0038I Pass  53: suminf.    1.41152 (5) obj. -8032.1 iterations 6
Cbc0038I Pass  54: suminf.    1.08482 (4) obj. -8229.36 iterations 4
Cbc0038I Pass  55: suminf.    0.92014 (3) obj. -8032.1 iterations 9
Cbc0038I Pass  56: suminf.    0.84158 (3) obj. -8050.01 iterations 14
Cbc0038I Pass  57: suminf.    2.99450 (11) obj. -8032.1 iterations 19
Cbc0038I Pass  58: suminf.    1.92816 (8) obj. -8356.12 iterations 11
Cbc0038I Pass  59: suminf.    1.92816 (8) obj. -8356.12 iterations 0
Cbc0038I Pass  60: suminf.    3.74597 (16) obj. -8032.1 iterations 12
Cbc0038I Pass  61: suminf.    2.92456 (14) obj. -8032.1 iterations 7
Cbc0038I Pass  62: suminf.    2.64204 (12) obj. -8278.87 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7426.72 - took 0.04 seconds
Cbc0012I Integer solution of -7426.7229 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 90 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 20 added rows had average density of 10.65
Cbc0013I At root node, 20 cuts changed objective from -9588.7764 to -7437.6372 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 255 row cuts average 2.0 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 35 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7426.722899999999, took 47 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

