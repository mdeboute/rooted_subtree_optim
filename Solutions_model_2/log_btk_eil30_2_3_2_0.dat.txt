Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 4.02569e-05 - average 7.45499e-07, 2 fixed columns
Coin0506I Presolve 51 (-3) rows, 28 (-2) columns and 150 (-10) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Coin0511I After Postsolve, objective 83.320833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25959237 - largest nonzero change 0 ( 0%) - largest zero change 2.8022924e-05
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Coin0511I After Postsolve, objective 83.320833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.3208332 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.89332
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.10038 iterations 23
Cbc0038I Solution found of -5.10038
Cbc0038I Relaxing continuous gives -5.10038
Cbc0038I Rounding solution of -19.8501 is better than previous of -5.10038

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 42 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -19.8501 to -35.7506 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.1297
Cbc0038I Pass   2: suminf.    0.35905 (2) obj. -40.1297 iterations 2
Cbc0038I Pass   3: suminf.    0.15345 (2) obj. -40.1297 iterations 2
Cbc0038I Pass   4: suminf.    0.54020 (2) obj. -40.1297 iterations 1
Cbc0038I Pass   5: suminf.    1.97954 (6) obj. -40.1297 iterations 8
Cbc0038I Pass   6: suminf.    0.82099 (4) obj. -40.1297 iterations 5
Cbc0038I Pass   7: suminf.    0.82099 (4) obj. -40.1297 iterations 1
Cbc0038I Pass   8: suminf.    0.73625 (3) obj. -40.1297 iterations 5
Cbc0038I Pass   9: suminf.    0.59715 (3) obj. -40.1297 iterations 2
Cbc0038I Pass  10: suminf.    0.43353 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  11: suminf.    1.28106 (7) obj. -40.1297 iterations 5
Cbc0038I Pass  12: suminf.    1.19857 (4) obj. -40.1297 iterations 1
Cbc0038I Pass  13: suminf.    0.61504 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  14: suminf.    0.61504 (2) obj. -40.1297 iterations 0
Cbc0038I Pass  15: suminf.    0.73084 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  16: suminf.    0.44366 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  17: suminf.    1.57837 (5) obj. -40.1297 iterations 8
Cbc0038I Pass  18: suminf.    1.07626 (3) obj. -40.1297 iterations 4
Cbc0038I Pass  19: suminf.    0.74613 (4) obj. -40.1297 iterations 5
Cbc0038I Pass  20: suminf.    0.61504 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  21: suminf.    0.61504 (2) obj. -40.1297 iterations 0
Cbc0038I Pass  22: suminf.    0.73084 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  23: suminf.    0.44366 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  24: suminf.    0.61504 (2) obj. -40.1297 iterations 2
Cbc0038I Pass  25: suminf.    1.74146 (5) obj. -40.1297 iterations 1
Cbc0038I Pass  26: suminf.    1.99516 (7) obj. -40.1297 iterations 9
Cbc0038I Pass  27: suminf.    1.29062 (6) obj. -40.1297 iterations 3
Cbc0038I Pass  28: suminf.    2.20666 (10) obj. -40.1297 iterations 8
Cbc0038I Pass  29: suminf.    1.81845 (6) obj. -40.1297 iterations 3
Cbc0038I Pass  30: suminf.    1.86722 (6) obj. -40.1297 iterations 11
Cbc0038I Pass  31: suminf.    1.50061 (5) obj. -40.1297 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -35.7506 - took 0.07 seconds
Cbc0012I Integer solution of -35.750587 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 42 rows 23 columns
Cbc0031I 13 added rows had average density of 20.307692
Cbc0013I At root node, 13 cuts changed objective from -79.541172 to -51.431322 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2111 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 934 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.657 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -35.750587 best solution, best possible -51.431216 (1.35 seconds)
Cbc0012I Integer solution of -36.099517 found by rounding after 2789 iterations and 4 nodes (1.40 seconds)
Cbc0001I Search completed - best objective -36.0995173191, took 3025 iterations and 12 nodes (1.41 seconds)
Cbc0032I Strong branching done 134 times (1384 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-9) rows, 57 (-3) columns and 561 (-51) elements
Clp1000I sum of infeasibilities 6.60782e-11 - average 1.24676e-12, 32 fixed columns
Coin0506I Presolve 21 (-32) rows, 24 (-33) columns and 85 (-476) elements
Clp0006I 0  Obj 12.73521 Dual inf 12.494118 (23)
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 0.26070651 - largest nonzero change 2.9196393e-05 ( 0.0024750985%) - largest zero change 2.7136955e-05
Clp0000I Optimal - objective value 12.84736
Clp0000I Optimal - objective value 12.84736
Coin0511I After Postsolve, objective 12.84736, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 12.84736 Dual inf 794.61089 (29)
Clp0014I Perturbing problem by 0.001% of 0.21957023 - largest nonzero change 2.7838714e-05 ( 0.0023600025%) - largest zero change 2.9196393e-05
Clp0000I Optimal - objective value 104.94504
Clp0000I Optimal - objective value 104.94504
Clp0000I Optimal - objective value 104.94504
Coin0511I After Postsolve, objective 104.94504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.9450376 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 57 columns (57 integer (57 of which binary)) and 567 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.872%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.11869
Cbc0038I Pass   1: suminf.    3.47896 (15) obj. -67.2546 iterations 16
Cbc0038I Pass   2: suminf.    3.47896 (15) obj. -67.2546 iterations 1
Cbc0038I Solution found of -19.85
Cbc0038I Rounding solution of -30.5998 is better than previous of -19.85

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 57 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -30.5998 to -35.7504 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.5893
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.47896 (15) obj. -67.2546 iterations 0
Cbc0038I Pass   4: suminf.    3.47896 (15) obj. -67.2546 iterations 3
Cbc0038I Pass   5: suminf.    1.01937 (7) obj. -41.5893 iterations 11
Cbc0038I Pass   6: suminf.    0.62749 (2) obj. -41.5893 iterations 10
Cbc0038I Pass   7: suminf.    0.59958 (2) obj. -41.5893 iterations 2
Cbc0038I Pass   8: suminf.    1.46576 (5) obj. -43.5833 iterations 10
Cbc0038I Pass   9: suminf.    1.46576 (5) obj. -43.5833 iterations 4
Cbc0038I Pass  10: suminf.    0.68369 (2) obj. -41.5893 iterations 8
Cbc0038I Pass  11: suminf.    0.68369 (2) obj. -41.5893 iterations 0
Cbc0038I Pass  12: suminf.    0.62897 (2) obj. -41.5893 iterations 2
Cbc0038I Pass  13: suminf.    1.69183 (7) obj. -41.5893 iterations 13
Cbc0038I Pass  14: suminf.    1.54463 (7) obj. -41.5893 iterations 6
Cbc0038I Pass  15: suminf.    1.51790 (4) obj. -41.5893 iterations 10
Cbc0038I Pass  16: suminf.    1.48882 (8) obj. -41.5893 iterations 1
Cbc0038I Pass  17: suminf.    1.29834 (6) obj. -41.5893 iterations 6
Cbc0038I Pass  18: suminf.    1.29834 (6) obj. -41.5893 iterations 0
Cbc0038I Pass  19: suminf.    1.60810 (5) obj. -41.5893 iterations 4
Cbc0038I Pass  20: suminf.    1.34998 (5) obj. -41.5893 iterations 4
Cbc0038I Pass  21: suminf.    2.32339 (8) obj. -41.5893 iterations 8
Cbc0038I Pass  22: suminf.    2.27698 (7) obj. -41.5893 iterations 2
Cbc0038I Pass  23: suminf.    1.29834 (6) obj. -41.5893 iterations 9
Cbc0038I Pass  24: suminf.    1.29834 (6) obj. -41.5893 iterations 0
Cbc0038I Pass  25: suminf.    1.60810 (5) obj. -41.5893 iterations 4
Cbc0038I Pass  26: suminf.    1.34998 (5) obj. -41.5893 iterations 4
Cbc0038I Pass  27: suminf.    3.37518 (12) obj. -41.5893 iterations 26
Cbc0038I Pass  28: suminf.    2.21988 (10) obj. -41.5893 iterations 10
Cbc0038I Pass  29: suminf.    1.62501 (8) obj. -41.5893 iterations 10
Cbc0038I Pass  30: suminf.    1.62501 (8) obj. -41.5893 iterations 1
Cbc0038I Pass  31: suminf.    2.02515 (8) obj. -41.5893 iterations 6
Cbc0038I Pass  32: suminf.    2.02515 (8) obj. -41.5893 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 57 columns, reduced to 37 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -35.7504 to -36.0002 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.099
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.47896 (15) obj. -67.2546 iterations 0
Cbc0038I Pass  33: suminf.    3.47896 (15) obj. -67.2546 iterations 3
Cbc0038I Pass  34: suminf.    0.91877 (3) obj. -52.099 iterations 21
Cbc0038I Pass  35: suminf.    0.89805 (3) obj. -52.5434 iterations 1
Cbc0038I Pass  36: suminf.    0.99376 (3) obj. -52.099 iterations 4
Cbc0038I Pass  37: suminf.    0.99376 (3) obj. -52.099 iterations 0
Cbc0038I Pass  38: suminf.    1.17114 (3) obj. -52.099 iterations 2
Cbc0038I Pass  39: suminf.    1.17114 (3) obj. -52.099 iterations 0
Cbc0038I Pass  40: suminf.    0.99376 (3) obj. -52.099 iterations 3
Cbc0038I Pass  41: suminf.    1.71695 (5) obj. -52.099 iterations 10
Cbc0038I Pass  42: suminf.    1.07661 (4) obj. -52.099 iterations 10
Cbc0038I Pass  43: suminf.    1.30499 (4) obj. -52.099 iterations 4
Cbc0038I Pass  44: suminf.    1.30499 (4) obj. -52.099 iterations 0
Cbc0038I Pass  45: suminf.    1.07661 (4) obj. -52.099 iterations 5
Cbc0038I Pass  46: suminf.    3.54369 (10) obj. -52.099 iterations 9
Cbc0038I Pass  47: suminf.    2.25299 (10) obj. -52.099 iterations 5
Cbc0038I Pass  48: suminf.    1.93860 (9) obj. -52.099 iterations 3
Cbc0038I Pass  49: suminf.    1.35302 (5) obj. -52.099 iterations 17
Cbc0038I Pass  50: suminf.    1.35302 (5) obj. -52.099 iterations 0
Cbc0038I Pass  51: suminf.    1.13195 (5) obj. -52.099 iterations 3
Cbc0038I Pass  52: suminf.    1.13195 (5) obj. -52.099 iterations 0
Cbc0038I Pass  53: suminf.    1.35302 (5) obj. -52.099 iterations 3
Cbc0038I Pass  54: suminf.    2.12620 (9) obj. -52.099 iterations 6
Cbc0038I Pass  55: suminf.    1.61595 (7) obj. -52.099 iterations 6
Cbc0038I Pass  56: suminf.    1.82182 (6) obj. -52.099 iterations 9
Cbc0038I Pass  57: suminf.    1.55123 (6) obj. -52.099 iterations 6
Cbc0038I Pass  58: suminf.    1.64576 (9) obj. -52.099 iterations 12
Cbc0038I Pass  59: suminf.    1.52640 (8) obj. -52.099 iterations 2
Cbc0038I Pass  60: suminf.    1.70190 (7) obj. -52.099 iterations 9
Cbc0038I Pass  61: suminf.    1.46243 (7) obj. -52.099 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 57 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.0002 - took 0.03 seconds
Cbc0012I Integer solution of -36.000244 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 53 rows 57 columns, reduced to 4 rows 4 columns
Cbc0031I 16 added rows had average density of 16.25
Cbc0013I At root node, 16 cuts changed objective from -94.137875 to -41.295203 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 887 row cuts average 2.8 elements, 17 column cuts (17 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 470 row cuts average 33.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 36 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.646 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.000244 best solution, best possible -41.295135 (1.29 seconds)
Cbc0012I Integer solution of -36.099517 found by DiveCoefficient after 1353 iterations and 4 nodes (1.32 seconds)
Cbc0001I Search completed - best objective -36.0995173191, took 1514 iterations and 10 nodes (1.34 seconds)
Cbc0032I Strong branching done 160 times (1193 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.35

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 4.02569e-05 - average 7.45499e-07, 2 fixed columns
Coin0506I Presolve 51 (-3) rows, 28 (-2) columns and 150 (-10) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Coin0511I After Postsolve, objective 83.320833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25959237 - largest nonzero change 0 ( 0%) - largest zero change 2.8022924e-05
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Coin0511I After Postsolve, objective 83.320833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.3208332 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.89332
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.10038 iterations 23
Cbc0038I Solution found of -5.10038
Cbc0038I Relaxing continuous gives -5.10038
Cbc0038I Rounding solution of -19.8501 is better than previous of -5.10038

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 42 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -19.8501 to -35.7506 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.1297
Cbc0038I Pass   2: suminf.    0.35905 (2) obj. -40.1297 iterations 2
Cbc0038I Pass   3: suminf.    0.15345 (2) obj. -40.1297 iterations 2
Cbc0038I Pass   4: suminf.    0.54020 (2) obj. -40.1297 iterations 1
Cbc0038I Pass   5: suminf.    1.97954 (6) obj. -40.1297 iterations 8
Cbc0038I Pass   6: suminf.    0.82099 (4) obj. -40.1297 iterations 5
Cbc0038I Pass   7: suminf.    0.82099 (4) obj. -40.1297 iterations 1
Cbc0038I Pass   8: suminf.    0.73625 (3) obj. -40.1297 iterations 5
Cbc0038I Pass   9: suminf.    0.59715 (3) obj. -40.1297 iterations 2
Cbc0038I Pass  10: suminf.    0.43353 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  11: suminf.    1.28106 (7) obj. -40.1297 iterations 5
Cbc0038I Pass  12: suminf.    1.19857 (4) obj. -40.1297 iterations 1
Cbc0038I Pass  13: suminf.    0.61504 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  14: suminf.    0.61504 (2) obj. -40.1297 iterations 0
Cbc0038I Pass  15: suminf.    0.73084 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  16: suminf.    0.44366 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  17: suminf.    1.57837 (5) obj. -40.1297 iterations 8
Cbc0038I Pass  18: suminf.    1.07626 (3) obj. -40.1297 iterations 4
Cbc0038I Pass  19: suminf.    0.74613 (4) obj. -40.1297 iterations 5
Cbc0038I Pass  20: suminf.    0.61504 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  21: suminf.    0.61504 (2) obj. -40.1297 iterations 0
Cbc0038I Pass  22: suminf.    0.73084 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  23: suminf.    0.44366 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  24: suminf.    0.61504 (2) obj. -40.1297 iterations 2
Cbc0038I Pass  25: suminf.    1.74146 (5) obj. -40.1297 iterations 1
Cbc0038I Pass  26: suminf.    1.99516 (7) obj. -40.1297 iterations 9
Cbc0038I Pass  27: suminf.    1.29062 (6) obj. -40.1297 iterations 3
Cbc0038I Pass  28: suminf.    2.20666 (10) obj. -40.1297 iterations 8
Cbc0038I Pass  29: suminf.    1.81845 (6) obj. -40.1297 iterations 3
Cbc0038I Pass  30: suminf.    1.86722 (6) obj. -40.1297 iterations 11
Cbc0038I Pass  31: suminf.    1.50061 (5) obj. -40.1297 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -35.7506 - took 0.03 seconds
Cbc0012I Integer solution of -35.750587 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 42 rows 23 columns
Cbc0031I 13 added rows had average density of 20.307692
Cbc0013I At root node, 13 cuts changed objective from -79.541172 to -51.431322 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2111 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 934 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.757 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -35.750587 best solution, best possible -51.431216 (1.60 seconds)
Cbc0012I Integer solution of -36.099517 found by rounding after 2789 iterations and 4 nodes (1.65 seconds)
Cbc0001I Search completed - best objective -36.0995173191, took 3025 iterations and 12 nodes (1.66 seconds)
Cbc0032I Strong branching done 134 times (1384 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-10) rows, 57 (-4) columns and 561 (-52) elements
Clp1000I sum of infeasibilities 6.60782e-11 - average 1.24676e-12, 32 fixed columns
Coin0506I Presolve 21 (-32) rows, 24 (-33) columns and 85 (-476) elements
Clp0006I 0  Obj 12.73521 Dual inf 12.494118 (23)
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 0.26070651 - largest nonzero change 2.9196393e-05 ( 0.0024750985%) - largest zero change 2.7136955e-05
Clp0000I Optimal - objective value 12.84736
Clp0000I Optimal - objective value 12.84736
Coin0511I After Postsolve, objective 12.84736, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 12.84736 Dual inf 794.61089 (29)
Clp0014I Perturbing problem by 0.001% of 0.21957023 - largest nonzero change 2.7838714e-05 ( 0.0023600025%) - largest zero change 2.9196393e-05
Clp0000I Optimal - objective value 104.94504
Clp0000I Optimal - objective value 104.94504
Clp0000I Optimal - objective value 104.94504
Coin0511I After Postsolve, objective 104.94504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.9450376 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 57 columns (57 integer (57 of which binary)) and 567 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.872%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.11869
Cbc0038I Pass   1: suminf.    3.47896 (15) obj. -67.2546 iterations 16
Cbc0038I Pass   2: suminf.    3.47896 (15) obj. -67.2546 iterations 1
Cbc0038I Solution found of -19.85
Cbc0038I Rounding solution of -30.5998 is better than previous of -19.85

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 57 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -30.5998 to -35.7504 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.5893
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.47896 (15) obj. -67.2546 iterations 0
Cbc0038I Pass   4: suminf.    3.47896 (15) obj. -67.2546 iterations 3
Cbc0038I Pass   5: suminf.    1.01937 (7) obj. -41.5893 iterations 11
Cbc0038I Pass   6: suminf.    0.62749 (2) obj. -41.5893 iterations 10
Cbc0038I Pass   7: suminf.    0.59958 (2) obj. -41.5893 iterations 2
Cbc0038I Pass   8: suminf.    1.46576 (5) obj. -43.5833 iterations 10
Cbc0038I Pass   9: suminf.    1.46576 (5) obj. -43.5833 iterations 4
Cbc0038I Pass  10: suminf.    0.68369 (2) obj. -41.5893 iterations 8
Cbc0038I Pass  11: suminf.    0.68369 (2) obj. -41.5893 iterations 0
Cbc0038I Pass  12: suminf.    0.62897 (2) obj. -41.5893 iterations 2
Cbc0038I Pass  13: suminf.    1.69183 (7) obj. -41.5893 iterations 13
Cbc0038I Pass  14: suminf.    1.54463 (7) obj. -41.5893 iterations 6
Cbc0038I Pass  15: suminf.    1.51790 (4) obj. -41.5893 iterations 10
Cbc0038I Pass  16: suminf.    1.48882 (8) obj. -41.5893 iterations 1
Cbc0038I Pass  17: suminf.    1.29834 (6) obj. -41.5893 iterations 6
Cbc0038I Pass  18: suminf.    1.29834 (6) obj. -41.5893 iterations 0
Cbc0038I Pass  19: suminf.    1.60810 (5) obj. -41.5893 iterations 4
Cbc0038I Pass  20: suminf.    1.34998 (5) obj. -41.5893 iterations 4
Cbc0038I Pass  21: suminf.    2.32339 (8) obj. -41.5893 iterations 8
Cbc0038I Pass  22: suminf.    2.27698 (7) obj. -41.5893 iterations 2
Cbc0038I Pass  23: suminf.    1.29834 (6) obj. -41.5893 iterations 9
Cbc0038I Pass  24: suminf.    1.29834 (6) obj. -41.5893 iterations 0
Cbc0038I Pass  25: suminf.    1.60810 (5) obj. -41.5893 iterations 4
Cbc0038I Pass  26: suminf.    1.34998 (5) obj. -41.5893 iterations 4
Cbc0038I Pass  27: suminf.    3.37518 (12) obj. -41.5893 iterations 26
Cbc0038I Pass  28: suminf.    2.21988 (10) obj. -41.5893 iterations 10
Cbc0038I Pass  29: suminf.    1.62501 (8) obj. -41.5893 iterations 10
Cbc0038I Pass  30: suminf.    1.62501 (8) obj. -41.5893 iterations 1
Cbc0038I Pass  31: suminf.    2.02515 (8) obj. -41.5893 iterations 6
Cbc0038I Pass  32: suminf.    2.02515 (8) obj. -41.5893 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 57 columns, reduced to 37 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -35.7504 to -36.0002 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.099
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.47896 (15) obj. -67.2546 iterations 0
Cbc0038I Pass  33: suminf.    3.47896 (15) obj. -67.2546 iterations 3
Cbc0038I Pass  34: suminf.    0.91877 (3) obj. -52.099 iterations 21
Cbc0038I Pass  35: suminf.    0.89805 (3) obj. -52.5434 iterations 1
Cbc0038I Pass  36: suminf.    0.99376 (3) obj. -52.099 iterations 4
Cbc0038I Pass  37: suminf.    0.99376 (3) obj. -52.099 iterations 0
Cbc0038I Pass  38: suminf.    1.17114 (3) obj. -52.099 iterations 2
Cbc0038I Pass  39: suminf.    1.17114 (3) obj. -52.099 iterations 0
Cbc0038I Pass  40: suminf.    0.99376 (3) obj. -52.099 iterations 3
Cbc0038I Pass  41: suminf.    1.71695 (5) obj. -52.099 iterations 10
Cbc0038I Pass  42: suminf.    1.07661 (4) obj. -52.099 iterations 10
Cbc0038I Pass  43: suminf.    1.30499 (4) obj. -52.099 iterations 4
Cbc0038I Pass  44: suminf.    1.30499 (4) obj. -52.099 iterations 0
Cbc0038I Pass  45: suminf.    1.07661 (4) obj. -52.099 iterations 5
Cbc0038I Pass  46: suminf.    3.54369 (10) obj. -52.099 iterations 9
Cbc0038I Pass  47: suminf.    2.25299 (10) obj. -52.099 iterations 5
Cbc0038I Pass  48: suminf.    1.93860 (9) obj. -52.099 iterations 3
Cbc0038I Pass  49: suminf.    1.35302 (5) obj. -52.099 iterations 17
Cbc0038I Pass  50: suminf.    1.35302 (5) obj. -52.099 iterations 0
Cbc0038I Pass  51: suminf.    1.13195 (5) obj. -52.099 iterations 3
Cbc0038I Pass  52: suminf.    1.13195 (5) obj. -52.099 iterations 0
Cbc0038I Pass  53: suminf.    1.35302 (5) obj. -52.099 iterations 3
Cbc0038I Pass  54: suminf.    2.12620 (9) obj. -52.099 iterations 6
Cbc0038I Pass  55: suminf.    1.61595 (7) obj. -52.099 iterations 6
Cbc0038I Pass  56: suminf.    1.82182 (6) obj. -52.099 iterations 9
Cbc0038I Pass  57: suminf.    1.55123 (6) obj. -52.099 iterations 6
Cbc0038I Pass  58: suminf.    1.64576 (9) obj. -52.099 iterations 12
Cbc0038I Pass  59: suminf.    1.52640 (8) obj. -52.099 iterations 2
Cbc0038I Pass  60: suminf.    1.70190 (7) obj. -52.099 iterations 9
Cbc0038I Pass  61: suminf.    1.46243 (7) obj. -52.099 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 57 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.0002 - took 0.03 seconds
Cbc0012I Integer solution of -36.000244 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 53 rows 57 columns, reduced to 4 rows 4 columns
Cbc0031I 16 added rows had average density of 16.25
Cbc0013I At root node, 16 cuts changed objective from -94.137875 to -41.295203 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 887 row cuts average 2.8 elements, 17 column cuts (17 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 470 row cuts average 33.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 36 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.000244 best solution, best possible -41.295135 (1.47 seconds)
Cbc0012I Integer solution of -36.099517 found by DiveCoefficient after 1353 iterations and 4 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -36.0995173191, took 1514 iterations and 10 nodes (1.53 seconds)
Cbc0032I Strong branching done 160 times (1193 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.53

