Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 24 (-9) columns and 126 (-57) elements
Clp1000I sum of infeasibilities 3.21976e-06 - average 7.48782e-08, 10 fixed columns
Coin0506I Presolve 24 (-19) rows, 14 (-10) columns and 68 (-58) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 1142.4201
Clp0000I Optimal - objective value 1142.4201
Coin0511I After Postsolve, objective 1142.4201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1142.4201
Clp0000I Optimal - objective value 1142.4201
Clp0000I Optimal - objective value 1142.4201
Coin0511I After Postsolve, objective 1142.4201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1142.420067 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 24 columns (23 integer (23 of which binary)) and 130 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.762%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.37668
Cbc0038I Pass   1: suminf.    0.93000 (2) obj. -1081.19 iterations 8
Cbc0038I Solution found of -584.979
Cbc0038I Relaxing continuous gives -584.979
Cbc0038I Rounding solution of -873.423 is better than previous of -584.979

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -873.423 to -974.743 (0.01 seconds)
Cbc0038I Round again with cutoff of -989.838
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.93000 (2) obj. -1081.19 iterations 0
Cbc0038I Pass   3: suminf.    0.34707 (1) obj. -989.838 iterations 2
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -998.357 iterations 1
Cbc0038I Pass   5: suminf.    0.69056 (2) obj. -989.838 iterations 4
Cbc0038I Pass   6: suminf.    0.33333 (1) obj. -998.357 iterations 4
Cbc0038I Pass   7: suminf.    1.23236 (3) obj. -989.838 iterations 3
Cbc0038I Pass   8: suminf.    0.46667 (1) obj. -1034.13 iterations 3
Cbc0038I Pass   9: suminf.    0.39524 (1) obj. -989.838 iterations 1
Cbc0038I Pass  10: suminf.    0.15810 (2) obj. -989.838 iterations 3
Cbc0038I Pass  11: suminf.    0.15810 (2) obj. -989.838 iterations 0
Cbc0038I Pass  12: suminf.    0.57556 (2) obj. -1010.47 iterations 4
Cbc0038I Pass  13: suminf.    0.47509 (2) obj. -989.838 iterations 1
Cbc0038I Pass  14: suminf.    0.66248 (3) obj. -989.838 iterations 10
Cbc0038I Pass  15: suminf.    0.28777 (2) obj. -989.838 iterations 5
Cbc0038I Pass  16: suminf.    0.36453 (2) obj. -998.772 iterations 3
Cbc0038I Pass  17: suminf.    1.12808 (4) obj. -989.838 iterations 11
Cbc0038I Pass  18: suminf.    0.11817 (2) obj. -1011.24 iterations 4
Cbc0038I Pass  19: suminf.    0.60162 (2) obj. -989.838 iterations 5
Cbc0038I Pass  20: suminf.    0.60162 (2) obj. -989.838 iterations 0
Cbc0038I Pass  21: suminf.    0.95854 (2) obj. -989.838 iterations 2
Cbc0038I Pass  22: suminf.    0.73536 (2) obj. -989.838 iterations 1
Cbc0038I Pass  23: suminf.    0.68741 (2) obj. -1019.57 iterations 1
Cbc0038I Pass  24: suminf.    1.31377 (5) obj. -1067.23 iterations 3
Cbc0038I Pass  25: suminf.    0.68741 (2) obj. -1019.57 iterations 3
Cbc0038I Pass  26: suminf.    0.60162 (2) obj. -989.838 iterations 2
Cbc0038I Pass  27: suminf.    0.60162 (2) obj. -989.838 iterations 0
Cbc0038I Pass  28: suminf.    0.95854 (2) obj. -989.838 iterations 2
Cbc0038I Pass  29: suminf.    0.78323 (4) obj. -989.838 iterations 5
Cbc0038I Pass  30: suminf.    0.57470 (3) obj. -989.838 iterations 1
Cbc0038I Pass  31: suminf.    1.13427 (3) obj. -989.838 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -974.743 to -977.428 (0.02 seconds)
Cbc0038I Round again with cutoff of -1017.01
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.93000 (2) obj. -1081.19 iterations 0
Cbc0038I Pass  32: suminf.    0.49021 (2) obj. -1017.01 iterations 1
Cbc0038I Pass  33: suminf.    0.49021 (2) obj. -1017.01 iterations 0
Cbc0038I Pass  34: suminf.    0.86649 (2) obj. -1017.01 iterations 2
Cbc0038I Pass  35: suminf.    0.99402 (6) obj. -1017.01 iterations 9
Cbc0038I Pass  36: suminf.    0.92672 (7) obj. -1017.01 iterations 1
Cbc0038I Pass  37: suminf.    0.67025 (3) obj. -1017.01 iterations 8
Cbc0038I Pass  38: suminf.    0.67025 (3) obj. -1017.01 iterations 0
Cbc0038I Pass  39: suminf.    0.92964 (3) obj. -1017.01 iterations 2
Cbc0038I Pass  40: suminf.    0.92964 (3) obj. -1017.01 iterations 3
Cbc0038I Pass  41: suminf.    0.67025 (3) obj. -1017.01 iterations 3
Cbc0038I Pass  42: suminf.    1.79125 (5) obj. -1017.01 iterations 9
Cbc0038I Pass  43: suminf.    0.32472 (2) obj. -1017.01 iterations 3
Cbc0038I Pass  44: suminf.    0.29053 (2) obj. -1017.01 iterations 4
Cbc0038I Pass  45: suminf.    0.21667 (1) obj. -1062.81 iterations 1
Cbc0038I Pass  46: suminf.    0.61418 (2) obj. -1017.01 iterations 3
Cbc0038I Pass  47: suminf.    0.58593 (3) obj. -1017.01 iterations 5
Cbc0038I Pass  48: suminf.    0.58548 (3) obj. -1017.01 iterations 2
Cbc0038I Pass  49: suminf.    0.55852 (2) obj. -1017.01 iterations 4
Cbc0038I Pass  50: suminf.    0.16667 (1) obj. -1022.15 iterations 2
Cbc0038I Pass  51: suminf.    0.17533 (1) obj. -1017.01 iterations 1
Cbc0038I Pass  52: suminf.    0.55874 (3) obj. -1017.01 iterations 10
Cbc0038I Pass  53: suminf.    0.27650 (1) obj. -1017.01 iterations 9
Cbc0038I Pass  54: suminf.    0.48933 (2) obj. -1050.1 iterations 3
Cbc0038I Pass  55: suminf.    2.05386 (5) obj. -1017.01 iterations 12
Cbc0038I Pass  56: suminf.    0.18909 (1) obj. -1017.01 iterations 9
Cbc0038I Pass  57: suminf.    0.11111 (1) obj. -1042.92 iterations 2
Cbc0038I Pass  58: suminf.    0.39661 (2) obj. -1017.01 iterations 4
Cbc0038I Pass  59: suminf.    0.11111 (1) obj. -1042.92 iterations 4
Cbc0038I Pass  60: suminf.    0.57477 (3) obj. -1017.01 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -977.428 to -993.485 (0.04 seconds)
Cbc0038I Round again with cutoff of -1049.62
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.93000 (2) obj. -1081.19 iterations 0
Cbc0038I Pass  61: suminf.    0.76445 (2) obj. -1049.62 iterations 1
Cbc0038I Pass  62: suminf.    0.76445 (2) obj. -1049.62 iterations 0
Cbc0038I Pass  63: suminf.    0.91908 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  64: suminf.    0.91575 (4) obj. -1049.62 iterations 2
Cbc0038I Pass  65: suminf.    0.91575 (4) obj. -1049.62 iterations 0
Cbc0038I Pass  66: suminf.    1.02472 (3) obj. -1049.62 iterations 2
Cbc0038I Pass  67: suminf.    1.02860 (3) obj. -1049.62 iterations 3
Cbc0038I Pass  68: suminf.    1.01115 (4) obj. -1049.62 iterations 4
Cbc0038I Pass  69: suminf.    1.19763 (3) obj. -1049.62 iterations 4
Cbc0038I Pass  70: suminf.    0.76445 (2) obj. -1049.62 iterations 1
Cbc0038I Pass  71: suminf.    0.91908 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  72: suminf.    0.52783 (2) obj. -1049.62 iterations 12
Cbc0038I Pass  73: suminf.    0.50444 (2) obj. -1064.12 iterations 3
Cbc0038I Pass  74: suminf.    0.70737 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  75: suminf.    0.70737 (2) obj. -1049.62 iterations 0
Cbc0038I Pass  76: suminf.    0.81972 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  77: suminf.    0.78556 (2) obj. -1070.8 iterations 1
Cbc0038I Pass  78: suminf.    0.83489 (3) obj. -1049.62 iterations 3
Cbc0038I Pass  79: suminf.    0.83489 (3) obj. -1049.62 iterations 0
Cbc0038I Pass  80: suminf.    1.08403 (3) obj. -1050.5 iterations 2
Cbc0038I Pass  81: suminf.    1.07883 (4) obj. -1049.62 iterations 3
Cbc0038I Pass  82: suminf.    0.83489 (3) obj. -1049.62 iterations 4
Cbc0038I Pass  83: suminf.    0.55677 (2) obj. -1049.62 iterations 7
Cbc0038I Pass  84: suminf.    0.55677 (2) obj. -1049.62 iterations 0
Cbc0038I Pass  85: suminf.    0.71304 (2) obj. -1049.62 iterations 4
Cbc0038I Pass  86: suminf.    0.55026 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  87: suminf.    1.60938 (6) obj. -1049.62 iterations 11
Cbc0038I Pass  88: suminf.    1.24451 (4) obj. -1049.62 iterations 3
Cbc0038I Pass  89: suminf.    1.14349 (3) obj. -1049.62 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -993.485 - took 0.06 seconds
Cbc0012I Integer solution of -993.48492 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 43 rows 24 columns, reduced to 19 rows 11 columns
Cbc0031I 8 added rows had average density of 17
Cbc0013I At root node, 8 cuts changed objective from -1125.697 to -1070.0241 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 444 row cuts average 2.7 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 369 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -993.484917, took 1688 iterations and 14 nodes (0.18 seconds)
Cbc0032I Strong branching done 90 times (492 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 51 (-11) columns and 456 (-190) elements
Clp1000I sum of infeasibilities 1.43447e-09 - average 3.05206e-11, 41 fixed columns
Coin0506I Presolve 10 (-37) rows, 10 (-41) columns and 34 (-422) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 1120.2358
Clp0000I Optimal - objective value 1120.2358
Coin0511I After Postsolve, objective 1120.2358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.202534 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 1156.1813
Clp0000I Optimal - objective value 1156.1813
Clp0000I Optimal - objective value 1156.1813
Coin0511I After Postsolve, objective 1156.1813, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1156.181347 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 45 columns (45 integer (45 of which binary)) and 379 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.913%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.36939
Cbc0038I Pass   1: suminf.    0.46778 (2) obj. -1094.09 iterations 29
Cbc0038I Solution found of -341.676
Cbc0038I Rounding solution of -961.743 is better than previous of -341.676

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 45 columns, reduced to 26 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -961.743 to -974.743 (0.02 seconds)
Cbc0038I Round again with cutoff of -989.811
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.46778 (2) obj. -1094.09 iterations 0
Cbc0038I Pass   3: suminf.    0.08447 (1) obj. -989.811 iterations 3
Cbc0038I Pass   4: suminf.    0.08447 (1) obj. -989.811 iterations 0
Cbc0038I Pass   5: suminf.    0.44444 (1) obj. -1018.44 iterations 2
Cbc0038I Pass   6: suminf.    0.49061 (1) obj. -989.811 iterations 1
Cbc0038I Pass   7: suminf.    0.80593 (4) obj. -989.811 iterations 8
Cbc0038I Pass   8: suminf.    0.80593 (4) obj. -989.811 iterations 0
Cbc0038I Pass   9: suminf.    0.59488 (4) obj. -989.811 iterations 8
Cbc0038I Pass  10: suminf.    0.59488 (4) obj. -989.811 iterations 0
Cbc0038I Pass  11: suminf.    0.77778 (2) obj. -1004.58 iterations 5
Cbc0038I Pass  12: suminf.    0.55518 (3) obj. -989.811 iterations 2
Cbc0038I Pass  13: suminf.    1.03171 (4) obj. -989.811 iterations 5
Cbc0038I Pass  14: suminf.    1.03171 (4) obj. -989.811 iterations 0
Cbc0038I Pass  15: suminf.    1.84046 (7) obj. -989.811 iterations 11
Cbc0038I Pass  16: suminf.    1.21111 (8) obj. -989.811 iterations 3
Cbc0038I Pass  17: suminf.    0.89704 (3) obj. -989.811 iterations 6
Cbc0038I Pass  18: suminf.    0.89704 (3) obj. -989.811 iterations 1
Cbc0038I Pass  19: suminf.    1.04917 (4) obj. -989.811 iterations 4
Cbc0038I Pass  20: suminf.    1.04917 (4) obj. -989.811 iterations 0
Cbc0038I Pass  21: suminf.    0.85733 (3) obj. -989.811 iterations 2
Cbc0038I Pass  22: suminf.    0.82958 (3) obj. -989.811 iterations 1
Cbc0038I Pass  23: suminf.    1.11258 (3) obj. -989.811 iterations 2
Cbc0038I Pass  24: suminf.    0.93378 (3) obj. -989.811 iterations 1
Cbc0038I Pass  25: suminf.    0.59768 (8) obj. -989.811 iterations 8
Cbc0038I Pass  26: suminf.    0.53320 (7) obj. -989.811 iterations 1
Cbc0038I Pass  27: suminf.    0.44533 (3) obj. -989.811 iterations 8
Cbc0038I Pass  28: suminf.    0.29433 (1) obj. -989.811 iterations 3
Cbc0038I Pass  29: suminf.    0.31111 (1) obj. -1000.21 iterations 2
Cbc0038I Pass  30: suminf.    0.79970 (4) obj. -989.811 iterations 8
Cbc0038I Pass  31: suminf.    0.56022 (6) obj. -989.811 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 45 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -974.743 to -993.485 (0.04 seconds)
Cbc0038I Round again with cutoff of -1019.87
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.46778 (2) obj. -1094.09 iterations 0
Cbc0038I Pass  32: suminf.    0.18245 (2) obj. -1019.87 iterations 3
Cbc0038I Pass  33: suminf.    0.18245 (2) obj. -1019.87 iterations 0
Cbc0038I Pass  34: suminf.    0.57111 (2) obj. -1033.5 iterations 2
Cbc0038I Pass  35: suminf.    0.45652 (2) obj. -1019.87 iterations 1
Cbc0038I Pass  36: suminf.    0.59308 (2) obj. -1019.87 iterations 2
Cbc0038I Pass  37: suminf.    2.29385 (12) obj. -1019.87 iterations 17
Cbc0038I Pass  38: suminf.    0.86146 (9) obj. -1019.87 iterations 7
Cbc0038I Pass  39: suminf.    1.20474 (7) obj. -1019.87 iterations 15
Cbc0038I Pass  40: suminf.    1.20381 (11) obj. -1019.87 iterations 2
Cbc0038I Pass  41: suminf.    0.75846 (3) obj. -1019.87 iterations 12
Cbc0038I Pass  42: suminf.    0.20807 (2) obj. -1019.87 iterations 3
Cbc0038I Pass  43: suminf.    0.75846 (3) obj. -1019.87 iterations 2
Cbc0038I Pass  44: suminf.    2.56104 (8) obj. -1019.87 iterations 12
Cbc0038I Pass  45: suminf.    1.47290 (4) obj. -1019.87 iterations 4
Cbc0038I Pass  46: suminf.    1.15002 (3) obj. -1019.87 iterations 4
Cbc0038I Pass  47: suminf.    0.06176 (1) obj. -1019.87 iterations 3
Cbc0038I Pass  48: suminf.    0.04444 (1) obj. -1025.62 iterations 1
Cbc0038I Pass  49: suminf.    1.37985 (4) obj. -1019.87 iterations 6
Cbc0038I Pass  50: suminf.    0.88593 (3) obj. -1025.29 iterations 2
Cbc0038I Pass  51: suminf.    0.68920 (2) obj. -1019.87 iterations 4
Cbc0038I Pass  52: suminf.    0.64139 (3) obj. -1019.87 iterations 4
Cbc0038I Pass  53: suminf.    0.64139 (3) obj. -1019.87 iterations 0
Cbc0038I Pass  54: suminf.    0.91260 (3) obj. -1019.87 iterations 3
Cbc0038I Pass  55: suminf.    1.37970 (6) obj. -1019.87 iterations 5
Cbc0038I Pass  56: suminf.    1.37970 (6) obj. -1019.87 iterations 0
Cbc0038I Pass  57: suminf.    0.90994 (3) obj. -1019.87 iterations 5
Cbc0038I Pass  58: suminf.    0.68599 (2) obj. -1019.87 iterations 1
Cbc0038I Pass  59: suminf.    0.62369 (3) obj. -1019.87 iterations 3
Cbc0038I Pass  60: suminf.    0.62369 (3) obj. -1019.87 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 45 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -993.485 - took 0.04 seconds
Cbc0012I Integer solution of -993.48492 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 41 rows 45 columns, reduced to 27 rows 27 columns
Cbc0031I 13 added rows had average density of 11.923077
Cbc0013I At root node, 13 cuts changed objective from -1125.4219 to -1062.2144 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 192 row cuts average 3.5 elements, 13 column cuts (13 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 268 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 46 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 7 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.767 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -993.48492 best solution, best possible -1062.2144 (1.54 seconds)
Cbc0001I Search completed - best objective -993.484917, took 1335 iterations and 12 nodes (1.95 seconds)
Cbc0032I Strong branching done 190 times (1019 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.95

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 24 (-9) columns and 126 (-57) elements
Clp1000I sum of infeasibilities 3.21976e-06 - average 7.48782e-08, 10 fixed columns
Coin0506I Presolve 24 (-19) rows, 14 (-10) columns and 68 (-58) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 1142.4201
Clp0000I Optimal - objective value 1142.4201
Coin0511I After Postsolve, objective 1142.4201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1142.4201
Clp0000I Optimal - objective value 1142.4201
Clp0000I Optimal - objective value 1142.4201
Coin0511I After Postsolve, objective 1142.4201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1142.420067 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 24 columns (23 integer (23 of which binary)) and 130 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.762%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.37668
Cbc0038I Pass   1: suminf.    0.93000 (2) obj. -1081.19 iterations 8
Cbc0038I Solution found of -584.979
Cbc0038I Relaxing continuous gives -584.979
Cbc0038I Rounding solution of -873.423 is better than previous of -584.979

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -873.423 to -974.743 (0.01 seconds)
Cbc0038I Round again with cutoff of -989.838
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.93000 (2) obj. -1081.19 iterations 0
Cbc0038I Pass   3: suminf.    0.34707 (1) obj. -989.838 iterations 2
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -998.357 iterations 1
Cbc0038I Pass   5: suminf.    0.69056 (2) obj. -989.838 iterations 4
Cbc0038I Pass   6: suminf.    0.33333 (1) obj. -998.357 iterations 4
Cbc0038I Pass   7: suminf.    1.23236 (3) obj. -989.838 iterations 3
Cbc0038I Pass   8: suminf.    0.46667 (1) obj. -1034.13 iterations 3
Cbc0038I Pass   9: suminf.    0.39524 (1) obj. -989.838 iterations 1
Cbc0038I Pass  10: suminf.    0.15810 (2) obj. -989.838 iterations 3
Cbc0038I Pass  11: suminf.    0.15810 (2) obj. -989.838 iterations 0
Cbc0038I Pass  12: suminf.    0.57556 (2) obj. -1010.47 iterations 4
Cbc0038I Pass  13: suminf.    0.47509 (2) obj. -989.838 iterations 1
Cbc0038I Pass  14: suminf.    0.66248 (3) obj. -989.838 iterations 10
Cbc0038I Pass  15: suminf.    0.28777 (2) obj. -989.838 iterations 5
Cbc0038I Pass  16: suminf.    0.36453 (2) obj. -998.772 iterations 3
Cbc0038I Pass  17: suminf.    1.12808 (4) obj. -989.838 iterations 11
Cbc0038I Pass  18: suminf.    0.11817 (2) obj. -1011.24 iterations 4
Cbc0038I Pass  19: suminf.    0.60162 (2) obj. -989.838 iterations 5
Cbc0038I Pass  20: suminf.    0.60162 (2) obj. -989.838 iterations 0
Cbc0038I Pass  21: suminf.    0.95854 (2) obj. -989.838 iterations 2
Cbc0038I Pass  22: suminf.    0.73536 (2) obj. -989.838 iterations 1
Cbc0038I Pass  23: suminf.    0.68741 (2) obj. -1019.57 iterations 1
Cbc0038I Pass  24: suminf.    1.31377 (5) obj. -1067.23 iterations 3
Cbc0038I Pass  25: suminf.    0.68741 (2) obj. -1019.57 iterations 3
Cbc0038I Pass  26: suminf.    0.60162 (2) obj. -989.838 iterations 2
Cbc0038I Pass  27: suminf.    0.60162 (2) obj. -989.838 iterations 0
Cbc0038I Pass  28: suminf.    0.95854 (2) obj. -989.838 iterations 2
Cbc0038I Pass  29: suminf.    0.78323 (4) obj. -989.838 iterations 5
Cbc0038I Pass  30: suminf.    0.57470 (3) obj. -989.838 iterations 1
Cbc0038I Pass  31: suminf.    1.13427 (3) obj. -989.838 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -974.743 to -977.428 (0.03 seconds)
Cbc0038I Round again with cutoff of -1017.01
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.93000 (2) obj. -1081.19 iterations 0
Cbc0038I Pass  32: suminf.    0.49021 (2) obj. -1017.01 iterations 1
Cbc0038I Pass  33: suminf.    0.49021 (2) obj. -1017.01 iterations 0
Cbc0038I Pass  34: suminf.    0.86649 (2) obj. -1017.01 iterations 2
Cbc0038I Pass  35: suminf.    0.99402 (6) obj. -1017.01 iterations 9
Cbc0038I Pass  36: suminf.    0.92672 (7) obj. -1017.01 iterations 1
Cbc0038I Pass  37: suminf.    0.67025 (3) obj. -1017.01 iterations 8
Cbc0038I Pass  38: suminf.    0.67025 (3) obj. -1017.01 iterations 0
Cbc0038I Pass  39: suminf.    0.92964 (3) obj. -1017.01 iterations 2
Cbc0038I Pass  40: suminf.    0.92964 (3) obj. -1017.01 iterations 3
Cbc0038I Pass  41: suminf.    0.67025 (3) obj. -1017.01 iterations 3
Cbc0038I Pass  42: suminf.    1.79125 (5) obj. -1017.01 iterations 9
Cbc0038I Pass  43: suminf.    0.32472 (2) obj. -1017.01 iterations 3
Cbc0038I Pass  44: suminf.    0.29053 (2) obj. -1017.01 iterations 4
Cbc0038I Pass  45: suminf.    0.21667 (1) obj. -1062.81 iterations 1
Cbc0038I Pass  46: suminf.    0.61418 (2) obj. -1017.01 iterations 3
Cbc0038I Pass  47: suminf.    0.58593 (3) obj. -1017.01 iterations 5
Cbc0038I Pass  48: suminf.    0.58548 (3) obj. -1017.01 iterations 2
Cbc0038I Pass  49: suminf.    0.55852 (2) obj. -1017.01 iterations 4
Cbc0038I Pass  50: suminf.    0.16667 (1) obj. -1022.15 iterations 2
Cbc0038I Pass  51: suminf.    0.17533 (1) obj. -1017.01 iterations 1
Cbc0038I Pass  52: suminf.    0.55874 (3) obj. -1017.01 iterations 10
Cbc0038I Pass  53: suminf.    0.27650 (1) obj. -1017.01 iterations 9
Cbc0038I Pass  54: suminf.    0.48933 (2) obj. -1050.1 iterations 3
Cbc0038I Pass  55: suminf.    2.05386 (5) obj. -1017.01 iterations 12
Cbc0038I Pass  56: suminf.    0.18909 (1) obj. -1017.01 iterations 9
Cbc0038I Pass  57: suminf.    0.11111 (1) obj. -1042.92 iterations 2
Cbc0038I Pass  58: suminf.    0.39661 (2) obj. -1017.01 iterations 4
Cbc0038I Pass  59: suminf.    0.11111 (1) obj. -1042.92 iterations 4
Cbc0038I Pass  60: suminf.    0.57477 (3) obj. -1017.01 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -977.428 to -993.485 (0.04 seconds)
Cbc0038I Round again with cutoff of -1049.62
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.93000 (2) obj. -1081.19 iterations 0
Cbc0038I Pass  61: suminf.    0.76445 (2) obj. -1049.62 iterations 1
Cbc0038I Pass  62: suminf.    0.76445 (2) obj. -1049.62 iterations 0
Cbc0038I Pass  63: suminf.    0.91908 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  64: suminf.    0.91575 (4) obj. -1049.62 iterations 2
Cbc0038I Pass  65: suminf.    0.91575 (4) obj. -1049.62 iterations 0
Cbc0038I Pass  66: suminf.    1.02472 (3) obj. -1049.62 iterations 2
Cbc0038I Pass  67: suminf.    1.02860 (3) obj. -1049.62 iterations 3
Cbc0038I Pass  68: suminf.    1.01115 (4) obj. -1049.62 iterations 4
Cbc0038I Pass  69: suminf.    1.19763 (3) obj. -1049.62 iterations 4
Cbc0038I Pass  70: suminf.    0.76445 (2) obj. -1049.62 iterations 1
Cbc0038I Pass  71: suminf.    0.91908 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  72: suminf.    0.52783 (2) obj. -1049.62 iterations 12
Cbc0038I Pass  73: suminf.    0.50444 (2) obj. -1064.12 iterations 3
Cbc0038I Pass  74: suminf.    0.70737 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  75: suminf.    0.70737 (2) obj. -1049.62 iterations 0
Cbc0038I Pass  76: suminf.    0.81972 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  77: suminf.    0.78556 (2) obj. -1070.8 iterations 1
Cbc0038I Pass  78: suminf.    0.83489 (3) obj. -1049.62 iterations 3
Cbc0038I Pass  79: suminf.    0.83489 (3) obj. -1049.62 iterations 0
Cbc0038I Pass  80: suminf.    1.08403 (3) obj. -1050.5 iterations 2
Cbc0038I Pass  81: suminf.    1.07883 (4) obj. -1049.62 iterations 3
Cbc0038I Pass  82: suminf.    0.83489 (3) obj. -1049.62 iterations 4
Cbc0038I Pass  83: suminf.    0.55677 (2) obj. -1049.62 iterations 7
Cbc0038I Pass  84: suminf.    0.55677 (2) obj. -1049.62 iterations 0
Cbc0038I Pass  85: suminf.    0.71304 (2) obj. -1049.62 iterations 4
Cbc0038I Pass  86: suminf.    0.55026 (2) obj. -1049.62 iterations 2
Cbc0038I Pass  87: suminf.    1.60938 (6) obj. -1049.62 iterations 11
Cbc0038I Pass  88: suminf.    1.24451 (4) obj. -1049.62 iterations 3
Cbc0038I Pass  89: suminf.    1.14349 (3) obj. -1049.62 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -993.485 - took 0.04 seconds
Cbc0012I Integer solution of -993.48492 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 43 rows 24 columns, reduced to 19 rows 11 columns
Cbc0031I 8 added rows had average density of 17
Cbc0013I At root node, 8 cuts changed objective from -1125.697 to -1070.0241 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 444 row cuts average 2.7 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 369 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -993.484917, took 1688 iterations and 14 nodes (0.23 seconds)
Cbc0032I Strong branching done 90 times (492 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 43 (-20) columns and 343 (-306) elements
Clp1000I sum of infeasibilities 9.78339e-08 - average 2.44585e-09, 12 fixed columns
Coin0506I Presolve 31 (-9) rows, 31 (-12) columns and 173 (-170) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 1156.1813
Clp0000I Optimal - objective value 1156.1813
Coin0511I After Postsolve, objective 1156.1813, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7176635 - largest nonzero change 0 ( 0%) - largest zero change 2.329182e-05
Clp0000I Optimal - objective value 1156.1813
Clp0000I Optimal - objective value 1156.1813
Clp0000I Optimal - objective value 1156.1813
Coin0511I After Postsolve, objective 1156.1813, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1156.181347 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 43 columns (43 integer (43 of which binary)) and 349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.527%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.02739
Cbc0038I Pass   1: suminf.    0.44861 (6) obj. -367.892 iterations 18
Cbc0038I Pass   2: suminf.    0.44861 (6) obj. -367.892 iterations 1
Cbc0038I Solution found of -358.676
Cbc0038I Rounding solution of -559.404 is better than previous of -358.676

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 26 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -559.404 to -974.743 (0.02 seconds)
Cbc0038I Round again with cutoff of -990.571
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.69475 (12) obj. -990.571 iterations 5
Cbc0038I Pass   4: suminf.    1.69475 (12) obj. -990.571 iterations 0
Cbc0038I Pass   5: suminf.    0.44444 (1) obj. -1028.44 iterations 14
Cbc0038I Pass   6: suminf.    0.49449 (1) obj. -990.571 iterations 2
Cbc0038I Pass   7: suminf.    0.44618 (3) obj. -990.571 iterations 7
Cbc0038I Pass   8: suminf.    0.43485 (3) obj. -999.66 iterations 2
Cbc0038I Pass   9: suminf.    0.04541 (1) obj. -990.571 iterations 4
Cbc0038I Pass  10: suminf.    0.03333 (1) obj. -998.061 iterations 2
Cbc0038I Pass  11: suminf.    2.23855 (10) obj. -990.571 iterations 11
Cbc0038I Pass  12: suminf.    2.23855 (10) obj. -990.571 iterations 0
Cbc0038I Pass  13: suminf.    0.86267 (2) obj. -990.571 iterations 12
Cbc0038I Pass  14: suminf.    0.86267 (2) obj. -990.571 iterations 0
Cbc0038I Pass  15: suminf.    0.68485 (2) obj. -1007.57 iterations 5
Cbc0038I Pass  16: suminf.    0.03574 (1) obj. -990.571 iterations 2
Cbc0038I Pass  17: suminf.    0.03333 (1) obj. -992.061 iterations 1
Cbc0038I Pass  18: suminf.    1.05956 (6) obj. -990.571 iterations 11
Cbc0038I Pass  19: suminf.    0.60000 (2) obj. -991.463 iterations 3
Cbc0038I Pass  20: suminf.    0.33403 (2) obj. -990.571 iterations 4
Cbc0038I Pass  21: suminf.    0.33403 (2) obj. -990.571 iterations 1
Cbc0038I Pass  22: suminf.    0.71541 (2) obj. -990.571 iterations 3
Cbc0038I Pass  23: suminf.    0.45993 (2) obj. -990.571 iterations 2
Cbc0038I Pass  24: suminf.    1.93893 (7) obj. -990.571 iterations 9
Cbc0038I Pass  25: suminf.    1.93893 (7) obj. -990.571 iterations 1
Cbc0038I Pass  26: suminf.    0.63554 (3) obj. -990.571 iterations 8
Cbc0038I Pass  27: suminf.    0.63554 (3) obj. -990.571 iterations 1
Cbc0038I Pass  28: suminf.    0.78083 (3) obj. -990.571 iterations 2
Cbc0038I Pass  29: suminf.    0.78083 (3) obj. -990.571 iterations 0
Cbc0038I Pass  30: suminf.    0.63554 (3) obj. -990.571 iterations 2
Cbc0038I Pass  31: suminf.    1.40966 (6) obj. -990.571 iterations 13
Cbc0038I Pass  32: suminf.    0.75376 (4) obj. -1024.13 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 32 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -974.743 to -993.485 (0.07 seconds)
Cbc0038I Round again with cutoff of -1021.39
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.80089 (12) obj. -1021.39 iterations 0
Cbc0038I Pass  33: suminf.    1.80089 (12) obj. -1021.39 iterations 0
Cbc0038I Pass  34: suminf.    0.53348 (3) obj. -1031.3 iterations 13
Cbc0038I Pass  35: suminf.    0.45580 (1) obj. -1021.39 iterations 4
Cbc0038I Pass  36: suminf.    0.44444 (1) obj. -1028.44 iterations 2
Cbc0038I Pass  37: suminf.    3.05499 (11) obj. -1021.39 iterations 19
Cbc0038I Pass  38: suminf.    2.71766 (10) obj. -1021.39 iterations 3
Cbc0038I Pass  39: suminf.    2.16302 (9) obj. -1021.39 iterations 2
Cbc0038I Pass  40: suminf.    1.52928 (6) obj. -1022.91 iterations 3
Cbc0038I Pass  41: suminf.    0.51160 (3) obj. -1021.39 iterations 6
Cbc0038I Pass  42: suminf.    0.46438 (2) obj. -1027.76 iterations 3
Cbc0038I Pass  43: suminf.    0.92961 (3) obj. -1021.39 iterations 2
Cbc0038I Pass  44: suminf.    0.70214 (3) obj. -1021.39 iterations 2
Cbc0038I Pass  45: suminf.    0.45118 (2) obj. -1021.39 iterations 1
Cbc0038I Pass  46: suminf.    0.07778 (1) obj. -1062.93 iterations 2
Cbc0038I Pass  47: suminf.    0.14477 (1) obj. -1021.39 iterations 1
Cbc0038I Pass  48: suminf.    1.27193 (4) obj. -1043.86 iterations 7
Cbc0038I Pass  49: suminf.    1.27193 (4) obj. -1043.86 iterations 2
Cbc0038I Pass  50: suminf.    0.76066 (2) obj. -1021.39 iterations 5
Cbc0038I Pass  51: suminf.    0.57037 (2) obj. -1042.56 iterations 3
Cbc0038I Pass  52: suminf.    1.63972 (5) obj. -1042.11 iterations 4
Cbc0038I Pass  53: suminf.    0.73369 (2) obj. -1021.39 iterations 5
Cbc0038I Pass  54: suminf.    0.57037 (2) obj. -1039.56 iterations 3
Cbc0038I Pass  55: suminf.    2.08896 (10) obj. -1021.39 iterations 11
Cbc0038I Pass  56: suminf.    2.08896 (10) obj. -1021.39 iterations 1
Cbc0038I Pass  57: suminf.    0.78933 (2) obj. -1021.39 iterations 12
Cbc0038I Pass  58: suminf.    0.78933 (2) obj. -1021.39 iterations 0
Cbc0038I Pass  59: suminf.    0.78222 (2) obj. -1031.44 iterations 5
Cbc0038I Pass  60: suminf.    0.76602 (2) obj. -1021.39 iterations 1
Cbc0038I Pass  61: suminf.    0.88541 (2) obj. -1021.39 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -993.485 - took 0.07 seconds
Cbc0012I Integer solution of -993.48492 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 40 rows 43 columns, reduced to 27 rows 27 columns
Cbc0031I 12 added rows had average density of 10.916667
Cbc0013I At root node, 12 cuts changed objective from -1133.0216 to -1069.5827 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 462 row cuts average 3.5 elements, 13 column cuts (13 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 332 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.806 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -993.48492 best solution, best possible -1069.5827 (1.63 seconds)
Cbc0001I Search completed - best objective -993.484917, took 1325 iterations and 12 nodes (1.90 seconds)
Cbc0032I Strong branching done 150 times (744 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.90

