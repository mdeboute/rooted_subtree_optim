Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 72 (-6) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 0.000216773 - average 1.62987e-06, 10 fixed columns
Coin0506I Presolve 113 (-20) rows, 61 (-11) columns and 340 (-62) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.23581929 - largest nonzero change 0 ( 0%) - largest zero change 2.6629616e-05
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Coin0511I After Postsolve, objective 65.820097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Coin0511I After Postsolve, objective 65.820097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.82009679 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 72 columns (71 integer (71 of which binary)) and 466 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.481%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.01554
Cbc0038I Solution found of -9.3233
Cbc0038I Relaxing continuous gives -17.2592
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 72 columns, reduced to 79 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.2592 to -29.2565 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.8711
Cbc0038I Pass   1: suminf.    1.40565 (18) obj. -32.8711 iterations 44
Cbc0038I Pass   2: suminf.    1.22603 (4) obj. -32.8711 iterations 22
Cbc0038I Pass   3: suminf.    0.89262 (4) obj. -32.8711 iterations 6
Cbc0038I Pass   4: suminf.    1.16575 (3) obj. -32.8711 iterations 8
Cbc0038I Pass   5: suminf.    0.55559 (3) obj. -32.8711 iterations 2
Cbc0038I Pass   6: suminf.    2.31319 (6) obj. -32.8711 iterations 11
Cbc0038I Pass   7: suminf.    1.61620 (5) obj. -32.8711 iterations 8
Cbc0038I Pass   8: suminf.    1.48709 (6) obj. -32.8711 iterations 2
Cbc0038I Pass   9: suminf.    2.03333 (7) obj. -32.8711 iterations 8
Cbc0038I Pass  10: suminf.    1.44839 (6) obj. -32.8711 iterations 8
Cbc0038I Pass  11: suminf.    0.98468 (5) obj. -32.8711 iterations 4
Cbc0038I Pass  12: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  13: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  14: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  15: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  16: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  17: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  18: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  19: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  20: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  21: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  22: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  23: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  24: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  25: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  26: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  27: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  28: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  29: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  30: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 72 columns, reduced to 85 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -29.2565 - took 0.05 seconds
Cbc0012I Integer solution of -29.2565 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 129 rows 72 columns, reduced to 79 rows 43 columns
Cbc0031I 17 added rows had average density of 48.470588
Cbc0013I At root node, 17 cuts changed objective from -65.401904 to -56.013812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9304 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1965 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 3 nodes, 4 on tree, -29.2565 best solution, best possible -56.013812 (0.68 seconds)
Cbc0001I Search completed - best objective -29.2565, took 7771 iterations and 40 nodes (0.78 seconds)
Cbc0032I Strong branching done 552 times (10502 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 16, 63 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.79

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-42) rows, 121 (-31) columns and 2060 (-1243) elements
Clp1000I sum of infeasibilities 1.61682e-07 - average 1.44359e-09, 64 fixed columns
Coin0506I Presolve 55 (-57) rows, 57 (-64) columns and 353 (-1707) elements
Clp0006I 0  Obj 164.86959 Dual inf 5.2758764 (56)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 2.3972771 - largest nonzero change 0 ( 0%) - largest zero change 2.4735685e-05
Clp0000I Optimal - objective value 173.10742
Clp0000I Optimal - objective value 173.10742
Coin0511I After Postsolve, objective 173.10742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 173.10742
Clp0000I Optimal - objective value 173.10742
Clp0000I Optimal - objective value 173.10742
Clp0000I Optimal - objective value 173.10742
Coin0511I After Postsolve, objective 173.10742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 173.1074157 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 51 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 121 columns (121 integer (121 of which binary)) and 2127 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.972%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.97714
Cbc0038I Solution found of -49.7741
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -51.854
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.10210 (1) obj. -51.854 iterations 56
Cbc0038I Pass   2: suminf.    0.48000 (1) obj. -59.5525 iterations 4
Cbc0038I Pass   3: suminf.    2.32955 (8) obj. -51.854 iterations 30
Cbc0038I Pass   4: suminf.    0.34754 (1) obj. -51.854 iterations 16
Cbc0038I Pass   5: suminf.    0.48000 (1) obj. -54.5525 iterations 2
Cbc0038I Pass   6: suminf.    1.97540 (10) obj. -51.854 iterations 38
Cbc0038I Pass   7: suminf.    0.53025 (2) obj. -51.854 iterations 14
Cbc0038I Pass   8: suminf.    0.53025 (2) obj. -51.854 iterations 2
Cbc0038I Pass   9: suminf.    0.80899 (3) obj. -51.854 iterations 4
Cbc0038I Pass  10: suminf.    1.49482 (6) obj. -51.854 iterations 17
Cbc0038I Pass  11: suminf.    0.92083 (4) obj. -51.854 iterations 6
Cbc0038I Pass  12: suminf.    0.86113 (3) obj. -51.854 iterations 5
Cbc0038I Pass  13: suminf.    0.48000 (1) obj. -54.5525 iterations 2
Cbc0038I Pass  14: suminf.    0.34754 (1) obj. -51.854 iterations 1
Cbc0038I Pass  15: suminf.    2.30133 (16) obj. -51.854 iterations 28
Cbc0038I Pass  16: suminf.    0.53025 (2) obj. -51.854 iterations 22
Cbc0038I Pass  17: suminf.    0.80899 (3) obj. -51.854 iterations 3
Cbc0038I Pass  18: suminf.    0.53025 (2) obj. -51.854 iterations 2
Cbc0038I Pass  19: suminf.    2.44135 (8) obj. -51.854 iterations 10
Cbc0038I Pass  20: suminf.    1.09839 (4) obj. -51.854 iterations 7
Cbc0038I Pass  21: suminf.    0.92215 (3) obj. -51.854 iterations 11
Cbc0038I Pass  22: suminf.    1.01914 (4) obj. -51.854 iterations 6
Cbc0038I Pass  23: suminf.    2.16941 (14) obj. -51.854 iterations 17
Cbc0038I Pass  24: suminf.    1.23062 (4) obj. -51.854 iterations 36
Cbc0038I Pass  25: suminf.    1.25174 (5) obj. -51.854 iterations 7
Cbc0038I Pass  26: suminf.    4.00078 (14) obj. -51.854 iterations 22
Cbc0038I Pass  27: suminf.    1.87241 (8) obj. -51.854 iterations 11
Cbc0038I Pass  28: suminf.    1.87241 (8) obj. -51.854 iterations 0
Cbc0038I Pass  29: suminf.    1.72607 (7) obj. -51.854 iterations 12
Cbc0038I Pass  30: suminf.    1.72607 (7) obj. -51.854 iterations 3
Cbc0038I Rounding solution of -56.4631 is better than previous of -49.7741

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 59 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -59.285
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.46687 (1) obj. -59.285 iterations 0
Cbc0038I Pass  31: suminf.    0.48000 (1) obj. -59.5525 iterations 7
Cbc0038I Pass  32: suminf.    2.28080 (11) obj. -59.285 iterations 23
Cbc0038I Pass  33: suminf.    1.18315 (6) obj. -59.285 iterations 17
Cbc0038I Pass  34: suminf.    1.45370 (10) obj. -59.285 iterations 7
Cbc0038I Pass  35: suminf.    2.07235 (8) obj. -59.285 iterations 13
Cbc0038I Pass  36: suminf.    1.81642 (7) obj. -59.285 iterations 7
Cbc0038I Pass  37: suminf.    2.15878 (11) obj. -59.285 iterations 9
Cbc0038I Pass  38: suminf.    1.81642 (7) obj. -59.285 iterations 8
Cbc0038I Pass  39: suminf.    2.47408 (12) obj. -59.285 iterations 22
Cbc0038I Pass  40: suminf.    1.92667 (7) obj. -59.285 iterations 16
Cbc0038I Pass  41: suminf.    1.12830 (5) obj. -59.285 iterations 7
Cbc0038I Pass  42: suminf.    1.30603 (5) obj. -59.285 iterations 8
Cbc0038I Pass  43: suminf.    1.04094 (4) obj. -59.285 iterations 8
Cbc0038I Pass  44: suminf.    3.04311 (12) obj. -59.285 iterations 17
Cbc0038I Pass  45: suminf.    1.98029 (9) obj. -59.285 iterations 4
Cbc0038I Pass  46: suminf.    1.68315 (8) obj. -59.285 iterations 2
Cbc0038I Pass  47: suminf.    1.97885 (12) obj. -59.285 iterations 7
Cbc0038I Pass  48: suminf.    2.61956 (9) obj. -59.285 iterations 26
Cbc0038I Pass  49: suminf.    1.81642 (7) obj. -59.285 iterations 4
Cbc0038I Pass  50: suminf.    2.15878 (11) obj. -59.285 iterations 8
Cbc0038I Pass  51: suminf.    1.81642 (7) obj. -59.285 iterations 7
Cbc0038I Pass  52: suminf.    2.17635 (9) obj. -59.285 iterations 24
Cbc0038I Pass  53: suminf.    1.37427 (5) obj. -59.285 iterations 21
Cbc0038I Pass  54: suminf.    1.53101 (6) obj. -59.285 iterations 9
Cbc0038I Pass  55: suminf.    3.79132 (28) obj. -59.285 iterations 24
Cbc0038I Pass  56: suminf.    1.96863 (8) obj. -59.285 iterations 11
Cbc0038I Pass  57: suminf.    1.96863 (8) obj. -59.285 iterations 0
Cbc0038I Pass  58: suminf.    2.15878 (11) obj. -59.285 iterations 9
Cbc0038I Pass  59: suminf.    1.81642 (7) obj. -59.285 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 36 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -56.4631 - took 0.05 seconds
Cbc0012I Integer solution of -56.46309 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 105 rows 121 columns, reduced to 3 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 22 added rows had average density of 4.3181818
Cbc0013I At root node, 22 cuts changed objective from -70.572075 to -57.539758 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 146 row cuts average 2.3 elements, 39 column cuts (39 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 71 row cuts average 37.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -56.46309000000001, took 76 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 72 (-6) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 0.000216773 - average 1.62987e-06, 10 fixed columns
Coin0506I Presolve 113 (-20) rows, 61 (-11) columns and 340 (-62) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.23581929 - largest nonzero change 0 ( 0%) - largest zero change 2.6629616e-05
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Coin0511I After Postsolve, objective 65.820097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Coin0511I After Postsolve, objective 65.820097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.82009679 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 72 columns (71 integer (71 of which binary)) and 466 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.481%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.01554
Cbc0038I Solution found of -9.3233
Cbc0038I Relaxing continuous gives -17.2592
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 72 columns, reduced to 79 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.2592 to -29.2565 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.8711
Cbc0038I Pass   1: suminf.    1.40565 (18) obj. -32.8711 iterations 44
Cbc0038I Pass   2: suminf.    1.22603 (4) obj. -32.8711 iterations 22
Cbc0038I Pass   3: suminf.    0.89262 (4) obj. -32.8711 iterations 6
Cbc0038I Pass   4: suminf.    1.16575 (3) obj. -32.8711 iterations 8
Cbc0038I Pass   5: suminf.    0.55559 (3) obj. -32.8711 iterations 2
Cbc0038I Pass   6: suminf.    2.31319 (6) obj. -32.8711 iterations 11
Cbc0038I Pass   7: suminf.    1.61620 (5) obj. -32.8711 iterations 8
Cbc0038I Pass   8: suminf.    1.48709 (6) obj. -32.8711 iterations 2
Cbc0038I Pass   9: suminf.    2.03333 (7) obj. -32.8711 iterations 8
Cbc0038I Pass  10: suminf.    1.44839 (6) obj. -32.8711 iterations 8
Cbc0038I Pass  11: suminf.    0.98468 (5) obj. -32.8711 iterations 4
Cbc0038I Pass  12: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  13: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  14: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  15: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  16: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  17: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  18: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  19: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  20: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  21: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  22: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  23: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  24: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  25: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  26: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  27: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  28: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  29: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  30: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 72 columns, reduced to 85 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -29.2565 - took 0.05 seconds
Cbc0012I Integer solution of -29.2565 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 129 rows 72 columns, reduced to 79 rows 43 columns
Cbc0031I 17 added rows had average density of 48.470588
Cbc0013I At root node, 17 cuts changed objective from -65.401904 to -56.013812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9304 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1965 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -29.2565 best solution, best possible -56.013812 (0.72 seconds)
Cbc0001I Search completed - best objective -29.2565, took 7771 iterations and 40 nodes (0.88 seconds)
Cbc0032I Strong branching done 552 times (10502 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 16, 63 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.89

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 118 (-35) columns and 1965 (-1339) elements
Clp1000I sum of infeasibilities 5.138e-06 - average 4.71376e-08, 25 fixed columns
Coin0506I Presolve 85 (-24) rows, 92 (-26) columns and 1267 (-698) elements
Clp0006I 0  Obj 68.836034 Dual inf 10.302528 (91)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 1.6104874 - largest nonzero change 1.5072012e-05 ( 0.00088996209%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 77.967597
Clp0000I Optimal - objective value 77.967597
Coin0511I After Postsolve, objective 77.967597, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 77.967597
Clp0000I Optimal - objective value 77.967597
Clp0000I Optimal - objective value 77.967597
Clp0000I Optimal - objective value 77.967597
Coin0511I After Postsolve, objective 77.967597, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.96759689 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 118 columns (118 integer (118 of which binary)) and 2014 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.919%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 3.87851
Cbc0038I Pass   1: suminf.    0.64527 (20) obj. -51.916 iterations 34
Cbc0038I Pass   2: suminf.    0.64527 (20) obj. -51.916 iterations 0
Cbc0038I Pass   3: suminf.    0.20202 (10) obj. -19.5246 iterations 10
Cbc0038I Solution found of -7.7672
Cbc0038I Rounding solution of -14.4562 is better than previous of -7.7672

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -19.5716
Cbc0038I Pass   4: suminf.    0.64527 (20) obj. -51.916 iterations 0
Cbc0038I Pass   5: suminf.    0.64527 (20) obj. -51.916 iterations 0
Cbc0038I Pass   6: suminf.    0.85759 (8) obj. -19.5716 iterations 28
Cbc0038I Pass   7: suminf.    0.54935 (2) obj. -19.7486 iterations 9
Cbc0038I Pass   8: suminf.    0.56410 (2) obj. -19.5716 iterations 2
Cbc0038I Pass   9: suminf.    1.71445 (19) obj. -19.5716 iterations 33
Cbc0038I Pass  10: suminf.    0.83695 (15) obj. -19.5716 iterations 11
Cbc0038I Pass  11: suminf.    1.13651 (10) obj. -19.5716 iterations 18
Cbc0038I Pass  12: suminf.    1.13360 (10) obj. -19.5716 iterations 3
Cbc0038I Pass  13: suminf.    0.77809 (5) obj. -19.5716 iterations 14
Cbc0038I Pass  14: suminf.    0.66928 (4) obj. -19.5716 iterations 5
Cbc0038I Pass  15: suminf.    0.73326 (4) obj. -19.5716 iterations 2
Cbc0038I Pass  16: suminf.    2.36607 (17) obj. -19.5716 iterations 32
Cbc0038I Pass  17: suminf.    1.84827 (16) obj. -19.5716 iterations 4
Cbc0038I Pass  18: suminf.    1.32563 (10) obj. -19.5716 iterations 21
Cbc0038I Pass  19: suminf.    1.26620 (10) obj. -19.5716 iterations 4
Cbc0038I Pass  20: suminf.    1.09494 (10) obj. -19.5716 iterations 9
Cbc0038I Pass  21: suminf.    1.09494 (10) obj. -19.5716 iterations 1
Cbc0038I Pass  22: suminf.    1.92926 (9) obj. -19.5716 iterations 11
Cbc0038I Pass  23: suminf.    1.78985 (9) obj. -19.5716 iterations 1
Cbc0038I Pass  24: suminf.    1.78985 (9) obj. -19.5716 iterations 2
Cbc0038I Pass  25: suminf.    1.92926 (9) obj. -19.5716 iterations 6
Cbc0038I Pass  26: suminf.    0.90396 (8) obj. -19.5716 iterations 27
Cbc0038I Pass  27: suminf.    0.63696 (8) obj. -19.5716 iterations 6
Cbc0038I Pass  28: suminf.    0.58863 (4) obj. -19.5716 iterations 16
Cbc0038I Pass  29: suminf.    0.53065 (4) obj. -19.5716 iterations 5
Cbc0038I Pass  30: suminf.    0.58863 (4) obj. -19.5716 iterations 7
Cbc0038I Pass  31: suminf.    0.64558 (10) obj. -19.5716 iterations 13
Cbc0038I Pass  32: suminf.    0.41947 (9) obj. -19.5716 iterations 3
Cbc0038I Pass  33: suminf.    0.53770 (4) obj. -19.5716 iterations 24
Cbc0038I Rounding solution of -15.9693 is better than previous of -14.4562

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 60 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -15.9693 to -29.2565 (0.08 seconds)
Cbc0038I Round again with cutoff of -36.5272
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    0.64527 (20) obj. -51.916 iterations 0
Cbc0038I Pass  34: suminf.    0.64527 (20) obj. -51.916 iterations 0
Cbc0038I Pass  35: suminf.    1.28639 (6) obj. -36.5272 iterations 34
Cbc0038I Pass  36: suminf.    0.70752 (12) obj. -36.5272 iterations 6
Cbc0038I Pass  37: suminf.    1.41545 (8) obj. -36.5272 iterations 16
Cbc0038I Pass  38: suminf.    1.06235 (9) obj. -36.5272 iterations 1
Cbc0038I Pass  39: suminf.    1.41545 (8) obj. -36.5272 iterations 9
Cbc0038I Pass  40: suminf.    1.09243 (15) obj. -36.5272 iterations 31
Cbc0038I Pass  41: suminf.    0.88522 (8) obj. -36.5272 iterations 19
Cbc0038I Pass  42: suminf.    0.88522 (8) obj. -36.5272 iterations 9
Cbc0038I Pass  43: suminf.    0.95673 (24) obj. -36.5272 iterations 17
Cbc0038I Pass  44: suminf.    0.88893 (7) obj. -36.5272 iterations 15
Cbc0038I Pass  45: suminf.    1.31850 (19) obj. -36.5272 iterations 24
Cbc0038I Pass  46: suminf.    1.16127 (7) obj. -36.5272 iterations 2
Cbc0038I Pass  47: suminf.    1.16127 (7) obj. -36.5272 iterations 5
Cbc0038I Pass  48: suminf.    0.95673 (24) obj. -36.5272 iterations 13
Cbc0038I Pass  49: suminf.    0.88893 (7) obj. -36.5272 iterations 15
Cbc0038I Pass  50: suminf.    1.31850 (19) obj. -36.5272 iterations 24
Cbc0038I Pass  51: suminf.    1.16127 (7) obj. -36.5272 iterations 2
Cbc0038I Pass  52: suminf.    1.16127 (7) obj. -36.5272 iterations 5
Cbc0038I Pass  53: suminf.    0.95673 (24) obj. -36.5272 iterations 13
Cbc0038I Pass  54: suminf.    0.88893 (7) obj. -36.5272 iterations 15
Cbc0038I Pass  55: suminf.    1.31850 (19) obj. -36.5272 iterations 27
Cbc0038I Pass  56: suminf.    1.16127 (7) obj. -36.5272 iterations 3
Cbc0038I Pass  57: suminf.    1.16127 (7) obj. -36.5272 iterations 8
Cbc0038I Pass  58: suminf.    0.95673 (24) obj. -36.5272 iterations 14
Cbc0038I Pass  59: suminf.    0.88893 (7) obj. -36.5272 iterations 15
Cbc0038I Pass  60: suminf.    1.31850 (19) obj. -36.5272 iterations 24
Cbc0038I Pass  61: suminf.    1.16127 (7) obj. -36.5272 iterations 3
Cbc0038I Pass  62: suminf.    1.16127 (7) obj. -36.5272 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 55 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.2565 - took 0.05 seconds
Cbc0012I Integer solution of -29.2565 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 23 rows 27 columns
Cbc0031I 54 added rows had average density of 25.555556
Cbc0013I At root node, 54 cuts changed objective from -65.609633 to -34.552544 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14408 row cuts average 13.7 elements, 5 column cuts (5 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2633 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 90 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1051 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 193 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 892 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 370 row cuts average 56.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 460 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.568 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.2565 best solution, best possible -34.552544 (2.74 seconds)
Cbc0010I After 4 nodes, 5 on tree, -29.2565 best solution, best possible -34.552544 (3.52 seconds)
Cbc0001I Search completed - best objective -29.2565, took 6082 iterations and 14 nodes (3.90 seconds)
Cbc0032I Strong branching done 354 times (7836 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 22 variables fixed on reduced cost
Total time (CPU seconds):       2.81   (Wallclock seconds):       3.93

