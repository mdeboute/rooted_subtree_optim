Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 57 (-21) columns and 320 (-133) elements
Clp1000I sum of infeasibilities 2.64213e-05 - average 2.49258e-07, 47 fixed columns
Coin0506I Presolve 8 (-98) rows, 7 (-50) columns and 24 (-296) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 17427.795
Clp0000I Optimal - objective value 17427.795
Coin0511I After Postsolve, objective 17427.795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.011245 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 17427.795
Clp0000I Optimal - objective value 17427.795
Clp0000I Optimal - objective value 17427.795
Coin0511I After Postsolve, objective 17427.795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17427.79485 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 57 columns (56 integer (56 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.012%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 2.09399
Cbc0038I Solution found of -14702.8
Cbc0038I Relaxing continuous gives -14702.8
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14975.3
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.08956 (5) obj. -14975.3 iterations 11
Cbc0038I Pass   2: suminf.    1.21090 (4) obj. -14975.3 iterations 9
Cbc0038I Pass   3: suminf.    1.21090 (4) obj. -14975.3 iterations 0
Cbc0038I Pass   4: suminf.    0.97521 (5) obj. -14975.3 iterations 8
Cbc0038I Pass   5: suminf.    0.97521 (5) obj. -14975.3 iterations 0
Cbc0038I Pass   6: suminf.    2.11289 (5) obj. -14975.3 iterations 8
Cbc0038I Pass   7: suminf.    1.72751 (6) obj. -14975.3 iterations 1
Cbc0038I Pass   8: suminf.    0.08956 (5) obj. -14975.3 iterations 8
Cbc0038I Pass   9: suminf.    1.21090 (4) obj. -14975.3 iterations 9
Cbc0038I Pass  10: suminf.    1.21090 (4) obj. -14975.3 iterations 0
Cbc0038I Pass  11: suminf.    0.97521 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  12: suminf.    0.97521 (5) obj. -14975.3 iterations 0
Cbc0038I Pass  13: suminf.    2.11289 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  14: suminf.    1.72751 (6) obj. -14975.3 iterations 1
Cbc0038I Pass  15: suminf.    0.08956 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  16: suminf.    1.21090 (4) obj. -14975.3 iterations 9
Cbc0038I Pass  17: suminf.    1.21090 (4) obj. -14975.3 iterations 0
Cbc0038I Pass  18: suminf.    0.97521 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  19: suminf.    0.97521 (5) obj. -14975.3 iterations 0
Cbc0038I Pass  20: suminf.    2.11289 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  21: suminf.    1.72751 (6) obj. -14975.3 iterations 1
Cbc0038I Pass  22: suminf.    0.08956 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  23: suminf.    1.21090 (4) obj. -14975.3 iterations 9
Cbc0038I Pass  24: suminf.    1.21090 (4) obj. -14975.3 iterations 0
Cbc0038I Pass  25: suminf.    0.97521 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  26: suminf.    0.97521 (5) obj. -14975.3 iterations 0
Cbc0038I Pass  27: suminf.    2.11289 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  28: suminf.    1.72751 (6) obj. -14975.3 iterations 1
Cbc0038I Pass  29: suminf.    0.08956 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  30: suminf.    1.21090 (4) obj. -14975.3 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -14702.8 - took 0.02 seconds
Cbc0012I Integer solution of -14702.8 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -15043.086 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 103 rows 57 columns, reduced to 8 rows 7 columns
Cbc0012I Integer solution of -15661.226 found by DiveCoefficient after 71 iterations and 0 nodes (0.22 seconds)
Cbc0031I 9 added rows had average density of 12.555556
Cbc0013I At root node, 9 cuts changed objective from -17427.795 to -15988.697 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 55.5 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15661.226, took 132 iterations and 2 nodes (0.31 seconds)
Cbc0032I Strong branching done 20 times (134 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 103 (-49) columns and 1679 (-1624) elements
Clp1000I sum of infeasibilities 3.57706e-07 - average 3.68769e-09, 97 fixed columns
Coin0506I Presolve 6 (-91) rows, 6 (-97) columns and 20 (-1659) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 17419.795
Clp0000I Optimal - objective value 17419.795
Coin0511I After Postsolve, objective 17419.795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8573608 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 17481.675
Clp0000I Optimal - objective value 17481.675
Clp0000I Optimal - objective value 17481.675
Coin0511I After Postsolve, objective 17481.675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17481.67547 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 103 columns (103 integer (103 of which binary)) and 1801 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.292%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.91475
Cbc0038I Pass   1: suminf.    1.29906 (26) obj. -10902 iterations 20
Cbc0038I Pass   2: suminf.    1.29906 (26) obj. -10902 iterations 1
Cbc0038I Pass   3: suminf.    0.40352 (10) obj. -10878.4 iterations 16
Cbc0038I Solution found of -10863.1
Cbc0038I Rounding solution of -11859.5 is better than previous of -10863.1

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 103 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -11859.5 to -15043.1 (0.06 seconds)
Cbc0038I Round again with cutoff of -15286.1
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.01277 (39) obj. -15286.1 iterations 12
Cbc0038I Pass   5: suminf.    1.89959 (29) obj. -15286.1 iterations 11
Cbc0038I Pass   6: suminf.    1.14371 (19) obj. -15286.1 iterations 11
Cbc0038I Pass   7: suminf.    0.65672 (4) obj. -16334.6 iterations 22
Cbc0038I Pass   8: suminf.    0.21423 (5) obj. -15286.1 iterations 9
Cbc0038I Pass   9: suminf.    0.50624 (2) obj. -16630.2 iterations 14
Cbc0038I Pass  10: suminf.    0.50624 (2) obj. -16630.2 iterations 0
Cbc0038I Pass  11: suminf.    0.18592 (2) obj. -15286.1 iterations 2
Cbc0038I Pass  12: suminf.    0.18592 (2) obj. -15286.1 iterations 2
Cbc0038I Pass  13: suminf.    0.28160 (1) obj. -15286.1 iterations 3
Cbc0038I Pass  14: suminf.    1.12880 (7) obj. -15286.1 iterations 11
Cbc0038I Pass  15: suminf.    0.96961 (7) obj. -15286.1 iterations 4
Cbc0038I Pass  16: suminf.    0.50624 (2) obj. -16627.2 iterations 8
Cbc0038I Pass  17: suminf.    0.50624 (2) obj. -16627.2 iterations 0
Cbc0038I Pass  18: suminf.    0.18792 (2) obj. -15286.1 iterations 2
Cbc0038I Pass  19: suminf.    0.18792 (2) obj. -15286.1 iterations 2
Cbc0038I Pass  20: suminf.    0.28220 (1) obj. -15286.1 iterations 3
Cbc0038I Pass  21: suminf.    1.43810 (12) obj. -15286.1 iterations 31
Cbc0038I Pass  22: suminf.    0.83496 (12) obj. -15286.1 iterations 8
Cbc0038I Pass  23: suminf.    0.56590 (2) obj. -15286.1 iterations 13
Cbc0038I Pass  24: suminf.    0.48178 (2) obj. -15286.1 iterations 3
Cbc0038I Pass  25: suminf.    0.78435 (2) obj. -15286.1 iterations 4
Cbc0038I Pass  26: suminf.    0.59509 (2) obj. -16579.3 iterations 4
Cbc0038I Pass  27: suminf.    0.06743 (1) obj. -15286.1 iterations 4
Cbc0038I Pass  28: suminf.    0.06743 (1) obj. -15286.1 iterations 0
Cbc0038I Pass  29: suminf.    1.06765 (5) obj. -15286.1 iterations 8
Cbc0038I Pass  30: suminf.    0.58212 (4) obj. -15286.1 iterations 11
Cbc0038I Pass  31: suminf.    1.35905 (12) obj. -15286.1 iterations 14
Cbc0038I Pass  32: suminf.    0.65783 (9) obj. -15286.1 iterations 8
Cbc0038I Pass  33: suminf.    0.38603 (2) obj. -15752 iterations 14
Cbc0038I Rounding solution of -15465.9 is better than previous of -15043.1

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 103 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -15867.3
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.26836 (39) obj. -15867.3 iterations 0
Cbc0038I Pass  34: suminf.    3.78215 (29) obj. -15897.6 iterations 16
Cbc0038I Pass  35: suminf.    3.33987 (33) obj. -15867.3 iterations 6
Cbc0038I Pass  36: suminf.    0.82318 (17) obj. -15867.3 iterations 22
Cbc0038I Pass  37: suminf.    0.77993 (13) obj. -15867.3 iterations 2
Cbc0038I Pass  38: suminf.    0.21975 (1) obj. -15867.3 iterations 14
Cbc0038I Pass  39: suminf.    0.21975 (1) obj. -15867.3 iterations 2
Cbc0038I Pass  40: suminf.    0.59509 (2) obj. -16582.3 iterations 5
Cbc0038I Pass  41: suminf.    0.21975 (1) obj. -15867.3 iterations 3
Cbc0038I Pass  42: suminf.    2.19080 (9) obj. -15867.3 iterations 12
Cbc0038I Pass  43: suminf.    1.31058 (5) obj. -15867.3 iterations 6
Cbc0038I Pass  44: suminf.    0.81301 (4) obj. -15867.3 iterations 6
Cbc0038I Pass  45: suminf.    0.22995 (2) obj. -16685.2 iterations 12
Cbc0038I Pass  46: suminf.    0.50148 (2) obj. -15867.3 iterations 2
Cbc0038I Pass  47: suminf.    0.87407 (9) obj. -15867.3 iterations 12
Cbc0038I Pass  48: suminf.    0.76939 (11) obj. -15867.3 iterations 5
Cbc0038I Pass  49: suminf.    0.21975 (1) obj. -15867.3 iterations 14
Cbc0038I Pass  50: suminf.    0.21975 (1) obj. -15867.3 iterations 2
Cbc0038I Pass  51: suminf.    0.59509 (2) obj. -16582.3 iterations 5
Cbc0038I Pass  52: suminf.    0.21975 (1) obj. -15867.3 iterations 3
Cbc0038I Pass  53: suminf.    1.48028 (7) obj. -15867.3 iterations 13
Cbc0038I Pass  54: suminf.    1.16985 (6) obj. -15867.3 iterations 6
Cbc0038I Pass  55: suminf.    0.30960 (2) obj. -15867.3 iterations 15
Cbc0038I Pass  56: suminf.    0.22080 (1) obj. -15867.3 iterations 9
Cbc0038I Pass  57: suminf.    0.59509 (2) obj. -16578.3 iterations 5
Cbc0038I Pass  58: suminf.    0.22080 (1) obj. -15867.3 iterations 3
Cbc0038I Pass  59: suminf.    2.81536 (17) obj. -15867.3 iterations 19
Cbc0038I Pass  60: suminf.    1.95204 (15) obj. -15867.3 iterations 7
Cbc0038I Pass  61: suminf.    1.80572 (17) obj. -15867.3 iterations 5
Cbc0038I Pass  62: suminf.    1.86583 (12) obj. -15867.3 iterations 15
Cbc0038I Rounding solution of -15622.9 is better than previous of -15465.9

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 103 columns, reduced to 43 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -15622.9 to -15661.2 (0.10 seconds)
Cbc0038I Round again with cutoff of -16349.1
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.47921 (38) obj. -16349.1 iterations 1
Cbc0038I Pass  63: suminf.    2.27675 (18) obj. -16349.1 iterations 29
Cbc0038I Pass  64: suminf.    2.27675 (18) obj. -16349.1 iterations 0
Cbc0038I Pass  65: suminf.    0.61274 (5) obj. -16349.1 iterations 24
Cbc0038I Pass  66: suminf.    0.61274 (5) obj. -16349.1 iterations 0
Cbc0038I Pass  67: suminf.    1.22816 (3) obj. -16349.1 iterations 13
Cbc0038I Pass  68: suminf.    0.90504 (5) obj. -16349.1 iterations 3
Cbc0038I Pass  69: suminf.    0.61274 (5) obj. -16349.1 iterations 10
Cbc0038I Pass  70: suminf.    1.17997 (10) obj. -16349.1 iterations 11
Cbc0038I Pass  71: suminf.    1.12773 (10) obj. -16349.1 iterations 4
Cbc0038I Pass  72: suminf.    1.61853 (5) obj. -16349.1 iterations 19
Cbc0038I Pass  73: suminf.    1.61853 (5) obj. -16349.1 iterations 0
Cbc0038I Pass  74: suminf.    0.61274 (5) obj. -16349.1 iterations 11
Cbc0038I Pass  75: suminf.    0.61274 (5) obj. -16349.1 iterations 0
Cbc0038I Pass  76: suminf.    1.22816 (3) obj. -16349.1 iterations 12
Cbc0038I Pass  77: suminf.    0.90504 (5) obj. -16349.1 iterations 2
Cbc0038I Pass  78: suminf.    0.61274 (5) obj. -16349.1 iterations 10
Cbc0038I Pass  79: suminf.    1.87902 (11) obj. -16349.1 iterations 16
Cbc0038I Pass  80: suminf.    1.67129 (11) obj. -16349.1 iterations 4
Cbc0038I Pass  81: suminf.    2.43593 (17) obj. -16349.1 iterations 17
Cbc0038I Pass  82: suminf.    2.32098 (13) obj. -16349.1 iterations 4
Cbc0038I Pass  83: suminf.    1.89806 (13) obj. -16349.1 iterations 3
Cbc0038I Pass  84: suminf.    0.59866 (4) obj. -16349.1 iterations 10
Cbc0038I Pass  85: suminf.    0.52074 (4) obj. -16686.8 iterations 2
Cbc0038I Pass  86: suminf.    0.34122 (2) obj. -16349.1 iterations 4
Cbc0038I Pass  87: suminf.    0.22995 (2) obj. -16684.2 iterations 4
Cbc0038I Pass  88: suminf.    1.11050 (7) obj. -16349.1 iterations 9
Cbc0038I Pass  89: suminf.    0.70149 (5) obj. -16679.6 iterations 2
Cbc0038I Pass  90: suminf.    0.33857 (2) obj. -16349.1 iterations 5
Cbc0038I Pass  91: suminf.    0.22995 (2) obj. -16676.2 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 103 columns, reduced to 41 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -15661.2 - took 0.06 seconds
Cbc0012I Integer solution of -15661.226 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 91 rows 103 columns, reduced to 5 rows 6 columns
Cbc0031I 22 added rows had average density of 7.5454545
Cbc0013I At root node, 22 cuts changed objective from -17473.064 to -16081.124 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 353 row cuts average 5.3 elements, 20 column cuts (20 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15661.226, took 354 iterations and 2 nodes (0.40 seconds)
Cbc0032I Strong branching done 24 times (237 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 57 (-21) columns and 320 (-133) elements
Clp1000I sum of infeasibilities 2.64213e-05 - average 2.49258e-07, 47 fixed columns
Coin0506I Presolve 8 (-98) rows, 7 (-50) columns and 24 (-296) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 17427.795
Clp0000I Optimal - objective value 17427.795
Coin0511I After Postsolve, objective 17427.795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.011245 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 17427.795
Clp0000I Optimal - objective value 17427.795
Clp0000I Optimal - objective value 17427.795
Coin0511I After Postsolve, objective 17427.795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17427.79485 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 57 columns (56 integer (56 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.012%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 2.09399
Cbc0038I Solution found of -14702.8
Cbc0038I Relaxing continuous gives -14702.8
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -14975.3
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.08956 (5) obj. -14975.3 iterations 11
Cbc0038I Pass   2: suminf.    1.21090 (4) obj. -14975.3 iterations 9
Cbc0038I Pass   3: suminf.    1.21090 (4) obj. -14975.3 iterations 0
Cbc0038I Pass   4: suminf.    0.97521 (5) obj. -14975.3 iterations 8
Cbc0038I Pass   5: suminf.    0.97521 (5) obj. -14975.3 iterations 0
Cbc0038I Pass   6: suminf.    2.11289 (5) obj. -14975.3 iterations 8
Cbc0038I Pass   7: suminf.    1.72751 (6) obj. -14975.3 iterations 1
Cbc0038I Pass   8: suminf.    0.08956 (5) obj. -14975.3 iterations 8
Cbc0038I Pass   9: suminf.    1.21090 (4) obj. -14975.3 iterations 9
Cbc0038I Pass  10: suminf.    1.21090 (4) obj. -14975.3 iterations 0
Cbc0038I Pass  11: suminf.    0.97521 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  12: suminf.    0.97521 (5) obj. -14975.3 iterations 0
Cbc0038I Pass  13: suminf.    2.11289 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  14: suminf.    1.72751 (6) obj. -14975.3 iterations 1
Cbc0038I Pass  15: suminf.    0.08956 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  16: suminf.    1.21090 (4) obj. -14975.3 iterations 9
Cbc0038I Pass  17: suminf.    1.21090 (4) obj. -14975.3 iterations 0
Cbc0038I Pass  18: suminf.    0.97521 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  19: suminf.    0.97521 (5) obj. -14975.3 iterations 0
Cbc0038I Pass  20: suminf.    2.11289 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  21: suminf.    1.72751 (6) obj. -14975.3 iterations 1
Cbc0038I Pass  22: suminf.    0.08956 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  23: suminf.    1.21090 (4) obj. -14975.3 iterations 9
Cbc0038I Pass  24: suminf.    1.21090 (4) obj. -14975.3 iterations 0
Cbc0038I Pass  25: suminf.    0.97521 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  26: suminf.    0.97521 (5) obj. -14975.3 iterations 0
Cbc0038I Pass  27: suminf.    2.11289 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  28: suminf.    1.72751 (6) obj. -14975.3 iterations 1
Cbc0038I Pass  29: suminf.    0.08956 (5) obj. -14975.3 iterations 8
Cbc0038I Pass  30: suminf.    1.21090 (4) obj. -14975.3 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -14702.8 - took 0.01 seconds
Cbc0012I Integer solution of -14702.8 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -15043.086 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 103 rows 57 columns, reduced to 8 rows 7 columns
Cbc0012I Integer solution of -15661.226 found by DiveCoefficient after 71 iterations and 0 nodes (0.23 seconds)
Cbc0031I 9 added rows had average density of 12.555556
Cbc0013I At root node, 9 cuts changed objective from -17427.795 to -15988.697 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 55.5 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15661.226, took 132 iterations and 2 nodes (0.33 seconds)
Cbc0032I Strong branching done 20 times (134 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-69) rows, 92 (-61) columns and 1369 (-1935) elements
Clp1000I sum of infeasibilities 3.65569e-07 - average 4.25081e-09, 51 fixed columns
Coin0506I Presolve 31 (-55) rows, 31 (-61) columns and 120 (-1249) elements
Clp0000I Optimal - objective value 17481.675
Clp0000I Optimal - objective value 17481.675
Coin0511I After Postsolve, objective 17481.675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0366409 - largest nonzero change 0 ( 0%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 17481.675
Clp0000I Optimal - objective value 17481.675
Clp0000I Optimal - objective value 17481.675
Coin0511I After Postsolve, objective 17481.675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17481.67547 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 94 columns (94 integer (94 of which binary)) and 1441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.931%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 6.58128
Cbc0038I Pass   1: suminf.    1.62177 (26) obj. -10900.5 iterations 20
Cbc0038I Pass   2: suminf.    1.62177 (26) obj. -10900.5 iterations 1
Cbc0038I Pass   3: suminf.    0.82909 (15) obj. -10883.8 iterations 11
Cbc0038I Pass   4: suminf.    0.17712 (4) obj. -10866.9 iterations 11
Cbc0038I Solution found of -10862.1
Cbc0038I Rounding solution of -11859.5 is better than previous of -10862.1

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -11859.5 to -15043.1 (0.05 seconds)
Cbc0038I Round again with cutoff of -15286
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.71078 (38) obj. -15286 iterations 15
Cbc0038I Pass   6: suminf.    0.86036 (14) obj. -15286 iterations 28
Cbc0038I Pass   7: suminf.    0.22995 (2) obj. -16681.2 iterations 28
Cbc0038I Pass   8: suminf.    0.22995 (2) obj. -16681.2 iterations 0
Cbc0038I Pass   9: suminf.    0.31513 (2) obj. -15286 iterations 4
Cbc0038I Pass  10: suminf.    0.31513 (2) obj. -15286 iterations 0
Cbc0038I Pass  11: suminf.    0.22995 (2) obj. -16681.2 iterations 7
Cbc0038I Pass  12: suminf.    1.09880 (6) obj. -15286 iterations 13
Cbc0038I Pass  13: suminf.    0.65036 (5) obj. -15286 iterations 6
Cbc0038I Pass  14: suminf.    0.06767 (1) obj. -15286 iterations 14
Cbc0038I Pass  15: suminf.    0.06767 (1) obj. -15286 iterations 0
Cbc0038I Pass  16: suminf.    0.59509 (2) obj. -16578.3 iterations 7
Cbc0038I Pass  17: suminf.    0.06767 (1) obj. -15286 iterations 5
Cbc0038I Pass  18: suminf.    3.06756 (16) obj. -15286 iterations 23
Cbc0038I Pass  19: suminf.    1.12931 (14) obj. -15286 iterations 10
Cbc0038I Pass  20: suminf.    1.04164 (13) obj. -15286 iterations 1
Cbc0038I Pass  21: suminf.    0.56557 (2) obj. -15286 iterations 13
Cbc0038I Pass  22: suminf.    0.48239 (2) obj. -15286 iterations 3
Cbc0038I Pass  23: suminf.    0.78421 (2) obj. -15286 iterations 4
Cbc0038I Pass  24: suminf.    0.59509 (2) obj. -16578.3 iterations 4
Cbc0038I Pass  25: suminf.    0.06767 (1) obj. -15286 iterations 5
Cbc0038I Pass  26: suminf.    0.06767 (1) obj. -15286 iterations 0
Cbc0038I Pass  27: suminf.    1.04296 (9) obj. -15286 iterations 22
Cbc0038I Pass  28: suminf.    0.59520 (5) obj. -15286 iterations 10
Cbc0038I Pass  29: suminf.    0.06767 (1) obj. -15286 iterations 12
Cbc0038I Pass  30: suminf.    0.06767 (1) obj. -15286 iterations 0
Cbc0038I Pass  31: suminf.    0.59509 (2) obj. -16578.3 iterations 6
Cbc0038I Pass  32: suminf.    1.10017 (8) obj. -15286 iterations 12
Cbc0038I Pass  33: suminf.    0.75675 (7) obj. -15286 iterations 6
Cbc0038I Pass  34: suminf.    0.78451 (2) obj. -15286 iterations 10
Cbc0038I Rounding solution of -15465.9 is better than previous of -15043.1

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -15867.2
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.97142 (38) obj. -15867.2 iterations 0
Cbc0038I Pass  35: suminf.    2.09940 (24) obj. -15867.2 iterations 15
Cbc0038I Pass  36: suminf.    1.66315 (16) obj. -16351.1 iterations 14
Cbc0038I Pass  37: suminf.    1.45093 (17) obj. -15867.2 iterations 9
Cbc0038I Pass  38: suminf.    0.80207 (10) obj. -15867.2 iterations 18
Cbc0038I Pass  39: suminf.    0.73248 (8) obj. -15867.2 iterations 2
Cbc0038I Pass  40: suminf.    0.22049 (1) obj. -15867.2 iterations 10
Cbc0038I Pass  41: suminf.    0.22049 (1) obj. -15867.2 iterations 2
Cbc0038I Pass  42: suminf.    0.59509 (2) obj. -16579.3 iterations 6
Cbc0038I Pass  43: suminf.    0.22049 (1) obj. -15867.2 iterations 4
Cbc0038I Pass  44: suminf.    1.13375 (9) obj. -15867.2 iterations 15
Cbc0038I Pass  45: suminf.    1.13375 (9) obj. -15867.2 iterations 4
Cbc0038I Pass  46: suminf.    0.50000 (1) obj. -16950 iterations 15
Cbc0038I Pass  47: suminf.    0.21874 (1) obj. -15867.2 iterations 4
Cbc0038I Pass  48: suminf.    0.86953 (6) obj. -15867.2 iterations 15
Cbc0038I Pass  49: suminf.    0.55499 (4) obj. -15867.2 iterations 7
Cbc0038I Pass  50: suminf.    0.59509 (2) obj. -16575.3 iterations 8
Cbc0038I Pass  51: suminf.    0.22155 (1) obj. -15867.2 iterations 5
Cbc0038I Pass  52: suminf.    0.22155 (1) obj. -15867.2 iterations 0
Cbc0038I Pass  53: suminf.    1.79642 (10) obj. -15867.2 iterations 14
Cbc0038I Pass  54: suminf.    0.84122 (6) obj. -15867.2 iterations 5
Cbc0038I Pass  55: suminf.    0.59509 (2) obj. -16578.3 iterations 11
Cbc0038I Pass  56: suminf.    0.22076 (1) obj. -15867.2 iterations 5
Cbc0038I Pass  57: suminf.    0.22076 (1) obj. -15867.2 iterations 0
Cbc0038I Pass  58: suminf.    1.06761 (12) obj. -15867.2 iterations 21
Cbc0038I Pass  59: suminf.    1.03956 (6) obj. -15867.2 iterations 4
Cbc0038I Pass  60: suminf.    0.22995 (2) obj. -16683.2 iterations 11
Cbc0038I Pass  61: suminf.    0.50087 (2) obj. -15867.2 iterations 2
Cbc0038I Pass  62: suminf.    1.46956 (8) obj. -15867.2 iterations 8
Cbc0038I Pass  63: suminf.    0.86055 (7) obj. -16689.3 iterations 3
Cbc0038I Rounding solution of -15622.9 is better than previous of -15465.9

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 44 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -15622.9 to -15661.2 (0.10 seconds)
Cbc0038I Round again with cutoff of -16348.7
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 4
Cbc0038I Pass  63: suminf.    4.18075 (37) obj. -16348.7 iterations 1
Cbc0038I Pass  64: suminf.    2.12480 (13) obj. -16348.7 iterations 33
Cbc0038I Pass  65: suminf.    2.12480 (13) obj. -16348.7 iterations 0
Cbc0038I Pass  66: suminf.    1.61561 (5) obj. -16348.7 iterations 20
Cbc0038I Pass  67: suminf.    1.61561 (5) obj. -16348.7 iterations 0
Cbc0038I Pass  68: suminf.    0.22995 (2) obj. -16681.2 iterations 12
Cbc0038I Pass  69: suminf.    0.22995 (2) obj. -16681.2 iterations 0
Cbc0038I Pass  70: suminf.    0.34035 (2) obj. -16348.7 iterations 2
Cbc0038I Pass  71: suminf.    0.65574 (4) obj. -16348.7 iterations 6
Cbc0038I Pass  72: suminf.    0.59570 (5) obj. -16686.7 iterations 4
Cbc0038I Pass  73: suminf.    0.34101 (2) obj. -16348.7 iterations 5
Cbc0038I Pass  74: suminf.    0.22995 (2) obj. -16683.2 iterations 4
Cbc0038I Pass  75: suminf.    0.80844 (5) obj. -16348.7 iterations 25
Cbc0038I Pass  76: suminf.    0.80844 (5) obj. -16348.7 iterations 4
Cbc0038I Pass  77: suminf.    0.59509 (2) obj. -16580.3 iterations 9
Cbc0038I Pass  78: suminf.    0.34706 (1) obj. -16348.7 iterations 4
Cbc0038I Pass  79: suminf.    0.34706 (1) obj. -16348.7 iterations 0
Cbc0038I Pass  80: suminf.    1.47442 (12) obj. -16348.7 iterations 21
Cbc0038I Pass  81: suminf.    1.33989 (11) obj. -16348.7 iterations 6
Cbc0038I Pass  82: suminf.    1.07575 (9) obj. -16702.4 iterations 5
Cbc0038I Pass  83: suminf.    0.34301 (2) obj. -16348.7 iterations 9
Cbc0038I Pass  84: suminf.    0.22995 (2) obj. -16689.2 iterations 4
Cbc0038I Pass  85: suminf.    1.24458 (7) obj. -16348.7 iterations 11
Cbc0038I Pass  86: suminf.    0.74916 (6) obj. -16695.4 iterations 4
Cbc0038I Pass  87: suminf.    0.34334 (2) obj. -16348.7 iterations 6
Cbc0038I Pass  88: suminf.    0.22995 (2) obj. -16690.2 iterations 4
Cbc0038I Pass  89: suminf.    0.72046 (4) obj. -16348.7 iterations 7
Cbc0038I Pass  90: suminf.    0.36471 (3) obj. -16692 iterations 6
Cbc0038I Pass  91: suminf.    0.34334 (2) obj. -16348.7 iterations 3
Cbc0038I Pass  92: suminf.    0.22995 (2) obj. -16690.2 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 41 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -15661.2 - took 0.07 seconds
Cbc0012I Integer solution of -15661.226 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 85 rows 94 columns, reduced to 5 rows 6 columns
Cbc0031I 24 added rows had average density of 8.125
Cbc0013I At root node, 24 cuts changed objective from -17472.215 to -16050.242 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 719 row cuts average 4.3 elements, 17 column cuts (17 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 132 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15661.226 best solution, best possible -15987.684 (0.47 seconds)
Cbc0001I Search completed - best objective -15661.226, took 533 iterations and 2 nodes (0.54 seconds)
Cbc0032I Strong branching done 22 times (246 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.54

