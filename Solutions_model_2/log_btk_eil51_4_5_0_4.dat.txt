Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 68 (-37) rows, 38 (-15) columns and 205 (-98) elements
Clp0000I Optimal - objective value 83.34007
Coin0511I After Postsolve, objective 83.34007, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.34007031 - 31 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 68 rows, 38 columns (37 integer (37 of which binary)) and 205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.59188
Cbc0038I Pass   1: suminf.    0.85386 (3) obj. -49.5462 iterations 14
Cbc0038I Pass   2: suminf.    0.28070 (2) obj. -42.5734 iterations 1
Cbc0038I Solution found of -20.7413
Cbc0038I Relaxing continuous gives -20.7413
Cbc0038I Rounding solution of -32.5689 is better than previous of -20.7413

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 38 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -32.5689 to -55.7413 (0.01 seconds)
Cbc0038I Round again with cutoff of -58.5013
Cbc0038I Pass   3: suminf.    1.21040 (5) obj. -58.5013 iterations 2
Cbc0038I Pass   4: suminf.    1.25153 (6) obj. -58.5013 iterations 8
Cbc0038I Pass   5: suminf.    0.51359 (2) obj. -58.5013 iterations 4
Cbc0038I Pass   6: suminf.    0.77908 (2) obj. -58.5013 iterations 2
Cbc0038I Pass   7: suminf.    0.33788 (1) obj. -58.5013 iterations 2
Cbc0038I Pass   8: suminf.    3.76827 (9) obj. -58.5013 iterations 10
Cbc0038I Pass   9: suminf.    1.47551 (5) obj. -58.5013 iterations 10
Cbc0038I Pass  10: suminf.    0.83082 (7) obj. -58.5013 iterations 14
Cbc0038I Pass  11: suminf.    0.79610 (6) obj. -58.5013 iterations 2
Cbc0038I Pass  12: suminf.    1.09864 (5) obj. -58.5013 iterations 11
Cbc0038I Pass  13: suminf.    0.70557 (3) obj. -58.5013 iterations 2
Cbc0038I Pass  14: suminf.    1.08641 (5) obj. -58.5013 iterations 3
Cbc0038I Pass  15: suminf.    1.04859 (4) obj. -58.5013 iterations 3
Cbc0038I Pass  16: suminf.    1.01469 (5) obj. -58.5013 iterations 6
Cbc0038I Pass  17: suminf.    0.51359 (2) obj. -58.5013 iterations 3
Cbc0038I Pass  18: suminf.    0.77908 (2) obj. -58.5013 iterations 2
Cbc0038I Pass  19: suminf.    0.33788 (1) obj. -58.5013 iterations 2
Cbc0038I Pass  20: suminf.    2.97176 (7) obj. -58.5013 iterations 8
Cbc0038I Pass  21: suminf.    2.37230 (7) obj. -58.5013 iterations 5
Cbc0038I Pass  22: suminf.    1.70324 (6) obj. -58.5013 iterations 5
Cbc0038I Pass  23: suminf.    1.69929 (8) obj. -58.5013 iterations 2
Cbc0038I Pass  24: suminf.    1.26985 (3) obj. -58.5013 iterations 12
Cbc0038I Pass  25: suminf.    0.46034 (3) obj. -58.5013 iterations 6
Cbc0038I Pass  26: suminf.    1.01469 (5) obj. -58.5013 iterations 6
Cbc0038I Pass  27: suminf.    0.51359 (2) obj. -58.5013 iterations 3
Cbc0038I Pass  28: suminf.    0.77908 (2) obj. -58.5013 iterations 2
Cbc0038I Pass  29: suminf.    0.33788 (1) obj. -58.5013 iterations 2
Cbc0038I Pass  30: suminf.    1.64746 (7) obj. -58.5013 iterations 5
Cbc0038I Pass  31: suminf.    1.23815 (5) obj. -58.5013 iterations 2
Cbc0038I Pass  32: suminf.    1.25153 (6) obj. -58.5013 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 38 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -55.7413 - took 0.02 seconds
Cbc0012I Integer solution of -55.741292 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 68 rows 38 columns, reduced to 22 rows 16 columns
Cbc0031I 10 added rows had average density of 31.7
Cbc0013I At root node, 10 cuts changed objective from -83.34007 to -62.110626 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 585 row cuts average 3.7 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 371 row cuts average 34.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.741292, took 1408 iterations and 8 nodes (0.18 seconds)
Cbc0032I Strong branching done 80 times (692 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-45) rows, 65 (-37) columns and 706 (-872) elements
Clp1000I sum of infeasibilities 1.18328e-07 - average 2.00555e-09, 35 fixed columns
Coin0506I Presolve 25 (-34) rows, 29 (-36) columns and 104 (-602) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 2.5716507 - largest nonzero change 2.2511248e-05 ( 0.00062299929%) - largest zero change 2.6570353e-05
Clp0000I Optimal - objective value 62.005028
Clp0000I Optimal - objective value 62.005028
Coin0511I After Postsolve, objective 62.005028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.7984623 - largest nonzero change 2.5244106e-05 ( 0.0019083096%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 110.14978
Clp0000I Optimal - objective value 110.14978
Clp0000I Optimal - objective value 110.14978
Coin0511I After Postsolve, objective 110.14978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 110.1497784 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 68 columns (68 integer (68 of which binary)) and 717 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.977%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 8.4414
Cbc0038I Pass   1: suminf.    2.86019 (19) obj. -90.8536 iterations 4
Cbc0038I Pass   2: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass   3: suminf.    0.37984 (8) obj. -29.5837 iterations 12
Cbc0038I Solution found of -17.2241
Cbc0038I Rounding solution of -20.2241 is better than previous of -17.2241

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20.2241 to -46.1378 (0.02 seconds)
Cbc0038I Round again with cutoff of -51.7771
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass   5: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass   6: suminf.    0.45767 (2) obj. -51.7771 iterations 25
Cbc0038I Pass   7: suminf.    0.45767 (2) obj. -51.7771 iterations 0
Cbc0038I Pass   8: suminf.    0.71589 (3) obj. -58.2135 iterations 2
Cbc0038I Pass   9: suminf.    1.57521 (8) obj. -51.7771 iterations 14
Cbc0038I Pass  10: suminf.    1.57521 (8) obj. -51.7771 iterations 1
Cbc0038I Pass  11: suminf.    0.28672 (1) obj. -51.7771 iterations 9
Cbc0038I Pass  12: suminf.    0.16667 (1) obj. -53.0977 iterations 1
Cbc0038I Pass  13: suminf.    1.65702 (9) obj. -51.7771 iterations 15
Cbc0038I Pass  14: suminf.    1.65702 (9) obj. -51.7771 iterations 0
Cbc0038I Pass  15: suminf.    0.58848 (5) obj. -51.7771 iterations 8
Cbc0038I Pass  16: suminf.    0.38774 (4) obj. -51.7771 iterations 2
Cbc0038I Pass  17: suminf.    0.24177 (2) obj. -51.7771 iterations 6
Cbc0038I Pass  18: suminf.    0.24177 (2) obj. -51.7771 iterations 0
Cbc0038I Pass  19: suminf.    0.58119 (3) obj. -51.7771 iterations 5
Cbc0038I Pass  20: suminf.    0.79018 (3) obj. -51.7771 iterations 3
Cbc0038I Pass  21: suminf.    0.38415 (2) obj. -54.8472 iterations 2
Cbc0038I Pass  22: suminf.    0.66324 (2) obj. -51.7771 iterations 2
Cbc0038I Pass  23: suminf.    1.04930 (5) obj. -51.7771 iterations 20
Cbc0038I Pass  24: suminf.    0.65928 (4) obj. -51.7771 iterations 4
Cbc0038I Pass  25: suminf.    0.50426 (4) obj. -53.4823 iterations 1
Cbc0038I Pass  26: suminf.    0.30332 (2) obj. -51.7771 iterations 4
Cbc0038I Pass  27: suminf.    0.30332 (2) obj. -51.7771 iterations 0
Cbc0038I Pass  28: suminf.    0.75326 (2) obj. -51.7771 iterations 4
Cbc0038I Pass  29: suminf.    3.54379 (16) obj. -51.7771 iterations 20
Cbc0038I Pass  30: suminf.    3.14531 (13) obj. -51.7771 iterations 3
Cbc0038I Pass  31: suminf.    2.40118 (11) obj. -51.7771 iterations 16
Cbc0038I Pass  32: suminf.    2.21415 (9) obj. -51.7771 iterations 2
Cbc0038I Pass  33: suminf.    2.21415 (9) obj. -51.7771 iterations 1
Cbc0038I Rounding solution of -54.9311 is better than previous of -46.1378

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -54.9311 to -55.7413 (0.04 seconds)
Cbc0038I Round again with cutoff of -65.099
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass  34: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass  35: suminf.    1.36863 (5) obj. -65.099 iterations 26
Cbc0038I Pass  36: suminf.    0.94601 (4) obj. -66.6823 iterations 2
Cbc0038I Pass  37: suminf.    1.09584 (8) obj. -65.099 iterations 9
Cbc0038I Pass  38: suminf.    1.06660 (7) obj. -65.099 iterations 2
Cbc0038I Pass  39: suminf.    1.18261 (6) obj. -65.099 iterations 5
Cbc0038I Pass  40: suminf.    1.18261 (6) obj. -65.099 iterations 0
Cbc0038I Pass  41: suminf.    1.41718 (6) obj. -65.099 iterations 2
Cbc0038I Pass  42: suminf.    1.13179 (6) obj. -65.099 iterations 1
Cbc0038I Pass  43: suminf.    1.55870 (13) obj. -65.099 iterations 14
Cbc0038I Pass  44: suminf.    1.55870 (13) obj. -65.099 iterations 2
Cbc0038I Pass  45: suminf.    1.82917 (7) obj. -65.099 iterations 14
Cbc0038I Pass  46: suminf.    1.71543 (9) obj. -65.099 iterations 1
Cbc0038I Pass  47: suminf.    2.47229 (7) obj. -65.099 iterations 4
Cbc0038I Pass  48: suminf.    1.78951 (9) obj. -65.099 iterations 2
Cbc0038I Pass  49: suminf.    1.82917 (7) obj. -65.099 iterations 2
Cbc0038I Pass  50: suminf.    3.39193 (12) obj. -65.099 iterations 12
Cbc0038I Pass  51: suminf.    2.59149 (11) obj. -65.099 iterations 2
Cbc0038I Pass  52: suminf.    2.30435 (11) obj. -65.099 iterations 3
Cbc0038I Pass  53: suminf.    1.74970 (7) obj. -65.099 iterations 10
Cbc0038I Pass  54: suminf.    1.74970 (7) obj. -65.099 iterations 0
Cbc0038I Pass  55: suminf.    2.26659 (7) obj. -65.099 iterations 2
Cbc0038I Pass  56: suminf.    2.78626 (9) obj. -65.099 iterations 5
Cbc0038I Pass  57: suminf.    2.37608 (9) obj. -65.099 iterations 2
Cbc0038I Pass  58: suminf.    2.63870 (11) obj. -65.099 iterations 3
Cbc0038I Pass  59: suminf.    2.63870 (11) obj. -65.099 iterations 0
Cbc0038I Pass  60: suminf.    2.06659 (7) obj. -65.099 iterations 7
Cbc0038I Pass  61: suminf.    1.94970 (7) obj. -65.099 iterations 1
Cbc0038I Pass  62: suminf.    2.99632 (13) obj. -65.099 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 40 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -55.7413 - took 0.04 seconds
Cbc0012I Integer solution of -55.741292 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 62 rows 68 columns, reduced to 5 rows 5 columns
Cbc0031I 23 added rows had average density of 8.9130435
Cbc0013I At root node, 23 cuts changed objective from -102.52961 to -58.61873 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 314 row cuts average 3.2 elements, 14 column cuts (14 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.741292, took 233 iterations and 2 nodes (0.31 seconds)
Cbc0032I Strong branching done 52 times (311 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.31

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 68 (-37) rows, 38 (-15) columns and 205 (-98) elements
Clp0000I Optimal - objective value 83.34007
Coin0511I After Postsolve, objective 83.34007, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.34007031 - 31 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 68 rows, 38 columns (37 integer (37 of which binary)) and 205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.59188
Cbc0038I Pass   1: suminf.    0.85386 (3) obj. -49.5462 iterations 14
Cbc0038I Pass   2: suminf.    0.28070 (2) obj. -42.5734 iterations 1
Cbc0038I Solution found of -20.7413
Cbc0038I Relaxing continuous gives -20.7413
Cbc0038I Rounding solution of -32.5689 is better than previous of -20.7413

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 38 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -32.5689 to -55.7413 (0.01 seconds)
Cbc0038I Round again with cutoff of -58.5013
Cbc0038I Pass   3: suminf.    1.21040 (5) obj. -58.5013 iterations 2
Cbc0038I Pass   4: suminf.    1.25153 (6) obj. -58.5013 iterations 8
Cbc0038I Pass   5: suminf.    0.51359 (2) obj. -58.5013 iterations 4
Cbc0038I Pass   6: suminf.    0.77908 (2) obj. -58.5013 iterations 2
Cbc0038I Pass   7: suminf.    0.33788 (1) obj. -58.5013 iterations 2
Cbc0038I Pass   8: suminf.    3.76827 (9) obj. -58.5013 iterations 10
Cbc0038I Pass   9: suminf.    1.47551 (5) obj. -58.5013 iterations 10
Cbc0038I Pass  10: suminf.    0.83082 (7) obj. -58.5013 iterations 14
Cbc0038I Pass  11: suminf.    0.79610 (6) obj. -58.5013 iterations 2
Cbc0038I Pass  12: suminf.    1.09864 (5) obj. -58.5013 iterations 11
Cbc0038I Pass  13: suminf.    0.70557 (3) obj. -58.5013 iterations 2
Cbc0038I Pass  14: suminf.    1.08641 (5) obj. -58.5013 iterations 3
Cbc0038I Pass  15: suminf.    1.04859 (4) obj. -58.5013 iterations 3
Cbc0038I Pass  16: suminf.    1.01469 (5) obj. -58.5013 iterations 6
Cbc0038I Pass  17: suminf.    0.51359 (2) obj. -58.5013 iterations 3
Cbc0038I Pass  18: suminf.    0.77908 (2) obj. -58.5013 iterations 2
Cbc0038I Pass  19: suminf.    0.33788 (1) obj. -58.5013 iterations 2
Cbc0038I Pass  20: suminf.    2.97176 (7) obj. -58.5013 iterations 8
Cbc0038I Pass  21: suminf.    2.37230 (7) obj. -58.5013 iterations 5
Cbc0038I Pass  22: suminf.    1.70324 (6) obj. -58.5013 iterations 5
Cbc0038I Pass  23: suminf.    1.69929 (8) obj. -58.5013 iterations 2
Cbc0038I Pass  24: suminf.    1.26985 (3) obj. -58.5013 iterations 12
Cbc0038I Pass  25: suminf.    0.46034 (3) obj. -58.5013 iterations 6
Cbc0038I Pass  26: suminf.    1.01469 (5) obj. -58.5013 iterations 6
Cbc0038I Pass  27: suminf.    0.51359 (2) obj. -58.5013 iterations 3
Cbc0038I Pass  28: suminf.    0.77908 (2) obj. -58.5013 iterations 2
Cbc0038I Pass  29: suminf.    0.33788 (1) obj. -58.5013 iterations 2
Cbc0038I Pass  30: suminf.    1.64746 (7) obj. -58.5013 iterations 5
Cbc0038I Pass  31: suminf.    1.23815 (5) obj. -58.5013 iterations 2
Cbc0038I Pass  32: suminf.    1.25153 (6) obj. -58.5013 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 38 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -55.7413 - took 0.04 seconds
Cbc0012I Integer solution of -55.741292 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 68 rows 38 columns, reduced to 22 rows 16 columns
Cbc0031I 10 added rows had average density of 31.7
Cbc0013I At root node, 10 cuts changed objective from -83.34007 to -62.110626 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 585 row cuts average 3.7 elements, 2 column cuts (2 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 371 row cuts average 34.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.741292, took 1408 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 80 times (692 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-46) rows, 65 (-38) columns and 706 (-873) elements
Clp1000I sum of infeasibilities 1.18328e-07 - average 2.00555e-09, 35 fixed columns
Coin0506I Presolve 25 (-34) rows, 29 (-36) columns and 104 (-602) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 2.5716507 - largest nonzero change 2.2511248e-05 ( 0.00062299929%) - largest zero change 2.6570353e-05
Clp0000I Optimal - objective value 62.005028
Clp0000I Optimal - objective value 62.005028
Coin0511I After Postsolve, objective 62.005028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.7984623 - largest nonzero change 2.5244106e-05 ( 0.0019083096%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 110.14978
Clp0000I Optimal - objective value 110.14978
Clp0000I Optimal - objective value 110.14978
Coin0511I After Postsolve, objective 110.14978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 110.1497784 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 68 columns (68 integer (68 of which binary)) and 717 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.977%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 8.4414
Cbc0038I Pass   1: suminf.    2.86019 (19) obj. -90.8536 iterations 4
Cbc0038I Pass   2: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass   3: suminf.    0.37984 (8) obj. -29.5837 iterations 12
Cbc0038I Solution found of -17.2241
Cbc0038I Rounding solution of -20.2241 is better than previous of -17.2241

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20.2241 to -46.1378 (0.02 seconds)
Cbc0038I Round again with cutoff of -51.7771
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass   5: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass   6: suminf.    0.45767 (2) obj. -51.7771 iterations 25
Cbc0038I Pass   7: suminf.    0.45767 (2) obj. -51.7771 iterations 0
Cbc0038I Pass   8: suminf.    0.71589 (3) obj. -58.2135 iterations 2
Cbc0038I Pass   9: suminf.    1.57521 (8) obj. -51.7771 iterations 14
Cbc0038I Pass  10: suminf.    1.57521 (8) obj. -51.7771 iterations 1
Cbc0038I Pass  11: suminf.    0.28672 (1) obj. -51.7771 iterations 9
Cbc0038I Pass  12: suminf.    0.16667 (1) obj. -53.0977 iterations 1
Cbc0038I Pass  13: suminf.    1.65702 (9) obj. -51.7771 iterations 15
Cbc0038I Pass  14: suminf.    1.65702 (9) obj. -51.7771 iterations 0
Cbc0038I Pass  15: suminf.    0.58848 (5) obj. -51.7771 iterations 8
Cbc0038I Pass  16: suminf.    0.38774 (4) obj. -51.7771 iterations 2
Cbc0038I Pass  17: suminf.    0.24177 (2) obj. -51.7771 iterations 6
Cbc0038I Pass  18: suminf.    0.24177 (2) obj. -51.7771 iterations 0
Cbc0038I Pass  19: suminf.    0.58119 (3) obj. -51.7771 iterations 5
Cbc0038I Pass  20: suminf.    0.79018 (3) obj. -51.7771 iterations 3
Cbc0038I Pass  21: suminf.    0.38415 (2) obj. -54.8472 iterations 2
Cbc0038I Pass  22: suminf.    0.66324 (2) obj. -51.7771 iterations 2
Cbc0038I Pass  23: suminf.    1.04930 (5) obj. -51.7771 iterations 20
Cbc0038I Pass  24: suminf.    0.65928 (4) obj. -51.7771 iterations 4
Cbc0038I Pass  25: suminf.    0.50426 (4) obj. -53.4823 iterations 1
Cbc0038I Pass  26: suminf.    0.30332 (2) obj. -51.7771 iterations 4
Cbc0038I Pass  27: suminf.    0.30332 (2) obj. -51.7771 iterations 0
Cbc0038I Pass  28: suminf.    0.75326 (2) obj. -51.7771 iterations 4
Cbc0038I Pass  29: suminf.    3.54379 (16) obj. -51.7771 iterations 20
Cbc0038I Pass  30: suminf.    3.14531 (13) obj. -51.7771 iterations 3
Cbc0038I Pass  31: suminf.    2.40118 (11) obj. -51.7771 iterations 16
Cbc0038I Pass  32: suminf.    2.21415 (9) obj. -51.7771 iterations 2
Cbc0038I Pass  33: suminf.    2.21415 (9) obj. -51.7771 iterations 1
Cbc0038I Rounding solution of -54.9311 is better than previous of -46.1378

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -54.9311 to -55.7413 (0.04 seconds)
Cbc0038I Round again with cutoff of -65.099
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass  34: suminf.    2.86019 (19) obj. -90.8536 iterations 0
Cbc0038I Pass  35: suminf.    1.36863 (5) obj. -65.099 iterations 26
Cbc0038I Pass  36: suminf.    0.94601 (4) obj. -66.6823 iterations 2
Cbc0038I Pass  37: suminf.    1.09584 (8) obj. -65.099 iterations 9
Cbc0038I Pass  38: suminf.    1.06660 (7) obj. -65.099 iterations 2
Cbc0038I Pass  39: suminf.    1.18261 (6) obj. -65.099 iterations 5
Cbc0038I Pass  40: suminf.    1.18261 (6) obj. -65.099 iterations 0
Cbc0038I Pass  41: suminf.    1.41718 (6) obj. -65.099 iterations 2
Cbc0038I Pass  42: suminf.    1.13179 (6) obj. -65.099 iterations 1
Cbc0038I Pass  43: suminf.    1.55870 (13) obj. -65.099 iterations 14
Cbc0038I Pass  44: suminf.    1.55870 (13) obj. -65.099 iterations 2
Cbc0038I Pass  45: suminf.    1.82917 (7) obj. -65.099 iterations 14
Cbc0038I Pass  46: suminf.    1.71543 (9) obj. -65.099 iterations 1
Cbc0038I Pass  47: suminf.    2.47229 (7) obj. -65.099 iterations 4
Cbc0038I Pass  48: suminf.    1.78951 (9) obj. -65.099 iterations 2
Cbc0038I Pass  49: suminf.    1.82917 (7) obj. -65.099 iterations 2
Cbc0038I Pass  50: suminf.    3.39193 (12) obj. -65.099 iterations 12
Cbc0038I Pass  51: suminf.    2.59149 (11) obj. -65.099 iterations 2
Cbc0038I Pass  52: suminf.    2.30435 (11) obj. -65.099 iterations 3
Cbc0038I Pass  53: suminf.    1.74970 (7) obj. -65.099 iterations 10
Cbc0038I Pass  54: suminf.    1.74970 (7) obj. -65.099 iterations 0
Cbc0038I Pass  55: suminf.    2.26659 (7) obj. -65.099 iterations 2
Cbc0038I Pass  56: suminf.    2.78626 (9) obj. -65.099 iterations 5
Cbc0038I Pass  57: suminf.    2.37608 (9) obj. -65.099 iterations 2
Cbc0038I Pass  58: suminf.    2.63870 (11) obj. -65.099 iterations 3
Cbc0038I Pass  59: suminf.    2.63870 (11) obj. -65.099 iterations 0
Cbc0038I Pass  60: suminf.    2.06659 (7) obj. -65.099 iterations 7
Cbc0038I Pass  61: suminf.    1.94970 (7) obj. -65.099 iterations 1
Cbc0038I Pass  62: suminf.    2.99632 (13) obj. -65.099 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 40 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -55.7413 - took 0.04 seconds
Cbc0012I Integer solution of -55.741292 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 62 rows 68 columns, reduced to 5 rows 5 columns
Cbc0031I 23 added rows had average density of 8.9130435
Cbc0013I At root node, 23 cuts changed objective from -102.52961 to -58.61873 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 314 row cuts average 3.2 elements, 14 column cuts (14 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.741292, took 233 iterations and 2 nodes (0.33 seconds)
Cbc0032I Strong branching done 52 times (311 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.33

