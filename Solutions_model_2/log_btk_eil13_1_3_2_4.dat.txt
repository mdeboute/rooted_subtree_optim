Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 14 (-15) rows, 9 (-6) columns and 40 (-35) elements
Clp1000I sum of infeasibilities 7.09713e-07 - average 5.06938e-08, 1 fixed columns
Coin0506I Presolve 11 (-3) rows, 8 (-1) columns and 32 (-8) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 38.45445
Clp0000I Optimal - objective value 38.45445
Coin0511I After Postsolve, objective 38.45445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.45445
Clp0000I Optimal - objective value 38.45445
Clp0000I Optimal - objective value 38.45445
Coin0511I After Postsolve, objective 38.45445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.4544501 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 13 rows, 9 columns (8 integer (8 of which binary)) and 39 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.526%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.62546
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.42109e-14 iterations 5
Cbc0038I Solution found of 1.42109e-14
Cbc0038I Relaxing continuous gives 1.42109e-14
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 13 rows 9 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 1.42109e-14 to -9.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -12.5267
Cbc0038I Pass   2: suminf.    0.29774 (2) obj. -12.5267 iterations 3
Cbc0038I Pass   3: suminf.    0.42466 (2) obj. -12.5267 iterations 1
Cbc0038I Pass   4: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass   5: suminf.    0.05935 (1) obj. -12.5267 iterations 2
Cbc0038I Pass   6: suminf.    0.89475 (3) obj. -12.5267 iterations 6
Cbc0038I Pass   7: suminf.    0.48276 (1) obj. -12.5267 iterations 2
Cbc0038I Pass   8: suminf.    0.11817 (1) obj. -12.5267 iterations 2
Cbc0038I Pass   9: suminf.    0.54310 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  10: suminf.    0.54310 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  11: suminf.    0.77234 (3) obj. -12.5267 iterations 2
Cbc0038I Pass  12: suminf.    0.77234 (3) obj. -12.5267 iterations 0
Cbc0038I Pass  13: suminf.    0.54310 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  14: suminf.    0.89475 (3) obj. -12.5267 iterations 2
Cbc0038I Pass  15: suminf.    0.48276 (1) obj. -12.5267 iterations 2
Cbc0038I Pass  16: suminf.    0.11817 (1) obj. -12.5267 iterations 2
Cbc0038I Pass  17: suminf.    0.54310 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  18: suminf.    0.63434 (4) obj. -12.5267 iterations 5
Cbc0038I Pass  19: suminf.    0.63434 (4) obj. -12.5267 iterations 0
Cbc0038I Pass  20: suminf.    0.64553 (3) obj. -12.5267 iterations 3
Cbc0038I Pass  21: suminf.    0.05935 (1) obj. -12.5267 iterations 3
Cbc0038I Pass  22: suminf.    0.42466 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  23: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  24: suminf.    0.62661 (3) obj. -12.5267 iterations 2
Cbc0038I Pass  25: suminf.    0.42466 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  26: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  27: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  28: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  29: suminf.    1.59244 (4) obj. -12.5267 iterations 4
Cbc0038I Pass  30: suminf.    1.07234 (4) obj. -12.5267 iterations 1
Cbc0038I Pass  31: suminf.    0.77234 (3) obj. -12.5267 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 13 rows 9 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9.5 - took 0.01 seconds
Cbc0012I Integer solution of -9.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 13 rows 9 columns, reduced to 7 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -35.268055 to 3 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-9) rows, 21 (-5) columns and 104 (-49) elements
Clp1000I sum of infeasibilities 0 - average 0, 12 fixed columns
Coin0506I Presolve 8 (-11) rows, 9 (-12) columns and 30 (-74) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 96.138811
Clp0000I Optimal - objective value 96.138811
Coin0511I After Postsolve, objective 96.138811, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0197176 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 118.08854
Clp0000I Optimal - objective value 118.08854
Clp0000I Optimal - objective value 118.08854
Coin0511I After Postsolve, objective 118.08854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 118.0885365 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 21 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.849%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.04724
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.5 iterations 8
Cbc0038I Solution found of 10.5
Cbc0038I Rounding solution of -9.5 is better than previous of 10.5

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13.1579
Cbc0038I Pass   2: suminf.    1.01211 (6) obj. -13.1579 iterations 1
Cbc0038I Pass   3: suminf.    0.59153 (3) obj. -13.1579 iterations 8
Cbc0038I Pass   4: suminf.    0.59153 (3) obj. -13.1579 iterations 0
Cbc0038I Pass   5: suminf.    0.65404 (2) obj. -13.1579 iterations 2
Cbc0038I Pass   6: suminf.    0.14286 (1) obj. -21.0714 iterations 2
Cbc0038I Pass   7: suminf.    0.94534 (5) obj. -13.1579 iterations 4
Cbc0038I Pass   8: suminf.    0.14286 (1) obj. -21.0714 iterations 4
Cbc0038I Pass   9: suminf.    1.34291 (4) obj. -13.1579 iterations 4
Cbc0038I Pass  10: suminf.    1.81418 (5) obj. -13.1579 iterations 3
Cbc0038I Pass  11: suminf.    0.80226 (3) obj. -13.1579 iterations 3
Cbc0038I Pass  12: suminf.    0.82825 (3) obj. -13.1579 iterations 3
Cbc0038I Pass  13: suminf.    0.59153 (3) obj. -13.1579 iterations 1
Cbc0038I Pass  14: suminf.    0.65404 (2) obj. -13.1579 iterations 2
Cbc0038I Pass  15: suminf.    0.14286 (1) obj. -21.0714 iterations 2
Cbc0038I Pass  16: suminf.    1.69775 (5) obj. -13.1579 iterations 8
Cbc0038I Pass  17: suminf.    0.64286 (2) obj. -23.5714 iterations 6
Cbc0038I Pass  18: suminf.    2.25251 (10) obj. -13.1579 iterations 9
Cbc0038I Pass  19: suminf.    2.25251 (10) obj. -13.1579 iterations 0
Cbc0038I Pass  20: suminf.    0.67644 (4) obj. -13.1579 iterations 10
Cbc0038I Pass  21: suminf.    0.59507 (4) obj. -13.1579 iterations 2
Cbc0038I Pass  22: suminf.    0.82825 (3) obj. -13.1579 iterations 4
Cbc0038I Pass  23: suminf.    0.59153 (3) obj. -13.1579 iterations 1
Cbc0038I Pass  24: suminf.    0.65404 (2) obj. -13.1579 iterations 2
Cbc0038I Pass  25: suminf.    0.14286 (1) obj. -21.0714 iterations 2
Cbc0038I Pass  26: suminf.    0.48407 (3) obj. -13.1579 iterations 2
Cbc0038I Pass  27: suminf.    0.14286 (1) obj. -21.0714 iterations 2
Cbc0038I Pass  28: suminf.    0.33764 (4) obj. -13.1579 iterations 3
Cbc0038I Pass  29: suminf.    0.33495 (3) obj. -13.1579 iterations 1
Cbc0038I Pass  30: suminf.    0.65999 (3) obj. -13.1579 iterations 3
Cbc0038I Pass  31: suminf.    0.82825 (3) obj. -13.1579 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 21 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9.5 - took 0.01 seconds
Cbc0012I Integer solution of -9.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -41.580362 to -41.580362 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 14 (-15) rows, 9 (-6) columns and 40 (-35) elements
Clp1000I sum of infeasibilities 7.09713e-07 - average 5.06938e-08, 1 fixed columns
Coin0506I Presolve 11 (-3) rows, 8 (-1) columns and 32 (-8) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 38.45445
Clp0000I Optimal - objective value 38.45445
Coin0511I After Postsolve, objective 38.45445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.45445
Clp0000I Optimal - objective value 38.45445
Clp0000I Optimal - objective value 38.45445
Coin0511I After Postsolve, objective 38.45445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.4544501 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 13 rows, 9 columns (8 integer (8 of which binary)) and 39 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.526%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.62546
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.42109e-14 iterations 5
Cbc0038I Solution found of 1.42109e-14
Cbc0038I Relaxing continuous gives 1.42109e-14
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 13 rows 9 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 1.42109e-14 to -9.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -12.5267
Cbc0038I Pass   2: suminf.    0.29774 (2) obj. -12.5267 iterations 3
Cbc0038I Pass   3: suminf.    0.42466 (2) obj. -12.5267 iterations 1
Cbc0038I Pass   4: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass   5: suminf.    0.05935 (1) obj. -12.5267 iterations 2
Cbc0038I Pass   6: suminf.    0.89475 (3) obj. -12.5267 iterations 6
Cbc0038I Pass   7: suminf.    0.48276 (1) obj. -12.5267 iterations 2
Cbc0038I Pass   8: suminf.    0.11817 (1) obj. -12.5267 iterations 2
Cbc0038I Pass   9: suminf.    0.54310 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  10: suminf.    0.54310 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  11: suminf.    0.77234 (3) obj. -12.5267 iterations 2
Cbc0038I Pass  12: suminf.    0.77234 (3) obj. -12.5267 iterations 0
Cbc0038I Pass  13: suminf.    0.54310 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  14: suminf.    0.89475 (3) obj. -12.5267 iterations 2
Cbc0038I Pass  15: suminf.    0.48276 (1) obj. -12.5267 iterations 2
Cbc0038I Pass  16: suminf.    0.11817 (1) obj. -12.5267 iterations 2
Cbc0038I Pass  17: suminf.    0.54310 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  18: suminf.    0.63434 (4) obj. -12.5267 iterations 5
Cbc0038I Pass  19: suminf.    0.63434 (4) obj. -12.5267 iterations 0
Cbc0038I Pass  20: suminf.    0.64553 (3) obj. -12.5267 iterations 3
Cbc0038I Pass  21: suminf.    0.05935 (1) obj. -12.5267 iterations 3
Cbc0038I Pass  22: suminf.    0.42466 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  23: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  24: suminf.    0.62661 (3) obj. -12.5267 iterations 2
Cbc0038I Pass  25: suminf.    0.42466 (2) obj. -12.5267 iterations 2
Cbc0038I Pass  26: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  27: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  28: suminf.    0.42466 (2) obj. -12.5267 iterations 0
Cbc0038I Pass  29: suminf.    1.59244 (4) obj. -12.5267 iterations 4
Cbc0038I Pass  30: suminf.    1.07234 (4) obj. -12.5267 iterations 1
Cbc0038I Pass  31: suminf.    0.77234 (3) obj. -12.5267 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 13 rows 9 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9.5 - took 0.01 seconds
Cbc0012I Integer solution of -9.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 13 rows 9 columns, reduced to 7 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -35.268055 to 3 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 14 (-15) rows, 16 (-11) columns and 72 (-82) elements
Clp1000I sum of infeasibilities 0 - average 0, 14 fixed columns
Coin0506I Presolve 2 (-12) rows, 2 (-14) columns and 4 (-68) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 26.264706
Clp0000I Optimal - objective value 26.264706
Coin0511I After Postsolve, objective 26.264706, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2865003 - largest nonzero change 0 ( 0%) - largest zero change 1.5284941e-05
Clp0000I Optimal - objective value 85.20091
Clp0000I Optimal - objective value 85.20091
Clp0000I Optimal - objective value 85.20091
Coin0511I After Postsolve, objective 85.20091, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.20091036 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 15 rows, 18 columns (18 integer (18 of which binary)) and 79 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.511%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.74092
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.5 iterations 4
Cbc0038I Solution found of -3.5
Cbc0038I Rounding solution of -9.5 is better than previous of -3.5

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -12.7444
Cbc0038I Pass   2: suminf.    1.04393 (8) obj. -12.7444 iterations 1
Cbc0038I Pass   3: suminf.    0.63092 (9) obj. -12.7444 iterations 1
Cbc0038I Pass   4: suminf.    0.63092 (9) obj. -12.7444 iterations 0
Cbc0038I Pass   5: suminf.    0.44537 (2) obj. -12.7444 iterations 12
Cbc0038I Pass   6: suminf.    0.44537 (2) obj. -12.7444 iterations 1
Cbc0038I Pass   7: suminf.    1.18704 (3) obj. -12.7444 iterations 5
Cbc0038I Pass   8: suminf.    1.18704 (3) obj. -12.7444 iterations 1
Cbc0038I Pass   9: suminf.    1.27963 (3) obj. -12.7444 iterations 2
Cbc0038I Pass  10: suminf.    1.12701 (4) obj. -12.7444 iterations 1
Cbc0038I Pass  11: suminf.    0.44537 (2) obj. -12.7444 iterations 6
Cbc0038I Pass  12: suminf.    0.44537 (2) obj. -12.7444 iterations 1
Cbc0038I Pass  13: suminf.    1.18704 (3) obj. -12.7444 iterations 5
Cbc0038I Pass  14: suminf.    1.18704 (3) obj. -12.7444 iterations 1
Cbc0038I Pass  15: suminf.    1.27963 (3) obj. -12.7444 iterations 2
Cbc0038I Pass  16: suminf.    1.12701 (4) obj. -12.7444 iterations 1
Cbc0038I Pass  17: suminf.    0.44537 (2) obj. -12.7444 iterations 6
Cbc0038I Pass  18: suminf.    0.44537 (2) obj. -12.7444 iterations 1
Cbc0038I Pass  19: suminf.    1.18704 (3) obj. -12.7444 iterations 5
Cbc0038I Pass  20: suminf.    1.18704 (3) obj. -12.7444 iterations 1
Cbc0038I Pass  21: suminf.    1.27963 (3) obj. -12.7444 iterations 2
Cbc0038I Pass  22: suminf.    1.12701 (4) obj. -12.7444 iterations 1
Cbc0038I Pass  23: suminf.    0.44537 (2) obj. -12.7444 iterations 6
Cbc0038I Pass  24: suminf.    0.44537 (2) obj. -12.7444 iterations 1
Cbc0038I Pass  25: suminf.    1.18704 (3) obj. -12.7444 iterations 5
Cbc0038I Pass  26: suminf.    1.18704 (3) obj. -12.7444 iterations 1
Cbc0038I Pass  27: suminf.    1.27963 (3) obj. -12.7444 iterations 2
Cbc0038I Pass  28: suminf.    1.12701 (4) obj. -12.7444 iterations 1
Cbc0038I Pass  29: suminf.    0.44537 (2) obj. -12.7444 iterations 6
Cbc0038I Pass  30: suminf.    0.44537 (2) obj. -12.7444 iterations 1
Cbc0038I Pass  31: suminf.    1.18704 (3) obj. -12.7444 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 18 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9.5 - took 0.00 seconds
Cbc0012I Integer solution of -9.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -37.445349 to -37.445349 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

