Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 100 (-3) columns and 563 (-40) elements
Clp1000I sum of infeasibilities 3.97608e-05 - average 2.14923e-07, 18 fixed columns
Coin0506I Presolve 149 (-36) rows, 82 (-18) columns and 455 (-108) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 1.74095 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 43.241106
Clp0000I Optimal - objective value 43.241106
Coin0511I After Postsolve, objective 43.241106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.241106
Clp0000I Optimal - objective value 43.241106
Clp0000I Optimal - objective value 43.241106
Coin0511I After Postsolve, objective 43.241106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.24110576 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 183 rows, 100 columns (99 integer (99 of which binary)) and 594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.184%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.88976
Cbc0038I Solution found of 2.23848
Cbc0038I Relaxing continuous gives -4.79414
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 77 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -4.79414 to -16.0694 (0.06 seconds)
Cbc0038I Round again with cutoff of -18.7701
Cbc0038I Pass   1: suminf.    1.91482 (31) obj. -18.7701 iterations 57
Cbc0038I Pass   2: suminf.    1.19180 (5) obj. -18.7701 iterations 32
Cbc0038I Pass   3: suminf.    0.81007 (6) obj. -18.7701 iterations 2
Cbc0038I Pass   4: suminf.    1.50224 (6) obj. -18.7701 iterations 8
Cbc0038I Pass   5: suminf.    1.40879 (8) obj. -18.7701 iterations 7
Cbc0038I Pass   6: suminf.    1.50592 (5) obj. -18.7701 iterations 11
Cbc0038I Pass   7: suminf.    1.34344 (4) obj. -18.7701 iterations 1
Cbc0038I Pass   8: suminf.    1.63190 (5) obj. -18.7701 iterations 6
Cbc0038I Pass   9: suminf.    1.37595 (5) obj. -18.7701 iterations 3
Cbc0038I Pass  10: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I Pass  11: suminf.    1.65054 (7) obj. -18.7701 iterations 3
Cbc0038I Pass  12: suminf.    1.95816 (5) obj. -18.7701 iterations 8
Cbc0038I Pass  13: suminf.    1.79939 (5) obj. -18.7701 iterations 1
Cbc0038I Pass  14: suminf.    1.37595 (5) obj. -18.7701 iterations 5
Cbc0038I Pass  15: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I Pass  16: suminf.    1.65054 (7) obj. -18.7701 iterations 3
Cbc0038I Pass  17: suminf.    1.95816 (5) obj. -18.7701 iterations 8
Cbc0038I Pass  18: suminf.    1.79939 (5) obj. -18.7701 iterations 1
Cbc0038I Pass  19: suminf.    1.37595 (5) obj. -18.7701 iterations 5
Cbc0038I Pass  20: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I Pass  21: suminf.    1.65054 (7) obj. -18.7701 iterations 3
Cbc0038I Pass  22: suminf.    1.95816 (5) obj. -18.7701 iterations 8
Cbc0038I Pass  23: suminf.    1.79939 (5) obj. -18.7701 iterations 1
Cbc0038I Pass  24: suminf.    1.37595 (5) obj. -18.7701 iterations 5
Cbc0038I Pass  25: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I Pass  26: suminf.    1.65054 (7) obj. -18.7701 iterations 3
Cbc0038I Pass  27: suminf.    1.95816 (5) obj. -18.7701 iterations 8
Cbc0038I Pass  28: suminf.    1.79939 (5) obj. -18.7701 iterations 1
Cbc0038I Pass  29: suminf.    1.37595 (5) obj. -18.7701 iterations 5
Cbc0038I Pass  30: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 95 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -16.0694 - took 0.09 seconds
Cbc0012I Integer solution of -16.0694 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 77 rows 44 columns
Cbc0031I 21 added rows had average density of 82.047619
Cbc0013I At root node, 21 cuts changed objective from -43.075734 to -36.469264 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10748 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1747 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.0694 best solution, best possible -36.469264 (0.99 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 74 rows 42 columns
Cbc0038I Full problem 183 rows 100 columns, reduced to 6 rows 8 columns
Cbc0001I Search completed - best objective -16.0694, took 10386 iterations and 102 nodes (1.42 seconds)
Cbc0032I Strong branching done 1044 times (20393 iterations), fathomed 11 nodes and fixed 34 variables
Cbc0035I Maximum depth 35, 410 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-73) rows, 144 (-58) columns and 2596 (-3057) elements
Clp1000I sum of infeasibilities 5.99281e-06 - average 4.57467e-08, 41 fixed columns
Coin0506I Presolve 87 (-44) rows, 101 (-43) columns and 1429 (-1167) elements
Clp0006I 0  Obj 78.263731 Dual inf 9.5263839 (101)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.9639023 - largest nonzero change 2.7771002e-05 ( 0.0024275985%) - largest zero change 2.9221424e-05
Clp0000I Optimal - objective value 91.352836
Clp0000I Optimal - objective value 91.352836
Coin0511I After Postsolve, objective 91.352836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 91.352836 Dual inf 60.281075 (1)
Clp0014I Perturbing problem by 0.001% of 1.5731958 - largest nonzero change 1.5391776e-05 ( 0.0010393299%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 91.352836
Clp0000I Optimal - objective value 91.352836
Clp0000I Optimal - objective value 91.352836
Coin0511I After Postsolve, objective 91.352836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.35283603 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 145 columns (145 integer (145 of which binary)) and 2625 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.27123
Cbc0038I Pass   1: suminf.    1.97815 (34) obj. -70.1812 iterations 13
Cbc0038I Pass   2: suminf.    1.97815 (34) obj. -70.1812 iterations 0
Cbc0038I Pass   3: suminf.    0.40450 (9) obj. -31.8636 iterations 25
Cbc0038I Solution found of -22.3181
Cbc0038I Rounding solution of -26.099 is better than previous of -22.3181

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 145 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -26.099 to -29.2656 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.9542
Cbc0038I Pass   4: suminf.    1.97815 (34) obj. -70.1812 iterations 0
Cbc0038I Pass   5: suminf.    1.97815 (34) obj. -70.1812 iterations 0
Cbc0038I Pass   6: suminf.    1.00645 (20) obj. -43.2108 iterations 14
Cbc0038I Pass   7: suminf.    0.99784 (14) obj. -34.9542 iterations 22
Cbc0038I Pass   8: suminf.    0.80254 (5) obj. -34.9542 iterations 21
Cbc0038I Pass   9: suminf.    0.75746 (5) obj. -34.9542 iterations 2
Cbc0038I Pass  10: suminf.    0.49972 (3) obj. -34.9542 iterations 14
Cbc0038I Pass  11: suminf.    0.26990 (2) obj. -34.9542 iterations 5
Cbc0038I Pass  12: suminf.    0.45901 (2) obj. -34.9542 iterations 7
Cbc0038I Pass  13: suminf.    2.59813 (23) obj. -34.9542 iterations 33
Cbc0038I Pass  14: suminf.    1.92585 (19) obj. -34.9542 iterations 7
Cbc0038I Pass  15: suminf.    0.95221 (5) obj. -34.9542 iterations 23
Cbc0038I Pass  16: suminf.    0.77356 (4) obj. -34.9542 iterations 14
Cbc0038I Pass  17: suminf.    0.97800 (5) obj. -34.9542 iterations 11
Cbc0038I Pass  18: suminf.    1.87108 (11) obj. -34.9542 iterations 22
Cbc0038I Pass  19: suminf.    1.87108 (11) obj. -34.9542 iterations 7
Cbc0038I Pass  20: suminf.    0.97800 (5) obj. -34.9542 iterations 21
Cbc0038I Pass  21: suminf.    1.67619 (11) obj. -34.9542 iterations 30
Cbc0038I Pass  22: suminf.    1.67619 (11) obj. -34.9542 iterations 10
Cbc0038I Pass  23: suminf.    0.86883 (4) obj. -34.9542 iterations 20
Cbc0038I Pass  24: suminf.    0.86883 (4) obj. -34.9542 iterations 1
Cbc0038I Pass  25: suminf.    1.71001 (5) obj. -34.9542 iterations 7
Cbc0038I Pass  26: suminf.    1.34122 (5) obj. -34.9542 iterations 1
Cbc0038I Pass  27: suminf.    1.34122 (5) obj. -34.9542 iterations 0
Cbc0038I Pass  28: suminf.    1.66974 (5) obj. -34.9542 iterations 4
Cbc0038I Pass  29: suminf.    1.66974 (5) obj. -34.9542 iterations 1
Cbc0038I Pass  30: suminf.    1.71001 (5) obj. -34.9542 iterations 5
Cbc0038I Pass  31: suminf.    1.34122 (5) obj. -34.9542 iterations 3
Cbc0038I Pass  32: suminf.    1.34122 (5) obj. -34.9542 iterations 0
Cbc0038I Pass  33: suminf.    1.66974 (5) obj. -34.9542 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 145 columns, reduced to 14 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -29.2656 to -31.3868 (0.06 seconds)
Cbc0038I Round again with cutoff of -45.1934
Cbc0038I Pass  33: suminf.    1.97815 (34) obj. -70.1812 iterations 0
Cbc0038I Pass  34: suminf.    1.97815 (34) obj. -70.1812 iterations 0
Cbc0038I Pass  35: suminf.    1.11876 (14) obj. -45.1934 iterations 29
Cbc0038I Pass  36: suminf.    0.85976 (14) obj. -45.1934 iterations 1
Cbc0038I Pass  37: suminf.    2.13405 (11) obj. -45.1934 iterations 20
Cbc0038I Pass  38: suminf.    1.45492 (9) obj. -45.1934 iterations 3
Cbc0038I Pass  39: suminf.    1.60597 (7) obj. -45.1934 iterations 17
Cbc0038I Pass  40: suminf.    1.10907 (6) obj. -45.1934 iterations 6
Cbc0038I Pass  41: suminf.    0.92338 (15) obj. -45.1934 iterations 17
Cbc0038I Pass  42: suminf.    0.90120 (14) obj. -45.1934 iterations 8
Cbc0038I Pass  43: suminf.    1.26447 (6) obj. -45.1934 iterations 20
Cbc0038I Pass  44: suminf.    1.81093 (13) obj. -45.1934 iterations 22
Cbc0038I Pass  45: suminf.    1.57101 (11) obj. -45.1934 iterations 12
Cbc0038I Pass  46: suminf.    1.60597 (7) obj. -45.1934 iterations 15
Cbc0038I Pass  47: suminf.    1.10907 (6) obj. -45.1934 iterations 6
Cbc0038I Pass  48: suminf.    2.14695 (12) obj. -45.1934 iterations 27
Cbc0038I Pass  49: suminf.    1.58868 (12) obj. -45.1934 iterations 15
Cbc0038I Pass  50: suminf.    1.36112 (7) obj. -45.1934 iterations 18
Cbc0038I Pass  51: suminf.    1.36112 (7) obj. -45.1934 iterations 4
Cbc0038I Pass  52: suminf.    1.42235 (7) obj. -45.1934 iterations 6
Cbc0038I Pass  53: suminf.    1.42235 (7) obj. -45.1934 iterations 5
Cbc0038I Pass  54: suminf.    1.36112 (7) obj. -45.1934 iterations 6
Cbc0038I Pass  55: suminf.    1.65038 (9) obj. -45.1934 iterations 14
Cbc0038I Pass  56: suminf.    1.04209 (7) obj. -45.686 iterations 7
Cbc0038I Pass  57: suminf.    1.42202 (9) obj. -45.1934 iterations 17
Cbc0038I Pass  58: suminf.    0.68458 (9) obj. -45.1934 iterations 4
Cbc0038I Pass  59: suminf.    1.38544 (8) obj. -45.1934 iterations 13
Cbc0038I Pass  60: suminf.    1.38544 (8) obj. -45.1934 iterations 4
Cbc0038I Pass  61: suminf.    1.38750 (8) obj. -45.1934 iterations 6
Cbc0038I Pass  62: suminf.    1.38750 (8) obj. -45.1934 iterations 5
Cbc0038I Rounding solution of -34.2077 is better than previous of -31.3868

Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 145 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -57.4805
Cbc0038I Pass  62: suminf.    1.97815 (34) obj. -70.1812 iterations 0
Cbc0038I Pass  63: suminf.    1.97815 (34) obj. -70.1812 iterations 0
Cbc0038I Pass  64: suminf.    2.48816 (23) obj. -57.4805 iterations 34
Cbc0038I Pass  65: suminf.    2.48816 (23) obj. -57.4805 iterations 2
Cbc0038I Pass  66: suminf.    1.71778 (13) obj. -57.4805 iterations 55
Cbc0038I Pass  67: suminf.    1.57581 (12) obj. -57.4805 iterations 9
Cbc0038I Pass  68: suminf.    1.71778 (13) obj. -57.4805 iterations 12
Cbc0038I Pass  69: suminf.    2.76643 (19) obj. -57.4805 iterations 19
Cbc0038I Pass  70: suminf.    2.27600 (20) obj. -57.4805 iterations 10
Cbc0038I Pass  71: suminf.    2.73871 (14) obj. -57.4805 iterations 24
Cbc0038I Pass  72: suminf.    2.73871 (14) obj. -57.4805 iterations 1
Cbc0038I Pass  73: suminf.    2.85123 (14) obj. -57.4805 iterations 9
Cbc0038I Pass  74: suminf.    2.85123 (14) obj. -57.4805 iterations 2
Cbc0038I Pass  75: suminf.    2.73871 (14) obj. -57.4805 iterations 3
Cbc0038I Pass  76: suminf.    2.42256 (13) obj. -57.4805 iterations 17
Cbc0038I Pass  77: suminf.    2.04909 (18) obj. -57.4805 iterations 14
Cbc0038I Pass  78: suminf.    2.10974 (15) obj. -57.4805 iterations 12
Cbc0038I Pass  79: suminf.    2.00629 (14) obj. -57.4805 iterations 8
Cbc0038I Pass  80: suminf.    2.36919 (14) obj. -57.4805 iterations 9
Cbc0038I Pass  81: suminf.    2.36919 (14) obj. -57.4805 iterations 3
Cbc0038I Pass  82: suminf.    2.42601 (14) obj. -57.4805 iterations 7
Cbc0038I Pass  83: suminf.    2.42601 (14) obj. -57.4805 iterations 3
Cbc0038I Pass  84: suminf.    2.36919 (14) obj. -57.4805 iterations 4
Cbc0038I Pass  85: suminf.    1.76607 (18) obj. -57.4805 iterations 19
Cbc0038I Pass  86: suminf.    1.68233 (16) obj. -57.4805 iterations 8
Cbc0038I Pass  87: suminf.    2.14253 (14) obj. -57.4805 iterations 19
Cbc0038I Pass  88: suminf.    1.87882 (14) obj. -57.4805 iterations 6
Cbc0038I Pass  89: suminf.    2.06352 (13) obj. -57.4805 iterations 7
Cbc0038I Pass  90: suminf.    1.83324 (13) obj. -57.4805 iterations 4
Cbc0038I Pass  91: suminf.    2.06352 (13) obj. -57.4805 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -34.2077 - took 0.14 seconds
Cbc0012I Integer solution of -34.207701 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 131 rows 145 columns, reduced to 7 rows 8 columns
Cbc0031I 50 added rows had average density of 31.42
Cbc0013I At root node, 50 cuts changed objective from -86.150276 to -40.454046 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9426 row cuts average 4.0 elements, 1 column cuts (44 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 940 row cuts average 121.9 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 637 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1690 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 385 row cuts average 62.1 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.681 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.207701 best solution, best possible -40.454046 (2.29 seconds)
Cbc0012I Integer solution of -38.342285 found by rounding after 2403 iterations and 3 nodes (2.38 seconds)
Cbc0001I Search completed - best objective -38.34228499999999, took 2492 iterations and 6 nodes (2.40 seconds)
Cbc0032I Strong branching done 188 times (4453 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 107 variables fixed on reduced cost
Total time (CPU seconds):       1.78   (Wallclock seconds):       2.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 100 (-3) columns and 563 (-40) elements
Clp1000I sum of infeasibilities 3.97608e-05 - average 2.14923e-07, 18 fixed columns
Coin0506I Presolve 149 (-36) rows, 82 (-18) columns and 455 (-108) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 1.74095 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 43.241106
Clp0000I Optimal - objective value 43.241106
Coin0511I After Postsolve, objective 43.241106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.241106
Clp0000I Optimal - objective value 43.241106
Clp0000I Optimal - objective value 43.241106
Coin0511I After Postsolve, objective 43.241106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.24110576 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 183 rows, 100 columns (99 integer (99 of which binary)) and 594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.184%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.88976
Cbc0038I Solution found of 2.23848
Cbc0038I Relaxing continuous gives -4.79414
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 77 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -4.79414 to -16.0694 (0.06 seconds)
Cbc0038I Round again with cutoff of -18.7701
Cbc0038I Pass   1: suminf.    1.91482 (31) obj. -18.7701 iterations 57
Cbc0038I Pass   2: suminf.    1.19180 (5) obj. -18.7701 iterations 32
Cbc0038I Pass   3: suminf.    0.81007 (6) obj. -18.7701 iterations 2
Cbc0038I Pass   4: suminf.    1.50224 (6) obj. -18.7701 iterations 8
Cbc0038I Pass   5: suminf.    1.40879 (8) obj. -18.7701 iterations 7
Cbc0038I Pass   6: suminf.    1.50592 (5) obj. -18.7701 iterations 11
Cbc0038I Pass   7: suminf.    1.34344 (4) obj. -18.7701 iterations 1
Cbc0038I Pass   8: suminf.    1.63190 (5) obj. -18.7701 iterations 6
Cbc0038I Pass   9: suminf.    1.37595 (5) obj. -18.7701 iterations 3
Cbc0038I Pass  10: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I Pass  11: suminf.    1.65054 (7) obj. -18.7701 iterations 3
Cbc0038I Pass  12: suminf.    1.95816 (5) obj. -18.7701 iterations 8
Cbc0038I Pass  13: suminf.    1.79939 (5) obj. -18.7701 iterations 1
Cbc0038I Pass  14: suminf.    1.37595 (5) obj. -18.7701 iterations 5
Cbc0038I Pass  15: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I Pass  16: suminf.    1.65054 (7) obj. -18.7701 iterations 3
Cbc0038I Pass  17: suminf.    1.95816 (5) obj. -18.7701 iterations 8
Cbc0038I Pass  18: suminf.    1.79939 (5) obj. -18.7701 iterations 1
Cbc0038I Pass  19: suminf.    1.37595 (5) obj. -18.7701 iterations 5
Cbc0038I Pass  20: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I Pass  21: suminf.    1.65054 (7) obj. -18.7701 iterations 3
Cbc0038I Pass  22: suminf.    1.95816 (5) obj. -18.7701 iterations 8
Cbc0038I Pass  23: suminf.    1.79939 (5) obj. -18.7701 iterations 1
Cbc0038I Pass  24: suminf.    1.37595 (5) obj. -18.7701 iterations 5
Cbc0038I Pass  25: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I Pass  26: suminf.    1.65054 (7) obj. -18.7701 iterations 3
Cbc0038I Pass  27: suminf.    1.95816 (5) obj. -18.7701 iterations 8
Cbc0038I Pass  28: suminf.    1.79939 (5) obj. -18.7701 iterations 1
Cbc0038I Pass  29: suminf.    1.37595 (5) obj. -18.7701 iterations 5
Cbc0038I Pass  30: suminf.    1.76107 (5) obj. -18.7701 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 95 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -16.0694 - took 0.09 seconds
Cbc0012I Integer solution of -16.0694 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 77 rows 44 columns
Cbc0031I 21 added rows had average density of 82.047619
Cbc0013I At root node, 21 cuts changed objective from -43.075734 to -36.469264 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10748 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1747 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.0694 best solution, best possible -36.469264 (1.03 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 74 rows 42 columns
Cbc0038I Full problem 183 rows 100 columns, reduced to 6 rows 8 columns
Cbc0001I Search completed - best objective -16.0694, took 10386 iterations and 102 nodes (1.42 seconds)
Cbc0032I Strong branching done 1044 times (20393 iterations), fathomed 11 nodes and fixed 34 variables
Cbc0035I Maximum depth 35, 410 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-75) rows, 143 (-60) columns and 2564 (-3090) elements
Clp1000I sum of infeasibilities 2.39445e-07 - average 1.84188e-09, 42 fixed columns
Coin0506I Presolve 87 (-43) rows, 100 (-43) columns and 1448 (-1116) elements
Clp0006I 0  Obj 49.890678 Dual inf 9.7703926 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.1498489 - largest nonzero change 2.998473e-05 ( 0.0026945801%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 61.156219
Clp0000I Optimal - objective value 61.156219
Coin0511I After Postsolve, objective 61.156219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.156219 Dual inf 0.99748634 (1)
Clp0014I Perturbing problem by 0.001% of 1.5807286 - largest nonzero change 2.5837028e-05 ( 0.0015823696%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 61.81769
Clp0000I Optimal - objective value 61.81769
Clp0000I Optimal - objective value 61.81769
Coin0511I After Postsolve, objective 61.81769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.81769001 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 144 columns (144 integer (144 of which binary)) and 2600 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.827%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.95122
Cbc0038I Pass   1: suminf.    2.01212 (31) obj. -8.78637 iterations 20
Cbc0038I Pass   2: suminf.    2.01212 (31) obj. -8.78637 iterations 0
Cbc0038I Pass   3: suminf.    0.66076 (16) obj. 7.58234 iterations 15
Cbc0038I Solution found of 23.8871
Cbc0038I Rounding solution of 8.2008 is better than previous of 23.8871

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 144 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 8.2008 to 2.03253 (0.06 seconds)
Cbc0038I Round again with cutoff of -2.18377
Cbc0038I Pass   4: suminf.    2.01212 (31) obj. -8.78637 iterations 0
Cbc0038I Pass   5: suminf.    2.01212 (31) obj. -8.78637 iterations 0
Cbc0038I Pass   6: suminf.    1.38616 (16) obj. -2.18377 iterations 22
Cbc0038I Pass   7: suminf.    1.36937 (15) obj. -8.01195 iterations 2
Cbc0038I Pass   8: suminf.    0.41759 (3) obj. -2.18377 iterations 20
Cbc0038I Pass   9: suminf.    0.37002 (2) obj. -2.18377 iterations 3
Cbc0038I Pass  10: suminf.    0.51676 (2) obj. -2.18377 iterations 6
Cbc0038I Pass  11: suminf.    0.47673 (5) obj. -2.18377 iterations 7
Cbc0038I Pass  12: suminf.    1.14129 (4) obj. -2.18377 iterations 10
Cbc0038I Pass  13: suminf.    1.14129 (4) obj. -2.18377 iterations 5
Cbc0038I Pass  14: suminf.    1.16999 (4) obj. -2.18377 iterations 5
Cbc0038I Pass  15: suminf.    0.92723 (5) obj. -2.18377 iterations 8
Cbc0038I Pass  16: suminf.    4.38268 (19) obj. -2.18377 iterations 36
Cbc0038I Pass  17: suminf.    2.08997 (14) obj. -2.18377 iterations 13
Cbc0038I Pass  18: suminf.    1.63760 (13) obj. -2.18377 iterations 6
Cbc0038I Pass  19: suminf.    1.38519 (9) obj. -2.18377 iterations 24
Cbc0038I Pass  20: suminf.    1.38519 (9) obj. -2.18377 iterations 1
Cbc0038I Pass  21: suminf.    0.47673 (5) obj. -2.18377 iterations 22
Cbc0038I Pass  22: suminf.    1.14129 (4) obj. -2.18377 iterations 9
Cbc0038I Pass  23: suminf.    1.14129 (4) obj. -2.18377 iterations 4
Cbc0038I Pass  24: suminf.    1.16999 (4) obj. -2.18377 iterations 4
Cbc0038I Pass  25: suminf.    0.92723 (5) obj. -2.18377 iterations 7
Cbc0038I Pass  26: suminf.    1.58578 (10) obj. -2.18377 iterations 21
Cbc0038I Pass  27: suminf.    1.05674 (7) obj. -2.68761 iterations 8
Cbc0038I Pass  28: suminf.    1.30186 (5) obj. -2.18377 iterations 14
Cbc0038I Pass  29: suminf.    1.30186 (5) obj. -2.18377 iterations 0
Cbc0038I Pass  30: suminf.    0.78911 (5) obj. -2.18377 iterations 6
Cbc0038I Pass  31: suminf.    0.73164 (5) obj. -2.18377 iterations 3
Cbc0038I Pass  32: suminf.    1.34818 (5) obj. -2.18377 iterations 13
Cbc0038I Pass  33: suminf.    0.98524 (4) obj. -2.18377 iterations 5
Cbc0038I Rounding solution of 1.77145 is better than previous of 2.03253

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 144 columns, reduced to 17 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 1.77145 to -1.27425 (0.08 seconds)
Cbc0038I Round again with cutoff of -9.77294
Cbc0038I Pass  33: suminf.    2.15316 (36) obj. -9.77294 iterations 1
Cbc0038I Pass  34: suminf.    2.12638 (32) obj. -9.77294 iterations 2
Cbc0038I Pass  35: suminf.    1.23506 (13) obj. -9.77294 iterations 27
Cbc0038I Pass  36: suminf.    1.23469 (13) obj. -9.83712 iterations 2
Cbc0038I Pass  37: suminf.    1.46820 (6) obj. -9.77294 iterations 22
Cbc0038I Pass  38: suminf.    1.18656 (5) obj. -9.77294 iterations 7
Cbc0038I Pass  39: suminf.    1.71388 (8) obj. -9.77294 iterations 11
Cbc0038I Pass  40: suminf.    1.56732 (10) obj. -9.77294 iterations 6
Cbc0038I Pass  41: suminf.    1.46483 (9) obj. -9.77294 iterations 9
Cbc0038I Pass  42: suminf.    1.40067 (8) obj. -9.77294 iterations 9
Cbc0038I Pass  43: suminf.    1.56733 (8) obj. -9.77294 iterations 9
Cbc0038I Pass  44: suminf.    3.79398 (15) obj. -9.77294 iterations 20
Cbc0038I Pass  45: suminf.    1.51640 (13) obj. -9.77294 iterations 7
Cbc0038I Pass  46: suminf.    1.51640 (13) obj. -9.77294 iterations 0
Cbc0038I Pass  47: suminf.    1.43719 (8) obj. -9.77294 iterations 40
Cbc0038I Pass  48: suminf.    0.98036 (7) obj. -9.77294 iterations 6
Cbc0038I Pass  49: suminf.    1.61476 (8) obj. -9.77294 iterations 9
Cbc0038I Pass  50: suminf.    1.56732 (10) obj. -9.77294 iterations 8
Cbc0038I Pass  51: suminf.    1.46483 (9) obj. -9.77294 iterations 10
Cbc0038I Pass  52: suminf.    1.40067 (8) obj. -9.77294 iterations 9
Cbc0038I Pass  53: suminf.    1.56733 (8) obj. -9.77294 iterations 8
Cbc0038I Pass  54: suminf.    2.77477 (17) obj. -9.77294 iterations 22
Cbc0038I Pass  55: suminf.    2.73029 (16) obj. -9.77294 iterations 7
Cbc0038I Pass  56: suminf.    1.93730 (6) obj. -9.77294 iterations 24
Cbc0038I Pass  57: suminf.    1.25687 (5) obj. -9.77294 iterations 7
Cbc0038I Pass  58: suminf.    0.98036 (7) obj. -9.77294 iterations 4
Cbc0038I Pass  59: suminf.    1.61476 (8) obj. -9.77294 iterations 8
Cbc0038I Pass  60: suminf.    1.56732 (10) obj. -9.77294 iterations 7
Cbc0038I Pass  61: suminf.    1.46483 (9) obj. -9.77294 iterations 9
Cbc0038I Pass  62: suminf.    1.40067 (8) obj. -9.77294 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 144 columns, reduced to 9 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -1.27425 - took 0.05 seconds
Cbc0012I Integer solution of -1.27425 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 129 rows 144 columns, reduced to 11 rows 12 columns
Cbc0012I Integer solution of -7.3835 found by DiveCoefficient after 4871 iterations and 0 nodes (2.29 seconds)
Cbc0031I 58 added rows had average density of 33.62069
Cbc0013I At root node, 58 cuts changed objective from -40.129601 to -18.74746 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13553 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1152 row cuts average 135.5 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 116 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 721 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 359 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 91.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 214 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.3835 best solution, best possible -18.74746 (2.39 seconds)
Cbc0012I Integer solution of -14.63993 found by rounding after 4920 iterations and 1 nodes (2.40 seconds)
Cbc0012I Integer solution of -15.06427 found by DiveCoefficient after 5457 iterations and 2 nodes (2.82 seconds)
Cbc0012I Integer solution of -16.0694 found by rounding after 5597 iterations and 5 nodes (3.01 seconds)
Cbc0010I After 8 nodes, 7 on tree, -16.0694 best solution, best possible -18.74746 (3.15 seconds)
Cbc0001I Search completed - best objective -16.0694, took 6449 iterations and 22 nodes (3.77 seconds)
Cbc0032I Strong branching done 406 times (10562 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 129 variables fixed on reduced cost
Total time (CPU seconds):       2.80   (Wallclock seconds):       3.79

