Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 4.51852e-05 - average 3.29819e-07, 19 fixed columns
Coin0506I Presolve 99 (-38) rows, 55 (-20) columns and 300 (-116) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Coin0511I After Postsolve, objective 66.242755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Coin0511I After Postsolve, objective 66.242755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.24275539 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.598%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.51031
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.5714 iterations 45
Cbc0038I Solution found of -15.5714
Cbc0038I Relaxing continuous gives -15.5714
Cbc0038I Rounding solution of -28.1636 is better than previous of -15.5714

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -28.1636 to -36.0719 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.0891
Cbc0038I Pass   2: suminf.    1.21516 (5) obj. -39.0891 iterations 9
Cbc0038I Pass   3: suminf.    0.91005 (4) obj. -39.0891 iterations 1
Cbc0038I Pass   4: suminf.    1.46524 (4) obj. -39.0891 iterations 8
Cbc0038I Pass   5: suminf.    0.25136 (1) obj. -39.0891 iterations 4
Cbc0038I Pass   6: suminf.    0.39296 (1) obj. -39.0891 iterations 1
Cbc0038I Pass   7: suminf.    2.53559 (7) obj. -39.0891 iterations 16
Cbc0038I Pass   8: suminf.    0.22062 (2) obj. -39.0891 iterations 20
Cbc0038I Pass   9: suminf.    0.16498 (2) obj. -39.0891 iterations 1
Cbc0038I Pass  10: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  11: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  12: suminf.    2.69911 (7) obj. -39.0891 iterations 14
Cbc0038I Pass  13: suminf.    1.27854 (4) obj. -39.0891 iterations 10
Cbc0038I Pass  14: suminf.    1.33536 (3) obj. -39.0891 iterations 5
Cbc0038I Pass  15: suminf.    0.64077 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  16: suminf.    0.25136 (1) obj. -39.0891 iterations 4
Cbc0038I Pass  17: suminf.    0.39296 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  18: suminf.    2.62040 (8) obj. -39.0891 iterations 18
Cbc0038I Pass  19: suminf.    0.81148 (3) obj. -39.0891 iterations 17
Cbc0038I Pass  20: suminf.    0.72084 (3) obj. -39.0891 iterations 1
Cbc0038I Pass  21: suminf.    0.35091 (1) obj. -39.0891 iterations 3
Cbc0038I Pass  22: suminf.    0.16498 (2) obj. -39.0891 iterations 3
Cbc0038I Pass  23: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  24: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  25: suminf.    3.33843 (11) obj. -39.0891 iterations 17
Cbc0038I Pass  26: suminf.    0.69068 (3) obj. -39.0891 iterations 24
Cbc0038I Pass  27: suminf.    0.69068 (3) obj. -39.0891 iterations 0
Cbc0038I Pass  28: suminf.    0.49053 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  29: suminf.    0.16498 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  30: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  31: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Rounding solution of -36.0732 is better than previous of -36.0719

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 80 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -44.5198
Cbc0038I Pass  31: suminf.    1.55415 (7) obj. -44.5198 iterations 1
Cbc0038I Pass  32: suminf.    1.25566 (4) obj. -44.5198 iterations 6
Cbc0038I Pass  33: suminf.    1.38484 (4) obj. -44.5198 iterations 8
Cbc0038I Pass  34: suminf.    0.56594 (3) obj. -44.5198 iterations 6
Cbc0038I Pass  35: suminf.    1.10799 (3) obj. -44.5198 iterations 3
Cbc0038I Pass  36: suminf.    2.61352 (9) obj. -44.5198 iterations 14
Cbc0038I Pass  37: suminf.    1.55415 (7) obj. -44.5198 iterations 19
Cbc0038I Pass  38: suminf.    1.25566 (4) obj. -44.5198 iterations 6
Cbc0038I Pass  39: suminf.    1.38484 (4) obj. -44.5198 iterations 7
Cbc0038I Pass  40: suminf.    0.56594 (3) obj. -44.5198 iterations 5
Cbc0038I Pass  41: suminf.    1.10799 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  42: suminf.    2.26197 (9) obj. -44.5198 iterations 12
Cbc0038I Pass  43: suminf.    1.15907 (4) obj. -44.5198 iterations 9
Cbc0038I Pass  44: suminf.    0.74275 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  45: suminf.    3.26224 (8) obj. -44.5198 iterations 10
Cbc0038I Pass  46: suminf.    1.49502 (5) obj. -44.5198 iterations 15
Cbc0038I Pass  47: suminf.    0.92336 (3) obj. -44.5198 iterations 5
Cbc0038I Pass  48: suminf.    0.78883 (3) obj. -44.5198 iterations 13
Cbc0038I Pass  49: suminf.    0.56594 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  50: suminf.    1.10799 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  51: suminf.    1.61331 (7) obj. -44.5198 iterations 11
Cbc0038I Pass  52: suminf.    0.78883 (3) obj. -44.5198 iterations 22
Cbc0038I Pass  53: suminf.    1.90292 (5) obj. -44.5198 iterations 13
Cbc0038I Pass  54: suminf.    1.73510 (4) obj. -44.5198 iterations 11
Cbc0038I Pass  55: suminf.    1.08265 (4) obj. -44.5198 iterations 2
Cbc0038I Pass  56: suminf.    0.56594 (3) obj. -44.5198 iterations 7
Cbc0038I Pass  57: suminf.    1.10799 (3) obj. -44.5198 iterations 3
Cbc0038I Pass  58: suminf.    1.62895 (7) obj. -44.5198 iterations 12
Cbc0038I Pass  59: suminf.    0.78883 (3) obj. -44.5198 iterations 17
Cbc0038I Pass  60: suminf.    2.01373 (7) obj. -44.5198 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -36.0732 - took 0.06 seconds
Cbc0012I Integer solution of -36.07321 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 56 rows 32 columns
Cbc0031I 20 added rows had average density of 54.1
Cbc0013I At root node, 20 cuts changed objective from -66.242755 to -55.886514 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6186 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1262 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 26 nodes, 1 on tree, -36.07321 best solution, best possible -36.481099 (0.68 seconds)
Cbc0001I Search completed - best objective -36.07321, took 6434 iterations and 28 nodes (0.68 seconds)
Cbc0032I Strong branching done 416 times (8664 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 11, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.66   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-44) rows, 121 (-31) columns and 2082 (-1221) elements
Clp1000I sum of infeasibilities 2.4285e-06 - average 2.20772e-08, 79 fixed columns
Coin0506I Presolve 31 (-79) rows, 41 (-80) columns and 138 (-1944) elements
Clp0006I 0  Obj -11.852077 Dual inf 5.7397406 (40)
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 1.3505349 - largest nonzero change 1.6652087e-05 ( 0.00074158712%) - largest zero change 2.9647863e-05
Clp0000I Optimal - objective value -11.366599
Clp0000I Optimal - objective value -11.366599
Coin0511I After Postsolve, objective -11.366599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -11.366599 Dual inf 195.9482 (49)
Clp0014I Perturbing problem by 0.001% of 1.4051083 - largest nonzero change 2.2581457e-05 ( 0.0014417021%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 81.566836
Clp0000I Optimal - objective value 81.566836
Clp0000I Optimal - objective value 81.566836
Coin0511I After Postsolve, objective 81.566836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.56683598 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 122 columns (122 integer (122 of which binary)) and 2099 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.624%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 6.01637
Cbc0038I Pass   1: suminf.    0.73272 (29) obj. -41.9655 iterations 29
Cbc0038I Pass   2: suminf.    0.73272 (29) obj. -41.9655 iterations 2
Cbc0038I Solution found of 8.60477
Cbc0038I Rounding solution of 0.21996 is better than previous of 8.60477

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 43 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 0.21996 to -25.8332 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.7696
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73272 (29) obj. -41.9655 iterations 0
Cbc0038I Pass   4: suminf.    0.73272 (29) obj. -41.9655 iterations 2
Cbc0038I Pass   5: suminf.    1.07076 (15) obj. -29.7696 iterations 37
Cbc0038I Pass   6: suminf.    1.07076 (15) obj. -29.7696 iterations 1
Cbc0038I Pass   7: suminf.    2.69225 (24) obj. -29.7696 iterations 19
Cbc0038I Pass   8: suminf.    2.23641 (23) obj. -29.7696 iterations 3
Cbc0038I Pass   9: suminf.    2.23641 (23) obj. -29.7696 iterations 0
Cbc0038I Pass  10: suminf.    1.39279 (12) obj. -29.7696 iterations 32
Cbc0038I Pass  11: suminf.    1.34492 (13) obj. -29.7696 iterations 3
Cbc0038I Pass  12: suminf.    1.37832 (13) obj. -29.7696 iterations 4
Cbc0038I Pass  13: suminf.    1.37832 (13) obj. -29.7696 iterations 2
Cbc0038I Pass  14: suminf.    1.65673 (14) obj. -29.7696 iterations 5
Cbc0038I Pass  15: suminf.    2.46162 (23) obj. -29.7696 iterations 24
Cbc0038I Pass  16: suminf.    2.39711 (22) obj. -29.7696 iterations 6
Cbc0038I Pass  17: suminf.    1.60617 (13) obj. -29.7696 iterations 35
Cbc0038I Pass  18: suminf.    1.34829 (14) obj. -29.7696 iterations 3
Cbc0038I Pass  19: suminf.    3.50626 (22) obj. -29.7696 iterations 16
Cbc0038I Pass  20: suminf.    2.62445 (19) obj. -29.7696 iterations 8
Cbc0038I Pass  21: suminf.    1.59137 (13) obj. -29.7696 iterations 22
Cbc0038I Pass  22: suminf.    1.53976 (14) obj. -29.7696 iterations 2
Cbc0038I Pass  23: suminf.    1.96174 (15) obj. -29.7696 iterations 5
Cbc0038I Pass  24: suminf.    1.37998 (13) obj. -29.7696 iterations 11
Cbc0038I Pass  25: suminf.    1.59137 (13) obj. -29.7696 iterations 6
Cbc0038I Pass  26: suminf.    2.14325 (18) obj. -29.7696 iterations 25
Cbc0038I Pass  27: suminf.    2.13484 (17) obj. -29.7696 iterations 3
Cbc0038I Pass  28: suminf.    1.59137 (13) obj. -29.7696 iterations 17
Cbc0038I Pass  29: suminf.    1.53976 (14) obj. -29.7696 iterations 1
Cbc0038I Pass  30: suminf.    1.96174 (15) obj. -29.7696 iterations 4
Cbc0038I Pass  31: suminf.    1.37998 (13) obj. -29.7696 iterations 10
Cbc0038I Pass  32: suminf.    1.59137 (13) obj. -29.7696 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 54 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -25.8332 to -35.3743 (0.10 seconds)
Cbc0038I Round again with cutoff of -41.3388
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.73272 (29) obj. -41.9655 iterations 0
Cbc0038I Pass  33: suminf.    0.73272 (29) obj. -41.9655 iterations 2
Cbc0038I Pass  34: suminf.    3.38010 (30) obj. -41.3388 iterations 55
Cbc0038I Pass  35: suminf.    3.38010 (30) obj. -41.3388 iterations 0
Cbc0038I Pass  36: suminf.    2.67333 (21) obj. -41.3388 iterations 38
Cbc0038I Pass  37: suminf.    2.67333 (21) obj. -41.3388 iterations 2
Cbc0038I Pass  38: suminf.    2.83869 (21) obj. -41.3388 iterations 11
Cbc0038I Pass  39: suminf.    2.53887 (20) obj. -41.3388 iterations 7
Cbc0038I Pass  40: suminf.    2.83869 (21) obj. -41.3388 iterations 5
Cbc0038I Pass  41: suminf.    2.48390 (23) obj. -41.3388 iterations 17
Cbc0038I Pass  42: suminf.    2.10458 (22) obj. -41.3388 iterations 7
Cbc0038I Pass  43: suminf.    2.83869 (21) obj. -41.3388 iterations 18
Cbc0038I Pass  44: suminf.    3.52708 (23) obj. -41.3388 iterations 13
Cbc0038I Pass  45: suminf.    3.52708 (23) obj. -41.3388 iterations 1
Cbc0038I Pass  46: suminf.    2.83869 (21) obj. -41.3388 iterations 18
Cbc0038I Pass  47: suminf.    2.53887 (20) obj. -41.3388 iterations 6
Cbc0038I Pass  48: suminf.    2.83869 (21) obj. -41.3388 iterations 6
Cbc0038I Pass  49: suminf.    2.82561 (23) obj. -41.3388 iterations 10
Cbc0038I Pass  50: suminf.    2.27435 (21) obj. -41.3388 iterations 9
Cbc0038I Pass  51: suminf.    2.42549 (20) obj. -41.3388 iterations 9
Cbc0038I Pass  52: suminf.    2.26572 (20) obj. -41.3388 iterations 3
Cbc0038I Pass  53: suminf.    2.83869 (21) obj. -41.3388 iterations 10
Cbc0038I Pass  54: suminf.    2.53887 (20) obj. -41.3388 iterations 5
Cbc0038I Pass  55: suminf.    2.83869 (21) obj. -41.3388 iterations 7
Cbc0038I Pass  56: suminf.    2.79038 (23) obj. -41.3388 iterations 18
Cbc0038I Pass  57: suminf.    2.47138 (21) obj. -41.3388 iterations 6
Cbc0038I Pass  58: suminf.    2.83869 (21) obj. -41.3388 iterations 12
Cbc0038I Pass  59: suminf.    3.53371 (27) obj. -41.3388 iterations 20
Cbc0038I Pass  60: suminf.    3.07332 (26) obj. -41.3388 iterations 4
Cbc0038I Pass  61: suminf.    2.70024 (23) obj. -41.3388 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 33 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -35.3743 - took 0.08 seconds
Cbc0012I Integer solution of -35.37432 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 26 rows 27 columns
Cbc0031I 77 added rows had average density of 16.506494
Cbc0013I At root node, 77 cuts changed objective from -65.196353 to -40.683287 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 3014 row cuts average 6.9 elements, 6 column cuts (16 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 129 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 46 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 111 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 110 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 132 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 282 row cuts average 70.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 128 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.37432 best solution, best possible -40.683287 (0.81 seconds)
Cbc0012I Integer solution of -36.07011 found by rounding after 1095 iterations and 2 nodes (0.85 seconds)
Cbc0016I Integer solution of -36.07192 found by strong branching after 2052 iterations and 4 nodes (1.41 seconds)
Cbc0012I Integer solution of -36.07321 found by DiveCoefficient after 2064 iterations and 4 nodes (1.42 seconds)
Cbc0001I Search completed - best objective -36.07321, took 2231 iterations and 8 nodes (1.42 seconds)
Cbc0032I Strong branching done 268 times (8118 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 4.51852e-05 - average 3.29819e-07, 19 fixed columns
Coin0506I Presolve 99 (-38) rows, 55 (-20) columns and 300 (-116) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Coin0511I After Postsolve, objective 66.242755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Coin0511I After Postsolve, objective 66.242755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.24275539 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.598%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.51031
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.5714 iterations 45
Cbc0038I Solution found of -15.5714
Cbc0038I Relaxing continuous gives -15.5714
Cbc0038I Rounding solution of -28.1636 is better than previous of -15.5714

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -28.1636 to -36.0719 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.0891
Cbc0038I Pass   2: suminf.    1.21516 (5) obj. -39.0891 iterations 9
Cbc0038I Pass   3: suminf.    0.91005 (4) obj. -39.0891 iterations 1
Cbc0038I Pass   4: suminf.    1.46524 (4) obj. -39.0891 iterations 8
Cbc0038I Pass   5: suminf.    0.25136 (1) obj. -39.0891 iterations 4
Cbc0038I Pass   6: suminf.    0.39296 (1) obj. -39.0891 iterations 1
Cbc0038I Pass   7: suminf.    2.53559 (7) obj. -39.0891 iterations 16
Cbc0038I Pass   8: suminf.    0.22062 (2) obj. -39.0891 iterations 20
Cbc0038I Pass   9: suminf.    0.16498 (2) obj. -39.0891 iterations 1
Cbc0038I Pass  10: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  11: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  12: suminf.    2.69911 (7) obj. -39.0891 iterations 14
Cbc0038I Pass  13: suminf.    1.27854 (4) obj. -39.0891 iterations 10
Cbc0038I Pass  14: suminf.    1.33536 (3) obj. -39.0891 iterations 5
Cbc0038I Pass  15: suminf.    0.64077 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  16: suminf.    0.25136 (1) obj. -39.0891 iterations 4
Cbc0038I Pass  17: suminf.    0.39296 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  18: suminf.    2.62040 (8) obj. -39.0891 iterations 18
Cbc0038I Pass  19: suminf.    0.81148 (3) obj. -39.0891 iterations 17
Cbc0038I Pass  20: suminf.    0.72084 (3) obj. -39.0891 iterations 1
Cbc0038I Pass  21: suminf.    0.35091 (1) obj. -39.0891 iterations 3
Cbc0038I Pass  22: suminf.    0.16498 (2) obj. -39.0891 iterations 3
Cbc0038I Pass  23: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  24: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  25: suminf.    3.33843 (11) obj. -39.0891 iterations 17
Cbc0038I Pass  26: suminf.    0.69068 (3) obj. -39.0891 iterations 24
Cbc0038I Pass  27: suminf.    0.69068 (3) obj. -39.0891 iterations 0
Cbc0038I Pass  28: suminf.    0.49053 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  29: suminf.    0.16498 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  30: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  31: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Rounding solution of -36.0732 is better than previous of -36.0719

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 80 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -44.5198
Cbc0038I Pass  31: suminf.    1.55415 (7) obj. -44.5198 iterations 1
Cbc0038I Pass  32: suminf.    1.25566 (4) obj. -44.5198 iterations 6
Cbc0038I Pass  33: suminf.    1.38484 (4) obj. -44.5198 iterations 8
Cbc0038I Pass  34: suminf.    0.56594 (3) obj. -44.5198 iterations 6
Cbc0038I Pass  35: suminf.    1.10799 (3) obj. -44.5198 iterations 3
Cbc0038I Pass  36: suminf.    2.61352 (9) obj. -44.5198 iterations 14
Cbc0038I Pass  37: suminf.    1.55415 (7) obj. -44.5198 iterations 19
Cbc0038I Pass  38: suminf.    1.25566 (4) obj. -44.5198 iterations 6
Cbc0038I Pass  39: suminf.    1.38484 (4) obj. -44.5198 iterations 7
Cbc0038I Pass  40: suminf.    0.56594 (3) obj. -44.5198 iterations 5
Cbc0038I Pass  41: suminf.    1.10799 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  42: suminf.    2.26197 (9) obj. -44.5198 iterations 12
Cbc0038I Pass  43: suminf.    1.15907 (4) obj. -44.5198 iterations 9
Cbc0038I Pass  44: suminf.    0.74275 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  45: suminf.    3.26224 (8) obj. -44.5198 iterations 10
Cbc0038I Pass  46: suminf.    1.49502 (5) obj. -44.5198 iterations 15
Cbc0038I Pass  47: suminf.    0.92336 (3) obj. -44.5198 iterations 5
Cbc0038I Pass  48: suminf.    0.78883 (3) obj. -44.5198 iterations 13
Cbc0038I Pass  49: suminf.    0.56594 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  50: suminf.    1.10799 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  51: suminf.    1.61331 (7) obj. -44.5198 iterations 11
Cbc0038I Pass  52: suminf.    0.78883 (3) obj. -44.5198 iterations 22
Cbc0038I Pass  53: suminf.    1.90292 (5) obj. -44.5198 iterations 13
Cbc0038I Pass  54: suminf.    1.73510 (4) obj. -44.5198 iterations 11
Cbc0038I Pass  55: suminf.    1.08265 (4) obj. -44.5198 iterations 2
Cbc0038I Pass  56: suminf.    0.56594 (3) obj. -44.5198 iterations 7
Cbc0038I Pass  57: suminf.    1.10799 (3) obj. -44.5198 iterations 3
Cbc0038I Pass  58: suminf.    1.62895 (7) obj. -44.5198 iterations 12
Cbc0038I Pass  59: suminf.    0.78883 (3) obj. -44.5198 iterations 17
Cbc0038I Pass  60: suminf.    2.01373 (7) obj. -44.5198 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -36.0732 - took 0.06 seconds
Cbc0012I Integer solution of -36.07321 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 56 rows 32 columns
Cbc0031I 20 added rows had average density of 54.1
Cbc0013I At root node, 20 cuts changed objective from -66.242755 to -55.886514 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6186 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1262 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 9 nodes, 8 on tree, -36.07321 best solution, best possible -55.886514 (0.69 seconds)
Cbc0001I Search completed - best objective -36.07321, took 6434 iterations and 28 nodes (0.71 seconds)
Cbc0032I Strong branching done 416 times (8664 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 11, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 121 (-32) columns and 2082 (-1222) elements
Clp1000I sum of infeasibilities 2.4285e-06 - average 2.20772e-08, 79 fixed columns
Coin0506I Presolve 31 (-79) rows, 41 (-80) columns and 138 (-1944) elements
Clp0006I 0  Obj -11.852077 Dual inf 5.7397406 (40)
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 1.3505349 - largest nonzero change 1.6652087e-05 ( 0.00074158712%) - largest zero change 2.9647863e-05
Clp0000I Optimal - objective value -11.366599
Clp0000I Optimal - objective value -11.366599
Coin0511I After Postsolve, objective -11.366599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -11.366599 Dual inf 195.9482 (49)
Clp0014I Perturbing problem by 0.001% of 1.4051083 - largest nonzero change 2.2581457e-05 ( 0.0014417021%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 81.566836
Clp0000I Optimal - objective value 81.566836
Clp0000I Optimal - objective value 81.566836
Coin0511I After Postsolve, objective 81.566836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.56683598 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 122 columns (122 integer (122 of which binary)) and 2099 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.624%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 6.01637
Cbc0038I Pass   1: suminf.    0.73272 (29) obj. -41.9655 iterations 29
Cbc0038I Pass   2: suminf.    0.73272 (29) obj. -41.9655 iterations 2
Cbc0038I Solution found of 8.60477
Cbc0038I Rounding solution of 0.21996 is better than previous of 8.60477

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 43 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 0.21996 to -25.8332 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.7696
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73272 (29) obj. -41.9655 iterations 0
Cbc0038I Pass   4: suminf.    0.73272 (29) obj. -41.9655 iterations 2
Cbc0038I Pass   5: suminf.    1.07076 (15) obj. -29.7696 iterations 37
Cbc0038I Pass   6: suminf.    1.07076 (15) obj. -29.7696 iterations 1
Cbc0038I Pass   7: suminf.    2.69225 (24) obj. -29.7696 iterations 19
Cbc0038I Pass   8: suminf.    2.23641 (23) obj. -29.7696 iterations 3
Cbc0038I Pass   9: suminf.    2.23641 (23) obj. -29.7696 iterations 0
Cbc0038I Pass  10: suminf.    1.39279 (12) obj. -29.7696 iterations 32
Cbc0038I Pass  11: suminf.    1.34492 (13) obj. -29.7696 iterations 3
Cbc0038I Pass  12: suminf.    1.37832 (13) obj. -29.7696 iterations 4
Cbc0038I Pass  13: suminf.    1.37832 (13) obj. -29.7696 iterations 2
Cbc0038I Pass  14: suminf.    1.65673 (14) obj. -29.7696 iterations 5
Cbc0038I Pass  15: suminf.    2.46162 (23) obj. -29.7696 iterations 24
Cbc0038I Pass  16: suminf.    2.39711 (22) obj. -29.7696 iterations 6
Cbc0038I Pass  17: suminf.    1.60617 (13) obj. -29.7696 iterations 35
Cbc0038I Pass  18: suminf.    1.34829 (14) obj. -29.7696 iterations 3
Cbc0038I Pass  19: suminf.    3.50626 (22) obj. -29.7696 iterations 16
Cbc0038I Pass  20: suminf.    2.62445 (19) obj. -29.7696 iterations 8
Cbc0038I Pass  21: suminf.    1.59137 (13) obj. -29.7696 iterations 22
Cbc0038I Pass  22: suminf.    1.53976 (14) obj. -29.7696 iterations 2
Cbc0038I Pass  23: suminf.    1.96174 (15) obj. -29.7696 iterations 5
Cbc0038I Pass  24: suminf.    1.37998 (13) obj. -29.7696 iterations 11
Cbc0038I Pass  25: suminf.    1.59137 (13) obj. -29.7696 iterations 6
Cbc0038I Pass  26: suminf.    2.14325 (18) obj. -29.7696 iterations 25
Cbc0038I Pass  27: suminf.    2.13484 (17) obj. -29.7696 iterations 3
Cbc0038I Pass  28: suminf.    1.59137 (13) obj. -29.7696 iterations 17
Cbc0038I Pass  29: suminf.    1.53976 (14) obj. -29.7696 iterations 1
Cbc0038I Pass  30: suminf.    1.96174 (15) obj. -29.7696 iterations 4
Cbc0038I Pass  31: suminf.    1.37998 (13) obj. -29.7696 iterations 10
Cbc0038I Pass  32: suminf.    1.59137 (13) obj. -29.7696 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 54 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -25.8332 to -35.3743 (0.11 seconds)
Cbc0038I Round again with cutoff of -41.3388
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.73272 (29) obj. -41.9655 iterations 0
Cbc0038I Pass  33: suminf.    0.73272 (29) obj. -41.9655 iterations 2
Cbc0038I Pass  34: suminf.    3.38010 (30) obj. -41.3388 iterations 55
Cbc0038I Pass  35: suminf.    3.38010 (30) obj. -41.3388 iterations 0
Cbc0038I Pass  36: suminf.    2.67333 (21) obj. -41.3388 iterations 38
Cbc0038I Pass  37: suminf.    2.67333 (21) obj. -41.3388 iterations 2
Cbc0038I Pass  38: suminf.    2.83869 (21) obj. -41.3388 iterations 11
Cbc0038I Pass  39: suminf.    2.53887 (20) obj. -41.3388 iterations 7
Cbc0038I Pass  40: suminf.    2.83869 (21) obj. -41.3388 iterations 5
Cbc0038I Pass  41: suminf.    2.48390 (23) obj. -41.3388 iterations 17
Cbc0038I Pass  42: suminf.    2.10458 (22) obj. -41.3388 iterations 7
Cbc0038I Pass  43: suminf.    2.83869 (21) obj. -41.3388 iterations 18
Cbc0038I Pass  44: suminf.    3.52708 (23) obj. -41.3388 iterations 13
Cbc0038I Pass  45: suminf.    3.52708 (23) obj. -41.3388 iterations 1
Cbc0038I Pass  46: suminf.    2.83869 (21) obj. -41.3388 iterations 18
Cbc0038I Pass  47: suminf.    2.53887 (20) obj. -41.3388 iterations 6
Cbc0038I Pass  48: suminf.    2.83869 (21) obj. -41.3388 iterations 6
Cbc0038I Pass  49: suminf.    2.82561 (23) obj. -41.3388 iterations 10
Cbc0038I Pass  50: suminf.    2.27435 (21) obj. -41.3388 iterations 9
Cbc0038I Pass  51: suminf.    2.42549 (20) obj. -41.3388 iterations 9
Cbc0038I Pass  52: suminf.    2.26572 (20) obj. -41.3388 iterations 3
Cbc0038I Pass  53: suminf.    2.83869 (21) obj. -41.3388 iterations 10
Cbc0038I Pass  54: suminf.    2.53887 (20) obj. -41.3388 iterations 5
Cbc0038I Pass  55: suminf.    2.83869 (21) obj. -41.3388 iterations 7
Cbc0038I Pass  56: suminf.    2.79038 (23) obj. -41.3388 iterations 18
Cbc0038I Pass  57: suminf.    2.47138 (21) obj. -41.3388 iterations 6
Cbc0038I Pass  58: suminf.    2.83869 (21) obj. -41.3388 iterations 12
Cbc0038I Pass  59: suminf.    3.53371 (27) obj. -41.3388 iterations 20
Cbc0038I Pass  60: suminf.    3.07332 (26) obj. -41.3388 iterations 4
Cbc0038I Pass  61: suminf.    2.70024 (23) obj. -41.3388 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 33 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -35.3743 - took 0.09 seconds
Cbc0012I Integer solution of -35.37432 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 26 rows 27 columns
Cbc0031I 77 added rows had average density of 16.506494
Cbc0013I At root node, 77 cuts changed objective from -65.196353 to -40.683287 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 3014 row cuts average 6.9 elements, 6 column cuts (16 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 129 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 46 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 111 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 110 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 132 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 282 row cuts average 70.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 128 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.37432 best solution, best possible -40.683287 (0.89 seconds)
Cbc0012I Integer solution of -36.07011 found by rounding after 1095 iterations and 2 nodes (0.92 seconds)
Cbc0016I Integer solution of -36.07192 found by strong branching after 2052 iterations and 4 nodes (1.50 seconds)
Cbc0012I Integer solution of -36.07321 found by DiveCoefficient after 2064 iterations and 4 nodes (1.50 seconds)
Cbc0001I Search completed - best objective -36.07321, took 2231 iterations and 8 nodes (1.51 seconds)
Cbc0032I Strong branching done 268 times (8118 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.52

