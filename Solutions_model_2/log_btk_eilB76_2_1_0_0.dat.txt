Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 57 (-21) columns and 308 (-145) elements
Clp1000I sum of infeasibilities 1.75459e-05 - average 1.73722e-07, 13 fixed columns
Coin0506I Presolve 65 (-36) rows, 38 (-19) columns and 199 (-109) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 0.40295776 - largest nonzero change 0 ( 0%) - largest zero change 1.6400216e-05
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Coin0511I After Postsolve, objective 309.64472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Coin0511I After Postsolve, objective 309.64472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 309.6447173 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 57 columns (56 integer (56 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.937%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 4.60265
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -56.5395 iterations 20
Cbc0038I Solution found of -56.5395
Cbc0038I Relaxing continuous gives -56.5395
Cbc0038I Rounding solution of -135.827 is better than previous of -56.5395

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -135.827 to -272.634 (0.02 seconds)
Cbc0038I Round again with cutoff of -276.335
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.54033 (6) obj. -276.335 iterations 13
Cbc0038I Pass   3: suminf.    0.50472 (4) obj. -276.335 iterations 6
Cbc0038I Pass   4: suminf.    0.70631 (3) obj. -276.335 iterations 11
Cbc0038I Pass   5: suminf.    0.69219 (4) obj. -276.335 iterations 2
Cbc0038I Pass   6: suminf.    2.02815 (5) obj. -276.335 iterations 7
Cbc0038I Pass   7: suminf.    0.71926 (5) obj. -276.335 iterations 7
Cbc0038I Pass   8: suminf.    0.51384 (4) obj. -276.335 iterations 4
Cbc0038I Pass   9: suminf.    0.79245 (2) obj. -281.28 iterations 13
Cbc0038I Pass  10: suminf.    0.69674 (3) obj. -276.335 iterations 4
Cbc0038I Pass  11: suminf.    0.79542 (3) obj. -282.029 iterations 4
Cbc0038I Pass  12: suminf.    1.58396 (4) obj. -276.335 iterations 19
Cbc0038I Pass  13: suminf.    1.41468 (7) obj. -276.335 iterations 10
Cbc0038I Pass  14: suminf.    1.26302 (8) obj. -276.335 iterations 2
Cbc0038I Pass  15: suminf.    2.72792 (9) obj. -276.335 iterations 8
Cbc0038I Pass  16: suminf.    2.06727 (6) obj. -276.335 iterations 9
Cbc0038I Pass  17: suminf.    2.03445 (8) obj. -276.335 iterations 2
Cbc0038I Pass  18: suminf.    1.95611 (7) obj. -276.335 iterations 2
Cbc0038I Pass  19: suminf.    1.52032 (6) obj. -276.335 iterations 10
Cbc0038I Pass  20: suminf.    1.52032 (6) obj. -276.335 iterations 4
Cbc0038I Pass  21: suminf.    2.53639 (6) obj. -276.335 iterations 11
Cbc0038I Pass  22: suminf.    1.90047 (6) obj. -276.335 iterations 1
Cbc0038I Pass  23: suminf.    1.84694 (5) obj. -276.335 iterations 5
Cbc0038I Pass  24: suminf.    1.84694 (5) obj. -276.335 iterations 0
Cbc0038I Pass  25: suminf.    1.52032 (6) obj. -276.335 iterations 8
Cbc0038I Pass  26: suminf.    1.52032 (6) obj. -276.335 iterations 4
Cbc0038I Pass  27: suminf.    2.53639 (6) obj. -276.335 iterations 11
Cbc0038I Pass  28: suminf.    1.90047 (6) obj. -276.335 iterations 1
Cbc0038I Pass  29: suminf.    1.84694 (5) obj. -276.335 iterations 5
Cbc0038I Pass  30: suminf.    1.84694 (5) obj. -276.335 iterations 0
Cbc0038I Pass  31: suminf.    1.52032 (6) obj. -276.335 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 47 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -272.634 to -275.482 (0.06 seconds)
Cbc0038I Round again with cutoff of -282.997
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.24762 (6) obj. -282.997 iterations 0
Cbc0038I Pass  32: suminf.    1.12656 (4) obj. -282.997 iterations 6
Cbc0038I Pass  33: suminf.    1.40366 (5) obj. -282.997 iterations 11
Cbc0038I Pass  34: suminf.    1.22177 (4) obj. -282.997 iterations 2
Cbc0038I Pass  35: suminf.    1.65400 (7) obj. -282.997 iterations 14
Cbc0038I Pass  36: suminf.    1.45704 (5) obj. -282.997 iterations 8
Cbc0038I Pass  37: suminf.    2.36542 (5) obj. -282.997 iterations 7
Cbc0038I Pass  38: suminf.    1.55284 (7) obj. -282.997 iterations 5
Cbc0038I Pass  39: suminf.    2.53296 (10) obj. -282.997 iterations 15
Cbc0038I Pass  40: suminf.    1.84611 (10) obj. -282.997 iterations 5
Cbc0038I Pass  41: suminf.    1.84611 (10) obj. -282.997 iterations 0
Cbc0038I Pass  42: suminf.    2.29055 (6) obj. -282.997 iterations 18
Cbc0038I Pass  43: suminf.    1.75905 (6) obj. -282.997 iterations 7
Cbc0038I Pass  44: suminf.    1.70603 (5) obj. -282.997 iterations 6
Cbc0038I Pass  45: suminf.    1.70603 (5) obj. -282.997 iterations 2
Cbc0038I Pass  46: suminf.    1.37679 (6) obj. -282.997 iterations 7
Cbc0038I Pass  47: suminf.    1.18937 (6) obj. -282.997 iterations 4
Cbc0038I Pass  48: suminf.    2.53517 (7) obj. -282.997 iterations 16
Cbc0038I Pass  49: suminf.    2.34410 (7) obj. -282.997 iterations 6
Cbc0038I Pass  50: suminf.    1.64281 (7) obj. -282.997 iterations 3
Cbc0038I Pass  51: suminf.    1.54701 (9) obj. -282.997 iterations 2
Cbc0038I Pass  52: suminf.    1.91491 (6) obj. -282.997 iterations 16
Cbc0038I Pass  53: suminf.    1.18937 (6) obj. -282.997 iterations 9
Cbc0038I Pass  54: suminf.    2.53517 (7) obj. -282.997 iterations 15
Cbc0038I Pass  55: suminf.    2.34410 (7) obj. -282.997 iterations 5
Cbc0038I Pass  56: suminf.    1.64281 (7) obj. -282.997 iterations 3
Cbc0038I Pass  57: suminf.    1.54701 (9) obj. -282.997 iterations 2
Cbc0038I Pass  58: suminf.    1.91491 (6) obj. -282.997 iterations 16
Cbc0038I Pass  59: suminf.    1.18937 (6) obj. -282.997 iterations 9
Cbc0038I Pass  60: suminf.    2.53517 (7) obj. -282.997 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -275.482 - took 0.06 seconds
Cbc0012I Integer solution of -275.4819 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 101 rows 57 columns, reduced to 43 rows 26 columns
Cbc0031I 18 added rows had average density of 7.4444444
Cbc0013I At root node, 18 cuts changed objective from -309.64472 to -292.98654 in 56 passes
Cbc0014I Cut generator 0 (Probing) - 1334 row cuts average 4.9 elements, 6 column cuts (6 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 44.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0038I Full problem 101 rows 57 columns, reduced to 3 rows 6 columns
Cbc0038I Full problem 119 rows 57 columns, reduced to 65 rows 38 columns
Cbc0044I Reduced cost fixing - 65 rows, 38 columns - restarting search
Cbc0012I Integer solution of -275.4819 found by Previous solution after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 65 rows 38 columns, reduced to 43 rows 26 columns
Cbc0031I 10 added rows had average density of 29
Cbc0013I At root node, 10 cuts changed objective from -309.64472 to -291.13272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 542 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.771 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 252 row cuts average 7.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -275.4819 best solution, best possible -291.11877 (1.79 seconds)
Cbc0012I Integer solution of -275.482 found by DiveCoefficient after 2728 iterations and 23 nodes (1.85 seconds)
Cbc0001I Search completed - best objective -275.482, took 2842 iterations and 26 nodes (1.86 seconds)
Cbc0032I Strong branching done 198 times (1405 iterations), fathomed 2 nodes and fixed 16 variables
Cbc0035I Maximum depth 5, 41 variables fixed on reduced cost
Cbc0038I Probing was tried 175 times and created 1087 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I Gomory was tried 168 times and created 573 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Cbc0038I Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Cbc0038I Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I MixedIntegerRounding2 was tried 100 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I TwoMirCuts was tried 168 times and created 161 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.771 seconds)
Cbc0038I Stored from first was tried 168 times and created 292 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -275.482 found by Reduced search after 4481 iterations and 76 nodes (1.86 seconds)
Cbc0001I Search completed - best objective -275.482, took 4481 iterations and 76 nodes (1.86 seconds)
Cbc0032I Strong branching done 356 times (3182 iterations), fathomed 11 nodes and fixed 12 variables
Cbc0035I Maximum depth 10, 83 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.87

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 112 (-40) columns and 1720 (-1583) elements
Clp1000I sum of infeasibilities 1.32531e-06 - average 1.31218e-08, 38 fixed columns
Coin0506I Presolve 66 (-35) rows, 73 (-39) columns and 594 (-1126) elements
Clp0006I 0  Obj 367.82268 Primal inf 1.5769496e-07 (1) Dual inf 1.7896522e+10 (72)
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 2.8512428 - largest nonzero change 1.8082658e-05 ( 0.0012247315%) - largest zero change 2.5468141e-05
Clp0000I Optimal - objective value 381.2907
Clp0000I Optimal - objective value 381.2907
Coin0511I After Postsolve, objective 381.2907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 381.2907 Dual inf 32.6434 (3)
Clp0014I Perturbing problem by 0.001% of 1.99841 - largest nonzero change 2.4793584e-05 ( 0.0012247315%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 381.2907
Clp0000I Optimal - objective value 381.2907
Clp0000I Optimal - objective value 381.2907
Coin0511I After Postsolve, objective 381.2907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 381.2906957 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 51 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 108 columns (108 integer (108 of which binary)) and 1578 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.302%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 9.31844
Cbc0038I Pass   1: suminf.    0.04286 (3) obj. -259.435 iterations 44
Cbc0038I Pass   2: suminf.    0.04286 (3) obj. -259.435 iterations 0
Cbc0038I Solution found of -57.394
Cbc0038I Rounding solution of -248.933 is better than previous of -57.394

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 108 columns, reduced to 50 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -248.933 to -275.752 (0.07 seconds)
Cbc0038I Round again with cutoff of -282.671
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.46560 (33) obj. -282.671 iterations 23
Cbc0038I Pass   4: suminf.    1.46560 (33) obj. -282.671 iterations 0
Cbc0038I Pass   5: suminf.    0.96714 (15) obj. -282.671 iterations 41
Cbc0038I Pass   6: suminf.    0.58296 (15) obj. -314.501 iterations 2
Cbc0038I Pass   7: suminf.    0.31154 (4) obj. -282.671 iterations 12
Cbc0038I Pass   8: suminf.    0.11268 (4) obj. -300.138 iterations 1
Cbc0038I Pass   9: suminf.    0.95169 (4) obj. -282.671 iterations 2
Cbc0038I Pass  10: suminf.    2.40899 (14) obj. -282.671 iterations 14
Cbc0038I Pass  11: suminf.    1.49774 (11) obj. -288.123 iterations 5
Cbc0038I Pass  12: suminf.    1.08052 (5) obj. -282.671 iterations 13
Cbc0038I Pass  13: suminf.    1.08052 (5) obj. -282.671 iterations 2
Cbc0038I Pass  14: suminf.    0.84762 (4) obj. -282.671 iterations 5
Cbc0038I Pass  15: suminf.    0.11268 (4) obj. -298.138 iterations 4
Cbc0038I Pass  16: suminf.    3.84637 (18) obj. -282.671 iterations 23
Cbc0038I Pass  17: suminf.    2.31585 (16) obj. -282.671 iterations 6
Cbc0038I Pass  18: suminf.    1.82706 (15) obj. -282.671 iterations 1
Cbc0038I Pass  19: suminf.    0.43804 (4) obj. -282.671 iterations 16
Cbc0038I Pass  20: suminf.    0.36992 (4) obj. -284.863 iterations 4
Cbc0038I Pass  21: suminf.    2.82860 (12) obj. -282.671 iterations 15
Cbc0038I Pass  22: suminf.    2.36083 (11) obj. -282.671 iterations 2
Cbc0038I Pass  23: suminf.    0.31396 (4) obj. -282.671 iterations 13
Cbc0038I Solution found of -285.631
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 108 columns, reduced to 52 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -285.631 to -288.631 (0.10 seconds)
Cbc0038I Round again with cutoff of -299.893
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass  24: suminf.    2.48229 (33) obj. -299.893 iterations 0
Cbc0038I Pass  25: suminf.    0.67700 (10) obj. -299.893 iterations 38
Cbc0038I Pass  26: suminf.    0.33020 (10) obj. -308.811 iterations 4
Cbc0038I Pass  27: suminf.    0.11768 (4) obj. -299.893 iterations 11
Cbc0038I Pass  28: suminf.    0.11268 (4) obj. -300.138 iterations 3
Cbc0038I Pass  29: suminf.    1.85175 (14) obj. -299.893 iterations 14
Cbc0038I Pass  30: suminf.    1.48429 (13) obj. -299.893 iterations 1
Cbc0038I Pass  31: suminf.    1.61871 (5) obj. -299.893 iterations 27
Cbc0038I Pass  32: suminf.    1.61871 (5) obj. -299.893 iterations 3
Cbc0038I Pass  33: suminf.    0.85780 (4) obj. -299.893 iterations 10
Cbc0038I Pass  34: suminf.    0.35672 (3) obj. -299.893 iterations 1
Cbc0038I Pass  35: suminf.    0.11268 (4) obj. -300.138 iterations 9
Cbc0038I Pass  36: suminf.    0.11768 (4) obj. -299.893 iterations 4
Cbc0038I Pass  37: suminf.    1.05136 (10) obj. -299.893 iterations 7
Cbc0038I Pass  38: suminf.    0.51461 (8) obj. -305.436 iterations 4
Cbc0038I Pass  39: suminf.    3.12941 (18) obj. -299.893 iterations 22
Cbc0038I Pass  40: suminf.    1.51267 (13) obj. -299.893 iterations 15
Cbc0038I Pass  41: suminf.    0.29088 (2) obj. -299.893 iterations 17
Cbc0038I Pass  42: suminf.    0.11268 (4) obj. -300.138 iterations 10
Cbc0038I Pass  43: suminf.    0.11768 (4) obj. -299.893 iterations 3
Cbc0038I Pass  44: suminf.    2.34175 (13) obj. -299.893 iterations 11
Cbc0038I Pass  45: suminf.    2.34175 (13) obj. -299.893 iterations 1
Cbc0038I Pass  46: suminf.    4.64384 (19) obj. -299.893 iterations 9
Cbc0038I Pass  47: suminf.    2.83991 (15) obj. -299.893 iterations 7
Cbc0038I Pass  48: suminf.    2.36676 (14) obj. -299.893 iterations 1
Cbc0038I Pass  49: suminf.    3.56178 (19) obj. -299.893 iterations 8
Cbc0038I Pass  50: suminf.    2.63993 (17) obj. -299.893 iterations 5
Cbc0038I Pass  51: suminf.    0.11768 (4) obj. -299.893 iterations 22
Cbc0038I Pass  52: suminf.    0.11268 (4) obj. -300.138 iterations 4
Cbc0038I Pass  53: suminf.    2.55336 (14) obj. -299.893 iterations 26
Cbc0038I Rounding solution of -288.807 is better than previous of -288.631

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 108 columns, reduced to 53 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -313.408
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 4
Cbc0038I Pass  53: suminf.    2.96311 (33) obj. -313.408 iterations 0
Cbc0038I Pass  54: suminf.    1.95893 (11) obj. -313.408 iterations 35
Cbc0038I Pass  55: suminf.    1.95893 (11) obj. -313.408 iterations 0
Cbc0038I Pass  56: suminf.    1.87392 (8) obj. -313.408 iterations 14
Cbc0038I Pass  57: suminf.    1.79064 (8) obj. -313.408 iterations 9
Cbc0038I Pass  58: suminf.    1.87392 (8) obj. -313.408 iterations 12
Cbc0038I Pass  59: suminf.    3.14374 (17) obj. -313.408 iterations 23
Cbc0038I Pass  60: suminf.    2.29017 (11) obj. -313.408 iterations 5
Cbc0038I Pass  61: suminf.    2.69305 (18) obj. -313.408 iterations 13
Cbc0038I Pass  62: suminf.    1.78998 (15) obj. -313.408 iterations 4
Cbc0038I Pass  63: suminf.    1.87392 (8) obj. -313.408 iterations 15
Cbc0038I Pass  64: suminf.    1.79064 (8) obj. -313.408 iterations 1
Cbc0038I Pass  65: suminf.    1.87392 (8) obj. -313.408 iterations 13
Cbc0038I Pass  66: suminf.    2.54760 (17) obj. -313.408 iterations 20
Cbc0038I Pass  67: suminf.    1.34130 (12) obj. -313.408 iterations 7
Cbc0038I Pass  68: suminf.    1.87392 (8) obj. -313.408 iterations 21
Cbc0038I Pass  69: suminf.    2.32231 (11) obj. -313.408 iterations 14
Cbc0038I Pass  70: suminf.    2.09001 (11) obj. -313.408 iterations 9
Cbc0038I Pass  71: suminf.    1.87392 (8) obj. -313.408 iterations 13
Cbc0038I Pass  72: suminf.    1.79064 (8) obj. -313.408 iterations 11
Cbc0038I Pass  73: suminf.    1.87392 (8) obj. -313.408 iterations 10
Cbc0038I Pass  74: suminf.    3.66780 (19) obj. -313.408 iterations 17
Cbc0038I Pass  75: suminf.    2.63985 (12) obj. -313.408 iterations 9
Cbc0038I Pass  76: suminf.    1.89474 (9) obj. -313.408 iterations 12
Cbc0038I Pass  77: suminf.    2.99989 (12) obj. -313.408 iterations 14
Cbc0038I Pass  78: suminf.    2.13985 (11) obj. -313.408 iterations 3
Cbc0038I Pass  79: suminf.    2.26983 (9) obj. -313.408 iterations 20
Cbc0038I Pass  80: suminf.    2.26983 (9) obj. -313.408 iterations 2
Cbc0038I Pass  81: suminf.    2.22686 (9) obj. -313.408 iterations 10
Cbc0038I Pass  82: suminf.    1.55535 (9) obj. -313.408 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 108 columns, reduced to 51 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -288.807 - took 0.09 seconds
Cbc0012I Integer solution of -288.807 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 97 rows 108 columns, reduced to 2 rows 3 columns
Cbc0031I 51 added rows had average density of 12.431373
Cbc0013I At root node, 51 cuts changed objective from -344.94173 to -299.06441 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 1339 row cuts average 4.3 elements, 8 column cuts (9 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 23 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 105 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 327 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -288.807 best solution, best possible -299.06441 (0.63 seconds)
Cbc0001I Search completed - best objective -288.807, took 848 iterations and 14 nodes (1.18 seconds)
Cbc0032I Strong branching done 360 times (7363 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       1.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 57 (-21) columns and 308 (-145) elements
Clp1000I sum of infeasibilities 1.75459e-05 - average 1.73722e-07, 13 fixed columns
Coin0506I Presolve 65 (-36) rows, 38 (-19) columns and 199 (-109) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 0.40295776 - largest nonzero change 0 ( 0%) - largest zero change 1.6400216e-05
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Coin0511I After Postsolve, objective 309.64472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Coin0511I After Postsolve, objective 309.64472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 309.6447173 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 57 columns (56 integer (56 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.937%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 4.60265
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -56.5395 iterations 20
Cbc0038I Solution found of -56.5395
Cbc0038I Relaxing continuous gives -56.5395
Cbc0038I Rounding solution of -135.827 is better than previous of -56.5395

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -135.827 to -272.634 (0.02 seconds)
Cbc0038I Round again with cutoff of -276.335
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.54033 (6) obj. -276.335 iterations 13
Cbc0038I Pass   3: suminf.    0.50472 (4) obj. -276.335 iterations 6
Cbc0038I Pass   4: suminf.    0.70631 (3) obj. -276.335 iterations 11
Cbc0038I Pass   5: suminf.    0.69219 (4) obj. -276.335 iterations 2
Cbc0038I Pass   6: suminf.    2.02815 (5) obj. -276.335 iterations 7
Cbc0038I Pass   7: suminf.    0.71926 (5) obj. -276.335 iterations 7
Cbc0038I Pass   8: suminf.    0.51384 (4) obj. -276.335 iterations 4
Cbc0038I Pass   9: suminf.    0.79245 (2) obj. -281.28 iterations 13
Cbc0038I Pass  10: suminf.    0.69674 (3) obj. -276.335 iterations 4
Cbc0038I Pass  11: suminf.    0.79542 (3) obj. -282.029 iterations 4
Cbc0038I Pass  12: suminf.    1.58396 (4) obj. -276.335 iterations 19
Cbc0038I Pass  13: suminf.    1.41468 (7) obj. -276.335 iterations 10
Cbc0038I Pass  14: suminf.    1.26302 (8) obj. -276.335 iterations 2
Cbc0038I Pass  15: suminf.    2.72792 (9) obj. -276.335 iterations 8
Cbc0038I Pass  16: suminf.    2.06727 (6) obj. -276.335 iterations 9
Cbc0038I Pass  17: suminf.    2.03445 (8) obj. -276.335 iterations 2
Cbc0038I Pass  18: suminf.    1.95611 (7) obj. -276.335 iterations 2
Cbc0038I Pass  19: suminf.    1.52032 (6) obj. -276.335 iterations 10
Cbc0038I Pass  20: suminf.    1.52032 (6) obj. -276.335 iterations 4
Cbc0038I Pass  21: suminf.    2.53639 (6) obj. -276.335 iterations 11
Cbc0038I Pass  22: suminf.    1.90047 (6) obj. -276.335 iterations 1
Cbc0038I Pass  23: suminf.    1.84694 (5) obj. -276.335 iterations 5
Cbc0038I Pass  24: suminf.    1.84694 (5) obj. -276.335 iterations 0
Cbc0038I Pass  25: suminf.    1.52032 (6) obj. -276.335 iterations 8
Cbc0038I Pass  26: suminf.    1.52032 (6) obj. -276.335 iterations 4
Cbc0038I Pass  27: suminf.    2.53639 (6) obj. -276.335 iterations 11
Cbc0038I Pass  28: suminf.    1.90047 (6) obj. -276.335 iterations 1
Cbc0038I Pass  29: suminf.    1.84694 (5) obj. -276.335 iterations 5
Cbc0038I Pass  30: suminf.    1.84694 (5) obj. -276.335 iterations 0
Cbc0038I Pass  31: suminf.    1.52032 (6) obj. -276.335 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 47 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -272.634 to -275.482 (0.05 seconds)
Cbc0038I Round again with cutoff of -282.997
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.24762 (6) obj. -282.997 iterations 0
Cbc0038I Pass  32: suminf.    1.12656 (4) obj. -282.997 iterations 6
Cbc0038I Pass  33: suminf.    1.40366 (5) obj. -282.997 iterations 11
Cbc0038I Pass  34: suminf.    1.22177 (4) obj. -282.997 iterations 2
Cbc0038I Pass  35: suminf.    1.65400 (7) obj. -282.997 iterations 14
Cbc0038I Pass  36: suminf.    1.45704 (5) obj. -282.997 iterations 8
Cbc0038I Pass  37: suminf.    2.36542 (5) obj. -282.997 iterations 7
Cbc0038I Pass  38: suminf.    1.55284 (7) obj. -282.997 iterations 5
Cbc0038I Pass  39: suminf.    2.53296 (10) obj. -282.997 iterations 15
Cbc0038I Pass  40: suminf.    1.84611 (10) obj. -282.997 iterations 5
Cbc0038I Pass  41: suminf.    1.84611 (10) obj. -282.997 iterations 0
Cbc0038I Pass  42: suminf.    2.29055 (6) obj. -282.997 iterations 18
Cbc0038I Pass  43: suminf.    1.75905 (6) obj. -282.997 iterations 7
Cbc0038I Pass  44: suminf.    1.70603 (5) obj. -282.997 iterations 6
Cbc0038I Pass  45: suminf.    1.70603 (5) obj. -282.997 iterations 2
Cbc0038I Pass  46: suminf.    1.37679 (6) obj. -282.997 iterations 7
Cbc0038I Pass  47: suminf.    1.18937 (6) obj. -282.997 iterations 4
Cbc0038I Pass  48: suminf.    2.53517 (7) obj. -282.997 iterations 16
Cbc0038I Pass  49: suminf.    2.34410 (7) obj. -282.997 iterations 6
Cbc0038I Pass  50: suminf.    1.64281 (7) obj. -282.997 iterations 3
Cbc0038I Pass  51: suminf.    1.54701 (9) obj. -282.997 iterations 2
Cbc0038I Pass  52: suminf.    1.91491 (6) obj. -282.997 iterations 16
Cbc0038I Pass  53: suminf.    1.18937 (6) obj. -282.997 iterations 9
Cbc0038I Pass  54: suminf.    2.53517 (7) obj. -282.997 iterations 15
Cbc0038I Pass  55: suminf.    2.34410 (7) obj. -282.997 iterations 5
Cbc0038I Pass  56: suminf.    1.64281 (7) obj. -282.997 iterations 3
Cbc0038I Pass  57: suminf.    1.54701 (9) obj. -282.997 iterations 2
Cbc0038I Pass  58: suminf.    1.91491 (6) obj. -282.997 iterations 16
Cbc0038I Pass  59: suminf.    1.18937 (6) obj. -282.997 iterations 9
Cbc0038I Pass  60: suminf.    2.53517 (7) obj. -282.997 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -275.482 - took 0.06 seconds
Cbc0012I Integer solution of -275.4819 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 101 rows 57 columns, reduced to 43 rows 26 columns
Cbc0031I 18 added rows had average density of 7.4444444
Cbc0013I At root node, 18 cuts changed objective from -309.64472 to -292.98654 in 56 passes
Cbc0014I Cut generator 0 (Probing) - 1334 row cuts average 4.9 elements, 6 column cuts (6 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 44.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0038I Full problem 101 rows 57 columns, reduced to 3 rows 6 columns
Cbc0038I Full problem 119 rows 57 columns, reduced to 65 rows 38 columns
Cbc0044I Reduced cost fixing - 65 rows, 38 columns - restarting search
Cbc0012I Integer solution of -275.4819 found by Previous solution after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 65 rows 38 columns, reduced to 43 rows 26 columns
Cbc0031I 10 added rows had average density of 29
Cbc0013I At root node, 10 cuts changed objective from -309.64472 to -291.13272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 542 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.760 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 252 row cuts average 7.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -275.4819 best solution, best possible -291.11877 (1.87 seconds)
Cbc0012I Integer solution of -275.482 found by DiveCoefficient after 2728 iterations and 23 nodes (1.92 seconds)
Cbc0001I Search completed - best objective -275.482, took 2842 iterations and 26 nodes (1.93 seconds)
Cbc0032I Strong branching done 198 times (1405 iterations), fathomed 2 nodes and fixed 16 variables
Cbc0035I Maximum depth 5, 41 variables fixed on reduced cost
Cbc0038I Probing was tried 175 times and created 1087 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Cbc0038I Gomory was tried 168 times and created 573 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Cbc0038I Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Cbc0038I Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I MixedIntegerRounding2 was tried 100 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I TwoMirCuts was tried 168 times and created 161 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.760 seconds)
Cbc0038I Stored from first was tried 168 times and created 292 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -275.482 found by Reduced search after 4481 iterations and 76 nodes (1.93 seconds)
Cbc0001I Search completed - best objective -275.482, took 4481 iterations and 76 nodes (1.93 seconds)
Cbc0032I Strong branching done 356 times (3182 iterations), fathomed 11 nodes and fixed 12 variables
Cbc0035I Maximum depth 10, 83 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-59) rows, 107 (-46) columns and 1503 (-1801) elements
Clp1000I sum of infeasibilities 1.83696e-07 - average 1.9135e-09, 10 fixed columns
Coin0506I Presolve 87 (-9) rows, 97 (-10) columns and 1181 (-322) elements
Clp0006I 0  Obj 317.28085 Dual inf 16.337213 (92)
Clp0029I End of values pass after 97 iterations
Clp0000I Optimal - objective value 325.60384
Clp0000I Optimal - objective value 325.60384
Coin0511I After Postsolve, objective 325.60384, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 325.60384
Clp0000I Optimal - objective value 325.60384
Clp0000I Optimal - objective value 325.60384
Clp0000I Optimal - objective value 325.60384
Coin0511I After Postsolve, objective 325.60384, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 325.6038352 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 52 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 107 columns (107 integer (107 of which binary)) and 1523 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.216%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.93689
Cbc0038I Pass   1: suminf.    1.33958 (19) obj. -258.845 iterations 18
Cbc0038I Pass   2: suminf.    1.33958 (19) obj. -258.845 iterations 0
Cbc0038I Pass   3: suminf.    0.38737 (9) obj. -241.612 iterations 10
Cbc0038I Solution found of -226.454
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 107 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -226.454 to -237.681 (0.04 seconds)
Cbc0038I Round again with cutoff of -244.577
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.33958 (19) obj. -258.845 iterations 0
Cbc0038I Pass   5: suminf.    1.33958 (19) obj. -258.845 iterations 0
Cbc0038I Pass   6: suminf.    0.19349 (1) obj. -244.577 iterations 26
Cbc0038I Pass   7: suminf.    0.33333 (1) obj. -257.675 iterations 1
Cbc0038I Pass   8: suminf.    1.44810 (7) obj. -258.804 iterations 18
Cbc0038I Pass   9: suminf.    0.70348 (5) obj. -244.577 iterations 7
Cbc0038I Pass  10: suminf.    0.58570 (5) obj. -256.073 iterations 1
Cbc0038I Pass  11: suminf.    0.38603 (1) obj. -244.577 iterations 5
Cbc0038I Pass  12: suminf.    0.33333 (1) obj. -249.513 iterations 1
Cbc0038I Pass  13: suminf.    0.95787 (8) obj. -244.577 iterations 22
Cbc0038I Pass  14: suminf.    0.76253 (10) obj. -244.577 iterations 5
Cbc0038I Pass  15: suminf.    1.68187 (4) obj. -244.577 iterations 13
Cbc0038I Pass  16: suminf.    1.35851 (5) obj. -244.577 iterations 7
Cbc0038I Pass  17: suminf.    0.99358 (4) obj. -244.577 iterations 3
Cbc0038I Pass  18: suminf.    0.19624 (1) obj. -244.577 iterations 3
Cbc0038I Pass  19: suminf.    0.16216 (1) obj. -248.87 iterations 1
Cbc0038I Pass  20: suminf.    0.84554 (5) obj. -244.577 iterations 13
Cbc0038I Pass  21: suminf.    0.64619 (5) obj. -244.577 iterations 4
Cbc0038I Pass  22: suminf.    1.25454 (4) obj. -244.577 iterations 5
Cbc0038I Pass  23: suminf.    0.98411 (3) obj. -244.577 iterations 1
Cbc0038I Pass  24: suminf.    0.57035 (3) obj. -244.577 iterations 5
Cbc0038I Pass  25: suminf.    0.46629 (3) obj. -244.577 iterations 2
Cbc0038I Pass  26: suminf.    0.86023 (2) obj. -244.577 iterations 5
Cbc0038I Pass  27: suminf.    0.86023 (2) obj. -244.577 iterations 0
Cbc0038I Pass  28: suminf.    0.18830 (1) obj. -244.577 iterations 4
Cbc0038I Pass  29: suminf.    0.16216 (1) obj. -247.87 iterations 1
Cbc0038I Pass  30: suminf.    2.00785 (7) obj. -244.577 iterations 15
Cbc0038I Pass  31: suminf.    1.31600 (7) obj. -244.577 iterations 4
Cbc0038I Pass  32: suminf.    0.96276 (9) obj. -244.577 iterations 4
Cbc0038I Pass  33: suminf.    1.35855 (4) obj. -244.577 iterations 14
Cbc0038I Rounding solution of -256.54 is better than previous of -237.681

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 107 columns, reduced to 30 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -256.54 to -266.702 (0.07 seconds)
Cbc0038I Round again with cutoff of -274.689
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.52935 (20) obj. -274.689 iterations 1
Cbc0038I Pass  34: suminf.    1.52935 (20) obj. -274.689 iterations 0
Cbc0038I Pass  35: suminf.    1.39909 (20) obj. -274.689 iterations 28
Cbc0038I Pass  36: suminf.    1.39909 (20) obj. -274.689 iterations 1
Cbc0038I Pass  37: suminf.    1.71180 (9) obj. -274.689 iterations 28
Cbc0038I Pass  38: suminf.    1.71180 (9) obj. -274.689 iterations 2
Cbc0038I Pass  39: suminf.    1.67460 (9) obj. -274.689 iterations 5
Cbc0038I Pass  40: suminf.    1.67460 (9) obj. -274.689 iterations 3
Cbc0038I Pass  41: suminf.    1.71180 (9) obj. -274.689 iterations 5
Cbc0038I Pass  42: suminf.    1.88702 (12) obj. -274.689 iterations 9
Cbc0038I Pass  43: suminf.    1.36977 (11) obj. -274.689 iterations 6
Cbc0038I Pass  44: suminf.    1.63825 (9) obj. -274.689 iterations 10
Cbc0038I Pass  45: suminf.    1.61462 (9) obj. -274.689 iterations 1
Cbc0038I Pass  46: suminf.    1.63825 (9) obj. -274.689 iterations 4
Cbc0038I Pass  47: suminf.    3.30746 (15) obj. -274.689 iterations 14
Cbc0038I Pass  48: suminf.    2.12774 (14) obj. -274.689 iterations 3
Cbc0038I Pass  49: suminf.    1.80280 (13) obj. -274.689 iterations 4
Cbc0038I Pass  50: suminf.    2.08554 (11) obj. -274.689 iterations 14
Cbc0038I Pass  51: suminf.    1.85729 (11) obj. -274.689 iterations 2
Cbc0038I Pass  52: suminf.    2.08554 (11) obj. -274.689 iterations 5
Cbc0038I Pass  53: suminf.    2.42227 (14) obj. -274.689 iterations 15
Cbc0038I Pass  54: suminf.    2.28498 (12) obj. -274.689 iterations 3
Cbc0038I Pass  55: suminf.    1.84198 (12) obj. -274.689 iterations 3
Cbc0038I Pass  56: suminf.    2.08554 (11) obj. -274.689 iterations 10
Cbc0038I Pass  57: suminf.    1.85729 (11) obj. -274.689 iterations 3
Cbc0038I Pass  58: suminf.    2.08554 (11) obj. -274.689 iterations 5
Cbc0038I Pass  59: suminf.    3.48937 (17) obj. -274.689 iterations 9
Cbc0038I Pass  60: suminf.    3.43486 (17) obj. -274.689 iterations 2
Cbc0038I Pass  61: suminf.    3.88539 (13) obj. -274.689 iterations 11
Cbc0038I Pass  62: suminf.    1.73067 (11) obj. -274.689 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 107 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -266.702 - took 0.07 seconds
Cbc0012I Integer solution of -266.7024 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 96 rows 107 columns, reduced to 27 rows 28 columns
Cbc0031I 41 added rows had average density of 9.6341463
Cbc0013I At root node, 41 cuts changed objective from -306.63307 to -283.00823 in 31 passes
Cbc0014I Cut generator 0 (Probing) - 996 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 87 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 39.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 83 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.219 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -266.7024 best solution, best possible -283.00823 (0.62 seconds)
Cbc0012I Integer solution of -269.6114 found by rounding after 348 iterations and 4 nodes (0.85 seconds)
Cbc0012I Integer solution of -272.6343 found by rounding after 359 iterations and 6 nodes (0.94 seconds)
Cbc0016I Integer solution of -275.482 found by strong branching after 633 iterations and 33 nodes (1.23 seconds)
Cbc0010I After 37 nodes, 1 on tree, -275.482 best solution, best possible -283.00823 (1.35 seconds)
Cbc0038I Full problem 96 rows 107 columns, reduced to 55 rows 56 columns
Cbc0038I Full problem 137 rows 107 columns, reduced to 64 rows 67 columns
Cbc0044I Reduced cost fixing - 64 rows, 67 columns - restarting search
Cbc0012I Integer solution of -275.482 found by Previous solution after 0 iterations and 0 nodes (1.91 seconds)
Cbc0038I Full problem 64 rows 67 columns, reduced to 32 rows 36 columns
Cbc0031I 42 added rows had average density of 16.309524
Cbc0013I At root node, 42 cuts changed objective from -299.6437 to -282.30127 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1646 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 327 row cuts average 58.3 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 245 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 178 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 152 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.740 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 389 row cuts average 15.8 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -275.482 best solution, best possible -282.30123 (3.59 seconds)
Cbc0010I After 29 nodes, 2 on tree, -275.482 best solution, best possible -282.30123 (4.61 seconds)
Cbc0038I Full problem 64 rows 67 columns, reduced to 7 rows 12 columns
Cbc0010I After 54 nodes, 4 on tree, -275.482 best solution, best possible -281.62278 (5.64 seconds)
Cbc0001I Search completed - best objective -275.482, took 3812 iterations and 58 nodes (5.67 seconds)
Cbc0032I Strong branching done 782 times (6021 iterations), fathomed 3 nodes and fixed 14 variables
Cbc0035I Maximum depth 10, 56 variables fixed on reduced cost
Cbc0038I Probing was tried 245 times and created 2169 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
Cbc0038I Gomory was tried 190 times and created 482 cuts of which 0 were active after adding rounds of cuts (0.078 seconds)
Cbc0038I Knapsack was tried 233 times and created 775 cuts of which 0 were active after adding rounds of cuts (0.087 seconds)
Cbc0038I Clique was tried 100 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Cbc0038I MixedIntegerRounding2 was tried 233 times and created 378 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 233 times and created 375 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
Cbc0038I ZeroHalf was tried 233 times and created 439 cuts of which 0 were active after adding rounds of cuts (1.581 seconds)
Cbc0038I Stored from first was tried 233 times and created 541 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -275.482, took 5194 iterations and 108 nodes (5.67 seconds)
Cbc0032I Strong branching done 644 times (6760 iterations), fathomed 12 nodes and fixed 5 variables
Cbc0035I Maximum depth 10, 75 variables fixed on reduced cost
Total time (CPU seconds):       3.51   (Wallclock seconds):       5.68

