Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 66 (-12) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 8.15418e-05 - average 6.62941e-07, 26 fixed columns
Coin0506I Presolve 68 (-55) rows, 38 (-28) columns and 205 (-165) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 48.624948
Clp0000I Optimal - objective value 48.624948
Coin0511I After Postsolve, objective 48.624948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22645553 - largest nonzero change 0 ( 0%) - largest zero change 2.8944381e-05
Clp0000I Optimal - objective value 48.624948
Clp0000I Optimal - objective value 48.624948
Clp0000I Optimal - objective value 48.624948
Coin0511I After Postsolve, objective 48.624948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.62494812 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 66 columns (65 integer (65 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.315%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.32886
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.6123 iterations 36
Cbc0038I Solution found of -7.6123
Cbc0038I Relaxing continuous gives -7.6123
Cbc0038I Rounding solution of -22.3982 is better than previous of -7.6123

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -22.3982 to -25.432 (0.03 seconds)
Cbc0038I Round again with cutoff of -27.6143
Cbc0038I Pass   2: suminf.    0.85778 (3) obj. -27.6143 iterations 3
Cbc0038I Pass   3: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass   4: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass   5: suminf.    0.97438 (3) obj. -27.6143 iterations 8
Cbc0038I Pass   6: suminf.    0.38812 (1) obj. -27.6143 iterations 8
Cbc0038I Pass   7: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I Pass   8: suminf.    0.85778 (3) obj. -27.6143 iterations 2
Cbc0038I Pass   9: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass  10: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  11: suminf.    0.97438 (3) obj. -27.6143 iterations 7
Cbc0038I Pass  12: suminf.    0.38812 (1) obj. -27.6143 iterations 9
Cbc0038I Pass  13: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I Pass  14: suminf.    0.85778 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  15: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass  16: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  17: suminf.    0.97438 (3) obj. -27.6143 iterations 7
Cbc0038I Pass  18: suminf.    0.38812 (1) obj. -27.6143 iterations 8
Cbc0038I Pass  19: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I Pass  20: suminf.    0.85778 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  21: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass  22: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  23: suminf.    0.97438 (3) obj. -27.6143 iterations 7
Cbc0038I Pass  24: suminf.    0.38812 (1) obj. -27.6143 iterations 8
Cbc0038I Pass  25: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I Pass  26: suminf.    0.85778 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  27: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass  28: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  29: suminf.    0.97438 (3) obj. -27.6143 iterations 8
Cbc0038I Pass  30: suminf.    0.38812 (1) obj. -27.6143 iterations 9
Cbc0038I Pass  31: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.432 - took 0.02 seconds
Cbc0012I Integer solution of -25.43196 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 114 rows 66 columns, reduced to 48 rows 27 columns
Cbc0031I 15 added rows had average density of 30.066667
Cbc0013I At root node, 15 cuts changed objective from -47.25468 to -35.377638 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3593 row cuts average 4.8 elements, 2 column cuts (2 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1040 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 65.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.43196, took 4209 iterations and 28 nodes (0.46 seconds)
Cbc0032I Strong branching done 360 times (6118 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 12, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 115 (-37) columns and 1960 (-1343) elements
Clp1000I sum of infeasibilities 1.38753e-06 - average 1.28475e-08, 97 fixed columns
Coin0506I Presolve 17 (-91) rows, 18 (-97) columns and 64 (-1896) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 2.2353462 - largest nonzero change 0 ( 0%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 94.608951
Clp0000I Optimal - objective value 94.608951
Coin0511I After Postsolve, objective 94.608951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5329218 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 171.9883
Clp0000I Optimal - objective value 171.9883
Clp0000I Optimal - objective value 171.9883
Coin0511I After Postsolve, objective 171.9883, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 171.9883047 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 78 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 109 columns (109 integer (109 of which binary)) and 1822 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 2.47489
Cbc0038I Pass   1: suminf.    1.07963 (29) obj. -46.5261 iterations 16
Cbc0038I Pass   2: suminf.    1.07963 (29) obj. -46.5261 iterations 1
Cbc0038I Solution found of 19.8235
Cbc0038I Rounding solution of -19.9644 is better than previous of 19.8235

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 36 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -19.9644 to -25.432 (0.06 seconds)
Cbc0038I Round again with cutoff of -28.0433
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.07963 (29) obj. -46.5261 iterations 0
Cbc0038I Pass   4: suminf.    1.07963 (29) obj. -46.5261 iterations 1
Cbc0038I Pass   5: suminf.    1.65125 (24) obj. -28.0433 iterations 49
Cbc0038I Pass   6: suminf.    1.52307 (24) obj. -28.0433 iterations 3
Cbc0038I Pass   7: suminf.    1.35097 (17) obj. -28.0433 iterations 17
Cbc0038I Pass   8: suminf.    1.36448 (22) obj. -28.0433 iterations 1
Cbc0038I Pass   9: suminf.    1.79566 (17) obj. -28.0433 iterations 21
Cbc0038I Pass  10: suminf.    1.28717 (17) obj. -28.0433 iterations 6
Cbc0038I Pass  11: suminf.    2.57147 (17) obj. -28.0433 iterations 10
Cbc0038I Pass  12: suminf.    1.66506 (17) obj. -28.0433 iterations 4
Cbc0038I Pass  13: suminf.    1.04349 (15) obj. -28.0433 iterations 24
Cbc0038I Pass  14: suminf.    0.54468 (9) obj. -28.0433 iterations 13
Cbc0038I Pass  15: suminf.    1.58121 (20) obj. -28.0433 iterations 16
Cbc0038I Pass  16: suminf.    1.06329 (13) obj. -28.0433 iterations 6
Cbc0038I Pass  17: suminf.    0.56555 (13) obj. -28.0433 iterations 5
Cbc0038I Pass  18: suminf.    0.85558 (11) obj. -28.0433 iterations 11
Cbc0038I Pass  19: suminf.    0.85558 (11) obj. -28.0433 iterations 0
Cbc0038I Pass  20: suminf.    1.97260 (17) obj. -28.0433 iterations 4
Cbc0038I Pass  21: suminf.    1.64435 (21) obj. -28.0433 iterations 5
Cbc0038I Pass  22: suminf.    0.82210 (11) obj. -28.0433 iterations 5
Cbc0038I Pass  23: suminf.    2.00947 (17) obj. -28.0433 iterations 5
Cbc0038I Pass  24: suminf.    1.74051 (21) obj. -28.0433 iterations 4
Cbc0038I Pass  25: suminf.    0.85558 (11) obj. -28.0433 iterations 8
Cbc0038I Pass  26: suminf.    1.97260 (17) obj. -28.0433 iterations 8
Cbc0038I Pass  27: suminf.    1.64435 (21) obj. -28.0433 iterations 4
Cbc0038I Pass  28: suminf.    0.82210 (11) obj. -28.0433 iterations 5
Cbc0038I Pass  29: suminf.    2.00947 (17) obj. -28.0433 iterations 5
Cbc0038I Pass  30: suminf.    1.74051 (21) obj. -28.0433 iterations 4
Cbc0038I Pass  31: suminf.    0.85558 (11) obj. -28.0433 iterations 8
Cbc0038I Pass  32: suminf.    1.97260 (17) obj. -28.0433 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 39 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -25.432 - took 0.02 seconds
Cbc0012I Integer solution of -25.43196 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 57 added rows had average density of 10.684211
Cbc0013I At root node, 57 cuts changed objective from -51.544337 to -30.669671 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 3063 row cuts average 3.7 elements, 9 column cuts (9 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 184 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 141 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 124 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 257 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 325 row cuts average 55.6 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 136 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.43196 best solution, best possible -30.669671 (0.51 seconds)
Cbc0010I After 7 nodes, 6 on tree, -25.43196 best solution, best possible -30.669671 (1.33 seconds)
Cbc0001I Search completed - best objective -25.43196, took 2049 iterations and 14 nodes (1.48 seconds)
Cbc0032I Strong branching done 384 times (9616 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.49

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 66 (-12) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 8.15418e-05 - average 6.62941e-07, 26 fixed columns
Coin0506I Presolve 68 (-55) rows, 38 (-28) columns and 205 (-165) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 48.624948
Clp0000I Optimal - objective value 48.624948
Coin0511I After Postsolve, objective 48.624948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22645553 - largest nonzero change 0 ( 0%) - largest zero change 2.8944381e-05
Clp0000I Optimal - objective value 48.624948
Clp0000I Optimal - objective value 48.624948
Clp0000I Optimal - objective value 48.624948
Coin0511I After Postsolve, objective 48.624948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.62494812 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 66 columns (65 integer (65 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.315%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.32886
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.6123 iterations 36
Cbc0038I Solution found of -7.6123
Cbc0038I Relaxing continuous gives -7.6123
Cbc0038I Rounding solution of -22.3982 is better than previous of -7.6123

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -22.3982 to -25.432 (0.03 seconds)
Cbc0038I Round again with cutoff of -27.6143
Cbc0038I Pass   2: suminf.    0.85778 (3) obj. -27.6143 iterations 3
Cbc0038I Pass   3: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass   4: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass   5: suminf.    0.97438 (3) obj. -27.6143 iterations 8
Cbc0038I Pass   6: suminf.    0.38812 (1) obj. -27.6143 iterations 8
Cbc0038I Pass   7: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I Pass   8: suminf.    0.85778 (3) obj. -27.6143 iterations 2
Cbc0038I Pass   9: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass  10: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  11: suminf.    0.97438 (3) obj. -27.6143 iterations 7
Cbc0038I Pass  12: suminf.    0.38812 (1) obj. -27.6143 iterations 9
Cbc0038I Pass  13: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I Pass  14: suminf.    0.85778 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  15: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass  16: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  17: suminf.    0.97438 (3) obj. -27.6143 iterations 7
Cbc0038I Pass  18: suminf.    0.38812 (1) obj. -27.6143 iterations 8
Cbc0038I Pass  19: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I Pass  20: suminf.    0.85778 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  21: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass  22: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  23: suminf.    0.97438 (3) obj. -27.6143 iterations 7
Cbc0038I Pass  24: suminf.    0.38812 (1) obj. -27.6143 iterations 8
Cbc0038I Pass  25: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I Pass  26: suminf.    0.85778 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  27: suminf.    0.57426 (2) obj. -27.6143 iterations 1
Cbc0038I Pass  28: suminf.    1.14107 (3) obj. -27.6143 iterations 2
Cbc0038I Pass  29: suminf.    0.97438 (3) obj. -27.6143 iterations 8
Cbc0038I Pass  30: suminf.    0.38812 (1) obj. -27.6143 iterations 9
Cbc0038I Pass  31: suminf.    0.45023 (2) obj. -27.6143 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.432 - took 0.02 seconds
Cbc0012I Integer solution of -25.43196 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 114 rows 66 columns, reduced to 48 rows 27 columns
Cbc0031I 15 added rows had average density of 30.066667
Cbc0013I At root node, 15 cuts changed objective from -47.25468 to -35.377638 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3593 row cuts average 4.8 elements, 2 column cuts (2 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1040 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 65.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.43196, took 4209 iterations and 28 nodes (0.49 seconds)
Cbc0032I Strong branching done 360 times (6118 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 12, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 108 (-45) columns and 1761 (-1543) elements
Clp1000I sum of infeasibilities 2.45575e-07 - average 2.43144e-09, 71 fixed columns
Coin0506I Presolve 32 (-69) rows, 37 (-71) columns and 133 (-1628) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 1.1322142 - largest nonzero change 0 ( 0%) - largest zero change 2.7932184e-05
Clp0000I Optimal - objective value -12.91164
Clp0000I Optimal - objective value -12.91164
Coin0511I After Postsolve, objective -12.91164, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6040914 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 61.990366
Clp0000I Optimal - objective value 61.990366
Clp0000I Optimal - objective value 61.990366
Coin0511I After Postsolve, objective 61.990366, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.99036599 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 109 columns (109 integer (109 of which binary)) and 1818 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.411%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 2.39142
Cbc0038I Pass   1: suminf.    0.68572 (25) obj. -38.1915 iterations 17
Cbc0038I Pass   2: suminf.    0.15769 (8) obj. -10.0974 iterations 17
Cbc0038I Solution found of -0.29354
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4.77204
Cbc0038I Pass   3: suminf.    0.68572 (25) obj. -38.1915 iterations 0
Cbc0038I Pass   4: suminf.    0.08946 (5) obj. -4.77204 iterations 32
Cbc0038I Pass   5: suminf.    0.37068 (3) obj. -4.77204 iterations 21
Cbc0038I Pass   6: suminf.    0.26387 (2) obj. -4.77204 iterations 10
Cbc0038I Pass   7: suminf.    0.60648 (3) obj. -4.77204 iterations 2
Cbc0038I Pass   8: suminf.    0.93145 (8) obj. -4.77204 iterations 29
Cbc0038I Pass   9: suminf.    0.68344 (10) obj. -4.77204 iterations 18
Cbc0038I Pass  10: suminf.    1.48245 (7) obj. -4.77204 iterations 14
Cbc0038I Pass  11: suminf.    0.82942 (7) obj. -4.77204 iterations 5
Cbc0038I Pass  12: suminf.    0.69971 (14) obj. -4.77204 iterations 29
Cbc0038I Pass  13: suminf.    0.69971 (14) obj. -4.77204 iterations 1
Cbc0038I Pass  14: suminf.    1.28310 (10) obj. -4.77204 iterations 21
Cbc0038I Pass  15: suminf.    0.85905 (8) obj. -4.77204 iterations 10
Cbc0038I Pass  16: suminf.    1.26178 (8) obj. -4.77204 iterations 7
Cbc0038I Pass  17: suminf.    1.26178 (8) obj. -4.77204 iterations 1
Cbc0038I Pass  18: suminf.    1.28965 (8) obj. -4.77204 iterations 3
Cbc0038I Pass  19: suminf.    1.28965 (8) obj. -4.77204 iterations 1
Cbc0038I Pass  20: suminf.    1.26178 (8) obj. -4.77204 iterations 3
Cbc0038I Pass  21: suminf.    1.97973 (13) obj. -4.77204 iterations 13
Cbc0038I Pass  22: suminf.    1.95827 (12) obj. -4.77204 iterations 5
Cbc0038I Pass  23: suminf.    2.15621 (9) obj. -4.77204 iterations 15
Cbc0038I Pass  24: suminf.    1.47693 (9) obj. -4.77204 iterations 3
Cbc0038I Pass  25: suminf.    1.12583 (8) obj. -4.77204 iterations 1
Cbc0038I Pass  26: suminf.    1.25090 (8) obj. -4.77204 iterations 6
Cbc0038I Pass  27: suminf.    2.97806 (14) obj. -4.77204 iterations 20
Cbc0038I Pass  28: suminf.    0.52848 (10) obj. -4.77204 iterations 7
Cbc0038I Pass  29: suminf.    0.52848 (10) obj. -4.77204 iterations 0
Cbc0038I Pass  30: suminf.    1.58423 (8) obj. -4.77204 iterations 11
Cbc0038I Pass  31: suminf.    0.92985 (8) obj. -4.77204 iterations 4
Cbc0038I Pass  32: suminf.    1.66007 (9) obj. -4.77204 iterations 9
Cbc0038I Rounding solution of -25.432 is better than previous of -0.29354

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 45 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -29.3612
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.68572 (25) obj. -38.1915 iterations 0
Cbc0038I Pass  33: suminf.    2.00171 (18) obj. -29.3612 iterations 40
Cbc0038I Pass  34: suminf.    1.25693 (22) obj. -29.3612 iterations 6
Cbc0038I Pass  35: suminf.    1.69039 (20) obj. -29.3612 iterations 10
Cbc0038I Pass  36: suminf.    1.32901 (21) obj. -29.3612 iterations 4
Cbc0038I Pass  37: suminf.    1.69039 (20) obj. -29.3612 iterations 8
Cbc0038I Pass  38: suminf.    2.18288 (22) obj. -29.3612 iterations 14
Cbc0038I Pass  39: suminf.    2.18288 (22) obj. -29.3612 iterations 0
Cbc0038I Pass  40: suminf.    2.22219 (21) obj. -29.3612 iterations 17
Cbc0038I Pass  41: suminf.    1.34521 (21) obj. -29.3612 iterations 7
Cbc0038I Pass  42: suminf.    1.69039 (20) obj. -29.3612 iterations 8
Cbc0038I Pass  43: suminf.    1.55883 (21) obj. -29.3612 iterations 9
Cbc0038I Pass  44: suminf.    1.34216 (21) obj. -29.3612 iterations 6
Cbc0038I Pass  45: suminf.    1.69039 (20) obj. -29.3612 iterations 9
Cbc0038I Pass  46: suminf.    1.32746 (21) obj. -29.3612 iterations 2
Cbc0038I Pass  47: suminf.    2.10786 (21) obj. -29.3612 iterations 7
Cbc0038I Pass  48: suminf.    1.34521 (21) obj. -29.3612 iterations 4
Cbc0038I Pass  49: suminf.    1.83670 (20) obj. -29.3612 iterations 5
Cbc0038I Pass  50: suminf.    1.67143 (21) obj. -29.3612 iterations 4
Cbc0038I Pass  51: suminf.    2.22219 (21) obj. -29.3612 iterations 10
Cbc0038I Pass  52: suminf.    2.58950 (23) obj. -29.3612 iterations 4
Cbc0038I Pass  53: suminf.    1.33426 (23) obj. -29.3612 iterations 4
Cbc0038I Pass  54: suminf.    1.32245 (22) obj. -29.3612 iterations 4
Cbc0038I Pass  55: suminf.    1.95048 (22) obj. -29.3612 iterations 7
Cbc0038I Pass  56: suminf.    1.35763 (21) obj. -29.3612 iterations 6
Cbc0038I Pass  57: suminf.    1.69039 (20) obj. -29.3612 iterations 12
Cbc0038I Pass  58: suminf.    1.33780 (21) obj. -29.3612 iterations 4
Cbc0038I Pass  59: suminf.    1.69039 (20) obj. -29.3612 iterations 13
Cbc0038I Pass  60: suminf.    1.34521 (21) obj. -29.3612 iterations 3
Cbc0038I Pass  61: suminf.    1.69039 (20) obj. -29.3612 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 40 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -25.432 - took 0.06 seconds
Cbc0012I Integer solution of -25.43196 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 93 rows 109 columns, reduced to 31 rows 32 columns
Cbc0031I 57 added rows had average density of 8.7719298
Cbc0013I At root node, 57 cuts changed objective from -45.077607 to -29.384592 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 3557 row cuts average 4.6 elements, 15 column cuts (15 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 236 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 163 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 194 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 55.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 121 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.216 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.43196 best solution, best possible -29.384592 (0.72 seconds)
Cbc0001I Search completed - best objective -25.43196, took 1794 iterations and 10 nodes (1.47 seconds)
Cbc0032I Strong branching done 276 times (5114 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.48

