Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 24 (-9) columns and 118 (-65) elements
Clp1000I sum of infeasibilities 7.85267e-05 - average 2.01351e-06, 6 fixed columns
Coin0506I Presolve 27 (-12) rows, 18 (-6) columns and 82 (-36) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 1.8231216 - largest nonzero change 0 ( 0%) - largest zero change 1.3105789e-05
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Coin0511I After Postsolve, objective 289.53063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Coin0511I After Postsolve, objective 289.53063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 289.5306266 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 24 columns (23 integer (23 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.718%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.19637
Cbc0038I Pass   1: suminf.    0.02439 (1) obj. -216.429 iterations 8
Cbc0038I Solution found of -39.5673
Cbc0038I Relaxing continuous gives -40.3722
Cbc0038I Rounding solution of -100.356 is better than previous of -40.3722

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -100.356 to -145.95 (0.01 seconds)
Cbc0038I Round again with cutoff of -153.696
Cbc0038I Pass   2: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass   3: suminf.    0.37488 (1) obj. -153.696 iterations 2
Cbc0038I Pass   4: suminf.    1.88666 (7) obj. -153.696 iterations 6
Cbc0038I Pass   5: suminf.    0.37488 (1) obj. -153.696 iterations 7
Cbc0038I Pass   6: suminf.    0.23810 (1) obj. -178.493 iterations 1
Cbc0038I Pass   7: suminf.    1.29773 (3) obj. -153.696 iterations 5
Cbc0038I Pass   8: suminf.    0.18909 (1) obj. -153.696 iterations 4
Cbc0038I Pass   9: suminf.    0.21951 (1) obj. -159.211 iterations 1
Cbc0038I Pass  10: suminf.    1.29773 (3) obj. -153.696 iterations 3
Cbc0038I Pass  11: suminf.    1.24044 (7) obj. -153.696 iterations 11
Cbc0038I Pass  12: suminf.    1.24044 (7) obj. -153.696 iterations 1
Cbc0038I Pass  13: suminf.    0.31474 (1) obj. -153.696 iterations 9
Cbc0038I Pass  14: suminf.    0.31474 (1) obj. -153.696 iterations 2
Cbc0038I Pass  15: suminf.    0.32520 (1) obj. -155.593 iterations 1
Cbc0038I Pass  16: suminf.    0.76895 (2) obj. -153.696 iterations 6
Cbc0038I Pass  17: suminf.    0.71214 (3) obj. -153.696 iterations 3
Cbc0038I Pass  18: suminf.    0.41111 (1) obj. -164.743 iterations 4
Cbc0038I Pass  19: suminf.    0.41111 (1) obj. -164.743 iterations 0
Cbc0038I Pass  20: suminf.    0.42971 (2) obj. -153.696 iterations 2
Cbc0038I Pass  21: suminf.    0.45211 (1) obj. -153.696 iterations 5
Cbc0038I Pass  22: suminf.    0.32520 (1) obj. -176.701 iterations 1
Cbc0038I Pass  23: suminf.    0.45211 (1) obj. -153.696 iterations 1
Cbc0038I Pass  24: suminf.    1.12679 (4) obj. -153.696 iterations 3
Cbc0038I Pass  25: suminf.    0.85343 (3) obj. -158.4 iterations 3
Cbc0038I Pass  26: suminf.    0.79503 (2) obj. -153.696 iterations 4
Cbc0038I Pass  27: suminf.    0.80527 (2) obj. -153.696 iterations 1
Cbc0038I Pass  28: suminf.    1.53810 (8) obj. -153.696 iterations 10
Cbc0038I Pass  29: suminf.    1.47458 (7) obj. -153.696 iterations 3
Cbc0038I Pass  30: suminf.    0.42768 (1) obj. -153.696 iterations 11
Cbc0038I Pass  31: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Rounding solution of -171.033 is better than previous of -145.95

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -171.033 to -173.283 (0.02 seconds)
Cbc0038I Round again with cutoff of -183.309
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass  32: suminf.    0.21153 (1) obj. -183.309 iterations 2
Cbc0038I Pass  33: suminf.    1.86949 (4) obj. -183.309 iterations 7
Cbc0038I Pass  34: suminf.    0.21153 (1) obj. -183.309 iterations 6
Cbc0038I Pass  35: suminf.    1.91532 (7) obj. -183.309 iterations 9
Cbc0038I Pass  36: suminf.    0.50135 (3) obj. -183.309 iterations 7
Cbc0038I Pass  37: suminf.    0.43996 (2) obj. -183.309 iterations 2
Cbc0038I Pass  38: suminf.    1.23041 (5) obj. -183.309 iterations 8
Cbc0038I Pass  39: suminf.    0.03024 (2) obj. -183.309 iterations 8
Cbc0038I Pass  40: suminf.    0.26433 (1) obj. -183.309 iterations 4
Cbc0038I Pass  41: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  42: suminf.    1.14344 (4) obj. -183.309 iterations 8
Cbc0038I Pass  43: suminf.    0.23577 (1) obj. -194.914 iterations 4
Cbc0038I Pass  44: suminf.    0.29979 (1) obj. -183.309 iterations 1
Cbc0038I Pass  45: suminf.    0.95368 (4) obj. -183.309 iterations 8
Cbc0038I Pass  46: suminf.    0.95368 (4) obj. -183.309 iterations 1
Cbc0038I Pass  47: suminf.    0.21153 (1) obj. -183.309 iterations 4
Cbc0038I Pass  48: suminf.    0.02439 (1) obj. -216.429 iterations 2
Cbc0038I Pass  49: suminf.    1.32005 (3) obj. -192.478 iterations 5
Cbc0038I Pass  50: suminf.    1.14207 (3) obj. -183.309 iterations 1
Cbc0038I Pass  51: suminf.    0.48187 (3) obj. -183.309 iterations 3
Cbc0038I Pass  52: suminf.    0.40775 (2) obj. -183.309 iterations 1
Cbc0038I Pass  53: suminf.    0.21153 (1) obj. -183.309 iterations 2
Cbc0038I Pass  54: suminf.    0.02439 (1) obj. -216.429 iterations 2
Cbc0038I Pass  55: suminf.    0.30772 (2) obj. -183.309 iterations 3
Cbc0038I Pass  56: suminf.    0.93685 (4) obj. -183.309 iterations 4
Cbc0038I Pass  57: suminf.    0.41783 (3) obj. -183.309 iterations 2
Cbc0038I Pass  58: suminf.    0.49125 (3) obj. -183.309 iterations 4
Cbc0038I Pass  59: suminf.    0.03024 (2) obj. -183.309 iterations 3
Cbc0038I Pass  60: suminf.    0.26433 (1) obj. -183.309 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -173.283 to -175.283 (0.04 seconds)
Cbc0038I Round again with cutoff of -195.339
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass  61: suminf.    0.14517 (1) obj. -195.339 iterations 2
Cbc0038I Pass  62: suminf.    0.37010 (2) obj. -195.339 iterations 5
Cbc0038I Pass  63: suminf.    0.37010 (2) obj. -195.339 iterations 2
Cbc0038I Pass  64: suminf.    0.37010 (2) obj. -195.339 iterations 4
Cbc0038I Pass  65: suminf.    0.37010 (2) obj. -195.339 iterations 4
Cbc0038I Pass  66: suminf.    0.90531 (3) obj. -195.339 iterations 5
Cbc0038I Pass  67: suminf.    0.90531 (3) obj. -195.339 iterations 1
Cbc0038I Pass  68: suminf.    0.19797 (1) obj. -195.339 iterations 8
Cbc0038I Pass  69: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  70: suminf.    1.76509 (6) obj. -195.339 iterations 8
Cbc0038I Pass  71: suminf.    1.76509 (6) obj. -195.339 iterations 2
Cbc0038I Pass  72: suminf.    0.11429 (1) obj. -195.339 iterations 7
Cbc0038I Pass  73: suminf.    0.90531 (3) obj. -195.339 iterations 6
Cbc0038I Pass  74: suminf.    0.90531 (3) obj. -195.339 iterations 2
Cbc0038I Pass  75: suminf.    0.19797 (1) obj. -195.339 iterations 7
Cbc0038I Pass  76: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  77: suminf.    0.35823 (3) obj. -195.339 iterations 6
Cbc0038I Pass  78: suminf.    0.35823 (3) obj. -195.339 iterations 2
Cbc0038I Pass  79: suminf.    1.07551 (3) obj. -195.339 iterations 7
Cbc0038I Pass  80: suminf.    0.69800 (3) obj. -195.339 iterations 2
Cbc0038I Pass  81: suminf.    0.69800 (3) obj. -195.339 iterations 1
Cbc0038I Pass  82: suminf.    1.07551 (3) obj. -195.339 iterations 2
Cbc0038I Pass  83: suminf.    1.12413 (4) obj. -195.339 iterations 4
Cbc0038I Pass  84: suminf.    0.56265 (3) obj. -195.339 iterations 2
Cbc0038I Pass  85: suminf.    0.83557 (2) obj. -195.339 iterations 3
Cbc0038I Pass  86: suminf.    0.11429 (1) obj. -210.509 iterations 2
Cbc0038I Pass  87: suminf.    0.19797 (1) obj. -195.339 iterations 1
Cbc0038I Pass  88: suminf.    0.62573 (3) obj. -195.339 iterations 5
Cbc0038I Pass  89: suminf.    0.42993 (2) obj. -195.339 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -175.283 - took 0.07 seconds
Cbc0012I Integer solution of -175.28332 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 24 columns, reduced to 13 rows 10 columns
Cbc0031I 7 added rows had average density of 18.285714
Cbc0013I At root node, 7 cuts changed objective from -223.41037 to -192.28278 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 299 row cuts average 3.4 elements, 3 column cuts (3 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -175.28332, took 1045 iterations and 8 nodes (0.14 seconds)
Cbc0032I Strong branching done 82 times (492 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-20) rows, 51 (-11) columns and 460 (-188) elements
Clp1000I sum of infeasibilities 0 - average 0, 43 fixed columns
Coin0506I Presolve 7 (-37) rows, 8 (-43) columns and 25 (-435) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 255.09901
Clp0000I Optimal - objective value 255.09901
Coin0511I After Postsolve, objective 255.09901, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.687985 - largest nonzero change 0 ( 0%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 295.2793
Clp0000I Optimal - objective value 295.2793
Clp0000I Optimal - objective value 295.2793
Coin0511I After Postsolve, objective 295.2793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 295.2792961 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 45 columns (45 integer (45 of which binary)) and 382 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 0.781021
Cbc0038I Pass   1: suminf.    0.15776 (2) obj. -212.422 iterations 26
Cbc0038I Solution found of -49.9444
Cbc0038I Rounding solution of -110.733 is better than previous of -49.9444

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -121.75
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.15776 (2) obj. -212.422 iterations 0
Cbc0038I Pass   3: suminf.    0.39610 (1) obj. -121.75 iterations 2
Cbc0038I Pass   4: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass   5: suminf.    0.48948 (3) obj. -169.899 iterations 15
Cbc0038I Pass   6: suminf.    0.48948 (3) obj. -169.899 iterations 6
Cbc0038I Pass   7: suminf.    0.40713 (1) obj. -121.75 iterations 4
Cbc0038I Pass   8: suminf.    0.11429 (1) obj. -208.509 iterations 1
Cbc0038I Pass   9: suminf.    1.22223 (9) obj. -197.532 iterations 16
Cbc0038I Pass  10: suminf.    0.82560 (6) obj. -189.486 iterations 5
Cbc0038I Pass  11: suminf.    0.30698 (1) obj. -121.75 iterations 6
Cbc0038I Pass  12: suminf.    0.34959 (1) obj. -184.008 iterations 1
Cbc0038I Pass  13: suminf.    0.11429 (1) obj. -191.509 iterations 7
Cbc0038I Pass  14: suminf.    0.11429 (1) obj. -191.509 iterations 2
Cbc0038I Pass  15: suminf.    0.49909 (1) obj. -121.75 iterations 1
Cbc0038I Pass  16: suminf.    1.01155 (3) obj. -121.75 iterations 11
Cbc0038I Pass  17: suminf.    0.56598 (2) obj. -121.75 iterations 3
Cbc0038I Pass  18: suminf.    0.11429 (1) obj. -194.509 iterations 2
Cbc0038I Pass  19: suminf.    0.48436 (1) obj. -121.75 iterations 1
Cbc0038I Pass  20: suminf.    2.44647 (9) obj. -178.187 iterations 16
Cbc0038I Pass  21: suminf.    1.08460 (6) obj. -123.432 iterations 4
Cbc0038I Pass  22: suminf.    0.02611 (1) obj. -121.75 iterations 7
Cbc0038I Pass  23: suminf.    0.28455 (1) obj. -168.601 iterations 1
Cbc0038I Pass  24: suminf.    3.15580 (11) obj. -121.75 iterations 15
Cbc0038I Pass  25: suminf.    2.65272 (11) obj. -121.75 iterations 3
Cbc0038I Pass  26: suminf.    0.49573 (3) obj. -121.75 iterations 10
Cbc0038I Pass  27: suminf.    0.27778 (1) obj. -146.482 iterations 4
Cbc0038I Pass  28: suminf.    0.35427 (1) obj. -121.75 iterations 2
Cbc0038I Pass  29: suminf.    0.43089 (1) obj. -160.697 iterations 1
Cbc0038I Pass  30: suminf.    0.96210 (3) obj. -121.75 iterations 9
Cbc0038I Pass  31: suminf.    0.58130 (2) obj. -129.678 iterations 4
Cbc0038I Rounding solution of -156.839 is better than previous of -110.733

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 45 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -156.839 to -173.283 (0.04 seconds)
Cbc0038I Round again with cutoff of -182.806
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.15776 (2) obj. -212.422 iterations 0
Cbc0038I Pass  32: suminf.    0.26710 (1) obj. -182.806 iterations 2
Cbc0038I Pass  33: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  34: suminf.    1.01123 (9) obj. -182.806 iterations 10
Cbc0038I Pass  35: suminf.    0.11429 (1) obj. -203.509 iterations 2
Cbc0038I Pass  36: suminf.    0.22849 (1) obj. -182.806 iterations 1
Cbc0038I Pass  37: suminf.    1.76662 (12) obj. -182.806 iterations 10
Cbc0038I Pass  38: suminf.    0.77893 (9) obj. -200.14 iterations 4
Cbc0038I Pass  39: suminf.    0.26946 (1) obj. -182.806 iterations 9
Cbc0038I Pass  40: suminf.    0.23577 (1) obj. -188.914 iterations 1
Cbc0038I Pass  41: suminf.    0.61105 (3) obj. -182.806 iterations 5
Cbc0038I Pass  42: suminf.    0.23577 (1) obj. -187.914 iterations 3
Cbc0038I Pass  43: suminf.    0.26395 (1) obj. -182.806 iterations 1
Cbc0038I Pass  44: suminf.    1.67449 (7) obj. -182.806 iterations 11
Cbc0038I Pass  45: suminf.    0.46557 (4) obj. -192.684 iterations 6
Cbc0038I Pass  46: suminf.    0.27498 (1) obj. -182.806 iterations 4
Cbc0038I Pass  47: suminf.    0.23577 (1) obj. -189.914 iterations 1
Cbc0038I Pass  48: suminf.    1.11909 (9) obj. -182.806 iterations 11
Cbc0038I Pass  49: suminf.    0.32273 (2) obj. -185.74 iterations 5
Cbc0038I Pass  50: suminf.    0.24188 (1) obj. -182.806 iterations 2
Cbc0038I Pass  51: suminf.    0.23577 (1) obj. -183.914 iterations 1
Cbc0038I Pass  52: suminf.    0.46497 (5) obj. -182.806 iterations 4
Cbc0038I Pass  53: suminf.    0.33339 (3) obj. -184.718 iterations 2
Cbc0038I Pass  54: suminf.    0.30614 (4) obj. -182.806 iterations 4
Cbc0038I Pass  55: suminf.    0.30614 (4) obj. -182.806 iterations 0
Cbc0038I Pass  56: suminf.    1.42776 (4) obj. -182.806 iterations 2
Cbc0038I Pass  57: suminf.    1.42776 (4) obj. -182.806 iterations 0
Cbc0038I Pass  58: suminf.    0.15769 (2) obj. -182.806 iterations 2
Cbc0038I Pass  59: suminf.    0.11429 (1) obj. -184.509 iterations 1
Cbc0038I Pass  60: suminf.    0.12368 (1) obj. -182.806 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 45 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -173.283 - took 0.04 seconds
Cbc0012I Integer solution of -173.283 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 38 rows 45 columns, reduced to 18 rows 19 columns
Cbc0031I 17 added rows had average density of 13
Cbc0013I At root node, 17 cuts changed objective from -220.89964 to -181.83456 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 916 row cuts average 2.9 elements, 17 column cuts (17 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 625 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 45 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 175 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 241 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.743 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -173.283 best solution, best possible -181.83456 (1.52 seconds)
Cbc0004I Integer solution of -175.28332 found after 1321 iterations and 1 nodes (1.60 seconds)
Cbc0001I Search completed - best objective -175.28332, took 1351 iterations and 2 nodes (1.60 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 24 (-9) columns and 118 (-65) elements
Clp1000I sum of infeasibilities 7.85267e-05 - average 2.01351e-06, 6 fixed columns
Coin0506I Presolve 27 (-12) rows, 18 (-6) columns and 82 (-36) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 1.8231216 - largest nonzero change 0 ( 0%) - largest zero change 1.3105789e-05
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Coin0511I After Postsolve, objective 289.53063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Coin0511I After Postsolve, objective 289.53063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 289.5306266 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 24 columns (23 integer (23 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.718%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.19637
Cbc0038I Pass   1: suminf.    0.02439 (1) obj. -216.429 iterations 8
Cbc0038I Solution found of -39.5673
Cbc0038I Relaxing continuous gives -40.3722
Cbc0038I Rounding solution of -100.356 is better than previous of -40.3722

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -100.356 to -145.95 (0.01 seconds)
Cbc0038I Round again with cutoff of -153.696
Cbc0038I Pass   2: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass   3: suminf.    0.37488 (1) obj. -153.696 iterations 2
Cbc0038I Pass   4: suminf.    1.88666 (7) obj. -153.696 iterations 6
Cbc0038I Pass   5: suminf.    0.37488 (1) obj. -153.696 iterations 7
Cbc0038I Pass   6: suminf.    0.23810 (1) obj. -178.493 iterations 1
Cbc0038I Pass   7: suminf.    1.29773 (3) obj. -153.696 iterations 5
Cbc0038I Pass   8: suminf.    0.18909 (1) obj. -153.696 iterations 4
Cbc0038I Pass   9: suminf.    0.21951 (1) obj. -159.211 iterations 1
Cbc0038I Pass  10: suminf.    1.29773 (3) obj. -153.696 iterations 3
Cbc0038I Pass  11: suminf.    1.24044 (7) obj. -153.696 iterations 11
Cbc0038I Pass  12: suminf.    1.24044 (7) obj. -153.696 iterations 1
Cbc0038I Pass  13: suminf.    0.31474 (1) obj. -153.696 iterations 9
Cbc0038I Pass  14: suminf.    0.31474 (1) obj. -153.696 iterations 2
Cbc0038I Pass  15: suminf.    0.32520 (1) obj. -155.593 iterations 1
Cbc0038I Pass  16: suminf.    0.76895 (2) obj. -153.696 iterations 6
Cbc0038I Pass  17: suminf.    0.71214 (3) obj. -153.696 iterations 3
Cbc0038I Pass  18: suminf.    0.41111 (1) obj. -164.743 iterations 4
Cbc0038I Pass  19: suminf.    0.41111 (1) obj. -164.743 iterations 0
Cbc0038I Pass  20: suminf.    0.42971 (2) obj. -153.696 iterations 2
Cbc0038I Pass  21: suminf.    0.45211 (1) obj. -153.696 iterations 5
Cbc0038I Pass  22: suminf.    0.32520 (1) obj. -176.701 iterations 1
Cbc0038I Pass  23: suminf.    0.45211 (1) obj. -153.696 iterations 1
Cbc0038I Pass  24: suminf.    1.12679 (4) obj. -153.696 iterations 3
Cbc0038I Pass  25: suminf.    0.85343 (3) obj. -158.4 iterations 3
Cbc0038I Pass  26: suminf.    0.79503 (2) obj. -153.696 iterations 4
Cbc0038I Pass  27: suminf.    0.80527 (2) obj. -153.696 iterations 1
Cbc0038I Pass  28: suminf.    1.53810 (8) obj. -153.696 iterations 10
Cbc0038I Pass  29: suminf.    1.47458 (7) obj. -153.696 iterations 3
Cbc0038I Pass  30: suminf.    0.42768 (1) obj. -153.696 iterations 11
Cbc0038I Pass  31: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Rounding solution of -171.033 is better than previous of -145.95

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -171.033 to -173.283 (0.02 seconds)
Cbc0038I Round again with cutoff of -183.309
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass  32: suminf.    0.21153 (1) obj. -183.309 iterations 2
Cbc0038I Pass  33: suminf.    1.86949 (4) obj. -183.309 iterations 7
Cbc0038I Pass  34: suminf.    0.21153 (1) obj. -183.309 iterations 6
Cbc0038I Pass  35: suminf.    1.91532 (7) obj. -183.309 iterations 9
Cbc0038I Pass  36: suminf.    0.50135 (3) obj. -183.309 iterations 7
Cbc0038I Pass  37: suminf.    0.43996 (2) obj. -183.309 iterations 2
Cbc0038I Pass  38: suminf.    1.23041 (5) obj. -183.309 iterations 8
Cbc0038I Pass  39: suminf.    0.03024 (2) obj. -183.309 iterations 8
Cbc0038I Pass  40: suminf.    0.26433 (1) obj. -183.309 iterations 4
Cbc0038I Pass  41: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  42: suminf.    1.14344 (4) obj. -183.309 iterations 8
Cbc0038I Pass  43: suminf.    0.23577 (1) obj. -194.914 iterations 4
Cbc0038I Pass  44: suminf.    0.29979 (1) obj. -183.309 iterations 1
Cbc0038I Pass  45: suminf.    0.95368 (4) obj. -183.309 iterations 8
Cbc0038I Pass  46: suminf.    0.95368 (4) obj. -183.309 iterations 1
Cbc0038I Pass  47: suminf.    0.21153 (1) obj. -183.309 iterations 4
Cbc0038I Pass  48: suminf.    0.02439 (1) obj. -216.429 iterations 2
Cbc0038I Pass  49: suminf.    1.32005 (3) obj. -192.478 iterations 5
Cbc0038I Pass  50: suminf.    1.14207 (3) obj. -183.309 iterations 1
Cbc0038I Pass  51: suminf.    0.48187 (3) obj. -183.309 iterations 3
Cbc0038I Pass  52: suminf.    0.40775 (2) obj. -183.309 iterations 1
Cbc0038I Pass  53: suminf.    0.21153 (1) obj. -183.309 iterations 2
Cbc0038I Pass  54: suminf.    0.02439 (1) obj. -216.429 iterations 2
Cbc0038I Pass  55: suminf.    0.30772 (2) obj. -183.309 iterations 3
Cbc0038I Pass  56: suminf.    0.93685 (4) obj. -183.309 iterations 4
Cbc0038I Pass  57: suminf.    0.41783 (3) obj. -183.309 iterations 2
Cbc0038I Pass  58: suminf.    0.49125 (3) obj. -183.309 iterations 4
Cbc0038I Pass  59: suminf.    0.03024 (2) obj. -183.309 iterations 3
Cbc0038I Pass  60: suminf.    0.26433 (1) obj. -183.309 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -173.283 to -175.283 (0.03 seconds)
Cbc0038I Round again with cutoff of -195.339
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass  61: suminf.    0.14517 (1) obj. -195.339 iterations 2
Cbc0038I Pass  62: suminf.    0.37010 (2) obj. -195.339 iterations 5
Cbc0038I Pass  63: suminf.    0.37010 (2) obj. -195.339 iterations 2
Cbc0038I Pass  64: suminf.    0.37010 (2) obj. -195.339 iterations 4
Cbc0038I Pass  65: suminf.    0.37010 (2) obj. -195.339 iterations 4
Cbc0038I Pass  66: suminf.    0.90531 (3) obj. -195.339 iterations 5
Cbc0038I Pass  67: suminf.    0.90531 (3) obj. -195.339 iterations 1
Cbc0038I Pass  68: suminf.    0.19797 (1) obj. -195.339 iterations 8
Cbc0038I Pass  69: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  70: suminf.    1.76509 (6) obj. -195.339 iterations 8
Cbc0038I Pass  71: suminf.    1.76509 (6) obj. -195.339 iterations 2
Cbc0038I Pass  72: suminf.    0.11429 (1) obj. -195.339 iterations 7
Cbc0038I Pass  73: suminf.    0.90531 (3) obj. -195.339 iterations 6
Cbc0038I Pass  74: suminf.    0.90531 (3) obj. -195.339 iterations 2
Cbc0038I Pass  75: suminf.    0.19797 (1) obj. -195.339 iterations 7
Cbc0038I Pass  76: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  77: suminf.    0.35823 (3) obj. -195.339 iterations 6
Cbc0038I Pass  78: suminf.    0.35823 (3) obj. -195.339 iterations 2
Cbc0038I Pass  79: suminf.    1.07551 (3) obj. -195.339 iterations 7
Cbc0038I Pass  80: suminf.    0.69800 (3) obj. -195.339 iterations 2
Cbc0038I Pass  81: suminf.    0.69800 (3) obj. -195.339 iterations 1
Cbc0038I Pass  82: suminf.    1.07551 (3) obj. -195.339 iterations 2
Cbc0038I Pass  83: suminf.    1.12413 (4) obj. -195.339 iterations 4
Cbc0038I Pass  84: suminf.    0.56265 (3) obj. -195.339 iterations 2
Cbc0038I Pass  85: suminf.    0.83557 (2) obj. -195.339 iterations 3
Cbc0038I Pass  86: suminf.    0.11429 (1) obj. -210.509 iterations 2
Cbc0038I Pass  87: suminf.    0.19797 (1) obj. -195.339 iterations 1
Cbc0038I Pass  88: suminf.    0.62573 (3) obj. -195.339 iterations 5
Cbc0038I Pass  89: suminf.    0.42993 (2) obj. -195.339 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -175.283 - took 0.06 seconds
Cbc0012I Integer solution of -175.28332 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 24 columns, reduced to 13 rows 10 columns
Cbc0031I 7 added rows had average density of 18.285714
Cbc0013I At root node, 7 cuts changed objective from -223.41037 to -192.28278 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 299 row cuts average 3.4 elements, 3 column cuts (3 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -175.28332, took 1045 iterations and 8 nodes (0.14 seconds)
Cbc0032I Strong branching done 82 times (492 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 45 (-18) columns and 368 (-281) elements
Clp1000I sum of infeasibilities 4.38076e-09 - average 1.15283e-10, 13 fixed columns
Coin0506I Presolve 30 (-8) rows, 32 (-13) columns and 142 (-226) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 0.21104331 - largest nonzero change 0 ( 0%) - largest zero change 2.8694171e-05
Clp0000I Optimal - objective value 295.2793
Clp0000I Optimal - objective value 295.2793
Coin0511I After Postsolve, objective 295.2793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 295.2793
Clp0000I Optimal - objective value 295.2793
Clp0000I Optimal - objective value 295.2793
Coin0511I After Postsolve, objective 295.2793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 295.2792961 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 45 columns (45 integer (45 of which binary)) and 381 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.133%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 0.894898
Cbc0038I Pass   1: suminf.    0.16984 (2) obj. -212.398 iterations 28
Cbc0038I Solution found of -49.9444
Cbc0038I Rounding solution of -110.733 is better than previous of -49.9444

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -121.736
Cbc0038I Pass   2: suminf.    0.16984 (2) obj. -212.398 iterations 0
Cbc0038I Pass   3: suminf.    0.39602 (1) obj. -121.736 iterations 2
Cbc0038I Pass   4: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass   5: suminf.    0.53298 (3) obj. -168.104 iterations 5
Cbc0038I Pass   6: suminf.    0.53298 (3) obj. -168.104 iterations 2
Cbc0038I Pass   7: suminf.    0.40705 (1) obj. -121.736 iterations 3
Cbc0038I Pass   8: suminf.    0.11429 (1) obj. -208.509 iterations 1
Cbc0038I Pass   9: suminf.    2.27448 (10) obj. -132.214 iterations 18
Cbc0038I Pass  10: suminf.    1.36788 (10) obj. -121.736 iterations 4
Cbc0038I Pass  11: suminf.    1.02297 (10) obj. -121.736 iterations 1
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -122.367 iterations 11
Cbc0038I Solution found of -122.367
Cbc0038I Rounding solution of -128.367 is better than previous of -122.367

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 45 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -128.367 to -141.561 (0.02 seconds)
Cbc0038I Round again with cutoff of -157.401
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  13: suminf.    0.16984 (2) obj. -212.398 iterations 0
Cbc0038I Pass  14: suminf.    0.40724 (1) obj. -157.401 iterations 2
Cbc0038I Pass  15: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  16: suminf.    0.22500 (2) obj. -199.831 iterations 14
Cbc0038I Pass  17: suminf.    0.11429 (1) obj. -208.509 iterations 2
Cbc0038I Pass  18: suminf.    0.39621 (1) obj. -157.401 iterations 1
Cbc0038I Pass  19: suminf.    3.31479 (16) obj. -157.401 iterations 11
Cbc0038I Pass  20: suminf.    2.20456 (14) obj. -157.401 iterations 5
Cbc0038I Pass  21: suminf.    1.89278 (13) obj. -157.401 iterations 3
Cbc0038I Pass  22: suminf.    0.56039 (4) obj. -158.088 iterations 10
Cbc0038I Pass  23: suminf.    0.55660 (4) obj. -157.401 iterations 1
Cbc0038I Pass  24: suminf.    0.35597 (2) obj. -157.401 iterations 4
Cbc0038I Pass  25: suminf.    0.35597 (2) obj. -157.401 iterations 0
Cbc0038I Pass  26: suminf.    0.45466 (2) obj. -157.401 iterations 2
Cbc0038I Pass  27: suminf.    1.53428 (8) obj. -157.401 iterations 15
Cbc0038I Pass  28: suminf.    0.76329 (5) obj. -163.815 iterations 5
Cbc0038I Pass  29: suminf.    0.46587 (3) obj. -157.401 iterations 6
Cbc0038I Pass  30: suminf.    0.46587 (3) obj. -157.401 iterations 0
Cbc0038I Pass  31: suminf.    0.93586 (3) obj. -157.401 iterations 3
Cbc0038I Pass  32: suminf.    1.36750 (3) obj. -157.401 iterations 3
Cbc0038I Pass  33: suminf.    0.87210 (2) obj. -159.538 iterations 3
Cbc0038I Pass  34: suminf.    0.61673 (3) obj. -157.401 iterations 5
Cbc0038I Pass  35: suminf.    0.61618 (3) obj. -157.401 iterations 2
Cbc0038I Pass  36: suminf.    0.43804 (1) obj. -157.401 iterations 5
Cbc0038I Pass  37: suminf.    0.34146 (1) obj. -174.909 iterations 1
Cbc0038I Pass  38: suminf.    1.38709 (5) obj. -157.401 iterations 14
Cbc0038I Pass  39: suminf.    1.38709 (5) obj. -157.401 iterations 3
Cbc0038I Pass  40: suminf.    0.47547 (2) obj. -157.401 iterations 5
Cbc0038I Pass  41: suminf.    0.47547 (2) obj. -157.401 iterations 0
Cbc0038I Pass  42: suminf.    0.85278 (3) obj. -157.401 iterations 5
Cbc0038I Rounding solution of -163.522 is better than previous of -141.561

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 45 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -163.522 to -173.283 (0.04 seconds)
Cbc0038I Round again with cutoff of -187.526
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  42: suminf.    0.16984 (2) obj. -212.398 iterations 0
Cbc0038I Pass  43: suminf.    0.24107 (1) obj. -187.526 iterations 2
Cbc0038I Pass  44: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  45: suminf.    0.05000 (1) obj. -203.591 iterations 19
Cbc0038I Pass  46: suminf.    0.05000 (1) obj. -203.591 iterations 0
Cbc0038I Pass  47: suminf.    0.13862 (1) obj. -187.526 iterations 1
Cbc0038I Pass  48: suminf.    0.19818 (2) obj. -187.526 iterations 7
Cbc0038I Pass  49: suminf.    0.05000 (1) obj. -200.591 iterations 3
Cbc0038I Pass  50: suminf.    0.12207 (1) obj. -187.526 iterations 1
Cbc0038I Pass  51: suminf.    0.23127 (14) obj. -187.526 iterations 14
Cbc0038I Pass  52: suminf.    0.14634 (1) obj. -187.648 iterations 5
Cbc0038I Pass  53: suminf.    0.14702 (1) obj. -187.526 iterations 1
Cbc0038I Pass  54: suminf.    0.34504 (7) obj. -187.526 iterations 8
Cbc0038I Pass  55: suminf.    0.19017 (2) obj. -187.526 iterations 3
Cbc0038I Pass  56: suminf.    0.11655 (1) obj. -187.526 iterations 7
Cbc0038I Pass  57: suminf.    0.05000 (1) obj. -199.591 iterations 1
Cbc0038I Pass  58: suminf.    0.87946 (11) obj. -194.814 iterations 4
Cbc0038I Pass  59: suminf.    0.87946 (11) obj. -194.814 iterations 0
Cbc0038I Pass  60: suminf.    0.44775 (7) obj. -187.526 iterations 19
Cbc0038I Pass  61: suminf.    0.44245 (7) obj. -187.526 iterations 1
Cbc0038I Pass  62: suminf.    0.93763 (4) obj. -187.526 iterations 7
Cbc0038I Pass  63: suminf.    0.64875 (3) obj. -187.526 iterations 3
Cbc0038I Pass  64: suminf.    0.74413 (3) obj. -187.526 iterations 3
Cbc0038I Pass  65: suminf.    0.74413 (3) obj. -187.526 iterations 0
Cbc0038I Pass  66: suminf.    0.80566 (3) obj. -187.526 iterations 2
Cbc0038I Pass  67: suminf.    1.14020 (4) obj. -187.526 iterations 3
Cbc0038I Pass  68: suminf.    1.14020 (4) obj. -187.526 iterations 1
Cbc0038I Pass  69: suminf.    0.71221 (3) obj. -187.526 iterations 3
Cbc0038I Pass  70: suminf.    0.71221 (3) obj. -187.526 iterations 0
Cbc0038I Pass  71: suminf.    0.82363 (3) obj. -187.526 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 45 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -173.283 - took 0.04 seconds
Cbc0012I Integer solution of -173.283 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 37 rows 45 columns, reduced to 18 rows 18 columns
Cbc0031I 18 added rows had average density of 11.388889
Cbc0013I At root node, 18 cuts changed objective from -220.75955 to -187.6198 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 166 row cuts average 2.9 elements, 14 column cuts (14 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 67 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0012I Integer solution of -175.28332 found by DiveCoefficient after 366 iterations and 3 nodes (0.45 seconds)
Cbc0001I Search completed - best objective -175.28332, took 398 iterations and 4 nodes (0.49 seconds)
Cbc0032I Strong branching done 66 times (503 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.50

