Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 99 (-4) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 3.23605e-05 - average 1.73051e-07, 15 fixed columns
Coin0506I Presolve 156 (-31) rows, 83 (-16) columns and 471 (-93) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 2.1791762 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Coin0511I After Postsolve, objective 31.329219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Coin0511I After Postsolve, objective 31.329219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.32921891 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 99 columns (98 integer (98 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 13.335
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.76414 iterations 78
Cbc0038I Solution found of 7.76414
Cbc0038I Relaxing continuous gives 7.76414
Cbc0038I Rounding solution of 2.34974 is better than previous of 7.76414

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 99 rows 57 columns
Cbc0038I Mini branch and bound improved solution from 2.34974 to -4.84528 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.49376
Cbc0038I Pass   2: suminf.    2.65273 (10) obj. -7.49376 iterations 22
Cbc0038I Pass   3: suminf.    2.57723 (9) obj. -7.49376 iterations 1
Cbc0038I Pass   4: suminf.    2.57723 (9) obj. -7.49376 iterations 0
Cbc0038I Pass   5: suminf.    2.60973 (8) obj. -7.49376 iterations 26
Cbc0038I Pass   6: suminf.    2.25890 (7) obj. -7.49376 iterations 1
Cbc0038I Pass   7: suminf.    1.78369 (9) obj. -7.49376 iterations 4
Cbc0038I Pass   8: suminf.    1.77770 (8) obj. -7.49376 iterations 1
Cbc0038I Pass   9: suminf.    1.48981 (6) obj. -7.49376 iterations 20
Cbc0038I Pass  10: suminf.    1.12893 (6) obj. -7.49376 iterations 2
Cbc0038I Pass  11: suminf.    1.12893 (6) obj. -7.49376 iterations 0
Cbc0038I Pass  12: suminf.    2.32723 (7) obj. -7.49376 iterations 8
Cbc0038I Pass  13: suminf.    2.14266 (6) obj. -7.49376 iterations 7
Cbc0038I Pass  14: suminf.    2.43455 (7) obj. -7.49376 iterations 5
Cbc0038I Pass  15: suminf.    2.03630 (7) obj. -7.49376 iterations 9
Cbc0038I Pass  16: suminf.    2.44493 (7) obj. -7.49376 iterations 12
Cbc0038I Pass  17: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  18: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  19: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  20: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  21: suminf.    2.44493 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  22: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  23: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  24: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  25: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  26: suminf.    2.44493 (7) obj. -7.49376 iterations 12
Cbc0038I Pass  27: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  28: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  29: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  30: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  31: suminf.    2.44493 (7) obj. -7.49376 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 103 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -4.84528 to -6.01999 (0.13 seconds)
Cbc0038I Round again with cutoff of -12.2609
Cbc0038I Pass  31: suminf.    3.96947 (18) obj. -12.2609 iterations 8
Cbc0038I Pass  32: suminf.    3.88853 (17) obj. -12.2609 iterations 1
Cbc0038I Pass  33: suminf.    3.88853 (17) obj. -12.2609 iterations 0
Cbc0038I Pass  34: suminf.    2.00158 (9) obj. -12.2609 iterations 21
Cbc0038I Pass  35: suminf.    1.96522 (8) obj. -12.2609 iterations 7
Cbc0038I Pass  36: suminf.    2.76363 (9) obj. -12.2609 iterations 23
Cbc0038I Pass  37: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  38: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  39: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  40: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  41: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  42: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  43: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  44: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  45: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  46: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  47: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  48: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  49: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  50: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  51: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  52: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  53: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  54: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  55: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  56: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  57: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  58: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  59: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  60: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 103 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -6.01999 - took 0.17 seconds
Cbc0012I Integer solution of -6.01999 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 187 rows 99 columns, reduced to 99 rows 57 columns
Cbc0031I 35 added rows had average density of 33.714286
Cbc0013I At root node, 35 cuts changed objective from -31.329219 to -23.340559 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22537 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2504 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 97.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.01999 best solution, best possible -23.340559 (1.88 seconds)
Cbc0038I Full problem 187 rows 99 columns, reduced to 31 rows 27 columns
Cbc0038I Full problem 187 rows 99 columns, reduced to 76 rows 49 columns
Cbc0010I After 144 nodes, 1 on tree, -6.01999 best solution, best possible -6.4728994 (2.58 seconds)
Cbc0001I Search completed - best objective -6.019989999999986, took 18282 iterations and 156 nodes (2.61 seconds)
Cbc0032I Strong branching done 1498 times (28239 iterations), fathomed 22 nodes and fixed 89 variables
Cbc0035I Maximum depth 32, 449 variables fixed on reduced cost
Total time (CPU seconds):       2.50   (Wallclock seconds):       2.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-64) rows, 149 (-53) columns and 2784 (-2869) elements
Clp1000I sum of infeasibilities 3.69829e-07 - average 2.64163e-09, 81 fixed columns
Coin0506I Presolve 62 (-78) rows, 68 (-81) columns and 255 (-2529) elements
Clp0006I 0  Obj -25.445804 Dual inf 2.4070376 (67)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 1.6665026 - largest nonzero change 2.78311e-05 ( 0.0016756202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value -21.054897
Clp0000I Optimal - objective value -21.054897
Coin0511I After Postsolve, objective -21.054897, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -21.054897 Dual inf 76.465901 (51)
Clp0014I Perturbing problem by 0.001% of 1.6958292 - largest nonzero change 2.7918232e-05 ( 0.0023005115%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 45.77768
Clp0000I Optimal - objective value 45.77768
Clp0000I Optimal - objective value 45.77768
Coin0511I After Postsolve, objective 45.77768, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.77768038 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 140 rows, 149 columns (149 integer (149 of which binary)) and 2786 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.0741
Cbc0038I Pass   1: suminf.    4.88851 (41) obj. -41.2403 iterations 7
Cbc0038I Pass   2: suminf.    0.96584 (13) obj. -10.8662 iterations 26
Cbc0038I Solution found of 1.16793
Cbc0038I Rounding solution of -0.573274 is better than previous of 1.16793

Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4.7404
Cbc0038I Pass   3: suminf.    4.88851 (41) obj. -41.2403 iterations 0
Cbc0038I Pass   4: suminf.    1.67229 (20) obj. -18.0689 iterations 20
Cbc0038I Pass   5: suminf.    0.67038 (10) obj. -8.16169 iterations 10
Cbc0038I Pass   6: suminf.    0.26146 (1) obj. -4.7404 iterations 13
Cbc0038I Pass   7: suminf.    0.14433 (1) obj. -5.67743 iterations 1
Cbc0038I Pass   8: suminf.    4.15868 (26) obj. -4.7404 iterations 39
Cbc0038I Pass   9: suminf.    1.80813 (20) obj. -6.64597 iterations 6
Cbc0038I Pass  10: suminf.    1.73109 (19) obj. -6.66783 iterations 1
Cbc0038I Pass  11: suminf.    1.53132 (6) obj. -4.7404 iterations 25
Cbc0038I Pass  12: suminf.    1.12014 (11) obj. -4.7404 iterations 3
Cbc0038I Pass  13: suminf.    1.41030 (7) obj. -4.7404 iterations 12
Cbc0038I Pass  14: suminf.    1.28379 (5) obj. -4.7404 iterations 7
Cbc0038I Pass  15: suminf.    0.80530 (4) obj. -4.7404 iterations 6
Cbc0038I Pass  16: suminf.    0.79334 (4) obj. -4.76774 iterations 4
Cbc0038I Pass  17: suminf.    1.32009 (10) obj. -4.7404 iterations 34
Cbc0038I Pass  18: suminf.    1.26783 (8) obj. -4.7404 iterations 11
Cbc0038I Pass  19: suminf.    0.98913 (7) obj. -4.7404 iterations 9
Cbc0038I Pass  20: suminf.    0.75524 (7) obj. -4.7404 iterations 4
Cbc0038I Pass  21: suminf.    0.98913 (7) obj. -4.7404 iterations 6
Cbc0038I Pass  22: suminf.    2.17429 (20) obj. -4.7404 iterations 30
Cbc0038I Pass  23: suminf.    1.45554 (11) obj. -4.7404 iterations 11
Cbc0038I Pass  24: suminf.    0.94253 (6) obj. -4.7404 iterations 16
Cbc0038I Pass  25: suminf.    0.67537 (6) obj. -5.27471 iterations 4
Cbc0038I Pass  26: suminf.    0.94253 (6) obj. -4.7404 iterations 5
Cbc0038I Pass  27: suminf.    1.45760 (14) obj. -4.7404 iterations 24
Cbc0038I Pass  28: suminf.    1.29853 (11) obj. -4.7404 iterations 7
Cbc0038I Pass  29: suminf.    1.00628 (5) obj. -4.7404 iterations 28
Cbc0038I Pass  30: suminf.    1.00628 (5) obj. -4.7404 iterations 1
Cbc0038I Pass  31: suminf.    0.72006 (5) obj. -4.7404 iterations 16
Cbc0038I Pass  32: suminf.    0.42619 (5) obj. -4.7404 iterations 4
Cbc0038I Rounding solution of -2.0248 is better than previous of -0.573274

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 149 columns, reduced to 56 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -2.0248 to -4.71428 (0.09 seconds)
Cbc0038I Round again with cutoff of -12.241
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.88851 (41) obj. -41.2403 iterations 0
Cbc0038I Pass  33: suminf.    0.85492 (7) obj. -12.241 iterations 36
Cbc0038I Pass  34: suminf.    0.85492 (7) obj. -12.241 iterations 0
Cbc0038I Pass  35: suminf.    1.29088 (12) obj. -12.241 iterations 14
Cbc0038I Pass  36: suminf.    1.29088 (12) obj. -12.241 iterations 3
Cbc0038I Pass  37: suminf.    1.47197 (13) obj. -12.241 iterations 18
Cbc0038I Pass  38: suminf.    1.26591 (8) obj. -12.241 iterations 6
Cbc0038I Pass  39: suminf.    1.24709 (8) obj. -12.241 iterations 10
Cbc0038I Pass  40: suminf.    1.16323 (13) obj. -12.241 iterations 2
Cbc0038I Pass  41: suminf.    2.98801 (14) obj. -12.241 iterations 10
Cbc0038I Pass  42: suminf.    1.30582 (10) obj. -12.241 iterations 17
Cbc0038I Pass  43: suminf.    2.63664 (13) obj. -12.241 iterations 11
Cbc0038I Pass  44: suminf.    1.38181 (10) obj. -12.241 iterations 11
Cbc0038I Pass  45: suminf.    2.61855 (13) obj. -12.241 iterations 11
Cbc0038I Pass  46: suminf.    2.05987 (16) obj. -12.241 iterations 30
Cbc0038I Pass  47: suminf.    1.42566 (13) obj. -12.6135 iterations 8
Cbc0038I Pass  48: suminf.    1.70181 (11) obj. -12.241 iterations 22
Cbc0038I Pass  49: suminf.    1.38271 (16) obj. -12.241 iterations 8
Cbc0038I Pass  50: suminf.    2.82058 (16) obj. -12.241 iterations 21
Cbc0038I Pass  51: suminf.    1.65865 (13) obj. -12.241 iterations 13
Cbc0038I Pass  52: suminf.    1.95525 (13) obj. -12.241 iterations 24
Cbc0038I Pass  53: suminf.    0.95892 (8) obj. -12.3943 iterations 14
Cbc0038I Pass  54: suminf.    1.11220 (8) obj. -12.241 iterations 9
Cbc0038I Pass  55: suminf.    0.91529 (8) obj. -12.438 iterations 8
Cbc0038I Pass  56: suminf.    2.63692 (17) obj. -12.241 iterations 34
Cbc0038I Pass  57: suminf.    1.83298 (16) obj. -12.241 iterations 10
Cbc0038I Pass  58: suminf.    2.92637 (17) obj. -12.241 iterations 27
Cbc0038I Pass  59: suminf.    2.92637 (17) obj. -12.241 iterations 1
Cbc0038I Pass  60: suminf.    2.90224 (17) obj. -12.241 iterations 7
Cbc0038I Pass  61: suminf.    2.90224 (17) obj. -12.241 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 149 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -4.71428 - took 0.10 seconds
Cbc0012I Integer solution of -4.714283 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 140 rows 149 columns, reduced to 34 rows 44 columns
Cbc0031I 64 added rows had average density of 51.84375
Cbc0013I At root node, 64 cuts changed objective from -42.243629 to -11.353969 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18122 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2596 row cuts average 138.7 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1081 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2084 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 441 row cuts average 74.2 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 141 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.272 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.714283 best solution, best possible -11.353969 (2.53 seconds)
Cbc0012I Integer solution of -4.940217 found by rounding after 8005 iterations and 4 nodes (3.18 seconds)
Cbc0010I After 5 nodes, 6 on tree, -4.940217 best solution, best possible -11.353969 (3.27 seconds)
Cbc0012I Integer solution of -5.103552 found by rounding after 8570 iterations and 16 nodes (3.50 seconds)
Cbc0012I Integer solution of -5.492012 found by rounding after 8610 iterations and 17 nodes (3.51 seconds)
Cbc0012I Integer solution of -5.642719 found by rounding after 8889 iterations and 25 nodes (3.58 seconds)
Cbc0016I Integer solution of -6.020069 found by strong branching after 8944 iterations and 28 nodes (3.59 seconds)
Cbc0038I Full problem 140 rows 149 columns, reduced to 6 rows 11 columns
Cbc0001I Search completed - best objective -6.020068999999985, took 11332 iterations and 96 nodes (3.87 seconds)
Cbc0032I Strong branching done 928 times (16998 iterations), fathomed 12 nodes and fixed 24 variables
Cbc0035I Maximum depth 18, 430 variables fixed on reduced cost
Total time (CPU seconds):       3.48   (Wallclock seconds):       3.90

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 99 (-4) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 3.23605e-05 - average 1.73051e-07, 15 fixed columns
Coin0506I Presolve 156 (-31) rows, 83 (-16) columns and 471 (-93) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 2.1791762 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Coin0511I After Postsolve, objective 31.329219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Coin0511I After Postsolve, objective 31.329219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.32921891 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 99 columns (98 integer (98 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 13.335
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.76414 iterations 78
Cbc0038I Solution found of 7.76414
Cbc0038I Relaxing continuous gives 7.76414
Cbc0038I Rounding solution of 2.34974 is better than previous of 7.76414

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 99 rows 57 columns
Cbc0038I Mini branch and bound improved solution from 2.34974 to -4.84528 (0.07 seconds)
Cbc0038I Round again with cutoff of -7.49376
Cbc0038I Pass   2: suminf.    2.65273 (10) obj. -7.49376 iterations 22
Cbc0038I Pass   3: suminf.    2.57723 (9) obj. -7.49376 iterations 1
Cbc0038I Pass   4: suminf.    2.57723 (9) obj. -7.49376 iterations 0
Cbc0038I Pass   5: suminf.    2.60973 (8) obj. -7.49376 iterations 26
Cbc0038I Pass   6: suminf.    2.25890 (7) obj. -7.49376 iterations 1
Cbc0038I Pass   7: suminf.    1.78369 (9) obj. -7.49376 iterations 4
Cbc0038I Pass   8: suminf.    1.77770 (8) obj. -7.49376 iterations 1
Cbc0038I Pass   9: suminf.    1.48981 (6) obj. -7.49376 iterations 20
Cbc0038I Pass  10: suminf.    1.12893 (6) obj. -7.49376 iterations 2
Cbc0038I Pass  11: suminf.    1.12893 (6) obj. -7.49376 iterations 0
Cbc0038I Pass  12: suminf.    2.32723 (7) obj. -7.49376 iterations 8
Cbc0038I Pass  13: suminf.    2.14266 (6) obj. -7.49376 iterations 7
Cbc0038I Pass  14: suminf.    2.43455 (7) obj. -7.49376 iterations 5
Cbc0038I Pass  15: suminf.    2.03630 (7) obj. -7.49376 iterations 9
Cbc0038I Pass  16: suminf.    2.44493 (7) obj. -7.49376 iterations 12
Cbc0038I Pass  17: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  18: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  19: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  20: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  21: suminf.    2.44493 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  22: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  23: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  24: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  25: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  26: suminf.    2.44493 (7) obj. -7.49376 iterations 12
Cbc0038I Pass  27: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  28: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  29: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  30: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  31: suminf.    2.44493 (7) obj. -7.49376 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 103 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -4.84528 to -6.01999 (0.14 seconds)
Cbc0038I Round again with cutoff of -12.2609
Cbc0038I Pass  31: suminf.    3.96947 (18) obj. -12.2609 iterations 8
Cbc0038I Pass  32: suminf.    3.88853 (17) obj. -12.2609 iterations 1
Cbc0038I Pass  33: suminf.    3.88853 (17) obj. -12.2609 iterations 0
Cbc0038I Pass  34: suminf.    2.00158 (9) obj. -12.2609 iterations 21
Cbc0038I Pass  35: suminf.    1.96522 (8) obj. -12.2609 iterations 7
Cbc0038I Pass  36: suminf.    2.76363 (9) obj. -12.2609 iterations 23
Cbc0038I Pass  37: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  38: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  39: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  40: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  41: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  42: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  43: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  44: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  45: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  46: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  47: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  48: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  49: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  50: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  51: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  52: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  53: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  54: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  55: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  56: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  57: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  58: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  59: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  60: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 103 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -6.01999 - took 0.18 seconds
Cbc0012I Integer solution of -6.01999 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 187 rows 99 columns, reduced to 99 rows 57 columns
Cbc0031I 35 added rows had average density of 33.714286
Cbc0013I At root node, 35 cuts changed objective from -31.329219 to -23.340559 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22537 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2504 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 97.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.01999 best solution, best possible -23.340559 (1.89 seconds)
Cbc0038I Full problem 187 rows 99 columns, reduced to 31 rows 27 columns
Cbc0038I Full problem 187 rows 99 columns, reduced to 76 rows 49 columns
Cbc0010I After 134 nodes, 5 on tree, -6.01999 best solution, best possible -23.340559 (2.59 seconds)
Cbc0001I Search completed - best objective -6.019989999999986, took 18282 iterations and 156 nodes (2.64 seconds)
Cbc0032I Strong branching done 1498 times (28239 iterations), fathomed 22 nodes and fixed 89 variables
Cbc0035I Maximum depth 32, 449 variables fixed on reduced cost
Total time (CPU seconds):       2.54   (Wallclock seconds):       2.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-65) rows, 149 (-54) columns and 2784 (-2870) elements
Clp1000I sum of infeasibilities 3.69829e-07 - average 2.64163e-09, 81 fixed columns
Coin0506I Presolve 62 (-78) rows, 68 (-81) columns and 255 (-2529) elements
Clp0006I 0  Obj -25.445804 Dual inf 2.4070376 (67)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 1.6665026 - largest nonzero change 2.78311e-05 ( 0.0016756202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value -21.054897
Clp0000I Optimal - objective value -21.054897
Coin0511I After Postsolve, objective -21.054897, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -21.054897 Dual inf 76.465901 (51)
Clp0014I Perturbing problem by 0.001% of 1.6958292 - largest nonzero change 2.7918232e-05 ( 0.0023005115%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 45.77768
Clp0000I Optimal - objective value 45.77768
Clp0000I Optimal - objective value 45.77768
Coin0511I After Postsolve, objective 45.77768, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.77768038 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 140 rows, 149 columns (149 integer (149 of which binary)) and 2786 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.0741
Cbc0038I Pass   1: suminf.    4.88851 (41) obj. -41.2403 iterations 7
Cbc0038I Pass   2: suminf.    0.96584 (13) obj. -10.8662 iterations 26
Cbc0038I Solution found of 1.16793
Cbc0038I Rounding solution of -0.573274 is better than previous of 1.16793

Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4.7404
Cbc0038I Pass   3: suminf.    4.88851 (41) obj. -41.2403 iterations 0
Cbc0038I Pass   4: suminf.    1.67229 (20) obj. -18.0689 iterations 20
Cbc0038I Pass   5: suminf.    0.67038 (10) obj. -8.16169 iterations 10
Cbc0038I Pass   6: suminf.    0.26146 (1) obj. -4.7404 iterations 13
Cbc0038I Pass   7: suminf.    0.14433 (1) obj. -5.67743 iterations 1
Cbc0038I Pass   8: suminf.    4.15868 (26) obj. -4.7404 iterations 39
Cbc0038I Pass   9: suminf.    1.80813 (20) obj. -6.64597 iterations 6
Cbc0038I Pass  10: suminf.    1.73109 (19) obj. -6.66783 iterations 1
Cbc0038I Pass  11: suminf.    1.53132 (6) obj. -4.7404 iterations 25
Cbc0038I Pass  12: suminf.    1.12014 (11) obj. -4.7404 iterations 3
Cbc0038I Pass  13: suminf.    1.41030 (7) obj. -4.7404 iterations 12
Cbc0038I Pass  14: suminf.    1.28379 (5) obj. -4.7404 iterations 7
Cbc0038I Pass  15: suminf.    0.80530 (4) obj. -4.7404 iterations 6
Cbc0038I Pass  16: suminf.    0.79334 (4) obj. -4.76774 iterations 4
Cbc0038I Pass  17: suminf.    1.32009 (10) obj. -4.7404 iterations 34
Cbc0038I Pass  18: suminf.    1.26783 (8) obj. -4.7404 iterations 11
Cbc0038I Pass  19: suminf.    0.98913 (7) obj. -4.7404 iterations 9
Cbc0038I Pass  20: suminf.    0.75524 (7) obj. -4.7404 iterations 4
Cbc0038I Pass  21: suminf.    0.98913 (7) obj. -4.7404 iterations 6
Cbc0038I Pass  22: suminf.    2.17429 (20) obj. -4.7404 iterations 30
Cbc0038I Pass  23: suminf.    1.45554 (11) obj. -4.7404 iterations 11
Cbc0038I Pass  24: suminf.    0.94253 (6) obj. -4.7404 iterations 16
Cbc0038I Pass  25: suminf.    0.67537 (6) obj. -5.27471 iterations 4
Cbc0038I Pass  26: suminf.    0.94253 (6) obj. -4.7404 iterations 5
Cbc0038I Pass  27: suminf.    1.45760 (14) obj. -4.7404 iterations 24
Cbc0038I Pass  28: suminf.    1.29853 (11) obj. -4.7404 iterations 7
Cbc0038I Pass  29: suminf.    1.00628 (5) obj. -4.7404 iterations 28
Cbc0038I Pass  30: suminf.    1.00628 (5) obj. -4.7404 iterations 1
Cbc0038I Pass  31: suminf.    0.72006 (5) obj. -4.7404 iterations 16
Cbc0038I Pass  32: suminf.    0.42619 (5) obj. -4.7404 iterations 4
Cbc0038I Rounding solution of -2.0248 is better than previous of -0.573274

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 149 columns, reduced to 56 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -2.0248 to -4.71428 (0.09 seconds)
Cbc0038I Round again with cutoff of -12.241
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.88851 (41) obj. -41.2403 iterations 0
Cbc0038I Pass  33: suminf.    0.85492 (7) obj. -12.241 iterations 36
Cbc0038I Pass  34: suminf.    0.85492 (7) obj. -12.241 iterations 0
Cbc0038I Pass  35: suminf.    1.29088 (12) obj. -12.241 iterations 14
Cbc0038I Pass  36: suminf.    1.29088 (12) obj. -12.241 iterations 3
Cbc0038I Pass  37: suminf.    1.47197 (13) obj. -12.241 iterations 18
Cbc0038I Pass  38: suminf.    1.26591 (8) obj. -12.241 iterations 6
Cbc0038I Pass  39: suminf.    1.24709 (8) obj. -12.241 iterations 10
Cbc0038I Pass  40: suminf.    1.16323 (13) obj. -12.241 iterations 2
Cbc0038I Pass  41: suminf.    2.98801 (14) obj. -12.241 iterations 10
Cbc0038I Pass  42: suminf.    1.30582 (10) obj. -12.241 iterations 17
Cbc0038I Pass  43: suminf.    2.63664 (13) obj. -12.241 iterations 11
Cbc0038I Pass  44: suminf.    1.38181 (10) obj. -12.241 iterations 11
Cbc0038I Pass  45: suminf.    2.61855 (13) obj. -12.241 iterations 11
Cbc0038I Pass  46: suminf.    2.05987 (16) obj. -12.241 iterations 30
Cbc0038I Pass  47: suminf.    1.42566 (13) obj. -12.6135 iterations 8
Cbc0038I Pass  48: suminf.    1.70181 (11) obj. -12.241 iterations 22
Cbc0038I Pass  49: suminf.    1.38271 (16) obj. -12.241 iterations 8
Cbc0038I Pass  50: suminf.    2.82058 (16) obj. -12.241 iterations 21
Cbc0038I Pass  51: suminf.    1.65865 (13) obj. -12.241 iterations 13
Cbc0038I Pass  52: suminf.    1.95525 (13) obj. -12.241 iterations 24
Cbc0038I Pass  53: suminf.    0.95892 (8) obj. -12.3943 iterations 14
Cbc0038I Pass  54: suminf.    1.11220 (8) obj. -12.241 iterations 9
Cbc0038I Pass  55: suminf.    0.91529 (8) obj. -12.438 iterations 8
Cbc0038I Pass  56: suminf.    2.63692 (17) obj. -12.241 iterations 34
Cbc0038I Pass  57: suminf.    1.83298 (16) obj. -12.241 iterations 10
Cbc0038I Pass  58: suminf.    2.92637 (17) obj. -12.241 iterations 27
Cbc0038I Pass  59: suminf.    2.92637 (17) obj. -12.241 iterations 1
Cbc0038I Pass  60: suminf.    2.90224 (17) obj. -12.241 iterations 7
Cbc0038I Pass  61: suminf.    2.90224 (17) obj. -12.241 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 149 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -4.71428 - took 0.11 seconds
Cbc0012I Integer solution of -4.714283 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 140 rows 149 columns, reduced to 34 rows 44 columns
Cbc0031I 64 added rows had average density of 51.84375
Cbc0013I At root node, 64 cuts changed objective from -42.243629 to -11.353969 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18122 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2596 row cuts average 138.7 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1081 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2084 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 441 row cuts average 74.2 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 141 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.278 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.714283 best solution, best possible -11.353969 (2.53 seconds)
Cbc0012I Integer solution of -4.940217 found by rounding after 8005 iterations and 4 nodes (3.16 seconds)
Cbc0010I After 5 nodes, 6 on tree, -4.940217 best solution, best possible -11.353969 (3.25 seconds)
Cbc0012I Integer solution of -5.103552 found by rounding after 8570 iterations and 16 nodes (3.46 seconds)
Cbc0012I Integer solution of -5.492012 found by rounding after 8610 iterations and 17 nodes (3.46 seconds)
Cbc0012I Integer solution of -5.642719 found by rounding after 8889 iterations and 25 nodes (3.53 seconds)
Cbc0016I Integer solution of -6.020069 found by strong branching after 8944 iterations and 28 nodes (3.54 seconds)
Cbc0038I Full problem 140 rows 149 columns, reduced to 6 rows 11 columns
Cbc0001I Search completed - best objective -6.020068999999985, took 11332 iterations and 96 nodes (3.81 seconds)
Cbc0032I Strong branching done 928 times (16998 iterations), fathomed 12 nodes and fixed 24 variables
Cbc0035I Maximum depth 18, 430 variables fixed on reduced cost
Total time (CPU seconds):       3.44   (Wallclock seconds):       3.84

