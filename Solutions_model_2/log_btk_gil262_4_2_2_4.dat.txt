Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 493 (-34) rows, 261 (-3) columns and 1477 (-68) elements
Clp1000I sum of infeasibilities 1.75998e-05 - average 3.56993e-08, 51 fixed columns
Coin0506I Presolve 392 (-101) rows, 210 (-51) columns and 1177 (-300) elements
Clp0029I End of values pass after 210 iterations
Clp0014I Perturbing problem by 0.001% of 2.0234206 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Coin0511I After Postsolve, objective 165.6517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Coin0511I After Postsolve, objective 165.6517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 165.6516985 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 493 rows, 261 columns (260 integer (260 of which binary)) and 1477 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.360%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 93 integers unsatisfied sum - 12.4654
Cbc0038I Solution found of -4.28348
Cbc0038I Relaxing continuous gives -20.3044
Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 167 rows 94 columns
Cbc0038I Mini branch and bound improved solution from -20.3044 to -56.6184 (0.08 seconds)
Cbc0038I Round again with cutoff of -67.5219
Cbc0038I Pass   1: suminf.    2.75151 (58) obj. -67.5219 iterations 181
Cbc0038I Pass   2: suminf.    1.56247 (5) obj. -67.5334 iterations 80
Cbc0038I Pass   3: suminf.    0.68671 (3) obj. -67.5219 iterations 12
Cbc0038I Pass   4: suminf.    0.46579 (3) obj. -67.5219 iterations 2
Cbc0038I Pass   5: suminf.    1.10220 (4) obj. -67.5219 iterations 15
Cbc0038I Pass   6: suminf.    1.05369 (3) obj. -67.5219 iterations 1
Cbc0038I Pass   7: suminf.    0.04082 (1) obj. -71.2135 iterations 9
Cbc0038I Pass   8: suminf.    0.65468 (2) obj. -67.5219 iterations 2
Cbc0038I Pass   9: suminf.    0.35336 (2) obj. -67.5219 iterations 1
Cbc0038I Pass  10: suminf.    2.46396 (10) obj. -67.5219 iterations 52
Cbc0038I Pass  11: suminf.    1.70658 (6) obj. -67.5219 iterations 32
Cbc0038I Pass  12: suminf.    0.38636 (4) obj. -67.5219 iterations 24
Cbc0038I Pass  13: suminf.    0.29717 (1) obj. -67.5219 iterations 2
Cbc0038I Pass  14: suminf.    0.48421 (1) obj. -70.5882 iterations 3
Cbc0038I Pass  15: suminf.    4.10353 (13) obj. -67.5219 iterations 36
Cbc0038I Pass  16: suminf.    2.20119 (11) obj. -67.5219 iterations 20
Cbc0038I Pass  17: suminf.    2.20119 (11) obj. -67.5219 iterations 2
Cbc0038I Pass  18: suminf.    1.49988 (5) obj. -67.5219 iterations 30
Cbc0038I Pass  19: suminf.    0.46553 (2) obj. -67.5219 iterations 6
Cbc0038I Pass  20: suminf.    0.15285 (3) obj. -67.5219 iterations 2
Cbc0038I Pass  21: suminf.    1.17721 (3) obj. -67.5219 iterations 7
Cbc0038I Pass  22: suminf.    0.20163 (1) obj. -67.5219 iterations 3
Cbc0038I Pass  23: suminf.    0.15294 (1) obj. -67.5219 iterations 3
Cbc0038I Pass  24: suminf.    2.44296 (10) obj. -67.5219 iterations 46
Cbc0038I Pass  25: suminf.    1.90108 (9) obj. -67.5219 iterations 23
Cbc0038I Pass  26: suminf.    1.63752 (5) obj. -67.5219 iterations 25
Cbc0038I Pass  27: suminf.    0.86885 (6) obj. -67.5219 iterations 13
Cbc0038I Pass  28: suminf.    1.40991 (4) obj. -67.5219 iterations 15
Cbc0038I Pass  29: suminf.    1.27516 (5) obj. -67.5219 iterations 14
Cbc0038I Pass  30: suminf.    1.27516 (5) obj. -67.5219 iterations 0
Cbc0038I Rounding solution of -76.4042 is better than previous of -56.6184

Cbc0038I Before mini branch and bound, 125 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 246 rows 136 columns - 6 fixed gives 200, 130 - ok now
Cbc0038I Full problem 493 rows 261 columns, reduced to 196 rows 128 columns
Cbc0038I Mini branch and bound improved solution from -76.4042 to -77.8384 (0.15 seconds)
Cbc0038I Round again with cutoff of -95.4012
Cbc0038I Pass  30: suminf.    4.37612 (58) obj. -95.4012 iterations 0
Cbc0038I Pass  31: suminf.    1.79736 (6) obj. -95.4012 iterations 81
Cbc0038I Pass  32: suminf.    1.24349 (6) obj. -95.4012 iterations 8
Cbc0038I Pass  33: suminf.    1.85193 (7) obj. -95.4012 iterations 22
Cbc0038I Pass  34: suminf.    1.79116 (10) obj. -95.4012 iterations 9
Cbc0038I Pass  35: suminf.    3.82786 (10) obj. -95.4012 iterations 23
Cbc0038I Pass  36: suminf.    3.22473 (10) obj. -95.4012 iterations 11
Cbc0038I Pass  37: suminf.    2.51900 (10) obj. -95.4012 iterations 28
Cbc0038I Pass  38: suminf.    1.89539 (7) obj. -95.4012 iterations 12
Cbc0038I Pass  39: suminf.    1.84296 (7) obj. -95.4012 iterations 3
Cbc0038I Pass  40: suminf.    2.37359 (9) obj. -95.4012 iterations 19
Cbc0038I Pass  41: suminf.    2.09382 (8) obj. -95.4012 iterations 5
Cbc0038I Pass  42: suminf.    2.09382 (8) obj. -95.4012 iterations 2
Cbc0038I Pass  43: suminf.    3.19913 (8) obj. -95.4012 iterations 17
Cbc0038I Pass  44: suminf.    2.11641 (9) obj. -95.4012 iterations 10
Cbc0038I Pass  45: suminf.    2.09788 (10) obj. -95.4012 iterations 4
Cbc0038I Pass  46: suminf.    3.65893 (10) obj. -95.4012 iterations 24
Cbc0038I Pass  47: suminf.    3.04050 (9) obj. -95.4012 iterations 1
Cbc0038I Pass  48: suminf.    2.92007 (9) obj. -95.4012 iterations 9
Cbc0038I Pass  49: suminf.    2.90951 (9) obj. -95.4012 iterations 7
Cbc0038I Pass  50: suminf.    2.86644 (9) obj. -95.4012 iterations 16
Cbc0038I Pass  51: suminf.    2.11641 (9) obj. -95.4012 iterations 18
Cbc0038I Pass  52: suminf.    2.09788 (10) obj. -95.4012 iterations 7
Cbc0038I Pass  53: suminf.    3.65893 (10) obj. -95.4012 iterations 24
Cbc0038I Pass  54: suminf.    3.04050 (9) obj. -95.4012 iterations 1
Cbc0038I Pass  55: suminf.    2.92007 (9) obj. -95.4012 iterations 9
Cbc0038I Pass  56: suminf.    2.90951 (9) obj. -95.4012 iterations 7
Cbc0038I Pass  57: suminf.    2.86644 (9) obj. -95.4012 iterations 16
Cbc0038I Pass  58: suminf.    2.11641 (9) obj. -95.4012 iterations 18
Cbc0038I Pass  59: suminf.    2.09788 (10) obj. -95.4012 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 223 rows 123 columns
Cbc0038I Mini branch and bound improved solution from -77.8384 to -83.9253 (0.27 seconds)
Cbc0038I Round again with cutoff of -116.476
Cbc0038I Pass  59: suminf.    5.60424 (58) obj. -116.476 iterations 0
Cbc0038I Pass  60: suminf.    5.84852 (15) obj. -116.476 iterations 81
Cbc0038I Pass  61: suminf.    4.31656 (15) obj. -116.476 iterations 21
Cbc0038I Pass  62: suminf.    4.01356 (14) obj. -116.476 iterations 7
Cbc0038I Pass  63: suminf.    4.01356 (14) obj. -116.476 iterations 0
Cbc0038I Pass  64: suminf.    5.33518 (15) obj. -116.476 iterations 41
Cbc0038I Pass  65: suminf.    4.59024 (16) obj. -116.476 iterations 9
Cbc0038I Pass  66: suminf.    5.63752 (22) obj. -116.476 iterations 39
Cbc0038I Pass  67: suminf.    4.84939 (14) obj. -116.476 iterations 13
Cbc0038I Pass  68: suminf.    4.75895 (15) obj. -116.476 iterations 6
Cbc0038I Pass  69: suminf.    6.11020 (17) obj. -116.476 iterations 46
Cbc0038I Pass  70: suminf.    5.21176 (14) obj. -116.476 iterations 15
Cbc0038I Pass  71: suminf.    4.95280 (14) obj. -116.476 iterations 6
Cbc0038I Pass  72: suminf.    5.04548 (17) obj. -116.476 iterations 28
Cbc0038I Pass  73: suminf.    4.45842 (15) obj. -116.476 iterations 9
Cbc0038I Pass  74: suminf.    4.45055 (14) obj. -116.476 iterations 6
Cbc0038I Pass  75: suminf.    5.26269 (18) obj. -116.476 iterations 47
Cbc0038I Pass  76: suminf.    4.78735 (22) obj. -116.476 iterations 20
Cbc0038I Pass  77: suminf.    5.77463 (19) obj. -116.476 iterations 36
Cbc0038I Pass  78: suminf.    4.88900 (18) obj. -116.476 iterations 18
Cbc0038I Pass  79: suminf.    4.82026 (16) obj. -116.476 iterations 7
Cbc0038I Pass  80: suminf.    4.98583 (17) obj. -116.476 iterations 41
Cbc0038I Pass  81: suminf.    4.17143 (14) obj. -116.476 iterations 13
Cbc0038I Pass  82: suminf.    4.71956 (15) obj. -116.476 iterations 30
Cbc0038I Pass  83: suminf.    4.52899 (15) obj. -116.476 iterations 7
Cbc0038I Pass  84: suminf.    5.75210 (16) obj. -116.476 iterations 23
Cbc0038I Pass  85: suminf.    5.64048 (17) obj. -116.476 iterations 5
Cbc0038I Pass  86: suminf.    5.62153 (16) obj. -116.476 iterations 3
Cbc0038I Pass  87: suminf.    6.13184 (15) obj. -116.476 iterations 21
Cbc0038I Pass  88: suminf.    5.38708 (16) obj. -116.476 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 223 rows 123 columns
Cbc0038I Mini branch and bound did not improve solution (0.40 seconds)
Cbc0038I After 0.40 seconds - Feasibility pump exiting with objective of -83.9253 - took 0.37 seconds
Cbc0012I Integer solution of -83.92534 found by feasibility pump after 0 iterations and 0 nodes (0.40 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 167 rows 94 columns
Cbc0012I Integer solution of -83.98731 found by RINS after 0 iterations and 0 nodes (0.47 seconds)
Cbc0031I 42 added rows had average density of 171.2381
Cbc0013I At root node, 42 cuts changed objective from -165.6517 to -153.78614 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44733 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.519 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3844 row cuts average 256.4 elements, 0 column cuts (0 active)  in 0.508 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.629 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 256 row cuts average 251.6 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -83.98731 best solution, best possible -153.78614 (5.39 seconds)
Cbc0010I After 9 nodes, 10 on tree, -83.98731 best solution, best possible -153.78614 (6.10 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 26 rows 23 columns
Cbc0012I Integer solution of -86.47684 found by RINS after 20442 iterations and 41 nodes (6.48 seconds)
Cbc0010I After 73 nodes, 10 on tree, -86.47684 best solution, best possible -153.78614 (6.82 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 179 rows 100 columns
Cbc0012I Integer solution of -87.45847 found by RINS after 23530 iterations and 91 nodes (7.12 seconds)
Cbc0012I Integer solution of -88.62487 found by rounding after 24982 iterations and 116 nodes (7.33 seconds)
Cbc0010I After 150 nodes, 20 on tree, -88.62487 best solution, best possible -153.78614 (7.52 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -90.19988 found by RINS after 29182 iterations and 200 nodes (7.80 seconds)
Cbc0001I Search completed - best objective -90.19988000000001, took 33248 iterations and 294 nodes (8.13 seconds)
Cbc0032I Strong branching done 3060 times (66532 iterations), fathomed 33 nodes and fixed 171 variables
Cbc0035I Maximum depth 75, 2103 variables fixed on reduced cost
Total time (CPU seconds):       7.98   (Wallclock seconds):       8.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 343 (-183) rows, 369 (-155) columns and 15821 (-19915) elements
Clp1000I sum of infeasibilities 6.92101e-06 - average 2.01779e-08, 154 fixed columns
Coin0506I Presolve 188 (-155) rows, 210 (-159) columns and 5863 (-9958) elements
Clp0006I 0  Obj 314.75507 Dual inf 28.934495 (210)
Clp0029I End of values pass after 210 iterations
Clp0014I Perturbing problem by 0.001% of 2.4265145 - largest nonzero change 2.2544711e-05 ( 0.0016580886%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 334.5408
Clp0000I Optimal - objective value 334.5408
Coin0511I After Postsolve, objective 334.5408, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 334.5408 Dual inf 132.02602 (4)
Clp0014I Perturbing problem by 0.001% of 1.9094177 - largest nonzero change 2.7392809e-05 ( 0.0026062425%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 334.5408
Clp0000I Optimal - objective value 334.5408
Clp0000I Optimal - objective value 334.5408
Coin0511I After Postsolve, objective 334.5408, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 334.5408043 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.08

Starting MIP optimization
Cgl0004I processed model has 345 rows, 372 columns (372 integer (372 of which binary)) and 15937 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.582%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 97 integers unsatisfied sum - 5.3127
Cbc0038I Pass   1: suminf.    4.84485 (96) obj. -329.248 iterations 11
Cbc0038I Pass   2: suminf.    4.05766 (84) obj. -307.723 iterations 12
Cbc0038I Pass   3: suminf.    3.36999 (72) obj. -259.788 iterations 12
Cbc0038I Pass   4: suminf.    2.13215 (48) obj. -232.294 iterations 24
Cbc0038I Pass   5: suminf.    0.91784 (22) obj. -205.602 iterations 26
Cbc0038I Pass   6: suminf.    0.05770 (2) obj. -185.505 iterations 20
Cbc0038I Solution found of -157.755
Cbc0038I Rounding solution of -176.188 is better than previous of -157.755

Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -192.024
Cbc0038I Pass   7: suminf.    4.84485 (96) obj. -329.248 iterations 0
Cbc0038I Pass   8: suminf.    3.81461 (80) obj. -269.232 iterations 16
Cbc0038I Pass   9: suminf.    2.83645 (62) obj. -245.59 iterations 18
Cbc0038I Pass  10: suminf.    1.84337 (42) obj. -226.583 iterations 20
Cbc0038I Pass  11: suminf.    0.69452 (17) obj. -200.825 iterations 25
Cbc0038I Pass  12: suminf.    0.27743 (6) obj. -192.024 iterations 14
Cbc0038I Pass  13: suminf.    0.06991 (2) obj. -192.024 iterations 10
Cbc0038I Pass  14: suminf.    0.22887 (2) obj. -192.024 iterations 7
Cbc0038I Pass  15: suminf.    1.62031 (22) obj. -192.024 iterations 35
Cbc0038I Pass  16: suminf.    1.34881 (17) obj. -197.568 iterations 14
Cbc0038I Pass  17: suminf.    0.86123 (4) obj. -192.024 iterations 31
Cbc0038I Pass  18: suminf.    0.86123 (4) obj. -192.024 iterations 0
Cbc0038I Pass  19: suminf.    0.89694 (3) obj. -192.024 iterations 6
Cbc0038I Pass  20: suminf.    0.07056 (2) obj. -192.024 iterations 8
Cbc0038I Pass  21: suminf.    0.39454 (2) obj. -192.024 iterations 6
Cbc0038I Pass  22: suminf.    1.70402 (22) obj. -192.024 iterations 64
Cbc0038I Pass  23: suminf.    0.82181 (19) obj. -192.024 iterations 13
Cbc0038I Pass  24: suminf.    0.96727 (11) obj. -192.024 iterations 51
Cbc0038I Pass  25: suminf.    0.96727 (11) obj. -192.024 iterations 0
Cbc0038I Pass  26: suminf.    0.91498 (4) obj. -192.024 iterations 19
Cbc0038I Pass  27: suminf.    0.43078 (3) obj. -193.063 iterations 5
Cbc0038I Pass  28: suminf.    0.49029 (3) obj. -192.024 iterations 11
Cbc0038I Pass  29: suminf.    1.25536 (20) obj. -192.024 iterations 67
Cbc0038I Pass  30: suminf.    1.14145 (16) obj. -200.748 iterations 17
Cbc0038I Pass  31: suminf.    1.72986 (6) obj. -192.024 iterations 32
Cbc0038I Pass  32: suminf.    1.72986 (6) obj. -192.024 iterations 0
Cbc0038I Pass  33: suminf.    1.20158 (5) obj. -192.024 iterations 7
Cbc0038I Pass  34: suminf.    0.50164 (2) obj. -192.024 iterations 45
Cbc0038I Pass  35: suminf.    0.06130 (1) obj. -202.508 iterations 2
Cbc0038I Pass  36: suminf.    0.35253 (1) obj. -192.024 iterations 1
Cbc0038I Rounding solution of -178.782 is better than previous of -176.188

Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 372 columns, reduced to 110 rows 124 columns - 31 fixed gives 78, 92 - ok now
Cbc0038I Full problem 345 rows 372 columns, reduced to 8 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I Round again with cutoff of -220.527
Cbc0038I Pass  36: suminf.    4.84485 (96) obj. -329.248 iterations 0
Cbc0038I Pass  37: suminf.    3.26205 (70) obj. -256.003 iterations 26
Cbc0038I Pass  38: suminf.    2.63050 (58) obj. -241.796 iterations 12
Cbc0038I Pass  39: suminf.    1.53590 (35) obj. -220.527 iterations 25
Cbc0038I Pass  40: suminf.    1.06904 (25) obj. -241.308 iterations 11
Cbc0038I Pass  41: suminf.    0.38442 (4) obj. -220.527 iterations 31
Cbc0038I Pass  42: suminf.    0.23641 (3) obj. -220.527 iterations 7
Cbc0038I Pass  43: suminf.    0.54204 (3) obj. -220.527 iterations 4
Cbc0038I Pass  44: suminf.    2.34106 (22) obj. -220.527 iterations 41
Cbc0038I Pass  45: suminf.    1.72344 (23) obj. -220.527 iterations 24
Cbc0038I Pass  46: suminf.    0.79459 (7) obj. -220.527 iterations 37
Cbc0038I Pass  47: suminf.    0.73327 (7) obj. -220.527 iterations 11
Cbc0038I Pass  48: suminf.    0.78626 (4) obj. -220.527 iterations 17
Cbc0038I Pass  49: suminf.    0.36091 (3) obj. -222.439 iterations 4
Cbc0038I Pass  50: suminf.    0.82656 (5) obj. -220.527 iterations 33
Cbc0038I Pass  51: suminf.    1.40031 (24) obj. -220.527 iterations 59
Cbc0038I Pass  52: suminf.    1.40031 (24) obj. -220.527 iterations 15
Cbc0038I Pass  53: suminf.    1.16340 (8) obj. -220.527 iterations 64
Cbc0038I Pass  54: suminf.    1.16340 (8) obj. -220.527 iterations 5
Cbc0038I Pass  55: suminf.    1.10116 (6) obj. -220.527 iterations 15
Cbc0038I Pass  56: suminf.    1.10116 (6) obj. -220.527 iterations 3
Cbc0038I Pass  57: suminf.    1.25570 (6) obj. -220.527 iterations 27
Cbc0038I Pass  58: suminf.    1.07121 (5) obj. -220.527 iterations 15
Cbc0038I Pass  59: suminf.    0.99268 (5) obj. -220.527 iterations 3
Cbc0038I Pass  60: suminf.    0.72204 (4) obj. -220.527 iterations 5
Cbc0038I Pass  61: suminf.    0.59849 (4) obj. -220.527 iterations 2
Cbc0038I Pass  62: suminf.    0.80832 (4) obj. -220.527 iterations 4
Cbc0038I Pass  63: suminf.    1.77423 (26) obj. -220.527 iterations 60
Cbc0038I Pass  64: suminf.    1.27234 (26) obj. -232.6 iterations 23
Cbc0038I Pass  65: suminf.    1.98347 (21) obj. -220.527 iterations 18
Cbc0038I Rounding solution of -180.379 is better than previous of -178.782

Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 372 columns, reduced to 111 rows 127 columns - 29 fixed gives 80, 97 - ok now
Cbc0038I Full problem 345 rows 372 columns, reduced to 9 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -180.379 to -180.407 (0.27 seconds)
Cbc0038I Round again with cutoff of -254.731
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  65: suminf.    4.84485 (96) obj. -329.248 iterations 0
Cbc0038I Pass  66: suminf.    3.75778 (79) obj. -268.289 iterations 17
Cbc0038I Pass  67: suminf.    2.91688 (56) obj. -254.731 iterations 25
Cbc0038I Pass  68: suminf.    1.95125 (30) obj. -254.731 iterations 33
Cbc0038I Pass  69: suminf.    1.41631 (30) obj. -254.731 iterations 3
Cbc0038I Pass  70: suminf.    1.78421 (24) obj. -254.731 iterations 14
Cbc0038I Pass  71: suminf.    1.25030 (24) obj. -254.731 iterations 3
Cbc0038I Pass  72: suminf.    1.32696 (15) obj. -254.731 iterations 29
Cbc0038I Pass  73: suminf.    1.03052 (15) obj. -254.731 iterations 5
Cbc0038I Pass  74: suminf.    1.25522 (15) obj. -254.731 iterations 16
Cbc0038I Pass  75: suminf.    1.15149 (15) obj. -254.731 iterations 4
Cbc0038I Pass  76: suminf.    1.17201 (14) obj. -254.731 iterations 11
Cbc0038I Pass  77: suminf.    2.15180 (29) obj. -254.731 iterations 44
Cbc0038I Pass  78: suminf.    1.56828 (31) obj. -254.731 iterations 29
Cbc0038I Pass  79: suminf.    2.16889 (19) obj. -254.731 iterations 31
Cbc0038I Pass  80: suminf.    1.58997 (21) obj. -254.731 iterations 4
Cbc0038I Pass  81: suminf.    1.06660 (18) obj. -254.731 iterations 7
Cbc0038I Pass  82: suminf.    1.24678 (16) obj. -254.731 iterations 19
Cbc0038I Pass  83: suminf.    1.06016 (16) obj. -254.731 iterations 4
Cbc0038I Pass  84: suminf.    1.06196 (15) obj. -254.731 iterations 12
Cbc0038I Pass  85: suminf.    2.32504 (29) obj. -254.731 iterations 50
Cbc0038I Pass  86: suminf.    2.32504 (29) obj. -254.731 iterations 8
Cbc0038I Pass  87: suminf.    1.28501 (16) obj. -254.731 iterations 42
Cbc0038I Pass  88: suminf.    1.28501 (16) obj. -254.731 iterations 1
Cbc0038I Pass  89: suminf.    1.56773 (16) obj. -254.731 iterations 11
Cbc0038I Pass  90: suminf.    1.07246 (16) obj. -254.731 iterations 6
Cbc0038I Pass  91: suminf.    1.38810 (16) obj. -254.731 iterations 10
Cbc0038I Pass  92: suminf.    1.98960 (27) obj. -254.731 iterations 50
Cbc0038I Pass  93: suminf.    1.54586 (26) obj. -254.731 iterations 12
Cbc0038I Pass  94: suminf.    1.37497 (22) obj. -254.731 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 256 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 372 columns, reduced to 8 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -180.407 - took 0.24 seconds
Cbc0012I Integer solution of -180.40736 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 345 rows 372 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -189.65613 found by DiveCoefficient after 592 iterations and 0 nodes (0.96 seconds)
Cbc0031I 110 added rows had average density of 24.009091
Cbc0013I At root node, 110 cuts changed objective from -334.5408 to -196.83107 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 2501 row cuts average 2.4 elements, 21 column cuts (21 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 248.5 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 210 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 401 row cuts average 30.6 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 241.4 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 49.1 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -189.65613 best solution, best possible -196.83107 (1.16 seconds)
Cbc0012I Integer solution of -189.82694 found by DiveCoefficient after 628 iterations and 1 nodes (1.25 seconds)
Cbc0012I Integer solution of -190.78604 found by rounding after 899 iterations and 9 nodes (1.61 seconds)
Cbc0010I After 20 nodes, 11 on tree, -190.78604 best solution, best possible -196.83107 (1.89 seconds)
Cbc0038I Full problem 345 rows 372 columns, reduced to 2 rows 6 columns
Cbc0038I Full problem 455 rows 372 columns, reduced to 187 rows 210 columns
Cbc0044I Reduced cost fixing - 187 rows, 210 columns - restarting search
Cbc0012I Integer solution of -190.78604 found by Previous solution after 0 iterations and 0 nodes (2.60 seconds)
Cbc0038I Full problem 187 rows 210 columns, reduced to 102 rows 109 columns - 27 fixed gives 78, 82 - ok now
Cbc0031I 108 added rows had average density of 11.37037
Cbc0013I At root node, 108 cuts changed objective from -320.17603 to -196.34021 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 1763 row cuts average 2.2 elements, 7 column cuts (7 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 116.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 133 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 265 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 65 row cuts average 96.5 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 167 row cuts average 13.1 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -190.78604 best solution, best possible -196.11204 (3.06 seconds)
Cbc0012I Integer solution of -191.42702 found by DiveCoefficient after 699 iterations and 2 nodes (3.08 seconds)
Cbc0012I Integer solution of -194.90646 found by DiveCoefficient after 777 iterations and 6 nodes (3.12 seconds)
Cbc0001I Search completed - best objective -194.90646, took 976 iterations and 14 nodes (3.14 seconds)
Cbc0032I Strong branching done 194 times (2362 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 6, 72 variables fixed on reduced cost
Cbc0038I Probing was tried 23 times and created 1790 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
Cbc0038I Gomory was tried 23 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I Knapsack was tried 23 times and created 53 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I Clique was tried 23 times and created 139 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I OddWheel was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Cbc0038I MixedIntegerRounding2 was tried 23 times and created 273 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 23 times and created 77 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
Cbc0038I ZeroHalf was tried 23 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.110 seconds)
Cbc0038I Stored from first was tried 23 times and created 168 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -194.90646 found by Reduced search after 2539 iterations and 64 nodes (3.14 seconds)
Cbc0001I Search completed - best objective -194.90646, took 2539 iterations and 64 nodes (3.14 seconds)
Cbc0032I Strong branching done 680 times (13177 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 16, 371 variables fixed on reduced cost
Total time (CPU seconds):       2.51   (Wallclock seconds):       3.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 493 (-34) rows, 261 (-3) columns and 1477 (-68) elements
Clp1000I sum of infeasibilities 1.75998e-05 - average 3.56993e-08, 51 fixed columns
Coin0506I Presolve 392 (-101) rows, 210 (-51) columns and 1177 (-300) elements
Clp0029I End of values pass after 210 iterations
Clp0014I Perturbing problem by 0.001% of 2.0234206 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Coin0511I After Postsolve, objective 165.6517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Coin0511I After Postsolve, objective 165.6517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 165.6516985 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 493 rows, 261 columns (260 integer (260 of which binary)) and 1477 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.360%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 93 integers unsatisfied sum - 12.4654
Cbc0038I Solution found of -4.28348
Cbc0038I Relaxing continuous gives -20.3044
Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 167 rows 94 columns
Cbc0038I Mini branch and bound improved solution from -20.3044 to -56.6184 (0.07 seconds)
Cbc0038I Round again with cutoff of -67.5219
Cbc0038I Pass   1: suminf.    2.75151 (58) obj. -67.5219 iterations 181
Cbc0038I Pass   2: suminf.    1.56247 (5) obj. -67.5334 iterations 80
Cbc0038I Pass   3: suminf.    0.68671 (3) obj. -67.5219 iterations 12
Cbc0038I Pass   4: suminf.    0.46579 (3) obj. -67.5219 iterations 2
Cbc0038I Pass   5: suminf.    1.10220 (4) obj. -67.5219 iterations 15
Cbc0038I Pass   6: suminf.    1.05369 (3) obj. -67.5219 iterations 1
Cbc0038I Pass   7: suminf.    0.04082 (1) obj. -71.2135 iterations 9
Cbc0038I Pass   8: suminf.    0.65468 (2) obj. -67.5219 iterations 2
Cbc0038I Pass   9: suminf.    0.35336 (2) obj. -67.5219 iterations 1
Cbc0038I Pass  10: suminf.    2.46396 (10) obj. -67.5219 iterations 52
Cbc0038I Pass  11: suminf.    1.70658 (6) obj. -67.5219 iterations 32
Cbc0038I Pass  12: suminf.    0.38636 (4) obj. -67.5219 iterations 24
Cbc0038I Pass  13: suminf.    0.29717 (1) obj. -67.5219 iterations 2
Cbc0038I Pass  14: suminf.    0.48421 (1) obj. -70.5882 iterations 3
Cbc0038I Pass  15: suminf.    4.10353 (13) obj. -67.5219 iterations 36
Cbc0038I Pass  16: suminf.    2.20119 (11) obj. -67.5219 iterations 20
Cbc0038I Pass  17: suminf.    2.20119 (11) obj. -67.5219 iterations 2
Cbc0038I Pass  18: suminf.    1.49988 (5) obj. -67.5219 iterations 30
Cbc0038I Pass  19: suminf.    0.46553 (2) obj. -67.5219 iterations 6
Cbc0038I Pass  20: suminf.    0.15285 (3) obj. -67.5219 iterations 2
Cbc0038I Pass  21: suminf.    1.17721 (3) obj. -67.5219 iterations 7
Cbc0038I Pass  22: suminf.    0.20163 (1) obj. -67.5219 iterations 3
Cbc0038I Pass  23: suminf.    0.15294 (1) obj. -67.5219 iterations 3
Cbc0038I Pass  24: suminf.    2.44296 (10) obj. -67.5219 iterations 46
Cbc0038I Pass  25: suminf.    1.90108 (9) obj. -67.5219 iterations 23
Cbc0038I Pass  26: suminf.    1.63752 (5) obj. -67.5219 iterations 25
Cbc0038I Pass  27: suminf.    0.86885 (6) obj. -67.5219 iterations 13
Cbc0038I Pass  28: suminf.    1.40991 (4) obj. -67.5219 iterations 15
Cbc0038I Pass  29: suminf.    1.27516 (5) obj. -67.5219 iterations 14
Cbc0038I Pass  30: suminf.    1.27516 (5) obj. -67.5219 iterations 0
Cbc0038I Rounding solution of -76.4042 is better than previous of -56.6184

Cbc0038I Before mini branch and bound, 125 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 246 rows 136 columns - 6 fixed gives 200, 130 - ok now
Cbc0038I Full problem 493 rows 261 columns, reduced to 196 rows 128 columns
Cbc0038I Mini branch and bound improved solution from -76.4042 to -77.8384 (0.14 seconds)
Cbc0038I Round again with cutoff of -95.4012
Cbc0038I Pass  30: suminf.    4.37612 (58) obj. -95.4012 iterations 0
Cbc0038I Pass  31: suminf.    1.79736 (6) obj. -95.4012 iterations 81
Cbc0038I Pass  32: suminf.    1.24349 (6) obj. -95.4012 iterations 8
Cbc0038I Pass  33: suminf.    1.85193 (7) obj. -95.4012 iterations 22
Cbc0038I Pass  34: suminf.    1.79116 (10) obj. -95.4012 iterations 9
Cbc0038I Pass  35: suminf.    3.82786 (10) obj. -95.4012 iterations 23
Cbc0038I Pass  36: suminf.    3.22473 (10) obj. -95.4012 iterations 11
Cbc0038I Pass  37: suminf.    2.51900 (10) obj. -95.4012 iterations 28
Cbc0038I Pass  38: suminf.    1.89539 (7) obj. -95.4012 iterations 12
Cbc0038I Pass  39: suminf.    1.84296 (7) obj. -95.4012 iterations 3
Cbc0038I Pass  40: suminf.    2.37359 (9) obj. -95.4012 iterations 19
Cbc0038I Pass  41: suminf.    2.09382 (8) obj. -95.4012 iterations 5
Cbc0038I Pass  42: suminf.    2.09382 (8) obj. -95.4012 iterations 2
Cbc0038I Pass  43: suminf.    3.19913 (8) obj. -95.4012 iterations 17
Cbc0038I Pass  44: suminf.    2.11641 (9) obj. -95.4012 iterations 10
Cbc0038I Pass  45: suminf.    2.09788 (10) obj. -95.4012 iterations 4
Cbc0038I Pass  46: suminf.    3.65893 (10) obj. -95.4012 iterations 24
Cbc0038I Pass  47: suminf.    3.04050 (9) obj. -95.4012 iterations 1
Cbc0038I Pass  48: suminf.    2.92007 (9) obj. -95.4012 iterations 9
Cbc0038I Pass  49: suminf.    2.90951 (9) obj. -95.4012 iterations 7
Cbc0038I Pass  50: suminf.    2.86644 (9) obj. -95.4012 iterations 16
Cbc0038I Pass  51: suminf.    2.11641 (9) obj. -95.4012 iterations 18
Cbc0038I Pass  52: suminf.    2.09788 (10) obj. -95.4012 iterations 7
Cbc0038I Pass  53: suminf.    3.65893 (10) obj. -95.4012 iterations 24
Cbc0038I Pass  54: suminf.    3.04050 (9) obj. -95.4012 iterations 1
Cbc0038I Pass  55: suminf.    2.92007 (9) obj. -95.4012 iterations 9
Cbc0038I Pass  56: suminf.    2.90951 (9) obj. -95.4012 iterations 7
Cbc0038I Pass  57: suminf.    2.86644 (9) obj. -95.4012 iterations 16
Cbc0038I Pass  58: suminf.    2.11641 (9) obj. -95.4012 iterations 18
Cbc0038I Pass  59: suminf.    2.09788 (10) obj. -95.4012 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 223 rows 123 columns
Cbc0038I Mini branch and bound improved solution from -77.8384 to -83.9253 (0.25 seconds)
Cbc0038I Round again with cutoff of -116.476
Cbc0038I Pass  59: suminf.    5.60424 (58) obj. -116.476 iterations 0
Cbc0038I Pass  60: suminf.    5.84852 (15) obj. -116.476 iterations 81
Cbc0038I Pass  61: suminf.    4.31656 (15) obj. -116.476 iterations 21
Cbc0038I Pass  62: suminf.    4.01356 (14) obj. -116.476 iterations 7
Cbc0038I Pass  63: suminf.    4.01356 (14) obj. -116.476 iterations 0
Cbc0038I Pass  64: suminf.    5.33518 (15) obj. -116.476 iterations 41
Cbc0038I Pass  65: suminf.    4.59024 (16) obj. -116.476 iterations 9
Cbc0038I Pass  66: suminf.    5.63752 (22) obj. -116.476 iterations 39
Cbc0038I Pass  67: suminf.    4.84939 (14) obj. -116.476 iterations 13
Cbc0038I Pass  68: suminf.    4.75895 (15) obj. -116.476 iterations 6
Cbc0038I Pass  69: suminf.    6.11020 (17) obj. -116.476 iterations 46
Cbc0038I Pass  70: suminf.    5.21176 (14) obj. -116.476 iterations 15
Cbc0038I Pass  71: suminf.    4.95280 (14) obj. -116.476 iterations 6
Cbc0038I Pass  72: suminf.    5.04548 (17) obj. -116.476 iterations 28
Cbc0038I Pass  73: suminf.    4.45842 (15) obj. -116.476 iterations 9
Cbc0038I Pass  74: suminf.    4.45055 (14) obj. -116.476 iterations 6
Cbc0038I Pass  75: suminf.    5.26269 (18) obj. -116.476 iterations 47
Cbc0038I Pass  76: suminf.    4.78735 (22) obj. -116.476 iterations 20
Cbc0038I Pass  77: suminf.    5.77463 (19) obj. -116.476 iterations 36
Cbc0038I Pass  78: suminf.    4.88900 (18) obj. -116.476 iterations 18
Cbc0038I Pass  79: suminf.    4.82026 (16) obj. -116.476 iterations 7
Cbc0038I Pass  80: suminf.    4.98583 (17) obj. -116.476 iterations 41
Cbc0038I Pass  81: suminf.    4.17143 (14) obj. -116.476 iterations 13
Cbc0038I Pass  82: suminf.    4.71956 (15) obj. -116.476 iterations 30
Cbc0038I Pass  83: suminf.    4.52899 (15) obj. -116.476 iterations 7
Cbc0038I Pass  84: suminf.    5.75210 (16) obj. -116.476 iterations 23
Cbc0038I Pass  85: suminf.    5.64048 (17) obj. -116.476 iterations 5
Cbc0038I Pass  86: suminf.    5.62153 (16) obj. -116.476 iterations 3
Cbc0038I Pass  87: suminf.    6.13184 (15) obj. -116.476 iterations 21
Cbc0038I Pass  88: suminf.    5.38708 (16) obj. -116.476 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 223 rows 123 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -83.9253 - took 0.35 seconds
Cbc0012I Integer solution of -83.92534 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 167 rows 94 columns
Cbc0012I Integer solution of -83.98731 found by RINS after 0 iterations and 0 nodes (0.45 seconds)
Cbc0031I 42 added rows had average density of 171.2381
Cbc0013I At root node, 42 cuts changed objective from -165.6517 to -153.78614 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44733 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.517 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3844 row cuts average 256.4 elements, 0 column cuts (0 active)  in 0.509 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.629 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 256 row cuts average 251.6 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -83.98731 best solution, best possible -153.78614 (5.36 seconds)
Cbc0010I After 9 nodes, 10 on tree, -83.98731 best solution, best possible -153.78614 (6.08 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 26 rows 23 columns
Cbc0012I Integer solution of -86.47684 found by RINS after 20442 iterations and 41 nodes (6.46 seconds)
Cbc0010I After 70 nodes, 10 on tree, -86.47684 best solution, best possible -153.78614 (6.78 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 179 rows 100 columns
Cbc0012I Integer solution of -87.45847 found by RINS after 23530 iterations and 91 nodes (7.14 seconds)
Cbc0012I Integer solution of -88.62487 found by rounding after 24982 iterations and 116 nodes (7.35 seconds)
Cbc0010I After 143 nodes, 18 on tree, -88.62487 best solution, best possible -153.78614 (7.49 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -90.19988 found by RINS after 29182 iterations and 200 nodes (7.83 seconds)
Cbc0001I Search completed - best objective -90.19988000000001, took 33248 iterations and 294 nodes (8.15 seconds)
Cbc0032I Strong branching done 3060 times (66532 iterations), fathomed 33 nodes and fixed 171 variables
Cbc0035I Maximum depth 75, 2103 variables fixed on reduced cost
Total time (CPU seconds):       8.00   (Wallclock seconds):       8.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 342 (-185) rows, 368 (-157) columns and 15737 (-20000) elements
Clp1000I sum of infeasibilities 7.70083e-06 - average 2.25171e-08, 100 fixed columns
Coin0506I Presolve 235 (-107) rows, 264 (-104) columns and 9472 (-6265) elements
Clp0006I 0  Obj 202.81863 Dual inf 44.173637 (263)
Clp0029I End of values pass after 264 iterations
Clp0014I Perturbing problem by 0.001% of 2.1128931 - largest nonzero change 2.1059393e-05 ( 0.0014697432%) - largest zero change 2.9286562e-05
Clp0000I Optimal - objective value 225.51576
Clp0000I Optimal - objective value 225.51576
Coin0511I After Postsolve, objective 225.51576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 225.51576 Dual inf 32.562522 (4)
Clp0014I Perturbing problem by 0.001% of 1.9131343 - largest nonzero change 1.853158e-05 ( 0.001853158%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 225.51576
Clp0000I Optimal - objective value 225.51576
Clp0000I Optimal - objective value 225.51576
Coin0511I After Postsolve, objective 225.51576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 225.5157641 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 344 rows, 371 columns (371 integer (371 of which binary)) and 15853 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.582%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 103 integers unsatisfied sum - 6.92497
Cbc0038I Pass   1: suminf.    4.92351 (95) obj. -202.74 iterations 41
Cbc0038I Pass   2: suminf.    3.75772 (78) obj. -141.13 iterations 17
Cbc0038I Pass   3: suminf.    3.03251 (66) obj. -124.226 iterations 12
Cbc0038I Pass   4: suminf.    2.36269 (54) obj. -112.896 iterations 12
Cbc0038I Pass   5: suminf.    1.16001 (30) obj. -87.2495 iterations 24
Cbc0038I Pass   6: suminf.    0.12187 (4) obj. -62.2877 iterations 26
Cbc0038I Solution found of -58.4095
Cbc0038I Rounding solution of -68.5481 is better than previous of -58.4095

Cbc0038I Before mini branch and bound, 268 integers at bound fixed and 0 continuous
Cbc0038I Full problem 344 rows 371 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -84.2405
Cbc0038I Pass   7: suminf.    4.92351 (95) obj. -202.74 iterations 0
Cbc0038I Pass   8: suminf.    3.75772 (78) obj. -141.13 iterations 17
Cbc0038I Pass   9: suminf.    2.80407 (62) obj. -120.454 iterations 16
Cbc0038I Pass  10: suminf.    1.83175 (44) obj. -101.532 iterations 18
Cbc0038I Pass  11: suminf.    0.96703 (25) obj. -84.2405 iterations 23
Cbc0038I Pass  12: suminf.    0.06538 (1) obj. -92.0557 iterations 25
Cbc0038I Pass  13: suminf.    0.28247 (1) obj. -84.2405 iterations 1
Cbc0038I Pass  14: suminf.    3.36876 (22) obj. -98.9295 iterations 54
Cbc0038I Pass  15: suminf.    1.05343 (15) obj. -84.2405 iterations 31
Cbc0038I Pass  16: suminf.    0.75242 (14) obj. -91.9501 iterations 5
Cbc0038I Pass  17: suminf.    0.63073 (9) obj. -84.2405 iterations 75
Cbc0038I Pass  18: suminf.    0.63073 (9) obj. -84.2405 iterations 0
Cbc0038I Pass  19: suminf.    0.78567 (5) obj. -84.2405 iterations 24
Cbc0038I Pass  20: suminf.    0.78567 (5) obj. -84.2405 iterations 0
Cbc0038I Pass  21: suminf.    1.39377 (5) obj. -84.2405 iterations 4
Cbc0038I Pass  22: suminf.    1.27005 (4) obj. -84.2405 iterations 4
Cbc0038I Pass  23: suminf.    0.72456 (3) obj. -84.2405 iterations 7
Cbc0038I Pass  24: suminf.    0.24749 (2) obj. -90.0701 iterations 5
Cbc0038I Pass  25: suminf.    0.46079 (2) obj. -84.2405 iterations 3
Cbc0038I Pass  26: suminf.    1.77812 (22) obj. -84.2405 iterations 73
Cbc0038I Pass  27: suminf.    0.90724 (17) obj. -84.9421 iterations 31
Cbc0038I Pass  28: suminf.    1.59070 (8) obj. -84.2405 iterations 36
Cbc0038I Pass  29: suminf.    1.13825 (6) obj. -84.2405 iterations 4
Cbc0038I Pass  30: suminf.    0.92927 (5) obj. -84.2405 iterations 4
Cbc0038I Pass  31: suminf.    0.57013 (4) obj. -84.2405 iterations 7
Cbc0038I Pass  32: suminf.    0.78447 (3) obj. -84.2405 iterations 12
Cbc0038I Pass  33: suminf.    0.78447 (3) obj. -84.2405 iterations 0
Cbc0038I Pass  34: suminf.    0.58963 (3) obj. -84.2405 iterations 4
Cbc0038I Pass  35: suminf.    0.58963 (3) obj. -84.2405 iterations 0
Cbc0038I Pass  36: suminf.    1.03359 (19) obj. -84.2405 iterations 60
Cbc0038I Before mini branch and bound, 225 integers at bound fixed and 0 continuous
Cbc0038I Full problem 344 rows 371 columns, reduced to 119 rows 144 columns - 33 fixed gives 86, 108 - ok now
Cbc0038I Full problem 344 rows 371 columns, reduced to 18 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -68.5481 to -76.7738 (0.21 seconds)
Cbc0038I Round again with cutoff of -112.487
Cbc0038I Pass  36: suminf.    4.92351 (95) obj. -202.74 iterations 0
Cbc0038I Pass  37: suminf.    4.08636 (83) obj. -181.315 iterations 12
Cbc0038I Pass  38: suminf.    2.63689 (59) obj. -117.622 iterations 24
Cbc0038I Pass  39: suminf.    2.21448 (49) obj. -112.487 iterations 14
Cbc0038I Pass  40: suminf.    0.87156 (23) obj. -113.25 iterations 27
Cbc0038I Pass  41: suminf.    0.82734 (13) obj. -112.487 iterations 16
Cbc0038I Pass  42: suminf.    0.82734 (13) obj. -112.487 iterations 0
Cbc0038I Pass  43: suminf.    0.81621 (4) obj. -112.487 iterations 26
Cbc0038I Pass  44: suminf.    0.81621 (4) obj. -112.487 iterations 0
Cbc0038I Pass  45: suminf.    0.52246 (5) obj. -112.487 iterations 13
Cbc0038I Pass  46: suminf.    0.42334 (5) obj. -112.487 iterations 11
Cbc0038I Pass  47: suminf.    0.81621 (4) obj. -112.487 iterations 9
Cbc0038I Pass  48: suminf.    1.60722 (22) obj. -114.075 iterations 94
Cbc0038I Pass  49: suminf.    1.60722 (22) obj. -114.075 iterations 20
Cbc0038I Pass  50: suminf.    1.25136 (13) obj. -112.487 iterations 25
Cbc0038I Pass  51: suminf.    1.10995 (11) obj. -112.487 iterations 8
Cbc0038I Pass  52: suminf.    0.40980 (9) obj. -114.16 iterations 2
Cbc0038I Pass  53: suminf.    1.03628 (5) obj. -112.487 iterations 38
Cbc0038I Pass  54: suminf.    0.41265 (5) obj. -112.487 iterations 7
Cbc0038I Pass  55: suminf.    0.81846 (4) obj. -112.487 iterations 15
Cbc0038I Pass  56: suminf.    0.81838 (3) obj. -112.487 iterations 6
Cbc0038I Pass  57: suminf.    0.81844 (3) obj. -112.487 iterations 7
Cbc0038I Pass  58: suminf.    2.53803 (26) obj. -112.487 iterations 68
Cbc0038I Pass  59: suminf.    2.48543 (25) obj. -112.487 iterations 16
Cbc0038I Pass  60: suminf.    1.51760 (10) obj. -112.487 iterations 45
Cbc0038I Pass  61: suminf.    1.08786 (10) obj. -112.487 iterations 5
Cbc0038I Pass  62: suminf.    0.58577 (4) obj. -112.487 iterations 24
Cbc0038I Pass  63: suminf.    0.42610 (6) obj. -112.487 iterations 13
Cbc0038I Pass  64: suminf.    0.45121 (5) obj. -112.487 iterations 15
Cbc0038I Pass  65: suminf.    2.69655 (27) obj. -112.487 iterations 68
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 344 rows 371 columns, reduced to 18 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -76.7738 - took 0.18 seconds
Cbc0012I Integer solution of -76.77384 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 344 rows 371 columns, reduced to 8 rows 11 columns
Cbc0031I 113 added rows had average density of 60.778761
Cbc0013I At root node, 113 cuts changed objective from -225.47147 to -144.43248 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 61208 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.525 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3265 row cuts average 349.5 elements, 0 column cuts (0 active)  in 1.105 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 188 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7208 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.296 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.756 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3588 row cuts average 26.9 elements, 0 column cuts (0 active)  in 1.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 388 row cuts average 212.7 elements, 0 column cuts (0 active)  in 0.286 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 62.8 elements, 0 column cuts (0 active)  in 0.682 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -76.77384 best solution, best possible -144.43248 (9.04 seconds)
Cbc0010I After 2 nodes, 1 on tree, -76.77384 best solution, best possible -125.70058 (16.01 seconds)
Cbc0010I After 3 nodes, 2 on tree, -76.77384 best solution, best possible -125.70058 (19.18 seconds)
Cbc0010I After 6 nodes, 5 on tree, -76.77384 best solution, best possible -125.70058 (20.11 seconds)
Cbc0012I Integer solution of -81.30598 found by DiveCoefficient after 16123 iterations and 11 nodes (20.38 seconds)
Cbc0012I Integer solution of -82.92331 found by DiveCoefficient after 16125 iterations and 12 nodes (20.39 seconds)
Cbc0012I Integer solution of -84.96172 found by rounding after 16225 iterations and 19 nodes (20.49 seconds)
Cbc0012I Integer solution of -86.19988 found by rounding after 16266 iterations and 22 nodes (20.53 seconds)
Cbc0038I Full problem 344 rows 371 columns, reduced to 54 rows 64 columns
Cbc0010I After 44 nodes, 7 on tree, -86.19988 best solution, best possible -125.70058 (20.81 seconds)
Cbc0012I Integer solution of -87.45847 found by rounding after 18448 iterations and 86 nodes (21.24 seconds)
Cbc0038I Full problem 344 rows 371 columns, reduced to 12 rows 18 columns
Cbc0012I Integer solution of -90.19988 found by RINS after 18584 iterations and 91 nodes (21.38 seconds)
Cbc0010I After 113 nodes, 2 on tree, -90.19988 best solution, best possible -125.70058 (21.90 seconds)
Cbc0010I After 114 nodes, 3 on tree, -90.19988 best solution, best possible -125.70058 (22.88 seconds)
Cbc0010I After 117 nodes, 6 on tree, -90.19988 best solution, best possible -125.70058 (24.04 seconds)
Cbc0010I After 123 nodes, 6 on tree, -90.19988 best solution, best possible -125.70058 (24.79 seconds)
Cbc0010I After 183 nodes, 7 on tree, -90.19988 best solution, best possible -125.70058 (25.50 seconds)
Cbc0038I Full problem 344 rows 371 columns, reduced to 103 rows 120 columns
Cbc0010I After 234 nodes, 3 on tree, -90.19988 best solution, best possible -125.70058 (27.27 seconds)
Cbc0010I After 236 nodes, 5 on tree, -90.19988 best solution, best possible -125.70058 (28.36 seconds)
Cbc0010I After 238 nodes, 6 on tree, -90.19988 best solution, best possible -125.70058 (29.38 seconds)
Cbc0010I After 247 nodes, 7 on tree, -90.19988 best solution, best possible -125.70058 (30.12 seconds)
Cbc0038I Full problem 344 rows 371 columns, reduced to 89 rows 102 columns
Cbc0010I After 303 nodes, 10 on tree, -90.19988 best solution, best possible -125.70058 (30.83 seconds)
Cbc0010I After 377 nodes, 7 on tree, -90.19988 best solution, best possible -125.70058 (31.54 seconds)
Cbc0010I After 398 nodes, 6 on tree, -90.19988 best solution, best possible -125.70058 (32.58 seconds)
Cbc0038I Full problem 344 rows 371 columns, reduced to 103 rows 120 columns
Cbc0010I After 432 nodes, 6 on tree, -90.19988 best solution, best possible -125.70058 (33.29 seconds)
Cbc0010I After 476 nodes, 8 on tree, -90.19988 best solution, best possible -125.70058 (34.00 seconds)
Cbc0010I After 499 nodes, 8 on tree, -90.19988 best solution, best possible -125.70058 (34.83 seconds)
Cbc0010I After 518 nodes, 6 on tree, -90.19988 best solution, best possible -125.70058 (35.67 seconds)
Cbc0010I After 560 nodes, 6 on tree, -90.19988 best solution, best possible -125.70058 (36.39 seconds)
Cbc0001I Search completed - best objective -90.19988000000001, took 49857 iterations and 596 nodes (36.79 seconds)
Cbc0032I Strong branching done 4142 times (58984 iterations), fathomed 27 nodes and fixed 36 variables
Cbc0035I Maximum depth 32, 3638 variables fixed on reduced cost
Total time (CPU seconds):       36.32   (Wallclock seconds):       36.89

