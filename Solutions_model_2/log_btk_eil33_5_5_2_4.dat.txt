Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 1.11577e-05 - average 1.95749e-07, 6 fixed columns
Coin0506I Presolve 45 (-12) rows, 27 (-6) columns and 136 (-36) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Coin0511I After Postsolve, objective 80.325188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Coin0511I After Postsolve, objective 80.325188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.32518845 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.578%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.47056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.03659 iterations 16
Cbc0038I Solution found of 0.03659
Cbc0038I Relaxing continuous gives 0.03659
Cbc0038I Rounding solution of -23.2128 is better than previous of 0.03659

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -23.2128 to -32.6827 (0.02 seconds)
Cbc0038I Round again with cutoff of -37.4324
Cbc0038I Pass   2: suminf.    1.38666 (5) obj. -37.4324 iterations 4
Cbc0038I Pass   3: suminf.    1.38666 (5) obj. -37.4324 iterations 1
Cbc0038I Pass   4: suminf.    0.44427 (2) obj. -37.4324 iterations 5
Cbc0038I Pass   5: suminf.    0.37111 (3) obj. -37.4324 iterations 3
Cbc0038I Pass   6: suminf.    1.03350 (3) obj. -37.4324 iterations 6
Cbc0038I Pass   7: suminf.    0.87019 (3) obj. -37.4324 iterations 2
Cbc0038I Pass   8: suminf.    0.82225 (3) obj. -37.4324 iterations 2
Cbc0038I Pass   9: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  10: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  11: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  12: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  13: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  14: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  15: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  16: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  17: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  18: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  19: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  20: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  21: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  22: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  23: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  24: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  25: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  26: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  27: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  28: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  29: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  30: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  31: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.6827 - took 0.03 seconds
Cbc0012I Integer solution of -32.68272 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0031I 16 added rows had average density of 22.1875
Cbc0013I At root node, 16 cuts changed objective from -80.178154 to -51.802665 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2674 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1302 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -35.09749 found by DiveCoefficient after 3026 iterations and 9 nodes (0.25 seconds)
Cbc0001I Search completed - best objective -35.09748999999999, took 3176 iterations and 24 nodes (0.26 seconds)
Cbc0032I Strong branching done 230 times (2385 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 7, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-17) rows, 58 (-8) columns and 566 (-157) elements
Clp1000I sum of infeasibilities 7.30153e-09 - average 1.43167e-10, 10 fixed columns
Coin0506I Presolve 42 (-9) rows, 48 (-10) columns and 410 (-156) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 86.847108
Clp0000I Optimal - objective value 86.847108
Coin0511I After Postsolve, objective 86.847108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7288825 - largest nonzero change 1.6729689e-05 ( 0.0016729689%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 91.736742
Clp0000I Optimal - objective value 91.736742
Clp0000I Optimal - objective value 91.736742
Coin0511I After Postsolve, objective 91.736742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.73674231 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 58 columns (58 integer (58 of which binary)) and 571 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.697
Cbc0038I Pass   1: suminf.    2.96833 (17) obj. -70.6307 iterations 8
Cbc0038I Pass   2: suminf.    2.96833 (17) obj. -70.6307 iterations 1
Cbc0038I Solution found of -21.5548
Cbc0038I Rounding solution of -25.8053 is better than previous of -21.5548

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -31.5577
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.96833 (17) obj. -70.6307 iterations 0
Cbc0038I Pass   4: suminf.    2.96833 (17) obj. -70.6307 iterations 2
Cbc0038I Pass   5: suminf.    0.46179 (2) obj. -31.5577 iterations 18
Cbc0038I Pass   6: suminf.    0.47569 (2) obj. -31.6763 iterations 2
Cbc0038I Pass   7: suminf.    0.64013 (5) obj. -31.5577 iterations 17
Cbc0038I Pass   8: suminf.    0.64013 (5) obj. -31.5577 iterations 0
Cbc0038I Pass   9: suminf.    0.57481 (3) obj. -31.5577 iterations 7
Cbc0038I Pass  10: suminf.    0.47304 (2) obj. -31.5577 iterations 6
Cbc0038I Pass  11: suminf.    0.32353 (2) obj. -32.7538 iterations 2
Cbc0038I Pass  12: suminf.    0.71386 (2) obj. -31.5577 iterations 6
Cbc0038I Pass  13: suminf.    0.46482 (2) obj. -31.5577 iterations 2
Cbc0038I Pass  14: suminf.    0.71386 (2) obj. -31.5577 iterations 3
Cbc0038I Pass  15: suminf.    1.93142 (7) obj. -31.5577 iterations 12
Cbc0038I Pass  16: suminf.    1.38345 (7) obj. -31.5577 iterations 2
Cbc0038I Pass  17: suminf.    1.11478 (6) obj. -31.5577 iterations 1
Cbc0038I Pass  18: suminf.    0.47833 (3) obj. -31.5577 iterations 8
Cbc0038I Pass  19: suminf.    0.47077 (5) obj. -31.5577 iterations 1
Cbc0038I Pass  20: suminf.    0.77630 (3) obj. -31.5577 iterations 9
Cbc0038I Pass  21: suminf.    0.65703 (2) obj. -32.782 iterations 2
Cbc0038I Pass  22: suminf.    0.68807 (4) obj. -31.5577 iterations 4
Cbc0038I Pass  23: suminf.    0.68807 (4) obj. -31.5577 iterations 0
Cbc0038I Pass  24: suminf.    1.94697 (5) obj. -31.5577 iterations 4
Cbc0038I Pass  25: suminf.    1.35284 (3) obj. -31.5577 iterations 3
Cbc0038I Pass  26: suminf.    1.10324 (3) obj. -31.5577 iterations 1
Cbc0038I Pass  27: suminf.    0.69841 (2) obj. -31.5577 iterations 3
Cbc0038I Pass  28: suminf.    0.69841 (2) obj. -31.5577 iterations 0
Cbc0038I Pass  29: suminf.    0.51893 (2) obj. -34.8085 iterations 1
Cbc0038I Pass  30: suminf.    0.39930 (2) obj. -31.5577 iterations 1
Cbc0038I Pass  31: suminf.    1.83170 (8) obj. -31.5577 iterations 15
Cbc0038I Pass  32: suminf.    1.60178 (8) obj. -31.5577 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 16 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -21.5548 to -35.0975 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.7438
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.96833 (17) obj. -70.6307 iterations 0
Cbc0038I Pass  33: suminf.    2.96833 (17) obj. -70.6307 iterations 2
Cbc0038I Pass  34: suminf.    0.95572 (7) obj. -44.7438 iterations 21
Cbc0038I Pass  35: suminf.    0.74092 (4) obj. -44.7438 iterations 4
Cbc0038I Pass  36: suminf.    0.88325 (4) obj. -44.7438 iterations 4
Cbc0038I Pass  37: suminf.    4.23602 (17) obj. -44.7438 iterations 21
Cbc0038I Pass  38: suminf.    2.92056 (13) obj. -44.7438 iterations 8
Cbc0038I Pass  39: suminf.    2.20214 (11) obj. -52.4364 iterations 7
Cbc0038I Pass  40: suminf.    1.39707 (5) obj. -44.7438 iterations 16
Cbc0038I Pass  41: suminf.    1.13688 (5) obj. -44.7438 iterations 1
Cbc0038I Pass  42: suminf.    1.21199 (4) obj. -44.7438 iterations 6
Cbc0038I Pass  43: suminf.    1.20198 (4) obj. -44.7438 iterations 3
Cbc0038I Pass  44: suminf.    1.88020 (7) obj. -44.7438 iterations 11
Cbc0038I Pass  45: suminf.    1.17366 (7) obj. -44.7438 iterations 4
Cbc0038I Pass  46: suminf.    1.25625 (6) obj. -44.7438 iterations 7
Cbc0038I Pass  47: suminf.    1.25625 (6) obj. -44.7438 iterations 3
Cbc0038I Pass  48: suminf.    1.28746 (6) obj. -44.7438 iterations 5
Cbc0038I Pass  49: suminf.    1.28746 (6) obj. -44.7438 iterations 2
Cbc0038I Pass  50: suminf.    1.25625 (6) obj. -44.7438 iterations 4
Cbc0038I Pass  51: suminf.    1.97108 (15) obj. -44.7438 iterations 12
Cbc0038I Pass  52: suminf.    1.94673 (8) obj. -44.7438 iterations 4
Cbc0038I Pass  53: suminf.    1.53125 (6) obj. -44.7438 iterations 8
Cbc0038I Pass  54: suminf.    1.53125 (6) obj. -44.7438 iterations 2
Cbc0038I Pass  55: suminf.    1.49038 (6) obj. -44.7438 iterations 3
Cbc0038I Pass  56: suminf.    1.49038 (6) obj. -44.7438 iterations 2
Cbc0038I Pass  57: suminf.    1.53125 (6) obj. -44.7438 iterations 4
Cbc0038I Pass  58: suminf.    2.52344 (10) obj. -44.7438 iterations 13
Cbc0038I Pass  59: suminf.    1.73290 (8) obj. -44.7438 iterations 5
Cbc0038I Pass  60: suminf.    1.42679 (6) obj. -47.3188 iterations 2
Cbc0038I Pass  61: suminf.    1.60636 (6) obj. -44.7438 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 11 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -35.0975 - took 0.02 seconds
Cbc0012I Integer solution of -35.09749 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 58 columns, reduced to 4 rows 6 columns
Cbc0031I 25 added rows had average density of 11.12
Cbc0013I At root node, 25 cuts changed objective from -83.328525 to -36.205674 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 340 row cuts average 4.5 elements, 10 column cuts (10 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 70 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.09748999999999, took 352 iterations and 2 nodes (0.39 seconds)
Cbc0032I Strong branching done 28 times (211 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.39

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 1.11577e-05 - average 1.95749e-07, 6 fixed columns
Coin0506I Presolve 45 (-12) rows, 27 (-6) columns and 136 (-36) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Coin0511I After Postsolve, objective 80.325188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Coin0511I After Postsolve, objective 80.325188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.32518845 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.578%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.47056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.03659 iterations 16
Cbc0038I Solution found of 0.03659
Cbc0038I Relaxing continuous gives 0.03659
Cbc0038I Rounding solution of -23.2128 is better than previous of 0.03659

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -23.2128 to -32.6827 (0.02 seconds)
Cbc0038I Round again with cutoff of -37.4324
Cbc0038I Pass   2: suminf.    1.38666 (5) obj. -37.4324 iterations 4
Cbc0038I Pass   3: suminf.    1.38666 (5) obj. -37.4324 iterations 1
Cbc0038I Pass   4: suminf.    0.44427 (2) obj. -37.4324 iterations 5
Cbc0038I Pass   5: suminf.    0.37111 (3) obj. -37.4324 iterations 3
Cbc0038I Pass   6: suminf.    1.03350 (3) obj. -37.4324 iterations 6
Cbc0038I Pass   7: suminf.    0.87019 (3) obj. -37.4324 iterations 2
Cbc0038I Pass   8: suminf.    0.82225 (3) obj. -37.4324 iterations 2
Cbc0038I Pass   9: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  10: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  11: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  12: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  13: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  14: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  15: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  16: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  17: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  18: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  19: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  20: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  21: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  22: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  23: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  24: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  25: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  26: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  27: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  28: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  29: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  30: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  31: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -32.6827 - took 0.05 seconds
Cbc0012I Integer solution of -32.68272 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0031I 16 added rows had average density of 22.1875
Cbc0013I At root node, 16 cuts changed objective from -80.178154 to -51.802665 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2674 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1302 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -35.09749 found by DiveCoefficient after 3026 iterations and 9 nodes (0.25 seconds)
Cbc0001I Search completed - best objective -35.09748999999999, took 3176 iterations and 24 nodes (0.26 seconds)
Cbc0032I Strong branching done 230 times (2385 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 7, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-18) rows, 58 (-9) columns and 566 (-158) elements
Clp1000I sum of infeasibilities 7.30153e-09 - average 1.43167e-10, 10 fixed columns
Coin0506I Presolve 42 (-9) rows, 48 (-10) columns and 410 (-156) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 86.847108
Clp0000I Optimal - objective value 86.847108
Coin0511I After Postsolve, objective 86.847108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7288825 - largest nonzero change 1.6729689e-05 ( 0.0016729689%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 91.736742
Clp0000I Optimal - objective value 91.736742
Clp0000I Optimal - objective value 91.736742
Coin0511I After Postsolve, objective 91.736742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.73674231 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 58 columns (58 integer (58 of which binary)) and 571 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.697
Cbc0038I Pass   1: suminf.    2.96833 (17) obj. -70.6307 iterations 8
Cbc0038I Pass   2: suminf.    2.96833 (17) obj. -70.6307 iterations 1
Cbc0038I Solution found of -21.5548
Cbc0038I Rounding solution of -25.8053 is better than previous of -21.5548

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -31.5577
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.96833 (17) obj. -70.6307 iterations 0
Cbc0038I Pass   4: suminf.    2.96833 (17) obj. -70.6307 iterations 2
Cbc0038I Pass   5: suminf.    0.46179 (2) obj. -31.5577 iterations 18
Cbc0038I Pass   6: suminf.    0.47569 (2) obj. -31.6763 iterations 2
Cbc0038I Pass   7: suminf.    0.64013 (5) obj. -31.5577 iterations 17
Cbc0038I Pass   8: suminf.    0.64013 (5) obj. -31.5577 iterations 0
Cbc0038I Pass   9: suminf.    0.57481 (3) obj. -31.5577 iterations 7
Cbc0038I Pass  10: suminf.    0.47304 (2) obj. -31.5577 iterations 6
Cbc0038I Pass  11: suminf.    0.32353 (2) obj. -32.7538 iterations 2
Cbc0038I Pass  12: suminf.    0.71386 (2) obj. -31.5577 iterations 6
Cbc0038I Pass  13: suminf.    0.46482 (2) obj. -31.5577 iterations 2
Cbc0038I Pass  14: suminf.    0.71386 (2) obj. -31.5577 iterations 3
Cbc0038I Pass  15: suminf.    1.93142 (7) obj. -31.5577 iterations 12
Cbc0038I Pass  16: suminf.    1.38345 (7) obj. -31.5577 iterations 2
Cbc0038I Pass  17: suminf.    1.11478 (6) obj. -31.5577 iterations 1
Cbc0038I Pass  18: suminf.    0.47833 (3) obj. -31.5577 iterations 8
Cbc0038I Pass  19: suminf.    0.47077 (5) obj. -31.5577 iterations 1
Cbc0038I Pass  20: suminf.    0.77630 (3) obj. -31.5577 iterations 9
Cbc0038I Pass  21: suminf.    0.65703 (2) obj. -32.782 iterations 2
Cbc0038I Pass  22: suminf.    0.68807 (4) obj. -31.5577 iterations 4
Cbc0038I Pass  23: suminf.    0.68807 (4) obj. -31.5577 iterations 0
Cbc0038I Pass  24: suminf.    1.94697 (5) obj. -31.5577 iterations 4
Cbc0038I Pass  25: suminf.    1.35284 (3) obj. -31.5577 iterations 3
Cbc0038I Pass  26: suminf.    1.10324 (3) obj. -31.5577 iterations 1
Cbc0038I Pass  27: suminf.    0.69841 (2) obj. -31.5577 iterations 3
Cbc0038I Pass  28: suminf.    0.69841 (2) obj. -31.5577 iterations 0
Cbc0038I Pass  29: suminf.    0.51893 (2) obj. -34.8085 iterations 1
Cbc0038I Pass  30: suminf.    0.39930 (2) obj. -31.5577 iterations 1
Cbc0038I Pass  31: suminf.    1.83170 (8) obj. -31.5577 iterations 15
Cbc0038I Pass  32: suminf.    1.60178 (8) obj. -31.5577 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 16 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -21.5548 to -35.0975 (0.02 seconds)
Cbc0038I Round again with cutoff of -44.7438
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.96833 (17) obj. -70.6307 iterations 0
Cbc0038I Pass  33: suminf.    2.96833 (17) obj. -70.6307 iterations 2
Cbc0038I Pass  34: suminf.    0.95572 (7) obj. -44.7438 iterations 21
Cbc0038I Pass  35: suminf.    0.74092 (4) obj. -44.7438 iterations 4
Cbc0038I Pass  36: suminf.    0.88325 (4) obj. -44.7438 iterations 4
Cbc0038I Pass  37: suminf.    4.23602 (17) obj. -44.7438 iterations 21
Cbc0038I Pass  38: suminf.    2.92056 (13) obj. -44.7438 iterations 8
Cbc0038I Pass  39: suminf.    2.20214 (11) obj. -52.4364 iterations 7
Cbc0038I Pass  40: suminf.    1.39707 (5) obj. -44.7438 iterations 16
Cbc0038I Pass  41: suminf.    1.13688 (5) obj. -44.7438 iterations 1
Cbc0038I Pass  42: suminf.    1.21199 (4) obj. -44.7438 iterations 6
Cbc0038I Pass  43: suminf.    1.20198 (4) obj. -44.7438 iterations 3
Cbc0038I Pass  44: suminf.    1.88020 (7) obj. -44.7438 iterations 11
Cbc0038I Pass  45: suminf.    1.17366 (7) obj. -44.7438 iterations 4
Cbc0038I Pass  46: suminf.    1.25625 (6) obj. -44.7438 iterations 7
Cbc0038I Pass  47: suminf.    1.25625 (6) obj. -44.7438 iterations 3
Cbc0038I Pass  48: suminf.    1.28746 (6) obj. -44.7438 iterations 5
Cbc0038I Pass  49: suminf.    1.28746 (6) obj. -44.7438 iterations 2
Cbc0038I Pass  50: suminf.    1.25625 (6) obj. -44.7438 iterations 4
Cbc0038I Pass  51: suminf.    1.97108 (15) obj. -44.7438 iterations 12
Cbc0038I Pass  52: suminf.    1.94673 (8) obj. -44.7438 iterations 4
Cbc0038I Pass  53: suminf.    1.53125 (6) obj. -44.7438 iterations 8
Cbc0038I Pass  54: suminf.    1.53125 (6) obj. -44.7438 iterations 2
Cbc0038I Pass  55: suminf.    1.49038 (6) obj. -44.7438 iterations 3
Cbc0038I Pass  56: suminf.    1.49038 (6) obj. -44.7438 iterations 2
Cbc0038I Pass  57: suminf.    1.53125 (6) obj. -44.7438 iterations 4
Cbc0038I Pass  58: suminf.    2.52344 (10) obj. -44.7438 iterations 13
Cbc0038I Pass  59: suminf.    1.73290 (8) obj. -44.7438 iterations 5
Cbc0038I Pass  60: suminf.    1.42679 (6) obj. -47.3188 iterations 2
Cbc0038I Pass  61: suminf.    1.60636 (6) obj. -44.7438 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 11 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -35.0975 - took 0.02 seconds
Cbc0012I Integer solution of -35.09749 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 58 columns, reduced to 4 rows 6 columns
Cbc0031I 25 added rows had average density of 11.12
Cbc0013I At root node, 25 cuts changed objective from -83.328525 to -36.205674 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 340 row cuts average 4.5 elements, 10 column cuts (10 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 70 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.09748999999999, took 352 iterations and 2 nodes (0.36 seconds)
Cbc0032I Strong branching done 28 times (211 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.36

