Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 51 (-2) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 0.000242177 - average 2.81601e-06, 12 fixed columns
Coin0506I Presolve 65 (-21) rows, 39 (-12) columns and 200 (-66) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 42.996751
Clp0000I Optimal - objective value 42.996751
Coin0511I After Postsolve, objective 42.996751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.996751
Clp0000I Optimal - objective value 42.996751
Clp0000I Optimal - objective value 42.996751
Coin0511I After Postsolve, objective 42.996751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.99675068 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 51 columns (50 integer (50 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 9.36686
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.5234 iterations 32
Cbc0038I Solution found of 18.5234
Cbc0038I Relaxing continuous gives 18.5234
Cbc0038I Rounding solution of 10.3086 is better than previous of 18.5234

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 10.3086 to -12.1874 (0.02 seconds)
Cbc0038I Round again with cutoff of -15.2685
Cbc0038I Pass   2: suminf.    3.20474 (12) obj. -15.2685 iterations 10
Cbc0038I Pass   3: suminf.    1.41113 (5) obj. -15.2685 iterations 14
Cbc0038I Pass   4: suminf.    1.41113 (5) obj. -15.2685 iterations 0
Cbc0038I Pass   5: suminf.    1.59773 (5) obj. -15.2685 iterations 7
Cbc0038I Pass   6: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass   7: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass   8: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass   9: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  10: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  11: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass  12: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass  13: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass  14: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  15: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  16: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass  17: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass  18: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass  19: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  20: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  21: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass  22: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass  23: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass  24: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  25: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  26: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass  27: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass  28: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass  29: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  30: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  31: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -12.1874 - took 0.04 seconds
Cbc0012I Integer solution of -12.187441 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 33 columns
Cbc0031I 18 added rows had average density of 35.777778
Cbc0013I At root node, 18 cuts changed objective from -42.996751 to -30.298013 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5849 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1330 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -12.187441, took 5050 iterations and 20 nodes (0.45 seconds)
Cbc0032I Strong branching done 322 times (4453 iterations), fathomed 3 nodes and fixed 20 variables
Cbc0035I Maximum depth 6, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-31) rows, 87 (-15) columns and 1058 (-520) elements
Clp1000I sum of infeasibilities 2.61558e-08 - average 3.58299e-10, 21 fixed columns
Coin0506I Presolve 54 (-19) rows, 64 (-23) columns and 598 (-460) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 4.5670414 - largest nonzero change 2.5782931e-05 ( 0.0013713985%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 58.600502
Clp0000I Optimal - objective value 58.600502
Coin0511I After Postsolve, objective 58.600502, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.600502
Clp0000I Optimal - objective value 58.600502
Clp0000I Optimal - objective value 58.600502
Coin0511I After Postsolve, objective 58.600502, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.60050203 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 87 columns (87 integer (87 of which binary)) and 1060 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.411%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.05519
Cbc0038I Pass   1: suminf.    2.71036 (24) obj. -30.8678 iterations 9
Cbc0038I Pass   2: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass   3: suminf.    1.24720 (13) obj. -15.2557 iterations 11
Cbc0038I Solution found of 2.82013
Cbc0038I Rounding solution of -6.03381 is better than previous of 2.82013

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 87 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -6.03381 to -6.22367 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.1082
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass   5: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass   6: suminf.    1.32424 (5) obj. -10.1082 iterations 26
Cbc0038I Pass   7: suminf.    1.19178 (3) obj. -10.1082 iterations 7
Cbc0038I Pass   8: suminf.    1.19178 (3) obj. -10.1082 iterations 0
Cbc0038I Pass   9: suminf.    0.17208 (2) obj. -10.1082 iterations 4
Cbc0038I Pass  10: suminf.    0.15556 (1) obj. -10.256 iterations 1
Cbc0038I Pass  11: suminf.    0.39486 (7) obj. -10.1082 iterations 7
Cbc0038I Pass  12: suminf.    1.31355 (5) obj. -10.1082 iterations 14
Cbc0038I Pass  13: suminf.    1.24578 (9) obj. -10.1082 iterations 5
Cbc0038I Pass  14: suminf.    0.43560 (2) obj. -10.1082 iterations 13
Cbc0038I Pass  15: suminf.    0.43560 (2) obj. -10.1082 iterations 0
Cbc0038I Pass  16: suminf.    0.57692 (2) obj. -10.1082 iterations 3
Cbc0038I Pass  17: suminf.    1.92240 (10) obj. -10.1082 iterations 22
Cbc0038I Pass  18: suminf.    1.60214 (10) obj. -10.1082 iterations 4
Cbc0038I Pass  19: suminf.    0.77682 (3) obj. -10.1082 iterations 14
Cbc0038I Pass  20: suminf.    0.64034 (3) obj. -10.6657 iterations 2
Cbc0038I Pass  21: suminf.    0.82616 (3) obj. -10.1082 iterations 4
Cbc0038I Pass  22: suminf.    3.46688 (16) obj. -10.1082 iterations 22
Cbc0038I Pass  23: suminf.    1.86955 (11) obj. -10.1082 iterations 7
Cbc0038I Pass  24: suminf.    1.75560 (11) obj. -10.1082 iterations 1
Cbc0038I Pass  25: suminf.    1.22166 (4) obj. -10.1082 iterations 21
Cbc0038I Pass  26: suminf.    1.22166 (4) obj. -10.1082 iterations 4
Cbc0038I Pass  27: suminf.    1.30960 (6) obj. -10.1082 iterations 6
Cbc0038I Pass  28: suminf.    1.30960 (6) obj. -10.1082 iterations 0
Cbc0038I Pass  29: suminf.    1.22166 (4) obj. -10.1082 iterations 9
Cbc0038I Pass  30: suminf.    2.67690 (11) obj. -10.1082 iterations 13
Cbc0038I Pass  31: suminf.    2.67690 (11) obj. -10.1082 iterations 0
Cbc0038I Pass  32: suminf.    1.27908 (4) obj. -10.1082 iterations 18
Cbc0038I Pass  33: suminf.    1.10766 (6) obj. -10.1082 iterations 4
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 87 columns, reduced to 27 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -6.22367 to -11.3403 (0.05 seconds)
Cbc0038I Round again with cutoff of -18.086
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass  34: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass  35: suminf.    1.69524 (9) obj. -18.086 iterations 31
Cbc0038I Pass  36: suminf.    1.27759 (8) obj. -18.086 iterations 5
Cbc0038I Pass  37: suminf.    1.07881 (7) obj. -18.086 iterations 13
Cbc0038I Pass  38: suminf.    1.07233 (6) obj. -18.086 iterations 3
Cbc0038I Pass  39: suminf.    1.35302 (6) obj. -18.086 iterations 10
Cbc0038I Pass  40: suminf.    1.28720 (6) obj. -18.086 iterations 5
Cbc0038I Pass  41: suminf.    1.32054 (6) obj. -18.086 iterations 5
Cbc0038I Pass  42: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I Pass  43: suminf.    1.81196 (7) obj. -18.086 iterations 6
Cbc0038I Pass  44: suminf.    1.81196 (7) obj. -18.086 iterations 0
Cbc0038I Pass  45: suminf.    1.90815 (7) obj. -18.086 iterations 7
Cbc0038I Pass  46: suminf.    1.32054 (6) obj. -18.086 iterations 5
Cbc0038I Pass  47: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I Pass  48: suminf.    1.81196 (7) obj. -18.086 iterations 6
Cbc0038I Pass  49: suminf.    1.81196 (7) obj. -18.086 iterations 0
Cbc0038I Pass  50: suminf.    1.90815 (7) obj. -18.086 iterations 7
Cbc0038I Pass  51: suminf.    1.32054 (6) obj. -18.086 iterations 5
Cbc0038I Pass  52: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I Pass  53: suminf.    1.81196 (7) obj. -18.086 iterations 6
Cbc0038I Pass  54: suminf.    1.81196 (7) obj. -18.086 iterations 0
Cbc0038I Pass  55: suminf.    1.90815 (7) obj. -18.086 iterations 6
Cbc0038I Pass  56: suminf.    1.32054 (6) obj. -18.086 iterations 5
Cbc0038I Pass  57: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I Pass  58: suminf.    1.81196 (7) obj. -18.086 iterations 6
Cbc0038I Pass  59: suminf.    1.81196 (7) obj. -18.086 iterations 0
Cbc0038I Pass  60: suminf.    1.90815 (7) obj. -18.086 iterations 7
Cbc0038I Pass  61: suminf.    1.32054 (6) obj. -18.086 iterations 6
Cbc0038I Pass  62: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -11.3403 - took 0.05 seconds
Cbc0012I Integer solution of -11.340311 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 73 rows 87 columns, reduced to 23 rows 29 columns
Cbc0031I 40 added rows had average density of 8.95
Cbc0013I At root node, 40 cuts changed objective from -45.068527 to -13.427567 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 852 row cuts average 2.7 elements, 14 column cuts (14 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 62 row cuts average 33.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.340311 best solution, best possible -13.427567 (0.31 seconds)
Cbc0012I Integer solution of -12.187441 found by rounding after 380 iterations and 4 nodes (0.53 seconds)
Cbc0001I Search completed - best objective -12.187441, took 443 iterations and 8 nodes (0.56 seconds)
Cbc0032I Strong branching done 154 times (1202 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 51 (-2) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 0.000242177 - average 2.81601e-06, 12 fixed columns
Coin0506I Presolve 65 (-21) rows, 39 (-12) columns and 200 (-66) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 42.996751
Clp0000I Optimal - objective value 42.996751
Coin0511I After Postsolve, objective 42.996751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.996751
Clp0000I Optimal - objective value 42.996751
Clp0000I Optimal - objective value 42.996751
Coin0511I After Postsolve, objective 42.996751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.99675068 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 51 columns (50 integer (50 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 9.36686
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.5234 iterations 32
Cbc0038I Solution found of 18.5234
Cbc0038I Relaxing continuous gives 18.5234
Cbc0038I Rounding solution of 10.3086 is better than previous of 18.5234

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 10.3086 to -12.1874 (0.03 seconds)
Cbc0038I Round again with cutoff of -15.2685
Cbc0038I Pass   2: suminf.    3.20474 (12) obj. -15.2685 iterations 10
Cbc0038I Pass   3: suminf.    1.41113 (5) obj. -15.2685 iterations 14
Cbc0038I Pass   4: suminf.    1.41113 (5) obj. -15.2685 iterations 0
Cbc0038I Pass   5: suminf.    1.59773 (5) obj. -15.2685 iterations 7
Cbc0038I Pass   6: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass   7: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass   8: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass   9: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  10: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  11: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass  12: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass  13: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass  14: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  15: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  16: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass  17: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass  18: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass  19: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  20: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  21: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass  22: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass  23: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass  24: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  25: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  26: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I Pass  27: suminf.    1.44944 (4) obj. -15.2685 iterations 4
Cbc0038I Pass  28: suminf.    1.06616 (4) obj. -15.2685 iterations 2
Cbc0038I Pass  29: suminf.    1.06616 (4) obj. -15.2685 iterations 0
Cbc0038I Pass  30: suminf.    1.59773 (5) obj. -15.2685 iterations 4
Cbc0038I Pass  31: suminf.    0.81542 (4) obj. -15.2685 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -12.1874 - took 0.04 seconds
Cbc0012I Integer solution of -12.187441 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 33 columns
Cbc0031I 18 added rows had average density of 35.777778
Cbc0013I At root node, 18 cuts changed objective from -42.996751 to -30.298013 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5849 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1330 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0001I Search completed - best objective -12.187441, took 5050 iterations and 20 nodes (0.48 seconds)
Cbc0032I Strong branching done 322 times (4453 iterations), fathomed 3 nodes and fixed 20 variables
Cbc0035I Maximum depth 6, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-32) rows, 87 (-16) columns and 1058 (-521) elements
Clp1000I sum of infeasibilities 2.61558e-08 - average 3.58299e-10, 21 fixed columns
Coin0506I Presolve 54 (-19) rows, 64 (-23) columns and 598 (-460) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 4.5670414 - largest nonzero change 2.5782931e-05 ( 0.0013713985%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 58.600502
Clp0000I Optimal - objective value 58.600502
Coin0511I After Postsolve, objective 58.600502, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.600502
Clp0000I Optimal - objective value 58.600502
Clp0000I Optimal - objective value 58.600502
Coin0511I After Postsolve, objective 58.600502, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.60050203 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 87 columns (87 integer (87 of which binary)) and 1060 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.411%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.05519
Cbc0038I Pass   1: suminf.    2.71036 (24) obj. -30.8678 iterations 9
Cbc0038I Pass   2: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass   3: suminf.    1.24720 (13) obj. -15.2557 iterations 11
Cbc0038I Solution found of 2.82013
Cbc0038I Rounding solution of -6.03381 is better than previous of 2.82013

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 87 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -6.03381 to -6.22367 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.1082
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass   5: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass   6: suminf.    1.32424 (5) obj. -10.1082 iterations 26
Cbc0038I Pass   7: suminf.    1.19178 (3) obj. -10.1082 iterations 7
Cbc0038I Pass   8: suminf.    1.19178 (3) obj. -10.1082 iterations 0
Cbc0038I Pass   9: suminf.    0.17208 (2) obj. -10.1082 iterations 4
Cbc0038I Pass  10: suminf.    0.15556 (1) obj. -10.256 iterations 1
Cbc0038I Pass  11: suminf.    0.39486 (7) obj. -10.1082 iterations 7
Cbc0038I Pass  12: suminf.    1.31355 (5) obj. -10.1082 iterations 14
Cbc0038I Pass  13: suminf.    1.24578 (9) obj. -10.1082 iterations 5
Cbc0038I Pass  14: suminf.    0.43560 (2) obj. -10.1082 iterations 13
Cbc0038I Pass  15: suminf.    0.43560 (2) obj. -10.1082 iterations 0
Cbc0038I Pass  16: suminf.    0.57692 (2) obj. -10.1082 iterations 3
Cbc0038I Pass  17: suminf.    1.92240 (10) obj. -10.1082 iterations 22
Cbc0038I Pass  18: suminf.    1.60214 (10) obj. -10.1082 iterations 4
Cbc0038I Pass  19: suminf.    0.77682 (3) obj. -10.1082 iterations 14
Cbc0038I Pass  20: suminf.    0.64034 (3) obj. -10.6657 iterations 2
Cbc0038I Pass  21: suminf.    0.82616 (3) obj. -10.1082 iterations 4
Cbc0038I Pass  22: suminf.    3.46688 (16) obj. -10.1082 iterations 22
Cbc0038I Pass  23: suminf.    1.86955 (11) obj. -10.1082 iterations 7
Cbc0038I Pass  24: suminf.    1.75560 (11) obj. -10.1082 iterations 1
Cbc0038I Pass  25: suminf.    1.22166 (4) obj. -10.1082 iterations 21
Cbc0038I Pass  26: suminf.    1.22166 (4) obj. -10.1082 iterations 4
Cbc0038I Pass  27: suminf.    1.30960 (6) obj. -10.1082 iterations 6
Cbc0038I Pass  28: suminf.    1.30960 (6) obj. -10.1082 iterations 0
Cbc0038I Pass  29: suminf.    1.22166 (4) obj. -10.1082 iterations 9
Cbc0038I Pass  30: suminf.    2.67690 (11) obj. -10.1082 iterations 13
Cbc0038I Pass  31: suminf.    2.67690 (11) obj. -10.1082 iterations 0
Cbc0038I Pass  32: suminf.    1.27908 (4) obj. -10.1082 iterations 18
Cbc0038I Pass  33: suminf.    1.10766 (6) obj. -10.1082 iterations 4
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 87 columns, reduced to 27 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -6.22367 to -11.3403 (0.06 seconds)
Cbc0038I Round again with cutoff of -18.086
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass  34: suminf.    2.71036 (24) obj. -30.8678 iterations 0
Cbc0038I Pass  35: suminf.    1.69524 (9) obj. -18.086 iterations 31
Cbc0038I Pass  36: suminf.    1.27759 (8) obj. -18.086 iterations 5
Cbc0038I Pass  37: suminf.    1.07881 (7) obj. -18.086 iterations 13
Cbc0038I Pass  38: suminf.    1.07233 (6) obj. -18.086 iterations 3
Cbc0038I Pass  39: suminf.    1.35302 (6) obj. -18.086 iterations 10
Cbc0038I Pass  40: suminf.    1.28720 (6) obj. -18.086 iterations 5
Cbc0038I Pass  41: suminf.    1.32054 (6) obj. -18.086 iterations 5
Cbc0038I Pass  42: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I Pass  43: suminf.    1.81196 (7) obj. -18.086 iterations 6
Cbc0038I Pass  44: suminf.    1.81196 (7) obj. -18.086 iterations 0
Cbc0038I Pass  45: suminf.    1.90815 (7) obj. -18.086 iterations 7
Cbc0038I Pass  46: suminf.    1.32054 (6) obj. -18.086 iterations 5
Cbc0038I Pass  47: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I Pass  48: suminf.    1.81196 (7) obj. -18.086 iterations 6
Cbc0038I Pass  49: suminf.    1.81196 (7) obj. -18.086 iterations 0
Cbc0038I Pass  50: suminf.    1.90815 (7) obj. -18.086 iterations 7
Cbc0038I Pass  51: suminf.    1.32054 (6) obj. -18.086 iterations 5
Cbc0038I Pass  52: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I Pass  53: suminf.    1.81196 (7) obj. -18.086 iterations 6
Cbc0038I Pass  54: suminf.    1.81196 (7) obj. -18.086 iterations 0
Cbc0038I Pass  55: suminf.    1.90815 (7) obj. -18.086 iterations 6
Cbc0038I Pass  56: suminf.    1.32054 (6) obj. -18.086 iterations 5
Cbc0038I Pass  57: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I Pass  58: suminf.    1.81196 (7) obj. -18.086 iterations 6
Cbc0038I Pass  59: suminf.    1.81196 (7) obj. -18.086 iterations 0
Cbc0038I Pass  60: suminf.    1.90815 (7) obj. -18.086 iterations 7
Cbc0038I Pass  61: suminf.    1.32054 (6) obj. -18.086 iterations 6
Cbc0038I Pass  62: suminf.    1.32054 (6) obj. -18.086 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -11.3403 - took 0.05 seconds
Cbc0012I Integer solution of -11.340311 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 73 rows 87 columns, reduced to 23 rows 29 columns
Cbc0031I 40 added rows had average density of 8.95
Cbc0013I At root node, 40 cuts changed objective from -45.068527 to -13.427567 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 852 row cuts average 2.7 elements, 14 column cuts (14 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 62 row cuts average 33.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.340311 best solution, best possible -13.427567 (0.35 seconds)
Cbc0012I Integer solution of -12.187441 found by rounding after 380 iterations and 4 nodes (0.62 seconds)
Cbc0001I Search completed - best objective -12.187441, took 443 iterations and 8 nodes (0.65 seconds)
Cbc0032I Strong branching done 154 times (1202 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.66

