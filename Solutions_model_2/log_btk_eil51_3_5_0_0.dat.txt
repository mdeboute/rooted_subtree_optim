Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-40) rows, 37 (-16) columns and 197 (-106) elements
Clp1000I sum of infeasibilities 6.58974e-06 - average 1.01381e-07, 2 fixed columns
Coin0506I Presolve 62 (-3) rows, 35 (-2) columns and 187 (-10) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 68.711647
Clp0000I Optimal - objective value 68.711647
Coin0511I After Postsolve, objective 68.711647, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.711647
Clp0000I Optimal - objective value 68.711647
Clp0000I Optimal - objective value 68.711647
Coin0511I After Postsolve, objective 68.711647, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.71164703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 37 columns (36 integer (36 of which binary)) and 197 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.270%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.26933
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.21221 iterations 21
Cbc0038I Solution found of -0.21221
Cbc0038I Relaxing continuous gives -0.21221
Cbc0038I Rounding solution of -12.6998 is better than previous of -0.21221

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -12.6998 to -29.9485 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.8249
Cbc0038I Pass   2: suminf.    1.58650 (6) obj. -33.8249 iterations 4
Cbc0038I Pass   3: suminf.    1.18248 (4) obj. -33.8249 iterations 2
Cbc0038I Pass   4: suminf.    0.73916 (3) obj. -33.8249 iterations 4
Cbc0038I Pass   5: suminf.    0.72303 (4) obj. -33.8249 iterations 1
Cbc0038I Pass   6: suminf.    0.90635 (5) obj. -33.8249 iterations 4
Cbc0038I Pass   7: suminf.    0.49331 (3) obj. -33.8249 iterations 2
Cbc0038I Pass   8: suminf.    2.66923 (7) obj. -33.8249 iterations 11
Cbc0038I Pass   9: suminf.    2.17102 (6) obj. -33.8249 iterations 3
Cbc0038I Pass  10: suminf.    1.68951 (7) obj. -33.8249 iterations 3
Cbc0038I Pass  11: suminf.    2.50434 (6) obj. -33.8249 iterations 9
Cbc0038I Pass  12: suminf.    2.28297 (8) obj. -33.8249 iterations 4
Cbc0038I Pass  13: suminf.    1.75506 (5) obj. -33.8249 iterations 8
Cbc0038I Pass  14: suminf.    1.41821 (5) obj. -33.8249 iterations 1
Cbc0038I Pass  15: suminf.    0.58273 (3) obj. -33.8249 iterations 5
Cbc0038I Pass  16: suminf.    0.69596 (4) obj. -33.8249 iterations 4
Cbc0038I Pass  17: suminf.    0.75786 (4) obj. -33.8249 iterations 4
Cbc0038I Pass  18: suminf.    2.45717 (9) obj. -33.8249 iterations 11
Cbc0038I Pass  19: suminf.    1.06008 (5) obj. -33.8249 iterations 5
Cbc0038I Pass  20: suminf.    1.12347 (4) obj. -33.8249 iterations 5
Cbc0038I Pass  21: suminf.    0.73118 (4) obj. -33.8249 iterations 1
Cbc0038I Pass  22: suminf.    1.53715 (5) obj. -33.8249 iterations 4
Cbc0038I Pass  23: suminf.    1.53715 (5) obj. -33.8249 iterations 0
Cbc0038I Pass  24: suminf.    1.84868 (5) obj. -33.8249 iterations 4
Cbc0038I Pass  25: suminf.    1.32327 (5) obj. -33.8249 iterations 1
Cbc0038I Pass  26: suminf.    1.32327 (5) obj. -33.8249 iterations 0
Cbc0038I Pass  27: suminf.    1.97839 (5) obj. -33.8249 iterations 4
Cbc0038I Pass  28: suminf.    1.55793 (6) obj. -33.8249 iterations 2
Cbc0038I Pass  29: suminf.    1.53715 (5) obj. -33.8249 iterations 1
Cbc0038I Pass  30: suminf.    1.84868 (5) obj. -33.8249 iterations 4
Cbc0038I Pass  31: suminf.    1.32327 (5) obj. -33.8249 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 41 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.9485 - took 0.04 seconds
Cbc0012I Integer solution of -29.948471 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 65 rows 37 columns, reduced to 35 rows 22 columns
Cbc0031I 11 added rows had average density of 28.272727
Cbc0013I At root node, 11 cuts changed objective from -68.711647 to -48.61131 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2908 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 661 row cuts average 37.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 63 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0012I Integer solution of -30.402691 found by DiveCoefficient after 3151 iterations and 6 nodes (0.30 seconds)
Cbc0001I Search completed - best objective -30.402691, took 3225 iterations and 10 nodes (0.30 seconds)
Cbc0032I Strong branching done 158 times (1976 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-39) rows, 72 (-30) columns and 792 (-786) elements
Clp1000I sum of infeasibilities 3.37534e-07 - average 5.19284e-09, 7 fixed columns
Coin0506I Presolve 60 (-5) rows, 65 (-7) columns and 659 (-133) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 5.1167379 - largest nonzero change 2.3368433e-05 ( 0.00095415479%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 91.086308
Clp0000I Optimal - objective value 91.086308
Coin0511I After Postsolve, objective 91.086308, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.086308
Clp0000I Optimal - objective value 91.086308
Clp0000I Optimal - objective value 91.086308
Coin0511I After Postsolve, objective 91.086308, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.08630821 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 65 rows, 72 columns (72 integer (72 of which binary)) and 796 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.992%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.15451
Cbc0038I Pass   1: suminf.    1.79484 (16) obj. -57.3976 iterations 21
Cbc0038I Pass   2: suminf.    1.79484 (16) obj. -57.3976 iterations 2
Cbc0038I Solution found of -14.1495
Cbc0038I Rounding solution of -17.9838 is better than previous of -14.1495

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.5587
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.79484 (16) obj. -57.3976 iterations 0
Cbc0038I Pass   4: suminf.    1.79484 (16) obj. -57.3976 iterations 1
Cbc0038I Pass   5: suminf.    0.21590 (1) obj. -23.5587 iterations 25
Cbc0038I Pass   6: suminf.    0.19444 (1) obj. -23.8162 iterations 2
Cbc0038I Pass   7: suminf.    1.23291 (7) obj. -23.5587 iterations 28
Cbc0038I Pass   8: suminf.    1.23291 (7) obj. -23.5587 iterations 1
Cbc0038I Pass   9: suminf.    0.84787 (13) obj. -23.5587 iterations 11
Cbc0038I Pass  10: suminf.    0.84787 (13) obj. -23.5587 iterations 1
Cbc0038I Pass  11: suminf.    0.67517 (2) obj. -23.5587 iterations 16
Cbc0038I Pass  12: suminf.    0.51786 (2) obj. -24.9745 iterations 2
Cbc0038I Pass  13: suminf.    1.30020 (9) obj. -30.194 iterations 20
Cbc0038I Pass  14: suminf.    1.30020 (9) obj. -30.194 iterations 3
Cbc0038I Pass  15: suminf.    0.77107 (3) obj. -23.5587 iterations 11
Cbc0038I Pass  16: suminf.    0.60235 (3) obj. -23.5587 iterations 1
Cbc0038I Pass  17: suminf.    0.73677 (4) obj. -23.5587 iterations 6
Cbc0038I Pass  18: suminf.    0.58776 (4) obj. -23.5587 iterations 1
Cbc0038I Pass  19: suminf.    0.77107 (3) obj. -23.5587 iterations 6
Cbc0038I Pass  20: suminf.    1.57102 (14) obj. -23.5587 iterations 22
Cbc0038I Pass  21: suminf.    1.52450 (13) obj. -23.5587 iterations 5
Cbc0038I Pass  22: suminf.    1.31115 (4) obj. -23.5587 iterations 20
Cbc0038I Pass  23: suminf.    0.88125 (4) obj. -23.5587 iterations 2
Cbc0038I Pass  24: suminf.    0.72751 (3) obj. -23.5587 iterations 11
Cbc0038I Pass  25: suminf.    0.71570 (3) obj. -23.5587 iterations 3
Cbc0038I Pass  26: suminf.    0.58276 (3) obj. -26.7294 iterations 5
Cbc0038I Pass  27: suminf.    0.58276 (3) obj. -26.7294 iterations 0
Cbc0038I Pass  28: suminf.    0.71570 (3) obj. -23.5587 iterations 7
Cbc0038I Pass  29: suminf.    1.14358 (7) obj. -23.5587 iterations 22
Cbc0038I Pass  30: suminf.    1.14358 (7) obj. -23.5587 iterations 0
Cbc0038I Pass  31: suminf.    0.64490 (3) obj. -23.5587 iterations 14
Cbc0038I Pass  32: suminf.    0.64490 (3) obj. -23.5587 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 43 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -14.1495 to -22.917 (0.04 seconds)
Cbc0038I Round again with cutoff of -33.5932
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.79484 (16) obj. -57.3976 iterations 0
Cbc0038I Pass  33: suminf.    1.79484 (16) obj. -57.3976 iterations 1
Cbc0038I Pass  34: suminf.    1.16225 (3) obj. -33.5932 iterations 28
Cbc0038I Pass  35: suminf.    0.79919 (4) obj. -38.3235 iterations 4
Cbc0038I Pass  36: suminf.    0.53811 (2) obj. -33.5932 iterations 7
Cbc0038I Pass  37: suminf.    0.53811 (2) obj. -33.5932 iterations 1
Cbc0038I Pass  38: suminf.    0.62212 (2) obj. -33.5932 iterations 2
Cbc0038I Pass  39: suminf.    1.51963 (8) obj. -33.5932 iterations 15
Cbc0038I Pass  40: suminf.    1.51963 (8) obj. -33.5932 iterations 0
Cbc0038I Pass  41: suminf.    0.90972 (18) obj. -33.5932 iterations 16
Cbc0038I Pass  42: suminf.    0.90972 (18) obj. -33.5932 iterations 0
Cbc0038I Pass  43: suminf.    0.74834 (5) obj. -33.5932 iterations 24
Cbc0038I Pass  44: suminf.    0.57750 (5) obj. -33.5932 iterations 4
Cbc0038I Pass  45: suminf.    0.76591 (5) obj. -33.5932 iterations 5
Cbc0038I Pass  46: suminf.    1.69405 (8) obj. -33.5932 iterations 6
Cbc0038I Pass  47: suminf.    1.40880 (7) obj. -34.8913 iterations 6
Cbc0038I Pass  48: suminf.    0.64873 (8) obj. -33.5932 iterations 15
Cbc0038I Pass  49: suminf.    0.64873 (8) obj. -33.5932 iterations 0
Cbc0038I Pass  50: suminf.    1.31428 (6) obj. -33.5932 iterations 8
Cbc0038I Pass  51: suminf.    1.31428 (6) obj. -33.5932 iterations 1
Cbc0038I Pass  52: suminf.    1.16833 (5) obj. -33.5932 iterations 3
Cbc0038I Pass  53: suminf.    1.16833 (5) obj. -33.5932 iterations 1
Cbc0038I Pass  54: suminf.    1.14761 (5) obj. -33.5932 iterations 3
Cbc0038I Pass  55: suminf.    1.14761 (5) obj. -33.5932 iterations 1
Cbc0038I Pass  56: suminf.    2.27537 (12) obj. -33.5932 iterations 9
Cbc0038I Pass  57: suminf.    2.23362 (9) obj. -33.5932 iterations 1
Cbc0038I Pass  58: suminf.    1.16833 (5) obj. -33.5932 iterations 15
Cbc0038I Pass  59: suminf.    1.16833 (5) obj. -33.5932 iterations 0
Cbc0038I Pass  60: suminf.    1.14761 (5) obj. -33.5932 iterations 3
Cbc0038I Pass  61: suminf.    1.14761 (5) obj. -33.5932 iterations 1
Cbc0038I Rounding solution of -28.0151 is better than previous of -22.917

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -28.0151 to -29.4512 (0.05 seconds)
Cbc0038I Round again with cutoff of -45.6347
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.79484 (16) obj. -57.3976 iterations 0
Cbc0038I Pass  62: suminf.    1.79484 (16) obj. -57.3976 iterations 1
Cbc0038I Pass  63: suminf.    1.96572 (20) obj. -45.6347 iterations 30
Cbc0038I Pass  64: suminf.    1.96572 (20) obj. -45.6347 iterations 0
Cbc0038I Pass  65: suminf.    1.79268 (13) obj. -45.6347 iterations 25
Cbc0038I Pass  66: suminf.    1.79268 (13) obj. -45.6347 iterations 0
Cbc0038I Pass  67: suminf.    1.39591 (12) obj. -45.6347 iterations 12
Cbc0038I Pass  68: suminf.    1.39591 (12) obj. -45.6347 iterations 0
Cbc0038I Pass  69: suminf.    2.35724 (10) obj. -45.6347 iterations 5
Cbc0038I Pass  70: suminf.    2.13054 (10) obj. -45.6347 iterations 4
Cbc0038I Pass  71: suminf.    1.89857 (10) obj. -45.6347 iterations 8
Cbc0038I Pass  72: suminf.    1.65436 (9) obj. -45.6347 iterations 1
Cbc0038I Pass  73: suminf.    1.62240 (13) obj. -45.6347 iterations 3
Cbc0038I Pass  74: suminf.    1.29113 (11) obj. -45.6347 iterations 4
Cbc0038I Pass  75: suminf.    1.10417 (8) obj. -46.132 iterations 5
Cbc0038I Pass  76: suminf.    1.29113 (11) obj. -45.6347 iterations 6
Cbc0038I Pass  77: suminf.    1.35106 (13) obj. -45.6347 iterations 10
Cbc0038I Pass  78: suminf.    1.35106 (13) obj. -45.6347 iterations 2
Cbc0038I Pass  79: suminf.    1.89857 (10) obj. -45.6347 iterations 10
Cbc0038I Pass  80: suminf.    1.65436 (9) obj. -45.6347 iterations 2
Cbc0038I Pass  81: suminf.    1.62240 (13) obj. -45.6347 iterations 3
Cbc0038I Pass  82: suminf.    1.29113 (11) obj. -45.6347 iterations 4
Cbc0038I Pass  83: suminf.    1.10417 (8) obj. -46.132 iterations 5
Cbc0038I Pass  84: suminf.    1.29113 (11) obj. -45.6347 iterations 6
Cbc0038I Pass  85: suminf.    3.03870 (16) obj. -45.6347 iterations 10
Cbc0038I Pass  86: suminf.    2.05943 (13) obj. -45.6347 iterations 6
Cbc0038I Pass  87: suminf.    1.81976 (11) obj. -45.6347 iterations 11
Cbc0038I Pass  88: suminf.    1.54571 (12) obj. -45.6347 iterations 4
Cbc0038I Pass  89: suminf.    1.89857 (10) obj. -45.6347 iterations 6
Cbc0038I Pass  90: suminf.    1.65436 (9) obj. -45.6347 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -29.4512 - took 0.06 seconds
Cbc0012I Integer solution of -29.451171 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 65 rows 72 columns, reduced to 20 rows 19 columns
Cbc0031I 29 added rows had average density of 17.655172
Cbc0013I At root node, 29 cuts changed objective from -73.731582 to -32.831395 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3388 row cuts average 4.5 elements, 14 column cuts (14 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1074 row cuts average 48.7 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 69 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 214 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 330 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 176 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.451171 best solution, best possible -32.831395 (1.66 seconds)
Cbc0012I Integer solution of -29.948471 found by rounding after 2228 iterations and 3 nodes (1.82 seconds)
Cbc0012I Integer solution of -30.402691 found by DiveCoefficient after 2520 iterations and 6 nodes (2.34 seconds)
Cbc0001I Search completed - best objective -30.402691, took 2597 iterations and 10 nodes (2.35 seconds)
Cbc0032I Strong branching done 190 times (2161 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 36 variables fixed on reduced cost
Total time (CPU seconds):       1.55   (Wallclock seconds):       2.36

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-40) rows, 37 (-16) columns and 197 (-106) elements
Clp1000I sum of infeasibilities 6.58974e-06 - average 1.01381e-07, 2 fixed columns
Coin0506I Presolve 62 (-3) rows, 35 (-2) columns and 187 (-10) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 68.711647
Clp0000I Optimal - objective value 68.711647
Coin0511I After Postsolve, objective 68.711647, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.711647
Clp0000I Optimal - objective value 68.711647
Clp0000I Optimal - objective value 68.711647
Coin0511I After Postsolve, objective 68.711647, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.71164703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 37 columns (36 integer (36 of which binary)) and 197 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.270%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.26933
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.21221 iterations 21
Cbc0038I Solution found of -0.21221
Cbc0038I Relaxing continuous gives -0.21221
Cbc0038I Rounding solution of -12.6998 is better than previous of -0.21221

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -12.6998 to -29.9485 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.8249
Cbc0038I Pass   2: suminf.    1.58650 (6) obj. -33.8249 iterations 4
Cbc0038I Pass   3: suminf.    1.18248 (4) obj. -33.8249 iterations 2
Cbc0038I Pass   4: suminf.    0.73916 (3) obj. -33.8249 iterations 4
Cbc0038I Pass   5: suminf.    0.72303 (4) obj. -33.8249 iterations 1
Cbc0038I Pass   6: suminf.    0.90635 (5) obj. -33.8249 iterations 4
Cbc0038I Pass   7: suminf.    0.49331 (3) obj. -33.8249 iterations 2
Cbc0038I Pass   8: suminf.    2.66923 (7) obj. -33.8249 iterations 11
Cbc0038I Pass   9: suminf.    2.17102 (6) obj. -33.8249 iterations 3
Cbc0038I Pass  10: suminf.    1.68951 (7) obj. -33.8249 iterations 3
Cbc0038I Pass  11: suminf.    2.50434 (6) obj. -33.8249 iterations 9
Cbc0038I Pass  12: suminf.    2.28297 (8) obj. -33.8249 iterations 4
Cbc0038I Pass  13: suminf.    1.75506 (5) obj. -33.8249 iterations 8
Cbc0038I Pass  14: suminf.    1.41821 (5) obj. -33.8249 iterations 1
Cbc0038I Pass  15: suminf.    0.58273 (3) obj. -33.8249 iterations 5
Cbc0038I Pass  16: suminf.    0.69596 (4) obj. -33.8249 iterations 4
Cbc0038I Pass  17: suminf.    0.75786 (4) obj. -33.8249 iterations 4
Cbc0038I Pass  18: suminf.    2.45717 (9) obj. -33.8249 iterations 11
Cbc0038I Pass  19: suminf.    1.06008 (5) obj. -33.8249 iterations 5
Cbc0038I Pass  20: suminf.    1.12347 (4) obj. -33.8249 iterations 5
Cbc0038I Pass  21: suminf.    0.73118 (4) obj. -33.8249 iterations 1
Cbc0038I Pass  22: suminf.    1.53715 (5) obj. -33.8249 iterations 4
Cbc0038I Pass  23: suminf.    1.53715 (5) obj. -33.8249 iterations 0
Cbc0038I Pass  24: suminf.    1.84868 (5) obj. -33.8249 iterations 4
Cbc0038I Pass  25: suminf.    1.32327 (5) obj. -33.8249 iterations 1
Cbc0038I Pass  26: suminf.    1.32327 (5) obj. -33.8249 iterations 0
Cbc0038I Pass  27: suminf.    1.97839 (5) obj. -33.8249 iterations 4
Cbc0038I Pass  28: suminf.    1.55793 (6) obj. -33.8249 iterations 2
Cbc0038I Pass  29: suminf.    1.53715 (5) obj. -33.8249 iterations 1
Cbc0038I Pass  30: suminf.    1.84868 (5) obj. -33.8249 iterations 4
Cbc0038I Pass  31: suminf.    1.32327 (5) obj. -33.8249 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 41 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.9485 - took 0.06 seconds
Cbc0012I Integer solution of -29.948471 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 65 rows 37 columns, reduced to 35 rows 22 columns
Cbc0031I 11 added rows had average density of 28.272727
Cbc0013I At root node, 11 cuts changed objective from -68.711647 to -48.61131 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2908 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 661 row cuts average 37.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 63 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0012I Integer solution of -30.402691 found by DiveCoefficient after 3151 iterations and 6 nodes (0.33 seconds)
Cbc0001I Search completed - best objective -30.402691, took 3225 iterations and 10 nodes (0.34 seconds)
Cbc0032I Strong branching done 158 times (1976 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-40) rows, 72 (-31) columns and 792 (-787) elements
Clp1000I sum of infeasibilities 3.37534e-07 - average 5.19284e-09, 7 fixed columns
Coin0506I Presolve 60 (-5) rows, 65 (-7) columns and 659 (-133) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 5.1167379 - largest nonzero change 2.3368433e-05 ( 0.00095415479%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 91.086308
Clp0000I Optimal - objective value 91.086308
Coin0511I After Postsolve, objective 91.086308, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.086308
Clp0000I Optimal - objective value 91.086308
Clp0000I Optimal - objective value 91.086308
Coin0511I After Postsolve, objective 91.086308, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.08630821 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 65 rows, 72 columns (72 integer (72 of which binary)) and 796 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.992%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.15451
Cbc0038I Pass   1: suminf.    1.79484 (16) obj. -57.3976 iterations 21
Cbc0038I Pass   2: suminf.    1.79484 (16) obj. -57.3976 iterations 2
Cbc0038I Solution found of -14.1495
Cbc0038I Rounding solution of -17.9838 is better than previous of -14.1495

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -23.5587
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.79484 (16) obj. -57.3976 iterations 0
Cbc0038I Pass   4: suminf.    1.79484 (16) obj. -57.3976 iterations 1
Cbc0038I Pass   5: suminf.    0.21590 (1) obj. -23.5587 iterations 25
Cbc0038I Pass   6: suminf.    0.19444 (1) obj. -23.8162 iterations 2
Cbc0038I Pass   7: suminf.    1.23291 (7) obj. -23.5587 iterations 28
Cbc0038I Pass   8: suminf.    1.23291 (7) obj. -23.5587 iterations 1
Cbc0038I Pass   9: suminf.    0.84787 (13) obj. -23.5587 iterations 11
Cbc0038I Pass  10: suminf.    0.84787 (13) obj. -23.5587 iterations 1
Cbc0038I Pass  11: suminf.    0.67517 (2) obj. -23.5587 iterations 16
Cbc0038I Pass  12: suminf.    0.51786 (2) obj. -24.9745 iterations 2
Cbc0038I Pass  13: suminf.    1.30020 (9) obj. -30.194 iterations 20
Cbc0038I Pass  14: suminf.    1.30020 (9) obj. -30.194 iterations 3
Cbc0038I Pass  15: suminf.    0.77107 (3) obj. -23.5587 iterations 11
Cbc0038I Pass  16: suminf.    0.60235 (3) obj. -23.5587 iterations 1
Cbc0038I Pass  17: suminf.    0.73677 (4) obj. -23.5587 iterations 6
Cbc0038I Pass  18: suminf.    0.58776 (4) obj. -23.5587 iterations 1
Cbc0038I Pass  19: suminf.    0.77107 (3) obj. -23.5587 iterations 6
Cbc0038I Pass  20: suminf.    1.57102 (14) obj. -23.5587 iterations 22
Cbc0038I Pass  21: suminf.    1.52450 (13) obj. -23.5587 iterations 5
Cbc0038I Pass  22: suminf.    1.31115 (4) obj. -23.5587 iterations 20
Cbc0038I Pass  23: suminf.    0.88125 (4) obj. -23.5587 iterations 2
Cbc0038I Pass  24: suminf.    0.72751 (3) obj. -23.5587 iterations 11
Cbc0038I Pass  25: suminf.    0.71570 (3) obj. -23.5587 iterations 3
Cbc0038I Pass  26: suminf.    0.58276 (3) obj. -26.7294 iterations 5
Cbc0038I Pass  27: suminf.    0.58276 (3) obj. -26.7294 iterations 0
Cbc0038I Pass  28: suminf.    0.71570 (3) obj. -23.5587 iterations 7
Cbc0038I Pass  29: suminf.    1.14358 (7) obj. -23.5587 iterations 22
Cbc0038I Pass  30: suminf.    1.14358 (7) obj. -23.5587 iterations 0
Cbc0038I Pass  31: suminf.    0.64490 (3) obj. -23.5587 iterations 14
Cbc0038I Pass  32: suminf.    0.64490 (3) obj. -23.5587 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 43 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -14.1495 to -22.917 (0.05 seconds)
Cbc0038I Round again with cutoff of -33.5932
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.79484 (16) obj. -57.3976 iterations 0
Cbc0038I Pass  33: suminf.    1.79484 (16) obj. -57.3976 iterations 1
Cbc0038I Pass  34: suminf.    1.16225 (3) obj. -33.5932 iterations 28
Cbc0038I Pass  35: suminf.    0.79919 (4) obj. -38.3235 iterations 4
Cbc0038I Pass  36: suminf.    0.53811 (2) obj. -33.5932 iterations 7
Cbc0038I Pass  37: suminf.    0.53811 (2) obj. -33.5932 iterations 1
Cbc0038I Pass  38: suminf.    0.62212 (2) obj. -33.5932 iterations 2
Cbc0038I Pass  39: suminf.    1.51963 (8) obj. -33.5932 iterations 15
Cbc0038I Pass  40: suminf.    1.51963 (8) obj. -33.5932 iterations 0
Cbc0038I Pass  41: suminf.    0.90972 (18) obj. -33.5932 iterations 16
Cbc0038I Pass  42: suminf.    0.90972 (18) obj. -33.5932 iterations 0
Cbc0038I Pass  43: suminf.    0.74834 (5) obj. -33.5932 iterations 24
Cbc0038I Pass  44: suminf.    0.57750 (5) obj. -33.5932 iterations 4
Cbc0038I Pass  45: suminf.    0.76591 (5) obj. -33.5932 iterations 5
Cbc0038I Pass  46: suminf.    1.69405 (8) obj. -33.5932 iterations 6
Cbc0038I Pass  47: suminf.    1.40880 (7) obj. -34.8913 iterations 6
Cbc0038I Pass  48: suminf.    0.64873 (8) obj. -33.5932 iterations 15
Cbc0038I Pass  49: suminf.    0.64873 (8) obj. -33.5932 iterations 0
Cbc0038I Pass  50: suminf.    1.31428 (6) obj. -33.5932 iterations 8
Cbc0038I Pass  51: suminf.    1.31428 (6) obj. -33.5932 iterations 1
Cbc0038I Pass  52: suminf.    1.16833 (5) obj. -33.5932 iterations 3
Cbc0038I Pass  53: suminf.    1.16833 (5) obj. -33.5932 iterations 1
Cbc0038I Pass  54: suminf.    1.14761 (5) obj. -33.5932 iterations 3
Cbc0038I Pass  55: suminf.    1.14761 (5) obj. -33.5932 iterations 1
Cbc0038I Pass  56: suminf.    2.27537 (12) obj. -33.5932 iterations 9
Cbc0038I Pass  57: suminf.    2.23362 (9) obj. -33.5932 iterations 1
Cbc0038I Pass  58: suminf.    1.16833 (5) obj. -33.5932 iterations 15
Cbc0038I Pass  59: suminf.    1.16833 (5) obj. -33.5932 iterations 0
Cbc0038I Pass  60: suminf.    1.14761 (5) obj. -33.5932 iterations 3
Cbc0038I Pass  61: suminf.    1.14761 (5) obj. -33.5932 iterations 1
Cbc0038I Rounding solution of -28.0151 is better than previous of -22.917

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -28.0151 to -29.4512 (0.06 seconds)
Cbc0038I Round again with cutoff of -45.6347
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.79484 (16) obj. -57.3976 iterations 0
Cbc0038I Pass  62: suminf.    1.79484 (16) obj. -57.3976 iterations 1
Cbc0038I Pass  63: suminf.    1.96572 (20) obj. -45.6347 iterations 30
Cbc0038I Pass  64: suminf.    1.96572 (20) obj. -45.6347 iterations 0
Cbc0038I Pass  65: suminf.    1.79268 (13) obj. -45.6347 iterations 25
Cbc0038I Pass  66: suminf.    1.79268 (13) obj. -45.6347 iterations 0
Cbc0038I Pass  67: suminf.    1.39591 (12) obj. -45.6347 iterations 12
Cbc0038I Pass  68: suminf.    1.39591 (12) obj. -45.6347 iterations 0
Cbc0038I Pass  69: suminf.    2.35724 (10) obj. -45.6347 iterations 5
Cbc0038I Pass  70: suminf.    2.13054 (10) obj. -45.6347 iterations 4
Cbc0038I Pass  71: suminf.    1.89857 (10) obj. -45.6347 iterations 8
Cbc0038I Pass  72: suminf.    1.65436 (9) obj. -45.6347 iterations 1
Cbc0038I Pass  73: suminf.    1.62240 (13) obj. -45.6347 iterations 3
Cbc0038I Pass  74: suminf.    1.29113 (11) obj. -45.6347 iterations 4
Cbc0038I Pass  75: suminf.    1.10417 (8) obj. -46.132 iterations 5
Cbc0038I Pass  76: suminf.    1.29113 (11) obj. -45.6347 iterations 6
Cbc0038I Pass  77: suminf.    1.35106 (13) obj. -45.6347 iterations 10
Cbc0038I Pass  78: suminf.    1.35106 (13) obj. -45.6347 iterations 2
Cbc0038I Pass  79: suminf.    1.89857 (10) obj. -45.6347 iterations 10
Cbc0038I Pass  80: suminf.    1.65436 (9) obj. -45.6347 iterations 2
Cbc0038I Pass  81: suminf.    1.62240 (13) obj. -45.6347 iterations 3
Cbc0038I Pass  82: suminf.    1.29113 (11) obj. -45.6347 iterations 4
Cbc0038I Pass  83: suminf.    1.10417 (8) obj. -46.132 iterations 5
Cbc0038I Pass  84: suminf.    1.29113 (11) obj. -45.6347 iterations 6
Cbc0038I Pass  85: suminf.    3.03870 (16) obj. -45.6347 iterations 10
Cbc0038I Pass  86: suminf.    2.05943 (13) obj. -45.6347 iterations 6
Cbc0038I Pass  87: suminf.    1.81976 (11) obj. -45.6347 iterations 11
Cbc0038I Pass  88: suminf.    1.54571 (12) obj. -45.6347 iterations 4
Cbc0038I Pass  89: suminf.    1.89857 (10) obj. -45.6347 iterations 6
Cbc0038I Pass  90: suminf.    1.65436 (9) obj. -45.6347 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -29.4512 - took 0.07 seconds
Cbc0012I Integer solution of -29.451171 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 65 rows 72 columns, reduced to 20 rows 19 columns
Cbc0031I 29 added rows had average density of 17.655172
Cbc0013I At root node, 29 cuts changed objective from -73.731582 to -32.831395 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3388 row cuts average 4.5 elements, 14 column cuts (14 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1074 row cuts average 48.7 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 69 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 214 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 330 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 176 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.790 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.451171 best solution, best possible -32.831395 (1.85 seconds)
Cbc0012I Integer solution of -29.948471 found by rounding after 2228 iterations and 3 nodes (2.02 seconds)
Cbc0012I Integer solution of -30.402691 found by DiveCoefficient after 2520 iterations and 6 nodes (2.56 seconds)
Cbc0010I After 6 nodes, 3 on tree, -30.402691 best solution, best possible -32.831395 (2.56 seconds)
Cbc0001I Search completed - best objective -30.402691, took 2597 iterations and 10 nodes (2.57 seconds)
Cbc0032I Strong branching done 190 times (2161 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 36 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       2.58

