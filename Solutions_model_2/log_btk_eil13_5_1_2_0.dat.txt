Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 22 (-7) rows, 13 (-2) columns and 63 (-12) elements
Clp1000I sum of infeasibilities 4.03778e-08 - average 1.83536e-09, 0 fixed columns
Coin0506I Presolve 22 (0) rows, 13 (0) columns and 63 (0) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 51.957275
Clp0000I Optimal - objective value 51.957275
Coin0511I After Postsolve, objective 51.957275, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.957275
Clp0000I Optimal - objective value 51.957275
Clp0000I Optimal - objective value 51.957275
Coin0511I After Postsolve, objective 51.957275, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.95727485 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 63 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.547%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.64975
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.9976 iterations 10
Cbc0038I Solution found of -15.9976
Cbc0038I Relaxing continuous gives -15.9976
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 18 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -15.9976 to -24.6825 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.0161
Cbc0038I Pass   2: suminf.    0.45426 (2) obj. -27.0161 iterations 2
Cbc0038I Pass   3: suminf.    0.88139 (4) obj. -27.0161 iterations 2
Cbc0038I Pass   4: suminf.    0.95626 (3) obj. -27.0161 iterations 3
Cbc0038I Pass   5: suminf.    0.45426 (2) obj. -27.0161 iterations 4
Cbc0038I Pass   6: suminf.    0.88139 (4) obj. -27.0161 iterations 2
Cbc0038I Pass   7: suminf.    1.37652 (4) obj. -27.0161 iterations 3
Cbc0038I Pass   8: suminf.    0.53081 (2) obj. -27.0161 iterations 3
Cbc0038I Pass   9: suminf.    0.45426 (2) obj. -27.0161 iterations 1
Cbc0038I Pass  10: suminf.    0.88139 (4) obj. -27.0161 iterations 2
Cbc0038I Pass  11: suminf.    0.95626 (3) obj. -27.0161 iterations 3
Cbc0038I Pass  12: suminf.    0.45426 (2) obj. -27.0161 iterations 4
Cbc0038I Pass  13: suminf.    0.77268 (3) obj. -27.0161 iterations 1
Cbc0038I Pass  14: suminf.    1.42280 (5) obj. -27.0161 iterations 6
Cbc0038I Pass  15: suminf.    1.16913 (4) obj. -27.0161 iterations 3
Cbc0038I Pass  16: suminf.    1.92206 (6) obj. -27.0161 iterations 2
Cbc0038I Pass  17: suminf.    1.13030 (4) obj. -27.0161 iterations 3
Cbc0038I Pass  18: suminf.    0.88139 (4) obj. -27.0161 iterations 4
Cbc0038I Pass  19: suminf.    0.95626 (3) obj. -27.0161 iterations 3
Cbc0038I Pass  20: suminf.    0.45426 (2) obj. -27.0161 iterations 4
Cbc0038I Pass  21: suminf.    0.45426 (2) obj. -27.0161 iterations 0
Cbc0038I Pass  22: suminf.    0.73633 (2) obj. -27.0161 iterations 2
Cbc0038I Pass  23: suminf.    1.27329 (4) obj. -27.0161 iterations 4
Cbc0038I Pass  24: suminf.    1.09845 (3) obj. -27.0161 iterations 2
Cbc0038I Pass  25: suminf.    1.42313 (5) obj. -27.0161 iterations 6
Cbc0038I Pass  26: suminf.    0.94512 (3) obj. -27.0161 iterations 5
Cbc0038I Pass  27: suminf.    0.92397 (3) obj. -27.0161 iterations 2
Cbc0038I Pass  28: suminf.    0.90461 (2) obj. -27.0161 iterations 4
Cbc0038I Pass  29: suminf.    0.83696 (4) obj. -27.0161 iterations 2
Cbc0038I Pass  30: suminf.    0.88139 (4) obj. -27.0161 iterations 1
Cbc0038I Pass  31: suminf.    0.88139 (4) obj. -27.0161 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -24.6825 - took 0.01 seconds
Cbc0012I Integer solution of -24.6825 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -48.017876 to -48.017876 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24.6825, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-11) rows, 19 (-7) columns and 104 (-49) elements
Clp1000I sum of infeasibilities 0 - average 0, 3 fixed columns
Coin0506I Presolve 15 (-2) rows, 16 (-3) columns and 78 (-26) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 2.0355122 - largest nonzero change 1.8531825e-05 ( 0.0010614613%) - largest zero change 2.8893025e-05
Clp0000I Optimal - objective value 62.628098
Clp0000I Optimal - objective value 62.628098
Coin0511I After Postsolve, objective 62.628098, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.628098
Clp0000I Optimal - objective value 62.628098
Clp0000I Optimal - objective value 62.628098
Coin0511I After Postsolve, objective 62.628098, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.6280983 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 23 columns (23 integer (23 of which binary)) and 127 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.286%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.755924
Cbc0038I Pass   1: suminf.    0.56988 (5) obj. -29.8814 iterations 1
Cbc0038I Solution found of 9.1939
Cbc0038I Rounding solution of 8.53578 is better than previous of 9.1939

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 4.19164
Cbc0038I Pass   2: suminf.    0.56988 (5) obj. -29.8814 iterations 0
Cbc0038I Pass   3: suminf.    0.18527 (1) obj. 4.19164 iterations 8
Cbc0038I Pass   4: suminf.    0.18605 (1) obj. 4.17064 iterations 1
Cbc0038I Pass   5: suminf.    0.42890 (3) obj. -13.3579 iterations 2
Cbc0038I Pass   6: suminf.    0.24286 (2) obj. -8.33467 iterations 1
Cbc0038I Pass   7: suminf.    0.42890 (3) obj. -7.35793 iterations 2
Cbc0038I Pass   8: suminf.    0.24286 (2) obj. -2.33467 iterations 1
Cbc0038I Pass   9: suminf.    0.61312 (2) obj. 4.19164 iterations 4
Cbc0038I Pass  10: suminf.    0.27696 (2) obj. -2.55663 iterations 1
Cbc0038I Pass  11: suminf.    0.09091 (1) obj. 2.46663 iterations 1
Cbc0038I Pass  12: suminf.    0.49901 (3) obj. 4.19164 iterations 3
Cbc0038I Pass  13: suminf.    0.51030 (3) obj. 4.19164 iterations 1
Cbc0038I Pass  14: suminf.    0.51030 (3) obj. 4.19164 iterations 0
Cbc0038I Pass  15: suminf.    0.79272 (3) obj. 4.19164 iterations 1
Cbc0038I Pass  16: suminf.    0.79272 (3) obj. 4.19164 iterations 0
Cbc0038I Pass  17: suminf.    0.53976 (3) obj. 4.19164 iterations 2
Cbc0038I Pass  18: suminf.    0.92638 (2) obj. 4.19164 iterations 8
Cbc0038I Pass  19: suminf.    0.92638 (2) obj. 4.19164 iterations 2
Cbc0038I Pass  20: suminf.    0.36592 (2) obj. 4.19164 iterations 1
Cbc0038I Pass  21: suminf.    0.47937 (3) obj. 4.19164 iterations 5
Cbc0038I Pass  22: suminf.    0.18182 (1) obj. 0.449175 iterations 3
Cbc0038I Pass  23: suminf.    0.31332 (2) obj. 4.19164 iterations 2
Cbc0038I Pass  24: suminf.    0.43763 (2) obj. -6.4578 iterations 1
Cbc0038I Pass  25: suminf.    0.38182 (2) obj. -6.75083 iterations 3
Cbc0038I Pass  26: suminf.    0.38182 (2) obj. -6.75083 iterations 1
Cbc0038I Pass  27: suminf.    0.78850 (4) obj. -23.1187 iterations 3
Cbc0038I Pass  28: suminf.    0.32324 (2) obj. 4.19164 iterations 5
Cbc0038I Pass  29: suminf.    0.32347 (2) obj. -7.26612 iterations 1
Cbc0038I Pass  30: suminf.    0.09091 (1) obj. -0.987053 iterations 1
Cbc0038I Pass  31: suminf.    0.18182 (1) obj. -1.55083 iterations 11
Cbc0038I Rounding solution of -0.917905 is better than previous of 8.53578

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 23 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -0.917905 to -24.6825 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.727
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.56988 (5) obj. -29.8814 iterations 0
Cbc0038I Pass  32: suminf.    0.64817 (5) obj. -26.727 iterations 3
Cbc0038I Pass  33: suminf.    0.64817 (5) obj. -26.727 iterations 0
Cbc0038I Pass  34: suminf.    1.00841 (5) obj. -26.727 iterations 2
Cbc0038I Pass  35: suminf.    1.00841 (5) obj. -26.727 iterations 0
Cbc0038I Pass  36: suminf.    0.64817 (5) obj. -26.727 iterations 1
Cbc0038I Pass  37: suminf.    1.04480 (6) obj. -26.727 iterations 4
Cbc0038I Pass  38: suminf.    0.63823 (6) obj. -26.727 iterations 2
Cbc0038I Pass  39: suminf.    0.64817 (5) obj. -26.727 iterations 3
Cbc0038I Pass  40: suminf.    0.64817 (5) obj. -26.727 iterations 0
Cbc0038I Pass  41: suminf.    1.00841 (5) obj. -26.727 iterations 2
Cbc0038I Pass  42: suminf.    1.00841 (5) obj. -26.727 iterations 0
Cbc0038I Pass  43: suminf.    0.64817 (5) obj. -26.727 iterations 1
Cbc0038I Pass  44: suminf.    1.07207 (6) obj. -26.727 iterations 5
Cbc0038I Pass  45: suminf.    0.39980 (3) obj. -26.727 iterations 2
Cbc0038I Pass  46: suminf.    0.49448 (3) obj. -26.727 iterations 1
Cbc0038I Pass  47: suminf.    0.87040 (6) obj. -26.727 iterations 7
Cbc0038I Pass  48: suminf.    0.87040 (6) obj. -26.727 iterations 2
Cbc0038I Pass  49: suminf.    0.64817 (5) obj. -26.727 iterations 2
Cbc0038I Pass  50: suminf.    0.64817 (5) obj. -26.727 iterations 1
Cbc0038I Pass  51: suminf.    1.00841 (5) obj. -26.727 iterations 3
Cbc0038I Pass  52: suminf.    1.00841 (5) obj. -26.727 iterations 0
Cbc0038I Pass  53: suminf.    0.64817 (5) obj. -26.727 iterations 1
Cbc0038I Pass  54: suminf.    2.02701 (9) obj. -26.727 iterations 4
Cbc0038I Pass  55: suminf.    0.56416 (5) obj. -26.727 iterations 3
Cbc0038I Pass  56: suminf.    0.56416 (5) obj. -26.727 iterations 0
Cbc0038I Pass  57: suminf.    0.99145 (5) obj. -26.727 iterations 1
Cbc0038I Pass  58: suminf.    0.83122 (5) obj. -26.727 iterations 1
Cbc0038I Pass  59: suminf.    0.82495 (2) obj. -26.727 iterations 3
Cbc0038I Pass  60: suminf.    0.82495 (2) obj. -26.727 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 23 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -24.6825 - took 0.02 seconds
Cbc0012I Integer solution of -24.6825 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 23 columns, reduced to 3 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -34.904644 to -34.904644 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24.6825, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 22 (-7) rows, 13 (-2) columns and 63 (-12) elements
Clp1000I sum of infeasibilities 4.03778e-08 - average 1.83536e-09, 0 fixed columns
Coin0506I Presolve 22 (0) rows, 13 (0) columns and 63 (0) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 51.957275
Clp0000I Optimal - objective value 51.957275
Coin0511I After Postsolve, objective 51.957275, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.957275
Clp0000I Optimal - objective value 51.957275
Clp0000I Optimal - objective value 51.957275
Coin0511I After Postsolve, objective 51.957275, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.95727485 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 63 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.547%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.64975
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.9976 iterations 10
Cbc0038I Solution found of -15.9976
Cbc0038I Relaxing continuous gives -15.9976
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 18 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -15.9976 to -24.6825 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.0161
Cbc0038I Pass   2: suminf.    0.45426 (2) obj. -27.0161 iterations 2
Cbc0038I Pass   3: suminf.    0.88139 (4) obj. -27.0161 iterations 2
Cbc0038I Pass   4: suminf.    0.95626 (3) obj. -27.0161 iterations 3
Cbc0038I Pass   5: suminf.    0.45426 (2) obj. -27.0161 iterations 4
Cbc0038I Pass   6: suminf.    0.88139 (4) obj. -27.0161 iterations 2
Cbc0038I Pass   7: suminf.    1.37652 (4) obj. -27.0161 iterations 3
Cbc0038I Pass   8: suminf.    0.53081 (2) obj. -27.0161 iterations 3
Cbc0038I Pass   9: suminf.    0.45426 (2) obj. -27.0161 iterations 1
Cbc0038I Pass  10: suminf.    0.88139 (4) obj. -27.0161 iterations 2
Cbc0038I Pass  11: suminf.    0.95626 (3) obj. -27.0161 iterations 3
Cbc0038I Pass  12: suminf.    0.45426 (2) obj. -27.0161 iterations 4
Cbc0038I Pass  13: suminf.    0.77268 (3) obj. -27.0161 iterations 1
Cbc0038I Pass  14: suminf.    1.42280 (5) obj. -27.0161 iterations 6
Cbc0038I Pass  15: suminf.    1.16913 (4) obj. -27.0161 iterations 3
Cbc0038I Pass  16: suminf.    1.92206 (6) obj. -27.0161 iterations 2
Cbc0038I Pass  17: suminf.    1.13030 (4) obj. -27.0161 iterations 3
Cbc0038I Pass  18: suminf.    0.88139 (4) obj. -27.0161 iterations 4
Cbc0038I Pass  19: suminf.    0.95626 (3) obj. -27.0161 iterations 3
Cbc0038I Pass  20: suminf.    0.45426 (2) obj. -27.0161 iterations 4
Cbc0038I Pass  21: suminf.    0.45426 (2) obj. -27.0161 iterations 0
Cbc0038I Pass  22: suminf.    0.73633 (2) obj. -27.0161 iterations 2
Cbc0038I Pass  23: suminf.    1.27329 (4) obj. -27.0161 iterations 4
Cbc0038I Pass  24: suminf.    1.09845 (3) obj. -27.0161 iterations 2
Cbc0038I Pass  25: suminf.    1.42313 (5) obj. -27.0161 iterations 6
Cbc0038I Pass  26: suminf.    0.94512 (3) obj. -27.0161 iterations 5
Cbc0038I Pass  27: suminf.    0.92397 (3) obj. -27.0161 iterations 2
Cbc0038I Pass  28: suminf.    0.90461 (2) obj. -27.0161 iterations 4
Cbc0038I Pass  29: suminf.    0.83696 (4) obj. -27.0161 iterations 2
Cbc0038I Pass  30: suminf.    0.88139 (4) obj. -27.0161 iterations 1
Cbc0038I Pass  31: suminf.    0.88139 (4) obj. -27.0161 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -24.6825 - took 0.01 seconds
Cbc0012I Integer solution of -24.6825 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -48.017876 to -48.017876 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24.6825, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-12) rows, 19 (-8) columns and 104 (-50) elements
Clp1000I sum of infeasibilities 0 - average 0, 3 fixed columns
Coin0506I Presolve 15 (-2) rows, 16 (-3) columns and 78 (-26) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 2.0355122 - largest nonzero change 1.8531825e-05 ( 0.0010614613%) - largest zero change 2.8893025e-05
Clp0000I Optimal - objective value 62.628098
Clp0000I Optimal - objective value 62.628098
Coin0511I After Postsolve, objective 62.628098, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.628098
Clp0000I Optimal - objective value 62.628098
Clp0000I Optimal - objective value 62.628098
Coin0511I After Postsolve, objective 62.628098, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.6280983 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 23 columns (23 integer (23 of which binary)) and 127 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.286%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.755924
Cbc0038I Pass   1: suminf.    0.56988 (5) obj. -29.8814 iterations 1
Cbc0038I Solution found of 9.1939
Cbc0038I Rounding solution of 8.53578 is better than previous of 9.1939

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 4.19164
Cbc0038I Pass   2: suminf.    0.56988 (5) obj. -29.8814 iterations 0
Cbc0038I Pass   3: suminf.    0.18527 (1) obj. 4.19164 iterations 8
Cbc0038I Pass   4: suminf.    0.18605 (1) obj. 4.17064 iterations 1
Cbc0038I Pass   5: suminf.    0.42890 (3) obj. -13.3579 iterations 2
Cbc0038I Pass   6: suminf.    0.24286 (2) obj. -8.33467 iterations 1
Cbc0038I Pass   7: suminf.    0.42890 (3) obj. -7.35793 iterations 2
Cbc0038I Pass   8: suminf.    0.24286 (2) obj. -2.33467 iterations 1
Cbc0038I Pass   9: suminf.    0.61312 (2) obj. 4.19164 iterations 4
Cbc0038I Pass  10: suminf.    0.27696 (2) obj. -2.55663 iterations 1
Cbc0038I Pass  11: suminf.    0.09091 (1) obj. 2.46663 iterations 1
Cbc0038I Pass  12: suminf.    0.49901 (3) obj. 4.19164 iterations 3
Cbc0038I Pass  13: suminf.    0.51030 (3) obj. 4.19164 iterations 1
Cbc0038I Pass  14: suminf.    0.51030 (3) obj. 4.19164 iterations 0
Cbc0038I Pass  15: suminf.    0.79272 (3) obj. 4.19164 iterations 1
Cbc0038I Pass  16: suminf.    0.79272 (3) obj. 4.19164 iterations 0
Cbc0038I Pass  17: suminf.    0.53976 (3) obj. 4.19164 iterations 2
Cbc0038I Pass  18: suminf.    0.92638 (2) obj. 4.19164 iterations 8
Cbc0038I Pass  19: suminf.    0.92638 (2) obj. 4.19164 iterations 2
Cbc0038I Pass  20: suminf.    0.36592 (2) obj. 4.19164 iterations 1
Cbc0038I Pass  21: suminf.    0.47937 (3) obj. 4.19164 iterations 5
Cbc0038I Pass  22: suminf.    0.18182 (1) obj. 0.449175 iterations 3
Cbc0038I Pass  23: suminf.    0.31332 (2) obj. 4.19164 iterations 2
Cbc0038I Pass  24: suminf.    0.43763 (2) obj. -6.4578 iterations 1
Cbc0038I Pass  25: suminf.    0.38182 (2) obj. -6.75083 iterations 3
Cbc0038I Pass  26: suminf.    0.38182 (2) obj. -6.75083 iterations 1
Cbc0038I Pass  27: suminf.    0.78850 (4) obj. -23.1187 iterations 3
Cbc0038I Pass  28: suminf.    0.32324 (2) obj. 4.19164 iterations 5
Cbc0038I Pass  29: suminf.    0.32347 (2) obj. -7.26612 iterations 1
Cbc0038I Pass  30: suminf.    0.09091 (1) obj. -0.987053 iterations 1
Cbc0038I Pass  31: suminf.    0.18182 (1) obj. -1.55083 iterations 11
Cbc0038I Rounding solution of -0.917905 is better than previous of 8.53578

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 23 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -0.917905 to -24.6825 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.727
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.56988 (5) obj. -29.8814 iterations 0
Cbc0038I Pass  32: suminf.    0.64817 (5) obj. -26.727 iterations 3
Cbc0038I Pass  33: suminf.    0.64817 (5) obj. -26.727 iterations 0
Cbc0038I Pass  34: suminf.    1.00841 (5) obj. -26.727 iterations 2
Cbc0038I Pass  35: suminf.    1.00841 (5) obj. -26.727 iterations 0
Cbc0038I Pass  36: suminf.    0.64817 (5) obj. -26.727 iterations 1
Cbc0038I Pass  37: suminf.    1.04480 (6) obj. -26.727 iterations 4
Cbc0038I Pass  38: suminf.    0.63823 (6) obj. -26.727 iterations 2
Cbc0038I Pass  39: suminf.    0.64817 (5) obj. -26.727 iterations 3
Cbc0038I Pass  40: suminf.    0.64817 (5) obj. -26.727 iterations 0
Cbc0038I Pass  41: suminf.    1.00841 (5) obj. -26.727 iterations 2
Cbc0038I Pass  42: suminf.    1.00841 (5) obj. -26.727 iterations 0
Cbc0038I Pass  43: suminf.    0.64817 (5) obj. -26.727 iterations 1
Cbc0038I Pass  44: suminf.    1.07207 (6) obj. -26.727 iterations 5
Cbc0038I Pass  45: suminf.    0.39980 (3) obj. -26.727 iterations 2
Cbc0038I Pass  46: suminf.    0.49448 (3) obj. -26.727 iterations 1
Cbc0038I Pass  47: suminf.    0.87040 (6) obj. -26.727 iterations 7
Cbc0038I Pass  48: suminf.    0.87040 (6) obj. -26.727 iterations 2
Cbc0038I Pass  49: suminf.    0.64817 (5) obj. -26.727 iterations 2
Cbc0038I Pass  50: suminf.    0.64817 (5) obj. -26.727 iterations 1
Cbc0038I Pass  51: suminf.    1.00841 (5) obj. -26.727 iterations 3
Cbc0038I Pass  52: suminf.    1.00841 (5) obj. -26.727 iterations 0
Cbc0038I Pass  53: suminf.    0.64817 (5) obj. -26.727 iterations 1
Cbc0038I Pass  54: suminf.    2.02701 (9) obj. -26.727 iterations 4
Cbc0038I Pass  55: suminf.    0.56416 (5) obj. -26.727 iterations 3
Cbc0038I Pass  56: suminf.    0.56416 (5) obj. -26.727 iterations 0
Cbc0038I Pass  57: suminf.    0.99145 (5) obj. -26.727 iterations 1
Cbc0038I Pass  58: suminf.    0.83122 (5) obj. -26.727 iterations 1
Cbc0038I Pass  59: suminf.    0.82495 (2) obj. -26.727 iterations 3
Cbc0038I Pass  60: suminf.    0.82495 (2) obj. -26.727 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 23 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -24.6825 - took 0.01 seconds
Cbc0012I Integer solution of -24.6825 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 23 columns, reduced to 3 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -34.904644 to -34.904644 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24.6825, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

