Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-22) rows, 49 (-4) columns and 257 (-46) elements
Clp1000I sum of infeasibilities 1.2216e-05 - average 1.47181e-07, 9 fixed columns
Coin0506I Presolve 64 (-19) rows, 39 (-10) columns and 199 (-58) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 38.53745
Clp0000I Optimal - objective value 38.53745
Coin0511I After Postsolve, objective 38.53745, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.53745
Clp0000I Optimal - objective value 38.53745
Clp0000I Optimal - objective value 38.53745
Coin0511I After Postsolve, objective 38.53745, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.5374504 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 49 columns (48 integer (48 of which binary)) and 257 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.670%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.50221
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.87 iterations 30
Cbc0038I Solution found of 13.87
Cbc0038I Relaxing continuous gives 13.87
Cbc0038I Rounding solution of 0.474143 is better than previous of 13.87

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 49 columns, reduced to 47 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 0.474143 to -9.38083 (0.03 seconds)
Cbc0038I Round again with cutoff of -12.2966
Cbc0038I Pass   2: suminf.    2.32958 (6) obj. -12.2966 iterations 6
Cbc0038I Pass   3: suminf.    2.32958 (6) obj. -12.2966 iterations 1
Cbc0038I Pass   4: suminf.    1.43568 (5) obj. -12.2966 iterations 6
Cbc0038I Pass   5: suminf.    1.08830 (4) obj. -12.2966 iterations 1
Cbc0038I Pass   6: suminf.    0.81312 (3) obj. -12.2966 iterations 2
Cbc0038I Pass   7: suminf.    1.43568 (5) obj. -12.2966 iterations 3
Cbc0038I Pass   8: suminf.    1.87875 (6) obj. -12.2966 iterations 8
Cbc0038I Pass   9: suminf.    1.87875 (6) obj. -12.2966 iterations 3
Cbc0038I Pass  10: suminf.    2.01197 (6) obj. -12.2966 iterations 7
Cbc0038I Pass  11: suminf.    2.01197 (6) obj. -12.2966 iterations 1
Cbc0038I Pass  12: suminf.    1.22214 (6) obj. -12.2966 iterations 7
Cbc0038I Pass  13: suminf.    1.22214 (6) obj. -12.2966 iterations 2
Cbc0038I Pass  14: suminf.    2.01197 (6) obj. -12.2966 iterations 8
Cbc0038I Pass  15: suminf.    1.03319 (9) obj. -12.2966 iterations 13
Cbc0038I Pass  16: suminf.    0.76385 (6) obj. -12.2966 iterations 8
Cbc0038I Pass  17: suminf.    0.73859 (6) obj. -12.2966 iterations 6
Cbc0038I Pass  18: suminf.    0.53500 (4) obj. -12.2966 iterations 2
Cbc0038I Pass  19: suminf.    0.76083 (4) obj. -12.2966 iterations 4
Cbc0038I Pass  20: suminf.    0.76083 (4) obj. -12.2966 iterations 0
Cbc0038I Pass  21: suminf.    0.54554 (5) obj. -12.2966 iterations 4
Cbc0038I Pass  22: suminf.    0.65384 (3) obj. -12.2966 iterations 13
Cbc0038I Pass  23: suminf.    0.65384 (3) obj. -12.2966 iterations 2
Cbc0038I Pass  24: suminf.    0.71790 (4) obj. -12.2966 iterations 6
Cbc0038I Pass  25: suminf.    0.46531 (3) obj. -12.2966 iterations 1
Cbc0038I Pass  26: suminf.    0.18965 (1) obj. -12.2966 iterations 3
Cbc0038I Pass  27: suminf.    1.77391 (9) obj. -12.2966 iterations 15
Cbc0038I Pass  28: suminf.    1.51360 (6) obj. -12.2966 iterations 4
Cbc0038I Pass  29: suminf.    1.78261 (7) obj. -12.2966 iterations 9
Cbc0038I Pass  30: suminf.    1.78261 (7) obj. -12.2966 iterations 0
Cbc0038I Pass  31: suminf.    2.46202 (6) obj. -12.2966 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 49 columns, reduced to 54 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -9.38083 - took 0.08 seconds
Cbc0012I Integer solution of -9.38083 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 83 rows 49 columns, reduced to 47 rows 29 columns
Cbc0031I 18 added rows had average density of 33.888889
Cbc0013I At root node, 18 cuts changed objective from -38.53745 to -24.16928 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4877 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1272 row cuts average 48.8 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -9.380830000000003, took 5092 iterations and 26 nodes (0.50 seconds)
Cbc0032I Strong branching done 358 times (5689 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 9, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-35) rows, 82 (-20) columns and 1040 (-538) elements
Clp1000I sum of infeasibilities 8.61334e-08 - average 1.24831e-09, 49 fixed columns
Coin0506I Presolve 24 (-45) rows, 33 (-49) columns and 109 (-931) elements
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 2.0692048 - largest nonzero change 2.6416385e-05 ( 0.00085212775%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value -7.0521622
Clp0000I Optimal - objective value -7.0521622
Coin0511I After Postsolve, objective -7.0521622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.5076818 - largest nonzero change 1.4735674e-05 ( 0.0014365432%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 55.206907
Clp0000I Optimal - objective value 55.206907
Clp0000I Optimal - objective value 55.206907
Coin0511I After Postsolve, objective 55.206907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.20690672 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 82 columns (82 integer (82 of which binary)) and 1046 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.095%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 6.80187
Cbc0038I Pass   1: suminf.    2.66980 (24) obj. -29.9324 iterations 18
Cbc0038I Pass   2: suminf.    2.19165 (23) obj. -28.0072 iterations 2
Cbc0038I Pass   3: suminf.    0.07846 (2) obj. 2.95226 iterations 21
Cbc0038I Solution found of 5.8338
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 5.8338 to 2.14456 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.95422
Cbc0038I Pass   4: suminf.    2.66980 (24) obj. -29.9324 iterations 0
Cbc0038I Pass   5: suminf.    2.19165 (23) obj. -28.0072 iterations 3
Cbc0038I Pass   6: suminf.    0.73350 (4) obj. -1.95422 iterations 24
Cbc0038I Pass   7: suminf.    0.69113 (4) obj. -2.75348 iterations 1
Cbc0038I Pass   8: suminf.    0.64714 (3) obj. -1.95422 iterations 10
Cbc0038I Pass   9: suminf.    0.58952 (3) obj. -1.95422 iterations 1
Cbc0038I Pass  10: suminf.    0.46205 (2) obj. -1.95422 iterations 2
Cbc0038I Pass  11: suminf.    0.33331 (2) obj. -1.95422 iterations 2
Cbc0038I Pass  12: suminf.    3.11551 (9) obj. -1.95422 iterations 12
Cbc0038I Pass  13: suminf.    1.81472 (6) obj. -1.95422 iterations 5
Cbc0038I Pass  14: suminf.    0.93525 (5) obj. -1.95422 iterations 8
Cbc0038I Pass  15: suminf.    0.91797 (3) obj. -1.95422 iterations 4
Cbc0038I Pass  16: suminf.    0.55989 (3) obj. -1.95422 iterations 2
Cbc0038I Pass  17: suminf.    0.98153 (4) obj. -1.95422 iterations 3
Cbc0038I Pass  18: suminf.    0.98153 (4) obj. -1.95422 iterations 1
Cbc0038I Pass  19: suminf.    1.18762 (11) obj. -1.95422 iterations 29
Cbc0038I Pass  20: suminf.    1.13129 (8) obj. -1.95422 iterations 5
Cbc0038I Pass  21: suminf.    0.65898 (5) obj. -1.95422 iterations 16
Cbc0038I Pass  22: suminf.    0.64624 (5) obj. -1.95422 iterations 2
Cbc0038I Pass  23: suminf.    1.21659 (4) obj. -1.95422 iterations 8
Cbc0038I Pass  24: suminf.    1.21659 (4) obj. -1.95422 iterations 0
Cbc0038I Pass  25: suminf.    1.74673 (5) obj. -1.95422 iterations 4
Cbc0038I Pass  26: suminf.    1.29052 (6) obj. -1.95422 iterations 1
Cbc0038I Pass  27: suminf.    1.21659 (4) obj. -1.95422 iterations 6
Cbc0038I Pass  28: suminf.    3.30012 (12) obj. -1.95422 iterations 27
Cbc0038I Pass  29: suminf.    2.21269 (11) obj. -1.95422 iterations 10
Cbc0038I Pass  30: suminf.    0.80981 (3) obj. -1.95422 iterations 12
Cbc0038I Pass  31: suminf.    0.80981 (3) obj. -1.95422 iterations 3
Cbc0038I Pass  32: suminf.    0.52409 (3) obj. -1.95422 iterations 1
Cbc0038I Pass  33: suminf.    0.52409 (3) obj. -1.95422 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 2.14456 to -8.68218 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.7143
Cbc0038I Pass  33: suminf.    2.66980 (24) obj. -29.9324 iterations 0
Cbc0038I Pass  34: suminf.    2.19165 (23) obj. -28.0072 iterations 3
Cbc0038I Pass  35: suminf.    1.92416 (7) obj. -14.7143 iterations 28
Cbc0038I Pass  36: suminf.    1.92416 (7) obj. -14.7143 iterations 2
Cbc0038I Pass  37: suminf.    1.56208 (7) obj. -14.7143 iterations 7
Cbc0038I Pass  38: suminf.    0.98350 (5) obj. -14.7143 iterations 5
Cbc0038I Pass  39: suminf.    0.76864 (5) obj. -15.144 iterations 3
Cbc0038I Pass  40: suminf.    1.56208 (7) obj. -14.7143 iterations 7
Cbc0038I Pass  41: suminf.    2.48283 (10) obj. -14.7143 iterations 11
Cbc0038I Pass  42: suminf.    1.34927 (8) obj. -14.7143 iterations 8
Cbc0038I Pass  43: suminf.    1.34927 (8) obj. -14.7143 iterations 2
Cbc0038I Pass  44: suminf.    1.98897 (9) obj. -14.7143 iterations 6
Cbc0038I Pass  45: suminf.    0.98350 (7) obj. -14.7143 iterations 3
Cbc0038I Pass  46: suminf.    0.87530 (7) obj. -14.9307 iterations 4
Cbc0038I Pass  47: suminf.    1.98897 (9) obj. -14.7143 iterations 7
Cbc0038I Pass  48: suminf.    3.11098 (12) obj. -14.7143 iterations 15
Cbc0038I Pass  49: suminf.    1.64418 (9) obj. -14.7143 iterations 5
Cbc0038I Pass  50: suminf.    0.99753 (8) obj. -15.8751 iterations 6
Cbc0038I Pass  51: suminf.    2.33984 (9) obj. -14.7143 iterations 8
Cbc0038I Pass  52: suminf.    1.13377 (7) obj. -14.7143 iterations 4
Cbc0038I Pass  53: suminf.    1.13377 (7) obj. -14.7143 iterations 0
Cbc0038I Pass  54: suminf.    2.29461 (9) obj. -14.7143 iterations 6
Cbc0038I Pass  55: suminf.    1.18711 (7) obj. -14.7143 iterations 4
Cbc0038I Pass  56: suminf.    1.18711 (7) obj. -14.7143 iterations 0
Cbc0038I Pass  57: suminf.    2.22413 (9) obj. -14.7143 iterations 4
Cbc0038I Pass  58: suminf.    1.13377 (7) obj. -14.7143 iterations 4
Cbc0038I Pass  59: suminf.    1.13377 (7) obj. -14.7143 iterations 0
Cbc0038I Pass  60: suminf.    2.29461 (9) obj. -14.7143 iterations 6
Cbc0038I Pass  61: suminf.    1.18711 (7) obj. -14.7143 iterations 4
Cbc0038I Pass  62: suminf.    1.18711 (7) obj. -14.7143 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.68218 - took 0.05 seconds
Cbc0012I Integer solution of -8.68218 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 21 rows 23 columns
Cbc0031I 43 added rows had average density of 20.418605
Cbc0013I At root node, 43 cuts changed objective from -38.842364 to -13.351956 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7737 row cuts average 5.2 elements, 2 column cuts (2 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 951 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 938 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 306 row cuts average 37.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.68218 best solution, best possible -13.351956 (1.68 seconds)
Cbc0016I Integer solution of -9.38083 found by strong branching after 2917 iterations and 12 nodes (1.85 seconds)
Cbc0001I Search completed - best objective -9.380830000000003, took 3210 iterations and 20 nodes (1.86 seconds)
Cbc0032I Strong branching done 382 times (5586 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 28 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.87

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-22) rows, 49 (-4) columns and 257 (-46) elements
Clp1000I sum of infeasibilities 1.2216e-05 - average 1.47181e-07, 9 fixed columns
Coin0506I Presolve 64 (-19) rows, 39 (-10) columns and 199 (-58) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 38.53745
Clp0000I Optimal - objective value 38.53745
Coin0511I After Postsolve, objective 38.53745, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.53745
Clp0000I Optimal - objective value 38.53745
Clp0000I Optimal - objective value 38.53745
Coin0511I After Postsolve, objective 38.53745, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.5374504 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 49 columns (48 integer (48 of which binary)) and 257 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.670%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.50221
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.87 iterations 30
Cbc0038I Solution found of 13.87
Cbc0038I Relaxing continuous gives 13.87
Cbc0038I Rounding solution of 0.474143 is better than previous of 13.87

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 49 columns, reduced to 47 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 0.474143 to -9.38083 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.2966
Cbc0038I Pass   2: suminf.    2.32958 (6) obj. -12.2966 iterations 6
Cbc0038I Pass   3: suminf.    2.32958 (6) obj. -12.2966 iterations 1
Cbc0038I Pass   4: suminf.    1.43568 (5) obj. -12.2966 iterations 6
Cbc0038I Pass   5: suminf.    1.08830 (4) obj. -12.2966 iterations 1
Cbc0038I Pass   6: suminf.    0.81312 (3) obj. -12.2966 iterations 2
Cbc0038I Pass   7: suminf.    1.43568 (5) obj. -12.2966 iterations 3
Cbc0038I Pass   8: suminf.    1.87875 (6) obj. -12.2966 iterations 8
Cbc0038I Pass   9: suminf.    1.87875 (6) obj. -12.2966 iterations 3
Cbc0038I Pass  10: suminf.    2.01197 (6) obj. -12.2966 iterations 7
Cbc0038I Pass  11: suminf.    2.01197 (6) obj. -12.2966 iterations 1
Cbc0038I Pass  12: suminf.    1.22214 (6) obj. -12.2966 iterations 7
Cbc0038I Pass  13: suminf.    1.22214 (6) obj. -12.2966 iterations 2
Cbc0038I Pass  14: suminf.    2.01197 (6) obj. -12.2966 iterations 8
Cbc0038I Pass  15: suminf.    1.03319 (9) obj. -12.2966 iterations 13
Cbc0038I Pass  16: suminf.    0.76385 (6) obj. -12.2966 iterations 8
Cbc0038I Pass  17: suminf.    0.73859 (6) obj. -12.2966 iterations 6
Cbc0038I Pass  18: suminf.    0.53500 (4) obj. -12.2966 iterations 2
Cbc0038I Pass  19: suminf.    0.76083 (4) obj. -12.2966 iterations 4
Cbc0038I Pass  20: suminf.    0.76083 (4) obj. -12.2966 iterations 0
Cbc0038I Pass  21: suminf.    0.54554 (5) obj. -12.2966 iterations 4
Cbc0038I Pass  22: suminf.    0.65384 (3) obj. -12.2966 iterations 13
Cbc0038I Pass  23: suminf.    0.65384 (3) obj. -12.2966 iterations 2
Cbc0038I Pass  24: suminf.    0.71790 (4) obj. -12.2966 iterations 6
Cbc0038I Pass  25: suminf.    0.46531 (3) obj. -12.2966 iterations 1
Cbc0038I Pass  26: suminf.    0.18965 (1) obj. -12.2966 iterations 3
Cbc0038I Pass  27: suminf.    1.77391 (9) obj. -12.2966 iterations 15
Cbc0038I Pass  28: suminf.    1.51360 (6) obj. -12.2966 iterations 4
Cbc0038I Pass  29: suminf.    1.78261 (7) obj. -12.2966 iterations 9
Cbc0038I Pass  30: suminf.    1.78261 (7) obj. -12.2966 iterations 0
Cbc0038I Pass  31: suminf.    2.46202 (6) obj. -12.2966 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 49 columns, reduced to 54 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -9.38083 - took 0.06 seconds
Cbc0012I Integer solution of -9.38083 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 83 rows 49 columns, reduced to 47 rows 29 columns
Cbc0031I 18 added rows had average density of 33.888889
Cbc0013I At root node, 18 cuts changed objective from -38.53745 to -24.16928 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4877 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1272 row cuts average 48.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -9.380830000000003, took 5092 iterations and 26 nodes (0.57 seconds)
Cbc0032I Strong branching done 358 times (5689 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 9, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 82 (-21) columns and 1040 (-539) elements
Clp1000I sum of infeasibilities 8.61334e-08 - average 1.24831e-09, 49 fixed columns
Coin0506I Presolve 24 (-45) rows, 33 (-49) columns and 109 (-931) elements
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 2.0692048 - largest nonzero change 2.6416385e-05 ( 0.00085212775%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value -7.0521622
Clp0000I Optimal - objective value -7.0521622
Coin0511I After Postsolve, objective -7.0521622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.5076818 - largest nonzero change 1.4735674e-05 ( 0.0014365432%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 55.206907
Clp0000I Optimal - objective value 55.206907
Clp0000I Optimal - objective value 55.206907
Coin0511I After Postsolve, objective 55.206907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.20690672 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 82 columns (82 integer (82 of which binary)) and 1046 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.095%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 6.80187
Cbc0038I Pass   1: suminf.    2.66980 (24) obj. -29.9324 iterations 18
Cbc0038I Pass   2: suminf.    2.19165 (23) obj. -28.0072 iterations 2
Cbc0038I Pass   3: suminf.    0.07846 (2) obj. 2.95226 iterations 21
Cbc0038I Solution found of 5.8338
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 5.8338 to 2.14456 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.95422
Cbc0038I Pass   4: suminf.    2.66980 (24) obj. -29.9324 iterations 0
Cbc0038I Pass   5: suminf.    2.19165 (23) obj. -28.0072 iterations 3
Cbc0038I Pass   6: suminf.    0.73350 (4) obj. -1.95422 iterations 24
Cbc0038I Pass   7: suminf.    0.69113 (4) obj. -2.75348 iterations 1
Cbc0038I Pass   8: suminf.    0.64714 (3) obj. -1.95422 iterations 10
Cbc0038I Pass   9: suminf.    0.58952 (3) obj. -1.95422 iterations 1
Cbc0038I Pass  10: suminf.    0.46205 (2) obj. -1.95422 iterations 2
Cbc0038I Pass  11: suminf.    0.33331 (2) obj. -1.95422 iterations 2
Cbc0038I Pass  12: suminf.    3.11551 (9) obj. -1.95422 iterations 12
Cbc0038I Pass  13: suminf.    1.81472 (6) obj. -1.95422 iterations 5
Cbc0038I Pass  14: suminf.    0.93525 (5) obj. -1.95422 iterations 8
Cbc0038I Pass  15: suminf.    0.91797 (3) obj. -1.95422 iterations 4
Cbc0038I Pass  16: suminf.    0.55989 (3) obj. -1.95422 iterations 2
Cbc0038I Pass  17: suminf.    0.98153 (4) obj. -1.95422 iterations 3
Cbc0038I Pass  18: suminf.    0.98153 (4) obj. -1.95422 iterations 1
Cbc0038I Pass  19: suminf.    1.18762 (11) obj. -1.95422 iterations 29
Cbc0038I Pass  20: suminf.    1.13129 (8) obj. -1.95422 iterations 5
Cbc0038I Pass  21: suminf.    0.65898 (5) obj. -1.95422 iterations 16
Cbc0038I Pass  22: suminf.    0.64624 (5) obj. -1.95422 iterations 2
Cbc0038I Pass  23: suminf.    1.21659 (4) obj. -1.95422 iterations 8
Cbc0038I Pass  24: suminf.    1.21659 (4) obj. -1.95422 iterations 0
Cbc0038I Pass  25: suminf.    1.74673 (5) obj. -1.95422 iterations 4
Cbc0038I Pass  26: suminf.    1.29052 (6) obj. -1.95422 iterations 1
Cbc0038I Pass  27: suminf.    1.21659 (4) obj. -1.95422 iterations 6
Cbc0038I Pass  28: suminf.    3.30012 (12) obj. -1.95422 iterations 27
Cbc0038I Pass  29: suminf.    2.21269 (11) obj. -1.95422 iterations 10
Cbc0038I Pass  30: suminf.    0.80981 (3) obj. -1.95422 iterations 12
Cbc0038I Pass  31: suminf.    0.80981 (3) obj. -1.95422 iterations 3
Cbc0038I Pass  32: suminf.    0.52409 (3) obj. -1.95422 iterations 1
Cbc0038I Pass  33: suminf.    0.52409 (3) obj. -1.95422 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 2.14456 to -8.68218 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.7143
Cbc0038I Pass  33: suminf.    2.66980 (24) obj. -29.9324 iterations 0
Cbc0038I Pass  34: suminf.    2.19165 (23) obj. -28.0072 iterations 3
Cbc0038I Pass  35: suminf.    1.92416 (7) obj. -14.7143 iterations 28
Cbc0038I Pass  36: suminf.    1.92416 (7) obj. -14.7143 iterations 2
Cbc0038I Pass  37: suminf.    1.56208 (7) obj. -14.7143 iterations 7
Cbc0038I Pass  38: suminf.    0.98350 (5) obj. -14.7143 iterations 5
Cbc0038I Pass  39: suminf.    0.76864 (5) obj. -15.144 iterations 3
Cbc0038I Pass  40: suminf.    1.56208 (7) obj. -14.7143 iterations 7
Cbc0038I Pass  41: suminf.    2.48283 (10) obj. -14.7143 iterations 11
Cbc0038I Pass  42: suminf.    1.34927 (8) obj. -14.7143 iterations 8
Cbc0038I Pass  43: suminf.    1.34927 (8) obj. -14.7143 iterations 2
Cbc0038I Pass  44: suminf.    1.98897 (9) obj. -14.7143 iterations 6
Cbc0038I Pass  45: suminf.    0.98350 (7) obj. -14.7143 iterations 3
Cbc0038I Pass  46: suminf.    0.87530 (7) obj. -14.9307 iterations 4
Cbc0038I Pass  47: suminf.    1.98897 (9) obj. -14.7143 iterations 7
Cbc0038I Pass  48: suminf.    3.11098 (12) obj. -14.7143 iterations 15
Cbc0038I Pass  49: suminf.    1.64418 (9) obj. -14.7143 iterations 5
Cbc0038I Pass  50: suminf.    0.99753 (8) obj. -15.8751 iterations 6
Cbc0038I Pass  51: suminf.    2.33984 (9) obj. -14.7143 iterations 8
Cbc0038I Pass  52: suminf.    1.13377 (7) obj. -14.7143 iterations 4
Cbc0038I Pass  53: suminf.    1.13377 (7) obj. -14.7143 iterations 0
Cbc0038I Pass  54: suminf.    2.29461 (9) obj. -14.7143 iterations 6
Cbc0038I Pass  55: suminf.    1.18711 (7) obj. -14.7143 iterations 4
Cbc0038I Pass  56: suminf.    1.18711 (7) obj. -14.7143 iterations 0
Cbc0038I Pass  57: suminf.    2.22413 (9) obj. -14.7143 iterations 4
Cbc0038I Pass  58: suminf.    1.13377 (7) obj. -14.7143 iterations 4
Cbc0038I Pass  59: suminf.    1.13377 (7) obj. -14.7143 iterations 0
Cbc0038I Pass  60: suminf.    2.29461 (9) obj. -14.7143 iterations 6
Cbc0038I Pass  61: suminf.    1.18711 (7) obj. -14.7143 iterations 4
Cbc0038I Pass  62: suminf.    1.18711 (7) obj. -14.7143 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.68218 - took 0.05 seconds
Cbc0012I Integer solution of -8.68218 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 21 rows 23 columns
Cbc0031I 43 added rows had average density of 20.418605
Cbc0013I At root node, 43 cuts changed objective from -38.842364 to -13.351956 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7737 row cuts average 5.2 elements, 2 column cuts (2 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 951 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 938 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 306 row cuts average 37.7 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.779 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.68218 best solution, best possible -13.351956 (2.07 seconds)
Cbc0016I Integer solution of -9.38083 found by strong branching after 2917 iterations and 12 nodes (2.28 seconds)
Cbc0001I Search completed - best objective -9.380830000000003, took 3210 iterations and 20 nodes (2.29 seconds)
Cbc0032I Strong branching done 382 times (5586 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 28 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       2.30

