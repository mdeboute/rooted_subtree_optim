Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 22 (-3) columns and 108 (-27) elements
Clp1000I sum of infeasibilities 2.32016e-06 - average 6.44488e-08, 1 fixed columns
Coin0506I Presolve 32 (-4) rows, 21 (-1) columns and 98 (-10) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 103.66932
Clp0000I Optimal - objective value 103.66932
Coin0511I After Postsolve, objective 103.66932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.66932
Clp0000I Optimal - objective value 103.66932
Clp0000I Optimal - objective value 103.66932
Coin0511I After Postsolve, objective 103.66932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.669319 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.242%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.72536
Cbc0038I Pass   1: suminf.    0.39448 (2) obj. -43.9675 iterations 15
Cbc0038I Solution found of -35.003
Cbc0038I Relaxing continuous gives -35.003
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -35.003 to -35.968 (0.01 seconds)
Cbc0038I Round again with cutoff of -42.6003
Cbc0038I Pass   2: suminf.    0.39448 (2) obj. -43.9675 iterations 0
Cbc0038I Pass   3: suminf.    0.16240 (3) obj. -42.6003 iterations 5
Cbc0038I Pass   4: suminf.    0.85766 (5) obj. -42.6003 iterations 6
Cbc0038I Pass   5: suminf.    0.68492 (5) obj. -42.6003 iterations 3
Cbc0038I Pass   6: suminf.    0.68492 (5) obj. -42.6003 iterations 0
Cbc0038I Pass   7: suminf.    0.20933 (2) obj. -42.6003 iterations 5
Cbc0038I Pass   8: suminf.    0.13286 (2) obj. -42.6003 iterations 2
Cbc0038I Pass   9: suminf.    1.02135 (5) obj. -42.6003 iterations 7
Cbc0038I Pass  10: suminf.    1.82135 (6) obj. -42.6003 iterations 3
Cbc0038I Pass  11: suminf.    0.98953 (5) obj. -42.6003 iterations 2
Cbc0038I Pass  12: suminf.    0.98953 (5) obj. -42.6003 iterations 0
Cbc0038I Pass  13: suminf.    1.45139 (5) obj. -42.6003 iterations 5
Cbc0038I Pass  14: suminf.    1.36917 (4) obj. -42.6003 iterations 1
Cbc0038I Pass  15: suminf.    1.39696 (5) obj. -42.6003 iterations 3
Cbc0038I Pass  16: suminf.    1.29032 (4) obj. -42.6003 iterations 1
Cbc0038I Pass  17: suminf.    1.77907 (6) obj. -42.6003 iterations 5
Cbc0038I Pass  18: suminf.    2.34648 (7) obj. -42.6003 iterations 3
Cbc0038I Pass  19: suminf.    1.98596 (7) obj. -42.6003 iterations 2
Cbc0038I Pass  20: suminf.    1.65396 (6) obj. -42.6003 iterations 1
Cbc0038I Pass  21: suminf.    1.65396 (6) obj. -42.6003 iterations 0
Cbc0038I Pass  22: suminf.    2.26277 (6) obj. -42.6003 iterations 4
Cbc0038I Pass  23: suminf.    1.77907 (6) obj. -42.6003 iterations 3
Cbc0038I Pass  24: suminf.    1.77907 (6) obj. -42.6003 iterations 0
Cbc0038I Pass  25: suminf.    2.34648 (7) obj. -42.6003 iterations 3
Cbc0038I Pass  26: suminf.    1.98596 (7) obj. -42.6003 iterations 2
Cbc0038I Pass  27: suminf.    1.65396 (6) obj. -42.6003 iterations 1
Cbc0038I Pass  28: suminf.    1.65396 (6) obj. -42.6003 iterations 0
Cbc0038I Pass  29: suminf.    2.26277 (6) obj. -42.6003 iterations 4
Cbc0038I Pass  30: suminf.    1.77907 (6) obj. -42.6003 iterations 3
Cbc0038I Pass  31: suminf.    1.77907 (6) obj. -42.6003 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 23 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -35.968 - took 0.03 seconds
Cbc0012I Integer solution of -35.96796 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 22 rows 15 columns
Cbc0031I 11 added rows had average density of 15.454545
Cbc0013I At root node, 11 cuts changed objective from -102.29094 to -48.669379 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1154 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 580 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 194 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.96796000000001, took 1882 iterations and 6 nodes (0.23 seconds)
Cbc0032I Strong branching done 48 times (420 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-11) rows, 43 (-3) columns and 341 (-47) elements
Clp1000I sum of infeasibilities 3.40148e-10 - average 9.19319e-12, 26 fixed columns
Coin0506I Presolve 13 (-24) rows, 17 (-26) columns and 54 (-287) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 1.1461099 - largest nonzero change 2.8989114e-05 ( 0.0025820745%) - largest zero change 1.4106953e-05
Clp0000I Optimal - objective value -33.288142
Clp0000I Optimal - objective value -33.288142
Coin0511I After Postsolve, objective -33.288142, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0635632 - largest nonzero change 2.6767495e-05 ( 0.0023983587%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 120.15558
Clp0000I Optimal - objective value 120.15558
Clp0000I Optimal - objective value 120.15558
Coin0511I After Postsolve, objective 120.15558, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 120.1555803 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 43 columns (43 integer (43 of which binary)) and 359 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.928%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.41722
Cbc0038I Pass   1: suminf.    1.72637 (5) obj. -39.6137 iterations 18
Cbc0038I Pass   2: suminf.    1.72637 (5) obj. -39.6137 iterations 1
Cbc0038I Solution found of -20.6278
Cbc0038I Rounding solution of -35.5114 is better than previous of -20.6278

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -40.7925
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.86199 (8) obj. -40.7925 iterations 1
Cbc0038I Pass   4: suminf.    1.80004 (6) obj. -40.7925 iterations 1
Cbc0038I Pass   5: suminf.    1.02269 (4) obj. -40.7925 iterations 6
Cbc0038I Pass   6: suminf.    0.45000 (2) obj. -42.3429 iterations 2
Cbc0038I Pass   7: suminf.    0.82042 (3) obj. -40.7925 iterations 8
Cbc0038I Pass   8: suminf.    1.21818 (3) obj. -45.5656 iterations 3
Cbc0038I Pass   9: suminf.    0.70116 (3) obj. -42.1689 iterations 6
Cbc0038I Pass  10: suminf.    0.59528 (3) obj. -40.7925 iterations 3
Cbc0038I Pass  11: suminf.    0.75385 (3) obj. -40.7925 iterations 2
Cbc0038I Pass  12: suminf.    3.57068 (9) obj. -40.7925 iterations 12
Cbc0038I Pass  13: suminf.    2.58032 (7) obj. -40.7925 iterations 8
Cbc0038I Pass  14: suminf.    2.40799 (7) obj. -40.7925 iterations 3
Cbc0038I Pass  15: suminf.    1.57131 (6) obj. -40.7925 iterations 4
Cbc0038I Pass  16: suminf.    1.71466 (6) obj. -40.7925 iterations 2
Cbc0038I Pass  17: suminf.    1.71466 (6) obj. -40.7925 iterations 0
Cbc0038I Pass  18: suminf.    1.99333 (6) obj. -40.7925 iterations 1
Cbc0038I Pass  19: suminf.    3.73221 (12) obj. -40.7925 iterations 7
Cbc0038I Pass  20: suminf.    1.09457 (4) obj. -40.7925 iterations 6
Cbc0038I Pass  21: suminf.    0.54630 (3) obj. -40.7925 iterations 3
Cbc0038I Pass  22: suminf.    0.22527 (3) obj. -40.7925 iterations 5
Cbc0038I Pass  23: suminf.    0.22527 (3) obj. -40.7925 iterations 0
Cbc0038I Pass  24: suminf.    0.70493 (3) obj. -40.7925 iterations 2
Cbc0038I Pass  25: suminf.    2.74671 (11) obj. -40.7925 iterations 12
Cbc0038I Pass  26: suminf.    1.24033 (4) obj. -40.7925 iterations 7
Cbc0038I Pass  27: suminf.    1.46195 (5) obj. -40.7925 iterations 11
Cbc0038I Pass  28: suminf.    1.54932 (5) obj. -40.7925 iterations 2
Cbc0038I Pass  29: suminf.    2.30327 (9) obj. -40.7925 iterations 14
Cbc0038I Pass  30: suminf.    0.99342 (5) obj. -40.7925 iterations 10
Cbc0038I Pass  31: suminf.    1.18034 (5) obj. -40.7925 iterations 1
Cbc0038I Pass  32: suminf.    2.60045 (8) obj. -40.7925 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 28 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -20.6278 to -35.968 (0.04 seconds)
Cbc0038I Round again with cutoff of -50.2984
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.74134 (8) obj. -50.2984 iterations 0
Cbc0038I Pass  33: suminf.    1.71190 (5) obj. -50.9619 iterations 3
Cbc0038I Pass  34: suminf.    1.61258 (4) obj. -50.2984 iterations 16
Cbc0038I Pass  35: suminf.    1.66818 (4) obj. -50.9656 iterations 3
Cbc0038I Pass  36: suminf.    2.20035 (7) obj. -50.2984 iterations 16
Cbc0038I Pass  37: suminf.    1.52321 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  38: suminf.    1.97759 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  39: suminf.    1.40084 (6) obj. -50.2984 iterations 5
Cbc0038I Pass  40: suminf.    1.52321 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  41: suminf.    1.82740 (5) obj. -50.2984 iterations 6
Cbc0038I Pass  42: suminf.    1.56540 (6) obj. -50.2984 iterations 3
Cbc0038I Pass  43: suminf.    2.34373 (6) obj. -53.8142 iterations 3
Cbc0038I Pass  44: suminf.    2.05075 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  45: suminf.    1.79943 (6) obj. -51.7968 iterations 4
Cbc0038I Pass  46: suminf.    1.67456 (6) obj. -50.2984 iterations 3
Cbc0038I Pass  47: suminf.    1.58347 (5) obj. -50.2984 iterations 7
Cbc0038I Pass  48: suminf.    1.56540 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  49: suminf.    2.34373 (6) obj. -53.8142 iterations 3
Cbc0038I Pass  50: suminf.    2.05075 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  51: suminf.    1.79943 (6) obj. -51.7968 iterations 4
Cbc0038I Pass  52: suminf.    1.67456 (6) obj. -50.2984 iterations 3
Cbc0038I Pass  53: suminf.    1.58347 (5) obj. -50.2984 iterations 7
Cbc0038I Pass  54: suminf.    1.56540 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  55: suminf.    2.34373 (6) obj. -53.8142 iterations 3
Cbc0038I Pass  56: suminf.    2.05075 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  57: suminf.    1.79943 (6) obj. -51.7968 iterations 4
Cbc0038I Pass  58: suminf.    1.67456 (6) obj. -50.2984 iterations 3
Cbc0038I Pass  59: suminf.    1.58347 (5) obj. -50.2984 iterations 7
Cbc0038I Pass  60: suminf.    1.56540 (6) obj. -50.2984 iterations 2
Cbc0038I Pass  61: suminf.    2.34373 (6) obj. -53.8142 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 9 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -35.968 - took 0.03 seconds
Cbc0012I Integer solution of -35.96799 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 43 columns, reduced to 3 rows 7 columns
Cbc0031I 9 added rows had average density of 12.333333
Cbc0013I At root node, 9 cuts changed objective from -88.321998 to -39.217577 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 233 row cuts average 7.6 elements, 20 column cuts (20 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 34 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0010I After 4 nodes, 1 on tree, -35.96799 best solution, best possible -37.010694 (0.49 seconds)
Cbc0001I Search completed - best objective -35.96799000000001, took 227 iterations and 6 nodes (0.54 seconds)
Cbc0032I Strong branching done 44 times (129 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.54

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 22 (-3) columns and 108 (-27) elements
Clp1000I sum of infeasibilities 2.32016e-06 - average 6.44488e-08, 1 fixed columns
Coin0506I Presolve 32 (-4) rows, 21 (-1) columns and 98 (-10) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 103.66932
Clp0000I Optimal - objective value 103.66932
Coin0511I After Postsolve, objective 103.66932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.66932
Clp0000I Optimal - objective value 103.66932
Clp0000I Optimal - objective value 103.66932
Coin0511I After Postsolve, objective 103.66932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.669319 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.242%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.72536
Cbc0038I Pass   1: suminf.    0.39448 (2) obj. -43.9675 iterations 15
Cbc0038I Solution found of -35.003
Cbc0038I Relaxing continuous gives -35.003
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -35.003 to -35.968 (0.01 seconds)
Cbc0038I Round again with cutoff of -42.6003
Cbc0038I Pass   2: suminf.    0.39448 (2) obj. -43.9675 iterations 0
Cbc0038I Pass   3: suminf.    0.16240 (3) obj. -42.6003 iterations 5
Cbc0038I Pass   4: suminf.    0.85766 (5) obj. -42.6003 iterations 6
Cbc0038I Pass   5: suminf.    0.68492 (5) obj. -42.6003 iterations 3
Cbc0038I Pass   6: suminf.    0.68492 (5) obj. -42.6003 iterations 0
Cbc0038I Pass   7: suminf.    0.20933 (2) obj. -42.6003 iterations 5
Cbc0038I Pass   8: suminf.    0.13286 (2) obj. -42.6003 iterations 2
Cbc0038I Pass   9: suminf.    1.02135 (5) obj. -42.6003 iterations 7
Cbc0038I Pass  10: suminf.    1.82135 (6) obj. -42.6003 iterations 3
Cbc0038I Pass  11: suminf.    0.98953 (5) obj. -42.6003 iterations 2
Cbc0038I Pass  12: suminf.    0.98953 (5) obj. -42.6003 iterations 0
Cbc0038I Pass  13: suminf.    1.45139 (5) obj. -42.6003 iterations 5
Cbc0038I Pass  14: suminf.    1.36917 (4) obj. -42.6003 iterations 1
Cbc0038I Pass  15: suminf.    1.39696 (5) obj. -42.6003 iterations 3
Cbc0038I Pass  16: suminf.    1.29032 (4) obj. -42.6003 iterations 1
Cbc0038I Pass  17: suminf.    1.77907 (6) obj. -42.6003 iterations 5
Cbc0038I Pass  18: suminf.    2.34648 (7) obj. -42.6003 iterations 3
Cbc0038I Pass  19: suminf.    1.98596 (7) obj. -42.6003 iterations 2
Cbc0038I Pass  20: suminf.    1.65396 (6) obj. -42.6003 iterations 1
Cbc0038I Pass  21: suminf.    1.65396 (6) obj. -42.6003 iterations 0
Cbc0038I Pass  22: suminf.    2.26277 (6) obj. -42.6003 iterations 4
Cbc0038I Pass  23: suminf.    1.77907 (6) obj. -42.6003 iterations 3
Cbc0038I Pass  24: suminf.    1.77907 (6) obj. -42.6003 iterations 0
Cbc0038I Pass  25: suminf.    2.34648 (7) obj. -42.6003 iterations 3
Cbc0038I Pass  26: suminf.    1.98596 (7) obj. -42.6003 iterations 2
Cbc0038I Pass  27: suminf.    1.65396 (6) obj. -42.6003 iterations 1
Cbc0038I Pass  28: suminf.    1.65396 (6) obj. -42.6003 iterations 0
Cbc0038I Pass  29: suminf.    2.26277 (6) obj. -42.6003 iterations 4
Cbc0038I Pass  30: suminf.    1.77907 (6) obj. -42.6003 iterations 3
Cbc0038I Pass  31: suminf.    1.77907 (6) obj. -42.6003 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 23 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -35.968 - took 0.02 seconds
Cbc0012I Integer solution of -35.96796 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 22 rows 15 columns
Cbc0031I 11 added rows had average density of 15.454545
Cbc0013I At root node, 11 cuts changed objective from -102.29094 to -48.669379 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1154 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 580 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 194 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.96796000000001, took 1882 iterations and 6 nodes (0.17 seconds)
Cbc0032I Strong branching done 48 times (420 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 42 (-5) columns and 328 (-61) elements
Clp1000I sum of infeasibilities 9.84381e-09 - average 2.73439e-10, 27 fixed columns
Coin0506I Presolve 7 (-29) rows, 15 (-27) columns and 39 (-289) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 2.8490022 - largest nonzero change 2.4074096e-05 ( 0.001262127%) - largest zero change 1.772861e-05
Clp0000I Optimal - objective value -31.728573
Clp0000I Optimal - objective value -31.728573
Coin0511I After Postsolve, objective -31.728573, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5099354 - largest nonzero change 2.1170742e-05 ( 0.0018056464%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 117.508
Clp0000I Optimal - objective value 117.508
Clp0000I Optimal - objective value 117.508
Coin0511I After Postsolve, objective 117.508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.507997 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 341 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.543%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.39529
Cbc0038I Pass   1: suminf.    2.83348 (10) obj. -48.4619 iterations 9
Cbc0038I Pass   2: suminf.    2.83348 (10) obj. -48.4619 iterations 1
Cbc0038I Solution found of 0.0583
Cbc0038I Rounding solution of -19.8253 is better than previous of 0.0583

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -26.9114
Cbc0038I Pass   3: suminf.    2.83348 (10) obj. -48.4619 iterations 0
Cbc0038I Pass   4: suminf.    2.83348 (10) obj. -48.4619 iterations 1
Cbc0038I Pass   5: suminf.    0.83731 (4) obj. -26.9114 iterations 18
Cbc0038I Pass   6: suminf.    0.74405 (3) obj. -29.7232 iterations 3
Cbc0038I Pass   7: suminf.    0.40208 (1) obj. -26.9114 iterations 11
Cbc0038I Pass   8: suminf.    0.49902 (1) obj. -30.3465 iterations 1
Cbc0038I Pass   9: suminf.    2.41892 (9) obj. -26.9114 iterations 15
Cbc0038I Pass  10: suminf.    2.07979 (7) obj. -27.7538 iterations 3
Cbc0038I Pass  11: suminf.    1.02110 (4) obj. -26.9114 iterations 9
Cbc0038I Pass  12: suminf.    0.50614 (2) obj. -26.9114 iterations 2
Cbc0038I Pass  13: suminf.    0.71510 (2) obj. -30.2547 iterations 2
Cbc0038I Pass  14: suminf.    3.15250 (9) obj. -26.9114 iterations 16
Cbc0038I Pass  15: suminf.    2.61959 (8) obj. -26.9114 iterations 3
Cbc0038I Pass  16: suminf.    0.53820 (2) obj. -26.9114 iterations 11
Cbc0038I Pass  17: suminf.    0.60476 (2) obj. -27.9765 iterations 2
Cbc0038I Pass  18: suminf.    1.35714 (3) obj. -35.3695 iterations 5
Cbc0038I Pass  19: suminf.    0.92857 (2) obj. -28.5124 iterations 2
Cbc0038I Pass  20: suminf.    0.13221 (1) obj. -26.9114 iterations 5
Cbc0038I Pass  21: suminf.    0.28537 (1) obj. -32.3385 iterations 1
Cbc0038I Pass  22: suminf.    3.32915 (8) obj. -48.5699 iterations 11
Cbc0038I Pass  23: suminf.    1.38312 (3) obj. -40.5481 iterations 5
Cbc0038I Solution found of -28.2169
Cbc0038I Rounding solution of -35.9552 is better than previous of -28.2169

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -46.9014
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  24: suminf.    2.83348 (10) obj. -48.4619 iterations 0
Cbc0038I Pass  25: suminf.    2.83348 (10) obj. -48.4619 iterations 1
Cbc0038I Pass  26: suminf.    1.87537 (6) obj. -46.9014 iterations 18
Cbc0038I Pass  27: suminf.    1.67544 (9) obj. -46.9014 iterations 2
Cbc0038I Pass  28: suminf.    1.78766 (6) obj. -46.9014 iterations 9
Cbc0038I Pass  29: suminf.    1.39910 (5) obj. -46.9014 iterations 4
Cbc0038I Pass  30: suminf.    0.86453 (5) obj. -46.9014 iterations 4
Cbc0038I Pass  31: suminf.    1.05380 (5) obj. -46.9014 iterations 2
Cbc0038I Pass  32: suminf.    3.71677 (9) obj. -46.9014 iterations 19
Cbc0038I Pass  33: suminf.    1.82308 (4) obj. -46.9014 iterations 9
Cbc0038I Pass  34: suminf.    1.06423 (3) obj. -46.9014 iterations 5
Cbc0038I Pass  35: suminf.    0.62347 (3) obj. -46.9014 iterations 7
Cbc0038I Pass  36: suminf.    0.62347 (3) obj. -46.9014 iterations 0
Cbc0038I Pass  37: suminf.    0.63567 (3) obj. -46.9014 iterations 2
Cbc0038I Pass  38: suminf.    2.46140 (9) obj. -46.9014 iterations 17
Cbc0038I Pass  39: suminf.    1.53761 (6) obj. -46.9014 iterations 9
Cbc0038I Pass  40: suminf.    1.26945 (7) obj. -46.9014 iterations 6
Cbc0038I Pass  41: suminf.    1.26945 (7) obj. -46.9014 iterations 0
Cbc0038I Pass  42: suminf.    1.48877 (5) obj. -46.9014 iterations 4
Cbc0038I Pass  43: suminf.    0.86943 (3) obj. -46.9014 iterations 6
Cbc0038I Pass  44: suminf.    0.92231 (6) obj. -46.9014 iterations 5
Cbc0038I Pass  45: suminf.    0.92231 (6) obj. -46.9014 iterations 0
Cbc0038I Pass  46: suminf.    1.47977 (6) obj. -46.9014 iterations 15
Cbc0038I Pass  47: suminf.    1.47977 (6) obj. -46.9014 iterations 0
Cbc0038I Pass  48: suminf.    2.05342 (5) obj. -46.9014 iterations 4
Cbc0038I Pass  49: suminf.    1.27550 (5) obj. -46.9014 iterations 4
Cbc0038I Pass  50: suminf.    0.78245 (5) obj. -46.9014 iterations 4
Cbc0038I Pass  51: suminf.    0.81040 (5) obj. -46.9014 iterations 2
Cbc0038I Pass  52: suminf.    1.75162 (5) obj. -46.9014 iterations 8
Cbc0038I Pass  53: suminf.    1.56661 (6) obj. -46.9014 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 12 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -28.2169 to -35.968 (0.04 seconds)
Cbc0038I Round again with cutoff of -60.0367
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  53: suminf.    3.86047 (13) obj. -60.0367 iterations 1
Cbc0038I Pass  54: suminf.    3.86047 (13) obj. -60.0367 iterations 1
Cbc0038I Pass  55: suminf.    1.92355 (8) obj. -60.0367 iterations 22
Cbc0038I Pass  56: suminf.    1.92355 (8) obj. -60.0367 iterations 0
Cbc0038I Pass  57: suminf.    2.93038 (7) obj. -60.0367 iterations 6
Cbc0038I Pass  58: suminf.    2.93038 (7) obj. -60.0367 iterations 1
Cbc0038I Pass  59: suminf.    2.93038 (7) obj. -60.0367 iterations 0
Cbc0038I Pass  60: suminf.    3.02001 (7) obj. -60.0367 iterations 2
Cbc0038I Pass  61: suminf.    2.55610 (10) obj. -60.0367 iterations 8
Cbc0038I Pass  62: suminf.    1.65640 (8) obj. -60.0367 iterations 10
Cbc0038I Pass  63: suminf.    2.22705 (8) obj. -60.0367 iterations 7
Cbc0038I Pass  64: suminf.    1.49788 (8) obj. -60.0367 iterations 4
Cbc0038I Pass  65: suminf.    2.21022 (7) obj. -60.0367 iterations 5
Cbc0038I Pass  66: suminf.    1.57722 (7) obj. -60.0367 iterations 6
Cbc0038I Pass  67: suminf.    1.49788 (8) obj. -60.0367 iterations 3
Cbc0038I Pass  68: suminf.    2.33410 (7) obj. -60.0367 iterations 6
Cbc0038I Pass  69: suminf.    1.82408 (8) obj. -60.0367 iterations 6
Cbc0038I Pass  70: suminf.    2.34092 (6) obj. -60.4693 iterations 5
Cbc0038I Pass  71: suminf.    3.07630 (11) obj. -60.0367 iterations 9
Cbc0038I Pass  72: suminf.    2.23402 (9) obj. -60.0367 iterations 6
Cbc0038I Pass  73: suminf.    2.66383 (8) obj. -61.7348 iterations 6
Cbc0038I Pass  74: suminf.    1.78557 (7) obj. -60.0367 iterations 7
Cbc0038I Pass  75: suminf.    1.74908 (9) obj. -60.0367 iterations 3
Cbc0038I Pass  76: suminf.    1.74908 (9) obj. -60.0367 iterations 1
Cbc0038I Pass  77: suminf.    2.48360 (8) obj. -60.0367 iterations 4
Cbc0038I Pass  78: suminf.    2.92825 (8) obj. -60.0367 iterations 11
Cbc0038I Pass  79: suminf.    1.65640 (8) obj. -60.0367 iterations 8
Cbc0038I Pass  80: suminf.    2.22705 (8) obj. -60.0367 iterations 7
Cbc0038I Pass  81: suminf.    1.49788 (8) obj. -60.0367 iterations 4
Cbc0038I Pass  82: suminf.    2.21022 (7) obj. -60.0367 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -35.968 - took 0.04 seconds
Cbc0012I Integer solution of -35.96799 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 5 rows 12 columns
Cbc0031I 12 added rows had average density of 7.75
Cbc0013I At root node, 12 cuts changed objective from -90.685851 to -39.31634 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 201 row cuts average 7.5 elements, 21 column cuts (21 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0010I After 2 nodes, 1 on tree, -35.96799 best solution, best possible -37.105487 (0.51 seconds)
Cbc0001I Search completed - best objective -35.96799000000001, took 386 iterations and 8 nodes (0.77 seconds)
Cbc0032I Strong branching done 48 times (125 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.77

