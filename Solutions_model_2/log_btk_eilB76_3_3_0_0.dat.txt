Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 57 (-21) columns and 310 (-143) elements
Clp1000I sum of infeasibilities 2.59949e-06 - average 2.54852e-08, 46 fixed columns
Coin0506I Presolve 15 (-87) rows, 9 (-48) columns and 42 (-268) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 4741.4864
Clp0000I Optimal - objective value 4741.4864
Coin0511I After Postsolve, objective 4741.4864, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.92375 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 4741.4864
Clp0000I Optimal - objective value 4741.4864
Clp0000I Optimal - objective value 4741.4864
Coin0511I After Postsolve, objective 4741.4864, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4741.486411 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 57 columns (56 integer (56 of which binary)) and 342 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.502%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.26128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2714.9 iterations 9
Cbc0038I Solution found of -2714.9
Cbc0038I Relaxing continuous gives -2714.9
Cbc0038I Rounding solution of -3738.68 is better than previous of -2714.9

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 57 columns, reduced to 15 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -3738.68 to -3900.25 (0.01 seconds)
Cbc0038I Round again with cutoff of -3984.37
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.84676 (2) obj. -3984.37 iterations 4
Cbc0038I Pass   3: suminf.    0.41935 (1) obj. -4230.31 iterations 3
Cbc0038I Pass   4: suminf.    0.21124 (1) obj. -3984.37 iterations 2
Cbc0038I Pass   5: suminf.    0.11753 (5) obj. -3984.37 iterations 10
Cbc0038I Pass   6: suminf.    0.05920 (3) obj. -3984.37 iterations 11
Cbc0038I Pass   7: suminf.    0.36601 (2) obj. -4174.44 iterations 4
Cbc0038I Pass   8: suminf.    0.40671 (2) obj. -3984.37 iterations 10
Cbc0038I Pass   9: suminf.    0.06170 (2) obj. -3984.37 iterations 7
Cbc0038I Pass  10: suminf.    0.30769 (1) obj. -4230.26 iterations 3
Cbc0038I Pass  11: suminf.    1.48181 (4) obj. -4073.42 iterations 11
Cbc0038I Pass  12: suminf.    1.48181 (4) obj. -4073.42 iterations 2
Cbc0038I Pass  13: suminf.    1.32323 (5) obj. -3984.37 iterations 6
Cbc0038I Pass  14: suminf.    0.43079 (4) obj. -3984.37 iterations 2
Cbc0038I Pass  15: suminf.    0.42707 (4) obj. -3984.37 iterations 2
Cbc0038I Pass  16: suminf.    1.02361 (3) obj. -4251.53 iterations 8
Cbc0038I Pass  17: suminf.    0.69096 (4) obj. -3984.37 iterations 2
Cbc0038I Pass  18: suminf.    1.02361 (3) obj. -4251.53 iterations 3
Cbc0038I Pass  19: suminf.    0.82788 (3) obj. -3984.37 iterations 8
Cbc0038I Pass  20: suminf.    0.51541 (4) obj. -3984.37 iterations 12
Cbc0038I Pass  21: suminf.    0.70307 (3) obj. -4120.63 iterations 3
Cbc0038I Pass  22: suminf.    1.03452 (4) obj. -3984.37 iterations 21
Cbc0038I Pass  23: suminf.    1.01163 (4) obj. -3984.37 iterations 7
Cbc0038I Pass  24: suminf.    0.51900 (3) obj. -4210.69 iterations 6
Cbc0038I Pass  25: suminf.    0.14479 (4) obj. -3984.37 iterations 4
Cbc0038I Pass  26: suminf.    0.51900 (3) obj. -4210.69 iterations 5
Cbc0038I Pass  27: suminf.    0.42261 (3) obj. -3984.37 iterations 5
Cbc0038I Pass  28: suminf.    0.05194 (2) obj. -3984.37 iterations 7
Cbc0038I Pass  29: suminf.    0.23077 (1) obj. -4162.54 iterations 3
Cbc0038I Pass  30: suminf.    0.98126 (4) obj. -3984.37 iterations 9
Cbc0038I Pass  31: suminf.    0.34181 (5) obj. -3984.37 iterations 8
Cbc0038I Rounding solution of -3927.19 is better than previous of -3900.25

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 57 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -3927.19 to -4232.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -4334.22
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.11887 (5) obj. -4334.22 iterations 2
Cbc0038I Pass  32: suminf.    0.58539 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  33: suminf.    0.57659 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  34: suminf.    1.31995 (3) obj. -4704.95 iterations 7
Cbc0038I Pass  35: suminf.    0.85856 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  36: suminf.    1.31995 (3) obj. -4704.95 iterations 5
Cbc0038I Pass  37: suminf.    1.07367 (3) obj. -4334.22 iterations 4
Cbc0038I Pass  38: suminf.    0.91835 (4) obj. -4334.22 iterations 3
Cbc0038I Pass  39: suminf.    1.04309 (3) obj. -4428.59 iterations 3
Cbc0038I Pass  40: suminf.    1.55413 (6) obj. -4334.22 iterations 8
Cbc0038I Pass  41: suminf.    1.09665 (7) obj. -4334.22 iterations 4
Cbc0038I Pass  42: suminf.    1.31995 (3) obj. -4704.95 iterations 9
Cbc0038I Pass  43: suminf.    0.85856 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  44: suminf.    1.31995 (3) obj. -4704.95 iterations 5
Cbc0038I Pass  45: suminf.    1.70614 (6) obj. -4334.22 iterations 6
Cbc0038I Pass  46: suminf.    1.09405 (5) obj. -4334.22 iterations 4
Cbc0038I Pass  47: suminf.    2.26274 (5) obj. -4334.22 iterations 4
Cbc0038I Pass  48: suminf.    0.24324 (2) obj. -4334.22 iterations 5
Cbc0038I Pass  49: suminf.    1.54199 (4) obj. -4334.22 iterations 4
Cbc0038I Pass  50: suminf.    0.78689 (3) obj. -4727.94 iterations 8
Cbc0038I Pass  51: suminf.    1.15166 (4) obj. -4483.85 iterations 4
Cbc0038I Pass  52: suminf.    0.67470 (3) obj. -4429.31 iterations 4
Cbc0038I Pass  53: suminf.    1.33025 (6) obj. -4334.22 iterations 5
Cbc0038I Pass  54: suminf.    1.62047 (7) obj. -4334.22 iterations 18
Cbc0038I Pass  55: suminf.    1.62047 (7) obj. -4334.22 iterations 2
Cbc0038I Pass  56: suminf.    0.93202 (2) obj. -4334.22 iterations 10
Cbc0038I Pass  57: suminf.    0.93202 (2) obj. -4334.22 iterations 0
Cbc0038I Pass  58: suminf.    0.95904 (2) obj. -4334.22 iterations 1
Cbc0038I Pass  59: suminf.    0.85856 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  60: suminf.    1.31995 (3) obj. -4704.95 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 57 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -4232.4 - took 0.02 seconds
Cbc0012I Integer solution of -4232.4025 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 99 rows 57 columns, reduced to 16 rows 9 columns
Cbc0031I 8 added rows had average density of 9.875
Cbc0013I At root node, 8 cuts changed objective from -4741.4864 to -4299.9229 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 7.1 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4232.40252, took 167 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 12 times (71 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 108 (-44) columns and 1698 (-1605) elements
Clp1000I sum of infeasibilities 1.21576e-07 - average 1.25336e-09, 102 fixed columns
Coin0506I Presolve 6 (-91) rows, 6 (-102) columns and 20 (-1678) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 4710.0871
Clp0000I Optimal - objective value 4710.0871
Coin0511I After Postsolve, objective 4710.0871, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8748672 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 4797.9626
Clp0000I Optimal - objective value 4797.9626
Clp0000I Optimal - objective value 4797.9626
Coin0511I After Postsolve, objective 4797.9626, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4797.962582 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 108 columns (108 integer (108 of which binary)) and 1719 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.925%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.4382
Cbc0038I Pass   1: suminf.    0.57934 (32) obj. -3791.69 iterations 22
Cbc0038I Pass   2: suminf.    0.15102 (6) obj. -3792 iterations 2
Cbc0038I Solution found of -3776.44
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 42 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -3875.64
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.43348 (33) obj. -3875.64 iterations 2
Cbc0038I Pass   4: suminf.    0.24047 (15) obj. -3875.64 iterations 7
Cbc0038I Pass   5: suminf.    0.21412 (2) obj. -3875.64 iterations 15
Cbc0038I Pass   6: suminf.    0.09495 (1) obj. -3875.64 iterations 1
Cbc0038I Pass   7: suminf.    2.56547 (23) obj. -3875.64 iterations 20
Cbc0038I Pass   8: suminf.    0.93341 (19) obj. -3891.05 iterations 6
Cbc0038I Pass   9: suminf.    0.17944 (2) obj. -3875.64 iterations 23
Cbc0038I Pass  10: suminf.    0.17570 (4) obj. -3875.64 iterations 2
Cbc0038I Pass  11: suminf.    1.29466 (4) obj. -3875.64 iterations 9
Cbc0038I Pass  12: suminf.    0.17804 (2) obj. -3875.64 iterations 6
Cbc0038I Pass  13: suminf.    0.03316 (1) obj. -3875.64 iterations 3
Cbc0038I Pass  14: suminf.    1.68091 (13) obj. -3875.64 iterations 21
Cbc0038I Pass  15: suminf.    1.41890 (12) obj. -3875.64 iterations 4
Cbc0038I Pass  16: suminf.    0.98180 (11) obj. -3875.64 iterations 3
Cbc0038I Pass  17: suminf.    0.51853 (11) obj. -3875.64 iterations 5
Cbc0038I Pass  18: suminf.    0.73349 (2) obj. -3875.64 iterations 13
Cbc0038I Pass  19: suminf.    0.73349 (2) obj. -3875.64 iterations 0
Cbc0038I Pass  20: suminf.    0.14192 (2) obj. -3875.64 iterations 3
Cbc0038I Pass  21: suminf.    0.14192 (2) obj. -3875.64 iterations 0
Cbc0038I Pass  22: suminf.    1.77619 (12) obj. -3875.64 iterations 15
Cbc0038I Pass  23: suminf.    1.77619 (12) obj. -3875.64 iterations 2
Cbc0038I Pass  24: suminf.    0.90496 (2) obj. -3875.64 iterations 14
Cbc0038I Pass  25: suminf.    0.41036 (2) obj. -3875.64 iterations 3
Cbc0038I Pass  26: suminf.    0.14390 (1) obj. -3875.64 iterations 2
Cbc0038I Pass  27: suminf.    0.72357 (9) obj. -3875.64 iterations 15
Cbc0038I Pass  28: suminf.    0.59820 (9) obj. -3878.67 iterations 3
Cbc0038I Pass  29: suminf.    0.63050 (2) obj. -3875.64 iterations 12
Cbc0038I Pass  30: suminf.    0.63050 (2) obj. -3875.64 iterations 0
Cbc0038I Pass  31: suminf.    0.25839 (2) obj. -3875.64 iterations 3
Cbc0038I Pass  32: suminf.    0.25839 (2) obj. -3875.64 iterations 0
Cbc0038I Rounding solution of -4214.29 is better than previous of -3776.44

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 50 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -4214.29 to -4232.4 (0.06 seconds)
Cbc0038I Round again with cutoff of -4339.61
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.98748 (13) obj. -4339.61 iterations 3
Cbc0038I Pass  33: suminf.    0.98748 (13) obj. -4339.61 iterations 0
Cbc0038I Pass  34: suminf.    0.98602 (2) obj. -4339.61 iterations 16
Cbc0038I Pass  35: suminf.    0.95000 (2) obj. -4372.46 iterations 1
Cbc0038I Pass  36: suminf.    0.98081 (7) obj. -4339.61 iterations 4
Cbc0038I Pass  37: suminf.    0.95000 (2) obj. -4368.46 iterations 7
Cbc0038I Pass  38: suminf.    0.95000 (2) obj. -4368.46 iterations 0
Cbc0038I Pass  39: suminf.    0.98287 (4) obj. -4339.61 iterations 3
Cbc0038I Pass  40: suminf.    1.29614 (24) obj. -4339.61 iterations 16
Cbc0038I Pass  41: suminf.    1.02197 (25) obj. -4339.61 iterations 3
Cbc0038I Pass  42: suminf.    1.19454 (3) obj. -4339.61 iterations 12
Cbc0038I Pass  43: suminf.    0.70000 (2) obj. -4369.94 iterations 3
Cbc0038I Pass  44: suminf.    1.22972 (4) obj. -4339.61 iterations 3
Cbc0038I Pass  45: suminf.    0.70000 (2) obj. -4369.94 iterations 5
Cbc0038I Pass  46: suminf.    1.58922 (8) obj. -4339.61 iterations 18
Cbc0038I Pass  47: suminf.    1.58922 (8) obj. -4339.61 iterations 2
Cbc0038I Pass  48: suminf.    1.66037 (5) obj. -4339.61 iterations 10
Cbc0038I Pass  49: suminf.    0.05000 (2) obj. -4469.99 iterations 6
Cbc0038I Pass  50: suminf.    0.05000 (2) obj. -4469.99 iterations 0
Cbc0038I Pass  51: suminf.    1.65267 (4) obj. -4339.61 iterations 5
Cbc0038I Pass  52: suminf.    2.92388 (15) obj. -4339.61 iterations 22
Cbc0038I Pass  53: suminf.    1.74374 (7) obj. -4339.61 iterations 13
Cbc0038I Pass  54: suminf.    0.05000 (2) obj. -4468.99 iterations 9
Cbc0038I Pass  55: suminf.    0.05000 (2) obj. -4468.99 iterations 0
Cbc0038I Pass  56: suminf.    1.65459 (4) obj. -4339.61 iterations 6
Cbc0038I Pass  57: suminf.    2.76391 (22) obj. -4339.61 iterations 19
Cbc0038I Pass  58: suminf.    0.92367 (7) obj. -4339.61 iterations 4
Cbc0038I Pass  59: suminf.    0.10086 (3) obj. -4468.89 iterations 7
Cbc0038I Pass  60: suminf.    1.67295 (7) obj. -4339.61 iterations 5
Cbc0038I Pass  61: suminf.    0.05000 (2) obj. -4462.99 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 52 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -4232.4 - took 0.05 seconds
Cbc0012I Integer solution of -4232.4025 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 92 rows 108 columns, reduced to 42 rows 44 columns
Cbc0031I 37 added rows had average density of 9.5675676
Cbc0013I At root node, 37 cuts changed objective from -4768.4471 to -4301.7153 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 567 row cuts average 6.1 elements, 27 column cuts (27 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 74 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 195 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 254 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4232.40252, took 437 iterations and 2 nodes (0.37 seconds)
Cbc0032I Strong branching done 60 times (732 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 0, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.40

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 57 (-21) columns and 310 (-143) elements
Clp1000I sum of infeasibilities 2.59949e-06 - average 2.54852e-08, 46 fixed columns
Coin0506I Presolve 15 (-87) rows, 9 (-48) columns and 42 (-268) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 4741.4864
Clp0000I Optimal - objective value 4741.4864
Coin0511I After Postsolve, objective 4741.4864, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.92375 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 4741.4864
Clp0000I Optimal - objective value 4741.4864
Clp0000I Optimal - objective value 4741.4864
Coin0511I After Postsolve, objective 4741.4864, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4741.486411 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 57 columns (56 integer (56 of which binary)) and 342 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.502%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.26128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2714.9 iterations 9
Cbc0038I Solution found of -2714.9
Cbc0038I Relaxing continuous gives -2714.9
Cbc0038I Rounding solution of -3738.68 is better than previous of -2714.9

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 57 columns, reduced to 15 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -3738.68 to -3900.25 (0.02 seconds)
Cbc0038I Round again with cutoff of -3984.37
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.84676 (2) obj. -3984.37 iterations 4
Cbc0038I Pass   3: suminf.    0.41935 (1) obj. -4230.31 iterations 3
Cbc0038I Pass   4: suminf.    0.21124 (1) obj. -3984.37 iterations 2
Cbc0038I Pass   5: suminf.    0.11753 (5) obj. -3984.37 iterations 10
Cbc0038I Pass   6: suminf.    0.05920 (3) obj. -3984.37 iterations 11
Cbc0038I Pass   7: suminf.    0.36601 (2) obj. -4174.44 iterations 4
Cbc0038I Pass   8: suminf.    0.40671 (2) obj. -3984.37 iterations 10
Cbc0038I Pass   9: suminf.    0.06170 (2) obj. -3984.37 iterations 7
Cbc0038I Pass  10: suminf.    0.30769 (1) obj. -4230.26 iterations 3
Cbc0038I Pass  11: suminf.    1.48181 (4) obj. -4073.42 iterations 11
Cbc0038I Pass  12: suminf.    1.48181 (4) obj. -4073.42 iterations 2
Cbc0038I Pass  13: suminf.    1.32323 (5) obj. -3984.37 iterations 6
Cbc0038I Pass  14: suminf.    0.43079 (4) obj. -3984.37 iterations 2
Cbc0038I Pass  15: suminf.    0.42707 (4) obj. -3984.37 iterations 2
Cbc0038I Pass  16: suminf.    1.02361 (3) obj. -4251.53 iterations 8
Cbc0038I Pass  17: suminf.    0.69096 (4) obj. -3984.37 iterations 2
Cbc0038I Pass  18: suminf.    1.02361 (3) obj. -4251.53 iterations 3
Cbc0038I Pass  19: suminf.    0.82788 (3) obj. -3984.37 iterations 8
Cbc0038I Pass  20: suminf.    0.51541 (4) obj. -3984.37 iterations 12
Cbc0038I Pass  21: suminf.    0.70307 (3) obj. -4120.63 iterations 3
Cbc0038I Pass  22: suminf.    1.03452 (4) obj. -3984.37 iterations 21
Cbc0038I Pass  23: suminf.    1.01163 (4) obj. -3984.37 iterations 7
Cbc0038I Pass  24: suminf.    0.51900 (3) obj. -4210.69 iterations 6
Cbc0038I Pass  25: suminf.    0.14479 (4) obj. -3984.37 iterations 4
Cbc0038I Pass  26: suminf.    0.51900 (3) obj. -4210.69 iterations 5
Cbc0038I Pass  27: suminf.    0.42261 (3) obj. -3984.37 iterations 5
Cbc0038I Pass  28: suminf.    0.05194 (2) obj. -3984.37 iterations 7
Cbc0038I Pass  29: suminf.    0.23077 (1) obj. -4162.54 iterations 3
Cbc0038I Pass  30: suminf.    0.98126 (4) obj. -3984.37 iterations 9
Cbc0038I Pass  31: suminf.    0.34181 (5) obj. -3984.37 iterations 8
Cbc0038I Rounding solution of -3927.19 is better than previous of -3900.25

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 57 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -3927.19 to -4232.4 (0.03 seconds)
Cbc0038I Round again with cutoff of -4334.22
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.11887 (5) obj. -4334.22 iterations 2
Cbc0038I Pass  32: suminf.    0.58539 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  33: suminf.    0.57659 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  34: suminf.    1.31995 (3) obj. -4704.95 iterations 7
Cbc0038I Pass  35: suminf.    0.85856 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  36: suminf.    1.31995 (3) obj. -4704.95 iterations 5
Cbc0038I Pass  37: suminf.    1.07367 (3) obj. -4334.22 iterations 4
Cbc0038I Pass  38: suminf.    0.91835 (4) obj. -4334.22 iterations 3
Cbc0038I Pass  39: suminf.    1.04309 (3) obj. -4428.59 iterations 3
Cbc0038I Pass  40: suminf.    1.55413 (6) obj. -4334.22 iterations 8
Cbc0038I Pass  41: suminf.    1.09665 (7) obj. -4334.22 iterations 4
Cbc0038I Pass  42: suminf.    1.31995 (3) obj. -4704.95 iterations 9
Cbc0038I Pass  43: suminf.    0.85856 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  44: suminf.    1.31995 (3) obj. -4704.95 iterations 5
Cbc0038I Pass  45: suminf.    1.70614 (6) obj. -4334.22 iterations 6
Cbc0038I Pass  46: suminf.    1.09405 (5) obj. -4334.22 iterations 4
Cbc0038I Pass  47: suminf.    2.26274 (5) obj. -4334.22 iterations 4
Cbc0038I Pass  48: suminf.    0.24324 (2) obj. -4334.22 iterations 5
Cbc0038I Pass  49: suminf.    1.54199 (4) obj. -4334.22 iterations 4
Cbc0038I Pass  50: suminf.    0.78689 (3) obj. -4727.94 iterations 8
Cbc0038I Pass  51: suminf.    1.15166 (4) obj. -4483.85 iterations 4
Cbc0038I Pass  52: suminf.    0.67470 (3) obj. -4429.31 iterations 4
Cbc0038I Pass  53: suminf.    1.33025 (6) obj. -4334.22 iterations 5
Cbc0038I Pass  54: suminf.    1.62047 (7) obj. -4334.22 iterations 18
Cbc0038I Pass  55: suminf.    1.62047 (7) obj. -4334.22 iterations 2
Cbc0038I Pass  56: suminf.    0.93202 (2) obj. -4334.22 iterations 10
Cbc0038I Pass  57: suminf.    0.93202 (2) obj. -4334.22 iterations 0
Cbc0038I Pass  58: suminf.    0.95904 (2) obj. -4334.22 iterations 1
Cbc0038I Pass  59: suminf.    0.85856 (4) obj. -4334.22 iterations 2
Cbc0038I Pass  60: suminf.    1.31995 (3) obj. -4704.95 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 57 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -4232.4 - took 0.02 seconds
Cbc0012I Integer solution of -4232.4025 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 99 rows 57 columns, reduced to 16 rows 9 columns
Cbc0031I 8 added rows had average density of 9.875
Cbc0013I At root node, 8 cuts changed objective from -4741.4864 to -4299.9229 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 7.1 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4232.40252, took 167 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 12 times (71 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-72) rows, 93 (-60) columns and 1357 (-1947) elements
Clp1000I sum of infeasibilities 2.12254e-07 - average 2.55728e-09, 87 fixed columns
Coin0506I Presolve 6 (-77) rows, 6 (-87) columns and 20 (-1337) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 4731.1926
Clp0000I Optimal - objective value 4731.1926
Coin0511I After Postsolve, objective 4731.1926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2672962 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4797.9626
Clp0000I Optimal - objective value 4797.9626
Clp0000I Optimal - objective value 4797.9626
Coin0511I After Postsolve, objective 4797.9626, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4797.962582 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 97 columns (97 integer (97 of which binary)) and 1401 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 12.7882
Cbc0038I Pass   1: suminf.    0.17793 (6) obj. -3791.92 iterations 36
Cbc0038I Pass   2: suminf.    0.17793 (6) obj. -3791.92 iterations 1
Cbc0038I Solution found of -3776.44
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 42 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3875.43
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.27110 (15) obj. -3875.43 iterations 6
Cbc0038I Pass   4: suminf.    0.27110 (15) obj. -3875.43 iterations 0
Cbc0038I Pass   5: suminf.    0.13764 (4) obj. -3920.91 iterations 13
Cbc0038I Pass   6: suminf.    0.09658 (4) obj. -3875.43 iterations 1
Cbc0038I Pass   7: suminf.    0.12903 (1) obj. -3915.92 iterations 5
Cbc0038I Pass   8: suminf.    0.09477 (1) obj. -3875.43 iterations 1
Cbc0038I Pass   9: suminf.    1.01944 (3) obj. -3875.43 iterations 12
Cbc0038I Pass  10: suminf.    1.01944 (3) obj. -3875.43 iterations 0
Cbc0038I Pass  11: suminf.    0.01554 (1) obj. -3875.43 iterations 2
Cbc0038I Solution found of -3907.67
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 45 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -3907.67 to -4232.4 (0.04 seconds)
Cbc0038I Round again with cutoff of -4339.19
Cbc0038I Reduced cost fixing fixed 16 variables on major pass 3
Cbc0038I Pass  12: suminf.    1.04712 (13) obj. -4339.19 iterations 8
Cbc0038I Pass  13: suminf.    1.04712 (13) obj. -4339.19 iterations 0
Cbc0038I Pass  14: suminf.    0.98648 (2) obj. -4339.19 iterations 16
Cbc0038I Pass  15: suminf.    0.95000 (2) obj. -4372.46 iterations 1
Cbc0038I Pass  16: suminf.    0.98281 (6) obj. -4339.19 iterations 2
Cbc0038I Pass  17: suminf.    0.95000 (2) obj. -4368.46 iterations 6
Cbc0038I Pass  18: suminf.    0.95000 (2) obj. -4368.46 iterations 0
Cbc0038I Pass  19: suminf.    0.98051 (3) obj. -4339.19 iterations 2
Cbc0038I Pass  20: suminf.    1.46934 (27) obj. -4339.19 iterations 28
Cbc0038I Pass  21: suminf.    1.18510 (25) obj. -4339.19 iterations 3
Cbc0038I Pass  22: suminf.    1.13268 (3) obj. -4339.19 iterations 18
Cbc0038I Pass  23: suminf.    0.70000 (2) obj. -4365.73 iterations 3
Cbc0038I Pass  24: suminf.    0.99215 (3) obj. -4339.19 iterations 2
Cbc0038I Pass  25: suminf.    1.58384 (17) obj. -4339.19 iterations 12
Cbc0038I Pass  26: suminf.    1.58384 (17) obj. -4339.19 iterations 3
Cbc0038I Pass  27: suminf.    1.34277 (5) obj. -4339.19 iterations 19
Cbc0038I Pass  28: suminf.    1.17846 (6) obj. -4339.19 iterations 4
Cbc0038I Pass  29: suminf.    0.58028 (3) obj. -4436.21 iterations 6
Cbc0038I Pass  30: suminf.    0.46048 (4) obj. -4339.19 iterations 4
Cbc0038I Pass  31: suminf.    0.58028 (3) obj. -4436.21 iterations 4
Cbc0038I Pass  32: suminf.    0.74296 (9) obj. -4339.19 iterations 8
Cbc0038I Pass  33: suminf.    0.68386 (9) obj. -4339.19 iterations 5
Cbc0038I Pass  34: suminf.    0.58818 (4) obj. -4431.57 iterations 9
Cbc0038I Pass  35: suminf.    1.72295 (12) obj. -4339.19 iterations 17
Cbc0038I Pass  36: suminf.    0.83337 (5) obj. -4373.42 iterations 12
Cbc0038I Pass  37: suminf.    1.19601 (3) obj. -4339.19 iterations 5
Cbc0038I Pass  38: suminf.    0.70000 (2) obj. -4366.73 iterations 3
Cbc0038I Pass  39: suminf.    1.49712 (7) obj. -4339.19 iterations 8
Cbc0038I Pass  40: suminf.    1.36447 (8) obj. -4339.19 iterations 5
Cbc0038I Pass  41: suminf.    0.70000 (2) obj. -4367.73 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 49 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -4232.4 - took 0.03 seconds
Cbc0012I Integer solution of -4232.4025 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 84 rows 97 columns, reduced to 42 rows 44 columns
Cbc0031I 40 added rows had average density of 7.025
Cbc0013I At root node, 40 cuts changed objective from -4766.3367 to -4291.3781 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 533 row cuts average 5.9 elements, 26 column cuts (26 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 65 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 31 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 148 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 259 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4232.40252, took 423 iterations and 2 nodes (0.33 seconds)
Cbc0032I Strong branching done 58 times (621 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.34

