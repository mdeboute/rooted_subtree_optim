Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 29 (-3) columns and 154 (-23) elements
Clp1000I sum of infeasibilities 0.00522787 - average 0.000100536, 6 fixed columns
Coin0506I Presolve 34 (-18) rows, 23 (-6) columns and 107 (-47) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 120.57357
Clp0000I Optimal - objective value 120.57357
Coin0511I After Postsolve, objective 120.57357, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 120.57357
Clp0000I Optimal - objective value 120.57357
Clp0000I Optimal - objective value 120.57357
Coin0511I After Postsolve, objective 120.57357, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 120.5735682 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 29 columns (28 integer (28 of which binary)) and 161 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.682%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.7488
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.243 iterations 16
Cbc0038I Solution found of -18.243
Cbc0038I Relaxing continuous gives -18.243
Cbc0038I Rounding solution of -27.2406 is better than previous of -18.243

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -27.2406 to -54.5771 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.0746
Cbc0038I Pass   2: suminf.    0.63131 (2) obj. -61.0746 iterations 3
Cbc0038I Pass   3: suminf.    0.63131 (2) obj. -61.0746 iterations 1
Cbc0038I Pass   4: suminf.    0.94993 (2) obj. -61.0746 iterations 1
Cbc0038I Pass   5: suminf.    1.54201 (6) obj. -61.0746 iterations 8
Cbc0038I Pass   6: suminf.    0.82351 (6) obj. -61.0746 iterations 1
Cbc0038I Pass   7: suminf.    0.78312 (6) obj. -61.0746 iterations 1
Cbc0038I Pass   8: suminf.    1.30683 (3) obj. -61.0746 iterations 8
Cbc0038I Pass   9: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  10: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  11: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I Pass  12: suminf.    1.39572 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  13: suminf.    1.30683 (3) obj. -61.0746 iterations 4
Cbc0038I Pass  14: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  15: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  16: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I Pass  17: suminf.    1.39572 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  18: suminf.    1.30683 (3) obj. -61.0746 iterations 4
Cbc0038I Pass  19: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  20: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  21: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I Pass  22: suminf.    1.39572 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  23: suminf.    1.30683 (3) obj. -61.0746 iterations 4
Cbc0038I Pass  24: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  25: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  26: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I Pass  27: suminf.    1.39572 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  28: suminf.    1.30683 (3) obj. -61.0746 iterations 4
Cbc0038I Pass  29: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  30: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  31: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 36 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -54.5771 - took 0.05 seconds
Cbc0012I Integer solution of -54.57714 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 52 rows 29 columns, reduced to 27 rows 17 columns
Cbc0031I 12 added rows had average density of 18
Cbc0013I At root node, 12 cuts changed objective from -119.551 to -62.668143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1676 row cuts average 3.7 elements, 3 column cuts (3 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1180 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -56.51395 found by rounding after 2357 iterations and 3 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -56.51394999999999, took 2369 iterations and 4 nodes (0.18 seconds)
Cbc0032I Strong branching done 46 times (379 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 54 (-6) columns and 511 (-101) elements
Clp1000I sum of infeasibilities 2.82338e-10 - average 5.64675e-12, 41 fixed columns
Coin0506I Presolve 7 (-43) rows, 13 (-41) columns and 35 (-476) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 0.78657989 - largest nonzero change 1.5686673e-05 ( 0.0013540233%) - largest zero change 2.9980294e-05
Clp0000I Optimal - objective value 48.482994
Clp0000I Optimal - objective value 48.482994
Coin0511I After Postsolve, objective 48.482994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21233672 - largest nonzero change 1.5972131e-05 ( 0.0013540233%) - largest zero change 2.8303424e-05
Clp0000I Optimal - objective value 144.46958
Clp0000I Optimal - objective value 144.46958
Clp0000I Optimal - objective value 144.46958
Coin0511I After Postsolve, objective 144.46958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.4695826 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 54 columns (54 integer (54 of which binary)) and 524 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.6214
Cbc0038I Pass   1: suminf.    2.65313 (10) obj. -85.0537 iterations 22
Cbc0038I Pass   2: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Solution found of -29.6292
Cbc0038I Rounding solution of -52.0771 is better than previous of -29.6292

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -59.6065
Cbc0038I Pass   3: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Pass   4: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Pass   5: suminf.    1.01475 (3) obj. -59.6065 iterations 19
Cbc0038I Pass   6: suminf.    0.67164 (2) obj. -59.6065 iterations 2
Cbc0038I Pass   7: suminf.    0.31250 (1) obj. -64.0771 iterations 2
Cbc0038I Pass   8: suminf.    0.45221 (1) obj. -59.6065 iterations 1
Cbc0038I Pass   9: suminf.    1.54166 (6) obj. -59.6065 iterations 9
Cbc0038I Pass  10: suminf.    1.54166 (6) obj. -59.6065 iterations 0
Cbc0038I Pass  11: suminf.    0.52354 (11) obj. -59.6065 iterations 9
Cbc0038I Pass  12: suminf.    0.42677 (4) obj. -59.6065 iterations 2
Cbc0038I Pass  13: suminf.    1.08036 (3) obj. -59.6065 iterations 2
Cbc0038I Pass  14: suminf.    0.33188 (3) obj. -68.6576 iterations 1
Cbc0038I Pass  15: suminf.    1.78506 (6) obj. -59.6065 iterations 7
Cbc0038I Pass  16: suminf.    1.58570 (5) obj. -67.2845 iterations 1
Cbc0038I Pass  17: suminf.    1.05197 (4) obj. -63.786 iterations 1
Cbc0038I Pass  18: suminf.    1.17378 (3) obj. -59.6065 iterations 2
Cbc0038I Pass  19: suminf.    0.89812 (3) obj. -62.9398 iterations 1
Cbc0038I Pass  20: suminf.    2.58496 (9) obj. -81.7672 iterations 10
Cbc0038I Pass  21: suminf.    1.14288 (5) obj. -77.6591 iterations 4
Cbc0038I Pass  22: suminf.    1.02367 (3) obj. -59.6065 iterations 7
Cbc0038I Pass  23: suminf.    0.66350 (2) obj. -59.6065 iterations 1
Cbc0038I Pass  24: suminf.    0.32708 (2) obj. -63.4743 iterations 2
Cbc0038I Pass  25: suminf.    0.44795 (2) obj. -59.6065 iterations 2
Cbc0038I Pass  26: suminf.    2.75083 (9) obj. -59.6065 iterations 15
Cbc0038I Pass  27: suminf.    2.51298 (8) obj. -66.8552 iterations 4
Cbc0038I Pass  28: suminf.    1.15656 (3) obj. -59.6065 iterations 9
Cbc0038I Pass  29: suminf.    0.44813 (3) obj. -68.1732 iterations 1
Cbc0038I Pass  30: suminf.    1.15656 (3) obj. -59.6065 iterations 1
Cbc0038I Pass  31: suminf.    2.68538 (10) obj. -59.6065 iterations 14
Cbc0038I Pass  32: suminf.    2.06091 (9) obj. -59.6065 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -29.6292 to -53.4618 (0.03 seconds)
Cbc0038I Round again with cutoff of -73.1593
Cbc0038I Pass  32: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Pass  33: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Pass  34: suminf.    1.41510 (12) obj. -73.1593 iterations 23
Cbc0038I Pass  35: suminf.    1.16959 (4) obj. -73.1593 iterations 2
Cbc0038I Pass  36: suminf.    1.32751 (3) obj. -73.1593 iterations 3
Cbc0038I Pass  37: suminf.    0.38623 (2) obj. -73.1593 iterations 2
Cbc0038I Pass  38: suminf.    0.31250 (1) obj. -74.0771 iterations 1
Cbc0038I Pass  39: suminf.    0.34118 (1) obj. -73.1593 iterations 1
Cbc0038I Pass  40: suminf.    0.99363 (4) obj. -73.1593 iterations 7
Cbc0038I Pass  41: suminf.    0.56277 (2) obj. -73.1593 iterations 2
Cbc0038I Pass  42: suminf.    0.40341 (2) obj. -78.2589 iterations 1
Cbc0038I Pass  43: suminf.    0.61072 (2) obj. -73.1593 iterations 4
Cbc0038I Pass  44: suminf.    0.61072 (2) obj. -73.1593 iterations 0
Cbc0038I Pass  45: suminf.    0.89907 (3) obj. -73.1593 iterations 4
Cbc0038I Pass  46: suminf.    0.82063 (3) obj. -75.6696 iterations 2
Cbc0038I Pass  47: suminf.    1.02822 (3) obj. -73.1593 iterations 2
Cbc0038I Pass  48: suminf.    4.03261 (16) obj. -73.1593 iterations 15
Cbc0038I Pass  49: suminf.    1.98680 (7) obj. -73.1593 iterations 6
Cbc0038I Pass  50: suminf.    1.98680 (7) obj. -73.1593 iterations 1
Cbc0038I Pass  51: suminf.    1.03764 (3) obj. -73.1593 iterations 10
Cbc0038I Pass  52: suminf.    0.42221 (3) obj. -73.1593 iterations 3
Cbc0038I Pass  53: suminf.    0.55769 (4) obj. -73.1593 iterations 7
Cbc0038I Pass  54: suminf.    0.55769 (4) obj. -73.1593 iterations 1
Cbc0038I Pass  55: suminf.    1.13409 (4) obj. -73.1593 iterations 1
Cbc0038I Pass  56: suminf.    0.53903 (4) obj. -80.355 iterations 1
Cbc0038I Pass  57: suminf.    0.55769 (4) obj. -73.1593 iterations 4
Cbc0038I Pass  58: suminf.    1.97590 (7) obj. -73.1593 iterations 10
Cbc0038I Pass  59: suminf.    1.02949 (5) obj. -81.3932 iterations 5
Cbc0038I Pass  60: suminf.    0.66880 (4) obj. -73.1593 iterations 6
Cbc0038I Pass  61: suminf.    0.66880 (4) obj. -73.1593 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -53.4618 - took 0.02 seconds
Cbc0012I Integer solution of -53.46178 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 50 rows 54 columns, reduced to 14 rows 17 columns
Cbc0012I Integer solution of -56.51395 found by DiveCoefficient after 130 iterations and 0 nodes (0.14 seconds)
Cbc0031I 22 added rows had average density of 7.4090909
Cbc0013I At root node, 22 cuts changed objective from -127.37028 to -56.51395 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 341 row cuts average 3.5 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 56 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0001I Search completed - best objective -56.51394999999999, took 130 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 29 (-3) columns and 154 (-23) elements
Clp1000I sum of infeasibilities 0.00522787 - average 0.000100536, 6 fixed columns
Coin0506I Presolve 34 (-18) rows, 23 (-6) columns and 107 (-47) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 120.57357
Clp0000I Optimal - objective value 120.57357
Coin0511I After Postsolve, objective 120.57357, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 120.57357
Clp0000I Optimal - objective value 120.57357
Clp0000I Optimal - objective value 120.57357
Coin0511I After Postsolve, objective 120.57357, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 120.5735682 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 29 columns (28 integer (28 of which binary)) and 161 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.682%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.7488
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.243 iterations 16
Cbc0038I Solution found of -18.243
Cbc0038I Relaxing continuous gives -18.243
Cbc0038I Rounding solution of -27.2406 is better than previous of -18.243

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -27.2406 to -54.5771 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.0746
Cbc0038I Pass   2: suminf.    0.63131 (2) obj. -61.0746 iterations 3
Cbc0038I Pass   3: suminf.    0.63131 (2) obj. -61.0746 iterations 1
Cbc0038I Pass   4: suminf.    0.94993 (2) obj. -61.0746 iterations 1
Cbc0038I Pass   5: suminf.    1.54201 (6) obj. -61.0746 iterations 8
Cbc0038I Pass   6: suminf.    0.82351 (6) obj. -61.0746 iterations 1
Cbc0038I Pass   7: suminf.    0.78312 (6) obj. -61.0746 iterations 1
Cbc0038I Pass   8: suminf.    1.30683 (3) obj. -61.0746 iterations 8
Cbc0038I Pass   9: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  10: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  11: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I Pass  12: suminf.    1.39572 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  13: suminf.    1.30683 (3) obj. -61.0746 iterations 4
Cbc0038I Pass  14: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  15: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  16: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I Pass  17: suminf.    1.39572 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  18: suminf.    1.30683 (3) obj. -61.0746 iterations 4
Cbc0038I Pass  19: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  20: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  21: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I Pass  22: suminf.    1.39572 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  23: suminf.    1.30683 (3) obj. -61.0746 iterations 4
Cbc0038I Pass  24: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  25: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  26: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I Pass  27: suminf.    1.39572 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  28: suminf.    1.30683 (3) obj. -61.0746 iterations 4
Cbc0038I Pass  29: suminf.    0.97202 (3) obj. -61.0746 iterations 1
Cbc0038I Pass  30: suminf.    0.96830 (4) obj. -61.0746 iterations 1
Cbc0038I Pass  31: suminf.    1.46925 (4) obj. -61.0746 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 36 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -54.5771 - took 0.04 seconds
Cbc0012I Integer solution of -54.57714 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 29 columns, reduced to 27 rows 17 columns
Cbc0031I 12 added rows had average density of 18
Cbc0013I At root node, 12 cuts changed objective from -119.551 to -62.668143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1676 row cuts average 3.7 elements, 3 column cuts (3 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1180 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -56.51395 found by rounding after 2357 iterations and 3 nodes (0.21 seconds)
Cbc0001I Search completed - best objective -56.51394999999999, took 2369 iterations and 4 nodes (0.21 seconds)
Cbc0032I Strong branching done 46 times (379 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 54 (-7) columns and 511 (-102) elements
Clp1000I sum of infeasibilities 2.82338e-10 - average 5.64675e-12, 41 fixed columns
Coin0506I Presolve 7 (-43) rows, 13 (-41) columns and 35 (-476) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 0.78657989 - largest nonzero change 1.5686673e-05 ( 0.0013540233%) - largest zero change 2.9980294e-05
Clp0000I Optimal - objective value 48.482994
Clp0000I Optimal - objective value 48.482994
Coin0511I After Postsolve, objective 48.482994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21233672 - largest nonzero change 1.5972131e-05 ( 0.0013540233%) - largest zero change 2.8303424e-05
Clp0000I Optimal - objective value 144.46958
Clp0000I Optimal - objective value 144.46958
Clp0000I Optimal - objective value 144.46958
Coin0511I After Postsolve, objective 144.46958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.4695826 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 54 columns (54 integer (54 of which binary)) and 524 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.6214
Cbc0038I Pass   1: suminf.    2.65313 (10) obj. -85.0537 iterations 22
Cbc0038I Pass   2: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Solution found of -29.6292
Cbc0038I Rounding solution of -52.0771 is better than previous of -29.6292

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -59.6065
Cbc0038I Pass   3: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Pass   4: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Pass   5: suminf.    1.01475 (3) obj. -59.6065 iterations 19
Cbc0038I Pass   6: suminf.    0.67164 (2) obj. -59.6065 iterations 2
Cbc0038I Pass   7: suminf.    0.31250 (1) obj. -64.0771 iterations 2
Cbc0038I Pass   8: suminf.    0.45221 (1) obj. -59.6065 iterations 1
Cbc0038I Pass   9: suminf.    1.54166 (6) obj. -59.6065 iterations 9
Cbc0038I Pass  10: suminf.    1.54166 (6) obj. -59.6065 iterations 0
Cbc0038I Pass  11: suminf.    0.52354 (11) obj. -59.6065 iterations 9
Cbc0038I Pass  12: suminf.    0.42677 (4) obj. -59.6065 iterations 2
Cbc0038I Pass  13: suminf.    1.08036 (3) obj. -59.6065 iterations 2
Cbc0038I Pass  14: suminf.    0.33188 (3) obj. -68.6576 iterations 1
Cbc0038I Pass  15: suminf.    1.78506 (6) obj. -59.6065 iterations 7
Cbc0038I Pass  16: suminf.    1.58570 (5) obj. -67.2845 iterations 1
Cbc0038I Pass  17: suminf.    1.05197 (4) obj. -63.786 iterations 1
Cbc0038I Pass  18: suminf.    1.17378 (3) obj. -59.6065 iterations 2
Cbc0038I Pass  19: suminf.    0.89812 (3) obj. -62.9398 iterations 1
Cbc0038I Pass  20: suminf.    2.58496 (9) obj. -81.7672 iterations 10
Cbc0038I Pass  21: suminf.    1.14288 (5) obj. -77.6591 iterations 4
Cbc0038I Pass  22: suminf.    1.02367 (3) obj. -59.6065 iterations 7
Cbc0038I Pass  23: suminf.    0.66350 (2) obj. -59.6065 iterations 1
Cbc0038I Pass  24: suminf.    0.32708 (2) obj. -63.4743 iterations 2
Cbc0038I Pass  25: suminf.    0.44795 (2) obj. -59.6065 iterations 2
Cbc0038I Pass  26: suminf.    2.75083 (9) obj. -59.6065 iterations 15
Cbc0038I Pass  27: suminf.    2.51298 (8) obj. -66.8552 iterations 4
Cbc0038I Pass  28: suminf.    1.15656 (3) obj. -59.6065 iterations 9
Cbc0038I Pass  29: suminf.    0.44813 (3) obj. -68.1732 iterations 1
Cbc0038I Pass  30: suminf.    1.15656 (3) obj. -59.6065 iterations 1
Cbc0038I Pass  31: suminf.    2.68538 (10) obj. -59.6065 iterations 14
Cbc0038I Pass  32: suminf.    2.06091 (9) obj. -59.6065 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -29.6292 to -53.4618 (0.03 seconds)
Cbc0038I Round again with cutoff of -73.1593
Cbc0038I Pass  32: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Pass  33: suminf.    2.65313 (10) obj. -85.0537 iterations 0
Cbc0038I Pass  34: suminf.    1.41510 (12) obj. -73.1593 iterations 23
Cbc0038I Pass  35: suminf.    1.16959 (4) obj. -73.1593 iterations 2
Cbc0038I Pass  36: suminf.    1.32751 (3) obj. -73.1593 iterations 3
Cbc0038I Pass  37: suminf.    0.38623 (2) obj. -73.1593 iterations 2
Cbc0038I Pass  38: suminf.    0.31250 (1) obj. -74.0771 iterations 1
Cbc0038I Pass  39: suminf.    0.34118 (1) obj. -73.1593 iterations 1
Cbc0038I Pass  40: suminf.    0.99363 (4) obj. -73.1593 iterations 7
Cbc0038I Pass  41: suminf.    0.56277 (2) obj. -73.1593 iterations 2
Cbc0038I Pass  42: suminf.    0.40341 (2) obj. -78.2589 iterations 1
Cbc0038I Pass  43: suminf.    0.61072 (2) obj. -73.1593 iterations 4
Cbc0038I Pass  44: suminf.    0.61072 (2) obj. -73.1593 iterations 0
Cbc0038I Pass  45: suminf.    0.89907 (3) obj. -73.1593 iterations 4
Cbc0038I Pass  46: suminf.    0.82063 (3) obj. -75.6696 iterations 2
Cbc0038I Pass  47: suminf.    1.02822 (3) obj. -73.1593 iterations 2
Cbc0038I Pass  48: suminf.    4.03261 (16) obj. -73.1593 iterations 15
Cbc0038I Pass  49: suminf.    1.98680 (7) obj. -73.1593 iterations 6
Cbc0038I Pass  50: suminf.    1.98680 (7) obj. -73.1593 iterations 1
Cbc0038I Pass  51: suminf.    1.03764 (3) obj. -73.1593 iterations 10
Cbc0038I Pass  52: suminf.    0.42221 (3) obj. -73.1593 iterations 3
Cbc0038I Pass  53: suminf.    0.55769 (4) obj. -73.1593 iterations 7
Cbc0038I Pass  54: suminf.    0.55769 (4) obj. -73.1593 iterations 1
Cbc0038I Pass  55: suminf.    1.13409 (4) obj. -73.1593 iterations 1
Cbc0038I Pass  56: suminf.    0.53903 (4) obj. -80.355 iterations 1
Cbc0038I Pass  57: suminf.    0.55769 (4) obj. -73.1593 iterations 4
Cbc0038I Pass  58: suminf.    1.97590 (7) obj. -73.1593 iterations 10
Cbc0038I Pass  59: suminf.    1.02949 (5) obj. -81.3932 iterations 5
Cbc0038I Pass  60: suminf.    0.66880 (4) obj. -73.1593 iterations 6
Cbc0038I Pass  61: suminf.    0.66880 (4) obj. -73.1593 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -53.4618 - took 0.02 seconds
Cbc0012I Integer solution of -53.46178 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 50 rows 54 columns, reduced to 14 rows 17 columns
Cbc0012I Integer solution of -56.51395 found by DiveCoefficient after 130 iterations and 0 nodes (0.16 seconds)
Cbc0031I 22 added rows had average density of 7.4090909
Cbc0013I At root node, 22 cuts changed objective from -127.37028 to -56.51395 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 341 row cuts average 3.5 elements, 18 column cuts (18 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 56 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0001I Search completed - best objective -56.51394999999999, took 130 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.17

