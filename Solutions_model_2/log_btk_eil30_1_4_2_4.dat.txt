Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 153 (-24) elements
Clp1000I sum of infeasibilities 5.32292e-05 - average 1.04371e-06, 3 fixed columns
Coin0506I Presolve 44 (-7) rows, 26 (-3) columns and 133 (-20) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Coin0511I After Postsolve, objective 64.233559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Coin0511I After Postsolve, objective 64.233559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.23355879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.04754
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.95256 iterations 25
Cbc0038I Solution found of 6.95256
Cbc0038I Relaxing continuous gives 6.95256
Cbc0038I Rounding solution of 3.43944 is better than previous of 6.95256

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 3.43944 to -20.3614 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.7487
Cbc0038I Pass   2: suminf.    0.96324 (5) obj. -24.7487 iterations 6
Cbc0038I Pass   3: suminf.    0.83430 (6) obj. -24.7487 iterations 3
Cbc0038I Pass   4: suminf.    1.67329 (5) obj. -24.7487 iterations 10
Cbc0038I Pass   5: suminf.    1.65489 (4) obj. -24.7487 iterations 1
Cbc0038I Pass   6: suminf.    1.40259 (5) obj. -24.7487 iterations 8
Cbc0038I Pass   7: suminf.    1.19431 (5) obj. -24.7487 iterations 2
Cbc0038I Pass   8: suminf.    1.19534 (6) obj. -24.7487 iterations 1
Cbc0038I Pass   9: suminf.    1.65070 (4) obj. -24.7487 iterations 9
Cbc0038I Pass  10: suminf.    1.52622 (4) obj. -24.7487 iterations 1
Cbc0038I Pass  11: suminf.    1.67772 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  12: suminf.    1.62079 (5) obj. -24.7487 iterations 2
Cbc0038I Pass  13: suminf.    1.75033 (8) obj. -24.7487 iterations 7
Cbc0038I Pass  14: suminf.    1.61968 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  15: suminf.    1.61968 (5) obj. -24.7487 iterations 0
Cbc0038I Pass  16: suminf.    2.15579 (8) obj. -24.7487 iterations 7
Cbc0038I Pass  17: suminf.    2.15579 (8) obj. -24.7487 iterations 0
Cbc0038I Pass  18: suminf.    1.19394 (7) obj. -24.7487 iterations 9
Cbc0038I Pass  19: suminf.    1.17889 (7) obj. -24.7487 iterations 3
Cbc0038I Pass  20: suminf.    1.64315 (6) obj. -24.7487 iterations 8
Cbc0038I Pass  21: suminf.    1.64315 (6) obj. -24.7487 iterations 0
Cbc0038I Pass  22: suminf.    2.25483 (6) obj. -24.7487 iterations 6
Cbc0038I Pass  23: suminf.    1.85877 (5) obj. -24.7487 iterations 1
Cbc0038I Pass  24: suminf.    2.06117 (7) obj. -24.7487 iterations 7
Cbc0038I Pass  25: suminf.    1.30515 (7) obj. -24.7487 iterations 5
Cbc0038I Pass  26: suminf.    1.30515 (7) obj. -24.7487 iterations 0
Cbc0038I Pass  27: suminf.    1.03508 (4) obj. -24.7487 iterations 6
Cbc0038I Pass  28: suminf.    1.03508 (4) obj. -24.7487 iterations 0
Cbc0038I Pass  29: suminf.    1.36948 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  30: suminf.    1.36948 (5) obj. -24.7487 iterations 0
Cbc0038I Pass  31: suminf.    1.75011 (6) obj. -24.7487 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20.3614 - took 0.08 seconds
Cbc0012I Integer solution of -20.36138 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 18 added rows had average density of 19.333333
Cbc0013I At root node, 18 cuts changed objective from -64.233559 to -33.114761 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2453 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1032 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 312 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -21.0266 found by rounding after 3278 iterations and 6 nodes (0.25 seconds)
Cbc0001I Search completed - best objective -21.0266, took 3311 iterations and 8 nodes (0.25 seconds)
Cbc0032I Strong branching done 114 times (1427 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 55 (-5) columns and 512 (-100) elements
Clp1000I sum of infeasibilities 3.53643e-08 - average 7.07287e-10, 44 fixed columns
Coin0506I Presolve 9 (-41) rows, 11 (-44) columns and 36 (-476) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 2.3587336 - largest nonzero change 1.4013397e-05 ( 0.00093267512%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 8.1148568
Clp0000I Optimal - objective value 8.1148568
Coin0511I After Postsolve, objective 8.1148568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3063784 - largest nonzero change 2.5646551e-05 ( 0.002215676%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 109.67205
Clp0000I Optimal - objective value 109.67205
Clp0000I Optimal - objective value 109.67205
Coin0511I After Postsolve, objective 109.67205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.6720457 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 55 columns (55 integer (55 of which binary)) and 530 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.797%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.58035
Cbc0038I Pass   1: suminf.    3.23442 (16) obj. -54.1626 iterations 5
Cbc0038I Pass   2: suminf.    3.23442 (16) obj. -54.1626 iterations 0
Cbc0038I Solution found of 11.4983
Cbc0038I Rounding solution of 2.46493 is better than previous of 11.4983

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 2.46493 to -7.96942 (0.01 seconds)
Cbc0038I Round again with cutoff of -14.3486
Cbc0038I Pass   3: suminf.    3.23442 (16) obj. -54.1626 iterations 0
Cbc0038I Pass   4: suminf.    3.23442 (16) obj. -54.1626 iterations 0
Cbc0038I Pass   5: suminf.    0.77005 (3) obj. -14.3486 iterations 21
Cbc0038I Pass   6: suminf.    0.35484 (1) obj. -28.9049 iterations 3
Cbc0038I Pass   7: suminf.    0.10812 (1) obj. -14.3486 iterations 1
Cbc0038I Pass   8: suminf.    1.67685 (7) obj. -14.3486 iterations 8
Cbc0038I Pass   9: suminf.    1.18768 (5) obj. -18.3072 iterations 2
Cbc0038I Pass  10: suminf.    0.50985 (2) obj. -14.3486 iterations 7
Cbc0038I Pass  11: suminf.    0.70924 (2) obj. -18.1549 iterations 2
Cbc0038I Pass  12: suminf.    0.98052 (5) obj. -14.3486 iterations 12
Cbc0038I Pass  13: suminf.    0.96937 (4) obj. -14.3486 iterations 3
Cbc0038I Pass  14: suminf.    0.38663 (2) obj. -16.0271 iterations 5
Cbc0038I Pass  15: suminf.    0.34212 (2) obj. -14.3486 iterations 1
Cbc0038I Pass  16: suminf.    0.48384 (2) obj. -14.3486 iterations 1
Cbc0038I Pass  17: suminf.    2.12714 (7) obj. -33.4962 iterations 14
Cbc0038I Pass  18: suminf.    1.86047 (6) obj. -27.0962 iterations 2
Cbc0038I Pass  19: suminf.    0.05105 (1) obj. -14.3486 iterations 7
Cbc0038I Pass  20: suminf.    0.12903 (1) obj. -18.9498 iterations 1
Cbc0038I Pass  21: suminf.    4.31888 (14) obj. -14.3486 iterations 16
Cbc0038I Pass  22: suminf.    2.53500 (11) obj. -14.3486 iterations 3
Cbc0038I Pass  23: suminf.    2.22561 (9) obj. -22.7895 iterations 2
Cbc0038I Pass  24: suminf.    0.68737 (3) obj. -14.3486 iterations 10
Cbc0038I Pass  25: suminf.    0.46594 (3) obj. -14.3486 iterations 1
Cbc0038I Pass  26: suminf.    0.39977 (3) obj. -14.3486 iterations 3
Cbc0038I Pass  27: suminf.    0.27949 (2) obj. -14.3486 iterations 1
Cbc0038I Pass  28: suminf.    0.32676 (2) obj. -14.3486 iterations 1
Cbc0038I Pass  29: suminf.    2.98920 (10) obj. -14.3486 iterations 18
Cbc0038I Pass  30: suminf.    2.36931 (8) obj. -14.3486 iterations 4
Cbc0038I Pass  31: suminf.    0.55094 (3) obj. -14.3486 iterations 11
Cbc0038I Pass  32: suminf.    0.20244 (1) obj. -14.3486 iterations 2
Cbc0038I Rounding solution of -19.4897 is better than previous of -7.96942

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -19.4897 to -23.0501 (0.03 seconds)
Cbc0038I Round again with cutoff of -32.7922
Cbc0038I Pass  32: suminf.    3.23442 (16) obj. -54.1626 iterations 0
Cbc0038I Pass  33: suminf.    3.23442 (16) obj. -54.1626 iterations 0
Cbc0038I Pass  34: suminf.    0.72891 (4) obj. -32.7922 iterations 22
Cbc0038I Pass  35: suminf.    0.72891 (4) obj. -32.7922 iterations 0
Cbc0038I Pass  36: suminf.    0.82930 (3) obj. -36.3581 iterations 2
Cbc0038I Pass  37: suminf.    0.69376 (2) obj. -32.7922 iterations 2
Cbc0038I Pass  38: suminf.    0.67489 (3) obj. -32.7922 iterations 3
Cbc0038I Pass  39: suminf.    0.67489 (3) obj. -32.7922 iterations 0
Cbc0038I Pass  40: suminf.    1.06730 (4) obj. -32.7922 iterations 6
Cbc0038I Pass  41: suminf.    1.06730 (4) obj. -32.7922 iterations 2
Cbc0038I Pass  42: suminf.    0.90911 (4) obj. -32.7922 iterations 2
Cbc0038I Pass  43: suminf.    0.90911 (4) obj. -32.7922 iterations 0
Cbc0038I Pass  44: suminf.    0.67725 (4) obj. -32.7922 iterations 1
Cbc0038I Pass  45: suminf.    0.67725 (4) obj. -32.7922 iterations 0
Cbc0038I Pass  46: suminf.    2.88211 (10) obj. -32.7922 iterations 12
Cbc0038I Pass  47: suminf.    2.88211 (10) obj. -32.7922 iterations 0
Cbc0038I Pass  48: suminf.    1.77025 (6) obj. -32.7922 iterations 7
Cbc0038I Pass  49: suminf.    1.77025 (6) obj. -32.7922 iterations 0
Cbc0038I Pass  50: suminf.    1.83708 (6) obj. -32.7922 iterations 2
Cbc0038I Pass  51: suminf.    1.83708 (6) obj. -32.7922 iterations 0
Cbc0038I Pass  52: suminf.    1.77025 (6) obj. -32.7922 iterations 2
Cbc0038I Pass  53: suminf.    2.30182 (8) obj. -32.7922 iterations 9
Cbc0038I Pass  54: suminf.    1.58866 (7) obj. -32.7922 iterations 3
Cbc0038I Pass  55: suminf.    1.30103 (6) obj. -32.7922 iterations 1
Cbc0038I Pass  56: suminf.    1.33001 (4) obj. -32.7922 iterations 8
Cbc0038I Pass  57: suminf.    1.33001 (4) obj. -32.7922 iterations 0
Cbc0038I Pass  58: suminf.    1.32957 (4) obj. -32.7922 iterations 1
Cbc0038I Pass  59: suminf.    1.32957 (4) obj. -32.7922 iterations 0
Cbc0038I Pass  60: suminf.    1.33001 (4) obj. -32.7922 iterations 1
Cbc0038I Pass  61: suminf.    2.23653 (7) obj. -32.7922 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 12 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.0501 - took 0.02 seconds
Cbc0012I Integer solution of -23.05011 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 50 rows 55 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -24.87465 found by DiveCoefficient after 1332 iterations and 0 nodes (1.42 seconds)
Cbc0031I 10 added rows had average density of 12.4
Cbc0013I At root node, 10 cuts changed objective from -71.75998 to -25.003276 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 278 row cuts average 4.0 elements, 20 column cuts (20 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 492 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 79 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.732 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.87465 best solution, best possible -25.00097 (1.43 seconds)
Cbc0001I Search completed - best objective -24.87465, took 1351 iterations and 2 nodes (1.43 seconds)
Cbc0032I Strong branching done 12 times (81 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 153 (-24) elements
Clp1000I sum of infeasibilities 5.32292e-05 - average 1.04371e-06, 3 fixed columns
Coin0506I Presolve 44 (-7) rows, 26 (-3) columns and 133 (-20) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Coin0511I After Postsolve, objective 64.233559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Coin0511I After Postsolve, objective 64.233559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.23355879 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.04754
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.95256 iterations 25
Cbc0038I Solution found of 6.95256
Cbc0038I Relaxing continuous gives 6.95256
Cbc0038I Rounding solution of 3.43944 is better than previous of 6.95256

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 3.43944 to -20.3614 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.7487
Cbc0038I Pass   2: suminf.    0.96324 (5) obj. -24.7487 iterations 6
Cbc0038I Pass   3: suminf.    0.83430 (6) obj. -24.7487 iterations 3
Cbc0038I Pass   4: suminf.    1.67329 (5) obj. -24.7487 iterations 10
Cbc0038I Pass   5: suminf.    1.65489 (4) obj. -24.7487 iterations 1
Cbc0038I Pass   6: suminf.    1.40259 (5) obj. -24.7487 iterations 8
Cbc0038I Pass   7: suminf.    1.19431 (5) obj. -24.7487 iterations 2
Cbc0038I Pass   8: suminf.    1.19534 (6) obj. -24.7487 iterations 1
Cbc0038I Pass   9: suminf.    1.65070 (4) obj. -24.7487 iterations 9
Cbc0038I Pass  10: suminf.    1.52622 (4) obj. -24.7487 iterations 1
Cbc0038I Pass  11: suminf.    1.67772 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  12: suminf.    1.62079 (5) obj. -24.7487 iterations 2
Cbc0038I Pass  13: suminf.    1.75033 (8) obj. -24.7487 iterations 7
Cbc0038I Pass  14: suminf.    1.61968 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  15: suminf.    1.61968 (5) obj. -24.7487 iterations 0
Cbc0038I Pass  16: suminf.    2.15579 (8) obj. -24.7487 iterations 7
Cbc0038I Pass  17: suminf.    2.15579 (8) obj. -24.7487 iterations 0
Cbc0038I Pass  18: suminf.    1.19394 (7) obj. -24.7487 iterations 9
Cbc0038I Pass  19: suminf.    1.17889 (7) obj. -24.7487 iterations 3
Cbc0038I Pass  20: suminf.    1.64315 (6) obj. -24.7487 iterations 8
Cbc0038I Pass  21: suminf.    1.64315 (6) obj. -24.7487 iterations 0
Cbc0038I Pass  22: suminf.    2.25483 (6) obj. -24.7487 iterations 6
Cbc0038I Pass  23: suminf.    1.85877 (5) obj. -24.7487 iterations 1
Cbc0038I Pass  24: suminf.    2.06117 (7) obj. -24.7487 iterations 7
Cbc0038I Pass  25: suminf.    1.30515 (7) obj. -24.7487 iterations 5
Cbc0038I Pass  26: suminf.    1.30515 (7) obj. -24.7487 iterations 0
Cbc0038I Pass  27: suminf.    1.03508 (4) obj. -24.7487 iterations 6
Cbc0038I Pass  28: suminf.    1.03508 (4) obj. -24.7487 iterations 0
Cbc0038I Pass  29: suminf.    1.36948 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  30: suminf.    1.36948 (5) obj. -24.7487 iterations 0
Cbc0038I Pass  31: suminf.    1.75011 (6) obj. -24.7487 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20.3614 - took 0.04 seconds
Cbc0012I Integer solution of -20.36138 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 18 added rows had average density of 19.333333
Cbc0013I At root node, 18 cuts changed objective from -64.233559 to -33.114761 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2453 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1032 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 312 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -21.0266 found by rounding after 3278 iterations and 6 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -21.0266, took 3311 iterations and 8 nodes (0.29 seconds)
Cbc0032I Strong branching done 114 times (1427 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 54 (-7) columns and 497 (-116) elements
Clp1000I sum of infeasibilities 0.00023133 - average 4.72102e-06, 13 fixed columns
Coin0506I Presolve 30 (-19) rows, 34 (-20) columns and 236 (-261) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 4.3507561 - largest nonzero change 2.9000886e-05 ( 0.0019063215%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 83.517932
Clp0000I Optimal - objective value 83.517932
Coin0511I After Postsolve, objective 83.517932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2760012 - largest nonzero change 1.9928362e-05 ( 0.001742231%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 85.447129
Clp0000I Optimal - objective value 85.447129
Clp0000I Optimal - objective value 85.447129
Coin0511I After Postsolve, objective 85.447129, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.44712884 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 54 columns (54 integer (54 of which binary)) and 500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.679%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.12672
Cbc0038I Pass   1: suminf.    3.82930 (16) obj. -38.2347 iterations 6
Cbc0038I Pass   2: suminf.    3.82930 (16) obj. -38.2347 iterations 0
Cbc0038I Solution found of 14.2883
Cbc0038I Rounding solution of 11.6783 is better than previous of 14.2883

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 11.6783 to -14.9668 (0.02 seconds)
Cbc0038I Round again with cutoff of -20.1166
Cbc0038I Pass   3: suminf.    3.82930 (16) obj. -38.2347 iterations 0
Cbc0038I Pass   4: suminf.    3.82930 (16) obj. -38.2347 iterations 0
Cbc0038I Pass   5: suminf.    1.06139 (5) obj. -20.1166 iterations 22
Cbc0038I Pass   6: suminf.    0.64583 (3) obj. -25.1469 iterations 2
Cbc0038I Pass   7: suminf.    0.45231 (2) obj. -20.1166 iterations 5
Cbc0038I Pass   8: suminf.    0.41202 (2) obj. -22.441 iterations 1
Cbc0038I Pass   9: suminf.    0.36364 (1) obj. -21.3304 iterations 1
Cbc0038I Pass  10: suminf.    1.67709 (8) obj. -20.1166 iterations 11
Cbc0038I Pass  11: suminf.    1.43005 (6) obj. -20.1166 iterations 3
Cbc0038I Pass  12: suminf.    0.84587 (3) obj. -20.1166 iterations 7
Cbc0038I Pass  13: suminf.    0.68364 (2) obj. -20.2279 iterations 2
Cbc0038I Pass  14: suminf.    0.90736 (3) obj. -20.1166 iterations 4
Cbc0038I Pass  15: suminf.    1.63110 (7) obj. -20.1166 iterations 11
Cbc0038I Pass  16: suminf.    1.41435 (6) obj. -20.1166 iterations 2
Cbc0038I Pass  17: suminf.    0.51774 (3) obj. -20.1166 iterations 5
Cbc0038I Pass  18: suminf.    0.36364 (1) obj. -20.4335 iterations 2
Cbc0038I Pass  19: suminf.    0.54200 (2) obj. -20.1166 iterations 3
Cbc0038I Pass  20: suminf.    0.41202 (2) obj. -21.5441 iterations 1
Cbc0038I Pass  21: suminf.    2.41057 (10) obj. -20.1166 iterations 15
Cbc0038I Pass  22: suminf.    2.16544 (10) obj. -20.1166 iterations 1
Cbc0038I Pass  23: suminf.    1.27667 (4) obj. -20.1166 iterations 12
Cbc0038I Pass  24: suminf.    1.27667 (4) obj. -20.1166 iterations 0
Cbc0038I Pass  25: suminf.    0.83368 (3) obj. -20.1166 iterations 4
Cbc0038I Pass  26: suminf.    0.83368 (3) obj. -20.1166 iterations 0
Cbc0038I Pass  27: suminf.    0.76268 (3) obj. -20.1166 iterations 2
Cbc0038I Pass  28: suminf.    0.76268 (3) obj. -20.1166 iterations 0
Cbc0038I Pass  29: suminf.    0.84702 (3) obj. -20.1166 iterations 1
Cbc0038I Pass  30: suminf.    0.84702 (3) obj. -20.1166 iterations 0
Cbc0038I Pass  31: suminf.    2.18785 (9) obj. -20.1166 iterations 18
Cbc0038I Pass  32: suminf.    2.18785 (9) obj. -20.1166 iterations 1
Cbc0038I Rounding solution of -20.1344 is better than previous of -14.9668

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -29.4004
Cbc0038I Pass  32: suminf.    3.82930 (16) obj. -38.2347 iterations 0
Cbc0038I Pass  33: suminf.    3.82930 (16) obj. -38.2347 iterations 0
Cbc0038I Pass  34: suminf.    1.06600 (5) obj. -29.4004 iterations 22
Cbc0038I Pass  35: suminf.    1.06600 (5) obj. -29.4004 iterations 0
Cbc0038I Pass  36: suminf.    0.83826 (4) obj. -29.4004 iterations 7
Cbc0038I Pass  37: suminf.    0.83826 (4) obj. -29.4004 iterations 0
Cbc0038I Pass  38: suminf.    0.89310 (4) obj. -29.4004 iterations 2
Cbc0038I Pass  39: suminf.    0.89310 (4) obj. -29.4004 iterations 0
Cbc0038I Pass  40: suminf.    0.83826 (4) obj. -29.4004 iterations 2
Cbc0038I Pass  41: suminf.    3.04781 (12) obj. -29.4004 iterations 15
Cbc0038I Pass  42: suminf.    2.66987 (10) obj. -29.4004 iterations 1
Cbc0038I Pass  43: suminf.    2.38424 (9) obj. -29.4004 iterations 1
Cbc0038I Pass  44: suminf.    1.95338 (7) obj. -29.4004 iterations 7
Cbc0038I Pass  45: suminf.    1.65104 (7) obj. -29.4004 iterations 2
Cbc0038I Pass  46: suminf.    1.64897 (7) obj. -29.4004 iterations 1
Cbc0038I Pass  47: suminf.    1.57347 (7) obj. -29.4004 iterations 2
Cbc0038I Pass  48: suminf.    1.57347 (7) obj. -29.4004 iterations 0
Cbc0038I Pass  49: suminf.    1.66101 (7) obj. -29.4004 iterations 2
Cbc0038I Pass  50: suminf.    1.88575 (8) obj. -29.4004 iterations 8
Cbc0038I Pass  51: suminf.    1.84618 (7) obj. -29.4004 iterations 4
Cbc0038I Pass  52: suminf.    1.04253 (4) obj. -29.4004 iterations 11
Cbc0038I Pass  53: suminf.    1.04253 (4) obj. -29.4004 iterations 0
Cbc0038I Pass  54: suminf.    1.05497 (4) obj. -29.4004 iterations 2
Cbc0038I Pass  55: suminf.    1.05497 (4) obj. -29.4004 iterations 0
Cbc0038I Pass  56: suminf.    0.93098 (4) obj. -29.4004 iterations 2
Cbc0038I Pass  57: suminf.    0.93098 (4) obj. -29.4004 iterations 0
Cbc0038I Pass  58: suminf.    2.25914 (8) obj. -29.4004 iterations 12
Cbc0038I Pass  59: suminf.    2.25914 (8) obj. -29.4004 iterations 1
Cbc0038I Pass  60: suminf.    1.88749 (7) obj. -29.4004 iterations 5
Cbc0038I Pass  61: suminf.    1.87851 (7) obj. -29.4004 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 11 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -20.1344 to -21.0266 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.5196
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.12178 (19) obj. -40.5196 iterations 1
Cbc0038I Pass  62: suminf.    4.01508 (17) obj. -40.5196 iterations 1
Cbc0038I Pass  63: suminf.    2.26309 (8) obj. -40.5196 iterations 18
Cbc0038I Pass  64: suminf.    2.15670 (8) obj. -40.5196 iterations 1
Cbc0038I Pass  65: suminf.    2.31628 (7) obj. -40.5196 iterations 5
Cbc0038I Pass  66: suminf.    2.30573 (7) obj. -40.5196 iterations 1
Cbc0038I Pass  67: suminf.    1.53855 (6) obj. -40.5196 iterations 2
Cbc0038I Pass  68: suminf.    1.53855 (6) obj. -40.5196 iterations 0
Cbc0038I Pass  69: suminf.    1.83183 (6) obj. -40.5196 iterations 1
Cbc0038I Pass  70: suminf.    1.79580 (6) obj. -40.5196 iterations 1
Cbc0038I Pass  71: suminf.    1.69788 (6) obj. -40.5196 iterations 2
Cbc0038I Pass  72: suminf.    1.69788 (6) obj. -40.5196 iterations 0
Cbc0038I Pass  73: suminf.    3.68564 (13) obj. -40.5196 iterations 14
Cbc0038I Pass  74: suminf.    2.66921 (11) obj. -40.5196 iterations 5
Cbc0038I Pass  75: suminf.    1.91165 (6) obj. -40.5196 iterations 17
Cbc0038I Pass  76: suminf.    1.91165 (6) obj. -40.5196 iterations 0
Cbc0038I Pass  77: suminf.    1.83799 (6) obj. -40.5196 iterations 1
Cbc0038I Pass  78: suminf.    1.76072 (6) obj. -40.5196 iterations 2
Cbc0038I Pass  79: suminf.    1.49895 (6) obj. -40.5196 iterations 2
Cbc0038I Pass  80: suminf.    1.49895 (6) obj. -40.5196 iterations 0
Cbc0038I Pass  81: suminf.    1.80652 (6) obj. -40.5196 iterations 2
Cbc0038I Pass  82: suminf.    3.41230 (12) obj. -40.5196 iterations 9
Cbc0038I Pass  83: suminf.    3.02262 (9) obj. -40.5196 iterations 1
Cbc0038I Pass  84: suminf.    2.74270 (8) obj. -40.5196 iterations 1
Cbc0038I Pass  85: suminf.    2.49410 (8) obj. -42.0111 iterations 1
Cbc0038I Pass  86: suminf.    2.38444 (7) obj. -40.5196 iterations 5
Cbc0038I Pass  87: suminf.    2.09938 (7) obj. -40.5196 iterations 2
Cbc0038I Pass  88: suminf.    2.51238 (8) obj. -40.5196 iterations 2
Cbc0038I Pass  89: suminf.    2.32814 (7) obj. -40.5196 iterations 1
Cbc0038I Pass  90: suminf.    2.29644 (7) obj. -40.5196 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -21.0266 - took 0.04 seconds
Cbc0012I Integer solution of -21.0266 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 54 columns, reduced to 2 rows 5 columns
Cbc0031I 16 added rows had average density of 7.125
Cbc0013I At root node, 16 cuts changed objective from -66.464189 to -21.926411 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 179 row cuts average 2.4 elements, 21 column cuts (21 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0001I Search completed - best objective -21.0266, took 152 iterations and 2 nodes (0.22 seconds)
Cbc0032I Strong branching done 18 times (81 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.25

