Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 22 (-25) rows, 15 (-9) columns and 68 (-61) elements
Clp1000I sum of infeasibilities 3.85526e-05 - average 1.75239e-06, 2 fixed columns
Coin0506I Presolve 15 (-7) rows, 11 (-4) columns and 46 (-22) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Coin0511I After Postsolve, objective 161.24967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Coin0511I After Postsolve, objective 161.24967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.2496691 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 21 rows, 15 columns (14 integer (14 of which binary)) and 67 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.807832
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -135.357 iterations 7
Cbc0038I Solution found of -135.357
Cbc0038I Relaxing continuous gives -135.357
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -137.701
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04906 (1) obj. -137.701 iterations 1
Cbc0038I Pass   3: suminf.    0.32320 (1) obj. -137.701 iterations 3
Cbc0038I Pass   4: suminf.    0.55242 (2) obj. -137.701 iterations 1
Cbc0038I Pass   5: suminf.    0.32320 (1) obj. -137.701 iterations 1
Cbc0038I Pass   6: suminf.    0.33257 (2) obj. -137.701 iterations 2
Cbc0038I Pass   7: suminf.    0.51794 (2) obj. -137.701 iterations 2
Cbc0038I Pass   8: suminf.    0.51794 (2) obj. -137.701 iterations 0
Cbc0038I Pass   9: suminf.    0.33257 (2) obj. -137.701 iterations 2
Cbc0038I Pass  10: suminf.    0.33257 (2) obj. -137.701 iterations 0
Cbc0038I Pass  11: suminf.    0.06962 (1) obj. -137.701 iterations 6
Cbc0038I Solution found of -140.928
Cbc0038I Relaxing continuous gives -140.928
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -144.502
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.19138 (1) obj. -144.502 iterations 0
Cbc0038I Pass  13: suminf.    0.54522 (3) obj. -144.502 iterations 5
Cbc0038I Pass  14: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  15: suminf.    1.05604 (4) obj. -144.502 iterations 1
Cbc0038I Pass  16: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  17: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  18: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  19: suminf.    0.68421 (2) obj. -144.502 iterations 3
Cbc0038I Pass  20: suminf.    0.54522 (3) obj. -144.502 iterations 3
Cbc0038I Pass  21: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  22: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  23: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  24: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  25: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  26: suminf.    0.54522 (3) obj. -144.502 iterations 3
Cbc0038I Pass  27: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  28: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  29: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  30: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  31: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  32: suminf.    0.58203 (3) obj. -144.502 iterations 1
Cbc0038I Pass  33: suminf.    1.24708 (4) obj. -144.502 iterations 4
Cbc0038I Pass  34: suminf.    0.19138 (1) obj. -144.502 iterations 3
Cbc0038I Pass  35: suminf.    0.54522 (3) obj. -144.502 iterations 5
Cbc0038I Pass  36: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  37: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  38: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  39: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  40: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  41: suminf.    0.19138 (1) obj. -144.502 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -140.928 - took 0.01 seconds
Cbc0012I Integer solution of -140.92847 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 8 columns
Cbc0031I 5 added rows had average density of 7.2
Cbc0013I At root node, 14 cuts changed objective from -158.79789 to -140.92847 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -140.92847, took 23 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-14) rows, 38 (-6) columns and 270 (-90) elements
Clp1000I sum of infeasibilities 4.19834e-10 - average 1.31198e-11, 7 fixed columns
Coin0506I Presolve 25 (-7) rows, 30 (-8) columns and 175 (-95) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 217.98834
Clp0000I Optimal - objective value 217.98834
Coin0511I After Postsolve, objective 217.98834, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9672459 - largest nonzero change 2.9460063e-05 ( 0.00096990836%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 231.60789
Clp0000I Optimal - objective value 231.60789
Clp0000I Optimal - objective value 231.60789
Coin0511I After Postsolve, objective 231.60789, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 231.6078945 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 38 columns (38 integer (38 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.339%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.69416
Cbc0038I Pass   1: suminf.    0.46869 (4) obj. -9.77863 iterations 12
Cbc0038I Pass   2: suminf.    0.46869 (4) obj. -9.77863 iterations 0
Cbc0038I Solution found of 3.7143
Cbc0038I Rounding solution of -77.5714 is better than previous of 3.7143

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 38 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -77.5714 to -144.286 (0.01 seconds)
Cbc0038I Round again with cutoff of -150.606
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.22210 (10) obj. -150.606 iterations 1
Cbc0038I Pass   4: suminf.    0.93059 (2) obj. -150.606 iterations 13
Cbc0038I Pass   5: suminf.    0.92030 (3) obj. -150.606 iterations 2
Cbc0038I Pass   6: suminf.    0.92030 (3) obj. -150.606 iterations 0
Cbc0038I Pass   7: suminf.    0.07241 (1) obj. -150.606 iterations 3
Cbc0038I Pass   8: suminf.    0.24000 (1) obj. -165.234 iterations 1
Cbc0038I Pass   9: suminf.    1.98908 (6) obj. -161.652 iterations 7
Cbc0038I Pass  10: suminf.    1.98908 (6) obj. -161.652 iterations 1
Cbc0038I Pass  11: suminf.    0.93059 (2) obj. -150.606 iterations 6
Cbc0038I Pass  12: suminf.    0.92030 (3) obj. -150.606 iterations 2
Cbc0038I Pass  13: suminf.    0.92030 (3) obj. -150.606 iterations 0
Cbc0038I Pass  14: suminf.    0.07241 (1) obj. -150.606 iterations 3
Cbc0038I Pass  15: suminf.    0.24000 (1) obj. -165.234 iterations 1
Cbc0038I Pass  16: suminf.    2.01726 (6) obj. -150.606 iterations 9
Cbc0038I Pass  17: suminf.    1.90438 (7) obj. -150.606 iterations 2
Cbc0038I Pass  18: suminf.    0.93059 (2) obj. -150.606 iterations 6
Cbc0038I Pass  19: suminf.    0.92030 (3) obj. -150.606 iterations 2
Cbc0038I Pass  20: suminf.    0.92030 (3) obj. -150.606 iterations 0
Cbc0038I Pass  21: suminf.    0.07241 (1) obj. -150.606 iterations 4
Cbc0038I Pass  22: suminf.    0.24000 (1) obj. -165.234 iterations 1
Cbc0038I Pass  23: suminf.    1.38037 (5) obj. -150.606 iterations 6
Cbc0038I Pass  24: suminf.    0.62500 (2) obj. -158.708 iterations 3
Cbc0038I Pass  25: suminf.    0.59535 (2) obj. -150.606 iterations 2
Cbc0038I Pass  26: suminf.    0.16667 (1) obj. -158.167 iterations 4
Cbc0038I Pass  27: suminf.    2.00439 (9) obj. -150.606 iterations 8
Cbc0038I Pass  28: suminf.    1.86670 (5) obj. -150.606 iterations 5
Cbc0038I Pass  29: suminf.    0.16667 (1) obj. -158.167 iterations 6
Cbc0038I Pass  30: suminf.    1.60894 (5) obj. -150.606 iterations 9
Cbc0038I Pass  31: suminf.    1.23323 (4) obj. -150.606 iterations 3
Cbc0038I Pass  32: suminf.    0.96736 (4) obj. -150.606 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 38 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -144.286 - took 0.02 seconds
Cbc0012I Integer solution of -144.2857 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 10 added rows had average density of 11.2
Cbc0013I At root node, 10 cuts changed objective from -207.48702 to -154.20961 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 635 row cuts average 2.6 elements, 14 column cuts (14 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 214 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.748 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -144.2857 best solution, best possible -154.20961 (1.39 seconds)
Cbc0001I Search completed - best objective -144.2857, took 938 iterations and 6 nodes (1.53 seconds)
Cbc0032I Strong branching done 76 times (478 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.53

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 22 (-25) rows, 15 (-9) columns and 68 (-61) elements
Clp1000I sum of infeasibilities 3.85526e-05 - average 1.75239e-06, 2 fixed columns
Coin0506I Presolve 15 (-7) rows, 11 (-4) columns and 46 (-22) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Coin0511I After Postsolve, objective 161.24967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Coin0511I After Postsolve, objective 161.24967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.2496691 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 21 rows, 15 columns (14 integer (14 of which binary)) and 67 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.807832
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -135.357 iterations 7
Cbc0038I Solution found of -135.357
Cbc0038I Relaxing continuous gives -135.357
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -137.701
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04906 (1) obj. -137.701 iterations 1
Cbc0038I Pass   3: suminf.    0.32320 (1) obj. -137.701 iterations 3
Cbc0038I Pass   4: suminf.    0.55242 (2) obj. -137.701 iterations 1
Cbc0038I Pass   5: suminf.    0.32320 (1) obj. -137.701 iterations 1
Cbc0038I Pass   6: suminf.    0.33257 (2) obj. -137.701 iterations 2
Cbc0038I Pass   7: suminf.    0.51794 (2) obj. -137.701 iterations 2
Cbc0038I Pass   8: suminf.    0.51794 (2) obj. -137.701 iterations 0
Cbc0038I Pass   9: suminf.    0.33257 (2) obj. -137.701 iterations 2
Cbc0038I Pass  10: suminf.    0.33257 (2) obj. -137.701 iterations 0
Cbc0038I Pass  11: suminf.    0.06962 (1) obj. -137.701 iterations 6
Cbc0038I Solution found of -140.928
Cbc0038I Relaxing continuous gives -140.928
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -144.502
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.19138 (1) obj. -144.502 iterations 0
Cbc0038I Pass  13: suminf.    0.54522 (3) obj. -144.502 iterations 5
Cbc0038I Pass  14: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  15: suminf.    1.05604 (4) obj. -144.502 iterations 1
Cbc0038I Pass  16: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  17: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  18: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  19: suminf.    0.68421 (2) obj. -144.502 iterations 3
Cbc0038I Pass  20: suminf.    0.54522 (3) obj. -144.502 iterations 3
Cbc0038I Pass  21: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  22: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  23: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  24: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  25: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  26: suminf.    0.54522 (3) obj. -144.502 iterations 3
Cbc0038I Pass  27: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  28: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  29: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  30: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  31: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  32: suminf.    0.58203 (3) obj. -144.502 iterations 1
Cbc0038I Pass  33: suminf.    1.24708 (4) obj. -144.502 iterations 4
Cbc0038I Pass  34: suminf.    0.19138 (1) obj. -144.502 iterations 3
Cbc0038I Pass  35: suminf.    0.54522 (3) obj. -144.502 iterations 5
Cbc0038I Pass  36: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  37: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  38: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  39: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  40: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  41: suminf.    0.19138 (1) obj. -144.502 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -140.928 - took 0.02 seconds
Cbc0012I Integer solution of -140.92847 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 8 columns
Cbc0031I 5 added rows had average density of 7.2
Cbc0013I At root node, 14 cuts changed objective from -158.79789 to -140.92847 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0001I Search completed - best objective -140.92847, took 23 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 27 (-20) rows, 33 (-12) columns and 198 (-163) elements
Clp1000I sum of infeasibilities 2.93134e-09 - average 1.08568e-10, 7 fixed columns
Coin0506I Presolve 19 (-8) rows, 23 (-10) columns and 108 (-90) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 201.66603
Clp0000I Optimal - objective value 201.66603
Coin0511I After Postsolve, objective 201.66603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 201.66603
Clp0000I Optimal - objective value 201.66603
Clp0000I Optimal - objective value 201.66603
Coin0511I After Postsolve, objective 201.66603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 201.6660292 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 33 columns (33 integer (33 of which binary)) and 201 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.548%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.22182
Cbc0038I Pass   1: suminf.    0.82626 (8) obj. -35.8155 iterations 8
Cbc0038I Pass   2: suminf.    0.82626 (8) obj. -35.8155 iterations 0
Cbc0038I Solution found of -6.28567
Cbc0038I Rounding solution of -42.5714 is better than previous of -6.28567

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 33 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -42.5714 to -125.143 (0.01 seconds)
Cbc0038I Round again with cutoff of -130.628
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.98807 (13) obj. -130.628 iterations 1
Cbc0038I Pass   4: suminf.    2.63504 (12) obj. -130.628 iterations 1
Cbc0038I Pass   5: suminf.    0.68395 (3) obj. -130.628 iterations 18
Cbc0038I Pass   6: suminf.    0.15118 (1) obj. -130.628 iterations 2
Cbc0038I Pass   7: suminf.    0.36656 (2) obj. -130.628 iterations 1
Cbc0038I Pass   8: suminf.    0.15118 (1) obj. -130.628 iterations 1
Cbc0038I Pass   9: suminf.    2.08195 (6) obj. -130.628 iterations 7
Cbc0038I Pass  10: suminf.    1.91991 (5) obj. -130.628 iterations 1
Cbc0038I Pass  11: suminf.    0.48598 (2) obj. -130.628 iterations 5
Cbc0038I Pass  12: suminf.    0.42677 (1) obj. -130.628 iterations 1
Cbc0038I Pass  13: suminf.    1.41905 (5) obj. -132.04 iterations 7
Cbc0038I Pass  14: suminf.    1.22559 (4) obj. -130.628 iterations 2
Cbc0038I Pass  15: suminf.    2.38688 (8) obj. -130.628 iterations 9
Cbc0038I Pass  16: suminf.    2.29989 (7) obj. -130.628 iterations 2
Cbc0038I Pass  17: suminf.    0.90881 (2) obj. -130.628 iterations 8
Cbc0038I Pass  18: suminf.    0.87141 (4) obj. -130.628 iterations 1
Cbc0038I Pass  19: suminf.    0.67896 (4) obj. -130.628 iterations 2
Cbc0038I Pass  20: suminf.    0.61439 (3) obj. -130.628 iterations 1
Cbc0038I Pass  21: suminf.    1.13024 (3) obj. -130.628 iterations 2
Cbc0038I Pass  22: suminf.    1.13024 (3) obj. -130.628 iterations 0
Cbc0038I Pass  23: suminf.    0.45061 (3) obj. -130.628 iterations 2
Cbc0038I Pass  24: suminf.    1.02022 (3) obj. -137.839 iterations 3
Cbc0038I Pass  25: suminf.    1.02022 (3) obj. -137.839 iterations 0
Cbc0038I Pass  26: suminf.    0.45061 (3) obj. -130.628 iterations 3
Cbc0038I Pass  27: suminf.    2.08333 (6) obj. -131.22 iterations 6
Cbc0038I Pass  28: suminf.    1.27691 (4) obj. -130.628 iterations 4
Cbc0038I Pass  29: suminf.    0.37711 (2) obj. -130.628 iterations 5
Cbc0038I Pass  30: suminf.    0.17874 (1) obj. -130.628 iterations 1
Cbc0038I Pass  31: suminf.    0.17874 (1) obj. -130.628 iterations 0
Cbc0038I Pass  32: suminf.    1.53494 (6) obj. -130.628 iterations 8
Cbc0038I Rounding solution of -140.928 is better than previous of -125.143

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 33 columns, reduced to 11 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -148.742
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.59722 (13) obj. -148.742 iterations 0
Cbc0038I Pass  33: suminf.    0.70277 (3) obj. -148.742 iterations 17
Cbc0038I Pass  34: suminf.    0.70277 (3) obj. -148.742 iterations 0
Cbc0038I Pass  35: suminf.    1.71022 (4) obj. -148.742 iterations 2
Cbc0038I Pass  36: suminf.    0.70277 (3) obj. -148.742 iterations 1
Cbc0038I Pass  37: suminf.    2.41734 (8) obj. -148.742 iterations 8
Cbc0038I Pass  38: suminf.    2.13979 (8) obj. -148.742 iterations 1
Cbc0038I Pass  39: suminf.    1.35693 (4) obj. -148.742 iterations 9
Cbc0038I Pass  40: suminf.    0.70277 (3) obj. -148.742 iterations 2
Cbc0038I Pass  41: suminf.    1.71022 (4) obj. -148.742 iterations 2
Cbc0038I Pass  42: suminf.    0.70277 (3) obj. -148.742 iterations 1
Cbc0038I Pass  43: suminf.    2.68807 (9) obj. -148.742 iterations 10
Cbc0038I Pass  44: suminf.    2.40563 (10) obj. -148.742 iterations 1
Cbc0038I Pass  45: suminf.    2.40563 (10) obj. -148.742 iterations 0
Cbc0038I Pass  46: suminf.    1.39641 (5) obj. -148.742 iterations 8
Cbc0038I Pass  47: suminf.    1.39641 (5) obj. -148.742 iterations 0
Cbc0038I Pass  48: suminf.    2.66966 (6) obj. -148.742 iterations 2
Cbc0038I Pass  49: suminf.    1.01314 (4) obj. -148.742 iterations 2
Cbc0038I Pass  50: suminf.    1.01314 (4) obj. -148.742 iterations 0
Cbc0038I Pass  51: suminf.    1.22973 (4) obj. -148.742 iterations 3
Cbc0038I Pass  52: suminf.    0.81425 (3) obj. -148.742 iterations 2
Cbc0038I Pass  53: suminf.    1.47506 (6) obj. -148.742 iterations 4
Cbc0038I Pass  54: suminf.    1.47506 (6) obj. -148.742 iterations 0
Cbc0038I Pass  55: suminf.    0.83569 (3) obj. -148.742 iterations 6
Cbc0038I Pass  56: suminf.    1.92762 (5) obj. -148.742 iterations 3
Cbc0038I Pass  57: suminf.    1.92762 (5) obj. -148.742 iterations 0
Cbc0038I Pass  58: suminf.    1.26993 (5) obj. -148.742 iterations 2
Cbc0038I Pass  59: suminf.    1.26993 (5) obj. -148.742 iterations 1
Cbc0038I Pass  60: suminf.    1.22973 (4) obj. -148.742 iterations 3
Cbc0038I Pass  61: suminf.    0.81425 (3) obj. -148.742 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 33 columns, reduced to 5 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -140.928 - took 0.01 seconds
Cbc0012I Integer solution of -140.92847 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -155.76169 to -129.33509 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -140.92847, took 11 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

