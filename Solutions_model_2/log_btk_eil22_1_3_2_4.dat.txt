Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 22 (-2) columns and 100 (-29) elements
Clp1000I sum of infeasibilities 2.59906e-05 - average 8.12207e-07, 2 fixed columns
Coin0506I Presolve 29 (-3) rows, 20 (-2) columns and 91 (-9) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 72.282361
Clp0000I Optimal - objective value 72.282361
Coin0511I After Postsolve, objective 72.282361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.282361
Clp0000I Optimal - objective value 72.282361
Clp0000I Optimal - objective value 72.282361
Coin0511I After Postsolve, objective 72.282361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.28236096 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 22 columns (21 integer (21 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.80948
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.9255 iterations 13
Cbc0038I Solution found of -13.9255
Cbc0038I Relaxing continuous gives -13.9255
Cbc0038I Rounding solution of -29.9255 is better than previous of -13.9255

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 22 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -29.9255 to -30.9401 (0.01 seconds)
Cbc0038I Round again with cutoff of -34.9688
Cbc0038I Pass   2: suminf.    0.56247 (2) obj. -34.9688 iterations 2
Cbc0038I Pass   3: suminf.    0.56247 (2) obj. -34.9688 iterations 0
Cbc0038I Pass   4: suminf.    0.45048 (2) obj. -34.9688 iterations 1
Cbc0038I Pass   5: suminf.    1.03000 (4) obj. -34.9688 iterations 5
Cbc0038I Pass   6: suminf.    0.93567 (3) obj. -34.9688 iterations 2
Cbc0038I Pass   7: suminf.    0.47580 (2) obj. -34.9688 iterations 3
Cbc0038I Pass   8: suminf.    1.05153 (4) obj. -34.9688 iterations 4
Cbc0038I Pass   9: suminf.    1.05153 (4) obj. -34.9688 iterations 0
Cbc0038I Pass  10: suminf.    1.26555 (4) obj. -34.9688 iterations 2
Cbc0038I Pass  11: suminf.    1.55453 (6) obj. -34.9688 iterations 7
Cbc0038I Pass  12: suminf.    1.12298 (5) obj. -34.9688 iterations 7
Cbc0038I Pass  13: suminf.    0.45539 (4) obj. -34.9688 iterations 7
Cbc0038I Pass  14: suminf.    0.32362 (2) obj. -34.9688 iterations 2
Cbc0038I Pass  15: suminf.    0.20552 (1) obj. -34.9688 iterations 2
Cbc0038I Pass  16: suminf.    0.32362 (2) obj. -34.9688 iterations 2
Cbc0038I Pass  17: suminf.    1.07976 (3) obj. -34.9688 iterations 5
Cbc0038I Pass  18: suminf.    0.75108 (3) obj. -34.9688 iterations 4
Cbc0038I Pass  19: suminf.    0.50826 (2) obj. -34.9688 iterations 2
Cbc0038I Pass  20: suminf.    1.50988 (6) obj. -34.9688 iterations 7
Cbc0038I Pass  21: suminf.    1.01810 (5) obj. -34.9688 iterations 2
Cbc0038I Pass  22: suminf.    0.87645 (4) obj. -34.9688 iterations 6
Cbc0038I Pass  23: suminf.    0.82299 (4) obj. -34.9688 iterations 1
Cbc0038I Pass  24: suminf.    0.37602 (3) obj. -34.9688 iterations 6
Cbc0038I Pass  25: suminf.    1.27367 (3) obj. -34.9688 iterations 5
Cbc0038I Pass  26: suminf.    1.27367 (3) obj. -34.9688 iterations 0
Cbc0038I Pass  27: suminf.    0.57562 (2) obj. -34.9688 iterations 2
Cbc0038I Pass  28: suminf.    0.44134 (2) obj. -34.9688 iterations 1
Cbc0038I Pass  29: suminf.    2.44608 (6) obj. -34.9688 iterations 6
Cbc0038I Pass  30: suminf.    1.14914 (5) obj. -34.9688 iterations 7
Cbc0038I Pass  31: suminf.    1.14652 (4) obj. -34.9688 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 22 columns, reduced to 28 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30.9401 - took 0.05 seconds
Cbc0012I Integer solution of -30.940131 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 22 columns, reduced to 18 rows 14 columns
Cbc0031I 8 added rows had average density of 15.375
Cbc0013I At root node, 8 cuts changed objective from -71.225789 to -46.716953 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 709 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 497 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.9401307, took 2173 iterations and 24 nodes (0.19 seconds)
Cbc0032I Strong branching done 162 times (1068 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-15) rows, 41 (-3) columns and 303 (-57) elements
Clp1000I sum of infeasibilities 3.38476e-08 - average 1.09186e-09, 25 fixed columns
Coin0506I Presolve 8 (-23) rows, 16 (-25) columns and 43 (-260) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 15.659984
Clp0000I Optimal - objective value 15.659984
Coin0511I After Postsolve, objective 15.659984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4661846 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 87.146149
Clp0000I Optimal - objective value 87.146149
Clp0000I Optimal - objective value 87.146149
Coin0511I After Postsolve, objective 87.146149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.14614896 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 41 columns (41 integer (41 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.169%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.26374
Cbc0038I Pass   1: suminf.    1.41518 (11) obj. -56.234 iterations 3
Cbc0038I Pass   2: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Solution found of -10.7878
Cbc0038I Rounding solution of -17.816 is better than previous of -10.7878

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 41 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.2903
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Pass   4: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Pass   5: suminf.    0.44652 (1) obj. -23.2903 iterations 11
Cbc0038I Pass   6: suminf.    0.19048 (1) obj. -33.4545 iterations 1
Cbc0038I Pass   7: suminf.    1.43185 (6) obj. -42.6685 iterations 7
Cbc0038I Pass   8: suminf.    0.92222 (4) obj. -38.6718 iterations 1
Cbc0038I Pass   9: suminf.    0.41582 (2) obj. -23.2903 iterations 4
Cbc0038I Pass  10: suminf.    0.41582 (2) obj. -23.2903 iterations 0
Cbc0038I Pass  11: suminf.    0.01887 (1) obj. -23.2903 iterations 3
Cbc0038I Pass  12: suminf.    0.19048 (1) obj. -28.0953 iterations 1
Cbc0038I Pass  13: suminf.    1.33022 (6) obj. -36.9917 iterations 7
Cbc0038I Pass  14: suminf.    1.21774 (5) obj. -34.759 iterations 1
Cbc0038I Pass  15: suminf.    1.30277 (7) obj. -23.2903 iterations 9
Cbc0038I Pass  16: suminf.    1.30277 (7) obj. -23.2903 iterations 1
Cbc0038I Pass  17: suminf.    0.57952 (2) obj. -23.2903 iterations 7
Cbc0038I Pass  18: suminf.    0.36048 (2) obj. -23.2903 iterations 2
Cbc0038I Pass  19: suminf.    1.75611 (6) obj. -23.2903 iterations 5
Cbc0038I Pass  20: suminf.    1.73715 (6) obj. -23.2903 iterations 1
Cbc0038I Pass  21: suminf.    1.44081 (7) obj. -23.2903 iterations 8
Cbc0038I Pass  22: suminf.    1.44081 (7) obj. -23.2903 iterations 0
Cbc0038I Pass  23: suminf.    0.51751 (2) obj. -23.2903 iterations 7
Cbc0038I Pass  24: suminf.    0.48708 (3) obj. -24.2014 iterations 2
Cbc0038I Pass  25: suminf.    0.52860 (3) obj. -23.2903 iterations 1
Cbc0038I Pass  26: suminf.    1.88601 (10) obj. -23.2903 iterations 23
Cbc0038I Pass  27: suminf.    1.81974 (8) obj. -23.2903 iterations 1
Cbc0038I Pass  28: suminf.    0.52649 (2) obj. -23.2903 iterations 11
Cbc0038I Pass  29: suminf.    0.50000 (2) obj. -24.0375 iterations 1
Cbc0038I Pass  30: suminf.    0.87531 (3) obj. -23.2903 iterations 2
Cbc0038I Pass  31: suminf.    0.87531 (3) obj. -23.2903 iterations 0
Cbc0038I Pass  32: suminf.    1.09322 (3) obj. -23.2903 iterations 3
Cbc0038I Rounding solution of -22.7619 is better than previous of -17.816

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 41 columns, reduced to 23 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -22.7619 to -30.9401 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.2637
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Pass  33: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Pass  34: suminf.    0.48800 (4) obj. -39.2637 iterations 11
Cbc0038I Pass  35: suminf.    0.48800 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  36: suminf.    0.83054 (3) obj. -39.2637 iterations 8
Cbc0038I Pass  37: suminf.    0.78529 (3) obj. -40.2709 iterations 1
Cbc0038I Pass  38: suminf.    0.83118 (3) obj. -39.2637 iterations 1
Cbc0038I Pass  39: suminf.    1.48562 (6) obj. -39.2637 iterations 11
Cbc0038I Pass  40: suminf.    1.20929 (6) obj. -39.2637 iterations 2
Cbc0038I Pass  41: suminf.    0.73292 (2) obj. -39.2637 iterations 5
Cbc0038I Pass  42: suminf.    0.73292 (2) obj. -39.2637 iterations 0
Cbc0038I Pass  43: suminf.    0.71184 (2) obj. -39.2637 iterations 3
Cbc0038I Pass  44: suminf.    0.63636 (2) obj. -41.3925 iterations 1
Cbc0038I Pass  45: suminf.    0.79854 (4) obj. -39.2637 iterations 2
Cbc0038I Pass  46: suminf.    0.79854 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  47: suminf.    0.73056 (3) obj. -39.2637 iterations 3
Cbc0038I Pass  48: suminf.    0.63636 (2) obj. -39.3925 iterations 2
Cbc0038I Pass  49: suminf.    0.68246 (3) obj. -39.2637 iterations 2
Cbc0038I Pass  50: suminf.    1.11346 (7) obj. -39.2637 iterations 4
Cbc0038I Pass  51: suminf.    1.02426 (7) obj. -39.2637 iterations 1
Cbc0038I Pass  52: suminf.    1.16161 (3) obj. -39.2637 iterations 7
Cbc0038I Pass  53: suminf.    1.06048 (4) obj. -39.2637 iterations 1
Cbc0038I Pass  54: suminf.    1.06048 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  55: suminf.    1.12592 (4) obj. -39.2637 iterations 2
Cbc0038I Pass  56: suminf.    1.12592 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  57: suminf.    1.26638 (4) obj. -39.2637 iterations 3
Cbc0038I Pass  58: suminf.    0.98160 (4) obj. -39.2637 iterations 1
Cbc0038I Pass  59: suminf.    1.28748 (4) obj. -39.2637 iterations 1
Cbc0038I Pass  60: suminf.    1.28748 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  61: suminf.    1.26638 (4) obj. -39.2637 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 41 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30.9401 - took 0.03 seconds
Cbc0012I Integer solution of -30.940131 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 31 rows 41 columns, reduced to 10 rows 14 columns
Cbc0031I 18 added rows had average density of 13
Cbc0013I At root node, 18 cuts changed objective from -72.557613 to -37.766636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1002 row cuts average 3.6 elements, 9 column cuts (9 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 507 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 207 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 278 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 283 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.720 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -30.940131 best solution, best possible -37.766636 (1.45 seconds)
Cbc0010I After 12 nodes, 4 on tree, -30.940131 best solution, best possible -37.766636 (2.16 seconds)
Cbc0001I Search completed - best objective -30.9401307, took 2151 iterations and 22 nodes (2.67 seconds)
Cbc0032I Strong branching done 236 times (1467 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 6, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.71   (Wallclock seconds):       2.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 22 (-2) columns and 100 (-29) elements
Clp1000I sum of infeasibilities 2.59906e-05 - average 8.12207e-07, 2 fixed columns
Coin0506I Presolve 29 (-3) rows, 20 (-2) columns and 91 (-9) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 72.282361
Clp0000I Optimal - objective value 72.282361
Coin0511I After Postsolve, objective 72.282361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.282361
Clp0000I Optimal - objective value 72.282361
Clp0000I Optimal - objective value 72.282361
Coin0511I After Postsolve, objective 72.282361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.28236096 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 22 columns (21 integer (21 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.80948
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.9255 iterations 13
Cbc0038I Solution found of -13.9255
Cbc0038I Relaxing continuous gives -13.9255
Cbc0038I Rounding solution of -29.9255 is better than previous of -13.9255

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 22 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -29.9255 to -30.9401 (0.01 seconds)
Cbc0038I Round again with cutoff of -34.9688
Cbc0038I Pass   2: suminf.    0.56247 (2) obj. -34.9688 iterations 2
Cbc0038I Pass   3: suminf.    0.56247 (2) obj. -34.9688 iterations 0
Cbc0038I Pass   4: suminf.    0.45048 (2) obj. -34.9688 iterations 1
Cbc0038I Pass   5: suminf.    1.03000 (4) obj. -34.9688 iterations 5
Cbc0038I Pass   6: suminf.    0.93567 (3) obj. -34.9688 iterations 2
Cbc0038I Pass   7: suminf.    0.47580 (2) obj. -34.9688 iterations 3
Cbc0038I Pass   8: suminf.    1.05153 (4) obj. -34.9688 iterations 4
Cbc0038I Pass   9: suminf.    1.05153 (4) obj. -34.9688 iterations 0
Cbc0038I Pass  10: suminf.    1.26555 (4) obj. -34.9688 iterations 2
Cbc0038I Pass  11: suminf.    1.55453 (6) obj. -34.9688 iterations 7
Cbc0038I Pass  12: suminf.    1.12298 (5) obj. -34.9688 iterations 7
Cbc0038I Pass  13: suminf.    0.45539 (4) obj. -34.9688 iterations 7
Cbc0038I Pass  14: suminf.    0.32362 (2) obj. -34.9688 iterations 2
Cbc0038I Pass  15: suminf.    0.20552 (1) obj. -34.9688 iterations 2
Cbc0038I Pass  16: suminf.    0.32362 (2) obj. -34.9688 iterations 2
Cbc0038I Pass  17: suminf.    1.07976 (3) obj. -34.9688 iterations 5
Cbc0038I Pass  18: suminf.    0.75108 (3) obj. -34.9688 iterations 4
Cbc0038I Pass  19: suminf.    0.50826 (2) obj. -34.9688 iterations 2
Cbc0038I Pass  20: suminf.    1.50988 (6) obj. -34.9688 iterations 7
Cbc0038I Pass  21: suminf.    1.01810 (5) obj. -34.9688 iterations 2
Cbc0038I Pass  22: suminf.    0.87645 (4) obj. -34.9688 iterations 6
Cbc0038I Pass  23: suminf.    0.82299 (4) obj. -34.9688 iterations 1
Cbc0038I Pass  24: suminf.    0.37602 (3) obj. -34.9688 iterations 6
Cbc0038I Pass  25: suminf.    1.27367 (3) obj. -34.9688 iterations 5
Cbc0038I Pass  26: suminf.    1.27367 (3) obj. -34.9688 iterations 0
Cbc0038I Pass  27: suminf.    0.57562 (2) obj. -34.9688 iterations 2
Cbc0038I Pass  28: suminf.    0.44134 (2) obj. -34.9688 iterations 1
Cbc0038I Pass  29: suminf.    2.44608 (6) obj. -34.9688 iterations 6
Cbc0038I Pass  30: suminf.    1.14914 (5) obj. -34.9688 iterations 7
Cbc0038I Pass  31: suminf.    1.14652 (4) obj. -34.9688 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 22 columns, reduced to 28 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30.9401 - took 0.04 seconds
Cbc0012I Integer solution of -30.940131 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 22 columns, reduced to 18 rows 14 columns
Cbc0031I 8 added rows had average density of 15.375
Cbc0013I At root node, 8 cuts changed objective from -71.225789 to -46.716953 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 709 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 497 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.9401307, took 2173 iterations and 24 nodes (0.17 seconds)
Cbc0032I Strong branching done 162 times (1068 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 41 (-4) columns and 303 (-58) elements
Clp1000I sum of infeasibilities 3.38476e-08 - average 1.09186e-09, 25 fixed columns
Coin0506I Presolve 8 (-23) rows, 16 (-25) columns and 43 (-260) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 15.659984
Clp0000I Optimal - objective value 15.659984
Coin0511I After Postsolve, objective 15.659984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4661846 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 87.146149
Clp0000I Optimal - objective value 87.146149
Clp0000I Optimal - objective value 87.146149
Coin0511I After Postsolve, objective 87.146149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.14614896 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 41 columns (41 integer (41 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.169%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.26374
Cbc0038I Pass   1: suminf.    1.41518 (11) obj. -56.234 iterations 3
Cbc0038I Pass   2: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Solution found of -10.7878
Cbc0038I Rounding solution of -17.816 is better than previous of -10.7878

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 41 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.2903
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Pass   4: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Pass   5: suminf.    0.44652 (1) obj. -23.2903 iterations 11
Cbc0038I Pass   6: suminf.    0.19048 (1) obj. -33.4545 iterations 1
Cbc0038I Pass   7: suminf.    1.43185 (6) obj. -42.6685 iterations 7
Cbc0038I Pass   8: suminf.    0.92222 (4) obj. -38.6718 iterations 1
Cbc0038I Pass   9: suminf.    0.41582 (2) obj. -23.2903 iterations 4
Cbc0038I Pass  10: suminf.    0.41582 (2) obj. -23.2903 iterations 0
Cbc0038I Pass  11: suminf.    0.01887 (1) obj. -23.2903 iterations 3
Cbc0038I Pass  12: suminf.    0.19048 (1) obj. -28.0953 iterations 1
Cbc0038I Pass  13: suminf.    1.33022 (6) obj. -36.9917 iterations 7
Cbc0038I Pass  14: suminf.    1.21774 (5) obj. -34.759 iterations 1
Cbc0038I Pass  15: suminf.    1.30277 (7) obj. -23.2903 iterations 9
Cbc0038I Pass  16: suminf.    1.30277 (7) obj. -23.2903 iterations 1
Cbc0038I Pass  17: suminf.    0.57952 (2) obj. -23.2903 iterations 7
Cbc0038I Pass  18: suminf.    0.36048 (2) obj. -23.2903 iterations 2
Cbc0038I Pass  19: suminf.    1.75611 (6) obj. -23.2903 iterations 5
Cbc0038I Pass  20: suminf.    1.73715 (6) obj. -23.2903 iterations 1
Cbc0038I Pass  21: suminf.    1.44081 (7) obj. -23.2903 iterations 8
Cbc0038I Pass  22: suminf.    1.44081 (7) obj. -23.2903 iterations 0
Cbc0038I Pass  23: suminf.    0.51751 (2) obj. -23.2903 iterations 7
Cbc0038I Pass  24: suminf.    0.48708 (3) obj. -24.2014 iterations 2
Cbc0038I Pass  25: suminf.    0.52860 (3) obj. -23.2903 iterations 1
Cbc0038I Pass  26: suminf.    1.88601 (10) obj. -23.2903 iterations 23
Cbc0038I Pass  27: suminf.    1.81974 (8) obj. -23.2903 iterations 1
Cbc0038I Pass  28: suminf.    0.52649 (2) obj. -23.2903 iterations 11
Cbc0038I Pass  29: suminf.    0.50000 (2) obj. -24.0375 iterations 1
Cbc0038I Pass  30: suminf.    0.87531 (3) obj. -23.2903 iterations 2
Cbc0038I Pass  31: suminf.    0.87531 (3) obj. -23.2903 iterations 0
Cbc0038I Pass  32: suminf.    1.09322 (3) obj. -23.2903 iterations 3
Cbc0038I Rounding solution of -22.7619 is better than previous of -17.816

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 41 columns, reduced to 23 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -22.7619 to -30.9401 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.2637
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Pass  33: suminf.    1.41518 (11) obj. -56.234 iterations 0
Cbc0038I Pass  34: suminf.    0.48800 (4) obj. -39.2637 iterations 11
Cbc0038I Pass  35: suminf.    0.48800 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  36: suminf.    0.83054 (3) obj. -39.2637 iterations 8
Cbc0038I Pass  37: suminf.    0.78529 (3) obj. -40.2709 iterations 1
Cbc0038I Pass  38: suminf.    0.83118 (3) obj. -39.2637 iterations 1
Cbc0038I Pass  39: suminf.    1.48562 (6) obj. -39.2637 iterations 11
Cbc0038I Pass  40: suminf.    1.20929 (6) obj. -39.2637 iterations 2
Cbc0038I Pass  41: suminf.    0.73292 (2) obj. -39.2637 iterations 5
Cbc0038I Pass  42: suminf.    0.73292 (2) obj. -39.2637 iterations 0
Cbc0038I Pass  43: suminf.    0.71184 (2) obj. -39.2637 iterations 3
Cbc0038I Pass  44: suminf.    0.63636 (2) obj. -41.3925 iterations 1
Cbc0038I Pass  45: suminf.    0.79854 (4) obj. -39.2637 iterations 2
Cbc0038I Pass  46: suminf.    0.79854 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  47: suminf.    0.73056 (3) obj. -39.2637 iterations 3
Cbc0038I Pass  48: suminf.    0.63636 (2) obj. -39.3925 iterations 2
Cbc0038I Pass  49: suminf.    0.68246 (3) obj. -39.2637 iterations 2
Cbc0038I Pass  50: suminf.    1.11346 (7) obj. -39.2637 iterations 4
Cbc0038I Pass  51: suminf.    1.02426 (7) obj. -39.2637 iterations 1
Cbc0038I Pass  52: suminf.    1.16161 (3) obj. -39.2637 iterations 7
Cbc0038I Pass  53: suminf.    1.06048 (4) obj. -39.2637 iterations 1
Cbc0038I Pass  54: suminf.    1.06048 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  55: suminf.    1.12592 (4) obj. -39.2637 iterations 2
Cbc0038I Pass  56: suminf.    1.12592 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  57: suminf.    1.26638 (4) obj. -39.2637 iterations 3
Cbc0038I Pass  58: suminf.    0.98160 (4) obj. -39.2637 iterations 1
Cbc0038I Pass  59: suminf.    1.28748 (4) obj. -39.2637 iterations 1
Cbc0038I Pass  60: suminf.    1.28748 (4) obj. -39.2637 iterations 0
Cbc0038I Pass  61: suminf.    1.26638 (4) obj. -39.2637 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 41 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30.9401 - took 0.03 seconds
Cbc0012I Integer solution of -30.940131 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 31 rows 41 columns, reduced to 10 rows 14 columns
Cbc0031I 18 added rows had average density of 13
Cbc0013I At root node, 18 cuts changed objective from -72.557613 to -37.766636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1002 row cuts average 3.6 elements, 9 column cuts (9 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 507 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 207 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 278 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 283 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.747 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -30.940131 best solution, best possible -37.766636 (1.52 seconds)
Cbc0010I After 11 nodes, 4 on tree, -30.940131 best solution, best possible -37.766636 (2.26 seconds)
Cbc0001I Search completed - best objective -30.9401307, took 2151 iterations and 22 nodes (2.80 seconds)
Cbc0032I Strong branching done 236 times (1467 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 6, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.77   (Wallclock seconds):       2.80

