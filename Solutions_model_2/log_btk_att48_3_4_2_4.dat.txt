Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-19) rows, 42 (-8) columns and 237 (-48) elements
Clp1000I sum of infeasibilities 1.61308e-06 - average 2.01635e-08, 4 fixed columns
Coin0506I Presolve 71 (-9) rows, 38 (-4) columns and 211 (-26) elements
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 22.809402 - largest nonzero change 6.2390864e-05 ( 0.00053835668%) - largest zero change 2.1190981e-05
Clp0000I Optimal - objective value 2811.6831
Clp0000I Optimal - objective value 2811.6831
Coin0511I After Postsolve, objective 2811.6831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2811.6831
Clp0000I Optimal - objective value 2811.6831
Clp0000I Optimal - objective value 2811.6831
Coin0511I After Postsolve, objective 2811.6831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2811.683074 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 80 rows, 42 columns (41 integer (41 of which binary)) and 237 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.185%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.24313
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1200.43 iterations 16
Cbc0038I Solution found of -1200.43
Cbc0038I Relaxing continuous gives -1200.43
Cbc0038I Rounding solution of -1246.25 is better than previous of -1200.43

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 42 columns, reduced to 39 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -1246.25 to -1340.06 (0.02 seconds)
Cbc0038I Round again with cutoff of -1487.22
Cbc0038I Pass   2: suminf.    0.17928 (1) obj. -1487.22 iterations 1
Cbc0038I Pass   3: suminf.    0.30560 (1) obj. -1487.22 iterations 1
Cbc0038I Pass   4: suminf.    1.86698 (5) obj. -1487.22 iterations 10
Cbc0038I Pass   5: suminf.    0.57138 (2) obj. -1487.22 iterations 6
Cbc0038I Pass   6: suminf.    0.27864 (1) obj. -1487.22 iterations 2
Cbc0038I Pass   7: suminf.    0.49098 (1) obj. -1487.22 iterations 1
Cbc0038I Pass   8: suminf.    1.26216 (5) obj. -1487.22 iterations 8
Cbc0038I Pass   9: suminf.    1.00000 (3) obj. -1487.22 iterations 5
Cbc0038I Pass  10: suminf.    1.20885 (4) obj. -1487.22 iterations 4
Cbc0038I Pass  11: suminf.    0.49300 (1) obj. -1487.22 iterations 3
Cbc0038I Pass  12: suminf.    0.28118 (1) obj. -1487.22 iterations 1
Cbc0038I Pass  13: suminf.    1.43855 (5) obj. -1487.22 iterations 10
Cbc0038I Pass  14: suminf.    0.82428 (3) obj. -1487.22 iterations 8
Cbc0038I Pass  15: suminf.    0.49181 (1) obj. -1487.22 iterations 3
Cbc0038I Pass  16: suminf.    0.43633 (2) obj. -1487.22 iterations 2
Cbc0038I Pass  17: suminf.    0.49300 (1) obj. -1487.22 iterations 2
Cbc0038I Pass  18: suminf.    0.28118 (1) obj. -1487.22 iterations 1
Cbc0038I Pass  19: suminf.    3.62852 (10) obj. -1487.22 iterations 12
Cbc0038I Pass  20: suminf.    0.45783 (2) obj. -1487.22 iterations 6
Cbc0038I Pass  21: suminf.    0.48618 (1) obj. -1487.22 iterations 2
Cbc0038I Pass  22: suminf.    0.30729 (1) obj. -1487.22 iterations 1
Cbc0038I Pass  23: suminf.    1.00000 (3) obj. -1487.22 iterations 11
Cbc0038I Pass  24: suminf.    0.34101 (3) obj. -1487.22 iterations 5
Cbc0038I Pass  25: suminf.    0.19681 (2) obj. -1487.22 iterations 2
Cbc0038I Pass  26: suminf.    0.29571 (1) obj. -1487.22 iterations 2
Cbc0038I Pass  27: suminf.    0.20086 (2) obj. -1487.22 iterations 2
Cbc0038I Pass  28: suminf.    0.29690 (1) obj. -1487.22 iterations 2
Cbc0038I Pass  29: suminf.    0.16837 (1) obj. -1487.22 iterations 1
Cbc0038I Pass  30: suminf.    3.00000 (12) obj. -1487.22 iterations 19
Cbc0038I Pass  31: suminf.    2.00000 (9) obj. -1487.22 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 42 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -1340.06 to -1402.42 (0.05 seconds)
Cbc0038I Round again with cutoff of -1752.11
Cbc0038I Pass  31: suminf.    0.34488 (1) obj. -1752.11 iterations 0
Cbc0038I Pass  32: suminf.    0.43762 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  33: suminf.    2.96898 (9) obj. -1752.11 iterations 11
Cbc0038I Pass  34: suminf.    2.00000 (8) obj. -1752.11 iterations 2
Cbc0038I Pass  35: suminf.    1.20578 (4) obj. -1752.11 iterations 9
Cbc0038I Pass  36: suminf.    0.85648 (3) obj. -1752.11 iterations 2
Cbc0038I Pass  37: suminf.    0.65977 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  38: suminf.    0.62805 (3) obj. -1752.11 iterations 1
Cbc0038I Pass  39: suminf.    0.92801 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  40: suminf.    0.34488 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  41: suminf.    0.43762 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  42: suminf.    0.96951 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  43: suminf.    0.85648 (3) obj. -1752.11 iterations 3
Cbc0038I Pass  44: suminf.    0.65977 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  45: suminf.    0.62805 (3) obj. -1752.11 iterations 1
Cbc0038I Pass  46: suminf.    0.92801 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  47: suminf.    0.34488 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  48: suminf.    0.43762 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  49: suminf.    1.61530 (7) obj. -1752.11 iterations 13
Cbc0038I Pass  50: suminf.    1.35559 (6) obj. -1752.11 iterations 3
Cbc0038I Pass  51: suminf.    0.90066 (5) obj. -1752.11 iterations 9
Cbc0038I Pass  52: suminf.    0.90066 (5) obj. -1752.11 iterations 0
Cbc0038I Pass  53: suminf.    0.91454 (2) obj. -1752.11 iterations 6
Cbc0038I Pass  54: suminf.    0.50206 (2) obj. -1752.11 iterations 1
Cbc0038I Pass  55: suminf.    0.49860 (3) obj. -1752.11 iterations 1
Cbc0038I Pass  56: suminf.    1.17082 (3) obj. -1752.11 iterations 2
Cbc0038I Pass  57: suminf.    0.69261 (3) obj. -1752.11 iterations 1
Cbc0038I Pass  58: suminf.    2.55813 (8) obj. -1752.11 iterations 5
Cbc0038I Pass  59: suminf.    1.42512 (6) obj. -1752.11 iterations 4
Cbc0038I Pass  60: suminf.    1.18631 (4) obj. -1752.11 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 42 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1402.42 - took 0.05 seconds
Cbc0012I Integer solution of -1402.4237 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 80 rows 42 columns, reduced to 45 rows 28 columns
Cbc0031I 11 added rows had average density of 31.818182
Cbc0013I At root node, 11 cuts changed objective from -2811.6831 to -1866.6295 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2126 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 851 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 29.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1402.42366, took 2198 iterations and 4 nodes (0.27 seconds)
Cbc0032I Strong branching done 76 times (840 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-12) rows, 88 (-8) columns and 1175 (-238) elements
Clp1000I sum of infeasibilities 1.77041e-07 - average 2.05861e-09, 40 fixed columns
Coin0506I Presolve 40 (-46) rows, 42 (-46) columns and 208 (-967) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 3.9645618 - largest nonzero change 1.6924844e-05 ( 0.0012247315%) - largest zero change 1.1182512e-05
Clp0000I Optimal - objective value 4479.0151
Clp0000I Optimal - objective value 4479.0151
Coin0511I After Postsolve, objective 4479.0151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6699522 - largest nonzero change 2.8013011e-05 ( 0.00091204228%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 4479.0151
Clp0000I Optimal - objective value 4479.0151
Clp0000I Optimal - objective value 4479.0151
Coin0511I After Postsolve, objective 4479.0151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4479.015119 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 88 columns (88 integer (88 of which binary)) and 1177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.049%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.90968
Cbc0038I Pass   1: suminf.    2.91808 (18) obj. -2392.97 iterations 33
Cbc0038I Pass   2: suminf.    2.91808 (18) obj. -2392.97 iterations 8
Cbc0038I Pass   3: suminf.    0.04000 (1) obj. -1200.45 iterations 17
Cbc0038I Solution found of -1143.81
Cbc0038I Rounding solution of -1189.63 is better than previous of -1143.81

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 88 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -1189.63 to -1294.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -1586.59
Cbc0038I Pass   4: suminf.    2.91808 (18) obj. -2392.97 iterations 0
Cbc0038I Pass   5: suminf.    2.91808 (18) obj. -2392.97 iterations 2
Cbc0038I Pass   6: suminf.    0.71605 (23) obj. -1586.59 iterations 33
Cbc0038I Pass   7: suminf.    0.62995 (12) obj. -2003.63 iterations 11
Cbc0038I Pass   8: suminf.    0.62270 (3) obj. -1586.59 iterations 24
Cbc0038I Pass   9: suminf.    0.20098 (2) obj. -1639.27 iterations 10
Cbc0038I Pass  10: suminf.    0.65381 (3) obj. -1586.59 iterations 12
Cbc0038I Pass  11: suminf.    0.65381 (3) obj. -1586.59 iterations 2
Cbc0038I Pass  12: suminf.    0.72586 (3) obj. -1586.59 iterations 13
Cbc0038I Pass  13: suminf.    0.34345 (2) obj. -1631.29 iterations 9
Cbc0038I Pass  14: suminf.    4.67039 (14) obj. -1586.59 iterations 23
Cbc0038I Pass  15: suminf.    2.22338 (9) obj. -1586.59 iterations 12
Cbc0038I Pass  16: suminf.    1.43985 (9) obj. -1586.59 iterations 5
Cbc0038I Pass  17: suminf.    1.43985 (9) obj. -1586.59 iterations 0
Cbc0038I Pass  18: suminf.    1.14540 (6) obj. -1586.59 iterations 13
Cbc0038I Pass  19: suminf.    1.14540 (6) obj. -1586.59 iterations 1
Cbc0038I Pass  20: suminf.    1.51287 (6) obj. -1586.59 iterations 7
Cbc0038I Pass  21: suminf.    1.53326 (6) obj. -1586.59 iterations 5
Cbc0038I Pass  22: suminf.    1.08732 (6) obj. -1586.59 iterations 6
Cbc0038I Pass  23: suminf.    0.56802 (3) obj. -1678.31 iterations 8
Cbc0038I Pass  24: suminf.    0.71544 (3) obj. -1586.59 iterations 4
Cbc0038I Pass  25: suminf.    0.71544 (3) obj. -1586.59 iterations 0
Cbc0038I Pass  26: suminf.    0.60228 (3) obj. -1586.59 iterations 4
Cbc0038I Pass  27: suminf.    0.60228 (3) obj. -1586.59 iterations 0
Cbc0038I Pass  28: suminf.    0.71544 (3) obj. -1586.59 iterations 4
Cbc0038I Pass  29: suminf.    4.84004 (18) obj. -1752.54 iterations 23
Cbc0038I Pass  30: suminf.    2.41188 (14) obj. -1631.2 iterations 7
Cbc0038I Pass  31: suminf.    0.87677 (3) obj. -1586.59 iterations 24
Cbc0038I Pass  32: suminf.    0.87677 (3) obj. -1586.59 iterations 3
Cbc0038I Pass  33: suminf.    0.77405 (3) obj. -1586.59 iterations 4
Cbc0038I Rounding solution of -1400.75 is better than previous of -1294.23

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 88 columns, reduced to 36 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -1400.75 to -1402.42 (0.04 seconds)
Cbc0038I Round again with cutoff of -2112.82
Cbc0038I Pass  33: suminf.    2.91808 (18) obj. -2392.97 iterations 0
Cbc0038I Pass  34: suminf.    2.91808 (18) obj. -2392.97 iterations 2
Cbc0038I Pass  35: suminf.    1.35010 (22) obj. -2112.82 iterations 34
Cbc0038I Pass  36: suminf.    1.35010 (22) obj. -2112.82 iterations 0
Cbc0038I Pass  37: suminf.    0.96950 (6) obj. -2112.82 iterations 43
Cbc0038I Pass  38: suminf.    0.71397 (5) obj. -2127.72 iterations 9
Cbc0038I Pass  39: suminf.    0.96950 (6) obj. -2112.82 iterations 9
Cbc0038I Pass  40: suminf.    1.79707 (9) obj. -2112.82 iterations 22
Cbc0038I Pass  41: suminf.    1.58133 (8) obj. -2162.87 iterations 8
Cbc0038I Pass  42: suminf.    1.35257 (5) obj. -2112.82 iterations 15
Cbc0038I Pass  43: suminf.    1.16472 (5) obj. -2146.82 iterations 4
Cbc0038I Pass  44: suminf.    3.47274 (14) obj. -2267.6 iterations 20
Cbc0038I Pass  45: suminf.    3.47274 (14) obj. -2267.6 iterations 4
Cbc0038I Pass  46: suminf.    1.39124 (7) obj. -2112.82 iterations 16
Cbc0038I Pass  47: suminf.    1.39124 (7) obj. -2112.82 iterations 1
Cbc0038I Pass  48: suminf.    1.34367 (5) obj. -2112.82 iterations 11
Cbc0038I Pass  49: suminf.    1.16472 (5) obj. -2146.82 iterations 4
Cbc0038I Pass  50: suminf.    1.35257 (5) obj. -2112.82 iterations 4
Cbc0038I Pass  51: suminf.    2.94032 (11) obj. -2112.82 iterations 15
Cbc0038I Pass  52: suminf.    2.94032 (11) obj. -2112.82 iterations 6
Cbc0038I Pass  53: suminf.    1.35257 (5) obj. -2112.82 iterations 14
Cbc0038I Pass  54: suminf.    1.52999 (7) obj. -2112.82 iterations 26
Cbc0038I Pass  55: suminf.    1.52999 (7) obj. -2112.82 iterations 4
Cbc0038I Pass  56: suminf.    2.81193 (15) obj. -2112.82 iterations 16
Cbc0038I Pass  57: suminf.    2.29975 (11) obj. -2141.42 iterations 6
Cbc0038I Pass  58: suminf.    1.35052 (6) obj. -2112.82 iterations 21
Cbc0038I Pass  59: suminf.    1.16472 (5) obj. -2146.82 iterations 2
Cbc0038I Pass  60: suminf.    1.35257 (5) obj. -2112.82 iterations 3
Cbc0038I Pass  61: suminf.    1.74428 (11) obj. -2112.82 iterations 21
Cbc0038I Pass  62: suminf.    1.74428 (11) obj. -2112.82 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 88 columns, reduced to 31 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1402.42 - took 0.04 seconds
Cbc0012I Integer solution of -1402.4237 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 86 rows 88 columns, reduced to 5 rows 7 columns
Cbc0031I 19 added rows had average density of 3.5263158
Cbc0013I At root node, 22 cuts changed objective from -4217.7612 to -1349.5937 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 362 row cuts average 2.8 elements, 40 column cuts (40 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 26 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1402.42366, took 97 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-19) rows, 42 (-8) columns and 237 (-48) elements
Clp1000I sum of infeasibilities 1.61308e-06 - average 2.01635e-08, 4 fixed columns
Coin0506I Presolve 71 (-9) rows, 38 (-4) columns and 211 (-26) elements
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 22.809402 - largest nonzero change 6.2390864e-05 ( 0.00053835668%) - largest zero change 2.1190981e-05
Clp0000I Optimal - objective value 2811.6831
Clp0000I Optimal - objective value 2811.6831
Coin0511I After Postsolve, objective 2811.6831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2811.6831
Clp0000I Optimal - objective value 2811.6831
Clp0000I Optimal - objective value 2811.6831
Coin0511I After Postsolve, objective 2811.6831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2811.683074 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 80 rows, 42 columns (41 integer (41 of which binary)) and 237 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.185%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.24313
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1200.43 iterations 16
Cbc0038I Solution found of -1200.43
Cbc0038I Relaxing continuous gives -1200.43
Cbc0038I Rounding solution of -1246.25 is better than previous of -1200.43

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 42 columns, reduced to 39 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -1246.25 to -1340.06 (0.02 seconds)
Cbc0038I Round again with cutoff of -1487.22
Cbc0038I Pass   2: suminf.    0.17928 (1) obj. -1487.22 iterations 1
Cbc0038I Pass   3: suminf.    0.30560 (1) obj. -1487.22 iterations 1
Cbc0038I Pass   4: suminf.    1.86698 (5) obj. -1487.22 iterations 10
Cbc0038I Pass   5: suminf.    0.57138 (2) obj. -1487.22 iterations 6
Cbc0038I Pass   6: suminf.    0.27864 (1) obj. -1487.22 iterations 2
Cbc0038I Pass   7: suminf.    0.49098 (1) obj. -1487.22 iterations 1
Cbc0038I Pass   8: suminf.    1.26216 (5) obj. -1487.22 iterations 8
Cbc0038I Pass   9: suminf.    1.00000 (3) obj. -1487.22 iterations 5
Cbc0038I Pass  10: suminf.    1.20885 (4) obj. -1487.22 iterations 4
Cbc0038I Pass  11: suminf.    0.49300 (1) obj. -1487.22 iterations 3
Cbc0038I Pass  12: suminf.    0.28118 (1) obj. -1487.22 iterations 1
Cbc0038I Pass  13: suminf.    1.43855 (5) obj. -1487.22 iterations 10
Cbc0038I Pass  14: suminf.    0.82428 (3) obj. -1487.22 iterations 8
Cbc0038I Pass  15: suminf.    0.49181 (1) obj. -1487.22 iterations 3
Cbc0038I Pass  16: suminf.    0.43633 (2) obj. -1487.22 iterations 2
Cbc0038I Pass  17: suminf.    0.49300 (1) obj. -1487.22 iterations 2
Cbc0038I Pass  18: suminf.    0.28118 (1) obj. -1487.22 iterations 1
Cbc0038I Pass  19: suminf.    3.62852 (10) obj. -1487.22 iterations 12
Cbc0038I Pass  20: suminf.    0.45783 (2) obj. -1487.22 iterations 6
Cbc0038I Pass  21: suminf.    0.48618 (1) obj. -1487.22 iterations 2
Cbc0038I Pass  22: suminf.    0.30729 (1) obj. -1487.22 iterations 1
Cbc0038I Pass  23: suminf.    1.00000 (3) obj. -1487.22 iterations 11
Cbc0038I Pass  24: suminf.    0.34101 (3) obj. -1487.22 iterations 5
Cbc0038I Pass  25: suminf.    0.19681 (2) obj. -1487.22 iterations 2
Cbc0038I Pass  26: suminf.    0.29571 (1) obj. -1487.22 iterations 2
Cbc0038I Pass  27: suminf.    0.20086 (2) obj. -1487.22 iterations 2
Cbc0038I Pass  28: suminf.    0.29690 (1) obj. -1487.22 iterations 2
Cbc0038I Pass  29: suminf.    0.16837 (1) obj. -1487.22 iterations 1
Cbc0038I Pass  30: suminf.    3.00000 (12) obj. -1487.22 iterations 19
Cbc0038I Pass  31: suminf.    2.00000 (9) obj. -1487.22 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 42 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -1340.06 to -1402.42 (0.05 seconds)
Cbc0038I Round again with cutoff of -1752.11
Cbc0038I Pass  31: suminf.    0.34488 (1) obj. -1752.11 iterations 0
Cbc0038I Pass  32: suminf.    0.43762 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  33: suminf.    2.96898 (9) obj. -1752.11 iterations 11
Cbc0038I Pass  34: suminf.    2.00000 (8) obj. -1752.11 iterations 2
Cbc0038I Pass  35: suminf.    1.20578 (4) obj. -1752.11 iterations 9
Cbc0038I Pass  36: suminf.    0.85648 (3) obj. -1752.11 iterations 2
Cbc0038I Pass  37: suminf.    0.65977 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  38: suminf.    0.62805 (3) obj. -1752.11 iterations 1
Cbc0038I Pass  39: suminf.    0.92801 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  40: suminf.    0.34488 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  41: suminf.    0.43762 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  42: suminf.    0.96951 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  43: suminf.    0.85648 (3) obj. -1752.11 iterations 3
Cbc0038I Pass  44: suminf.    0.65977 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  45: suminf.    0.62805 (3) obj. -1752.11 iterations 1
Cbc0038I Pass  46: suminf.    0.92801 (2) obj. -1752.11 iterations 2
Cbc0038I Pass  47: suminf.    0.34488 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  48: suminf.    0.43762 (1) obj. -1752.11 iterations 1
Cbc0038I Pass  49: suminf.    1.61530 (7) obj. -1752.11 iterations 13
Cbc0038I Pass  50: suminf.    1.35559 (6) obj. -1752.11 iterations 3
Cbc0038I Pass  51: suminf.    0.90066 (5) obj. -1752.11 iterations 9
Cbc0038I Pass  52: suminf.    0.90066 (5) obj. -1752.11 iterations 0
Cbc0038I Pass  53: suminf.    0.91454 (2) obj. -1752.11 iterations 6
Cbc0038I Pass  54: suminf.    0.50206 (2) obj. -1752.11 iterations 1
Cbc0038I Pass  55: suminf.    0.49860 (3) obj. -1752.11 iterations 1
Cbc0038I Pass  56: suminf.    1.17082 (3) obj. -1752.11 iterations 2
Cbc0038I Pass  57: suminf.    0.69261 (3) obj. -1752.11 iterations 1
Cbc0038I Pass  58: suminf.    2.55813 (8) obj. -1752.11 iterations 5
Cbc0038I Pass  59: suminf.    1.42512 (6) obj. -1752.11 iterations 4
Cbc0038I Pass  60: suminf.    1.18631 (4) obj. -1752.11 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 42 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1402.42 - took 0.05 seconds
Cbc0012I Integer solution of -1402.4237 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 80 rows 42 columns, reduced to 45 rows 28 columns
Cbc0031I 11 added rows had average density of 31.818182
Cbc0013I At root node, 11 cuts changed objective from -2811.6831 to -1866.6295 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2126 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 851 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 29.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1402.42366, took 2198 iterations and 4 nodes (0.31 seconds)
Cbc0032I Strong branching done 76 times (840 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 88 (-9) columns and 1175 (-239) elements
Clp1000I sum of infeasibilities 1.77041e-07 - average 2.05861e-09, 40 fixed columns
Coin0506I Presolve 40 (-46) rows, 42 (-46) columns and 208 (-967) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 3.9645618 - largest nonzero change 1.6924844e-05 ( 0.0012247315%) - largest zero change 1.1182512e-05
Clp0000I Optimal - objective value 4479.0151
Clp0000I Optimal - objective value 4479.0151
Coin0511I After Postsolve, objective 4479.0151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6699522 - largest nonzero change 2.8013011e-05 ( 0.00091204228%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 4479.0151
Clp0000I Optimal - objective value 4479.0151
Clp0000I Optimal - objective value 4479.0151
Coin0511I After Postsolve, objective 4479.0151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4479.015119 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 88 columns (88 integer (88 of which binary)) and 1177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.049%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.90968
Cbc0038I Pass   1: suminf.    2.91808 (18) obj. -2392.97 iterations 33
Cbc0038I Pass   2: suminf.    2.91808 (18) obj. -2392.97 iterations 8
Cbc0038I Pass   3: suminf.    0.04000 (1) obj. -1200.45 iterations 17
Cbc0038I Solution found of -1143.81
Cbc0038I Rounding solution of -1189.63 is better than previous of -1143.81

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 88 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -1189.63 to -1294.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -1586.59
Cbc0038I Pass   4: suminf.    2.91808 (18) obj. -2392.97 iterations 0
Cbc0038I Pass   5: suminf.    2.91808 (18) obj. -2392.97 iterations 2
Cbc0038I Pass   6: suminf.    0.71605 (23) obj. -1586.59 iterations 33
Cbc0038I Pass   7: suminf.    0.62995 (12) obj. -2003.63 iterations 11
Cbc0038I Pass   8: suminf.    0.62270 (3) obj. -1586.59 iterations 24
Cbc0038I Pass   9: suminf.    0.20098 (2) obj. -1639.27 iterations 10
Cbc0038I Pass  10: suminf.    0.65381 (3) obj. -1586.59 iterations 12
Cbc0038I Pass  11: suminf.    0.65381 (3) obj. -1586.59 iterations 2
Cbc0038I Pass  12: suminf.    0.72586 (3) obj. -1586.59 iterations 13
Cbc0038I Pass  13: suminf.    0.34345 (2) obj. -1631.29 iterations 9
Cbc0038I Pass  14: suminf.    4.67039 (14) obj. -1586.59 iterations 23
Cbc0038I Pass  15: suminf.    2.22338 (9) obj. -1586.59 iterations 12
Cbc0038I Pass  16: suminf.    1.43985 (9) obj. -1586.59 iterations 5
Cbc0038I Pass  17: suminf.    1.43985 (9) obj. -1586.59 iterations 0
Cbc0038I Pass  18: suminf.    1.14540 (6) obj. -1586.59 iterations 13
Cbc0038I Pass  19: suminf.    1.14540 (6) obj. -1586.59 iterations 1
Cbc0038I Pass  20: suminf.    1.51287 (6) obj. -1586.59 iterations 7
Cbc0038I Pass  21: suminf.    1.53326 (6) obj. -1586.59 iterations 5
Cbc0038I Pass  22: suminf.    1.08732 (6) obj. -1586.59 iterations 6
Cbc0038I Pass  23: suminf.    0.56802 (3) obj. -1678.31 iterations 8
Cbc0038I Pass  24: suminf.    0.71544 (3) obj. -1586.59 iterations 4
Cbc0038I Pass  25: suminf.    0.71544 (3) obj. -1586.59 iterations 0
Cbc0038I Pass  26: suminf.    0.60228 (3) obj. -1586.59 iterations 4
Cbc0038I Pass  27: suminf.    0.60228 (3) obj. -1586.59 iterations 0
Cbc0038I Pass  28: suminf.    0.71544 (3) obj. -1586.59 iterations 4
Cbc0038I Pass  29: suminf.    4.84004 (18) obj. -1752.54 iterations 23
Cbc0038I Pass  30: suminf.    2.41188 (14) obj. -1631.2 iterations 7
Cbc0038I Pass  31: suminf.    0.87677 (3) obj. -1586.59 iterations 24
Cbc0038I Pass  32: suminf.    0.87677 (3) obj. -1586.59 iterations 3
Cbc0038I Pass  33: suminf.    0.77405 (3) obj. -1586.59 iterations 4
Cbc0038I Rounding solution of -1400.75 is better than previous of -1294.23

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 88 columns, reduced to 36 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -1400.75 to -1402.42 (0.04 seconds)
Cbc0038I Round again with cutoff of -2112.82
Cbc0038I Pass  33: suminf.    2.91808 (18) obj. -2392.97 iterations 0
Cbc0038I Pass  34: suminf.    2.91808 (18) obj. -2392.97 iterations 2
Cbc0038I Pass  35: suminf.    1.35010 (22) obj. -2112.82 iterations 34
Cbc0038I Pass  36: suminf.    1.35010 (22) obj. -2112.82 iterations 0
Cbc0038I Pass  37: suminf.    0.96950 (6) obj. -2112.82 iterations 43
Cbc0038I Pass  38: suminf.    0.71397 (5) obj. -2127.72 iterations 9
Cbc0038I Pass  39: suminf.    0.96950 (6) obj. -2112.82 iterations 9
Cbc0038I Pass  40: suminf.    1.79707 (9) obj. -2112.82 iterations 22
Cbc0038I Pass  41: suminf.    1.58133 (8) obj. -2162.87 iterations 8
Cbc0038I Pass  42: suminf.    1.35257 (5) obj. -2112.82 iterations 15
Cbc0038I Pass  43: suminf.    1.16472 (5) obj. -2146.82 iterations 4
Cbc0038I Pass  44: suminf.    3.47274 (14) obj. -2267.6 iterations 20
Cbc0038I Pass  45: suminf.    3.47274 (14) obj. -2267.6 iterations 4
Cbc0038I Pass  46: suminf.    1.39124 (7) obj. -2112.82 iterations 16
Cbc0038I Pass  47: suminf.    1.39124 (7) obj. -2112.82 iterations 1
Cbc0038I Pass  48: suminf.    1.34367 (5) obj. -2112.82 iterations 11
Cbc0038I Pass  49: suminf.    1.16472 (5) obj. -2146.82 iterations 4
Cbc0038I Pass  50: suminf.    1.35257 (5) obj. -2112.82 iterations 4
Cbc0038I Pass  51: suminf.    2.94032 (11) obj. -2112.82 iterations 15
Cbc0038I Pass  52: suminf.    2.94032 (11) obj. -2112.82 iterations 6
Cbc0038I Pass  53: suminf.    1.35257 (5) obj. -2112.82 iterations 14
Cbc0038I Pass  54: suminf.    1.52999 (7) obj. -2112.82 iterations 26
Cbc0038I Pass  55: suminf.    1.52999 (7) obj. -2112.82 iterations 4
Cbc0038I Pass  56: suminf.    2.81193 (15) obj. -2112.82 iterations 16
Cbc0038I Pass  57: suminf.    2.29975 (11) obj. -2141.42 iterations 6
Cbc0038I Pass  58: suminf.    1.35052 (6) obj. -2112.82 iterations 21
Cbc0038I Pass  59: suminf.    1.16472 (5) obj. -2146.82 iterations 2
Cbc0038I Pass  60: suminf.    1.35257 (5) obj. -2112.82 iterations 3
Cbc0038I Pass  61: suminf.    1.74428 (11) obj. -2112.82 iterations 21
Cbc0038I Pass  62: suminf.    1.74428 (11) obj. -2112.82 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 88 columns, reduced to 31 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1402.42 - took 0.04 seconds
Cbc0012I Integer solution of -1402.4237 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 86 rows 88 columns, reduced to 5 rows 7 columns
Cbc0031I 19 added rows had average density of 3.5263158
Cbc0013I At root node, 22 cuts changed objective from -4217.7612 to -1349.5937 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 362 row cuts average 2.8 elements, 40 column cuts (40 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 26 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1402.42366, took 97 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.14

