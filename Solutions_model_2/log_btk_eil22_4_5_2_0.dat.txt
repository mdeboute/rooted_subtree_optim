Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 21 (-3) columns and 101 (-28) elements
Clp1000I sum of infeasibilities 4.12814e-06 - average 1.25095e-07, 1 fixed columns
Coin0506I Presolve 28 (-5) rows, 18 (-3) columns and 86 (-15) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 108.41676
Clp0000I Optimal - objective value 108.41676
Coin0511I After Postsolve, objective 108.41676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 108.41676
Clp0000I Optimal - objective value 108.41676
Clp0000I Optimal - objective value 108.41676
Coin0511I After Postsolve, objective 108.41676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.4167592 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 101 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.433%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.78015
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.9 iterations 14
Cbc0038I Solution found of -28.9
Cbc0038I Relaxing continuous gives -28.9
Cbc0038I Rounding solution of -50 is better than previous of -28.9

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -50 to -71.4 (0.01 seconds)
Cbc0038I Round again with cutoff of -75.2
Cbc0038I Pass   2: suminf.    1.12890 (4) obj. -75.2 iterations 5
Cbc0038I Pass   3: suminf.    0.42489 (4) obj. -75.2 iterations 3
Cbc0038I Pass   4: suminf.    0.74417 (3) obj. -75.2 iterations 4
Cbc0038I Pass   5: suminf.    0.50191 (3) obj. -75.2 iterations 2
Cbc0038I Pass   6: suminf.    0.85043 (3) obj. -75.2 iterations 3
Cbc0038I Pass   7: suminf.    0.52551 (3) obj. -75.2 iterations 3
Cbc0038I Pass   8: suminf.    1.36383 (4) obj. -75.2 iterations 5
Cbc0038I Pass   9: suminf.    0.58327 (2) obj. -75.2 iterations 4
Cbc0038I Pass  10: suminf.    0.58327 (2) obj. -75.2 iterations 0
Cbc0038I Pass  11: suminf.    0.64696 (3) obj. -75.2 iterations 4
Cbc0038I Pass  12: suminf.    0.62086 (3) obj. -75.2 iterations 1
Cbc0038I Pass  13: suminf.    0.42927 (4) obj. -75.2 iterations 3
Cbc0038I Pass  14: suminf.    0.42489 (4) obj. -75.2 iterations 1
Cbc0038I Pass  15: suminf.    0.74417 (3) obj. -75.2 iterations 4
Cbc0038I Pass  16: suminf.    0.50191 (3) obj. -75.2 iterations 2
Cbc0038I Pass  17: suminf.    1.12890 (4) obj. -75.2 iterations 7
Cbc0038I Pass  18: suminf.    0.97267 (3) obj. -75.2 iterations 2
Cbc0038I Pass  19: suminf.    0.62086 (3) obj. -75.2 iterations 3
Cbc0038I Pass  20: suminf.    0.42927 (4) obj. -75.2 iterations 3
Cbc0038I Pass  21: suminf.    0.42489 (4) obj. -75.2 iterations 1
Cbc0038I Pass  22: suminf.    0.74417 (3) obj. -75.2 iterations 4
Cbc0038I Pass  23: suminf.    0.50191 (3) obj. -75.2 iterations 2
Cbc0038I Pass  24: suminf.    1.12890 (4) obj. -75.2 iterations 7
Cbc0038I Pass  25: suminf.    1.37845 (5) obj. -75.2 iterations 4
Cbc0038I Pass  26: suminf.    0.77694 (3) obj. -75.2 iterations 3
Cbc0038I Pass  27: suminf.    0.77694 (3) obj. -75.2 iterations 1
Cbc0038I Pass  28: suminf.    0.65803 (2) obj. -75.2 iterations 7
Cbc0038I Pass  29: suminf.    0.46970 (1) obj. -75.2 iterations 4
Cbc0038I Pass  30: suminf.    0.44444 (1) obj. -75.2 iterations 2
Cbc0038I Pass  31: suminf.    1.26938 (5) obj. -75.2 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -71.4 - took 0.02 seconds
Cbc0012I Integer solution of -71.4 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 23 rows 15 columns
Cbc0031I 8 added rows had average density of 16.25
Cbc0013I At root node, 8 cuts changed objective from -108.41676 to -86.999335 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 975 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 362 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -71.40000000000001, took 1603 iterations and 6 nodes (0.14 seconds)
Cbc0032I Strong branching done 60 times (429 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-11) rows, 42 (-2) columns and 317 (-43) elements
Clp1000I sum of infeasibilities 6.17251e-08 - average 1.76358e-09, 24 fixed columns
Coin0506I Presolve 11 (-24) rows, 17 (-25) columns and 52 (-265) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 3.6127493 - largest nonzero change 0 ( 0%) - largest zero change 1.8240846e-05
Clp0000I Optimal - objective value 59.24
Clp0000I Optimal - objective value 59.24
Coin0511I After Postsolve, objective 59.24, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.1175312 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 127.83474
Clp0000I Optimal - objective value 127.83474
Clp0000I Optimal - objective value 127.83474
Coin0511I After Postsolve, objective 127.83474, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 127.8347422 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 41 columns (41 integer (41 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.728%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.54446
Cbc0038I Pass   1: suminf.    1.66479 (7) obj. -97.2455 iterations 5
Cbc0038I Solution found of -65.5
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -69.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.66479 (7) obj. -97.2455 iterations 0
Cbc0038I Pass   3: suminf.    0.13000 (1) obj. -69.4 iterations 7
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -88 iterations 1
Cbc0038I Pass   5: suminf.    0.86260 (4) obj. -69.4 iterations 5
Cbc0038I Pass   6: suminf.    0.48077 (2) obj. -83.7692 iterations 2
Cbc0038I Pass   7: suminf.    0.29667 (1) obj. -69.4 iterations 2
Cbc0038I Pass   8: suminf.    0.25000 (1) obj. -83 iterations 1
Cbc0038I Pass   9: suminf.    1.54962 (6) obj. -69.4 iterations 6
Cbc0038I Pass  10: suminf.    1.49267 (5) obj. -69.4 iterations 1
Cbc0038I Pass  11: suminf.    0.33000 (1) obj. -69.4 iterations 5
Cbc0038I Pass  12: suminf.    0.25000 (1) obj. -82 iterations 1
Cbc0038I Pass  13: suminf.    1.81062 (6) obj. -69.4 iterations 13
Cbc0038I Pass  14: suminf.    1.22310 (8) obj. -69.4 iterations 4
Cbc0038I Pass  15: suminf.    0.86426 (4) obj. -69.4 iterations 11
Cbc0038I Pass  16: suminf.    0.86426 (4) obj. -69.4 iterations 0
Cbc0038I Pass  17: suminf.    1.62789 (4) obj. -69.4 iterations 3
Cbc0038I Pass  18: suminf.    0.74636 (3) obj. -69.4 iterations 3
Cbc0038I Pass  19: suminf.    0.63928 (3) obj. -74.2156 iterations 1
Cbc0038I Pass  20: suminf.    0.86991 (4) obj. -69.4 iterations 4
Cbc0038I Pass  21: suminf.    0.86426 (4) obj. -69.4 iterations 1
Cbc0038I Pass  22: suminf.    1.62789 (4) obj. -69.4 iterations 3
Cbc0038I Pass  23: suminf.    0.74636 (3) obj. -69.4 iterations 3
Cbc0038I Pass  24: suminf.    0.63928 (3) obj. -74.2156 iterations 1
Cbc0038I Pass  25: suminf.    0.86991 (4) obj. -69.4 iterations 4
Cbc0038I Pass  26: suminf.    0.86426 (4) obj. -69.4 iterations 1
Cbc0038I Pass  27: suminf.    1.62789 (4) obj. -69.4 iterations 3
Cbc0038I Pass  28: suminf.    0.74636 (3) obj. -69.4 iterations 3
Cbc0038I Pass  29: suminf.    0.63928 (3) obj. -74.2156 iterations 1
Cbc0038I Pass  30: suminf.    0.86991 (4) obj. -69.4 iterations 4
Cbc0038I Pass  31: suminf.    0.86426 (4) obj. -69.4 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -65.5 - took 0.01 seconds
Cbc0012I Integer solution of -65.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 41 columns, reduced to 0 rows 0 columns
Cbc0031I 11 added rows had average density of 11
Cbc0013I At root node, 11 cuts changed objective from -103.02528 to -75.89936 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 118 row cuts average 4.1 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0016I Integer solution of -71.4 found by strong branching after 277 iterations and 6 nodes (0.56 seconds)
Cbc0010I After 6 nodes, 2 on tree, -71.4 best solution, best possible -75.89936 (0.56 seconds)
Cbc0001I Search completed - best objective -71.40000000000001, took 306 iterations and 8 nodes (0.56 seconds)
Cbc0032I Strong branching done 126 times (670 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 21 (-3) columns and 101 (-28) elements
Clp1000I sum of infeasibilities 4.12814e-06 - average 1.25095e-07, 1 fixed columns
Coin0506I Presolve 28 (-5) rows, 18 (-3) columns and 86 (-15) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 108.41676
Clp0000I Optimal - objective value 108.41676
Coin0511I After Postsolve, objective 108.41676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 108.41676
Clp0000I Optimal - objective value 108.41676
Clp0000I Optimal - objective value 108.41676
Coin0511I After Postsolve, objective 108.41676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.4167592 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 101 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.433%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.78015
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.9 iterations 14
Cbc0038I Solution found of -28.9
Cbc0038I Relaxing continuous gives -28.9
Cbc0038I Rounding solution of -50 is better than previous of -28.9

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -50 to -71.4 (0.01 seconds)
Cbc0038I Round again with cutoff of -75.2
Cbc0038I Pass   2: suminf.    1.12890 (4) obj. -75.2 iterations 5
Cbc0038I Pass   3: suminf.    0.42489 (4) obj. -75.2 iterations 3
Cbc0038I Pass   4: suminf.    0.74417 (3) obj. -75.2 iterations 4
Cbc0038I Pass   5: suminf.    0.50191 (3) obj. -75.2 iterations 2
Cbc0038I Pass   6: suminf.    0.85043 (3) obj. -75.2 iterations 3
Cbc0038I Pass   7: suminf.    0.52551 (3) obj. -75.2 iterations 3
Cbc0038I Pass   8: suminf.    1.36383 (4) obj. -75.2 iterations 5
Cbc0038I Pass   9: suminf.    0.58327 (2) obj. -75.2 iterations 4
Cbc0038I Pass  10: suminf.    0.58327 (2) obj. -75.2 iterations 0
Cbc0038I Pass  11: suminf.    0.64696 (3) obj. -75.2 iterations 4
Cbc0038I Pass  12: suminf.    0.62086 (3) obj. -75.2 iterations 1
Cbc0038I Pass  13: suminf.    0.42927 (4) obj. -75.2 iterations 3
Cbc0038I Pass  14: suminf.    0.42489 (4) obj. -75.2 iterations 1
Cbc0038I Pass  15: suminf.    0.74417 (3) obj. -75.2 iterations 4
Cbc0038I Pass  16: suminf.    0.50191 (3) obj. -75.2 iterations 2
Cbc0038I Pass  17: suminf.    1.12890 (4) obj. -75.2 iterations 7
Cbc0038I Pass  18: suminf.    0.97267 (3) obj. -75.2 iterations 2
Cbc0038I Pass  19: suminf.    0.62086 (3) obj. -75.2 iterations 3
Cbc0038I Pass  20: suminf.    0.42927 (4) obj. -75.2 iterations 3
Cbc0038I Pass  21: suminf.    0.42489 (4) obj. -75.2 iterations 1
Cbc0038I Pass  22: suminf.    0.74417 (3) obj. -75.2 iterations 4
Cbc0038I Pass  23: suminf.    0.50191 (3) obj. -75.2 iterations 2
Cbc0038I Pass  24: suminf.    1.12890 (4) obj. -75.2 iterations 7
Cbc0038I Pass  25: suminf.    1.37845 (5) obj. -75.2 iterations 4
Cbc0038I Pass  26: suminf.    0.77694 (3) obj. -75.2 iterations 3
Cbc0038I Pass  27: suminf.    0.77694 (3) obj. -75.2 iterations 1
Cbc0038I Pass  28: suminf.    0.65803 (2) obj. -75.2 iterations 7
Cbc0038I Pass  29: suminf.    0.46970 (1) obj. -75.2 iterations 4
Cbc0038I Pass  30: suminf.    0.44444 (1) obj. -75.2 iterations 2
Cbc0038I Pass  31: suminf.    1.26938 (5) obj. -75.2 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -71.4 - took 0.02 seconds
Cbc0012I Integer solution of -71.4 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 23 rows 15 columns
Cbc0031I 8 added rows had average density of 16.25
Cbc0013I At root node, 8 cuts changed objective from -108.41676 to -86.999335 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 975 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 362 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -71.40000000000001, took 1603 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 60 times (429 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-18) rows, 36 (-9) columns and 261 (-100) elements
Clp1000I sum of infeasibilities 2.91339e-08 - average 1.00462e-09, 22 fixed columns
Coin0506I Presolve 8 (-21) rows, 13 (-23) columns and 38 (-223) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 2.8761072 - largest nonzero change 2.6651461e-05 ( 0.00091172844%) - largest zero change 1.6281191e-05
Clp0000I Optimal - objective value 70.55
Clp0000I Optimal - objective value 70.55
Coin0511I After Postsolve, objective 70.55, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.156392 - largest nonzero change 1.3831548e-05 ( 0.00091172844%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 125.74756
Clp0000I Optimal - objective value 125.74756
Clp0000I Optimal - objective value 125.74756
Coin0511I After Postsolve, objective 125.74756, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.7475567 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 41 columns (41 integer (41 of which binary)) and 297 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.728%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.53412
Cbc0038I Pass   1: suminf.    1.30617 (10) obj. -45.2637 iterations 5
Cbc0038I Pass   2: suminf.    1.30617 (10) obj. -45.2637 iterations 0
Cbc0038I Solution found of -27.9
Cbc0038I Rounding solution of -71.4 is better than previous of -27.9

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -74
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.46391 (14) obj. -74 iterations 1
Cbc0038I Pass   4: suminf.    2.46391 (14) obj. -74 iterations 0
Cbc0038I Pass   5: suminf.    1.62105 (4) obj. -74 iterations 16
Cbc0038I Pass   6: suminf.    0.74238 (4) obj. -74 iterations 2
Cbc0038I Pass   7: suminf.    1.02965 (4) obj. -74 iterations 2
Cbc0038I Pass   8: suminf.    1.56501 (7) obj. -74 iterations 3
Cbc0038I Pass   9: suminf.    1.56501 (7) obj. -74 iterations 0
Cbc0038I Pass  10: suminf.    1.00333 (4) obj. -74 iterations 4
Cbc0038I Pass  11: suminf.    1.61241 (6) obj. -74 iterations 9
Cbc0038I Pass  12: suminf.    1.44094 (6) obj. -74 iterations 1
Cbc0038I Pass  13: suminf.    1.85756 (7) obj. -74 iterations 5
Cbc0038I Pass  14: suminf.    1.15500 (5) obj. -74 iterations 2
Cbc0038I Pass  15: suminf.    1.14464 (6) obj. -74 iterations 1
Cbc0038I Pass  16: suminf.    1.03548 (4) obj. -74 iterations 4
Cbc0038I Pass  17: suminf.    0.80093 (3) obj. -75.837 iterations 2
Cbc0038I Pass  18: suminf.    0.91500 (3) obj. -74 iterations 3
Cbc0038I Pass  19: suminf.    0.91500 (3) obj. -74 iterations 0
Cbc0038I Pass  20: suminf.    1.03056 (3) obj. -74 iterations 3
Cbc0038I Pass  21: suminf.    2.25045 (6) obj. -74 iterations 5
Cbc0038I Pass  22: suminf.    1.96083 (7) obj. -74 iterations 1
Cbc0038I Pass  23: suminf.    0.91500 (3) obj. -74 iterations 7
Cbc0038I Pass  24: suminf.    3.52059 (11) obj. -74 iterations 10
Cbc0038I Pass  25: suminf.    2.75075 (10) obj. -74 iterations 4
Cbc0038I Pass  26: suminf.    2.27002 (10) obj. -74 iterations 5
Cbc0038I Pass  27: suminf.    1.40573 (8) obj. -74 iterations 2
Cbc0038I Pass  28: suminf.    1.67269 (5) obj. -74 iterations 9
Cbc0038I Pass  29: suminf.    1.34047 (5) obj. -74 iterations 1
Cbc0038I Pass  30: suminf.    0.95700 (4) obj. -74 iterations 3
Cbc0038I Pass  31: suminf.    0.73638 (4) obj. -74 iterations 3
Cbc0038I Pass  32: suminf.    1.64236 (10) obj. -74 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -71.4 - took 0.02 seconds
Cbc0012I Integer solution of -71.4 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 41 columns, reduced to 9 rows 9 columns
Cbc0031I 16 added rows had average density of 15.125
Cbc0013I At root node, 16 cuts changed objective from -96.209004 to -73.628404 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1029 row cuts average 2.9 elements, 9 column cuts (9 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 338 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 130 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.767 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -71.4 best solution, best possible -73.628379 (1.51 seconds)
Cbc0001I Search completed - best objective -71.40000000000001, took 1459 iterations and 8 nodes (1.87 seconds)
Cbc0032I Strong branching done 98 times (500 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.88

