Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 24 (-9) columns and 122 (-61) elements
Clp1000I sum of infeasibilities 5.94177e-05 - average 1.44921e-06, 2 fixed columns
Coin0506I Presolve 35 (-6) rows, 21 (-3) columns and 105 (-17) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.3665403 - largest nonzero change 0 ( 0%) - largest zero change 1.5564116e-05
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Coin0511I After Postsolve, objective 81.340987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Coin0511I After Postsolve, objective 81.340987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.34098656 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 24 columns (23 integer (23 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.122%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.97281
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.0065 iterations 23
Cbc0038I Solution found of -16.0065
Cbc0038I Relaxing continuous gives -16.0065
Cbc0038I Rounding solution of -38.6259 is better than previous of -16.0065

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -38.6259 to -55.1677 (0.01 seconds)
Cbc0038I Round again with cutoff of -57.7851
Cbc0038I Pass   2: suminf.    1.25180 (3) obj. -57.7851 iterations 5
Cbc0038I Pass   3: suminf.    0.98561 (3) obj. -57.7851 iterations 2
Cbc0038I Pass   4: suminf.    0.65524 (2) obj. -57.7851 iterations 4
Cbc0038I Pass   5: suminf.    0.82536 (2) obj. -57.7851 iterations 2
Cbc0038I Pass   6: suminf.    1.26211 (4) obj. -57.7851 iterations 7
Cbc0038I Pass   7: suminf.    1.20099 (4) obj. -57.7851 iterations 2
Cbc0038I Pass   8: suminf.    0.71162 (2) obj. -57.7851 iterations 9
Cbc0038I Pass   9: suminf.    0.56958 (3) obj. -57.7851 iterations 3
Cbc0038I Pass  10: suminf.    0.36609 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  11: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  12: suminf.    1.13888 (4) obj. -57.7851 iterations 4
Cbc0038I Pass  13: suminf.    0.50374 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  14: suminf.    1.83734 (5) obj. -57.7851 iterations 6
Cbc0038I Pass  15: suminf.    0.94817 (4) obj. -57.7851 iterations 7
Cbc0038I Pass  16: suminf.    0.61129 (3) obj. -57.7851 iterations 1
Cbc0038I Pass  17: suminf.    0.71162 (2) obj. -57.7851 iterations 2
Cbc0038I Pass  18: suminf.    0.71162 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  19: suminf.    0.56958 (3) obj. -57.7851 iterations 3
Cbc0038I Pass  20: suminf.    0.36609 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  21: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  22: suminf.    1.13888 (4) obj. -57.7851 iterations 3
Cbc0038I Pass  23: suminf.    0.50374 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  24: suminf.    1.29444 (5) obj. -57.7851 iterations 4
Cbc0038I Pass  25: suminf.    1.08303 (4) obj. -57.7851 iterations 1
Cbc0038I Pass  26: suminf.    0.68895 (3) obj. -57.7851 iterations 1
Cbc0038I Pass  27: suminf.    0.23463 (2) obj. -57.7851 iterations 4
Cbc0038I Pass  28: suminf.    1.23950 (4) obj. -57.7851 iterations 4
Cbc0038I Pass  29: suminf.    0.36609 (2) obj. -57.7851 iterations 6
Cbc0038I Pass  30: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  31: suminf.    1.13888 (4) obj. -57.7851 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -55.1677 to -55.4032 (0.02 seconds)
Cbc0038I Round again with cutoff of -62.4963
Cbc0038I Pass  31: suminf.    1.10129 (4) obj. -62.4963 iterations 3
Cbc0038I Pass  32: suminf.    0.91134 (3) obj. -62.4963 iterations 5
Cbc0038I Pass  33: suminf.    1.39040 (4) obj. -62.4963 iterations 6
Cbc0038I Pass  34: suminf.    0.56263 (3) obj. -62.4963 iterations 3
Cbc0038I Pass  35: suminf.    0.56263 (3) obj. -62.4963 iterations 0
Cbc0038I Pass  36: suminf.    1.64710 (5) obj. -62.4963 iterations 3
Cbc0038I Pass  37: suminf.    0.76522 (5) obj. -62.4963 iterations 14
Cbc0038I Pass  38: suminf.    0.76522 (5) obj. -62.4963 iterations 1
Cbc0038I Pass  39: suminf.    1.20833 (3) obj. -62.4963 iterations 10
Cbc0038I Pass  40: suminf.    0.93508 (3) obj. -62.4963 iterations 1
Cbc0038I Pass  41: suminf.    0.64744 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  42: suminf.    0.57473 (3) obj. -62.4963 iterations 2
Cbc0038I Pass  43: suminf.    0.46058 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  44: suminf.    0.74689 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  45: suminf.    1.41297 (6) obj. -62.4963 iterations 4
Cbc0038I Pass  46: suminf.    0.91623 (5) obj. -62.4963 iterations 2
Cbc0038I Pass  47: suminf.    0.43149 (4) obj. -62.4963 iterations 8
Cbc0038I Pass  48: suminf.    1.14033 (4) obj. -62.4963 iterations 5
Cbc0038I Pass  49: suminf.    0.56777 (2) obj. -62.4963 iterations 3
Cbc0038I Pass  50: suminf.    0.50712 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  51: suminf.    0.97687 (3) obj. -62.4963 iterations 3
Cbc0038I Pass  52: suminf.    0.80312 (2) obj. -62.4963 iterations 7
Cbc0038I Pass  53: suminf.    0.80312 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  54: suminf.    0.90210 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  55: suminf.    0.89324 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  56: suminf.    0.89324 (2) obj. -62.4963 iterations 0
Cbc0038I Pass  57: suminf.    0.72426 (4) obj. -62.4963 iterations 4
Cbc0038I Pass  58: suminf.    0.71710 (4) obj. -62.4963 iterations 1
Cbc0038I Pass  59: suminf.    0.69643 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  60: suminf.    0.64156 (2) obj. -62.4963 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -55.4032 - took 0.06 seconds
Cbc0012I Integer solution of -55.40325 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 24 columns, reduced to 24 rows 14 columns
Cbc0031I 8 added rows had average density of 15.625
Cbc0013I At root node, 8 cuts changed objective from -81.340987 to -64.177169 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 585 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 394 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.40324999999999, took 1640 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 70 times (507 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-18) rows, 51 (-11) columns and 444 (-202) elements
Clp1000I sum of infeasibilities 2.46112e-08 - average 5.46915e-10, 37 fixed columns
Coin0506I Presolve 11 (-34) rows, 14 (-37) columns and 46 (-398) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 84.971578
Clp0000I Optimal - objective value 84.971578
Coin0511I After Postsolve, objective 84.971578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1482878 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 122.37617
Clp0000I Optimal - objective value 122.37617
Clp0000I Optimal - objective value 122.37617
Coin0511I After Postsolve, objective 122.37617, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.3761735 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 45 columns (45 integer (45 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.303%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 6.96079
Cbc0038I Pass   1: suminf.    0.60058 (9) obj. -32.7448 iterations 19
Cbc0038I Pass   2: suminf.    0.60058 (9) obj. -32.7448 iterations 1
Cbc0038I Solution found of -16.0065
Cbc0038I Rounding solution of -25.2065 is better than previous of -16.0065

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -25.2065 to -55.4032 (0.01 seconds)
Cbc0038I Round again with cutoff of -58.3025
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.06106 (21) obj. -58.3025 iterations 9
Cbc0038I Pass   4: suminf.    2.35953 (16) obj. -58.3025 iterations 2
Cbc0038I Pass   5: suminf.    2.01005 (10) obj. -58.3025 iterations 18
Cbc0038I Pass   6: suminf.    2.01005 (10) obj. -58.3025 iterations 0
Cbc0038I Pass   7: suminf.    0.30637 (2) obj. -58.3025 iterations 11
Cbc0038I Pass   8: suminf.    0.25532 (2) obj. -58.3025 iterations 2
Cbc0038I Pass   9: suminf.    0.30637 (2) obj. -58.3025 iterations 2
Cbc0038I Pass  10: suminf.    1.40593 (6) obj. -58.3025 iterations 16
Cbc0038I Pass  11: suminf.    1.12418 (3) obj. -58.3025 iterations 5
Cbc0038I Pass  12: suminf.    1.38979 (4) obj. -58.3025 iterations 3
Cbc0038I Pass  13: suminf.    1.77440 (4) obj. -58.3025 iterations 3
Cbc0038I Pass  14: suminf.    0.45887 (3) obj. -58.3025 iterations 9
Cbc0038I Pass  15: suminf.    0.25532 (2) obj. -58.3025 iterations 3
Cbc0038I Pass  16: suminf.    0.30637 (2) obj. -58.3025 iterations 2
Cbc0038I Pass  17: suminf.    2.07847 (8) obj. -58.3025 iterations 13
Cbc0038I Pass  18: suminf.    1.40598 (7) obj. -58.3025 iterations 3
Cbc0038I Pass  19: suminf.    0.50766 (3) obj. -58.3025 iterations 11
Cbc0038I Pass  20: suminf.    0.12000 (2) obj. -60.8644 iterations 7
Cbc0038I Pass  21: suminf.    0.45887 (3) obj. -58.3025 iterations 6
Cbc0038I Pass  22: suminf.    0.25532 (2) obj. -58.3025 iterations 3
Cbc0038I Pass  23: suminf.    0.30637 (2) obj. -58.3025 iterations 2
Cbc0038I Pass  24: suminf.    0.83434 (4) obj. -58.3025 iterations 5
Cbc0038I Pass  25: suminf.    0.60695 (4) obj. -58.3025 iterations 2
Cbc0038I Pass  26: suminf.    2.30951 (9) obj. -58.3025 iterations 10
Cbc0038I Pass  27: suminf.    0.83491 (4) obj. -58.3025 iterations 7
Cbc0038I Pass  28: suminf.    0.50682 (2) obj. -58.3025 iterations 11
Cbc0038I Pass  29: suminf.    0.41252 (7) obj. -58.3025 iterations 1
Cbc0038I Pass  30: suminf.    1.74772 (5) obj. -58.3025 iterations 10
Cbc0038I Pass  31: suminf.    0.99696 (4) obj. -58.3025 iterations 3
Cbc0038I Pass  32: suminf.    0.27222 (3) obj. -58.3025 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 34 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -55.4032 - took 0.02 seconds
Cbc0012I Integer solution of -55.40325 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 45 columns, reduced to 5 rows 5 columns
Cbc0031I 17 added rows had average density of 10.470588
Cbc0013I At root node, 17 cuts changed objective from -84.394597 to -59.350838 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 440 row cuts average 2.6 elements, 13 column cuts (13 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 396 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 71 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 143 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -55.40325 best solution, best possible -59.350838 (1.48 seconds)
Cbc0001I Search completed - best objective -55.40324999999999, took 1357 iterations and 8 nodes (1.73 seconds)
Cbc0032I Strong branching done 76 times (545 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.74

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 24 (-9) columns and 122 (-61) elements
Clp1000I sum of infeasibilities 5.94177e-05 - average 1.44921e-06, 2 fixed columns
Coin0506I Presolve 35 (-6) rows, 21 (-3) columns and 105 (-17) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.3665403 - largest nonzero change 0 ( 0%) - largest zero change 1.5564116e-05
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Coin0511I After Postsolve, objective 81.340987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Coin0511I After Postsolve, objective 81.340987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.34098656 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 24 columns (23 integer (23 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.122%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.97281
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.0065 iterations 23
Cbc0038I Solution found of -16.0065
Cbc0038I Relaxing continuous gives -16.0065
Cbc0038I Rounding solution of -38.6259 is better than previous of -16.0065

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -38.6259 to -55.1677 (0.02 seconds)
Cbc0038I Round again with cutoff of -57.7851
Cbc0038I Pass   2: suminf.    1.25180 (3) obj. -57.7851 iterations 5
Cbc0038I Pass   3: suminf.    0.98561 (3) obj. -57.7851 iterations 2
Cbc0038I Pass   4: suminf.    0.65524 (2) obj. -57.7851 iterations 4
Cbc0038I Pass   5: suminf.    0.82536 (2) obj. -57.7851 iterations 2
Cbc0038I Pass   6: suminf.    1.26211 (4) obj. -57.7851 iterations 7
Cbc0038I Pass   7: suminf.    1.20099 (4) obj. -57.7851 iterations 2
Cbc0038I Pass   8: suminf.    0.71162 (2) obj. -57.7851 iterations 9
Cbc0038I Pass   9: suminf.    0.56958 (3) obj. -57.7851 iterations 3
Cbc0038I Pass  10: suminf.    0.36609 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  11: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  12: suminf.    1.13888 (4) obj. -57.7851 iterations 4
Cbc0038I Pass  13: suminf.    0.50374 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  14: suminf.    1.83734 (5) obj. -57.7851 iterations 6
Cbc0038I Pass  15: suminf.    0.94817 (4) obj. -57.7851 iterations 7
Cbc0038I Pass  16: suminf.    0.61129 (3) obj. -57.7851 iterations 1
Cbc0038I Pass  17: suminf.    0.71162 (2) obj. -57.7851 iterations 2
Cbc0038I Pass  18: suminf.    0.71162 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  19: suminf.    0.56958 (3) obj. -57.7851 iterations 3
Cbc0038I Pass  20: suminf.    0.36609 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  21: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  22: suminf.    1.13888 (4) obj. -57.7851 iterations 3
Cbc0038I Pass  23: suminf.    0.50374 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  24: suminf.    1.29444 (5) obj. -57.7851 iterations 4
Cbc0038I Pass  25: suminf.    1.08303 (4) obj. -57.7851 iterations 1
Cbc0038I Pass  26: suminf.    0.68895 (3) obj. -57.7851 iterations 1
Cbc0038I Pass  27: suminf.    0.23463 (2) obj. -57.7851 iterations 4
Cbc0038I Pass  28: suminf.    1.23950 (4) obj. -57.7851 iterations 4
Cbc0038I Pass  29: suminf.    0.36609 (2) obj. -57.7851 iterations 6
Cbc0038I Pass  30: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  31: suminf.    1.13888 (4) obj. -57.7851 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -55.1677 to -55.4032 (0.03 seconds)
Cbc0038I Round again with cutoff of -62.4963
Cbc0038I Pass  31: suminf.    1.10129 (4) obj. -62.4963 iterations 3
Cbc0038I Pass  32: suminf.    0.91134 (3) obj. -62.4963 iterations 5
Cbc0038I Pass  33: suminf.    1.39040 (4) obj. -62.4963 iterations 6
Cbc0038I Pass  34: suminf.    0.56263 (3) obj. -62.4963 iterations 3
Cbc0038I Pass  35: suminf.    0.56263 (3) obj. -62.4963 iterations 0
Cbc0038I Pass  36: suminf.    1.64710 (5) obj. -62.4963 iterations 3
Cbc0038I Pass  37: suminf.    0.76522 (5) obj. -62.4963 iterations 14
Cbc0038I Pass  38: suminf.    0.76522 (5) obj. -62.4963 iterations 1
Cbc0038I Pass  39: suminf.    1.20833 (3) obj. -62.4963 iterations 10
Cbc0038I Pass  40: suminf.    0.93508 (3) obj. -62.4963 iterations 1
Cbc0038I Pass  41: suminf.    0.64744 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  42: suminf.    0.57473 (3) obj. -62.4963 iterations 2
Cbc0038I Pass  43: suminf.    0.46058 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  44: suminf.    0.74689 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  45: suminf.    1.41297 (6) obj. -62.4963 iterations 4
Cbc0038I Pass  46: suminf.    0.91623 (5) obj. -62.4963 iterations 2
Cbc0038I Pass  47: suminf.    0.43149 (4) obj. -62.4963 iterations 8
Cbc0038I Pass  48: suminf.    1.14033 (4) obj. -62.4963 iterations 5
Cbc0038I Pass  49: suminf.    0.56777 (2) obj. -62.4963 iterations 3
Cbc0038I Pass  50: suminf.    0.50712 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  51: suminf.    0.97687 (3) obj. -62.4963 iterations 3
Cbc0038I Pass  52: suminf.    0.80312 (2) obj. -62.4963 iterations 7
Cbc0038I Pass  53: suminf.    0.80312 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  54: suminf.    0.90210 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  55: suminf.    0.89324 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  56: suminf.    0.89324 (2) obj. -62.4963 iterations 0
Cbc0038I Pass  57: suminf.    0.72426 (4) obj. -62.4963 iterations 4
Cbc0038I Pass  58: suminf.    0.71710 (4) obj. -62.4963 iterations 1
Cbc0038I Pass  59: suminf.    0.69643 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  60: suminf.    0.64156 (2) obj. -62.4963 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -55.4032 - took 0.03 seconds
Cbc0012I Integer solution of -55.40325 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 24 columns, reduced to 24 rows 14 columns
Cbc0031I 8 added rows had average density of 15.625
Cbc0013I At root node, 8 cuts changed objective from -81.340987 to -64.177169 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 585 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 394 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.40324999999999, took 1640 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 70 times (507 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 45 (-18) columns and 343 (-306) elements
Clp1000I sum of infeasibilities 1.48734e-08 - average 3.71836e-10, 6 fixed columns
Coin0506I Presolve 36 (-4) rows, 38 (-7) columns and 274 (-69) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 1.2421255 - largest nonzero change 0 ( 0%) - largest zero change 2.8021102e-05
Clp0000I Optimal - objective value 98.220772
Clp0000I Optimal - objective value 98.220772
Coin0511I After Postsolve, objective 98.220772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.220772
Clp0000I Optimal - objective value 98.220772
Clp0000I Optimal - objective value 98.220772
Coin0511I After Postsolve, objective 98.220772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.22077225 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 45 columns (45 integer (45 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.327%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.31022
Cbc0038I Pass   1: suminf.    0.60058 (9) obj. -32.7448 iterations 10
Cbc0038I Pass   2: suminf.    0.60058 (9) obj. -32.7448 iterations 0
Cbc0038I Solution found of -16.0065
Cbc0038I Rounding solution of -25.2065 is better than previous of -16.0065

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.2065 to -55.4032 (0.01 seconds)
Cbc0038I Round again with cutoff of -58.2944
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.05996 (21) obj. -58.2944 iterations 1
Cbc0038I Pass   4: suminf.    2.15664 (15) obj. -58.2944 iterations 1
Cbc0038I Pass   5: suminf.    1.76389 (15) obj. -58.2944 iterations 1
Cbc0038I Pass   6: suminf.    1.85724 (9) obj. -58.2944 iterations 23
Cbc0038I Pass   7: suminf.    1.75547 (8) obj. -58.2944 iterations 3
Cbc0038I Pass   8: suminf.    1.30661 (7) obj. -58.2944 iterations 1
Cbc0038I Pass   9: suminf.    1.38788 (4) obj. -58.2944 iterations 11
Cbc0038I Pass  10: suminf.    1.38788 (4) obj. -58.2944 iterations 0
Cbc0038I Pass  11: suminf.    1.77432 (4) obj. -58.2944 iterations 3
Cbc0038I Pass  12: suminf.    0.46586 (3) obj. -58.2944 iterations 6
Cbc0038I Pass  13: suminf.    0.25491 (2) obj. -58.2944 iterations 4
Cbc0038I Pass  14: suminf.    0.30782 (2) obj. -58.2944 iterations 2
Cbc0038I Pass  15: suminf.    1.82406 (7) obj. -58.2944 iterations 10
Cbc0038I Pass  16: suminf.    0.66349 (8) obj. -58.2944 iterations 4
Cbc0038I Pass  17: suminf.    1.42113 (4) obj. -58.2944 iterations 11
Cbc0038I Pass  18: suminf.    0.26155 (4) obj. -58.2944 iterations 7
Cbc0038I Pass  19: suminf.    0.63151 (3) obj. -58.2944 iterations 7
Cbc0038I Pass  20: suminf.    0.56679 (2) obj. -58.2944 iterations 2
Cbc0038I Pass  21: suminf.    0.27746 (2) obj. -58.2944 iterations 2
Cbc0038I Pass  22: suminf.    1.86360 (10) obj. -58.2944 iterations 14
Cbc0038I Pass  23: suminf.    1.86360 (10) obj. -58.2944 iterations 0
Cbc0038I Pass  24: suminf.    0.31647 (2) obj. -58.2944 iterations 12
Cbc0038I Pass  25: suminf.    0.25491 (2) obj. -58.2944 iterations 12
Cbc0038I Pass  26: suminf.    0.30782 (2) obj. -58.2944 iterations 2
Cbc0038I Pass  27: suminf.    0.61803 (3) obj. -59.1891 iterations 14
Cbc0038I Pass  28: suminf.    0.61803 (3) obj. -59.1891 iterations 1
Cbc0038I Pass  29: suminf.    0.41050 (7) obj. -58.2944 iterations 11
Cbc0038I Pass  30: suminf.    2.05270 (7) obj. -58.2944 iterations 9
Cbc0038I Pass  31: suminf.    2.05270 (7) obj. -58.2944 iterations 0
Cbc0038I Pass  32: suminf.    0.46586 (3) obj. -58.2944 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -55.4032 - took 0.01 seconds
Cbc0012I Integer solution of -55.40325 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 39 rows 45 columns, reduced to 6 rows 6 columns
Cbc0031I 13 added rows had average density of 12.307692
Cbc0013I At root node, 13 cuts changed objective from -84.31393 to -58.497749 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 495 row cuts average 2.7 elements, 15 column cuts (16 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 503 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 25 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 198 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -55.40325 best solution, best possible -58.497164 (1.44 seconds)
Cbc0001I Search completed - best objective -55.40324999999999, took 1540 iterations and 6 nodes (1.72 seconds)
Cbc0032I Strong branching done 58 times (446 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 7 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.72

