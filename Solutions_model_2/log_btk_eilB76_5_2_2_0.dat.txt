Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 68 (-10) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 1.85336e-05 - average 1.53171e-07, 7 fixed columns
Coin0506I Presolve 108 (-13) rows, 61 (-7) columns and 330 (-40) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 1.8075759 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 40.255307
Clp0000I Optimal - objective value 40.255307
Coin0511I After Postsolve, objective 40.255307, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.255307
Clp0000I Optimal - objective value 40.255307
Clp0000I Optimal - objective value 40.255307
Coin0511I After Postsolve, objective 40.255307, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.25530686 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 68 columns (67 integer (67 of which binary)) and 439 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.973%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 3.99347
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.06188 iterations 31
Cbc0038I Solution found of -8.06188
Cbc0038I Relaxing continuous gives -8.06188
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 68 columns, reduced to 38 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -8.06188 to -15.8392 (0.02 seconds)
Cbc0038I Round again with cutoff of -18.2795
Cbc0038I Pass   2: suminf.    0.73879 (2) obj. -18.2795 iterations 5
Cbc0038I Pass   3: suminf.    0.47743 (2) obj. -18.2795 iterations 9
Cbc0038I Pass   4: suminf.    0.47326 (2) obj. -18.2795 iterations 2
Cbc0038I Pass   5: suminf.    0.73879 (2) obj. -18.2795 iterations 1
Cbc0038I Pass   6: suminf.    1.16359 (4) obj. -18.2795 iterations 14
Cbc0038I Pass   7: suminf.    1.06279 (3) obj. -18.2795 iterations 3
Cbc0038I Pass   8: suminf.    0.88467 (2) obj. -18.2795 iterations 6
Cbc0038I Pass   9: suminf.    0.22199 (3) obj. -18.2795 iterations 6
Cbc0038I Pass  10: suminf.    1.65675 (5) obj. -18.2795 iterations 7
Cbc0038I Pass  11: suminf.    1.29418 (4) obj. -18.2795 iterations 6
Cbc0038I Pass  12: suminf.    0.73879 (2) obj. -18.2795 iterations 7
Cbc0038I Pass  13: suminf.    0.73879 (2) obj. -18.2795 iterations 0
Cbc0038I Pass  14: suminf.    0.47743 (2) obj. -18.2795 iterations 9
Cbc0038I Pass  15: suminf.    0.47326 (2) obj. -18.2795 iterations 2
Cbc0038I Pass  16: suminf.    1.52101 (5) obj. -18.2795 iterations 16
Cbc0038I Pass  17: suminf.    0.83623 (3) obj. -18.2795 iterations 12
Cbc0038I Pass  18: suminf.    0.76377 (2) obj. -18.2795 iterations 4
Cbc0038I Pass  19: suminf.    0.22199 (3) obj. -18.2795 iterations 3
Cbc0038I Pass  20: suminf.    0.73879 (2) obj. -18.2795 iterations 6
Cbc0038I Pass  21: suminf.    0.73879 (2) obj. -18.2795 iterations 0
Cbc0038I Pass  22: suminf.    0.47743 (2) obj. -18.2795 iterations 9
Cbc0038I Pass  23: suminf.    0.47326 (2) obj. -18.2795 iterations 2
Cbc0038I Pass  24: suminf.    2.82329 (10) obj. -18.2795 iterations 21
Cbc0038I Pass  25: suminf.    1.70229 (5) obj. -18.2795 iterations 18
Cbc0038I Pass  26: suminf.    0.58550 (3) obj. -18.2795 iterations 7
Cbc0038I Pass  27: suminf.    0.73879 (2) obj. -18.2795 iterations 5
Cbc0038I Pass  28: suminf.    0.47743 (2) obj. -18.2795 iterations 9
Cbc0038I Pass  29: suminf.    0.47326 (2) obj. -18.2795 iterations 2
Cbc0038I Pass  30: suminf.    0.73879 (2) obj. -18.2795 iterations 1
Cbc0038I Pass  31: suminf.    1.24590 (4) obj. -18.2795 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 68 columns, reduced to 60 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -15.8392 - took 0.02 seconds
Cbc0012I Integer solution of -15.8392 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 114 rows 68 columns, reduced to 38 rows 19 columns
Cbc0031I 15 added rows had average density of 34.6
Cbc0013I At root node, 15 cuts changed objective from -40.240959 to -27.850292 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3813 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1074 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15.8392, took 4689 iterations and 24 nodes (0.44 seconds)
Cbc0032I Strong branching done 350 times (6460 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 11, 68 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 118 (-34) columns and 1823 (-1480) elements
Clp1000I sum of infeasibilities 6.27068e-08 - average 5.97208e-10, 106 fixed columns
Coin0506I Presolve 12 (-93) rows, 12 (-106) columns and 43 (-1780) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 45.669829
Clp0000I Optimal - objective value 45.669829
Coin0511I After Postsolve, objective 45.669829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6203171 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 126.28301
Clp0000I Optimal - objective value 126.28301
Clp0000I Optimal - objective value 126.28301
Coin0511I After Postsolve, objective 126.28301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.2830138 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 65 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 112 columns (112 integer (112 of which binary)) and 1675 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.437%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 2.95438
Cbc0038I Pass   1: suminf.    0.39586 (16) obj. -30.2511 iterations 19
Cbc0038I Pass   2: suminf.    0.39586 (16) obj. -30.2511 iterations 1
Cbc0038I Solution found of -1.99078
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 112 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1.99078 to -4.68688 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.1774
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.39586 (16) obj. -30.2511 iterations 0
Cbc0038I Pass   4: suminf.    0.39586 (16) obj. -30.2511 iterations 1
Cbc0038I Pass   5: suminf.    0.48175 (16) obj. -8.1774 iterations 49
Cbc0038I Pass   6: suminf.    0.48175 (16) obj. -8.1774 iterations 0
Cbc0038I Pass   7: suminf.    0.88824 (7) obj. -8.1774 iterations 21
Cbc0038I Pass   8: suminf.    0.63985 (7) obj. -9.06537 iterations 2
Cbc0038I Pass   9: suminf.    0.95546 (5) obj. -8.1774 iterations 19
Cbc0038I Pass  10: suminf.    0.96551 (4) obj. -8.1774 iterations 2
Cbc0038I Pass  11: suminf.    0.64604 (4) obj. -8.1774 iterations 11
Cbc0038I Pass  12: suminf.    0.33300 (4) obj. -8.1774 iterations 5
Cbc0038I Pass  13: suminf.    1.02661 (5) obj. -8.1774 iterations 16
Cbc0038I Pass  14: suminf.    0.77373 (5) obj. -8.1774 iterations 10
Cbc0038I Pass  15: suminf.    0.40126 (5) obj. -9.2144 iterations 2
Cbc0038I Pass  16: suminf.    0.95546 (5) obj. -8.1774 iterations 13
Cbc0038I Pass  17: suminf.    0.96551 (4) obj. -8.1774 iterations 2
Cbc0038I Pass  18: suminf.    0.64604 (4) obj. -8.1774 iterations 11
Cbc0038I Pass  19: suminf.    0.33300 (4) obj. -8.1774 iterations 5
Cbc0038I Pass  20: suminf.    1.02661 (5) obj. -8.1774 iterations 16
Cbc0038I Pass  21: suminf.    0.77373 (5) obj. -8.1774 iterations 10
Cbc0038I Pass  22: suminf.    0.40126 (5) obj. -9.2144 iterations 2
Cbc0038I Pass  23: suminf.    0.95546 (5) obj. -8.1774 iterations 13
Cbc0038I Pass  24: suminf.    0.96551 (4) obj. -8.1774 iterations 2
Cbc0038I Pass  25: suminf.    0.64604 (4) obj. -8.1774 iterations 11
Cbc0038I Pass  26: suminf.    0.33300 (4) obj. -8.1774 iterations 5
Cbc0038I Pass  27: suminf.    1.02661 (5) obj. -8.1774 iterations 16
Cbc0038I Pass  28: suminf.    0.77373 (5) obj. -8.1774 iterations 10
Cbc0038I Pass  29: suminf.    0.40126 (5) obj. -9.2144 iterations 2
Cbc0038I Pass  30: suminf.    0.95546 (5) obj. -8.1774 iterations 13
Cbc0038I Pass  31: suminf.    0.96551 (4) obj. -8.1774 iterations 2
Cbc0038I Pass  32: suminf.    0.64604 (4) obj. -8.1774 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 112 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -4.68688 to -11.3025 (0.06 seconds)
Cbc0038I Round again with cutoff of -16.9603
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.39586 (16) obj. -30.2511 iterations 0
Cbc0038I Pass  33: suminf.    0.39586 (16) obj. -30.2511 iterations 1
Cbc0038I Pass  34: suminf.    1.52838 (17) obj. -16.9603 iterations 52
Cbc0038I Pass  35: suminf.    1.52838 (17) obj. -16.9603 iterations 4
Cbc0038I Pass  36: suminf.    1.98425 (9) obj. -16.9603 iterations 29
Cbc0038I Pass  37: suminf.    1.98425 (9) obj. -16.9603 iterations 0
Cbc0038I Pass  38: suminf.    1.81824 (9) obj. -16.9603 iterations 9
Cbc0038I Pass  39: suminf.    1.81824 (9) obj. -16.9603 iterations 5
Cbc0038I Pass  40: suminf.    1.98425 (9) obj. -16.9603 iterations 9
Cbc0038I Pass  41: suminf.    1.51584 (14) obj. -16.9603 iterations 26
Cbc0038I Pass  42: suminf.    1.16769 (15) obj. -16.9603 iterations 9
Cbc0038I Pass  43: suminf.    2.12828 (10) obj. -16.9603 iterations 25
Cbc0038I Pass  44: suminf.    1.84701 (11) obj. -16.9603 iterations 1
Cbc0038I Pass  45: suminf.    2.12828 (10) obj. -16.9603 iterations 11
Cbc0038I Pass  46: suminf.    2.36365 (14) obj. -16.9603 iterations 15
Cbc0038I Pass  47: suminf.    2.28621 (14) obj. -16.9603 iterations 6
Cbc0038I Pass  48: suminf.    2.82177 (12) obj. -16.9603 iterations 14
Cbc0038I Pass  49: suminf.    2.82177 (12) obj. -16.9603 iterations 4
Cbc0038I Pass  50: suminf.    2.50215 (12) obj. -16.9603 iterations 8
Cbc0038I Pass  51: suminf.    2.50215 (12) obj. -16.9603 iterations 4
Cbc0038I Pass  52: suminf.    2.82177 (12) obj. -16.9603 iterations 9
Cbc0038I Pass  53: suminf.    2.76239 (23) obj. -16.9603 iterations 15
Cbc0038I Pass  54: suminf.    2.53069 (15) obj. -16.9603 iterations 7
Cbc0038I Pass  55: suminf.    2.89711 (14) obj. -16.9603 iterations 15
Cbc0038I Pass  56: suminf.    2.64103 (15) obj. -16.9603 iterations 7
Cbc0038I Pass  57: suminf.    2.89711 (14) obj. -16.9603 iterations 13
Cbc0038I Pass  58: suminf.    2.14022 (18) obj. -16.9603 iterations 11
Cbc0038I Pass  59: suminf.    1.65621 (17) obj. -16.9603 iterations 6
Cbc0038I Pass  60: suminf.    2.91755 (16) obj. -16.9603 iterations 27
Cbc0038I Pass  61: suminf.    2.69658 (16) obj. -16.9603 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 112 columns, reduced to 47 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -11.3025 to -15.8392 (0.09 seconds)
Cbc0038I Round again with cutoff of -23.7496
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.39586 (16) obj. -30.2511 iterations 0
Cbc0038I Pass  62: suminf.    0.39586 (16) obj. -30.2511 iterations 1
Cbc0038I Pass  63: suminf.    2.17221 (19) obj. -23.7496 iterations 31
Cbc0038I Pass  64: suminf.    2.17221 (19) obj. -23.7496 iterations 3
Cbc0038I Pass  65: suminf.    3.09359 (14) obj. -23.7496 iterations 35
Cbc0038I Pass  66: suminf.    3.09359 (14) obj. -23.7496 iterations 0
Cbc0038I Pass  67: suminf.    3.06793 (14) obj. -23.7496 iterations 5
Cbc0038I Pass  68: suminf.    3.06793 (14) obj. -23.7496 iterations 3
Cbc0038I Pass  69: suminf.    3.09359 (14) obj. -23.7496 iterations 11
Cbc0038I Pass  70: suminf.    2.90792 (17) obj. -23.7496 iterations 11
Cbc0038I Pass  71: suminf.    2.86705 (17) obj. -23.7496 iterations 6
Cbc0038I Pass  72: suminf.    3.10785 (16) obj. -23.7496 iterations 17
Cbc0038I Pass  73: suminf.    2.75709 (17) obj. -23.7496 iterations 5
Cbc0038I Pass  74: suminf.    3.10785 (16) obj. -23.7496 iterations 12
Cbc0038I Pass  75: suminf.    3.10785 (17) obj. -23.7496 iterations 9
Cbc0038I Pass  76: suminf.    2.89168 (18) obj. -23.7496 iterations 6
Cbc0038I Pass  77: suminf.    3.10785 (17) obj. -23.7496 iterations 15
Cbc0038I Pass  78: suminf.    2.75709 (17) obj. -23.7496 iterations 5
Cbc0038I Pass  79: suminf.    3.10785 (16) obj. -23.7496 iterations 12
Cbc0038I Pass  80: suminf.    3.10785 (18) obj. -23.7496 iterations 14
Cbc0038I Pass  81: suminf.    2.94661 (19) obj. -23.7496 iterations 3
Cbc0038I Pass  82: suminf.    3.10785 (18) obj. -23.7496 iterations 11
Cbc0038I Pass  83: suminf.    2.89585 (18) obj. -23.7496 iterations 5
Cbc0038I Pass  84: suminf.    3.10785 (17) obj. -23.7496 iterations 11
Cbc0038I Pass  85: suminf.    2.00641 (20) obj. -23.7496 iterations 15
Cbc0038I Pass  86: suminf.    2.00641 (20) obj. -23.7496 iterations 1
Cbc0038I Pass  87: suminf.    1.93964 (21) obj. -23.7496 iterations 13
Cbc0038I Pass  88: suminf.    1.90091 (20) obj. -23.7496 iterations 5
Cbc0038I Pass  89: suminf.    1.93964 (21) obj. -23.7496 iterations 8
Cbc0038I Pass  90: suminf.    1.90091 (20) obj. -23.7496 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 112 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -15.8392 - took 0.08 seconds
Cbc0012I Integer solution of -15.8392 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 92 rows 112 columns, reduced to 18 rows 20 columns
Cbc0031I 63 added rows had average density of 13.428571
Cbc0013I At root node, 63 cuts changed objective from -39.59117 to -19.422881 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 2663 row cuts average 7.8 elements, 10 column cuts (10 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 142 row cuts average 63.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 151 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 150 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 139 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 249 row cuts average 58.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15.8392 best solution, best possible -19.422881 (0.67 seconds)
Cbc0001I Search completed - best objective -15.8392, took 1163 iterations and 4 nodes (0.98 seconds)
Cbc0032I Strong branching done 178 times (4468 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.75   (Wallclock seconds):       0.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 68 (-10) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 1.85336e-05 - average 1.53171e-07, 7 fixed columns
Coin0506I Presolve 108 (-13) rows, 61 (-7) columns and 330 (-40) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 1.8075759 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 40.255307
Clp0000I Optimal - objective value 40.255307
Coin0511I After Postsolve, objective 40.255307, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.255307
Clp0000I Optimal - objective value 40.255307
Clp0000I Optimal - objective value 40.255307
Coin0511I After Postsolve, objective 40.255307, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.25530686 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 68 columns (67 integer (67 of which binary)) and 439 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.973%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 3.99347
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.06188 iterations 31
Cbc0038I Solution found of -8.06188
Cbc0038I Relaxing continuous gives -8.06188
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 68 columns, reduced to 38 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -8.06188 to -15.8392 (0.03 seconds)
Cbc0038I Round again with cutoff of -18.2795
Cbc0038I Pass   2: suminf.    0.73879 (2) obj. -18.2795 iterations 5
Cbc0038I Pass   3: suminf.    0.47743 (2) obj. -18.2795 iterations 9
Cbc0038I Pass   4: suminf.    0.47326 (2) obj. -18.2795 iterations 2
Cbc0038I Pass   5: suminf.    0.73879 (2) obj. -18.2795 iterations 1
Cbc0038I Pass   6: suminf.    1.16359 (4) obj. -18.2795 iterations 14
Cbc0038I Pass   7: suminf.    1.06279 (3) obj. -18.2795 iterations 3
Cbc0038I Pass   8: suminf.    0.88467 (2) obj. -18.2795 iterations 6
Cbc0038I Pass   9: suminf.    0.22199 (3) obj. -18.2795 iterations 6
Cbc0038I Pass  10: suminf.    1.65675 (5) obj. -18.2795 iterations 7
Cbc0038I Pass  11: suminf.    1.29418 (4) obj. -18.2795 iterations 6
Cbc0038I Pass  12: suminf.    0.73879 (2) obj. -18.2795 iterations 7
Cbc0038I Pass  13: suminf.    0.73879 (2) obj. -18.2795 iterations 0
Cbc0038I Pass  14: suminf.    0.47743 (2) obj. -18.2795 iterations 9
Cbc0038I Pass  15: suminf.    0.47326 (2) obj. -18.2795 iterations 2
Cbc0038I Pass  16: suminf.    1.52101 (5) obj. -18.2795 iterations 16
Cbc0038I Pass  17: suminf.    0.83623 (3) obj. -18.2795 iterations 12
Cbc0038I Pass  18: suminf.    0.76377 (2) obj. -18.2795 iterations 4
Cbc0038I Pass  19: suminf.    0.22199 (3) obj. -18.2795 iterations 3
Cbc0038I Pass  20: suminf.    0.73879 (2) obj. -18.2795 iterations 6
Cbc0038I Pass  21: suminf.    0.73879 (2) obj. -18.2795 iterations 0
Cbc0038I Pass  22: suminf.    0.47743 (2) obj. -18.2795 iterations 9
Cbc0038I Pass  23: suminf.    0.47326 (2) obj. -18.2795 iterations 2
Cbc0038I Pass  24: suminf.    2.82329 (10) obj. -18.2795 iterations 21
Cbc0038I Pass  25: suminf.    1.70229 (5) obj. -18.2795 iterations 18
Cbc0038I Pass  26: suminf.    0.58550 (3) obj. -18.2795 iterations 7
Cbc0038I Pass  27: suminf.    0.73879 (2) obj. -18.2795 iterations 5
Cbc0038I Pass  28: suminf.    0.47743 (2) obj. -18.2795 iterations 9
Cbc0038I Pass  29: suminf.    0.47326 (2) obj. -18.2795 iterations 2
Cbc0038I Pass  30: suminf.    0.73879 (2) obj. -18.2795 iterations 1
Cbc0038I Pass  31: suminf.    1.24590 (4) obj. -18.2795 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 68 columns, reduced to 60 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -15.8392 - took 0.03 seconds
Cbc0012I Integer solution of -15.8392 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 114 rows 68 columns, reduced to 38 rows 19 columns
Cbc0031I 15 added rows had average density of 34.6
Cbc0013I At root node, 15 cuts changed objective from -40.240959 to -27.850292 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3813 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1074 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15.8392, took 4689 iterations and 24 nodes (0.55 seconds)
Cbc0032I Strong branching done 350 times (6460 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 11, 68 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 112 (-41) columns and 1640 (-1664) elements
Clp1000I sum of infeasibilities 3.03062e-06 - average 3.06123e-08, 26 fixed columns
Coin0506I Presolve 74 (-25) rows, 84 (-28) columns and 925 (-715) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.9577594 - largest nonzero change 2.2236427e-05 ( 0.0015420975%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 61.350888
Clp0000I Optimal - objective value 61.350888
Coin0511I After Postsolve, objective 61.350888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6708403 - largest nonzero change 1.4983042e-05 ( 0.00089819337%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 61.350888
Clp0000I Optimal - objective value 61.350888
Clp0000I Optimal - objective value 61.350888
Coin0511I After Postsolve, objective 61.350888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.35088794 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 112 columns (112 integer (112 of which binary)) and 1676 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.429%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 2.73065
Cbc0038I Pass   1: suminf.    0.39847 (16) obj. -30.245 iterations 16
Cbc0038I Pass   2: suminf.    0.39847 (16) obj. -30.245 iterations 1
Cbc0038I Solution found of -1.99078
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 112 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1.99078 to -4.68688 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.20226
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.39847 (16) obj. -30.245 iterations 0
Cbc0038I Pass   4: suminf.    0.39847 (16) obj. -30.245 iterations 1
Cbc0038I Pass   5: suminf.    0.47951 (16) obj. -8.20226 iterations 41
Cbc0038I Pass   6: suminf.    0.47951 (16) obj. -8.20226 iterations 0
Cbc0038I Pass   7: suminf.    0.85615 (7) obj. -8.20226 iterations 20
Cbc0038I Pass   8: suminf.    0.60701 (7) obj. -9.09631 iterations 2
Cbc0038I Pass   9: suminf.    0.95357 (5) obj. -8.20226 iterations 19
Cbc0038I Pass  10: suminf.    0.96233 (4) obj. -8.20226 iterations 2
Cbc0038I Pass  11: suminf.    0.63983 (4) obj. -8.20226 iterations 11
Cbc0038I Pass  12: suminf.    0.33922 (4) obj. -8.20226 iterations 5
Cbc0038I Pass  13: suminf.    1.03488 (5) obj. -8.20226 iterations 14
Cbc0038I Pass  14: suminf.    0.76523 (5) obj. -8.20226 iterations 6
Cbc0038I Pass  15: suminf.    0.40189 (5) obj. -9.21186 iterations 2
Cbc0038I Pass  16: suminf.    0.95357 (5) obj. -8.20226 iterations 11
Cbc0038I Pass  17: suminf.    0.96233 (4) obj. -8.20226 iterations 2
Cbc0038I Pass  18: suminf.    0.63983 (4) obj. -8.20226 iterations 11
Cbc0038I Pass  19: suminf.    0.33922 (4) obj. -8.20226 iterations 5
Cbc0038I Pass  20: suminf.    1.03488 (5) obj. -8.20226 iterations 14
Cbc0038I Pass  21: suminf.    0.76523 (5) obj. -8.20226 iterations 6
Cbc0038I Pass  22: suminf.    0.40189 (5) obj. -9.21186 iterations 2
Cbc0038I Pass  23: suminf.    0.95357 (5) obj. -8.20226 iterations 11
Cbc0038I Pass  24: suminf.    0.96233 (4) obj. -8.20226 iterations 2
Cbc0038I Pass  25: suminf.    0.63983 (4) obj. -8.20226 iterations 11
Cbc0038I Pass  26: suminf.    0.33922 (4) obj. -8.20226 iterations 5
Cbc0038I Pass  27: suminf.    1.03488 (5) obj. -8.20226 iterations 14
Cbc0038I Pass  28: suminf.    0.76523 (5) obj. -8.20226 iterations 6
Cbc0038I Pass  29: suminf.    0.40189 (5) obj. -9.21186 iterations 2
Cbc0038I Pass  30: suminf.    0.95357 (5) obj. -8.20226 iterations 11
Cbc0038I Pass  31: suminf.    0.96233 (4) obj. -8.20226 iterations 2
Cbc0038I Pass  32: suminf.    0.63983 (4) obj. -8.20226 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 112 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -4.68688 to -11.3025 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.01
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.39847 (16) obj. -30.245 iterations 0
Cbc0038I Pass  33: suminf.    0.39847 (16) obj. -30.245 iterations 1
Cbc0038I Pass  34: suminf.    1.49270 (17) obj. -17.01 iterations 48
Cbc0038I Pass  35: suminf.    1.49270 (17) obj. -17.01 iterations 3
Cbc0038I Pass  36: suminf.    1.93486 (9) obj. -17.01 iterations 30
Cbc0038I Pass  37: suminf.    1.93486 (9) obj. -17.01 iterations 0
Cbc0038I Pass  38: suminf.    1.81019 (9) obj. -17.01 iterations 8
Cbc0038I Pass  39: suminf.    1.81019 (9) obj. -17.01 iterations 4
Cbc0038I Pass  40: suminf.    1.93486 (9) obj. -17.01 iterations 8
Cbc0038I Pass  41: suminf.    1.41517 (14) obj. -17.01 iterations 25
Cbc0038I Pass  42: suminf.    1.05767 (15) obj. -17.01 iterations 7
Cbc0038I Pass  43: suminf.    2.10966 (10) obj. -17.01 iterations 22
Cbc0038I Pass  44: suminf.    1.79886 (11) obj. -17.01 iterations 1
Cbc0038I Pass  45: suminf.    2.10966 (10) obj. -17.01 iterations 10
Cbc0038I Pass  46: suminf.    2.24679 (14) obj. -17.01 iterations 15
Cbc0038I Pass  47: suminf.    2.21270 (14) obj. -17.01 iterations 6
Cbc0038I Pass  48: suminf.    2.72815 (12) obj. -17.01 iterations 12
Cbc0038I Pass  49: suminf.    2.72815 (12) obj. -17.01 iterations 1
Cbc0038I Pass  50: suminf.    2.33032 (12) obj. -17.01 iterations 7
Cbc0038I Pass  51: suminf.    2.33032 (12) obj. -17.01 iterations 4
Cbc0038I Pass  52: suminf.    2.72815 (12) obj. -17.01 iterations 8
Cbc0038I Pass  53: suminf.    2.63145 (22) obj. -17.01 iterations 13
Cbc0038I Pass  54: suminf.    2.37737 (15) obj. -17.01 iterations 3
Cbc0038I Pass  55: suminf.    2.90349 (14) obj. -17.01 iterations 11
Cbc0038I Pass  56: suminf.    2.39513 (15) obj. -17.01 iterations 4
Cbc0038I Pass  57: suminf.    2.90349 (14) obj. -17.01 iterations 10
Cbc0038I Pass  58: suminf.    1.78307 (17) obj. -17.01 iterations 20
Cbc0038I Pass  59: suminf.    1.78307 (17) obj. -17.01 iterations 1
Cbc0038I Pass  60: suminf.    2.90349 (15) obj. -17.01 iterations 12
Cbc0038I Pass  61: suminf.    2.45170 (16) obj. -17.01 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 112 columns, reduced to 46 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -11.3025 to -15.8392 (0.10 seconds)
Cbc0038I Round again with cutoff of -23.8589
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.39847 (16) obj. -30.245 iterations 0
Cbc0038I Pass  62: suminf.    0.39847 (16) obj. -30.245 iterations 1
Cbc0038I Pass  63: suminf.    2.14016 (19) obj. -23.8589 iterations 29
Cbc0038I Pass  64: suminf.    2.14016 (19) obj. -23.8589 iterations 2
Cbc0038I Pass  65: suminf.    2.77010 (14) obj. -23.8589 iterations 34
Cbc0038I Pass  66: suminf.    2.77010 (14) obj. -23.8589 iterations 0
Cbc0038I Pass  67: suminf.    2.88398 (14) obj. -23.8589 iterations 12
Cbc0038I Pass  68: suminf.    2.88398 (14) obj. -23.8589 iterations 3
Cbc0038I Pass  69: suminf.    2.77010 (14) obj. -23.8589 iterations 8
Cbc0038I Pass  70: suminf.    3.05457 (16) obj. -23.8589 iterations 11
Cbc0038I Pass  71: suminf.    2.60683 (17) obj. -23.8589 iterations 3
Cbc0038I Pass  72: suminf.    3.05457 (16) obj. -23.8589 iterations 10
Cbc0038I Pass  73: suminf.    2.53206 (17) obj. -23.8589 iterations 3
Cbc0038I Pass  74: suminf.    3.05457 (16) obj. -23.8589 iterations 5
Cbc0038I Pass  75: suminf.    3.05457 (17) obj. -23.8589 iterations 8
Cbc0038I Pass  76: suminf.    2.59511 (18) obj. -23.8589 iterations 5
Cbc0038I Pass  77: suminf.    3.05457 (17) obj. -23.8589 iterations 7
Cbc0038I Pass  78: suminf.    2.53206 (17) obj. -23.8589 iterations 5
Cbc0038I Pass  79: suminf.    3.05457 (16) obj. -23.8589 iterations 5
Cbc0038I Pass  80: suminf.    3.05457 (18) obj. -23.8589 iterations 11
Cbc0038I Pass  81: suminf.    2.72037 (19) obj. -23.8589 iterations 4
Cbc0038I Pass  82: suminf.    3.05457 (18) obj. -23.8589 iterations 5
Cbc0038I Pass  83: suminf.    2.66915 (18) obj. -23.8589 iterations 5
Cbc0038I Pass  84: suminf.    3.05457 (17) obj. -23.8589 iterations 3
Cbc0038I Pass  85: suminf.    1.70711 (20) obj. -23.8589 iterations 19
Cbc0038I Pass  86: suminf.    1.70711 (20) obj. -23.8589 iterations 1
Cbc0038I Pass  87: suminf.    1.83735 (20) obj. -23.8589 iterations 14
Cbc0038I Pass  88: suminf.    1.65424 (20) obj. -23.8589 iterations 4
Cbc0038I Pass  89: suminf.    1.69304 (21) obj. -23.8589 iterations 6
Cbc0038I Pass  90: suminf.    1.65424 (20) obj. -23.8589 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 112 columns, reduced to 31 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -15.8392 - took 0.09 seconds
Cbc0012I Integer solution of -15.8392 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 92 rows 112 columns, reduced to 18 rows 20 columns
Cbc0031I 61 added rows had average density of 10.016393
Cbc0013I At root node, 61 cuts changed objective from -39.839771 to -19.307684 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 4203 row cuts average 8.7 elements, 8 column cuts (8 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 147 row cuts average 65.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 162 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 46 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 266 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 61.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 99 row cuts average 27.1 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15.8392 best solution, best possible -19.307684 (0.76 seconds)
Cbc0001I Search completed - best objective -15.8392, took 1192 iterations and 4 nodes (1.01 seconds)
Cbc0032I Strong branching done 182 times (3485 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 1, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.73   (Wallclock seconds):       1.02

