Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 160 (-45) rows, 87 (-16) columns and 487 (-116) elements
Clp1000I sum of infeasibilities 5.06496e-06 - average 3.1656e-08, 75 fixed columns
Coin0506I Presolve 5 (-155) rows, 8 (-79) columns and 20 (-467) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 20384.251
Clp0000I Optimal - objective value 20384.251
Coin0511I After Postsolve, objective 20384.251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8544058 - largest nonzero change 1.8540007e-05 ( 0.0018540007%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 20384.251
Clp0000I Optimal - objective value 20384.251
Clp0000I Optimal - objective value 20384.251
Coin0511I After Postsolve, objective 20384.251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20384.25086 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 160 rows, 87 columns (86 integer (86 of which binary)) and 497 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.149%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.37931
Cbc0038I Solution found of -18289
Cbc0038I Relaxing continuous gives -18289
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 87 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -18498.5
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03793 (1) obj. -18498.5 iterations 15
Cbc0038I Pass   2: suminf.    0.37931 (1) obj. -20384.3 iterations 1
Cbc0038I Pass   3: suminf.    0.67768 (3) obj. -18498.5 iterations 25
Cbc0038I Pass   4: suminf.    0.67768 (3) obj. -18498.5 iterations 6
Cbc0038I Pass   5: suminf.    0.93750 (2) obj. -19877.8 iterations 6
Cbc0038I Pass   6: suminf.    0.35596 (1) obj. -18498.5 iterations 5
Cbc0038I Pass   7: suminf.    0.41379 (1) obj. -19468.5 iterations 5
Cbc0038I Pass   8: suminf.    0.41060 (1) obj. -18498.5 iterations 1
Cbc0038I Pass   9: suminf.    0.66813 (2) obj. -18498.5 iterations 15
Cbc0038I Pass  10: suminf.    0.33447 (1) obj. -18498.5 iterations 11
Cbc0038I Pass  11: suminf.    0.44444 (1) obj. -20203.2 iterations 2
Cbc0038I Pass  12: suminf.    0.09813 (1) obj. -18498.5 iterations 2
Cbc0038I Pass  13: suminf.    0.41379 (1) obj. -20242.2 iterations 1
Cbc0038I Pass  14: suminf.    0.78854 (4) obj. -18498.5 iterations 20
Cbc0038I Pass  15: suminf.    0.22773 (1) obj. -18498.5 iterations 15
Cbc0038I Pass  16: suminf.    0.44444 (1) obj. -18642.2 iterations 4
Cbc0038I Pass  17: suminf.    0.42326 (1) obj. -18498.5 iterations 1
Cbc0038I Pass  18: suminf.    0.82691 (2) obj. -18498.5 iterations 15
Cbc0038I Pass  19: suminf.    0.21614 (1) obj. -18498.5 iterations 6
Cbc0038I Pass  20: suminf.    0.27586 (1) obj. -19814.1 iterations 2
Cbc0038I Pass  21: suminf.    0.03770 (1) obj. -18498.5 iterations 1
Cbc0038I Pass  22: suminf.    1.13505 (4) obj. -18498.5 iterations 10
Cbc0038I Pass  23: suminf.    0.33480 (1) obj. -18498.5 iterations 7
Cbc0038I Pass  24: suminf.    0.18519 (1) obj. -19513.1 iterations 1
Cbc0038I Pass  25: suminf.    0.86453 (3) obj. -18498.5 iterations 17
Cbc0038I Pass  26: suminf.    0.86453 (3) obj. -18498.5 iterations 3
Cbc0038I Pass  27: suminf.    0.29630 (1) obj. -19035.2 iterations 2
Cbc0038I Pass  28: suminf.    0.45315 (1) obj. -18498.5 iterations 2
Cbc0038I Pass  29: suminf.    0.34483 (1) obj. -19096.9 iterations 1
Cbc0038I Pass  30: suminf.    0.68552 (2) obj. -18498.5 iterations 9
Cbc0038I Rounding solution of -18636.3 is better than previous of -18289

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 87 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -18636.3 to -19608.1 (0.03 seconds)
Cbc0038I Round again with cutoff of -19763.3
Cbc0038I Reduced cost fixing fixed 51 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.26690 (1) obj. -19763.3 iterations 0
Cbc0038I Pass  31: suminf.    0.37931 (1) obj. -20384.3 iterations 1
Cbc0038I Pass  32: suminf.    0.94737 (2) obj. -20239.8 iterations 6
Cbc0038I Pass  33: suminf.    0.37931 (1) obj. -20384.3 iterations 5
Cbc0038I Pass  34: suminf.    0.37931 (1) obj. -20384.3 iterations 6
Cbc0038I Pass  35: suminf.    1.15539 (4) obj. -20031.4 iterations 12
Cbc0038I Pass  36: suminf.    0.31017 (1) obj. -19763.3 iterations 13
Cbc0038I Pass  37: suminf.    0.17241 (1) obj. -20381.8 iterations 4
Cbc0038I Pass  38: suminf.    0.28437 (1) obj. -19763.3 iterations 1
Cbc0038I Pass  39: suminf.    0.17241 (1) obj. -20381.8 iterations 3
Cbc0038I Pass  40: suminf.    0.11111 (1) obj. -20303.9 iterations 7
Cbc0038I Pass  41: suminf.    0.11111 (1) obj. -20303.9 iterations 4
Cbc0038I Pass  42: suminf.    0.31399 (3) obj. -19763.3 iterations 8
Cbc0038I Pass  43: suminf.    0.26668 (1) obj. -19763.3 iterations 9
Cbc0038I Pass  44: suminf.    0.27586 (1) obj. -19814.1 iterations 1
Cbc0038I Pass  45: suminf.    0.29567 (5) obj. -19763.3 iterations 11
Cbc0038I Pass  46: suminf.    0.26316 (2) obj. -19776.4 iterations 8
Cbc0038I Pass  47: suminf.    0.58826 (2) obj. -19763.3 iterations 7
Cbc0038I Pass  48: suminf.    0.28252 (4) obj. -19763.3 iterations 10
Cbc0038I Pass  49: suminf.    0.79678 (3) obj. -19763.3 iterations 11
Cbc0038I Pass  50: suminf.    0.80822 (3) obj. -19763.3 iterations 9
Cbc0038I Pass  51: suminf.    0.82093 (3) obj. -19763.3 iterations 8
Cbc0038I Pass  52: suminf.    0.82093 (3) obj. -19763.3 iterations 4
Cbc0038I Pass  53: suminf.    0.11111 (1) obj. -20303.9 iterations 4
Cbc0038I Pass  54: suminf.    0.28437 (1) obj. -19763.3 iterations 2
Cbc0038I Pass  55: suminf.    0.17241 (1) obj. -20381.8 iterations 1
Cbc0038I Pass  56: suminf.    0.07692 (1) obj. -19948.8 iterations 2
Cbc0038I Pass  57: suminf.    0.07692 (1) obj. -19948.8 iterations 1
Cbc0038I Pass  58: suminf.    0.81569 (2) obj. -19763.3 iterations 12
Cbc0038I Pass  59: suminf.    0.81569 (2) obj. -19763.3 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 87 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -19608.1 - took 0.02 seconds
Cbc0012I Integer solution of -19608.115 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 160 rows 87 columns, reduced to 3 rows 5 columns
Cbc0031I 9 added rows had average density of 9.4444444
Cbc0013I At root node, 9 cuts changed objective from -20384.251 to -19844.853 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 2.1 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 84.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19608.115, took 153 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 42 times (217 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-92) rows, 124 (-78) columns and 2135 (-3518) elements
Clp1000I sum of infeasibilities 2.19917e-07 - average 1.96354e-09, 116 fixed columns
Coin0506I Presolve 4 (-108) rows, 8 (-116) columns and 20 (-2115) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 2.8001238 - largest nonzero change 0 ( 0%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value 20368.251
Clp0000I Optimal - objective value 20368.251
Coin0511I After Postsolve, objective 20368.251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9056164 - largest nonzero change 1.3018814e-05 ( 0.0013018814%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 20428.435
Clp0000I Optimal - objective value 20428.435
Clp0000I Optimal - objective value 20428.435
Coin0511I After Postsolve, objective 20428.435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20428.43451 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 126 columns (126 integer (126 of which binary)) and 2156 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.274%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 2.54647
Cbc0038I Pass   1: suminf.    2.05008 (28) obj. -18320.6 iterations 19
Cbc0038I Pass   2: suminf.    0.47826 (9) obj. -18300.4 iterations 19
Cbc0038I Solution found of -18289
Cbc0038I Rounding solution of -18636.3 is better than previous of -18289

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -18814.2
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.16704 (29) obj. -18814.2 iterations 1
Cbc0038I Pass   4: suminf.    0.41931 (2) obj. -20385.2 iterations 31
Cbc0038I Pass   5: suminf.    0.13491 (2) obj. -18814.2 iterations 1
Cbc0038I Pass   6: suminf.    0.37931 (1) obj. -20384.3 iterations 4
Cbc0038I Pass   7: suminf.    0.09508 (1) obj. -18814.2 iterations 1
Cbc0038I Pass   8: suminf.    1.05220 (10) obj. -18814.2 iterations 23
Cbc0038I Pass   9: suminf.    0.50226 (6) obj. -18814.2 iterations 12
Cbc0038I Pass  10: suminf.    0.31034 (1) obj. -19449.6 iterations 8
Cbc0038I Pass  11: suminf.    0.19532 (1) obj. -18814.2 iterations 1
Cbc0038I Pass  12: suminf.    1.01147 (7) obj. -18814.2 iterations 27
Cbc0038I Pass  13: suminf.    0.43721 (4) obj. -18814.2 iterations 15
Cbc0038I Pass  14: suminf.    0.27586 (1) obj. -18911.4 iterations 6
Cbc0038I Pass  15: suminf.    0.25826 (1) obj. -18814.2 iterations 1
Cbc0038I Pass  16: suminf.    0.70027 (6) obj. -18814.2 iterations 23
Cbc0038I Pass  17: suminf.    0.70027 (6) obj. -18814.2 iterations 4
Cbc0038I Pass  18: suminf.    0.39181 (1) obj. -18814.2 iterations 10
Cbc0038I Pass  19: suminf.    0.20690 (1) obj. -19835.6 iterations 3
Cbc0038I Pass  20: suminf.    0.92750 (9) obj. -18814.2 iterations 18
Cbc0038I Pass  21: suminf.    0.55088 (7) obj. -18814.2 iterations 16
Cbc0038I Pass  22: suminf.    0.71860 (3) obj. -18814.2 iterations 8
Cbc0038I Pass  23: suminf.    0.71860 (3) obj. -18814.2 iterations 0
Cbc0038I Pass  24: suminf.    0.49253 (3) obj. -18814.2 iterations 3
Cbc0038I Pass  25: suminf.    0.23378 (2) obj. -18814.2 iterations 2
Cbc0038I Pass  26: suminf.    0.88478 (11) obj. -18814.2 iterations 22
Cbc0038I Pass  27: suminf.    0.86774 (11) obj. -18814.2 iterations 10
Cbc0038I Pass  28: suminf.    0.71860 (3) obj. -18814.2 iterations 12
Cbc0038I Pass  29: suminf.    0.71860 (3) obj. -18814.2 iterations 0
Cbc0038I Pass  30: suminf.    0.49253 (3) obj. -18814.2 iterations 3
Cbc0038I Pass  31: suminf.    0.23378 (2) obj. -18814.2 iterations 2
Cbc0038I Pass  32: suminf.    0.71941 (10) obj. -18814.2 iterations 19
Cbc0038I Rounding solution of -19210.6 is better than previous of -18636.3

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 126 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -19210.6 to -19223.6 (0.06 seconds)
Cbc0038I Round again with cutoff of -19462
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.32053 (29) obj. -19462 iterations 0
Cbc0038I Pass  33: suminf.    0.72048 (8) obj. -20393.8 iterations 24
Cbc0038I Pass  34: suminf.    0.55181 (8) obj. -19462 iterations 1
Cbc0038I Pass  35: suminf.    0.37931 (1) obj. -20384.3 iterations 9
Cbc0038I Pass  36: suminf.    0.21236 (1) obj. -19462 iterations 1
Cbc0038I Pass  37: suminf.    1.00834 (7) obj. -19462 iterations 17
Cbc0038I Pass  38: suminf.    0.42096 (4) obj. -19462 iterations 10
Cbc0038I Pass  39: suminf.    0.37931 (1) obj. -20380.3 iterations 5
Cbc0038I Pass  40: suminf.    0.21308 (1) obj. -19462 iterations 1
Cbc0038I Pass  41: suminf.    1.92840 (13) obj. -19462 iterations 24
Cbc0038I Pass  42: suminf.    1.40414 (11) obj. -19873.8 iterations 12
Cbc0038I Pass  43: suminf.    0.33566 (1) obj. -19462 iterations 13
Cbc0038I Pass  44: suminf.    0.17241 (1) obj. -20363.8 iterations 3
Cbc0038I Pass  45: suminf.    1.23407 (15) obj. -19462 iterations 34
Cbc0038I Pass  46: suminf.    0.98785 (12) obj. -19462 iterations 11
Cbc0038I Pass  47: suminf.    0.31034 (1) obj. -19541.5 iterations 15
Cbc0038I Pass  48: suminf.    0.29595 (1) obj. -19462 iterations 2
Cbc0038I Pass  49: suminf.    1.14056 (11) obj. -19462 iterations 28
Cbc0038I Pass  50: suminf.    0.63389 (8) obj. -19462 iterations 11
Cbc0038I Pass  51: suminf.    0.63333 (2) obj. -19768.2 iterations 15
Cbc0038I Pass  52: suminf.    0.33486 (2) obj. -19462 iterations 2
Cbc0038I Pass  53: suminf.    0.43862 (2) obj. -19462 iterations 2
Cbc0038I Pass  54: suminf.    0.07407 (1) obj. -20144.6 iterations 4
Cbc0038I Pass  55: suminf.    0.27619 (1) obj. -19462 iterations 2
Cbc0038I Pass  56: suminf.    0.13793 (1) obj. -20225.8 iterations 3
Cbc0038I Pass  57: suminf.    0.74442 (7) obj. -19663.4 iterations 10
Cbc0038I Pass  58: suminf.    0.70609 (7) obj. -19462 iterations 3
Cbc0038I Pass  59: suminf.    0.31034 (1) obj. -19655 iterations 8
Cbc0038I Pass  60: suminf.    0.27540 (1) obj. -19462 iterations 1
Cbc0038I Pass  61: suminf.    0.78863 (6) obj. -19462 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 126 columns, reduced to 23 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -19223.6 to -19608.1 (0.09 seconds)
Cbc0038I Round again with cutoff of -19850.4
Cbc0038I Reduced cost fixing fixed 55 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.41254 (29) obj. -19850.4 iterations 0
Cbc0038I Pass  62: suminf.    0.41931 (2) obj. -20385.2 iterations 29
Cbc0038I Pass  63: suminf.    0.32249 (2) obj. -19850.4 iterations 1
Cbc0038I Pass  64: suminf.    0.37931 (1) obj. -20384.3 iterations 2
Cbc0038I Pass  65: suminf.    0.28266 (1) obj. -19850.4 iterations 1
Cbc0038I Pass  66: suminf.    0.69637 (7) obj. -19994.6 iterations 12
Cbc0038I Pass  67: suminf.    0.69637 (7) obj. -19994.6 iterations 5
Cbc0038I Pass  68: suminf.    0.28465 (1) obj. -19850.4 iterations 11
Cbc0038I Pass  69: suminf.    0.37931 (1) obj. -20373.3 iterations 1
Cbc0038I Pass  70: suminf.    0.74731 (6) obj. -20236.9 iterations 11
Cbc0038I Pass  71: suminf.    0.67178 (6) obj. -19850.4 iterations 4
Cbc0038I Pass  72: suminf.    0.41379 (1) obj. -20231.2 iterations 7
Cbc0038I Pass  73: suminf.    0.34485 (1) obj. -19850.4 iterations 1
Cbc0038I Pass  74: suminf.    1.28401 (9) obj. -19850.4 iterations 20
Cbc0038I Pass  75: suminf.    1.28401 (9) obj. -19850.4 iterations 4
Cbc0038I Pass  76: suminf.    0.44444 (1) obj. -20195.2 iterations 9
Cbc0038I Pass  77: suminf.    0.34431 (1) obj. -19850.4 iterations 2
Cbc0038I Pass  78: suminf.    0.41379 (1) obj. -20234.2 iterations 1
Cbc0038I Pass  79: suminf.    1.50093 (17) obj. -19850.4 iterations 23
Cbc0038I Pass  80: suminf.    1.41828 (15) obj. -20007.6 iterations 5
Cbc0038I Pass  81: suminf.    0.28411 (1) obj. -19850.4 iterations 18
Cbc0038I Pass  82: suminf.    0.37931 (1) obj. -20376.3 iterations 1
Cbc0038I Pass  83: suminf.    0.85709 (9) obj. -19850.4 iterations 15
Cbc0038I Pass  84: suminf.    0.85709 (9) obj. -19850.4 iterations 8
Cbc0038I Pass  85: suminf.    0.41379 (1) obj. -20231.2 iterations 19
Cbc0038I Pass  86: suminf.    0.34485 (1) obj. -19850.4 iterations 1
Cbc0038I Pass  87: suminf.    0.61779 (8) obj. -19850.4 iterations 22
Cbc0038I Pass  88: suminf.    0.61779 (8) obj. -19850.4 iterations 0
Cbc0038I Pass  89: suminf.    0.13793 (1) obj. -20228.8 iterations 19
Cbc0038I Pass  90: suminf.    0.20643 (1) obj. -19850.4 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 126 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -19608.1 - took 0.06 seconds
Cbc0012I Integer solution of -19608.115 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 114 rows 126 columns, reduced to 3 rows 5 columns
Cbc0031I 15 added rows had average density of 15.466667
Cbc0013I At root node, 15 cuts changed objective from -20389.014 to -19826.6 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.6 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19608.115, took 266 iterations and 4 nodes (0.39 seconds)
Cbc0032I Strong branching done 64 times (281 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 61 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.40

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 160 (-45) rows, 87 (-16) columns and 487 (-116) elements
Clp1000I sum of infeasibilities 5.06496e-06 - average 3.1656e-08, 75 fixed columns
Coin0506I Presolve 5 (-155) rows, 8 (-79) columns and 20 (-467) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 20384.251
Clp0000I Optimal - objective value 20384.251
Coin0511I After Postsolve, objective 20384.251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8544058 - largest nonzero change 1.8540007e-05 ( 0.0018540007%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 20384.251
Clp0000I Optimal - objective value 20384.251
Clp0000I Optimal - objective value 20384.251
Coin0511I After Postsolve, objective 20384.251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20384.25086 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 160 rows, 87 columns (86 integer (86 of which binary)) and 497 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.149%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.37931
Cbc0038I Solution found of -18289
Cbc0038I Relaxing continuous gives -18289
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 87 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -18498.5
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03793 (1) obj. -18498.5 iterations 15
Cbc0038I Pass   2: suminf.    0.37931 (1) obj. -20384.3 iterations 1
Cbc0038I Pass   3: suminf.    0.67768 (3) obj. -18498.5 iterations 25
Cbc0038I Pass   4: suminf.    0.67768 (3) obj. -18498.5 iterations 6
Cbc0038I Pass   5: suminf.    0.93750 (2) obj. -19877.8 iterations 6
Cbc0038I Pass   6: suminf.    0.35596 (1) obj. -18498.5 iterations 5
Cbc0038I Pass   7: suminf.    0.41379 (1) obj. -19468.5 iterations 5
Cbc0038I Pass   8: suminf.    0.41060 (1) obj. -18498.5 iterations 1
Cbc0038I Pass   9: suminf.    0.66813 (2) obj. -18498.5 iterations 15
Cbc0038I Pass  10: suminf.    0.33447 (1) obj. -18498.5 iterations 11
Cbc0038I Pass  11: suminf.    0.44444 (1) obj. -20203.2 iterations 2
Cbc0038I Pass  12: suminf.    0.09813 (1) obj. -18498.5 iterations 2
Cbc0038I Pass  13: suminf.    0.41379 (1) obj. -20242.2 iterations 1
Cbc0038I Pass  14: suminf.    0.78854 (4) obj. -18498.5 iterations 20
Cbc0038I Pass  15: suminf.    0.22773 (1) obj. -18498.5 iterations 15
Cbc0038I Pass  16: suminf.    0.44444 (1) obj. -18642.2 iterations 4
Cbc0038I Pass  17: suminf.    0.42326 (1) obj. -18498.5 iterations 1
Cbc0038I Pass  18: suminf.    0.82691 (2) obj. -18498.5 iterations 15
Cbc0038I Pass  19: suminf.    0.21614 (1) obj. -18498.5 iterations 6
Cbc0038I Pass  20: suminf.    0.27586 (1) obj. -19814.1 iterations 2
Cbc0038I Pass  21: suminf.    0.03770 (1) obj. -18498.5 iterations 1
Cbc0038I Pass  22: suminf.    1.13505 (4) obj. -18498.5 iterations 10
Cbc0038I Pass  23: suminf.    0.33480 (1) obj. -18498.5 iterations 7
Cbc0038I Pass  24: suminf.    0.18519 (1) obj. -19513.1 iterations 1
Cbc0038I Pass  25: suminf.    0.86453 (3) obj. -18498.5 iterations 17
Cbc0038I Pass  26: suminf.    0.86453 (3) obj. -18498.5 iterations 3
Cbc0038I Pass  27: suminf.    0.29630 (1) obj. -19035.2 iterations 2
Cbc0038I Pass  28: suminf.    0.45315 (1) obj. -18498.5 iterations 2
Cbc0038I Pass  29: suminf.    0.34483 (1) obj. -19096.9 iterations 1
Cbc0038I Pass  30: suminf.    0.68552 (2) obj. -18498.5 iterations 9
Cbc0038I Rounding solution of -18636.3 is better than previous of -18289

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 87 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -18636.3 to -19608.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -19763.3
Cbc0038I Reduced cost fixing fixed 51 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.26690 (1) obj. -19763.3 iterations 0
Cbc0038I Pass  31: suminf.    0.37931 (1) obj. -20384.3 iterations 1
Cbc0038I Pass  32: suminf.    0.94737 (2) obj. -20239.8 iterations 6
Cbc0038I Pass  33: suminf.    0.37931 (1) obj. -20384.3 iterations 5
Cbc0038I Pass  34: suminf.    0.37931 (1) obj. -20384.3 iterations 6
Cbc0038I Pass  35: suminf.    1.15539 (4) obj. -20031.4 iterations 12
Cbc0038I Pass  36: suminf.    0.31017 (1) obj. -19763.3 iterations 13
Cbc0038I Pass  37: suminf.    0.17241 (1) obj. -20381.8 iterations 4
Cbc0038I Pass  38: suminf.    0.28437 (1) obj. -19763.3 iterations 1
Cbc0038I Pass  39: suminf.    0.17241 (1) obj. -20381.8 iterations 3
Cbc0038I Pass  40: suminf.    0.11111 (1) obj. -20303.9 iterations 7
Cbc0038I Pass  41: suminf.    0.11111 (1) obj. -20303.9 iterations 4
Cbc0038I Pass  42: suminf.    0.31399 (3) obj. -19763.3 iterations 8
Cbc0038I Pass  43: suminf.    0.26668 (1) obj. -19763.3 iterations 9
Cbc0038I Pass  44: suminf.    0.27586 (1) obj. -19814.1 iterations 1
Cbc0038I Pass  45: suminf.    0.29567 (5) obj. -19763.3 iterations 11
Cbc0038I Pass  46: suminf.    0.26316 (2) obj. -19776.4 iterations 8
Cbc0038I Pass  47: suminf.    0.58826 (2) obj. -19763.3 iterations 7
Cbc0038I Pass  48: suminf.    0.28252 (4) obj. -19763.3 iterations 10
Cbc0038I Pass  49: suminf.    0.79678 (3) obj. -19763.3 iterations 11
Cbc0038I Pass  50: suminf.    0.80822 (3) obj. -19763.3 iterations 9
Cbc0038I Pass  51: suminf.    0.82093 (3) obj. -19763.3 iterations 8
Cbc0038I Pass  52: suminf.    0.82093 (3) obj. -19763.3 iterations 4
Cbc0038I Pass  53: suminf.    0.11111 (1) obj. -20303.9 iterations 4
Cbc0038I Pass  54: suminf.    0.28437 (1) obj. -19763.3 iterations 2
Cbc0038I Pass  55: suminf.    0.17241 (1) obj. -20381.8 iterations 1
Cbc0038I Pass  56: suminf.    0.07692 (1) obj. -19948.8 iterations 2
Cbc0038I Pass  57: suminf.    0.07692 (1) obj. -19948.8 iterations 1
Cbc0038I Pass  58: suminf.    0.81569 (2) obj. -19763.3 iterations 12
Cbc0038I Pass  59: suminf.    0.81569 (2) obj. -19763.3 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 87 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -19608.1 - took 0.02 seconds
Cbc0012I Integer solution of -19608.115 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 160 rows 87 columns, reduced to 3 rows 5 columns
Cbc0031I 9 added rows had average density of 9.4444444
Cbc0013I At root node, 9 cuts changed objective from -20384.251 to -19844.853 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 2.1 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 84.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19608.115, took 153 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 42 times (217 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-93) rows, 124 (-79) columns and 2135 (-3519) elements
Clp1000I sum of infeasibilities 2.19917e-07 - average 1.96354e-09, 116 fixed columns
Coin0506I Presolve 4 (-108) rows, 8 (-116) columns and 20 (-2115) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 2.8001238 - largest nonzero change 0 ( 0%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value 20368.251
Clp0000I Optimal - objective value 20368.251
Coin0511I After Postsolve, objective 20368.251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9056164 - largest nonzero change 1.3018814e-05 ( 0.0013018814%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 20428.435
Clp0000I Optimal - objective value 20428.435
Clp0000I Optimal - objective value 20428.435
Coin0511I After Postsolve, objective 20428.435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20428.43451 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 126 columns (126 integer (126 of which binary)) and 2156 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.274%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 2.54647
Cbc0038I Pass   1: suminf.    2.05008 (28) obj. -18320.6 iterations 19
Cbc0038I Pass   2: suminf.    0.47826 (9) obj. -18300.4 iterations 19
Cbc0038I Solution found of -18289
Cbc0038I Rounding solution of -18636.3 is better than previous of -18289

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -18814.2
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.16704 (29) obj. -18814.2 iterations 1
Cbc0038I Pass   4: suminf.    0.41931 (2) obj. -20385.2 iterations 31
Cbc0038I Pass   5: suminf.    0.13491 (2) obj. -18814.2 iterations 1
Cbc0038I Pass   6: suminf.    0.37931 (1) obj. -20384.3 iterations 4
Cbc0038I Pass   7: suminf.    0.09508 (1) obj. -18814.2 iterations 1
Cbc0038I Pass   8: suminf.    1.05220 (10) obj. -18814.2 iterations 23
Cbc0038I Pass   9: suminf.    0.50226 (6) obj. -18814.2 iterations 12
Cbc0038I Pass  10: suminf.    0.31034 (1) obj. -19449.6 iterations 8
Cbc0038I Pass  11: suminf.    0.19532 (1) obj. -18814.2 iterations 1
Cbc0038I Pass  12: suminf.    1.01147 (7) obj. -18814.2 iterations 27
Cbc0038I Pass  13: suminf.    0.43721 (4) obj. -18814.2 iterations 15
Cbc0038I Pass  14: suminf.    0.27586 (1) obj. -18911.4 iterations 6
Cbc0038I Pass  15: suminf.    0.25826 (1) obj. -18814.2 iterations 1
Cbc0038I Pass  16: suminf.    0.70027 (6) obj. -18814.2 iterations 23
Cbc0038I Pass  17: suminf.    0.70027 (6) obj. -18814.2 iterations 4
Cbc0038I Pass  18: suminf.    0.39181 (1) obj. -18814.2 iterations 10
Cbc0038I Pass  19: suminf.    0.20690 (1) obj. -19835.6 iterations 3
Cbc0038I Pass  20: suminf.    0.92750 (9) obj. -18814.2 iterations 18
Cbc0038I Pass  21: suminf.    0.55088 (7) obj. -18814.2 iterations 16
Cbc0038I Pass  22: suminf.    0.71860 (3) obj. -18814.2 iterations 8
Cbc0038I Pass  23: suminf.    0.71860 (3) obj. -18814.2 iterations 0
Cbc0038I Pass  24: suminf.    0.49253 (3) obj. -18814.2 iterations 3
Cbc0038I Pass  25: suminf.    0.23378 (2) obj. -18814.2 iterations 2
Cbc0038I Pass  26: suminf.    0.88478 (11) obj. -18814.2 iterations 22
Cbc0038I Pass  27: suminf.    0.86774 (11) obj. -18814.2 iterations 10
Cbc0038I Pass  28: suminf.    0.71860 (3) obj. -18814.2 iterations 12
Cbc0038I Pass  29: suminf.    0.71860 (3) obj. -18814.2 iterations 0
Cbc0038I Pass  30: suminf.    0.49253 (3) obj. -18814.2 iterations 3
Cbc0038I Pass  31: suminf.    0.23378 (2) obj. -18814.2 iterations 2
Cbc0038I Pass  32: suminf.    0.71941 (10) obj. -18814.2 iterations 19
Cbc0038I Rounding solution of -19210.6 is better than previous of -18636.3

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 126 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -19210.6 to -19223.6 (0.06 seconds)
Cbc0038I Round again with cutoff of -19462
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.32053 (29) obj. -19462 iterations 0
Cbc0038I Pass  33: suminf.    0.72048 (8) obj. -20393.8 iterations 24
Cbc0038I Pass  34: suminf.    0.55181 (8) obj. -19462 iterations 1
Cbc0038I Pass  35: suminf.    0.37931 (1) obj. -20384.3 iterations 9
Cbc0038I Pass  36: suminf.    0.21236 (1) obj. -19462 iterations 1
Cbc0038I Pass  37: suminf.    1.00834 (7) obj. -19462 iterations 17
Cbc0038I Pass  38: suminf.    0.42096 (4) obj. -19462 iterations 10
Cbc0038I Pass  39: suminf.    0.37931 (1) obj. -20380.3 iterations 5
Cbc0038I Pass  40: suminf.    0.21308 (1) obj. -19462 iterations 1
Cbc0038I Pass  41: suminf.    1.92840 (13) obj. -19462 iterations 24
Cbc0038I Pass  42: suminf.    1.40414 (11) obj. -19873.8 iterations 12
Cbc0038I Pass  43: suminf.    0.33566 (1) obj. -19462 iterations 13
Cbc0038I Pass  44: suminf.    0.17241 (1) obj. -20363.8 iterations 3
Cbc0038I Pass  45: suminf.    1.23407 (15) obj. -19462 iterations 34
Cbc0038I Pass  46: suminf.    0.98785 (12) obj. -19462 iterations 11
Cbc0038I Pass  47: suminf.    0.31034 (1) obj. -19541.5 iterations 15
Cbc0038I Pass  48: suminf.    0.29595 (1) obj. -19462 iterations 2
Cbc0038I Pass  49: suminf.    1.14056 (11) obj. -19462 iterations 28
Cbc0038I Pass  50: suminf.    0.63389 (8) obj. -19462 iterations 11
Cbc0038I Pass  51: suminf.    0.63333 (2) obj. -19768.2 iterations 15
Cbc0038I Pass  52: suminf.    0.33486 (2) obj. -19462 iterations 2
Cbc0038I Pass  53: suminf.    0.43862 (2) obj. -19462 iterations 2
Cbc0038I Pass  54: suminf.    0.07407 (1) obj. -20144.6 iterations 4
Cbc0038I Pass  55: suminf.    0.27619 (1) obj. -19462 iterations 2
Cbc0038I Pass  56: suminf.    0.13793 (1) obj. -20225.8 iterations 3
Cbc0038I Pass  57: suminf.    0.74442 (7) obj. -19663.4 iterations 10
Cbc0038I Pass  58: suminf.    0.70609 (7) obj. -19462 iterations 3
Cbc0038I Pass  59: suminf.    0.31034 (1) obj. -19655 iterations 8
Cbc0038I Pass  60: suminf.    0.27540 (1) obj. -19462 iterations 1
Cbc0038I Pass  61: suminf.    0.78863 (6) obj. -19462 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 126 columns, reduced to 23 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -19223.6 to -19608.1 (0.09 seconds)
Cbc0038I Round again with cutoff of -19850.4
Cbc0038I Reduced cost fixing fixed 55 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.41254 (29) obj. -19850.4 iterations 0
Cbc0038I Pass  62: suminf.    0.41931 (2) obj. -20385.2 iterations 29
Cbc0038I Pass  63: suminf.    0.32249 (2) obj. -19850.4 iterations 1
Cbc0038I Pass  64: suminf.    0.37931 (1) obj. -20384.3 iterations 2
Cbc0038I Pass  65: suminf.    0.28266 (1) obj. -19850.4 iterations 1
Cbc0038I Pass  66: suminf.    0.69637 (7) obj. -19994.6 iterations 12
Cbc0038I Pass  67: suminf.    0.69637 (7) obj. -19994.6 iterations 5
Cbc0038I Pass  68: suminf.    0.28465 (1) obj. -19850.4 iterations 11
Cbc0038I Pass  69: suminf.    0.37931 (1) obj. -20373.3 iterations 1
Cbc0038I Pass  70: suminf.    0.74731 (6) obj. -20236.9 iterations 11
Cbc0038I Pass  71: suminf.    0.67178 (6) obj. -19850.4 iterations 4
Cbc0038I Pass  72: suminf.    0.41379 (1) obj. -20231.2 iterations 7
Cbc0038I Pass  73: suminf.    0.34485 (1) obj. -19850.4 iterations 1
Cbc0038I Pass  74: suminf.    1.28401 (9) obj. -19850.4 iterations 20
Cbc0038I Pass  75: suminf.    1.28401 (9) obj. -19850.4 iterations 4
Cbc0038I Pass  76: suminf.    0.44444 (1) obj. -20195.2 iterations 9
Cbc0038I Pass  77: suminf.    0.34431 (1) obj. -19850.4 iterations 2
Cbc0038I Pass  78: suminf.    0.41379 (1) obj. -20234.2 iterations 1
Cbc0038I Pass  79: suminf.    1.50093 (17) obj. -19850.4 iterations 23
Cbc0038I Pass  80: suminf.    1.41828 (15) obj. -20007.6 iterations 5
Cbc0038I Pass  81: suminf.    0.28411 (1) obj. -19850.4 iterations 18
Cbc0038I Pass  82: suminf.    0.37931 (1) obj. -20376.3 iterations 1
Cbc0038I Pass  83: suminf.    0.85709 (9) obj. -19850.4 iterations 15
Cbc0038I Pass  84: suminf.    0.85709 (9) obj. -19850.4 iterations 8
Cbc0038I Pass  85: suminf.    0.41379 (1) obj. -20231.2 iterations 19
Cbc0038I Pass  86: suminf.    0.34485 (1) obj. -19850.4 iterations 1
Cbc0038I Pass  87: suminf.    0.61779 (8) obj. -19850.4 iterations 22
Cbc0038I Pass  88: suminf.    0.61779 (8) obj. -19850.4 iterations 0
Cbc0038I Pass  89: suminf.    0.13793 (1) obj. -20228.8 iterations 19
Cbc0038I Pass  90: suminf.    0.20643 (1) obj. -19850.4 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 126 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -19608.1 - took 0.07 seconds
Cbc0012I Integer solution of -19608.115 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 114 rows 126 columns, reduced to 3 rows 5 columns
Cbc0031I 15 added rows had average density of 15.466667
Cbc0013I At root node, 15 cuts changed objective from -20389.014 to -19826.6 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.6 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -19608.115 best solution, best possible -19826.6 (0.54 seconds)
Cbc0001I Search completed - best objective -19608.115, took 266 iterations and 4 nodes (0.55 seconds)
Cbc0032I Strong branching done 64 times (281 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 61 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.56

