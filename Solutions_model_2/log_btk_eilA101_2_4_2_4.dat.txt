Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 0.000111444 - average 6.024e-07, 20 fixed columns
Coin0506I Presolve 148 (-37) rows, 81 (-20) columns and 450 (-114) elements
Clp0029I End of values pass after 81 iterations
Clp0000I Optimal - objective value 36.809082
Clp0000I Optimal - objective value 36.809082
Coin0511I After Postsolve, objective 36.809082, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.809082
Clp0000I Optimal - objective value 36.809082
Clp0000I Optimal - objective value 36.809082
Coin0511I After Postsolve, objective 36.809082, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.8090818 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 13.2554
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.2868 iterations 87
Cbc0038I Solution found of 19.2868
Cbc0038I Relaxing continuous gives 19.2868
Cbc0038I Rounding solution of 10.8161 is better than previous of 19.2868

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 10.8161 to -0.953203 (0.05 seconds)
Cbc0038I Round again with cutoff of -4.53888
Cbc0038I Pass   2: suminf.    0.77048 (39) obj. -4.53888 iterations 44
Cbc0038I Pass   3: suminf.    0.74671 (38) obj. -4.53888 iterations 6
Cbc0038I Pass   4: suminf.    1.11645 (9) obj. -4.53888 iterations 41
Cbc0038I Pass   5: suminf.    1.00764 (7) obj. -4.53888 iterations 5
Cbc0038I Pass   6: suminf.    1.61690 (5) obj. -4.53888 iterations 13
Cbc0038I Pass   7: suminf.    1.61690 (5) obj. -4.53888 iterations 0
Cbc0038I Pass   8: suminf.    2.11780 (5) obj. -4.53888 iterations 6
Cbc0038I Pass   9: suminf.    1.76691 (5) obj. -4.53888 iterations 6
Cbc0038I Pass  10: suminf.    2.07907 (5) obj. -4.53888 iterations 2
Cbc0038I Pass  11: suminf.    1.83569 (7) obj. -4.53888 iterations 4
Cbc0038I Pass  12: suminf.    4.58935 (12) obj. -4.53888 iterations 28
Cbc0038I Pass  13: suminf.    2.33047 (7) obj. -4.53888 iterations 16
Cbc0038I Pass  14: suminf.    1.59738 (5) obj. -4.53888 iterations 9
Cbc0038I Pass  15: suminf.    1.59738 (5) obj. -4.53888 iterations 0
Cbc0038I Pass  16: suminf.    1.80379 (5) obj. -4.53888 iterations 3
Cbc0038I Pass  17: suminf.    1.51131 (5) obj. -4.53888 iterations 3
Cbc0038I Pass  18: suminf.    1.51131 (5) obj. -4.53888 iterations 1
Cbc0038I Pass  19: suminf.    1.74259 (4) obj. -4.53888 iterations 2
Cbc0038I Pass  20: suminf.    1.42284 (4) obj. -4.53888 iterations 3
Cbc0038I Pass  21: suminf.    1.42284 (4) obj. -4.53888 iterations 1
Cbc0038I Pass  22: suminf.    3.45136 (15) obj. -4.53888 iterations 38
Cbc0038I Pass  23: suminf.    1.98833 (11) obj. -4.53888 iterations 13
Cbc0038I Pass  24: suminf.    1.72721 (10) obj. -4.53888 iterations 3
Cbc0038I Pass  25: suminf.    1.73766 (7) obj. -4.53888 iterations 21
Cbc0038I Pass  26: suminf.    1.73766 (7) obj. -4.53888 iterations 1
Cbc0038I Pass  27: suminf.    1.10773 (5) obj. -4.53888 iterations 7
Cbc0038I Pass  28: suminf.    1.05327 (5) obj. -4.53888 iterations 1
Cbc0038I Pass  29: suminf.    1.81479 (6) obj. -4.53888 iterations 5
Cbc0038I Pass  30: suminf.    2.72086 (9) obj. -4.53888 iterations 26
Cbc0038I Pass  31: suminf.    1.30569 (6) obj. -4.53888 iterations 14
Cbc0038I Rounding solution of -1.36052 is better than previous of -0.953203

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 120 rows 67 columns - 3 fixed gives 57, 64 - ok now
Cbc0038I Full problem 185 rows 101 columns, reduced to 57 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -1.36052 to -3.36749 (0.09 seconds)
Cbc0038I Round again with cutoff of -10.9929
Cbc0038I Pass  31: suminf.    2.93164 (39) obj. -10.9929 iterations 0
Cbc0038I Pass  32: suminf.    2.84119 (38) obj. -10.9929 iterations 6
Cbc0038I Pass  33: suminf.    3.26840 (10) obj. -10.9929 iterations 38
Cbc0038I Pass  34: suminf.    1.99507 (9) obj. -10.9929 iterations 2
Cbc0038I Pass  35: suminf.    2.99360 (7) obj. -10.9929 iterations 19
Cbc0038I Pass  36: suminf.    2.99360 (7) obj. -10.9929 iterations 0
Cbc0038I Pass  37: suminf.    2.03543 (7) obj. -10.9929 iterations 5
Cbc0038I Pass  38: suminf.    2.00012 (7) obj. -10.9929 iterations 1
Cbc0038I Pass  39: suminf.    2.77490 (9) obj. -10.9929 iterations 17
Cbc0038I Pass  40: suminf.    1.73298 (7) obj. -10.9929 iterations 12
Cbc0038I Pass  41: suminf.    2.12140 (8) obj. -10.9929 iterations 21
Cbc0038I Pass  42: suminf.    2.12140 (8) obj. -10.9929 iterations 1
Cbc0038I Pass  43: suminf.    2.35129 (7) obj. -10.9929 iterations 6
Cbc0038I Pass  44: suminf.    2.35129 (7) obj. -10.9929 iterations 0
Cbc0038I Pass  45: suminf.    2.19853 (7) obj. -10.9929 iterations 8
Cbc0038I Pass  46: suminf.    2.19853 (7) obj. -10.9929 iterations 0
Cbc0038I Pass  47: suminf.    3.33292 (16) obj. -10.9929 iterations 19
Cbc0038I Pass  48: suminf.    1.98248 (11) obj. -10.9929 iterations 7
Cbc0038I Pass  49: suminf.    3.37751 (11) obj. -10.9929 iterations 22
Cbc0038I Pass  50: suminf.    2.77222 (9) obj. -10.9929 iterations 3
Cbc0038I Pass  51: suminf.    2.09441 (7) obj. -10.9929 iterations 2
Cbc0038I Pass  52: suminf.    2.09441 (7) obj. -10.9929 iterations 0
Cbc0038I Pass  53: suminf.    1.49112 (6) obj. -10.9929 iterations 8
Cbc0038I Pass  54: suminf.    1.14928 (5) obj. -10.9929 iterations 2
Cbc0038I Pass  55: suminf.    1.64986 (6) obj. -10.9929 iterations 6
Cbc0038I Pass  56: suminf.    1.30125 (5) obj. -10.9929 iterations 2
Cbc0038I Pass  57: suminf.    1.19075 (6) obj. -10.9929 iterations 2
Cbc0038I Pass  58: suminf.    2.72764 (8) obj. -10.9929 iterations 6
Cbc0038I Pass  59: suminf.    1.51113 (8) obj. -10.9929 iterations 5
Cbc0038I Pass  60: suminf.    1.24180 (8) obj. -10.9929 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 108 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -3.36749 - took 0.13 seconds
Cbc0012I Integer solution of -3.367487 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 87 rows 49 columns
Cbc0031I 29 added rows had average density of 80.862069
Cbc0013I At root node, 29 cuts changed objective from -36.809082 to -28.451999 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13382 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1909 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.367487 best solution, best possible -28.451999 (1.21 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 102 rows 57 columns
Cbc0038I Full problem 185 rows 101 columns, reduced to 90 rows 50 columns
Cbc0001I Search completed - best objective -3.367487000000004, took 12411 iterations and 126 nodes (1.89 seconds)
Cbc0032I Strong branching done 1556 times (25042 iterations), fathomed 4 nodes and fixed 48 variables
Cbc0035I Maximum depth 37, 497 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       1.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-78) rows, 141 (-61) columns and 2521 (-3132) elements
Clp1000I sum of infeasibilities 4.71226e-06 - average 3.73989e-08, 64 fixed columns
Coin0506I Presolve 66 (-60) rows, 76 (-65) columns and 278 (-2243) elements
Clp0006I 0  Obj -0.40161584 Dual inf 3.3163491 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 1.3391246 - largest nonzero change 2.8218597e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value -0.12821694
Clp0000I Optimal - objective value -0.12821694
Coin0511I After Postsolve, objective -0.12821694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -0.12821694 Dual inf 68.011237 (41)
Clp0014I Perturbing problem by 0.001% of 1.5190239 - largest nonzero change 2.9074286e-05 ( 0.0023005115%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 54.005318
Clp0000I Optimal - objective value 54.005318
Clp0000I Optimal - objective value 54.005318
Coin0511I After Postsolve, objective 54.005318, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.00531801 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 141 columns (141 integer (141 of which binary)) and 2525 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.864%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 8.62113
Cbc0038I Pass   1: suminf.    4.32566 (35) obj. -37.9248 iterations 21
Cbc0038I Pass   2: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass   3: suminf.    0.87761 (8) obj. 1.45248 iterations 27
Cbc0038I Solution found of 8.57487
Cbc0038I Rounding solution of 1.92835 is better than previous of 8.57487

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 141 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -3.3216
Cbc0038I Pass   4: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass   5: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass   6: suminf.    1.36078 (11) obj. -3.3216 iterations 25
Cbc0038I Pass   7: suminf.    0.31092 (2) obj. -3.3216 iterations 13
Cbc0038I Pass   8: suminf.    0.60192 (2) obj. -3.3216 iterations 3
Cbc0038I Pass   9: suminf.    1.69685 (14) obj. -8.34532 iterations 37
Cbc0038I Pass  10: suminf.    1.53242 (11) obj. -8.04654 iterations 15
Cbc0038I Pass  11: suminf.    0.29680 (2) obj. -3.3216 iterations 11
Cbc0038I Pass  12: suminf.    0.25500 (2) obj. -3.82321 iterations 1
Cbc0038I Pass  13: suminf.    0.18334 (2) obj. -3.3216 iterations 4
Cbc0038I Pass  14: suminf.    0.18334 (2) obj. -3.3216 iterations 0
Cbc0038I Pass  15: suminf.    0.52782 (2) obj. -3.3216 iterations 3
Cbc0038I Pass  16: suminf.    1.20465 (8) obj. -3.3216 iterations 31
Cbc0038I Pass  17: suminf.    0.82461 (7) obj. -3.3216 iterations 9
Cbc0038I Pass  18: suminf.    0.68391 (3) obj. -3.3216 iterations 7
Cbc0038I Pass  19: suminf.    0.68391 (3) obj. -3.3216 iterations 0
Cbc0038I Pass  20: suminf.    0.34250 (3) obj. -3.3216 iterations 8
Cbc0038I Pass  21: suminf.    0.34250 (3) obj. -3.3216 iterations 1
Cbc0038I Pass  22: suminf.    0.27684 (3) obj. -3.3216 iterations 9
Cbc0038I Pass  23: suminf.    0.27684 (3) obj. -3.3216 iterations 0
Cbc0038I Pass  24: suminf.    0.56856 (2) obj. -3.3216 iterations 6
Cbc0038I Pass  25: suminf.    0.27922 (2) obj. -3.3216 iterations 3
Cbc0038I Pass  26: suminf.    2.15545 (11) obj. -3.3216 iterations 30
Cbc0038I Pass  27: suminf.    1.22200 (8) obj. -3.71881 iterations 7
Cbc0038I Pass  28: suminf.    0.88611 (4) obj. -3.3216 iterations 15
Cbc0038I Pass  29: suminf.    0.87397 (4) obj. -3.3216 iterations 1
Cbc0038I Pass  30: suminf.    0.81757 (3) obj. -3.3216 iterations 11
Cbc0038I Pass  31: suminf.    0.81757 (3) obj. -3.3216 iterations 0
Cbc0038I Pass  32: suminf.    0.63220 (3) obj. -3.3216 iterations 8
Cbc0038I Pass  33: suminf.    0.49248 (3) obj. -4.99817 iterations 1
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 141 columns, reduced to 26 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 1.92835 to -2.52788 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.7713
Cbc0038I Pass  33: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass  34: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass  35: suminf.    2.18741 (19) obj. -18.7977 iterations 16
Cbc0038I Pass  36: suminf.    0.91463 (10) obj. -12.7713 iterations 22
Cbc0038I Pass  37: suminf.    0.91463 (10) obj. -12.7713 iterations 1
Cbc0038I Pass  38: suminf.    1.03929 (5) obj. -12.7713 iterations 13
Cbc0038I Pass  39: suminf.    1.03929 (5) obj. -12.7713 iterations 0
Cbc0038I Pass  40: suminf.    0.81206 (4) obj. -12.7713 iterations 6
Cbc0038I Pass  41: suminf.    0.57578 (3) obj. -14.1428 iterations 5
Cbc0038I Pass  42: suminf.    0.77170 (3) obj. -12.7713 iterations 4
Cbc0038I Pass  43: suminf.    1.73742 (10) obj. -12.7713 iterations 19
Cbc0038I Pass  44: suminf.    1.24443 (9) obj. -12.7713 iterations 7
Cbc0038I Pass  45: suminf.    0.62903 (4) obj. -12.7713 iterations 9
Cbc0038I Pass  46: suminf.    0.59599 (3) obj. -12.9781 iterations 3
Cbc0038I Pass  47: suminf.    0.62552 (3) obj. -12.7713 iterations 4
Cbc0038I Pass  48: suminf.    2.18340 (12) obj. -12.7713 iterations 29
Cbc0038I Pass  49: suminf.    1.60064 (11) obj. -16.4025 iterations 10
Cbc0038I Pass  50: suminf.    1.55857 (8) obj. -12.7713 iterations 15
Cbc0038I Pass  51: suminf.    1.55857 (8) obj. -12.7713 iterations 0
Cbc0038I Pass  52: suminf.    1.55192 (6) obj. -12.7713 iterations 18
Cbc0038I Pass  53: suminf.    0.89380 (5) obj. -12.7713 iterations 7
Cbc0038I Pass  54: suminf.    1.24676 (4) obj. -12.7713 iterations 10
Cbc0038I Pass  55: suminf.    0.70858 (5) obj. -12.7713 iterations 6
Cbc0038I Pass  56: suminf.    1.32454 (5) obj. -12.7713 iterations 8
Cbc0038I Pass  57: suminf.    2.15211 (13) obj. -12.7713 iterations 19
Cbc0038I Pass  58: suminf.    1.92030 (10) obj. -12.7713 iterations 8
Cbc0038I Pass  59: suminf.    2.81274 (9) obj. -12.7713 iterations 16
Cbc0038I Pass  60: suminf.    2.06109 (7) obj. -12.7713 iterations 6
Cbc0038I Pass  61: suminf.    1.66424 (6) obj. -12.7713 iterations 10
Cbc0038I Pass  62: suminf.    1.66424 (6) obj. -12.7713 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 141 columns, reduced to 38 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -2.52788 - took 0.07 seconds
Cbc0012I Integer solution of -2.527875 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 126 rows 141 columns, reduced to 12 rows 14 columns
Cbc0031I 55 added rows had average density of 76.854545
Cbc0013I At root node, 55 cuts changed objective from -50.570216 to -11.046329 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12350 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1866 row cuts average 135.7 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1115 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1671 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 447 row cuts average 77.5 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.399 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.527875 best solution, best possible -11.046329 (2.42 seconds)
Cbc0010I After 19 nodes, 12 on tree, -2.527875 best solution, best possible -11.046329 (3.14 seconds)
Cbc0038I Full problem 126 rows 141 columns, reduced to 30 rows 39 columns
Cbc0012I Integer solution of -2.62575 found by rounding after 9813 iterations and 66 nodes (3.74 seconds)
Cbc0012I Integer solution of -2.8983 found by DiveCoefficient after 9970 iterations and 83 nodes (3.79 seconds)
Cbc0012I Integer solution of -2.919025 found by DiveCoefficient after 10026 iterations and 95 nodes (3.80 seconds)
Cbc0038I Full problem 126 rows 141 columns, reduced to 3 rows 4 columns
Cbc0004I Integer solution of -3.367487 found after 10067 iterations and 99 nodes (3.82 seconds)
Cbc0010I After 102 nodes, 3 on tree, -3.367487 best solution, best possible -11.046329 (3.88 seconds)
Cbc0001I Search completed - best objective -3.367487000000004, took 11718 iterations and 124 nodes (4.27 seconds)
Cbc0032I Strong branching done 1494 times (24514 iterations), fathomed 19 nodes and fixed 27 variables
Cbc0035I Maximum depth 17, 451 variables fixed on reduced cost
Total time (CPU seconds):       3.65   (Wallclock seconds):       4.30

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 0.000111444 - average 6.024e-07, 20 fixed columns
Coin0506I Presolve 148 (-37) rows, 81 (-20) columns and 450 (-114) elements
Clp0029I End of values pass after 81 iterations
Clp0000I Optimal - objective value 36.809082
Clp0000I Optimal - objective value 36.809082
Coin0511I After Postsolve, objective 36.809082, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.809082
Clp0000I Optimal - objective value 36.809082
Clp0000I Optimal - objective value 36.809082
Coin0511I After Postsolve, objective 36.809082, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.8090818 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 13.2554
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.2868 iterations 87
Cbc0038I Solution found of 19.2868
Cbc0038I Relaxing continuous gives 19.2868
Cbc0038I Rounding solution of 10.8161 is better than previous of 19.2868

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 10.8161 to -0.953203 (0.06 seconds)
Cbc0038I Round again with cutoff of -4.53888
Cbc0038I Pass   2: suminf.    0.77048 (39) obj. -4.53888 iterations 44
Cbc0038I Pass   3: suminf.    0.74671 (38) obj. -4.53888 iterations 6
Cbc0038I Pass   4: suminf.    1.11645 (9) obj. -4.53888 iterations 41
Cbc0038I Pass   5: suminf.    1.00764 (7) obj. -4.53888 iterations 5
Cbc0038I Pass   6: suminf.    1.61690 (5) obj. -4.53888 iterations 13
Cbc0038I Pass   7: suminf.    1.61690 (5) obj. -4.53888 iterations 0
Cbc0038I Pass   8: suminf.    2.11780 (5) obj. -4.53888 iterations 6
Cbc0038I Pass   9: suminf.    1.76691 (5) obj. -4.53888 iterations 6
Cbc0038I Pass  10: suminf.    2.07907 (5) obj. -4.53888 iterations 2
Cbc0038I Pass  11: suminf.    1.83569 (7) obj. -4.53888 iterations 4
Cbc0038I Pass  12: suminf.    4.58935 (12) obj. -4.53888 iterations 28
Cbc0038I Pass  13: suminf.    2.33047 (7) obj. -4.53888 iterations 16
Cbc0038I Pass  14: suminf.    1.59738 (5) obj. -4.53888 iterations 9
Cbc0038I Pass  15: suminf.    1.59738 (5) obj. -4.53888 iterations 0
Cbc0038I Pass  16: suminf.    1.80379 (5) obj. -4.53888 iterations 3
Cbc0038I Pass  17: suminf.    1.51131 (5) obj. -4.53888 iterations 3
Cbc0038I Pass  18: suminf.    1.51131 (5) obj. -4.53888 iterations 1
Cbc0038I Pass  19: suminf.    1.74259 (4) obj. -4.53888 iterations 2
Cbc0038I Pass  20: suminf.    1.42284 (4) obj. -4.53888 iterations 3
Cbc0038I Pass  21: suminf.    1.42284 (4) obj. -4.53888 iterations 1
Cbc0038I Pass  22: suminf.    3.45136 (15) obj. -4.53888 iterations 38
Cbc0038I Pass  23: suminf.    1.98833 (11) obj. -4.53888 iterations 13
Cbc0038I Pass  24: suminf.    1.72721 (10) obj. -4.53888 iterations 3
Cbc0038I Pass  25: suminf.    1.73766 (7) obj. -4.53888 iterations 21
Cbc0038I Pass  26: suminf.    1.73766 (7) obj. -4.53888 iterations 1
Cbc0038I Pass  27: suminf.    1.10773 (5) obj. -4.53888 iterations 7
Cbc0038I Pass  28: suminf.    1.05327 (5) obj. -4.53888 iterations 1
Cbc0038I Pass  29: suminf.    1.81479 (6) obj. -4.53888 iterations 5
Cbc0038I Pass  30: suminf.    2.72086 (9) obj. -4.53888 iterations 26
Cbc0038I Pass  31: suminf.    1.30569 (6) obj. -4.53888 iterations 14
Cbc0038I Rounding solution of -1.36052 is better than previous of -0.953203

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 120 rows 67 columns - 3 fixed gives 57, 64 - ok now
Cbc0038I Full problem 185 rows 101 columns, reduced to 57 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -1.36052 to -3.36749 (0.09 seconds)
Cbc0038I Round again with cutoff of -10.9929
Cbc0038I Pass  31: suminf.    2.93164 (39) obj. -10.9929 iterations 0
Cbc0038I Pass  32: suminf.    2.84119 (38) obj. -10.9929 iterations 6
Cbc0038I Pass  33: suminf.    3.26840 (10) obj. -10.9929 iterations 38
Cbc0038I Pass  34: suminf.    1.99507 (9) obj. -10.9929 iterations 2
Cbc0038I Pass  35: suminf.    2.99360 (7) obj. -10.9929 iterations 19
Cbc0038I Pass  36: suminf.    2.99360 (7) obj. -10.9929 iterations 0
Cbc0038I Pass  37: suminf.    2.03543 (7) obj. -10.9929 iterations 5
Cbc0038I Pass  38: suminf.    2.00012 (7) obj. -10.9929 iterations 1
Cbc0038I Pass  39: suminf.    2.77490 (9) obj. -10.9929 iterations 17
Cbc0038I Pass  40: suminf.    1.73298 (7) obj. -10.9929 iterations 12
Cbc0038I Pass  41: suminf.    2.12140 (8) obj. -10.9929 iterations 21
Cbc0038I Pass  42: suminf.    2.12140 (8) obj. -10.9929 iterations 1
Cbc0038I Pass  43: suminf.    2.35129 (7) obj. -10.9929 iterations 6
Cbc0038I Pass  44: suminf.    2.35129 (7) obj. -10.9929 iterations 0
Cbc0038I Pass  45: suminf.    2.19853 (7) obj. -10.9929 iterations 8
Cbc0038I Pass  46: suminf.    2.19853 (7) obj. -10.9929 iterations 0
Cbc0038I Pass  47: suminf.    3.33292 (16) obj. -10.9929 iterations 19
Cbc0038I Pass  48: suminf.    1.98248 (11) obj. -10.9929 iterations 7
Cbc0038I Pass  49: suminf.    3.37751 (11) obj. -10.9929 iterations 22
Cbc0038I Pass  50: suminf.    2.77222 (9) obj. -10.9929 iterations 3
Cbc0038I Pass  51: suminf.    2.09441 (7) obj. -10.9929 iterations 2
Cbc0038I Pass  52: suminf.    2.09441 (7) obj. -10.9929 iterations 0
Cbc0038I Pass  53: suminf.    1.49112 (6) obj. -10.9929 iterations 8
Cbc0038I Pass  54: suminf.    1.14928 (5) obj. -10.9929 iterations 2
Cbc0038I Pass  55: suminf.    1.64986 (6) obj. -10.9929 iterations 6
Cbc0038I Pass  56: suminf.    1.30125 (5) obj. -10.9929 iterations 2
Cbc0038I Pass  57: suminf.    1.19075 (6) obj. -10.9929 iterations 2
Cbc0038I Pass  58: suminf.    2.72764 (8) obj. -10.9929 iterations 6
Cbc0038I Pass  59: suminf.    1.51113 (8) obj. -10.9929 iterations 5
Cbc0038I Pass  60: suminf.    1.24180 (8) obj. -10.9929 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 108 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -3.36749 - took 0.14 seconds
Cbc0012I Integer solution of -3.367487 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 87 rows 49 columns
Cbc0031I 29 added rows had average density of 80.862069
Cbc0013I At root node, 29 cuts changed objective from -36.809082 to -28.451999 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13382 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1909 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.367487 best solution, best possible -28.451999 (1.23 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 102 rows 57 columns
Cbc0038I Full problem 185 rows 101 columns, reduced to 90 rows 50 columns
Cbc0010I After 119 nodes, 2 on tree, -3.367487 best solution, best possible -11.036231 (1.93 seconds)
Cbc0001I Search completed - best objective -3.367487000000004, took 12411 iterations and 126 nodes (1.96 seconds)
Cbc0032I Strong branching done 1556 times (25042 iterations), fathomed 4 nodes and fixed 48 variables
Cbc0035I Maximum depth 37, 497 variables fixed on reduced cost
Total time (CPU seconds):       1.88   (Wallclock seconds):       1.97

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-79) rows, 141 (-62) columns and 2521 (-3133) elements
Clp1000I sum of infeasibilities 4.71226e-06 - average 3.73989e-08, 64 fixed columns
Coin0506I Presolve 66 (-60) rows, 76 (-65) columns and 278 (-2243) elements
Clp0006I 0  Obj -0.40161584 Dual inf 3.3163491 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 1.3391246 - largest nonzero change 2.8218597e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value -0.12821694
Clp0000I Optimal - objective value -0.12821694
Coin0511I After Postsolve, objective -0.12821694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -0.12821694 Dual inf 68.011237 (41)
Clp0014I Perturbing problem by 0.001% of 1.5190239 - largest nonzero change 2.9074286e-05 ( 0.0023005115%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 54.005318
Clp0000I Optimal - objective value 54.005318
Clp0000I Optimal - objective value 54.005318
Coin0511I After Postsolve, objective 54.005318, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.00531801 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 141 columns (141 integer (141 of which binary)) and 2525 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.864%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 8.62113
Cbc0038I Pass   1: suminf.    4.32566 (35) obj. -37.9248 iterations 21
Cbc0038I Pass   2: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass   3: suminf.    0.87761 (8) obj. 1.45248 iterations 27
Cbc0038I Solution found of 8.57487
Cbc0038I Rounding solution of 1.92835 is better than previous of 8.57487

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 141 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -3.3216
Cbc0038I Pass   4: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass   5: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass   6: suminf.    1.36078 (11) obj. -3.3216 iterations 25
Cbc0038I Pass   7: suminf.    0.31092 (2) obj. -3.3216 iterations 13
Cbc0038I Pass   8: suminf.    0.60192 (2) obj. -3.3216 iterations 3
Cbc0038I Pass   9: suminf.    1.69685 (14) obj. -8.34532 iterations 37
Cbc0038I Pass  10: suminf.    1.53242 (11) obj. -8.04654 iterations 15
Cbc0038I Pass  11: suminf.    0.29680 (2) obj. -3.3216 iterations 11
Cbc0038I Pass  12: suminf.    0.25500 (2) obj. -3.82321 iterations 1
Cbc0038I Pass  13: suminf.    0.18334 (2) obj. -3.3216 iterations 4
Cbc0038I Pass  14: suminf.    0.18334 (2) obj. -3.3216 iterations 0
Cbc0038I Pass  15: suminf.    0.52782 (2) obj. -3.3216 iterations 3
Cbc0038I Pass  16: suminf.    1.20465 (8) obj. -3.3216 iterations 31
Cbc0038I Pass  17: suminf.    0.82461 (7) obj. -3.3216 iterations 9
Cbc0038I Pass  18: suminf.    0.68391 (3) obj. -3.3216 iterations 7
Cbc0038I Pass  19: suminf.    0.68391 (3) obj. -3.3216 iterations 0
Cbc0038I Pass  20: suminf.    0.34250 (3) obj. -3.3216 iterations 8
Cbc0038I Pass  21: suminf.    0.34250 (3) obj. -3.3216 iterations 1
Cbc0038I Pass  22: suminf.    0.27684 (3) obj. -3.3216 iterations 9
Cbc0038I Pass  23: suminf.    0.27684 (3) obj. -3.3216 iterations 0
Cbc0038I Pass  24: suminf.    0.56856 (2) obj. -3.3216 iterations 6
Cbc0038I Pass  25: suminf.    0.27922 (2) obj. -3.3216 iterations 3
Cbc0038I Pass  26: suminf.    2.15545 (11) obj. -3.3216 iterations 30
Cbc0038I Pass  27: suminf.    1.22200 (8) obj. -3.71881 iterations 7
Cbc0038I Pass  28: suminf.    0.88611 (4) obj. -3.3216 iterations 15
Cbc0038I Pass  29: suminf.    0.87397 (4) obj. -3.3216 iterations 1
Cbc0038I Pass  30: suminf.    0.81757 (3) obj. -3.3216 iterations 11
Cbc0038I Pass  31: suminf.    0.81757 (3) obj. -3.3216 iterations 0
Cbc0038I Pass  32: suminf.    0.63220 (3) obj. -3.3216 iterations 8
Cbc0038I Pass  33: suminf.    0.49248 (3) obj. -4.99817 iterations 1
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 141 columns, reduced to 26 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 1.92835 to -2.52788 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.7713
Cbc0038I Pass  33: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass  34: suminf.    4.32566 (35) obj. -37.9248 iterations 0
Cbc0038I Pass  35: suminf.    2.18741 (19) obj. -18.7977 iterations 16
Cbc0038I Pass  36: suminf.    0.91463 (10) obj. -12.7713 iterations 22
Cbc0038I Pass  37: suminf.    0.91463 (10) obj. -12.7713 iterations 1
Cbc0038I Pass  38: suminf.    1.03929 (5) obj. -12.7713 iterations 13
Cbc0038I Pass  39: suminf.    1.03929 (5) obj. -12.7713 iterations 0
Cbc0038I Pass  40: suminf.    0.81206 (4) obj. -12.7713 iterations 6
Cbc0038I Pass  41: suminf.    0.57578 (3) obj. -14.1428 iterations 5
Cbc0038I Pass  42: suminf.    0.77170 (3) obj. -12.7713 iterations 4
Cbc0038I Pass  43: suminf.    1.73742 (10) obj. -12.7713 iterations 19
Cbc0038I Pass  44: suminf.    1.24443 (9) obj. -12.7713 iterations 7
Cbc0038I Pass  45: suminf.    0.62903 (4) obj. -12.7713 iterations 9
Cbc0038I Pass  46: suminf.    0.59599 (3) obj. -12.9781 iterations 3
Cbc0038I Pass  47: suminf.    0.62552 (3) obj. -12.7713 iterations 4
Cbc0038I Pass  48: suminf.    2.18340 (12) obj. -12.7713 iterations 29
Cbc0038I Pass  49: suminf.    1.60064 (11) obj. -16.4025 iterations 10
Cbc0038I Pass  50: suminf.    1.55857 (8) obj. -12.7713 iterations 15
Cbc0038I Pass  51: suminf.    1.55857 (8) obj. -12.7713 iterations 0
Cbc0038I Pass  52: suminf.    1.55192 (6) obj. -12.7713 iterations 18
Cbc0038I Pass  53: suminf.    0.89380 (5) obj. -12.7713 iterations 7
Cbc0038I Pass  54: suminf.    1.24676 (4) obj. -12.7713 iterations 10
Cbc0038I Pass  55: suminf.    0.70858 (5) obj. -12.7713 iterations 6
Cbc0038I Pass  56: suminf.    1.32454 (5) obj. -12.7713 iterations 8
Cbc0038I Pass  57: suminf.    2.15211 (13) obj. -12.7713 iterations 19
Cbc0038I Pass  58: suminf.    1.92030 (10) obj. -12.7713 iterations 8
Cbc0038I Pass  59: suminf.    2.81274 (9) obj. -12.7713 iterations 16
Cbc0038I Pass  60: suminf.    2.06109 (7) obj. -12.7713 iterations 6
Cbc0038I Pass  61: suminf.    1.66424 (6) obj. -12.7713 iterations 10
Cbc0038I Pass  62: suminf.    1.66424 (6) obj. -12.7713 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 141 columns, reduced to 38 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -2.52788 - took 0.07 seconds
Cbc0012I Integer solution of -2.527875 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 126 rows 141 columns, reduced to 12 rows 14 columns
Cbc0031I 55 added rows had average density of 76.854545
Cbc0013I At root node, 55 cuts changed objective from -50.570216 to -11.046329 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12350 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1866 row cuts average 135.7 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1115 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1671 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 447 row cuts average 77.5 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.404 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.527875 best solution, best possible -11.046329 (2.51 seconds)
Cbc0010I After 16 nodes, 13 on tree, -2.527875 best solution, best possible -11.046329 (3.21 seconds)
Cbc0038I Full problem 126 rows 141 columns, reduced to 30 rows 39 columns
Cbc0012I Integer solution of -2.62575 found by rounding after 9813 iterations and 66 nodes (3.83 seconds)
Cbc0012I Integer solution of -2.8983 found by DiveCoefficient after 9970 iterations and 83 nodes (3.87 seconds)
Cbc0012I Integer solution of -2.919025 found by DiveCoefficient after 10026 iterations and 95 nodes (3.88 seconds)
Cbc0038I Full problem 126 rows 141 columns, reduced to 3 rows 4 columns
Cbc0004I Integer solution of -3.367487 found after 10067 iterations and 99 nodes (3.90 seconds)
Cbc0010I After 102 nodes, 3 on tree, -3.367487 best solution, best possible -11.046329 (3.95 seconds)
Cbc0001I Search completed - best objective -3.367487000000004, took 11718 iterations and 124 nodes (4.35 seconds)
Cbc0032I Strong branching done 1494 times (24514 iterations), fathomed 19 nodes and fixed 27 variables
Cbc0035I Maximum depth 17, 451 variables fixed on reduced cost
Total time (CPU seconds):       3.67   (Wallclock seconds):       4.37

