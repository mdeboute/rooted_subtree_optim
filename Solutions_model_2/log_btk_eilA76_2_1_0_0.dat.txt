Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000117599 - average 8.71104e-07, 28 fixed columns
Coin0506I Presolve 79 (-56) rows, 46 (-29) columns and 242 (-170) elements
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Coin0511I After Postsolve, objective 95.380372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Coin0511I After Postsolve, objective 95.380372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.38037223 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 75 columns (74 integer (74 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 6.59758
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.5086 iterations 43
Cbc0038I Solution found of -21.5086
Cbc0038I Relaxing continuous gives -21.5086
Cbc0038I Rounding solution of -30.6178 is better than previous of -21.5086

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 51 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -30.6178 to -68.5073 (0.02 seconds)
Cbc0038I Round again with cutoff of -71.1947
Cbc0038I Pass   2: suminf.    2.67612 (8) obj. -71.1947 iterations 16
Cbc0038I Pass   3: suminf.    1.86543 (5) obj. -71.1947 iterations 6
Cbc0038I Pass   4: suminf.    1.11081 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   5: suminf.    0.53482 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   6: suminf.    0.53260 (3) obj. -71.1947 iterations 3
Cbc0038I Pass   7: suminf.    1.35173 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   8: suminf.    0.66082 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   9: suminf.    2.47896 (9) obj. -71.1947 iterations 18
Cbc0038I Pass  10: suminf.    2.38700 (9) obj. -71.1947 iterations 8
Cbc0038I Pass  11: suminf.    1.77637 (5) obj. -71.1947 iterations 26
Cbc0038I Pass  12: suminf.    1.70133 (5) obj. -71.1947 iterations 10
Cbc0038I Pass  13: suminf.    1.97649 (6) obj. -71.1947 iterations 9
Cbc0038I Pass  14: suminf.    1.97649 (6) obj. -71.1947 iterations 0
Cbc0038I Pass  15: suminf.    0.53260 (3) obj. -71.1947 iterations 10
Cbc0038I Pass  16: suminf.    0.53260 (3) obj. -71.1947 iterations 5
Cbc0038I Pass  17: suminf.    1.35173 (3) obj. -71.1947 iterations 9
Cbc0038I Pass  18: suminf.    0.66082 (3) obj. -71.1947 iterations 10
Cbc0038I Pass  19: suminf.    2.07274 (10) obj. -71.1947 iterations 12
Cbc0038I Pass  20: suminf.    1.17525 (4) obj. -71.1947 iterations 13
Cbc0038I Pass  21: suminf.    1.17525 (4) obj. -71.1947 iterations 1
Cbc0038I Pass  22: suminf.    1.26818 (4) obj. -71.1947 iterations 8
Cbc0038I Pass  23: suminf.    3.43345 (14) obj. -71.1947 iterations 22
Cbc0038I Pass  24: suminf.    1.04584 (5) obj. -71.1947 iterations 20
Cbc0038I Pass  25: suminf.    1.96107 (5) obj. -71.1947 iterations 10
Cbc0038I Pass  26: suminf.    1.70124 (5) obj. -71.1947 iterations 2
Cbc0038I Pass  27: suminf.    1.61538 (5) obj. -71.1947 iterations 1
Cbc0038I Pass  28: suminf.    3.42051 (13) obj. -71.1947 iterations 19
Cbc0038I Pass  29: suminf.    2.22875 (9) obj. -71.1947 iterations 11
Cbc0038I Pass  30: suminf.    1.37548 (5) obj. -71.1947 iterations 16
Cbc0038I Pass  31: suminf.    1.36593 (6) obj. -71.1947 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -68.5073 to -72.0353 (0.05 seconds)
Cbc0038I Round again with cutoff of -76.7044
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.05147 (10) obj. -76.7044 iterations 2
Cbc0038I Pass  32: suminf.    2.40042 (8) obj. -76.7044 iterations 12
Cbc0038I Pass  33: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  34: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  35: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  36: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  37: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  38: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  39: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  40: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  41: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  42: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  43: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  44: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  45: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  46: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  47: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  48: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  49: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  50: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  51: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  52: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  53: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  54: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  55: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  56: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  57: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  58: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  59: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  60: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -72.0353 - took 0.06 seconds
Cbc0012I Integer solution of -72.03533 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 53 rows 32 columns
Cbc0031I 18 added rows had average density of 46.277778
Cbc0013I At root node, 18 cuts changed objective from -95.380372 to -84.943628 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3686 row cuts average 3.3 elements, 7 column cuts (7 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1010 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 45.6 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -72.03533, took 4410 iterations and 20 nodes (0.55 seconds)
Cbc0032I Strong branching done 242 times (2038 iterations), fathomed 2 nodes and fixed 40 variables
Cbc0035I Maximum depth 4, 67 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 115 (-37) columns and 1910 (-1393) elements
Clp1000I sum of infeasibilities 2.16753e-07 - average 2.12503e-09, 60 fixed columns
Coin0506I Presolve 43 (-59) rows, 55 (-60) columns and 190 (-1720) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.4748543 - largest nonzero change 2.0141817e-05 ( 0.00088996209%) - largest zero change 2.9236258e-05
Clp0000I Optimal - objective value 45.120446
Clp0000I Optimal - objective value 45.120446
Coin0511I After Postsolve, objective 45.120446, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6770376 - largest nonzero change 1.7404306e-05 ( 0.0010393299%) - largest zero change 2.9973938e-05
Clp0000I Optimal - objective value 105.9707
Clp0000I Optimal - objective value 105.9707
Clp0000I Optimal - objective value 105.9707
Coin0511I After Postsolve, objective 105.9707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.9707026 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 116 columns (116 integer (116 of which binary)) and 1916 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.597%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.25029
Cbc0038I Pass   1: suminf.    1.68721 (26) obj. -76.7742 iterations 18
Cbc0038I Pass   2: suminf.    1.68721 (26) obj. -76.7742 iterations 0
Cbc0038I Solution found of -45.0343
Cbc0038I Rounding solution of -59.2139 is better than previous of -45.0343

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -62.9984
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.68721 (26) obj. -76.7742 iterations 0
Cbc0038I Pass   4: suminf.    1.68721 (26) obj. -76.7742 iterations 0
Cbc0038I Pass   5: suminf.    1.21616 (3) obj. -62.9984 iterations 41
Cbc0038I Pass   6: suminf.    0.29126 (3) obj. -64.8208 iterations 8
Cbc0038I Pass   7: suminf.    0.90094 (3) obj. -62.9984 iterations 11
Cbc0038I Pass   8: suminf.    0.47112 (3) obj. -64.8209 iterations 5
Cbc0038I Pass   9: suminf.    1.62371 (11) obj. -67.3027 iterations 30
Cbc0038I Pass  10: suminf.    1.62371 (11) obj. -67.3027 iterations 4
Cbc0038I Pass  11: suminf.    1.75408 (9) obj. -62.9984 iterations 19
Cbc0038I Pass  12: suminf.    1.75408 (9) obj. -62.9984 iterations 0
Cbc0038I Pass  13: suminf.    1.50394 (5) obj. -62.9984 iterations 10
Cbc0038I Pass  14: suminf.    1.46767 (6) obj. -62.9984 iterations 2
Cbc0038I Pass  15: suminf.    0.96774 (6) obj. -62.9984 iterations 10
Cbc0038I Pass  16: suminf.    0.92708 (5) obj. -62.9984 iterations 4
Cbc0038I Pass  17: suminf.    1.53682 (12) obj. -62.9984 iterations 9
Cbc0038I Pass  18: suminf.    1.51905 (6) obj. -62.9984 iterations 7
Cbc0038I Pass  19: suminf.    0.96774 (6) obj. -62.9984 iterations 9
Cbc0038I Pass  20: suminf.    1.17125 (14) obj. -62.9984 iterations 31
Cbc0038I Pass  21: suminf.    1.07667 (12) obj. -63.0767 iterations 3
Cbc0038I Pass  22: suminf.    2.00635 (9) obj. -62.9984 iterations 21
Cbc0038I Pass  23: suminf.    0.66169 (5) obj. -63.4348 iterations 9
Cbc0038I Pass  24: suminf.    0.52746 (5) obj. -62.9984 iterations 4
Cbc0038I Pass  25: suminf.    1.98670 (5) obj. -62.9984 iterations 6
Cbc0038I Pass  26: suminf.    0.56299 (4) obj. -63.3066 iterations 6
Cbc0038I Pass  27: suminf.    2.27174 (12) obj. -62.9984 iterations 22
Cbc0038I Pass  28: suminf.    0.71613 (9) obj. -62.9984 iterations 6
Cbc0038I Pass  29: suminf.    0.57390 (8) obj. -62.9984 iterations 3
Cbc0038I Pass  30: suminf.    1.10180 (5) obj. -62.9984 iterations 12
Cbc0038I Pass  31: suminf.    0.65588 (6) obj. -62.9984 iterations 3
Cbc0038I Pass  32: suminf.    2.29963 (13) obj. -62.9984 iterations 10
Cbc0038I Rounding solution of -66.7274 is better than previous of -59.2139

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 53 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -66.7274 to -71.877 (0.08 seconds)
Cbc0038I Round again with cutoff of -76.9132
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.71613 (39) obj. -76.9132 iterations 9
Cbc0038I Pass  33: suminf.    1.69461 (27) obj. -76.9132 iterations 2
Cbc0038I Pass  34: suminf.    1.62128 (12) obj. -76.9132 iterations 29
Cbc0038I Pass  35: suminf.    0.95420 (12) obj. -77.5982 iterations 5
Cbc0038I Pass  36: suminf.    1.00109 (10) obj. -76.9132 iterations 16
Cbc0038I Pass  37: suminf.    0.95955 (10) obj. -76.9132 iterations 3
Cbc0038I Pass  38: suminf.    1.22477 (10) obj. -76.9132 iterations 5
Cbc0038I Pass  39: suminf.    1.22477 (10) obj. -76.9132 iterations 2
Cbc0038I Pass  40: suminf.    1.20603 (10) obj. -76.9132 iterations 4
Cbc0038I Pass  41: suminf.    1.20603 (10) obj. -76.9132 iterations 2
Cbc0038I Pass  42: suminf.    1.43188 (13) obj. -76.9132 iterations 7
Cbc0038I Pass  43: suminf.    1.30946 (10) obj. -76.9132 iterations 7
Cbc0038I Pass  44: suminf.    1.29354 (12) obj. -77.331 iterations 3
Cbc0038I Pass  45: suminf.    3.08872 (20) obj. -76.9132 iterations 9
Cbc0038I Pass  46: suminf.    2.26321 (19) obj. -76.9132 iterations 3
Cbc0038I Pass  47: suminf.    1.77873 (20) obj. -76.9132 iterations 1
Cbc0038I Pass  48: suminf.    2.59207 (19) obj. -76.9132 iterations 25
Cbc0038I Pass  49: suminf.    2.12678 (19) obj. -76.9132 iterations 2
Cbc0038I Pass  50: suminf.    2.18192 (19) obj. -76.9132 iterations 5
Cbc0038I Pass  51: suminf.    1.89810 (25) obj. -76.9132 iterations 18
Cbc0038I Pass  52: suminf.    1.80306 (20) obj. -76.9132 iterations 5
Cbc0038I Pass  53: suminf.    2.19989 (20) obj. -76.9132 iterations 16
Cbc0038I Pass  54: suminf.    2.19989 (20) obj. -76.9132 iterations 0
Cbc0038I Pass  55: suminf.    2.42923 (19) obj. -76.9132 iterations 11
Cbc0038I Pass  56: suminf.    2.22257 (19) obj. -76.9132 iterations 3
Cbc0038I Pass  57: suminf.    2.42923 (19) obj. -76.9132 iterations 10
Cbc0038I Pass  58: suminf.    2.22809 (19) obj. -76.9132 iterations 3
Cbc0038I Pass  59: suminf.    2.42923 (19) obj. -76.9132 iterations 9
Cbc0038I Pass  60: suminf.    2.10754 (16) obj. -76.9132 iterations 10
Cbc0038I Pass  61: suminf.    1.72502 (16) obj. -76.9132 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -71.877 - took 0.08 seconds
Cbc0012I Integer solution of -71.87697 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 103 rows 116 columns, reduced to 30 rows 36 columns
Cbc0031I 54 added rows had average density of 20.555556
Cbc0013I At root node, 54 cuts changed objective from -97.057905 to -76.4196 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 2098 row cuts average 10.3 elements, 7 column cuts (7 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 39.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 197 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 59.4 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.209 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -71.87697 best solution, best possible -76.4196 (0.77 seconds)
Cbc0004I Integer solution of -72.03533 found after 658 iterations and 2 nodes (0.92 seconds)
Cbc0010I After 8 nodes, 5 on tree, -72.03533 best solution, best possible -75.526003 (1.50 seconds)
Cbc0001I Search completed - best objective -72.03533, took 1671 iterations and 26 nodes (1.84 seconds)
Cbc0032I Strong branching done 458 times (7816 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 86 variables fixed on reduced cost
Total time (CPU seconds):       1.25   (Wallclock seconds):       1.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000117599 - average 8.71104e-07, 28 fixed columns
Coin0506I Presolve 79 (-56) rows, 46 (-29) columns and 242 (-170) elements
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Coin0511I After Postsolve, objective 95.380372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Coin0511I After Postsolve, objective 95.380372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.38037223 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 75 columns (74 integer (74 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 6.59758
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.5086 iterations 43
Cbc0038I Solution found of -21.5086
Cbc0038I Relaxing continuous gives -21.5086
Cbc0038I Rounding solution of -30.6178 is better than previous of -21.5086

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 51 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -30.6178 to -68.5073 (0.02 seconds)
Cbc0038I Round again with cutoff of -71.1947
Cbc0038I Pass   2: suminf.    2.67612 (8) obj. -71.1947 iterations 16
Cbc0038I Pass   3: suminf.    1.86543 (5) obj. -71.1947 iterations 6
Cbc0038I Pass   4: suminf.    1.11081 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   5: suminf.    0.53482 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   6: suminf.    0.53260 (3) obj. -71.1947 iterations 3
Cbc0038I Pass   7: suminf.    1.35173 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   8: suminf.    0.66082 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   9: suminf.    2.47896 (9) obj. -71.1947 iterations 18
Cbc0038I Pass  10: suminf.    2.38700 (9) obj. -71.1947 iterations 8
Cbc0038I Pass  11: suminf.    1.77637 (5) obj. -71.1947 iterations 26
Cbc0038I Pass  12: suminf.    1.70133 (5) obj. -71.1947 iterations 10
Cbc0038I Pass  13: suminf.    1.97649 (6) obj. -71.1947 iterations 9
Cbc0038I Pass  14: suminf.    1.97649 (6) obj. -71.1947 iterations 0
Cbc0038I Pass  15: suminf.    0.53260 (3) obj. -71.1947 iterations 10
Cbc0038I Pass  16: suminf.    0.53260 (3) obj. -71.1947 iterations 5
Cbc0038I Pass  17: suminf.    1.35173 (3) obj. -71.1947 iterations 9
Cbc0038I Pass  18: suminf.    0.66082 (3) obj. -71.1947 iterations 10
Cbc0038I Pass  19: suminf.    2.07274 (10) obj. -71.1947 iterations 12
Cbc0038I Pass  20: suminf.    1.17525 (4) obj. -71.1947 iterations 13
Cbc0038I Pass  21: suminf.    1.17525 (4) obj. -71.1947 iterations 1
Cbc0038I Pass  22: suminf.    1.26818 (4) obj. -71.1947 iterations 8
Cbc0038I Pass  23: suminf.    3.43345 (14) obj. -71.1947 iterations 22
Cbc0038I Pass  24: suminf.    1.04584 (5) obj. -71.1947 iterations 20
Cbc0038I Pass  25: suminf.    1.96107 (5) obj. -71.1947 iterations 10
Cbc0038I Pass  26: suminf.    1.70124 (5) obj. -71.1947 iterations 2
Cbc0038I Pass  27: suminf.    1.61538 (5) obj. -71.1947 iterations 1
Cbc0038I Pass  28: suminf.    3.42051 (13) obj. -71.1947 iterations 19
Cbc0038I Pass  29: suminf.    2.22875 (9) obj. -71.1947 iterations 11
Cbc0038I Pass  30: suminf.    1.37548 (5) obj. -71.1947 iterations 16
Cbc0038I Pass  31: suminf.    1.36593 (6) obj. -71.1947 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -68.5073 to -72.0353 (0.05 seconds)
Cbc0038I Round again with cutoff of -76.7044
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.05147 (10) obj. -76.7044 iterations 2
Cbc0038I Pass  32: suminf.    2.40042 (8) obj. -76.7044 iterations 12
Cbc0038I Pass  33: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  34: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  35: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  36: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  37: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  38: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  39: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  40: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  41: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  42: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  43: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  44: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  45: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  46: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  47: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  48: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  49: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  50: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  51: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  52: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  53: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  54: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  55: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  56: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  57: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  58: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  59: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  60: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -72.0353 - took 0.06 seconds
Cbc0012I Integer solution of -72.03533 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 53 rows 32 columns
Cbc0031I 18 added rows had average density of 46.277778
Cbc0013I At root node, 18 cuts changed objective from -95.380372 to -84.943628 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3686 row cuts average 3.3 elements, 7 column cuts (7 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1010 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 45.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0001I Search completed - best objective -72.03533, took 4410 iterations and 20 nodes (0.57 seconds)
Cbc0032I Strong branching done 242 times (2038 iterations), fathomed 2 nodes and fixed 40 variables
Cbc0035I Maximum depth 4, 67 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 115 (-38) columns and 1910 (-1394) elements
Clp1000I sum of infeasibilities 2.16753e-07 - average 2.12503e-09, 60 fixed columns
Coin0506I Presolve 43 (-59) rows, 55 (-60) columns and 190 (-1720) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.4748543 - largest nonzero change 2.0141817e-05 ( 0.00088996209%) - largest zero change 2.9236258e-05
Clp0000I Optimal - objective value 45.120446
Clp0000I Optimal - objective value 45.120446
Coin0511I After Postsolve, objective 45.120446, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6770376 - largest nonzero change 1.7404306e-05 ( 0.0010393299%) - largest zero change 2.9973938e-05
Clp0000I Optimal - objective value 105.9707
Clp0000I Optimal - objective value 105.9707
Clp0000I Optimal - objective value 105.9707
Coin0511I After Postsolve, objective 105.9707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.9707026 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 116 columns (116 integer (116 of which binary)) and 1916 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.597%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.25029
Cbc0038I Pass   1: suminf.    1.68721 (26) obj. -76.7742 iterations 18
Cbc0038I Pass   2: suminf.    1.68721 (26) obj. -76.7742 iterations 0
Cbc0038I Solution found of -45.0343
Cbc0038I Rounding solution of -59.2139 is better than previous of -45.0343

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -62.9984
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.68721 (26) obj. -76.7742 iterations 0
Cbc0038I Pass   4: suminf.    1.68721 (26) obj. -76.7742 iterations 0
Cbc0038I Pass   5: suminf.    1.21616 (3) obj. -62.9984 iterations 41
Cbc0038I Pass   6: suminf.    0.29126 (3) obj. -64.8208 iterations 8
Cbc0038I Pass   7: suminf.    0.90094 (3) obj. -62.9984 iterations 11
Cbc0038I Pass   8: suminf.    0.47112 (3) obj. -64.8209 iterations 5
Cbc0038I Pass   9: suminf.    1.62371 (11) obj. -67.3027 iterations 30
Cbc0038I Pass  10: suminf.    1.62371 (11) obj. -67.3027 iterations 4
Cbc0038I Pass  11: suminf.    1.75408 (9) obj. -62.9984 iterations 19
Cbc0038I Pass  12: suminf.    1.75408 (9) obj. -62.9984 iterations 0
Cbc0038I Pass  13: suminf.    1.50394 (5) obj. -62.9984 iterations 10
Cbc0038I Pass  14: suminf.    1.46767 (6) obj. -62.9984 iterations 2
Cbc0038I Pass  15: suminf.    0.96774 (6) obj. -62.9984 iterations 10
Cbc0038I Pass  16: suminf.    0.92708 (5) obj. -62.9984 iterations 4
Cbc0038I Pass  17: suminf.    1.53682 (12) obj. -62.9984 iterations 9
Cbc0038I Pass  18: suminf.    1.51905 (6) obj. -62.9984 iterations 7
Cbc0038I Pass  19: suminf.    0.96774 (6) obj. -62.9984 iterations 9
Cbc0038I Pass  20: suminf.    1.17125 (14) obj. -62.9984 iterations 31
Cbc0038I Pass  21: suminf.    1.07667 (12) obj. -63.0767 iterations 3
Cbc0038I Pass  22: suminf.    2.00635 (9) obj. -62.9984 iterations 21
Cbc0038I Pass  23: suminf.    0.66169 (5) obj. -63.4348 iterations 9
Cbc0038I Pass  24: suminf.    0.52746 (5) obj. -62.9984 iterations 4
Cbc0038I Pass  25: suminf.    1.98670 (5) obj. -62.9984 iterations 6
Cbc0038I Pass  26: suminf.    0.56299 (4) obj. -63.3066 iterations 6
Cbc0038I Pass  27: suminf.    2.27174 (12) obj. -62.9984 iterations 22
Cbc0038I Pass  28: suminf.    0.71613 (9) obj. -62.9984 iterations 6
Cbc0038I Pass  29: suminf.    0.57390 (8) obj. -62.9984 iterations 3
Cbc0038I Pass  30: suminf.    1.10180 (5) obj. -62.9984 iterations 12
Cbc0038I Pass  31: suminf.    0.65588 (6) obj. -62.9984 iterations 3
Cbc0038I Pass  32: suminf.    2.29963 (13) obj. -62.9984 iterations 10
Cbc0038I Rounding solution of -66.7274 is better than previous of -59.2139

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 53 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -66.7274 to -71.877 (0.09 seconds)
Cbc0038I Round again with cutoff of -76.9132
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.71613 (39) obj. -76.9132 iterations 9
Cbc0038I Pass  33: suminf.    1.69461 (27) obj. -76.9132 iterations 2
Cbc0038I Pass  34: suminf.    1.62128 (12) obj. -76.9132 iterations 29
Cbc0038I Pass  35: suminf.    0.95420 (12) obj. -77.5982 iterations 5
Cbc0038I Pass  36: suminf.    1.00109 (10) obj. -76.9132 iterations 16
Cbc0038I Pass  37: suminf.    0.95955 (10) obj. -76.9132 iterations 3
Cbc0038I Pass  38: suminf.    1.22477 (10) obj. -76.9132 iterations 5
Cbc0038I Pass  39: suminf.    1.22477 (10) obj. -76.9132 iterations 2
Cbc0038I Pass  40: suminf.    1.20603 (10) obj. -76.9132 iterations 4
Cbc0038I Pass  41: suminf.    1.20603 (10) obj. -76.9132 iterations 2
Cbc0038I Pass  42: suminf.    1.43188 (13) obj. -76.9132 iterations 7
Cbc0038I Pass  43: suminf.    1.30946 (10) obj. -76.9132 iterations 7
Cbc0038I Pass  44: suminf.    1.29354 (12) obj. -77.331 iterations 3
Cbc0038I Pass  45: suminf.    3.08872 (20) obj. -76.9132 iterations 9
Cbc0038I Pass  46: suminf.    2.26321 (19) obj. -76.9132 iterations 3
Cbc0038I Pass  47: suminf.    1.77873 (20) obj. -76.9132 iterations 1
Cbc0038I Pass  48: suminf.    2.59207 (19) obj. -76.9132 iterations 25
Cbc0038I Pass  49: suminf.    2.12678 (19) obj. -76.9132 iterations 2
Cbc0038I Pass  50: suminf.    2.18192 (19) obj. -76.9132 iterations 5
Cbc0038I Pass  51: suminf.    1.89810 (25) obj. -76.9132 iterations 18
Cbc0038I Pass  52: suminf.    1.80306 (20) obj. -76.9132 iterations 5
Cbc0038I Pass  53: suminf.    2.19989 (20) obj. -76.9132 iterations 16
Cbc0038I Pass  54: suminf.    2.19989 (20) obj. -76.9132 iterations 0
Cbc0038I Pass  55: suminf.    2.42923 (19) obj. -76.9132 iterations 11
Cbc0038I Pass  56: suminf.    2.22257 (19) obj. -76.9132 iterations 3
Cbc0038I Pass  57: suminf.    2.42923 (19) obj. -76.9132 iterations 10
Cbc0038I Pass  58: suminf.    2.22809 (19) obj. -76.9132 iterations 3
Cbc0038I Pass  59: suminf.    2.42923 (19) obj. -76.9132 iterations 9
Cbc0038I Pass  60: suminf.    2.10754 (16) obj. -76.9132 iterations 10
Cbc0038I Pass  61: suminf.    1.72502 (16) obj. -76.9132 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -71.877 - took 0.08 seconds
Cbc0012I Integer solution of -71.87697 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 103 rows 116 columns, reduced to 30 rows 36 columns
Cbc0031I 54 added rows had average density of 20.555556
Cbc0013I At root node, 54 cuts changed objective from -97.057905 to -76.4196 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 2098 row cuts average 10.3 elements, 7 column cuts (7 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 39.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 197 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 59.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -71.87697 best solution, best possible -76.4196 (0.66 seconds)
Cbc0004I Integer solution of -72.03533 found after 658 iterations and 2 nodes (0.80 seconds)
Cbc0010I After 9 nodes, 6 on tree, -72.03533 best solution, best possible -75.526003 (1.38 seconds)
Cbc0001I Search completed - best objective -72.03533, took 1671 iterations and 26 nodes (1.71 seconds)
Cbc0032I Strong branching done 458 times (7816 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 86 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.71

