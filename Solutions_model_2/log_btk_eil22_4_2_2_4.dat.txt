Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 19 (-5) columns and 92 (-37) elements
Clp1000I sum of infeasibilities 5.03478e-06 - average 1.62412e-07, 4 fixed columns
Coin0506I Presolve 23 (-8) rows, 14 (-5) columns and 67 (-25) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 74.161658
Clp0000I Optimal - objective value 74.161658
Coin0511I After Postsolve, objective 74.161658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.130005 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 74.161658
Clp0000I Optimal - objective value 74.161658
Clp0000I Optimal - objective value 74.161658
Coin0511I After Postsolve, objective 74.161658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.16165817 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 92 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 4.04211
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -38.6876 iterations 10
Cbc0038I Solution found of -38.6876
Cbc0038I Relaxing continuous gives -38.6876
Cbc0038I Rounding solution of -41.3876 is better than previous of -38.6876

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -44.6651
Cbc0038I Pass   2: suminf.    0.20670 (3) obj. -44.6651 iterations 4
Cbc0038I Pass   3: suminf.    0.86667 (2) obj. -44.6651 iterations 3
Cbc0038I Pass   4: suminf.    0.74195 (2) obj. -44.6651 iterations 2
Cbc0038I Pass   5: suminf.    1.28272 (6) obj. -44.6651 iterations 3
Cbc0038I Pass   6: suminf.    0.74195 (2) obj. -44.6651 iterations 2
Cbc0038I Pass   7: suminf.    0.98351 (3) obj. -44.6651 iterations 3
Cbc0038I Pass   8: suminf.    0.28069 (1) obj. -44.6651 iterations 2
Cbc0038I Pass   9: suminf.    0.20670 (3) obj. -44.6651 iterations 3
Cbc0038I Pass  10: suminf.    0.86667 (2) obj. -44.6651 iterations 2
Cbc0038I Pass  11: suminf.    0.75637 (4) obj. -44.6651 iterations 5
Cbc0038I Pass  12: suminf.    0.47683 (4) obj. -44.6651 iterations 3
Cbc0038I Pass  13: suminf.    0.74801 (3) obj. -44.6651 iterations 3
Cbc0038I Pass  14: suminf.    0.74195 (2) obj. -44.6651 iterations 1
Cbc0038I Pass  15: suminf.    1.28272 (6) obj. -44.6651 iterations 2
Cbc0038I Pass  16: suminf.    0.74195 (2) obj. -44.6651 iterations 2
Cbc0038I Pass  17: suminf.    0.86667 (2) obj. -44.6651 iterations 1
Cbc0038I Pass  18: suminf.    2.27076 (7) obj. -44.6651 iterations 5
Cbc0038I Pass  19: suminf.    0.47683 (4) obj. -44.6651 iterations 3
Cbc0038I Pass  20: suminf.    0.47683 (4) obj. -44.6651 iterations 0
Cbc0038I Pass  21: suminf.    0.74801 (3) obj. -44.6651 iterations 3
Cbc0038I Pass  22: suminf.    0.74195 (2) obj. -44.6651 iterations 1
Cbc0038I Pass  23: suminf.    0.86667 (2) obj. -44.6651 iterations 1
Cbc0038I Pass  24: suminf.    0.51739 (4) obj. -44.6651 iterations 6
Cbc0038I Pass  25: suminf.    0.46662 (4) obj. -44.6651 iterations 2
Cbc0038I Pass  26: suminf.    0.32000 (1) obj. -44.6651 iterations 5
Cbc0038I Pass  27: suminf.    0.13055 (2) obj. -44.6651 iterations 3
Cbc0038I Pass  28: suminf.    0.33600 (2) obj. -44.6651 iterations 3
Cbc0038I Pass  29: suminf.    0.76108 (4) obj. -44.6651 iterations 5
Cbc0038I Pass  30: suminf.    0.73777 (5) obj. -44.6651 iterations 3
Cbc0038I Pass  31: suminf.    0.47683 (4) obj. -44.6651 iterations 8
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -50.5644
Cbc0038I Pass  31: suminf.    0.44168 (3) obj. -50.5644 iterations 0
Cbc0038I Pass  32: suminf.    0.86667 (2) obj. -50.5644 iterations 3
Cbc0038I Pass  33: suminf.    0.97692 (2) obj. -50.5644 iterations 2
Cbc0038I Pass  34: suminf.    1.71292 (5) obj. -50.5644 iterations 4
Cbc0038I Pass  35: suminf.    2.33084 (8) obj. -50.5644 iterations 4
Cbc0038I Pass  36: suminf.    1.43666 (4) obj. -50.5644 iterations 6
Cbc0038I Pass  37: suminf.    1.18274 (5) obj. -50.5644 iterations 6
Cbc0038I Pass  38: suminf.    0.99132 (4) obj. -50.5644 iterations 2
Cbc0038I Pass  39: suminf.    1.04111 (5) obj. -50.5644 iterations 3
Cbc0038I Pass  40: suminf.    1.89238 (5) obj. -50.5644 iterations 10
Cbc0038I Pass  41: suminf.    0.97774 (4) obj. -50.5644 iterations 3
Cbc0038I Pass  42: suminf.    0.95644 (4) obj. -50.5644 iterations 3
Cbc0038I Pass  43: suminf.    0.98299 (3) obj. -50.5644 iterations 4
Cbc0038I Pass  44: suminf.    0.97692 (2) obj. -50.5644 iterations 1
Cbc0038I Pass  45: suminf.    0.86667 (2) obj. -50.5644 iterations 2
Cbc0038I Pass  46: suminf.    1.16280 (3) obj. -50.5644 iterations 1
Cbc0038I Pass  47: suminf.    3.82883 (10) obj. -50.5644 iterations 8
Cbc0038I Pass  48: suminf.    2.02946 (6) obj. -50.5644 iterations 3
Cbc0038I Pass  49: suminf.    1.14959 (3) obj. -50.5644 iterations 4
Cbc0038I Pass  50: suminf.    3.52859 (9) obj. -50.5644 iterations 9
Cbc0038I Pass  51: suminf.    1.06951 (4) obj. -50.5644 iterations 5
Cbc0038I Pass  52: suminf.    0.88564 (5) obj. -50.5644 iterations 1
Cbc0038I Pass  53: suminf.    0.98299 (3) obj. -50.5644 iterations 3
Cbc0038I Pass  54: suminf.    0.97692 (2) obj. -50.5644 iterations 1
Cbc0038I Pass  55: suminf.    0.86667 (2) obj. -50.5644 iterations 1
Cbc0038I Pass  56: suminf.    3.30201 (9) obj. -50.5644 iterations 11
Cbc0038I Pass  57: suminf.    1.17540 (4) obj. -50.5644 iterations 8
Cbc0038I Pass  58: suminf.    0.86667 (2) obj. -50.5644 iterations 2
Cbc0038I Pass  59: suminf.    0.95457 (3) obj. -50.5644 iterations 2
Cbc0038I Pass  60: suminf.    2.99506 (10) obj. -50.5644 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -41.3876 - took 0.02 seconds
Cbc0012I Integer solution of -41.3876 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 17 rows 11 columns
Cbc0031I 8 added rows had average density of 14.5
Cbc0013I At root node, 8 cuts changed objective from -74.161658 to -45.776661 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 332 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 346 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -41.38759999999999, took 1172 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 18 times (153 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-14) rows, 37 (-7) columns and 236 (-124) elements
Clp1000I sum of infeasibilities 2.53652e-08 - average 7.92663e-10, 27 fixed columns
Coin0506I Presolve 8 (-24) rows, 10 (-27) columns and 31 (-205) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value -1.9756045
Clp0000I Optimal - objective value -1.9756045
Coin0511I After Postsolve, objective -1.9756045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1377971 - largest nonzero change 2.1557836e-05 ( 0.0012607687%) - largest zero change 1.7778343e-05
Clp0000I Optimal - objective value 93.889198
Clp0000I Optimal - objective value 93.889198
Clp0000I Optimal - objective value 93.889198
Coin0511I After Postsolve, objective 93.889198, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.88919806 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 37 columns (37 integer (37 of which binary)) and 238 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.532%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.41326
Cbc0038I Pass   1: suminf.    1.32771 (10) obj. -68.2902 iterations 3
Cbc0038I Pass   2: suminf.    1.13130 (6) obj. -66.5221 iterations 1
Cbc0038I Solution found of -39.5876
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.5038
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.32771 (10) obj. -68.2902 iterations 0
Cbc0038I Pass   4: suminf.    1.13130 (6) obj. -66.5221 iterations 2
Cbc0038I Pass   5: suminf.    0.18348 (2) obj. -43.5038 iterations 9
Cbc0038I Pass   6: suminf.    0.33500 (2) obj. -56.3341 iterations 1
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -54.5876 iterations 1
Cbc0038I Pass   8: suminf.    0.90926 (12) obj. -43.5038 iterations 11
Cbc0038I Pass   9: suminf.    0.60000 (3) obj. -43.6209 iterations 4
Cbc0038I Pass  10: suminf.    0.55818 (7) obj. -43.5038 iterations 5
Cbc0038I Pass  11: suminf.    0.55818 (7) obj. -43.5038 iterations 0
Cbc0038I Pass  12: suminf.    1.54085 (6) obj. -43.5038 iterations 6
Cbc0038I Pass  13: suminf.    1.20952 (4) obj. -43.5038 iterations 1
Cbc0038I Pass  14: suminf.    0.95464 (3) obj. -43.5038 iterations 2
Cbc0038I Pass  15: suminf.    0.95464 (3) obj. -43.5038 iterations 0
Cbc0038I Pass  16: suminf.    0.85417 (3) obj. -48.6609 iterations 1
Cbc0038I Pass  17: suminf.    0.45840 (2) obj. -43.5038 iterations 2
Cbc0038I Pass  18: suminf.    0.59849 (2) obj. -43.5038 iterations 2
Cbc0038I Pass  19: suminf.    0.76207 (5) obj. -43.5038 iterations 6
Cbc0038I Pass  20: suminf.    0.64129 (4) obj. -43.5038 iterations 1
Cbc0038I Pass  21: suminf.    0.75303 (3) obj. -43.5038 iterations 4
Cbc0038I Pass  22: suminf.    0.75303 (3) obj. -43.5038 iterations 1
Cbc0038I Pass  23: suminf.    0.91202 (3) obj. -43.5038 iterations 2
Cbc0038I Pass  24: suminf.    1.75344 (5) obj. -43.5038 iterations 9
Cbc0038I Pass  25: suminf.    1.64816 (4) obj. -43.5038 iterations 4
Cbc0038I Pass  26: suminf.    1.65211 (4) obj. -43.5038 iterations 3
Cbc0038I Pass  27: suminf.    1.65211 (4) obj. -43.5038 iterations 0
Cbc0038I Pass  28: suminf.    0.96202 (3) obj. -43.5038 iterations 1
Cbc0038I Pass  29: suminf.    0.66562 (3) obj. -43.5038 iterations 2
Cbc0038I Pass  30: suminf.    0.91882 (3) obj. -43.5038 iterations 8
Cbc0038I Pass  31: suminf.    0.25000 (1) obj. -47.3876 iterations 3
Cbc0038I Pass  32: suminf.    0.50000 (3) obj. -43.5038 iterations 3
Cbc0038I Rounding solution of -41.3876 is better than previous of -39.5876

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -50.5528
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.32771 (10) obj. -68.2902 iterations 0
Cbc0038I Pass  33: suminf.    1.13130 (6) obj. -66.5221 iterations 2
Cbc0038I Pass  34: suminf.    0.53593 (2) obj. -50.5528 iterations 9
Cbc0038I Pass  35: suminf.    0.33500 (2) obj. -56.3341 iterations 1
Cbc0038I Pass  36: suminf.    0.25000 (1) obj. -54.5876 iterations 1
Cbc0038I Pass  37: suminf.    2.00985 (10) obj. -50.5528 iterations 10
Cbc0038I Pass  38: suminf.    1.44354 (10) obj. -50.5528 iterations 3
Cbc0038I Pass  39: suminf.    0.58842 (3) obj. -50.5528 iterations 1
Cbc0038I Pass  40: suminf.    0.61738 (3) obj. -50.5528 iterations 3
Cbc0038I Pass  41: suminf.    0.61738 (3) obj. -50.5528 iterations 0
Cbc0038I Pass  42: suminf.    0.79396 (2) obj. -50.5528 iterations 2
Cbc0038I Pass  43: suminf.    0.79396 (2) obj. -50.5528 iterations 0
Cbc0038I Pass  44: suminf.    0.52750 (2) obj. -56.9236 iterations 1
Cbc0038I Pass  45: suminf.    0.21744 (2) obj. -50.5528 iterations 1
Cbc0038I Pass  46: suminf.    0.90910 (4) obj. -50.5528 iterations 15
Cbc0038I Pass  47: suminf.    0.90910 (4) obj. -50.5528 iterations 0
Cbc0038I Pass  48: suminf.    0.88944 (4) obj. -50.5528 iterations 2
Cbc0038I Pass  49: suminf.    0.80903 (3) obj. -50.5528 iterations 2
Cbc0038I Pass  50: suminf.    0.59000 (2) obj. -52.2611 iterations 2
Cbc0038I Pass  51: suminf.    0.50686 (2) obj. -50.5528 iterations 1
Cbc0038I Pass  52: suminf.    0.67542 (2) obj. -50.5528 iterations 2
Cbc0038I Pass  53: suminf.    1.09158 (3) obj. -50.5528 iterations 8
Cbc0038I Pass  54: suminf.    0.50686 (2) obj. -50.5528 iterations 3
Cbc0038I Pass  55: suminf.    0.67542 (2) obj. -50.5528 iterations 2
Cbc0038I Pass  56: suminf.    1.31917 (4) obj. -50.5528 iterations 2
Cbc0038I Pass  57: suminf.    0.70111 (3) obj. -57.5944 iterations 1
Cbc0038I Pass  58: suminf.    0.36111 (2) obj. -50.6084 iterations 1
Cbc0038I Pass  59: suminf.    0.89292 (3) obj. -50.5528 iterations 4
Cbc0038I Pass  60: suminf.    0.85950 (3) obj. -55.3444 iterations 1
Cbc0038I Pass  61: suminf.    0.50686 (2) obj. -50.5528 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -41.3876 - took 0.02 seconds
Cbc0012I Integer solution of -41.3876 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 32 rows 37 columns, reduced to 6 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 10.625
Cbc0013I At root node, 8 cuts changed objective from -78.74861 to -47.548492 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 3.2 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 14 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -41.38759999999999, took 27 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 19 (-5) columns and 92 (-37) elements
Clp1000I sum of infeasibilities 5.03478e-06 - average 1.62412e-07, 4 fixed columns
Coin0506I Presolve 23 (-8) rows, 14 (-5) columns and 67 (-25) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 74.161658
Clp0000I Optimal - objective value 74.161658
Coin0511I After Postsolve, objective 74.161658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.130005 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 74.161658
Clp0000I Optimal - objective value 74.161658
Clp0000I Optimal - objective value 74.161658
Coin0511I After Postsolve, objective 74.161658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.16165817 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 92 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 4.04211
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -38.6876 iterations 10
Cbc0038I Solution found of -38.6876
Cbc0038I Relaxing continuous gives -38.6876
Cbc0038I Rounding solution of -41.3876 is better than previous of -38.6876

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -44.6651
Cbc0038I Pass   2: suminf.    0.20670 (3) obj. -44.6651 iterations 4
Cbc0038I Pass   3: suminf.    0.86667 (2) obj. -44.6651 iterations 3
Cbc0038I Pass   4: suminf.    0.74195 (2) obj. -44.6651 iterations 2
Cbc0038I Pass   5: suminf.    1.28272 (6) obj. -44.6651 iterations 3
Cbc0038I Pass   6: suminf.    0.74195 (2) obj. -44.6651 iterations 2
Cbc0038I Pass   7: suminf.    0.98351 (3) obj. -44.6651 iterations 3
Cbc0038I Pass   8: suminf.    0.28069 (1) obj. -44.6651 iterations 2
Cbc0038I Pass   9: suminf.    0.20670 (3) obj. -44.6651 iterations 3
Cbc0038I Pass  10: suminf.    0.86667 (2) obj. -44.6651 iterations 2
Cbc0038I Pass  11: suminf.    0.75637 (4) obj. -44.6651 iterations 5
Cbc0038I Pass  12: suminf.    0.47683 (4) obj. -44.6651 iterations 3
Cbc0038I Pass  13: suminf.    0.74801 (3) obj. -44.6651 iterations 3
Cbc0038I Pass  14: suminf.    0.74195 (2) obj. -44.6651 iterations 1
Cbc0038I Pass  15: suminf.    1.28272 (6) obj. -44.6651 iterations 2
Cbc0038I Pass  16: suminf.    0.74195 (2) obj. -44.6651 iterations 2
Cbc0038I Pass  17: suminf.    0.86667 (2) obj. -44.6651 iterations 1
Cbc0038I Pass  18: suminf.    2.27076 (7) obj. -44.6651 iterations 5
Cbc0038I Pass  19: suminf.    0.47683 (4) obj. -44.6651 iterations 3
Cbc0038I Pass  20: suminf.    0.47683 (4) obj. -44.6651 iterations 0
Cbc0038I Pass  21: suminf.    0.74801 (3) obj. -44.6651 iterations 3
Cbc0038I Pass  22: suminf.    0.74195 (2) obj. -44.6651 iterations 1
Cbc0038I Pass  23: suminf.    0.86667 (2) obj. -44.6651 iterations 1
Cbc0038I Pass  24: suminf.    0.51739 (4) obj. -44.6651 iterations 6
Cbc0038I Pass  25: suminf.    0.46662 (4) obj. -44.6651 iterations 2
Cbc0038I Pass  26: suminf.    0.32000 (1) obj. -44.6651 iterations 5
Cbc0038I Pass  27: suminf.    0.13055 (2) obj. -44.6651 iterations 3
Cbc0038I Pass  28: suminf.    0.33600 (2) obj. -44.6651 iterations 3
Cbc0038I Pass  29: suminf.    0.76108 (4) obj. -44.6651 iterations 5
Cbc0038I Pass  30: suminf.    0.73777 (5) obj. -44.6651 iterations 3
Cbc0038I Pass  31: suminf.    0.47683 (4) obj. -44.6651 iterations 8
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -50.5644
Cbc0038I Pass  31: suminf.    0.44168 (3) obj. -50.5644 iterations 0
Cbc0038I Pass  32: suminf.    0.86667 (2) obj. -50.5644 iterations 3
Cbc0038I Pass  33: suminf.    0.97692 (2) obj. -50.5644 iterations 2
Cbc0038I Pass  34: suminf.    1.71292 (5) obj. -50.5644 iterations 4
Cbc0038I Pass  35: suminf.    2.33084 (8) obj. -50.5644 iterations 4
Cbc0038I Pass  36: suminf.    1.43666 (4) obj. -50.5644 iterations 6
Cbc0038I Pass  37: suminf.    1.18274 (5) obj. -50.5644 iterations 6
Cbc0038I Pass  38: suminf.    0.99132 (4) obj. -50.5644 iterations 2
Cbc0038I Pass  39: suminf.    1.04111 (5) obj. -50.5644 iterations 3
Cbc0038I Pass  40: suminf.    1.89238 (5) obj. -50.5644 iterations 10
Cbc0038I Pass  41: suminf.    0.97774 (4) obj. -50.5644 iterations 3
Cbc0038I Pass  42: suminf.    0.95644 (4) obj. -50.5644 iterations 3
Cbc0038I Pass  43: suminf.    0.98299 (3) obj. -50.5644 iterations 4
Cbc0038I Pass  44: suminf.    0.97692 (2) obj. -50.5644 iterations 1
Cbc0038I Pass  45: suminf.    0.86667 (2) obj. -50.5644 iterations 2
Cbc0038I Pass  46: suminf.    1.16280 (3) obj. -50.5644 iterations 1
Cbc0038I Pass  47: suminf.    3.82883 (10) obj. -50.5644 iterations 8
Cbc0038I Pass  48: suminf.    2.02946 (6) obj. -50.5644 iterations 3
Cbc0038I Pass  49: suminf.    1.14959 (3) obj. -50.5644 iterations 4
Cbc0038I Pass  50: suminf.    3.52859 (9) obj. -50.5644 iterations 9
Cbc0038I Pass  51: suminf.    1.06951 (4) obj. -50.5644 iterations 5
Cbc0038I Pass  52: suminf.    0.88564 (5) obj. -50.5644 iterations 1
Cbc0038I Pass  53: suminf.    0.98299 (3) obj. -50.5644 iterations 3
Cbc0038I Pass  54: suminf.    0.97692 (2) obj. -50.5644 iterations 1
Cbc0038I Pass  55: suminf.    0.86667 (2) obj. -50.5644 iterations 1
Cbc0038I Pass  56: suminf.    3.30201 (9) obj. -50.5644 iterations 11
Cbc0038I Pass  57: suminf.    1.17540 (4) obj. -50.5644 iterations 8
Cbc0038I Pass  58: suminf.    0.86667 (2) obj. -50.5644 iterations 2
Cbc0038I Pass  59: suminf.    0.95457 (3) obj. -50.5644 iterations 2
Cbc0038I Pass  60: suminf.    2.99506 (10) obj. -50.5644 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -41.3876 - took 0.01 seconds
Cbc0012I Integer solution of -41.3876 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 17 rows 11 columns
Cbc0031I 8 added rows had average density of 14.5
Cbc0013I At root node, 8 cuts changed objective from -74.161658 to -45.776661 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 332 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 346 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -41.38759999999999, took 1172 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 18 times (153 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 37 (-8) columns and 236 (-125) elements
Clp1000I sum of infeasibilities 2.53652e-08 - average 7.92663e-10, 27 fixed columns
Coin0506I Presolve 8 (-24) rows, 10 (-27) columns and 31 (-205) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value -1.9756045
Clp0000I Optimal - objective value -1.9756045
Coin0511I After Postsolve, objective -1.9756045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1377971 - largest nonzero change 2.1557836e-05 ( 0.0012607687%) - largest zero change 1.7778343e-05
Clp0000I Optimal - objective value 93.889198
Clp0000I Optimal - objective value 93.889198
Clp0000I Optimal - objective value 93.889198
Coin0511I After Postsolve, objective 93.889198, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.88919806 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 37 columns (37 integer (37 of which binary)) and 238 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.532%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.41326
Cbc0038I Pass   1: suminf.    1.32771 (10) obj. -68.2902 iterations 3
Cbc0038I Pass   2: suminf.    1.13130 (6) obj. -66.5221 iterations 1
Cbc0038I Solution found of -39.5876
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.5038
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.32771 (10) obj. -68.2902 iterations 0
Cbc0038I Pass   4: suminf.    1.13130 (6) obj. -66.5221 iterations 2
Cbc0038I Pass   5: suminf.    0.18348 (2) obj. -43.5038 iterations 9
Cbc0038I Pass   6: suminf.    0.33500 (2) obj. -56.3341 iterations 1
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -54.5876 iterations 1
Cbc0038I Pass   8: suminf.    0.90926 (12) obj. -43.5038 iterations 11
Cbc0038I Pass   9: suminf.    0.60000 (3) obj. -43.6209 iterations 4
Cbc0038I Pass  10: suminf.    0.55818 (7) obj. -43.5038 iterations 5
Cbc0038I Pass  11: suminf.    0.55818 (7) obj. -43.5038 iterations 0
Cbc0038I Pass  12: suminf.    1.54085 (6) obj. -43.5038 iterations 6
Cbc0038I Pass  13: suminf.    1.20952 (4) obj. -43.5038 iterations 1
Cbc0038I Pass  14: suminf.    0.95464 (3) obj. -43.5038 iterations 2
Cbc0038I Pass  15: suminf.    0.95464 (3) obj. -43.5038 iterations 0
Cbc0038I Pass  16: suminf.    0.85417 (3) obj. -48.6609 iterations 1
Cbc0038I Pass  17: suminf.    0.45840 (2) obj. -43.5038 iterations 2
Cbc0038I Pass  18: suminf.    0.59849 (2) obj. -43.5038 iterations 2
Cbc0038I Pass  19: suminf.    0.76207 (5) obj. -43.5038 iterations 6
Cbc0038I Pass  20: suminf.    0.64129 (4) obj. -43.5038 iterations 1
Cbc0038I Pass  21: suminf.    0.75303 (3) obj. -43.5038 iterations 4
Cbc0038I Pass  22: suminf.    0.75303 (3) obj. -43.5038 iterations 1
Cbc0038I Pass  23: suminf.    0.91202 (3) obj. -43.5038 iterations 2
Cbc0038I Pass  24: suminf.    1.75344 (5) obj. -43.5038 iterations 9
Cbc0038I Pass  25: suminf.    1.64816 (4) obj. -43.5038 iterations 4
Cbc0038I Pass  26: suminf.    1.65211 (4) obj. -43.5038 iterations 3
Cbc0038I Pass  27: suminf.    1.65211 (4) obj. -43.5038 iterations 0
Cbc0038I Pass  28: suminf.    0.96202 (3) obj. -43.5038 iterations 1
Cbc0038I Pass  29: suminf.    0.66562 (3) obj. -43.5038 iterations 2
Cbc0038I Pass  30: suminf.    0.91882 (3) obj. -43.5038 iterations 8
Cbc0038I Pass  31: suminf.    0.25000 (1) obj. -47.3876 iterations 3
Cbc0038I Pass  32: suminf.    0.50000 (3) obj. -43.5038 iterations 3
Cbc0038I Rounding solution of -41.3876 is better than previous of -39.5876

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -50.5528
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.32771 (10) obj. -68.2902 iterations 0
Cbc0038I Pass  33: suminf.    1.13130 (6) obj. -66.5221 iterations 2
Cbc0038I Pass  34: suminf.    0.53593 (2) obj. -50.5528 iterations 9
Cbc0038I Pass  35: suminf.    0.33500 (2) obj. -56.3341 iterations 1
Cbc0038I Pass  36: suminf.    0.25000 (1) obj. -54.5876 iterations 1
Cbc0038I Pass  37: suminf.    2.00985 (10) obj. -50.5528 iterations 10
Cbc0038I Pass  38: suminf.    1.44354 (10) obj. -50.5528 iterations 3
Cbc0038I Pass  39: suminf.    0.58842 (3) obj. -50.5528 iterations 1
Cbc0038I Pass  40: suminf.    0.61738 (3) obj. -50.5528 iterations 3
Cbc0038I Pass  41: suminf.    0.61738 (3) obj. -50.5528 iterations 0
Cbc0038I Pass  42: suminf.    0.79396 (2) obj. -50.5528 iterations 2
Cbc0038I Pass  43: suminf.    0.79396 (2) obj. -50.5528 iterations 0
Cbc0038I Pass  44: suminf.    0.52750 (2) obj. -56.9236 iterations 1
Cbc0038I Pass  45: suminf.    0.21744 (2) obj. -50.5528 iterations 1
Cbc0038I Pass  46: suminf.    0.90910 (4) obj. -50.5528 iterations 15
Cbc0038I Pass  47: suminf.    0.90910 (4) obj. -50.5528 iterations 0
Cbc0038I Pass  48: suminf.    0.88944 (4) obj. -50.5528 iterations 2
Cbc0038I Pass  49: suminf.    0.80903 (3) obj. -50.5528 iterations 2
Cbc0038I Pass  50: suminf.    0.59000 (2) obj. -52.2611 iterations 2
Cbc0038I Pass  51: suminf.    0.50686 (2) obj. -50.5528 iterations 1
Cbc0038I Pass  52: suminf.    0.67542 (2) obj. -50.5528 iterations 2
Cbc0038I Pass  53: suminf.    1.09158 (3) obj. -50.5528 iterations 8
Cbc0038I Pass  54: suminf.    0.50686 (2) obj. -50.5528 iterations 3
Cbc0038I Pass  55: suminf.    0.67542 (2) obj. -50.5528 iterations 2
Cbc0038I Pass  56: suminf.    1.31917 (4) obj. -50.5528 iterations 2
Cbc0038I Pass  57: suminf.    0.70111 (3) obj. -57.5944 iterations 1
Cbc0038I Pass  58: suminf.    0.36111 (2) obj. -50.6084 iterations 1
Cbc0038I Pass  59: suminf.    0.89292 (3) obj. -50.5528 iterations 4
Cbc0038I Pass  60: suminf.    0.85950 (3) obj. -55.3444 iterations 1
Cbc0038I Pass  61: suminf.    0.50686 (2) obj. -50.5528 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -41.3876 - took 0.02 seconds
Cbc0012I Integer solution of -41.3876 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 32 rows 37 columns, reduced to 6 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 10.625
Cbc0013I At root node, 8 cuts changed objective from -78.74861 to -47.548492 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 3.2 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 14 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -41.38759999999999, took 27 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

