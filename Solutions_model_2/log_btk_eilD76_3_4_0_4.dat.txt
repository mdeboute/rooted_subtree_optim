Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 64 (-14) columns and 352 (-101) elements
Clp1000I sum of infeasibilities 1.56406e-05 - average 1.36005e-07, 15 fixed columns
Coin0506I Presolve 57 (-58) rows, 44 (-20) columns and 196 (-156) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 2.808309 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Coin0511I After Postsolve, objective 433.87421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Coin0511I After Postsolve, objective 433.87421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 433.8742132 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 64 columns (63 integer (63 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.30321
Cbc0038I Pass   1: suminf.    0.20833 (1) obj. -387.151 iterations 21
Cbc0038I Pass   2: suminf.    0.20833 (1) obj. -387.151 iterations 0
Cbc0038I Solution found of -345.153
Cbc0038I Relaxing continuous gives -345.153
Cbc0038I Rounding solution of -358.516 is better than previous of -345.153

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -358.516 to -394.014 (0.01 seconds)
Cbc0038I Round again with cutoff of -398
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73546 (2) obj. -398 iterations 1
Cbc0038I Pass   4: suminf.    0.36944 (1) obj. -398 iterations 2
Cbc0038I Pass   5: suminf.    0.29630 (1) obj. -398 iterations 1
Cbc0038I Pass   6: suminf.    1.01388 (4) obj. -398 iterations 12
Cbc0038I Pass   7: suminf.    0.91971 (3) obj. -398 iterations 6
Cbc0038I Pass   8: suminf.    1.17923 (3) obj. -398 iterations 5
Cbc0038I Pass   9: suminf.    0.42857 (1) obj. -398 iterations 5
Cbc0038I Pass  10: suminf.    0.33389 (1) obj. -398 iterations 6
Cbc0038I Pass  11: suminf.    0.45435 (2) obj. -398 iterations 5
Cbc0038I Pass  12: suminf.    0.33389 (1) obj. -398 iterations 6
Cbc0038I Pass  13: suminf.    0.43589 (3) obj. -398 iterations 13
Cbc0038I Pass  14: suminf.    0.10564 (3) obj. -398 iterations 5
Cbc0038I Pass  15: suminf.    0.31670 (2) obj. -398 iterations 10
Cbc0038I Pass  16: suminf.    0.31670 (2) obj. -398 iterations 0
Cbc0038I Pass  17: suminf.    0.03571 (1) obj. -398 iterations 5
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. -398 iterations 1
Cbc0038I Solution found of -398
Cbc0038I Relaxing continuous gives -406.513
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -406.513 to -410.565 (0.02 seconds)
Cbc0038I Round again with cutoff of -415.227
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass  19: suminf.    1.27259 (3) obj. -415.227 iterations 2
Cbc0038I Pass  20: suminf.    0.39250 (3) obj. -415.227 iterations 4
Cbc0038I Pass  21: suminf.    0.85150 (2) obj. -415.227 iterations 12
Cbc0038I Pass  22: suminf.    0.61241 (5) obj. -415.227 iterations 4
Cbc0038I Pass  23: suminf.    1.79094 (5) obj. -415.227 iterations 10
Cbc0038I Pass  24: suminf.    0.50000 (1) obj. -415.227 iterations 11
Cbc0038I Pass  25: suminf.    0.44315 (1) obj. -415.227 iterations 4
Cbc0038I Pass  26: suminf.    0.88987 (4) obj. -415.227 iterations 12
Cbc0038I Pass  27: suminf.    0.68623 (6) obj. -415.227 iterations 6
Cbc0038I Pass  28: suminf.    0.28977 (1) obj. -415.227 iterations 21
Cbc0038I Pass  29: suminf.    0.28977 (1) obj. -415.227 iterations 0
Cbc0038I Pass  30: suminf.    0.46429 (1) obj. -415.227 iterations 7
Cbc0038I Pass  31: suminf.    0.49411 (1) obj. -415.227 iterations 3
Cbc0038I Pass  32: suminf.    3.63617 (15) obj. -415.227 iterations 22
Cbc0038I Pass  33: suminf.    0.56761 (2) obj. -415.227 iterations 18
Cbc0038I Pass  34: suminf.    0.85150 (2) obj. -415.227 iterations 7
Cbc0038I Pass  35: suminf.    0.61241 (5) obj. -415.227 iterations 6
Cbc0038I Pass  36: suminf.    1.79094 (5) obj. -415.227 iterations 11
Cbc0038I Pass  37: suminf.    0.50000 (1) obj. -415.227 iterations 9
Cbc0038I Pass  38: suminf.    0.44315 (1) obj. -415.227 iterations 3
Cbc0038I Pass  39: suminf.    0.88987 (4) obj. -415.227 iterations 11
Cbc0038I Pass  40: suminf.    0.68623 (6) obj. -415.227 iterations 4
Cbc0038I Pass  41: suminf.    0.28977 (1) obj. -415.227 iterations 18
Cbc0038I Pass  42: suminf.    0.28977 (1) obj. -415.227 iterations 0
Cbc0038I Pass  43: suminf.    0.46429 (1) obj. -415.227 iterations 6
Cbc0038I Pass  44: suminf.    0.49411 (1) obj. -415.227 iterations 3
Cbc0038I Pass  45: suminf.    1.41575 (6) obj. -415.227 iterations 14
Cbc0038I Pass  46: suminf.    0.56761 (2) obj. -415.227 iterations 16
Cbc0038I Pass  47: suminf.    0.85150 (2) obj. -415.227 iterations 7
Cbc0038I Pass  48: suminf.    0.61241 (5) obj. -415.227 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 25 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -410.565 - took 0.02 seconds
Cbc0012I Integer solution of -410.5652 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 115 rows 64 columns, reduced to 15 rows 11 columns
Cbc0031I 5 added rows had average density of 17.8
Cbc0013I At root node, 5 cuts changed objective from -433.87421 to -421.34547 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 3.2 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -411.4502 found by strong branching after 242 iterations and 10 nodes (0.07 seconds)
Cbc0001I Search completed - best objective -411.4502, took 242 iterations and 10 nodes (0.07 seconds)
Cbc0032I Strong branching done 82 times (315 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 103 (-49) columns and 1488 (-1815) elements
Clp1000I sum of infeasibilities 4.80588e-08 - average 5.22378e-10, 63 fixed columns
Coin0506I Presolve 32 (-60) rows, 40 (-63) columns and 140 (-1348) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 2.2603531 - largest nonzero change 2.0613825e-05 ( 0.0012247315%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 410.27467
Clp0000I Optimal - objective value 410.27467
Coin0511I After Postsolve, objective 410.27467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2079595 - largest nonzero change 1.4519289e-05 ( 0.00091204228%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 470.24087
Clp0000I Optimal - objective value 470.24087
Clp0000I Optimal - objective value 470.24087
Coin0511I After Postsolve, objective 470.24087, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 470.2408699 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 103 columns (103 integer (103 of which binary)) and 1492 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.449%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.29167
Cbc0038I Pass   1: suminf.    1.73873 (20) obj. -377.465 iterations 16
Cbc0038I Pass   2: suminf.    1.73873 (20) obj. -377.465 iterations 1
Cbc0038I Pass   3: suminf.    0.20038 (4) obj. -352.274 iterations 16
Cbc0038I Solution found of -348.475
Cbc0038I Rounding solution of -392.957 is better than previous of -348.475

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 103 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -392.957 to -394.014 (0.02 seconds)
Cbc0038I Round again with cutoff of -400.877
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.60882 (30) obj. -400.877 iterations 2
Cbc0038I Pass   5: suminf.    2.22008 (21) obj. -400.877 iterations 3
Cbc0038I Pass   6: suminf.    1.75512 (20) obj. -421.866 iterations 2
Cbc0038I Pass   7: suminf.    0.26036 (4) obj. -400.877 iterations 22
Cbc0038I Pass   8: suminf.    0.61471 (3) obj. -400.877 iterations 10
Cbc0038I Pass   9: suminf.    0.19503 (1) obj. -400.877 iterations 9
Cbc0038I Pass  10: suminf.    0.19503 (1) obj. -400.877 iterations 0
Cbc0038I Pass  11: suminf.    0.55738 (11) obj. -400.877 iterations 14
Cbc0038I Pass  12: suminf.    0.48293 (10) obj. -400.877 iterations 7
Cbc0038I Pass  13: suminf.    0.42857 (1) obj. -418.433 iterations 20
Cbc0038I Pass  14: suminf.    0.17676 (1) obj. -400.877 iterations 8
Cbc0038I Pass  15: suminf.    3.11324 (18) obj. -400.877 iterations 34
Cbc0038I Pass  16: suminf.    2.04338 (14) obj. -400.877 iterations 12
Cbc0038I Pass  17: suminf.    1.83528 (13) obj. -400.877 iterations 1
Cbc0038I Pass  18: suminf.    1.73068 (14) obj. -400.877 iterations 2
Cbc0038I Pass  19: suminf.    0.87067 (5) obj. -400.877 iterations 24
Cbc0038I Pass  20: suminf.    0.87067 (5) obj. -400.877 iterations 1
Cbc0038I Pass  21: suminf.    0.01309 (1) obj. -400.877 iterations 10
Cbc0038I Solution found of -401.46
Cbc0038I Rounding solution of -410.565 is better than previous of -401.46

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 103 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -420.98
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  22: suminf.    2.77868 (30) obj. -420.98 iterations 0
Cbc0038I Pass  23: suminf.    1.48347 (21) obj. -420.98 iterations 20
Cbc0038I Pass  24: suminf.    1.48347 (21) obj. -420.98 iterations 1
Cbc0038I Pass  25: suminf.    0.61914 (2) obj. -420.98 iterations 32
Cbc0038I Pass  26: suminf.    0.80400 (3) obj. -420.98 iterations 9
Cbc0038I Pass  27: suminf.    1.02720 (7) obj. -420.98 iterations 19
Cbc0038I Pass  28: suminf.    1.02720 (7) obj. -420.98 iterations 4
Cbc0038I Pass  29: suminf.    0.87586 (3) obj. -420.98 iterations 18
Cbc0038I Pass  30: suminf.    0.64269 (3) obj. -420.98 iterations 3
Cbc0038I Pass  31: suminf.    0.54306 (3) obj. -420.98 iterations 7
Cbc0038I Pass  32: suminf.    0.54306 (3) obj. -420.98 iterations 4
Cbc0038I Pass  33: suminf.    0.64269 (3) obj. -420.98 iterations 21
Cbc0038I Pass  34: suminf.    1.90808 (10) obj. -420.98 iterations 18
Cbc0038I Pass  35: suminf.    1.87906 (10) obj. -420.98 iterations 4
Cbc0038I Pass  36: suminf.    0.99758 (2) obj. -420.98 iterations 19
Cbc0038I Pass  37: suminf.    0.68852 (2) obj. -422.526 iterations 9
Cbc0038I Pass  38: suminf.    0.99758 (2) obj. -420.98 iterations 10
Cbc0038I Pass  39: suminf.    1.77246 (8) obj. -420.98 iterations 13
Cbc0038I Pass  40: suminf.    1.19810 (5) obj. -421.77 iterations 13
Cbc0038I Pass  41: suminf.    1.18401 (5) obj. -420.98 iterations 3
Cbc0038I Pass  42: suminf.    0.85251 (4) obj. -420.98 iterations 19
Cbc0038I Pass  43: suminf.    0.90256 (6) obj. -420.98 iterations 9
Cbc0038I Pass  44: suminf.    0.77495 (6) obj. -420.98 iterations 7
Cbc0038I Pass  45: suminf.    1.19587 (7) obj. -420.98 iterations 7
Cbc0038I Pass  46: suminf.    0.80353 (6) obj. -420.98 iterations 6
Cbc0038I Pass  47: suminf.    0.85536 (8) obj. -420.98 iterations 5
Cbc0038I Pass  48: suminf.    1.12246 (10) obj. -420.98 iterations 18
Cbc0038I Pass  49: suminf.    1.10304 (10) obj. -420.98 iterations 5
Cbc0038I Pass  50: suminf.    1.45694 (4) obj. -420.98 iterations 20
Cbc0038I Pass  51: suminf.    1.45694 (4) obj. -420.98 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 103 columns, reduced to 38 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -410.565 - took 0.04 seconds
Cbc0012I Integer solution of -410.5652 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 30 added rows had average density of 7.4666667
Cbc0013I At root node, 30 cuts changed objective from -462.64096 to -417.31778 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 416 row cuts average 7.6 elements, 12 column cuts (12 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 26.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0012I Integer solution of -411.4502 found by DiveCoefficient after 295 iterations and 2 nodes (0.44 seconds)
Cbc0010I After 7 nodes, 4 on tree, -411.4502 best solution, best possible -417.31778 (0.60 seconds)
Cbc0001I Search completed - best objective -411.4502, took 632 iterations and 16 nodes (0.98 seconds)
Cbc0032I Strong branching done 176 times (851 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 64 (-14) columns and 352 (-101) elements
Clp1000I sum of infeasibilities 1.56406e-05 - average 1.36005e-07, 15 fixed columns
Coin0506I Presolve 57 (-58) rows, 44 (-20) columns and 196 (-156) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 2.808309 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Coin0511I After Postsolve, objective 433.87421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Coin0511I After Postsolve, objective 433.87421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 433.8742132 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 64 columns (63 integer (63 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.30321
Cbc0038I Pass   1: suminf.    0.20833 (1) obj. -387.151 iterations 21
Cbc0038I Pass   2: suminf.    0.20833 (1) obj. -387.151 iterations 0
Cbc0038I Solution found of -345.153
Cbc0038I Relaxing continuous gives -345.153
Cbc0038I Rounding solution of -358.516 is better than previous of -345.153

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -358.516 to -394.014 (0.01 seconds)
Cbc0038I Round again with cutoff of -398
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73546 (2) obj. -398 iterations 1
Cbc0038I Pass   4: suminf.    0.36944 (1) obj. -398 iterations 2
Cbc0038I Pass   5: suminf.    0.29630 (1) obj. -398 iterations 1
Cbc0038I Pass   6: suminf.    1.01388 (4) obj. -398 iterations 12
Cbc0038I Pass   7: suminf.    0.91971 (3) obj. -398 iterations 6
Cbc0038I Pass   8: suminf.    1.17923 (3) obj. -398 iterations 5
Cbc0038I Pass   9: suminf.    0.42857 (1) obj. -398 iterations 5
Cbc0038I Pass  10: suminf.    0.33389 (1) obj. -398 iterations 6
Cbc0038I Pass  11: suminf.    0.45435 (2) obj. -398 iterations 5
Cbc0038I Pass  12: suminf.    0.33389 (1) obj. -398 iterations 6
Cbc0038I Pass  13: suminf.    0.43589 (3) obj. -398 iterations 13
Cbc0038I Pass  14: suminf.    0.10564 (3) obj. -398 iterations 5
Cbc0038I Pass  15: suminf.    0.31670 (2) obj. -398 iterations 10
Cbc0038I Pass  16: suminf.    0.31670 (2) obj. -398 iterations 0
Cbc0038I Pass  17: suminf.    0.03571 (1) obj. -398 iterations 5
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. -398 iterations 1
Cbc0038I Solution found of -398
Cbc0038I Relaxing continuous gives -406.513
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -406.513 to -410.565 (0.02 seconds)
Cbc0038I Round again with cutoff of -415.227
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass  19: suminf.    1.27259 (3) obj. -415.227 iterations 2
Cbc0038I Pass  20: suminf.    0.39250 (3) obj. -415.227 iterations 4
Cbc0038I Pass  21: suminf.    0.85150 (2) obj. -415.227 iterations 12
Cbc0038I Pass  22: suminf.    0.61241 (5) obj. -415.227 iterations 4
Cbc0038I Pass  23: suminf.    1.79094 (5) obj. -415.227 iterations 10
Cbc0038I Pass  24: suminf.    0.50000 (1) obj. -415.227 iterations 11
Cbc0038I Pass  25: suminf.    0.44315 (1) obj. -415.227 iterations 4
Cbc0038I Pass  26: suminf.    0.88987 (4) obj. -415.227 iterations 12
Cbc0038I Pass  27: suminf.    0.68623 (6) obj. -415.227 iterations 6
Cbc0038I Pass  28: suminf.    0.28977 (1) obj. -415.227 iterations 21
Cbc0038I Pass  29: suminf.    0.28977 (1) obj. -415.227 iterations 0
Cbc0038I Pass  30: suminf.    0.46429 (1) obj. -415.227 iterations 7
Cbc0038I Pass  31: suminf.    0.49411 (1) obj. -415.227 iterations 3
Cbc0038I Pass  32: suminf.    3.63617 (15) obj. -415.227 iterations 22
Cbc0038I Pass  33: suminf.    0.56761 (2) obj. -415.227 iterations 18
Cbc0038I Pass  34: suminf.    0.85150 (2) obj. -415.227 iterations 7
Cbc0038I Pass  35: suminf.    0.61241 (5) obj. -415.227 iterations 6
Cbc0038I Pass  36: suminf.    1.79094 (5) obj. -415.227 iterations 11
Cbc0038I Pass  37: suminf.    0.50000 (1) obj. -415.227 iterations 9
Cbc0038I Pass  38: suminf.    0.44315 (1) obj. -415.227 iterations 3
Cbc0038I Pass  39: suminf.    0.88987 (4) obj. -415.227 iterations 11
Cbc0038I Pass  40: suminf.    0.68623 (6) obj. -415.227 iterations 4
Cbc0038I Pass  41: suminf.    0.28977 (1) obj. -415.227 iterations 18
Cbc0038I Pass  42: suminf.    0.28977 (1) obj. -415.227 iterations 0
Cbc0038I Pass  43: suminf.    0.46429 (1) obj. -415.227 iterations 6
Cbc0038I Pass  44: suminf.    0.49411 (1) obj. -415.227 iterations 3
Cbc0038I Pass  45: suminf.    1.41575 (6) obj. -415.227 iterations 14
Cbc0038I Pass  46: suminf.    0.56761 (2) obj. -415.227 iterations 16
Cbc0038I Pass  47: suminf.    0.85150 (2) obj. -415.227 iterations 7
Cbc0038I Pass  48: suminf.    0.61241 (5) obj. -415.227 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 25 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -410.565 - took 0.02 seconds
Cbc0012I Integer solution of -410.5652 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 115 rows 64 columns, reduced to 15 rows 11 columns
Cbc0031I 5 added rows had average density of 17.8
Cbc0013I At root node, 5 cuts changed objective from -433.87421 to -421.34547 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 3.2 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -411.4502 found by strong branching after 242 iterations and 10 nodes (0.07 seconds)
Cbc0001I Search completed - best objective -411.4502, took 242 iterations and 10 nodes (0.07 seconds)
Cbc0032I Strong branching done 82 times (315 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 103 (-50) columns and 1488 (-1816) elements
Clp1000I sum of infeasibilities 4.80588e-08 - average 5.22378e-10, 63 fixed columns
Coin0506I Presolve 32 (-60) rows, 40 (-63) columns and 140 (-1348) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 2.2603531 - largest nonzero change 2.0613825e-05 ( 0.0012247315%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 410.27467
Clp0000I Optimal - objective value 410.27467
Coin0511I After Postsolve, objective 410.27467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2079595 - largest nonzero change 1.4519289e-05 ( 0.00091204228%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 470.24087
Clp0000I Optimal - objective value 470.24087
Clp0000I Optimal - objective value 470.24087
Coin0511I After Postsolve, objective 470.24087, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 470.2408699 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 103 columns (103 integer (103 of which binary)) and 1492 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.449%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.29167
Cbc0038I Pass   1: suminf.    1.73873 (20) obj. -377.465 iterations 16
Cbc0038I Pass   2: suminf.    1.73873 (20) obj. -377.465 iterations 1
Cbc0038I Pass   3: suminf.    0.20038 (4) obj. -352.274 iterations 16
Cbc0038I Solution found of -348.475
Cbc0038I Rounding solution of -392.957 is better than previous of -348.475

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 103 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -392.957 to -394.014 (0.03 seconds)
Cbc0038I Round again with cutoff of -400.877
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.60882 (30) obj. -400.877 iterations 2
Cbc0038I Pass   5: suminf.    2.22008 (21) obj. -400.877 iterations 3
Cbc0038I Pass   6: suminf.    1.75512 (20) obj. -421.866 iterations 2
Cbc0038I Pass   7: suminf.    0.26036 (4) obj. -400.877 iterations 22
Cbc0038I Pass   8: suminf.    0.61471 (3) obj. -400.877 iterations 10
Cbc0038I Pass   9: suminf.    0.19503 (1) obj. -400.877 iterations 9
Cbc0038I Pass  10: suminf.    0.19503 (1) obj. -400.877 iterations 0
Cbc0038I Pass  11: suminf.    0.55738 (11) obj. -400.877 iterations 14
Cbc0038I Pass  12: suminf.    0.48293 (10) obj. -400.877 iterations 7
Cbc0038I Pass  13: suminf.    0.42857 (1) obj. -418.433 iterations 20
Cbc0038I Pass  14: suminf.    0.17676 (1) obj. -400.877 iterations 8
Cbc0038I Pass  15: suminf.    3.11324 (18) obj. -400.877 iterations 34
Cbc0038I Pass  16: suminf.    2.04338 (14) obj. -400.877 iterations 12
Cbc0038I Pass  17: suminf.    1.83528 (13) obj. -400.877 iterations 1
Cbc0038I Pass  18: suminf.    1.73068 (14) obj. -400.877 iterations 2
Cbc0038I Pass  19: suminf.    0.87067 (5) obj. -400.877 iterations 24
Cbc0038I Pass  20: suminf.    0.87067 (5) obj. -400.877 iterations 1
Cbc0038I Pass  21: suminf.    0.01309 (1) obj. -400.877 iterations 10
Cbc0038I Solution found of -401.46
Cbc0038I Rounding solution of -410.565 is better than previous of -401.46

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 103 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -420.98
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  22: suminf.    2.77868 (30) obj. -420.98 iterations 0
Cbc0038I Pass  23: suminf.    1.48347 (21) obj. -420.98 iterations 20
Cbc0038I Pass  24: suminf.    1.48347 (21) obj. -420.98 iterations 1
Cbc0038I Pass  25: suminf.    0.61914 (2) obj. -420.98 iterations 32
Cbc0038I Pass  26: suminf.    0.80400 (3) obj. -420.98 iterations 9
Cbc0038I Pass  27: suminf.    1.02720 (7) obj. -420.98 iterations 19
Cbc0038I Pass  28: suminf.    1.02720 (7) obj. -420.98 iterations 4
Cbc0038I Pass  29: suminf.    0.87586 (3) obj. -420.98 iterations 18
Cbc0038I Pass  30: suminf.    0.64269 (3) obj. -420.98 iterations 3
Cbc0038I Pass  31: suminf.    0.54306 (3) obj. -420.98 iterations 7
Cbc0038I Pass  32: suminf.    0.54306 (3) obj. -420.98 iterations 4
Cbc0038I Pass  33: suminf.    0.64269 (3) obj. -420.98 iterations 21
Cbc0038I Pass  34: suminf.    1.90808 (10) obj. -420.98 iterations 18
Cbc0038I Pass  35: suminf.    1.87906 (10) obj. -420.98 iterations 4
Cbc0038I Pass  36: suminf.    0.99758 (2) obj. -420.98 iterations 19
Cbc0038I Pass  37: suminf.    0.68852 (2) obj. -422.526 iterations 9
Cbc0038I Pass  38: suminf.    0.99758 (2) obj. -420.98 iterations 10
Cbc0038I Pass  39: suminf.    1.77246 (8) obj. -420.98 iterations 13
Cbc0038I Pass  40: suminf.    1.19810 (5) obj. -421.77 iterations 13
Cbc0038I Pass  41: suminf.    1.18401 (5) obj. -420.98 iterations 3
Cbc0038I Pass  42: suminf.    0.85251 (4) obj. -420.98 iterations 19
Cbc0038I Pass  43: suminf.    0.90256 (6) obj. -420.98 iterations 9
Cbc0038I Pass  44: suminf.    0.77495 (6) obj. -420.98 iterations 7
Cbc0038I Pass  45: suminf.    1.19587 (7) obj. -420.98 iterations 7
Cbc0038I Pass  46: suminf.    0.80353 (6) obj. -420.98 iterations 6
Cbc0038I Pass  47: suminf.    0.85536 (8) obj. -420.98 iterations 5
Cbc0038I Pass  48: suminf.    1.12246 (10) obj. -420.98 iterations 18
Cbc0038I Pass  49: suminf.    1.10304 (10) obj. -420.98 iterations 5
Cbc0038I Pass  50: suminf.    1.45694 (4) obj. -420.98 iterations 20
Cbc0038I Pass  51: suminf.    1.45694 (4) obj. -420.98 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 103 columns, reduced to 38 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -410.565 - took 0.04 seconds
Cbc0012I Integer solution of -410.5652 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 30 added rows had average density of 7.4666667
Cbc0013I At root node, 30 cuts changed objective from -462.64096 to -417.31778 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 416 row cuts average 7.6 elements, 12 column cuts (12 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 26.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0012I Integer solution of -411.4502 found by DiveCoefficient after 295 iterations and 2 nodes (0.51 seconds)
Cbc0010I After 3 nodes, 4 on tree, -411.4502 best solution, best possible -417.31778 (0.54 seconds)
Cbc0001I Search completed - best objective -411.4502, took 632 iterations and 16 nodes (1.12 seconds)
Cbc0032I Strong branching done 176 times (851 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       1.13

