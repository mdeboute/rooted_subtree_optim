Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 29 (-4) columns and 155 (-28) elements
Clp1000I sum of infeasibilities 2.60779e-05 - average 5.01498e-07, 6 fixed columns
Coin0506I Presolve 38 (-14) rows, 22 (-7) columns and 113 (-42) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.0729786 - largest nonzero change 0 ( 0%) - largest zero change 2.0918902e-05
Clp0000I Optimal - objective value 91.481247
Clp0000I Optimal - objective value 91.481247
Coin0511I After Postsolve, objective 91.481247, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.481247
Clp0000I Optimal - objective value 91.481247
Clp0000I Optimal - objective value 91.481247
Coin0511I After Postsolve, objective 91.481247, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.48124664 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 29 columns (28 integer (28 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.182%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.00513
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -44.9208 iterations 15
Cbc0038I Solution found of -44.9208
Cbc0038I Relaxing continuous gives -44.9208
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -44.9208 to -49.2632 (0.01 seconds)
Cbc0038I Round again with cutoff of -52.6028
Cbc0038I Pass   2: suminf.    0.25944 (3) obj. -52.6028 iterations 4
Cbc0038I Pass   3: suminf.    0.65436 (2) obj. -70.3634 iterations 11
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -60.6965 iterations 1
Cbc0038I Pass   5: suminf.    0.42920 (1) obj. -52.6028 iterations 1
Cbc0038I Pass   6: suminf.    2.24499 (6) obj. -52.6028 iterations 8
Cbc0038I Pass   7: suminf.    1.09163 (5) obj. -52.6028 iterations 5
Cbc0038I Pass   8: suminf.    0.48990 (2) obj. -58.1183 iterations 6
Cbc0038I Pass   9: suminf.    0.84977 (2) obj. -52.6028 iterations 2
Cbc0038I Pass  10: suminf.    0.84977 (2) obj. -52.6028 iterations 0
Cbc0038I Pass  11: suminf.    0.40730 (1) obj. -52.6028 iterations 2
Cbc0038I Pass  12: suminf.    0.34994 (3) obj. -52.6028 iterations 5
Cbc0038I Pass  13: suminf.    0.34296 (2) obj. -52.6028 iterations 1
Cbc0038I Pass  14: suminf.    0.67090 (3) obj. -52.6028 iterations 4
Cbc0038I Pass  15: suminf.    0.46908 (3) obj. -52.6028 iterations 1
Cbc0038I Pass  16: suminf.    0.51375 (4) obj. -52.6028 iterations 2
Cbc0038I Pass  17: suminf.    0.51375 (4) obj. -52.6028 iterations 0
Cbc0038I Pass  18: suminf.    0.48990 (2) obj. -58.1183 iterations 7
Cbc0038I Pass  19: suminf.    0.84977 (2) obj. -52.6028 iterations 2
Cbc0038I Pass  20: suminf.    0.84977 (2) obj. -52.6028 iterations 0
Cbc0038I Pass  21: suminf.    0.40730 (1) obj. -52.6028 iterations 2
Cbc0038I Pass  22: suminf.    1.64962 (5) obj. -52.6028 iterations 8
Cbc0038I Pass  23: suminf.    1.61322 (5) obj. -52.6028 iterations 2
Cbc0038I Pass  24: suminf.    0.60399 (2) obj. -52.6028 iterations 7
Cbc0038I Pass  25: suminf.    0.88868 (2) obj. -52.6028 iterations 2
Cbc0038I Pass  26: suminf.    1.93118 (7) obj. -52.6028 iterations 6
Cbc0038I Pass  27: suminf.    1.89603 (7) obj. -52.6028 iterations 1
Cbc0038I Pass  28: suminf.    0.62745 (2) obj. -56.1943 iterations 11
Cbc0038I Pass  29: suminf.    0.20000 (1) obj. -57.2452 iterations 2
Cbc0038I Pass  30: suminf.    0.40730 (1) obj. -52.6028 iterations 3
Cbc0038I Pass  31: suminf.    0.48990 (2) obj. -58.1183 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -49.2632 - took 0.03 seconds
Cbc0012I Integer solution of -49.26325 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 50 rows 29 columns, reduced to 25 rows 15 columns
Cbc0031I 6 added rows had average density of 18.333333
Cbc0013I At root node, 6 cuts changed objective from -82.65772 to -67.062628 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 509 row cuts average 4.1 elements, 5 column cuts (5 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 350 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -49.26325, took 1853 iterations and 20 nodes (0.18 seconds)
Cbc0032I Strong branching done 184 times (1078 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-18) rows, 50 (-12) columns and 473 (-175) elements
Clp1000I sum of infeasibilities 0 - average 0, 2 fixed columns
Coin0506I Presolve 44 (-2) rows, 48 (-2) columns and 436 (-37) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 1.3019331 - largest nonzero change 0 ( 0%) - largest zero change 2.4950309e-05
Clp0000I Optimal - objective value 99.658427
Clp0000I Optimal - objective value 99.658427
Coin0511I After Postsolve, objective 99.658427, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 99.658427
Clp0000I Optimal - objective value 99.658427
Clp0000I Optimal - objective value 99.658427
Coin0511I After Postsolve, objective 99.658427, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.65842746 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 484 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.616%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.12719
Cbc0038I Solution found of -31.6958
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -36.0296
Cbc0038I Pass   1: suminf.    0.08797 (1) obj. -36.0296 iterations 34
Cbc0038I Pass   2: suminf.    0.43478 (1) obj. -53.1146 iterations 1
Cbc0038I Pass   3: suminf.    0.88385 (5) obj. -36.0296 iterations 8
Cbc0038I Pass   4: suminf.    0.75408 (6) obj. -36.0296 iterations 6
Cbc0038I Pass   5: suminf.    0.06250 (1) obj. -42.5465 iterations 9
Cbc0038I Pass   6: suminf.    0.06250 (1) obj. -42.5465 iterations 0
Cbc0038I Pass   7: suminf.    0.33140 (2) obj. -36.0296 iterations 6
Cbc0038I Pass   8: suminf.    0.19660 (2) obj. -49.7347 iterations 4
Cbc0038I Pass   9: suminf.    0.19660 (2) obj. -49.7347 iterations 0
Cbc0038I Pass  10: suminf.    0.46531 (3) obj. -36.0296 iterations 6
Cbc0038I Pass  11: suminf.    0.46531 (3) obj. -36.0296 iterations 2
Cbc0038I Pass  12: suminf.    1.38186 (5) obj. -36.0296 iterations 10
Cbc0038I Pass  13: suminf.    0.85220 (4) obj. -36.0296 iterations 4
Cbc0038I Pass  14: suminf.    0.68795 (2) obj. -36.0296 iterations 8
Cbc0038I Pass  15: suminf.    0.46930 (2) obj. -36.0296 iterations 4
Cbc0038I Pass  16: suminf.    0.46930 (2) obj. -36.0296 iterations 1
Cbc0038I Pass  17: suminf.    0.71644 (2) obj. -42.9958 iterations 3
Cbc0038I Pass  18: suminf.    1.30488 (4) obj. -39.2032 iterations 7
Cbc0038I Pass  19: suminf.    1.18734 (4) obj. -36.0296 iterations 3
Cbc0038I Pass  20: suminf.    0.71111 (2) obj. -36.0296 iterations 6
Cbc0038I Pass  21: suminf.    0.54025 (2) obj. -36.0296 iterations 2
Cbc0038I Pass  22: suminf.    0.71644 (2) obj. -40.9958 iterations 3
Cbc0038I Pass  23: suminf.    1.66168 (8) obj. -36.0296 iterations 18
Cbc0038I Pass  24: suminf.    1.49436 (6) obj. -37.3138 iterations 2
Cbc0038I Pass  25: suminf.    0.82814 (5) obj. -36.0296 iterations 10
Cbc0038I Pass  26: suminf.    0.82121 (4) obj. -36.0296 iterations 5
Cbc0038I Pass  27: suminf.    0.77835 (3) obj. -36.0296 iterations 1
Cbc0038I Pass  28: suminf.    0.83495 (2) obj. -37.5724 iterations 3
Cbc0038I Pass  29: suminf.    0.61605 (3) obj. -36.0296 iterations 3
Cbc0038I Pass  30: suminf.    0.54412 (2) obj. -42.6528 iterations 3
Cbc0038I Rounding solution of -48.9577 is better than previous of -31.6958

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 33 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -48.9577 to -49.0174 (0.05 seconds)
Cbc0038I Round again with cutoff of -54.2206
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.50164 (5) obj. -54.2206 iterations 4
Cbc0038I Pass  31: suminf.    1.21347 (3) obj. -54.2206 iterations 9
Cbc0038I Pass  32: suminf.    0.64444 (2) obj. -59.9785 iterations 2
Cbc0038I Pass  33: suminf.    0.74461 (2) obj. -54.2206 iterations 3
Cbc0038I Pass  34: suminf.    0.33824 (2) obj. -54.2206 iterations 1
Cbc0038I Pass  35: suminf.    0.74461 (2) obj. -54.2206 iterations 1
Cbc0038I Pass  36: suminf.    3.86739 (13) obj. -54.2206 iterations 17
Cbc0038I Pass  37: suminf.    1.69596 (6) obj. -54.2206 iterations 5
Cbc0038I Pass  38: suminf.    1.26808 (5) obj. -54.2206 iterations 4
Cbc0038I Pass  39: suminf.    0.34661 (2) obj. -54.2206 iterations 6
Cbc0038I Pass  40: suminf.    0.29649 (2) obj. -54.2206 iterations 1
Cbc0038I Pass  41: suminf.    1.63049 (7) obj. -54.2206 iterations 10
Cbc0038I Pass  42: suminf.    1.23854 (4) obj. -54.2206 iterations 2
Cbc0038I Pass  43: suminf.    0.74047 (2) obj. -54.2206 iterations 5
Cbc0038I Pass  44: suminf.    0.44148 (2) obj. -54.2206 iterations 1
Cbc0038I Pass  45: suminf.    1.99501 (8) obj. -54.2206 iterations 11
Cbc0038I Pass  46: suminf.    1.56054 (6) obj. -54.2206 iterations 2
Cbc0038I Pass  47: suminf.    0.36442 (3) obj. -54.2206 iterations 5
Cbc0038I Pass  48: suminf.    0.36442 (3) obj. -54.2206 iterations 0
Cbc0038I Pass  49: suminf.    0.37850 (2) obj. -54.2206 iterations 3
Cbc0038I Pass  50: suminf.    0.18363 (2) obj. -54.2206 iterations 1
Cbc0038I Pass  51: suminf.    2.29056 (9) obj. -54.2206 iterations 11
Cbc0038I Pass  52: suminf.    1.44576 (6) obj. -54.2206 iterations 2
Cbc0038I Pass  53: suminf.    0.55039 (2) obj. -54.2206 iterations 6
Cbc0038I Pass  54: suminf.    0.48254 (2) obj. -54.2206 iterations 1
Cbc0038I Pass  55: suminf.    1.71060 (5) obj. -54.2206 iterations 9
Cbc0038I Pass  56: suminf.    1.65052 (5) obj. -54.2206 iterations 2
Cbc0038I Pass  57: suminf.    0.80406 (3) obj. -54.2206 iterations 4
Cbc0038I Pass  58: suminf.    0.75598 (3) obj. -54.2206 iterations 1
Cbc0038I Pass  59: suminf.    0.52341 (2) obj. -54.2206 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 32 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -49.0174 to -49.2632 (0.09 seconds)
Cbc0038I Round again with cutoff of -60.4642
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.87907 (5) obj. -60.4642 iterations 0
Cbc0038I Pass  60: suminf.    0.70115 (4) obj. -60.4642 iterations 10
Cbc0038I Pass  61: suminf.    0.70115 (4) obj. -60.4642 iterations 0
Cbc0038I Pass  62: suminf.    0.87907 (5) obj. -60.4642 iterations 5
Cbc0038I Pass  63: suminf.    2.45317 (8) obj. -60.4642 iterations 17
Cbc0038I Pass  64: suminf.    1.76903 (6) obj. -60.4642 iterations 7
Cbc0038I Pass  65: suminf.    1.38347 (5) obj. -60.4642 iterations 1
Cbc0038I Pass  66: suminf.    1.10326 (3) obj. -60.4642 iterations 4
Cbc0038I Pass  67: suminf.    0.36371 (1) obj. -60.4642 iterations 4
Cbc0038I Pass  68: suminf.    0.36585 (1) obj. -60.5698 iterations 1
Cbc0038I Pass  69: suminf.    0.81030 (2) obj. -61.4586 iterations 5
Cbc0038I Pass  70: suminf.    1.52506 (6) obj. -60.4642 iterations 9
Cbc0038I Pass  71: suminf.    0.77063 (3) obj. -60.4642 iterations 4
Cbc0038I Pass  72: suminf.    1.46304 (4) obj. -60.4642 iterations 2
Cbc0038I Pass  73: suminf.    0.36819 (2) obj. -60.4642 iterations 5
Cbc0038I Pass  74: suminf.    1.07588 (3) obj. -60.4642 iterations 1
Cbc0038I Pass  75: suminf.    3.44230 (10) obj. -60.4642 iterations 10
Cbc0038I Pass  76: suminf.    1.47435 (5) obj. -60.4642 iterations 7
Cbc0038I Pass  77: suminf.    1.13055 (4) obj. -60.4642 iterations 1
Cbc0038I Pass  78: suminf.    0.69069 (3) obj. -60.4642 iterations 4
Cbc0038I Pass  79: suminf.    0.67093 (4) obj. -60.4642 iterations 3
Cbc0038I Pass  80: suminf.    0.80270 (3) obj. -60.4642 iterations 2
Cbc0038I Pass  81: suminf.    0.11334 (2) obj. -60.4642 iterations 1
Cbc0038I Pass  82: suminf.    2.11156 (7) obj. -60.4642 iterations 7
Cbc0038I Pass  83: suminf.    0.77367 (3) obj. -60.4642 iterations 6
Cbc0038I Pass  84: suminf.    0.34182 (4) obj. -60.4642 iterations 4
Cbc0038I Pass  85: suminf.    0.34182 (4) obj. -60.4642 iterations 2
Cbc0038I Pass  86: suminf.    2.12062 (7) obj. -60.4642 iterations 5
Cbc0038I Pass  87: suminf.    1.33265 (5) obj. -60.4642 iterations 3
Cbc0038I Pass  88: suminf.    0.87339 (3) obj. -60.4642 iterations 3
Cbc0038I Rounding solution of -49.2633 is better than previous of -49.2632

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -64.8348
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 5
Cbc0038I Pass  88: suminf.    1.14327 (5) obj. -64.8348 iterations 0
Cbc0038I Pass  89: suminf.    1.43486 (4) obj. -64.8348 iterations 5
Cbc0038I Pass  90: suminf.    0.55377 (4) obj. -64.8348 iterations 3
Cbc0038I Pass  91: suminf.    0.54969 (5) obj. -64.8348 iterations 1
Cbc0038I Pass  92: suminf.    1.14327 (5) obj. -64.8348 iterations 10
Cbc0038I Pass  93: suminf.    1.14327 (5) obj. -64.8348 iterations 1
Cbc0038I Pass  94: suminf.    1.43486 (4) obj. -64.8348 iterations 5
Cbc0038I Pass  95: suminf.    0.55377 (4) obj. -64.8348 iterations 3
Cbc0038I Pass  96: suminf.    0.54969 (5) obj. -64.8348 iterations 1
Cbc0038I Pass  97: suminf.    1.14327 (5) obj. -64.8348 iterations 9
Cbc0038I Pass  98: suminf.    1.14327 (5) obj. -64.8348 iterations 1
Cbc0038I Pass  99: suminf.    1.43486 (4) obj. -64.8348 iterations 5
Cbc0038I Pass 100: suminf.    0.55377 (4) obj. -64.8348 iterations 3
Cbc0038I Pass 101: suminf.    0.54969 (5) obj. -64.8348 iterations 1
Cbc0038I Pass 102: suminf.    1.14327 (5) obj. -64.8348 iterations 10
Cbc0038I Pass 103: suminf.    1.14327 (5) obj. -64.8348 iterations 1
Cbc0038I Pass 104: suminf.    1.43486 (4) obj. -64.8348 iterations 5
Cbc0038I Pass 105: suminf.    0.55377 (4) obj. -64.8348 iterations 3
Cbc0038I Pass 106: suminf.    0.54969 (5) obj. -64.8348 iterations 1
Cbc0038I Pass 107: suminf.    1.14327 (5) obj. -64.8348 iterations 10
Cbc0038I Pass 108: suminf.    1.14327 (5) obj. -64.8348 iterations 1
Cbc0038I Pass 109: suminf.    1.43486 (4) obj. -64.8348 iterations 5
Cbc0038I Pass 110: suminf.    0.55377 (4) obj. -64.8348 iterations 3
Cbc0038I Pass 111: suminf.    0.54969 (5) obj. -64.8348 iterations 1
Cbc0038I Pass 112: suminf.    1.14327 (5) obj. -64.8348 iterations 10
Cbc0038I Pass 113: suminf.    1.14327 (5) obj. -64.8348 iterations 1
Cbc0038I Pass 114: suminf.    1.43486 (4) obj. -64.8348 iterations 5
Cbc0038I Pass 115: suminf.    0.55377 (4) obj. -64.8348 iterations 3
Cbc0038I Pass 116: suminf.    0.54969 (5) obj. -64.8348 iterations 1
Cbc0038I Pass 117: suminf.    1.14327 (5) obj. -64.8348 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -49.2633 - took 0.09 seconds
Cbc0012I Integer solution of -49.26331 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 4 rows 3 columns
Cbc0031I 15 added rows had average density of 15.733333
Cbc0013I At root node, 15 cuts changed objective from -75.032707 to -60.278972 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1151 row cuts average 3.9 elements, 12 column cuts (12 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1181 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 124 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 399 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 206 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 231 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 325 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -49.26331 best solution, best possible -60.278972 (1.52 seconds)
Cbc0001I Search completed - best objective -49.26330999999999, took 2374 iterations and 16 nodes (1.61 seconds)
Cbc0032I Strong branching done 262 times (1644 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 7, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 29 (-4) columns and 155 (-28) elements
Clp1000I sum of infeasibilities 2.60779e-05 - average 5.01498e-07, 6 fixed columns
Coin0506I Presolve 38 (-14) rows, 22 (-7) columns and 113 (-42) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.0729786 - largest nonzero change 0 ( 0%) - largest zero change 2.0918902e-05
Clp0000I Optimal - objective value 91.481247
Clp0000I Optimal - objective value 91.481247
Coin0511I After Postsolve, objective 91.481247, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.481247
Clp0000I Optimal - objective value 91.481247
Clp0000I Optimal - objective value 91.481247
Coin0511I After Postsolve, objective 91.481247, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.48124664 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 29 columns (28 integer (28 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.182%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.00513
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -44.9208 iterations 15
Cbc0038I Solution found of -44.9208
Cbc0038I Relaxing continuous gives -44.9208
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -44.9208 to -49.2632 (0.01 seconds)
Cbc0038I Round again with cutoff of -52.6028
Cbc0038I Pass   2: suminf.    0.25944 (3) obj. -52.6028 iterations 4
Cbc0038I Pass   3: suminf.    0.65436 (2) obj. -70.3634 iterations 11
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -60.6965 iterations 1
Cbc0038I Pass   5: suminf.    0.42920 (1) obj. -52.6028 iterations 1
Cbc0038I Pass   6: suminf.    2.24499 (6) obj. -52.6028 iterations 8
Cbc0038I Pass   7: suminf.    1.09163 (5) obj. -52.6028 iterations 5
Cbc0038I Pass   8: suminf.    0.48990 (2) obj. -58.1183 iterations 6
Cbc0038I Pass   9: suminf.    0.84977 (2) obj. -52.6028 iterations 2
Cbc0038I Pass  10: suminf.    0.84977 (2) obj. -52.6028 iterations 0
Cbc0038I Pass  11: suminf.    0.40730 (1) obj. -52.6028 iterations 2
Cbc0038I Pass  12: suminf.    0.34994 (3) obj. -52.6028 iterations 5
Cbc0038I Pass  13: suminf.    0.34296 (2) obj. -52.6028 iterations 1
Cbc0038I Pass  14: suminf.    0.67090 (3) obj. -52.6028 iterations 4
Cbc0038I Pass  15: suminf.    0.46908 (3) obj. -52.6028 iterations 1
Cbc0038I Pass  16: suminf.    0.51375 (4) obj. -52.6028 iterations 2
Cbc0038I Pass  17: suminf.    0.51375 (4) obj. -52.6028 iterations 0
Cbc0038I Pass  18: suminf.    0.48990 (2) obj. -58.1183 iterations 7
Cbc0038I Pass  19: suminf.    0.84977 (2) obj. -52.6028 iterations 2
Cbc0038I Pass  20: suminf.    0.84977 (2) obj. -52.6028 iterations 0
Cbc0038I Pass  21: suminf.    0.40730 (1) obj. -52.6028 iterations 2
Cbc0038I Pass  22: suminf.    1.64962 (5) obj. -52.6028 iterations 8
Cbc0038I Pass  23: suminf.    1.61322 (5) obj. -52.6028 iterations 2
Cbc0038I Pass  24: suminf.    0.60399 (2) obj. -52.6028 iterations 7
Cbc0038I Pass  25: suminf.    0.88868 (2) obj. -52.6028 iterations 2
Cbc0038I Pass  26: suminf.    1.93118 (7) obj. -52.6028 iterations 6
Cbc0038I Pass  27: suminf.    1.89603 (7) obj. -52.6028 iterations 1
Cbc0038I Pass  28: suminf.    0.62745 (2) obj. -56.1943 iterations 11
Cbc0038I Pass  29: suminf.    0.20000 (1) obj. -57.2452 iterations 2
Cbc0038I Pass  30: suminf.    0.40730 (1) obj. -52.6028 iterations 3
Cbc0038I Pass  31: suminf.    0.48990 (2) obj. -58.1183 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -49.2632 - took 0.02 seconds
Cbc0012I Integer solution of -49.26325 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 50 rows 29 columns, reduced to 25 rows 15 columns
Cbc0031I 6 added rows had average density of 18.333333
Cbc0013I At root node, 6 cuts changed objective from -82.65772 to -67.062628 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 509 row cuts average 4.1 elements, 5 column cuts (5 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 350 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -49.26325, took 1853 iterations and 20 nodes (0.18 seconds)
Cbc0032I Strong branching done 184 times (1078 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 49 (-14) columns and 457 (-192) elements
Clp1000I sum of infeasibilities 0 - average 0, 4 fixed columns
Coin0506I Presolve 41 (-4) rows, 45 (-4) columns and 378 (-79) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 1.3645042 - largest nonzero change 0 ( 0%) - largest zero change 2.5207932e-05
Clp0000I Optimal - objective value 99.599041
Clp0000I Optimal - objective value 99.599041
Coin0511I After Postsolve, objective 99.599041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 99.599041
Clp0000I Optimal - objective value 99.599041
Clp0000I Optimal - objective value 99.599041
Coin0511I After Postsolve, objective 99.599041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.59904068 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 49 columns (49 integer (49 of which binary)) and 478 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.534%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 5.8631
Cbc0038I Pass   1: suminf.    0.24515 (6) obj. -46.4586 iterations 20
Cbc0038I Solution found of -42.9208
Cbc0038I Rounding solution of -44.9208 is better than previous of -42.9208

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 49 columns, reduced to 25 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -44.9208 to -46.6132 (0.02 seconds)
Cbc0038I Round again with cutoff of -49.4849
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.92243 (7) obj. -49.4849 iterations 3
Cbc0038I Pass   3: suminf.    0.45940 (9) obj. -49.4849 iterations 6
Cbc0038I Pass   4: suminf.    1.45262 (3) obj. -49.4849 iterations 13
Cbc0038I Pass   5: suminf.    0.54818 (2) obj. -49.4849 iterations 1
Cbc0038I Pass   6: suminf.    0.32165 (2) obj. -49.4849 iterations 1
Cbc0038I Pass   7: suminf.    0.84485 (3) obj. -49.4849 iterations 8
Cbc0038I Pass   8: suminf.    0.56312 (2) obj. -49.4849 iterations 2
Cbc0038I Pass   9: suminf.    0.28896 (2) obj. -53.9837 iterations 1
Cbc0038I Pass  10: suminf.    1.14462 (3) obj. -49.4849 iterations 2
Cbc0038I Pass  11: suminf.    2.08688 (8) obj. -49.4849 iterations 14
Cbc0038I Pass  12: suminf.    1.46023 (6) obj. -49.5874 iterations 4
Cbc0038I Pass  13: suminf.    1.02553 (3) obj. -49.4849 iterations 7
Cbc0038I Pass  14: suminf.    0.74010 (2) obj. -49.4849 iterations 1
Cbc0038I Pass  15: suminf.    0.89106 (2) obj. -49.4849 iterations 1
Cbc0038I Pass  16: suminf.    0.75989 (2) obj. -53.1821 iterations 1
Cbc0038I Pass  17: suminf.    0.93811 (3) obj. -49.4849 iterations 7
Cbc0038I Pass  18: suminf.    0.41461 (2) obj. -49.4849 iterations 3
Cbc0038I Pass  19: suminf.    0.50808 (2) obj. -49.4849 iterations 1
Cbc0038I Pass  20: suminf.    2.39904 (9) obj. -49.4849 iterations 13
Cbc0038I Pass  21: suminf.    1.53981 (8) obj. -49.4849 iterations 4
Cbc0038I Pass  22: suminf.    0.86827 (7) obj. -49.4849 iterations 4
Cbc0038I Pass  23: suminf.    0.45015 (2) obj. -51.4781 iterations 6
Cbc0038I Pass  24: suminf.    0.41250 (1) obj. -50.2263 iterations 1
Cbc0038I Pass  25: suminf.    0.30657 (2) obj. -49.4849 iterations 5
Cbc0038I Pass  26: suminf.    0.49115 (2) obj. -55.7766 iterations 1
Cbc0038I Pass  27: suminf.    0.47778 (1) obj. -55.3484 iterations 1
Cbc0038I Pass  28: suminf.    3.93943 (13) obj. -49.4849 iterations 15
Cbc0038I Pass  29: suminf.    2.27205 (11) obj. -49.4849 iterations 4
Cbc0038I Pass  30: suminf.    2.27205 (11) obj. -49.4849 iterations 0
Cbc0038I Pass  31: suminf.    0.76228 (2) obj. -49.4849 iterations 10
Cbc0038I Rounding solution of -49.0174 is better than previous of -46.6132

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 49 columns, reduced to 34 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -49.0174 to -49.2633 (0.08 seconds)
Cbc0038I Round again with cutoff of -54.6538
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.25143 (7) obj. -54.6538 iterations 0
Cbc0038I Pass  32: suminf.    0.90633 (4) obj. -54.6538 iterations 14
Cbc0038I Pass  33: suminf.    0.53489 (3) obj. -54.6538 iterations 1
Cbc0038I Pass  34: suminf.    0.93833 (3) obj. -54.6538 iterations 7
Cbc0038I Pass  35: suminf.    0.43900 (3) obj. -54.6538 iterations 2
Cbc0038I Pass  36: suminf.    0.28954 (3) obj. -54.6538 iterations 4
Cbc0038I Pass  37: suminf.    0.13151 (1) obj. -54.6538 iterations 1
Cbc0038I Pass  38: suminf.    0.18699 (1) obj. -57.387 iterations 1
Cbc0038I Pass  39: suminf.    2.17096 (8) obj. -54.6538 iterations 10
Cbc0038I Pass  40: suminf.    1.41449 (8) obj. -54.6538 iterations 2
Cbc0038I Pass  41: suminf.    1.04964 (7) obj. -54.6538 iterations 1
Cbc0038I Pass  42: suminf.    0.70955 (3) obj. -54.6538 iterations 9
Cbc0038I Pass  43: suminf.    0.48488 (4) obj. -54.6538 iterations 1
Cbc0038I Pass  44: suminf.    0.67124 (3) obj. -54.6538 iterations 5
Cbc0038I Pass  45: suminf.    0.67124 (3) obj. -54.6538 iterations 0
Cbc0038I Pass  46: suminf.    0.87548 (4) obj. -54.6538 iterations 4
Cbc0038I Pass  47: suminf.    0.74612 (3) obj. -54.6538 iterations 2
Cbc0038I Pass  48: suminf.    0.67124 (3) obj. -54.6538 iterations 2
Cbc0038I Pass  49: suminf.    1.65555 (7) obj. -54.6538 iterations 6
Cbc0038I Pass  50: suminf.    1.04054 (5) obj. -55.1999 iterations 3
Cbc0038I Pass  51: suminf.    0.67124 (3) obj. -54.6538 iterations 6
Cbc0038I Pass  52: suminf.    0.67124 (3) obj. -54.6538 iterations 0
Cbc0038I Pass  53: suminf.    0.87548 (4) obj. -54.6538 iterations 3
Cbc0038I Pass  54: suminf.    0.74612 (3) obj. -54.6538 iterations 2
Cbc0038I Pass  55: suminf.    0.67124 (3) obj. -54.6538 iterations 1
Cbc0038I Pass  56: suminf.    2.05473 (7) obj. -54.6538 iterations 10
Cbc0038I Pass  57: suminf.    1.50014 (5) obj. -54.6538 iterations 2
Cbc0038I Pass  58: suminf.    1.00385 (4) obj. -54.6538 iterations 1
Cbc0038I Pass  59: suminf.    0.49724 (2) obj. -54.6538 iterations 3
Cbc0038I Pass  60: suminf.    0.40113 (2) obj. -54.6538 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 49 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -49.2633 - took 0.08 seconds
Cbc0012I Integer solution of -49.26331 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 42 rows 49 columns, reduced to 28 rows 27 columns
Cbc0031I 19 added rows had average density of 14.105263
Cbc0013I At root node, 19 cuts changed objective from -75.329231 to -61.996706 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1155 row cuts average 3.3 elements, 12 column cuts (12 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 954 row cuts average 36.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 66 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 234 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 156 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 284 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.723 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -49.26331 best solution, best possible -61.996706 (1.63 seconds)
Cbc0010I After 9 nodes, 4 on tree, -49.26331 best solution, best possible -61.802281 (2.40 seconds)
Cbc0001I Search completed - best objective -49.26330999999999, took 2460 iterations and 14 nodes (2.45 seconds)
Cbc0032I Strong branching done 216 times (1540 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.60   (Wallclock seconds):       2.46

