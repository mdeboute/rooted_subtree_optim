Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 61 (-17) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 0.000259684 - average 2.42695e-06, 34 fixed columns
Coin0506I Presolve 30 (-77) rows, 21 (-40) columns and 96 (-234) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Coin0511I After Postsolve, objective 136.02458, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23363969 - largest nonzero change 0 ( 0%) - largest zero change 2.9947818e-05
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Coin0511I After Postsolve, objective 136.02458, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.0245763 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 61 columns (60 integer (60 of which binary)) and 351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.013%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.61643
Cbc0038I Solution found of -25.2067
Cbc0038I Relaxing continuous gives -30.6136
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -30.6136 to -101.331 (0.02 seconds)
Cbc0038I Round again with cutoff of -104.722
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    2.01438 (7) obj. -104.722 iterations 18
Cbc0038I Pass   2: suminf.    0.88401 (2) obj. -104.722 iterations 10
Cbc0038I Pass   3: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass   4: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass   5: suminf.    1.12924 (5) obj. -104.722 iterations 9
Cbc0038I Pass   6: suminf.    1.04213 (3) obj. -109.446 iterations 6
Cbc0038I Pass   7: suminf.    0.93948 (3) obj. -104.722 iterations 7
Cbc0038I Pass   8: suminf.    0.46834 (3) obj. -104.722 iterations 6
Cbc0038I Pass   9: suminf.    0.73852 (2) obj. -107.349 iterations 4
Cbc0038I Pass  10: suminf.    3.01538 (7) obj. -104.722 iterations 12
Cbc0038I Pass  11: suminf.    1.00255 (6) obj. -104.722 iterations 11
Cbc0038I Pass  12: suminf.    1.00255 (6) obj. -104.722 iterations 0
Cbc0038I Pass  13: suminf.    0.59459 (2) obj. -104.722 iterations 5
Cbc0038I Pass  14: suminf.    0.51611 (2) obj. -104.722 iterations 1
Cbc0038I Pass  15: suminf.    1.70812 (7) obj. -104.722 iterations 12
Cbc0038I Pass  16: suminf.    1.70812 (7) obj. -104.722 iterations 1
Cbc0038I Pass  17: suminf.    2.01438 (7) obj. -104.722 iterations 19
Cbc0038I Pass  18: suminf.    0.88401 (2) obj. -104.722 iterations 9
Cbc0038I Pass  19: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass  20: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass  21: suminf.    1.83396 (6) obj. -104.722 iterations 14
Cbc0038I Pass  22: suminf.    1.83396 (6) obj. -104.722 iterations 2
Cbc0038I Pass  23: suminf.    2.01438 (7) obj. -104.722 iterations 21
Cbc0038I Pass  24: suminf.    0.88401 (2) obj. -104.722 iterations 10
Cbc0038I Pass  25: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass  26: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass  27: suminf.    1.58232 (4) obj. -104.722 iterations 11
Cbc0038I Pass  28: suminf.    1.58232 (4) obj. -104.722 iterations 6
Cbc0038I Pass  29: suminf.    0.67584 (2) obj. -104.722 iterations 8
Cbc0038I Pass  30: suminf.    1.88024 (5) obj. -104.722 iterations 9
Cbc0038I Rounding solution of -101.812 is better than previous of -101.331

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -110.825
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.20769 (7) obj. -110.825 iterations 1
Cbc0038I Pass  31: suminf.    1.02603 (5) obj. -110.825 iterations 16
Cbc0038I Pass  32: suminf.    0.29730 (2) obj. -110.825 iterations 9
Cbc0038I Pass  33: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  34: suminf.    2.27166 (7) obj. -110.825 iterations 23
Cbc0038I Pass  35: suminf.    2.02580 (7) obj. -110.825 iterations 12
Cbc0038I Pass  36: suminf.    0.91803 (4) obj. -110.825 iterations 8
Cbc0038I Pass  37: suminf.    0.33667 (4) obj. -110.825 iterations 2
Cbc0038I Pass  38: suminf.    1.02603 (5) obj. -110.825 iterations 10
Cbc0038I Pass  39: suminf.    0.29730 (2) obj. -110.825 iterations 7
Cbc0038I Pass  40: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  41: suminf.    0.70767 (6) obj. -110.825 iterations 12
Cbc0038I Pass  42: suminf.    0.21306 (2) obj. -110.825 iterations 9
Cbc0038I Pass  43: suminf.    0.22886 (2) obj. -110.825 iterations 2
Cbc0038I Pass  44: suminf.    0.81619 (5) obj. -110.825 iterations 5
Cbc0038I Pass  45: suminf.    1.37057 (5) obj. -110.825 iterations 6
Cbc0038I Pass  46: suminf.    1.37057 (5) obj. -110.825 iterations 0
Cbc0038I Pass  47: suminf.    2.20769 (7) obj. -110.825 iterations 13
Cbc0038I Pass  48: suminf.    1.02603 (5) obj. -110.825 iterations 14
Cbc0038I Pass  49: suminf.    0.29730 (2) obj. -110.825 iterations 8
Cbc0038I Pass  50: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  51: suminf.    0.29730 (2) obj. -110.825 iterations 8
Cbc0038I Pass  52: suminf.    0.94235 (5) obj. -110.825 iterations 16
Cbc0038I Pass  53: suminf.    0.58266 (3) obj. -110.825 iterations 9
Cbc0038I Pass  54: suminf.    0.52627 (3) obj. -110.825 iterations 5
Cbc0038I Pass  55: suminf.    0.18632 (3) obj. -110.825 iterations 3
Cbc0038I Pass  56: suminf.    0.74319 (3) obj. -110.825 iterations 2
Cbc0038I Pass  57: suminf.    0.64560 (3) obj. -110.825 iterations 1
Cbc0038I Pass  58: suminf.    0.38265 (2) obj. -110.825 iterations 2
Cbc0038I Pass  59: suminf.    0.92395 (4) obj. -110.825 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 37 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -101.812 - took 0.03 seconds
Cbc0012I Integer solution of -101.8118 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 105 rows 61 columns, reduced to 16 rows 13 columns
Cbc0031I 6 added rows had average density of 11.833333
Cbc0013I At root node, 6 cuts changed objective from -135.23827 to -120.6607 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 3.4 elements, 19 column cuts (19 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0038I Full problem 105 rows 61 columns, reduced to 8 rows 8 columns
Cbc0001I Search completed - best objective -101.8118, took 373 iterations and 46 nodes (0.11 seconds)
Cbc0032I Strong branching done 142 times (506 iterations), fathomed 5 nodes and fixed 7 variables
Cbc0035I Maximum depth 9, 127 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-60) rows, 107 (-45) columns and 1560 (-1743) elements
Clp1000I sum of infeasibilities 3.80361e-07 - average 4.04639e-09, 32 fixed columns
Coin0506I Presolve 66 (-28) rows, 74 (-33) columns and 797 (-763) elements
Clp0029I End of values pass after 74 iterations
Clp0014I Perturbing problem by 0.001% of 1.7695472 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 169.4507
Clp0000I Optimal - objective value 169.4507
Coin0511I After Postsolve, objective 169.4507, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4927513 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 169.4507
Clp0000I Optimal - objective value 169.4507
Clp0000I Optimal - objective value 169.4507
Coin0511I After Postsolve, objective 169.4507, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 169.4506966 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 107 columns (107 integer (107 of which binary)) and 1586 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.490%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 3.58267
Cbc0038I Pass   1: suminf.    1.21096 (21) obj. -118.746 iterations 20
Cbc0038I Pass   2: suminf.    1.21096 (21) obj. -118.746 iterations 1
Cbc0038I Pass   3: suminf.    0.55037 (11) obj. -105.656 iterations 10
Cbc0038I Solution found of -91.3988
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 107 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -91.3988 to -96.1751 (0.04 seconds)
Cbc0038I Round again with cutoff of -101.743
Cbc0038I Pass   4: suminf.    1.21096 (21) obj. -118.746 iterations 0
Cbc0038I Pass   5: suminf.    1.21096 (21) obj. -118.746 iterations 1
Cbc0038I Pass   6: suminf.    0.34831 (6) obj. -101.743 iterations 58
Cbc0038I Pass   7: suminf.    1.27630 (3) obj. -107.179 iterations 18
Cbc0038I Pass   8: suminf.    1.27630 (3) obj. -107.179 iterations 0
Cbc0038I Pass   9: suminf.    0.94199 (4) obj. -101.743 iterations 8
Cbc0038I Pass  10: suminf.    0.46560 (8) obj. -101.743 iterations 8
Cbc0038I Pass  11: suminf.    0.81907 (3) obj. -110.414 iterations 16
Cbc0038I Pass  12: suminf.    0.77778 (2) obj. -110.146 iterations 1
Cbc0038I Pass  13: suminf.    0.29962 (1) obj. -101.743 iterations 4
Cbc0038I Pass  14: suminf.    0.10811 (1) obj. -108.382 iterations 1
Cbc0038I Pass  15: suminf.    1.97994 (12) obj. -101.743 iterations 12
Cbc0038I Pass  16: suminf.    1.02068 (9) obj. -101.743 iterations 2
Cbc0038I Pass  17: suminf.    0.72081 (9) obj. -115.603 iterations 2
Cbc0038I Pass  18: suminf.    0.24193 (1) obj. -101.743 iterations 11
Cbc0038I Pass  19: suminf.    0.10811 (1) obj. -106.382 iterations 1
Cbc0038I Pass  20: suminf.    1.41896 (23) obj. -101.743 iterations 30
Cbc0038I Pass  21: suminf.    1.39916 (16) obj. -101.743 iterations 10
Cbc0038I Pass  22: suminf.    0.43431 (4) obj. -101.743 iterations 25
Cbc0038I Pass  23: suminf.    0.43431 (4) obj. -101.743 iterations 0
Cbc0038I Pass  24: suminf.    0.74324 (3) obj. -101.743 iterations 4
Cbc0038I Pass  25: suminf.    0.74324 (3) obj. -101.743 iterations 1
Cbc0038I Pass  26: suminf.    0.74113 (2) obj. -101.743 iterations 2
Cbc0038I Pass  27: suminf.    0.16789 (2) obj. -101.743 iterations 3
Cbc0038I Pass  28: suminf.    0.40344 (2) obj. -101.743 iterations 1
Cbc0038I Pass  29: suminf.    1.49763 (9) obj. -101.743 iterations 14
Cbc0038I Pass  30: suminf.    1.10195 (8) obj. -107.609 iterations 5
Cbc0038I Pass  31: suminf.    0.59632 (7) obj. -105.908 iterations 1
Cbc0038I Pass  32: suminf.    0.78343 (2) obj. -101.743 iterations 9
Cbc0038I Pass  33: suminf.    0.76529 (2) obj. -106.656 iterations 2
Cbc0038I Rounding solution of -97.0065 is better than previous of -96.1751

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 107 columns, reduced to 53 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -97.0065 to -101.331 (0.06 seconds)
Cbc0038I Round again with cutoff of -111.764
Cbc0038I Pass  33: suminf.    1.21096 (21) obj. -118.746 iterations 0
Cbc0038I Pass  34: suminf.    1.21096 (21) obj. -118.746 iterations 1
Cbc0038I Pass  35: suminf.    0.75064 (12) obj. -111.764 iterations 11
Cbc0038I Pass  36: suminf.    1.03230 (16) obj. -111.764 iterations 41
Cbc0038I Pass  37: suminf.    1.01502 (16) obj. -111.764 iterations 8
Cbc0038I Pass  38: suminf.    1.16646 (4) obj. -111.764 iterations 25
Cbc0038I Pass  39: suminf.    0.93295 (5) obj. -111.764 iterations 7
Cbc0038I Pass  40: suminf.    1.24878 (4) obj. -111.764 iterations 13
Cbc0038I Pass  41: suminf.    0.69888 (4) obj. -111.764 iterations 3
Cbc0038I Pass  42: suminf.    0.96077 (3) obj. -111.764 iterations 5
Cbc0038I Pass  43: suminf.    1.98110 (14) obj. -111.764 iterations 20
Cbc0038I Pass  44: suminf.    1.00308 (11) obj. -111.764 iterations 4
Cbc0038I Pass  45: suminf.    0.94129 (4) obj. -111.764 iterations 18
Cbc0038I Pass  46: suminf.    0.94129 (4) obj. -111.764 iterations 0
Cbc0038I Pass  47: suminf.    0.93236 (4) obj. -111.764 iterations 3
Cbc0038I Pass  48: suminf.    0.93236 (4) obj. -111.764 iterations 0
Cbc0038I Pass  49: suminf.    0.94129 (4) obj. -111.764 iterations 5
Cbc0038I Pass  50: suminf.    0.65819 (5) obj. -111.764 iterations 4
Cbc0038I Pass  51: suminf.    0.50304 (5) obj. -111.764 iterations 4
Cbc0038I Pass  52: suminf.    2.02591 (5) obj. -111.764 iterations 6
Cbc0038I Pass  53: suminf.    0.81334 (5) obj. -111.764 iterations 3
Cbc0038I Pass  54: suminf.    0.96077 (4) obj. -111.764 iterations 6
Cbc0038I Pass  55: suminf.    1.71061 (14) obj. -111.764 iterations 20
Cbc0038I Pass  56: suminf.    1.25857 (13) obj. -117.428 iterations 3
Cbc0038I Pass  57: suminf.    0.85673 (5) obj. -111.764 iterations 24
Cbc0038I Pass  58: suminf.    0.85673 (5) obj. -111.764 iterations 1
Cbc0038I Pass  59: suminf.    0.96077 (4) obj. -111.764 iterations 11
Cbc0038I Pass  60: suminf.    0.85386 (6) obj. -111.764 iterations 2
Cbc0038I Pass  61: suminf.    1.29411 (5) obj. -111.764 iterations 8
Cbc0038I Pass  62: suminf.    0.79740 (6) obj. -111.764 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 107 columns, reduced to 48 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -101.331 - took 0.06 seconds
Cbc0012I Integer solution of -101.3314 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 92 rows 107 columns, reduced to 14 rows 17 columns
Cbc0031I 41 added rows had average density of 16.146341
Cbc0013I At root node, 41 cuts changed objective from -151.84988 to -114.56176 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 456 row cuts average 5.9 elements, 7 column cuts (7 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 45.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 257 row cuts average 44.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -101.3314 best solution, best possible -114.56176 (0.59 seconds)
Cbc0012I Integer solution of -101.6683 found by rounding after 826 iterations and 18 nodes (1.04 seconds)
Cbc0016I Integer solution of -101.7315 found by strong branching after 932 iterations and 22 nodes (1.17 seconds)
Cbc0010I After 28 nodes, 6 on tree, -101.7315 best solution, best possible -114.56176 (1.31 seconds)
Cbc0004I Integer solution of -101.8118 found after 1324 iterations and 34 nodes (1.37 seconds)
Cbc0001I Search completed - best objective -101.8118, took 1324 iterations and 34 nodes (1.37 seconds)
Cbc0032I Strong branching done 518 times (6339 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 13, 95 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       1.38

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 61 (-17) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 0.000259684 - average 2.42695e-06, 34 fixed columns
Coin0506I Presolve 30 (-77) rows, 21 (-40) columns and 96 (-234) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Coin0511I After Postsolve, objective 136.02458, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23363969 - largest nonzero change 0 ( 0%) - largest zero change 2.9947818e-05
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Coin0511I After Postsolve, objective 136.02458, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.0245763 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 61 columns (60 integer (60 of which binary)) and 351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.013%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.61643
Cbc0038I Solution found of -25.2067
Cbc0038I Relaxing continuous gives -30.6136
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -30.6136 to -101.331 (0.02 seconds)
Cbc0038I Round again with cutoff of -104.722
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    2.01438 (7) obj. -104.722 iterations 18
Cbc0038I Pass   2: suminf.    0.88401 (2) obj. -104.722 iterations 10
Cbc0038I Pass   3: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass   4: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass   5: suminf.    1.12924 (5) obj. -104.722 iterations 9
Cbc0038I Pass   6: suminf.    1.04213 (3) obj. -109.446 iterations 6
Cbc0038I Pass   7: suminf.    0.93948 (3) obj. -104.722 iterations 7
Cbc0038I Pass   8: suminf.    0.46834 (3) obj. -104.722 iterations 6
Cbc0038I Pass   9: suminf.    0.73852 (2) obj. -107.349 iterations 4
Cbc0038I Pass  10: suminf.    3.01538 (7) obj. -104.722 iterations 12
Cbc0038I Pass  11: suminf.    1.00255 (6) obj. -104.722 iterations 11
Cbc0038I Pass  12: suminf.    1.00255 (6) obj. -104.722 iterations 0
Cbc0038I Pass  13: suminf.    0.59459 (2) obj. -104.722 iterations 5
Cbc0038I Pass  14: suminf.    0.51611 (2) obj. -104.722 iterations 1
Cbc0038I Pass  15: suminf.    1.70812 (7) obj. -104.722 iterations 12
Cbc0038I Pass  16: suminf.    1.70812 (7) obj. -104.722 iterations 1
Cbc0038I Pass  17: suminf.    2.01438 (7) obj. -104.722 iterations 19
Cbc0038I Pass  18: suminf.    0.88401 (2) obj. -104.722 iterations 9
Cbc0038I Pass  19: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass  20: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass  21: suminf.    1.83396 (6) obj. -104.722 iterations 14
Cbc0038I Pass  22: suminf.    1.83396 (6) obj. -104.722 iterations 2
Cbc0038I Pass  23: suminf.    2.01438 (7) obj. -104.722 iterations 21
Cbc0038I Pass  24: suminf.    0.88401 (2) obj. -104.722 iterations 10
Cbc0038I Pass  25: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass  26: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass  27: suminf.    1.58232 (4) obj. -104.722 iterations 11
Cbc0038I Pass  28: suminf.    1.58232 (4) obj. -104.722 iterations 6
Cbc0038I Pass  29: suminf.    0.67584 (2) obj. -104.722 iterations 8
Cbc0038I Pass  30: suminf.    1.88024 (5) obj. -104.722 iterations 9
Cbc0038I Rounding solution of -101.812 is better than previous of -101.331

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -110.825
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.20769 (7) obj. -110.825 iterations 1
Cbc0038I Pass  31: suminf.    1.02603 (5) obj. -110.825 iterations 16
Cbc0038I Pass  32: suminf.    0.29730 (2) obj. -110.825 iterations 9
Cbc0038I Pass  33: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  34: suminf.    2.27166 (7) obj. -110.825 iterations 23
Cbc0038I Pass  35: suminf.    2.02580 (7) obj. -110.825 iterations 12
Cbc0038I Pass  36: suminf.    0.91803 (4) obj. -110.825 iterations 8
Cbc0038I Pass  37: suminf.    0.33667 (4) obj. -110.825 iterations 2
Cbc0038I Pass  38: suminf.    1.02603 (5) obj. -110.825 iterations 10
Cbc0038I Pass  39: suminf.    0.29730 (2) obj. -110.825 iterations 7
Cbc0038I Pass  40: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  41: suminf.    0.70767 (6) obj. -110.825 iterations 12
Cbc0038I Pass  42: suminf.    0.21306 (2) obj. -110.825 iterations 9
Cbc0038I Pass  43: suminf.    0.22886 (2) obj. -110.825 iterations 2
Cbc0038I Pass  44: suminf.    0.81619 (5) obj. -110.825 iterations 5
Cbc0038I Pass  45: suminf.    1.37057 (5) obj. -110.825 iterations 6
Cbc0038I Pass  46: suminf.    1.37057 (5) obj. -110.825 iterations 0
Cbc0038I Pass  47: suminf.    2.20769 (7) obj. -110.825 iterations 13
Cbc0038I Pass  48: suminf.    1.02603 (5) obj. -110.825 iterations 14
Cbc0038I Pass  49: suminf.    0.29730 (2) obj. -110.825 iterations 8
Cbc0038I Pass  50: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  51: suminf.    0.29730 (2) obj. -110.825 iterations 8
Cbc0038I Pass  52: suminf.    0.94235 (5) obj. -110.825 iterations 16
Cbc0038I Pass  53: suminf.    0.58266 (3) obj. -110.825 iterations 9
Cbc0038I Pass  54: suminf.    0.52627 (3) obj. -110.825 iterations 5
Cbc0038I Pass  55: suminf.    0.18632 (3) obj. -110.825 iterations 3
Cbc0038I Pass  56: suminf.    0.74319 (3) obj. -110.825 iterations 2
Cbc0038I Pass  57: suminf.    0.64560 (3) obj. -110.825 iterations 1
Cbc0038I Pass  58: suminf.    0.38265 (2) obj. -110.825 iterations 2
Cbc0038I Pass  59: suminf.    0.92395 (4) obj. -110.825 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 37 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -101.812 - took 0.04 seconds
Cbc0012I Integer solution of -101.8118 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 105 rows 61 columns, reduced to 16 rows 13 columns
Cbc0031I 6 added rows had average density of 11.833333
Cbc0013I At root node, 6 cuts changed objective from -135.23827 to -120.6607 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 3.4 elements, 19 column cuts (19 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0038I Full problem 105 rows 61 columns, reduced to 8 rows 8 columns
Cbc0001I Search completed - best objective -101.8118, took 373 iterations and 46 nodes (0.15 seconds)
Cbc0032I Strong branching done 142 times (506 iterations), fathomed 5 nodes and fixed 7 variables
Cbc0035I Maximum depth 9, 127 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-62) rows, 106 (-47) columns and 1512 (-1792) elements
Clp1000I sum of infeasibilities 1.7582e-07 - average 1.89054e-09, 86 fixed columns
Coin0506I Presolve 15 (-78) rows, 20 (-86) columns and 66 (-1446) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 3.313619 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 99.936374
Clp0000I Optimal - objective value 99.936374
Coin0511I After Postsolve, objective 99.936374, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5003707 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 169.4507
Clp0000I Optimal - objective value 169.4507
Clp0000I Optimal - objective value 169.4507
Coin0511I After Postsolve, objective 169.4507, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 169.4506966 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 106 columns (106 integer (106 of which binary)) and 1537 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.418%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 3.78398
Cbc0038I Pass   1: suminf.    1.31464 (22) obj. -121.49 iterations 19
Cbc0038I Pass   2: suminf.    1.31464 (22) obj. -121.49 iterations 1
Cbc0038I Pass   3: suminf.    0.62330 (12) obj. -108.46 iterations 10
Cbc0038I Pass   4: suminf.    0.08893 (2) obj. -95.2229 iterations 14
Cbc0038I Solution found of -91.3988
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -91.3988 to -96.1751 (0.06 seconds)
Cbc0038I Round again with cutoff of -102.002
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.31464 (22) obj. -121.49 iterations 0
Cbc0038I Pass   6: suminf.    1.31464 (22) obj. -121.49 iterations 1
Cbc0038I Pass   7: suminf.    0.36626 (6) obj. -102.002 iterations 43
Cbc0038I Pass   8: suminf.    1.03789 (3) obj. -105.486 iterations 9
Cbc0038I Pass   9: suminf.    1.03789 (3) obj. -105.486 iterations 0
Cbc0038I Pass  10: suminf.    1.02047 (4) obj. -102.002 iterations 7
Cbc0038I Pass  11: suminf.    0.49730 (4) obj. -102.002 iterations 8
Cbc0038I Pass  12: suminf.    1.59705 (15) obj. -102.002 iterations 24
Cbc0038I Pass  13: suminf.    0.88407 (7) obj. -105.319 iterations 11
Cbc0038I Pass  14: suminf.    0.33623 (4) obj. -102.002 iterations 18
Cbc0038I Pass  15: suminf.    0.13360 (9) obj. -102.002 iterations 6
Cbc0038I Pass  16: suminf.    0.73262 (3) obj. -102.002 iterations 12
Cbc0038I Pass  17: suminf.    0.47090 (2) obj. -104.853 iterations 5
Cbc0038I Pass  18: suminf.    0.37025 (2) obj. -102.002 iterations 3
Cbc0038I Pass  19: suminf.    0.37025 (2) obj. -102.002 iterations 0
Cbc0038I Pass  20: suminf.    0.47090 (2) obj. -104.853 iterations 3
Cbc0038I Pass  21: suminf.    3.24565 (16) obj. -102.002 iterations 21
Cbc0038I Pass  22: suminf.    2.37116 (15) obj. -102.002 iterations 3
Cbc0038I Pass  23: suminf.    1.91463 (14) obj. -107.835 iterations 1
Cbc0038I Pass  24: suminf.    0.89538 (4) obj. -102.002 iterations 20
Cbc0038I Pass  25: suminf.    0.47232 (4) obj. -102.002 iterations 4
Cbc0038I Pass  26: suminf.    0.89538 (4) obj. -102.002 iterations 5
Cbc0038I Pass  27: suminf.    1.24263 (6) obj. -102.002 iterations 16
Cbc0038I Pass  28: suminf.    0.67615 (4) obj. -103.648 iterations 5
Cbc0038I Pass  29: suminf.    0.47581 (3) obj. -102.002 iterations 6
Cbc0038I Pass  30: suminf.    0.47232 (4) obj. -102.002 iterations 3
Cbc0038I Pass  31: suminf.    0.89538 (4) obj. -102.002 iterations 5
Cbc0038I Pass  32: suminf.    0.96753 (8) obj. -102.002 iterations 19
Cbc0038I Pass  33: suminf.    0.82447 (6) obj. -102.002 iterations 3
Cbc0038I Pass  34: suminf.    0.47090 (2) obj. -104.853 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 50 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -96.1751 to -101.812 (0.15 seconds)
Cbc0038I Round again with cutoff of -112.489
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.31464 (22) obj. -121.49 iterations 0
Cbc0038I Pass  35: suminf.    1.31464 (22) obj. -121.49 iterations 1
Cbc0038I Pass  36: suminf.    0.73812 (8) obj. -112.489 iterations 33
Cbc0038I Pass  37: suminf.    0.65550 (8) obj. -113.609 iterations 6
Cbc0038I Pass  38: suminf.    2.05838 (16) obj. -112.489 iterations 27
Cbc0038I Pass  39: suminf.    1.21285 (4) obj. -112.489 iterations 19
Cbc0038I Pass  40: suminf.    1.03812 (6) obj. -112.489 iterations 3
Cbc0038I Pass  41: suminf.    0.90157 (4) obj. -112.489 iterations 11
Cbc0038I Pass  42: suminf.    0.90157 (4) obj. -112.489 iterations 0
Cbc0038I Pass  43: suminf.    0.86774 (4) obj. -112.489 iterations 6
Cbc0038I Pass  44: suminf.    0.86774 (4) obj. -112.489 iterations 0
Cbc0038I Pass  45: suminf.    0.90157 (4) obj. -112.489 iterations 3
Cbc0038I Pass  46: suminf.    1.25104 (8) obj. -112.489 iterations 10
Cbc0038I Pass  47: suminf.    1.25104 (8) obj. -112.489 iterations 2
Cbc0038I Pass  48: suminf.    0.90157 (4) obj. -112.489 iterations 13
Cbc0038I Pass  49: suminf.    0.90157 (4) obj. -112.489 iterations 0
Cbc0038I Pass  50: suminf.    0.86774 (4) obj. -112.489 iterations 6
Cbc0038I Pass  51: suminf.    0.86774 (4) obj. -112.489 iterations 0
Cbc0038I Pass  52: suminf.    0.90157 (4) obj. -112.489 iterations 3
Cbc0038I Pass  53: suminf.    1.43075 (11) obj. -112.489 iterations 17
Cbc0038I Pass  54: suminf.    1.43075 (11) obj. -112.489 iterations 0
Cbc0038I Pass  55: suminf.    1.08338 (5) obj. -112.489 iterations 19
Cbc0038I Pass  56: suminf.    1.08338 (5) obj. -112.489 iterations 0
Cbc0038I Pass  57: suminf.    1.06851 (5) obj. -112.489 iterations 1
Cbc0038I Pass  58: suminf.    1.06851 (5) obj. -112.489 iterations 0
Cbc0038I Pass  59: suminf.    1.08338 (5) obj. -112.489 iterations 7
Cbc0038I Pass  60: suminf.    2.16785 (14) obj. -112.489 iterations 14
Cbc0038I Pass  61: suminf.    1.23863 (12) obj. -112.489 iterations 5
Cbc0038I Pass  62: suminf.    0.95573 (12) obj. -112.489 iterations 3
Cbc0038I Pass  63: suminf.    1.48770 (5) obj. -112.489 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -101.812 - took 0.12 seconds
Cbc0012I Integer solution of -101.8118 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 91 rows 106 columns, reduced to 36 rows 40 columns
Cbc0031I 44 added rows had average density of 17.068182
Cbc0013I At root node, 44 cuts changed objective from -154.43963 to -115.81185 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 445 row cuts average 4.8 elements, 9 column cuts (9 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 42.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 271 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0010I After 1 nodes, 2 on tree, -101.8118 best solution, best possible -115.81185 (0.54 seconds)
Cbc0038I Full problem 91 rows 106 columns, reduced to 24 rows 30 columns
Cbc0001I Search completed - best objective -101.8118, took 1702 iterations and 50 nodes (0.91 seconds)
Cbc0032I Strong branching done 630 times (7218 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 13, 122 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.91

