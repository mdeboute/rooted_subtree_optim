Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-14) rows, 29 (-4) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 4.5363e-06 - average 8.89471e-08, 2 fixed columns
Coin0506I Presolve 47 (-4) rows, 27 (-2) columns and 141 (-12) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 91.385786
Clp0000I Optimal - objective value 91.385786
Coin0511I After Postsolve, objective 91.385786, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.385786
Clp0000I Optimal - objective value 91.385786
Clp0000I Optimal - objective value 91.385786
Coin0511I After Postsolve, objective 91.385786, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.38578638 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 29 columns (28 integer (28 of which binary)) and 160 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.202%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.85821
Cbc0038I Solution found of -11.6364
Cbc0038I Relaxing continuous gives -11.6364
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11.6364 to -55.1818 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.0953
Cbc0038I Pass   1: suminf.    0.62670 (3) obj. -58.0953 iterations 19
Cbc0038I Pass   2: suminf.    0.56790 (3) obj. -58.0953 iterations 4
Cbc0038I Pass   3: suminf.    1.28959 (4) obj. -58.0953 iterations 6
Cbc0038I Pass   4: suminf.    0.87382 (5) obj. -58.0953 iterations 3
Cbc0038I Pass   5: suminf.    1.02849 (4) obj. -58.0953 iterations 6
Cbc0038I Pass   6: suminf.    0.23816 (3) obj. -58.0953 iterations 9
Cbc0038I Pass   7: suminf.    0.69604 (4) obj. -58.0953 iterations 10
Cbc0038I Pass   8: suminf.    0.12085 (2) obj. -58.532 iterations 6
Cbc0038I Pass   9: suminf.    0.85581 (4) obj. -58.0953 iterations 5
Cbc0038I Pass  10: suminf.    0.51910 (2) obj. -61.1611 iterations 4
Cbc0038I Pass  11: suminf.    0.23462 (2) obj. -60.7564 iterations 4
Cbc0038I Pass  12: suminf.    0.23462 (2) obj. -60.7564 iterations 0
Cbc0038I Pass  13: suminf.    0.74566 (3) obj. -58.0953 iterations 3
Cbc0038I Pass  14: suminf.    0.66807 (3) obj. -58.0953 iterations 1
Cbc0038I Pass  15: suminf.    0.53283 (4) obj. -58.0953 iterations 4
Cbc0038I Pass  16: suminf.    0.39920 (2) obj. -58.0953 iterations 1
Cbc0038I Pass  17: suminf.    0.89539 (3) obj. -58.0953 iterations 3
Cbc0038I Pass  18: suminf.    0.77776 (7) obj. -58.0953 iterations 8
Cbc0038I Pass  19: suminf.    0.48004 (2) obj. -58.0953 iterations 4
Cbc0038I Pass  20: suminf.    0.53299 (2) obj. -59.0999 iterations 1
Cbc0038I Pass  21: suminf.    0.70776 (4) obj. -58.0953 iterations 7
Cbc0038I Pass  22: suminf.    0.39701 (3) obj. -58.0953 iterations 2
Cbc0038I Pass  23: suminf.    0.79677 (3) obj. -58.0953 iterations 4
Cbc0038I Pass  24: suminf.    0.79677 (3) obj. -58.0953 iterations 0
Cbc0038I Pass  25: suminf.    0.50681 (2) obj. -58.0953 iterations 2
Cbc0038I Pass  26: suminf.    0.50681 (2) obj. -58.0953 iterations 0
Cbc0038I Pass  27: suminf.    0.93204 (2) obj. -58.0953 iterations 1
Cbc0038I Pass  28: suminf.    0.69785 (2) obj. -58.0953 iterations 1
Cbc0038I Pass  29: suminf.    1.36160 (6) obj. -58.0953 iterations 3
Cbc0038I Pass  30: suminf.    0.69785 (2) obj. -58.0953 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -55.1818 - took 0.07 seconds
Cbc0012I Integer solution of -55.1818 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 29 columns, reduced to 34 rows 20 columns
Cbc0031I 7 added rows had average density of 24.571429
Cbc0013I At root node, 7 cuts changed objective from -84.316335 to -72.487429 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 834 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0038I Full problem 50 rows 29 columns, reduced to 30 rows 18 columns
Cbc0001I Search completed - best objective -55.18180000000001, took 3182 iterations and 56 nodes (0.32 seconds)
Cbc0032I Strong branching done 472 times (2878 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 84 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-19) rows, 50 (-12) columns and 470 (-178) elements
Clp1000I sum of infeasibilities 4.1959e-08 - average 9.32422e-10, 30 fixed columns
Coin0506I Presolve 17 (-28) rows, 20 (-30) columns and 69 (-401) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 66.267358
Clp0000I Optimal - objective value 66.267358
Coin0511I After Postsolve, objective 66.267358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4159563 - largest nonzero change 0 ( 0%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 100.94461
Clp0000I Optimal - objective value 100.94461
Clp0000I Optimal - objective value 100.94461
Coin0511I After Postsolve, objective 100.94461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.9446084 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 48 columns (48 integer (48 of which binary)) and 448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.171%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.73533
Cbc0038I Pass   1: suminf.    0.89993 (7) obj. -28.838 iterations 15
Cbc0038I Pass   2: suminf.    0.89993 (7) obj. -28.838 iterations 0
Cbc0038I Solution found of -20.0909
Cbc0038I Rounding solution of -34.1818 is better than previous of -20.0909

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -34.1818 to -48.1817 (0.02 seconds)
Cbc0038I Round again with cutoff of -51.5622
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.33824 (15) obj. -51.5622 iterations 2
Cbc0038I Pass   4: suminf.    2.33824 (15) obj. -51.5622 iterations 0
Cbc0038I Pass   5: suminf.    0.67721 (3) obj. -51.5622 iterations 19
Cbc0038I Pass   6: suminf.    0.37895 (1) obj. -53.1215 iterations 3
Cbc0038I Pass   7: suminf.    0.41025 (1) obj. -51.5622 iterations 1
Cbc0038I Pass   8: suminf.    0.42955 (3) obj. -51.5622 iterations 11
Cbc0038I Pass   9: suminf.    0.40727 (1) obj. -51.5622 iterations 3
Cbc0038I Pass  10: suminf.    0.41053 (1) obj. -51.7243 iterations 1
Cbc0038I Pass  11: suminf.    3.17991 (11) obj. -51.5622 iterations 15
Cbc0038I Pass  12: suminf.    2.45377 (8) obj. -51.5622 iterations 7
Cbc0038I Pass  13: suminf.    0.96642 (3) obj. -51.5622 iterations 9
Cbc0038I Pass  14: suminf.    0.65569 (3) obj. -51.5622 iterations 4
Cbc0038I Pass  15: suminf.    0.95747 (3) obj. -51.5622 iterations 2
Cbc0038I Pass  16: suminf.    0.95747 (3) obj. -51.5622 iterations 0
Cbc0038I Pass  17: suminf.    0.96642 (3) obj. -51.5622 iterations 1
Cbc0038I Pass  18: suminf.    0.72957 (5) obj. -51.5622 iterations 4
Cbc0038I Pass  19: suminf.    1.04009 (4) obj. -51.5622 iterations 14
Cbc0038I Pass  20: suminf.    0.38002 (2) obj. -51.5622 iterations 10
Cbc0038I Pass  21: suminf.    0.12726 (2) obj. -51.5622 iterations 3
Cbc0038I Pass  22: suminf.    0.12726 (2) obj. -51.5622 iterations 0
Cbc0038I Pass  23: suminf.    0.17915 (2) obj. -51.5622 iterations 1
Cbc0038I Pass  24: suminf.    2.28230 (7) obj. -51.5622 iterations 20
Cbc0038I Pass  25: suminf.    2.08382 (6) obj. -51.5622 iterations 4
Cbc0038I Pass  26: suminf.    0.06718 (1) obj. -51.5622 iterations 5
Cbc0038I Pass  27: suminf.    0.01053 (1) obj. -54.3846 iterations 1
Cbc0038I Pass  28: suminf.    4.52314 (13) obj. -51.5622 iterations 11
Cbc0038I Pass  29: suminf.    2.21373 (8) obj. -51.5622 iterations 4
Cbc0038I Pass  30: suminf.    1.25384 (8) obj. -51.5622 iterations 1
Cbc0038I Pass  31: suminf.    1.22612 (7) obj. -51.5622 iterations 3
Cbc0038I Pass  32: suminf.    0.58788 (3) obj. -51.5622 iterations 7
Cbc0038I Rounding solution of -54.909 is better than previous of -48.1817

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 32 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -60.3243
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.74214 (15) obj. -60.3243 iterations 0
Cbc0038I Pass  33: suminf.    2.74214 (15) obj. -60.3243 iterations 0
Cbc0038I Pass  34: suminf.    1.67884 (6) obj. -60.3243 iterations 23
Cbc0038I Pass  35: suminf.    1.52710 (5) obj. -60.3243 iterations 4
Cbc0038I Pass  36: suminf.    1.52710 (5) obj. -60.3243 iterations 0
Cbc0038I Pass  37: suminf.    1.59212 (4) obj. -60.3243 iterations 8
Cbc0038I Pass  38: suminf.    1.27296 (4) obj. -60.3243 iterations 2
Cbc0038I Pass  39: suminf.    1.27296 (4) obj. -60.3243 iterations 2
Cbc0038I Pass  40: suminf.    1.63292 (4) obj. -62.8347 iterations 4
Cbc0038I Pass  41: suminf.    1.29334 (4) obj. -60.3243 iterations 5
Cbc0038I Pass  42: suminf.    1.27296 (4) obj. -60.3243 iterations 5
Cbc0038I Pass  43: suminf.    1.45287 (6) obj. -60.3243 iterations 6
Cbc0038I Pass  44: suminf.    0.90216 (5) obj. -60.3243 iterations 8
Cbc0038I Pass  45: suminf.    1.27296 (4) obj. -60.3243 iterations 8
Cbc0038I Pass  46: suminf.    1.27296 (4) obj. -60.3243 iterations 2
Cbc0038I Pass  47: suminf.    1.63292 (4) obj. -62.8347 iterations 4
Cbc0038I Pass  48: suminf.    1.29334 (4) obj. -60.3243 iterations 7
Cbc0038I Pass  49: suminf.    1.27296 (4) obj. -60.3243 iterations 7
Cbc0038I Pass  50: suminf.    2.85999 (10) obj. -60.3243 iterations 8
Cbc0038I Pass  51: suminf.    2.40206 (7) obj. -60.3243 iterations 4
Cbc0038I Pass  52: suminf.    2.40206 (7) obj. -60.3243 iterations 4
Cbc0038I Pass  53: suminf.    2.27355 (5) obj. -60.3243 iterations 12
Cbc0038I Pass  54: suminf.    2.06168 (5) obj. -60.3243 iterations 1
Cbc0038I Pass  55: suminf.    2.06168 (5) obj. -60.3243 iterations 5
Cbc0038I Pass  56: suminf.    2.47787 (5) obj. -60.3243 iterations 7
Cbc0038I Pass  57: suminf.    1.98883 (5) obj. -60.3243 iterations 3
Cbc0038I Pass  58: suminf.    1.84576 (7) obj. -60.3243 iterations 8
Cbc0038I Pass  59: suminf.    1.19413 (3) obj. -60.3243 iterations 8
Cbc0038I Pass  60: suminf.    1.19413 (3) obj. -60.3243 iterations 0
Cbc0038I Pass  61: suminf.    1.23351 (3) obj. -60.3243 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -54.909 - took 0.05 seconds
Cbc0012I Integer solution of -54.90905 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 42 rows 48 columns, reduced to 15 rows 16 columns
Cbc0031I 22 added rows had average density of 17.545455
Cbc0013I At root node, 22 cuts changed objective from -81.984945 to -65.854483 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1428 row cuts average 2.3 elements, 8 column cuts (8 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 556 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 48 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 7 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -54.90905 best solution, best possible -65.854483 (1.59 seconds)
Cbc0010I After 14 nodes, 4 on tree, -54.90905 best solution, best possible -65.854483 (2.33 seconds)
Cbc0010I After 23 nodes, 8 on tree, -54.90905 best solution, best possible -65.854483 (3.06 seconds)
Cbc0012I Integer solution of -55.1818 found by DiveCoefficient after 2486 iterations and 35 nodes (3.56 seconds)
Cbc0010I After 38 nodes, 2 on tree, -55.1818 best solution, best possible -65.854483 (3.78 seconds)
Cbc0001I Search completed - best objective -55.18180000000001, took 2722 iterations and 40 nodes (3.81 seconds)
Cbc0032I Strong branching done 552 times (4737 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 10, 52 variables fixed on reduced cost
Total time (CPU seconds):       2.36   (Wallclock seconds):       3.81

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-14) rows, 29 (-4) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 4.5363e-06 - average 8.89471e-08, 2 fixed columns
Coin0506I Presolve 47 (-4) rows, 27 (-2) columns and 141 (-12) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 91.385786
Clp0000I Optimal - objective value 91.385786
Coin0511I After Postsolve, objective 91.385786, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.385786
Clp0000I Optimal - objective value 91.385786
Clp0000I Optimal - objective value 91.385786
Coin0511I After Postsolve, objective 91.385786, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.38578638 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 29 columns (28 integer (28 of which binary)) and 160 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.202%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.85821
Cbc0038I Solution found of -11.6364
Cbc0038I Relaxing continuous gives -11.6364
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11.6364 to -55.1818 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.0953
Cbc0038I Pass   1: suminf.    0.62670 (3) obj. -58.0953 iterations 19
Cbc0038I Pass   2: suminf.    0.56790 (3) obj. -58.0953 iterations 4
Cbc0038I Pass   3: suminf.    1.28959 (4) obj. -58.0953 iterations 6
Cbc0038I Pass   4: suminf.    0.87382 (5) obj. -58.0953 iterations 3
Cbc0038I Pass   5: suminf.    1.02849 (4) obj. -58.0953 iterations 6
Cbc0038I Pass   6: suminf.    0.23816 (3) obj. -58.0953 iterations 9
Cbc0038I Pass   7: suminf.    0.69604 (4) obj. -58.0953 iterations 10
Cbc0038I Pass   8: suminf.    0.12085 (2) obj. -58.532 iterations 6
Cbc0038I Pass   9: suminf.    0.85581 (4) obj. -58.0953 iterations 5
Cbc0038I Pass  10: suminf.    0.51910 (2) obj. -61.1611 iterations 4
Cbc0038I Pass  11: suminf.    0.23462 (2) obj. -60.7564 iterations 4
Cbc0038I Pass  12: suminf.    0.23462 (2) obj. -60.7564 iterations 0
Cbc0038I Pass  13: suminf.    0.74566 (3) obj. -58.0953 iterations 3
Cbc0038I Pass  14: suminf.    0.66807 (3) obj. -58.0953 iterations 1
Cbc0038I Pass  15: suminf.    0.53283 (4) obj. -58.0953 iterations 4
Cbc0038I Pass  16: suminf.    0.39920 (2) obj. -58.0953 iterations 1
Cbc0038I Pass  17: suminf.    0.89539 (3) obj. -58.0953 iterations 3
Cbc0038I Pass  18: suminf.    0.77776 (7) obj. -58.0953 iterations 8
Cbc0038I Pass  19: suminf.    0.48004 (2) obj. -58.0953 iterations 4
Cbc0038I Pass  20: suminf.    0.53299 (2) obj. -59.0999 iterations 1
Cbc0038I Pass  21: suminf.    0.70776 (4) obj. -58.0953 iterations 7
Cbc0038I Pass  22: suminf.    0.39701 (3) obj. -58.0953 iterations 2
Cbc0038I Pass  23: suminf.    0.79677 (3) obj. -58.0953 iterations 4
Cbc0038I Pass  24: suminf.    0.79677 (3) obj. -58.0953 iterations 0
Cbc0038I Pass  25: suminf.    0.50681 (2) obj. -58.0953 iterations 2
Cbc0038I Pass  26: suminf.    0.50681 (2) obj. -58.0953 iterations 0
Cbc0038I Pass  27: suminf.    0.93204 (2) obj. -58.0953 iterations 1
Cbc0038I Pass  28: suminf.    0.69785 (2) obj. -58.0953 iterations 1
Cbc0038I Pass  29: suminf.    1.36160 (6) obj. -58.0953 iterations 3
Cbc0038I Pass  30: suminf.    0.69785 (2) obj. -58.0953 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -55.1818 - took 0.04 seconds
Cbc0012I Integer solution of -55.1818 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 29 columns, reduced to 34 rows 20 columns
Cbc0031I 7 added rows had average density of 24.571429
Cbc0013I At root node, 7 cuts changed objective from -84.316335 to -72.487429 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 834 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0038I Full problem 50 rows 29 columns, reduced to 30 rows 18 columns
Cbc0001I Search completed - best objective -55.18180000000001, took 3182 iterations and 56 nodes (0.34 seconds)
Cbc0032I Strong branching done 472 times (2878 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 84 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 48 (-15) columns and 435 (-214) elements
Clp1000I sum of infeasibilities 5.30023e-08 - average 1.23261e-09, 29 fixed columns
Coin0506I Presolve 16 (-27) rows, 19 (-29) columns and 65 (-370) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 1.8022883 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 66.267358
Clp0000I Optimal - objective value 66.267358
Coin0511I After Postsolve, objective 66.267358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4116919 - largest nonzero change 0 ( 0%) - largest zero change 1.8952571e-05
Clp0000I Optimal - objective value 100.94461
Clp0000I Optimal - objective value 100.94461
Clp0000I Optimal - objective value 100.94461
Coin0511I After Postsolve, objective 100.94461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.9446084 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 48 columns (48 integer (48 of which binary)) and 448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.171%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.64669
Cbc0038I Pass   1: suminf.    0.91876 (7) obj. -28.5721 iterations 14
Cbc0038I Pass   2: suminf.    0.91876 (7) obj. -28.5721 iterations 0
Cbc0038I Solution found of -20.0909
Cbc0038I Rounding solution of -34.1818 is better than previous of -20.0909

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -34.1818 to -48.1817 (0.02 seconds)
Cbc0038I Round again with cutoff of -51.5716
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.43828 (15) obj. -51.5716 iterations 2
Cbc0038I Pass   4: suminf.    2.43828 (15) obj. -51.5716 iterations 0
Cbc0038I Pass   5: suminf.    0.67779 (3) obj. -51.5716 iterations 17
Cbc0038I Pass   6: suminf.    0.37895 (1) obj. -53.1215 iterations 3
Cbc0038I Pass   7: suminf.    0.41006 (1) obj. -51.5716 iterations 1
Cbc0038I Pass   8: suminf.    0.42844 (3) obj. -51.5716 iterations 10
Cbc0038I Pass   9: suminf.    0.40746 (1) obj. -51.5716 iterations 3
Cbc0038I Pass  10: suminf.    0.41053 (1) obj. -51.7243 iterations 1
Cbc0038I Pass  11: suminf.    3.20227 (11) obj. -51.5716 iterations 15
Cbc0038I Pass  12: suminf.    2.46497 (8) obj. -51.5716 iterations 7
Cbc0038I Pass  13: suminf.    0.96523 (3) obj. -51.5716 iterations 10
Cbc0038I Pass  14: suminf.    0.65621 (3) obj. -51.5716 iterations 4
Cbc0038I Pass  15: suminf.    0.95840 (3) obj. -51.5716 iterations 2
Cbc0038I Pass  16: suminf.    0.95840 (3) obj. -51.5716 iterations 0
Cbc0038I Pass  17: suminf.    0.96523 (3) obj. -51.5716 iterations 1
Cbc0038I Pass  18: suminf.    0.73085 (5) obj. -51.5716 iterations 4
Cbc0038I Pass  19: suminf.    0.96895 (4) obj. -51.5716 iterations 20
Cbc0038I Pass  20: suminf.    0.30633 (2) obj. -51.5716 iterations 11
Cbc0038I Pass  21: suminf.    0.12778 (2) obj. -51.5716 iterations 3
Cbc0038I Pass  22: suminf.    0.12778 (2) obj. -51.5716 iterations 0
Cbc0038I Pass  23: suminf.    0.17909 (2) obj. -51.5716 iterations 1
Cbc0038I Pass  24: suminf.    2.40142 (7) obj. -51.5716 iterations 20
Cbc0038I Pass  25: suminf.    2.21485 (6) obj. -51.5716 iterations 3
Cbc0038I Pass  26: suminf.    0.06699 (1) obj. -51.5716 iterations 5
Cbc0038I Pass  27: suminf.    0.01053 (1) obj. -54.3846 iterations 1
Cbc0038I Pass  28: suminf.    3.05963 (10) obj. -51.5716 iterations 13
Cbc0038I Pass  29: suminf.    1.29525 (7) obj. -51.5716 iterations 8
Cbc0038I Pass  30: suminf.    1.18084 (7) obj. -51.5716 iterations 3
Cbc0038I Pass  31: suminf.    1.13598 (7) obj. -51.5716 iterations 1
Cbc0038I Pass  32: suminf.    1.24344 (3) obj. -51.5716 iterations 10
Cbc0038I Rounding solution of -50.0909 is better than previous of -48.1817

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 29 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -50.0909 to -54.9091 (0.05 seconds)
Cbc0038I Round again with cutoff of -60.3432
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.84497 (15) obj. -60.3432 iterations 0
Cbc0038I Pass  33: suminf.    2.84497 (15) obj. -60.3432 iterations 0
Cbc0038I Pass  34: suminf.    1.68002 (6) obj. -60.3432 iterations 23
Cbc0038I Pass  35: suminf.    1.53064 (5) obj. -60.3432 iterations 6
Cbc0038I Pass  36: suminf.    1.53064 (5) obj. -60.3432 iterations 0
Cbc0038I Pass  37: suminf.    1.59485 (4) obj. -60.3432 iterations 8
Cbc0038I Pass  38: suminf.    1.27688 (4) obj. -60.3432 iterations 2
Cbc0038I Pass  39: suminf.    1.27688 (4) obj. -60.3432 iterations 2
Cbc0038I Pass  40: suminf.    1.63292 (4) obj. -62.8347 iterations 4
Cbc0038I Pass  41: suminf.    1.29590 (4) obj. -60.3432 iterations 5
Cbc0038I Pass  42: suminf.    1.27688 (4) obj. -60.3432 iterations 5
Cbc0038I Pass  43: suminf.    1.44973 (6) obj. -60.3432 iterations 6
Cbc0038I Pass  44: suminf.    0.90426 (5) obj. -60.3432 iterations 8
Cbc0038I Pass  45: suminf.    1.27688 (4) obj. -60.3432 iterations 7
Cbc0038I Pass  46: suminf.    1.27688 (4) obj. -60.3432 iterations 2
Cbc0038I Pass  47: suminf.    1.63292 (4) obj. -62.8347 iterations 4
Cbc0038I Pass  48: suminf.    1.29590 (4) obj. -60.3432 iterations 6
Cbc0038I Pass  49: suminf.    1.27688 (4) obj. -60.3432 iterations 7
Cbc0038I Pass  50: suminf.    2.82482 (10) obj. -60.3432 iterations 8
Cbc0038I Pass  51: suminf.    2.38099 (7) obj. -60.3432 iterations 4
Cbc0038I Pass  52: suminf.    2.38099 (7) obj. -60.3432 iterations 4
Cbc0038I Pass  53: suminf.    2.27539 (5) obj. -60.3432 iterations 12
Cbc0038I Pass  54: suminf.    2.06602 (5) obj. -60.3432 iterations 1
Cbc0038I Pass  55: suminf.    2.06602 (5) obj. -60.3432 iterations 5
Cbc0038I Pass  56: suminf.    2.47733 (5) obj. -60.3432 iterations 7
Cbc0038I Pass  57: suminf.    1.99374 (5) obj. -60.3432 iterations 2
Cbc0038I Pass  58: suminf.    1.84969 (7) obj. -60.3432 iterations 8
Cbc0038I Pass  59: suminf.    1.19598 (3) obj. -60.3432 iterations 8
Cbc0038I Pass  60: suminf.    1.19598 (3) obj. -60.3432 iterations 0
Cbc0038I Pass  61: suminf.    1.23388 (3) obj. -60.3432 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 25 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -54.9091 - took 0.05 seconds
Cbc0012I Integer solution of -54.90906 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 42 rows 48 columns, reduced to 15 rows 16 columns
Cbc0031I 21 added rows had average density of 24.809524
Cbc0013I At root node, 21 cuts changed objective from -82.079604 to -66.147439 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1445 row cuts average 2.1 elements, 8 column cuts (8 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 434 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 81 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 83 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 160 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.783 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -54.90906 best solution, best possible -66.147439 (1.71 seconds)
Cbc0010I After 5 nodes, 6 on tree, -54.90906 best solution, best possible -66.147439 (2.50 seconds)
Cbc0010I After 20 nodes, 10 on tree, -54.90906 best solution, best possible -66.147439 (3.24 seconds)
Cbc0010I After 40 nodes, 1 on tree, -54.90906 best solution, best possible -63.6669 (3.95 seconds)
Cbc0038I Full problem 42 rows 48 columns, reduced to 11 rows 13 columns
Cbc0004I Integer solution of -55.1818 found after 2989 iterations and 43 nodes (4.24 seconds)
Cbc0001I Search completed - best objective -55.18180000000001, took 3057 iterations and 46 nodes (4.31 seconds)
Cbc0032I Strong branching done 538 times (4038 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 11, 61 variables fixed on reduced cost
Total time (CPU seconds):       2.80   (Wallclock seconds):       4.32

