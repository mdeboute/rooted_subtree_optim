Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-27) rows, 41 (-9) columns and 182 (-103) elements
Clp1000I sum of infeasibilities 8.77683e-06 - average 1.219e-07, 23 fixed columns
Coin0506I Presolve 14 (-58) rows, 13 (-28) columns and 38 (-144) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 14073.382
Clp0000I Optimal - objective value 14073.382
Coin0511I After Postsolve, objective 14073.382, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 14073.382
Clp0000I Optimal - objective value 14073.382
Clp0000I Optimal - objective value 14073.382
Coin0511I After Postsolve, objective 14073.382, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14073.38151 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 41 columns (40 integer (40 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.086%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11252 iterations 18
Cbc0038I Solution found of -11252
Cbc0038I Relaxing continuous gives -11252
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 41 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -11252 to -12790.9 (0.01 seconds)
Cbc0038I Round again with cutoff of -12919.2
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.22761 (6) obj. -12919.2 iterations 6
Cbc0038I Pass   3: suminf.    1.00000 (5) obj. -12919.2 iterations 4
Cbc0038I Pass   4: suminf.    0.50481 (3) obj. -12919.2 iterations 12
Cbc0038I Pass   5: suminf.    0.15564 (1) obj. -12919.2 iterations 9
Cbc0038I Pass   6: suminf.    0.20539 (1) obj. -12919.2 iterations 1
Cbc0038I Pass   7: suminf.    0.53181 (3) obj. -12919.2 iterations 11
Cbc0038I Pass   8: suminf.    0.08113 (1) obj. -12919.2 iterations 6
Cbc0038I Pass   9: suminf.    0.26590 (1) obj. -12919.2 iterations 1
Cbc0038I Pass  10: suminf.    1.00000 (6) obj. -12919.2 iterations 10
Cbc0038I Pass  11: suminf.    1.00000 (8) obj. -12919.2 iterations 7
Cbc0038I Pass  12: suminf.    2.44494 (10) obj. -12919.2 iterations 11
Cbc0038I Pass  13: suminf.    0.24457 (5) obj. -12919.2 iterations 6
Cbc0038I Pass  14: suminf.    2.00000 (7) obj. -12919.2 iterations 16
Cbc0038I Pass  15: suminf.    1.15674 (8) obj. -12919.2 iterations 8
Cbc0038I Pass  16: suminf.    0.15564 (1) obj. -12919.2 iterations 9
Cbc0038I Pass  17: suminf.    0.20539 (1) obj. -12919.2 iterations 1
Cbc0038I Pass  18: suminf.    0.63239 (4) obj. -12919.2 iterations 6
Cbc0038I Pass  19: suminf.    0.61689 (4) obj. -12919.2 iterations 2
Cbc0038I Pass  20: suminf.    0.38463 (2) obj. -12919.2 iterations 3
Cbc0038I Pass  21: suminf.    0.99017 (5) obj. -12919.2 iterations 6
Cbc0038I Pass  22: suminf.    0.15564 (1) obj. -12919.2 iterations 7
Cbc0038I Pass  23: suminf.    0.20539 (1) obj. -12919.2 iterations 1
Cbc0038I Pass  24: suminf.    1.00000 (4) obj. -12919.2 iterations 8
Cbc0038I Pass  25: suminf.    0.76925 (3) obj. -12919.2 iterations 3
Cbc0038I Pass  26: suminf.    1.29218 (6) obj. -12919.2 iterations 10
Cbc0038I Pass  27: suminf.    1.00000 (5) obj. -12919.2 iterations 3
Cbc0038I Pass  28: suminf.    0.94315 (7) obj. -12919.2 iterations 7
Cbc0038I Pass  29: suminf.    0.15564 (1) obj. -12919.2 iterations 8
Cbc0038I Pass  30: suminf.    0.20539 (1) obj. -12919.2 iterations 1
Cbc0038I Pass  31: suminf.    2.00000 (9) obj. -12919.2 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 41 columns, reduced to 22 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -12790.9 to -12917.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -13150
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.59424 (6) obj. -13150 iterations 1
Cbc0038I Pass  32: suminf.    0.82346 (4) obj. -13150 iterations 5
Cbc0038I Pass  33: suminf.    0.51247 (3) obj. -13150 iterations 5
Cbc0038I Pass  34: suminf.    0.76914 (3) obj. -13150 iterations 6
Cbc0038I Pass  35: suminf.    0.71043 (3) obj. -13150 iterations 1
Cbc0038I Pass  36: suminf.    0.62466 (3) obj. -13150 iterations 2
Cbc0038I Pass  37: suminf.    0.88753 (5) obj. -13150 iterations 9
Cbc0038I Pass  38: suminf.    1.00000 (4) obj. -13150 iterations 9
Cbc0038I Pass  39: suminf.    1.00000 (5) obj. -13150 iterations 3
Cbc0038I Pass  40: suminf.    1.30050 (7) obj. -13150 iterations 8
Cbc0038I Pass  41: suminf.    0.46295 (5) obj. -13150 iterations 2
Cbc0038I Pass  42: suminf.    2.13574 (12) obj. -13150 iterations 13
Cbc0038I Pass  43: suminf.    2.80283 (10) obj. -13150 iterations 8
Cbc0038I Pass  44: suminf.    0.60246 (5) obj. -13150 iterations 6
Cbc0038I Pass  45: suminf.    1.83535 (9) obj. -13150 iterations 14
Cbc0038I Pass  46: suminf.    0.55517 (4) obj. -13150 iterations 9
Cbc0038I Pass  47: suminf.    0.48029 (3) obj. -13150 iterations 5
Cbc0038I Pass  48: suminf.    0.28663 (3) obj. -13150 iterations 2
Cbc0038I Pass  49: suminf.    0.64388 (3) obj. -13150 iterations 5
Cbc0038I Pass  50: suminf.    0.52306 (3) obj. -13150 iterations 1
Cbc0038I Pass  51: suminf.    0.48029 (3) obj. -13150 iterations 3
Cbc0038I Pass  52: suminf.    0.82346 (4) obj. -13150 iterations 5
Cbc0038I Pass  53: suminf.    1.58970 (6) obj. -13150 iterations 8
Cbc0038I Pass  54: suminf.    0.70640 (4) obj. -13150 iterations 9
Cbc0038I Pass  55: suminf.    0.72254 (3) obj. -13150 iterations 8
Cbc0038I Pass  56: suminf.    0.66559 (3) obj. -13150 iterations 2
Cbc0038I Pass  57: suminf.    0.85407 (3) obj. -13150 iterations 6
Cbc0038I Pass  58: suminf.    0.83749 (3) obj. -13150 iterations 1
Cbc0038I Pass  59: suminf.    0.72254 (3) obj. -13150 iterations 2
Cbc0038I Pass  60: suminf.    1.07336 (5) obj. -13150 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 41 columns, reduced to 26 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -12917.6 - took 0.02 seconds
Cbc0012I Integer solution of -12917.61 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 72 rows 41 columns, reduced to 14 rows 12 columns
Cbc0031I 3 added rows had average density of 9
Cbc0013I At root node, 3 cuts changed objective from -14073.382 to -12979.35 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 77 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 21 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -12917.61, took 52 iterations and 2 nodes (0.03 seconds)
Cbc0032I Strong branching done 10 times (20 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-22) rows, 84 (-12) columns and 1056 (-357) elements
Clp1000I sum of infeasibilities 1.38544e-07 - average 1.82295e-09, 76 fixed columns
Coin0506I Presolve 7 (-69) rows, 8 (-76) columns and 20 (-1036) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 12680.188
Clp0000I Optimal - objective value 12680.188
Coin0511I After Postsolve, objective 12680.188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7779497 - largest nonzero change 1.1925507e-05 ( 0.00086296483%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 16384.919
Clp0000I Optimal - objective value 16384.919
Clp0000I Optimal - objective value 16384.919
Coin0511I After Postsolve, objective 16384.919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16384.91888 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 78 rows, 86 columns (86 integer (86 of which binary)) and 1062 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.916%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 10.6666
Cbc0038I Pass   1: suminf.    3.36407 (25) obj. -10865.9 iterations 19
Cbc0038I Pass   2: suminf.    3.36407 (25) obj. -10865.9 iterations 0
Cbc0038I Pass   3: suminf.    0.20288 (4) obj. -8986.07 iterations 21
Cbc0038I Solution found of -8818.99
Cbc0038I Rounding solution of -8862.08 is better than previous of -8818.99

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 86 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -8862.08 to -12635.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -12946.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.40406 (38) obj. -12946.5 iterations 8
Cbc0038I Pass   5: suminf.    6.40406 (38) obj. -12946.5 iterations 0
Cbc0038I Pass   6: suminf.    3.82719 (30) obj. -12946.5 iterations 16
Cbc0038I Pass   7: suminf.    3.82719 (30) obj. -12946.5 iterations 0
Cbc0038I Pass   8: suminf.    2.04704 (14) obj. -12946.5 iterations 18
Cbc0038I Pass   9: suminf.    2.04704 (14) obj. -12946.5 iterations 0
Cbc0038I Pass  10: suminf.    0.55502 (4) obj. -12946.5 iterations 13
Cbc0038I Pass  11: suminf.    0.32500 (1) obj. -13266.5 iterations 5
Cbc0038I Pass  12: suminf.    0.33282 (1) obj. -12946.5 iterations 4
Cbc0038I Pass  13: suminf.    1.77790 (10) obj. -12946.5 iterations 15
Cbc0038I Pass  14: suminf.    1.49553 (8) obj. -12946.5 iterations 13
Cbc0038I Pass  15: suminf.    3.99200 (20) obj. -12946.5 iterations 18
Cbc0038I Pass  16: suminf.    3.12933 (14) obj. -12946.5 iterations 5
Cbc0038I Pass  17: suminf.    3.12254 (14) obj. -12952.9 iterations 2
Cbc0038I Pass  18: suminf.    0.66564 (2) obj. -12946.5 iterations 27
Cbc0038I Pass  19: suminf.    0.66564 (2) obj. -12946.5 iterations 0
Cbc0038I Pass  20: suminf.    0.32500 (1) obj. -13266.5 iterations 5
Cbc0038I Pass  21: suminf.    0.33282 (1) obj. -12946.5 iterations 2
Cbc0038I Pass  22: suminf.    5.10427 (17) obj. -12946.5 iterations 26
Cbc0038I Pass  23: suminf.    3.04039 (12) obj. -12946.5 iterations 9
Cbc0038I Pass  24: suminf.    2.86500 (11) obj. -13156.5 iterations 3
Cbc0038I Pass  25: suminf.    0.45221 (1) obj. -12946.5 iterations 15
Cbc0038I Pass  26: suminf.    0.32500 (1) obj. -13065.5 iterations 2
Cbc0038I Pass  27: suminf.    3.06077 (10) obj. -12946.5 iterations 17
Cbc0038I Pass  28: suminf.    1.70701 (8) obj. -12946.5 iterations 2
Cbc0038I Pass  29: suminf.    1.64685 (7) obj. -13002.4 iterations 3
Cbc0038I Pass  30: suminf.    0.46010 (5) obj. -12946.5 iterations 9
Cbc0038I Pass  31: suminf.    0.46010 (5) obj. -12946.5 iterations 0
Cbc0038I Pass  32: suminf.    1.24443 (5) obj. -12946.5 iterations 9
Cbc0038I Pass  33: suminf.    1.95893 (7) obj. -12946.5 iterations 9
Cbc0038I Rounding solution of -12678.4 is better than previous of -12635.3

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 86 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -12678.4 to -12790.9 (0.04 seconds)
Cbc0038I Round again with cutoff of -13506.7
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    6.75844 (38) obj. -13506.7 iterations 0
Cbc0038I Pass  34: suminf.    6.75844 (38) obj. -13506.7 iterations 0
Cbc0038I Pass  35: suminf.    4.02216 (23) obj. -13506.7 iterations 25
Cbc0038I Pass  36: suminf.    4.02216 (23) obj. -13506.7 iterations 0
Cbc0038I Pass  37: suminf.    0.78546 (6) obj. -13506.7 iterations 41
Cbc0038I Pass  38: suminf.    0.78546 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  39: suminf.    1.47644 (6) obj. -13506.7 iterations 9
Cbc0038I Pass  40: suminf.    0.69614 (6) obj. -13506.7 iterations 10
Cbc0038I Pass  41: suminf.    0.69614 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  42: suminf.    1.53180 (6) obj. -13506.7 iterations 15
Cbc0038I Pass  43: suminf.    0.74146 (6) obj. -13506.7 iterations 10
Cbc0038I Pass  44: suminf.    0.74146 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  45: suminf.    3.25264 (15) obj. -13506.7 iterations 17
Cbc0038I Pass  46: suminf.    3.20880 (12) obj. -13506.7 iterations 6
Cbc0038I Pass  47: suminf.    0.78546 (6) obj. -13506.7 iterations 19
Cbc0038I Pass  48: suminf.    0.78546 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  49: suminf.    1.47644 (6) obj. -13506.7 iterations 9
Cbc0038I Pass  50: suminf.    0.69614 (6) obj. -13506.7 iterations 10
Cbc0038I Pass  51: suminf.    0.69614 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  52: suminf.    1.53180 (6) obj. -13506.7 iterations 15
Cbc0038I Pass  53: suminf.    0.74146 (6) obj. -13506.7 iterations 9
Cbc0038I Pass  54: suminf.    0.74146 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  55: suminf.    2.48890 (10) obj. -13506.7 iterations 18
Cbc0038I Pass  56: suminf.    2.05542 (8) obj. -13625.3 iterations 3
Cbc0038I Pass  57: suminf.    0.78546 (6) obj. -13506.7 iterations 14
Cbc0038I Pass  58: suminf.    0.78546 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  59: suminf.    1.47644 (6) obj. -13506.7 iterations 9
Cbc0038I Pass  60: suminf.    0.69614 (6) obj. -13506.7 iterations 10
Cbc0038I Pass  61: suminf.    0.69614 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  62: suminf.    1.53180 (6) obj. -13506.7 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 86 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -12790.9 - took 0.04 seconds
Cbc0012I Integer solution of -12790.92 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 78 rows 86 columns, reduced to 4 rows 5 columns
Cbc0012I Integer solution of -12917.61 found by DiveCoefficient after 67 iterations and 0 nodes (0.11 seconds)
Cbc0031I 16 added rows had average density of 3.6875
Cbc0013I At root node, 16 cuts changed objective from -15747.207 to -12917.61 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 240 row cuts average 2.0 elements, 29 column cuts (29 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 27 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -12917.61, took 67 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-27) rows, 41 (-9) columns and 182 (-103) elements
Clp1000I sum of infeasibilities 8.77683e-06 - average 1.219e-07, 23 fixed columns
Coin0506I Presolve 14 (-58) rows, 13 (-28) columns and 38 (-144) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 14073.382
Clp0000I Optimal - objective value 14073.382
Coin0511I After Postsolve, objective 14073.382, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 14073.382
Clp0000I Optimal - objective value 14073.382
Clp0000I Optimal - objective value 14073.382
Coin0511I After Postsolve, objective 14073.382, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14073.38151 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 41 columns (40 integer (40 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.086%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11252 iterations 18
Cbc0038I Solution found of -11252
Cbc0038I Relaxing continuous gives -11252
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 41 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -11252 to -12790.9 (0.01 seconds)
Cbc0038I Round again with cutoff of -12919.2
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.22761 (6) obj. -12919.2 iterations 6
Cbc0038I Pass   3: suminf.    1.00000 (5) obj. -12919.2 iterations 4
Cbc0038I Pass   4: suminf.    0.50481 (3) obj. -12919.2 iterations 12
Cbc0038I Pass   5: suminf.    0.15564 (1) obj. -12919.2 iterations 9
Cbc0038I Pass   6: suminf.    0.20539 (1) obj. -12919.2 iterations 1
Cbc0038I Pass   7: suminf.    0.53181 (3) obj. -12919.2 iterations 11
Cbc0038I Pass   8: suminf.    0.08113 (1) obj. -12919.2 iterations 6
Cbc0038I Pass   9: suminf.    0.26590 (1) obj. -12919.2 iterations 1
Cbc0038I Pass  10: suminf.    1.00000 (6) obj. -12919.2 iterations 10
Cbc0038I Pass  11: suminf.    1.00000 (8) obj. -12919.2 iterations 7
Cbc0038I Pass  12: suminf.    2.44494 (10) obj. -12919.2 iterations 11
Cbc0038I Pass  13: suminf.    0.24457 (5) obj. -12919.2 iterations 6
Cbc0038I Pass  14: suminf.    2.00000 (7) obj. -12919.2 iterations 16
Cbc0038I Pass  15: suminf.    1.15674 (8) obj. -12919.2 iterations 8
Cbc0038I Pass  16: suminf.    0.15564 (1) obj. -12919.2 iterations 9
Cbc0038I Pass  17: suminf.    0.20539 (1) obj. -12919.2 iterations 1
Cbc0038I Pass  18: suminf.    0.63239 (4) obj. -12919.2 iterations 6
Cbc0038I Pass  19: suminf.    0.61689 (4) obj. -12919.2 iterations 2
Cbc0038I Pass  20: suminf.    0.38463 (2) obj. -12919.2 iterations 3
Cbc0038I Pass  21: suminf.    0.99017 (5) obj. -12919.2 iterations 6
Cbc0038I Pass  22: suminf.    0.15564 (1) obj. -12919.2 iterations 7
Cbc0038I Pass  23: suminf.    0.20539 (1) obj. -12919.2 iterations 1
Cbc0038I Pass  24: suminf.    1.00000 (4) obj. -12919.2 iterations 8
Cbc0038I Pass  25: suminf.    0.76925 (3) obj. -12919.2 iterations 3
Cbc0038I Pass  26: suminf.    1.29218 (6) obj. -12919.2 iterations 10
Cbc0038I Pass  27: suminf.    1.00000 (5) obj. -12919.2 iterations 3
Cbc0038I Pass  28: suminf.    0.94315 (7) obj. -12919.2 iterations 7
Cbc0038I Pass  29: suminf.    0.15564 (1) obj. -12919.2 iterations 8
Cbc0038I Pass  30: suminf.    0.20539 (1) obj. -12919.2 iterations 1
Cbc0038I Pass  31: suminf.    2.00000 (9) obj. -12919.2 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 41 columns, reduced to 22 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -12790.9 to -12917.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -13150
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.59424 (6) obj. -13150 iterations 1
Cbc0038I Pass  32: suminf.    0.82346 (4) obj. -13150 iterations 5
Cbc0038I Pass  33: suminf.    0.51247 (3) obj. -13150 iterations 5
Cbc0038I Pass  34: suminf.    0.76914 (3) obj. -13150 iterations 6
Cbc0038I Pass  35: suminf.    0.71043 (3) obj. -13150 iterations 1
Cbc0038I Pass  36: suminf.    0.62466 (3) obj. -13150 iterations 2
Cbc0038I Pass  37: suminf.    0.88753 (5) obj. -13150 iterations 9
Cbc0038I Pass  38: suminf.    1.00000 (4) obj. -13150 iterations 9
Cbc0038I Pass  39: suminf.    1.00000 (5) obj. -13150 iterations 3
Cbc0038I Pass  40: suminf.    1.30050 (7) obj. -13150 iterations 8
Cbc0038I Pass  41: suminf.    0.46295 (5) obj. -13150 iterations 2
Cbc0038I Pass  42: suminf.    2.13574 (12) obj. -13150 iterations 13
Cbc0038I Pass  43: suminf.    2.80283 (10) obj. -13150 iterations 8
Cbc0038I Pass  44: suminf.    0.60246 (5) obj. -13150 iterations 6
Cbc0038I Pass  45: suminf.    1.83535 (9) obj. -13150 iterations 14
Cbc0038I Pass  46: suminf.    0.55517 (4) obj. -13150 iterations 9
Cbc0038I Pass  47: suminf.    0.48029 (3) obj. -13150 iterations 5
Cbc0038I Pass  48: suminf.    0.28663 (3) obj. -13150 iterations 2
Cbc0038I Pass  49: suminf.    0.64388 (3) obj. -13150 iterations 5
Cbc0038I Pass  50: suminf.    0.52306 (3) obj. -13150 iterations 1
Cbc0038I Pass  51: suminf.    0.48029 (3) obj. -13150 iterations 3
Cbc0038I Pass  52: suminf.    0.82346 (4) obj. -13150 iterations 5
Cbc0038I Pass  53: suminf.    1.58970 (6) obj. -13150 iterations 8
Cbc0038I Pass  54: suminf.    0.70640 (4) obj. -13150 iterations 9
Cbc0038I Pass  55: suminf.    0.72254 (3) obj. -13150 iterations 8
Cbc0038I Pass  56: suminf.    0.66559 (3) obj. -13150 iterations 2
Cbc0038I Pass  57: suminf.    0.85407 (3) obj. -13150 iterations 6
Cbc0038I Pass  58: suminf.    0.83749 (3) obj. -13150 iterations 1
Cbc0038I Pass  59: suminf.    0.72254 (3) obj. -13150 iterations 2
Cbc0038I Pass  60: suminf.    1.07336 (5) obj. -13150 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 41 columns, reduced to 26 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -12917.6 - took 0.05 seconds
Cbc0012I Integer solution of -12917.61 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 72 rows 41 columns, reduced to 14 rows 12 columns
Cbc0031I 3 added rows had average density of 9
Cbc0013I At root node, 3 cuts changed objective from -14073.382 to -12979.35 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 77 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 21 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -12917.61, took 52 iterations and 2 nodes (0.03 seconds)
Cbc0032I Strong branching done 10 times (20 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-23) rows, 84 (-13) columns and 1056 (-358) elements
Clp1000I sum of infeasibilities 1.38544e-07 - average 1.82295e-09, 76 fixed columns
Coin0506I Presolve 7 (-69) rows, 8 (-76) columns and 20 (-1036) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 12680.188
Clp0000I Optimal - objective value 12680.188
Coin0511I After Postsolve, objective 12680.188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7779497 - largest nonzero change 1.1925507e-05 ( 0.00086296483%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 16384.919
Clp0000I Optimal - objective value 16384.919
Clp0000I Optimal - objective value 16384.919
Coin0511I After Postsolve, objective 16384.919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16384.91888 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 78 rows, 86 columns (86 integer (86 of which binary)) and 1062 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.916%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 10.6666
Cbc0038I Pass   1: suminf.    3.36407 (25) obj. -10865.9 iterations 19
Cbc0038I Pass   2: suminf.    3.36407 (25) obj. -10865.9 iterations 0
Cbc0038I Pass   3: suminf.    0.20288 (4) obj. -8986.07 iterations 21
Cbc0038I Solution found of -8818.99
Cbc0038I Rounding solution of -8862.08 is better than previous of -8818.99

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 86 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -8862.08 to -12635.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -12946.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.40406 (38) obj. -12946.5 iterations 8
Cbc0038I Pass   5: suminf.    6.40406 (38) obj. -12946.5 iterations 0
Cbc0038I Pass   6: suminf.    3.82719 (30) obj. -12946.5 iterations 16
Cbc0038I Pass   7: suminf.    3.82719 (30) obj. -12946.5 iterations 0
Cbc0038I Pass   8: suminf.    2.04704 (14) obj. -12946.5 iterations 18
Cbc0038I Pass   9: suminf.    2.04704 (14) obj. -12946.5 iterations 0
Cbc0038I Pass  10: suminf.    0.55502 (4) obj. -12946.5 iterations 13
Cbc0038I Pass  11: suminf.    0.32500 (1) obj. -13266.5 iterations 5
Cbc0038I Pass  12: suminf.    0.33282 (1) obj. -12946.5 iterations 4
Cbc0038I Pass  13: suminf.    1.77790 (10) obj. -12946.5 iterations 15
Cbc0038I Pass  14: suminf.    1.49553 (8) obj. -12946.5 iterations 13
Cbc0038I Pass  15: suminf.    3.99200 (20) obj. -12946.5 iterations 18
Cbc0038I Pass  16: suminf.    3.12933 (14) obj. -12946.5 iterations 5
Cbc0038I Pass  17: suminf.    3.12254 (14) obj. -12952.9 iterations 2
Cbc0038I Pass  18: suminf.    0.66564 (2) obj. -12946.5 iterations 27
Cbc0038I Pass  19: suminf.    0.66564 (2) obj. -12946.5 iterations 0
Cbc0038I Pass  20: suminf.    0.32500 (1) obj. -13266.5 iterations 5
Cbc0038I Pass  21: suminf.    0.33282 (1) obj. -12946.5 iterations 2
Cbc0038I Pass  22: suminf.    5.10427 (17) obj. -12946.5 iterations 26
Cbc0038I Pass  23: suminf.    3.04039 (12) obj. -12946.5 iterations 9
Cbc0038I Pass  24: suminf.    2.86500 (11) obj. -13156.5 iterations 3
Cbc0038I Pass  25: suminf.    0.45221 (1) obj. -12946.5 iterations 15
Cbc0038I Pass  26: suminf.    0.32500 (1) obj. -13065.5 iterations 2
Cbc0038I Pass  27: suminf.    3.06077 (10) obj. -12946.5 iterations 17
Cbc0038I Pass  28: suminf.    1.70701 (8) obj. -12946.5 iterations 2
Cbc0038I Pass  29: suminf.    1.64685 (7) obj. -13002.4 iterations 3
Cbc0038I Pass  30: suminf.    0.46010 (5) obj. -12946.5 iterations 9
Cbc0038I Pass  31: suminf.    0.46010 (5) obj. -12946.5 iterations 0
Cbc0038I Pass  32: suminf.    1.24443 (5) obj. -12946.5 iterations 9
Cbc0038I Pass  33: suminf.    1.95893 (7) obj. -12946.5 iterations 9
Cbc0038I Rounding solution of -12678.4 is better than previous of -12635.3

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 86 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -12678.4 to -12790.9 (0.04 seconds)
Cbc0038I Round again with cutoff of -13506.7
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    6.75844 (38) obj. -13506.7 iterations 0
Cbc0038I Pass  34: suminf.    6.75844 (38) obj. -13506.7 iterations 0
Cbc0038I Pass  35: suminf.    4.02216 (23) obj. -13506.7 iterations 25
Cbc0038I Pass  36: suminf.    4.02216 (23) obj. -13506.7 iterations 0
Cbc0038I Pass  37: suminf.    0.78546 (6) obj. -13506.7 iterations 41
Cbc0038I Pass  38: suminf.    0.78546 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  39: suminf.    1.47644 (6) obj. -13506.7 iterations 9
Cbc0038I Pass  40: suminf.    0.69614 (6) obj. -13506.7 iterations 10
Cbc0038I Pass  41: suminf.    0.69614 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  42: suminf.    1.53180 (6) obj. -13506.7 iterations 15
Cbc0038I Pass  43: suminf.    0.74146 (6) obj. -13506.7 iterations 10
Cbc0038I Pass  44: suminf.    0.74146 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  45: suminf.    3.25264 (15) obj. -13506.7 iterations 17
Cbc0038I Pass  46: suminf.    3.20880 (12) obj. -13506.7 iterations 6
Cbc0038I Pass  47: suminf.    0.78546 (6) obj. -13506.7 iterations 19
Cbc0038I Pass  48: suminf.    0.78546 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  49: suminf.    1.47644 (6) obj. -13506.7 iterations 9
Cbc0038I Pass  50: suminf.    0.69614 (6) obj. -13506.7 iterations 10
Cbc0038I Pass  51: suminf.    0.69614 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  52: suminf.    1.53180 (6) obj. -13506.7 iterations 15
Cbc0038I Pass  53: suminf.    0.74146 (6) obj. -13506.7 iterations 9
Cbc0038I Pass  54: suminf.    0.74146 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  55: suminf.    2.48890 (10) obj. -13506.7 iterations 18
Cbc0038I Pass  56: suminf.    2.05542 (8) obj. -13625.3 iterations 3
Cbc0038I Pass  57: suminf.    0.78546 (6) obj. -13506.7 iterations 14
Cbc0038I Pass  58: suminf.    0.78546 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  59: suminf.    1.47644 (6) obj. -13506.7 iterations 9
Cbc0038I Pass  60: suminf.    0.69614 (6) obj. -13506.7 iterations 10
Cbc0038I Pass  61: suminf.    0.69614 (6) obj. -13506.7 iterations 0
Cbc0038I Pass  62: suminf.    1.53180 (6) obj. -13506.7 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 86 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -12790.9 - took 0.04 seconds
Cbc0012I Integer solution of -12790.92 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 78 rows 86 columns, reduced to 4 rows 5 columns
Cbc0012I Integer solution of -12917.61 found by DiveCoefficient after 67 iterations and 0 nodes (0.11 seconds)
Cbc0031I 16 added rows had average density of 3.6875
Cbc0013I At root node, 16 cuts changed objective from -15747.207 to -12917.61 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 240 row cuts average 2.0 elements, 29 column cuts (29 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 27 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -12917.61, took 67 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.12

