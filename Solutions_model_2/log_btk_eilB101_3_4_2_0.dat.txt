Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 99 (-4) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 4.78617e-05 - average 2.65898e-07, 11 fixed columns
Coin0506I Presolve 160 (-20) rows, 88 (-11) columns and 488 (-62) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 0.21158561 - largest nonzero change 0 ( 0%) - largest zero change 2.7301027e-05
Clp0000I Optimal - objective value 34.530885
Clp0000I Optimal - objective value 34.530885
Coin0511I After Postsolve, objective 34.530885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.530885
Clp0000I Optimal - objective value 34.530885
Clp0000I Optimal - objective value 34.530885
Coin0511I After Postsolve, objective 34.530885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.53088493 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 99 columns (98 integer (98 of which binary)) and 553 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.944%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 8.09301
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.83963 iterations 72
Cbc0038I Solution found of 8.83963
Cbc0038I Relaxing continuous gives 8.83963
Cbc0038I Rounding solution of -5.67463 is better than previous of 8.83963

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 99 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -5.67463 to -9.9516 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.4096
Cbc0038I Pass   2: suminf.    2.69783 (12) obj. -12.4096 iterations 28
Cbc0038I Pass   3: suminf.    1.20512 (6) obj. -12.4096 iterations 22
Cbc0038I Pass   4: suminf.    0.71319 (4) obj. -12.4096 iterations 7
Cbc0038I Pass   5: suminf.    1.71767 (6) obj. -12.4096 iterations 7
Cbc0038I Pass   6: suminf.    1.53723 (7) obj. -12.4096 iterations 4
Cbc0038I Pass   7: suminf.    2.58591 (7) obj. -12.4096 iterations 6
Cbc0038I Pass   8: suminf.    1.01917 (6) obj. -12.4096 iterations 7
Cbc0038I Pass   9: suminf.    2.40032 (7) obj. -12.4096 iterations 7
Cbc0038I Pass  10: suminf.    1.43922 (7) obj. -12.4096 iterations 9
Cbc0038I Pass  11: suminf.    1.43922 (7) obj. -12.4096 iterations 0
Cbc0038I Pass  12: suminf.    3.83896 (14) obj. -12.4096 iterations 33
Cbc0038I Pass  13: suminf.    1.52090 (5) obj. -12.4096 iterations 18
Cbc0038I Pass  14: suminf.    0.85714 (3) obj. -12.4096 iterations 14
Cbc0038I Pass  15: suminf.    0.85714 (3) obj. -12.4096 iterations 0
Cbc0038I Pass  16: suminf.    1.35993 (5) obj. -12.4096 iterations 17
Cbc0038I Pass  17: suminf.    0.85736 (3) obj. -12.4096 iterations 8
Cbc0038I Pass  18: suminf.    3.60698 (14) obj. -12.4096 iterations 37
Cbc0038I Pass  19: suminf.    1.55497 (6) obj. -12.4096 iterations 25
Cbc0038I Pass  20: suminf.    2.48946 (6) obj. -12.4096 iterations 8
Cbc0038I Pass  21: suminf.    1.04369 (4) obj. -12.4096 iterations 7
Cbc0038I Pass  22: suminf.    1.04369 (4) obj. -12.4096 iterations 1
Cbc0038I Pass  23: suminf.    1.50929 (6) obj. -12.4096 iterations 8
Cbc0038I Pass  24: suminf.    2.95399 (9) obj. -12.4096 iterations 16
Cbc0038I Pass  25: suminf.    1.51890 (5) obj. -12.4096 iterations 18
Cbc0038I Pass  26: suminf.    1.24384 (5) obj. -12.4096 iterations 5
Cbc0038I Pass  27: suminf.    2.09778 (6) obj. -12.4096 iterations 8
Cbc0038I Pass  28: suminf.    1.55796 (5) obj. -12.4096 iterations 4
Cbc0038I Pass  29: suminf.    0.62566 (3) obj. -12.4096 iterations 5
Cbc0038I Pass  30: suminf.    0.62566 (3) obj. -12.4096 iterations 1
Cbc0038I Pass  31: suminf.    1.25979 (4) obj. -12.4096 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 99 columns, reduced to 102 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -9.9516 - took 0.09 seconds
Cbc0012I Integer solution of -9.951597 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 74 rows 43 columns
Cbc0031I 34 added rows had average density of 48.794118
Cbc0013I At root node, 34 cuts changed objective from -34.530885 to -29.550283 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19213 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2396 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 98.7 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.951597 best solution, best possible -29.550283 (1.42 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 71 rows 43 columns
Cbc0012I Integer solution of -11.0792 found by RINS after 11441 iterations and 41 nodes (1.75 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 32 rows 25 columns
Cbc0010I After 145 nodes, 10 on tree, -11.0792 best solution, best possible -29.549584 (2.12 seconds)
Cbc0004I Integer solution of -11.858664 found after 16047 iterations and 194 nodes (2.22 seconds)
Cbc0001I Search completed - best objective -11.858664, took 16818 iterations and 210 nodes (2.26 seconds)
Cbc0032I Strong branching done 2268 times (34235 iterations), fathomed 9 nodes and fixed 89 variables
Cbc0035I Maximum depth 41, 462 variables fixed on reduced cost
Total time (CPU seconds):       2.17   (Wallclock seconds):       2.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-67) rows, 153 (-49) columns and 3125 (-2528) elements
Clp1000I sum of infeasibilities 3.10994e-07 - average 2.27003e-09, 52 fixed columns
Coin0506I Presolve 89 (-48) rows, 100 (-53) columns and 1291 (-1834) elements
Clp0006I 0  Obj 86.88103 Dual inf 5.9224071 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 1.7154923 - largest nonzero change 1.0773021e-05 ( 0.00079945292%) - largest zero change 2.9369399e-05
Clp0000I Optimal - objective value 98.210124
Clp0000I Optimal - objective value 98.210124
Coin0511I After Postsolve, objective 98.210124, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 98.210124 Dual inf 10.574659 (2)
Clp0014I Perturbing problem by 0.001% of 1.7640771 - largest nonzero change 2.0993745e-05 ( 0.0015708815%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 98.210124
Clp0000I Optimal - objective value 98.210124
Clp0000I Optimal - objective value 98.210124
Coin0511I After Postsolve, objective 98.210124, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.21012368 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 153 columns (153 integer (153 of which binary)) and 3134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.291%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 5.52104
Cbc0038I Pass   1: suminf.    1.52562 (42) obj. -18.2539 iterations 27
Cbc0038I Pass   2: suminf.    1.52562 (42) obj. -18.2539 iterations 1
Cbc0038I Pass   3: suminf.    0.44497 (17) obj. 13.3171 iterations 25
Cbc0038I Solution found of 31.8222
Cbc0038I Rounding solution of 18.712 is better than previous of 31.8222

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 153 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 18.712 to -31.5663 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.6752
Cbc0038I Pass   4: suminf.    2.24495 (46) obj. -37.6752 iterations 2
Cbc0038I Pass   5: suminf.    2.24495 (46) obj. -37.6752 iterations 0
Cbc0038I Pass   6: suminf.    1.63949 (30) obj. -61.1969 iterations 16
Cbc0038I Pass   7: suminf.    0.43692 (12) obj. -37.6752 iterations 23
Cbc0038I Pass   8: suminf.    0.31698 (4) obj. -37.6752 iterations 15
Cbc0038I Pass   9: suminf.    0.81552 (4) obj. -37.6752 iterations 5
Cbc0038I Pass  10: suminf.    0.69898 (3) obj. -37.6752 iterations 4
Cbc0038I Pass  11: suminf.    0.58773 (3) obj. -37.6752 iterations 3
Cbc0038I Pass  12: suminf.    0.42857 (2) obj. -38.5637 iterations 4
Cbc0038I Pass  13: suminf.    0.90932 (3) obj. -37.6752 iterations 4
Cbc0038I Pass  14: suminf.    2.49712 (21) obj. -37.6752 iterations 39
Cbc0038I Pass  15: suminf.    1.46585 (19) obj. -37.6752 iterations 10
Cbc0038I Pass  16: suminf.    0.67372 (4) obj. -37.6752 iterations 28
Cbc0038I Pass  17: suminf.    0.67372 (4) obj. -37.6752 iterations 0
Cbc0038I Pass  18: suminf.    0.47670 (5) obj. -37.6752 iterations 8
Cbc0038I Pass  19: suminf.    0.43684 (4) obj. -37.6752 iterations 4
Cbc0038I Pass  20: suminf.    0.67372 (4) obj. -37.6752 iterations 4
Cbc0038I Pass  21: suminf.    1.88788 (18) obj. -38.1404 iterations 36
Cbc0038I Pass  22: suminf.    0.99711 (14) obj. -37.6752 iterations 24
Cbc0038I Pass  23: suminf.    0.91105 (7) obj. -37.6752 iterations 21
Cbc0038I Pass  24: suminf.    0.91105 (7) obj. -37.6752 iterations 0
Cbc0038I Pass  25: suminf.    1.28953 (5) obj. -37.6752 iterations 10
Cbc0038I Pass  26: suminf.    1.28953 (5) obj. -37.6752 iterations 2
Cbc0038I Pass  27: suminf.    1.88556 (6) obj. -37.6752 iterations 2
Cbc0038I Pass  28: suminf.    0.58099 (5) obj. -37.6752 iterations 2
Cbc0038I Pass  29: suminf.    1.28953 (5) obj. -37.6752 iterations 7
Cbc0038I Pass  30: suminf.    1.67574 (12) obj. -37.6752 iterations 24
Cbc0038I Pass  31: suminf.    1.55409 (11) obj. -37.9954 iterations 8
Cbc0038I Pass  32: suminf.    1.32586 (5) obj. -37.6752 iterations 17
Cbc0038I Pass  33: suminf.    0.80803 (6) obj. -37.6752 iterations 7
Cbc0038I Rounding solution of -34.9661 is better than previous of -31.5663

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 153 columns, reduced to 35 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -34.9661 to -36.4716 (0.07 seconds)
Cbc0038I Round again with cutoff of -48.6708
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.73338 (45) obj. -77.8612 iterations 1
Cbc0038I Pass  34: suminf.    2.73338 (45) obj. -77.8612 iterations 0
Cbc0038I Pass  35: suminf.    1.45504 (29) obj. -61.3239 iterations 16
Cbc0038I Pass  36: suminf.    1.79291 (11) obj. -48.6708 iterations 28
Cbc0038I Pass  37: suminf.    1.07671 (11) obj. -48.6708 iterations 6
Cbc0038I Pass  38: suminf.    1.07671 (11) obj. -48.6708 iterations 0
Cbc0038I Pass  39: suminf.    1.81343 (8) obj. -48.6708 iterations 16
Cbc0038I Pass  40: suminf.    1.81343 (8) obj. -48.6708 iterations 2
Cbc0038I Pass  41: suminf.    1.85282 (8) obj. -48.6708 iterations 5
Cbc0038I Pass  42: suminf.    1.85282 (8) obj. -48.6708 iterations 3
Cbc0038I Pass  43: suminf.    1.81343 (8) obj. -48.6708 iterations 5
Cbc0038I Pass  44: suminf.    1.34278 (14) obj. -48.6708 iterations 18
Cbc0038I Pass  45: suminf.    1.34278 (14) obj. -48.6708 iterations 5
Cbc0038I Pass  46: suminf.    0.71634 (9) obj. -48.6708 iterations 22
Cbc0038I Pass  47: suminf.    0.71634 (9) obj. -48.6708 iterations 7
Cbc0038I Pass  48: suminf.    0.69849 (9) obj. -48.6708 iterations 10
Cbc0038I Pass  49: suminf.    0.69849 (9) obj. -48.6708 iterations 7
Cbc0038I Pass  50: suminf.    0.71634 (9) obj. -48.6708 iterations 12
Cbc0038I Pass  51: suminf.    1.49941 (14) obj. -48.6708 iterations 33
Cbc0038I Pass  52: suminf.    1.40476 (13) obj. -48.6708 iterations 10
Cbc0038I Pass  53: suminf.    1.03737 (9) obj. -48.6708 iterations 20
Cbc0038I Pass  54: suminf.    0.61828 (8) obj. -49.0217 iterations 4
Cbc0038I Pass  55: suminf.    1.03737 (9) obj. -48.6708 iterations 9
Cbc0038I Pass  56: suminf.    1.61290 (14) obj. -48.6708 iterations 16
Cbc0038I Pass  57: suminf.    1.58246 (15) obj. -48.6708 iterations 13
Cbc0038I Pass  58: suminf.    1.79965 (8) obj. -48.6708 iterations 29
Cbc0038I Pass  59: suminf.    1.40742 (8) obj. -48.6708 iterations 5
Cbc0038I Pass  60: suminf.    1.13376 (8) obj. -48.6708 iterations 7
Cbc0038I Pass  61: suminf.    1.79965 (8) obj. -48.6708 iterations 12
Cbc0038I Pass  62: suminf.    1.36690 (8) obj. -48.6708 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 153 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -36.4716 - took 0.08 seconds
Cbc0012I Integer solution of -36.471629 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 136 rows 153 columns, reduced to 5 rows 7 columns
Cbc0031I 47 added rows had average density of 6.3617021
Cbc0013I At root node, 47 cuts changed objective from -92.653505 to -38.629286 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 375 row cuts average 2.6 elements, 29 column cuts (29 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 48 row cuts average 72.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 50 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 59.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.471629 best solution, best possible -38.629286 (0.26 seconds)
Cbc0012I Integer solution of -37.160767 found by DiveCoefficient after 265 iterations and 3 nodes (0.53 seconds)
Cbc0010I After 13 nodes, 2 on tree, -37.160767 best solution, best possible -38.629286 (0.96 seconds)
Cbc0001I Search completed - best objective -37.16076700000001, took 665 iterations and 22 nodes (1.22 seconds)
Cbc0032I Strong branching done 170 times (978 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 130 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       1.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 99 (-4) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 4.78617e-05 - average 2.65898e-07, 11 fixed columns
Coin0506I Presolve 160 (-20) rows, 88 (-11) columns and 488 (-62) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 0.21158561 - largest nonzero change 0 ( 0%) - largest zero change 2.7301027e-05
Clp0000I Optimal - objective value 34.530885
Clp0000I Optimal - objective value 34.530885
Coin0511I After Postsolve, objective 34.530885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.530885
Clp0000I Optimal - objective value 34.530885
Clp0000I Optimal - objective value 34.530885
Coin0511I After Postsolve, objective 34.530885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.53088493 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 99 columns (98 integer (98 of which binary)) and 553 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.944%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 8.09301
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.83963 iterations 72
Cbc0038I Solution found of 8.83963
Cbc0038I Relaxing continuous gives 8.83963
Cbc0038I Rounding solution of -5.67463 is better than previous of 8.83963

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 99 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -5.67463 to -9.9516 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.4096
Cbc0038I Pass   2: suminf.    2.69783 (12) obj. -12.4096 iterations 28
Cbc0038I Pass   3: suminf.    1.20512 (6) obj. -12.4096 iterations 22
Cbc0038I Pass   4: suminf.    0.71319 (4) obj. -12.4096 iterations 7
Cbc0038I Pass   5: suminf.    1.71767 (6) obj. -12.4096 iterations 7
Cbc0038I Pass   6: suminf.    1.53723 (7) obj. -12.4096 iterations 4
Cbc0038I Pass   7: suminf.    2.58591 (7) obj. -12.4096 iterations 6
Cbc0038I Pass   8: suminf.    1.01917 (6) obj. -12.4096 iterations 7
Cbc0038I Pass   9: suminf.    2.40032 (7) obj. -12.4096 iterations 7
Cbc0038I Pass  10: suminf.    1.43922 (7) obj. -12.4096 iterations 9
Cbc0038I Pass  11: suminf.    1.43922 (7) obj. -12.4096 iterations 0
Cbc0038I Pass  12: suminf.    3.83896 (14) obj. -12.4096 iterations 33
Cbc0038I Pass  13: suminf.    1.52090 (5) obj. -12.4096 iterations 18
Cbc0038I Pass  14: suminf.    0.85714 (3) obj. -12.4096 iterations 14
Cbc0038I Pass  15: suminf.    0.85714 (3) obj. -12.4096 iterations 0
Cbc0038I Pass  16: suminf.    1.35993 (5) obj. -12.4096 iterations 17
Cbc0038I Pass  17: suminf.    0.85736 (3) obj. -12.4096 iterations 8
Cbc0038I Pass  18: suminf.    3.60698 (14) obj. -12.4096 iterations 37
Cbc0038I Pass  19: suminf.    1.55497 (6) obj. -12.4096 iterations 25
Cbc0038I Pass  20: suminf.    2.48946 (6) obj. -12.4096 iterations 8
Cbc0038I Pass  21: suminf.    1.04369 (4) obj. -12.4096 iterations 7
Cbc0038I Pass  22: suminf.    1.04369 (4) obj. -12.4096 iterations 1
Cbc0038I Pass  23: suminf.    1.50929 (6) obj. -12.4096 iterations 8
Cbc0038I Pass  24: suminf.    2.95399 (9) obj. -12.4096 iterations 16
Cbc0038I Pass  25: suminf.    1.51890 (5) obj. -12.4096 iterations 18
Cbc0038I Pass  26: suminf.    1.24384 (5) obj. -12.4096 iterations 5
Cbc0038I Pass  27: suminf.    2.09778 (6) obj. -12.4096 iterations 8
Cbc0038I Pass  28: suminf.    1.55796 (5) obj. -12.4096 iterations 4
Cbc0038I Pass  29: suminf.    0.62566 (3) obj. -12.4096 iterations 5
Cbc0038I Pass  30: suminf.    0.62566 (3) obj. -12.4096 iterations 1
Cbc0038I Pass  31: suminf.    1.25979 (4) obj. -12.4096 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 99 columns, reduced to 102 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -9.9516 - took 0.10 seconds
Cbc0012I Integer solution of -9.951597 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 74 rows 43 columns
Cbc0031I 34 added rows had average density of 48.794118
Cbc0013I At root node, 34 cuts changed objective from -34.530885 to -29.550283 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19213 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2396 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 98.7 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.951597 best solution, best possible -29.550283 (1.43 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 71 rows 43 columns
Cbc0012I Integer solution of -11.0792 found by RINS after 11441 iterations and 41 nodes (1.78 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 32 rows 25 columns
Cbc0010I After 140 nodes, 11 on tree, -11.0792 best solution, best possible -29.549584 (2.14 seconds)
Cbc0004I Integer solution of -11.858664 found after 16047 iterations and 194 nodes (2.25 seconds)
Cbc0001I Search completed - best objective -11.858664, took 16818 iterations and 210 nodes (2.30 seconds)
Cbc0032I Strong branching done 2268 times (34235 iterations), fathomed 9 nodes and fixed 89 variables
Cbc0035I Maximum depth 41, 462 variables fixed on reduced cost
Total time (CPU seconds):       2.22   (Wallclock seconds):       2.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-69) rows, 152 (-51) columns and 3073 (-2581) elements
Clp1000I sum of infeasibilities 2.98742e-07 - average 2.19663e-09, 25 fixed columns
Coin0506I Presolve 113 (-23) rows, 127 (-25) columns and 2079 (-994) elements
Clp0006I 0  Obj 40.971344 Dual inf 8.5244952 (125)
Clp0029I End of values pass after 127 iterations
Clp0014I Perturbing problem by 0.001% of 1.8010729 - largest nonzero change 2.4555175e-05 ( 0.0016580886%) - largest zero change 2.9703792e-05
Clp0000I Optimal - objective value 49.049998
Clp0000I Optimal - objective value 49.049998
Coin0511I After Postsolve, objective 49.049998, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.049998
Clp0000I Optimal - objective value 49.049998
Clp0000I Optimal - objective value 49.049998
Clp0000I Optimal - objective value 49.049998
Coin0511I After Postsolve, objective 49.049998, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.04999835 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 152 columns (152 integer (152 of which binary)) and 3086 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.266%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 3.47808
Cbc0038I Pass   1: suminf.    1.92876 (39) obj. -31.7909 iterations 25
Cbc0038I Pass   2: suminf.    1.92876 (39) obj. -31.7909 iterations 1
Cbc0038I Pass   3: suminf.    1.26270 (29) obj. -20.5825 iterations 10
Cbc0038I Pass   4: suminf.    0.12458 (4) obj. 9.01123 iterations 25
Cbc0038I Solution found of 13.8559
Cbc0038I Rounding solution of 9.80097 is better than previous of 13.8559

Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 152 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 4.67753
Cbc0038I Pass   5: suminf.    1.92876 (39) obj. -31.7909 iterations 0
Cbc0038I Pass   6: suminf.    1.92876 (39) obj. -31.7909 iterations 1
Cbc0038I Pass   7: suminf.    0.94301 (23) obj. -14.9022 iterations 16
Cbc0038I Pass   8: suminf.    0.72996 (9) obj. 4.67753 iterations 28
Cbc0038I Pass   9: suminf.    0.64196 (5) obj. 4.67753 iterations 28
Cbc0038I Pass  10: suminf.    0.41432 (7) obj. 4.67753 iterations 12
Cbc0038I Pass  11: suminf.    0.64196 (5) obj. 4.67753 iterations 12
Cbc0038I Pass  12: suminf.    2.26289 (19) obj. 4.67753 iterations 53
Cbc0038I Pass  13: suminf.    1.52723 (18) obj. 4.67753 iterations 22
Cbc0038I Pass  14: suminf.    0.72590 (6) obj. 4.67753 iterations 38
Cbc0038I Pass  15: suminf.    0.47448 (6) obj. 4.67753 iterations 8
Cbc0038I Pass  16: suminf.    0.74672 (6) obj. 4.67753 iterations 13
Cbc0038I Pass  17: suminf.    1.77860 (11) obj. 0.392557 iterations 42
Cbc0038I Pass  18: suminf.    0.35632 (6) obj. 3.68946 iterations 21
Cbc0038I Pass  19: suminf.    0.92901 (8) obj. 4.67753 iterations 19
Cbc0038I Pass  20: suminf.    0.52449 (7) obj. 4.11929 iterations 2
Cbc0038I Pass  21: suminf.    0.63709 (7) obj. 4.67753 iterations 16
Cbc0038I Pass  22: suminf.    0.47448 (6) obj. 4.67753 iterations 7
Cbc0038I Pass  23: suminf.    0.74672 (6) obj. 4.67753 iterations 14
Cbc0038I Pass  24: suminf.    1.73316 (15) obj. 4.67753 iterations 37
Cbc0038I Pass  25: suminf.    1.24478 (15) obj. 4.67753 iterations 7
Cbc0038I Pass  26: suminf.    1.61010 (9) obj. 4.67753 iterations 18
Cbc0038I Pass  27: suminf.    1.61010 (9) obj. 4.67753 iterations 0
Cbc0038I Pass  28: suminf.    2.08208 (8) obj. 4.67753 iterations 15
Cbc0038I Pass  29: suminf.    1.47093 (10) obj. 4.67753 iterations 7
Cbc0038I Pass  30: suminf.    2.08208 (8) obj. 4.67753 iterations 11
Cbc0038I Pass  31: suminf.    1.41613 (9) obj. 4.67753 iterations 9
Cbc0038I Pass  32: suminf.    2.08208 (8) obj. 4.67753 iterations 11
Cbc0038I Pass  33: suminf.    3.28828 (18) obj. 4.67753 iterations 34
Cbc0038I Pass  34: suminf.    1.05941 (18) obj. 4.67753 iterations 8
Cbc0038I Rounding solution of 0.027563 is better than previous of 9.80097

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 152 columns, reduced to 49 rows 59 columns
Cbc0038I Mini branch and bound improved solution from 0.027563 to -7.29457 (0.09 seconds)
Cbc0038I Round again with cutoff of -14.1222
Cbc0038I Pass  34: suminf.    1.92876 (39) obj. -31.7909 iterations 0
Cbc0038I Pass  35: suminf.    1.92876 (39) obj. -31.7909 iterations 1
Cbc0038I Pass  36: suminf.    1.15150 (27) obj. -18.6937 iterations 12
Cbc0038I Pass  37: suminf.    1.72340 (20) obj. -14.1222 iterations 25
Cbc0038I Pass  38: suminf.    1.32201 (20) obj. -15.7278 iterations 3
Cbc0038I Pass  39: suminf.    1.67146 (19) obj. -14.1222 iterations 33
Cbc0038I Pass  40: suminf.    1.21578 (20) obj. -14.1222 iterations 9
Cbc0038I Pass  41: suminf.    1.72011 (18) obj. -14.1222 iterations 21
Cbc0038I Pass  42: suminf.    1.70944 (18) obj. -14.1222 iterations 8
Cbc0038I Pass  43: suminf.    1.62947 (18) obj. -14.1222 iterations 14
Cbc0038I Pass  44: suminf.    1.62947 (18) obj. -14.1222 iterations 5
Cbc0038I Pass  45: suminf.    1.72011 (18) obj. -14.1222 iterations 12
Cbc0038I Pass  46: suminf.    1.84946 (20) obj. -14.1222 iterations 14
Cbc0038I Pass  47: suminf.    1.30687 (20) obj. -14.1222 iterations 12
Cbc0038I Pass  48: suminf.    1.78837 (19) obj. -14.1222 iterations 21
Cbc0038I Pass  49: suminf.    1.30113 (20) obj. -14.1222 iterations 19
Cbc0038I Pass  50: suminf.    3.51816 (27) obj. -14.1222 iterations 18
Cbc0038I Pass  51: suminf.    1.84110 (24) obj. -14.1222 iterations 11
Cbc0038I Pass  52: suminf.    1.78837 (19) obj. -14.1222 iterations 44
Cbc0038I Pass  53: suminf.    1.27520 (21) obj. -14.1222 iterations 20
Cbc0038I Pass  54: suminf.    1.78837 (19) obj. -14.1222 iterations 21
Cbc0038I Pass  55: suminf.    1.30113 (20) obj. -14.1222 iterations 18
Cbc0038I Pass  56: suminf.    1.78837 (19) obj. -14.1222 iterations 19
Cbc0038I Pass  57: suminf.    3.37250 (28) obj. -14.1222 iterations 39
Cbc0038I Pass  58: suminf.    2.78156 (25) obj. -14.1222 iterations 12
Cbc0038I Pass  59: suminf.    1.55560 (20) obj. -14.1222 iterations 26
Cbc0038I Pass  60: suminf.    1.55560 (20) obj. -14.1222 iterations 0
Cbc0038I Pass  61: suminf.    1.76442 (19) obj. -14.1222 iterations 23
Cbc0038I Pass  62: suminf.    1.30113 (20) obj. -14.1222 iterations 13
Cbc0038I Pass  63: suminf.    1.78837 (19) obj. -14.1222 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 152 columns, reduced to 54 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -7.29457 - took 0.08 seconds
Cbc0012I Integer solution of -7.294567 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 135 rows 152 columns, reduced to 3 rows 5 columns
Cbc0031I 69 added rows had average density of 30.536232
Cbc0013I At root node, 69 cuts changed objective from -41.432519 to -18.107657 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15210 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1629 row cuts average 144.4 elements, 0 column cuts (0 active)  in 0.227 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 420 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 824 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 89.4 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 255 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.484 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.294567 best solution, best possible -18.107657 (2.76 seconds)
Cbc0010I After 5 nodes, 6 on tree, -7.294567 best solution, best possible -18.107657 (3.66 seconds)
Cbc0012I Integer solution of -8.740397 found by rounding after 7148 iterations and 12 nodes (4.24 seconds)
Cbc0010I After 15 nodes, 9 on tree, -8.740397 best solution, best possible -18.107657 (4.44 seconds)
Cbc0012I Integer solution of -9.004377 found by rounding after 7573 iterations and 20 nodes (4.68 seconds)
Cbc0004I Integer solution of -9.951597 found after 7648 iterations and 21 nodes (4.75 seconds)
Cbc0010I After 28 nodes, 9 on tree, -9.951597 best solution, best possible -18.107657 (5.18 seconds)
Cbc0038I Full problem 135 rows 152 columns, reduced to 73 rows 85 columns
Cbc0010I After 41 nodes, 9 on tree, -9.951597 best solution, best possible -18.107657 (6.20 seconds)
Cbc0010I After 50 nodes, 10 on tree, -9.951597 best solution, best possible -18.107657 (6.92 seconds)
Cbc0010I After 61 nodes, 9 on tree, -9.951597 best solution, best possible -18.107657 (7.72 seconds)
Cbc0010I After 73 nodes, 10 on tree, -9.951597 best solution, best possible -18.107657 (8.48 seconds)
Cbc0012I Integer solution of -10.961334 found by rounding after 11559 iterations and 90 nodes (9.21 seconds)
Cbc0010I After 90 nodes, 7 on tree, -10.961334 best solution, best possible -18.107657 (9.21 seconds)
Cbc0038I Full problem 135 rows 152 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -11.0792 found by DiveCoefficient after 11697 iterations and 95 nodes (9.60 seconds)
Cbc0004I Integer solution of -11.858664 found after 12123 iterations and 100 nodes (9.80 seconds)
Cbc0001I Search completed - best objective -11.858664, took 12123 iterations and 100 nodes (9.80 seconds)
Cbc0032I Strong branching done 1164 times (24658 iterations), fathomed 12 nodes and fixed 18 variables
Cbc0035I Maximum depth 25, 359 variables fixed on reduced cost
Total time (CPU seconds):       6.96   (Wallclock seconds):       9.83

