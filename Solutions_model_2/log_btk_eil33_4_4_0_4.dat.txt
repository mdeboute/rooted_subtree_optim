Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 35 (-34) rows, 21 (-14) columns and 106 (-89) elements
Clp0000I Optimal - objective value 109.16675
Coin0511I After Postsolve, objective 109.16675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.1667484 - 19 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.208%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.47581
Cbc0038I Pass   1: suminf.    0.34457 (2) obj. -12.0912 iterations 9
Cbc0038I Pass   2: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Solution found of 23.6
Cbc0038I Relaxing continuous gives 23.6
Cbc0038I Rounding solution of 18 is better than previous of 23.6

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 5.10342
Cbc0038I Pass   3: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Pass   4: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Pass   5: suminf.    0.19136 (4) obj. 5.10342 iterations 6
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -17.4 iterations 5
Cbc0038I Solution found of -17.4
Cbc0038I Relaxing continuous gives -17.4
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -35.9133
Cbc0038I Pass   7: suminf.    0.73967 (4) obj. -35.9133 iterations 2
Cbc0038I Pass   8: suminf.    0.60241 (5) obj. -35.9133 iterations 2
Cbc0038I Pass   9: suminf.    0.74583 (2) obj. -35.9133 iterations 7
Cbc0038I Pass  10: suminf.    0.34049 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  11: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  12: suminf.    0.83907 (4) obj. -35.9133 iterations 6
Cbc0038I Pass  13: suminf.    0.83907 (4) obj. -35.9133 iterations 1
Cbc0038I Pass  14: suminf.    0.83979 (8) obj. -35.9133 iterations 6
Cbc0038I Pass  15: suminf.    0.60241 (5) obj. -35.9133 iterations 6
Cbc0038I Pass  16: suminf.    0.74583 (2) obj. -35.9133 iterations 9
Cbc0038I Pass  17: suminf.    0.34049 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  18: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  19: suminf.    0.34049 (2) obj. -35.9133 iterations 4
Cbc0038I Pass  20: suminf.    1.14760 (6) obj. -35.9133 iterations 10
Cbc0038I Pass  21: suminf.    0.99944 (4) obj. -35.9133 iterations 2
Cbc0038I Pass  22: suminf.    0.74583 (2) obj. -35.9133 iterations 6
Cbc0038I Pass  23: suminf.    0.13295 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  24: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  25: suminf.    1.71127 (7) obj. -35.9133 iterations 10
Cbc0038I Pass  26: suminf.    0.07125 (1) obj. -35.9133 iterations 9
Cbc0038I Pass  27: suminf.    0.17694 (2) obj. -35.9133 iterations 2
Cbc0038I Pass  28: suminf.    0.91243 (2) obj. -35.9133 iterations 6
Cbc0038I Pass  29: suminf.    0.60372 (4) obj. -35.9133 iterations 8
Cbc0038I Pass  30: suminf.    0.49674 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  31: suminf.    0.31118 (2) obj. -35.9133 iterations 5
Cbc0038I Pass  32: suminf.    0.63950 (4) obj. -35.9133 iterations 4
Cbc0038I Pass  33: suminf.    0.85089 (3) obj. -35.9133 iterations 5
Cbc0038I Pass  34: suminf.    0.34049 (2) obj. -35.9133 iterations 2
Cbc0038I Pass  35: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  36: suminf.    1.10792 (5) obj. -35.9133 iterations 3
Cbc0038I Rounding solution of -43.2 is better than previous of -17.4

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -63.13
Cbc0038I Pass  36: suminf.    1.41441 (5) obj. -63.13 iterations 1
Cbc0038I Pass  37: suminf.    1.08409 (6) obj. -63.13 iterations 2
Cbc0038I Pass  38: suminf.    0.76036 (3) obj. -63.13 iterations 14
Cbc0038I Pass  39: suminf.    0.75452 (4) obj. -63.13 iterations 1
Cbc0038I Pass  40: suminf.    1.13729 (4) obj. -63.13 iterations 4
Cbc0038I Pass  41: suminf.    0.65830 (3) obj. -63.13 iterations 3
Cbc0038I Pass  42: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  43: suminf.    1.03885 (4) obj. -63.13 iterations 6
Cbc0038I Pass  44: suminf.    1.02961 (4) obj. -63.13 iterations 3
Cbc0038I Pass  45: suminf.    1.26861 (5) obj. -63.13 iterations 7
Cbc0038I Pass  46: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  47: suminf.    1.13729 (4) obj. -63.13 iterations 4
Cbc0038I Pass  48: suminf.    0.65830 (3) obj. -63.13 iterations 3
Cbc0038I Pass  49: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  50: suminf.    1.01886 (5) obj. -63.13 iterations 10
Cbc0038I Pass  51: suminf.    0.36053 (2) obj. -63.13 iterations 8
Cbc0038I Pass  52: suminf.    1.06193 (4) obj. -63.13 iterations 3
Cbc0038I Pass  53: suminf.    0.79522 (3) obj. -63.13 iterations 6
Cbc0038I Pass  54: suminf.    0.76508 (3) obj. -63.13 iterations 2
Cbc0038I Pass  55: suminf.    0.84731 (3) obj. -63.13 iterations 3
Cbc0038I Pass  56: suminf.    0.50519 (3) obj. -63.13 iterations 1
Cbc0038I Pass  57: suminf.    0.79522 (3) obj. -63.13 iterations 4
Cbc0038I Pass  58: suminf.    4.93543 (13) obj. -63.13 iterations 13
Cbc0038I Pass  59: suminf.    2.04770 (8) obj. -63.13 iterations 14
Cbc0038I Pass  60: suminf.    2.03590 (8) obj. -63.13 iterations 3
Cbc0038I Pass  61: suminf.    1.55933 (6) obj. -63.13 iterations 12
Cbc0038I Pass  62: suminf.    0.50519 (3) obj. -63.13 iterations 7
Cbc0038I Pass  63: suminf.    0.79522 (3) obj. -63.13 iterations 4
Cbc0038I Pass  64: suminf.    0.76508 (3) obj. -63.13 iterations 2
Cbc0038I Pass  65: suminf.    0.84731 (3) obj. -63.13 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -43.2 - took 0.04 seconds
Cbc0012I Integer solution of -43.2 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0031I 5 added rows had average density of 19
Cbc0013I At root node, 5 cuts changed objective from -109.16675 to -55.114649 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 267 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.821 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -43.2 best solution, best possible -55.114649 (1.56 seconds)
Cbc0001I Search completed - best objective -43.20000000000002, took 975 iterations and 4 nodes (1.57 seconds)
Cbc0032I Strong branching done 38 times (191 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.57

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-26) rows, 47 (-19) columns and 359 (-364) elements
Clp1000I sum of infeasibilities 0.000138748 - average 3.30352e-06, 38 fixed columns
Coin0506I Presolve 8 (-34) rows, 9 (-38) columns and 30 (-329) elements
Clp0006I 0  Obj 187.70464 Dual inf 0.89962695 (6)
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 188.91053
Clp0000I Optimal - objective value 188.91053
Coin0511I After Postsolve, objective 188.91053, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 188.91053 Dual inf 406.60461 (29)
Clp0014I Perturbing problem by 0.001% of 1.7701714 - largest nonzero change 1.702643e-05 ( 0.001702643%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 332.03138
Clp0000I Optimal - objective value 332.03138
Clp0000I Optimal - objective value 332.03138
Coin0511I After Postsolve, objective 332.03138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 332.0313815 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 47 columns (47 integer (47 of which binary)) and 370 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 9.04918
Cbc0038I Pass   1: suminf.    1.05978 (9) obj. -7.21116 iterations 22
Cbc0038I Pass   2: suminf.    1.05978 (9) obj. -7.21116 iterations 4
Cbc0038I Solution found of 109.2
Cbc0038I Rounding solution of 87.2 is better than previous of 109.2

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 47 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 87.2 to -160 (0.02 seconds)
Cbc0038I Round again with cutoff of -172.637
Cbc0038I Pass   3: suminf.    2.71900 (17) obj. -172.637 iterations 6
Cbc0038I Pass   4: suminf.    2.71900 (17) obj. -172.637 iterations 0
Cbc0038I Pass   5: suminf.    0.64008 (3) obj. -172.637 iterations 27
Cbc0038I Pass   6: suminf.    0.64008 (3) obj. -172.637 iterations 0
Cbc0038I Pass   7: suminf.    0.10800 (1) obj. -172.637 iterations 3
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -238 iterations 1
Cbc0038I Pass   9: suminf.    1.56022 (5) obj. -232.883 iterations 13
Cbc0038I Pass  10: suminf.    1.56022 (5) obj. -232.883 iterations 3
Cbc0038I Pass  11: suminf.    0.66958 (2) obj. -172.637 iterations 4
Cbc0038I Pass  12: suminf.    0.66958 (2) obj. -172.637 iterations 0
Cbc0038I Pass  13: suminf.    0.10800 (1) obj. -172.637 iterations 2
Cbc0038I Pass  14: suminf.    0.40988 (2) obj. -229.485 iterations 2
Cbc0038I Pass  15: suminf.    2.65554 (8) obj. -172.637 iterations 12
Cbc0038I Pass  16: suminf.    1.53949 (7) obj. -172.637 iterations 3
Cbc0038I Pass  17: suminf.    1.53949 (7) obj. -172.637 iterations 0
Cbc0038I Pass  18: suminf.    0.62306 (3) obj. -172.637 iterations 7
Cbc0038I Pass  19: suminf.    0.62306 (3) obj. -172.637 iterations 0
Cbc0038I Pass  20: suminf.    0.56647 (3) obj. -172.637 iterations 1
Cbc0038I Pass  21: suminf.    1.64374 (6) obj. -172.637 iterations 4
Cbc0038I Pass  22: suminf.    0.74048 (4) obj. -172.637 iterations 8
Cbc0038I Pass  23: suminf.    2.19005 (9) obj. -172.637 iterations 13
Cbc0038I Pass  24: suminf.    1.29752 (5) obj. -172.637 iterations 5
Cbc0038I Pass  25: suminf.    1.07441 (3) obj. -172.637 iterations 5
Cbc0038I Pass  26: suminf.    0.76742 (3) obj. -172.637 iterations 2
Cbc0038I Pass  27: suminf.    0.76742 (3) obj. -172.637 iterations 0
Cbc0038I Pass  28: suminf.    3.34328 (12) obj. -172.637 iterations 15
Cbc0038I Pass  29: suminf.    3.34328 (12) obj. -172.637 iterations 0
Cbc0038I Pass  30: suminf.    0.45474 (2) obj. -172.637 iterations 11
Cbc0038I Pass  31: suminf.    0.45474 (2) obj. -172.637 iterations 0
Cbc0038I Pass  32: suminf.    0.74706 (2) obj. -172.637 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 47 columns, reduced to 30 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -160 - took 0.01 seconds
Cbc0012I Integer solution of -160 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 42 rows 47 columns, reduced to 4 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 19
Cbc0013I At root node, 4 cuts changed objective from -284.56619 to -180.30999 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 81 row cuts average 2.0 elements, 28 column cuts (28 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -160, took 32 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 35 (-34) rows, 21 (-14) columns and 106 (-89) elements
Clp0000I Optimal - objective value 109.16675
Coin0511I After Postsolve, objective 109.16675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.1667484 - 19 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.208%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.47581
Cbc0038I Pass   1: suminf.    0.34457 (2) obj. -12.0912 iterations 9
Cbc0038I Pass   2: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Solution found of 23.6
Cbc0038I Relaxing continuous gives 23.6
Cbc0038I Rounding solution of 18 is better than previous of 23.6

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 5.10342
Cbc0038I Pass   3: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Pass   4: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Pass   5: suminf.    0.19136 (4) obj. 5.10342 iterations 6
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -17.4 iterations 5
Cbc0038I Solution found of -17.4
Cbc0038I Relaxing continuous gives -17.4
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -35.9133
Cbc0038I Pass   7: suminf.    0.73967 (4) obj. -35.9133 iterations 2
Cbc0038I Pass   8: suminf.    0.60241 (5) obj. -35.9133 iterations 2
Cbc0038I Pass   9: suminf.    0.74583 (2) obj. -35.9133 iterations 7
Cbc0038I Pass  10: suminf.    0.34049 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  11: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  12: suminf.    0.83907 (4) obj. -35.9133 iterations 6
Cbc0038I Pass  13: suminf.    0.83907 (4) obj. -35.9133 iterations 1
Cbc0038I Pass  14: suminf.    0.83979 (8) obj. -35.9133 iterations 6
Cbc0038I Pass  15: suminf.    0.60241 (5) obj. -35.9133 iterations 6
Cbc0038I Pass  16: suminf.    0.74583 (2) obj. -35.9133 iterations 9
Cbc0038I Pass  17: suminf.    0.34049 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  18: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  19: suminf.    0.34049 (2) obj. -35.9133 iterations 4
Cbc0038I Pass  20: suminf.    1.14760 (6) obj. -35.9133 iterations 10
Cbc0038I Pass  21: suminf.    0.99944 (4) obj. -35.9133 iterations 2
Cbc0038I Pass  22: suminf.    0.74583 (2) obj. -35.9133 iterations 6
Cbc0038I Pass  23: suminf.    0.13295 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  24: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  25: suminf.    1.71127 (7) obj. -35.9133 iterations 10
Cbc0038I Pass  26: suminf.    0.07125 (1) obj. -35.9133 iterations 9
Cbc0038I Pass  27: suminf.    0.17694 (2) obj. -35.9133 iterations 2
Cbc0038I Pass  28: suminf.    0.91243 (2) obj. -35.9133 iterations 6
Cbc0038I Pass  29: suminf.    0.60372 (4) obj. -35.9133 iterations 8
Cbc0038I Pass  30: suminf.    0.49674 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  31: suminf.    0.31118 (2) obj. -35.9133 iterations 5
Cbc0038I Pass  32: suminf.    0.63950 (4) obj. -35.9133 iterations 4
Cbc0038I Pass  33: suminf.    0.85089 (3) obj. -35.9133 iterations 5
Cbc0038I Pass  34: suminf.    0.34049 (2) obj. -35.9133 iterations 2
Cbc0038I Pass  35: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  36: suminf.    1.10792 (5) obj. -35.9133 iterations 3
Cbc0038I Rounding solution of -43.2 is better than previous of -17.4

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -63.13
Cbc0038I Pass  36: suminf.    1.41441 (5) obj. -63.13 iterations 1
Cbc0038I Pass  37: suminf.    1.08409 (6) obj. -63.13 iterations 2
Cbc0038I Pass  38: suminf.    0.76036 (3) obj. -63.13 iterations 14
Cbc0038I Pass  39: suminf.    0.75452 (4) obj. -63.13 iterations 1
Cbc0038I Pass  40: suminf.    1.13729 (4) obj. -63.13 iterations 4
Cbc0038I Pass  41: suminf.    0.65830 (3) obj. -63.13 iterations 3
Cbc0038I Pass  42: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  43: suminf.    1.03885 (4) obj. -63.13 iterations 6
Cbc0038I Pass  44: suminf.    1.02961 (4) obj. -63.13 iterations 3
Cbc0038I Pass  45: suminf.    1.26861 (5) obj. -63.13 iterations 7
Cbc0038I Pass  46: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  47: suminf.    1.13729 (4) obj. -63.13 iterations 4
Cbc0038I Pass  48: suminf.    0.65830 (3) obj. -63.13 iterations 3
Cbc0038I Pass  49: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  50: suminf.    1.01886 (5) obj. -63.13 iterations 10
Cbc0038I Pass  51: suminf.    0.36053 (2) obj. -63.13 iterations 8
Cbc0038I Pass  52: suminf.    1.06193 (4) obj. -63.13 iterations 3
Cbc0038I Pass  53: suminf.    0.79522 (3) obj. -63.13 iterations 6
Cbc0038I Pass  54: suminf.    0.76508 (3) obj. -63.13 iterations 2
Cbc0038I Pass  55: suminf.    0.84731 (3) obj. -63.13 iterations 3
Cbc0038I Pass  56: suminf.    0.50519 (3) obj. -63.13 iterations 1
Cbc0038I Pass  57: suminf.    0.79522 (3) obj. -63.13 iterations 4
Cbc0038I Pass  58: suminf.    4.93543 (13) obj. -63.13 iterations 13
Cbc0038I Pass  59: suminf.    2.04770 (8) obj. -63.13 iterations 14
Cbc0038I Pass  60: suminf.    2.03590 (8) obj. -63.13 iterations 3
Cbc0038I Pass  61: suminf.    1.55933 (6) obj. -63.13 iterations 12
Cbc0038I Pass  62: suminf.    0.50519 (3) obj. -63.13 iterations 7
Cbc0038I Pass  63: suminf.    0.79522 (3) obj. -63.13 iterations 4
Cbc0038I Pass  64: suminf.    0.76508 (3) obj. -63.13 iterations 2
Cbc0038I Pass  65: suminf.    0.84731 (3) obj. -63.13 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -43.2 - took 0.03 seconds
Cbc0012I Integer solution of -43.2 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0031I 5 added rows had average density of 19
Cbc0013I At root node, 5 cuts changed objective from -109.16675 to -55.114649 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 267 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.761 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -43.2 best solution, best possible -55.114649 (1.50 seconds)
Cbc0001I Search completed - best objective -43.20000000000002, took 975 iterations and 4 nodes (1.50 seconds)
Cbc0032I Strong branching done 38 times (191 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-28) rows, 46 (-21) columns and 331 (-393) elements
Clp1000I sum of infeasibilities 1.63282e-06 - average 3.98248e-08, 11 fixed columns
Coin0506I Presolve 28 (-13) rows, 28 (-18) columns and 156 (-175) elements
Clp0006I 0  Obj 195.27459 Dual inf 4.8928878 (24)
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 210.39595
Clp0000I Optimal - objective value 210.39595
Coin0511I After Postsolve, objective 210.39595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 210.39595 Dual inf 46.28393 (2)
Clp0014I Perturbing problem by 0.001% of 1.8022998 - largest nonzero change 2.329182e-05 ( 0.002329182%) - largest zero change 2.2907883e-05
Clp0000I Optimal - objective value 213.0301
Clp0000I Optimal - objective value 213.0301
Clp0000I Optimal - objective value 213.0301
Coin0511I After Postsolve, objective 213.0301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 213.0300953 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 46 columns (46 integer (46 of which binary)) and 338 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.083%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 9.71234
Cbc0038I Pass   1: suminf.    1.52881 (8) obj. -70.0374 iterations 28
Cbc0038I Pass   2: suminf.    1.52881 (8) obj. -70.0374 iterations 1
Cbc0038I Solution found of 37.2
Cbc0038I Rounding solution of 33.2 is better than previous of 37.2

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 33.2 to -17.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.6625
Cbc0038I Pass   3: suminf.    1.52881 (8) obj. -70.0374 iterations 0
Cbc0038I Pass   4: suminf.    1.52881 (8) obj. -70.0374 iterations 1
Cbc0038I Pass   5: suminf.    0.41143 (1) obj. -31.6625 iterations 8
Cbc0038I Pass   6: suminf.    0.30000 (1) obj. -44.7 iterations 1
Cbc0038I Pass   7: suminf.    0.72604 (8) obj. -36.4617 iterations 7
Cbc0038I Pass   8: suminf.    0.72504 (5) obj. -36.4439 iterations 3
Cbc0038I Pass   9: suminf.    0.41371 (2) obj. -31.6625 iterations 8
Cbc0038I Pass  10: suminf.    0.35093 (2) obj. -33.818 iterations 2
Cbc0038I Pass  11: suminf.    1.55413 (17) obj. -31.6625 iterations 17
Cbc0038I Pass  12: suminf.    0.83745 (15) obj. -31.6625 iterations 2
Cbc0038I Pass  13: suminf.    0.76683 (4) obj. -31.6625 iterations 17
Cbc0038I Pass  14: suminf.    0.25000 (1) obj. -76.15 iterations 6
Cbc0038I Pass  15: suminf.    0.36977 (1) obj. -31.6625 iterations 1
Cbc0038I Pass  16: suminf.    0.99944 (4) obj. -31.6625 iterations 6
Cbc0038I Pass  17: suminf.    0.77624 (3) obj. -31.6625 iterations 2
Cbc0038I Pass  18: suminf.    0.39312 (2) obj. -86.5579 iterations 4
Cbc0038I Pass  19: suminf.    0.60499 (2) obj. -31.6625 iterations 1
Cbc0038I Pass  20: suminf.    0.60499 (2) obj. -31.6625 iterations 0
Cbc0038I Pass  21: suminf.    0.14925 (1) obj. -31.6625 iterations 3
Cbc0038I Pass  22: suminf.    2.43241 (7) obj. -31.6625 iterations 15
Cbc0038I Pass  23: suminf.    2.00770 (7) obj. -31.6625 iterations 8
Cbc0038I Pass  24: suminf.    0.83719 (3) obj. -31.6625 iterations 7
Cbc0038I Pass  25: suminf.    0.83719 (3) obj. -31.6625 iterations 0
Cbc0038I Pass  26: suminf.    0.12190 (1) obj. -31.6625 iterations 3
Cbc0038I Pass  27: suminf.    0.30000 (1) obj. -99.3 iterations 1
Cbc0038I Pass  28: suminf.    2.93679 (13) obj. -31.6625 iterations 17
Cbc0038I Pass  29: suminf.    2.91767 (12) obj. -31.6625 iterations 4
Cbc0038I Pass  30: suminf.    0.76855 (3) obj. -31.6625 iterations 11
Cbc0038I Pass  31: suminf.    0.76206 (4) obj. -31.6625 iterations 1
Cbc0038I Pass  32: suminf.    0.74872 (3) obj. -31.6625 iterations 1
Cbc0038I Rounding solution of -43.2 is better than previous of -17.4

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -66.3652
Cbc0038I Pass  32: suminf.    1.52881 (8) obj. -70.0374 iterations 0
Cbc0038I Pass  33: suminf.    1.52881 (8) obj. -70.0374 iterations 1
Cbc0038I Pass  34: suminf.    1.80205 (18) obj. -66.3652 iterations 21
Cbc0038I Pass  35: suminf.    1.80205 (18) obj. -66.3652 iterations 0
Cbc0038I Pass  36: suminf.    0.61795 (2) obj. -66.3652 iterations 19
Cbc0038I Pass  37: suminf.    0.25000 (1) obj. -76.15 iterations 2
Cbc0038I Pass  38: suminf.    0.33363 (1) obj. -66.3652 iterations 1
Cbc0038I Pass  39: suminf.    3.00020 (11) obj. -66.3652 iterations 15
Cbc0038I Pass  40: suminf.    3.00020 (11) obj. -66.3652 iterations 0
Cbc0038I Pass  41: suminf.    0.87998 (3) obj. -66.3652 iterations 8
Cbc0038I Pass  42: suminf.    0.56100 (2) obj. -71.8279 iterations 2
Cbc0038I Pass  43: suminf.    0.61431 (2) obj. -66.3652 iterations 1
Cbc0038I Pass  44: suminf.    2.20742 (8) obj. -66.3652 iterations 7
Cbc0038I Pass  45: suminf.    2.03544 (7) obj. -76.7016 iterations 3
Cbc0038I Pass  46: suminf.    3.18415 (13) obj. -66.3652 iterations 7
Cbc0038I Pass  47: suminf.    3.18415 (13) obj. -66.3652 iterations 0
Cbc0038I Pass  48: suminf.    0.48288 (2) obj. -66.3652 iterations 15
Cbc0038I Pass  49: suminf.    0.30000 (1) obj. -99.3 iterations 3
Cbc0038I Pass  50: suminf.    0.41851 (1) obj. -66.3652 iterations 1
Cbc0038I Pass  51: suminf.    0.94191 (4) obj. -66.3652 iterations 7
Cbc0038I Pass  52: suminf.    0.76786 (3) obj. -93.2321 iterations 2
Cbc0038I Pass  53: suminf.    0.46696 (1) obj. -66.3652 iterations 3
Cbc0038I Pass  54: suminf.    0.25000 (1) obj. -91.75 iterations 1
Cbc0038I Pass  55: suminf.    2.32877 (8) obj. -66.3652 iterations 8
Cbc0038I Pass  56: suminf.    2.01390 (7) obj. -66.3652 iterations 2
Cbc0038I Pass  57: suminf.    0.49772 (2) obj. -66.3652 iterations 5
Cbc0038I Pass  58: suminf.    1.51023 (5) obj. -101.365 iterations 9
Cbc0038I Pass  59: suminf.    1.51023 (5) obj. -101.365 iterations 2
Cbc0038I Pass  60: suminf.    0.46696 (1) obj. -66.3652 iterations 5
Cbc0038I Pass  61: suminf.    0.25000 (1) obj. -91.75 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -43.2 - took 0.02 seconds
Cbc0012I Integer solution of -43.2 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 41 rows 46 columns, reduced to 4 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 4.875
Cbc0013I At root node, 8 cuts changed objective from -158.2262 to -53.043864 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 2.0 elements, 22 column cuts (22 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 21 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -43.20000000000002, took 44 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

