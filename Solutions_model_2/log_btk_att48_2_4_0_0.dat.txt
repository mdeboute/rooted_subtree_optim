Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 44 (-6) columns and 243 (-42) elements
Clp1000I sum of infeasibilities 1.1536e-06 - average 1.4242e-08, 2 fixed columns
Coin0506I Presolve 77 (-4) rows, 42 (-2) columns and 231 (-12) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 2188.2613
Clp0000I Optimal - objective value 2188.2613
Coin0511I After Postsolve, objective 2188.2613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2188.2613
Clp0000I Optimal - objective value 2188.2613
Clp0000I Optimal - objective value 2188.2613
Coin0511I After Postsolve, objective 2188.2613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2188.26126 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 44 columns (43 integer (43 of which binary)) and 243 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.017%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 12.575
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 556.217 iterations 41
Cbc0038I Solution found of 556.217
Cbc0038I Relaxing continuous gives 556.217
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 44 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 556.217 to -714.075 (0.04 seconds)
Cbc0038I Round again with cutoff of -861.494
Cbc0038I Pass   2: suminf.    3.52068 (13) obj. -861.494 iterations 11
Cbc0038I Pass   3: suminf.    0.61468 (3) obj. -861.494 iterations 19
Cbc0038I Pass   4: suminf.    0.61468 (3) obj. -861.494 iterations 1
Cbc0038I Pass   5: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass   6: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass   7: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass   8: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass   9: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  10: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  11: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass  12: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass  13: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass  14: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  15: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  16: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass  17: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass  18: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass  19: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  20: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  21: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass  22: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass  23: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass  24: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  25: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  26: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass  27: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass  28: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass  29: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  30: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  31: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 44 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -714.075 - took 0.08 seconds
Cbc0012I Integer solution of -714.075 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 21 added rows had average density of 35.857143
Cbc0013I At root node, 21 cuts changed objective from -2188.2613 to -1487.2498 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6428 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1069 row cuts average 42.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 40.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -714.0750000000003, took 5674 iterations and 18 nodes (0.60 seconds)
Cbc0032I Strong branching done 354 times (7290 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 8, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-13) rows, 90 (-6) columns and 1222 (-191) elements
Clp1000I sum of infeasibilities 3.00861e-09 - average 3.53954e-11, 46 fixed columns
Coin0506I Presolve 15 (-70) rows, 19 (-71) columns and 68 (-1154) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 4.7347198 - largest nonzero change 0 ( 0%) - largest zero change 1.1925507e-05
Clp0000I Optimal - objective value 2552.9286
Clp0000I Optimal - objective value 2552.9286
Coin0511I After Postsolve, objective 2552.9286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5986735 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2924.7957
Clp0000I Optimal - objective value 2924.7957
Clp0000I Optimal - objective value 2924.7957
Coin0511I After Postsolve, objective 2924.7957, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2924.79566 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 90 columns (90 integer (90 of which binary)) and 1224 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.023%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.7337
Cbc0038I Pass   1: suminf.    1.28873 (25) obj. -788.243 iterations 27
Cbc0038I Pass   2: suminf.    1.28873 (25) obj. -788.243 iterations 2
Cbc0038I Pass   3: suminf.    0.32808 (10) obj. 349.492 iterations 15
Cbc0038I Solution found of 637.069
Cbc0038I Rounding solution of -390.609 is better than previous of 637.069

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 90 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -615.869
Cbc0038I Pass   4: suminf.    1.28873 (25) obj. -788.243 iterations 0
Cbc0038I Pass   5: suminf.    1.28873 (25) obj. -788.243 iterations 1
Cbc0038I Pass   6: suminf.    1.73697 (22) obj. -615.869 iterations 19
Cbc0038I Pass   7: suminf.    1.73697 (22) obj. -615.869 iterations 0
Cbc0038I Pass   8: suminf.    1.20369 (12) obj. -615.869 iterations 21
Cbc0038I Pass   9: suminf.    1.20369 (12) obj. -615.869 iterations 0
Cbc0038I Pass  10: suminf.    0.93062 (4) obj. -615.869 iterations 15
Cbc0038I Pass  11: suminf.    0.59500 (3) obj. -615.869 iterations 2
Cbc0038I Pass  12: suminf.    0.47442 (3) obj. -648.064 iterations 3
Cbc0038I Pass  13: suminf.    0.59500 (3) obj. -615.869 iterations 6
Cbc0038I Pass  14: suminf.    3.15808 (14) obj. -615.869 iterations 29
Cbc0038I Pass  15: suminf.    1.71543 (9) obj. -615.869 iterations 1
Cbc0038I Pass  16: suminf.    1.71543 (9) obj. -615.869 iterations 2
Cbc0038I Pass  17: suminf.    0.40550 (2) obj. -615.869 iterations 11
Cbc0038I Pass  18: suminf.    0.40550 (2) obj. -615.869 iterations 0
Cbc0038I Pass  19: suminf.    0.62956 (2) obj. -615.869 iterations 1
Cbc0038I Pass  20: suminf.    4.41595 (15) obj. -615.869 iterations 25
Cbc0038I Pass  21: suminf.    3.60519 (15) obj. -615.869 iterations 7
Cbc0038I Pass  22: suminf.    1.47804 (4) obj. -615.869 iterations 22
Cbc0038I Pass  23: suminf.    1.28951 (4) obj. -662.057 iterations 2
Cbc0038I Pass  24: suminf.    3.25459 (11) obj. -663.484 iterations 32
Cbc0038I Pass  25: suminf.    3.25459 (11) obj. -663.484 iterations 4
Cbc0038I Pass  26: suminf.    2.20162 (8) obj. -615.869 iterations 10
Cbc0038I Pass  27: suminf.    1.82851 (11) obj. -615.869 iterations 3
Cbc0038I Pass  28: suminf.    0.83534 (3) obj. -615.869 iterations 17
Cbc0038I Pass  29: suminf.    0.83534 (3) obj. -615.869 iterations 2
Cbc0038I Pass  30: suminf.    0.67986 (2) obj. -615.869 iterations 3
Cbc0038I Pass  31: suminf.    0.65766 (2) obj. -629.903 iterations 7
Cbc0038I Pass  32: suminf.    0.83534 (3) obj. -615.869 iterations 4
Cbc0038I Pass  33: suminf.    3.68480 (12) obj. -615.869 iterations 27
Cbc0038I Rounding solution of -438.278 is better than previous of -390.609

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 90 columns, reduced to 56 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -438.278 to -543.382 (0.06 seconds)
Cbc0038I Round again with cutoff of -1021.34
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.73517 (33) obj. -1021.34 iterations 10
Cbc0038I Pass  34: suminf.    2.73517 (33) obj. -1021.34 iterations 1
Cbc0038I Pass  35: suminf.    1.95147 (20) obj. -1021.34 iterations 15
Cbc0038I Pass  36: suminf.    1.91358 (20) obj. -1031.45 iterations 2
Cbc0038I Pass  37: suminf.    0.66425 (5) obj. -1021.34 iterations 32
Cbc0038I Pass  38: suminf.    0.65962 (5) obj. -1021.34 iterations 2
Cbc0038I Pass  39: suminf.    0.90705 (4) obj. -1021.34 iterations 3
Cbc0038I Pass  40: suminf.    0.90705 (4) obj. -1021.34 iterations 1
Cbc0038I Pass  41: suminf.    0.58365 (4) obj. -1021.34 iterations 3
Cbc0038I Pass  42: suminf.    0.58365 (4) obj. -1021.34 iterations 0
Cbc0038I Pass  43: suminf.    0.90705 (4) obj. -1021.34 iterations 3
Cbc0038I Pass  44: suminf.    1.55569 (9) obj. -1331.76 iterations 15
Cbc0038I Pass  45: suminf.    1.55569 (9) obj. -1331.76 iterations 1
Cbc0038I Pass  46: suminf.    0.99581 (4) obj. -1021.34 iterations 8
Cbc0038I Pass  47: suminf.    0.72766 (4) obj. -1087.03 iterations 3
Cbc0038I Pass  48: suminf.    1.80534 (8) obj. -1021.34 iterations 15
Cbc0038I Pass  49: suminf.    1.70959 (7) obj. -1021.34 iterations 8
Cbc0038I Pass  50: suminf.    1.12628 (4) obj. -1021.34 iterations 10
Cbc0038I Pass  51: suminf.    0.72766 (4) obj. -1119 iterations 12
Cbc0038I Pass  52: suminf.    1.12628 (4) obj. -1021.34 iterations 2
Cbc0038I Pass  53: suminf.    3.43105 (17) obj. -1021.34 iterations 17
Cbc0038I Pass  54: suminf.    3.25023 (17) obj. -1021.34 iterations 4
Cbc0038I Pass  55: suminf.    1.36781 (6) obj. -1021.34 iterations 22
Cbc0038I Pass  56: suminf.    1.36781 (6) obj. -1021.34 iterations 3
Cbc0038I Pass  57: suminf.    1.49566 (6) obj. -1021.34 iterations 3
Cbc0038I Pass  58: suminf.    1.12105 (6) obj. -1081.65 iterations 9
Cbc0038I Pass  59: suminf.    1.36781 (6) obj. -1021.34 iterations 5
Cbc0038I Pass  60: suminf.    2.73491 (14) obj. -1021.34 iterations 15
Cbc0038I Pass  61: suminf.    1.37524 (8) obj. -1090.51 iterations 7
Cbc0038I Pass  62: suminf.    1.37524 (8) obj. -1090.51 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 90 columns, reduced to 23 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -543.382 - took 0.06 seconds
Cbc0012I Integer solution of -543.382 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 90 columns, reduced to 45 rows 53 columns
Cbc0012I Integer solution of -553.075 found by DiveCoefficient after 1555 iterations and 0 nodes (1.59 seconds)
Cbc0031I 48 added rows had average density of 13.145833
Cbc0013I At root node, 48 cuts changed objective from -2643.2037 to -715.11924 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4794 row cuts average 6.0 elements, 14 column cuts (14 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 565 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 401 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 130 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -553.075 best solution, best possible -715.11924 (1.61 seconds)
Cbc0012I Integer solution of -714.075 found by rounding after 1566 iterations and 1 nodes (1.62 seconds)
Cbc0001I Search completed - best objective -714.0750000000003, took 1654 iterations and 2 nodes (1.69 seconds)
Cbc0032I Strong branching done 94 times (1811 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 44 (-6) columns and 243 (-42) elements
Clp1000I sum of infeasibilities 1.1536e-06 - average 1.4242e-08, 2 fixed columns
Coin0506I Presolve 77 (-4) rows, 42 (-2) columns and 231 (-12) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 2188.2613
Clp0000I Optimal - objective value 2188.2613
Coin0511I After Postsolve, objective 2188.2613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2188.2613
Clp0000I Optimal - objective value 2188.2613
Clp0000I Optimal - objective value 2188.2613
Coin0511I After Postsolve, objective 2188.2613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2188.26126 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 44 columns (43 integer (43 of which binary)) and 243 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.017%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 12.575
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 556.217 iterations 41
Cbc0038I Solution found of 556.217
Cbc0038I Relaxing continuous gives 556.217
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 44 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 556.217 to -714.075 (0.05 seconds)
Cbc0038I Round again with cutoff of -861.494
Cbc0038I Pass   2: suminf.    3.52068 (13) obj. -861.494 iterations 11
Cbc0038I Pass   3: suminf.    0.61468 (3) obj. -861.494 iterations 19
Cbc0038I Pass   4: suminf.    0.61468 (3) obj. -861.494 iterations 1
Cbc0038I Pass   5: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass   6: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass   7: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass   8: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass   9: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  10: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  11: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass  12: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass  13: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass  14: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  15: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  16: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass  17: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass  18: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass  19: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  20: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  21: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass  22: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass  23: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass  24: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  25: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  26: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I Pass  27: suminf.    1.36943 (5) obj. -861.494 iterations 6
Cbc0038I Pass  28: suminf.    0.74608 (3) obj. -861.494 iterations 3
Cbc0038I Pass  29: suminf.    0.72062 (3) obj. -861.494 iterations 2
Cbc0038I Pass  30: suminf.    1.15362 (5) obj. -861.494 iterations 3
Cbc0038I Pass  31: suminf.    1.14889 (4) obj. -861.494 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 44 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -714.075 - took 0.09 seconds
Cbc0012I Integer solution of -714.075 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 21 added rows had average density of 35.857143
Cbc0013I At root node, 21 cuts changed objective from -2188.2613 to -1487.2498 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6428 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1069 row cuts average 42.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 40.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -714.0750000000003, took 5674 iterations and 18 nodes (0.67 seconds)
Cbc0032I Strong branching done 354 times (7290 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 8, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 90 (-7) columns and 1222 (-192) elements
Clp1000I sum of infeasibilities 3.00861e-09 - average 3.53954e-11, 46 fixed columns
Coin0506I Presolve 15 (-70) rows, 19 (-71) columns and 68 (-1154) elements
Clp0006I 0  Obj 2329.4349 Dual inf 29.52273 (19)
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 4.7347198 - largest nonzero change 0 ( 0%) - largest zero change 1.1925507e-05
Clp0000I Optimal - objective value 2552.9286
Clp0000I Optimal - objective value 2552.9286
Coin0511I After Postsolve, objective 2552.9286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2552.9286 Dual inf 2018.4967 (14)
Clp0014I Perturbing problem by 0.001% of 3.5986735 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2924.7957
Clp0000I Optimal - objective value 2924.7957
Clp0000I Optimal - objective value 2924.7957
Coin0511I After Postsolve, objective 2924.7957, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2924.79566 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 90 columns (90 integer (90 of which binary)) and 1224 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.023%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.7337
Cbc0038I Pass   1: suminf.    1.28873 (25) obj. -788.243 iterations 27
Cbc0038I Pass   2: suminf.    1.28873 (25) obj. -788.243 iterations 2
Cbc0038I Pass   3: suminf.    0.32808 (10) obj. 349.492 iterations 15
Cbc0038I Solution found of 637.069
Cbc0038I Rounding solution of -390.609 is better than previous of 637.069

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 90 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -615.869
Cbc0038I Pass   4: suminf.    1.28873 (25) obj. -788.243 iterations 0
Cbc0038I Pass   5: suminf.    1.28873 (25) obj. -788.243 iterations 1
Cbc0038I Pass   6: suminf.    1.73697 (22) obj. -615.869 iterations 19
Cbc0038I Pass   7: suminf.    1.73697 (22) obj. -615.869 iterations 0
Cbc0038I Pass   8: suminf.    1.20369 (12) obj. -615.869 iterations 21
Cbc0038I Pass   9: suminf.    1.20369 (12) obj. -615.869 iterations 0
Cbc0038I Pass  10: suminf.    0.93062 (4) obj. -615.869 iterations 15
Cbc0038I Pass  11: suminf.    0.59500 (3) obj. -615.869 iterations 2
Cbc0038I Pass  12: suminf.    0.47442 (3) obj. -648.064 iterations 3
Cbc0038I Pass  13: suminf.    0.59500 (3) obj. -615.869 iterations 6
Cbc0038I Pass  14: suminf.    3.15808 (14) obj. -615.869 iterations 29
Cbc0038I Pass  15: suminf.    1.71543 (9) obj. -615.869 iterations 1
Cbc0038I Pass  16: suminf.    1.71543 (9) obj. -615.869 iterations 2
Cbc0038I Pass  17: suminf.    0.40550 (2) obj. -615.869 iterations 11
Cbc0038I Pass  18: suminf.    0.40550 (2) obj. -615.869 iterations 0
Cbc0038I Pass  19: suminf.    0.62956 (2) obj. -615.869 iterations 1
Cbc0038I Pass  20: suminf.    4.41595 (15) obj. -615.869 iterations 25
Cbc0038I Pass  21: suminf.    3.60519 (15) obj. -615.869 iterations 7
Cbc0038I Pass  22: suminf.    1.47804 (4) obj. -615.869 iterations 22
Cbc0038I Pass  23: suminf.    1.28951 (4) obj. -662.057 iterations 2
Cbc0038I Pass  24: suminf.    3.25459 (11) obj. -663.484 iterations 32
Cbc0038I Pass  25: suminf.    3.25459 (11) obj. -663.484 iterations 4
Cbc0038I Pass  26: suminf.    2.20162 (8) obj. -615.869 iterations 10
Cbc0038I Pass  27: suminf.    1.82851 (11) obj. -615.869 iterations 3
Cbc0038I Pass  28: suminf.    0.83534 (3) obj. -615.869 iterations 17
Cbc0038I Pass  29: suminf.    0.83534 (3) obj. -615.869 iterations 2
Cbc0038I Pass  30: suminf.    0.67986 (2) obj. -615.869 iterations 3
Cbc0038I Pass  31: suminf.    0.65766 (2) obj. -629.903 iterations 7
Cbc0038I Pass  32: suminf.    0.83534 (3) obj. -615.869 iterations 4
Cbc0038I Pass  33: suminf.    3.68480 (12) obj. -615.869 iterations 27
Cbc0038I Rounding solution of -438.278 is better than previous of -390.609

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 90 columns, reduced to 56 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -438.278 to -543.382 (0.07 seconds)
Cbc0038I Round again with cutoff of -1021.34
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.73517 (33) obj. -1021.34 iterations 10
Cbc0038I Pass  34: suminf.    2.73517 (33) obj. -1021.34 iterations 1
Cbc0038I Pass  35: suminf.    1.95147 (20) obj. -1021.34 iterations 15
Cbc0038I Pass  36: suminf.    1.91358 (20) obj. -1031.45 iterations 2
Cbc0038I Pass  37: suminf.    0.66425 (5) obj. -1021.34 iterations 32
Cbc0038I Pass  38: suminf.    0.65962 (5) obj. -1021.34 iterations 2
Cbc0038I Pass  39: suminf.    0.90705 (4) obj. -1021.34 iterations 3
Cbc0038I Pass  40: suminf.    0.90705 (4) obj. -1021.34 iterations 1
Cbc0038I Pass  41: suminf.    0.58365 (4) obj. -1021.34 iterations 3
Cbc0038I Pass  42: suminf.    0.58365 (4) obj. -1021.34 iterations 0
Cbc0038I Pass  43: suminf.    0.90705 (4) obj. -1021.34 iterations 3
Cbc0038I Pass  44: suminf.    1.55569 (9) obj. -1331.76 iterations 15
Cbc0038I Pass  45: suminf.    1.55569 (9) obj. -1331.76 iterations 1
Cbc0038I Pass  46: suminf.    0.99581 (4) obj. -1021.34 iterations 8
Cbc0038I Pass  47: suminf.    0.72766 (4) obj. -1087.03 iterations 3
Cbc0038I Pass  48: suminf.    1.80534 (8) obj. -1021.34 iterations 15
Cbc0038I Pass  49: suminf.    1.70959 (7) obj. -1021.34 iterations 8
Cbc0038I Pass  50: suminf.    1.12628 (4) obj. -1021.34 iterations 10
Cbc0038I Pass  51: suminf.    0.72766 (4) obj. -1119 iterations 12
Cbc0038I Pass  52: suminf.    1.12628 (4) obj. -1021.34 iterations 2
Cbc0038I Pass  53: suminf.    3.43105 (17) obj. -1021.34 iterations 17
Cbc0038I Pass  54: suminf.    3.25023 (17) obj. -1021.34 iterations 4
Cbc0038I Pass  55: suminf.    1.36781 (6) obj. -1021.34 iterations 22
Cbc0038I Pass  56: suminf.    1.36781 (6) obj. -1021.34 iterations 3
Cbc0038I Pass  57: suminf.    1.49566 (6) obj. -1021.34 iterations 3
Cbc0038I Pass  58: suminf.    1.12105 (6) obj. -1081.65 iterations 9
Cbc0038I Pass  59: suminf.    1.36781 (6) obj. -1021.34 iterations 5
Cbc0038I Pass  60: suminf.    2.73491 (14) obj. -1021.34 iterations 15
Cbc0038I Pass  61: suminf.    1.37524 (8) obj. -1090.51 iterations 7
Cbc0038I Pass  62: suminf.    1.37524 (8) obj. -1090.51 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 90 columns, reduced to 23 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -543.382 - took 0.07 seconds
Cbc0012I Integer solution of -543.382 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 90 columns, reduced to 45 rows 53 columns
Cbc0012I Integer solution of -553.075 found by DiveCoefficient after 1555 iterations and 0 nodes (1.72 seconds)
Cbc0031I 48 added rows had average density of 13.145833
Cbc0013I At root node, 48 cuts changed objective from -2643.2037 to -715.11924 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4794 row cuts average 6.0 elements, 14 column cuts (14 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 565 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 401 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 130 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.720 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -553.075 best solution, best possible -715.11924 (1.74 seconds)
Cbc0012I Integer solution of -714.075 found by rounding after 1566 iterations and 1 nodes (1.75 seconds)
Cbc0001I Search completed - best objective -714.0750000000003, took 1654 iterations and 2 nodes (1.83 seconds)
Cbc0032I Strong branching done 94 times (1811 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       1.86

