Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 65 (-13) columns and 353 (-100) elements
Clp1000I sum of infeasibilities 2.18445e-06 - average 1.89952e-08, 59 fixed columns
Coin0506I Presolve 4 (-111) rows, 5 (-60) columns and 12 (-341) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 17255.052
Clp0000I Optimal - objective value 17255.052
Coin0511I After Postsolve, objective 17255.052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.035933 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 17255.052
Clp0000I Optimal - objective value 17255.052
Clp0000I Optimal - objective value 17255.052
Coin0511I After Postsolve, objective 17255.052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17255.05198 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 65 columns (64 integer (64 of which binary)) and 356 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.08816
Cbc0038I Pass   1: suminf.    0.61768 (2) obj. -16526.6 iterations 11
Cbc0038I Pass   2: suminf.    0.21622 (1) obj. -16003.8 iterations 2
Cbc0038I Solution found of -11925.8
Cbc0038I Relaxing continuous gives -11925.8
Cbc0038I Rounding solution of -12810.2 is better than previous of -11925.8

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -12810.2 to -15070 (0.01 seconds)
Cbc0038I Round again with cutoff of -15288.5
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.61768 (2) obj. -16526.6 iterations 0
Cbc0038I Pass   4: suminf.    0.21622 (1) obj. -16003.8 iterations 2
Cbc0038I Pass   5: suminf.    0.35370 (1) obj. -15288.5 iterations 1
Cbc0038I Pass   6: suminf.    1.59741 (6) obj. -15288.5 iterations 15
Cbc0038I Pass   7: suminf.    0.58639 (4) obj. -15288.5 iterations 9
Cbc0038I Pass   8: suminf.    0.58639 (4) obj. -15288.5 iterations 0
Cbc0038I Pass   9: suminf.    1.57142 (5) obj. -15288.5 iterations 6
Cbc0038I Pass  10: suminf.    0.78239 (3) obj. -15288.5 iterations 11
Cbc0038I Pass  11: suminf.    0.58639 (4) obj. -15288.5 iterations 3
Cbc0038I Pass  12: suminf.    1.76679 (5) obj. -15288.5 iterations 8
Cbc0038I Pass  13: suminf.    0.40466 (3) obj. -15288.5 iterations 6
Cbc0038I Pass  14: suminf.    0.40466 (3) obj. -15288.5 iterations 0
Cbc0038I Pass  15: suminf.    0.79525 (4) obj. -15288.5 iterations 6
Cbc0038I Pass  16: suminf.    0.71120 (5) obj. -15288.5 iterations 4
Cbc0038I Pass  17: suminf.    0.38987 (2) obj. -15288.5 iterations 5
Cbc0038I Pass  18: suminf.    0.10811 (1) obj. -16082.4 iterations 4
Cbc0038I Pass  19: suminf.    0.32471 (1) obj. -15288.5 iterations 2
Cbc0038I Pass  20: suminf.    1.16616 (5) obj. -15288.5 iterations 16
Cbc0038I Pass  21: suminf.    0.78604 (4) obj. -15288.5 iterations 9
Cbc0038I Pass  22: suminf.    1.19770 (4) obj. -15288.5 iterations 6
Cbc0038I Pass  23: suminf.    1.19770 (4) obj. -15288.5 iterations 0
Cbc0038I Pass  24: suminf.    0.63977 (3) obj. -15288.5 iterations 6
Cbc0038I Pass  25: suminf.    0.41805 (2) obj. -15288.5 iterations 2
Cbc0038I Pass  26: suminf.    0.11442 (1) obj. -15288.5 iterations 3
Cbc0038I Pass  27: suminf.    0.63815 (2) obj. -15669.5 iterations 3
Cbc0038I Pass  28: suminf.    0.11442 (1) obj. -15288.5 iterations 4
Cbc0038I Pass  29: suminf.    1.34449 (4) obj. -15288.5 iterations 12
Cbc0038I Pass  30: suminf.    1.29070 (5) obj. -15288.5 iterations 8
Cbc0038I Pass  31: suminf.    0.73933 (3) obj. -15288.5 iterations 7
Cbc0038I Pass  32: suminf.    0.73757 (4) obj. -15288.5 iterations 2
Cbc0038I Rounding solution of -15680.5 is better than previous of -15070

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -15680.5 to -16246.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -16448.5
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.61768 (2) obj. -16526.6 iterations 0
Cbc0038I Pass  33: suminf.    0.45320 (4) obj. -16448.5 iterations 4
Cbc0038I Pass  34: suminf.    1.33728 (4) obj. -16448.5 iterations 6
Cbc0038I Pass  35: suminf.    1.70389 (5) obj. -16448.5 iterations 7
Cbc0038I Pass  36: suminf.    0.60045 (4) obj. -16448.5 iterations 6
Cbc0038I Pass  37: suminf.    0.56754 (4) obj. -16448.5 iterations 2
Cbc0038I Pass  38: suminf.    0.41020 (4) obj. -16448.5 iterations 11
Cbc0038I Pass  39: suminf.    0.41020 (4) obj. -16448.5 iterations 4
Cbc0038I Pass  40: suminf.    1.20911 (4) obj. -16448.5 iterations 7
Cbc0038I Pass  41: suminf.    1.20911 (4) obj. -16448.5 iterations 3
Cbc0038I Pass  42: suminf.    0.61976 (5) obj. -16448.5 iterations 8
Cbc0038I Pass  43: suminf.    0.34355 (4) obj. -16448.5 iterations 6
Cbc0038I Pass  44: suminf.    1.33728 (4) obj. -16448.5 iterations 8
Cbc0038I Pass  45: suminf.    0.61768 (2) obj. -16526.6 iterations 6
Cbc0038I Pass  46: suminf.    0.45320 (4) obj. -16448.5 iterations 5
Cbc0038I Pass  47: suminf.    1.30736 (4) obj. -16448.5 iterations 3
Cbc0038I Pass  48: suminf.    1.30736 (4) obj. -16448.5 iterations 0
Cbc0038I Pass  49: suminf.    0.88946 (4) obj. -16448.5 iterations 10
Cbc0038I Pass  50: suminf.    0.88946 (4) obj. -16448.5 iterations 4
Cbc0038I Pass  51: suminf.    1.33728 (4) obj. -16448.5 iterations 7
Cbc0038I Pass  52: suminf.    0.61768 (2) obj. -16526.6 iterations 6
Cbc0038I Pass  53: suminf.    0.45320 (4) obj. -16448.5 iterations 5
Cbc0038I Pass  54: suminf.    0.45320 (4) obj. -16448.5 iterations 1
Cbc0038I Pass  55: suminf.    0.45320 (4) obj. -16448.5 iterations 1
Cbc0038I Pass  56: suminf.    1.37184 (5) obj. -16448.5 iterations 5
Cbc0038I Pass  57: suminf.    0.56754 (4) obj. -16448.5 iterations 6
Cbc0038I Pass  58: suminf.    0.41020 (4) obj. -16448.5 iterations 11
Cbc0038I Pass  59: suminf.    0.41020 (4) obj. -16448.5 iterations 4
Cbc0038I Pass  60: suminf.    1.20911 (4) obj. -16448.5 iterations 7
Cbc0038I Pass  61: suminf.    0.61976 (5) obj. -16448.5 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -16246.8 to -16322.6 (0.03 seconds)
Cbc0038I Round again with cutoff of -16690.4
Cbc0038I Reduced cost fixing fixed 39 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.70414 (4) obj. -16690.4 iterations 1
Cbc0038I Pass  62: suminf.    0.62474 (4) obj. -16690.4 iterations 1
Cbc0038I Pass  63: suminf.    1.25024 (4) obj. -16690.4 iterations 6
Cbc0038I Pass  64: suminf.    0.56028 (3) obj. -16690.4 iterations 11
Cbc0038I Pass  65: suminf.    0.47794 (2) obj. -16690.4 iterations 5
Cbc0038I Pass  66: suminf.    0.48649 (1) obj. -16855.8 iterations 8
Cbc0038I Pass  67: suminf.    0.44145 (1) obj. -16690.4 iterations 2
Cbc0038I Pass  68: suminf.    0.49501 (3) obj. -16690.4 iterations 13
Cbc0038I Pass  69: suminf.    0.39625 (3) obj. -16690.4 iterations 7
Cbc0038I Pass  70: suminf.    0.50870 (2) obj. -16690.4 iterations 9
Cbc0038I Pass  71: suminf.    0.48206 (4) obj. -16690.4 iterations 4
Cbc0038I Pass  72: suminf.    0.71234 (4) obj. -16690.4 iterations 5
Cbc0038I Pass  73: suminf.    0.48649 (1) obj. -16855.8 iterations 8
Cbc0038I Pass  74: suminf.    0.44145 (1) obj. -16690.4 iterations 2
Cbc0038I Pass  75: suminf.    0.04035 (2) obj. -16957.6 iterations 9
Cbc0038I Pass  76: suminf.    0.04035 (2) obj. -16957.6 iterations 3
Cbc0038I Pass  77: suminf.    0.20239 (2) obj. -16690.4 iterations 4
Cbc0038I Pass  78: suminf.    0.04035 (2) obj. -16957.6 iterations 10
Cbc0038I Pass  79: suminf.    0.04035 (2) obj. -16957.6 iterations 3
Cbc0038I Pass  80: suminf.    0.70414 (4) obj. -16690.4 iterations 8
Cbc0038I Pass  81: suminf.    0.62474 (4) obj. -16690.4 iterations 7
Cbc0038I Pass  82: suminf.    1.25024 (4) obj. -16690.4 iterations 6
Cbc0038I Pass  83: suminf.    0.70414 (4) obj. -16690.4 iterations 5
Cbc0038I Pass  84: suminf.    0.39394 (1) obj. -16723.2 iterations 7
Cbc0038I Pass  85: suminf.    0.39394 (1) obj. -16723.2 iterations 2
Cbc0038I Pass  86: suminf.    0.54845 (2) obj. -16690.4 iterations 3
Cbc0038I Pass  87: suminf.    1.40101 (5) obj. -16690.4 iterations 9
Cbc0038I Pass  88: suminf.    1.38874 (4) obj. -16690.4 iterations 5
Cbc0038I Pass  89: suminf.    0.70673 (4) obj. -16690.4 iterations 10
Cbc0038I Pass  90: suminf.    1.59128 (4) obj. -16690.4 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -16322.6 - took 0.03 seconds
Cbc0012I Integer solution of -16322.578 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 115 rows 65 columns, reduced to 3 rows 4 columns
Cbc0031I 7 added rows had average density of 19
Cbc0013I At root node, 7 cuts changed objective from -17255.052 to -16609.095 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -16322.578, took 108 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 16 times (72 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-61) rows, 106 (-46) columns and 1730 (-1573) elements
Clp1000I sum of infeasibilities 0 - average 0, 63 fixed columns
Coin0506I Presolve 35 (-58) rows, 36 (-70) columns and 157 (-1573) elements
Clp0029I End of values pass after 36 iterations
Clp0000I Optimal - objective value 17305.015
Clp0000I Optimal - objective value 17305.015
Coin0511I After Postsolve, objective 17305.015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1616965 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 17305.015
Clp0000I Optimal - objective value 17305.015
Clp0000I Optimal - objective value 17305.015
Coin0511I After Postsolve, objective 17305.015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17305.01477 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 108 columns (108 integer (108 of which binary)) and 1743 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 5.02876
Cbc0038I Pass   1: suminf.    0.59126 (17) obj. -12753.8 iterations 28
Cbc0038I Pass   2: suminf.    0.59126 (17) obj. -12753.8 iterations 2
Cbc0038I Solution found of -12731.7
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 108 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -12731.7 to -15070 (0.03 seconds)
Cbc0038I Round again with cutoff of -15292.3
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.02890 (25) obj. -15292.3 iterations 8
Cbc0038I Pass   4: suminf.    2.02890 (25) obj. -15292.3 iterations 0
Cbc0038I Pass   5: suminf.    1.01358 (5) obj. -15292.3 iterations 30
Cbc0038I Pass   6: suminf.    0.65164 (4) obj. -16725.9 iterations 7
Cbc0038I Pass   7: suminf.    0.13849 (1) obj. -15292.3 iterations 5
Cbc0038I Pass   8: suminf.    0.39394 (1) obj. -16723.2 iterations 3
Cbc0038I Pass   9: suminf.    2.84394 (14) obj. -15292.3 iterations 19
Cbc0038I Pass  10: suminf.    2.18378 (13) obj. -15292.3 iterations 4
Cbc0038I Pass  11: suminf.    1.63770 (8) obj. -15292.3 iterations 3
Cbc0038I Pass  12: suminf.    0.89254 (3) obj. -15292.3 iterations 10
Cbc0038I Pass  13: suminf.    0.89254 (3) obj. -15292.3 iterations 2
Cbc0038I Pass  14: suminf.    0.02703 (1) obj. -15974.5 iterations 7
Cbc0038I Pass  15: suminf.    0.15813 (1) obj. -15292.3 iterations 1
Cbc0038I Pass  16: suminf.    2.36891 (20) obj. -15292.3 iterations 28
Cbc0038I Pass  17: suminf.    0.95662 (12) obj. -15292.3 iterations 9
Cbc0038I Pass  18: suminf.    0.56923 (2) obj. -15793.8 iterations 14
Cbc0038I Pass  19: suminf.    0.16082 (4) obj. -15292.3 iterations 6
Cbc0038I Pass  20: suminf.    0.56923 (2) obj. -15791.8 iterations 7
Cbc0038I Pass  21: suminf.    0.15149 (2) obj. -15292.3 iterations 4
Cbc0038I Pass  22: suminf.    0.94766 (9) obj. -15292.3 iterations 18
Cbc0038I Pass  23: suminf.    0.94766 (9) obj. -15292.3 iterations 2
Cbc0038I Pass  24: suminf.    0.82133 (2) obj. -15369.5 iterations 18
Cbc0038I Pass  25: suminf.    0.85537 (2) obj. -15292.3 iterations 2
Cbc0038I Pass  26: suminf.    2.02039 (11) obj. -15292.3 iterations 12
Cbc0038I Pass  27: suminf.    1.87785 (10) obj. -15292.3 iterations 3
Cbc0038I Solution found of -16312.6
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 108 columns, reduced to 41 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -16312.6 to -16322.6 (0.06 seconds)
Cbc0038I Round again with cutoff of -16516.7
Cbc0038I Reduced cost fixing fixed 39 variables on major pass 3
Cbc0038I Pass  28: suminf.    2.47836 (25) obj. -16516.7 iterations 3
Cbc0038I Pass  29: suminf.    2.47836 (25) obj. -16516.7 iterations 0
Cbc0038I Pass  30: suminf.    0.83978 (6) obj. -16516.7 iterations 36
Cbc0038I Pass  31: suminf.    1.11034 (4) obj. -16516.7 iterations 13
Cbc0038I Pass  32: suminf.    1.08823 (4) obj. -16516.7 iterations 1
Cbc0038I Pass  33: suminf.    0.54064 (3) obj. -16516.7 iterations 7
Cbc0038I Pass  34: suminf.    0.39394 (1) obj. -16723.2 iterations 7
Cbc0038I Pass  35: suminf.    0.46143 (1) obj. -16516.7 iterations 2
Cbc0038I Pass  36: suminf.    0.67313 (4) obj. -16516.7 iterations 8
Cbc0038I Pass  37: suminf.    0.54010 (2) obj. -16516.7 iterations 5
Cbc0038I Pass  38: suminf.    0.47394 (2) obj. -16719.1 iterations 3
Cbc0038I Pass  39: suminf.    0.45980 (1) obj. -16516.7 iterations 3
Cbc0038I Pass  40: suminf.    0.39394 (1) obj. -16718.2 iterations 3
Cbc0038I Pass  41: suminf.    1.79644 (18) obj. -16516.7 iterations 21
Cbc0038I Pass  42: suminf.    1.75660 (11) obj. -16516.7 iterations 11
Cbc0038I Pass  43: suminf.    1.78137 (9) obj. -16516.7 iterations 19
Cbc0038I Pass  44: suminf.    0.54538 (7) obj. -16516.7 iterations 6
Cbc0038I Pass  45: suminf.    0.45784 (1) obj. -16516.7 iterations 4
Cbc0038I Pass  46: suminf.    0.39394 (1) obj. -16712.2 iterations 3
Cbc0038I Pass  47: suminf.    0.95565 (7) obj. -16720.4 iterations 11
Cbc0038I Pass  48: suminf.    0.95565 (7) obj. -16720.4 iterations 2
Cbc0038I Pass  49: suminf.    0.45816 (1) obj. -16516.7 iterations 8
Cbc0038I Pass  50: suminf.    0.39394 (1) obj. -16713.2 iterations 3
Cbc0038I Pass  51: suminf.    0.81464 (6) obj. -16516.7 iterations 15
Cbc0038I Pass  52: suminf.    0.79136 (5) obj. -16718.7 iterations 8
Cbc0038I Pass  53: suminf.    0.45849 (1) obj. -16516.7 iterations 6
Cbc0038I Pass  54: suminf.    0.39394 (1) obj. -16714.2 iterations 3
Cbc0038I Pass  55: suminf.    0.39394 (1) obj. -16713.2 iterations 9
Cbc0038I Pass  56: suminf.    0.39394 (1) obj. -16713.2 iterations 3
Cbc0038I Pass  57: suminf.    0.45816 (1) obj. -16516.7 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 108 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -16322.6 - took 0.05 seconds
Cbc0012I Integer solution of -16322.578 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 95 rows 108 columns, reduced to 3 rows 4 columns
Cbc0031I 18 added rows had average density of 8.9444444
Cbc0013I At root node, 18 cuts changed objective from -17292.97 to -16580.552 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 193 row cuts average 4.6 elements, 24 column cuts (24 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16322.578, took 228 iterations and 2 nodes (0.30 seconds)
Cbc0032I Strong branching done 38 times (266 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.31

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 65 (-13) columns and 353 (-100) elements
Clp1000I sum of infeasibilities 2.18445e-06 - average 1.89952e-08, 59 fixed columns
Coin0506I Presolve 4 (-111) rows, 5 (-60) columns and 12 (-341) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 17255.052
Clp0000I Optimal - objective value 17255.052
Coin0511I After Postsolve, objective 17255.052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.035933 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 17255.052
Clp0000I Optimal - objective value 17255.052
Clp0000I Optimal - objective value 17255.052
Coin0511I After Postsolve, objective 17255.052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17255.05198 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 65 columns (64 integer (64 of which binary)) and 356 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.08816
Cbc0038I Pass   1: suminf.    0.61768 (2) obj. -16526.6 iterations 11
Cbc0038I Pass   2: suminf.    0.21622 (1) obj. -16003.8 iterations 2
Cbc0038I Solution found of -11925.8
Cbc0038I Relaxing continuous gives -11925.8
Cbc0038I Rounding solution of -12810.2 is better than previous of -11925.8

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -12810.2 to -15070 (0.01 seconds)
Cbc0038I Round again with cutoff of -15288.5
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.61768 (2) obj. -16526.6 iterations 0
Cbc0038I Pass   4: suminf.    0.21622 (1) obj. -16003.8 iterations 2
Cbc0038I Pass   5: suminf.    0.35370 (1) obj. -15288.5 iterations 1
Cbc0038I Pass   6: suminf.    1.59741 (6) obj. -15288.5 iterations 15
Cbc0038I Pass   7: suminf.    0.58639 (4) obj. -15288.5 iterations 9
Cbc0038I Pass   8: suminf.    0.58639 (4) obj. -15288.5 iterations 0
Cbc0038I Pass   9: suminf.    1.57142 (5) obj. -15288.5 iterations 6
Cbc0038I Pass  10: suminf.    0.78239 (3) obj. -15288.5 iterations 11
Cbc0038I Pass  11: suminf.    0.58639 (4) obj. -15288.5 iterations 3
Cbc0038I Pass  12: suminf.    1.76679 (5) obj. -15288.5 iterations 8
Cbc0038I Pass  13: suminf.    0.40466 (3) obj. -15288.5 iterations 6
Cbc0038I Pass  14: suminf.    0.40466 (3) obj. -15288.5 iterations 0
Cbc0038I Pass  15: suminf.    0.79525 (4) obj. -15288.5 iterations 6
Cbc0038I Pass  16: suminf.    0.71120 (5) obj. -15288.5 iterations 4
Cbc0038I Pass  17: suminf.    0.38987 (2) obj. -15288.5 iterations 5
Cbc0038I Pass  18: suminf.    0.10811 (1) obj. -16082.4 iterations 4
Cbc0038I Pass  19: suminf.    0.32471 (1) obj. -15288.5 iterations 2
Cbc0038I Pass  20: suminf.    1.16616 (5) obj. -15288.5 iterations 16
Cbc0038I Pass  21: suminf.    0.78604 (4) obj. -15288.5 iterations 9
Cbc0038I Pass  22: suminf.    1.19770 (4) obj. -15288.5 iterations 6
Cbc0038I Pass  23: suminf.    1.19770 (4) obj. -15288.5 iterations 0
Cbc0038I Pass  24: suminf.    0.63977 (3) obj. -15288.5 iterations 6
Cbc0038I Pass  25: suminf.    0.41805 (2) obj. -15288.5 iterations 2
Cbc0038I Pass  26: suminf.    0.11442 (1) obj. -15288.5 iterations 3
Cbc0038I Pass  27: suminf.    0.63815 (2) obj. -15669.5 iterations 3
Cbc0038I Pass  28: suminf.    0.11442 (1) obj. -15288.5 iterations 4
Cbc0038I Pass  29: suminf.    1.34449 (4) obj. -15288.5 iterations 12
Cbc0038I Pass  30: suminf.    1.29070 (5) obj. -15288.5 iterations 8
Cbc0038I Pass  31: suminf.    0.73933 (3) obj. -15288.5 iterations 7
Cbc0038I Pass  32: suminf.    0.73757 (4) obj. -15288.5 iterations 2
Cbc0038I Rounding solution of -15680.5 is better than previous of -15070

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -15680.5 to -16246.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -16448.5
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.61768 (2) obj. -16526.6 iterations 0
Cbc0038I Pass  33: suminf.    0.45320 (4) obj. -16448.5 iterations 4
Cbc0038I Pass  34: suminf.    1.33728 (4) obj. -16448.5 iterations 6
Cbc0038I Pass  35: suminf.    1.70389 (5) obj. -16448.5 iterations 7
Cbc0038I Pass  36: suminf.    0.60045 (4) obj. -16448.5 iterations 6
Cbc0038I Pass  37: suminf.    0.56754 (4) obj. -16448.5 iterations 2
Cbc0038I Pass  38: suminf.    0.41020 (4) obj. -16448.5 iterations 11
Cbc0038I Pass  39: suminf.    0.41020 (4) obj. -16448.5 iterations 4
Cbc0038I Pass  40: suminf.    1.20911 (4) obj. -16448.5 iterations 7
Cbc0038I Pass  41: suminf.    1.20911 (4) obj. -16448.5 iterations 3
Cbc0038I Pass  42: suminf.    0.61976 (5) obj. -16448.5 iterations 8
Cbc0038I Pass  43: suminf.    0.34355 (4) obj. -16448.5 iterations 6
Cbc0038I Pass  44: suminf.    1.33728 (4) obj. -16448.5 iterations 8
Cbc0038I Pass  45: suminf.    0.61768 (2) obj. -16526.6 iterations 6
Cbc0038I Pass  46: suminf.    0.45320 (4) obj. -16448.5 iterations 5
Cbc0038I Pass  47: suminf.    1.30736 (4) obj. -16448.5 iterations 3
Cbc0038I Pass  48: suminf.    1.30736 (4) obj. -16448.5 iterations 0
Cbc0038I Pass  49: suminf.    0.88946 (4) obj. -16448.5 iterations 10
Cbc0038I Pass  50: suminf.    0.88946 (4) obj. -16448.5 iterations 4
Cbc0038I Pass  51: suminf.    1.33728 (4) obj. -16448.5 iterations 7
Cbc0038I Pass  52: suminf.    0.61768 (2) obj. -16526.6 iterations 6
Cbc0038I Pass  53: suminf.    0.45320 (4) obj. -16448.5 iterations 5
Cbc0038I Pass  54: suminf.    0.45320 (4) obj. -16448.5 iterations 1
Cbc0038I Pass  55: suminf.    0.45320 (4) obj. -16448.5 iterations 1
Cbc0038I Pass  56: suminf.    1.37184 (5) obj. -16448.5 iterations 5
Cbc0038I Pass  57: suminf.    0.56754 (4) obj. -16448.5 iterations 6
Cbc0038I Pass  58: suminf.    0.41020 (4) obj. -16448.5 iterations 11
Cbc0038I Pass  59: suminf.    0.41020 (4) obj. -16448.5 iterations 4
Cbc0038I Pass  60: suminf.    1.20911 (4) obj. -16448.5 iterations 7
Cbc0038I Pass  61: suminf.    0.61976 (5) obj. -16448.5 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -16246.8 to -16322.6 (0.03 seconds)
Cbc0038I Round again with cutoff of -16690.4
Cbc0038I Reduced cost fixing fixed 39 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.70414 (4) obj. -16690.4 iterations 1
Cbc0038I Pass  62: suminf.    0.62474 (4) obj. -16690.4 iterations 1
Cbc0038I Pass  63: suminf.    1.25024 (4) obj. -16690.4 iterations 6
Cbc0038I Pass  64: suminf.    0.56028 (3) obj. -16690.4 iterations 11
Cbc0038I Pass  65: suminf.    0.47794 (2) obj. -16690.4 iterations 5
Cbc0038I Pass  66: suminf.    0.48649 (1) obj. -16855.8 iterations 8
Cbc0038I Pass  67: suminf.    0.44145 (1) obj. -16690.4 iterations 2
Cbc0038I Pass  68: suminf.    0.49501 (3) obj. -16690.4 iterations 13
Cbc0038I Pass  69: suminf.    0.39625 (3) obj. -16690.4 iterations 7
Cbc0038I Pass  70: suminf.    0.50870 (2) obj. -16690.4 iterations 9
Cbc0038I Pass  71: suminf.    0.48206 (4) obj. -16690.4 iterations 4
Cbc0038I Pass  72: suminf.    0.71234 (4) obj. -16690.4 iterations 5
Cbc0038I Pass  73: suminf.    0.48649 (1) obj. -16855.8 iterations 8
Cbc0038I Pass  74: suminf.    0.44145 (1) obj. -16690.4 iterations 2
Cbc0038I Pass  75: suminf.    0.04035 (2) obj. -16957.6 iterations 9
Cbc0038I Pass  76: suminf.    0.04035 (2) obj. -16957.6 iterations 3
Cbc0038I Pass  77: suminf.    0.20239 (2) obj. -16690.4 iterations 4
Cbc0038I Pass  78: suminf.    0.04035 (2) obj. -16957.6 iterations 10
Cbc0038I Pass  79: suminf.    0.04035 (2) obj. -16957.6 iterations 3
Cbc0038I Pass  80: suminf.    0.70414 (4) obj. -16690.4 iterations 8
Cbc0038I Pass  81: suminf.    0.62474 (4) obj. -16690.4 iterations 7
Cbc0038I Pass  82: suminf.    1.25024 (4) obj. -16690.4 iterations 6
Cbc0038I Pass  83: suminf.    0.70414 (4) obj. -16690.4 iterations 5
Cbc0038I Pass  84: suminf.    0.39394 (1) obj. -16723.2 iterations 7
Cbc0038I Pass  85: suminf.    0.39394 (1) obj. -16723.2 iterations 2
Cbc0038I Pass  86: suminf.    0.54845 (2) obj. -16690.4 iterations 3
Cbc0038I Pass  87: suminf.    1.40101 (5) obj. -16690.4 iterations 9
Cbc0038I Pass  88: suminf.    1.38874 (4) obj. -16690.4 iterations 5
Cbc0038I Pass  89: suminf.    0.70673 (4) obj. -16690.4 iterations 10
Cbc0038I Pass  90: suminf.    1.59128 (4) obj. -16690.4 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16322.6 - took 0.03 seconds
Cbc0012I Integer solution of -16322.578 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 115 rows 65 columns, reduced to 3 rows 4 columns
Cbc0031I 7 added rows had average density of 19
Cbc0013I At root node, 7 cuts changed objective from -17255.052 to -16609.095 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -16322.578, took 108 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 16 times (72 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-62) rows, 106 (-47) columns and 1730 (-1574) elements
Clp1000I sum of infeasibilities 0 - average 0, 63 fixed columns
Coin0506I Presolve 35 (-58) rows, 36 (-70) columns and 157 (-1573) elements
Clp0029I End of values pass after 36 iterations
Clp0000I Optimal - objective value 17305.015
Clp0000I Optimal - objective value 17305.015
Coin0511I After Postsolve, objective 17305.015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1616965 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 17305.015
Clp0000I Optimal - objective value 17305.015
Clp0000I Optimal - objective value 17305.015
Coin0511I After Postsolve, objective 17305.015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17305.01477 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 108 columns (108 integer (108 of which binary)) and 1743 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 5.02876
Cbc0038I Pass   1: suminf.    0.59126 (17) obj. -12753.8 iterations 28
Cbc0038I Pass   2: suminf.    0.59126 (17) obj. -12753.8 iterations 2
Cbc0038I Solution found of -12731.7
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 108 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -12731.7 to -15070 (0.03 seconds)
Cbc0038I Round again with cutoff of -15292.3
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.02890 (25) obj. -15292.3 iterations 8
Cbc0038I Pass   4: suminf.    2.02890 (25) obj. -15292.3 iterations 0
Cbc0038I Pass   5: suminf.    1.01358 (5) obj. -15292.3 iterations 30
Cbc0038I Pass   6: suminf.    0.65164 (4) obj. -16725.9 iterations 7
Cbc0038I Pass   7: suminf.    0.13849 (1) obj. -15292.3 iterations 5
Cbc0038I Pass   8: suminf.    0.39394 (1) obj. -16723.2 iterations 3
Cbc0038I Pass   9: suminf.    2.84394 (14) obj. -15292.3 iterations 19
Cbc0038I Pass  10: suminf.    2.18378 (13) obj. -15292.3 iterations 4
Cbc0038I Pass  11: suminf.    1.63770 (8) obj. -15292.3 iterations 3
Cbc0038I Pass  12: suminf.    0.89254 (3) obj. -15292.3 iterations 10
Cbc0038I Pass  13: suminf.    0.89254 (3) obj. -15292.3 iterations 2
Cbc0038I Pass  14: suminf.    0.02703 (1) obj. -15974.5 iterations 7
Cbc0038I Pass  15: suminf.    0.15813 (1) obj. -15292.3 iterations 1
Cbc0038I Pass  16: suminf.    2.36891 (20) obj. -15292.3 iterations 28
Cbc0038I Pass  17: suminf.    0.95662 (12) obj. -15292.3 iterations 9
Cbc0038I Pass  18: suminf.    0.56923 (2) obj. -15793.8 iterations 14
Cbc0038I Pass  19: suminf.    0.16082 (4) obj. -15292.3 iterations 6
Cbc0038I Pass  20: suminf.    0.56923 (2) obj. -15791.8 iterations 7
Cbc0038I Pass  21: suminf.    0.15149 (2) obj. -15292.3 iterations 4
Cbc0038I Pass  22: suminf.    0.94766 (9) obj. -15292.3 iterations 18
Cbc0038I Pass  23: suminf.    0.94766 (9) obj. -15292.3 iterations 2
Cbc0038I Pass  24: suminf.    0.82133 (2) obj. -15369.5 iterations 18
Cbc0038I Pass  25: suminf.    0.85537 (2) obj. -15292.3 iterations 2
Cbc0038I Pass  26: suminf.    2.02039 (11) obj. -15292.3 iterations 12
Cbc0038I Pass  27: suminf.    1.87785 (10) obj. -15292.3 iterations 3
Cbc0038I Solution found of -16312.6
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 108 columns, reduced to 41 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -16312.6 to -16322.6 (0.06 seconds)
Cbc0038I Round again with cutoff of -16516.7
Cbc0038I Reduced cost fixing fixed 39 variables on major pass 3
Cbc0038I Pass  28: suminf.    2.47836 (25) obj. -16516.7 iterations 3
Cbc0038I Pass  29: suminf.    2.47836 (25) obj. -16516.7 iterations 0
Cbc0038I Pass  30: suminf.    0.83978 (6) obj. -16516.7 iterations 36
Cbc0038I Pass  31: suminf.    1.11034 (4) obj. -16516.7 iterations 13
Cbc0038I Pass  32: suminf.    1.08823 (4) obj. -16516.7 iterations 1
Cbc0038I Pass  33: suminf.    0.54064 (3) obj. -16516.7 iterations 7
Cbc0038I Pass  34: suminf.    0.39394 (1) obj. -16723.2 iterations 7
Cbc0038I Pass  35: suminf.    0.46143 (1) obj. -16516.7 iterations 2
Cbc0038I Pass  36: suminf.    0.67313 (4) obj. -16516.7 iterations 8
Cbc0038I Pass  37: suminf.    0.54010 (2) obj. -16516.7 iterations 5
Cbc0038I Pass  38: suminf.    0.47394 (2) obj. -16719.1 iterations 3
Cbc0038I Pass  39: suminf.    0.45980 (1) obj. -16516.7 iterations 3
Cbc0038I Pass  40: suminf.    0.39394 (1) obj. -16718.2 iterations 3
Cbc0038I Pass  41: suminf.    1.79644 (18) obj. -16516.7 iterations 21
Cbc0038I Pass  42: suminf.    1.75660 (11) obj. -16516.7 iterations 11
Cbc0038I Pass  43: suminf.    1.78137 (9) obj. -16516.7 iterations 19
Cbc0038I Pass  44: suminf.    0.54538 (7) obj. -16516.7 iterations 6
Cbc0038I Pass  45: suminf.    0.45784 (1) obj. -16516.7 iterations 4
Cbc0038I Pass  46: suminf.    0.39394 (1) obj. -16712.2 iterations 3
Cbc0038I Pass  47: suminf.    0.95565 (7) obj. -16720.4 iterations 11
Cbc0038I Pass  48: suminf.    0.95565 (7) obj. -16720.4 iterations 2
Cbc0038I Pass  49: suminf.    0.45816 (1) obj. -16516.7 iterations 8
Cbc0038I Pass  50: suminf.    0.39394 (1) obj. -16713.2 iterations 3
Cbc0038I Pass  51: suminf.    0.81464 (6) obj. -16516.7 iterations 15
Cbc0038I Pass  52: suminf.    0.79136 (5) obj. -16718.7 iterations 8
Cbc0038I Pass  53: suminf.    0.45849 (1) obj. -16516.7 iterations 6
Cbc0038I Pass  54: suminf.    0.39394 (1) obj. -16714.2 iterations 3
Cbc0038I Pass  55: suminf.    0.39394 (1) obj. -16713.2 iterations 9
Cbc0038I Pass  56: suminf.    0.39394 (1) obj. -16713.2 iterations 3
Cbc0038I Pass  57: suminf.    0.45816 (1) obj. -16516.7 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 108 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -16322.6 - took 0.05 seconds
Cbc0012I Integer solution of -16322.578 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 95 rows 108 columns, reduced to 3 rows 4 columns
Cbc0031I 18 added rows had average density of 8.9444444
Cbc0013I At root node, 18 cuts changed objective from -17292.97 to -16580.552 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 193 row cuts average 4.6 elements, 24 column cuts (24 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16322.578, took 228 iterations and 2 nodes (0.33 seconds)
Cbc0032I Strong branching done 38 times (266 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.34

