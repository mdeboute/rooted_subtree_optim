Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-27) rows, 40 (-10) columns and 217 (-68) elements
Clp1000I sum of infeasibilities 0.000686662 - average 9.53698e-06, 27 fixed columns
Coin0506I Presolve 14 (-58) rows, 12 (-28) columns and 45 (-172) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 144424.06
Clp0000I Optimal - objective value 144424.06
Coin0511I After Postsolve, objective 144424.06, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6341488 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 144424.06
Clp0000I Optimal - objective value 144424.06
Clp0000I Optimal - objective value 144424.06
Coin0511I After Postsolve, objective 144424.06, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144424.0646 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 40 columns (39 integer (39 of which binary)) and 217 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.00608
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -142767 iterations 20
Cbc0038I Solution found of -142767
Cbc0038I Relaxing continuous gives -142767
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -142933
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.53184 (5) obj. -142933 iterations 6
Cbc0038I Pass   3: suminf.    0.21682 (6) obj. -142933 iterations 2
Cbc0038I Pass   4: suminf.    0.14737 (4) obj. -142933 iterations 9
Cbc0038I Pass   5: suminf.    0.14737 (4) obj. -142933 iterations 1
Cbc0038I Pass   6: suminf.    0.41777 (5) obj. -142933 iterations 11
Cbc0038I Pass   7: suminf.    1.19685 (5) obj. -142933 iterations 11
Cbc0038I Pass   8: suminf.    0.84063 (5) obj. -142933 iterations 3
Cbc0038I Pass   9: suminf.    0.21682 (6) obj. -142933 iterations 2
Cbc0038I Pass  10: suminf.    0.14737 (4) obj. -142933 iterations 9
Cbc0038I Pass  11: suminf.    0.14737 (4) obj. -142933 iterations 1
Cbc0038I Pass  12: suminf.    0.41777 (5) obj. -142933 iterations 11
Cbc0038I Pass  13: suminf.    1.83243 (7) obj. -142933 iterations 12
Cbc0038I Pass  14: suminf.    0.34171 (2) obj. -142933 iterations 7
Cbc0038I Pass  15: suminf.    0.78130 (3) obj. -142933 iterations 2
Cbc0038I Pass  16: suminf.    0.59567 (3) obj. -142933 iterations 5
Cbc0038I Pass  17: suminf.    0.59567 (3) obj. -142933 iterations 0
Cbc0038I Pass  18: suminf.    0.40119 (2) obj. -142933 iterations 6
Cbc0038I Pass  19: suminf.    0.34171 (2) obj. -142933 iterations 1
Cbc0038I Pass  20: suminf.    0.78130 (3) obj. -142933 iterations 2
Cbc0038I Pass  21: suminf.    0.59567 (3) obj. -142933 iterations 5
Cbc0038I Pass  22: suminf.    0.59567 (3) obj. -142933 iterations 0
Cbc0038I Pass  23: suminf.    0.40119 (2) obj. -142933 iterations 6
Cbc0038I Pass  24: suminf.    0.34171 (2) obj. -142933 iterations 1
Cbc0038I Pass  25: suminf.    0.78130 (3) obj. -142933 iterations 2
Cbc0038I Pass  26: suminf.    0.59567 (3) obj. -142933 iterations 5
Cbc0038I Pass  27: suminf.    0.59567 (3) obj. -142933 iterations 0
Cbc0038I Pass  28: suminf.    0.40119 (2) obj. -142933 iterations 6
Cbc0038I Pass  29: suminf.    0.34171 (2) obj. -142933 iterations 1
Cbc0038I Pass  30: suminf.    0.78130 (3) obj. -142933 iterations 2
Cbc0038I Pass  31: suminf.    0.59567 (3) obj. -142933 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 18 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -142767 - took 0.01 seconds
Cbc0012I Integer solution of -142767.49 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 72 rows 40 columns, reduced to 14 rows 12 columns
Cbc0031I 7 added rows had average density of 10.142857
Cbc0013I At root node, 7 cuts changed objective from -144424.06 to -142819.71 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 116 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 28 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0016I Integer solution of -142789.35 found by strong branching after 113 iterations and 0 nodes (0.03 seconds)
Cbc0001I Search completed - best objective -142789.35, took 113 iterations and 0 nodes (0.03 seconds)
Cbc0032I Strong branching done 2 times (16 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-18) rows, 86 (-10) columns and 1125 (-288) elements
Clp1000I sum of infeasibilities 1.27945e-07 - average 1.59931e-09, 48 fixed columns
Coin0506I Presolve 31 (-49) rows, 34 (-52) columns and 185 (-940) elements
Clp0000I Optimal - objective value 145022.92
Clp0000I Optimal - objective value 145022.92
Coin0511I After Postsolve, objective 145022.92, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7450365 - largest nonzero change 2.0503357e-05 ( 0.0020503357%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 145894
Clp0000I Optimal - objective value 145894
Clp0000I Optimal - objective value 145894
Coin0511I After Postsolve, objective 145894, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145894.0007 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 86 columns (86 integer (86 of which binary)) and 1127 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 15.3311
Cbc0038I Pass   1: suminf.    1.99646 (17) obj. -87650.2 iterations 30
Cbc0038I Pass   2: suminf.    1.99646 (17) obj. -87650.2 iterations 7
Cbc0038I Solution found of -86683.1
Cbc0038I Rounding solution of -112931 is better than previous of -86683.1

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 86 columns, reduced to 34 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -112931 to -142767 (0.02 seconds)
Cbc0038I Round again with cutoff of -143020
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   3: suminf.    8.80794 (42) obj. -143020 iterations 19
Cbc0038I Pass   4: suminf.    8.80794 (42) obj. -143020 iterations 0
Cbc0038I Pass   5: suminf.    5.60456 (30) obj. -143020 iterations 12
Cbc0038I Pass   6: suminf.    3.42126 (17) obj. -143020 iterations 20
Cbc0038I Pass   7: suminf.    0.90271 (4) obj. -143020 iterations 25
Cbc0038I Pass   8: suminf.    0.22222 (1) obj. -143152 iterations 8
Cbc0038I Pass   9: suminf.    0.49069 (1) obj. -143020 iterations 10
Cbc0038I Pass  10: suminf.    3.94371 (14) obj. -143020 iterations 17
Cbc0038I Pass  11: suminf.    3.94371 (14) obj. -143020 iterations 3
Cbc0038I Pass  12: suminf.    0.50000 (1) obj. -143050 iterations 17
Cbc0038I Pass  13: suminf.    0.46416 (1) obj. -143020 iterations 3
Cbc0038I Pass  14: suminf.    3.52205 (11) obj. -143020 iterations 23
Cbc0038I Pass  15: suminf.    3.52205 (11) obj. -143020 iterations 3
Cbc0038I Pass  16: suminf.    0.97433 (3) obj. -143020 iterations 21
Cbc0038I Pass  17: suminf.    0.97433 (3) obj. -143020 iterations 0
Cbc0038I Pass  18: suminf.    1.13314 (3) obj. -143020 iterations 5
Cbc0038I Pass  19: suminf.    1.13314 (3) obj. -143020 iterations 0
Cbc0038I Pass  20: suminf.    0.97433 (3) obj. -143020 iterations 2
Cbc0038I Pass  21: suminf.    5.09800 (15) obj. -143020 iterations 28
Cbc0038I Pass  22: suminf.    4.18642 (13) obj. -143020 iterations 12
Cbc0038I Pass  23: suminf.    0.46416 (1) obj. -143020 iterations 19
Cbc0038I Pass  24: suminf.    0.46416 (1) obj. -143020 iterations 1
Cbc0038I Pass  25: suminf.    0.50000 (1) obj. -143050 iterations 6
Cbc0038I Pass  26: suminf.    3.46480 (10) obj. -143020 iterations 13
Cbc0038I Pass  27: suminf.    3.43211 (9) obj. -143020 iterations 3
Cbc0038I Pass  28: suminf.    1.98694 (7) obj. -143020 iterations 5
Cbc0038I Pass  29: suminf.    1.98694 (7) obj. -143020 iterations 2
Cbc0038I Pass  30: suminf.    0.50000 (1) obj. -143050 iterations 11
Cbc0038I Pass  31: suminf.    0.46416 (1) obj. -143020 iterations 4
Cbc0038I Pass  32: suminf.    3.75972 (13) obj. -143020 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 86 columns, reduced to 27 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -142767 to -142789 (0.05 seconds)
Cbc0038I Round again with cutoff of -143473
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 3
Cbc0038I Pass  32: suminf.    8.86564 (42) obj. -143473 iterations 0
Cbc0038I Pass  33: suminf.    8.86564 (42) obj. -143473 iterations 0
Cbc0038I Pass  34: suminf.    4.19416 (17) obj. -143473 iterations 37
Cbc0038I Pass  35: suminf.    4.19416 (17) obj. -143473 iterations 3
Cbc0038I Pass  36: suminf.    0.97484 (3) obj. -143473 iterations 21
Cbc0038I Pass  37: suminf.    0.78125 (3) obj. -143532 iterations 8
Cbc0038I Pass  38: suminf.    0.96383 (3) obj. -143473 iterations 9
Cbc0038I Pass  39: suminf.    0.96383 (3) obj. -143473 iterations 1
Cbc0038I Pass  40: suminf.    0.97484 (3) obj. -143473 iterations 3
Cbc0038I Pass  41: suminf.    3.08916 (15) obj. -143473 iterations 17
Cbc0038I Pass  42: suminf.    2.85203 (10) obj. -143486 iterations 8
Cbc0038I Pass  43: suminf.    1.29026 (5) obj. -143473 iterations 20
Cbc0038I Pass  44: suminf.    1.29026 (5) obj. -143473 iterations 3
Cbc0038I Pass  45: suminf.    1.36492 (5) obj. -143473 iterations 8
Cbc0038I Pass  46: suminf.    1.36492 (5) obj. -143473 iterations 1
Cbc0038I Pass  47: suminf.    1.29026 (5) obj. -143473 iterations 6
Cbc0038I Pass  48: suminf.    3.45877 (13) obj. -143473 iterations 13
Cbc0038I Pass  49: suminf.    3.39131 (15) obj. -143473 iterations 3
Cbc0038I Pass  50: suminf.    1.45097 (4) obj. -143473 iterations 16
Cbc0038I Pass  51: suminf.    1.33681 (4) obj. -143508 iterations 12
Cbc0038I Pass  52: suminf.    1.29649 (4) obj. -143473 iterations 5
Cbc0038I Pass  53: suminf.    1.34905 (4) obj. -143473 iterations 10
Cbc0038I Pass  54: suminf.    1.34905 (4) obj. -143473 iterations 0
Cbc0038I Pass  55: suminf.    1.53693 (4) obj. -143473 iterations 7
Cbc0038I Pass  56: suminf.    1.53693 (4) obj. -143473 iterations 0
Cbc0038I Pass  57: suminf.    1.34905 (4) obj. -143473 iterations 1
Cbc0038I Pass  58: suminf.    5.25012 (16) obj. -143473 iterations 13
Cbc0038I Pass  59: suminf.    3.14528 (11) obj. -143473 iterations 11
Cbc0038I Pass  60: suminf.    3.14528 (11) obj. -143473 iterations 2
Cbc0038I Pass  61: suminf.    1.86065 (7) obj. -143473 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 86 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -142789 - took 0.05 seconds
Cbc0012I Integer solution of -142789.35 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 80 rows 86 columns, reduced to 3 rows 5 columns
Cbc0031I 18 added rows had average density of 2.7222222
Cbc0013I At root node, 46 cuts changed objective from -144072.03 to -142789.35 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 234 row cuts average 4.7 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -142789.35, took 83 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-27) rows, 40 (-10) columns and 217 (-68) elements
Clp1000I sum of infeasibilities 0.000686662 - average 9.53698e-06, 27 fixed columns
Coin0506I Presolve 14 (-58) rows, 12 (-28) columns and 45 (-172) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 144424.06
Clp0000I Optimal - objective value 144424.06
Coin0511I After Postsolve, objective 144424.06, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6341488 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 144424.06
Clp0000I Optimal - objective value 144424.06
Clp0000I Optimal - objective value 144424.06
Coin0511I After Postsolve, objective 144424.06, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144424.0646 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 40 columns (39 integer (39 of which binary)) and 217 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.00608
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -142767 iterations 20
Cbc0038I Solution found of -142767
Cbc0038I Relaxing continuous gives -142767
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -142933
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.53184 (5) obj. -142933 iterations 6
Cbc0038I Pass   3: suminf.    0.21682 (6) obj. -142933 iterations 2
Cbc0038I Pass   4: suminf.    0.14737 (4) obj. -142933 iterations 9
Cbc0038I Pass   5: suminf.    0.14737 (4) obj. -142933 iterations 1
Cbc0038I Pass   6: suminf.    0.41777 (5) obj. -142933 iterations 11
Cbc0038I Pass   7: suminf.    1.19685 (5) obj. -142933 iterations 11
Cbc0038I Pass   8: suminf.    0.84063 (5) obj. -142933 iterations 3
Cbc0038I Pass   9: suminf.    0.21682 (6) obj. -142933 iterations 2
Cbc0038I Pass  10: suminf.    0.14737 (4) obj. -142933 iterations 9
Cbc0038I Pass  11: suminf.    0.14737 (4) obj. -142933 iterations 1
Cbc0038I Pass  12: suminf.    0.41777 (5) obj. -142933 iterations 11
Cbc0038I Pass  13: suminf.    1.83243 (7) obj. -142933 iterations 12
Cbc0038I Pass  14: suminf.    0.34171 (2) obj. -142933 iterations 7
Cbc0038I Pass  15: suminf.    0.78130 (3) obj. -142933 iterations 2
Cbc0038I Pass  16: suminf.    0.59567 (3) obj. -142933 iterations 5
Cbc0038I Pass  17: suminf.    0.59567 (3) obj. -142933 iterations 0
Cbc0038I Pass  18: suminf.    0.40119 (2) obj. -142933 iterations 6
Cbc0038I Pass  19: suminf.    0.34171 (2) obj. -142933 iterations 1
Cbc0038I Pass  20: suminf.    0.78130 (3) obj. -142933 iterations 2
Cbc0038I Pass  21: suminf.    0.59567 (3) obj. -142933 iterations 5
Cbc0038I Pass  22: suminf.    0.59567 (3) obj. -142933 iterations 0
Cbc0038I Pass  23: suminf.    0.40119 (2) obj. -142933 iterations 6
Cbc0038I Pass  24: suminf.    0.34171 (2) obj. -142933 iterations 1
Cbc0038I Pass  25: suminf.    0.78130 (3) obj. -142933 iterations 2
Cbc0038I Pass  26: suminf.    0.59567 (3) obj. -142933 iterations 5
Cbc0038I Pass  27: suminf.    0.59567 (3) obj. -142933 iterations 0
Cbc0038I Pass  28: suminf.    0.40119 (2) obj. -142933 iterations 6
Cbc0038I Pass  29: suminf.    0.34171 (2) obj. -142933 iterations 1
Cbc0038I Pass  30: suminf.    0.78130 (3) obj. -142933 iterations 2
Cbc0038I Pass  31: suminf.    0.59567 (3) obj. -142933 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 18 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -142767 - took 0.01 seconds
Cbc0012I Integer solution of -142767.49 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 72 rows 40 columns, reduced to 14 rows 12 columns
Cbc0031I 7 added rows had average density of 10.142857
Cbc0013I At root node, 7 cuts changed objective from -144424.06 to -142819.71 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 116 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 28 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0016I Integer solution of -142789.35 found by strong branching after 113 iterations and 0 nodes (0.03 seconds)
Cbc0001I Search completed - best objective -142789.35, took 113 iterations and 0 nodes (0.03 seconds)
Cbc0032I Strong branching done 2 times (16 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-19) rows, 86 (-11) columns and 1125 (-289) elements
Clp1000I sum of infeasibilities 1.27945e-07 - average 1.59931e-09, 48 fixed columns
Coin0506I Presolve 31 (-49) rows, 34 (-52) columns and 185 (-940) elements
Clp0000I Optimal - objective value 145022.92
Clp0000I Optimal - objective value 145022.92
Coin0511I After Postsolve, objective 145022.92, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7450365 - largest nonzero change 2.0503357e-05 ( 0.0020503357%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 145894
Clp0000I Optimal - objective value 145894
Clp0000I Optimal - objective value 145894
Coin0511I After Postsolve, objective 145894, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145894.0007 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 86 columns (86 integer (86 of which binary)) and 1127 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 15.3311
Cbc0038I Pass   1: suminf.    1.99646 (17) obj. -87650.2 iterations 30
Cbc0038I Pass   2: suminf.    1.99646 (17) obj. -87650.2 iterations 7
Cbc0038I Solution found of -86683.1
Cbc0038I Rounding solution of -112931 is better than previous of -86683.1

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 86 columns, reduced to 34 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -112931 to -142767 (0.02 seconds)
Cbc0038I Round again with cutoff of -143020
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   3: suminf.    8.80794 (42) obj. -143020 iterations 19
Cbc0038I Pass   4: suminf.    8.80794 (42) obj. -143020 iterations 0
Cbc0038I Pass   5: suminf.    5.60456 (30) obj. -143020 iterations 12
Cbc0038I Pass   6: suminf.    3.42126 (17) obj. -143020 iterations 20
Cbc0038I Pass   7: suminf.    0.90271 (4) obj. -143020 iterations 25
Cbc0038I Pass   8: suminf.    0.22222 (1) obj. -143152 iterations 8
Cbc0038I Pass   9: suminf.    0.49069 (1) obj. -143020 iterations 10
Cbc0038I Pass  10: suminf.    3.94371 (14) obj. -143020 iterations 17
Cbc0038I Pass  11: suminf.    3.94371 (14) obj. -143020 iterations 3
Cbc0038I Pass  12: suminf.    0.50000 (1) obj. -143050 iterations 17
Cbc0038I Pass  13: suminf.    0.46416 (1) obj. -143020 iterations 3
Cbc0038I Pass  14: suminf.    3.52205 (11) obj. -143020 iterations 23
Cbc0038I Pass  15: suminf.    3.52205 (11) obj. -143020 iterations 3
Cbc0038I Pass  16: suminf.    0.97433 (3) obj. -143020 iterations 21
Cbc0038I Pass  17: suminf.    0.97433 (3) obj. -143020 iterations 0
Cbc0038I Pass  18: suminf.    1.13314 (3) obj. -143020 iterations 5
Cbc0038I Pass  19: suminf.    1.13314 (3) obj. -143020 iterations 0
Cbc0038I Pass  20: suminf.    0.97433 (3) obj. -143020 iterations 2
Cbc0038I Pass  21: suminf.    5.09800 (15) obj. -143020 iterations 28
Cbc0038I Pass  22: suminf.    4.18642 (13) obj. -143020 iterations 12
Cbc0038I Pass  23: suminf.    0.46416 (1) obj. -143020 iterations 19
Cbc0038I Pass  24: suminf.    0.46416 (1) obj. -143020 iterations 1
Cbc0038I Pass  25: suminf.    0.50000 (1) obj. -143050 iterations 6
Cbc0038I Pass  26: suminf.    3.46480 (10) obj. -143020 iterations 13
Cbc0038I Pass  27: suminf.    3.43211 (9) obj. -143020 iterations 3
Cbc0038I Pass  28: suminf.    1.98694 (7) obj. -143020 iterations 5
Cbc0038I Pass  29: suminf.    1.98694 (7) obj. -143020 iterations 2
Cbc0038I Pass  30: suminf.    0.50000 (1) obj. -143050 iterations 11
Cbc0038I Pass  31: suminf.    0.46416 (1) obj. -143020 iterations 4
Cbc0038I Pass  32: suminf.    3.75972 (13) obj. -143020 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 86 columns, reduced to 27 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -142767 to -142789 (0.05 seconds)
Cbc0038I Round again with cutoff of -143473
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 3
Cbc0038I Pass  32: suminf.    8.86564 (42) obj. -143473 iterations 0
Cbc0038I Pass  33: suminf.    8.86564 (42) obj. -143473 iterations 0
Cbc0038I Pass  34: suminf.    4.19416 (17) obj. -143473 iterations 37
Cbc0038I Pass  35: suminf.    4.19416 (17) obj. -143473 iterations 3
Cbc0038I Pass  36: suminf.    0.97484 (3) obj. -143473 iterations 21
Cbc0038I Pass  37: suminf.    0.78125 (3) obj. -143532 iterations 8
Cbc0038I Pass  38: suminf.    0.96383 (3) obj. -143473 iterations 9
Cbc0038I Pass  39: suminf.    0.96383 (3) obj. -143473 iterations 1
Cbc0038I Pass  40: suminf.    0.97484 (3) obj. -143473 iterations 3
Cbc0038I Pass  41: suminf.    3.08916 (15) obj. -143473 iterations 17
Cbc0038I Pass  42: suminf.    2.85203 (10) obj. -143486 iterations 8
Cbc0038I Pass  43: suminf.    1.29026 (5) obj. -143473 iterations 20
Cbc0038I Pass  44: suminf.    1.29026 (5) obj. -143473 iterations 3
Cbc0038I Pass  45: suminf.    1.36492 (5) obj. -143473 iterations 8
Cbc0038I Pass  46: suminf.    1.36492 (5) obj. -143473 iterations 1
Cbc0038I Pass  47: suminf.    1.29026 (5) obj. -143473 iterations 6
Cbc0038I Pass  48: suminf.    3.45877 (13) obj. -143473 iterations 13
Cbc0038I Pass  49: suminf.    3.39131 (15) obj. -143473 iterations 3
Cbc0038I Pass  50: suminf.    1.45097 (4) obj. -143473 iterations 16
Cbc0038I Pass  51: suminf.    1.33681 (4) obj. -143508 iterations 12
Cbc0038I Pass  52: suminf.    1.29649 (4) obj. -143473 iterations 5
Cbc0038I Pass  53: suminf.    1.34905 (4) obj. -143473 iterations 10
Cbc0038I Pass  54: suminf.    1.34905 (4) obj. -143473 iterations 0
Cbc0038I Pass  55: suminf.    1.53693 (4) obj. -143473 iterations 7
Cbc0038I Pass  56: suminf.    1.53693 (4) obj. -143473 iterations 0
Cbc0038I Pass  57: suminf.    1.34905 (4) obj. -143473 iterations 1
Cbc0038I Pass  58: suminf.    5.25012 (16) obj. -143473 iterations 13
Cbc0038I Pass  59: suminf.    3.14528 (11) obj. -143473 iterations 11
Cbc0038I Pass  60: suminf.    3.14528 (11) obj. -143473 iterations 2
Cbc0038I Pass  61: suminf.    1.86065 (7) obj. -143473 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 86 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -142789 - took 0.05 seconds
Cbc0012I Integer solution of -142789.35 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 80 rows 86 columns, reduced to 3 rows 5 columns
Cbc0031I 18 added rows had average density of 2.7222222
Cbc0013I At root node, 46 cuts changed objective from -144072.03 to -142789.35 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 234 row cuts average 4.7 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -142789.35, took 83 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.12

