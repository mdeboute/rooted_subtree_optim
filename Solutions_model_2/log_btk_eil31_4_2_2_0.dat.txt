Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 134 (-49) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 46 (0) rows, 25 (0) columns and 134 (0) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 59.469347
Clp0000I Optimal - objective value 59.469347
Coin0511I After Postsolve, objective 59.469347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.469347
Clp0000I Optimal - objective value 59.469347
Clp0000I Optimal - objective value 59.469347
Coin0511I After Postsolve, objective 59.469347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.46934713 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 25 columns (24 integer (24 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.87339
Cbc0038I Solution found of -6.85095
Cbc0038I Relaxing continuous gives -7.03947
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7.03947 to -26.2815 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.537
Cbc0038I Pass   1: suminf.    1.27492 (5) obj. -29.537 iterations 20
Cbc0038I Pass   2: suminf.    0.05000 (1) obj. -33.3292 iterations 8
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. -33.3292 iterations 1
Cbc0038I Pass   4: suminf.    0.22443 (1) obj. -29.537 iterations 2
Cbc0038I Pass   5: suminf.    1.92106 (6) obj. -29.537 iterations 10
Cbc0038I Pass   6: suminf.    0.96283 (4) obj. -29.537 iterations 4
Cbc0038I Pass   7: suminf.    0.47564 (3) obj. -29.537 iterations 4
Cbc0038I Pass   8: suminf.    0.47564 (3) obj. -29.537 iterations 0
Cbc0038I Pass   9: suminf.    0.77935 (3) obj. -29.537 iterations 4
Cbc0038I Pass  10: suminf.    0.92022 (3) obj. -29.537 iterations 4
Cbc0038I Pass  11: suminf.    0.65790 (2) obj. -29.537 iterations 1
Cbc0038I Pass  12: suminf.    0.68938 (2) obj. -29.537 iterations 1
Cbc0038I Pass  13: suminf.    1.00126 (4) obj. -29.537 iterations 12
Cbc0038I Pass  14: suminf.    1.00126 (4) obj. -29.537 iterations 0
Cbc0038I Pass  15: suminf.    0.79296 (3) obj. -29.537 iterations 7
Cbc0038I Pass  16: suminf.    1.24939 (3) obj. -29.537 iterations 5
Cbc0038I Pass  17: suminf.    0.90530 (3) obj. -29.537 iterations 2
Cbc0038I Pass  18: suminf.    0.81686 (3) obj. -29.537 iterations 5
Cbc0038I Pass  19: suminf.    0.69592 (3) obj. -29.537 iterations 3
Cbc0038I Pass  20: suminf.    0.59309 (4) obj. -29.537 iterations 3
Cbc0038I Pass  21: suminf.    0.44140 (3) obj. -29.537 iterations 2
Cbc0038I Pass  22: suminf.    0.48763 (2) obj. -29.537 iterations 3
Cbc0038I Pass  23: suminf.    0.54424 (3) obj. -29.537 iterations 4
Cbc0038I Pass  24: suminf.    0.72966 (3) obj. -29.537 iterations 4
Cbc0038I Pass  25: suminf.    0.34834 (1) obj. -29.537 iterations 10
Cbc0038I Pass  26: suminf.    0.21250 (1) obj. -34.9044 iterations 3
Cbc0038I Pass  27: suminf.    0.34834 (1) obj. -29.537 iterations 1
Cbc0038I Pass  28: suminf.    0.75244 (6) obj. -29.537 iterations 6
Cbc0038I Pass  29: suminf.    0.70165 (3) obj. -29.537 iterations 2
Cbc0038I Pass  30: suminf.    0.65263 (3) obj. -29.537 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.2815 - took 0.04 seconds
Cbc0012I Integer solution of -26.281477 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0031I 9 added rows had average density of 12.666667
Cbc0013I At root node, 9 cuts changed objective from -58.836041 to -43.249557 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1105 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 642 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.28147674, took 2853 iterations and 16 nodes (0.22 seconds)
Cbc0032I Strong branching done 156 times (1369 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 6, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-19) rows, 47 (-15) columns and 413 (-233) elements
Clp1000I sum of infeasibilities 3.06256e-08 - average 6.96037e-10, 25 fixed columns
Coin0506I Presolve 19 (-25) rows, 22 (-25) columns and 77 (-336) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 1.9161845 - largest nonzero change 0 ( 0%) - largest zero change 2.9612821e-05
Clp0000I Optimal - objective value 34.197974
Clp0000I Optimal - objective value 34.197974
Coin0511I After Postsolve, objective 34.197974, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5859588 - largest nonzero change 0 ( 0%) - largest zero change 2.4308892e-05
Clp0000I Optimal - objective value 77.684549
Clp0000I Optimal - objective value 77.684549
Clp0000I Optimal - objective value 77.684549
Coin0511I After Postsolve, objective 77.684549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.68454856 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 329 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.963%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 2.03817
Cbc0038I Pass   1: suminf.    0.39657 (6) obj. -20.3295 iterations 7
Cbc0038I Pass   2: suminf.    0.39657 (6) obj. -20.3295 iterations 1
Cbc0038I Solution found of -4.59108
Cbc0038I Rounding solution of -19.8599 is better than previous of -4.59108

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -19.8599 to -25.4523 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.6534
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.86665 (14) obj. -28.6534 iterations 1
Cbc0038I Pass   4: suminf.    0.86665 (14) obj. -28.6534 iterations 0
Cbc0038I Pass   5: suminf.    0.03750 (1) obj. -30.6228 iterations 18
Cbc0038I Pass   6: suminf.    0.08734 (1) obj. -28.6534 iterations 1
Cbc0038I Pass   7: suminf.    1.29944 (6) obj. -28.6534 iterations 9
Cbc0038I Pass   8: suminf.    0.66744 (5) obj. -28.6534 iterations 1
Cbc0038I Pass   9: suminf.    0.22033 (2) obj. -28.6534 iterations 5
Cbc0038I Pass  10: suminf.    0.22033 (2) obj. -28.6534 iterations 0
Cbc0038I Pass  11: suminf.    0.38856 (2) obj. -28.6534 iterations 1
Cbc0038I Pass  12: suminf.    0.40125 (4) obj. -28.6534 iterations 8
Cbc0038I Pass  13: suminf.    0.31978 (3) obj. -29.8896 iterations 3
Cbc0038I Pass  14: suminf.    0.30430 (1) obj. -28.6534 iterations 4
Cbc0038I Pass  15: suminf.    0.42673 (2) obj. -28.6534 iterations 1
Cbc0038I Pass  16: suminf.    2.24577 (7) obj. -28.6534 iterations 5
Cbc0038I Pass  17: suminf.    0.61123 (4) obj. -28.6534 iterations 3
Cbc0038I Pass  18: suminf.    0.55180 (3) obj. -28.6534 iterations 1
Cbc0038I Pass  19: suminf.    0.22033 (2) obj. -28.6534 iterations 3
Cbc0038I Pass  20: suminf.    0.22033 (2) obj. -28.6534 iterations 0
Cbc0038I Pass  21: suminf.    0.38856 (2) obj. -28.6534 iterations 1
Cbc0038I Pass  22: suminf.    2.50802 (9) obj. -28.6534 iterations 9
Cbc0038I Pass  23: suminf.    2.50802 (9) obj. -28.6534 iterations 1
Cbc0038I Pass  24: suminf.    0.97352 (4) obj. -28.6534 iterations 9
Cbc0038I Pass  25: suminf.    0.19783 (2) obj. -32.3375 iterations 2
Cbc0038I Pass  26: suminf.    0.22033 (2) obj. -28.6534 iterations 2
Cbc0038I Pass  27: suminf.    0.22033 (2) obj. -28.6534 iterations 0
Cbc0038I Pass  28: suminf.    0.38856 (2) obj. -28.6534 iterations 1
Cbc0038I Pass  29: suminf.    1.91196 (8) obj. -28.6534 iterations 6
Cbc0038I Pass  30: suminf.    0.96808 (7) obj. -37.8067 iterations 2
Cbc0038I Pass  31: suminf.    0.56901 (6) obj. -33.7524 iterations 1
Cbc0038I Pass  32: suminf.    0.22033 (2) obj. -28.6534 iterations 6
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -25.4523 to -26.2815 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.4153
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.19204 (14) obj. -34.4153 iterations 0
Cbc0038I Pass  33: suminf.    1.19204 (14) obj. -34.4153 iterations 0
Cbc0038I Pass  34: suminf.    0.50863 (2) obj. -34.4153 iterations 21
Cbc0038I Pass  35: suminf.    0.33627 (2) obj. -34.4153 iterations 3
Cbc0038I Pass  36: suminf.    0.72844 (2) obj. -34.4153 iterations 2
Cbc0038I Pass  37: suminf.    1.82544 (7) obj. -34.4153 iterations 11
Cbc0038I Pass  38: suminf.    1.51128 (6) obj. -34.4153 iterations 3
Cbc0038I Pass  39: suminf.    0.48450 (4) obj. -34.4153 iterations 5
Cbc0038I Pass  40: suminf.    0.48450 (4) obj. -34.4153 iterations 0
Cbc0038I Pass  41: suminf.    0.88273 (3) obj. -34.4153 iterations 3
Cbc0038I Pass  42: suminf.    0.88273 (3) obj. -34.4153 iterations 0
Cbc0038I Pass  43: suminf.    0.94874 (3) obj. -34.4153 iterations 1
Cbc0038I Pass  44: suminf.    0.63230 (3) obj. -34.4153 iterations 1
Cbc0038I Pass  45: suminf.    1.23402 (6) obj. -34.4153 iterations 10
Cbc0038I Pass  46: suminf.    1.23402 (6) obj. -34.4153 iterations 1
Cbc0038I Pass  47: suminf.    0.92934 (8) obj. -34.4153 iterations 9
Cbc0038I Pass  48: suminf.    0.92934 (8) obj. -34.4153 iterations 0
Cbc0038I Pass  49: suminf.    0.56822 (4) obj. -34.4153 iterations 7
Cbc0038I Pass  50: suminf.    0.56822 (4) obj. -34.4153 iterations 0
Cbc0038I Pass  51: suminf.    0.87664 (4) obj. -34.4153 iterations 4
Cbc0038I Pass  52: suminf.    0.60637 (2) obj. -34.4153 iterations 3
Cbc0038I Pass  53: suminf.    0.16630 (2) obj. -36.5924 iterations 2
Cbc0038I Pass  54: suminf.    0.43844 (2) obj. -34.4153 iterations 1
Cbc0038I Pass  55: suminf.    1.11408 (5) obj. -34.4153 iterations 5
Cbc0038I Pass  56: suminf.    0.22174 (2) obj. -37.0553 iterations 5
Cbc0038I Pass  57: suminf.    0.54826 (2) obj. -34.4153 iterations 2
Cbc0038I Pass  58: suminf.    0.54826 (2) obj. -34.4153 iterations 0
Cbc0038I Pass  59: suminf.    0.28621 (2) obj. -34.4153 iterations 2
Cbc0038I Pass  60: suminf.    2.09260 (8) obj. -34.4153 iterations 12
Cbc0038I Pass  61: suminf.    1.39119 (7) obj. -34.4153 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -26.2815 - took 0.04 seconds
Cbc0012I Integer solution of -26.281477 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 12 rows 13 columns
Cbc0031I 18 added rows had average density of 11.277778
Cbc0013I At root node, 18 cuts changed objective from -57.462868 to -32.81381 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 788 row cuts average 4.5 elements, 5 column cuts (5 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 761 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 82 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 53 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 53 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.281477 best solution, best possible -32.81381 (1.55 seconds)
Cbc0010I After 7 nodes, 6 on tree, -26.281477 best solution, best possible -31.286595 (2.39 seconds)
Cbc0001I Search completed - best objective -26.28147674, took 2755 iterations and 22 nodes (2.82 seconds)
Cbc0032I Strong branching done 322 times (2940 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 8, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.79   (Wallclock seconds):       2.83

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 134 (-49) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 46 (0) rows, 25 (0) columns and 134 (0) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 59.469347
Clp0000I Optimal - objective value 59.469347
Coin0511I After Postsolve, objective 59.469347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.469347
Clp0000I Optimal - objective value 59.469347
Clp0000I Optimal - objective value 59.469347
Coin0511I After Postsolve, objective 59.469347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.46934713 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 25 columns (24 integer (24 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.87339
Cbc0038I Solution found of -6.85095
Cbc0038I Relaxing continuous gives -7.03947
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7.03947 to -26.2815 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.537
Cbc0038I Pass   1: suminf.    1.27492 (5) obj. -29.537 iterations 20
Cbc0038I Pass   2: suminf.    0.05000 (1) obj. -33.3292 iterations 8
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. -33.3292 iterations 1
Cbc0038I Pass   4: suminf.    0.22443 (1) obj. -29.537 iterations 2
Cbc0038I Pass   5: suminf.    1.92106 (6) obj. -29.537 iterations 10
Cbc0038I Pass   6: suminf.    0.96283 (4) obj. -29.537 iterations 4
Cbc0038I Pass   7: suminf.    0.47564 (3) obj. -29.537 iterations 4
Cbc0038I Pass   8: suminf.    0.47564 (3) obj. -29.537 iterations 0
Cbc0038I Pass   9: suminf.    0.77935 (3) obj. -29.537 iterations 4
Cbc0038I Pass  10: suminf.    0.92022 (3) obj. -29.537 iterations 4
Cbc0038I Pass  11: suminf.    0.65790 (2) obj. -29.537 iterations 1
Cbc0038I Pass  12: suminf.    0.68938 (2) obj. -29.537 iterations 1
Cbc0038I Pass  13: suminf.    1.00126 (4) obj. -29.537 iterations 12
Cbc0038I Pass  14: suminf.    1.00126 (4) obj. -29.537 iterations 0
Cbc0038I Pass  15: suminf.    0.79296 (3) obj. -29.537 iterations 7
Cbc0038I Pass  16: suminf.    1.24939 (3) obj. -29.537 iterations 5
Cbc0038I Pass  17: suminf.    0.90530 (3) obj. -29.537 iterations 2
Cbc0038I Pass  18: suminf.    0.81686 (3) obj. -29.537 iterations 5
Cbc0038I Pass  19: suminf.    0.69592 (3) obj. -29.537 iterations 3
Cbc0038I Pass  20: suminf.    0.59309 (4) obj. -29.537 iterations 3
Cbc0038I Pass  21: suminf.    0.44140 (3) obj. -29.537 iterations 2
Cbc0038I Pass  22: suminf.    0.48763 (2) obj. -29.537 iterations 3
Cbc0038I Pass  23: suminf.    0.54424 (3) obj. -29.537 iterations 4
Cbc0038I Pass  24: suminf.    0.72966 (3) obj. -29.537 iterations 4
Cbc0038I Pass  25: suminf.    0.34834 (1) obj. -29.537 iterations 10
Cbc0038I Pass  26: suminf.    0.21250 (1) obj. -34.9044 iterations 3
Cbc0038I Pass  27: suminf.    0.34834 (1) obj. -29.537 iterations 1
Cbc0038I Pass  28: suminf.    0.75244 (6) obj. -29.537 iterations 6
Cbc0038I Pass  29: suminf.    0.70165 (3) obj. -29.537 iterations 2
Cbc0038I Pass  30: suminf.    0.65263 (3) obj. -29.537 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.2815 - took 0.03 seconds
Cbc0012I Integer solution of -26.281477 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0031I 9 added rows had average density of 12.666667
Cbc0013I At root node, 9 cuts changed objective from -58.836041 to -43.249557 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1105 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 642 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.28147674, took 2853 iterations and 16 nodes (0.23 seconds)
Cbc0032I Strong branching done 156 times (1369 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 6, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 41 (-22) columns and 325 (-324) elements
Clp1000I sum of infeasibilities 1.91603e-08 - average 4.9129e-10, 21 fixed columns
Coin0506I Presolve 18 (-21) rows, 20 (-21) columns and 71 (-254) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 2.1205124 - largest nonzero change 1.7890628e-05 ( 0.0013713985%) - largest zero change 2.2859777e-05
Clp0000I Optimal - objective value 29.391519
Clp0000I Optimal - objective value 29.391519
Coin0511I After Postsolve, objective 29.391519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7555668 - largest nonzero change 1.6323881e-05 ( 0.0013713985%) - largest zero change 2.757438e-05
Clp0000I Optimal - objective value 69.373219
Clp0000I Optimal - objective value 69.373219
Clp0000I Optimal - objective value 69.373219
Coin0511I After Postsolve, objective 69.373219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.37321896 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 329 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.963%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 2.03817
Cbc0038I Pass   1: suminf.    0.39657 (6) obj. -20.3295 iterations 7
Cbc0038I Pass   2: suminf.    0.39657 (6) obj. -20.3295 iterations 1
Cbc0038I Solution found of -4.59108
Cbc0038I Rounding solution of -19.8599 is better than previous of -4.59108

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -19.8599 to -25.4523 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.6534
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.86665 (14) obj. -28.6534 iterations 1
Cbc0038I Pass   4: suminf.    0.86665 (14) obj. -28.6534 iterations 0
Cbc0038I Pass   5: suminf.    0.03750 (1) obj. -30.6228 iterations 18
Cbc0038I Pass   6: suminf.    0.08734 (1) obj. -28.6534 iterations 1
Cbc0038I Pass   7: suminf.    1.29944 (6) obj. -28.6534 iterations 9
Cbc0038I Pass   8: suminf.    0.66744 (5) obj. -28.6534 iterations 1
Cbc0038I Pass   9: suminf.    0.22033 (2) obj. -28.6534 iterations 5
Cbc0038I Pass  10: suminf.    0.22033 (2) obj. -28.6534 iterations 0
Cbc0038I Pass  11: suminf.    0.38856 (2) obj. -28.6534 iterations 1
Cbc0038I Pass  12: suminf.    0.40125 (4) obj. -28.6534 iterations 8
Cbc0038I Pass  13: suminf.    0.31978 (3) obj. -29.8896 iterations 3
Cbc0038I Pass  14: suminf.    0.30430 (1) obj. -28.6534 iterations 4
Cbc0038I Pass  15: suminf.    0.42673 (2) obj. -28.6534 iterations 1
Cbc0038I Pass  16: suminf.    2.24577 (7) obj. -28.6534 iterations 5
Cbc0038I Pass  17: suminf.    0.61123 (4) obj. -28.6534 iterations 3
Cbc0038I Pass  18: suminf.    0.55180 (3) obj. -28.6534 iterations 1
Cbc0038I Pass  19: suminf.    0.22033 (2) obj. -28.6534 iterations 3
Cbc0038I Pass  20: suminf.    0.22033 (2) obj. -28.6534 iterations 0
Cbc0038I Pass  21: suminf.    0.38856 (2) obj. -28.6534 iterations 1
Cbc0038I Pass  22: suminf.    2.50802 (9) obj. -28.6534 iterations 9
Cbc0038I Pass  23: suminf.    2.50802 (9) obj. -28.6534 iterations 1
Cbc0038I Pass  24: suminf.    0.97352 (4) obj. -28.6534 iterations 9
Cbc0038I Pass  25: suminf.    0.19783 (2) obj. -32.3375 iterations 2
Cbc0038I Pass  26: suminf.    0.22033 (2) obj. -28.6534 iterations 2
Cbc0038I Pass  27: suminf.    0.22033 (2) obj. -28.6534 iterations 0
Cbc0038I Pass  28: suminf.    0.38856 (2) obj. -28.6534 iterations 1
Cbc0038I Pass  29: suminf.    1.91196 (8) obj. -28.6534 iterations 6
Cbc0038I Pass  30: suminf.    0.96808 (7) obj. -37.8067 iterations 2
Cbc0038I Pass  31: suminf.    0.56901 (6) obj. -33.7524 iterations 1
Cbc0038I Pass  32: suminf.    0.22033 (2) obj. -28.6534 iterations 6
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -25.4523 to -26.2815 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.4153
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.19204 (14) obj. -34.4153 iterations 0
Cbc0038I Pass  33: suminf.    1.19204 (14) obj. -34.4153 iterations 0
Cbc0038I Pass  34: suminf.    0.50863 (2) obj. -34.4153 iterations 21
Cbc0038I Pass  35: suminf.    0.33627 (2) obj. -34.4153 iterations 3
Cbc0038I Pass  36: suminf.    0.72844 (2) obj. -34.4153 iterations 2
Cbc0038I Pass  37: suminf.    1.82544 (7) obj. -34.4153 iterations 11
Cbc0038I Pass  38: suminf.    1.51128 (6) obj. -34.4153 iterations 3
Cbc0038I Pass  39: suminf.    0.48450 (4) obj. -34.4153 iterations 5
Cbc0038I Pass  40: suminf.    0.48450 (4) obj. -34.4153 iterations 0
Cbc0038I Pass  41: suminf.    0.88273 (3) obj. -34.4153 iterations 3
Cbc0038I Pass  42: suminf.    0.88273 (3) obj. -34.4153 iterations 0
Cbc0038I Pass  43: suminf.    0.94874 (3) obj. -34.4153 iterations 1
Cbc0038I Pass  44: suminf.    0.63230 (3) obj. -34.4153 iterations 1
Cbc0038I Pass  45: suminf.    1.23402 (6) obj. -34.4153 iterations 10
Cbc0038I Pass  46: suminf.    1.23402 (6) obj. -34.4153 iterations 1
Cbc0038I Pass  47: suminf.    0.92934 (8) obj. -34.4153 iterations 9
Cbc0038I Pass  48: suminf.    0.92934 (8) obj. -34.4153 iterations 0
Cbc0038I Pass  49: suminf.    0.56822 (4) obj. -34.4153 iterations 7
Cbc0038I Pass  50: suminf.    0.56822 (4) obj. -34.4153 iterations 0
Cbc0038I Pass  51: suminf.    0.87664 (4) obj. -34.4153 iterations 4
Cbc0038I Pass  52: suminf.    0.60637 (2) obj. -34.4153 iterations 3
Cbc0038I Pass  53: suminf.    0.16630 (2) obj. -36.5924 iterations 2
Cbc0038I Pass  54: suminf.    0.43844 (2) obj. -34.4153 iterations 1
Cbc0038I Pass  55: suminf.    1.11408 (5) obj. -34.4153 iterations 5
Cbc0038I Pass  56: suminf.    0.22174 (2) obj. -37.0553 iterations 5
Cbc0038I Pass  57: suminf.    0.54826 (2) obj. -34.4153 iterations 2
Cbc0038I Pass  58: suminf.    0.54826 (2) obj. -34.4153 iterations 0
Cbc0038I Pass  59: suminf.    0.28621 (2) obj. -34.4153 iterations 2
Cbc0038I Pass  60: suminf.    2.09260 (8) obj. -34.4153 iterations 12
Cbc0038I Pass  61: suminf.    1.39119 (7) obj. -34.4153 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -26.2815 - took 0.04 seconds
Cbc0012I Integer solution of -26.281477 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 12 rows 13 columns
Cbc0031I 18 added rows had average density of 11.277778
Cbc0013I At root node, 18 cuts changed objective from -57.462868 to -32.81381 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 788 row cuts average 4.5 elements, 5 column cuts (5 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 761 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 82 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 53 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 53 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.281477 best solution, best possible -32.81381 (1.48 seconds)
Cbc0010I After 7 nodes, 6 on tree, -26.281477 best solution, best possible -31.286595 (2.25 seconds)
Cbc0001I Search completed - best objective -26.28147674, took 2755 iterations and 22 nodes (2.66 seconds)
Cbc0032I Strong branching done 322 times (2940 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 8, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.74   (Wallclock seconds):       2.66

