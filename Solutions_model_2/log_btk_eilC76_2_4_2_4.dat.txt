Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 9.5532e-06 - average 6.87281e-08, 2 fixed columns
Coin0506I Presolve 135 (-4) rows, 74 (-2) columns and 410 (-12) elements
Clp0029I End of values pass after 74 iterations
Clp0014I Perturbing problem by 0.001% of 2.7214316 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Coin0511I After Postsolve, objective 32.299891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Coin0511I After Postsolve, objective 32.299891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.29989118 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 10.0053
Cbc0038I Solution found of 7.55339
Cbc0038I Relaxing continuous gives -1.86892
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -1.86892 to -2.55902 (0.06 seconds)
Cbc0038I Round again with cutoff of -5.5332
Cbc0038I Pass   1: suminf.    1.13306 (49) obj. -5.5332 iterations 32
Cbc0038I Pass   2: suminf.    1.31867 (8) obj. -5.5332 iterations 50
Cbc0038I Pass   3: suminf.    1.31867 (8) obj. -5.5332 iterations 0
Cbc0038I Pass   4: suminf.    2.49847 (7) obj. -5.5332 iterations 19
Cbc0038I Pass   5: suminf.    2.22363 (6) obj. -5.5332 iterations 1
Cbc0038I Pass   6: suminf.    1.82224 (7) obj. -5.5332 iterations 5
Cbc0038I Pass   7: suminf.    2.88618 (8) obj. -5.5332 iterations 8
Cbc0038I Pass   8: suminf.    2.84245 (9) obj. -5.5332 iterations 2
Cbc0038I Pass   9: suminf.    2.61527 (9) obj. -5.5332 iterations 7
Cbc0038I Pass  10: suminf.    2.43283 (8) obj. -5.5332 iterations 1
Cbc0038I Pass  11: suminf.    2.17973 (6) obj. -5.5332 iterations 11
Cbc0038I Pass  12: suminf.    2.07475 (5) obj. -5.5332 iterations 1
Cbc0038I Pass  13: suminf.    1.41042 (5) obj. -5.5332 iterations 2
Cbc0038I Pass  14: suminf.    2.09727 (7) obj. -5.5332 iterations 6
Cbc0038I Pass  15: suminf.    1.97513 (6) obj. -5.5332 iterations 1
Cbc0038I Pass  16: suminf.    1.93767 (5) obj. -5.5332 iterations 1
Cbc0038I Pass  17: suminf.    2.37249 (6) obj. -5.5332 iterations 2
Cbc0038I Pass  18: suminf.    3.18400 (12) obj. -5.5332 iterations 21
Cbc0038I Pass  19: suminf.    2.15819 (8) obj. -5.5332 iterations 9
Cbc0038I Pass  20: suminf.    1.77565 (9) obj. -5.5332 iterations 3
Cbc0038I Pass  21: suminf.    2.76487 (9) obj. -5.5332 iterations 21
Cbc0038I Pass  22: suminf.    2.16609 (8) obj. -5.5332 iterations 5
Cbc0038I Pass  23: suminf.    2.16609 (8) obj. -5.5332 iterations 0
Cbc0038I Pass  24: suminf.    3.07485 (8) obj. -5.5332 iterations 6
Cbc0038I Pass  25: suminf.    1.34567 (11) obj. -5.5332 iterations 10
Cbc0038I Pass  26: suminf.    1.22320 (13) obj. -5.5332 iterations 5
Cbc0038I Pass  27: suminf.    1.15133 (6) obj. -5.5332 iterations 20
Cbc0038I Pass  28: suminf.    0.99766 (5) obj. -5.5332 iterations 5
Cbc0038I Pass  29: suminf.    2.11883 (6) obj. -5.5332 iterations 10
Cbc0038I Pass  30: suminf.    2.05003 (5) obj. -5.5332 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -2.55902 to -2.9923 (0.12 seconds)
Cbc0038I Round again with cutoff of -10.8865
Cbc0038I Pass  30: suminf.    2.78840 (49) obj. -10.8865 iterations 0
Cbc0038I Pass  31: suminf.    1.63404 (8) obj. -10.8865 iterations 47
Cbc0038I Pass  32: suminf.    1.63404 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  33: suminf.    3.24666 (10) obj. -10.8865 iterations 18
Cbc0038I Pass  34: suminf.    2.86729 (8) obj. -10.8865 iterations 5
Cbc0038I Pass  35: suminf.    2.23597 (8) obj. -10.8865 iterations 5
Cbc0038I Pass  36: suminf.    2.23597 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  37: suminf.    1.95058 (6) obj. -10.8865 iterations 8
Cbc0038I Pass  38: suminf.    1.61056 (7) obj. -10.8865 iterations 2
Cbc0038I Pass  39: suminf.    1.14084 (8) obj. -10.8865 iterations 3
Cbc0038I Pass  40: suminf.    3.06784 (10) obj. -10.8865 iterations 16
Cbc0038I Pass  41: suminf.    2.62434 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  42: suminf.    2.36051 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  43: suminf.    2.41175 (7) obj. -10.8865 iterations 5
Cbc0038I Pass  44: suminf.    2.41175 (7) obj. -10.8865 iterations 1
Cbc0038I Pass  45: suminf.    2.51304 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  46: suminf.    2.46542 (7) obj. -10.8865 iterations 2
Cbc0038I Pass  47: suminf.    3.93992 (11) obj. -10.8865 iterations 20
Cbc0038I Pass  48: suminf.    2.15064 (11) obj. -10.8865 iterations 12
Cbc0038I Pass  49: suminf.    3.11126 (8) obj. -10.8865 iterations 21
Cbc0038I Pass  50: suminf.    3.11126 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  51: suminf.    3.26510 (8) obj. -10.8865 iterations 9
Cbc0038I Pass  52: suminf.    2.07211 (7) obj. -10.8865 iterations 8
Cbc0038I Pass  53: suminf.    1.79815 (7) obj. -10.8865 iterations 1
Cbc0038I Pass  54: suminf.    1.66520 (7) obj. -10.8865 iterations 4
Cbc0038I Pass  55: suminf.    2.57405 (9) obj. -10.8865 iterations 9
Cbc0038I Pass  56: suminf.    2.53943 (8) obj. -10.8865 iterations 3
Cbc0038I Pass  57: suminf.    3.29140 (8) obj. -10.8865 iterations 4
Cbc0038I Pass  58: suminf.    3.11126 (8) obj. -10.8865 iterations 4
Cbc0038I Pass  59: suminf.    3.26510 (8) obj. -10.8865 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -2.9923 - took 0.15 seconds
Cbc0012I Integer solution of -2.9923 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 90 rows 51 columns
Cbc0031I 28 added rows had average density of 42.392857
Cbc0013I At root node, 28 cuts changed objective from -32.299891 to -25.672048 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16433 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2223 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.9923 best solution, best possible -25.672048 (1.16 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 18 rows 17 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 6 rows 9 columns
Cbc0001I Search completed - best objective -2.9923, took 13067 iterations and 106 nodes (1.54 seconds)
Cbc0032I Strong branching done 1176 times (18455 iterations), fathomed 13 nodes and fixed 75 variables
Cbc0035I Maximum depth 19, 441 variables fixed on reduced cost
Total time (CPU seconds):       1.51   (Wallclock seconds):       1.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 117 (-35) columns and 1945 (-1358) elements
Clp1000I sum of infeasibilities 1.71926e-07 - average 1.62194e-09, 28 fixed columns
Coin0506I Presolve 81 (-25) rows, 89 (-28) columns and 1227 (-718) elements
Clp0006I 0  Obj 29.70626 Dual inf 3.9873328 (89)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.4068169 - largest nonzero change 1.9413101e-05 ( 0.0015380202%) - largest zero change 2.9235774e-05
Clp0000I Optimal - objective value 42.872002
Clp0000I Optimal - objective value 42.872002
Coin0511I After Postsolve, objective 42.872002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 42.872002
Clp0000I Optimal - objective value 42.872002
Clp0000I Optimal - objective value 42.872002
Clp0000I Optimal - objective value 42.872002
Coin0511I After Postsolve, objective 42.872002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.87200227 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 118 columns (118 integer (118 of which binary)) and 1950 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.483%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 4.73405
Cbc0038I Pass   1: suminf.    2.84715 (34) obj. -32.0882 iterations 16
Cbc0038I Pass   2: suminf.    2.84715 (34) obj. -32.0882 iterations 1
Cbc0038I Pass   3: suminf.    1.70828 (24) obj. -12.5307 iterations 10
Cbc0038I Solution found of 15.3168
Cbc0038I Rounding solution of 13.464 is better than previous of 15.3168

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 13.464 to 3.241 (0.03 seconds)
Cbc0038I Round again with cutoff of -0.939285
Cbc0038I Pass   4: suminf.    2.84715 (34) obj. -32.0882 iterations 0
Cbc0038I Pass   5: suminf.    2.84715 (34) obj. -32.0882 iterations 1
Cbc0038I Pass   6: suminf.    0.87174 (7) obj. -0.939285 iterations 31
Cbc0038I Pass   7: suminf.    0.69748 (7) obj. -2.33991 iterations 3
Cbc0038I Pass   8: suminf.    0.81544 (5) obj. -0.939285 iterations 13
Cbc0038I Pass   9: suminf.    0.64428 (3) obj. -0.939285 iterations 3
Cbc0038I Pass  10: suminf.    0.33582 (3) obj. -2.17313 iterations 3
Cbc0038I Pass  11: suminf.    0.32610 (2) obj. -0.939285 iterations 5
Cbc0038I Pass  12: suminf.    0.24491 (2) obj. -1.26404 iterations 3
Cbc0038I Pass  13: suminf.    1.30283 (12) obj. -1.46104 iterations 34
Cbc0038I Pass  14: suminf.    1.17479 (10) obj. -1.58323 iterations 8
Cbc0038I Pass  15: suminf.    1.29465 (6) obj. -0.939285 iterations 14
Cbc0038I Pass  16: suminf.    1.11781 (6) obj. -0.939285 iterations 3
Cbc0038I Pass  17: suminf.    1.29465 (6) obj. -0.939285 iterations 5
Cbc0038I Pass  18: suminf.    0.97529 (14) obj. -0.939285 iterations 30
Cbc0038I Pass  19: suminf.    0.78757 (8) obj. -1.34777 iterations 11
Cbc0038I Pass  20: suminf.    0.96790 (9) obj. -0.939285 iterations 17
Cbc0038I Pass  21: suminf.    0.96790 (9) obj. -0.939285 iterations 1
Cbc0038I Pass  22: suminf.    0.59127 (7) obj. -0.939285 iterations 14
Cbc0038I Pass  23: suminf.    0.53608 (7) obj. -0.939285 iterations 3
Cbc0038I Pass  24: suminf.    0.89429 (5) obj. -0.939285 iterations 13
Cbc0038I Pass  25: suminf.    0.61812 (5) obj. -0.939285 iterations 3
Cbc0038I Pass  26: suminf.    1.47552 (11) obj. -1.15447 iterations 19
Cbc0038I Pass  27: suminf.    1.36596 (11) obj. -0.939285 iterations 6
Cbc0038I Pass  28: suminf.    0.66769 (6) obj. -0.939285 iterations 20
Cbc0038I Pass  29: suminf.    0.58513 (5) obj. -1.03674 iterations 5
Cbc0038I Pass  30: suminf.    0.72741 (6) obj. -0.939285 iterations 7
Cbc0038I Pass  31: suminf.    2.14869 (12) obj. -0.939285 iterations 18
Cbc0038I Pass  32: suminf.    2.03958 (11) obj. -0.939285 iterations 6
Cbc0038I Pass  33: suminf.    1.39813 (7) obj. -0.939285 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 23 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 3.241 to -0.73146 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.46362
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.84715 (34) obj. -32.0882 iterations 0
Cbc0038I Pass  34: suminf.    2.84715 (34) obj. -32.0882 iterations 1
Cbc0038I Pass  35: suminf.    1.33084 (11) obj. -8.46362 iterations 33
Cbc0038I Pass  36: suminf.    0.78033 (9) obj. -8.65454 iterations 9
Cbc0038I Pass  37: suminf.    1.32791 (8) obj. -8.46362 iterations 21
Cbc0038I Pass  38: suminf.    0.76353 (8) obj. -8.46362 iterations 3
Cbc0038I Pass  39: suminf.    1.32791 (8) obj. -8.46362 iterations 5
Cbc0038I Pass  40: suminf.    2.02621 (13) obj. -8.46362 iterations 14
Cbc0038I Pass  41: suminf.    1.74184 (11) obj. -8.46362 iterations 3
Cbc0038I Pass  42: suminf.    1.62640 (10) obj. -8.46362 iterations 12
Cbc0038I Pass  43: suminf.    1.32714 (10) obj. -8.46362 iterations 3
Cbc0038I Pass  44: suminf.    1.69504 (9) obj. -8.46362 iterations 4
Cbc0038I Pass  45: suminf.    1.69504 (9) obj. -8.46362 iterations 0
Cbc0038I Pass  46: suminf.    1.67266 (9) obj. -8.46362 iterations 2
Cbc0038I Pass  47: suminf.    1.67266 (9) obj. -8.46362 iterations 0
Cbc0038I Pass  48: suminf.    2.37129 (15) obj. -8.46362 iterations 34
Cbc0038I Pass  49: suminf.    2.34282 (15) obj. -8.46362 iterations 3
Cbc0038I Pass  50: suminf.    1.69402 (13) obj. -8.46362 iterations 10
Cbc0038I Pass  51: suminf.    1.66244 (12) obj. -8.46362 iterations 2
Cbc0038I Pass  52: suminf.    1.71083 (12) obj. -8.46362 iterations 5
Cbc0038I Pass  53: suminf.    1.70757 (13) obj. -8.46362 iterations 2
Cbc0038I Pass  54: suminf.    2.26502 (11) obj. -8.46362 iterations 13
Cbc0038I Pass  55: suminf.    2.03575 (11) obj. -8.46362 iterations 3
Cbc0038I Pass  56: suminf.    2.14521 (12) obj. -8.46362 iterations 10
Cbc0038I Pass  57: suminf.    1.51163 (9) obj. -8.46362 iterations 11
Cbc0038I Pass  58: suminf.    1.11511 (9) obj. -8.46362 iterations 9
Cbc0038I Pass  59: suminf.    1.11511 (9) obj. -8.46362 iterations 1
Cbc0038I Pass  60: suminf.    1.13691 (9) obj. -8.46362 iterations 3
Cbc0038I Pass  61: suminf.    1.13691 (9) obj. -8.46362 iterations 0
Cbc0038I Pass  62: suminf.    1.11511 (9) obj. -8.46362 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -0.73146 to -1.85796 (0.07 seconds)
Cbc0038I Round again with cutoff of -17.4928
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.84715 (34) obj. -32.0882 iterations 0
Cbc0038I Pass  63: suminf.    2.84715 (34) obj. -32.0882 iterations 1
Cbc0038I Pass  64: suminf.    1.86878 (24) obj. -17.4928 iterations 11
Cbc0038I Pass  65: suminf.    1.70869 (24) obj. -18.7735 iterations 1
Cbc0038I Pass  66: suminf.    1.87941 (14) obj. -17.4928 iterations 27
Cbc0038I Pass  67: suminf.    1.83528 (14) obj. -17.4928 iterations 2
Cbc0038I Pass  68: suminf.    1.89813 (14) obj. -17.4928 iterations 7
Cbc0038I Pass  69: suminf.    1.89813 (14) obj. -17.4928 iterations 3
Cbc0038I Pass  70: suminf.    1.85709 (14) obj. -17.4928 iterations 6
Cbc0038I Pass  71: suminf.    1.85709 (14) obj. -17.4928 iterations 3
Cbc0038I Pass  72: suminf.    2.98680 (20) obj. -17.4928 iterations 11
Cbc0038I Pass  73: suminf.    2.04288 (17) obj. -17.4928 iterations 7
Cbc0038I Pass  74: suminf.    2.30613 (16) obj. -17.4928 iterations 15
Cbc0038I Pass  75: suminf.    2.28644 (16) obj. -17.4928 iterations 6
Cbc0038I Pass  76: suminf.    2.19410 (16) obj. -17.4928 iterations 6
Cbc0038I Pass  77: suminf.    2.18241 (16) obj. -17.4928 iterations 6
Cbc0038I Pass  78: suminf.    2.30613 (16) obj. -17.4928 iterations 8
Cbc0038I Pass  79: suminf.    2.04343 (17) obj. -17.4928 iterations 26
Cbc0038I Pass  80: suminf.    1.88177 (16) obj. -17.6767 iterations 5
Cbc0038I Pass  81: suminf.    2.06570 (16) obj. -17.4928 iterations 10
Cbc0038I Pass  82: suminf.    1.85251 (16) obj. -17.706 iterations 1
Cbc0038I Pass  83: suminf.    2.06570 (16) obj. -17.4928 iterations 5
Cbc0038I Pass  84: suminf.    2.70063 (21) obj. -17.4928 iterations 21
Cbc0038I Pass  85: suminf.    2.26648 (21) obj. -17.4928 iterations 5
Cbc0038I Pass  86: suminf.    2.10177 (15) obj. -17.4928 iterations 21
Cbc0038I Pass  87: suminf.    2.10177 (15) obj. -17.4928 iterations 2
Cbc0038I Pass  88: suminf.    2.18322 (15) obj. -17.4928 iterations 4
Cbc0038I Pass  89: suminf.    2.18322 (15) obj. -17.4928 iterations 2
Cbc0038I Pass  90: suminf.    2.10177 (15) obj. -17.4928 iterations 3
Cbc0038I Pass  91: suminf.    2.31280 (21) obj. -17.4928 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -1.85796 - took 0.09 seconds
Cbc0012I Integer solution of -1.85796 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 107 rows 118 columns, reduced to 8 rows 8 columns
Cbc0031I 56 added rows had average density of 37.696429
Cbc0013I At root node, 56 cuts changed objective from -38.560955 to -10.816403 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10967 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1969 row cuts average 112.7 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 517 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1731 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 393 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 168 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.563 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1.85796 best solution, best possible -10.816403 (2.31 seconds)
Cbc0010I After 5 nodes, 6 on tree, -1.85796 best solution, best possible -10.816403 (3.06 seconds)
Cbc0016I Integer solution of -2.21978 found by strong branching after 6250 iterations and 25 nodes (3.80 seconds)
Cbc0010I After 25 nodes, 11 on tree, -2.21978 best solution, best possible -10.816403 (3.80 seconds)
Cbc0016I Integer solution of -2.46223 found by strong branching after 6373 iterations and 30 nodes (4.00 seconds)
Cbc0038I Full problem 107 rows 118 columns, reduced to 32 rows 44 columns
Cbc0012I Integer solution of -2.9923 found by RINS after 6770 iterations and 41 nodes (4.40 seconds)
Cbc0010I After 43 nodes, 13 on tree, -2.9923 best solution, best possible -10.816403 (4.50 seconds)
Cbc0010I After 71 nodes, 3 on tree, -2.9923 best solution, best possible -10.816403 (5.21 seconds)
Cbc0001I Search completed - best objective -2.9923, took 8474 iterations and 81 nodes (5.46 seconds)
Cbc0032I Strong branching done 1018 times (18848 iterations), fathomed 9 nodes and fixed 19 variables
Cbc0035I Maximum depth 21, 182 variables fixed on reduced cost
Total time (CPU seconds):       3.86   (Wallclock seconds):       5.48

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 9.5532e-06 - average 6.87281e-08, 2 fixed columns
Coin0506I Presolve 135 (-4) rows, 74 (-2) columns and 410 (-12) elements
Clp0029I End of values pass after 74 iterations
Clp0014I Perturbing problem by 0.001% of 2.7214316 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Coin0511I After Postsolve, objective 32.299891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Coin0511I After Postsolve, objective 32.299891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.29989118 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 10.0053
Cbc0038I Solution found of 7.55339
Cbc0038I Relaxing continuous gives -1.86892
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -1.86892 to -2.55902 (0.06 seconds)
Cbc0038I Round again with cutoff of -5.5332
Cbc0038I Pass   1: suminf.    1.13306 (49) obj. -5.5332 iterations 32
Cbc0038I Pass   2: suminf.    1.31867 (8) obj. -5.5332 iterations 50
Cbc0038I Pass   3: suminf.    1.31867 (8) obj. -5.5332 iterations 0
Cbc0038I Pass   4: suminf.    2.49847 (7) obj. -5.5332 iterations 19
Cbc0038I Pass   5: suminf.    2.22363 (6) obj. -5.5332 iterations 1
Cbc0038I Pass   6: suminf.    1.82224 (7) obj. -5.5332 iterations 5
Cbc0038I Pass   7: suminf.    2.88618 (8) obj. -5.5332 iterations 8
Cbc0038I Pass   8: suminf.    2.84245 (9) obj. -5.5332 iterations 2
Cbc0038I Pass   9: suminf.    2.61527 (9) obj. -5.5332 iterations 7
Cbc0038I Pass  10: suminf.    2.43283 (8) obj. -5.5332 iterations 1
Cbc0038I Pass  11: suminf.    2.17973 (6) obj. -5.5332 iterations 11
Cbc0038I Pass  12: suminf.    2.07475 (5) obj. -5.5332 iterations 1
Cbc0038I Pass  13: suminf.    1.41042 (5) obj. -5.5332 iterations 2
Cbc0038I Pass  14: suminf.    2.09727 (7) obj. -5.5332 iterations 6
Cbc0038I Pass  15: suminf.    1.97513 (6) obj. -5.5332 iterations 1
Cbc0038I Pass  16: suminf.    1.93767 (5) obj. -5.5332 iterations 1
Cbc0038I Pass  17: suminf.    2.37249 (6) obj. -5.5332 iterations 2
Cbc0038I Pass  18: suminf.    3.18400 (12) obj. -5.5332 iterations 21
Cbc0038I Pass  19: suminf.    2.15819 (8) obj. -5.5332 iterations 9
Cbc0038I Pass  20: suminf.    1.77565 (9) obj. -5.5332 iterations 3
Cbc0038I Pass  21: suminf.    2.76487 (9) obj. -5.5332 iterations 21
Cbc0038I Pass  22: suminf.    2.16609 (8) obj. -5.5332 iterations 5
Cbc0038I Pass  23: suminf.    2.16609 (8) obj. -5.5332 iterations 0
Cbc0038I Pass  24: suminf.    3.07485 (8) obj. -5.5332 iterations 6
Cbc0038I Pass  25: suminf.    1.34567 (11) obj. -5.5332 iterations 10
Cbc0038I Pass  26: suminf.    1.22320 (13) obj. -5.5332 iterations 5
Cbc0038I Pass  27: suminf.    1.15133 (6) obj. -5.5332 iterations 20
Cbc0038I Pass  28: suminf.    0.99766 (5) obj. -5.5332 iterations 5
Cbc0038I Pass  29: suminf.    2.11883 (6) obj. -5.5332 iterations 10
Cbc0038I Pass  30: suminf.    2.05003 (5) obj. -5.5332 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -2.55902 to -2.9923 (0.13 seconds)
Cbc0038I Round again with cutoff of -10.8865
Cbc0038I Pass  30: suminf.    2.78840 (49) obj. -10.8865 iterations 0
Cbc0038I Pass  31: suminf.    1.63404 (8) obj. -10.8865 iterations 47
Cbc0038I Pass  32: suminf.    1.63404 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  33: suminf.    3.24666 (10) obj. -10.8865 iterations 18
Cbc0038I Pass  34: suminf.    2.86729 (8) obj. -10.8865 iterations 5
Cbc0038I Pass  35: suminf.    2.23597 (8) obj. -10.8865 iterations 5
Cbc0038I Pass  36: suminf.    2.23597 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  37: suminf.    1.95058 (6) obj. -10.8865 iterations 8
Cbc0038I Pass  38: suminf.    1.61056 (7) obj. -10.8865 iterations 2
Cbc0038I Pass  39: suminf.    1.14084 (8) obj. -10.8865 iterations 3
Cbc0038I Pass  40: suminf.    3.06784 (10) obj. -10.8865 iterations 16
Cbc0038I Pass  41: suminf.    2.62434 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  42: suminf.    2.36051 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  43: suminf.    2.41175 (7) obj. -10.8865 iterations 5
Cbc0038I Pass  44: suminf.    2.41175 (7) obj. -10.8865 iterations 1
Cbc0038I Pass  45: suminf.    2.51304 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  46: suminf.    2.46542 (7) obj. -10.8865 iterations 2
Cbc0038I Pass  47: suminf.    3.93992 (11) obj. -10.8865 iterations 20
Cbc0038I Pass  48: suminf.    2.15064 (11) obj. -10.8865 iterations 12
Cbc0038I Pass  49: suminf.    3.11126 (8) obj. -10.8865 iterations 21
Cbc0038I Pass  50: suminf.    3.11126 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  51: suminf.    3.26510 (8) obj. -10.8865 iterations 9
Cbc0038I Pass  52: suminf.    2.07211 (7) obj. -10.8865 iterations 8
Cbc0038I Pass  53: suminf.    1.79815 (7) obj. -10.8865 iterations 1
Cbc0038I Pass  54: suminf.    1.66520 (7) obj. -10.8865 iterations 4
Cbc0038I Pass  55: suminf.    2.57405 (9) obj. -10.8865 iterations 9
Cbc0038I Pass  56: suminf.    2.53943 (8) obj. -10.8865 iterations 3
Cbc0038I Pass  57: suminf.    3.29140 (8) obj. -10.8865 iterations 4
Cbc0038I Pass  58: suminf.    3.11126 (8) obj. -10.8865 iterations 4
Cbc0038I Pass  59: suminf.    3.26510 (8) obj. -10.8865 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -2.9923 - took 0.16 seconds
Cbc0012I Integer solution of -2.9923 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 90 rows 51 columns
Cbc0031I 28 added rows had average density of 42.392857
Cbc0013I At root node, 28 cuts changed objective from -32.299891 to -25.672048 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16433 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2223 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.9923 best solution, best possible -25.672048 (1.30 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 18 rows 17 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 6 rows 9 columns
Cbc0001I Search completed - best objective -2.9923, took 13067 iterations and 106 nodes (1.73 seconds)
Cbc0032I Strong branching done 1176 times (18455 iterations), fathomed 13 nodes and fixed 75 variables
Cbc0035I Maximum depth 19, 441 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       1.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 117 (-36) columns and 1945 (-1359) elements
Clp1000I sum of infeasibilities 1.71926e-07 - average 1.62194e-09, 28 fixed columns
Coin0506I Presolve 81 (-25) rows, 89 (-28) columns and 1227 (-718) elements
Clp0006I 0  Obj 29.70626 Dual inf 3.9873328 (89)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.4068169 - largest nonzero change 1.9413101e-05 ( 0.0015380202%) - largest zero change 2.9235774e-05
Clp0000I Optimal - objective value 42.872002
Clp0000I Optimal - objective value 42.872002
Coin0511I After Postsolve, objective 42.872002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 42.872002
Clp0000I Optimal - objective value 42.872002
Clp0000I Optimal - objective value 42.872002
Clp0000I Optimal - objective value 42.872002
Coin0511I After Postsolve, objective 42.872002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.87200227 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 118 columns (118 integer (118 of which binary)) and 1950 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.483%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 4.73405
Cbc0038I Pass   1: suminf.    2.84715 (34) obj. -32.0882 iterations 16
Cbc0038I Pass   2: suminf.    2.84715 (34) obj. -32.0882 iterations 1
Cbc0038I Pass   3: suminf.    1.70828 (24) obj. -12.5307 iterations 10
Cbc0038I Solution found of 15.3168
Cbc0038I Rounding solution of 13.464 is better than previous of 15.3168

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 13.464 to 3.241 (0.03 seconds)
Cbc0038I Round again with cutoff of -0.939285
Cbc0038I Pass   4: suminf.    2.84715 (34) obj. -32.0882 iterations 0
Cbc0038I Pass   5: suminf.    2.84715 (34) obj. -32.0882 iterations 1
Cbc0038I Pass   6: suminf.    0.87174 (7) obj. -0.939285 iterations 31
Cbc0038I Pass   7: suminf.    0.69748 (7) obj. -2.33991 iterations 3
Cbc0038I Pass   8: suminf.    0.81544 (5) obj. -0.939285 iterations 13
Cbc0038I Pass   9: suminf.    0.64428 (3) obj. -0.939285 iterations 3
Cbc0038I Pass  10: suminf.    0.33582 (3) obj. -2.17313 iterations 3
Cbc0038I Pass  11: suminf.    0.32610 (2) obj. -0.939285 iterations 5
Cbc0038I Pass  12: suminf.    0.24491 (2) obj. -1.26404 iterations 3
Cbc0038I Pass  13: suminf.    1.30283 (12) obj. -1.46104 iterations 34
Cbc0038I Pass  14: suminf.    1.17479 (10) obj. -1.58323 iterations 8
Cbc0038I Pass  15: suminf.    1.29465 (6) obj. -0.939285 iterations 14
Cbc0038I Pass  16: suminf.    1.11781 (6) obj. -0.939285 iterations 3
Cbc0038I Pass  17: suminf.    1.29465 (6) obj. -0.939285 iterations 5
Cbc0038I Pass  18: suminf.    0.97529 (14) obj. -0.939285 iterations 30
Cbc0038I Pass  19: suminf.    0.78757 (8) obj. -1.34777 iterations 11
Cbc0038I Pass  20: suminf.    0.96790 (9) obj. -0.939285 iterations 17
Cbc0038I Pass  21: suminf.    0.96790 (9) obj. -0.939285 iterations 1
Cbc0038I Pass  22: suminf.    0.59127 (7) obj. -0.939285 iterations 14
Cbc0038I Pass  23: suminf.    0.53608 (7) obj. -0.939285 iterations 3
Cbc0038I Pass  24: suminf.    0.89429 (5) obj. -0.939285 iterations 13
Cbc0038I Pass  25: suminf.    0.61812 (5) obj. -0.939285 iterations 3
Cbc0038I Pass  26: suminf.    1.47552 (11) obj. -1.15447 iterations 19
Cbc0038I Pass  27: suminf.    1.36596 (11) obj. -0.939285 iterations 6
Cbc0038I Pass  28: suminf.    0.66769 (6) obj. -0.939285 iterations 20
Cbc0038I Pass  29: suminf.    0.58513 (5) obj. -1.03674 iterations 5
Cbc0038I Pass  30: suminf.    0.72741 (6) obj. -0.939285 iterations 7
Cbc0038I Pass  31: suminf.    2.14869 (12) obj. -0.939285 iterations 18
Cbc0038I Pass  32: suminf.    2.03958 (11) obj. -0.939285 iterations 6
Cbc0038I Pass  33: suminf.    1.39813 (7) obj. -0.939285 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 23 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 3.241 to -0.73146 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.46362
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.84715 (34) obj. -32.0882 iterations 0
Cbc0038I Pass  34: suminf.    2.84715 (34) obj. -32.0882 iterations 1
Cbc0038I Pass  35: suminf.    1.33084 (11) obj. -8.46362 iterations 33
Cbc0038I Pass  36: suminf.    0.78033 (9) obj. -8.65454 iterations 9
Cbc0038I Pass  37: suminf.    1.32791 (8) obj. -8.46362 iterations 21
Cbc0038I Pass  38: suminf.    0.76353 (8) obj. -8.46362 iterations 3
Cbc0038I Pass  39: suminf.    1.32791 (8) obj. -8.46362 iterations 5
Cbc0038I Pass  40: suminf.    2.02621 (13) obj. -8.46362 iterations 14
Cbc0038I Pass  41: suminf.    1.74184 (11) obj. -8.46362 iterations 3
Cbc0038I Pass  42: suminf.    1.62640 (10) obj. -8.46362 iterations 12
Cbc0038I Pass  43: suminf.    1.32714 (10) obj. -8.46362 iterations 3
Cbc0038I Pass  44: suminf.    1.69504 (9) obj. -8.46362 iterations 4
Cbc0038I Pass  45: suminf.    1.69504 (9) obj. -8.46362 iterations 0
Cbc0038I Pass  46: suminf.    1.67266 (9) obj. -8.46362 iterations 2
Cbc0038I Pass  47: suminf.    1.67266 (9) obj. -8.46362 iterations 0
Cbc0038I Pass  48: suminf.    2.37129 (15) obj. -8.46362 iterations 34
Cbc0038I Pass  49: suminf.    2.34282 (15) obj. -8.46362 iterations 3
Cbc0038I Pass  50: suminf.    1.69402 (13) obj. -8.46362 iterations 10
Cbc0038I Pass  51: suminf.    1.66244 (12) obj. -8.46362 iterations 2
Cbc0038I Pass  52: suminf.    1.71083 (12) obj. -8.46362 iterations 5
Cbc0038I Pass  53: suminf.    1.70757 (13) obj. -8.46362 iterations 2
Cbc0038I Pass  54: suminf.    2.26502 (11) obj. -8.46362 iterations 13
Cbc0038I Pass  55: suminf.    2.03575 (11) obj. -8.46362 iterations 3
Cbc0038I Pass  56: suminf.    2.14521 (12) obj. -8.46362 iterations 10
Cbc0038I Pass  57: suminf.    1.51163 (9) obj. -8.46362 iterations 11
Cbc0038I Pass  58: suminf.    1.11511 (9) obj. -8.46362 iterations 9
Cbc0038I Pass  59: suminf.    1.11511 (9) obj. -8.46362 iterations 1
Cbc0038I Pass  60: suminf.    1.13691 (9) obj. -8.46362 iterations 3
Cbc0038I Pass  61: suminf.    1.13691 (9) obj. -8.46362 iterations 0
Cbc0038I Pass  62: suminf.    1.11511 (9) obj. -8.46362 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -0.73146 to -1.85796 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.4928
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.84715 (34) obj. -32.0882 iterations 0
Cbc0038I Pass  63: suminf.    2.84715 (34) obj. -32.0882 iterations 1
Cbc0038I Pass  64: suminf.    1.86878 (24) obj. -17.4928 iterations 11
Cbc0038I Pass  65: suminf.    1.70869 (24) obj. -18.7735 iterations 1
Cbc0038I Pass  66: suminf.    1.87941 (14) obj. -17.4928 iterations 27
Cbc0038I Pass  67: suminf.    1.83528 (14) obj. -17.4928 iterations 2
Cbc0038I Pass  68: suminf.    1.89813 (14) obj. -17.4928 iterations 7
Cbc0038I Pass  69: suminf.    1.89813 (14) obj. -17.4928 iterations 3
Cbc0038I Pass  70: suminf.    1.85709 (14) obj. -17.4928 iterations 6
Cbc0038I Pass  71: suminf.    1.85709 (14) obj. -17.4928 iterations 3
Cbc0038I Pass  72: suminf.    2.98680 (20) obj. -17.4928 iterations 11
Cbc0038I Pass  73: suminf.    2.04288 (17) obj. -17.4928 iterations 7
Cbc0038I Pass  74: suminf.    2.30613 (16) obj. -17.4928 iterations 15
Cbc0038I Pass  75: suminf.    2.28644 (16) obj. -17.4928 iterations 6
Cbc0038I Pass  76: suminf.    2.19410 (16) obj. -17.4928 iterations 6
Cbc0038I Pass  77: suminf.    2.18241 (16) obj. -17.4928 iterations 6
Cbc0038I Pass  78: suminf.    2.30613 (16) obj. -17.4928 iterations 8
Cbc0038I Pass  79: suminf.    2.04343 (17) obj. -17.4928 iterations 26
Cbc0038I Pass  80: suminf.    1.88177 (16) obj. -17.6767 iterations 5
Cbc0038I Pass  81: suminf.    2.06570 (16) obj. -17.4928 iterations 10
Cbc0038I Pass  82: suminf.    1.85251 (16) obj. -17.706 iterations 1
Cbc0038I Pass  83: suminf.    2.06570 (16) obj. -17.4928 iterations 5
Cbc0038I Pass  84: suminf.    2.70063 (21) obj. -17.4928 iterations 21
Cbc0038I Pass  85: suminf.    2.26648 (21) obj. -17.4928 iterations 5
Cbc0038I Pass  86: suminf.    2.10177 (15) obj. -17.4928 iterations 21
Cbc0038I Pass  87: suminf.    2.10177 (15) obj. -17.4928 iterations 2
Cbc0038I Pass  88: suminf.    2.18322 (15) obj. -17.4928 iterations 4
Cbc0038I Pass  89: suminf.    2.18322 (15) obj. -17.4928 iterations 2
Cbc0038I Pass  90: suminf.    2.10177 (15) obj. -17.4928 iterations 3
Cbc0038I Pass  91: suminf.    2.31280 (21) obj. -17.4928 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -1.85796 - took 0.09 seconds
Cbc0012I Integer solution of -1.85796 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 107 rows 118 columns, reduced to 8 rows 8 columns
Cbc0031I 56 added rows had average density of 37.696429
Cbc0013I At root node, 56 cuts changed objective from -38.560955 to -10.816403 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10967 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1969 row cuts average 112.7 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 517 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1731 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 393 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 168 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.617 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1.85796 best solution, best possible -10.816403 (2.57 seconds)
Cbc0010I After 4 nodes, 5 on tree, -1.85796 best solution, best possible -10.816403 (3.32 seconds)
Cbc0010I After 20 nodes, 12 on tree, -1.85796 best solution, best possible -10.816403 (4.07 seconds)
Cbc0016I Integer solution of -2.21978 found by strong branching after 6250 iterations and 25 nodes (4.35 seconds)
Cbc0016I Integer solution of -2.46223 found by strong branching after 6373 iterations and 30 nodes (4.60 seconds)
Cbc0010I After 38 nodes, 11 on tree, -2.46223 best solution, best possible -10.816403 (4.79 seconds)
Cbc0038I Full problem 107 rows 118 columns, reduced to 32 rows 44 columns
Cbc0012I Integer solution of -2.9923 found by RINS after 6770 iterations and 41 nodes (5.10 seconds)
Cbc0010I After 52 nodes, 14 on tree, -2.9923 best solution, best possible -10.816403 (5.53 seconds)
Cbc0010I After 73 nodes, 5 on tree, -2.9923 best solution, best possible -10.816403 (6.28 seconds)
Cbc0001I Search completed - best objective -2.9923, took 8474 iterations and 81 nodes (6.40 seconds)
Cbc0032I Strong branching done 1018 times (18848 iterations), fathomed 9 nodes and fixed 19 variables
Cbc0035I Maximum depth 21, 182 variables fixed on reduced cost
Total time (CPU seconds):       4.43   (Wallclock seconds):       6.42

