Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 6.42408e-05 - average 4.62164e-07, 27 fixed columns
Coin0506I Presolve 85 (-54) rows, 48 (-28) columns and 258 (-164) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.1593228 - largest nonzero change 0 ( 0%) - largest zero change 1.574217e-05
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Coin0511I After Postsolve, objective 62.469549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21944924 - largest nonzero change 0 ( 0%) - largest zero change 2.9603331e-05
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Coin0511I After Postsolve, objective 62.469549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.46954917 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.677%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.12801
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.9297 iterations 38
Cbc0038I Solution found of -24.9297
Cbc0038I Relaxing continuous gives -24.9297
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 51 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -24.9297 to -32.2358 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.2416
Cbc0038I Pass   2: suminf.    0.50486 (2) obj. -35.2416 iterations 4
Cbc0038I Pass   3: suminf.    0.27820 (2) obj. -35.2416 iterations 1
Cbc0038I Pass   4: suminf.    0.53524 (2) obj. -35.2416 iterations 6
Cbc0038I Pass   5: suminf.    2.58853 (12) obj. -35.2416 iterations 17
Cbc0038I Pass   6: suminf.    1.31384 (4) obj. -35.2416 iterations 12
Cbc0038I Pass   7: suminf.    1.27856 (3) obj. -35.2416 iterations 6
Cbc0038I Pass   8: suminf.    0.16571 (2) obj. -35.2416 iterations 6
Cbc0038I Pass   9: suminf.    0.60807 (2) obj. -35.2416 iterations 6
Cbc0038I Pass  10: suminf.    0.38605 (1) obj. -35.2416 iterations 1
Cbc0038I Pass  11: suminf.    1.33064 (3) obj. -35.2416 iterations 17
Cbc0038I Pass  12: suminf.    0.51561 (3) obj. -35.2416 iterations 14
Cbc0038I Pass  13: suminf.    0.27820 (2) obj. -35.2416 iterations 3
Cbc0038I Pass  14: suminf.    0.53524 (2) obj. -35.2416 iterations 6
Cbc0038I Pass  15: suminf.    0.50486 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  16: suminf.    4.65255 (12) obj. -35.2416 iterations 38
Cbc0038I Pass  17: suminf.    1.33999 (5) obj. -35.2416 iterations 24
Cbc0038I Pass  18: suminf.    1.14421 (4) obj. -35.2416 iterations 1
Cbc0038I Pass  19: suminf.    0.84563 (3) obj. -35.2416 iterations 4
Cbc0038I Pass  20: suminf.    0.60806 (2) obj. -35.2416 iterations 2
Cbc0038I Pass  21: suminf.    0.80700 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  22: suminf.    1.78290 (6) obj. -35.2416 iterations 15
Cbc0038I Pass  23: suminf.    1.48896 (4) obj. -35.2416 iterations 8
Cbc0038I Pass  24: suminf.    0.91161 (3) obj. -35.2416 iterations 1
Cbc0038I Pass  25: suminf.    0.73576 (2) obj. -35.2416 iterations 3
Cbc0038I Pass  26: suminf.    0.60806 (2) obj. -35.2416 iterations 2
Cbc0038I Pass  27: suminf.    0.60806 (2) obj. -35.2416 iterations 0
Cbc0038I Pass  28: suminf.    0.80700 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  29: suminf.    2.13567 (7) obj. -35.2416 iterations 12
Cbc0038I Pass  30: suminf.    0.56964 (2) obj. -35.2416 iterations 13
Cbc0038I Pass  31: suminf.    0.17209 (3) obj. -35.2416 iterations 2
Cbc0038I Rounding solution of -32.6154 is better than previous of -32.2358

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -40.6517
Cbc0038I Pass  31: suminf.    0.79882 (4) obj. -40.6517 iterations 1
Cbc0038I Pass  32: suminf.    0.64444 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  33: suminf.    0.83832 (3) obj. -40.6517 iterations 5
Cbc0038I Pass  34: suminf.    1.74475 (9) obj. -40.6517 iterations 24
Cbc0038I Pass  35: suminf.    2.11922 (7) obj. -40.6517 iterations 25
Cbc0038I Pass  36: suminf.    0.63707 (3) obj. -40.6517 iterations 17
Cbc0038I Pass  37: suminf.    0.69698 (3) obj. -40.6517 iterations 2
Cbc0038I Pass  38: suminf.    2.71777 (10) obj. -40.6517 iterations 15
Cbc0038I Pass  39: suminf.    0.99230 (4) obj. -40.6517 iterations 16
Cbc0038I Pass  40: suminf.    0.90774 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  41: suminf.    1.31833 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  42: suminf.    1.93043 (6) obj. -40.6517 iterations 9
Cbc0038I Pass  43: suminf.    0.86621 (4) obj. -40.6517 iterations 8
Cbc0038I Pass  44: suminf.    0.60784 (3) obj. -40.6517 iterations 1
Cbc0038I Pass  45: suminf.    0.86026 (4) obj. -40.6517 iterations 5
Cbc0038I Pass  46: suminf.    0.79047 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  47: suminf.    1.53411 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  48: suminf.    2.55882 (7) obj. -40.6517 iterations 6
Cbc0038I Pass  49: suminf.    1.34427 (6) obj. -40.6517 iterations 12
Cbc0038I Pass  50: suminf.    0.53304 (3) obj. -40.6517 iterations 4
Cbc0038I Pass  51: suminf.    0.91645 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  52: suminf.    0.58121 (2) obj. -40.6517 iterations 2
Cbc0038I Pass  53: suminf.    3.67281 (14) obj. -40.6517 iterations 24
Cbc0038I Pass  54: suminf.    1.68575 (6) obj. -40.6517 iterations 15
Cbc0038I Pass  55: suminf.    1.42220 (6) obj. -40.6517 iterations 3
Cbc0038I Pass  56: suminf.    0.73032 (3) obj. -40.6517 iterations 4
Cbc0038I Pass  57: suminf.    0.76007 (3) obj. -40.6517 iterations 2
Cbc0038I Pass  58: suminf.    2.25404 (8) obj. -40.6517 iterations 13
Cbc0038I Pass  59: suminf.    1.89348 (6) obj. -40.6517 iterations 5
Cbc0038I Pass  60: suminf.    0.75455 (4) obj. -40.6517 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 82 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -32.6154 - took 0.06 seconds
Cbc0012I Integer solution of -32.61543 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 53 rows 30 columns
Cbc0031I 21 added rows had average density of 38
Cbc0013I At root node, 21 cuts changed objective from -62.292031 to -51.048936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6318 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1175 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0001I Search completed - best objective -32.61543, took 5747 iterations and 24 nodes (0.63 seconds)
Cbc0032I Strong branching done 404 times (8915 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 8, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.62   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-43) rows, 122 (-30) columns and 2126 (-1177) elements
Clp1000I sum of infeasibilities 3.59624e-08 - average 3.23986e-10, 46 fixed columns
Coin0506I Presolve 68 (-43) rows, 76 (-46) columns and 840 (-1286) elements
Clp0006I 0  Obj 68.122433 Dual inf 3.2107603 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 7.498014 - largest nonzero change 1.4786697e-05 ( 0.00066534609%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 80.726455
Clp0000I Optimal - objective value 80.726455
Coin0511I After Postsolve, objective 80.726455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 80.726455 Dual inf 2.1529508 (1)
Clp0014I Perturbing problem by 0.001% of 1.3994976 - largest nonzero change 1.5034331e-05 ( 0.0009598595%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 81.38855
Clp0000I Optimal - objective value 81.38855
Clp0000I Optimal - objective value 81.38855
Coin0511I After Postsolve, objective 81.38855, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.38855018 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 123 columns (123 integer (123 of which binary)) and 2151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.685%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 4.62096
Cbc0038I Pass   1: suminf.    0.08395 (4) obj. -36.5059 iterations 15
Cbc0038I Pass   2: suminf.    0.08395 (4) obj. -36.5059 iterations 0
Cbc0038I Solution found of -22.8128
Cbc0038I Rounding solution of -25.3979 is better than previous of -22.8128

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -29.5378
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.08395 (4) obj. -36.5059 iterations 0
Cbc0038I Pass   4: suminf.    0.08395 (4) obj. -36.5059 iterations 0
Cbc0038I Pass   5: suminf.    0.34348 (1) obj. -29.5378 iterations 5
Cbc0038I Pass   6: suminf.    0.43243 (1) obj. -31.2793 iterations 1
Cbc0038I Pass   7: suminf.    1.20232 (25) obj. -30.5708 iterations 24
Cbc0038I Pass   8: suminf.    1.20232 (25) obj. -30.5708 iterations 4
Cbc0038I Pass   9: suminf.    1.41873 (31) obj. -29.5378 iterations 24
Cbc0038I Pass  10: suminf.    1.41873 (31) obj. -29.5378 iterations 0
Cbc0038I Pass  11: suminf.    2.71322 (25) obj. -29.5378 iterations 15
Cbc0038I Pass  12: suminf.    2.14861 (22) obj. -29.5378 iterations 4
Cbc0038I Pass  13: suminf.    1.28759 (14) obj. -29.5378 iterations 23
Cbc0038I Pass  14: suminf.    1.27342 (13) obj. -29.5378 iterations 2
Cbc0038I Pass  15: suminf.    2.72431 (15) obj. -29.5378 iterations 7
Cbc0038I Pass  16: suminf.    1.93614 (14) obj. -29.5378 iterations 5
Cbc0038I Pass  17: suminf.    1.69228 (14) obj. -29.5378 iterations 1
Cbc0038I Pass  18: suminf.    1.54748 (12) obj. -29.5378 iterations 9
Cbc0038I Pass  19: suminf.    1.54748 (12) obj. -29.5378 iterations 0
Cbc0038I Pass  20: suminf.    1.78409 (12) obj. -29.5378 iterations 5
Cbc0038I Pass  21: suminf.    1.34556 (12) obj. -29.6561 iterations 2
Cbc0038I Pass  22: suminf.    2.00250 (12) obj. -29.5378 iterations 5
Cbc0038I Pass  23: suminf.    1.56202 (12) obj. -29.5378 iterations 1
Cbc0038I Pass  24: suminf.    2.00250 (12) obj. -29.5378 iterations 3
Cbc0038I Pass  25: suminf.    1.97114 (19) obj. -29.5378 iterations 19
Cbc0038I Pass  26: suminf.    0.94584 (17) obj. -29.5378 iterations 7
Cbc0038I Pass  27: suminf.    1.78409 (12) obj. -29.5378 iterations 16
Cbc0038I Pass  28: suminf.    1.34556 (12) obj. -29.6561 iterations 3
Cbc0038I Pass  29: suminf.    2.00250 (12) obj. -29.5378 iterations 5
Cbc0038I Pass  30: suminf.    1.56202 (12) obj. -29.5378 iterations 1
Cbc0038I Pass  31: suminf.    2.00250 (12) obj. -29.5378 iterations 3
Cbc0038I Pass  32: suminf.    1.83411 (16) obj. -29.5378 iterations 16
Cbc0038I Rounding solution of -28.421 is better than previous of -25.3979

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 123 columns, reduced to 55 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -28.421 to -32.2358 (0.09 seconds)
Cbc0038I Round again with cutoff of -39.1479
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.52191 (42) obj. -39.1479 iterations 1
Cbc0038I Pass  33: suminf.    0.21889 (5) obj. -39.1479 iterations 2
Cbc0038I Pass  34: suminf.    0.62956 (3) obj. -39.1479 iterations 5
Cbc0038I Pass  35: suminf.    0.11791 (10) obj. -39.1479 iterations 3
Cbc0038I Pass  36: suminf.    1.78715 (35) obj. -39.1479 iterations 15
Cbc0038I Pass  37: suminf.    1.22846 (34) obj. -39.1479 iterations 5
Cbc0038I Pass  38: suminf.    3.39349 (27) obj. -39.1479 iterations 28
Cbc0038I Pass  39: suminf.    2.36365 (24) obj. -39.1479 iterations 8
Cbc0038I Pass  40: suminf.    1.92848 (21) obj. -39.1479 iterations 24
Cbc0038I Pass  41: suminf.    1.92848 (21) obj. -39.1479 iterations 1
Cbc0038I Pass  42: suminf.    1.97905 (17) obj. -39.1479 iterations 13
Cbc0038I Pass  43: suminf.    1.88057 (18) obj. -39.1479 iterations 3
Cbc0038I Pass  44: suminf.    2.23855 (17) obj. -39.1479 iterations 7
Cbc0038I Pass  45: suminf.    2.16872 (17) obj. -39.1479 iterations 5
Cbc0038I Pass  46: suminf.    2.23855 (17) obj. -39.1479 iterations 6
Cbc0038I Pass  47: suminf.    3.10634 (24) obj. -39.1479 iterations 17
Cbc0038I Pass  48: suminf.    2.56764 (20) obj. -39.1479 iterations 9
Cbc0038I Pass  49: suminf.    2.72604 (18) obj. -39.1479 iterations 7
Cbc0038I Pass  50: suminf.    2.27171 (18) obj. -39.1479 iterations 1
Cbc0038I Pass  51: suminf.    2.39296 (18) obj. -39.1479 iterations 4
Cbc0038I Pass  52: suminf.    2.39296 (18) obj. -39.1479 iterations 1
Cbc0038I Pass  53: suminf.    2.73251 (18) obj. -39.1479 iterations 3
Cbc0038I Pass  54: suminf.    2.28576 (18) obj. -39.1479 iterations 1
Cbc0038I Pass  55: suminf.    1.86712 (25) obj. -39.1479 iterations 18
Cbc0038I Pass  56: suminf.    1.86712 (25) obj. -39.1479 iterations 5
Cbc0038I Pass  57: suminf.    2.23025 (18) obj. -39.1479 iterations 17
Cbc0038I Pass  58: suminf.    2.16872 (17) obj. -39.1479 iterations 4
Cbc0038I Pass  59: suminf.    2.23855 (17) obj. -39.1479 iterations 4
Cbc0038I Pass  60: suminf.    3.09697 (21) obj. -39.1479 iterations 21
Cbc0038I Pass  61: suminf.    3.09697 (21) obj. -39.1479 iterations 4
Cbc0038I Rounding solution of -32.6154 is better than previous of -32.2358

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 123 columns, reduced to 54 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -47.4422
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.41735 (42) obj. -47.4422 iterations 0
Cbc0038I Pass  62: suminf.    1.41735 (42) obj. -47.4422 iterations 0
Cbc0038I Pass  63: suminf.    2.98753 (30) obj. -47.4422 iterations 31
Cbc0038I Pass  64: suminf.    2.32423 (30) obj. -47.4422 iterations 3
Cbc0038I Pass  65: suminf.    2.52418 (27) obj. -47.4422 iterations 23
Cbc0038I Pass  66: suminf.    2.52418 (27) obj. -47.4422 iterations 2
Cbc0038I Pass  67: suminf.    2.63674 (26) obj. -47.4422 iterations 6
Cbc0038I Pass  68: suminf.    2.53048 (27) obj. -47.4422 iterations 2
Cbc0038I Pass  69: suminf.    2.63104 (26) obj. -47.4422 iterations 5
Cbc0038I Pass  70: suminf.    2.42476 (28) obj. -47.4422 iterations 21
Cbc0038I Pass  71: suminf.    2.42476 (28) obj. -47.4422 iterations 6
Cbc0038I Pass  72: suminf.    2.77368 (26) obj. -47.4422 iterations 9
Cbc0038I Pass  73: suminf.    2.37088 (27) obj. -47.4422 iterations 1
Cbc0038I Pass  74: suminf.    2.77368 (26) obj. -47.4422 iterations 3
Cbc0038I Pass  75: suminf.    3.33183 (29) obj. -47.4422 iterations 14
Cbc0038I Pass  76: suminf.    2.75712 (29) obj. -47.4422 iterations 5
Cbc0038I Pass  77: suminf.    2.77368 (26) obj. -47.4422 iterations 13
Cbc0038I Pass  78: suminf.    2.34947 (27) obj. -47.4422 iterations 4
Cbc0038I Pass  79: suminf.    2.77368 (26) obj. -47.4422 iterations 6
Cbc0038I Pass  80: suminf.    2.37088 (27) obj. -47.4422 iterations 4
Cbc0038I Pass  81: suminf.    2.77368 (26) obj. -47.4422 iterations 2
Cbc0038I Pass  82: suminf.    2.97393 (29) obj. -47.4422 iterations 17
Cbc0038I Pass  83: suminf.    2.71528 (30) obj. -47.4422 iterations 6
Cbc0038I Pass  84: suminf.    2.67854 (27) obj. -47.4422 iterations 8
Cbc0038I Pass  85: suminf.    2.37462 (27) obj. -47.4422 iterations 3
Cbc0038I Pass  86: suminf.    2.77368 (26) obj. -47.4422 iterations 11
Cbc0038I Pass  87: suminf.    2.37088 (27) obj. -47.4422 iterations 4
Cbc0038I Pass  88: suminf.    2.77368 (26) obj. -47.4422 iterations 2
Cbc0038I Pass  89: suminf.    2.86474 (27) obj. -47.4422 iterations 16
Cbc0038I Pass  90: suminf.    2.86474 (27) obj. -47.4422 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 123 columns, reduced to 47 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -32.6154 - took 0.09 seconds
Cbc0012I Integer solution of -32.61543 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 109 rows 123 columns, reduced to 1 rows 2 columns
Cbc0031I 66 added rows had average density of 15.515152
Cbc0013I At root node, 66 cuts changed objective from -66.795547 to -41.242143 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 6299 row cuts average 9.6 elements, 7 column cuts (7 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 289 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 175 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 132 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 333 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 360 row cuts average 68.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 136 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.61543 best solution, best possible -41.242143 (0.74 seconds)
Cbc0001I Search completed - best objective -32.61543, took 2099 iterations and 8 nodes (1.25 seconds)
Cbc0032I Strong branching done 272 times (7789 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.26

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 6.42408e-05 - average 4.62164e-07, 27 fixed columns
Coin0506I Presolve 85 (-54) rows, 48 (-28) columns and 258 (-164) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.1593228 - largest nonzero change 0 ( 0%) - largest zero change 1.574217e-05
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Coin0511I After Postsolve, objective 62.469549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21944924 - largest nonzero change 0 ( 0%) - largest zero change 2.9603331e-05
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Coin0511I After Postsolve, objective 62.469549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.46954917 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.677%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.12801
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.9297 iterations 38
Cbc0038I Solution found of -24.9297
Cbc0038I Relaxing continuous gives -24.9297
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 51 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -24.9297 to -32.2358 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.2416
Cbc0038I Pass   2: suminf.    0.50486 (2) obj. -35.2416 iterations 4
Cbc0038I Pass   3: suminf.    0.27820 (2) obj. -35.2416 iterations 1
Cbc0038I Pass   4: suminf.    0.53524 (2) obj. -35.2416 iterations 6
Cbc0038I Pass   5: suminf.    2.58853 (12) obj. -35.2416 iterations 17
Cbc0038I Pass   6: suminf.    1.31384 (4) obj. -35.2416 iterations 12
Cbc0038I Pass   7: suminf.    1.27856 (3) obj. -35.2416 iterations 6
Cbc0038I Pass   8: suminf.    0.16571 (2) obj. -35.2416 iterations 6
Cbc0038I Pass   9: suminf.    0.60807 (2) obj. -35.2416 iterations 6
Cbc0038I Pass  10: suminf.    0.38605 (1) obj. -35.2416 iterations 1
Cbc0038I Pass  11: suminf.    1.33064 (3) obj. -35.2416 iterations 17
Cbc0038I Pass  12: suminf.    0.51561 (3) obj. -35.2416 iterations 14
Cbc0038I Pass  13: suminf.    0.27820 (2) obj. -35.2416 iterations 3
Cbc0038I Pass  14: suminf.    0.53524 (2) obj. -35.2416 iterations 6
Cbc0038I Pass  15: suminf.    0.50486 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  16: suminf.    4.65255 (12) obj. -35.2416 iterations 38
Cbc0038I Pass  17: suminf.    1.33999 (5) obj. -35.2416 iterations 24
Cbc0038I Pass  18: suminf.    1.14421 (4) obj. -35.2416 iterations 1
Cbc0038I Pass  19: suminf.    0.84563 (3) obj. -35.2416 iterations 4
Cbc0038I Pass  20: suminf.    0.60806 (2) obj. -35.2416 iterations 2
Cbc0038I Pass  21: suminf.    0.80700 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  22: suminf.    1.78290 (6) obj. -35.2416 iterations 15
Cbc0038I Pass  23: suminf.    1.48896 (4) obj. -35.2416 iterations 8
Cbc0038I Pass  24: suminf.    0.91161 (3) obj. -35.2416 iterations 1
Cbc0038I Pass  25: suminf.    0.73576 (2) obj. -35.2416 iterations 3
Cbc0038I Pass  26: suminf.    0.60806 (2) obj. -35.2416 iterations 2
Cbc0038I Pass  27: suminf.    0.60806 (2) obj. -35.2416 iterations 0
Cbc0038I Pass  28: suminf.    0.80700 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  29: suminf.    2.13567 (7) obj. -35.2416 iterations 12
Cbc0038I Pass  30: suminf.    0.56964 (2) obj. -35.2416 iterations 13
Cbc0038I Pass  31: suminf.    0.17209 (3) obj. -35.2416 iterations 2
Cbc0038I Rounding solution of -32.6154 is better than previous of -32.2358

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -40.6517
Cbc0038I Pass  31: suminf.    0.79882 (4) obj. -40.6517 iterations 1
Cbc0038I Pass  32: suminf.    0.64444 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  33: suminf.    0.83832 (3) obj. -40.6517 iterations 5
Cbc0038I Pass  34: suminf.    1.74475 (9) obj. -40.6517 iterations 24
Cbc0038I Pass  35: suminf.    2.11922 (7) obj. -40.6517 iterations 25
Cbc0038I Pass  36: suminf.    0.63707 (3) obj. -40.6517 iterations 17
Cbc0038I Pass  37: suminf.    0.69698 (3) obj. -40.6517 iterations 2
Cbc0038I Pass  38: suminf.    2.71777 (10) obj. -40.6517 iterations 15
Cbc0038I Pass  39: suminf.    0.99230 (4) obj. -40.6517 iterations 16
Cbc0038I Pass  40: suminf.    0.90774 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  41: suminf.    1.31833 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  42: suminf.    1.93043 (6) obj. -40.6517 iterations 9
Cbc0038I Pass  43: suminf.    0.86621 (4) obj. -40.6517 iterations 8
Cbc0038I Pass  44: suminf.    0.60784 (3) obj. -40.6517 iterations 1
Cbc0038I Pass  45: suminf.    0.86026 (4) obj. -40.6517 iterations 5
Cbc0038I Pass  46: suminf.    0.79047 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  47: suminf.    1.53411 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  48: suminf.    2.55882 (7) obj. -40.6517 iterations 6
Cbc0038I Pass  49: suminf.    1.34427 (6) obj. -40.6517 iterations 12
Cbc0038I Pass  50: suminf.    0.53304 (3) obj. -40.6517 iterations 4
Cbc0038I Pass  51: suminf.    0.91645 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  52: suminf.    0.58121 (2) obj. -40.6517 iterations 2
Cbc0038I Pass  53: suminf.    3.67281 (14) obj. -40.6517 iterations 24
Cbc0038I Pass  54: suminf.    1.68575 (6) obj. -40.6517 iterations 15
Cbc0038I Pass  55: suminf.    1.42220 (6) obj. -40.6517 iterations 3
Cbc0038I Pass  56: suminf.    0.73032 (3) obj. -40.6517 iterations 4
Cbc0038I Pass  57: suminf.    0.76007 (3) obj. -40.6517 iterations 2
Cbc0038I Pass  58: suminf.    2.25404 (8) obj. -40.6517 iterations 13
Cbc0038I Pass  59: suminf.    1.89348 (6) obj. -40.6517 iterations 5
Cbc0038I Pass  60: suminf.    0.75455 (4) obj. -40.6517 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 82 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -32.6154 - took 0.06 seconds
Cbc0012I Integer solution of -32.61543 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 53 rows 30 columns
Cbc0031I 21 added rows had average density of 38
Cbc0013I At root node, 21 cuts changed objective from -62.292031 to -51.048936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6318 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1175 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 9 nodes, 9 on tree, -32.61543 best solution, best possible -51.048936 (0.68 seconds)
Cbc0001I Search completed - best objective -32.61543, took 5747 iterations and 24 nodes (0.71 seconds)
Cbc0032I Strong branching done 404 times (8915 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 8, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 122 (-31) columns and 2126 (-1178) elements
Clp1000I sum of infeasibilities 3.59624e-08 - average 3.23986e-10, 46 fixed columns
Coin0506I Presolve 68 (-43) rows, 76 (-46) columns and 840 (-1286) elements
Clp0006I 0  Obj 68.122433 Dual inf 3.2107603 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 7.498014 - largest nonzero change 1.4786697e-05 ( 0.00066534609%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 80.726455
Clp0000I Optimal - objective value 80.726455
Coin0511I After Postsolve, objective 80.726455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 80.726455 Dual inf 2.1529508 (1)
Clp0014I Perturbing problem by 0.001% of 1.3994976 - largest nonzero change 1.5034331e-05 ( 0.0009598595%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 81.38855
Clp0000I Optimal - objective value 81.38855
Clp0000I Optimal - objective value 81.38855
Coin0511I After Postsolve, objective 81.38855, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.38855018 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 123 columns (123 integer (123 of which binary)) and 2151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.685%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 4.62096
Cbc0038I Pass   1: suminf.    0.08395 (4) obj. -36.5059 iterations 15
Cbc0038I Pass   2: suminf.    0.08395 (4) obj. -36.5059 iterations 0
Cbc0038I Solution found of -22.8128
Cbc0038I Rounding solution of -25.3979 is better than previous of -22.8128

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -29.5378
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.08395 (4) obj. -36.5059 iterations 0
Cbc0038I Pass   4: suminf.    0.08395 (4) obj. -36.5059 iterations 0
Cbc0038I Pass   5: suminf.    0.34348 (1) obj. -29.5378 iterations 5
Cbc0038I Pass   6: suminf.    0.43243 (1) obj. -31.2793 iterations 1
Cbc0038I Pass   7: suminf.    1.20232 (25) obj. -30.5708 iterations 24
Cbc0038I Pass   8: suminf.    1.20232 (25) obj. -30.5708 iterations 4
Cbc0038I Pass   9: suminf.    1.41873 (31) obj. -29.5378 iterations 24
Cbc0038I Pass  10: suminf.    1.41873 (31) obj. -29.5378 iterations 0
Cbc0038I Pass  11: suminf.    2.71322 (25) obj. -29.5378 iterations 15
Cbc0038I Pass  12: suminf.    2.14861 (22) obj. -29.5378 iterations 4
Cbc0038I Pass  13: suminf.    1.28759 (14) obj. -29.5378 iterations 23
Cbc0038I Pass  14: suminf.    1.27342 (13) obj. -29.5378 iterations 2
Cbc0038I Pass  15: suminf.    2.72431 (15) obj. -29.5378 iterations 7
Cbc0038I Pass  16: suminf.    1.93614 (14) obj. -29.5378 iterations 5
Cbc0038I Pass  17: suminf.    1.69228 (14) obj. -29.5378 iterations 1
Cbc0038I Pass  18: suminf.    1.54748 (12) obj. -29.5378 iterations 9
Cbc0038I Pass  19: suminf.    1.54748 (12) obj. -29.5378 iterations 0
Cbc0038I Pass  20: suminf.    1.78409 (12) obj. -29.5378 iterations 5
Cbc0038I Pass  21: suminf.    1.34556 (12) obj. -29.6561 iterations 2
Cbc0038I Pass  22: suminf.    2.00250 (12) obj. -29.5378 iterations 5
Cbc0038I Pass  23: suminf.    1.56202 (12) obj. -29.5378 iterations 1
Cbc0038I Pass  24: suminf.    2.00250 (12) obj. -29.5378 iterations 3
Cbc0038I Pass  25: suminf.    1.97114 (19) obj. -29.5378 iterations 19
Cbc0038I Pass  26: suminf.    0.94584 (17) obj. -29.5378 iterations 7
Cbc0038I Pass  27: suminf.    1.78409 (12) obj. -29.5378 iterations 16
Cbc0038I Pass  28: suminf.    1.34556 (12) obj. -29.6561 iterations 3
Cbc0038I Pass  29: suminf.    2.00250 (12) obj. -29.5378 iterations 5
Cbc0038I Pass  30: suminf.    1.56202 (12) obj. -29.5378 iterations 1
Cbc0038I Pass  31: suminf.    2.00250 (12) obj. -29.5378 iterations 3
Cbc0038I Pass  32: suminf.    1.83411 (16) obj. -29.5378 iterations 16
Cbc0038I Rounding solution of -28.421 is better than previous of -25.3979

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 123 columns, reduced to 55 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -28.421 to -32.2358 (0.09 seconds)
Cbc0038I Round again with cutoff of -39.1479
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.52191 (42) obj. -39.1479 iterations 1
Cbc0038I Pass  33: suminf.    0.21889 (5) obj. -39.1479 iterations 2
Cbc0038I Pass  34: suminf.    0.62956 (3) obj. -39.1479 iterations 5
Cbc0038I Pass  35: suminf.    0.11791 (10) obj. -39.1479 iterations 3
Cbc0038I Pass  36: suminf.    1.78715 (35) obj. -39.1479 iterations 15
Cbc0038I Pass  37: suminf.    1.22846 (34) obj. -39.1479 iterations 5
Cbc0038I Pass  38: suminf.    3.39349 (27) obj. -39.1479 iterations 28
Cbc0038I Pass  39: suminf.    2.36365 (24) obj. -39.1479 iterations 8
Cbc0038I Pass  40: suminf.    1.92848 (21) obj. -39.1479 iterations 24
Cbc0038I Pass  41: suminf.    1.92848 (21) obj. -39.1479 iterations 1
Cbc0038I Pass  42: suminf.    1.97905 (17) obj. -39.1479 iterations 13
Cbc0038I Pass  43: suminf.    1.88057 (18) obj. -39.1479 iterations 3
Cbc0038I Pass  44: suminf.    2.23855 (17) obj. -39.1479 iterations 7
Cbc0038I Pass  45: suminf.    2.16872 (17) obj. -39.1479 iterations 5
Cbc0038I Pass  46: suminf.    2.23855 (17) obj. -39.1479 iterations 6
Cbc0038I Pass  47: suminf.    3.10634 (24) obj. -39.1479 iterations 17
Cbc0038I Pass  48: suminf.    2.56764 (20) obj. -39.1479 iterations 9
Cbc0038I Pass  49: suminf.    2.72604 (18) obj. -39.1479 iterations 7
Cbc0038I Pass  50: suminf.    2.27171 (18) obj. -39.1479 iterations 1
Cbc0038I Pass  51: suminf.    2.39296 (18) obj. -39.1479 iterations 4
Cbc0038I Pass  52: suminf.    2.39296 (18) obj. -39.1479 iterations 1
Cbc0038I Pass  53: suminf.    2.73251 (18) obj. -39.1479 iterations 3
Cbc0038I Pass  54: suminf.    2.28576 (18) obj. -39.1479 iterations 1
Cbc0038I Pass  55: suminf.    1.86712 (25) obj. -39.1479 iterations 18
Cbc0038I Pass  56: suminf.    1.86712 (25) obj. -39.1479 iterations 5
Cbc0038I Pass  57: suminf.    2.23025 (18) obj. -39.1479 iterations 17
Cbc0038I Pass  58: suminf.    2.16872 (17) obj. -39.1479 iterations 4
Cbc0038I Pass  59: suminf.    2.23855 (17) obj. -39.1479 iterations 4
Cbc0038I Pass  60: suminf.    3.09697 (21) obj. -39.1479 iterations 21
Cbc0038I Pass  61: suminf.    3.09697 (21) obj. -39.1479 iterations 4
Cbc0038I Rounding solution of -32.6154 is better than previous of -32.2358

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 123 columns, reduced to 54 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -47.4422
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.41735 (42) obj. -47.4422 iterations 0
Cbc0038I Pass  62: suminf.    1.41735 (42) obj. -47.4422 iterations 0
Cbc0038I Pass  63: suminf.    2.98753 (30) obj. -47.4422 iterations 31
Cbc0038I Pass  64: suminf.    2.32423 (30) obj. -47.4422 iterations 3
Cbc0038I Pass  65: suminf.    2.52418 (27) obj. -47.4422 iterations 23
Cbc0038I Pass  66: suminf.    2.52418 (27) obj. -47.4422 iterations 2
Cbc0038I Pass  67: suminf.    2.63674 (26) obj. -47.4422 iterations 6
Cbc0038I Pass  68: suminf.    2.53048 (27) obj. -47.4422 iterations 2
Cbc0038I Pass  69: suminf.    2.63104 (26) obj. -47.4422 iterations 5
Cbc0038I Pass  70: suminf.    2.42476 (28) obj. -47.4422 iterations 21
Cbc0038I Pass  71: suminf.    2.42476 (28) obj. -47.4422 iterations 6
Cbc0038I Pass  72: suminf.    2.77368 (26) obj. -47.4422 iterations 9
Cbc0038I Pass  73: suminf.    2.37088 (27) obj. -47.4422 iterations 1
Cbc0038I Pass  74: suminf.    2.77368 (26) obj. -47.4422 iterations 3
Cbc0038I Pass  75: suminf.    3.33183 (29) obj. -47.4422 iterations 14
Cbc0038I Pass  76: suminf.    2.75712 (29) obj. -47.4422 iterations 5
Cbc0038I Pass  77: suminf.    2.77368 (26) obj. -47.4422 iterations 13
Cbc0038I Pass  78: suminf.    2.34947 (27) obj. -47.4422 iterations 4
Cbc0038I Pass  79: suminf.    2.77368 (26) obj. -47.4422 iterations 6
Cbc0038I Pass  80: suminf.    2.37088 (27) obj. -47.4422 iterations 4
Cbc0038I Pass  81: suminf.    2.77368 (26) obj. -47.4422 iterations 2
Cbc0038I Pass  82: suminf.    2.97393 (29) obj. -47.4422 iterations 17
Cbc0038I Pass  83: suminf.    2.71528 (30) obj. -47.4422 iterations 6
Cbc0038I Pass  84: suminf.    2.67854 (27) obj. -47.4422 iterations 8
Cbc0038I Pass  85: suminf.    2.37462 (27) obj. -47.4422 iterations 3
Cbc0038I Pass  86: suminf.    2.77368 (26) obj. -47.4422 iterations 11
Cbc0038I Pass  87: suminf.    2.37088 (27) obj. -47.4422 iterations 4
Cbc0038I Pass  88: suminf.    2.77368 (26) obj. -47.4422 iterations 2
Cbc0038I Pass  89: suminf.    2.86474 (27) obj. -47.4422 iterations 16
Cbc0038I Pass  90: suminf.    2.86474 (27) obj. -47.4422 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 123 columns, reduced to 47 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -32.6154 - took 0.09 seconds
Cbc0012I Integer solution of -32.61543 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 109 rows 123 columns, reduced to 1 rows 2 columns
Cbc0031I 66 added rows had average density of 15.515152
Cbc0013I At root node, 66 cuts changed objective from -66.795547 to -41.242143 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 6299 row cuts average 9.6 elements, 7 column cuts (7 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 289 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 175 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 132 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 333 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 360 row cuts average 68.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 136 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.61543 best solution, best possible -41.242143 (0.77 seconds)
Cbc0001I Search completed - best objective -32.61543, took 2099 iterations and 8 nodes (1.33 seconds)
Cbc0032I Strong branching done 272 times (7789 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.33

