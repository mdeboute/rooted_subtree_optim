Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 26 (-6) columns and 140 (-37) elements
Clp1000I sum of infeasibilities 3.09266e-06 - average 6.44305e-08, 3 fixed columns
Coin0506I Presolve 39 (-9) rows, 23 (-3) columns and 116 (-24) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 83.934198
Clp0000I Optimal - objective value 83.934198
Coin0511I After Postsolve, objective 83.934198, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.934198
Clp0000I Optimal - objective value 83.934198
Clp0000I Optimal - objective value 83.934198
Coin0511I After Postsolve, objective 83.934198, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.93419785 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 26 columns (25 integer (25 of which binary)) and 142 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.919%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.92928
Cbc0038I Pass   1: suminf.    0.05556 (2) obj. 11.4366 iterations 15
Cbc0038I Solution found of 42.2212
Cbc0038I Relaxing continuous gives 42.2212
Cbc0038I Rounding solution of 16.4804 is better than previous of 42.2212

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 16.4804 to -24.025 (0.01 seconds)
Cbc0038I Round again with cutoff of -29.7026
Cbc0038I Pass   2: suminf.    0.82649 (6) obj. -29.7026 iterations 7
Cbc0038I Pass   3: suminf.    2.18066 (6) obj. -29.7026 iterations 7
Cbc0038I Pass   4: suminf.    1.86700 (7) obj. -29.7026 iterations 2
Cbc0038I Pass   5: suminf.    1.75999 (6) obj. -29.7026 iterations 1
Cbc0038I Pass   6: suminf.    0.52526 (5) obj. -29.7026 iterations 5
Cbc0038I Pass   7: suminf.    0.82122 (4) obj. -29.7026 iterations 6
Cbc0038I Pass   8: suminf.    0.62563 (3) obj. -29.7026 iterations 1
Cbc0038I Pass   9: suminf.    0.71507 (6) obj. -29.7026 iterations 6
Cbc0038I Pass  10: suminf.    1.86700 (7) obj. -29.7026 iterations 8
Cbc0038I Pass  11: suminf.    1.75999 (6) obj. -29.7026 iterations 1
Cbc0038I Pass  12: suminf.    0.52526 (5) obj. -29.7026 iterations 5
Cbc0038I Pass  13: suminf.    1.90011 (7) obj. -29.7026 iterations 4
Cbc0038I Pass  14: suminf.    1.90011 (7) obj. -29.7026 iterations 0
Cbc0038I Pass  15: suminf.    2.16721 (6) obj. -29.7026 iterations 8
Cbc0038I Pass  16: suminf.    2.11948 (5) obj. -29.7026 iterations 1
Cbc0038I Pass  17: suminf.    0.65407 (4) obj. -29.7026 iterations 3
Cbc0038I Pass  18: suminf.    0.76745 (5) obj. -29.7026 iterations 3
Cbc0038I Pass  19: suminf.    0.76745 (5) obj. -29.7026 iterations 1
Cbc0038I Pass  20: suminf.    2.18242 (6) obj. -29.7026 iterations 8
Cbc0038I Pass  21: suminf.    2.13469 (5) obj. -29.7026 iterations 1
Cbc0038I Pass  22: suminf.    0.46143 (4) obj. -29.7026 iterations 3
Cbc0038I Pass  23: suminf.    0.76265 (6) obj. -29.7026 iterations 5
Cbc0038I Pass  24: suminf.    0.76265 (6) obj. -29.7026 iterations 1
Cbc0038I Pass  25: suminf.    0.71041 (4) obj. -29.7026 iterations 7
Cbc0038I Pass  26: suminf.    1.95697 (6) obj. -29.7026 iterations 4
Cbc0038I Pass  27: suminf.    1.93651 (5) obj. -29.7026 iterations 1
Cbc0038I Pass  28: suminf.    0.59364 (4) obj. -29.7026 iterations 3
Cbc0038I Pass  29: suminf.    0.35018 (1) obj. -29.7026 iterations 4
Cbc0038I Pass  30: suminf.    0.40996 (2) obj. -29.7026 iterations 3
Cbc0038I Pass  31: suminf.    0.27306 (2) obj. -29.7026 iterations 1
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -39.9219
Cbc0038I Pass  31: suminf.    1.10063 (7) obj. -39.9219 iterations 1
Cbc0038I Pass  32: suminf.    0.97528 (6) obj. -39.9219 iterations 2
Cbc0038I Pass  33: suminf.    2.06337 (5) obj. -39.9219 iterations 5
Cbc0038I Pass  34: suminf.    0.76740 (5) obj. -39.9219 iterations 3
Cbc0038I Pass  35: suminf.    2.28635 (6) obj. -39.9219 iterations 6
Cbc0038I Pass  36: suminf.    2.84228 (8) obj. -39.9219 iterations 2
Cbc0038I Pass  37: suminf.    3.83754 (13) obj. -39.9219 iterations 14
Cbc0038I Pass  38: suminf.    2.57261 (12) obj. -39.9219 iterations 5
Cbc0038I Pass  39: suminf.    1.87197 (5) obj. -39.9219 iterations 12
Cbc0038I Pass  40: suminf.    0.96032 (5) obj. -39.9219 iterations 2
Cbc0038I Pass  41: suminf.    2.37329 (6) obj. -39.9219 iterations 6
Cbc0038I Pass  42: suminf.    3.17915 (9) obj. -39.9219 iterations 5
Cbc0038I Pass  43: suminf.    2.56119 (6) obj. -39.9219 iterations 4
Cbc0038I Pass  44: suminf.    1.04853 (5) obj. -39.9219 iterations 4
Cbc0038I Pass  45: suminf.    2.01096 (5) obj. -39.9219 iterations 3
Cbc0038I Pass  46: suminf.    1.15903 (5) obj. -39.9219 iterations 3
Cbc0038I Pass  47: suminf.    2.38850 (6) obj. -39.9219 iterations 5
Cbc0038I Pass  48: suminf.    4.24847 (16) obj. -39.9219 iterations 12
Cbc0038I Pass  49: suminf.    2.16178 (10) obj. -39.9219 iterations 10
Cbc0038I Pass  50: suminf.    2.10960 (10) obj. -39.9219 iterations 1
Cbc0038I Pass  51: suminf.    2.29094 (7) obj. -39.9219 iterations 8
Cbc0038I Pass  52: suminf.    2.37093 (6) obj. -39.9219 iterations 5
Cbc0038I Pass  53: suminf.    1.38040 (5) obj. -39.9219 iterations 3
Cbc0038I Pass  54: suminf.    1.24415 (6) obj. -39.9219 iterations 5
Cbc0038I Pass  55: suminf.    0.97295 (5) obj. -39.9219 iterations 1
Cbc0038I Pass  56: suminf.    2.47300 (7) obj. -39.9219 iterations 9
Cbc0038I Pass  57: suminf.    1.50824 (8) obj. -39.9219 iterations 9
Cbc0038I Pass  58: suminf.    1.49667 (8) obj. -39.9219 iterations 1
Cbc0038I Pass  59: suminf.    0.56671 (5) obj. -39.9219 iterations 7
Cbc0038I Pass  60: suminf.    0.56671 (5) obj. -39.9219 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.025 - took 0.07 seconds
Cbc0012I Integer solution of -24.02505 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 47 rows 26 columns, reduced to 28 rows 17 columns
Cbc0031I 8 added rows had average density of 14.5
Cbc0013I At root node, 8 cuts changed objective from -80.799319 to -50.321072 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1301 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 587 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24.02504999999999, took 2234 iterations and 4 nodes (0.20 seconds)
Cbc0032I Strong branching done 58 times (783 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 52 (-8) columns and 484 (-128) elements
Clp1000I sum of infeasibilities 9.68029e-06 - average 1.93606e-07, 20 fixed columns
Coin0506I Presolve 24 (-26) rows, 27 (-25) columns and 128 (-356) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 0.21537447 - largest nonzero change 0 ( 0%) - largest zero change 2.7290119e-05
Clp0000I Optimal - objective value 309.78592
Clp0000I Optimal - objective value 309.78592
Coin0511I After Postsolve, objective 309.78592, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21823076 - largest nonzero change 0 ( 0%) - largest zero change 2.8808069e-05
Clp0000I Optimal - objective value 309.78592
Clp0000I Optimal - objective value 309.78592
Clp0000I Optimal - objective value 309.78592
Coin0511I After Postsolve, objective 309.78592, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 309.7859185 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 51 columns (51 integer (51 of which binary)) and 489 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.89565
Cbc0038I Pass   1: suminf.    3.04434 (11) obj. -188.805 iterations 13
Cbc0038I Pass   2: suminf.    2.63272 (10) obj. -178.74 iterations 1
Cbc0038I Solution found of -136.426
Cbc0038I Rounding solution of -151.468 is better than previous of -136.426

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 51 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -151.468 to -206.426 (0.02 seconds)
Cbc0038I Round again with cutoff of -212.82
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.81574 (12) obj. -212.82 iterations 1
Cbc0038I Pass   4: suminf.    3.66626 (11) obj. -212.82 iterations 2
Cbc0038I Pass   5: suminf.    3.66626 (11) obj. -212.82 iterations 0
Cbc0038I Pass   6: suminf.    0.24841 (1) obj. -212.82 iterations 12
Cbc0038I Pass   7: suminf.    0.24841 (1) obj. -212.82 iterations 0
Cbc0038I Pass   8: suminf.    0.38333 (1) obj. -222.299 iterations 2
Cbc0038I Pass   9: suminf.    1.80975 (5) obj. -232.921 iterations 7
Cbc0038I Pass  10: suminf.    1.80975 (5) obj. -232.921 iterations 1
Cbc0038I Pass  11: suminf.    0.56965 (5) obj. -212.82 iterations 5
Cbc0038I Pass  12: suminf.    0.56965 (5) obj. -212.82 iterations 0
Cbc0038I Pass  13: suminf.    1.28675 (4) obj. -232.79 iterations 7
Cbc0038I Pass  14: suminf.    1.09821 (3) obj. -227.132 iterations 1
Cbc0038I Pass  15: suminf.    1.64787 (7) obj. -220.328 iterations 11
Cbc0038I Pass  16: suminf.    0.45534 (2) obj. -212.82 iterations 10
Cbc0038I Pass  17: suminf.    0.31667 (1) obj. -219.711 iterations 3
Cbc0038I Pass  18: suminf.    0.04897 (1) obj. -212.82 iterations 4
Cbc0038I Pass  19: suminf.    2.45670 (6) obj. -212.82 iterations 9
Cbc0038I Pass  20: suminf.    1.92857 (4) obj. -220.492 iterations 2
Cbc0038I Pass  21: suminf.    1.42857 (3) obj. -218.492 iterations 1
Cbc0038I Solution found of -212.921
Cbc0038I Rounding solution of -220.463 is better than previous of -212.921

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 51 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -230.444
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  22: suminf.    4.06209 (11) obj. -251.621 iterations 1
Cbc0038I Pass  23: suminf.    3.69562 (10) obj. -242.659 iterations 2
Cbc0038I Pass  24: suminf.    0.91556 (3) obj. -230.444 iterations 13
Cbc0038I Pass  25: suminf.    0.85915 (4) obj. -230.444 iterations 1
Cbc0038I Pass  26: suminf.    1.80783 (4) obj. -230.444 iterations 4
Cbc0038I Pass  27: suminf.    1.10351 (4) obj. -230.444 iterations 2
Cbc0038I Pass  28: suminf.    1.69688 (5) obj. -230.444 iterations 2
Cbc0038I Pass  29: suminf.    1.69775 (5) obj. -230.444 iterations 1
Cbc0038I Pass  30: suminf.    1.26437 (4) obj. -235.271 iterations 5
Cbc0038I Pass  31: suminf.    3.10810 (10) obj. -230.444 iterations 15
Cbc0038I Pass  32: suminf.    2.32396 (8) obj. -230.444 iterations 6
Cbc0038I Pass  33: suminf.    2.32038 (7) obj. -230.444 iterations 2
Cbc0038I Pass  34: suminf.    1.51300 (5) obj. -230.444 iterations 10
Cbc0038I Pass  35: suminf.    1.18057 (4) obj. -230.444 iterations 3
Cbc0038I Pass  36: suminf.    1.28167 (5) obj. -230.444 iterations 5
Cbc0038I Pass  37: suminf.    1.28167 (5) obj. -230.444 iterations 2
Cbc0038I Pass  38: suminf.    2.12937 (6) obj. -230.444 iterations 2
Cbc0038I Pass  39: suminf.    2.12634 (6) obj. -230.444 iterations 1
Cbc0038I Pass  40: suminf.    1.28167 (5) obj. -230.444 iterations 8
Cbc0038I Pass  41: suminf.    2.03468 (6) obj. -230.444 iterations 20
Cbc0038I Pass  42: suminf.    1.14308 (6) obj. -230.444 iterations 9
Cbc0038I Pass  43: suminf.    0.85651 (6) obj. -230.444 iterations 2
Cbc0038I Pass  44: suminf.    1.26968 (6) obj. -234.018 iterations 4
Cbc0038I Pass  45: suminf.    2.80282 (7) obj. -231.983 iterations 13
Cbc0038I Pass  46: suminf.    2.36154 (5) obj. -231.542 iterations 3
Cbc0038I Pass  47: suminf.    1.03737 (5) obj. -230.444 iterations 10
Cbc0038I Pass  48: suminf.    1.25132 (5) obj. -231.919 iterations 4
Cbc0038I Pass  49: suminf.    1.04415 (6) obj. -230.444 iterations 3
Cbc0038I Pass  50: suminf.    1.18019 (5) obj. -230.444 iterations 5
Cbc0038I Pass  51: suminf.    2.59267 (7) obj. -230.444 iterations 10
Cbc0038I Rounding solution of -221.381 is better than previous of -220.463

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 51 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -221.381 to -221.696 (0.03 seconds)
Cbc0038I Round again with cutoff of -242.421
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  51: suminf.    4.06209 (11) obj. -251.621 iterations 0
Cbc0038I Pass  52: suminf.    3.69562 (10) obj. -242.659 iterations 2
Cbc0038I Pass  53: suminf.    1.88599 (5) obj. -242.421 iterations 13
Cbc0038I Pass  54: suminf.    1.73188 (6) obj. -242.421 iterations 1
Cbc0038I Pass  55: suminf.    1.89706 (6) obj. -242.421 iterations 4
Cbc0038I Pass  56: suminf.    1.89706 (6) obj. -242.421 iterations 1
Cbc0038I Pass  57: suminf.    1.73188 (6) obj. -242.421 iterations 4
Cbc0038I Pass  58: suminf.    2.70963 (8) obj. -242.605 iterations 7
Cbc0038I Pass  59: suminf.    2.69377 (8) obj. -242.421 iterations 2
Cbc0038I Pass  60: suminf.    2.01797 (6) obj. -242.421 iterations 7
Cbc0038I Pass  61: suminf.    1.89086 (6) obj. -242.421 iterations 1
Cbc0038I Pass  62: suminf.    1.89086 (6) obj. -242.421 iterations 1
Cbc0038I Pass  63: suminf.    2.03742 (6) obj. -242.421 iterations 3
Cbc0038I Pass  64: suminf.    1.91834 (6) obj. -242.421 iterations 2
Cbc0038I Pass  65: suminf.    1.91834 (6) obj. -242.421 iterations 1
Cbc0038I Pass  66: suminf.    2.01797 (6) obj. -242.421 iterations 4
Cbc0038I Pass  67: suminf.    1.89086 (6) obj. -242.421 iterations 1
Cbc0038I Pass  68: suminf.    1.89086 (6) obj. -242.421 iterations 1
Cbc0038I Pass  69: suminf.    2.03742 (6) obj. -242.421 iterations 3
Cbc0038I Pass  70: suminf.    1.91834 (6) obj. -242.421 iterations 2
Cbc0038I Pass  71: suminf.    1.91834 (6) obj. -242.421 iterations 1
Cbc0038I Pass  72: suminf.    2.01797 (6) obj. -242.421 iterations 4
Cbc0038I Pass  73: suminf.    1.89086 (6) obj. -242.421 iterations 1
Cbc0038I Pass  74: suminf.    1.89086 (6) obj. -242.421 iterations 1
Cbc0038I Pass  75: suminf.    2.03742 (6) obj. -242.421 iterations 3
Cbc0038I Pass  76: suminf.    1.91834 (6) obj. -242.421 iterations 2
Cbc0038I Pass  77: suminf.    1.91834 (6) obj. -242.421 iterations 1
Cbc0038I Pass  78: suminf.    2.01797 (6) obj. -242.421 iterations 4
Cbc0038I Pass  79: suminf.    1.89086 (6) obj. -242.421 iterations 1
Cbc0038I Pass  80: suminf.    1.89086 (6) obj. -242.421 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -221.696 - took 0.02 seconds
Cbc0012I Integer solution of -221.69561 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 49 rows 51 columns, reduced to 7 rows 9 columns
Cbc0031I 4 added rows had average density of 5.25
Cbc0013I At root node, 26 cuts changed objective from -239.45723 to -220.49734 in 57 passes
Cbc0014I Cut generator 0 (Probing) - 70 row cuts average 2.5 elements, 14 column cuts (14 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 219 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 74 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -221.695608, took 428 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 26 (-6) columns and 140 (-37) elements
Clp1000I sum of infeasibilities 3.09266e-06 - average 6.44305e-08, 3 fixed columns
Coin0506I Presolve 39 (-9) rows, 23 (-3) columns and 116 (-24) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 83.934198
Clp0000I Optimal - objective value 83.934198
Coin0511I After Postsolve, objective 83.934198, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.934198
Clp0000I Optimal - objective value 83.934198
Clp0000I Optimal - objective value 83.934198
Coin0511I After Postsolve, objective 83.934198, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.93419785 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 26 columns (25 integer (25 of which binary)) and 142 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.919%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.92928
Cbc0038I Pass   1: suminf.    0.05556 (2) obj. 11.4366 iterations 15
Cbc0038I Solution found of 42.2212
Cbc0038I Relaxing continuous gives 42.2212
Cbc0038I Rounding solution of 16.4804 is better than previous of 42.2212

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 16.4804 to -24.025 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.7026
Cbc0038I Pass   2: suminf.    0.82649 (6) obj. -29.7026 iterations 7
Cbc0038I Pass   3: suminf.    2.18066 (6) obj. -29.7026 iterations 7
Cbc0038I Pass   4: suminf.    1.86700 (7) obj. -29.7026 iterations 2
Cbc0038I Pass   5: suminf.    1.75999 (6) obj. -29.7026 iterations 1
Cbc0038I Pass   6: suminf.    0.52526 (5) obj. -29.7026 iterations 5
Cbc0038I Pass   7: suminf.    0.82122 (4) obj. -29.7026 iterations 6
Cbc0038I Pass   8: suminf.    0.62563 (3) obj. -29.7026 iterations 1
Cbc0038I Pass   9: suminf.    0.71507 (6) obj. -29.7026 iterations 6
Cbc0038I Pass  10: suminf.    1.86700 (7) obj. -29.7026 iterations 8
Cbc0038I Pass  11: suminf.    1.75999 (6) obj. -29.7026 iterations 1
Cbc0038I Pass  12: suminf.    0.52526 (5) obj. -29.7026 iterations 5
Cbc0038I Pass  13: suminf.    1.90011 (7) obj. -29.7026 iterations 4
Cbc0038I Pass  14: suminf.    1.90011 (7) obj. -29.7026 iterations 0
Cbc0038I Pass  15: suminf.    2.16721 (6) obj. -29.7026 iterations 8
Cbc0038I Pass  16: suminf.    2.11948 (5) obj. -29.7026 iterations 1
Cbc0038I Pass  17: suminf.    0.65407 (4) obj. -29.7026 iterations 3
Cbc0038I Pass  18: suminf.    0.76745 (5) obj. -29.7026 iterations 3
Cbc0038I Pass  19: suminf.    0.76745 (5) obj. -29.7026 iterations 1
Cbc0038I Pass  20: suminf.    2.18242 (6) obj. -29.7026 iterations 8
Cbc0038I Pass  21: suminf.    2.13469 (5) obj. -29.7026 iterations 1
Cbc0038I Pass  22: suminf.    0.46143 (4) obj. -29.7026 iterations 3
Cbc0038I Pass  23: suminf.    0.76265 (6) obj. -29.7026 iterations 5
Cbc0038I Pass  24: suminf.    0.76265 (6) obj. -29.7026 iterations 1
Cbc0038I Pass  25: suminf.    0.71041 (4) obj. -29.7026 iterations 7
Cbc0038I Pass  26: suminf.    1.95697 (6) obj. -29.7026 iterations 4
Cbc0038I Pass  27: suminf.    1.93651 (5) obj. -29.7026 iterations 1
Cbc0038I Pass  28: suminf.    0.59364 (4) obj. -29.7026 iterations 3
Cbc0038I Pass  29: suminf.    0.35018 (1) obj. -29.7026 iterations 4
Cbc0038I Pass  30: suminf.    0.40996 (2) obj. -29.7026 iterations 3
Cbc0038I Pass  31: suminf.    0.27306 (2) obj. -29.7026 iterations 1
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -39.9219
Cbc0038I Pass  31: suminf.    1.10063 (7) obj. -39.9219 iterations 1
Cbc0038I Pass  32: suminf.    0.97528 (6) obj. -39.9219 iterations 2
Cbc0038I Pass  33: suminf.    2.06337 (5) obj. -39.9219 iterations 5
Cbc0038I Pass  34: suminf.    0.76740 (5) obj. -39.9219 iterations 3
Cbc0038I Pass  35: suminf.    2.28635 (6) obj. -39.9219 iterations 6
Cbc0038I Pass  36: suminf.    2.84228 (8) obj. -39.9219 iterations 2
Cbc0038I Pass  37: suminf.    3.83754 (13) obj. -39.9219 iterations 14
Cbc0038I Pass  38: suminf.    2.57261 (12) obj. -39.9219 iterations 5
Cbc0038I Pass  39: suminf.    1.87197 (5) obj. -39.9219 iterations 12
Cbc0038I Pass  40: suminf.    0.96032 (5) obj. -39.9219 iterations 2
Cbc0038I Pass  41: suminf.    2.37329 (6) obj. -39.9219 iterations 6
Cbc0038I Pass  42: suminf.    3.17915 (9) obj. -39.9219 iterations 5
Cbc0038I Pass  43: suminf.    2.56119 (6) obj. -39.9219 iterations 4
Cbc0038I Pass  44: suminf.    1.04853 (5) obj. -39.9219 iterations 4
Cbc0038I Pass  45: suminf.    2.01096 (5) obj. -39.9219 iterations 3
Cbc0038I Pass  46: suminf.    1.15903 (5) obj. -39.9219 iterations 3
Cbc0038I Pass  47: suminf.    2.38850 (6) obj. -39.9219 iterations 5
Cbc0038I Pass  48: suminf.    4.24847 (16) obj. -39.9219 iterations 12
Cbc0038I Pass  49: suminf.    2.16178 (10) obj. -39.9219 iterations 10
Cbc0038I Pass  50: suminf.    2.10960 (10) obj. -39.9219 iterations 1
Cbc0038I Pass  51: suminf.    2.29094 (7) obj. -39.9219 iterations 8
Cbc0038I Pass  52: suminf.    2.37093 (6) obj. -39.9219 iterations 5
Cbc0038I Pass  53: suminf.    1.38040 (5) obj. -39.9219 iterations 3
Cbc0038I Pass  54: suminf.    1.24415 (6) obj. -39.9219 iterations 5
Cbc0038I Pass  55: suminf.    0.97295 (5) obj. -39.9219 iterations 1
Cbc0038I Pass  56: suminf.    2.47300 (7) obj. -39.9219 iterations 9
Cbc0038I Pass  57: suminf.    1.50824 (8) obj. -39.9219 iterations 9
Cbc0038I Pass  58: suminf.    1.49667 (8) obj. -39.9219 iterations 1
Cbc0038I Pass  59: suminf.    0.56671 (5) obj. -39.9219 iterations 7
Cbc0038I Pass  60: suminf.    0.56671 (5) obj. -39.9219 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -24.025 - took 0.06 seconds
Cbc0012I Integer solution of -24.02505 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 47 rows 26 columns, reduced to 28 rows 17 columns
Cbc0031I 8 added rows had average density of 14.5
Cbc0013I At root node, 8 cuts changed objective from -80.799319 to -50.321072 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1301 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 587 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24.02504999999999, took 2234 iterations and 4 nodes (0.25 seconds)
Cbc0032I Strong branching done 58 times (783 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 48 (-13) columns and 419 (-194) elements
Clp1000I sum of infeasibilities 1.55248e-08 - average 3.37495e-10, 36 fixed columns
Coin0506I Presolve 12 (-34) rows, 12 (-36) columns and 42 (-377) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 1.7791511 - largest nonzero change 2.5922408e-05 ( 0.0018056464%) - largest zero change 0
Clp0000I Optimal - objective value 33.16562
Clp0000I Optimal - objective value 33.16562
Coin0511I After Postsolve, objective 33.16562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3607189 - largest nonzero change 2.9915768e-05 ( 0.0025820745%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 111.83734
Clp0000I Optimal - objective value 111.83734
Clp0000I Optimal - objective value 111.83734
Coin0511I After Postsolve, objective 111.83734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 111.8373427 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 48 columns (48 integer (48 of which binary)) and 426 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.269%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.83997
Cbc0038I Pass   1: suminf.    1.39736 (15) obj. -41.9446 iterations 14
Cbc0038I Pass   2: suminf.    1.39736 (15) obj. -41.9446 iterations 0
Cbc0038I Solution found of 18.7529
Cbc0038I Rounding solution of 8.66357 is better than previous of 18.7529

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 48 columns, reduced to 27 rows 26 columns
Cbc0038I Mini branch and bound improved solution from 8.66357 to -24.025 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.8977
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.39736 (15) obj. -41.9446 iterations 0
Cbc0038I Pass   4: suminf.    1.39736 (15) obj. -41.9446 iterations 0
Cbc0038I Pass   5: suminf.    0.63397 (6) obj. -29.8977 iterations 22
Cbc0038I Pass   6: suminf.    0.62358 (3) obj. -29.8977 iterations 1
Cbc0038I Pass   7: suminf.    0.99592 (2) obj. -29.8977 iterations 5
Cbc0038I Pass   8: suminf.    0.52526 (5) obj. -32.7265 iterations 4
Cbc0038I Pass   9: suminf.    0.71860 (5) obj. -29.8977 iterations 1
Cbc0038I Pass  10: suminf.    3.13171 (11) obj. -29.8977 iterations 6
Cbc0038I Pass  11: suminf.    1.43682 (6) obj. -29.8977 iterations 9
Cbc0038I Pass  12: suminf.    1.43682 (6) obj. -29.8977 iterations 0
Cbc0038I Pass  13: suminf.    1.93119 (8) obj. -29.8977 iterations 7
Cbc0038I Pass  14: suminf.    1.05732 (3) obj. -29.8977 iterations 2
Cbc0038I Pass  15: suminf.    0.58452 (3) obj. -29.8977 iterations 6
Cbc0038I Pass  16: suminf.    0.93766 (7) obj. -29.8977 iterations 4
Cbc0038I Pass  17: suminf.    0.87877 (3) obj. -29.8977 iterations 4
Cbc0038I Pass  18: suminf.    1.30513 (7) obj. -29.8977 iterations 6
Cbc0038I Pass  19: suminf.    0.77956 (3) obj. -29.8977 iterations 1
Cbc0038I Pass  20: suminf.    0.58452 (3) obj. -29.8977 iterations 2
Cbc0038I Pass  21: suminf.    0.93766 (7) obj. -29.8977 iterations 4
Cbc0038I Pass  22: suminf.    0.87877 (3) obj. -29.8977 iterations 4
Cbc0038I Pass  23: suminf.    1.30513 (7) obj. -29.8977 iterations 6
Cbc0038I Pass  24: suminf.    0.77956 (3) obj. -29.8977 iterations 1
Cbc0038I Pass  25: suminf.    0.58452 (3) obj. -29.8977 iterations 2
Cbc0038I Pass  26: suminf.    0.93766 (7) obj. -29.8977 iterations 4
Cbc0038I Pass  27: suminf.    0.87877 (3) obj. -29.8977 iterations 4
Cbc0038I Pass  28: suminf.    1.30513 (7) obj. -29.8977 iterations 6
Cbc0038I Pass  29: suminf.    0.77956 (3) obj. -29.8977 iterations 1
Cbc0038I Pass  30: suminf.    0.58452 (3) obj. -29.8977 iterations 2
Cbc0038I Pass  31: suminf.    0.93766 (7) obj. -29.8977 iterations 4
Cbc0038I Pass  32: suminf.    0.87877 (3) obj. -29.8977 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 48 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.025 - took 0.01 seconds
Cbc0012I Integer solution of -24.02505 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 46 rows 48 columns, reduced to 27 rows 26 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 10.888889
Cbc0013I At root node, 9 cuts changed objective from -82.750788 to -25.140839 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 276 row cuts average 6.3 elements, 26 column cuts (26 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 103 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 9 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.02504999999999, took 236 iterations and 0 nodes (0.28 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.28

