Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 71 (-7) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 3.57992e-05 - average 2.77513e-07, 17 fixed columns
Coin0506I Presolve 91 (-38) rows, 52 (-19) columns and 278 (-114) elements
Clp0029I End of values pass after 52 iterations
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Coin0511I After Postsolve, objective 73.00908, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2268098 - largest nonzero change 0 ( 0%) - largest zero change 2.9782016e-05
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Coin0511I After Postsolve, objective 73.00908, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.00907959 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 71 columns (70 integer (70 of which binary)) and 458 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.610%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 4.99425
Cbc0038I Solution found of -16.9647
Cbc0038I Relaxing continuous gives -25.2419
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 62 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -25.2419 to -33.6659 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.4695
Cbc0038I Pass   1: suminf.    1.22797 (34) obj. -37.4695 iterations 40
Cbc0038I Pass   2: suminf.    1.20494 (5) obj. -37.4695 iterations 40
Cbc0038I Pass   3: suminf.    1.04069 (5) obj. -37.4695 iterations 3
Cbc0038I Pass   4: suminf.    0.69263 (3) obj. -37.4695 iterations 6
Cbc0038I Pass   5: suminf.    0.51760 (3) obj. -37.4695 iterations 3
Cbc0038I Pass   6: suminf.    1.09177 (4) obj. -37.4695 iterations 9
Cbc0038I Pass   7: suminf.    0.49110 (3) obj. -37.4695 iterations 3
Cbc0038I Pass   8: suminf.    0.49110 (3) obj. -37.4695 iterations 0
Cbc0038I Pass   9: suminf.    0.76887 (3) obj. -37.4695 iterations 7
Cbc0038I Pass  10: suminf.    0.74779 (3) obj. -37.4695 iterations 4
Cbc0038I Pass  11: suminf.    0.49967 (3) obj. -37.4695 iterations 7
Cbc0038I Pass  12: suminf.    1.52978 (7) obj. -37.4695 iterations 13
Cbc0038I Pass  13: suminf.    0.80497 (5) obj. -37.4695 iterations 12
Cbc0038I Pass  14: suminf.    1.49151 (4) obj. -37.4695 iterations 11
Cbc0038I Pass  15: suminf.    0.70111 (2) obj. -37.4695 iterations 6
Cbc0038I Pass  16: suminf.    0.70111 (2) obj. -37.4695 iterations 0
Cbc0038I Pass  17: suminf.    0.91991 (2) obj. -37.4695 iterations 4
Cbc0038I Pass  18: suminf.    0.65624 (2) obj. -37.4695 iterations 5
Cbc0038I Pass  19: suminf.    0.63195 (3) obj. -37.4695 iterations 14
Cbc0038I Pass  20: suminf.    0.63195 (3) obj. -37.4695 iterations 4
Cbc0038I Pass  21: suminf.    0.88521 (8) obj. -37.4695 iterations 14
Cbc0038I Pass  22: suminf.    0.61710 (7) obj. -37.4695 iterations 2
Cbc0038I Pass  23: suminf.    1.54275 (4) obj. -37.4695 iterations 8
Cbc0038I Pass  24: suminf.    0.85199 (4) obj. -37.4695 iterations 5
Cbc0038I Pass  25: suminf.    0.58621 (3) obj. -37.4695 iterations 2
Cbc0038I Pass  26: suminf.    0.85660 (4) obj. -37.4695 iterations 5
Cbc0038I Pass  27: suminf.    0.70370 (3) obj. -37.4695 iterations 5
Cbc0038I Pass  28: suminf.    0.70370 (3) obj. -37.4695 iterations 0
Cbc0038I Pass  29: suminf.    0.98580 (3) obj. -37.4695 iterations 6
Cbc0038I Pass  30: suminf.    0.30033 (2) obj. -37.4695 iterations 2
Cbc0038I Rounding solution of -34.3821 is better than previous of -33.6659

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -44.316
Cbc0038I Pass  30: suminf.    1.91553 (34) obj. -44.316 iterations 0
Cbc0038I Pass  31: suminf.    0.88265 (4) obj. -44.316 iterations 37
Cbc0038I Pass  32: suminf.    0.88265 (4) obj. -44.316 iterations 1
Cbc0038I Pass  33: suminf.    1.63577 (10) obj. -44.316 iterations 13
Cbc0038I Pass  34: suminf.    1.33812 (7) obj. -44.316 iterations 4
Cbc0038I Pass  35: suminf.    1.75899 (6) obj. -44.316 iterations 8
Cbc0038I Pass  36: suminf.    0.76385 (3) obj. -44.316 iterations 3
Cbc0038I Pass  37: suminf.    0.57520 (3) obj. -44.316 iterations 4
Cbc0038I Pass  38: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  39: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  40: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  41: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I Pass  42: suminf.    2.11963 (5) obj. -44.316 iterations 10
Cbc0038I Pass  43: suminf.    1.35415 (4) obj. -44.316 iterations 3
Cbc0038I Pass  44: suminf.    1.35415 (4) obj. -44.316 iterations 0
Cbc0038I Pass  45: suminf.    0.64834 (3) obj. -44.316 iterations 5
Cbc0038I Pass  46: suminf.    0.57520 (3) obj. -44.316 iterations 2
Cbc0038I Pass  47: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  48: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  49: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  50: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I Pass  51: suminf.    2.11963 (5) obj. -44.316 iterations 10
Cbc0038I Pass  52: suminf.    1.35415 (4) obj. -44.316 iterations 3
Cbc0038I Pass  53: suminf.    1.35415 (4) obj. -44.316 iterations 0
Cbc0038I Pass  54: suminf.    0.64834 (3) obj. -44.316 iterations 5
Cbc0038I Pass  55: suminf.    0.57520 (3) obj. -44.316 iterations 2
Cbc0038I Pass  56: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  57: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  58: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  59: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -34.3821 - took 0.07 seconds
Cbc0012I Integer solution of -34.3821 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 126 rows 71 columns, reduced to 63 rows 36 columns
Cbc0031I 19 added rows had average density of 53.263158
Cbc0013I At root node, 19 cuts changed objective from -71.701636 to -61.952612 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5985 row cuts average 5.0 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1268 row cuts average 70.9 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 27 nodes, 6 on tree, -34.3821 best solution, best possible -61.952612 (0.69 seconds)
Cbc0001I Search completed - best objective -34.38209999999999, took 5641 iterations and 34 nodes (0.70 seconds)
Cbc0032I Strong branching done 406 times (6636 iterations), fathomed 5 nodes and fixed 24 variables
Cbc0035I Maximum depth 10, 113 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 119 (-33) columns and 1997 (-1306) elements
Clp1000I sum of infeasibilities 1.09248e-07 - average 1.01156e-09, 60 fixed columns
Coin0506I Presolve 56 (-52) rows, 59 (-60) columns and 393 (-1604) elements
Clp0006I 0  Obj 182.2641 Dual inf 8.9832115 (59)
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 198.22213
Clp0000I Optimal - objective value 198.22213
Coin0511I After Postsolve, objective 198.22213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 198.22213
Clp0000I Optimal - objective value 198.22213
Clp0000I Optimal - objective value 198.22213
Clp0000I Optimal - objective value 198.22213
Coin0511I After Postsolve, objective 198.22213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 198.2221331 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 115 columns (115 integer (115 of which binary)) and 1879 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 11.8103
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.64062 iterations 58
Cbc0038I Solution found of 1.64062
Cbc0038I Rounding solution of -15.705 is better than previous of 1.64062

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 30 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -15.705 to -50.3594 (0.05 seconds)
Cbc0038I Round again with cutoff of -55.5304
Cbc0038I Pass   2: suminf.    3.73695 (26) obj. -55.5304 iterations 20
Cbc0038I Pass   3: suminf.    0.37519 (7) obj. -55.5304 iterations 43
Cbc0038I Pass   4: suminf.    0.37519 (7) obj. -55.5304 iterations 0
Cbc0038I Pass   5: suminf.    0.63881 (4) obj. -55.5304 iterations 15
Cbc0038I Pass   6: suminf.    4.19815 (15) obj. -55.5304 iterations 27
Cbc0038I Pass   7: suminf.    1.60474 (10) obj. -55.5304 iterations 6
Cbc0038I Pass   8: suminf.    0.67568 (5) obj. -55.5304 iterations 10
Cbc0038I Pass   9: suminf.    0.37731 (6) obj. -55.5304 iterations 19
Cbc0038I Pass  10: suminf.    0.37519 (7) obj. -55.5304 iterations 8
Cbc0038I Pass  11: suminf.    0.63881 (4) obj. -55.5304 iterations 14
Cbc0038I Pass  12: suminf.    5.02864 (19) obj. -55.5304 iterations 20
Cbc0038I Pass  13: suminf.    2.52860 (14) obj. -55.5304 iterations 6
Cbc0038I Pass  14: suminf.    2.09470 (13) obj. -55.5304 iterations 1
Cbc0038I Pass  15: suminf.    0.13408 (2) obj. -55.5304 iterations 14
Cbc0038I Pass  16: suminf.    0.13408 (2) obj. -55.5304 iterations 3
Cbc0038I Pass  17: suminf.    0.14815 (1) obj. -55.7193 iterations 7
Cbc0038I Pass  18: suminf.    0.13682 (1) obj. -55.5304 iterations 5
Cbc0038I Pass  19: suminf.    3.50471 (15) obj. -55.5304 iterations 24
Cbc0038I Pass  20: suminf.    2.21844 (10) obj. -55.5304 iterations 7
Cbc0038I Pass  21: suminf.    1.58713 (7) obj. -55.5304 iterations 4
Cbc0038I Pass  22: suminf.    0.13682 (1) obj. -55.5304 iterations 11
Cbc0038I Pass  23: suminf.    2.45929 (10) obj. -55.5304 iterations 18
Cbc0038I Pass  24: suminf.    0.68471 (3) obj. -57.1744 iterations 10
Cbc0038I Pass  25: suminf.    0.13682 (1) obj. -55.5304 iterations 6
Cbc0038I Pass  26: suminf.    0.14815 (1) obj. -55.7193 iterations 4
Cbc0038I Pass  27: suminf.    3.78934 (13) obj. -55.5304 iterations 13
Cbc0038I Pass  28: suminf.    0.94000 (3) obj. -56.7693 iterations 11
Cbc0038I Pass  29: suminf.    4.40914 (15) obj. -55.5304 iterations 15
Cbc0038I Pass  30: suminf.    1.46270 (6) obj. -55.5304 iterations 12
Cbc0038I Pass  31: suminf.    0.13682 (1) obj. -55.5304 iterations 10
Cbc0038I Rounding solution of -53.2493 is better than previous of -50.3594

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 59 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -64.838
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    4.18253 (26) obj. -64.838 iterations 0
Cbc0038I Pass  32: suminf.    0.81174 (11) obj. -64.838 iterations 51
Cbc0038I Pass  33: suminf.    0.81174 (11) obj. -64.838 iterations 0
Cbc0038I Pass  34: suminf.    1.87966 (10) obj. -64.838 iterations 16
Cbc0038I Pass  35: suminf.    1.79444 (12) obj. -64.838 iterations 9
Cbc0038I Pass  36: suminf.    1.95109 (10) obj. -64.838 iterations 9
Cbc0038I Pass  37: suminf.    1.86546 (11) obj. -64.838 iterations 10
Cbc0038I Pass  38: suminf.    1.88128 (9) obj. -64.838 iterations 9
Cbc0038I Pass  39: suminf.    3.45436 (15) obj. -64.838 iterations 27
Cbc0038I Pass  40: suminf.    1.54505 (12) obj. -64.838 iterations 22
Cbc0038I Pass  41: suminf.    1.88128 (9) obj. -64.838 iterations 16
Cbc0038I Pass  42: suminf.    1.79444 (12) obj. -64.838 iterations 8
Cbc0038I Pass  43: suminf.    1.95109 (10) obj. -64.838 iterations 7
Cbc0038I Pass  44: suminf.    1.86546 (11) obj. -64.838 iterations 10
Cbc0038I Pass  45: suminf.    1.85863 (10) obj. -64.838 iterations 11
Cbc0038I Pass  46: suminf.    3.21884 (15) obj. -64.838 iterations 21
Cbc0038I Pass  47: suminf.    1.66257 (13) obj. -64.838 iterations 20
Cbc0038I Pass  48: suminf.    1.88128 (9) obj. -64.838 iterations 21
Cbc0038I Pass  49: suminf.    1.79444 (12) obj. -64.838 iterations 7
Cbc0038I Pass  50: suminf.    1.95109 (10) obj. -64.838 iterations 8
Cbc0038I Pass  51: suminf.    1.86546 (11) obj. -64.838 iterations 10
Cbc0038I Pass  52: suminf.    1.88128 (9) obj. -64.838 iterations 9
Cbc0038I Pass  53: suminf.    2.83935 (13) obj. -64.838 iterations 18
Cbc0038I Pass  54: suminf.    1.94230 (13) obj. -64.838 iterations 21
Cbc0038I Pass  55: suminf.    1.88128 (9) obj. -64.838 iterations 15
Cbc0038I Pass  56: suminf.    1.79444 (12) obj. -64.838 iterations 10
Cbc0038I Pass  57: suminf.    1.95109 (10) obj. -64.838 iterations 9
Cbc0038I Pass  58: suminf.    1.86546 (11) obj. -64.838 iterations 10
Cbc0038I Pass  59: suminf.    1.88128 (9) obj. -64.838 iterations 9
Cbc0038I Pass  60: suminf.    3.54586 (16) obj. -64.838 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 56 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -53.2493 - took 0.06 seconds
Cbc0012I Integer solution of -53.24933 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 36 added rows had average density of 23.083333
Cbc0013I At root node, 53 cuts changed objective from -102.0686 to -53.24933 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 596 row cuts average 3.6 elements, 22 column cuts (56 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 43 row cuts average 50.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 67 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 16 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 236 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 418 row cuts average 53.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0001I Search completed - best objective -53.24932999999999, took 354 iterations and 0 nodes (0.33 seconds)
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.34

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 71 (-7) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 3.57992e-05 - average 2.77513e-07, 17 fixed columns
Coin0506I Presolve 91 (-38) rows, 52 (-19) columns and 278 (-114) elements
Clp0029I End of values pass after 52 iterations
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Coin0511I After Postsolve, objective 73.00908, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2268098 - largest nonzero change 0 ( 0%) - largest zero change 2.9782016e-05
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Coin0511I After Postsolve, objective 73.00908, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.00907959 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 71 columns (70 integer (70 of which binary)) and 458 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.610%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 4.99425
Cbc0038I Solution found of -16.9647
Cbc0038I Relaxing continuous gives -25.2419
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 62 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -25.2419 to -33.6659 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.4695
Cbc0038I Pass   1: suminf.    1.22797 (34) obj. -37.4695 iterations 40
Cbc0038I Pass   2: suminf.    1.20494 (5) obj. -37.4695 iterations 40
Cbc0038I Pass   3: suminf.    1.04069 (5) obj. -37.4695 iterations 3
Cbc0038I Pass   4: suminf.    0.69263 (3) obj. -37.4695 iterations 6
Cbc0038I Pass   5: suminf.    0.51760 (3) obj. -37.4695 iterations 3
Cbc0038I Pass   6: suminf.    1.09177 (4) obj. -37.4695 iterations 9
Cbc0038I Pass   7: suminf.    0.49110 (3) obj. -37.4695 iterations 3
Cbc0038I Pass   8: suminf.    0.49110 (3) obj. -37.4695 iterations 0
Cbc0038I Pass   9: suminf.    0.76887 (3) obj. -37.4695 iterations 7
Cbc0038I Pass  10: suminf.    0.74779 (3) obj. -37.4695 iterations 4
Cbc0038I Pass  11: suminf.    0.49967 (3) obj. -37.4695 iterations 7
Cbc0038I Pass  12: suminf.    1.52978 (7) obj. -37.4695 iterations 13
Cbc0038I Pass  13: suminf.    0.80497 (5) obj. -37.4695 iterations 12
Cbc0038I Pass  14: suminf.    1.49151 (4) obj. -37.4695 iterations 11
Cbc0038I Pass  15: suminf.    0.70111 (2) obj. -37.4695 iterations 6
Cbc0038I Pass  16: suminf.    0.70111 (2) obj. -37.4695 iterations 0
Cbc0038I Pass  17: suminf.    0.91991 (2) obj. -37.4695 iterations 4
Cbc0038I Pass  18: suminf.    0.65624 (2) obj. -37.4695 iterations 5
Cbc0038I Pass  19: suminf.    0.63195 (3) obj. -37.4695 iterations 14
Cbc0038I Pass  20: suminf.    0.63195 (3) obj. -37.4695 iterations 4
Cbc0038I Pass  21: suminf.    0.88521 (8) obj. -37.4695 iterations 14
Cbc0038I Pass  22: suminf.    0.61710 (7) obj. -37.4695 iterations 2
Cbc0038I Pass  23: suminf.    1.54275 (4) obj. -37.4695 iterations 8
Cbc0038I Pass  24: suminf.    0.85199 (4) obj. -37.4695 iterations 5
Cbc0038I Pass  25: suminf.    0.58621 (3) obj. -37.4695 iterations 2
Cbc0038I Pass  26: suminf.    0.85660 (4) obj. -37.4695 iterations 5
Cbc0038I Pass  27: suminf.    0.70370 (3) obj. -37.4695 iterations 5
Cbc0038I Pass  28: suminf.    0.70370 (3) obj. -37.4695 iterations 0
Cbc0038I Pass  29: suminf.    0.98580 (3) obj. -37.4695 iterations 6
Cbc0038I Pass  30: suminf.    0.30033 (2) obj. -37.4695 iterations 2
Cbc0038I Rounding solution of -34.3821 is better than previous of -33.6659

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -44.316
Cbc0038I Pass  30: suminf.    1.91553 (34) obj. -44.316 iterations 0
Cbc0038I Pass  31: suminf.    0.88265 (4) obj. -44.316 iterations 37
Cbc0038I Pass  32: suminf.    0.88265 (4) obj. -44.316 iterations 1
Cbc0038I Pass  33: suminf.    1.63577 (10) obj. -44.316 iterations 13
Cbc0038I Pass  34: suminf.    1.33812 (7) obj. -44.316 iterations 4
Cbc0038I Pass  35: suminf.    1.75899 (6) obj. -44.316 iterations 8
Cbc0038I Pass  36: suminf.    0.76385 (3) obj. -44.316 iterations 3
Cbc0038I Pass  37: suminf.    0.57520 (3) obj. -44.316 iterations 4
Cbc0038I Pass  38: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  39: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  40: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  41: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I Pass  42: suminf.    2.11963 (5) obj. -44.316 iterations 10
Cbc0038I Pass  43: suminf.    1.35415 (4) obj. -44.316 iterations 3
Cbc0038I Pass  44: suminf.    1.35415 (4) obj. -44.316 iterations 0
Cbc0038I Pass  45: suminf.    0.64834 (3) obj. -44.316 iterations 5
Cbc0038I Pass  46: suminf.    0.57520 (3) obj. -44.316 iterations 2
Cbc0038I Pass  47: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  48: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  49: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  50: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I Pass  51: suminf.    2.11963 (5) obj. -44.316 iterations 10
Cbc0038I Pass  52: suminf.    1.35415 (4) obj. -44.316 iterations 3
Cbc0038I Pass  53: suminf.    1.35415 (4) obj. -44.316 iterations 0
Cbc0038I Pass  54: suminf.    0.64834 (3) obj. -44.316 iterations 5
Cbc0038I Pass  55: suminf.    0.57520 (3) obj. -44.316 iterations 2
Cbc0038I Pass  56: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  57: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  58: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  59: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -34.3821 - took 0.08 seconds
Cbc0012I Integer solution of -34.3821 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 126 rows 71 columns, reduced to 63 rows 36 columns
Cbc0031I 19 added rows had average density of 53.263158
Cbc0013I At root node, 19 cuts changed objective from -71.701636 to -61.952612 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5985 row cuts average 5.0 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1268 row cuts average 70.9 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -34.3821 best solution, best possible -61.952612 (0.69 seconds)
Cbc0001I Search completed - best objective -34.38209999999999, took 5641 iterations and 34 nodes (0.81 seconds)
Cbc0032I Strong branching done 406 times (6636 iterations), fathomed 5 nodes and fixed 24 variables
Cbc0035I Maximum depth 10, 113 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 112 (-41) columns and 1795 (-1509) elements
Clp1000I sum of infeasibilities 1.21118e-07 - average 1.19919e-09, 21 fixed columns
Coin0506I Presolve 79 (-22) rows, 88 (-24) columns and 1240 (-555) elements
Clp0006I 0  Obj 81.663424 Dual inf 8.3640664 (87)
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 2.0720413 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 89.124229
Clp0000I Optimal - objective value 89.124229
Coin0511I After Postsolve, objective 89.124229, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 89.124229
Clp0000I Optimal - objective value 89.124229
Clp0000I Optimal - objective value 89.124229
Clp0000I Optimal - objective value 89.124229
Coin0511I After Postsolve, objective 89.124229, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.12422922 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 113 columns (113 integer (113 of which binary)) and 1846 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 1.67654
Cbc0038I Pass   1: suminf.    1.62701 (29) obj. -66.1153 iterations 3
Cbc0038I Pass   2: suminf.    0.24416 (6) obj. -16.6125 iterations 24
Cbc0038I Solution found of -7.01967
Cbc0038I Rounding solution of -26.331 is better than previous of -7.01967

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 31 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -30.3654
Cbc0038I Pass   3: suminf.    1.62701 (29) obj. -66.1153 iterations 0
Cbc0038I Pass   4: suminf.    1.06257 (8) obj. -30.3654 iterations 33
Cbc0038I Pass   5: suminf.    0.76014 (12) obj. -30.3654 iterations 4
Cbc0038I Pass   6: suminf.    3.47751 (11) obj. -30.3654 iterations 7
Cbc0038I Pass   7: suminf.    0.41390 (8) obj. -30.3654 iterations 3
Cbc0038I Pass   8: suminf.    0.41390 (8) obj. -30.3654 iterations 0
Cbc0038I Pass   9: suminf.    3.47751 (11) obj. -30.3654 iterations 18
Cbc0038I Pass  10: suminf.    1.30900 (17) obj. -30.3654 iterations 18
Cbc0038I Pass  11: suminf.    1.17308 (16) obj. -30.3654 iterations 7
Cbc0038I Pass  12: suminf.    1.05578 (7) obj. -30.3654 iterations 26
Cbc0038I Pass  13: suminf.    0.77274 (10) obj. -30.3654 iterations 2
Cbc0038I Pass  14: suminf.    3.72361 (12) obj. -30.3654 iterations 3
Cbc0038I Pass  15: suminf.    0.46740 (6) obj. -31.3833 iterations 6
Cbc0038I Pass  16: suminf.    0.46740 (6) obj. -31.3833 iterations 0
Cbc0038I Pass  17: suminf.    0.91089 (7) obj. -30.3654 iterations 11
Cbc0038I Pass  18: suminf.    0.77274 (10) obj. -30.3654 iterations 2
Cbc0038I Pass  19: suminf.    3.72361 (12) obj. -30.3654 iterations 3
Cbc0038I Pass  20: suminf.    0.46740 (6) obj. -31.3833 iterations 6
Cbc0038I Pass  21: suminf.    0.46740 (6) obj. -31.3833 iterations 0
Cbc0038I Pass  22: suminf.    0.91089 (7) obj. -30.3654 iterations 11
Cbc0038I Pass  23: suminf.    0.77274 (10) obj. -30.3654 iterations 2
Cbc0038I Pass  24: suminf.    3.72361 (12) obj. -30.3654 iterations 3
Cbc0038I Pass  25: suminf.    0.46740 (6) obj. -31.3833 iterations 6
Cbc0038I Pass  26: suminf.    0.46740 (6) obj. -31.3833 iterations 0
Cbc0038I Pass  27: suminf.    0.91089 (7) obj. -30.3654 iterations 11
Cbc0038I Pass  28: suminf.    0.77274 (10) obj. -30.3654 iterations 2
Cbc0038I Pass  29: suminf.    3.72361 (12) obj. -30.3654 iterations 3
Cbc0038I Pass  30: suminf.    0.46740 (6) obj. -31.3833 iterations 6
Cbc0038I Pass  31: suminf.    0.46740 (6) obj. -31.3833 iterations 0
Cbc0038I Pass  32: suminf.    0.91089 (7) obj. -30.3654 iterations 11
Cbc0038I Rounding solution of -27.1926 is better than previous of -26.331

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 37 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -27.1926 to -34.2966 (0.08 seconds)
Cbc0038I Round again with cutoff of -40.7722
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.62701 (29) obj. -66.1153 iterations 0
Cbc0038I Pass  33: suminf.    0.81839 (13) obj. -40.7722 iterations 43
Cbc0038I Pass  34: suminf.    0.61810 (13) obj. -40.7722 iterations 1
Cbc0038I Pass  35: suminf.    4.55604 (16) obj. -40.7722 iterations 13
Cbc0038I Pass  36: suminf.    0.66208 (10) obj. -42.9939 iterations 8
Cbc0038I Pass  37: suminf.    0.66208 (10) obj. -42.9939 iterations 0
Cbc0038I Pass  38: suminf.    0.92882 (13) obj. -40.7722 iterations 17
Cbc0038I Pass  39: suminf.    0.92882 (13) obj. -40.7722 iterations 0
Cbc0038I Pass  40: suminf.    0.93078 (13) obj. -40.7722 iterations 3
Cbc0038I Pass  41: suminf.    0.93078 (13) obj. -40.7722 iterations 0
Cbc0038I Pass  42: suminf.    0.92882 (13) obj. -40.7722 iterations 4
Cbc0038I Pass  43: suminf.    1.52338 (15) obj. -40.7722 iterations 19
Cbc0038I Pass  44: suminf.    1.28812 (12) obj. -40.7722 iterations 2
Cbc0038I Pass  45: suminf.    0.94497 (14) obj. -40.7722 iterations 10
Cbc0038I Pass  46: suminf.    0.63131 (13) obj. -40.7722 iterations 1
Cbc0038I Pass  47: suminf.    4.81356 (17) obj. -40.7722 iterations 12
Cbc0038I Pass  48: suminf.    0.66208 (10) obj. -41.9939 iterations 6
Cbc0038I Pass  49: suminf.    0.66208 (10) obj. -41.9939 iterations 0
Cbc0038I Pass  50: suminf.    0.80047 (13) obj. -40.7722 iterations 17
Cbc0038I Pass  51: suminf.    0.63131 (13) obj. -40.7722 iterations 1
Cbc0038I Pass  52: suminf.    4.81356 (17) obj. -40.7722 iterations 12
Cbc0038I Pass  53: suminf.    0.66208 (10) obj. -41.9939 iterations 6
Cbc0038I Pass  54: suminf.    0.66208 (10) obj. -41.9939 iterations 0
Cbc0038I Pass  55: suminf.    0.80047 (13) obj. -40.7722 iterations 17
Cbc0038I Pass  56: suminf.    0.63131 (13) obj. -40.7722 iterations 1
Cbc0038I Pass  57: suminf.    4.81356 (17) obj. -40.7722 iterations 12
Cbc0038I Pass  58: suminf.    0.66208 (10) obj. -41.9939 iterations 6
Cbc0038I Pass  59: suminf.    0.66208 (10) obj. -41.9939 iterations 0
Cbc0038I Pass  60: suminf.    0.80047 (13) obj. -40.7722 iterations 17
Cbc0038I Pass  61: suminf.    0.63131 (13) obj. -40.7722 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -34.2966 - took 0.09 seconds
Cbc0012I Integer solution of -34.29664 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 98 rows 113 columns, reduced to 25 rows 26 columns
Cbc0031I 48 added rows had average density of 16.8125
Cbc0013I At root node, 48 cuts changed objective from -66.674 to -41.246218 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 2799 row cuts average 4.3 elements, 3 column cuts (3 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 62 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 68 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 173 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 125 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 267 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 137 row cuts average 32.3 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -34.29664 best solution, best possible -41.246218 (0.74 seconds)
Cbc0012I Integer solution of -34.38211 found by rounding after 484 iterations and 1 nodes (0.76 seconds)
Cbc0012I Integer solution of -34.38216 found by DiveCoefficient after 798 iterations and 4 nodes (1.13 seconds)
Cbc0010I After 14 nodes, 3 on tree, -34.38216 best solution, best possible -41.246218 (1.55 seconds)
Cbc0010I After 27 nodes, 6 on tree, -34.38216 best solution, best possible -41.246218 (2.33 seconds)
Cbc0001I Search completed - best objective -34.38216, took 2230 iterations and 36 nodes (2.57 seconds)
Cbc0032I Strong branching done 592 times (9689 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 8, 75 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       2.58

