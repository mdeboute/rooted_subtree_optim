Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 2.85736e-06 - average 2.05565e-08, 10 fixed columns
Coin0506I Presolve 119 (-20) rows, 66 (-10) columns and 362 (-60) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.8013192 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 99.255267
Clp0000I Optimal - objective value 99.255267
Coin0511I After Postsolve, objective 99.255267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 99.255267
Clp0000I Optimal - objective value 99.255267
Clp0000I Optimal - objective value 99.255267
Coin0511I After Postsolve, objective 99.255267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.25526657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 11.206
Cbc0038I Solution found of -3.77125
Cbc0038I Relaxing continuous gives -12.7573
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -12.7573 to -73.5328 (0.06 seconds)
Cbc0038I Round again with cutoff of -76.1051
Cbc0038I Pass   1: suminf.    5.56044 (27) obj. -76.1051 iterations 54
Cbc0038I Pass   2: suminf.    4.91667 (13) obj. -76.1051 iterations 11
Cbc0038I Pass   3: suminf.    4.91667 (13) obj. -76.1051 iterations 0
Cbc0038I Pass   4: suminf.    1.82209 (7) obj. -76.1051 iterations 24
Cbc0038I Pass   5: suminf.    1.64438 (7) obj. -76.1051 iterations 4
Cbc0038I Pass   6: suminf.    2.47256 (7) obj. -76.1051 iterations 8
Cbc0038I Pass   7: suminf.    1.51268 (6) obj. -76.1051 iterations 4
Cbc0038I Pass   8: suminf.    1.51268 (6) obj. -76.1051 iterations 0
Cbc0038I Pass   9: suminf.    2.60504 (9) obj. -76.1051 iterations 14
Cbc0038I Pass  10: suminf.    1.93296 (7) obj. -76.1051 iterations 9
Cbc0038I Pass  11: suminf.    2.14019 (6) obj. -76.1051 iterations 12
Cbc0038I Pass  12: suminf.    1.05685 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  13: suminf.    1.04851 (6) obj. -76.1051 iterations 1
Cbc0038I Pass  14: suminf.    1.47444 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  15: suminf.    1.30095 (6) obj. -76.1051 iterations 2
Cbc0038I Pass  16: suminf.    1.91713 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  17: suminf.    3.50515 (10) obj. -76.1051 iterations 20
Cbc0038I Pass  18: suminf.    2.47715 (9) obj. -76.1051 iterations 7
Cbc0038I Pass  19: suminf.    1.72437 (8) obj. -76.1051 iterations 3
Cbc0038I Pass  20: suminf.    1.87716 (5) obj. -76.1051 iterations 14
Cbc0038I Pass  21: suminf.    1.09591 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  22: suminf.    1.53450 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  23: suminf.    1.47328 (6) obj. -76.1051 iterations 2
Cbc0038I Pass  24: suminf.    4.24595 (15) obj. -76.1051 iterations 20
Cbc0038I Pass  25: suminf.    2.24553 (9) obj. -76.1051 iterations 13
Cbc0038I Pass  26: suminf.    1.87716 (5) obj. -76.1051 iterations 20
Cbc0038I Pass  27: suminf.    1.09591 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  28: suminf.    1.53450 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  29: suminf.    1.47328 (6) obj. -76.1051 iterations 2
Cbc0038I Pass  30: suminf.    2.91702 (9) obj. -76.1051 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 109 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -73.5328 - took 0.11 seconds
Cbc0012I Integer solution of -73.53278 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0031I 23 added rows had average density of 44.478261
Cbc0013I At root node, 23 cuts changed objective from -99.255267 to -90.172441 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10705 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1589 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -73.53278 best solution, best possible -90.172441 (0.88 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 17 rows 15 columns
Cbc0001I Search completed - best objective -73.53278, took 8883 iterations and 82 nodes (1.23 seconds)
Cbc0032I Strong branching done 976 times (14072 iterations), fathomed 11 nodes and fixed 59 variables
Cbc0035I Maximum depth 23, 185 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 112 (-40) columns and 1787 (-1516) elements
Clp1000I sum of infeasibilities 1.11593e-07 - average 1.10488e-09, 46 fixed columns
Coin0506I Presolve 56 (-45) rows, 66 (-46) columns and 238 (-1549) elements
Clp0006I 0  Obj 39.972009 Dual inf 5.5058591 (66)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 1.9081123 - largest nonzero change 2.5205669e-05 ( 0.0012557832%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 43.878643
Clp0000I Optimal - objective value 43.878643
Coin0511I After Postsolve, objective 43.878643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 43.878643 Dual inf 67.005639 (37)
Clp0014I Perturbing problem by 0.001% of 2.0211977 - largest nonzero change 2.9113569e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 109.99529
Clp0000I Optimal - objective value 109.99529
Clp0000I Optimal - objective value 109.99529
Coin0511I After Postsolve, objective 109.99529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.9952879 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 112 columns (112 integer (112 of which binary)) and 1789 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.556%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 3.17152
Cbc0038I Pass   1: suminf.    3.10719 (31) obj. -103.885 iterations 13
Cbc0038I Pass   2: suminf.    0.15875 (4) obj. -57.4566 iterations 23
Cbc0038I Solution found of -53.6154
Cbc0038I Rounding solution of -64.5029 is better than previous of -53.6154

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 112 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -68.4499
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.10719 (31) obj. -103.885 iterations 0
Cbc0038I Pass   4: suminf.    1.20642 (19) obj. -76.3263 iterations 13
Cbc0038I Pass   5: suminf.    1.12364 (5) obj. -68.4499 iterations 26
Cbc0038I Pass   6: suminf.    0.73647 (4) obj. -70.197 iterations 3
Cbc0038I Pass   7: suminf.    1.08590 (4) obj. -68.4499 iterations 11
Cbc0038I Pass   8: suminf.    1.72731 (13) obj. -68.4499 iterations 31
Cbc0038I Pass   9: suminf.    1.39852 (11) obj. -68.4499 iterations 12
Cbc0038I Pass  10: suminf.    1.11376 (7) obj. -68.4499 iterations 15
Cbc0038I Pass  11: suminf.    1.11376 (7) obj. -68.4499 iterations 1
Cbc0038I Pass  12: suminf.    0.75367 (5) obj. -68.4499 iterations 7
Cbc0038I Pass  13: suminf.    0.75367 (5) obj. -68.4499 iterations 0
Cbc0038I Pass  14: suminf.    1.16629 (5) obj. -68.4499 iterations 8
Cbc0038I Pass  15: suminf.    0.78698 (5) obj. -68.4499 iterations 4
Cbc0038I Pass  16: suminf.    1.42713 (14) obj. -68.4499 iterations 36
Cbc0038I Pass  17: suminf.    1.03223 (12) obj. -71.6721 iterations 13
Cbc0038I Pass  18: suminf.    0.84108 (8) obj. -68.4499 iterations 16
Cbc0038I Pass  19: suminf.    0.47664 (5) obj. -68.5821 iterations 5
Cbc0038I Pass  20: suminf.    0.84108 (8) obj. -68.4499 iterations 9
Cbc0038I Pass  21: suminf.    1.22393 (14) obj. -68.4499 iterations 16
Cbc0038I Pass  22: suminf.    1.21473 (14) obj. -68.4499 iterations 6
Cbc0038I Pass  23: suminf.    0.83147 (7) obj. -68.4499 iterations 17
Cbc0038I Pass  24: suminf.    1.22181 (10) obj. -68.4499 iterations 23
Cbc0038I Pass  25: suminf.    1.00680 (10) obj. -68.4499 iterations 3
Cbc0038I Pass  26: suminf.    0.50015 (6) obj. -68.4499 iterations 13
Cbc0038I Pass  27: suminf.    0.49975 (5) obj. -68.4499 iterations 7
Cbc0038I Pass  28: suminf.    1.38318 (6) obj. -68.4499 iterations 6
Cbc0038I Pass  29: suminf.    1.13358 (6) obj. -69.1987 iterations 2
Cbc0038I Pass  30: suminf.    1.04873 (5) obj. -68.4499 iterations 11
Cbc0038I Pass  31: suminf.    0.55519 (4) obj. -69.0073 iterations 5
Cbc0038I Pass  32: suminf.    1.04873 (5) obj. -68.4499 iterations 11
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 112 columns, reduced to 17 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -64.5029 to -69.4987 (0.06 seconds)
Cbc0038I Round again with cutoff of -76.3935
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.10719 (31) obj. -103.885 iterations 0
Cbc0038I Pass  33: suminf.    0.75873 (12) obj. -76.3935 iterations 20
Cbc0038I Pass  34: suminf.    0.75873 (12) obj. -76.3935 iterations 2
Cbc0038I Pass  35: suminf.    0.47449 (4) obj. -76.3935 iterations 17
Cbc0038I Pass  36: suminf.    0.47449 (4) obj. -76.3935 iterations 0
Cbc0038I Pass  37: suminf.    0.90840 (9) obj. -76.3935 iterations 7
Cbc0038I Pass  38: suminf.    0.73535 (10) obj. -76.3935 iterations 5
Cbc0038I Pass  39: suminf.    0.83494 (6) obj. -76.3935 iterations 13
Cbc0038I Pass  40: suminf.    0.48596 (6) obj. -77.4404 iterations 3
Cbc0038I Pass  41: suminf.    1.35092 (7) obj. -76.3935 iterations 13
Cbc0038I Pass  42: suminf.    0.98345 (7) obj. -77.533 iterations 4
Cbc0038I Pass  43: suminf.    1.14206 (7) obj. -76.3935 iterations 5
Cbc0038I Pass  44: suminf.    1.13437 (8) obj. -76.3935 iterations 3
Cbc0038I Pass  45: suminf.    1.06652 (6) obj. -76.3935 iterations 11
Cbc0038I Pass  46: suminf.    0.90835 (6) obj. -76.868 iterations 8
Cbc0038I Pass  47: suminf.    1.06652 (6) obj. -76.3935 iterations 10
Cbc0038I Pass  48: suminf.    1.53786 (11) obj. -76.3935 iterations 23
Cbc0038I Pass  49: suminf.    1.28307 (10) obj. -78.6866 iterations 6
Cbc0038I Pass  50: suminf.    1.35142 (9) obj. -76.3935 iterations 17
Cbc0038I Pass  51: suminf.    1.26900 (7) obj. -76.3935 iterations 8
Cbc0038I Pass  52: suminf.    1.28181 (7) obj. -76.3935 iterations 8
Cbc0038I Pass  53: suminf.    0.97005 (7) obj. -77.3287 iterations 9
Cbc0038I Pass  54: suminf.    2.27583 (14) obj. -76.3935 iterations 23
Cbc0038I Pass  55: suminf.    1.63807 (12) obj. -76.7513 iterations 7
Cbc0038I Pass  56: suminf.    1.98837 (9) obj. -76.3935 iterations 12
Cbc0038I Pass  57: suminf.    1.01693 (8) obj. -76.3935 iterations 5
Cbc0038I Pass  58: suminf.    0.85726 (9) obj. -76.3935 iterations 10
Cbc0038I Pass  59: suminf.    1.34042 (8) obj. -76.3935 iterations 15
Cbc0038I Pass  60: suminf.    1.04211 (8) obj. -76.743 iterations 4
Cbc0038I Pass  61: suminf.    1.21688 (8) obj. -76.3935 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 112 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -69.4987 - took 0.06 seconds
Cbc0012I Integer solution of -69.49871 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 101 rows 112 columns, reduced to 0 rows 0 columns
Cbc0031I 55 added rows had average density of 32.909091
Cbc0013I At root node, 55 cuts changed objective from -103.97204 to -77.468532 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10205 row cuts average 10.7 elements, 3 column cuts (21 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1374 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 408 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 763 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 270 row cuts average 59.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 96 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.693 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -69.49871 best solution, best possible -77.468532 (2.34 seconds)
Cbc0016I Integer solution of -69.99061 found by strong branching after 4722 iterations and 21 nodes (2.80 seconds)
Cbc0012I Integer solution of -73.37223 found by rounding after 4859 iterations and 28 nodes (2.84 seconds)
Cbc0012I Integer solution of -73.53278 found by rounding after 4984 iterations and 30 nodes (2.85 seconds)
Cbc0038I Full problem 101 rows 112 columns, reduced to 37 rows 53 columns
Cbc0010I After 41 nodes, 9 on tree, -73.53278 best solution, best possible -77.468532 (3.05 seconds)
Cbc0001I Search completed - best objective -73.53278, took 6351 iterations and 54 nodes (3.10 seconds)
Cbc0032I Strong branching done 658 times (12583 iterations), fathomed 9 nodes and fixed 9 variables
Cbc0035I Maximum depth 16, 121 variables fixed on reduced cost
Total time (CPU seconds):       2.39   (Wallclock seconds):       3.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 2.85736e-06 - average 2.05565e-08, 10 fixed columns
Coin0506I Presolve 119 (-20) rows, 66 (-10) columns and 362 (-60) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.8013192 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 99.255267
Clp0000I Optimal - objective value 99.255267
Coin0511I After Postsolve, objective 99.255267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 99.255267
Clp0000I Optimal - objective value 99.255267
Clp0000I Optimal - objective value 99.255267
Coin0511I After Postsolve, objective 99.255267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.25526657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 11.206
Cbc0038I Solution found of -3.77125
Cbc0038I Relaxing continuous gives -12.7573
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -12.7573 to -73.5328 (0.06 seconds)
Cbc0038I Round again with cutoff of -76.1051
Cbc0038I Pass   1: suminf.    5.56044 (27) obj. -76.1051 iterations 54
Cbc0038I Pass   2: suminf.    4.91667 (13) obj. -76.1051 iterations 11
Cbc0038I Pass   3: suminf.    4.91667 (13) obj. -76.1051 iterations 0
Cbc0038I Pass   4: suminf.    1.82209 (7) obj. -76.1051 iterations 24
Cbc0038I Pass   5: suminf.    1.64438 (7) obj. -76.1051 iterations 4
Cbc0038I Pass   6: suminf.    2.47256 (7) obj. -76.1051 iterations 8
Cbc0038I Pass   7: suminf.    1.51268 (6) obj. -76.1051 iterations 4
Cbc0038I Pass   8: suminf.    1.51268 (6) obj. -76.1051 iterations 0
Cbc0038I Pass   9: suminf.    2.60504 (9) obj. -76.1051 iterations 14
Cbc0038I Pass  10: suminf.    1.93296 (7) obj. -76.1051 iterations 9
Cbc0038I Pass  11: suminf.    2.14019 (6) obj. -76.1051 iterations 12
Cbc0038I Pass  12: suminf.    1.05685 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  13: suminf.    1.04851 (6) obj. -76.1051 iterations 1
Cbc0038I Pass  14: suminf.    1.47444 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  15: suminf.    1.30095 (6) obj. -76.1051 iterations 2
Cbc0038I Pass  16: suminf.    1.91713 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  17: suminf.    3.50515 (10) obj. -76.1051 iterations 20
Cbc0038I Pass  18: suminf.    2.47715 (9) obj. -76.1051 iterations 7
Cbc0038I Pass  19: suminf.    1.72437 (8) obj. -76.1051 iterations 3
Cbc0038I Pass  20: suminf.    1.87716 (5) obj. -76.1051 iterations 14
Cbc0038I Pass  21: suminf.    1.09591 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  22: suminf.    1.53450 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  23: suminf.    1.47328 (6) obj. -76.1051 iterations 2
Cbc0038I Pass  24: suminf.    4.24595 (15) obj. -76.1051 iterations 20
Cbc0038I Pass  25: suminf.    2.24553 (9) obj. -76.1051 iterations 13
Cbc0038I Pass  26: suminf.    1.87716 (5) obj. -76.1051 iterations 20
Cbc0038I Pass  27: suminf.    1.09591 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  28: suminf.    1.53450 (6) obj. -76.1051 iterations 7
Cbc0038I Pass  29: suminf.    1.47328 (6) obj. -76.1051 iterations 2
Cbc0038I Pass  30: suminf.    2.91702 (9) obj. -76.1051 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 109 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -73.5328 - took 0.10 seconds
Cbc0012I Integer solution of -73.53278 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0031I 23 added rows had average density of 44.478261
Cbc0013I At root node, 23 cuts changed objective from -99.255267 to -90.172441 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10705 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1589 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -73.53278 best solution, best possible -90.172441 (0.83 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 17 rows 15 columns
Cbc0001I Search completed - best objective -73.53278, took 8883 iterations and 82 nodes (1.19 seconds)
Cbc0032I Strong branching done 976 times (14072 iterations), fathomed 11 nodes and fixed 59 variables
Cbc0035I Maximum depth 23, 185 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 112 (-41) columns and 1787 (-1517) elements
Clp1000I sum of infeasibilities 1.11593e-07 - average 1.10488e-09, 46 fixed columns
Coin0506I Presolve 56 (-45) rows, 66 (-46) columns and 238 (-1549) elements
Clp0006I 0  Obj 39.972009 Dual inf 5.5058591 (66)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 1.9081123 - largest nonzero change 2.5205669e-05 ( 0.0012557832%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 43.878643
Clp0000I Optimal - objective value 43.878643
Coin0511I After Postsolve, objective 43.878643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 43.878643 Dual inf 67.005639 (37)
Clp0014I Perturbing problem by 0.001% of 2.0211977 - largest nonzero change 2.9113569e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 109.99529
Clp0000I Optimal - objective value 109.99529
Clp0000I Optimal - objective value 109.99529
Coin0511I After Postsolve, objective 109.99529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.9952879 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 112 columns (112 integer (112 of which binary)) and 1789 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.556%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 3.17152
Cbc0038I Pass   1: suminf.    3.10719 (31) obj. -103.885 iterations 13
Cbc0038I Pass   2: suminf.    0.15875 (4) obj. -57.4566 iterations 23
Cbc0038I Solution found of -53.6154
Cbc0038I Rounding solution of -64.5029 is better than previous of -53.6154

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 112 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -68.4499
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.10719 (31) obj. -103.885 iterations 0
Cbc0038I Pass   4: suminf.    1.20642 (19) obj. -76.3263 iterations 13
Cbc0038I Pass   5: suminf.    1.12364 (5) obj. -68.4499 iterations 26
Cbc0038I Pass   6: suminf.    0.73647 (4) obj. -70.197 iterations 3
Cbc0038I Pass   7: suminf.    1.08590 (4) obj. -68.4499 iterations 11
Cbc0038I Pass   8: suminf.    1.72731 (13) obj. -68.4499 iterations 31
Cbc0038I Pass   9: suminf.    1.39852 (11) obj. -68.4499 iterations 12
Cbc0038I Pass  10: suminf.    1.11376 (7) obj. -68.4499 iterations 15
Cbc0038I Pass  11: suminf.    1.11376 (7) obj. -68.4499 iterations 1
Cbc0038I Pass  12: suminf.    0.75367 (5) obj. -68.4499 iterations 7
Cbc0038I Pass  13: suminf.    0.75367 (5) obj. -68.4499 iterations 0
Cbc0038I Pass  14: suminf.    1.16629 (5) obj. -68.4499 iterations 8
Cbc0038I Pass  15: suminf.    0.78698 (5) obj. -68.4499 iterations 4
Cbc0038I Pass  16: suminf.    1.42713 (14) obj. -68.4499 iterations 36
Cbc0038I Pass  17: suminf.    1.03223 (12) obj. -71.6721 iterations 13
Cbc0038I Pass  18: suminf.    0.84108 (8) obj. -68.4499 iterations 16
Cbc0038I Pass  19: suminf.    0.47664 (5) obj. -68.5821 iterations 5
Cbc0038I Pass  20: suminf.    0.84108 (8) obj. -68.4499 iterations 9
Cbc0038I Pass  21: suminf.    1.22393 (14) obj. -68.4499 iterations 16
Cbc0038I Pass  22: suminf.    1.21473 (14) obj. -68.4499 iterations 6
Cbc0038I Pass  23: suminf.    0.83147 (7) obj. -68.4499 iterations 17
Cbc0038I Pass  24: suminf.    1.22181 (10) obj. -68.4499 iterations 23
Cbc0038I Pass  25: suminf.    1.00680 (10) obj. -68.4499 iterations 3
Cbc0038I Pass  26: suminf.    0.50015 (6) obj. -68.4499 iterations 13
Cbc0038I Pass  27: suminf.    0.49975 (5) obj. -68.4499 iterations 7
Cbc0038I Pass  28: suminf.    1.38318 (6) obj. -68.4499 iterations 6
Cbc0038I Pass  29: suminf.    1.13358 (6) obj. -69.1987 iterations 2
Cbc0038I Pass  30: suminf.    1.04873 (5) obj. -68.4499 iterations 11
Cbc0038I Pass  31: suminf.    0.55519 (4) obj. -69.0073 iterations 5
Cbc0038I Pass  32: suminf.    1.04873 (5) obj. -68.4499 iterations 11
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 112 columns, reduced to 17 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -64.5029 to -69.4987 (0.05 seconds)
Cbc0038I Round again with cutoff of -76.3935
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.10719 (31) obj. -103.885 iterations 0
Cbc0038I Pass  33: suminf.    0.75873 (12) obj. -76.3935 iterations 20
Cbc0038I Pass  34: suminf.    0.75873 (12) obj. -76.3935 iterations 2
Cbc0038I Pass  35: suminf.    0.47449 (4) obj. -76.3935 iterations 17
Cbc0038I Pass  36: suminf.    0.47449 (4) obj. -76.3935 iterations 0
Cbc0038I Pass  37: suminf.    0.90840 (9) obj. -76.3935 iterations 7
Cbc0038I Pass  38: suminf.    0.73535 (10) obj. -76.3935 iterations 5
Cbc0038I Pass  39: suminf.    0.83494 (6) obj. -76.3935 iterations 13
Cbc0038I Pass  40: suminf.    0.48596 (6) obj. -77.4404 iterations 3
Cbc0038I Pass  41: suminf.    1.35092 (7) obj. -76.3935 iterations 13
Cbc0038I Pass  42: suminf.    0.98345 (7) obj. -77.533 iterations 4
Cbc0038I Pass  43: suminf.    1.14206 (7) obj. -76.3935 iterations 5
Cbc0038I Pass  44: suminf.    1.13437 (8) obj. -76.3935 iterations 3
Cbc0038I Pass  45: suminf.    1.06652 (6) obj. -76.3935 iterations 11
Cbc0038I Pass  46: suminf.    0.90835 (6) obj. -76.868 iterations 8
Cbc0038I Pass  47: suminf.    1.06652 (6) obj. -76.3935 iterations 10
Cbc0038I Pass  48: suminf.    1.53786 (11) obj. -76.3935 iterations 23
Cbc0038I Pass  49: suminf.    1.28307 (10) obj. -78.6866 iterations 6
Cbc0038I Pass  50: suminf.    1.35142 (9) obj. -76.3935 iterations 17
Cbc0038I Pass  51: suminf.    1.26900 (7) obj. -76.3935 iterations 8
Cbc0038I Pass  52: suminf.    1.28181 (7) obj. -76.3935 iterations 8
Cbc0038I Pass  53: suminf.    0.97005 (7) obj. -77.3287 iterations 9
Cbc0038I Pass  54: suminf.    2.27583 (14) obj. -76.3935 iterations 23
Cbc0038I Pass  55: suminf.    1.63807 (12) obj. -76.7513 iterations 7
Cbc0038I Pass  56: suminf.    1.98837 (9) obj. -76.3935 iterations 12
Cbc0038I Pass  57: suminf.    1.01693 (8) obj. -76.3935 iterations 5
Cbc0038I Pass  58: suminf.    0.85726 (9) obj. -76.3935 iterations 10
Cbc0038I Pass  59: suminf.    1.34042 (8) obj. -76.3935 iterations 15
Cbc0038I Pass  60: suminf.    1.04211 (8) obj. -76.743 iterations 4
Cbc0038I Pass  61: suminf.    1.21688 (8) obj. -76.3935 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 112 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -69.4987 - took 0.06 seconds
Cbc0012I Integer solution of -69.49871 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 101 rows 112 columns, reduced to 0 rows 0 columns
Cbc0031I 55 added rows had average density of 32.909091
Cbc0013I At root node, 55 cuts changed objective from -103.97204 to -77.468532 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10205 row cuts average 10.7 elements, 3 column cuts (21 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1374 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 408 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 763 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 270 row cuts average 59.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 96 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.701 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -69.49871 best solution, best possible -77.468532 (2.40 seconds)
Cbc0016I Integer solution of -69.99061 found by strong branching after 4722 iterations and 21 nodes (2.85 seconds)
Cbc0012I Integer solution of -73.37223 found by rounding after 4859 iterations and 28 nodes (2.89 seconds)
Cbc0012I Integer solution of -73.53278 found by rounding after 4984 iterations and 30 nodes (2.90 seconds)
Cbc0038I Full problem 101 rows 112 columns, reduced to 37 rows 53 columns
Cbc0010I After 43 nodes, 9 on tree, -73.53278 best solution, best possible -77.468532 (3.11 seconds)
Cbc0001I Search completed - best objective -73.53278, took 6351 iterations and 54 nodes (3.15 seconds)
Cbc0032I Strong branching done 658 times (12583 iterations), fathomed 9 nodes and fixed 9 variables
Cbc0035I Maximum depth 16, 121 variables fixed on reduced cost
Total time (CPU seconds):       2.40   (Wallclock seconds):       3.17

