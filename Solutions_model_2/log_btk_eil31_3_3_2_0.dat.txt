Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 23 (-10) columns and 118 (-65) elements
Clp1000I sum of infeasibilities 1.57143e-05 - average 3.92856e-07, 12 fixed columns
Coin0506I Presolve 18 (-22) rows, 11 (-12) columns and 50 (-68) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 745.28419
Clp0000I Optimal - objective value 745.28419
Coin0511I After Postsolve, objective 745.28419, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 745.28419
Clp0000I Optimal - objective value 745.28419
Clp0000I Optimal - objective value 745.28419
Coin0511I After Postsolve, objective 745.28419, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 745.2841859 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 23 columns (22 integer (22 of which binary)) and 119 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.8242
Cbc0038I Pass   1: suminf.    0.51237 (2) obj. -437.115 iterations 5
Cbc0038I Solution found of -173.763
Cbc0038I Relaxing continuous gives -173.763
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -173.763 to -384.558 (0.01 seconds)
Cbc0038I Round again with cutoff of -404.102
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.51237 (2) obj. -437.115 iterations 0
Cbc0038I Pass   3: suminf.    0.42725 (2) obj. -404.102 iterations 1
Cbc0038I Pass   4: suminf.    0.82234 (2) obj. -404.102 iterations 3
Cbc0038I Pass   5: suminf.    0.82308 (3) obj. -404.102 iterations 1
Cbc0038I Pass   6: suminf.    0.45776 (3) obj. -404.102 iterations 1
Cbc0038I Pass   7: suminf.    0.55196 (2) obj. -418.537 iterations 4
Cbc0038I Pass   8: suminf.    0.51474 (2) obj. -404.102 iterations 3
Cbc0038I Pass   9: suminf.    0.69733 (2) obj. -404.102 iterations 3
Cbc0038I Pass  10: suminf.    0.52873 (3) obj. -404.102 iterations 1
Cbc0038I Pass  11: suminf.    0.55196 (2) obj. -418.537 iterations 2
Cbc0038I Pass  12: suminf.    0.52873 (3) obj. -404.102 iterations 4
Cbc0038I Pass  13: suminf.    0.33803 (2) obj. -434.397 iterations 5
Cbc0038I Pass  14: suminf.    0.06995 (1) obj. -404.102 iterations 3
Cbc0038I Pass  15: suminf.    0.15000 (1) obj. -426.469 iterations 1
Cbc0038I Pass  16: suminf.    1.63547 (6) obj. -404.102 iterations 10
Cbc0038I Pass  17: suminf.    0.05225 (1) obj. -404.102 iterations 8
Cbc0038I Pass  18: suminf.    0.07778 (1) obj. -413.038 iterations 2
Cbc0038I Pass  19: suminf.    1.40721 (5) obj. -404.102 iterations 7
Cbc0038I Pass  20: suminf.    0.52854 (3) obj. -404.102 iterations 3
Cbc0038I Pass  21: suminf.    0.62652 (3) obj. -404.102 iterations 2
Cbc0038I Pass  22: suminf.    1.09619 (3) obj. -404.102 iterations 3
Cbc0038I Pass  23: suminf.    1.09619 (3) obj. -404.102 iterations 0
Cbc0038I Pass  24: suminf.    0.43867 (4) obj. -404.102 iterations 2
Cbc0038I Pass  25: suminf.    0.35774 (4) obj. -404.102 iterations 3
Cbc0038I Pass  26: suminf.    0.58936 (2) obj. -404.102 iterations 5
Cbc0038I Pass  27: suminf.    0.23333 (1) obj. -465.973 iterations 2
Cbc0038I Pass  28: suminf.    0.41010 (1) obj. -404.102 iterations 2
Cbc0038I Pass  29: suminf.    0.84596 (4) obj. -404.102 iterations 3
Cbc0038I Pass  30: suminf.    0.84596 (4) obj. -404.102 iterations 0
Cbc0038I Pass  31: suminf.    0.23333 (1) obj. -465.973 iterations 3
Cbc0038I Rounding solution of -385.815 is better than previous of -384.558

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -385.815 to -559.43 (0.01 seconds)
Cbc0038I Round again with cutoff of -563.543
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.03260 (7) obj. -563.543 iterations 6
Cbc0038I Pass  32: suminf.    1.81775 (4) obj. -563.543 iterations 8
Cbc0038I Pass  33: suminf.    1.36565 (6) obj. -563.543 iterations 6
Cbc0038I Pass  34: suminf.    2.12141 (5) obj. -563.543 iterations 3
Cbc0038I Pass  35: suminf.    1.47844 (4) obj. -563.543 iterations 5
Cbc0038I Pass  36: suminf.    1.63487 (4) obj. -563.543 iterations 4
Cbc0038I Pass  37: suminf.    1.47844 (4) obj. -563.543 iterations 5
Cbc0038I Pass  38: suminf.    1.48107 (6) obj. -563.543 iterations 2
Cbc0038I Pass  39: suminf.    1.78696 (4) obj. -563.543 iterations 4
Cbc0038I Pass  40: suminf.    1.78696 (4) obj. -563.543 iterations 1
Cbc0038I Pass  41: suminf.    1.81775 (4) obj. -563.543 iterations 2
Cbc0038I Pass  42: suminf.    1.81775 (4) obj. -563.543 iterations 1
Cbc0038I Pass  43: suminf.    1.63487 (4) obj. -563.543 iterations 1
Cbc0038I Pass  44: suminf.    1.46549 (4) obj. -563.543 iterations 1
Cbc0038I Pass  45: suminf.    1.43577 (5) obj. -563.543 iterations 4
Cbc0038I Pass  46: suminf.    2.28622 (5) obj. -563.543 iterations 8
Cbc0038I Pass  47: suminf.    1.81775 (4) obj. -563.543 iterations 2
Cbc0038I Pass  48: suminf.    1.78696 (4) obj. -563.543 iterations 1
Cbc0038I Pass  49: suminf.    1.43577 (5) obj. -563.543 iterations 2
Cbc0038I Pass  50: suminf.    1.43577 (5) obj. -563.543 iterations 0
Cbc0038I Pass  51: suminf.    2.28001 (10) obj. -563.543 iterations 4
Cbc0038I Pass  52: suminf.    1.03260 (7) obj. -563.543 iterations 1
Cbc0038I Pass  53: suminf.    1.81775 (4) obj. -563.543 iterations 7
Cbc0038I Pass  54: suminf.    1.36565 (6) obj. -563.543 iterations 7
Cbc0038I Pass  55: suminf.    2.12141 (5) obj. -563.543 iterations 2
Cbc0038I Pass  56: suminf.    1.63487 (4) obj. -563.543 iterations 4
Cbc0038I Pass  57: suminf.    1.81775 (4) obj. -563.543 iterations 1
Cbc0038I Pass  58: suminf.    1.63487 (4) obj. -563.543 iterations 1
Cbc0038I Pass  59: suminf.    1.63487 (4) obj. -563.543 iterations 0
Cbc0038I Pass  60: suminf.    1.63487 (4) obj. -563.543 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 14 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -559.43 - took 0.02 seconds
Cbc0012I Integer solution of -559.42983 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 23 columns, reduced to 14 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -579.99696 to -579.99696 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -559.42983, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 52 (-10) columns and 472 (-174) elements
Clp1000I sum of infeasibilities 0 - average 0, 45 fixed columns
Coin0506I Presolve 5 (-42) rows, 7 (-45) columns and 19 (-453) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 720.40604
Clp0000I Optimal - objective value 720.40604
Coin0511I After Postsolve, objective 720.40604, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1679416 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 761.53126
Clp0000I Optimal - objective value 761.53126
Clp0000I Optimal - objective value 761.53126
Coin0511I After Postsolve, objective 761.53126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 761.5312628 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 44 columns (44 integer (44 of which binary)) and 322 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.529%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 4.37046
Cbc0038I Pass   1: suminf.    0.51237 (2) obj. -437.115 iterations 24
Cbc0038I Solution found of -173.763
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 44 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -173.763 to -384.558 (0.02 seconds)
Cbc0038I Round again with cutoff of -404.427
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.51237 (2) obj. -437.115 iterations 0
Cbc0038I Pass   3: suminf.    0.42809 (2) obj. -404.427 iterations 2
Cbc0038I Pass   4: suminf.    0.82350 (2) obj. -404.427 iterations 3
Cbc0038I Pass   5: suminf.    0.82424 (3) obj. -404.427 iterations 1
Cbc0038I Pass   6: suminf.    0.45829 (3) obj. -404.427 iterations 1
Cbc0038I Pass   7: suminf.    1.68398 (7) obj. -404.427 iterations 11
Cbc0038I Pass   8: suminf.    1.05228 (6) obj. -404.427 iterations 4
Cbc0038I Pass   9: suminf.    0.76539 (4) obj. -404.427 iterations 8
Cbc0038I Pass  10: suminf.    0.76539 (4) obj. -404.427 iterations 0
Cbc0038I Solution found of -556.43
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 44 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -556.43 to -559.43 (0.02 seconds)
Cbc0038I Round again with cutoff of -564.193
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  11: suminf.    1.48966 (12) obj. -564.193 iterations 11
Cbc0038I Pass  12: suminf.    1.89706 (5) obj. -564.193 iterations 11
Cbc0038I Pass  13: suminf.    1.71521 (8) obj. -564.193 iterations 4
Cbc0038I Pass  14: suminf.    2.26135 (5) obj. -564.193 iterations 7
Cbc0038I Pass  15: suminf.    1.81989 (6) obj. -564.193 iterations 3
Cbc0038I Pass  16: suminf.    1.68633 (6) obj. -564.193 iterations 1
Cbc0038I Pass  17: suminf.    2.68744 (9) obj. -564.193 iterations 10
Cbc0038I Pass  18: suminf.    1.84973 (8) obj. -564.193 iterations 6
Cbc0038I Pass  19: suminf.    1.87325 (7) obj. -564.193 iterations 5
Cbc0038I Pass  20: suminf.    1.87325 (7) obj. -564.193 iterations 0
Cbc0038I Pass  21: suminf.    2.19364 (7) obj. -564.193 iterations 3
Cbc0038I Pass  22: suminf.    2.93048 (9) obj. -564.193 iterations 5
Cbc0038I Pass  23: suminf.    1.90125 (8) obj. -564.193 iterations 4
Cbc0038I Pass  24: suminf.    2.16771 (11) obj. -564.193 iterations 4
Cbc0038I Pass  25: suminf.    1.93677 (10) obj. -564.193 iterations 2
Cbc0038I Pass  26: suminf.    1.87325 (7) obj. -564.193 iterations 10
Cbc0038I Pass  27: suminf.    1.87325 (7) obj. -564.193 iterations 0
Cbc0038I Pass  28: suminf.    2.19364 (7) obj. -564.193 iterations 3
Cbc0038I Pass  29: suminf.    3.14738 (14) obj. -564.193 iterations 12
Cbc0038I Pass  30: suminf.    1.69964 (9) obj. -564.193 iterations 5
Cbc0038I Pass  31: suminf.    2.24355 (5) obj. -564.193 iterations 7
Cbc0038I Pass  32: suminf.    1.72258 (6) obj. -564.193 iterations 3
Cbc0038I Pass  33: suminf.    2.71542 (11) obj. -564.193 iterations 10
Cbc0038I Pass  34: suminf.    1.82116 (7) obj. -564.193 iterations 5
Cbc0038I Pass  35: suminf.    1.87325 (7) obj. -564.193 iterations 4
Cbc0038I Pass  36: suminf.    1.87325 (7) obj. -564.193 iterations 0
Cbc0038I Pass  37: suminf.    2.19364 (7) obj. -564.193 iterations 2
Cbc0038I Pass  38: suminf.    2.58151 (9) obj. -564.193 iterations 2
Cbc0038I Pass  39: suminf.    1.87494 (7) obj. -564.193 iterations 5
Cbc0038I Pass  40: suminf.    2.61362 (11) obj. -564.193 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -559.43 - took 0.02 seconds
Cbc0012I Integer solution of -559.42983 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 44 columns, reduced to 24 rows 24 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -583.24609 to -583.24609 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -559.42983, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 23 (-10) columns and 118 (-65) elements
Clp1000I sum of infeasibilities 1.57143e-05 - average 3.92856e-07, 12 fixed columns
Coin0506I Presolve 18 (-22) rows, 11 (-12) columns and 50 (-68) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 745.28419
Clp0000I Optimal - objective value 745.28419
Coin0511I After Postsolve, objective 745.28419, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 745.28419
Clp0000I Optimal - objective value 745.28419
Clp0000I Optimal - objective value 745.28419
Coin0511I After Postsolve, objective 745.28419, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 745.2841859 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 23 columns (22 integer (22 of which binary)) and 119 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.8242
Cbc0038I Pass   1: suminf.    0.51237 (2) obj. -437.115 iterations 5
Cbc0038I Solution found of -173.763
Cbc0038I Relaxing continuous gives -173.763
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -173.763 to -384.558 (0.01 seconds)
Cbc0038I Round again with cutoff of -404.102
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.51237 (2) obj. -437.115 iterations 0
Cbc0038I Pass   3: suminf.    0.42725 (2) obj. -404.102 iterations 1
Cbc0038I Pass   4: suminf.    0.82234 (2) obj. -404.102 iterations 3
Cbc0038I Pass   5: suminf.    0.82308 (3) obj. -404.102 iterations 1
Cbc0038I Pass   6: suminf.    0.45776 (3) obj. -404.102 iterations 1
Cbc0038I Pass   7: suminf.    0.55196 (2) obj. -418.537 iterations 4
Cbc0038I Pass   8: suminf.    0.51474 (2) obj. -404.102 iterations 3
Cbc0038I Pass   9: suminf.    0.69733 (2) obj. -404.102 iterations 3
Cbc0038I Pass  10: suminf.    0.52873 (3) obj. -404.102 iterations 1
Cbc0038I Pass  11: suminf.    0.55196 (2) obj. -418.537 iterations 2
Cbc0038I Pass  12: suminf.    0.52873 (3) obj. -404.102 iterations 4
Cbc0038I Pass  13: suminf.    0.33803 (2) obj. -434.397 iterations 5
Cbc0038I Pass  14: suminf.    0.06995 (1) obj. -404.102 iterations 3
Cbc0038I Pass  15: suminf.    0.15000 (1) obj. -426.469 iterations 1
Cbc0038I Pass  16: suminf.    1.63547 (6) obj. -404.102 iterations 10
Cbc0038I Pass  17: suminf.    0.05225 (1) obj. -404.102 iterations 8
Cbc0038I Pass  18: suminf.    0.07778 (1) obj. -413.038 iterations 2
Cbc0038I Pass  19: suminf.    1.40721 (5) obj. -404.102 iterations 7
Cbc0038I Pass  20: suminf.    0.52854 (3) obj. -404.102 iterations 3
Cbc0038I Pass  21: suminf.    0.62652 (3) obj. -404.102 iterations 2
Cbc0038I Pass  22: suminf.    1.09619 (3) obj. -404.102 iterations 3
Cbc0038I Pass  23: suminf.    1.09619 (3) obj. -404.102 iterations 0
Cbc0038I Pass  24: suminf.    0.43867 (4) obj. -404.102 iterations 2
Cbc0038I Pass  25: suminf.    0.35774 (4) obj. -404.102 iterations 3
Cbc0038I Pass  26: suminf.    0.58936 (2) obj. -404.102 iterations 5
Cbc0038I Pass  27: suminf.    0.23333 (1) obj. -465.973 iterations 2
Cbc0038I Pass  28: suminf.    0.41010 (1) obj. -404.102 iterations 2
Cbc0038I Pass  29: suminf.    0.84596 (4) obj. -404.102 iterations 3
Cbc0038I Pass  30: suminf.    0.84596 (4) obj. -404.102 iterations 0
Cbc0038I Pass  31: suminf.    0.23333 (1) obj. -465.973 iterations 3
Cbc0038I Rounding solution of -385.815 is better than previous of -384.558

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -385.815 to -559.43 (0.02 seconds)
Cbc0038I Round again with cutoff of -563.543
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.03260 (7) obj. -563.543 iterations 6
Cbc0038I Pass  32: suminf.    1.81775 (4) obj. -563.543 iterations 8
Cbc0038I Pass  33: suminf.    1.36565 (6) obj. -563.543 iterations 6
Cbc0038I Pass  34: suminf.    2.12141 (5) obj. -563.543 iterations 3
Cbc0038I Pass  35: suminf.    1.47844 (4) obj. -563.543 iterations 5
Cbc0038I Pass  36: suminf.    1.63487 (4) obj. -563.543 iterations 4
Cbc0038I Pass  37: suminf.    1.47844 (4) obj. -563.543 iterations 5
Cbc0038I Pass  38: suminf.    1.48107 (6) obj. -563.543 iterations 2
Cbc0038I Pass  39: suminf.    1.78696 (4) obj. -563.543 iterations 4
Cbc0038I Pass  40: suminf.    1.78696 (4) obj. -563.543 iterations 1
Cbc0038I Pass  41: suminf.    1.81775 (4) obj. -563.543 iterations 2
Cbc0038I Pass  42: suminf.    1.81775 (4) obj. -563.543 iterations 1
Cbc0038I Pass  43: suminf.    1.63487 (4) obj. -563.543 iterations 1
Cbc0038I Pass  44: suminf.    1.46549 (4) obj. -563.543 iterations 1
Cbc0038I Pass  45: suminf.    1.43577 (5) obj. -563.543 iterations 4
Cbc0038I Pass  46: suminf.    2.28622 (5) obj. -563.543 iterations 8
Cbc0038I Pass  47: suminf.    1.81775 (4) obj. -563.543 iterations 2
Cbc0038I Pass  48: suminf.    1.78696 (4) obj. -563.543 iterations 1
Cbc0038I Pass  49: suminf.    1.43577 (5) obj. -563.543 iterations 2
Cbc0038I Pass  50: suminf.    1.43577 (5) obj. -563.543 iterations 0
Cbc0038I Pass  51: suminf.    2.28001 (10) obj. -563.543 iterations 4
Cbc0038I Pass  52: suminf.    1.03260 (7) obj. -563.543 iterations 1
Cbc0038I Pass  53: suminf.    1.81775 (4) obj. -563.543 iterations 7
Cbc0038I Pass  54: suminf.    1.36565 (6) obj. -563.543 iterations 7
Cbc0038I Pass  55: suminf.    2.12141 (5) obj. -563.543 iterations 2
Cbc0038I Pass  56: suminf.    1.63487 (4) obj. -563.543 iterations 4
Cbc0038I Pass  57: suminf.    1.81775 (4) obj. -563.543 iterations 1
Cbc0038I Pass  58: suminf.    1.63487 (4) obj. -563.543 iterations 1
Cbc0038I Pass  59: suminf.    1.63487 (4) obj. -563.543 iterations 0
Cbc0038I Pass  60: suminf.    1.63487 (4) obj. -563.543 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 14 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -559.43 - took 0.02 seconds
Cbc0012I Integer solution of -559.42983 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 23 columns, reduced to 14 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -579.99696 to -579.99696 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -559.42983, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 44 (-19) columns and 319 (-330) elements
Clp1000I sum of infeasibilities 3.95017e-10 - average 9.87543e-12, 17 fixed columns
Coin0506I Presolve 25 (-15) rows, 27 (-17) columns and 121 (-198) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 761.53126
Clp0000I Optimal - objective value 761.53126
Coin0511I After Postsolve, objective 761.53126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 761.53126
Clp0000I Optimal - objective value 761.53126
Clp0000I Optimal - objective value 761.53126
Coin0511I After Postsolve, objective 761.53126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 761.5312628 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 44 columns (44 integer (44 of which binary)) and 322 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.529%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 4.37046
Cbc0038I Pass   1: suminf.    0.51237 (2) obj. -437.115 iterations 24
Cbc0038I Solution found of -173.763
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 44 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -173.763 to -384.558 (0.01 seconds)
Cbc0038I Round again with cutoff of -404.427
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.51237 (2) obj. -437.115 iterations 0
Cbc0038I Pass   3: suminf.    0.42809 (2) obj. -404.427 iterations 2
Cbc0038I Pass   4: suminf.    0.82350 (2) obj. -404.427 iterations 3
Cbc0038I Pass   5: suminf.    0.82424 (3) obj. -404.427 iterations 1
Cbc0038I Pass   6: suminf.    0.45829 (3) obj. -404.427 iterations 1
Cbc0038I Pass   7: suminf.    1.68398 (7) obj. -404.427 iterations 11
Cbc0038I Pass   8: suminf.    1.05228 (6) obj. -404.427 iterations 4
Cbc0038I Pass   9: suminf.    0.76539 (4) obj. -404.427 iterations 8
Cbc0038I Pass  10: suminf.    0.76539 (4) obj. -404.427 iterations 0
Cbc0038I Solution found of -556.43
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 44 columns, reduced to 24 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -556.43 to -559.43 (0.02 seconds)
Cbc0038I Round again with cutoff of -564.193
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  11: suminf.    1.48966 (12) obj. -564.193 iterations 11
Cbc0038I Pass  12: suminf.    1.89706 (5) obj. -564.193 iterations 10
Cbc0038I Pass  13: suminf.    1.71521 (8) obj. -564.193 iterations 3
Cbc0038I Pass  14: suminf.    2.26135 (5) obj. -564.193 iterations 6
Cbc0038I Pass  15: suminf.    1.81989 (6) obj. -564.193 iterations 2
Cbc0038I Pass  16: suminf.    1.68633 (6) obj. -564.193 iterations 1
Cbc0038I Pass  17: suminf.    2.68744 (9) obj. -564.193 iterations 10
Cbc0038I Pass  18: suminf.    1.84973 (8) obj. -564.193 iterations 6
Cbc0038I Pass  19: suminf.    1.87325 (7) obj. -564.193 iterations 5
Cbc0038I Pass  20: suminf.    1.87325 (7) obj. -564.193 iterations 0
Cbc0038I Pass  21: suminf.    2.19364 (7) obj. -564.193 iterations 2
Cbc0038I Pass  22: suminf.    2.93048 (9) obj. -564.193 iterations 4
Cbc0038I Pass  23: suminf.    1.90125 (8) obj. -564.193 iterations 4
Cbc0038I Pass  24: suminf.    2.16771 (11) obj. -564.193 iterations 4
Cbc0038I Pass  25: suminf.    1.93677 (10) obj. -564.193 iterations 2
Cbc0038I Pass  26: suminf.    1.87325 (7) obj. -564.193 iterations 8
Cbc0038I Pass  27: suminf.    1.87325 (7) obj. -564.193 iterations 0
Cbc0038I Pass  28: suminf.    2.19364 (7) obj. -564.193 iterations 2
Cbc0038I Pass  29: suminf.    3.14738 (14) obj. -564.193 iterations 11
Cbc0038I Pass  30: suminf.    1.69964 (9) obj. -564.193 iterations 5
Cbc0038I Pass  31: suminf.    2.24355 (5) obj. -564.193 iterations 6
Cbc0038I Pass  32: suminf.    1.72258 (6) obj. -564.193 iterations 2
Cbc0038I Pass  33: suminf.    2.71542 (11) obj. -564.193 iterations 8
Cbc0038I Pass  34: suminf.    1.82116 (7) obj. -564.193 iterations 5
Cbc0038I Pass  35: suminf.    1.87325 (7) obj. -564.193 iterations 4
Cbc0038I Pass  36: suminf.    1.87325 (7) obj. -564.193 iterations 0
Cbc0038I Pass  37: suminf.    2.19364 (7) obj. -564.193 iterations 2
Cbc0038I Pass  38: suminf.    2.58151 (9) obj. -564.193 iterations 2
Cbc0038I Pass  39: suminf.    1.87494 (7) obj. -564.193 iterations 5
Cbc0038I Pass  40: suminf.    2.61362 (11) obj. -564.193 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -559.43 - took 0.02 seconds
Cbc0012I Integer solution of -559.42983 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 44 columns, reduced to 24 rows 24 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -583.24609 to -583.24609 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -559.42983, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

