Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 2.67508e-05 - average 1.95261e-07, 17 fixed columns
Coin0506I Presolve 106 (-31) rows, 58 (-17) columns and 322 (-96) elements
Clp0029I End of values pass after 58 iterations
Clp0000I Optimal - objective value 48.553179
Clp0000I Optimal - objective value 48.553179
Coin0511I After Postsolve, objective 48.553179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.553179
Clp0000I Optimal - objective value 48.553179
Clp0000I Optimal - objective value 48.553179
Coin0511I After Postsolve, objective 48.553179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.553179 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.227%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.20528
Cbc0038I Solution found of -2.72509
Cbc0038I Relaxing continuous gives -3.17147
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -3.17147 to -23.2555 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.7759
Cbc0038I Pass   1: suminf.    2.60736 (20) obj. -25.7759 iterations 47
Cbc0038I Pass   2: suminf.    3.07091 (8) obj. -25.7759 iterations 27
Cbc0038I Pass   3: suminf.    2.01986 (8) obj. -25.7759 iterations 7
Cbc0038I Pass   4: suminf.    1.08600 (6) obj. -25.7759 iterations 8
Cbc0038I Pass   5: suminf.    0.96297 (3) obj. -25.7759 iterations 5
Cbc0038I Pass   6: suminf.    1.32158 (4) obj. -25.7759 iterations 6
Cbc0038I Pass   7: suminf.    0.96297 (3) obj. -25.7759 iterations 5
Cbc0038I Pass   8: suminf.    2.21514 (7) obj. -25.7759 iterations 10
Cbc0038I Pass   9: suminf.    1.50469 (5) obj. -25.7759 iterations 6
Cbc0038I Pass  10: suminf.    1.23334 (4) obj. -25.7759 iterations 6
Cbc0038I Pass  11: suminf.    1.22833 (4) obj. -25.7759 iterations 5
Cbc0038I Pass  12: suminf.    1.22833 (4) obj. -25.7759 iterations 4
Cbc0038I Pass  13: suminf.    1.32984 (4) obj. -25.7759 iterations 5
Cbc0038I Pass  14: suminf.    1.24189 (4) obj. -25.7759 iterations 3
Cbc0038I Pass  15: suminf.    2.07413 (7) obj. -25.7759 iterations 7
Cbc0038I Pass  16: suminf.    1.53025 (8) obj. -25.7759 iterations 3
Cbc0038I Pass  17: suminf.    1.29349 (5) obj. -25.7759 iterations 14
Cbc0038I Pass  18: suminf.    1.28906 (5) obj. -25.7759 iterations 4
Cbc0038I Pass  19: suminf.    1.83945 (5) obj. -25.7759 iterations 9
Cbc0038I Pass  20: suminf.    1.77767 (5) obj. -25.7759 iterations 2
Cbc0038I Pass  21: suminf.    1.30333 (5) obj. -25.7759 iterations 10
Cbc0038I Pass  22: suminf.    1.40242 (4) obj. -25.7759 iterations 6
Cbc0038I Pass  23: suminf.    1.24189 (4) obj. -25.7759 iterations 9
Cbc0038I Pass  24: suminf.    2.07413 (7) obj. -25.7759 iterations 6
Cbc0038I Pass  25: suminf.    1.53025 (8) obj. -25.7759 iterations 3
Cbc0038I Pass  26: suminf.    1.29349 (5) obj. -25.7759 iterations 14
Cbc0038I Pass  27: suminf.    1.28906 (5) obj. -25.7759 iterations 4
Cbc0038I Pass  28: suminf.    1.83945 (5) obj. -25.7759 iterations 9
Cbc0038I Pass  29: suminf.    1.77767 (5) obj. -25.7759 iterations 2
Cbc0038I Pass  30: suminf.    1.30333 (5) obj. -25.7759 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 74 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -23.2555 to -23.4823 (0.11 seconds)
Cbc0038I Round again with cutoff of -30.3123
Cbc0038I Pass  30: suminf.    3.19830 (23) obj. -30.3123 iterations 9
Cbc0038I Pass  31: suminf.    3.35605 (9) obj. -30.3123 iterations 34
Cbc0038I Pass  32: suminf.    1.75917 (7) obj. -30.3123 iterations 6
Cbc0038I Pass  33: suminf.    1.33780 (5) obj. -30.3123 iterations 12
Cbc0038I Pass  34: suminf.    1.33780 (5) obj. -30.3123 iterations 0
Cbc0038I Pass  35: suminf.    2.21780 (7) obj. -30.3123 iterations 14
Cbc0038I Pass  36: suminf.    1.87169 (5) obj. -30.3123 iterations 5
Cbc0038I Pass  37: suminf.    1.84881 (8) obj. -30.3123 iterations 2
Cbc0038I Pass  38: suminf.    1.47231 (5) obj. -30.3123 iterations 9
Cbc0038I Pass  39: suminf.    1.43757 (6) obj. -30.3123 iterations 6
Cbc0038I Pass  40: suminf.    1.81974 (6) obj. -30.3123 iterations 7
Cbc0038I Pass  41: suminf.    1.50264 (6) obj. -30.3123 iterations 3
Cbc0038I Pass  42: suminf.    1.38127 (6) obj. -30.3123 iterations 7
Cbc0038I Pass  43: suminf.    1.14192 (7) obj. -30.3123 iterations 6
Cbc0038I Pass  44: suminf.    3.60098 (11) obj. -30.3123 iterations 16
Cbc0038I Pass  45: suminf.    1.87202 (5) obj. -30.3123 iterations 9
Cbc0038I Pass  46: suminf.    2.25657 (9) obj. -30.3123 iterations 10
Cbc0038I Pass  47: suminf.    1.90646 (9) obj. -30.3123 iterations 3
Cbc0038I Pass  48: suminf.    1.56870 (6) obj. -30.3123 iterations 7
Cbc0038I Pass  49: suminf.    2.32134 (10) obj. -30.3123 iterations 11
Cbc0038I Pass  50: suminf.    1.71780 (9) obj. -30.3123 iterations 3
Cbc0038I Pass  51: suminf.    3.23881 (10) obj. -30.3123 iterations 15
Cbc0038I Pass  52: suminf.    2.89950 (9) obj. -30.3123 iterations 8
Cbc0038I Pass  53: suminf.    2.06299 (9) obj. -30.3123 iterations 6
Cbc0038I Pass  54: suminf.    1.56870 (6) obj. -30.3123 iterations 5
Cbc0038I Pass  55: suminf.    2.32134 (10) obj. -30.3123 iterations 11
Cbc0038I Pass  56: suminf.    1.71780 (9) obj. -30.3123 iterations 3
Cbc0038I Pass  57: suminf.    3.23881 (10) obj. -30.3123 iterations 15
Cbc0038I Pass  58: suminf.    2.89950 (9) obj. -30.3123 iterations 8
Cbc0038I Pass  59: suminf.    2.06299 (9) obj. -30.3123 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -23.4823 - took 0.14 seconds
Cbc0012I Integer solution of -23.48229 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 74 rows 42 columns
Cbc0031I 19 added rows had average density of 60.052632
Cbc0013I At root node, 19 cuts changed objective from -48.457999 to -42.528313 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10699 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1768 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.48229 best solution, best possible -42.528313 (1.00 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 9 rows 10 columns
Cbc0016I Integer solution of -23.82767 found by strong branching after 8444 iterations and 64 nodes (1.26 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 44 rows 26 columns
Cbc0001I Search completed - best objective -23.82767, took 9806 iterations and 124 nodes (1.37 seconds)
Cbc0032I Strong branching done 1144 times (16790 iterations), fathomed 13 nodes and fixed 37 variables
Cbc0035I Maximum depth 33, 427 variables fixed on reduced cost
Total time (CPU seconds):       1.28   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 115 (-37) columns and 1838 (-1465) elements
Clp1000I sum of infeasibilities 1.85335e-07 - average 1.78206e-09, 68 fixed columns
Coin0506I Presolve 40 (-64) rows, 47 (-68) columns and 170 (-1668) elements
Clp0006I 0  Obj 6.2960743 Dual inf 3.573821 (46)
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 1.5569333 - largest nonzero change 2.6137905e-05 ( 0.0015823696%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 7.2670355
Clp0000I Optimal - objective value 7.2670355
Coin0511I After Postsolve, objective 7.2670355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 7.2670355 Dual inf 51.618693 (41)
Clp0014I Perturbing problem by 0.001% of 1.5623219 - largest nonzero change 1.1663806e-05 ( 0.0008514623%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 61.506044
Clp0000I Optimal - objective value 61.506044
Clp0000I Optimal - objective value 61.506044
Coin0511I After Postsolve, objective 61.506044, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.50604374 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 115 columns (115 integer (115 of which binary)) and 1842 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.426%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 3.04837
Cbc0038I Pass   1: suminf.    1.94402 (24) obj. -52.5747 iterations 7
Cbc0038I Pass   2: suminf.    1.94402 (24) obj. -52.5747 iterations 1
Cbc0038I Pass   3: suminf.    0.07877 (2) obj. -12.1004 iterations 27
Cbc0038I Solution found of -10.1792
Cbc0038I Rounding solution of -17.795 is better than previous of -10.1792

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 115 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -21.8972
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.94402 (24) obj. -52.5747 iterations 0
Cbc0038I Pass   5: suminf.    1.94402 (24) obj. -52.5747 iterations 1
Cbc0038I Pass   6: suminf.    0.74624 (10) obj. -21.8972 iterations 37
Cbc0038I Pass   7: suminf.    0.60124 (9) obj. -21.8972 iterations 5
Cbc0038I Pass   8: suminf.    1.08260 (3) obj. -21.8972 iterations 18
Cbc0038I Pass   9: suminf.    0.83058 (5) obj. -22.9763 iterations 4
Cbc0038I Pass  10: suminf.    1.19029 (5) obj. -21.8972 iterations 8
Cbc0038I Pass  11: suminf.    0.78754 (9) obj. -21.8972 iterations 31
Cbc0038I Pass  12: suminf.    0.78754 (9) obj. -21.8972 iterations 9
Cbc0038I Pass  13: suminf.    0.63988 (7) obj. -21.8972 iterations 17
Cbc0038I Pass  14: suminf.    0.56359 (7) obj. -21.8972 iterations 1
Cbc0038I Pass  15: suminf.    0.68154 (5) obj. -21.8972 iterations 18
Cbc0038I Pass  16: suminf.    0.33123 (3) obj. -21.8972 iterations 8
Cbc0038I Pass  17: suminf.    0.49480 (5) obj. -21.8972 iterations 5
Cbc0038I Pass  18: suminf.    2.80785 (17) obj. -21.8972 iterations 23
Cbc0038I Pass  19: suminf.    2.21008 (13) obj. -22.371 iterations 2
Cbc0038I Pass  20: suminf.    1.80769 (12) obj. -21.8972 iterations 7
Cbc0038I Pass  21: suminf.    1.23282 (11) obj. -23.3266 iterations 5
Cbc0038I Pass  22: suminf.    1.07691 (11) obj. -21.8972 iterations 2
Cbc0038I Pass  23: suminf.    1.10903 (7) obj. -21.8972 iterations 21
Cbc0038I Pass  24: suminf.    0.87303 (10) obj. -21.8972 iterations 4
Cbc0038I Pass  25: suminf.    1.27800 (11) obj. -21.8972 iterations 9
Cbc0038I Pass  26: suminf.    1.07242 (9) obj. -21.8972 iterations 6
Cbc0038I Pass  27: suminf.    1.53622 (14) obj. -23.6865 iterations 21
Cbc0038I Pass  28: suminf.    1.41219 (11) obj. -24.1702 iterations 3
Cbc0038I Pass  29: suminf.    0.97522 (11) obj. -21.8972 iterations 3
Cbc0038I Pass  30: suminf.    1.30298 (8) obj. -21.8972 iterations 13
Cbc0038I Pass  31: suminf.    0.98542 (7) obj. -23.323 iterations 4
Cbc0038I Pass  32: suminf.    1.35611 (8) obj. -21.8972 iterations 23
Cbc0038I Pass  33: suminf.    1.22029 (10) obj. -21.8972 iterations 4
Cbc0038I Rounding solution of -18.7112 is better than previous of -17.795

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 115 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -18.7112 to -22.8255 (0.10 seconds)
Cbc0038I Round again with cutoff of -30.0235
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.94402 (24) obj. -52.5747 iterations 0
Cbc0038I Pass  34: suminf.    1.94402 (24) obj. -52.5747 iterations 1
Cbc0038I Pass  35: suminf.    1.15874 (14) obj. -30.0235 iterations 12
Cbc0038I Pass  36: suminf.    1.44617 (12) obj. -30.0235 iterations 23
Cbc0038I Pass  37: suminf.    1.18633 (14) obj. -30.0235 iterations 4
Cbc0038I Pass  38: suminf.    1.48453 (9) obj. -30.0235 iterations 20
Cbc0038I Pass  39: suminf.    1.48453 (9) obj. -30.0235 iterations 3
Cbc0038I Pass  40: suminf.    1.45582 (9) obj. -30.0235 iterations 11
Cbc0038I Pass  41: suminf.    1.45582 (9) obj. -30.0235 iterations 3
Cbc0038I Pass  42: suminf.    1.48453 (9) obj. -30.0235 iterations 4
Cbc0038I Pass  43: suminf.    3.36413 (15) obj. -30.0235 iterations 15
Cbc0038I Pass  44: suminf.    2.73313 (15) obj. -30.0235 iterations 7
Cbc0038I Pass  45: suminf.    1.84871 (9) obj. -30.0235 iterations 23
Cbc0038I Pass  46: suminf.    1.84871 (9) obj. -30.0235 iterations 0
Cbc0038I Pass  47: suminf.    1.25625 (9) obj. -30.0235 iterations 4
Cbc0038I Pass  48: suminf.    1.22671 (9) obj. -30.0826 iterations 1
Cbc0038I Pass  49: suminf.    1.25625 (9) obj. -30.0235 iterations 12
Cbc0038I Pass  50: suminf.    1.19604 (9) obj. -30.1439 iterations 4
Cbc0038I Pass  51: suminf.    1.46578 (13) obj. -30.0235 iterations 5
Cbc0038I Pass  52: suminf.    1.46578 (13) obj. -30.0235 iterations 1
Cbc0038I Pass  53: suminf.    1.59877 (9) obj. -30.0235 iterations 9
Cbc0038I Pass  54: suminf.    1.54222 (10) obj. -30.0235 iterations 3
Cbc0038I Pass  55: suminf.    1.25625 (9) obj. -30.0235 iterations 8
Cbc0038I Pass  56: suminf.    1.19604 (9) obj. -30.1439 iterations 4
Cbc0038I Pass  57: suminf.    1.25625 (9) obj. -30.0235 iterations 10
Cbc0038I Pass  58: suminf.    1.63168 (11) obj. -30.0235 iterations 12
Cbc0038I Pass  59: suminf.    1.63168 (11) obj. -30.0235 iterations 0
Cbc0038I Pass  60: suminf.    1.25625 (9) obj. -30.0235 iterations 7
Cbc0038I Pass  61: suminf.    2.16310 (12) obj. -30.0235 iterations 17
Cbc0038I Pass  62: suminf.    1.96111 (12) obj. -30.4275 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 115 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -22.8255 - took 0.11 seconds
Cbc0012I Integer solution of -22.82548 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 104 rows 115 columns, reduced to 14 rows 17 columns
Cbc0031I 50 added rows had average density of 39.12
Cbc0013I At root node, 50 cuts changed objective from -58.815296 to -30.018212 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8236 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1783 row cuts average 104.4 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 318 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1264 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 309 row cuts average 67.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 122 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.663 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.82548 best solution, best possible -30.018212 (2.37 seconds)
Cbc0012I Integer solution of -22.99296 found by DiveCoefficient after 3790 iterations and 4 nodes (2.57 seconds)
Cbc0016I Integer solution of -23.59796 found by strong branching after 3799 iterations and 4 nodes (2.57 seconds)
Cbc0012I Integer solution of -23.78756 found by rounding after 3824 iterations and 6 nodes (2.58 seconds)
Cbc0012I Integer solution of -23.82767 found by DiveCoefficient after 3837 iterations and 7 nodes (2.58 seconds)
Cbc0038I Full problem 104 rows 115 columns, reduced to 57 rows 66 columns
Cbc0010I After 42 nodes, 7 on tree, -23.82767 best solution, best possible -30.018212 (3.17 seconds)
Cbc0038I Full problem 104 rows 115 columns, reduced to 61 rows 68 columns
Cbc0010I After 94 nodes, 6 on tree, -23.82767 best solution, best possible -30.018212 (3.91 seconds)
Cbc0001I Search completed - best objective -23.82767, took 9102 iterations and 144 nodes (4.39 seconds)
Cbc0032I Strong branching done 1656 times (26167 iterations), fathomed 20 nodes and fixed 26 variables
Cbc0035I Maximum depth 17, 345 variables fixed on reduced cost
Total time (CPU seconds):       3.57   (Wallclock seconds):       4.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 2.67508e-05 - average 1.95261e-07, 17 fixed columns
Coin0506I Presolve 106 (-31) rows, 58 (-17) columns and 322 (-96) elements
Clp0029I End of values pass after 58 iterations
Clp0000I Optimal - objective value 48.553179
Clp0000I Optimal - objective value 48.553179
Coin0511I After Postsolve, objective 48.553179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.553179
Clp0000I Optimal - objective value 48.553179
Clp0000I Optimal - objective value 48.553179
Coin0511I After Postsolve, objective 48.553179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.553179 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.227%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.20528
Cbc0038I Solution found of -2.72509
Cbc0038I Relaxing continuous gives -3.17147
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -3.17147 to -23.2555 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.7759
Cbc0038I Pass   1: suminf.    2.60736 (20) obj. -25.7759 iterations 47
Cbc0038I Pass   2: suminf.    3.07091 (8) obj. -25.7759 iterations 27
Cbc0038I Pass   3: suminf.    2.01986 (8) obj. -25.7759 iterations 7
Cbc0038I Pass   4: suminf.    1.08600 (6) obj. -25.7759 iterations 8
Cbc0038I Pass   5: suminf.    0.96297 (3) obj. -25.7759 iterations 5
Cbc0038I Pass   6: suminf.    1.32158 (4) obj. -25.7759 iterations 6
Cbc0038I Pass   7: suminf.    0.96297 (3) obj. -25.7759 iterations 5
Cbc0038I Pass   8: suminf.    2.21514 (7) obj. -25.7759 iterations 10
Cbc0038I Pass   9: suminf.    1.50469 (5) obj. -25.7759 iterations 6
Cbc0038I Pass  10: suminf.    1.23334 (4) obj. -25.7759 iterations 6
Cbc0038I Pass  11: suminf.    1.22833 (4) obj. -25.7759 iterations 5
Cbc0038I Pass  12: suminf.    1.22833 (4) obj. -25.7759 iterations 4
Cbc0038I Pass  13: suminf.    1.32984 (4) obj. -25.7759 iterations 5
Cbc0038I Pass  14: suminf.    1.24189 (4) obj. -25.7759 iterations 3
Cbc0038I Pass  15: suminf.    2.07413 (7) obj. -25.7759 iterations 7
Cbc0038I Pass  16: suminf.    1.53025 (8) obj. -25.7759 iterations 3
Cbc0038I Pass  17: suminf.    1.29349 (5) obj. -25.7759 iterations 14
Cbc0038I Pass  18: suminf.    1.28906 (5) obj. -25.7759 iterations 4
Cbc0038I Pass  19: suminf.    1.83945 (5) obj. -25.7759 iterations 9
Cbc0038I Pass  20: suminf.    1.77767 (5) obj. -25.7759 iterations 2
Cbc0038I Pass  21: suminf.    1.30333 (5) obj. -25.7759 iterations 10
Cbc0038I Pass  22: suminf.    1.40242 (4) obj. -25.7759 iterations 6
Cbc0038I Pass  23: suminf.    1.24189 (4) obj. -25.7759 iterations 9
Cbc0038I Pass  24: suminf.    2.07413 (7) obj. -25.7759 iterations 6
Cbc0038I Pass  25: suminf.    1.53025 (8) obj. -25.7759 iterations 3
Cbc0038I Pass  26: suminf.    1.29349 (5) obj. -25.7759 iterations 14
Cbc0038I Pass  27: suminf.    1.28906 (5) obj. -25.7759 iterations 4
Cbc0038I Pass  28: suminf.    1.83945 (5) obj. -25.7759 iterations 9
Cbc0038I Pass  29: suminf.    1.77767 (5) obj. -25.7759 iterations 2
Cbc0038I Pass  30: suminf.    1.30333 (5) obj. -25.7759 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 74 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -23.2555 to -23.4823 (0.11 seconds)
Cbc0038I Round again with cutoff of -30.3123
Cbc0038I Pass  30: suminf.    3.19830 (23) obj. -30.3123 iterations 9
Cbc0038I Pass  31: suminf.    3.35605 (9) obj. -30.3123 iterations 34
Cbc0038I Pass  32: suminf.    1.75917 (7) obj. -30.3123 iterations 6
Cbc0038I Pass  33: suminf.    1.33780 (5) obj. -30.3123 iterations 12
Cbc0038I Pass  34: suminf.    1.33780 (5) obj. -30.3123 iterations 0
Cbc0038I Pass  35: suminf.    2.21780 (7) obj. -30.3123 iterations 14
Cbc0038I Pass  36: suminf.    1.87169 (5) obj. -30.3123 iterations 5
Cbc0038I Pass  37: suminf.    1.84881 (8) obj. -30.3123 iterations 2
Cbc0038I Pass  38: suminf.    1.47231 (5) obj. -30.3123 iterations 9
Cbc0038I Pass  39: suminf.    1.43757 (6) obj. -30.3123 iterations 6
Cbc0038I Pass  40: suminf.    1.81974 (6) obj. -30.3123 iterations 7
Cbc0038I Pass  41: suminf.    1.50264 (6) obj. -30.3123 iterations 3
Cbc0038I Pass  42: suminf.    1.38127 (6) obj. -30.3123 iterations 7
Cbc0038I Pass  43: suminf.    1.14192 (7) obj. -30.3123 iterations 6
Cbc0038I Pass  44: suminf.    3.60098 (11) obj. -30.3123 iterations 16
Cbc0038I Pass  45: suminf.    1.87202 (5) obj. -30.3123 iterations 9
Cbc0038I Pass  46: suminf.    2.25657 (9) obj. -30.3123 iterations 10
Cbc0038I Pass  47: suminf.    1.90646 (9) obj. -30.3123 iterations 3
Cbc0038I Pass  48: suminf.    1.56870 (6) obj. -30.3123 iterations 7
Cbc0038I Pass  49: suminf.    2.32134 (10) obj. -30.3123 iterations 11
Cbc0038I Pass  50: suminf.    1.71780 (9) obj. -30.3123 iterations 3
Cbc0038I Pass  51: suminf.    3.23881 (10) obj. -30.3123 iterations 15
Cbc0038I Pass  52: suminf.    2.89950 (9) obj. -30.3123 iterations 8
Cbc0038I Pass  53: suminf.    2.06299 (9) obj. -30.3123 iterations 6
Cbc0038I Pass  54: suminf.    1.56870 (6) obj. -30.3123 iterations 5
Cbc0038I Pass  55: suminf.    2.32134 (10) obj. -30.3123 iterations 11
Cbc0038I Pass  56: suminf.    1.71780 (9) obj. -30.3123 iterations 3
Cbc0038I Pass  57: suminf.    3.23881 (10) obj. -30.3123 iterations 15
Cbc0038I Pass  58: suminf.    2.89950 (9) obj. -30.3123 iterations 8
Cbc0038I Pass  59: suminf.    2.06299 (9) obj. -30.3123 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -23.4823 - took 0.13 seconds
Cbc0012I Integer solution of -23.48229 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 74 rows 42 columns
Cbc0031I 19 added rows had average density of 60.052632
Cbc0013I At root node, 19 cuts changed objective from -48.457999 to -42.528313 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10699 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1768 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.48229 best solution, best possible -42.528313 (0.88 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 9 rows 10 columns
Cbc0016I Integer solution of -23.82767 found by strong branching after 8444 iterations and 64 nodes (1.13 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 44 rows 26 columns
Cbc0001I Search completed - best objective -23.82767, took 9806 iterations and 124 nodes (1.23 seconds)
Cbc0032I Strong branching done 1144 times (16790 iterations), fathomed 13 nodes and fixed 37 variables
Cbc0035I Maximum depth 33, 427 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 115 (-38) columns and 1838 (-1466) elements
Clp1000I sum of infeasibilities 1.85335e-07 - average 1.78206e-09, 68 fixed columns
Coin0506I Presolve 40 (-64) rows, 47 (-68) columns and 170 (-1668) elements
Clp0006I 0  Obj 6.2960743 Dual inf 3.573821 (46)
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 1.5569333 - largest nonzero change 2.6137905e-05 ( 0.0015823696%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 7.2670355
Clp0000I Optimal - objective value 7.2670355
Coin0511I After Postsolve, objective 7.2670355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 7.2670355 Dual inf 51.618693 (41)
Clp0014I Perturbing problem by 0.001% of 1.5623219 - largest nonzero change 1.1663806e-05 ( 0.0008514623%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 61.506044
Clp0000I Optimal - objective value 61.506044
Clp0000I Optimal - objective value 61.506044
Coin0511I After Postsolve, objective 61.506044, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.50604374 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 115 columns (115 integer (115 of which binary)) and 1842 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.426%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 3.04837
Cbc0038I Pass   1: suminf.    1.94402 (24) obj. -52.5747 iterations 7
Cbc0038I Pass   2: suminf.    1.94402 (24) obj. -52.5747 iterations 1
Cbc0038I Pass   3: suminf.    0.07877 (2) obj. -12.1004 iterations 27
Cbc0038I Solution found of -10.1792
Cbc0038I Rounding solution of -17.795 is better than previous of -10.1792

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 115 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -21.8972
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.94402 (24) obj. -52.5747 iterations 0
Cbc0038I Pass   5: suminf.    1.94402 (24) obj. -52.5747 iterations 1
Cbc0038I Pass   6: suminf.    0.74624 (10) obj. -21.8972 iterations 37
Cbc0038I Pass   7: suminf.    0.60124 (9) obj. -21.8972 iterations 5
Cbc0038I Pass   8: suminf.    1.08260 (3) obj. -21.8972 iterations 18
Cbc0038I Pass   9: suminf.    0.83058 (5) obj. -22.9763 iterations 4
Cbc0038I Pass  10: suminf.    1.19029 (5) obj. -21.8972 iterations 8
Cbc0038I Pass  11: suminf.    0.78754 (9) obj. -21.8972 iterations 31
Cbc0038I Pass  12: suminf.    0.78754 (9) obj. -21.8972 iterations 9
Cbc0038I Pass  13: suminf.    0.63988 (7) obj. -21.8972 iterations 17
Cbc0038I Pass  14: suminf.    0.56359 (7) obj. -21.8972 iterations 1
Cbc0038I Pass  15: suminf.    0.68154 (5) obj. -21.8972 iterations 18
Cbc0038I Pass  16: suminf.    0.33123 (3) obj. -21.8972 iterations 8
Cbc0038I Pass  17: suminf.    0.49480 (5) obj. -21.8972 iterations 5
Cbc0038I Pass  18: suminf.    2.80785 (17) obj. -21.8972 iterations 23
Cbc0038I Pass  19: suminf.    2.21008 (13) obj. -22.371 iterations 2
Cbc0038I Pass  20: suminf.    1.80769 (12) obj. -21.8972 iterations 7
Cbc0038I Pass  21: suminf.    1.23282 (11) obj. -23.3266 iterations 5
Cbc0038I Pass  22: suminf.    1.07691 (11) obj. -21.8972 iterations 2
Cbc0038I Pass  23: suminf.    1.10903 (7) obj. -21.8972 iterations 21
Cbc0038I Pass  24: suminf.    0.87303 (10) obj. -21.8972 iterations 4
Cbc0038I Pass  25: suminf.    1.27800 (11) obj. -21.8972 iterations 9
Cbc0038I Pass  26: suminf.    1.07242 (9) obj. -21.8972 iterations 6
Cbc0038I Pass  27: suminf.    1.53622 (14) obj. -23.6865 iterations 21
Cbc0038I Pass  28: suminf.    1.41219 (11) obj. -24.1702 iterations 3
Cbc0038I Pass  29: suminf.    0.97522 (11) obj. -21.8972 iterations 3
Cbc0038I Pass  30: suminf.    1.30298 (8) obj. -21.8972 iterations 13
Cbc0038I Pass  31: suminf.    0.98542 (7) obj. -23.323 iterations 4
Cbc0038I Pass  32: suminf.    1.35611 (8) obj. -21.8972 iterations 23
Cbc0038I Pass  33: suminf.    1.22029 (10) obj. -21.8972 iterations 4
Cbc0038I Rounding solution of -18.7112 is better than previous of -17.795

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 115 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -18.7112 to -22.8255 (0.09 seconds)
Cbc0038I Round again with cutoff of -30.0235
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.94402 (24) obj. -52.5747 iterations 0
Cbc0038I Pass  34: suminf.    1.94402 (24) obj. -52.5747 iterations 1
Cbc0038I Pass  35: suminf.    1.15874 (14) obj. -30.0235 iterations 12
Cbc0038I Pass  36: suminf.    1.44617 (12) obj. -30.0235 iterations 23
Cbc0038I Pass  37: suminf.    1.18633 (14) obj. -30.0235 iterations 4
Cbc0038I Pass  38: suminf.    1.48453 (9) obj. -30.0235 iterations 20
Cbc0038I Pass  39: suminf.    1.48453 (9) obj. -30.0235 iterations 3
Cbc0038I Pass  40: suminf.    1.45582 (9) obj. -30.0235 iterations 11
Cbc0038I Pass  41: suminf.    1.45582 (9) obj. -30.0235 iterations 3
Cbc0038I Pass  42: suminf.    1.48453 (9) obj. -30.0235 iterations 4
Cbc0038I Pass  43: suminf.    3.36413 (15) obj. -30.0235 iterations 15
Cbc0038I Pass  44: suminf.    2.73313 (15) obj. -30.0235 iterations 7
Cbc0038I Pass  45: suminf.    1.84871 (9) obj. -30.0235 iterations 23
Cbc0038I Pass  46: suminf.    1.84871 (9) obj. -30.0235 iterations 0
Cbc0038I Pass  47: suminf.    1.25625 (9) obj. -30.0235 iterations 4
Cbc0038I Pass  48: suminf.    1.22671 (9) obj. -30.0826 iterations 1
Cbc0038I Pass  49: suminf.    1.25625 (9) obj. -30.0235 iterations 12
Cbc0038I Pass  50: suminf.    1.19604 (9) obj. -30.1439 iterations 4
Cbc0038I Pass  51: suminf.    1.46578 (13) obj. -30.0235 iterations 5
Cbc0038I Pass  52: suminf.    1.46578 (13) obj. -30.0235 iterations 1
Cbc0038I Pass  53: suminf.    1.59877 (9) obj. -30.0235 iterations 9
Cbc0038I Pass  54: suminf.    1.54222 (10) obj. -30.0235 iterations 3
Cbc0038I Pass  55: suminf.    1.25625 (9) obj. -30.0235 iterations 8
Cbc0038I Pass  56: suminf.    1.19604 (9) obj. -30.1439 iterations 4
Cbc0038I Pass  57: suminf.    1.25625 (9) obj. -30.0235 iterations 10
Cbc0038I Pass  58: suminf.    1.63168 (11) obj. -30.0235 iterations 12
Cbc0038I Pass  59: suminf.    1.63168 (11) obj. -30.0235 iterations 0
Cbc0038I Pass  60: suminf.    1.25625 (9) obj. -30.0235 iterations 7
Cbc0038I Pass  61: suminf.    2.16310 (12) obj. -30.0235 iterations 17
Cbc0038I Pass  62: suminf.    1.96111 (12) obj. -30.4275 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 115 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -22.8255 - took 0.10 seconds
Cbc0012I Integer solution of -22.82548 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 104 rows 115 columns, reduced to 14 rows 17 columns
Cbc0031I 50 added rows had average density of 39.12
Cbc0013I At root node, 50 cuts changed objective from -58.815296 to -30.018212 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8236 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1783 row cuts average 104.4 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 318 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1264 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 309 row cuts average 67.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 122 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.657 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.82548 best solution, best possible -30.018212 (2.37 seconds)
Cbc0012I Integer solution of -22.99296 found by DiveCoefficient after 3790 iterations and 4 nodes (2.57 seconds)
Cbc0016I Integer solution of -23.59796 found by strong branching after 3799 iterations and 4 nodes (2.57 seconds)
Cbc0012I Integer solution of -23.78756 found by rounding after 3824 iterations and 6 nodes (2.57 seconds)
Cbc0012I Integer solution of -23.82767 found by DiveCoefficient after 3837 iterations and 7 nodes (2.58 seconds)
Cbc0038I Full problem 104 rows 115 columns, reduced to 57 rows 66 columns
Cbc0010I After 42 nodes, 7 on tree, -23.82767 best solution, best possible -30.018212 (3.11 seconds)
Cbc0038I Full problem 104 rows 115 columns, reduced to 61 rows 68 columns
Cbc0010I After 98 nodes, 6 on tree, -23.82767 best solution, best possible -30.018212 (3.82 seconds)
Cbc0001I Search completed - best objective -23.82767, took 9102 iterations and 144 nodes (4.25 seconds)
Cbc0032I Strong branching done 1656 times (26167 iterations), fathomed 20 nodes and fixed 26 variables
Cbc0035I Maximum depth 17, 345 variables fixed on reduced cost
Total time (CPU seconds):       3.45   (Wallclock seconds):       4.27

