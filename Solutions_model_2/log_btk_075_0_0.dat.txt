Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-18) rows, 70 (-7) columns and 335 (-39) elements
Clp1000I sum of infeasibilities 0.209658 - average 0.00156462, 13 fixed columns
Coin0506I Presolve 57 (-77) rows, 56 (-14) columns and 167 (-168) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.306926 - largest nonzero change 2.8696192e-05 ( 0.0014348096%) - largest zero change 1.9329231e-05
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Coin0511I After Postsolve, objective 1659.1147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3357157 - largest nonzero change 2.8696192e-05 ( 0.0014348096%) - largest zero change 2.7814203e-05
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Coin0511I After Postsolve, objective 1659.1147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1659.11474 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 70 columns (69 integer (69 of which binary)) and 335 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.348%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.33741
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. 47.0028 iterations 40
Cbc0038I Solution found of 176.336
Cbc0038I Relaxing continuous gives 176.336
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 31 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 176.336 to -469.331 (0.02 seconds)
Cbc0038I Round again with cutoff of -586.195
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.63733 (4) obj. -586.195 iterations 3
Cbc0038I Pass   3: suminf.    0.58109 (3) obj. -586.195 iterations 6
Cbc0038I Pass   4: suminf.    0.33236 (2) obj. -586.195 iterations 2
Cbc0038I Pass   5: suminf.    0.96365 (4) obj. -586.195 iterations 3
Cbc0038I Pass   6: suminf.    0.96365 (4) obj. -586.195 iterations 0
Cbc0038I Pass   7: suminf.    0.55474 (3) obj. -586.195 iterations 4
Cbc0038I Pass   8: suminf.    1.04955 (3) obj. -586.195 iterations 2
Cbc0038I Pass   9: suminf.    0.43784 (3) obj. -586.195 iterations 2
Cbc0038I Pass  10: suminf.    1.04955 (3) obj. -586.195 iterations 2
Cbc0038I Pass  11: suminf.    1.04480 (5) obj. -586.195 iterations 19
Cbc0038I Pass  12: suminf.    1.04480 (5) obj. -586.195 iterations 2
Cbc0038I Pass  13: suminf.    1.01709 (4) obj. -586.195 iterations 4
Cbc0038I Pass  14: suminf.    0.75804 (4) obj. -586.195 iterations 1
Cbc0038I Pass  15: suminf.    1.34608 (4) obj. -586.195 iterations 2
Cbc0038I Pass  16: suminf.    0.66591 (4) obj. -586.195 iterations 2
Cbc0038I Pass  17: suminf.    1.11623 (5) obj. -586.195 iterations 13
Cbc0038I Pass  18: suminf.    1.11623 (5) obj. -586.195 iterations 4
Cbc0038I Pass  19: suminf.    1.16208 (5) obj. -586.195 iterations 4
Cbc0038I Pass  20: suminf.    0.90303 (5) obj. -586.195 iterations 1
Cbc0038I Pass  21: suminf.    1.11623 (5) obj. -586.195 iterations 1
Cbc0038I Pass  22: suminf.    1.44391 (7) obj. -586.195 iterations 12
Cbc0038I Pass  23: suminf.    1.15493 (6) obj. -586.195 iterations 4
Cbc0038I Pass  24: suminf.    1.02690 (5) obj. -586.195 iterations 1
Cbc0038I Pass  25: suminf.    1.02690 (5) obj. -586.195 iterations 0
Cbc0038I Pass  26: suminf.    1.10624 (5) obj. -586.195 iterations 4
Cbc0038I Pass  27: suminf.    0.84719 (5) obj. -586.195 iterations 1
Cbc0038I Pass  28: suminf.    1.02690 (5) obj. -586.195 iterations 1
Cbc0038I Pass  29: suminf.    1.84049 (11) obj. -586.195 iterations 16
Cbc0038I Pass  30: suminf.    1.25191 (7) obj. -586.195 iterations 11
Cbc0038I Pass  31: suminf.    1.24127 (6) obj. -586.195 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 34 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -469.331 to -469.333 (0.09 seconds)
Cbc0038I Round again with cutoff of -796.551
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.70618 (4) obj. -796.551 iterations 0
Cbc0038I Pass  32: suminf.    0.62268 (4) obj. -796.551 iterations 5
Cbc0038I Pass  33: suminf.    0.62268 (4) obj. -796.551 iterations 0
Cbc0038I Pass  34: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  35: suminf.    0.58143 (4) obj. -796.551 iterations 1
Cbc0038I Pass  36: suminf.    1.50260 (4) obj. -796.551 iterations 2
Cbc0038I Pass  37: suminf.    0.59864 (4) obj. -796.551 iterations 2
Cbc0038I Pass  38: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  39: suminf.    1.25509 (6) obj. -796.551 iterations 10
Cbc0038I Pass  40: suminf.    0.84496 (4) obj. -796.551 iterations 5
Cbc0038I Pass  41: suminf.    0.92689 (4) obj. -796.551 iterations 1
Cbc0038I Pass  42: suminf.    0.87040 (5) obj. -796.551 iterations 8
Cbc0038I Pass  43: suminf.    0.58143 (4) obj. -796.551 iterations 5
Cbc0038I Pass  44: suminf.    1.50260 (4) obj. -796.551 iterations 2
Cbc0038I Pass  45: suminf.    0.59864 (4) obj. -796.551 iterations 2
Cbc0038I Pass  46: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  47: suminf.    0.84048 (4) obj. -796.551 iterations 9
Cbc0038I Pass  48: suminf.    0.58143 (4) obj. -796.551 iterations 6
Cbc0038I Pass  49: suminf.    1.50261 (4) obj. -796.551 iterations 2
Cbc0038I Pass  50: suminf.    0.88807 (5) obj. -796.551 iterations 3
Cbc0038I Pass  51: suminf.    0.92689 (4) obj. -796.551 iterations 2
Cbc0038I Pass  52: suminf.    0.84496 (4) obj. -796.551 iterations 1
Cbc0038I Pass  53: suminf.    0.96612 (5) obj. -796.551 iterations 11
Cbc0038I Pass  54: suminf.    0.84496 (4) obj. -796.551 iterations 2
Cbc0038I Pass  55: suminf.    0.92689 (4) obj. -796.551 iterations 1
Cbc0038I Pass  56: suminf.    1.00263 (9) obj. -796.551 iterations 10
Cbc0038I Pass  57: suminf.    0.91460 (5) obj. -796.551 iterations 5
Cbc0038I Pass  58: suminf.    0.93482 (5) obj. -796.551 iterations 2
Cbc0038I Pass  59: suminf.    2.44730 (8) obj. -796.551 iterations 15
Cbc0038I Pass  60: suminf.    2.37392 (7) obj. -796.551 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 34 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -469.333 - took 0.11 seconds
Cbc0012I Integer solution of -469.3327 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 31 rows 29 columns
Cbc0031I 8 added rows had average density of 64.875
Cbc0013I At root node, 8 cuts changed objective from -1637.9756 to -568.70333 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 177 row cuts average 10.7 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 289 row cuts average 63.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0038I Full problem 134 rows 70 columns, reduced to 6 rows 8 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0010I After 500 nodes, 11 on tree, -469.3327 best solution, best possible -568.70176 (0.69 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 0 rows 0 columns
Cbc0010I After 845 nodes, 9 on tree, -469.3327 best solution, best possible -568.70176 (1.39 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 5 rows 6 columns
Cbc0001I Search completed - best objective -469.3327000000309, took 80928 iterations and 22722 nodes (1.86 seconds)
Cbc0032I Strong branching done 2216 times (6046 iterations), fathomed 57 nodes and fixed 25 variables
Cbc0041I Maximum depth 17, 472 variables fixed on reduced cost (complete fathoming 240 times, 21604 nodes taking 65905 iterations)
Total time (CPU seconds):       1.71   (Wallclock seconds):       1.86

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-48) rows, 107 (-43) columns and 1331 (-1818) elements
Clp1000I sum of infeasibilities 3.62288e-06 - average 3.51736e-08, 82 fixed columns
Coin0506I Presolve 19 (-84) rows, 23 (-84) columns and 59 (-1272) elements
Clp0006I 0  Obj -636.35371 Primal inf 7.7486693e-07 (1) Dual inf 1.9601128e+09 (23)
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value -499.71759
Clp0000I Optimal - objective value -499.71759
Coin0511I After Postsolve, objective -499.71759, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -499.71759 Dual inf 6952.0645 (57)
Clp0014I Perturbing problem by 0.001% of 3.6599979 - largest nonzero change 2.9576128e-05 ( 0.0029576128%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2847.4865
Clp0000I Optimal - objective value 2847.4865
Clp0000I Optimal - objective value 2847.4865
Coin0511I After Postsolve, objective 2847.4865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2847.486463 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 107 columns (107 integer (107 of which binary)) and 1340 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.507%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 10.8145
Cbc0038I Pass   1: suminf.    2.15833 (6) obj. -786.663 iterations 50
Cbc0038I Solution found of -339.997
Cbc0038I Rounding solution of -469.33 is better than previous of -339.997

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 107 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -617.891
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.15833 (6) obj. -786.663 iterations 0
Cbc0038I Pass   3: suminf.    1.65833 (5) obj. -724.163 iterations 1
Cbc0038I Pass   4: suminf.    0.38294 (2) obj. -617.891 iterations 7
Cbc0038I Pass   5: suminf.    0.48188 (2) obj. -682.207 iterations 1
Cbc0038I Pass   6: suminf.    2.98380 (10) obj. -617.891 iterations 22
Cbc0038I Pass   7: suminf.    1.94868 (7) obj. -617.891 iterations 9
Cbc0038I Pass   8: suminf.    0.68954 (3) obj. -617.891 iterations 5
Cbc0038I Pass   9: suminf.    0.53724 (3) obj. -617.891 iterations 2
Cbc0038I Pass  10: suminf.    0.53724 (3) obj. -617.891 iterations 0
Cbc0038I Pass  11: suminf.    0.65498 (3) obj. -667.931 iterations 1
Cbc0038I Pass  12: suminf.    7.44569 (19) obj. -617.891 iterations 38
Cbc0038I Pass  13: suminf.    4.02832 (10) obj. -617.891 iterations 19
Cbc0038I Pass  14: suminf.    2.58184 (8) obj. -617.891 iterations 9
Cbc0038I Pass  15: suminf.    1.69279 (5) obj. -617.891 iterations 5
Cbc0038I Pass  16: suminf.    1.86515 (6) obj. -617.891 iterations 4
Cbc0038I Pass  17: suminf.    1.86515 (6) obj. -617.891 iterations 0
Cbc0038I Pass  18: suminf.    1.78146 (6) obj. -644.06 iterations 2
Cbc0038I Pass  19: suminf.    2.63975 (10) obj. -617.891 iterations 17
Cbc0038I Pass  20: suminf.    1.65597 (6) obj. -617.891 iterations 9
Cbc0038I Pass  21: suminf.    0.83678 (5) obj. -617.891 iterations 3
Cbc0038I Pass  22: suminf.    0.83678 (5) obj. -617.891 iterations 1
Cbc0038I Pass  23: suminf.    1.14017 (5) obj. -731.154 iterations 2
Cbc0038I Pass  24: suminf.    0.84861 (4) obj. -617.891 iterations 2
Cbc0038I Pass  25: suminf.    0.83678 (5) obj. -617.891 iterations 3
Cbc0038I Pass  26: suminf.    3.54421 (15) obj. -617.891 iterations 14
Cbc0038I Pass  27: suminf.    2.73189 (9) obj. -617.891 iterations 13
Cbc0038I Pass  28: suminf.    2.51050 (8) obj. -617.891 iterations 4
Cbc0038I Pass  29: suminf.    1.90122 (8) obj. -617.891 iterations 4
Cbc0038I Pass  30: suminf.    1.90122 (8) obj. -617.891 iterations 0
Cbc0038I Pass  31: suminf.    1.79497 (8) obj. -617.891 iterations 4
Cbc0038I Rounding solution of -469.331 is better than previous of -469.33

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 107 columns, reduced to 12 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -469.331 to -469.332 (0.08 seconds)
Cbc0038I Round again with cutoff of -885.301
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.28561 (7) obj. -885.301 iterations 1
Cbc0038I Pass  32: suminf.    1.10181 (5) obj. -885.301 iterations 13
Cbc0038I Pass  33: suminf.    1.10181 (5) obj. -885.301 iterations 1
Cbc0038I Pass  34: suminf.    1.28559 (5) obj. -971.651 iterations 3
Cbc0038I Pass  35: suminf.    1.04211 (4) obj. -885.301 iterations 2
Cbc0038I Pass  36: suminf.    1.10181 (5) obj. -885.301 iterations 2
Cbc0038I Pass  37: suminf.    2.84243 (8) obj. -885.301 iterations 20
Cbc0038I Pass  38: suminf.    2.71398 (8) obj. -885.301 iterations 9
Cbc0038I Pass  39: suminf.    2.21751 (7) obj. -885.301 iterations 3
Cbc0038I Pass  40: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I Pass  41: suminf.    1.96659 (7) obj. -885.301 iterations 0
Cbc0038I Pass  42: suminf.    2.45932 (7) obj. -885.301 iterations 3
Cbc0038I Pass  43: suminf.    2.45932 (7) obj. -885.301 iterations 0
Cbc0038I Pass  44: suminf.    2.21751 (7) obj. -885.301 iterations 2
Cbc0038I Pass  45: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I Pass  46: suminf.    1.96659 (7) obj. -885.301 iterations 0
Cbc0038I Pass  47: suminf.    2.45932 (7) obj. -885.301 iterations 3
Cbc0038I Pass  48: suminf.    2.45932 (7) obj. -885.301 iterations 0
Cbc0038I Pass  49: suminf.    2.21751 (7) obj. -885.301 iterations 2
Cbc0038I Pass  50: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I Pass  51: suminf.    1.96659 (7) obj. -885.301 iterations 0
Cbc0038I Pass  52: suminf.    2.45932 (7) obj. -885.301 iterations 3
Cbc0038I Pass  53: suminf.    2.45932 (7) obj. -885.301 iterations 0
Cbc0038I Pass  54: suminf.    2.21751 (7) obj. -885.301 iterations 2
Cbc0038I Pass  55: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I Pass  56: suminf.    1.96659 (7) obj. -885.301 iterations 0
Cbc0038I Pass  57: suminf.    2.45932 (7) obj. -885.301 iterations 3
Cbc0038I Pass  58: suminf.    2.45932 (7) obj. -885.301 iterations 0
Cbc0038I Pass  59: suminf.    2.21751 (7) obj. -885.301 iterations 2
Cbc0038I Pass  60: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -469.332 - took 0.03 seconds
Cbc0012I Integer solution of -469.3317 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 103 rows 107 columns, reduced to 6 rows 8 columns
Cbc0031I 10 added rows had average density of 33.1
Cbc0013I At root node, 10 cuts changed objective from -909.16346 to -552.20181 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 65 row cuts average 11.9 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 59.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 58.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 61.3 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -469.3317 best solution, best possible -552.20181 (0.31 seconds)
Cbc0012I Integer solution of -469.3327 found by rounding after 278 iterations and 3 nodes (0.51 seconds)
Cbc0010I After 34 nodes, 19 on tree, -469.3327 best solution, best possible -552.20181 (1.02 seconds)
Cbc0038I Full problem 103 rows 107 columns, reduced to 7 rows 8 columns
Cbc0038I Full problem 113 rows 107 columns, reduced to 55 rows 61 columns
Cbc0044I Reduced cost fixing - 55 rows, 61 columns - restarting search
Cbc0012I Integer solution of -339.9997 found by Previous solution after 0 iterations and 0 nodes (1.20 seconds)
Cbc0012I Integer solution of -348.6637 found by DiveCoefficient after 0 iterations and 0 nodes (1.21 seconds)
Cbc0038I Full problem 55 rows 61 columns, reduced to 10 rows 10 columns
Cbc0012I Integer solution of -469.3297 found by DiveCoefficient after 347 iterations and 0 nodes (2.09 seconds)
Cbc0031I 8 added rows had average density of 40.375
Cbc0013I At root node, 8 cuts changed objective from -666.84814 to -533.99698 in 63 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 18.8 elements, 4 column cuts (4 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 139 row cuts average 56.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 10 row cuts average 39.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 49.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 52.4 elements, 0 column cuts (0 active)  in 0.462 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 8 row cuts average 38.1 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -469.3297 best solution, best possible -533.99698 (2.10 seconds)
Cbc0012I Integer solution of -469.3307 found by DiveCoefficient after 376 iterations and 4 nodes (2.16 seconds)
Cbc0016I Integer solution of -469.3317 found by strong branching after 407 iterations and 7 nodes (2.17 seconds)
Cbc0038I Full problem 55 rows 61 columns, reduced to 9 rows 13 columns
Cbc0012I Integer solution of -469.3327 found by RINS after 653 iterations and 41 nodes (2.51 seconds)
Cbc0038I Full problem 55 rows 61 columns, reduced to 5 rows 7 columns
Cbc0010I After 95 nodes, 9 on tree, -469.3327 best solution, best possible -533.99698 (3.13 seconds)
Cbc0010I After 190 nodes, 3 on tree, -469.3327 best solution, best possible -533.99698 (4.14 seconds)
Cbc0001I Search completed - best objective -469.3327000000008, took 1695 iterations and 194 nodes (4.20 seconds)
Cbc0032I Strong branching done 984 times (3084 iterations), fathomed 41 nodes and fixed 22 variables
Cbc0035I Maximum depth 13, 260 variables fixed on reduced cost
Cbc0038I Probing was tried 257 times and created 349 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Cbc0038I Gomory was tried 225 times and created 156 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Cbc0038I Knapsack was tried 225 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Cbc0038I Clique was tried 63 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I OddWheel was tried 63 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I MixedIntegerRounding2 was tried 225 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Cbc0038I FlowCover was tried 225 times and created 93 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I TwoMirCuts was tried 225 times and created 59 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I ZeroHalf was tried 225 times and created 231 cuts of which 0 were active after adding rounds of cuts (1.409 seconds)
Cbc0038I Stored from first was tried 225 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -469.3327000000318, took 2219 iterations and 244 nodes (4.20 seconds)
Cbc0032I Strong branching done 402 times (1592 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 17, 90 variables fixed on reduced cost
Total time (CPU seconds):       2.53   (Wallclock seconds):       4.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-18) rows, 70 (-7) columns and 335 (-39) elements
Clp1000I sum of infeasibilities 0.209658 - average 0.00156462, 13 fixed columns
Coin0506I Presolve 57 (-77) rows, 56 (-14) columns and 167 (-168) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.306926 - largest nonzero change 2.8696192e-05 ( 0.0014348096%) - largest zero change 1.9329231e-05
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Coin0511I After Postsolve, objective 1659.1147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3357157 - largest nonzero change 2.8696192e-05 ( 0.0014348096%) - largest zero change 2.7814203e-05
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Coin0511I After Postsolve, objective 1659.1147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1659.11474 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 70 columns (69 integer (69 of which binary)) and 335 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.348%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.33741
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. 47.0028 iterations 40
Cbc0038I Solution found of 176.336
Cbc0038I Relaxing continuous gives 176.336
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 31 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 176.336 to -469.331 (0.02 seconds)
Cbc0038I Round again with cutoff of -586.195
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.63733 (4) obj. -586.195 iterations 3
Cbc0038I Pass   3: suminf.    0.58109 (3) obj. -586.195 iterations 6
Cbc0038I Pass   4: suminf.    0.33236 (2) obj. -586.195 iterations 2
Cbc0038I Pass   5: suminf.    0.96365 (4) obj. -586.195 iterations 3
Cbc0038I Pass   6: suminf.    0.96365 (4) obj. -586.195 iterations 0
Cbc0038I Pass   7: suminf.    0.55474 (3) obj. -586.195 iterations 4
Cbc0038I Pass   8: suminf.    1.04955 (3) obj. -586.195 iterations 2
Cbc0038I Pass   9: suminf.    0.43784 (3) obj. -586.195 iterations 2
Cbc0038I Pass  10: suminf.    1.04955 (3) obj. -586.195 iterations 2
Cbc0038I Pass  11: suminf.    1.04480 (5) obj. -586.195 iterations 19
Cbc0038I Pass  12: suminf.    1.04480 (5) obj. -586.195 iterations 2
Cbc0038I Pass  13: suminf.    1.01709 (4) obj. -586.195 iterations 4
Cbc0038I Pass  14: suminf.    0.75804 (4) obj. -586.195 iterations 1
Cbc0038I Pass  15: suminf.    1.34608 (4) obj. -586.195 iterations 2
Cbc0038I Pass  16: suminf.    0.66591 (4) obj. -586.195 iterations 2
Cbc0038I Pass  17: suminf.    1.11623 (5) obj. -586.195 iterations 13
Cbc0038I Pass  18: suminf.    1.11623 (5) obj. -586.195 iterations 4
Cbc0038I Pass  19: suminf.    1.16208 (5) obj. -586.195 iterations 4
Cbc0038I Pass  20: suminf.    0.90303 (5) obj. -586.195 iterations 1
Cbc0038I Pass  21: suminf.    1.11623 (5) obj. -586.195 iterations 1
Cbc0038I Pass  22: suminf.    1.44391 (7) obj. -586.195 iterations 12
Cbc0038I Pass  23: suminf.    1.15493 (6) obj. -586.195 iterations 4
Cbc0038I Pass  24: suminf.    1.02690 (5) obj. -586.195 iterations 1
Cbc0038I Pass  25: suminf.    1.02690 (5) obj. -586.195 iterations 0
Cbc0038I Pass  26: suminf.    1.10624 (5) obj. -586.195 iterations 4
Cbc0038I Pass  27: suminf.    0.84719 (5) obj. -586.195 iterations 1
Cbc0038I Pass  28: suminf.    1.02690 (5) obj. -586.195 iterations 1
Cbc0038I Pass  29: suminf.    1.84049 (11) obj. -586.195 iterations 16
Cbc0038I Pass  30: suminf.    1.25191 (7) obj. -586.195 iterations 11
Cbc0038I Pass  31: suminf.    1.24127 (6) obj. -586.195 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 34 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -469.331 to -469.333 (0.09 seconds)
Cbc0038I Round again with cutoff of -796.551
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.70618 (4) obj. -796.551 iterations 0
Cbc0038I Pass  32: suminf.    0.62268 (4) obj. -796.551 iterations 5
Cbc0038I Pass  33: suminf.    0.62268 (4) obj. -796.551 iterations 0
Cbc0038I Pass  34: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  35: suminf.    0.58143 (4) obj. -796.551 iterations 1
Cbc0038I Pass  36: suminf.    1.50260 (4) obj. -796.551 iterations 2
Cbc0038I Pass  37: suminf.    0.59864 (4) obj. -796.551 iterations 2
Cbc0038I Pass  38: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  39: suminf.    1.25509 (6) obj. -796.551 iterations 10
Cbc0038I Pass  40: suminf.    0.84496 (4) obj. -796.551 iterations 5
Cbc0038I Pass  41: suminf.    0.92689 (4) obj. -796.551 iterations 1
Cbc0038I Pass  42: suminf.    0.87040 (5) obj. -796.551 iterations 8
Cbc0038I Pass  43: suminf.    0.58143 (4) obj. -796.551 iterations 5
Cbc0038I Pass  44: suminf.    1.50260 (4) obj. -796.551 iterations 2
Cbc0038I Pass  45: suminf.    0.59864 (4) obj. -796.551 iterations 2
Cbc0038I Pass  46: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  47: suminf.    0.84048 (4) obj. -796.551 iterations 9
Cbc0038I Pass  48: suminf.    0.58143 (4) obj. -796.551 iterations 6
Cbc0038I Pass  49: suminf.    1.50261 (4) obj. -796.551 iterations 2
Cbc0038I Pass  50: suminf.    0.88807 (5) obj. -796.551 iterations 3
Cbc0038I Pass  51: suminf.    0.92689 (4) obj. -796.551 iterations 2
Cbc0038I Pass  52: suminf.    0.84496 (4) obj. -796.551 iterations 1
Cbc0038I Pass  53: suminf.    0.96612 (5) obj. -796.551 iterations 11
Cbc0038I Pass  54: suminf.    0.84496 (4) obj. -796.551 iterations 2
Cbc0038I Pass  55: suminf.    0.92689 (4) obj. -796.551 iterations 1
Cbc0038I Pass  56: suminf.    1.00263 (9) obj. -796.551 iterations 10
Cbc0038I Pass  57: suminf.    0.91460 (5) obj. -796.551 iterations 5
Cbc0038I Pass  58: suminf.    0.93482 (5) obj. -796.551 iterations 2
Cbc0038I Pass  59: suminf.    2.44730 (8) obj. -796.551 iterations 15
Cbc0038I Pass  60: suminf.    2.37392 (7) obj. -796.551 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 34 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -469.333 - took 0.10 seconds
Cbc0012I Integer solution of -469.3327 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 31 rows 29 columns
Cbc0031I 8 added rows had average density of 64.875
Cbc0013I At root node, 8 cuts changed objective from -1637.9756 to -568.70333 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 177 row cuts average 10.7 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 289 row cuts average 63.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0038I Full problem 134 rows 70 columns, reduced to 6 rows 8 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0010I After 504 nodes, 12 on tree, -469.3327 best solution, best possible -568.70176 (0.71 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 0 rows 0 columns
Cbc0010I After 852 nodes, 6 on tree, -469.3327 best solution, best possible -568.70176 (1.41 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 5 rows 6 columns
Cbc0001I Search completed - best objective -469.3327000000309, took 80928 iterations and 22722 nodes (1.87 seconds)
Cbc0032I Strong branching done 2216 times (6046 iterations), fathomed 57 nodes and fixed 25 variables
Cbc0041I Maximum depth 17, 472 variables fixed on reduced cost (complete fathoming 240 times, 21604 nodes taking 65905 iterations)
Total time (CPU seconds):       1.72   (Wallclock seconds):       1.87

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-49) rows, 107 (-44) columns and 1331 (-1819) elements
Clp1000I sum of infeasibilities 3.62288e-06 - average 3.51736e-08, 82 fixed columns
Coin0506I Presolve 19 (-84) rows, 23 (-84) columns and 59 (-1272) elements
Clp0006I 0  Obj -636.35371 Primal inf 7.7486693e-07 (1) Dual inf 1.9601128e+09 (23)
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value -499.71759
Clp0000I Optimal - objective value -499.71759
Coin0511I After Postsolve, objective -499.71759, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -499.71759 Dual inf 6952.0645 (57)
Clp0014I Perturbing problem by 0.001% of 3.6599979 - largest nonzero change 2.9576128e-05 ( 0.0029576128%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2847.4865
Clp0000I Optimal - objective value 2847.4865
Clp0000I Optimal - objective value 2847.4865
Coin0511I After Postsolve, objective 2847.4865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2847.486463 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 107 columns (107 integer (107 of which binary)) and 1340 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.507%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 10.8145
Cbc0038I Pass   1: suminf.    2.15833 (6) obj. -786.663 iterations 50
Cbc0038I Solution found of -339.997
Cbc0038I Rounding solution of -469.33 is better than previous of -339.997

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 107 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -617.891
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.15833 (6) obj. -786.663 iterations 0
Cbc0038I Pass   3: suminf.    1.65833 (5) obj. -724.163 iterations 1
Cbc0038I Pass   4: suminf.    0.38294 (2) obj. -617.891 iterations 7
Cbc0038I Pass   5: suminf.    0.48188 (2) obj. -682.207 iterations 1
Cbc0038I Pass   6: suminf.    2.98380 (10) obj. -617.891 iterations 22
Cbc0038I Pass   7: suminf.    1.94868 (7) obj. -617.891 iterations 9
Cbc0038I Pass   8: suminf.    0.68954 (3) obj. -617.891 iterations 5
Cbc0038I Pass   9: suminf.    0.53724 (3) obj. -617.891 iterations 2
Cbc0038I Pass  10: suminf.    0.53724 (3) obj. -617.891 iterations 0
Cbc0038I Pass  11: suminf.    0.65498 (3) obj. -667.931 iterations 1
Cbc0038I Pass  12: suminf.    7.44569 (19) obj. -617.891 iterations 38
Cbc0038I Pass  13: suminf.    4.02832 (10) obj. -617.891 iterations 19
Cbc0038I Pass  14: suminf.    2.58184 (8) obj. -617.891 iterations 9
Cbc0038I Pass  15: suminf.    1.69279 (5) obj. -617.891 iterations 5
Cbc0038I Pass  16: suminf.    1.86515 (6) obj. -617.891 iterations 4
Cbc0038I Pass  17: suminf.    1.86515 (6) obj. -617.891 iterations 0
Cbc0038I Pass  18: suminf.    1.78146 (6) obj. -644.06 iterations 2
Cbc0038I Pass  19: suminf.    2.63975 (10) obj. -617.891 iterations 17
Cbc0038I Pass  20: suminf.    1.65597 (6) obj. -617.891 iterations 9
Cbc0038I Pass  21: suminf.    0.83678 (5) obj. -617.891 iterations 3
Cbc0038I Pass  22: suminf.    0.83678 (5) obj. -617.891 iterations 1
Cbc0038I Pass  23: suminf.    1.14017 (5) obj. -731.154 iterations 2
Cbc0038I Pass  24: suminf.    0.84861 (4) obj. -617.891 iterations 2
Cbc0038I Pass  25: suminf.    0.83678 (5) obj. -617.891 iterations 3
Cbc0038I Pass  26: suminf.    3.54421 (15) obj. -617.891 iterations 14
Cbc0038I Pass  27: suminf.    2.73189 (9) obj. -617.891 iterations 13
Cbc0038I Pass  28: suminf.    2.51050 (8) obj. -617.891 iterations 4
Cbc0038I Pass  29: suminf.    1.90122 (8) obj. -617.891 iterations 4
Cbc0038I Pass  30: suminf.    1.90122 (8) obj. -617.891 iterations 0
Cbc0038I Pass  31: suminf.    1.79497 (8) obj. -617.891 iterations 4
Cbc0038I Rounding solution of -469.331 is better than previous of -469.33

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 107 columns, reduced to 12 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -469.331 to -469.332 (0.08 seconds)
Cbc0038I Round again with cutoff of -885.301
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.28561 (7) obj. -885.301 iterations 1
Cbc0038I Pass  32: suminf.    1.10181 (5) obj. -885.301 iterations 13
Cbc0038I Pass  33: suminf.    1.10181 (5) obj. -885.301 iterations 1
Cbc0038I Pass  34: suminf.    1.28559 (5) obj. -971.651 iterations 3
Cbc0038I Pass  35: suminf.    1.04211 (4) obj. -885.301 iterations 2
Cbc0038I Pass  36: suminf.    1.10181 (5) obj. -885.301 iterations 2
Cbc0038I Pass  37: suminf.    2.84243 (8) obj. -885.301 iterations 20
Cbc0038I Pass  38: suminf.    2.71398 (8) obj. -885.301 iterations 9
Cbc0038I Pass  39: suminf.    2.21751 (7) obj. -885.301 iterations 3
Cbc0038I Pass  40: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I Pass  41: suminf.    1.96659 (7) obj. -885.301 iterations 0
Cbc0038I Pass  42: suminf.    2.45932 (7) obj. -885.301 iterations 3
Cbc0038I Pass  43: suminf.    2.45932 (7) obj. -885.301 iterations 0
Cbc0038I Pass  44: suminf.    2.21751 (7) obj. -885.301 iterations 2
Cbc0038I Pass  45: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I Pass  46: suminf.    1.96659 (7) obj. -885.301 iterations 0
Cbc0038I Pass  47: suminf.    2.45932 (7) obj. -885.301 iterations 3
Cbc0038I Pass  48: suminf.    2.45932 (7) obj. -885.301 iterations 0
Cbc0038I Pass  49: suminf.    2.21751 (7) obj. -885.301 iterations 2
Cbc0038I Pass  50: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I Pass  51: suminf.    1.96659 (7) obj. -885.301 iterations 0
Cbc0038I Pass  52: suminf.    2.45932 (7) obj. -885.301 iterations 3
Cbc0038I Pass  53: suminf.    2.45932 (7) obj. -885.301 iterations 0
Cbc0038I Pass  54: suminf.    2.21751 (7) obj. -885.301 iterations 2
Cbc0038I Pass  55: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I Pass  56: suminf.    1.96659 (7) obj. -885.301 iterations 0
Cbc0038I Pass  57: suminf.    2.45932 (7) obj. -885.301 iterations 3
Cbc0038I Pass  58: suminf.    2.45932 (7) obj. -885.301 iterations 0
Cbc0038I Pass  59: suminf.    2.21751 (7) obj. -885.301 iterations 2
Cbc0038I Pass  60: suminf.    1.96659 (7) obj. -885.301 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -469.332 - took 0.03 seconds
Cbc0012I Integer solution of -469.3317 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 103 rows 107 columns, reduced to 6 rows 8 columns
Cbc0031I 10 added rows had average density of 33.1
Cbc0013I At root node, 10 cuts changed objective from -909.16346 to -552.20181 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 65 row cuts average 11.9 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 59.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 58.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 61.3 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -469.3317 best solution, best possible -552.20181 (0.31 seconds)
Cbc0012I Integer solution of -469.3327 found by rounding after 278 iterations and 3 nodes (0.52 seconds)
Cbc0010I After 28 nodes, 19 on tree, -469.3327 best solution, best possible -552.20181 (1.01 seconds)
Cbc0038I Full problem 103 rows 107 columns, reduced to 7 rows 8 columns
Cbc0038I Full problem 113 rows 107 columns, reduced to 55 rows 61 columns
Cbc0044I Reduced cost fixing - 55 rows, 61 columns - restarting search
Cbc0012I Integer solution of -339.9997 found by Previous solution after 0 iterations and 0 nodes (1.25 seconds)
Cbc0012I Integer solution of -348.6637 found by DiveCoefficient after 0 iterations and 0 nodes (1.25 seconds)
Cbc0038I Full problem 55 rows 61 columns, reduced to 10 rows 10 columns
Cbc0012I Integer solution of -469.3297 found by DiveCoefficient after 347 iterations and 0 nodes (2.19 seconds)
Cbc0031I 8 added rows had average density of 40.375
Cbc0013I At root node, 8 cuts changed objective from -666.84814 to -533.99698 in 63 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 18.8 elements, 4 column cuts (4 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 139 row cuts average 56.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 10 row cuts average 39.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 49.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 52.4 elements, 0 column cuts (0 active)  in 0.483 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 8 row cuts average 38.1 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -469.3297 best solution, best possible -533.99698 (2.19 seconds)
Cbc0012I Integer solution of -469.3307 found by DiveCoefficient after 376 iterations and 4 nodes (2.25 seconds)
Cbc0016I Integer solution of -469.3317 found by strong branching after 407 iterations and 7 nodes (2.26 seconds)
Cbc0038I Full problem 55 rows 61 columns, reduced to 9 rows 13 columns
Cbc0012I Integer solution of -469.3327 found by RINS after 653 iterations and 41 nodes (2.58 seconds)
Cbc0010I After 92 nodes, 9 on tree, -469.3327 best solution, best possible -533.99698 (3.20 seconds)
Cbc0038I Full problem 55 rows 61 columns, reduced to 5 rows 7 columns
Cbc0010I After 181 nodes, 2 on tree, -469.3327 best solution, best possible -533.99698 (4.20 seconds)
Cbc0001I Search completed - best objective -469.3327000000008, took 1695 iterations and 194 nodes (4.37 seconds)
Cbc0032I Strong branching done 984 times (3084 iterations), fathomed 41 nodes and fixed 22 variables
Cbc0035I Maximum depth 13, 260 variables fixed on reduced cost
Cbc0038I Probing was tried 257 times and created 349 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I Gomory was tried 225 times and created 156 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I Knapsack was tried 225 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Cbc0038I Clique was tried 63 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I OddWheel was tried 63 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Cbc0038I MixedIntegerRounding2 was tried 225 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Cbc0038I FlowCover was tried 225 times and created 93 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I TwoMirCuts was tried 225 times and created 59 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I ZeroHalf was tried 225 times and created 231 cuts of which 0 were active after adding rounds of cuts (1.450 seconds)
Cbc0038I Stored from first was tried 225 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -469.3327000000318, took 2219 iterations and 244 nodes (4.37 seconds)
Cbc0032I Strong branching done 402 times (1592 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 17, 90 variables fixed on reduced cost
Total time (CPU seconds):       2.59   (Wallclock seconds):       4.38

