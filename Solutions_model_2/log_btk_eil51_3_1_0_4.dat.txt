Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 39 (-14) columns and 210 (-93) elements
Clp1000I sum of infeasibilities 8.1534e-06 - average 1.18165e-07, 21 fixed columns
Coin0506I Presolve 29 (-40) rows, 17 (-22) columns and 86 (-124) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Coin0511I After Postsolve, objective 140.76289, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.40293219 - largest nonzero change 0 ( 0%) - largest zero change 2.5331995e-05
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Coin0511I After Postsolve, objective 140.76289, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 140.762886 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 69 rows, 39 columns (38 integer (38 of which binary)) and 210 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.64424
Cbc0038I Pass   1: suminf.    1.06597 (3) obj. -85.5098 iterations 14
Cbc0038I Pass   2: suminf.    1.06597 (3) obj. -85.5098 iterations 0
Cbc0038I Solution found of -50.5755
Cbc0038I Relaxing continuous gives -50.5755
Cbc0038I Rounding solution of -51.0369 is better than previous of -50.5755

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 39 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -51.0369 to -114.948 (0.02 seconds)
Cbc0038I Round again with cutoff of -117.53
Cbc0038I Pass   3: suminf.    1.63650 (10) obj. -117.53 iterations 5
Cbc0038I Pass   4: suminf.    0.47616 (4) obj. -117.53 iterations 10
Cbc0038I Pass   5: suminf.    0.12720 (3) obj. -117.53 iterations 6
Cbc0038I Pass   6: suminf.    0.98964 (9) obj. -117.53 iterations 15
Cbc0038I Pass   7: suminf.    3.12291 (13) obj. -117.53 iterations 12
Cbc0038I Pass   8: suminf.    2.63844 (9) obj. -117.53 iterations 2
Cbc0038I Pass   9: suminf.    1.96790 (9) obj. -117.53 iterations 11
Cbc0038I Pass  10: suminf.    1.95053 (8) obj. -117.53 iterations 1
Cbc0038I Pass  11: suminf.    2.21330 (12) obj. -117.53 iterations 5
Cbc0038I Pass  12: suminf.    1.82584 (11) obj. -117.53 iterations 2
Cbc0038I Pass  13: suminf.    1.42426 (8) obj. -117.53 iterations 14
Cbc0038I Pass  14: suminf.    0.93786 (8) obj. -117.53 iterations 5
Cbc0038I Pass  15: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  16: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  17: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  18: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I Pass  19: suminf.    3.16907 (10) obj. -117.53 iterations 1
Cbc0038I Pass  20: suminf.    3.07923 (8) obj. -117.53 iterations 6
Cbc0038I Pass  21: suminf.    0.93786 (8) obj. -117.53 iterations 7
Cbc0038I Pass  22: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  23: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  24: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  25: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I Pass  26: suminf.    3.16907 (10) obj. -117.53 iterations 1
Cbc0038I Pass  27: suminf.    3.07923 (8) obj. -117.53 iterations 6
Cbc0038I Pass  28: suminf.    0.93786 (8) obj. -117.53 iterations 7
Cbc0038I Pass  29: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  30: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  31: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  32: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 39 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -114.948 - took 0.02 seconds
Cbc0012I Integer solution of -114.94825 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 69 rows 39 columns, reduced to 29 rows 17 columns
Cbc0031I 5 added rows had average density of 25
Cbc0013I At root node, 5 cuts changed objective from -140.76289 to -125.37825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 570 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 323 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -114.94825, took 1174 iterations and 8 nodes (0.14 seconds)
Cbc0032I Strong branching done 96 times (542 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-39) rows, 72 (-30) columns and 838 (-740) elements
Clp1000I sum of infeasibilities 1.05092e-07 - average 1.6168e-09, 38 fixed columns
Coin0506I Presolve 28 (-37) rows, 34 (-38) columns and 120 (-718) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 1.1185665 - largest nonzero change 1.7963867e-05 ( 0.00089819337%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 107.14121
Clp0000I Optimal - objective value 107.14121
Coin0511I After Postsolve, objective 107.14121, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6518074 - largest nonzero change 2.3530591e-05 ( 0.0023530591%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 172.70942
Clp0000I Optimal - objective value 172.70942
Clp0000I Optimal - objective value 172.70942
Coin0511I After Postsolve, objective 172.70942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 172.709422 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 65 rows, 72 columns (72 integer (72 of which binary)) and 840 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.385%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.69001
Cbc0038I Pass   1: suminf.    3.63752 (22) obj. -116.237 iterations 16
Cbc0038I Pass   2: suminf.    3.63752 (22) obj. -116.237 iterations 1
Cbc0038I Solution found of -80.549
Cbc0038I Rounding solution of -97.2199 is better than previous of -80.549

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -97.2199 to -107.271 (0.02 seconds)
Cbc0038I Round again with cutoff of -113.195
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.63752 (22) obj. -116.237 iterations 0
Cbc0038I Pass   4: suminf.    3.63752 (22) obj. -116.237 iterations 1
Cbc0038I Pass   5: suminf.    0.68167 (7) obj. -113.195 iterations 32
Cbc0038I Pass   6: suminf.    0.68167 (7) obj. -113.195 iterations 0
Cbc0038I Pass   7: suminf.    1.16001 (3) obj. -113.195 iterations 9
Cbc0038I Pass   8: suminf.    0.31860 (2) obj. -113.195 iterations 4
Cbc0038I Pass   9: suminf.    0.31860 (2) obj. -113.195 iterations 0
Cbc0038I Pass  10: suminf.    2.42677 (9) obj. -113.195 iterations 19
Cbc0038I Pass  11: suminf.    2.42677 (9) obj. -113.195 iterations 5
Cbc0038I Pass  12: suminf.    0.91425 (5) obj. -113.195 iterations 13
Cbc0038I Pass  13: suminf.    1.56774 (6) obj. -113.195 iterations 6
Cbc0038I Pass  14: suminf.    2.79825 (12) obj. -113.195 iterations 14
Cbc0038I Pass  15: suminf.    2.24011 (9) obj. -113.195 iterations 6
Cbc0038I Pass  16: suminf.    1.85202 (9) obj. -113.195 iterations 3
Cbc0038I Pass  17: suminf.    0.31896 (3) obj. -113.195 iterations 8
Cbc0038I Pass  18: suminf.    0.26667 (2) obj. -115.502 iterations 2
Cbc0038I Pass  19: suminf.    0.03456 (3) obj. -113.195 iterations 7
Cbc0038I Pass  20: suminf.    1.16448 (3) obj. -113.195 iterations 5
Cbc0038I Pass  21: suminf.    0.37238 (2) obj. -113.195 iterations 3
Cbc0038I Pass  22: suminf.    0.37238 (2) obj. -113.195 iterations 0
Cbc0038I Pass  23: suminf.    3.93337 (17) obj. -113.195 iterations 32
Cbc0038I Pass  24: suminf.    2.36762 (12) obj. -116.949 iterations 8
Cbc0038I Pass  25: suminf.    0.77173 (3) obj. -113.195 iterations 18
Cbc0038I Pass  26: suminf.    0.32702 (3) obj. -113.195 iterations 4
Cbc0038I Pass  27: suminf.    1.10578 (4) obj. -113.195 iterations 8
Cbc0038I Pass  28: suminf.    2.14463 (11) obj. -113.195 iterations 11
Cbc0038I Pass  29: suminf.    1.32988 (10) obj. -113.195 iterations 7
Cbc0038I Pass  30: suminf.    1.09702 (6) obj. -113.195 iterations 8
Cbc0038I Pass  31: suminf.    0.69393 (6) obj. -113.195 iterations 5
Cbc0038I Pass  32: suminf.    1.09779 (6) obj. -113.195 iterations 5
Cbc0038I Rounding solution of -113.869 is better than previous of -107.271

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -113.869 to -114.948 (0.03 seconds)
Cbc0038I Round again with cutoff of -125.261
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.40305 (28) obj. -125.261 iterations 5
Cbc0038I Pass  33: suminf.    4.16265 (24) obj. -125.261 iterations 2
Cbc0038I Pass  34: suminf.    1.51276 (11) obj. -125.261 iterations 32
Cbc0038I Pass  35: suminf.    1.51276 (11) obj. -125.261 iterations 0
Cbc0038I Pass  36: suminf.    1.00447 (4) obj. -125.261 iterations 23
Cbc0038I Pass  37: suminf.    0.99020 (4) obj. -125.261 iterations 5
Cbc0038I Pass  38: suminf.    1.25948 (5) obj. -125.261 iterations 5
Cbc0038I Pass  39: suminf.    2.30185 (11) obj. -125.261 iterations 17
Cbc0038I Pass  40: suminf.    2.14063 (10) obj. -125.261 iterations 8
Cbc0038I Pass  41: suminf.    1.81890 (7) obj. -125.261 iterations 13
Cbc0038I Pass  42: suminf.    1.96202 (6) obj. -125.261 iterations 8
Cbc0038I Pass  43: suminf.    1.96202 (6) obj. -125.261 iterations 0
Cbc0038I Pass  44: suminf.    1.66637 (6) obj. -125.261 iterations 2
Cbc0038I Pass  45: suminf.    1.50454 (6) obj. -125.261 iterations 4
Cbc0038I Pass  46: suminf.    1.50454 (6) obj. -125.261 iterations 3
Cbc0038I Pass  47: suminf.    1.96202 (6) obj. -125.261 iterations 6
Cbc0038I Pass  48: suminf.    1.96202 (6) obj. -125.261 iterations 1
Cbc0038I Pass  49: suminf.    1.66637 (6) obj. -125.261 iterations 2
Cbc0038I Pass  50: suminf.    1.50454 (6) obj. -125.261 iterations 4
Cbc0038I Pass  51: suminf.    1.50454 (6) obj. -125.261 iterations 3
Cbc0038I Pass  52: suminf.    1.96202 (6) obj. -125.261 iterations 6
Cbc0038I Pass  53: suminf.    1.96202 (6) obj. -125.261 iterations 1
Cbc0038I Pass  54: suminf.    1.66637 (6) obj. -125.261 iterations 2
Cbc0038I Pass  55: suminf.    1.50454 (6) obj. -125.261 iterations 4
Cbc0038I Pass  56: suminf.    1.50454 (6) obj. -125.261 iterations 3
Cbc0038I Pass  57: suminf.    1.96202 (6) obj. -125.261 iterations 7
Cbc0038I Pass  58: suminf.    1.96202 (6) obj. -125.261 iterations 2
Cbc0038I Pass  59: suminf.    1.66637 (6) obj. -125.261 iterations 3
Cbc0038I Pass  60: suminf.    1.50454 (6) obj. -125.261 iterations 5
Cbc0038I Pass  61: suminf.    1.50454 (6) obj. -125.261 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -114.948 - took 0.03 seconds
Cbc0012I Integer solution of -114.94825 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 65 rows 72 columns, reduced to 8 rows 9 columns
Cbc0031I 21 added rows had average density of 12.857143
Cbc0013I At root node, 21 cuts changed objective from -166.51357 to -118.55913 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 201 row cuts average 2.2 elements, 22 column cuts (22 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 71 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0001I Search completed - best objective -114.94825, took 233 iterations and 2 nodes (0.30 seconds)
Cbc0032I Strong branching done 22 times (195 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.30

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 39 (-14) columns and 210 (-93) elements
Clp1000I sum of infeasibilities 8.1534e-06 - average 1.18165e-07, 21 fixed columns
Coin0506I Presolve 29 (-40) rows, 17 (-22) columns and 86 (-124) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Coin0511I After Postsolve, objective 140.76289, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.40293219 - largest nonzero change 0 ( 0%) - largest zero change 2.5331995e-05
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Coin0511I After Postsolve, objective 140.76289, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 140.762886 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 69 rows, 39 columns (38 integer (38 of which binary)) and 210 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.64424
Cbc0038I Pass   1: suminf.    1.06597 (3) obj. -85.5098 iterations 14
Cbc0038I Pass   2: suminf.    1.06597 (3) obj. -85.5098 iterations 0
Cbc0038I Solution found of -50.5755
Cbc0038I Relaxing continuous gives -50.5755
Cbc0038I Rounding solution of -51.0369 is better than previous of -50.5755

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 39 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -51.0369 to -114.948 (0.02 seconds)
Cbc0038I Round again with cutoff of -117.53
Cbc0038I Pass   3: suminf.    1.63650 (10) obj. -117.53 iterations 5
Cbc0038I Pass   4: suminf.    0.47616 (4) obj. -117.53 iterations 10
Cbc0038I Pass   5: suminf.    0.12720 (3) obj. -117.53 iterations 6
Cbc0038I Pass   6: suminf.    0.98964 (9) obj. -117.53 iterations 15
Cbc0038I Pass   7: suminf.    3.12291 (13) obj. -117.53 iterations 12
Cbc0038I Pass   8: suminf.    2.63844 (9) obj. -117.53 iterations 2
Cbc0038I Pass   9: suminf.    1.96790 (9) obj. -117.53 iterations 11
Cbc0038I Pass  10: suminf.    1.95053 (8) obj. -117.53 iterations 1
Cbc0038I Pass  11: suminf.    2.21330 (12) obj. -117.53 iterations 5
Cbc0038I Pass  12: suminf.    1.82584 (11) obj. -117.53 iterations 2
Cbc0038I Pass  13: suminf.    1.42426 (8) obj. -117.53 iterations 14
Cbc0038I Pass  14: suminf.    0.93786 (8) obj. -117.53 iterations 5
Cbc0038I Pass  15: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  16: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  17: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  18: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I Pass  19: suminf.    3.16907 (10) obj. -117.53 iterations 1
Cbc0038I Pass  20: suminf.    3.07923 (8) obj. -117.53 iterations 6
Cbc0038I Pass  21: suminf.    0.93786 (8) obj. -117.53 iterations 7
Cbc0038I Pass  22: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  23: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  24: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  25: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I Pass  26: suminf.    3.16907 (10) obj. -117.53 iterations 1
Cbc0038I Pass  27: suminf.    3.07923 (8) obj. -117.53 iterations 6
Cbc0038I Pass  28: suminf.    0.93786 (8) obj. -117.53 iterations 7
Cbc0038I Pass  29: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  30: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  31: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  32: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 39 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -114.948 - took 0.02 seconds
Cbc0012I Integer solution of -114.94825 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 69 rows 39 columns, reduced to 29 rows 17 columns
Cbc0031I 5 added rows had average density of 25
Cbc0013I At root node, 5 cuts changed objective from -140.76289 to -125.37825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 570 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 323 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -114.94825, took 1174 iterations and 8 nodes (0.15 seconds)
Cbc0032I Strong branching done 96 times (542 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-40) rows, 72 (-31) columns and 838 (-741) elements
Clp1000I sum of infeasibilities 1.05092e-07 - average 1.6168e-09, 38 fixed columns
Coin0506I Presolve 28 (-37) rows, 34 (-38) columns and 120 (-718) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 1.1185665 - largest nonzero change 1.7963867e-05 ( 0.00089819337%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 107.14121
Clp0000I Optimal - objective value 107.14121
Coin0511I After Postsolve, objective 107.14121, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6518074 - largest nonzero change 2.3530591e-05 ( 0.0023530591%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 172.70942
Clp0000I Optimal - objective value 172.70942
Clp0000I Optimal - objective value 172.70942
Coin0511I After Postsolve, objective 172.70942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 172.709422 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 65 rows, 72 columns (72 integer (72 of which binary)) and 840 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.385%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.69001
Cbc0038I Pass   1: suminf.    3.63752 (22) obj. -116.237 iterations 16
Cbc0038I Pass   2: suminf.    3.63752 (22) obj. -116.237 iterations 1
Cbc0038I Solution found of -80.549
Cbc0038I Rounding solution of -97.2199 is better than previous of -80.549

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -97.2199 to -107.271 (0.02 seconds)
Cbc0038I Round again with cutoff of -113.195
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.63752 (22) obj. -116.237 iterations 0
Cbc0038I Pass   4: suminf.    3.63752 (22) obj. -116.237 iterations 1
Cbc0038I Pass   5: suminf.    0.68167 (7) obj. -113.195 iterations 32
Cbc0038I Pass   6: suminf.    0.68167 (7) obj. -113.195 iterations 0
Cbc0038I Pass   7: suminf.    1.16001 (3) obj. -113.195 iterations 9
Cbc0038I Pass   8: suminf.    0.31860 (2) obj. -113.195 iterations 4
Cbc0038I Pass   9: suminf.    0.31860 (2) obj. -113.195 iterations 0
Cbc0038I Pass  10: suminf.    2.42677 (9) obj. -113.195 iterations 19
Cbc0038I Pass  11: suminf.    2.42677 (9) obj. -113.195 iterations 5
Cbc0038I Pass  12: suminf.    0.91425 (5) obj. -113.195 iterations 13
Cbc0038I Pass  13: suminf.    1.56774 (6) obj. -113.195 iterations 6
Cbc0038I Pass  14: suminf.    2.79825 (12) obj. -113.195 iterations 14
Cbc0038I Pass  15: suminf.    2.24011 (9) obj. -113.195 iterations 6
Cbc0038I Pass  16: suminf.    1.85202 (9) obj. -113.195 iterations 3
Cbc0038I Pass  17: suminf.    0.31896 (3) obj. -113.195 iterations 8
Cbc0038I Pass  18: suminf.    0.26667 (2) obj. -115.502 iterations 2
Cbc0038I Pass  19: suminf.    0.03456 (3) obj. -113.195 iterations 7
Cbc0038I Pass  20: suminf.    1.16448 (3) obj. -113.195 iterations 5
Cbc0038I Pass  21: suminf.    0.37238 (2) obj. -113.195 iterations 3
Cbc0038I Pass  22: suminf.    0.37238 (2) obj. -113.195 iterations 0
Cbc0038I Pass  23: suminf.    3.93337 (17) obj. -113.195 iterations 32
Cbc0038I Pass  24: suminf.    2.36762 (12) obj. -116.949 iterations 8
Cbc0038I Pass  25: suminf.    0.77173 (3) obj. -113.195 iterations 18
Cbc0038I Pass  26: suminf.    0.32702 (3) obj. -113.195 iterations 4
Cbc0038I Pass  27: suminf.    1.10578 (4) obj. -113.195 iterations 8
Cbc0038I Pass  28: suminf.    2.14463 (11) obj. -113.195 iterations 11
Cbc0038I Pass  29: suminf.    1.32988 (10) obj. -113.195 iterations 7
Cbc0038I Pass  30: suminf.    1.09702 (6) obj. -113.195 iterations 8
Cbc0038I Pass  31: suminf.    0.69393 (6) obj. -113.195 iterations 5
Cbc0038I Pass  32: suminf.    1.09779 (6) obj. -113.195 iterations 5
Cbc0038I Rounding solution of -113.869 is better than previous of -107.271

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -113.869 to -114.948 (0.03 seconds)
Cbc0038I Round again with cutoff of -125.261
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.40305 (28) obj. -125.261 iterations 5
Cbc0038I Pass  33: suminf.    4.16265 (24) obj. -125.261 iterations 2
Cbc0038I Pass  34: suminf.    1.51276 (11) obj. -125.261 iterations 32
Cbc0038I Pass  35: suminf.    1.51276 (11) obj. -125.261 iterations 0
Cbc0038I Pass  36: suminf.    1.00447 (4) obj. -125.261 iterations 23
Cbc0038I Pass  37: suminf.    0.99020 (4) obj. -125.261 iterations 5
Cbc0038I Pass  38: suminf.    1.25948 (5) obj. -125.261 iterations 5
Cbc0038I Pass  39: suminf.    2.30185 (11) obj. -125.261 iterations 17
Cbc0038I Pass  40: suminf.    2.14063 (10) obj. -125.261 iterations 8
Cbc0038I Pass  41: suminf.    1.81890 (7) obj. -125.261 iterations 13
Cbc0038I Pass  42: suminf.    1.96202 (6) obj. -125.261 iterations 8
Cbc0038I Pass  43: suminf.    1.96202 (6) obj. -125.261 iterations 0
Cbc0038I Pass  44: suminf.    1.66637 (6) obj. -125.261 iterations 2
Cbc0038I Pass  45: suminf.    1.50454 (6) obj. -125.261 iterations 4
Cbc0038I Pass  46: suminf.    1.50454 (6) obj. -125.261 iterations 3
Cbc0038I Pass  47: suminf.    1.96202 (6) obj. -125.261 iterations 6
Cbc0038I Pass  48: suminf.    1.96202 (6) obj. -125.261 iterations 1
Cbc0038I Pass  49: suminf.    1.66637 (6) obj. -125.261 iterations 2
Cbc0038I Pass  50: suminf.    1.50454 (6) obj. -125.261 iterations 4
Cbc0038I Pass  51: suminf.    1.50454 (6) obj. -125.261 iterations 3
Cbc0038I Pass  52: suminf.    1.96202 (6) obj. -125.261 iterations 6
Cbc0038I Pass  53: suminf.    1.96202 (6) obj. -125.261 iterations 1
Cbc0038I Pass  54: suminf.    1.66637 (6) obj. -125.261 iterations 2
Cbc0038I Pass  55: suminf.    1.50454 (6) obj. -125.261 iterations 4
Cbc0038I Pass  56: suminf.    1.50454 (6) obj. -125.261 iterations 3
Cbc0038I Pass  57: suminf.    1.96202 (6) obj. -125.261 iterations 7
Cbc0038I Pass  58: suminf.    1.96202 (6) obj. -125.261 iterations 2
Cbc0038I Pass  59: suminf.    1.66637 (6) obj. -125.261 iterations 3
Cbc0038I Pass  60: suminf.    1.50454 (6) obj. -125.261 iterations 5
Cbc0038I Pass  61: suminf.    1.50454 (6) obj. -125.261 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 72 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -114.948 - took 0.03 seconds
Cbc0012I Integer solution of -114.94825 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 65 rows 72 columns, reduced to 8 rows 9 columns
Cbc0031I 21 added rows had average density of 12.857143
Cbc0013I At root node, 21 cuts changed objective from -166.51357 to -118.55913 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 201 row cuts average 2.2 elements, 22 column cuts (22 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 71 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0001I Search completed - best objective -114.94825, took 233 iterations and 2 nodes (0.33 seconds)
Cbc0032I Strong branching done 22 times (195 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.33

