Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-66) rows, 77 (-26) columns and 425 (-178) elements
Clp1000I sum of infeasibilities 2.23274e-10 - average 1.60629e-12, 73 fixed columns
Coin0506I Presolve 5 (-134) rows, 4 (-73) columns and 11 (-414) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Coin0511I After Postsolve, objective 7843.969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Coin0511I After Postsolve, objective 7843.969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7843.968976 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 77 columns (76 integer (76 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.282%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.364865
Cbc0038I Pass   1: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Solution found of -4203.91
Cbc0038I Relaxing continuous gives -4214.02
Cbc0038I Rounding solution of -4253.59 is better than previous of -4214.02

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 6 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -4253.59 to -4262.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -4620.82
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Pass   3: suminf.    0.29450 (3) obj. -4620.82 iterations 4
Cbc0038I Pass   4: suminf.    1.08245 (6) obj. -4620.82 iterations 19
Cbc0038I Pass   5: suminf.    0.69525 (4) obj. -4620.82 iterations 10
Cbc0038I Pass   6: suminf.    0.68919 (3) obj. -5200.05 iterations 5
Cbc0038I Pass   7: suminf.    0.26987 (3) obj. -4620.82 iterations 1
Cbc0038I Pass   8: suminf.    0.90824 (6) obj. -4620.82 iterations 16
Cbc0038I Pass   9: suminf.    0.46054 (4) obj. -4620.82 iterations 13
Cbc0038I Pass  10: suminf.    0.81081 (3) obj. -5370.09 iterations 2
Cbc0038I Pass  11: suminf.    0.26840 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  12: suminf.    0.53938 (4) obj. -4620.82 iterations 18
Cbc0038I Pass  13: suminf.    0.53938 (4) obj. -4620.82 iterations 11
Cbc0038I Pass  14: suminf.    0.81081 (3) obj. -5361.76 iterations 4
Cbc0038I Pass  15: suminf.    0.27443 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  16: suminf.    1.20347 (6) obj. -4620.82 iterations 12
Cbc0038I Pass  17: suminf.    0.31239 (4) obj. -4620.82 iterations 11
Cbc0038I Pass  18: suminf.    0.64865 (3) obj. -5117.95 iterations 4
Cbc0038I Pass  19: suminf.    0.28876 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  20: suminf.    0.60133 (6) obj. -4620.82 iterations 5
Cbc0038I Pass  21: suminf.    0.32510 (4) obj. -4620.82 iterations 3
Cbc0038I Pass  22: suminf.    0.93243 (3) obj. -5509.96 iterations 3
Cbc0038I Pass  23: suminf.    0.28876 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  24: suminf.    0.66793 (6) obj. -4620.82 iterations 20
Cbc0038I Pass  25: suminf.    0.54277 (5) obj. -4620.82 iterations 5
Cbc0038I Pass  26: suminf.    1.17568 (3) obj. -5851.62 iterations 4
Cbc0038I Pass  27: suminf.    0.28467 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  28: suminf.    1.79258 (8) obj. -4620.82 iterations 10
Cbc0038I Pass  29: suminf.    0.28724 (3) obj. -4620.82 iterations 6
Cbc0038I Pass  30: suminf.    0.97297 (3) obj. -5568.07 iterations 1
Cbc0038I Pass  31: suminf.    0.51248 (3) obj. -4620.82 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 45 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -4262.7 to -4293.12 (0.03 seconds)
Cbc0038I Round again with cutoff of -5265.45
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Pass  32: suminf.    0.76116 (3) obj. -5265.45 iterations 4
Cbc0038I Pass  33: suminf.    1.22983 (4) obj. -5265.45 iterations 19
Cbc0038I Pass  34: suminf.    0.74261 (3) obj. -5265.45 iterations 13
Cbc0038I Pass  35: suminf.    1.25676 (3) obj. -5975.68 iterations 1
Cbc0038I Pass  36: suminf.    0.94460 (4) obj. -5265.45 iterations 11
Cbc0038I Pass  37: suminf.    0.94460 (4) obj. -5265.45 iterations 5
Cbc0038I Pass  38: suminf.    1.37838 (3) obj. -6456.43 iterations 3
Cbc0038I Pass  39: suminf.    1.37838 (3) obj. -6456.43 iterations 1
Cbc0038I Pass  40: suminf.    0.75944 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  41: suminf.    1.51554 (5) obj. -5265.45 iterations 14
Cbc0038I Pass  42: suminf.    1.51554 (5) obj. -5265.45 iterations 4
Cbc0038I Pass  43: suminf.    1.33784 (3) obj. -6061.58 iterations 3
Cbc0038I Pass  44: suminf.    0.76150 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  45: suminf.    1.29542 (5) obj. -5265.45 iterations 6
Cbc0038I Pass  46: suminf.    1.29542 (5) obj. -5265.45 iterations 0
Cbc0038I Pass  47: suminf.    1.25676 (3) obj. -6613.21 iterations 6
Cbc0038I Pass  48: suminf.    0.76757 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  49: suminf.    1.04053 (5) obj. -5265.45 iterations 10
Cbc0038I Pass  50: suminf.    0.76354 (3) obj. -5265.45 iterations 4
Cbc0038I Pass  51: suminf.    0.77027 (3) obj. -5274.75 iterations 1
Cbc0038I Pass  52: suminf.    1.38891 (6) obj. -5265.45 iterations 12
Cbc0038I Pass  53: suminf.    0.76221 (3) obj. -5265.45 iterations 10
Cbc0038I Pass  54: suminf.    0.89189 (3) obj. -5444.6 iterations 1
Cbc0038I Pass  55: suminf.    1.81790 (7) obj. -5265.45 iterations 12
Cbc0038I Pass  56: suminf.    0.75349 (3) obj. -5265.45 iterations 6
Cbc0038I Pass  57: suminf.    1.01351 (3) obj. -5624.63 iterations 1
Cbc0038I Pass  58: suminf.    1.42313 (6) obj. -5265.45 iterations 12
Cbc0038I Pass  59: suminf.    0.74828 (3) obj. -5265.45 iterations 8
Cbc0038I Pass  60: suminf.    0.89189 (3) obj. -5463.83 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 35 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -4293.12 - took 0.03 seconds
Cbc0012I Integer solution of -4293.1165 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 139 rows 77 columns, reduced to 14 rows 9 columns
Cbc0031I 18 added rows had average density of 12.722222
Cbc0013I At root node, 18 cuts changed objective from -7843.969 to -4312.4449 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 377 row cuts average 3.8 elements, 9 column cuts (9 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is -100
Cbc0012I Integer solution of -4294.187 found by rounding after 722 iterations and 22 nodes (0.42 seconds)
Cbc0016I Integer solution of -4294.5885 found by strong branching after 771 iterations and 28 nodes (0.43 seconds)
Cbc0012I Integer solution of -4296.4069 found by DiveCoefficient after 879 iterations and 37 nodes (0.44 seconds)
Cbc0016I Integer solution of -4297.6186 found by strong branching after 900 iterations and 37 nodes (0.44 seconds)
Cbc0001I Search completed - best objective -4297.61861, took 1027 iterations and 40 nodes (0.45 seconds)
Cbc0032I Strong branching done 324 times (2622 iterations), fathomed 7 nodes and fixed 6 variables
Cbc0035I Maximum depth 12, 128 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-88) rows, 129 (-73) columns and 2341 (-3310) elements
Clp1000I sum of infeasibilities 7.7484e-08 - average 6.73774e-10, 125 fixed columns
Coin0506I Presolve 3 (-112) rows, 3 (-126) columns and 7 (-2334) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 7791.0771
Clp0000I Optimal - objective value 7791.0771
Coin0511I After Postsolve, objective 7791.0771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9098856 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 7871.1269
Clp0000I Optimal - objective value 7871.1269
Clp0000I Optimal - objective value 7871.1269
Coin0511I After Postsolve, objective 7871.1269, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7871.126869 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 129 columns (129 integer (129 of which binary)) and 2354 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.609%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.40159
Cbc0038I Pass   1: suminf.    0.36486 (3) obj. -7840.08 iterations 19
Cbc0038I Solution found of -4200.02
Cbc0038I Rounding solution of -4251.38 is better than previous of -4200.02

Cbc0038I Before mini branch and bound, 109 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 129 columns, reduced to 17 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -4251.38 to -4262.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -4621.22
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.36486 (3) obj. -7840.08 iterations 0
Cbc0038I Pass   3: suminf.    0.30492 (3) obj. -4621.22 iterations 9
Cbc0038I Pass   4: suminf.    2.21914 (24) obj. -4621.22 iterations 39
Cbc0038I Pass   5: suminf.    0.82177 (10) obj. -4621.22 iterations 22
Cbc0038I Pass   6: suminf.    0.97297 (3) obj. -5588.62 iterations 8
Cbc0038I Pass   7: suminf.    0.27265 (3) obj. -4621.22 iterations 5
Cbc0038I Pass   8: suminf.    1.35175 (20) obj. -4621.22 iterations 48
Cbc0038I Pass   9: suminf.    1.22508 (18) obj. -4621.22 iterations 10
Cbc0038I Pass  10: suminf.    0.97297 (3) obj. -5576.22 iterations 17
Cbc0038I Pass  11: suminf.    0.28162 (3) obj. -4621.22 iterations 6
Cbc0038I Pass  12: suminf.    2.77706 (19) obj. -4621.22 iterations 21
Cbc0038I Pass  13: suminf.    1.38206 (11) obj. -4621.22 iterations 18
Cbc0038I Pass  14: suminf.    0.56757 (3) obj. -5026.36 iterations 9
Cbc0038I Pass  15: suminf.    0.27428 (3) obj. -4621.22 iterations 5
Cbc0038I Pass  16: suminf.    1.18388 (8) obj. -4621.22 iterations 15
Cbc0038I Pass  17: suminf.    1.18388 (8) obj. -4621.22 iterations 4
Cbc0038I Pass  18: suminf.    0.64865 (3) obj. -5141.41 iterations 5
Cbc0038I Pass  19: suminf.    0.27207 (3) obj. -4621.22 iterations 5
Cbc0038I Pass  20: suminf.    1.56680 (14) obj. -4621.22 iterations 20
Cbc0038I Pass  21: suminf.    1.56680 (14) obj. -4621.22 iterations 1
Cbc0038I Pass  22: suminf.    1.01351 (3) obj. -5625.32 iterations 11
Cbc0038I Pass  23: suminf.    0.28662 (3) obj. -4621.22 iterations 6
Cbc0038I Pass  24: suminf.    1.16946 (13) obj. -4621.22 iterations 23
Cbc0038I Pass  25: suminf.    1.05265 (12) obj. -4621.22 iterations 3
Cbc0038I Pass  26: suminf.    0.89189 (3) obj. -5462.94 iterations 9
Cbc0038I Pass  27: suminf.    0.28255 (3) obj. -4621.22 iterations 6
Cbc0038I Pass  28: suminf.    0.81127 (10) obj. -4621.22 iterations 13
Cbc0038I Pass  29: suminf.    0.66658 (9) obj. -4621.22 iterations 4
Cbc0038I Pass  30: suminf.    1.01351 (3) obj. -5619.58 iterations 6
Cbc0038I Pass  31: suminf.    0.29078 (3) obj. -4621.22 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 129 columns, reduced to 45 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -4262.7 to -4297.62 (0.07 seconds)
Cbc0038I Round again with cutoff of -5266.57
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36486 (3) obj. -7840.08 iterations 0
Cbc0038I Pass  32: suminf.    0.77211 (3) obj. -5266.57 iterations 9
Cbc0038I Pass  33: suminf.    3.31238 (25) obj. -5266.57 iterations 35
Cbc0038I Pass  34: suminf.    2.41367 (23) obj. -5266.57 iterations 7
Cbc0038I Pass  35: suminf.    2.09424 (19) obj. -5266.57 iterations 2
Cbc0038I Pass  36: suminf.    1.22442 (12) obj. -5637.37 iterations 8
Cbc0038I Pass  37: suminf.    0.95599 (12) obj. -5266.57 iterations 6
Cbc0038I Pass  38: suminf.    1.01351 (3) obj. -5628.58 iterations 10
Cbc0038I Pass  39: suminf.    0.75144 (3) obj. -5266.57 iterations 6
Cbc0038I Pass  40: suminf.    1.76524 (13) obj. -5266.57 iterations 28
Cbc0038I Pass  41: suminf.    1.36536 (11) obj. -5266.57 iterations 16
Cbc0038I Pass  42: suminf.    0.97688 (4) obj. -5525.65 iterations 8
Cbc0038I Pass  43: suminf.    0.78932 (4) obj. -5266.57 iterations 5
Cbc0038I Pass  44: suminf.    0.93243 (3) obj. -5524.7 iterations 2
Cbc0038I Pass  45: suminf.    0.74557 (3) obj. -5266.57 iterations 5
Cbc0038I Pass  46: suminf.    1.79538 (11) obj. -5266.57 iterations 23
Cbc0038I Pass  47: suminf.    1.46810 (10) obj. -5266.57 iterations 9
Cbc0038I Pass  48: suminf.    1.25676 (3) obj. -6600.29 iterations 7
Cbc0038I Pass  49: suminf.    0.77773 (3) obj. -5266.57 iterations 3
Cbc0038I Pass  50: suminf.    2.63801 (11) obj. -5266.57 iterations 14
Cbc0038I Pass  51: suminf.    1.47803 (9) obj. -5266.57 iterations 3
Cbc0038I Pass  52: suminf.    1.24370 (8) obj. -5266.57 iterations 3
Cbc0038I Pass  53: suminf.    0.89189 (3) obj. -5449.51 iterations 6
Cbc0038I Pass  54: suminf.    0.75946 (3) obj. -5266.57 iterations 3
Cbc0038I Pass  55: suminf.    1.90550 (8) obj. -5266.57 iterations 16
Cbc0038I Pass  56: suminf.    1.20952 (6) obj. -5266.57 iterations 8
Cbc0038I Pass  57: suminf.    1.09459 (3) obj. -5714.25 iterations 4
Cbc0038I Pass  58: suminf.    0.77051 (3) obj. -5266.57 iterations 3
Cbc0038I Pass  59: suminf.    1.83572 (9) obj. -5266.57 iterations 20
Cbc0038I Pass  60: suminf.    1.60442 (8) obj. -5266.57 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 129 columns, reduced to 47 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -4297.62 - took 0.06 seconds
Cbc0012I Integer solution of -4297.6186 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 115 rows 129 columns, reduced to 22 rows 22 columns
Cbc0012I Integer solution of -4339.64 found by DiveCoefficient after 329 iterations and 0 nodes (0.34 seconds)
Cbc0031I 47 added rows had average density of 16.574468
Cbc0013I At root node, 47 cuts changed objective from -7847.9568 to -4351.5955 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 456 row cuts average 9.2 elements, 8 column cuts (8 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 47.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 15 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 62.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4339.64 best solution, best possible -4351.5185 (0.36 seconds)
Cbc0012I Integer solution of -4349.1292 found by DiveCoefficient after 340 iterations and 1 nodes (0.37 seconds)
Cbc0001I Search completed - best objective -4349.1292, took 502 iterations and 4 nodes (0.39 seconds)
Cbc0032I Strong branching done 58 times (966 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.39

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-66) rows, 77 (-26) columns and 425 (-178) elements
Clp1000I sum of infeasibilities 2.23274e-10 - average 1.60629e-12, 73 fixed columns
Coin0506I Presolve 5 (-134) rows, 4 (-73) columns and 11 (-414) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Coin0511I After Postsolve, objective 7843.969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Coin0511I After Postsolve, objective 7843.969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7843.968976 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 77 columns (76 integer (76 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.282%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.364865
Cbc0038I Pass   1: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Solution found of -4203.91
Cbc0038I Relaxing continuous gives -4214.02
Cbc0038I Rounding solution of -4253.59 is better than previous of -4214.02

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 6 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -4253.59 to -4262.7 (0.02 seconds)
Cbc0038I Round again with cutoff of -4620.82
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Pass   3: suminf.    0.29450 (3) obj. -4620.82 iterations 4
Cbc0038I Pass   4: suminf.    1.08245 (6) obj. -4620.82 iterations 19
Cbc0038I Pass   5: suminf.    0.69525 (4) obj. -4620.82 iterations 10
Cbc0038I Pass   6: suminf.    0.68919 (3) obj. -5200.05 iterations 5
Cbc0038I Pass   7: suminf.    0.26987 (3) obj. -4620.82 iterations 1
Cbc0038I Pass   8: suminf.    0.90824 (6) obj. -4620.82 iterations 16
Cbc0038I Pass   9: suminf.    0.46054 (4) obj. -4620.82 iterations 13
Cbc0038I Pass  10: suminf.    0.81081 (3) obj. -5370.09 iterations 2
Cbc0038I Pass  11: suminf.    0.26840 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  12: suminf.    0.53938 (4) obj. -4620.82 iterations 18
Cbc0038I Pass  13: suminf.    0.53938 (4) obj. -4620.82 iterations 11
Cbc0038I Pass  14: suminf.    0.81081 (3) obj. -5361.76 iterations 4
Cbc0038I Pass  15: suminf.    0.27443 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  16: suminf.    1.20347 (6) obj. -4620.82 iterations 12
Cbc0038I Pass  17: suminf.    0.31239 (4) obj. -4620.82 iterations 11
Cbc0038I Pass  18: suminf.    0.64865 (3) obj. -5117.95 iterations 4
Cbc0038I Pass  19: suminf.    0.28876 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  20: suminf.    0.60133 (6) obj. -4620.82 iterations 5
Cbc0038I Pass  21: suminf.    0.32510 (4) obj. -4620.82 iterations 3
Cbc0038I Pass  22: suminf.    0.93243 (3) obj. -5509.96 iterations 3
Cbc0038I Pass  23: suminf.    0.28876 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  24: suminf.    0.66793 (6) obj. -4620.82 iterations 20
Cbc0038I Pass  25: suminf.    0.54277 (5) obj. -4620.82 iterations 5
Cbc0038I Pass  26: suminf.    1.17568 (3) obj. -5851.62 iterations 4
Cbc0038I Pass  27: suminf.    0.28467 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  28: suminf.    1.79258 (8) obj. -4620.82 iterations 10
Cbc0038I Pass  29: suminf.    0.28724 (3) obj. -4620.82 iterations 6
Cbc0038I Pass  30: suminf.    0.97297 (3) obj. -5568.07 iterations 1
Cbc0038I Pass  31: suminf.    0.51248 (3) obj. -4620.82 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 45 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -4262.7 to -4293.12 (0.03 seconds)
Cbc0038I Round again with cutoff of -5265.45
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Pass  32: suminf.    0.76116 (3) obj. -5265.45 iterations 4
Cbc0038I Pass  33: suminf.    1.22983 (4) obj. -5265.45 iterations 19
Cbc0038I Pass  34: suminf.    0.74261 (3) obj. -5265.45 iterations 13
Cbc0038I Pass  35: suminf.    1.25676 (3) obj. -5975.68 iterations 1
Cbc0038I Pass  36: suminf.    0.94460 (4) obj. -5265.45 iterations 11
Cbc0038I Pass  37: suminf.    0.94460 (4) obj. -5265.45 iterations 5
Cbc0038I Pass  38: suminf.    1.37838 (3) obj. -6456.43 iterations 3
Cbc0038I Pass  39: suminf.    1.37838 (3) obj. -6456.43 iterations 1
Cbc0038I Pass  40: suminf.    0.75944 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  41: suminf.    1.51554 (5) obj. -5265.45 iterations 14
Cbc0038I Pass  42: suminf.    1.51554 (5) obj. -5265.45 iterations 4
Cbc0038I Pass  43: suminf.    1.33784 (3) obj. -6061.58 iterations 3
Cbc0038I Pass  44: suminf.    0.76150 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  45: suminf.    1.29542 (5) obj. -5265.45 iterations 6
Cbc0038I Pass  46: suminf.    1.29542 (5) obj. -5265.45 iterations 0
Cbc0038I Pass  47: suminf.    1.25676 (3) obj. -6613.21 iterations 6
Cbc0038I Pass  48: suminf.    0.76757 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  49: suminf.    1.04053 (5) obj. -5265.45 iterations 10
Cbc0038I Pass  50: suminf.    0.76354 (3) obj. -5265.45 iterations 4
Cbc0038I Pass  51: suminf.    0.77027 (3) obj. -5274.75 iterations 1
Cbc0038I Pass  52: suminf.    1.38891 (6) obj. -5265.45 iterations 12
Cbc0038I Pass  53: suminf.    0.76221 (3) obj. -5265.45 iterations 10
Cbc0038I Pass  54: suminf.    0.89189 (3) obj. -5444.6 iterations 1
Cbc0038I Pass  55: suminf.    1.81790 (7) obj. -5265.45 iterations 12
Cbc0038I Pass  56: suminf.    0.75349 (3) obj. -5265.45 iterations 6
Cbc0038I Pass  57: suminf.    1.01351 (3) obj. -5624.63 iterations 1
Cbc0038I Pass  58: suminf.    1.42313 (6) obj. -5265.45 iterations 12
Cbc0038I Pass  59: suminf.    0.74828 (3) obj. -5265.45 iterations 8
Cbc0038I Pass  60: suminf.    0.89189 (3) obj. -5463.83 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 35 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -4293.12 - took 0.03 seconds
Cbc0012I Integer solution of -4293.1165 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 139 rows 77 columns, reduced to 14 rows 9 columns
Cbc0031I 18 added rows had average density of 12.722222
Cbc0013I At root node, 18 cuts changed objective from -7843.969 to -4312.4449 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 377 row cuts average 3.8 elements, 9 column cuts (9 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0012I Integer solution of -4294.187 found by rounding after 722 iterations and 22 nodes (0.43 seconds)
Cbc0016I Integer solution of -4294.5885 found by strong branching after 771 iterations and 28 nodes (0.44 seconds)
Cbc0012I Integer solution of -4296.4069 found by DiveCoefficient after 879 iterations and 37 nodes (0.45 seconds)
Cbc0016I Integer solution of -4297.6186 found by strong branching after 900 iterations and 37 nodes (0.45 seconds)
Cbc0001I Search completed - best objective -4297.61861, took 1027 iterations and 40 nodes (0.46 seconds)
Cbc0032I Strong branching done 324 times (2622 iterations), fathomed 7 nodes and fixed 6 variables
Cbc0035I Maximum depth 12, 128 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-97) rows, 121 (-82) columns and 2168 (-3486) elements
Clp1000I sum of infeasibilities 2.83568e-08 - average 2.62563e-10, 117 fixed columns
Coin0506I Presolve 3 (-105) rows, 3 (-118) columns and 7 (-2161) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 7807.0771
Clp0000I Optimal - objective value 7807.0771
Coin0511I After Postsolve, objective 7807.0771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0494808 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 7871.1269
Clp0000I Optimal - objective value 7871.1269
Clp0000I Optimal - objective value 7871.1269
Coin0511I After Postsolve, objective 7871.1269, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7871.126869 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 122 columns (122 integer (122 of which binary)) and 2184 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.858%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.63582
Cbc0038I Pass   1: suminf.    0.36486 (3) obj. -7840.08 iterations 19
Cbc0038I Solution found of -4200.02
Cbc0038I Rounding solution of -4251.38 is better than previous of -4200.02

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 122 columns, reduced to 17 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -4251.38 to -4262.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -4621.25
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.36486 (3) obj. -7840.08 iterations 0
Cbc0038I Pass   3: suminf.    0.30494 (3) obj. -4621.25 iterations 9
Cbc0038I Pass   4: suminf.    1.54291 (21) obj. -4621.25 iterations 32
Cbc0038I Pass   5: suminf.    1.06118 (19) obj. -4621.25 iterations 9
Cbc0038I Pass   6: suminf.    0.87135 (4) obj. -5391.47 iterations 16
Cbc0038I Pass   7: suminf.    0.31377 (4) obj. -4621.25 iterations 5
Cbc0038I Pass   8: suminf.    0.85135 (3) obj. -5390.49 iterations 2
Cbc0038I Pass   9: suminf.    0.29448 (3) obj. -4621.25 iterations 5
Cbc0038I Pass  10: suminf.    1.80057 (14) obj. -4621.25 iterations 29
Cbc0038I Pass  11: suminf.    1.07962 (13) obj. -4621.25 iterations 9
Cbc0038I Pass  12: suminf.    0.36486 (3) obj. -4711.58 iterations 11
Cbc0038I Pass  13: suminf.    0.29947 (3) obj. -4621.25 iterations 5
Cbc0038I Pass  14: suminf.    0.95253 (12) obj. -4621.25 iterations 18
Cbc0038I Pass  15: suminf.    0.71271 (8) obj. -4621.25 iterations 9
Cbc0038I Pass  16: suminf.    0.40541 (3) obj. -4774.73 iterations 6
Cbc0038I Pass  17: suminf.    0.29430 (3) obj. -4621.25 iterations 5
Cbc0038I Pass  18: suminf.    1.47450 (12) obj. -4621.25 iterations 21
Cbc0038I Pass  19: suminf.    1.47450 (12) obj. -4621.25 iterations 2
Cbc0038I Pass  20: suminf.    0.77027 (3) obj. -5270.09 iterations 10
Cbc0038I Pass  21: suminf.    0.30055 (3) obj. -4621.25 iterations 5
Cbc0038I Pass  22: suminf.    1.34605 (12) obj. -4621.25 iterations 13
Cbc0038I Pass  23: suminf.    0.57790 (8) obj. -4621.25 iterations 8
Cbc0038I Pass  24: suminf.    0.81081 (3) obj. -5331.24 iterations 6
Cbc0038I Pass  25: suminf.    0.29683 (3) obj. -4621.25 iterations 6
Cbc0038I Pass  26: suminf.    1.19193 (11) obj. -4621.25 iterations 22
Cbc0038I Pass  27: suminf.    0.63582 (6) obj. -4621.25 iterations 12
Cbc0038I Pass  28: suminf.    0.56757 (3) obj. -4986.24 iterations 4
Cbc0038I Pass  29: suminf.    0.30334 (3) obj. -4621.25 iterations 5
Cbc0038I Pass  30: suminf.    1.52228 (16) obj. -4621.25 iterations 21
Cbc0038I Pass  31: suminf.    0.83015 (8) obj. -4621.25 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 122 columns, reduced to 59 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -4262.7 to -4293.12 (0.09 seconds)
Cbc0038I Round again with cutoff of -5266.64
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36486 (3) obj. -7840.08 iterations 0
Cbc0038I Pass  32: suminf.    0.77216 (3) obj. -5266.64 iterations 9
Cbc0038I Pass  33: suminf.    1.67449 (8) obj. -5266.64 iterations 20
Cbc0038I Pass  34: suminf.    1.37698 (7) obj. -5266.64 iterations 7
Cbc0038I Pass  35: suminf.    1.25676 (3) obj. -6598.68 iterations 4
Cbc0038I Pass  36: suminf.    0.77895 (3) obj. -5266.64 iterations 5
Cbc0038I Pass  37: suminf.    2.61127 (14) obj. -5266.64 iterations 31
Cbc0038I Pass  38: suminf.    2.24412 (13) obj. -5266.64 iterations 7
Cbc0038I Pass  39: suminf.    1.13514 (3) obj. -6789.43 iterations 10
Cbc0038I Pass  40: suminf.    0.76248 (3) obj. -5266.64 iterations 5
Cbc0038I Pass  41: suminf.    1.55608 (10) obj. -5266.64 iterations 28
Cbc0038I Pass  42: suminf.    1.30190 (8) obj. -5266.64 iterations 13
Cbc0038I Pass  43: suminf.    0.81081 (3) obj. -5345.78 iterations 6
Cbc0038I Pass  44: suminf.    0.75352 (3) obj. -5266.64 iterations 5
Cbc0038I Pass  45: suminf.    2.69397 (10) obj. -5266.64 iterations 13
Cbc0038I Pass  46: suminf.    1.49528 (7) obj. -5266.64 iterations 13
Cbc0038I Pass  47: suminf.    2.71922 (14) obj. -5266.64 iterations 14
Cbc0038I Pass  48: suminf.    2.67227 (13) obj. -5266.64 iterations 3
Cbc0038I Pass  49: suminf.    1.17568 (3) obj. -5831.69 iterations 10
Cbc0038I Pass  50: suminf.    0.76663 (3) obj. -5266.64 iterations 6
Cbc0038I Pass  51: suminf.    0.90672 (6) obj. -5266.64 iterations 14
Cbc0038I Pass  52: suminf.    0.90672 (6) obj. -5266.64 iterations 4
Cbc0038I Pass  53: suminf.    1.45946 (3) obj. -6216.69 iterations 5
Cbc0038I Pass  54: suminf.    0.77169 (3) obj. -5266.64 iterations 6
Cbc0038I Pass  55: suminf.    2.50605 (15) obj. -5266.64 iterations 27
Cbc0038I Pass  56: suminf.    2.24212 (13) obj. -5266.64 iterations 11
Cbc0038I Pass  57: suminf.    1.41892 (3) obj. -6395.63 iterations 11
Cbc0038I Pass  58: suminf.    0.76377 (3) obj. -5266.64 iterations 6
Cbc0038I Pass  59: suminf.    1.64630 (9) obj. -5266.64 iterations 18
Cbc0038I Pass  60: suminf.    1.06770 (7) obj. -5266.64 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 122 columns, reduced to 49 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -4293.12 - took 0.09 seconds
Cbc0012I Integer solution of -4293.1165 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 109 rows 122 columns, reduced to 24 rows 24 columns
Cbc0031I 45 added rows had average density of 21.977778
Cbc0013I At root node, 45 cuts changed objective from -7848.2179 to -4316.8862 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1111 row cuts average 8.5 elements, 16 column cuts (16 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 53.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 185 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 260 row cuts average 59.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4293.1165 best solution, best possible -4316.8862 (0.53 seconds)
Cbc0012I Integer solution of -4296.4069 found by rounding after 635 iterations and 2 nodes (0.57 seconds)
Cbc0012I Integer solution of -4297.6186 found by DiveCoefficient after 701 iterations and 4 nodes (0.60 seconds)
Cbc0001I Search completed - best objective -4297.61861, took 1600 iterations and 34 nodes (0.83 seconds)
Cbc0032I Strong branching done 608 times (8545 iterations), fathomed 1 nodes and fixed 16 variables
Cbc0035I Maximum depth 9, 78 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.83

