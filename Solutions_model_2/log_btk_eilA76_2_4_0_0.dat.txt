Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 72 (-6) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 0.000151448 - average 1.14733e-06, 17 fixed columns
Coin0506I Presolve 92 (-40) rows, 55 (-17) columns and 287 (-113) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.26449426 - largest nonzero change 0 ( 0%) - largest zero change 2.7926465e-05
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Coin0511I After Postsolve, objective 53.587487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25356529 - largest nonzero change 0 ( 0%) - largest zero change 2.2016773e-05
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Coin0511I After Postsolve, objective 53.587487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.5874867 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 72 columns (71 integer (71 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 7.5136
Cbc0038I Solution found of -4.1067
Cbc0038I Relaxing continuous gives -4.1067
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 64 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -4.1067 to -22.3082 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.4362
Cbc0038I Pass   1: suminf.    2.03878 (12) obj. -25.4362 iterations 58
Cbc0038I Pass   2: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass   3: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass   4: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass   5: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass   6: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass   7: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass   8: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass   9: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass  10: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass  11: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass  12: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass  13: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass  14: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass  15: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass  16: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass  17: suminf.    2.02825 (6) obj. -25.4362 iterations 13
Cbc0038I Pass  18: suminf.    1.61367 (6) obj. -25.4362 iterations 4
Cbc0038I Pass  19: suminf.    2.39363 (8) obj. -25.4362 iterations 14
Cbc0038I Pass  20: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I Pass  21: suminf.    2.05997 (6) obj. -25.4362 iterations 11
Cbc0038I Pass  22: suminf.    1.85903 (6) obj. -25.4362 iterations 2
Cbc0038I Pass  23: suminf.    1.85903 (6) obj. -25.4362 iterations 0
Cbc0038I Pass  24: suminf.    1.88927 (7) obj. -25.4362 iterations 8
Cbc0038I Pass  25: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I Pass  26: suminf.    2.05997 (6) obj. -25.4362 iterations 11
Cbc0038I Pass  27: suminf.    1.85903 (6) obj. -25.4362 iterations 2
Cbc0038I Pass  28: suminf.    1.85903 (6) obj. -25.4362 iterations 0
Cbc0038I Pass  29: suminf.    1.88927 (7) obj. -25.4362 iterations 8
Cbc0038I Pass  30: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 66 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -22.3082 - took 0.07 seconds
Cbc0012I Integer solution of -22.30815 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 64 rows 39 columns
Cbc0031I 27 added rows had average density of 34.592593
Cbc0013I At root node, 27 cuts changed objective from -53.587487 to -43.067257 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10654 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1990 row cuts average 62.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 42.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.30815 best solution, best possible -43.067257 (0.76 seconds)
Cbc0016I Integer solution of -22.4412 found by strong branching after 7852 iterations and 46 nodes (0.94 seconds)
Cbc0001I Search completed - best objective -22.4412, took 8437 iterations and 56 nodes (0.95 seconds)
Cbc0032I Strong branching done 646 times (12570 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 22, 185 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-42) rows, 122 (-30) columns and 2145 (-1158) elements
Clp1000I sum of infeasibilities 4.64395e-08 - average 4.14639e-10, 41 fixed columns
Coin0506I Presolve 60 (-52) rows, 70 (-52) columns and 772 (-1373) elements
Clp0006I 0  Obj 111.91226 Dual inf 15.322766 (70)
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 2.1900076 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 124.11734
Clp0000I Optimal - objective value 124.11734
Coin0511I After Postsolve, objective 124.11734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 124.11734 Dual inf 1.2358974 (1)
Clp0014I Perturbing problem by 0.001% of 1.7420089 - largest nonzero change 1.9624726e-05 ( 0.0019624726%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 124.11734
Clp0000I Optimal - objective value 124.11734
Clp0000I Optimal - objective value 124.11734
Coin0511I After Postsolve, objective 124.11734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 124.1173384 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 112 rows, 122 columns (122 integer (122 of which binary)) and 2153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.765%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 6.92893
Cbc0038I Pass   1: suminf.    3.28998 (36) obj. -95.408 iterations 12
Cbc0038I Pass   2: suminf.    3.28998 (36) obj. -95.408 iterations 0
Cbc0038I Pass   3: suminf.    0.46875 (7) obj. -48.4857 iterations 29
Cbc0038I Solution found of -39.1425
Cbc0038I Rounding solution of -49.2751 is better than previous of -39.1425

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 122 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -49.2751 to -52.9221 (0.03 seconds)
Cbc0038I Round again with cutoff of -58.9632
Cbc0038I Pass   4: suminf.    3.28998 (36) obj. -95.408 iterations 0
Cbc0038I Pass   5: suminf.    3.28998 (36) obj. -95.408 iterations 0
Cbc0038I Pass   6: suminf.    1.62883 (20) obj. -64.8894 iterations 16
Cbc0038I Pass   7: suminf.    0.17637 (1) obj. -58.9632 iterations 24
Cbc0038I Pass   8: suminf.    0.11268 (1) obj. -59.5364 iterations 1
Cbc0038I Pass   9: suminf.    0.17637 (1) obj. -58.9632 iterations 1
Cbc0038I Pass  10: suminf.    1.39135 (10) obj. -58.9632 iterations 19
Cbc0038I Pass  11: suminf.    1.39135 (10) obj. -58.9632 iterations 3
Cbc0038I Pass  12: suminf.    1.73567 (11) obj. -58.9632 iterations 15
Cbc0038I Pass  13: suminf.    1.34936 (11) obj. -58.9632 iterations 2
Cbc0038I Pass  14: suminf.    1.19057 (7) obj. -58.9632 iterations 14
Cbc0038I Pass  15: suminf.    1.07210 (7) obj. -58.9632 iterations 5
Cbc0038I Pass  16: suminf.    1.13917 (7) obj. -58.9632 iterations 4
Cbc0038I Pass  17: suminf.    1.13917 (7) obj. -58.9632 iterations 3
Cbc0038I Pass  18: suminf.    1.07210 (7) obj. -58.9632 iterations 9
Cbc0038I Pass  19: suminf.    1.47549 (12) obj. -58.9632 iterations 20
Cbc0038I Pass  20: suminf.    1.17849 (9) obj. -59.9364 iterations 9
Cbc0038I Pass  21: suminf.    1.14787 (10) obj. -58.9632 iterations 10
Cbc0038I Pass  22: suminf.    0.87608 (8) obj. -58.9632 iterations 1
Cbc0038I Pass  23: suminf.    1.40707 (8) obj. -58.9632 iterations 15
Cbc0038I Pass  24: suminf.    1.40707 (8) obj. -58.9632 iterations 0
Cbc0038I Pass  25: suminf.    1.19911 (6) obj. -58.9632 iterations 15
Cbc0038I Pass  26: suminf.    0.66839 (4) obj. -58.9632 iterations 4
Cbc0038I Pass  27: suminf.    0.68717 (4) obj. -58.9632 iterations 4
Cbc0038I Pass  28: suminf.    2.07326 (14) obj. -58.9632 iterations 30
Cbc0038I Pass  29: suminf.    2.07326 (14) obj. -58.9632 iterations 1
Cbc0038I Pass  30: suminf.    1.43982 (6) obj. -58.9632 iterations 32
Cbc0038I Pass  31: suminf.    0.97213 (5) obj. -58.9632 iterations 7
Cbc0038I Pass  32: suminf.    1.16576 (6) obj. -58.9632 iterations 5
Cbc0038I Pass  33: suminf.    0.94664 (7) obj. -58.9632 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 122 columns, reduced to 34 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -52.9221 to -57.3444 (0.08 seconds)
Cbc0038I Round again with cutoff of -69.8371
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.28998 (36) obj. -95.408 iterations 0
Cbc0038I Pass  34: suminf.    3.28998 (36) obj. -95.408 iterations 0
Cbc0038I Pass  35: suminf.    2.22334 (26) obj. -78.4086 iterations 10
Cbc0038I Pass  36: suminf.    2.39762 (13) obj. -69.8371 iterations 32
Cbc0038I Pass  37: suminf.    1.87311 (13) obj. -69.8371 iterations 2
Cbc0038I Pass  38: suminf.    1.55637 (12) obj. -69.8371 iterations 19
Cbc0038I Pass  39: suminf.    1.53809 (12) obj. -69.8371 iterations 4
Cbc0038I Pass  40: suminf.    1.66952 (12) obj. -69.8371 iterations 4
Cbc0038I Pass  41: suminf.    2.08250 (15) obj. -69.8371 iterations 21
Cbc0038I Pass  42: suminf.    2.07800 (16) obj. -69.8371 iterations 4
Cbc0038I Pass  43: suminf.    1.78455 (13) obj. -69.8371 iterations 23
Cbc0038I Pass  44: suminf.    1.78455 (13) obj. -69.8371 iterations 0
Cbc0038I Pass  45: suminf.    1.68095 (13) obj. -69.8371 iterations 6
Cbc0038I Pass  46: suminf.    1.68095 (13) obj. -69.8371 iterations 4
Cbc0038I Pass  47: suminf.    1.78455 (13) obj. -69.8371 iterations 5
Cbc0038I Pass  48: suminf.    2.74621 (19) obj. -69.8371 iterations 28
Cbc0038I Pass  49: suminf.    1.79481 (16) obj. -69.8371 iterations 6
Cbc0038I Pass  50: suminf.    1.77815 (12) obj. -69.8371 iterations 24
Cbc0038I Pass  51: suminf.    1.28406 (11) obj. -69.8371 iterations 3
Cbc0038I Pass  52: suminf.    1.69916 (11) obj. -69.8371 iterations 6
Cbc0038I Pass  53: suminf.    1.47526 (13) obj. -69.8371 iterations 3
Cbc0038I Pass  54: suminf.    1.97204 (12) obj. -69.8371 iterations 8
Cbc0038I Pass  55: suminf.    1.50004 (12) obj. -69.8371 iterations 4
Cbc0038I Pass  56: suminf.    1.85775 (12) obj. -69.8371 iterations 7
Cbc0038I Pass  57: suminf.    2.18817 (16) obj. -69.8371 iterations 33
Cbc0038I Pass  58: suminf.    1.36766 (13) obj. -69.8371 iterations 5
Cbc0038I Pass  59: suminf.    1.67245 (11) obj. -69.8371 iterations 14
Cbc0038I Pass  60: suminf.    1.73896 (14) obj. -69.8371 iterations 15
Cbc0038I Pass  61: suminf.    1.73896 (14) obj. -69.8371 iterations 5
Cbc0038I Pass  62: suminf.    1.61512 (13) obj. -69.8371 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 122 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -57.3444 - took 0.09 seconds
Cbc0012I Integer solution of -57.34442 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 112 rows 122 columns, reduced to 17 rows 20 columns
Cbc0031I 49 added rows had average density of 8.0408163
Cbc0013I At root node, 49 cuts changed objective from -113.33275 to -59.093484 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 864 row cuts average 3.7 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 70.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 108 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 153 row cuts average 46.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -57.34442 best solution, best possible -59.090693 (0.48 seconds)
Cbc0010I After 14 nodes, 1 on tree, -57.34442 best solution, best possible -58.230927 (1.21 seconds)
Cbc0001I Search completed - best objective -57.34442, took 842 iterations and 22 nodes (1.48 seconds)
Cbc0032I Strong branching done 216 times (1361 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.49

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 72 (-6) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 0.000151448 - average 1.14733e-06, 17 fixed columns
Coin0506I Presolve 92 (-40) rows, 55 (-17) columns and 287 (-113) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.26449426 - largest nonzero change 0 ( 0%) - largest zero change 2.7926465e-05
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Coin0511I After Postsolve, objective 53.587487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25356529 - largest nonzero change 0 ( 0%) - largest zero change 2.2016773e-05
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Coin0511I After Postsolve, objective 53.587487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.5874867 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 72 columns (71 integer (71 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 7.5136
Cbc0038I Solution found of -4.1067
Cbc0038I Relaxing continuous gives -4.1067
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 64 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -4.1067 to -22.3082 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.4362
Cbc0038I Pass   1: suminf.    2.03878 (12) obj. -25.4362 iterations 58
Cbc0038I Pass   2: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass   3: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass   4: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass   5: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass   6: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass   7: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass   8: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass   9: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass  10: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass  11: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass  12: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass  13: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass  14: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass  15: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass  16: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass  17: suminf.    2.02825 (6) obj. -25.4362 iterations 13
Cbc0038I Pass  18: suminf.    1.61367 (6) obj. -25.4362 iterations 4
Cbc0038I Pass  19: suminf.    2.39363 (8) obj. -25.4362 iterations 14
Cbc0038I Pass  20: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I Pass  21: suminf.    2.05997 (6) obj. -25.4362 iterations 11
Cbc0038I Pass  22: suminf.    1.85903 (6) obj. -25.4362 iterations 2
Cbc0038I Pass  23: suminf.    1.85903 (6) obj. -25.4362 iterations 0
Cbc0038I Pass  24: suminf.    1.88927 (7) obj. -25.4362 iterations 8
Cbc0038I Pass  25: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I Pass  26: suminf.    2.05997 (6) obj. -25.4362 iterations 11
Cbc0038I Pass  27: suminf.    1.85903 (6) obj. -25.4362 iterations 2
Cbc0038I Pass  28: suminf.    1.85903 (6) obj. -25.4362 iterations 0
Cbc0038I Pass  29: suminf.    1.88927 (7) obj. -25.4362 iterations 8
Cbc0038I Pass  30: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 66 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -22.3082 - took 0.08 seconds
Cbc0012I Integer solution of -22.30815 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 64 rows 39 columns
Cbc0031I 27 added rows had average density of 34.592593
Cbc0013I At root node, 27 cuts changed objective from -53.587487 to -43.067257 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10654 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1990 row cuts average 62.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 42.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.30815 best solution, best possible -43.067257 (0.85 seconds)
Cbc0016I Integer solution of -22.4412 found by strong branching after 7852 iterations and 46 nodes (1.05 seconds)
Cbc0001I Search completed - best objective -22.4412, took 8437 iterations and 56 nodes (1.07 seconds)
Cbc0032I Strong branching done 646 times (12570 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 22, 185 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 121 (-32) columns and 2113 (-1191) elements
Clp1000I sum of infeasibilities 3.02911e-06 - average 2.72893e-08, 29 fixed columns
Coin0506I Presolve 79 (-32) rows, 91 (-30) columns and 1087 (-1026) elements
Clp0006I 0  Obj 55.331728 Dual inf 6.1232055 (90)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 1.8727871 - largest nonzero change 0 ( 0%) - largest zero change 2.9971103e-05
Clp0000I Optimal - objective value 72.658762
Clp0000I Optimal - objective value 72.658762
Coin0511I After Postsolve, objective 72.658762, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 72.658762
Clp0000I Optimal - objective value 72.658762
Clp0000I Optimal - objective value 72.658762
Clp0000I Optimal - objective value 72.658762
Coin0511I After Postsolve, objective 72.658762, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.65876209 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 121 columns (121 integer (121 of which binary)) and 2121 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.775%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 6.54665
Cbc0038I Pass   1: suminf.    2.80312 (36) obj. -44.4655 iterations 11
Cbc0038I Pass   2: suminf.    2.80312 (36) obj. -44.4655 iterations 0
Cbc0038I Pass   3: suminf.    1.63995 (24) obj. -19.3456 iterations 12
Cbc0038I Solution found of 12.3354
Cbc0038I Rounding solution of 4.49949 is better than previous of 12.3354

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 121 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound improved solution from 4.49949 to -0.18474 (0.04 seconds)
Cbc0038I Round again with cutoff of -6.37638
Cbc0038I Pass   4: suminf.    2.80312 (36) obj. -44.4655 iterations 0
Cbc0038I Pass   5: suminf.    2.80312 (36) obj. -44.4655 iterations 0
Cbc0038I Pass   6: suminf.    1.05150 (17) obj. -11.1025 iterations 19
Cbc0038I Pass   7: suminf.    0.44279 (3) obj. -6.37638 iterations 21
Cbc0038I Pass   8: suminf.    0.20283 (3) obj. -8.53601 iterations 2
Cbc0038I Pass   9: suminf.    0.28935 (2) obj. -6.37638 iterations 4
Cbc0038I Pass  10: suminf.    0.15521 (2) obj. -7.58363 iterations 2
Cbc0038I Pass  11: suminf.    2.00526 (17) obj. -6.37638 iterations 19
Cbc0038I Pass  12: suminf.    2.00526 (17) obj. -6.37638 iterations 2
Cbc0038I Pass  13: suminf.    1.86413 (8) obj. -6.37638 iterations 26
Cbc0038I Pass  14: suminf.    1.11178 (7) obj. -6.37638 iterations 3
Cbc0038I Pass  15: suminf.    1.49114 (9) obj. -6.37638 iterations 12
Cbc0038I Pass  16: suminf.    1.49114 (9) obj. -6.37638 iterations 0
Cbc0038I Pass  17: suminf.    1.17800 (7) obj. -6.37638 iterations 11
Cbc0038I Pass  18: suminf.    0.80701 (8) obj. -6.37638 iterations 4
Cbc0038I Pass  19: suminf.    1.56682 (7) obj. -6.37638 iterations 6
Cbc0038I Pass  20: suminf.    0.84868 (7) obj. -6.37638 iterations 3
Cbc0038I Pass  21: suminf.    2.35931 (13) obj. -6.37638 iterations 27
Cbc0038I Pass  22: suminf.    1.45592 (10) obj. -6.37638 iterations 5
Cbc0038I Pass  23: suminf.    0.86584 (7) obj. -6.37638 iterations 11
Cbc0038I Pass  24: suminf.    0.82696 (7) obj. -6.37638 iterations 3
Cbc0038I Pass  25: suminf.    0.90188 (8) obj. -6.37638 iterations 13
Cbc0038I Pass  26: suminf.    0.90188 (8) obj. -6.37638 iterations 0
Cbc0038I Pass  27: suminf.    2.08091 (9) obj. -6.37638 iterations 10
Cbc0038I Pass  28: suminf.    1.08420 (8) obj. -6.37638 iterations 4
Cbc0038I Pass  29: suminf.    0.65589 (7) obj. -6.37638 iterations 4
Cbc0038I Pass  30: suminf.    0.77079 (8) obj. -6.37638 iterations 8
Cbc0038I Pass  31: suminf.    0.77079 (8) obj. -6.37638 iterations 2
Cbc0038I Pass  32: suminf.    1.83208 (6) obj. -6.37638 iterations 9
Cbc0038I Pass  33: suminf.    1.12250 (6) obj. -6.37638 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 121 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -0.18474 to -1.53763 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.5211
Cbc0038I Pass  33: suminf.    2.80312 (36) obj. -44.4655 iterations 0
Cbc0038I Pass  34: suminf.    2.80312 (36) obj. -44.4655 iterations 0
Cbc0038I Pass  35: suminf.    1.72767 (25) obj. -22.0825 iterations 11
Cbc0038I Pass  36: suminf.    0.87780 (13) obj. -17.5211 iterations 22
Cbc0038I Pass  37: suminf.    0.67613 (11) obj. -17.5211 iterations 7
Cbc0038I Pass  38: suminf.    2.64589 (14) obj. -17.5211 iterations 17
Cbc0038I Pass  39: suminf.    2.64589 (14) obj. -17.5211 iterations 0
Cbc0038I Pass  40: suminf.    1.87477 (11) obj. -17.5211 iterations 19
Cbc0038I Pass  41: suminf.    1.64219 (12) obj. -17.5211 iterations 4
Cbc0038I Pass  42: suminf.    2.55783 (11) obj. -17.5211 iterations 14
Cbc0038I Pass  43: suminf.    2.24444 (12) obj. -17.5211 iterations 4
Cbc0038I Pass  44: suminf.    2.55783 (11) obj. -17.5211 iterations 7
Cbc0038I Pass  45: suminf.    3.40364 (20) obj. -17.5211 iterations 21
Cbc0038I Pass  46: suminf.    2.60494 (16) obj. -17.5211 iterations 6
Cbc0038I Pass  47: suminf.    1.76730 (16) obj. -17.5211 iterations 6
Cbc0038I Pass  48: suminf.    2.13218 (12) obj. -17.5211 iterations 18
Cbc0038I Pass  49: suminf.    2.13218 (12) obj. -17.5211 iterations 0
Cbc0038I Pass  50: suminf.    2.16031 (12) obj. -17.5211 iterations 3
Cbc0038I Pass  51: suminf.    2.16031 (12) obj. -17.5211 iterations 2
Cbc0038I Pass  52: suminf.    2.13218 (12) obj. -17.5211 iterations 9
Cbc0038I Pass  53: suminf.    1.36481 (14) obj. -17.5211 iterations 17
Cbc0038I Pass  54: suminf.    1.30591 (15) obj. -17.5211 iterations 5
Cbc0038I Pass  55: suminf.    2.16031 (12) obj. -17.5211 iterations 20
Cbc0038I Pass  56: suminf.    2.48018 (18) obj. -17.5211 iterations 18
Cbc0038I Pass  57: suminf.    2.18070 (18) obj. -17.5211 iterations 5
Cbc0038I Pass  58: suminf.    3.08160 (15) obj. -17.5211 iterations 11
Cbc0038I Pass  59: suminf.    2.32418 (15) obj. -17.5211 iterations 1
Cbc0038I Pass  60: suminf.    2.22481 (15) obj. -17.5211 iterations 8
Cbc0038I Pass  61: suminf.    2.96286 (14) obj. -17.5211 iterations 11
Cbc0038I Pass  62: suminf.    2.96286 (14) obj. -17.5211 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -1.53763 - took 0.07 seconds
Cbc0012I Integer solution of -1.53763 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 111 rows 121 columns, reduced to 4 rows 7 columns
Cbc0012I Integer solution of -9.50904 found by DiveCoefficient after 3906 iterations and 0 nodes (2.48 seconds)
Cbc0031I 59 added rows had average density of 18.830508
Cbc0013I At root node, 59 cuts changed objective from -62.100223 to -28.994594 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9034 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1506 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 102 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 453 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 672 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 355 row cuts average 63.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 236 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.745 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.50904 best solution, best possible -28.994594 (2.56 seconds)
Cbc0012I Integer solution of -15.27159 found by rounding after 4293 iterations and 1 nodes (2.97 seconds)
Cbc0012I Integer solution of -19.49705 found by rounding after 4309 iterations and 2 nodes (2.99 seconds)
Cbc0012I Integer solution of -22.30815 found by DiveCoefficient after 4336 iterations and 2 nodes (3.07 seconds)
Cbc0010I After 4 nodes, 5 on tree, -22.30815 best solution, best possible -28.994594 (3.28 seconds)
Cbc0016I Integer solution of -22.4412 found by strong branching after 4667 iterations and 7 nodes (3.58 seconds)
Cbc0010I After 17 nodes, 8 on tree, -22.4412 best solution, best possible -28.994594 (3.99 seconds)
Cbc0001I Search completed - best objective -22.4412, took 5852 iterations and 40 nodes (4.59 seconds)
Cbc0032I Strong branching done 596 times (10280 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 45 variables fixed on reduced cost
Total time (CPU seconds):       3.26   (Wallclock seconds):       4.61

