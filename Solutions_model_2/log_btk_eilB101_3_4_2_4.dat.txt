Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 8.29941e-05 - average 4.56012e-07, 10 fixed columns
Coin0506I Presolve 159 (-23) rows, 88 (-12) columns and 486 (-70) elements
Clp0029I End of values pass after 88 iterations
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Coin0511I After Postsolve, objective 37.022659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Coin0511I After Postsolve, objective 37.022659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.02265894 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 100 columns (99 integer (99 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.935%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 8.41297
Cbc0038I Solution found of 0.834963
Cbc0038I Relaxing continuous gives -5.53288
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -5.53288 to -11.0157 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.6164
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.79480 (35) obj. -13.6164 iterations 72
Cbc0038I Pass   2: suminf.    1.32084 (7) obj. -13.6164 iterations 33
Cbc0038I Pass   3: suminf.    1.32084 (7) obj. -13.6164 iterations 0
Cbc0038I Pass   4: suminf.    2.17313 (19) obj. -13.6164 iterations 24
Cbc0038I Pass   5: suminf.    3.37634 (9) obj. -13.6164 iterations 37
Cbc0038I Pass   6: suminf.    1.96748 (8) obj. -13.6164 iterations 10
Cbc0038I Pass   7: suminf.    0.95868 (5) obj. -13.6164 iterations 9
Cbc0038I Pass   8: suminf.    0.87213 (4) obj. -13.6164 iterations 3
Cbc0038I Pass   9: suminf.    1.14655 (5) obj. -13.6164 iterations 5
Cbc0038I Pass  10: suminf.    1.07884 (5) obj. -13.6164 iterations 2
Cbc0038I Pass  11: suminf.    1.54862 (6) obj. -13.6164 iterations 9
Cbc0038I Pass  12: suminf.    1.17660 (4) obj. -13.6164 iterations 5
Cbc0038I Pass  13: suminf.    1.17660 (4) obj. -13.6164 iterations 0
Cbc0038I Pass  14: suminf.    0.92842 (3) obj. -13.6164 iterations 8
Cbc0038I Pass  15: suminf.    0.77398 (4) obj. -13.6164 iterations 3
Cbc0038I Pass  16: suminf.    1.17660 (4) obj. -13.6164 iterations 5
Cbc0038I Pass  17: suminf.    2.64967 (10) obj. -13.6164 iterations 35
Cbc0038I Pass  18: suminf.    1.75287 (7) obj. -13.6164 iterations 21
Cbc0038I Pass  19: suminf.    2.06550 (6) obj. -13.6164 iterations 10
Cbc0038I Pass  20: suminf.    1.56166 (5) obj. -13.6164 iterations 2
Cbc0038I Pass  21: suminf.    1.65652 (13) obj. -13.6164 iterations 21
Cbc0038I Pass  22: suminf.    1.41190 (15) obj. -13.6164 iterations 8
Cbc0038I Pass  23: suminf.    1.55066 (7) obj. -13.6164 iterations 22
Cbc0038I Pass  24: suminf.    1.16053 (5) obj. -13.6164 iterations 9
Cbc0038I Pass  25: suminf.    1.48037 (7) obj. -13.6164 iterations 8
Cbc0038I Pass  26: suminf.    1.17492 (6) obj. -13.6164 iterations 8
Cbc0038I Pass  27: suminf.    0.88346 (7) obj. -13.6164 iterations 8
Cbc0038I Pass  28: suminf.    1.02903 (5) obj. -13.6164 iterations 14
Cbc0038I Pass  29: suminf.    0.60540 (3) obj. -13.6164 iterations 4
Cbc0038I Pass  30: suminf.    0.69176 (3) obj. -13.6164 iterations 13
Cbc0038I Rounding solution of -11.0325 is better than previous of -11.0157

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 125 rows 71 columns - 2 fixed gives 114, 69 - ok now
Cbc0038I Full problem 181 rows 100 columns, reduced to 114 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I Round again with cutoff of -18.2977
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.83418 (35) obj. -18.2977 iterations 0
Cbc0038I Pass  31: suminf.    2.80558 (9) obj. -18.2977 iterations 45
Cbc0038I Pass  32: suminf.    2.01097 (8) obj. -18.2977 iterations 8
Cbc0038I Pass  33: suminf.    3.10023 (15) obj. -18.2977 iterations 23
Cbc0038I Pass  34: suminf.    3.06560 (15) obj. -18.2977 iterations 2
Cbc0038I Pass  35: suminf.    1.80898 (7) obj. -18.2977 iterations 23
Cbc0038I Pass  36: suminf.    1.38941 (8) obj. -18.2977 iterations 6
Cbc0038I Pass  37: suminf.    1.76893 (6) obj. -18.2977 iterations 11
Cbc0038I Pass  38: suminf.    1.33942 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  39: suminf.    1.14629 (6) obj. -18.2977 iterations 7
Cbc0038I Pass  40: suminf.    1.11974 (7) obj. -18.2977 iterations 6
Cbc0038I Pass  41: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  42: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  43: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  44: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  45: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  46: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  47: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  48: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  49: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  50: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  51: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  52: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  53: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  54: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  55: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  56: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  57: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  58: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  59: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 116 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -11.0325 - took 0.20 seconds
Cbc0012I Integer solution of -11.03247 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -11.646426 found by RINS after 0 iterations and 0 nodes (0.30 seconds)
Cbc0031I 34 added rows had average density of 63.529412
Cbc0013I At root node, 34 cuts changed objective from -37.022659 to -31.896276 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18523 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2029 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 95.6 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.646426 best solution, best possible -31.896276 (1.60 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 82 rows 48 columns
Cbc0038I Full problem 181 rows 100 columns, reduced to 50 rows 31 columns
Cbc0010I After 156 nodes, 5 on tree, -11.646426 best solution, best possible -31.896055 (2.32 seconds)
Cbc0004I Integer solution of -11.664206 found after 16969 iterations and 212 nodes (2.51 seconds)
Cbc0001I Search completed - best objective -11.664206, took 18000 iterations and 256 nodes (2.58 seconds)
Cbc0032I Strong branching done 2678 times (39610 iterations), fathomed 14 nodes and fixed 95 variables
Cbc0035I Maximum depth 41, 480 variables fixed on reduced cost
Total time (CPU seconds):       2.43   (Wallclock seconds):       2.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-66) rows, 154 (-48) columns and 3171 (-2482) elements
Clp1000I sum of infeasibilities 5.89728e-06 - average 4.27339e-08, 13 fixed columns
Coin0506I Presolve 120 (-18) rows, 138 (-16) columns and 2587 (-584) elements
Clp0006I 0  Obj 67.45494 Dual inf 9.1540339 (138)
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 1.6193939 - largest nonzero change 2.8055885e-05 ( 0.0019214176%) - largest zero change 2.9406922e-05
Clp0000I Optimal - objective value 96.484489
Clp0000I Optimal - objective value 96.484489
Coin0511I After Postsolve, objective 96.484489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 96.484489
Clp0000I Optimal - objective value 96.484489
Clp0000I Optimal - objective value 96.484489
Clp0000I Optimal - objective value 96.484489
Coin0511I After Postsolve, objective 96.484489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.48448881 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 154 columns (154 integer (154 of which binary)) and 3179 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.302%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 4.66057
Cbc0038I Pass   1: suminf.    2.38605 (43) obj. -29.5569 iterations 32
Cbc0038I Pass   2: suminf.    2.38605 (43) obj. -29.5569 iterations 1
Cbc0038I Pass   3: suminf.    1.02956 (24) obj. -2.61495 iterations 19
Cbc0038I Solution found of 23.1822
Cbc0038I Rounding solution of 15.3802 is better than previous of 23.1822

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 154 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 15.3802 to -35.7282 (0.05 seconds)
Cbc0038I Round again with cutoff of -41.4527
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.82529 (47) obj. -41.4527 iterations 3
Cbc0038I Pass   5: suminf.    2.82529 (47) obj. -41.4527 iterations 0
Cbc0038I Pass   6: suminf.    1.92563 (27) obj. -64.5276 iterations 20
Cbc0038I Pass   7: suminf.    0.89853 (5) obj. -41.4527 iterations 38
Cbc0038I Pass   8: suminf.    0.78049 (3) obj. -42.327 iterations 11
Cbc0038I Pass   9: suminf.    0.47398 (3) obj. -41.4527 iterations 8
Cbc0038I Pass  10: suminf.    1.18456 (4) obj. -41.4527 iterations 5
Cbc0038I Pass  11: suminf.    1.08001 (4) obj. -41.4527 iterations 8
Cbc0038I Pass  12: suminf.    1.95722 (19) obj. -41.4527 iterations 40
Cbc0038I Pass  13: suminf.    1.28487 (16) obj. -46.3978 iterations 6
Cbc0038I Pass  14: suminf.    1.10174 (5) obj. -41.4527 iterations 39
Cbc0038I Pass  15: suminf.    1.10174 (5) obj. -41.4527 iterations 0
Cbc0038I Pass  16: suminf.    1.06207 (5) obj. -41.4527 iterations 8
Cbc0038I Pass  17: suminf.    0.67454 (7) obj. -41.4527 iterations 10
Cbc0038I Pass  18: suminf.    1.09203 (5) obj. -41.4527 iterations 12
Cbc0038I Pass  19: suminf.    0.75172 (4) obj. -41.4527 iterations 6
Cbc0038I Pass  20: suminf.    0.80403 (4) obj. -41.4527 iterations 4
Cbc0038I Pass  21: suminf.    0.84477 (16) obj. -41.4527 iterations 32
Cbc0038I Pass  22: suminf.    0.71683 (12) obj. -41.4527 iterations 4
Cbc0038I Pass  23: suminf.    0.83776 (5) obj. -41.4527 iterations 43
Cbc0038I Pass  24: suminf.    0.50545 (5) obj. -41.4527 iterations 10
Cbc0038I Pass  25: suminf.    0.36760 (4) obj. -41.4527 iterations 13
Cbc0038I Pass  26: suminf.    0.34595 (4) obj. -41.4527 iterations 5
Cbc0038I Pass  27: suminf.    1.04418 (5) obj. -41.4527 iterations 10
Cbc0038I Pass  28: suminf.    1.56193 (11) obj. -41.4527 iterations 27
Cbc0038I Pass  29: suminf.    1.23340 (10) obj. -41.4527 iterations 19
Cbc0038I Pass  30: suminf.    0.80015 (9) obj. -43.1857 iterations 3
Cbc0038I Pass  31: suminf.    0.84996 (5) obj. -41.4527 iterations 32
Cbc0038I Pass  32: suminf.    0.74493 (5) obj. -41.4527 iterations 4
Cbc0038I Pass  33: suminf.    0.89519 (8) obj. -41.4527 iterations 25
Cbc0038I Rounding solution of -38.8908 is better than previous of -35.7282

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 154 columns, reduced to 33 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -51.7567
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.58622 (46) obj. -89.1436 iterations 1
Cbc0038I Pass  34: suminf.    2.33868 (33) obj. -71.9576 iterations 13
Cbc0038I Pass  35: suminf.    1.29117 (17) obj. -51.7567 iterations 26
Cbc0038I Pass  36: suminf.    1.39912 (12) obj. -51.7567 iterations 19
Cbc0038I Pass  37: suminf.    1.23070 (12) obj. -51.7567 iterations 7
Cbc0038I Pass  38: suminf.    1.58739 (9) obj. -51.7567 iterations 26
Cbc0038I Pass  39: suminf.    1.41519 (10) obj. -51.7567 iterations 8
Cbc0038I Pass  40: suminf.    1.13500 (9) obj. -51.7567 iterations 10
Cbc0038I Pass  41: suminf.    1.12343 (10) obj. -51.7567 iterations 6
Cbc0038I Pass  42: suminf.    1.13486 (9) obj. -51.7567 iterations 9
Cbc0038I Pass  43: suminf.    1.73649 (19) obj. -51.7567 iterations 34
Cbc0038I Pass  44: suminf.    1.68544 (18) obj. -51.7567 iterations 14
Cbc0038I Pass  45: suminf.    1.44538 (10) obj. -51.7567 iterations 43
Cbc0038I Pass  46: suminf.    1.44538 (10) obj. -51.7567 iterations 0
Cbc0038I Pass  47: suminf.    1.72818 (10) obj. -51.7567 iterations 16
Cbc0038I Pass  48: suminf.    1.47869 (10) obj. -51.7567 iterations 5
Cbc0038I Pass  49: suminf.    1.62023 (10) obj. -51.7567 iterations 25
Cbc0038I Pass  50: suminf.    1.62023 (10) obj. -51.7567 iterations 3
Cbc0038I Pass  51: suminf.    1.62777 (10) obj. -51.7567 iterations 14
Cbc0038I Pass  52: suminf.    1.08574 (11) obj. -51.7567 iterations 9
Cbc0038I Pass  53: suminf.    1.62023 (10) obj. -51.7567 iterations 9
Cbc0038I Pass  54: suminf.    1.50733 (14) obj. -51.7567 iterations 33
Cbc0038I Pass  55: suminf.    0.85830 (15) obj. -51.7567 iterations 16
Cbc0038I Pass  56: suminf.    1.64119 (10) obj. -51.7567 iterations 22
Cbc0038I Pass  57: suminf.    1.24053 (11) obj. -51.7567 iterations 13
Cbc0038I Pass  58: suminf.    1.04814 (11) obj. -51.7567 iterations 7
Cbc0038I Pass  59: suminf.    1.04814 (11) obj. -51.7567 iterations 6
Cbc0038I Pass  60: suminf.    1.09410 (11) obj. -51.7567 iterations 7
Cbc0038I Pass  61: suminf.    1.09410 (11) obj. -51.7567 iterations 6
Cbc0038I Pass  62: suminf.    1.04814 (11) obj. -51.7567 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -38.8908 - took 0.07 seconds
Cbc0012I Integer solution of -38.89082 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 137 rows 154 columns, reduced to 3 rows 3 columns
Cbc0031I 48 added rows had average density of 9.625
Cbc0013I At root node, 48 cuts changed objective from -92.972742 to -40.44681 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 658 row cuts average 18.7 elements, 25 column cuts (25 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 80.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.89082 best solution, best possible -40.44681 (0.30 seconds)
Cbc0012I Integer solution of -38.93284 found by rounding after 292 iterations and 2 nodes (0.46 seconds)
Cbc0010I After 13 nodes, 3 on tree, -38.93284 best solution, best possible -40.44681 (1.01 seconds)
Cbc0001I Search completed - best objective -38.93283999999998, took 643 iterations and 16 nodes (1.06 seconds)
Cbc0032I Strong branching done 136 times (1005 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 5, 99 variables fixed on reduced cost
Total time (CPU seconds):       0.66   (Wallclock seconds):       1.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 8.29941e-05 - average 4.56012e-07, 10 fixed columns
Coin0506I Presolve 159 (-23) rows, 88 (-12) columns and 486 (-70) elements
Clp0029I End of values pass after 88 iterations
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Coin0511I After Postsolve, objective 37.022659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Coin0511I After Postsolve, objective 37.022659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.02265894 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 100 columns (99 integer (99 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.935%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 8.41297
Cbc0038I Solution found of 0.834963
Cbc0038I Relaxing continuous gives -5.53288
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -5.53288 to -11.0157 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.6164
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.79480 (35) obj. -13.6164 iterations 72
Cbc0038I Pass   2: suminf.    1.32084 (7) obj. -13.6164 iterations 33
Cbc0038I Pass   3: suminf.    1.32084 (7) obj. -13.6164 iterations 0
Cbc0038I Pass   4: suminf.    2.17313 (19) obj. -13.6164 iterations 24
Cbc0038I Pass   5: suminf.    3.37634 (9) obj. -13.6164 iterations 37
Cbc0038I Pass   6: suminf.    1.96748 (8) obj. -13.6164 iterations 10
Cbc0038I Pass   7: suminf.    0.95868 (5) obj. -13.6164 iterations 9
Cbc0038I Pass   8: suminf.    0.87213 (4) obj. -13.6164 iterations 3
Cbc0038I Pass   9: suminf.    1.14655 (5) obj. -13.6164 iterations 5
Cbc0038I Pass  10: suminf.    1.07884 (5) obj. -13.6164 iterations 2
Cbc0038I Pass  11: suminf.    1.54862 (6) obj. -13.6164 iterations 9
Cbc0038I Pass  12: suminf.    1.17660 (4) obj. -13.6164 iterations 5
Cbc0038I Pass  13: suminf.    1.17660 (4) obj. -13.6164 iterations 0
Cbc0038I Pass  14: suminf.    0.92842 (3) obj. -13.6164 iterations 8
Cbc0038I Pass  15: suminf.    0.77398 (4) obj. -13.6164 iterations 3
Cbc0038I Pass  16: suminf.    1.17660 (4) obj. -13.6164 iterations 5
Cbc0038I Pass  17: suminf.    2.64967 (10) obj. -13.6164 iterations 35
Cbc0038I Pass  18: suminf.    1.75287 (7) obj. -13.6164 iterations 21
Cbc0038I Pass  19: suminf.    2.06550 (6) obj. -13.6164 iterations 10
Cbc0038I Pass  20: suminf.    1.56166 (5) obj. -13.6164 iterations 2
Cbc0038I Pass  21: suminf.    1.65652 (13) obj. -13.6164 iterations 21
Cbc0038I Pass  22: suminf.    1.41190 (15) obj. -13.6164 iterations 8
Cbc0038I Pass  23: suminf.    1.55066 (7) obj. -13.6164 iterations 22
Cbc0038I Pass  24: suminf.    1.16053 (5) obj. -13.6164 iterations 9
Cbc0038I Pass  25: suminf.    1.48037 (7) obj. -13.6164 iterations 8
Cbc0038I Pass  26: suminf.    1.17492 (6) obj. -13.6164 iterations 8
Cbc0038I Pass  27: suminf.    0.88346 (7) obj. -13.6164 iterations 8
Cbc0038I Pass  28: suminf.    1.02903 (5) obj. -13.6164 iterations 14
Cbc0038I Pass  29: suminf.    0.60540 (3) obj. -13.6164 iterations 4
Cbc0038I Pass  30: suminf.    0.69176 (3) obj. -13.6164 iterations 13
Cbc0038I Rounding solution of -11.0325 is better than previous of -11.0157

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 125 rows 71 columns - 2 fixed gives 114, 69 - ok now
Cbc0038I Full problem 181 rows 100 columns, reduced to 114 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -18.2977
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.83418 (35) obj. -18.2977 iterations 0
Cbc0038I Pass  31: suminf.    2.80558 (9) obj. -18.2977 iterations 45
Cbc0038I Pass  32: suminf.    2.01097 (8) obj. -18.2977 iterations 8
Cbc0038I Pass  33: suminf.    3.10023 (15) obj. -18.2977 iterations 23
Cbc0038I Pass  34: suminf.    3.06560 (15) obj. -18.2977 iterations 2
Cbc0038I Pass  35: suminf.    1.80898 (7) obj. -18.2977 iterations 23
Cbc0038I Pass  36: suminf.    1.38941 (8) obj. -18.2977 iterations 6
Cbc0038I Pass  37: suminf.    1.76893 (6) obj. -18.2977 iterations 11
Cbc0038I Pass  38: suminf.    1.33942 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  39: suminf.    1.14629 (6) obj. -18.2977 iterations 7
Cbc0038I Pass  40: suminf.    1.11974 (7) obj. -18.2977 iterations 6
Cbc0038I Pass  41: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  42: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  43: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  44: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  45: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  46: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  47: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  48: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  49: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  50: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  51: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  52: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  53: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  54: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  55: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  56: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  57: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  58: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  59: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 116 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -11.0325 - took 0.19 seconds
Cbc0012I Integer solution of -11.03247 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -11.646426 found by RINS after 0 iterations and 0 nodes (0.28 seconds)
Cbc0031I 34 added rows had average density of 63.529412
Cbc0013I At root node, 34 cuts changed objective from -37.022659 to -31.896276 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18523 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2029 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 95.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.646426 best solution, best possible -31.896276 (1.63 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 82 rows 48 columns
Cbc0038I Full problem 181 rows 100 columns, reduced to 50 rows 31 columns
Cbc0010I After 152 nodes, 1 on tree, -11.646426 best solution, best possible -31.896055 (2.34 seconds)
Cbc0004I Integer solution of -11.664206 found after 16969 iterations and 212 nodes (2.58 seconds)
Cbc0001I Search completed - best objective -11.664206, took 18000 iterations and 256 nodes (2.65 seconds)
Cbc0032I Strong branching done 2678 times (39610 iterations), fathomed 14 nodes and fixed 95 variables
Cbc0035I Maximum depth 41, 480 variables fixed on reduced cost
Total time (CPU seconds):       2.54   (Wallclock seconds):       2.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-68) rows, 153 (-50) columns and 3119 (-2535) elements
Clp1000I sum of infeasibilities 1.57021e-06 - average 1.14614e-08, 12 fixed columns
Coin0506I Presolve 124 (-13) rows, 140 (-13) columns and 2648 (-471) elements
Clp0006I 0  Obj 10.324582 Dual inf 9.350953 (140)
Clp0029I End of values pass after 140 iterations
Clp0014I Perturbing problem by 0.001% of 2.0898531 - largest nonzero change 2.4231407e-05 ( 0.0016594968%) - largest zero change 2.9406922e-05
Clp0000I Optimal - objective value 45.627034
Clp0000I Optimal - objective value 45.627034
Coin0511I After Postsolve, objective 45.627034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 45.627034
Clp0000I Optimal - objective value 45.627034
Clp0000I Optimal - objective value 45.627034
Clp0000I Optimal - objective value 45.627034
Coin0511I After Postsolve, objective 45.627034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.6270339 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 153 columns (153 integer (153 of which binary)) and 3126 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.278%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 4.62099
Cbc0038I Pass   1: suminf.    3.56402 (43) obj. -36.7725 iterations 24
Cbc0038I Pass   2: suminf.    2.58086 (33) obj. -24.15 iterations 10
Cbc0038I Pass   3: suminf.    0.44630 (8) obj. 3.27166 iterations 25
Cbc0038I Solution found of 11.7629
Cbc0038I Rounding solution of 8.66354 is better than previous of 11.7629

Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 3.69183
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.56402 (43) obj. -36.7725 iterations 0
Cbc0038I Pass   5: suminf.    2.29957 (30) obj. -21.4313 iterations 13
Cbc0038I Pass   6: suminf.    0.89175 (14) obj. -2.28289 iterations 16
Cbc0038I Pass   7: suminf.    0.76633 (8) obj. 3.69183 iterations 36
Cbc0038I Pass   8: suminf.    0.76633 (8) obj. 3.69183 iterations 0
Cbc0038I Pass   9: suminf.    1.24595 (7) obj. 3.69183 iterations 8
Cbc0038I Pass  10: suminf.    1.13336 (4) obj. 3.69183 iterations 4
Cbc0038I Pass  11: suminf.    0.56586 (4) obj. 3.69183 iterations 3
Cbc0038I Pass  12: suminf.    0.83109 (6) obj. 3.69183 iterations 6
Cbc0038I Pass  13: suminf.    0.76633 (8) obj. 3.69183 iterations 5
Cbc0038I Pass  14: suminf.    1.24595 (7) obj. 3.69183 iterations 9
Cbc0038I Pass  15: suminf.    1.13336 (4) obj. 3.69183 iterations 4
Cbc0038I Pass  16: suminf.    0.56586 (4) obj. 3.69183 iterations 3
Cbc0038I Pass  17: suminf.    0.83109 (6) obj. 3.69183 iterations 7
Cbc0038I Pass  18: suminf.    0.76633 (8) obj. 3.69183 iterations 5
Cbc0038I Pass  19: suminf.    1.24595 (7) obj. 3.69183 iterations 9
Cbc0038I Pass  20: suminf.    1.13336 (4) obj. 3.69183 iterations 4
Cbc0038I Pass  21: suminf.    0.56586 (4) obj. 3.69183 iterations 3
Cbc0038I Pass  22: suminf.    0.83109 (6) obj. 3.69183 iterations 7
Cbc0038I Pass  23: suminf.    0.76633 (8) obj. 3.69183 iterations 5
Cbc0038I Pass  24: suminf.    1.24595 (7) obj. 3.69183 iterations 10
Cbc0038I Pass  25: suminf.    1.13336 (4) obj. 3.69183 iterations 4
Cbc0038I Pass  26: suminf.    0.56586 (4) obj. 3.69183 iterations 3
Cbc0038I Pass  27: suminf.    0.83109 (6) obj. 3.69183 iterations 7
Cbc0038I Pass  28: suminf.    0.76633 (8) obj. 3.69183 iterations 5
Cbc0038I Pass  29: suminf.    1.24595 (7) obj. 3.69183 iterations 9
Cbc0038I Pass  30: suminf.    1.13336 (4) obj. 3.69183 iterations 4
Cbc0038I Pass  31: suminf.    0.56586 (4) obj. 3.69183 iterations 3
Cbc0038I Pass  32: suminf.    0.83109 (6) obj. 3.69183 iterations 7
Cbc0038I Pass  33: suminf.    0.76633 (8) obj. 3.69183 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 8.66354 - took 0.03 seconds
Cbc0012I Integer solution of 8.663544 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -0.796117 found by DiveCoefficient after 6318 iterations and 0 nodes (3.03 seconds)
Cbc0031I 64 added rows had average density of 41.78125
Cbc0013I At root node, 64 cuts changed objective from -41.052723 to -20.566699 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15636 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.291 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2028 row cuts average 137.8 elements, 0 column cuts (0 active)  in 0.239 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 787 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1438 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 387 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 273 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.491 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -0.796117 best solution, best possible -20.566699 (3.14 seconds)
Cbc0012I Integer solution of -10.872703 found by rounding after 6447 iterations and 1 nodes (3.16 seconds)
Cbc0012I Integer solution of -11.646426 found by DiveCoefficient after 6630 iterations and 4 nodes (3.52 seconds)
Cbc0010I After 8 nodes, 6 on tree, -11.646426 best solution, best possible -20.566699 (3.88 seconds)
Cbc0004I Integer solution of -11.64976 found after 6767 iterations and 12 nodes (4.18 seconds)
Cbc0010I After 14 nodes, 1 on tree, -11.64976 best solution, best possible -20.15551 (4.80 seconds)
Cbc0010I After 22 nodes, 7 on tree, -11.64976 best solution, best possible -20.15551 (5.57 seconds)
Cbc0010I After 40 nodes, 7 on tree, -11.64976 best solution, best possible -20.15551 (6.33 seconds)
Cbc0038I Full problem 136 rows 153 columns, reduced to 32 rows 43 columns
Cbc0012I Integer solution of -11.664206 found by RINS after 8619 iterations and 42 nodes (6.77 seconds)
Cbc0010I After 48 nodes, 8 on tree, -11.664206 best solution, best possible -20.15551 (7.07 seconds)
Cbc0010I After 57 nodes, 9 on tree, -11.664206 best solution, best possible -20.15551 (7.79 seconds)
Cbc0010I After 71 nodes, 4 on tree, -11.664206 best solution, best possible -20.15551 (8.64 seconds)
Cbc0010I After 80 nodes, 3 on tree, -11.664206 best solution, best possible -20.15551 (9.37 seconds)
Cbc0010I After 82 nodes, 3 on tree, -11.664206 best solution, best possible -20.15551 (10.11 seconds)
Cbc0010I After 89 nodes, 6 on tree, -11.664206 best solution, best possible -20.15551 (10.89 seconds)
Cbc0038I Full problem 136 rows 153 columns, reduced to 94 rows 108 columns
Cbc0010I After 92 nodes, 5 on tree, -11.664206 best solution, best possible -20.15551 (11.77 seconds)
Cbc0010I After 101 nodes, 8 on tree, -11.664206 best solution, best possible -20.15551 (12.49 seconds)
Cbc0010I After 110 nodes, 8 on tree, -11.664206 best solution, best possible -20.15551 (13.22 seconds)
Cbc0010I After 126 nodes, 8 on tree, -11.664206 best solution, best possible -20.15551 (13.93 seconds)
Cbc0010I After 136 nodes, 7 on tree, -11.664206 best solution, best possible -20.15551 (14.75 seconds)
Cbc0001I Search completed - best objective -11.664206, took 15587 iterations and 148 nodes (15.24 seconds)
Cbc0032I Strong branching done 1824 times (35381 iterations), fathomed 21 nodes and fixed 10 variables
Cbc0035I Maximum depth 24, 222 variables fixed on reduced cost
Total time (CPU seconds):       11.04   (Wallclock seconds):       15.28

