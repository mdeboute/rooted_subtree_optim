Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-31) rows, 36 (-14) columns and 200 (-85) elements
Clp1000I sum of infeasibilities 0.00101132 - average 1.48724e-05, 12 fixed columns
Coin0506I Presolve 42 (-26) rows, 23 (-13) columns and 123 (-77) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 3880.2367
Clp0000I Optimal - objective value 3880.2367
Coin0511I After Postsolve, objective 3880.2367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7027054 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 3880.2367
Clp0000I Optimal - objective value 3880.2367
Clp0000I Optimal - objective value 3880.2367
Coin0511I After Postsolve, objective 3880.2367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3880.23666 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 68 rows, 36 columns (35 integer (35 of which binary)) and 200 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.511%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.248
Cbc0038I Pass   1: suminf.    1.00000 (4) obj. -1329.64 iterations 23
Cbc0038I Pass   2: suminf.    1.00000 (4) obj. -1329.64 iterations 0
Cbc0038I Solution found of -33.856
Cbc0038I Relaxing continuous gives -33.856
Cbc0038I Rounding solution of -1099.88 is better than previous of -33.856

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 36 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1099.88 to -2645.34 (0.01 seconds)
Cbc0038I Round again with cutoff of -2766.94
Cbc0038I Pass   3: suminf.    2.00000 (11) obj. -2766.94 iterations 7
Cbc0038I Pass   4: suminf.    2.00000 (11) obj. -2766.94 iterations 0
Cbc0038I Pass   5: suminf.    2.80362 (14) obj. -2766.94 iterations 18
Cbc0038I Pass   6: suminf.    0.55113 (5) obj. -2766.94 iterations 11
Cbc0038I Pass   7: suminf.    1.73122 (9) obj. -2766.94 iterations 9
Cbc0038I Pass   8: suminf.    2.38853 (14) obj. -2766.94 iterations 12
Cbc0038I Pass   9: suminf.    1.16952 (11) obj. -2766.94 iterations 8
Cbc0038I Pass  10: suminf.    1.16952 (11) obj. -2766.94 iterations 0
Cbc0038I Pass  11: suminf.    2.18441 (10) obj. -2766.94 iterations 16
Cbc0038I Pass  12: suminf.    0.55113 (5) obj. -2766.94 iterations 6
Cbc0038I Pass  13: suminf.    1.73122 (9) obj. -2766.94 iterations 8
Cbc0038I Pass  14: suminf.    1.20310 (6) obj. -2766.94 iterations 8
Cbc0038I Pass  15: suminf.    1.00000 (6) obj. -2766.94 iterations 2
Cbc0038I Pass  16: suminf.    0.27448 (4) obj. -2766.94 iterations 4
Cbc0038I Pass  17: suminf.    0.13724 (3) obj. -2766.94 iterations 2
Cbc0038I Pass  18: suminf.    0.89624 (5) obj. -2766.94 iterations 5
Cbc0038I Pass  19: suminf.    0.55113 (5) obj. -2766.94 iterations 1
Cbc0038I Pass  20: suminf.    1.73122 (9) obj. -2766.94 iterations 8
Cbc0038I Pass  21: suminf.    2.20084 (14) obj. -2766.94 iterations 8
Cbc0038I Pass  22: suminf.    1.26610 (11) obj. -2766.94 iterations 4
Cbc0038I Pass  23: suminf.    1.04348 (9) obj. -2766.94 iterations 2
Cbc0038I Pass  24: suminf.    2.01365 (10) obj. -2766.94 iterations 11
Cbc0038I Pass  25: suminf.    0.42021 (5) obj. -2766.94 iterations 8
Cbc0038I Pass  26: suminf.    0.92342 (8) obj. -2766.94 iterations 8
Cbc0038I Pass  27: suminf.    0.70077 (5) obj. -2766.94 iterations 3
Cbc0038I Pass  28: suminf.    1.86174 (8) obj. -2766.94 iterations 7
Cbc0038I Pass  29: suminf.    0.53292 (5) obj. -2766.94 iterations 10
Cbc0038I Pass  30: suminf.    0.51785 (5) obj. -2766.94 iterations 3
Cbc0038I Pass  31: suminf.    0.92342 (8) obj. -2766.94 iterations 8
Cbc0038I Pass  32: suminf.    0.70077 (5) obj. -2766.94 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 36 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2645.34 - took 0.02 seconds
Cbc0012I Integer solution of -2645.343 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 68 rows 36 columns, reduced to 32 rows 20 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 9.25
Cbc0013I At root node, 6 cuts changed objective from -3861.3514 to -2645.343 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 241 row cuts average 3.4 elements, 6 column cuts (6 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 49 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2645.343, took 138 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-18) rows, 82 (-14) columns and 918 (-495) elements
Clp1000I sum of infeasibilities 2.83984e-09 - average 3.5498e-11, 35 fixed columns
Coin0506I Presolve 34 (-46) rows, 35 (-47) columns and 128 (-790) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 6171.252
Clp0000I Optimal - objective value 6171.252
Coin0511I After Postsolve, objective 6171.252, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9014725 - largest nonzero change 3.0702612e-05 ( 0.0023661176%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 6171.252
Clp0000I Optimal - objective value 6171.252
Clp0000I Optimal - objective value 6171.252
Coin0511I After Postsolve, objective 6171.252, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6171.25199 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 82 columns (82 integer (82 of which binary)) and 920 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 14.1242
Cbc0038I Pass   1: suminf.    3.99930 (23) obj. -2246.69 iterations 20
Cbc0038I Pass   2: suminf.    3.99930 (23) obj. -2246.69 iterations 1
Cbc0038I Pass   3: suminf.    0.15774 (2) obj. -444.445 iterations 21
Cbc0038I Solution found of -343.207
Cbc0038I Rounding solution of -898.201 is better than previous of -343.207

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 82 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -898.201 to -2597.31 (0.02 seconds)
Cbc0038I Round again with cutoff of -2793.88
Cbc0038I Pass   4: suminf.    5.54360 (29) obj. -2793.88 iterations 8
Cbc0038I Pass   5: suminf.    5.26785 (27) obj. -2793.88 iterations 1
Cbc0038I Pass   6: suminf.    1.94334 (10) obj. -2793.88 iterations 21
Cbc0038I Pass   7: suminf.    1.94334 (10) obj. -2793.88 iterations 0
Cbc0038I Pass   8: suminf.    1.26416 (5) obj. -2793.88 iterations 11
Cbc0038I Pass   9: suminf.    1.26416 (5) obj. -2793.88 iterations 0
Cbc0038I Pass  10: suminf.    0.59881 (3) obj. -2793.88 iterations 7
Cbc0038I Pass  11: suminf.    0.59881 (3) obj. -2793.88 iterations 1
Cbc0038I Pass  12: suminf.    0.80594 (3) obj. -2793.88 iterations 2
Cbc0038I Pass  13: suminf.    0.80594 (3) obj. -2793.88 iterations 0
Cbc0038I Pass  14: suminf.    0.59881 (3) obj. -2793.88 iterations 1
Cbc0038I Pass  15: suminf.    1.56255 (10) obj. -2793.88 iterations 15
Cbc0038I Pass  16: suminf.    1.56255 (10) obj. -2793.88 iterations 4
Cbc0038I Pass  17: suminf.    0.99746 (7) obj. -2793.88 iterations 3
Cbc0038I Pass  18: suminf.    0.99746 (7) obj. -2793.88 iterations 0
Cbc0038I Pass  19: suminf.    0.45267 (2) obj. -2793.88 iterations 8
Cbc0038I Pass  20: suminf.    0.42648 (2) obj. -2793.88 iterations 1
Cbc0038I Pass  21: suminf.    3.52291 (14) obj. -2793.88 iterations 20
Cbc0038I Pass  22: suminf.    2.86374 (9) obj. -2862.31 iterations 6
Cbc0038I Pass  23: suminf.    0.83928 (2) obj. -2793.88 iterations 14
Cbc0038I Pass  24: suminf.    0.83928 (2) obj. -2793.88 iterations 0
Cbc0038I Pass  25: suminf.    0.86713 (2) obj. -2793.88 iterations 1
Cbc0038I Pass  26: suminf.    0.77629 (2) obj. -2870.72 iterations 5
Cbc0038I Pass  27: suminf.    3.82155 (12) obj. -2793.88 iterations 35
Cbc0038I Pass  28: suminf.    3.82155 (12) obj. -2793.88 iterations 3
Cbc0038I Pass  29: suminf.    1.33255 (5) obj. -2793.88 iterations 13
Cbc0038I Pass  30: suminf.    1.33255 (5) obj. -2793.88 iterations 0
Cbc0038I Pass  31: suminf.    1.33512 (5) obj. -2793.88 iterations 5
Cbc0038I Pass  32: suminf.    1.33512 (5) obj. -2793.88 iterations 0
Cbc0038I Pass  33: suminf.    1.33255 (5) obj. -2793.88 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2597.31 - took 0.02 seconds
Cbc0012I Integer solution of -2597.315 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 80 rows 82 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of -2645.343 found by DiveCoefficient after 50 iterations and 0 nodes (0.05 seconds)
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from -4562.9332 to -2645.343 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 291 row cuts average 2.0 elements, 31 column cuts (31 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2645.343, took 50 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-31) rows, 36 (-14) columns and 200 (-85) elements
Clp1000I sum of infeasibilities 0.00101132 - average 1.48724e-05, 12 fixed columns
Coin0506I Presolve 42 (-26) rows, 23 (-13) columns and 123 (-77) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 3880.2367
Clp0000I Optimal - objective value 3880.2367
Coin0511I After Postsolve, objective 3880.2367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7027054 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 3880.2367
Clp0000I Optimal - objective value 3880.2367
Clp0000I Optimal - objective value 3880.2367
Coin0511I After Postsolve, objective 3880.2367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3880.23666 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 68 rows, 36 columns (35 integer (35 of which binary)) and 200 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.511%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.248
Cbc0038I Pass   1: suminf.    1.00000 (4) obj. -1329.64 iterations 23
Cbc0038I Pass   2: suminf.    1.00000 (4) obj. -1329.64 iterations 0
Cbc0038I Solution found of -33.856
Cbc0038I Relaxing continuous gives -33.856
Cbc0038I Rounding solution of -1099.88 is better than previous of -33.856

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 36 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1099.88 to -2645.34 (0.01 seconds)
Cbc0038I Round again with cutoff of -2766.94
Cbc0038I Pass   3: suminf.    2.00000 (11) obj. -2766.94 iterations 7
Cbc0038I Pass   4: suminf.    2.00000 (11) obj. -2766.94 iterations 0
Cbc0038I Pass   5: suminf.    2.80362 (14) obj. -2766.94 iterations 18
Cbc0038I Pass   6: suminf.    0.55113 (5) obj. -2766.94 iterations 11
Cbc0038I Pass   7: suminf.    1.73122 (9) obj. -2766.94 iterations 9
Cbc0038I Pass   8: suminf.    2.38853 (14) obj. -2766.94 iterations 12
Cbc0038I Pass   9: suminf.    1.16952 (11) obj. -2766.94 iterations 8
Cbc0038I Pass  10: suminf.    1.16952 (11) obj. -2766.94 iterations 0
Cbc0038I Pass  11: suminf.    2.18441 (10) obj. -2766.94 iterations 16
Cbc0038I Pass  12: suminf.    0.55113 (5) obj. -2766.94 iterations 6
Cbc0038I Pass  13: suminf.    1.73122 (9) obj. -2766.94 iterations 8
Cbc0038I Pass  14: suminf.    1.20310 (6) obj. -2766.94 iterations 8
Cbc0038I Pass  15: suminf.    1.00000 (6) obj. -2766.94 iterations 2
Cbc0038I Pass  16: suminf.    0.27448 (4) obj. -2766.94 iterations 4
Cbc0038I Pass  17: suminf.    0.13724 (3) obj. -2766.94 iterations 2
Cbc0038I Pass  18: suminf.    0.89624 (5) obj. -2766.94 iterations 5
Cbc0038I Pass  19: suminf.    0.55113 (5) obj. -2766.94 iterations 1
Cbc0038I Pass  20: suminf.    1.73122 (9) obj. -2766.94 iterations 8
Cbc0038I Pass  21: suminf.    2.20084 (14) obj. -2766.94 iterations 8
Cbc0038I Pass  22: suminf.    1.26610 (11) obj. -2766.94 iterations 4
Cbc0038I Pass  23: suminf.    1.04348 (9) obj. -2766.94 iterations 2
Cbc0038I Pass  24: suminf.    2.01365 (10) obj. -2766.94 iterations 11
Cbc0038I Pass  25: suminf.    0.42021 (5) obj. -2766.94 iterations 8
Cbc0038I Pass  26: suminf.    0.92342 (8) obj. -2766.94 iterations 8
Cbc0038I Pass  27: suminf.    0.70077 (5) obj. -2766.94 iterations 3
Cbc0038I Pass  28: suminf.    1.86174 (8) obj. -2766.94 iterations 7
Cbc0038I Pass  29: suminf.    0.53292 (5) obj. -2766.94 iterations 10
Cbc0038I Pass  30: suminf.    0.51785 (5) obj. -2766.94 iterations 3
Cbc0038I Pass  31: suminf.    0.92342 (8) obj. -2766.94 iterations 8
Cbc0038I Pass  32: suminf.    0.70077 (5) obj. -2766.94 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 36 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2645.34 - took 0.02 seconds
Cbc0012I Integer solution of -2645.343 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 68 rows 36 columns, reduced to 32 rows 20 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 9.25
Cbc0013I At root node, 6 cuts changed objective from -3861.3514 to -2645.343 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 241 row cuts average 3.4 elements, 6 column cuts (6 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 49 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2645.343, took 138 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-19) rows, 82 (-15) columns and 918 (-496) elements
Clp1000I sum of infeasibilities 2.83984e-09 - average 3.5498e-11, 35 fixed columns
Coin0506I Presolve 34 (-46) rows, 35 (-47) columns and 128 (-790) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 6171.252
Clp0000I Optimal - objective value 6171.252
Coin0511I After Postsolve, objective 6171.252, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9014725 - largest nonzero change 3.0702612e-05 ( 0.0023661176%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 6171.252
Clp0000I Optimal - objective value 6171.252
Clp0000I Optimal - objective value 6171.252
Coin0511I After Postsolve, objective 6171.252, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6171.25199 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 82 columns (82 integer (82 of which binary)) and 920 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 14.1242
Cbc0038I Pass   1: suminf.    3.99930 (23) obj. -2246.69 iterations 20
Cbc0038I Pass   2: suminf.    3.99930 (23) obj. -2246.69 iterations 1
Cbc0038I Pass   3: suminf.    0.15774 (2) obj. -444.445 iterations 21
Cbc0038I Solution found of -343.207
Cbc0038I Rounding solution of -898.201 is better than previous of -343.207

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 82 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -898.201 to -2597.31 (0.02 seconds)
Cbc0038I Round again with cutoff of -2793.88
Cbc0038I Pass   4: suminf.    5.54360 (29) obj. -2793.88 iterations 8
Cbc0038I Pass   5: suminf.    5.26785 (27) obj. -2793.88 iterations 1
Cbc0038I Pass   6: suminf.    1.94334 (10) obj. -2793.88 iterations 21
Cbc0038I Pass   7: suminf.    1.94334 (10) obj. -2793.88 iterations 0
Cbc0038I Pass   8: suminf.    1.26416 (5) obj. -2793.88 iterations 11
Cbc0038I Pass   9: suminf.    1.26416 (5) obj. -2793.88 iterations 0
Cbc0038I Pass  10: suminf.    0.59881 (3) obj. -2793.88 iterations 7
Cbc0038I Pass  11: suminf.    0.59881 (3) obj. -2793.88 iterations 1
Cbc0038I Pass  12: suminf.    0.80594 (3) obj. -2793.88 iterations 2
Cbc0038I Pass  13: suminf.    0.80594 (3) obj. -2793.88 iterations 0
Cbc0038I Pass  14: suminf.    0.59881 (3) obj. -2793.88 iterations 1
Cbc0038I Pass  15: suminf.    1.56255 (10) obj. -2793.88 iterations 15
Cbc0038I Pass  16: suminf.    1.56255 (10) obj. -2793.88 iterations 4
Cbc0038I Pass  17: suminf.    0.99746 (7) obj. -2793.88 iterations 3
Cbc0038I Pass  18: suminf.    0.99746 (7) obj. -2793.88 iterations 0
Cbc0038I Pass  19: suminf.    0.45267 (2) obj. -2793.88 iterations 8
Cbc0038I Pass  20: suminf.    0.42648 (2) obj. -2793.88 iterations 1
Cbc0038I Pass  21: suminf.    3.52291 (14) obj. -2793.88 iterations 20
Cbc0038I Pass  22: suminf.    2.86374 (9) obj. -2862.31 iterations 6
Cbc0038I Pass  23: suminf.    0.83928 (2) obj. -2793.88 iterations 14
Cbc0038I Pass  24: suminf.    0.83928 (2) obj. -2793.88 iterations 0
Cbc0038I Pass  25: suminf.    0.86713 (2) obj. -2793.88 iterations 1
Cbc0038I Pass  26: suminf.    0.77629 (2) obj. -2870.72 iterations 5
Cbc0038I Pass  27: suminf.    3.82155 (12) obj. -2793.88 iterations 35
Cbc0038I Pass  28: suminf.    3.82155 (12) obj. -2793.88 iterations 3
Cbc0038I Pass  29: suminf.    1.33255 (5) obj. -2793.88 iterations 13
Cbc0038I Pass  30: suminf.    1.33255 (5) obj. -2793.88 iterations 0
Cbc0038I Pass  31: suminf.    1.33512 (5) obj. -2793.88 iterations 5
Cbc0038I Pass  32: suminf.    1.33512 (5) obj. -2793.88 iterations 0
Cbc0038I Pass  33: suminf.    1.33255 (5) obj. -2793.88 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2597.31 - took 0.02 seconds
Cbc0012I Integer solution of -2597.315 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 80 rows 82 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of -2645.343 found by DiveCoefficient after 50 iterations and 0 nodes (0.05 seconds)
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from -4562.9332 to -2645.343 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 291 row cuts average 2.0 elements, 31 column cuts (31 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2645.343, took 50 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

