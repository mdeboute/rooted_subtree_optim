Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 507 (-20) rows, 260 (-4) columns and 1503 (-42) elements
Clp1000I sum of infeasibilities 1.3421e-05 - average 2.64714e-08, 161 fixed columns
Coin0506I Presolve 182 (-325) rows, 99 (-161) columns and 544 (-959) elements
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.6286078 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Coin0511I After Postsolve, objective 230.10277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13475134 - largest nonzero change 0 ( 0%) - largest zero change 2.9764379e-05
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Coin0511I After Postsolve, objective 230.10277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 230.1027692 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 507 rows, 260 columns (259 integer (259 of which binary)) and 1503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.373%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 12.1685
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.4775 iterations 190
Cbc0038I Solution found of 10.4775
Cbc0038I Relaxing continuous gives 10.4775
Cbc0038I Rounding solution of -104.692 is better than previous of 10.4775

Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 96 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -104.692 to -138.423 (0.07 seconds)
Cbc0038I Round again with cutoff of -147.591
Cbc0038I Pass   2: suminf.    2.89114 (7) obj. -147.591 iterations 41
Cbc0038I Pass   3: suminf.    2.89114 (7) obj. -147.591 iterations 0
Cbc0038I Pass   4: suminf.    2.11551 (7) obj. -147.591 iterations 31
Cbc0038I Pass   5: suminf.    2.11551 (7) obj. -147.591 iterations 0
Cbc0038I Pass   6: suminf.    2.89114 (7) obj. -147.591 iterations 35
Cbc0038I Pass   7: suminf.    6.78986 (24) obj. -147.591 iterations 91
Cbc0038I Pass   8: suminf.    1.56285 (8) obj. -147.591 iterations 98
Cbc0038I Pass   9: suminf.    1.30334 (6) obj. -147.591 iterations 20
Cbc0038I Pass  10: suminf.    2.47232 (7) obj. -147.591 iterations 32
Cbc0038I Pass  11: suminf.    2.37726 (6) obj. -147.591 iterations 18
Cbc0038I Pass  12: suminf.    1.49290 (5) obj. -147.591 iterations 22
Cbc0038I Pass  13: suminf.    1.49290 (5) obj. -147.591 iterations 0
Cbc0038I Pass  14: suminf.    2.22859 (5) obj. -147.591 iterations 16
Cbc0038I Pass  15: suminf.    2.22859 (5) obj. -147.591 iterations 0
Cbc0038I Pass  16: suminf.    1.18709 (4) obj. -147.591 iterations 16
Cbc0038I Pass  17: suminf.    0.99129 (4) obj. -147.591 iterations 11
Cbc0038I Pass  18: suminf.    1.03398 (4) obj. -147.591 iterations 14
Cbc0038I Pass  19: suminf.    1.03398 (4) obj. -147.591 iterations 7
Cbc0038I Pass  20: suminf.    1.13796 (4) obj. -147.591 iterations 13
Cbc0038I Pass  21: suminf.    5.67331 (19) obj. -147.591 iterations 41
Cbc0038I Pass  22: suminf.    2.00454 (7) obj. -147.591 iterations 49
Cbc0038I Pass  23: suminf.    1.81170 (8) obj. -147.591 iterations 14
Cbc0038I Pass  24: suminf.    2.26403 (9) obj. -147.591 iterations 41
Cbc0038I Pass  25: suminf.    2.26175 (7) obj. -147.591 iterations 3
Cbc0038I Pass  26: suminf.    2.79453 (8) obj. -147.591 iterations 23
Cbc0038I Pass  27: suminf.    2.26344 (7) obj. -147.591 iterations 27
Cbc0038I Pass  28: suminf.    2.66005 (9) obj. -147.591 iterations 15
Cbc0038I Pass  29: suminf.    2.11008 (7) obj. -147.591 iterations 16
Cbc0038I Pass  30: suminf.    1.97954 (7) obj. -147.591 iterations 21
Cbc0038I Pass  31: suminf.    2.51014 (7) obj. -147.591 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 161 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -138.423 to -142.695 (0.16 seconds)
Cbc0038I Round again with cutoff of -164.093
Cbc0038I Pass  31: suminf.    3.48883 (11) obj. -164.093 iterations 5
Cbc0038I Pass  32: suminf.    3.48883 (11) obj. -164.093 iterations 0
Cbc0038I Pass  33: suminf.    4.08299 (11) obj. -164.093 iterations 36
Cbc0038I Pass  34: suminf.    2.15106 (13) obj. -164.093 iterations 40
Cbc0038I Pass  35: suminf.    2.47549 (9) obj. -164.093 iterations 41
Cbc0038I Pass  36: suminf.    1.87013 (8) obj. -164.093 iterations 7
Cbc0038I Pass  37: suminf.    1.81328 (6) obj. -164.093 iterations 3
Cbc0038I Pass  38: suminf.    2.56161 (9) obj. -164.093 iterations 48
Cbc0038I Pass  39: suminf.    1.69368 (8) obj. -164.093 iterations 34
Cbc0038I Pass  40: suminf.    2.24261 (8) obj. -164.093 iterations 25
Cbc0038I Pass  41: suminf.    1.89451 (7) obj. -164.093 iterations 36
Cbc0038I Pass  42: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  43: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  44: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  45: suminf.    2.40114 (11) obj. -164.093 iterations 50
Cbc0038I Pass  46: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  47: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  48: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  49: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  50: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  51: suminf.    2.40114 (11) obj. -164.093 iterations 50
Cbc0038I Pass  52: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  53: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  54: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  55: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  56: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  57: suminf.    2.40114 (11) obj. -164.093 iterations 52
Cbc0038I Pass  58: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  59: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  60: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 113 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of -142.695 - took 0.23 seconds
Cbc0012I Integer solution of -142.69497 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 98 rows 54 columns
Cbc0012I Integer solution of -144.7338 found by RINS after 0 iterations and 0 nodes (0.31 seconds)
Cbc0031I 30 added rows had average density of 121.26667
Cbc0013I At root node, 30 cuts changed objective from -230.10277 to -207.21049 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22189 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.445 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2165 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.365 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.302 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 248.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -144.7338 best solution, best possible -207.21049 (3.46 seconds)
Cbc0010I After 30 nodes, 9 on tree, -144.7338 best solution, best possible -207.21049 (4.17 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 118 rows 66 columns
Cbc0012I Integer solution of -159.69721 found by RINS after 12951 iterations and 41 nodes (4.34 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 108 rows 60 columns
Cbc0010I After 140 nodes, 11 on tree, -159.69721 best solution, best possible -207.21049 (4.87 seconds)
Cbc0001I Search completed - best objective -159.69721, took 18506 iterations and 172 nodes (5.05 seconds)
Cbc0032I Strong branching done 1720 times (47900 iterations), fathomed 15 nodes and fixed 42 variables
Cbc0035I Maximum depth 63, 951 variables fixed on reduced cost
Total time (CPU seconds):       4.94   (Wallclock seconds):       5.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 398 (-128) rows, 409 (-115) columns and 20992 (-14744) elements
Clp1000I sum of infeasibilities 6.37067e-06 - average 1.60067e-08, 208 fixed columns
Coin0506I Presolve 175 (-223) rows, 199 (-210) columns and 731 (-20261) elements
Clp0006I 0  Obj 73.27842 Dual inf 37.423015 (192)
Clp0029I End of values pass after 199 iterations
Clp0014I Perturbing problem by 0.001% of 1.3830257 - largest nonzero change 2.3844301e-05 ( 0.0016257214%) - largest zero change 2.9885555e-05
Clp0000I Optimal - objective value 82.759802
Clp0000I Optimal - objective value 82.759802
Coin0511I After Postsolve, objective 82.759802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 82.759802 Dual inf 226.79655 (155)
Clp0014I Perturbing problem by 0.001% of 2.3147462 - largest nonzero change 1.9326576e-05 ( 0.0013165956%) - largest zero change 2.9996687e-05
Clp0000I Optimal - objective value 295.38544
Clp0000I Optimal - objective value 295.38544
Clp0000I Optimal - objective value 295.38544
Coin0511I After Postsolve, objective 295.38544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 295.3854417 - 0 iterations time 0.192, Presolve 0.00, Idiot 0.19

Starting MIP optimization
Cgl0004I processed model has 398 rows, 409 columns (409 integer (409 of which binary)) and 20992 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 6.124%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 142 integers unsatisfied sum - 10.2344
Cbc0038I Pass   1: suminf.    4.13113 (113) obj. -215.095 iterations 42
Cbc0038I Pass   2: suminf.    4.13113 (113) obj. -215.095 iterations 1
Cbc0038I Pass   3: suminf.    3.34775 (97) obj. -180.895 iterations 16
Cbc0038I Pass   4: suminf.    2.26471 (73) obj. -149.381 iterations 24
Cbc0038I Pass   5: suminf.    1.50239 (55) obj. -121.615 iterations 18
Cbc0038I Pass   6: suminf.    0.92595 (39) obj. -105.226 iterations 16
Cbc0038I Pass   7: suminf.    0.26886 (14) obj. -72.1207 iterations 25
Cbc0038I Solution found of -55.4552
Cbc0038I Rounding solution of -88.0993 is better than previous of -55.4552

Cbc0038I Before mini branch and bound, 263 integers at bound fixed and 0 continuous
Cbc0038I Full problem 398 rows 409 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -88.0993 to -95.4204 (0.17 seconds)
Cbc0038I Round again with cutoff of -115.393
Cbc0038I Pass   8: suminf.    4.13113 (113) obj. -215.095 iterations 0
Cbc0038I Pass   9: suminf.    4.13113 (113) obj. -215.095 iterations 1
Cbc0038I Pass  10: suminf.    3.02395 (90) obj. -172.311 iterations 23
Cbc0038I Pass  11: suminf.    1.91887 (65) obj. -134.074 iterations 25
Cbc0038I Pass  12: suminf.    1.26607 (48) obj. -115.393 iterations 20
Cbc0038I Pass  13: suminf.    0.70428 (32) obj. -128.7 iterations 18
Cbc0038I Pass  14: suminf.    0.44538 (22) obj. -117.013 iterations 10
Cbc0038I Pass  15: suminf.    0.67924 (26) obj. -115.393 iterations 30
Cbc0038I Pass  16: suminf.    0.63839 (25) obj. -116.729 iterations 10
Cbc0038I Pass  17: suminf.    0.99995 (23) obj. -115.393 iterations 39
Cbc0038I Pass  18: suminf.    0.99995 (23) obj. -115.393 iterations 0
Cbc0038I Pass  19: suminf.    1.36692 (8) obj. -115.393 iterations 48
Cbc0038I Pass  20: suminf.    0.61046 (5) obj. -116.924 iterations 12
Cbc0038I Pass  21: suminf.    0.83578 (11) obj. -115.393 iterations 34
Cbc0038I Pass  22: suminf.    0.78292 (12) obj. -115.393 iterations 15
Cbc0038I Pass  23: suminf.    0.70627 (4) obj. -115.393 iterations 35
Cbc0038I Pass  24: suminf.    0.69883 (7) obj. -115.393 iterations 15
Cbc0038I Pass  25: suminf.    0.51488 (4) obj. -115.393 iterations 21
Cbc0038I Pass  26: suminf.    0.40920 (6) obj. -115.393 iterations 11
Cbc0038I Pass  27: suminf.    1.66156 (5) obj. -115.393 iterations 19
Cbc0038I Pass  28: suminf.    1.22321 (7) obj. -115.393 iterations 19
Cbc0038I Pass  29: suminf.    3.90893 (41) obj. -115.393 iterations 88
Cbc0038I Pass  30: suminf.    2.16614 (31) obj. -115.393 iterations 22
Cbc0038I Pass  31: suminf.    1.60277 (15) obj. -115.393 iterations 57
Cbc0038I Pass  32: suminf.    1.60277 (15) obj. -115.393 iterations 0
Cbc0038I Pass  33: suminf.    1.12335 (6) obj. -115.393 iterations 32
Cbc0038I Pass  34: suminf.    0.75458 (6) obj. -115.393 iterations 14
Cbc0038I Pass  35: suminf.    1.65660 (7) obj. -115.393 iterations 22
Cbc0038I Pass  36: suminf.    1.57803 (7) obj. -115.393 iterations 5
Cbc0038I Pass  37: suminf.    2.37772 (13) obj. -115.393 iterations 43
Cbc0038I Rounding solution of -101.834 is better than previous of -95.4204

Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 398 rows 409 columns, reduced to 58 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -101.834 to -104.717 (0.34 seconds)
Cbc0038I Round again with cutoff of -151.345
Cbc0038I Pass  37: suminf.    4.13113 (113) obj. -215.095 iterations 0
Cbc0038I Pass  38: suminf.    4.13113 (113) obj. -215.095 iterations 1
Cbc0038I Pass  39: suminf.    3.34775 (97) obj. -180.895 iterations 16
Cbc0038I Pass  40: suminf.    2.48428 (78) obj. -157.03 iterations 19
Cbc0038I Pass  41: suminf.    2.40663 (67) obj. -151.345 iterations 14
Cbc0038I Pass  42: suminf.    1.55348 (57) obj. -156.727 iterations 12
Cbc0038I Pass  43: suminf.    1.81659 (57) obj. -151.345 iterations 35
Cbc0038I Pass  44: suminf.    1.73501 (56) obj. -157.242 iterations 11
Cbc0038I Pass  45: suminf.    2.62099 (39) obj. -151.345 iterations 64
Cbc0038I Pass  46: suminf.    1.92620 (43) obj. -151.345 iterations 11
Cbc0038I Pass  47: suminf.    1.56095 (45) obj. -151.345 iterations 6
Cbc0038I Pass  48: suminf.    2.60795 (33) obj. -151.345 iterations 78
Cbc0038I Pass  49: suminf.    2.60795 (33) obj. -151.345 iterations 1
Cbc0038I Pass  50: suminf.    2.10218 (25) obj. -151.345 iterations 33
Cbc0038I Pass  51: suminf.    2.10218 (25) obj. -151.345 iterations 4
Cbc0038I Pass  52: suminf.    2.34354 (15) obj. -151.345 iterations 42
Cbc0038I Pass  53: suminf.    2.22561 (17) obj. -151.345 iterations 26
Cbc0038I Pass  54: suminf.    2.34354 (15) obj. -151.345 iterations 26
Cbc0038I Pass  55: suminf.    3.51857 (47) obj. -151.345 iterations 86
Cbc0038I Pass  56: suminf.    3.26681 (42) obj. -151.345 iterations 28
Cbc0038I Pass  57: suminf.    2.85055 (35) obj. -151.345 iterations 24
Cbc0038I Pass  58: suminf.    2.51042 (34) obj. -151.345 iterations 9
Cbc0038I Pass  59: suminf.    2.35565 (22) obj. -151.345 iterations 38
Cbc0038I Pass  60: suminf.    1.83850 (22) obj. -151.345 iterations 11
Cbc0038I Pass  61: suminf.    1.90097 (16) obj. -151.345 iterations 34
Cbc0038I Pass  62: suminf.    1.90097 (16) obj. -151.345 iterations 7
Cbc0038I Pass  63: suminf.    1.95341 (15) obj. -151.345 iterations 11
Cbc0038I Pass  64: suminf.    1.63411 (15) obj. -151.345 iterations 16
Cbc0038I Pass  65: suminf.    1.95341 (15) obj. -151.345 iterations 17
Cbc0038I Pass  66: suminf.    3.13253 (36) obj. -151.345 iterations 59
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 234 integers at bound fixed and 0 continuous
Cbc0038I Full problem 398 rows 409 columns, reduced to 48 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.44 seconds)
Cbc0038I After 0.44 seconds - Feasibility pump exiting with objective of -104.717 - took 0.33 seconds
Cbc0012I Integer solution of -104.71737 found by feasibility pump after 0 iterations and 0 nodes (0.44 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 33 rows 37 columns
Cbc0031I 166 added rows had average density of 99.554217
Cbc0013I At root node, 166 cuts changed objective from -295.14921 to -180.48743 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 32412 row cuts average 2.0 elements, 0 column cuts (62 active)  in 0.664 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3627 row cuts average 368.5 elements, 0 column cuts (0 active)  in 1.904 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 934 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7854 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.359 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.088 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2910 row cuts average 10.4 elements, 0 column cuts (0 active)  in 1.253 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 442 row cuts average 207.7 elements, 0 column cuts (0 active)  in 0.354 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 151 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.574 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -104.71737 best solution, best possible -180.48743 (12.06 seconds)
Cbc0012I Integer solution of -134.95018 found by rounding after 15070 iterations and 1 nodes (12.12 seconds)
Cbc0012I Integer solution of -141.74271 found by DiveCoefficient after 15275 iterations and 1 nodes (12.23 seconds)
Cbc0012I Integer solution of -148.74691 found by DiveCoefficient after 15355 iterations and 4 nodes (12.36 seconds)
Cbc0012I Integer solution of -151.25969 found by DiveCoefficient after 15359 iterations and 4 nodes (12.39 seconds)
Cbc0012I Integer solution of -158.55561 found by DiveCoefficient after 15374 iterations and 6 nodes (12.43 seconds)
Cbc0012I Integer solution of -159.69721 found by rounding after 15704 iterations and 14 nodes (12.65 seconds)
Cbc0010I After 19 nodes, 7 on tree, -159.69721 best solution, best possible -180.48743 (12.76 seconds)
Cbc0010I After 31 nodes, 2 on tree, -159.69721 best solution, best possible -180.203 (14.13 seconds)
Cbc0010I After 35 nodes, 4 on tree, -159.69721 best solution, best possible -180.203 (14.90 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 89 rows 94 columns
Cbc0010I After 53 nodes, 7 on tree, -159.69721 best solution, best possible -180.203 (15.62 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 81 rows 90 columns
Cbc0010I After 94 nodes, 10 on tree, -159.69721 best solution, best possible -180.203 (16.35 seconds)
Cbc0010I After 136 nodes, 3 on tree, -159.69721 best solution, best possible -180.203 (17.20 seconds)
Cbc0010I After 147 nodes, 7 on tree, -159.69721 best solution, best possible -180.203 (17.91 seconds)
Cbc0010I After 175 nodes, 10 on tree, -159.69721 best solution, best possible -180.203 (18.61 seconds)
Cbc0010I After 217 nodes, 10 on tree, -159.69721 best solution, best possible -180.203 (19.33 seconds)
Cbc0010I After 252 nodes, 1 on tree, -159.69721 best solution, best possible -179.75531 (20.19 seconds)
Cbc0010I After 254 nodes, 3 on tree, -159.69721 best solution, best possible -179.75531 (21.34 seconds)
Cbc0010I After 258 nodes, 7 on tree, -159.69721 best solution, best possible -179.75531 (22.19 seconds)
Cbc0010I After 269 nodes, 8 on tree, -159.69721 best solution, best possible -179.75531 (22.91 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 149 rows 162 columns
Cbc0010I After 296 nodes, 7 on tree, -159.69721 best solution, best possible -179.75531 (25.35 seconds)
Cbc0010I After 333 nodes, 7 on tree, -159.69721 best solution, best possible -179.75531 (26.06 seconds)
Cbc0010I After 344 nodes, 5 on tree, -159.69721 best solution, best possible -179.75531 (26.78 seconds)
Cbc0010I After 383 nodes, 2 on tree, -159.69721 best solution, best possible -179.75531 (27.84 seconds)
Cbc0010I After 387 nodes, 5 on tree, -159.69721 best solution, best possible -179.75531 (28.60 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 213 rows 218 columns - 17 fixed gives 191, 201 - ok now
Cbc0038I Full problem 398 rows 409 columns, reduced to 191 rows 201 columns
Cbc0010I After 400 nodes, 7 on tree, -159.69721 best solution, best possible -179.75531 (31.23 seconds)
Cbc0010I After 416 nodes, 9 on tree, -159.69721 best solution, best possible -179.75531 (31.97 seconds)
Cbc0010I After 434 nodes, 11 on tree, -159.69721 best solution, best possible -179.75531 (32.67 seconds)
Cbc0010I After 450 nodes, 14 on tree, -159.69721 best solution, best possible -179.75531 (33.42 seconds)
Cbc0010I After 472 nodes, 18 on tree, -159.69721 best solution, best possible -179.75531 (34.17 seconds)
Cbc0010I After 499 nodes, 17 on tree, -159.69721 best solution, best possible -179.75531 (34.90 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 163 rows 174 columns
Cbc0010I After 500 nodes, 18 on tree, -159.69721 best solution, best possible -179.75531 (36.18 seconds)
Cbc0010I After 538 nodes, 12 on tree, -159.69721 best solution, best possible -179.75531 (36.89 seconds)
Cbc0010I After 582 nodes, 8 on tree, -159.69721 best solution, best possible -179.75531 (37.59 seconds)
Cbc0010I After 613 nodes, 6 on tree, -159.69721 best solution, best possible -167.39512 (38.31 seconds)
Cbc0001I Search completed - best objective -159.69721, took 65569 iterations and 632 nodes (38.46 seconds)
Cbc0032I Strong branching done 4408 times (75066 iterations), fathomed 29 nodes and fixed 46 variables
Cbc0035I Maximum depth 32, 4957 variables fixed on reduced cost
Total time (CPU seconds):       37.26   (Wallclock seconds):       38.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 507 (-20) rows, 260 (-4) columns and 1503 (-42) elements
Clp1000I sum of infeasibilities 1.3421e-05 - average 2.64714e-08, 161 fixed columns
Coin0506I Presolve 182 (-325) rows, 99 (-161) columns and 544 (-959) elements
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.6286078 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Coin0511I After Postsolve, objective 230.10277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13475134 - largest nonzero change 0 ( 0%) - largest zero change 2.9764379e-05
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Coin0511I After Postsolve, objective 230.10277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 230.1027692 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 507 rows, 260 columns (259 integer (259 of which binary)) and 1503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.373%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 12.1685
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.4775 iterations 190
Cbc0038I Solution found of 10.4775
Cbc0038I Relaxing continuous gives 10.4775
Cbc0038I Rounding solution of -104.692 is better than previous of 10.4775

Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 96 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -104.692 to -138.423 (0.08 seconds)
Cbc0038I Round again with cutoff of -147.591
Cbc0038I Pass   2: suminf.    2.89114 (7) obj. -147.591 iterations 41
Cbc0038I Pass   3: suminf.    2.89114 (7) obj. -147.591 iterations 0
Cbc0038I Pass   4: suminf.    2.11551 (7) obj. -147.591 iterations 31
Cbc0038I Pass   5: suminf.    2.11551 (7) obj. -147.591 iterations 0
Cbc0038I Pass   6: suminf.    2.89114 (7) obj. -147.591 iterations 35
Cbc0038I Pass   7: suminf.    6.78986 (24) obj. -147.591 iterations 91
Cbc0038I Pass   8: suminf.    1.56285 (8) obj. -147.591 iterations 98
Cbc0038I Pass   9: suminf.    1.30334 (6) obj. -147.591 iterations 20
Cbc0038I Pass  10: suminf.    2.47232 (7) obj. -147.591 iterations 32
Cbc0038I Pass  11: suminf.    2.37726 (6) obj. -147.591 iterations 18
Cbc0038I Pass  12: suminf.    1.49290 (5) obj. -147.591 iterations 22
Cbc0038I Pass  13: suminf.    1.49290 (5) obj. -147.591 iterations 0
Cbc0038I Pass  14: suminf.    2.22859 (5) obj. -147.591 iterations 16
Cbc0038I Pass  15: suminf.    2.22859 (5) obj. -147.591 iterations 0
Cbc0038I Pass  16: suminf.    1.18709 (4) obj. -147.591 iterations 16
Cbc0038I Pass  17: suminf.    0.99129 (4) obj. -147.591 iterations 11
Cbc0038I Pass  18: suminf.    1.03398 (4) obj. -147.591 iterations 14
Cbc0038I Pass  19: suminf.    1.03398 (4) obj. -147.591 iterations 7
Cbc0038I Pass  20: suminf.    1.13796 (4) obj. -147.591 iterations 13
Cbc0038I Pass  21: suminf.    5.67331 (19) obj. -147.591 iterations 41
Cbc0038I Pass  22: suminf.    2.00454 (7) obj. -147.591 iterations 49
Cbc0038I Pass  23: suminf.    1.81170 (8) obj. -147.591 iterations 14
Cbc0038I Pass  24: suminf.    2.26403 (9) obj. -147.591 iterations 41
Cbc0038I Pass  25: suminf.    2.26175 (7) obj. -147.591 iterations 3
Cbc0038I Pass  26: suminf.    2.79453 (8) obj. -147.591 iterations 23
Cbc0038I Pass  27: suminf.    2.26344 (7) obj. -147.591 iterations 27
Cbc0038I Pass  28: suminf.    2.66005 (9) obj. -147.591 iterations 15
Cbc0038I Pass  29: suminf.    2.11008 (7) obj. -147.591 iterations 16
Cbc0038I Pass  30: suminf.    1.97954 (7) obj. -147.591 iterations 21
Cbc0038I Pass  31: suminf.    2.51014 (7) obj. -147.591 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 161 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -138.423 to -142.695 (0.16 seconds)
Cbc0038I Round again with cutoff of -164.093
Cbc0038I Pass  31: suminf.    3.48883 (11) obj. -164.093 iterations 5
Cbc0038I Pass  32: suminf.    3.48883 (11) obj. -164.093 iterations 0
Cbc0038I Pass  33: suminf.    4.08299 (11) obj. -164.093 iterations 36
Cbc0038I Pass  34: suminf.    2.15106 (13) obj. -164.093 iterations 40
Cbc0038I Pass  35: suminf.    2.47549 (9) obj. -164.093 iterations 41
Cbc0038I Pass  36: suminf.    1.87013 (8) obj. -164.093 iterations 7
Cbc0038I Pass  37: suminf.    1.81328 (6) obj. -164.093 iterations 3
Cbc0038I Pass  38: suminf.    2.56161 (9) obj. -164.093 iterations 48
Cbc0038I Pass  39: suminf.    1.69368 (8) obj. -164.093 iterations 34
Cbc0038I Pass  40: suminf.    2.24261 (8) obj. -164.093 iterations 25
Cbc0038I Pass  41: suminf.    1.89451 (7) obj. -164.093 iterations 36
Cbc0038I Pass  42: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  43: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  44: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  45: suminf.    2.40114 (11) obj. -164.093 iterations 50
Cbc0038I Pass  46: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  47: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  48: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  49: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  50: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  51: suminf.    2.40114 (11) obj. -164.093 iterations 50
Cbc0038I Pass  52: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  53: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  54: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  55: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  56: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  57: suminf.    2.40114 (11) obj. -164.093 iterations 52
Cbc0038I Pass  58: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  59: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  60: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 113 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of -142.695 - took 0.22 seconds
Cbc0012I Integer solution of -142.69497 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 98 rows 54 columns
Cbc0012I Integer solution of -144.7338 found by RINS after 0 iterations and 0 nodes (0.30 seconds)
Cbc0031I 30 added rows had average density of 121.26667
Cbc0013I At root node, 30 cuts changed objective from -230.10277 to -207.21049 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22189 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.421 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2165 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.349 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.293 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 248.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -144.7338 best solution, best possible -207.21049 (3.33 seconds)
Cbc0010I After 33 nodes, 10 on tree, -144.7338 best solution, best possible -207.21049 (4.04 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 118 rows 66 columns
Cbc0012I Integer solution of -159.69721 found by RINS after 12951 iterations and 41 nodes (4.17 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 108 rows 60 columns
Cbc0010I After 150 nodes, 9 on tree, -159.69721 best solution, best possible -207.21049 (4.74 seconds)
Cbc0001I Search completed - best objective -159.69721, took 18506 iterations and 172 nodes (4.87 seconds)
Cbc0032I Strong branching done 1720 times (47900 iterations), fathomed 15 nodes and fixed 42 variables
Cbc0035I Maximum depth 63, 951 variables fixed on reduced cost
Total time (CPU seconds):       4.78   (Wallclock seconds):       4.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 398 (-129) rows, 409 (-116) columns and 20992 (-14745) elements
Clp1000I sum of infeasibilities 6.37067e-06 - average 1.60067e-08, 208 fixed columns
Coin0506I Presolve 175 (-223) rows, 199 (-210) columns and 731 (-20261) elements
Clp0006I 0  Obj 73.27842 Dual inf 37.423015 (192)
Clp0029I End of values pass after 199 iterations
Clp0014I Perturbing problem by 0.001% of 1.3830257 - largest nonzero change 2.3844301e-05 ( 0.0016257214%) - largest zero change 2.9885555e-05
Clp0000I Optimal - objective value 82.759802
Clp0000I Optimal - objective value 82.759802
Coin0511I After Postsolve, objective 82.759802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 82.759802 Dual inf 226.79655 (155)
Clp0014I Perturbing problem by 0.001% of 2.3147462 - largest nonzero change 1.9326576e-05 ( 0.0013165956%) - largest zero change 2.9996687e-05
Clp0000I Optimal - objective value 295.38544
Clp0000I Optimal - objective value 295.38544
Clp0000I Optimal - objective value 295.38544
Coin0511I After Postsolve, objective 295.38544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 295.3854417 - 0 iterations time 0.182, Presolve 0.00, Idiot 0.18

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 398 rows, 409 columns (409 integer (409 of which binary)) and 20992 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 6.124%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 142 integers unsatisfied sum - 10.2344
Cbc0038I Pass   1: suminf.    4.13113 (113) obj. -215.095 iterations 42
Cbc0038I Pass   2: suminf.    4.13113 (113) obj. -215.095 iterations 1
Cbc0038I Pass   3: suminf.    3.34775 (97) obj. -180.895 iterations 16
Cbc0038I Pass   4: suminf.    2.26471 (73) obj. -149.381 iterations 24
Cbc0038I Pass   5: suminf.    1.50239 (55) obj. -121.615 iterations 18
Cbc0038I Pass   6: suminf.    0.92595 (39) obj. -105.226 iterations 16
Cbc0038I Pass   7: suminf.    0.26886 (14) obj. -72.1207 iterations 25
Cbc0038I Solution found of -55.4552
Cbc0038I Rounding solution of -88.0993 is better than previous of -55.4552

Cbc0038I Before mini branch and bound, 263 integers at bound fixed and 0 continuous
Cbc0038I Full problem 398 rows 409 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -88.0993 to -95.4204 (0.17 seconds)
Cbc0038I Round again with cutoff of -115.393
Cbc0038I Pass   8: suminf.    4.13113 (113) obj. -215.095 iterations 0
Cbc0038I Pass   9: suminf.    4.13113 (113) obj. -215.095 iterations 1
Cbc0038I Pass  10: suminf.    3.02395 (90) obj. -172.311 iterations 23
Cbc0038I Pass  11: suminf.    1.91887 (65) obj. -134.074 iterations 25
Cbc0038I Pass  12: suminf.    1.26607 (48) obj. -115.393 iterations 20
Cbc0038I Pass  13: suminf.    0.70428 (32) obj. -128.7 iterations 18
Cbc0038I Pass  14: suminf.    0.44538 (22) obj. -117.013 iterations 10
Cbc0038I Pass  15: suminf.    0.67924 (26) obj. -115.393 iterations 30
Cbc0038I Pass  16: suminf.    0.63839 (25) obj. -116.729 iterations 10
Cbc0038I Pass  17: suminf.    0.99995 (23) obj. -115.393 iterations 39
Cbc0038I Pass  18: suminf.    0.99995 (23) obj. -115.393 iterations 0
Cbc0038I Pass  19: suminf.    1.36692 (8) obj. -115.393 iterations 48
Cbc0038I Pass  20: suminf.    0.61046 (5) obj. -116.924 iterations 12
Cbc0038I Pass  21: suminf.    0.83578 (11) obj. -115.393 iterations 34
Cbc0038I Pass  22: suminf.    0.78292 (12) obj. -115.393 iterations 15
Cbc0038I Pass  23: suminf.    0.70627 (4) obj. -115.393 iterations 35
Cbc0038I Pass  24: suminf.    0.69883 (7) obj. -115.393 iterations 15
Cbc0038I Pass  25: suminf.    0.51488 (4) obj. -115.393 iterations 21
Cbc0038I Pass  26: suminf.    0.40920 (6) obj. -115.393 iterations 11
Cbc0038I Pass  27: suminf.    1.66156 (5) obj. -115.393 iterations 19
Cbc0038I Pass  28: suminf.    1.22321 (7) obj. -115.393 iterations 19
Cbc0038I Pass  29: suminf.    3.90893 (41) obj. -115.393 iterations 88
Cbc0038I Pass  30: suminf.    2.16614 (31) obj. -115.393 iterations 22
Cbc0038I Pass  31: suminf.    1.60277 (15) obj. -115.393 iterations 57
Cbc0038I Pass  32: suminf.    1.60277 (15) obj. -115.393 iterations 0
Cbc0038I Pass  33: suminf.    1.12335 (6) obj. -115.393 iterations 32
Cbc0038I Pass  34: suminf.    0.75458 (6) obj. -115.393 iterations 14
Cbc0038I Pass  35: suminf.    1.65660 (7) obj. -115.393 iterations 22
Cbc0038I Pass  36: suminf.    1.57803 (7) obj. -115.393 iterations 5
Cbc0038I Pass  37: suminf.    2.37772 (13) obj. -115.393 iterations 43
Cbc0038I Rounding solution of -101.834 is better than previous of -95.4204

Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 398 rows 409 columns, reduced to 58 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -101.834 to -104.717 (0.33 seconds)
Cbc0038I Round again with cutoff of -151.345
Cbc0038I Pass  37: suminf.    4.13113 (113) obj. -215.095 iterations 0
Cbc0038I Pass  38: suminf.    4.13113 (113) obj. -215.095 iterations 1
Cbc0038I Pass  39: suminf.    3.34775 (97) obj. -180.895 iterations 16
Cbc0038I Pass  40: suminf.    2.48428 (78) obj. -157.03 iterations 19
Cbc0038I Pass  41: suminf.    2.40663 (67) obj. -151.345 iterations 14
Cbc0038I Pass  42: suminf.    1.55348 (57) obj. -156.727 iterations 12
Cbc0038I Pass  43: suminf.    1.81659 (57) obj. -151.345 iterations 35
Cbc0038I Pass  44: suminf.    1.73501 (56) obj. -157.242 iterations 11
Cbc0038I Pass  45: suminf.    2.62099 (39) obj. -151.345 iterations 64
Cbc0038I Pass  46: suminf.    1.92620 (43) obj. -151.345 iterations 11
Cbc0038I Pass  47: suminf.    1.56095 (45) obj. -151.345 iterations 6
Cbc0038I Pass  48: suminf.    2.60795 (33) obj. -151.345 iterations 78
Cbc0038I Pass  49: suminf.    2.60795 (33) obj. -151.345 iterations 1
Cbc0038I Pass  50: suminf.    2.10218 (25) obj. -151.345 iterations 33
Cbc0038I Pass  51: suminf.    2.10218 (25) obj. -151.345 iterations 4
Cbc0038I Pass  52: suminf.    2.34354 (15) obj. -151.345 iterations 42
Cbc0038I Pass  53: suminf.    2.22561 (17) obj. -151.345 iterations 26
Cbc0038I Pass  54: suminf.    2.34354 (15) obj. -151.345 iterations 26
Cbc0038I Pass  55: suminf.    3.51857 (47) obj. -151.345 iterations 86
Cbc0038I Pass  56: suminf.    3.26681 (42) obj. -151.345 iterations 28
Cbc0038I Pass  57: suminf.    2.85055 (35) obj. -151.345 iterations 24
Cbc0038I Pass  58: suminf.    2.51042 (34) obj. -151.345 iterations 9
Cbc0038I Pass  59: suminf.    2.35565 (22) obj. -151.345 iterations 38
Cbc0038I Pass  60: suminf.    1.83850 (22) obj. -151.345 iterations 11
Cbc0038I Pass  61: suminf.    1.90097 (16) obj. -151.345 iterations 34
Cbc0038I Pass  62: suminf.    1.90097 (16) obj. -151.345 iterations 7
Cbc0038I Pass  63: suminf.    1.95341 (15) obj. -151.345 iterations 11
Cbc0038I Pass  64: suminf.    1.63411 (15) obj. -151.345 iterations 16
Cbc0038I Pass  65: suminf.    1.95341 (15) obj. -151.345 iterations 17
Cbc0038I Pass  66: suminf.    3.13253 (36) obj. -151.345 iterations 59
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 234 integers at bound fixed and 0 continuous
Cbc0038I Full problem 398 rows 409 columns, reduced to 48 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I After 0.43 seconds - Feasibility pump exiting with objective of -104.717 - took 0.32 seconds
Cbc0012I Integer solution of -104.71737 found by feasibility pump after 0 iterations and 0 nodes (0.43 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 33 rows 37 columns
Cbc0031I 166 added rows had average density of 99.554217
Cbc0013I At root node, 166 cuts changed objective from -295.14921 to -180.48743 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 32412 row cuts average 2.0 elements, 0 column cuts (62 active)  in 0.639 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3627 row cuts average 368.5 elements, 0 column cuts (0 active)  in 1.811 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 934 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7854 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.342 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.040 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2910 row cuts average 10.4 elements, 0 column cuts (0 active)  in 1.214 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 442 row cuts average 207.7 elements, 0 column cuts (0 active)  in 0.341 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 151 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.561 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -104.71737 best solution, best possible -180.48743 (11.62 seconds)
Cbc0012I Integer solution of -134.95018 found by rounding after 15070 iterations and 1 nodes (11.68 seconds)
Cbc0012I Integer solution of -141.74271 found by DiveCoefficient after 15275 iterations and 1 nodes (11.78 seconds)
Cbc0012I Integer solution of -148.74691 found by DiveCoefficient after 15355 iterations and 4 nodes (11.91 seconds)
Cbc0012I Integer solution of -151.25969 found by DiveCoefficient after 15359 iterations and 4 nodes (11.94 seconds)
Cbc0012I Integer solution of -158.55561 found by DiveCoefficient after 15374 iterations and 6 nodes (11.98 seconds)
Cbc0012I Integer solution of -159.69721 found by rounding after 15704 iterations and 14 nodes (12.19 seconds)
Cbc0010I After 20 nodes, 7 on tree, -159.69721 best solution, best possible -180.48743 (12.33 seconds)
Cbc0010I After 31 nodes, 2 on tree, -159.69721 best solution, best possible -180.203 (13.63 seconds)
Cbc0010I After 35 nodes, 4 on tree, -159.69721 best solution, best possible -180.203 (14.37 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 89 rows 94 columns
Cbc0010I After 55 nodes, 7 on tree, -159.69721 best solution, best possible -180.203 (15.07 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 81 rows 90 columns
Cbc0010I After 95 nodes, 10 on tree, -159.69721 best solution, best possible -180.203 (15.79 seconds)
Cbc0010I After 136 nodes, 3 on tree, -159.69721 best solution, best possible -180.203 (16.57 seconds)
Cbc0010I After 148 nodes, 8 on tree, -159.69721 best solution, best possible -180.203 (17.28 seconds)
Cbc0010I After 176 nodes, 11 on tree, -159.69721 best solution, best possible -180.203 (17.99 seconds)
Cbc0010I After 218 nodes, 11 on tree, -159.69721 best solution, best possible -180.203 (18.71 seconds)
Cbc0010I After 252 nodes, 1 on tree, -159.69721 best solution, best possible -179.75531 (19.53 seconds)
Cbc0010I After 254 nodes, 3 on tree, -159.69721 best solution, best possible -179.75531 (20.66 seconds)
Cbc0010I After 258 nodes, 7 on tree, -159.69721 best solution, best possible -179.75531 (21.49 seconds)
Cbc0010I After 269 nodes, 8 on tree, -159.69721 best solution, best possible -179.75531 (22.20 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 149 rows 162 columns
Cbc0010I After 296 nodes, 7 on tree, -159.69721 best solution, best possible -179.75531 (24.59 seconds)
Cbc0010I After 339 nodes, 3 on tree, -159.69721 best solution, best possible -179.75531 (25.32 seconds)
Cbc0010I After 347 nodes, 7 on tree, -159.69721 best solution, best possible -179.75531 (26.03 seconds)
Cbc0010I After 383 nodes, 2 on tree, -159.69721 best solution, best possible -179.75531 (26.97 seconds)
Cbc0010I After 387 nodes, 5 on tree, -159.69721 best solution, best possible -179.75531 (27.70 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 213 rows 218 columns - 17 fixed gives 191, 201 - ok now
Cbc0038I Full problem 398 rows 409 columns, reduced to 191 rows 201 columns
Cbc0010I After 400 nodes, 7 on tree, -159.69721 best solution, best possible -179.75531 (30.20 seconds)
Cbc0010I After 416 nodes, 9 on tree, -159.69721 best solution, best possible -179.75531 (30.90 seconds)
Cbc0010I After 434 nodes, 11 on tree, -159.69721 best solution, best possible -179.75531 (31.61 seconds)
Cbc0010I After 450 nodes, 14 on tree, -159.69721 best solution, best possible -179.75531 (32.35 seconds)
Cbc0010I After 472 nodes, 18 on tree, -159.69721 best solution, best possible -179.75531 (33.07 seconds)
Cbc0038I Full problem 398 rows 409 columns, reduced to 163 rows 174 columns
Cbc0010I After 500 nodes, 18 on tree, -159.69721 best solution, best possible -179.75531 (35.01 seconds)
Cbc0010I After 540 nodes, 12 on tree, -159.69721 best solution, best possible -179.75531 (35.75 seconds)
Cbc0010I After 592 nodes, 3 on tree, -159.69721 best solution, best possible -179.75531 (36.56 seconds)
Cbc0001I Search completed - best objective -159.69721, took 65569 iterations and 632 nodes (37.19 seconds)
Cbc0032I Strong branching done 4408 times (75066 iterations), fathomed 29 nodes and fixed 46 variables
Cbc0035I Maximum depth 32, 4957 variables fixed on reduced cost
Total time (CPU seconds):       36.22   (Wallclock seconds):       37.30

