Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 0.00021822 - average 1.5813e-06, 19 fixed columns
Coin0506I Presolve 89 (-49) rows, 51 (-25) columns and 272 (-148) elements
Clp0000I Optimal - objective value 62.053266
Clp0000I Optimal - objective value 62.053266
Coin0511I After Postsolve, objective 62.053266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.053266
Clp0000I Optimal - objective value 62.053266
Clp0000I Optimal - objective value 62.053266
Coin0511I After Postsolve, objective 62.053266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.05326641 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 425 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.90108
Cbc0038I Solution found of -0.342875
Cbc0038I Relaxing continuous gives -8.33383
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -8.33383 to -29.0786 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.3762
Cbc0038I Pass   1: suminf.    2.68441 (27) obj. -32.3762 iterations 43
Cbc0038I Pass   2: suminf.    3.24473 (10) obj. -32.3762 iterations 33
Cbc0038I Pass   3: suminf.    3.24473 (10) obj. -32.3762 iterations 0
Cbc0038I Pass   4: suminf.    2.82478 (15) obj. -32.3762 iterations 25
Cbc0038I Pass   5: suminf.    4.31793 (14) obj. -32.3762 iterations 26
Cbc0038I Pass   6: suminf.    2.41152 (7) obj. -32.3762 iterations 21
Cbc0038I Pass   7: suminf.    1.17993 (4) obj. -32.3762 iterations 7
Cbc0038I Pass   8: suminf.    1.17070 (4) obj. -32.3762 iterations 1
Cbc0038I Pass   9: suminf.    1.15221 (3) obj. -32.3762 iterations 2
Cbc0038I Pass  10: suminf.    1.06816 (3) obj. -32.3762 iterations 1
Cbc0038I Pass  11: suminf.    0.89953 (3) obj. -32.3762 iterations 3
Cbc0038I Pass  12: suminf.    0.89953 (3) obj. -32.3762 iterations 0
Cbc0038I Pass  13: suminf.    1.14809 (3) obj. -32.3762 iterations 3
Cbc0038I Pass  14: suminf.    0.82399 (4) obj. -32.3762 iterations 12
Cbc0038I Pass  15: suminf.    0.74865 (4) obj. -32.3762 iterations 5
Cbc0038I Pass  16: suminf.    2.56841 (9) obj. -32.3762 iterations 23
Cbc0038I Pass  17: suminf.    1.31381 (5) obj. -32.3762 iterations 17
Cbc0038I Pass  18: suminf.    1.31381 (5) obj. -32.3762 iterations 0
Cbc0038I Pass  19: suminf.    1.35354 (4) obj. -32.3762 iterations 4
Cbc0038I Pass  20: suminf.    1.35354 (4) obj. -32.3762 iterations 0
Cbc0038I Pass  21: suminf.    1.36220 (4) obj. -32.3762 iterations 3
Cbc0038I Pass  22: suminf.    1.08484 (4) obj. -32.3762 iterations 1
Cbc0038I Pass  23: suminf.    1.62809 (4) obj. -32.3762 iterations 4
Cbc0038I Pass  24: suminf.    1.30697 (5) obj. -32.3762 iterations 3
Cbc0038I Pass  25: suminf.    1.66864 (5) obj. -32.3762 iterations 3
Cbc0038I Pass  26: suminf.    1.55807 (5) obj. -32.3762 iterations 1
Cbc0038I Pass  27: suminf.    1.82278 (5) obj. -32.3762 iterations 4
Cbc0038I Pass  28: suminf.    1.62825 (5) obj. -32.3762 iterations 1
Cbc0038I Pass  29: suminf.    1.57095 (5) obj. -32.3762 iterations 4
Cbc0038I Pass  30: suminf.    3.19099 (11) obj. -32.3762 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -29.0786 to -31.0967 (0.09 seconds)
Cbc0038I Round again with cutoff of -38.3116
Cbc0038I Pass  30: suminf.    3.34712 (27) obj. -38.3116 iterations 0
Cbc0038I Pass  31: suminf.    2.43956 (6) obj. -38.3116 iterations 23
Cbc0038I Pass  32: suminf.    1.69543 (4) obj. -38.3116 iterations 3
Cbc0038I Pass  33: suminf.    0.97624 (3) obj. -38.3116 iterations 2
Cbc0038I Pass  34: suminf.    0.72147 (3) obj. -38.3116 iterations 5
Cbc0038I Pass  35: suminf.    0.72147 (3) obj. -38.3116 iterations 0
Cbc0038I Pass  36: suminf.    0.92625 (3) obj. -38.3116 iterations 1
Cbc0038I Pass  37: suminf.    2.66811 (6) obj. -38.3116 iterations 11
Cbc0038I Pass  38: suminf.    1.86861 (5) obj. -38.3116 iterations 6
Cbc0038I Pass  39: suminf.    1.44395 (4) obj. -38.3116 iterations 4
Cbc0038I Pass  40: suminf.    1.40500 (5) obj. -38.3116 iterations 2
Cbc0038I Pass  41: suminf.    1.50634 (4) obj. -38.3116 iterations 3
Cbc0038I Pass  42: suminf.    1.30510 (4) obj. -38.3116 iterations 2
Cbc0038I Pass  43: suminf.    2.49759 (11) obj. -38.3116 iterations 18
Cbc0038I Pass  44: suminf.    1.53256 (5) obj. -38.3116 iterations 18
Cbc0038I Pass  45: suminf.    4.03366 (16) obj. -38.3116 iterations 19
Cbc0038I Pass  46: suminf.    2.30835 (7) obj. -38.3116 iterations 18
Cbc0038I Pass  47: suminf.    2.30835 (7) obj. -38.3116 iterations 0
Cbc0038I Pass  48: suminf.    2.26802 (6) obj. -38.3116 iterations 16
Cbc0038I Pass  49: suminf.    2.26802 (6) obj. -38.3116 iterations 0
Cbc0038I Pass  50: suminf.    2.18046 (6) obj. -38.3116 iterations 2
Cbc0038I Pass  51: suminf.    2.18046 (6) obj. -38.3116 iterations 1
Cbc0038I Pass  52: suminf.    2.26802 (6) obj. -38.3116 iterations 2
Cbc0038I Pass  53: suminf.    3.10621 (9) obj. -38.3116 iterations 13
Cbc0038I Pass  54: suminf.    1.90645 (7) obj. -38.3116 iterations 8
Cbc0038I Pass  55: suminf.    1.90231 (7) obj. -38.3116 iterations 2
Cbc0038I Pass  56: suminf.    2.39052 (6) obj. -38.3116 iterations 7
Cbc0038I Pass  57: suminf.    2.36058 (6) obj. -38.3116 iterations 1
Cbc0038I Pass  58: suminf.    2.16960 (6) obj. -38.3116 iterations 3
Cbc0038I Pass  59: suminf.    2.13807 (6) obj. -38.3116 iterations 3
Cbc0038I Rounding solution of -35.8212 is better than previous of -31.0967

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -45.4341
Cbc0038I Pass  59: suminf.    4.14237 (27) obj. -45.4341 iterations 0
Cbc0038I Pass  60: suminf.    4.34434 (13) obj. -45.4341 iterations 33
Cbc0038I Pass  61: suminf.    2.96077 (9) obj. -45.4341 iterations 13
Cbc0038I Pass  62: suminf.    3.13754 (8) obj. -45.4341 iterations 12
Cbc0038I Pass  63: suminf.    1.82254 (7) obj. -45.4341 iterations 12
Cbc0038I Pass  64: suminf.    1.73368 (6) obj. -45.4341 iterations 4
Cbc0038I Pass  65: suminf.    2.24431 (6) obj. -45.4341 iterations 6
Cbc0038I Pass  66: suminf.    1.89061 (6) obj. -45.4341 iterations 10
Cbc0038I Pass  67: suminf.    1.82031 (6) obj. -45.4341 iterations 2
Cbc0038I Pass  68: suminf.    4.81078 (22) obj. -45.4341 iterations 30
Cbc0038I Pass  69: suminf.    3.30646 (10) obj. -45.4341 iterations 25
Cbc0038I Pass  70: suminf.    2.55203 (7) obj. -45.4341 iterations 7
Cbc0038I Pass  71: suminf.    2.24431 (6) obj. -45.4341 iterations 7
Cbc0038I Pass  72: suminf.    1.89061 (6) obj. -45.4341 iterations 10
Cbc0038I Pass  73: suminf.    1.82031 (6) obj. -45.4341 iterations 2
Cbc0038I Pass  74: suminf.    1.73368 (6) obj. -45.4341 iterations 1
Cbc0038I Pass  75: suminf.    3.92862 (13) obj. -45.4341 iterations 21
Cbc0038I Pass  76: suminf.    2.62233 (7) obj. -45.4341 iterations 19
Cbc0038I Pass  77: suminf.    2.93571 (8) obj. -45.4341 iterations 8
Cbc0038I Pass  78: suminf.    2.93571 (8) obj. -45.4341 iterations 2
Cbc0038I Pass  79: suminf.    3.51887 (10) obj. -45.4341 iterations 8
Cbc0038I Pass  80: suminf.    3.51887 (10) obj. -45.4341 iterations 0
Cbc0038I Pass  81: suminf.    2.97755 (9) obj. -45.4341 iterations 12
Cbc0038I Pass  82: suminf.    2.76117 (8) obj. -45.4341 iterations 10
Cbc0038I Pass  83: suminf.    2.76117 (8) obj. -45.4341 iterations 1
Cbc0038I Pass  84: suminf.    3.35682 (9) obj. -45.4341 iterations 7
Cbc0038I Pass  85: suminf.    2.83421 (7) obj. -45.4341 iterations 5
Cbc0038I Pass  86: suminf.    2.61522 (7) obj. -45.4341 iterations 6
Cbc0038I Pass  87: suminf.    3.51887 (10) obj. -45.4341 iterations 9
Cbc0038I Pass  88: suminf.    3.51887 (10) obj. -45.4341 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 96 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -35.8212 - took 0.14 seconds
Cbc0012I Integer solution of -35.82122 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 43 columns
Cbc0031I 14 added rows had average density of 60.214286
Cbc0013I At root node, 14 cuts changed objective from -62.053266 to -54.140718 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8781 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1558 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.82122 best solution, best possible -54.140718 (0.73 seconds)
Cbc0001I Search completed - best objective -35.82122, took 7677 iterations and 42 nodes (0.91 seconds)
Cbc0032I Strong branching done 566 times (11449 iterations), fathomed 1 nodes and fixed 18 variables
Cbc0035I Maximum depth 20, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       0.92

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-45) rows, 121 (-31) columns and 2076 (-1227) elements
Clp1000I sum of infeasibilities 2.86506e-07 - average 2.6285e-09, 21 fixed columns
Coin0506I Presolve 88 (-21) rows, 100 (-21) columns and 1436 (-640) elements
Clp0006I 0  Obj 60.868107 Dual inf 16.824966 (99)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.1585164 - largest nonzero change 2.5717089e-05 ( 0.0015380202%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 74.016634
Clp0000I Optimal - objective value 74.016634
Coin0511I After Postsolve, objective 74.016634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 74.016634
Clp0000I Optimal - objective value 74.016634
Clp0000I Optimal - objective value 74.016634
Clp0000I Optimal - objective value 74.016634
Coin0511I After Postsolve, objective 74.016634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.01663417 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 121 columns (121 integer (121 of which binary)) and 2082 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.632%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 5.38116
Cbc0038I Pass   1: suminf.    1.79238 (32) obj. -38.3504 iterations 23
Cbc0038I Pass   2: suminf.    1.79238 (32) obj. -38.3504 iterations 1
Cbc0038I Pass   3: suminf.    0.97554 (20) obj. -25.316 iterations 12
Cbc0038I Solution found of 6.15438
Cbc0038I Rounding solution of -7.4312 is better than previous of 6.15438

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 121 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -7.4312 to -10.0071 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.6771
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.79238 (32) obj. -38.3504 iterations 0
Cbc0038I Pass   5: suminf.    1.79238 (32) obj. -38.3504 iterations 1
Cbc0038I Pass   6: suminf.    0.58702 (13) obj. -18.7045 iterations 19
Cbc0038I Pass   7: suminf.    0.48619 (2) obj. -15.6771 iterations 21
Cbc0038I Pass   8: suminf.    0.48619 (2) obj. -15.6771 iterations 0
Cbc0038I Pass   9: suminf.    0.48403 (2) obj. -21.825 iterations 4
Cbc0038I Pass  10: suminf.    0.05405 (1) obj. -15.6776 iterations 1
Cbc0038I Pass  11: suminf.    1.45756 (18) obj. -24.9822 iterations 24
Cbc0038I Pass  12: suminf.    0.57456 (8) obj. -20.7709 iterations 9
Cbc0038I Pass  13: suminf.    0.62606 (3) obj. -15.6771 iterations 11
Cbc0038I Pass  14: suminf.    0.62606 (3) obj. -15.6771 iterations 0
Cbc0038I Pass  15: suminf.    0.62905 (2) obj. -15.6771 iterations 4
Cbc0038I Pass  16: suminf.    0.62905 (2) obj. -15.6771 iterations 1
Cbc0038I Pass  17: suminf.    0.48403 (2) obj. -20.825 iterations 2
Cbc0038I Pass  18: suminf.    0.12396 (2) obj. -15.6771 iterations 1
Cbc0038I Pass  19: suminf.    0.96236 (12) obj. -21.7061 iterations 34
Cbc0038I Pass  20: suminf.    0.96236 (12) obj. -21.7061 iterations 3
Cbc0038I Pass  21: suminf.    1.34193 (5) obj. -15.6771 iterations 20
Cbc0038I Pass  22: suminf.    1.27081 (5) obj. -15.6771 iterations 6
Cbc0038I Pass  23: suminf.    2.21980 (6) obj. -15.6771 iterations 6
Cbc0038I Pass  24: suminf.    1.27081 (5) obj. -15.6771 iterations 6
Cbc0038I Pass  25: suminf.    1.54898 (12) obj. -15.6771 iterations 25
Cbc0038I Pass  26: suminf.    0.91181 (11) obj. -17.8622 iterations 10
Cbc0038I Pass  27: suminf.    0.69191 (8) obj. -15.6771 iterations 24
Cbc0038I Pass  28: suminf.    0.55939 (7) obj. -15.6771 iterations 1
Cbc0038I Pass  29: suminf.    0.65602 (4) obj. -15.6771 iterations 11
Cbc0038I Pass  30: suminf.    0.57403 (7) obj. -15.6771 iterations 8
Cbc0038I Pass  31: suminf.    0.51406 (5) obj. -15.6771 iterations 6
Cbc0038I Pass  32: suminf.    0.30530 (6) obj. -15.6771 iterations 7
Cbc0038I Pass  33: suminf.    0.71684 (6) obj. -15.6771 iterations 11
Cbc0038I Rounding solution of -14.182 is better than previous of -10.0071

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 121 columns, reduced to 62 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -14.182 to -19.22 (0.14 seconds)
Cbc0038I Round again with cutoff of -28.7174
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.79238 (32) obj. -38.3504 iterations 0
Cbc0038I Pass  34: suminf.    1.79238 (32) obj. -38.3504 iterations 1
Cbc0038I Pass  35: suminf.    0.58472 (8) obj. -28.7174 iterations 27
Cbc0038I Pass  36: suminf.    0.58472 (8) obj. -28.7174 iterations 0
Cbc0038I Pass  37: suminf.    1.03095 (12) obj. -28.7174 iterations 14
Cbc0038I Pass  38: suminf.    1.03095 (12) obj. -28.7174 iterations 3
Cbc0038I Pass  39: suminf.    0.64722 (6) obj. -28.7174 iterations 12
Cbc0038I Pass  40: suminf.    0.60140 (6) obj. -28.7174 iterations 3
Cbc0038I Pass  41: suminf.    0.73369 (7) obj. -28.7174 iterations 7
Cbc0038I Pass  42: suminf.    0.71512 (7) obj. -28.7174 iterations 2
Cbc0038I Pass  43: suminf.    1.07744 (6) obj. -28.7174 iterations 11
Cbc0038I Pass  44: suminf.    0.87110 (5) obj. -28.7174 iterations 6
Cbc0038I Pass  45: suminf.    0.85966 (5) obj. -28.7174 iterations 6
Cbc0038I Pass  46: suminf.    0.54928 (4) obj. -28.7174 iterations 3
Cbc0038I Pass  47: suminf.    0.90026 (5) obj. -28.7174 iterations 5
Cbc0038I Pass  48: suminf.    1.38046 (12) obj. -28.7174 iterations 17
Cbc0038I Pass  49: suminf.    0.97809 (10) obj. -28.7174 iterations 6
Cbc0038I Pass  50: suminf.    1.28458 (8) obj. -28.7174 iterations 13
Cbc0038I Pass  51: suminf.    1.19055 (8) obj. -28.7174 iterations 2
Cbc0038I Pass  52: suminf.    0.93603 (6) obj. -28.7174 iterations 14
Cbc0038I Pass  53: suminf.    0.62210 (5) obj. -28.7174 iterations 9
Cbc0038I Pass  54: suminf.    1.14651 (6) obj. -28.7174 iterations 5
Cbc0038I Pass  55: suminf.    0.95425 (5) obj. -28.7174 iterations 5
Cbc0038I Pass  56: suminf.    1.27526 (6) obj. -28.7174 iterations 12
Cbc0038I Pass  57: suminf.    2.80682 (17) obj. -28.7174 iterations 22
Cbc0038I Pass  58: suminf.    1.51047 (15) obj. -28.7174 iterations 10
Cbc0038I Pass  59: suminf.    1.14651 (6) obj. -28.7174 iterations 20
Cbc0038I Pass  60: suminf.    1.42819 (11) obj. -28.7174 iterations 24
Cbc0038I Pass  61: suminf.    1.04109 (11) obj. -28.7174 iterations 9
Cbc0038I Pass  62: suminf.    1.05751 (8) obj. -28.7174 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 121 columns, reduced to 51 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -19.22 to -20.046 (0.18 seconds)
Cbc0038I Round again with cutoff of -40.114
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.08788 (42) obj. -40.114 iterations 8
Cbc0038I Pass  63: suminf.    1.96170 (33) obj. -40.114 iterations 3
Cbc0038I Pass  64: suminf.    1.85514 (23) obj. -40.114 iterations 24
Cbc0038I Pass  65: suminf.    1.55715 (15) obj. -40.114 iterations 39
Cbc0038I Pass  66: suminf.    1.55429 (15) obj. -40.114 iterations 2
Cbc0038I Pass  67: suminf.    1.99020 (13) obj. -40.114 iterations 12
Cbc0038I Pass  68: suminf.    1.59332 (12) obj. -40.114 iterations 9
Cbc0038I Pass  69: suminf.    1.99020 (13) obj. -40.114 iterations 10
Cbc0038I Pass  70: suminf.    1.62048 (12) obj. -40.114 iterations 13
Cbc0038I Pass  71: suminf.    3.91448 (22) obj. -40.114 iterations 19
Cbc0038I Pass  72: suminf.    2.52806 (19) obj. -40.114 iterations 7
Cbc0038I Pass  73: suminf.    1.57002 (18) obj. -40.114 iterations 4
Cbc0038I Pass  74: suminf.    1.46578 (18) obj. -40.8076 iterations 4
Cbc0038I Pass  75: suminf.    1.95385 (21) obj. -40.114 iterations 23
Cbc0038I Pass  76: suminf.    1.62048 (12) obj. -40.114 iterations 18
Cbc0038I Pass  77: suminf.    1.99020 (13) obj. -40.114 iterations 7
Cbc0038I Pass  78: suminf.    2.33985 (18) obj. -40.114 iterations 33
Cbc0038I Pass  79: suminf.    2.00470 (16) obj. -40.114 iterations 3
Cbc0038I Pass  80: suminf.    1.99020 (13) obj. -40.114 iterations 22
Cbc0038I Pass  81: suminf.    2.68424 (21) obj. -40.114 iterations 47
Cbc0038I Pass  82: suminf.    2.68424 (21) obj. -40.114 iterations 0
Cbc0038I Pass  83: suminf.    1.99020 (13) obj. -40.114 iterations 24
Cbc0038I Pass  84: suminf.    1.62048 (12) obj. -40.114 iterations 14
Cbc0038I Pass  85: suminf.    1.99020 (13) obj. -40.114 iterations 8
Cbc0038I Pass  86: suminf.    2.10792 (16) obj. -40.114 iterations 45
Cbc0038I Pass  87: suminf.    1.97774 (14) obj. -40.114 iterations 4
Cbc0038I Pass  88: suminf.    1.99020 (13) obj. -40.114 iterations 14
Cbc0038I Pass  89: suminf.    2.03154 (20) obj. -40.114 iterations 17
Cbc0038I Pass  90: suminf.    1.53504 (15) obj. -40.114 iterations 14
Cbc0038I Pass  91: suminf.    1.99020 (13) obj. -40.114 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -20.046 - took 0.18 seconds
Cbc0012I Integer solution of -20.04603 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 109 rows 121 columns, reduced to 50 rows 58 columns
Cbc0031I 62 added rows had average density of 36.419355
Cbc0013I At root node, 62 cuts changed objective from -66.706261 to -41.670967 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15368 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2425 row cuts average 113.7 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 78 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 695 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 964 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 347 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 147 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.463 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.04603 best solution, best possible -41.670967 (2.43 seconds)
Cbc0012I Integer solution of -22.34054 found by rounding after 6437 iterations and 4 nodes (2.75 seconds)
Cbc0012I Integer solution of -31.09672 found by DiveCoefficient after 6654 iterations and 6 nodes (2.85 seconds)
Cbc0012I Integer solution of -35.82122 found by rounding after 7451 iterations and 20 nodes (3.04 seconds)
Cbc0001I Search completed - best objective -35.82122, took 7451 iterations and 20 nodes (3.04 seconds)
Cbc0032I Strong branching done 462 times (10520 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 61 variables fixed on reduced cost
Total time (CPU seconds):       2.48   (Wallclock seconds):       3.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 0.00021822 - average 1.5813e-06, 19 fixed columns
Coin0506I Presolve 89 (-49) rows, 51 (-25) columns and 272 (-148) elements
Clp0000I Optimal - objective value 62.053266
Clp0000I Optimal - objective value 62.053266
Coin0511I After Postsolve, objective 62.053266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.053266
Clp0000I Optimal - objective value 62.053266
Clp0000I Optimal - objective value 62.053266
Coin0511I After Postsolve, objective 62.053266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.05326641 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 425 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.90108
Cbc0038I Solution found of -0.342875
Cbc0038I Relaxing continuous gives -8.33383
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -8.33383 to -29.0786 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.3762
Cbc0038I Pass   1: suminf.    2.68441 (27) obj. -32.3762 iterations 43
Cbc0038I Pass   2: suminf.    3.24473 (10) obj. -32.3762 iterations 33
Cbc0038I Pass   3: suminf.    3.24473 (10) obj. -32.3762 iterations 0
Cbc0038I Pass   4: suminf.    2.82478 (15) obj. -32.3762 iterations 25
Cbc0038I Pass   5: suminf.    4.31793 (14) obj. -32.3762 iterations 26
Cbc0038I Pass   6: suminf.    2.41152 (7) obj. -32.3762 iterations 21
Cbc0038I Pass   7: suminf.    1.17993 (4) obj. -32.3762 iterations 7
Cbc0038I Pass   8: suminf.    1.17070 (4) obj. -32.3762 iterations 1
Cbc0038I Pass   9: suminf.    1.15221 (3) obj. -32.3762 iterations 2
Cbc0038I Pass  10: suminf.    1.06816 (3) obj. -32.3762 iterations 1
Cbc0038I Pass  11: suminf.    0.89953 (3) obj. -32.3762 iterations 3
Cbc0038I Pass  12: suminf.    0.89953 (3) obj. -32.3762 iterations 0
Cbc0038I Pass  13: suminf.    1.14809 (3) obj. -32.3762 iterations 3
Cbc0038I Pass  14: suminf.    0.82399 (4) obj. -32.3762 iterations 12
Cbc0038I Pass  15: suminf.    0.74865 (4) obj. -32.3762 iterations 5
Cbc0038I Pass  16: suminf.    2.56841 (9) obj. -32.3762 iterations 23
Cbc0038I Pass  17: suminf.    1.31381 (5) obj. -32.3762 iterations 17
Cbc0038I Pass  18: suminf.    1.31381 (5) obj. -32.3762 iterations 0
Cbc0038I Pass  19: suminf.    1.35354 (4) obj. -32.3762 iterations 4
Cbc0038I Pass  20: suminf.    1.35354 (4) obj. -32.3762 iterations 0
Cbc0038I Pass  21: suminf.    1.36220 (4) obj. -32.3762 iterations 3
Cbc0038I Pass  22: suminf.    1.08484 (4) obj. -32.3762 iterations 1
Cbc0038I Pass  23: suminf.    1.62809 (4) obj. -32.3762 iterations 4
Cbc0038I Pass  24: suminf.    1.30697 (5) obj. -32.3762 iterations 3
Cbc0038I Pass  25: suminf.    1.66864 (5) obj. -32.3762 iterations 3
Cbc0038I Pass  26: suminf.    1.55807 (5) obj. -32.3762 iterations 1
Cbc0038I Pass  27: suminf.    1.82278 (5) obj. -32.3762 iterations 4
Cbc0038I Pass  28: suminf.    1.62825 (5) obj. -32.3762 iterations 1
Cbc0038I Pass  29: suminf.    1.57095 (5) obj. -32.3762 iterations 4
Cbc0038I Pass  30: suminf.    3.19099 (11) obj. -32.3762 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -29.0786 to -31.0967 (0.10 seconds)
Cbc0038I Round again with cutoff of -38.3116
Cbc0038I Pass  30: suminf.    3.34712 (27) obj. -38.3116 iterations 0
Cbc0038I Pass  31: suminf.    2.43956 (6) obj. -38.3116 iterations 23
Cbc0038I Pass  32: suminf.    1.69543 (4) obj. -38.3116 iterations 3
Cbc0038I Pass  33: suminf.    0.97624 (3) obj. -38.3116 iterations 2
Cbc0038I Pass  34: suminf.    0.72147 (3) obj. -38.3116 iterations 5
Cbc0038I Pass  35: suminf.    0.72147 (3) obj. -38.3116 iterations 0
Cbc0038I Pass  36: suminf.    0.92625 (3) obj. -38.3116 iterations 1
Cbc0038I Pass  37: suminf.    2.66811 (6) obj. -38.3116 iterations 11
Cbc0038I Pass  38: suminf.    1.86861 (5) obj. -38.3116 iterations 6
Cbc0038I Pass  39: suminf.    1.44395 (4) obj. -38.3116 iterations 4
Cbc0038I Pass  40: suminf.    1.40500 (5) obj. -38.3116 iterations 2
Cbc0038I Pass  41: suminf.    1.50634 (4) obj. -38.3116 iterations 3
Cbc0038I Pass  42: suminf.    1.30510 (4) obj. -38.3116 iterations 2
Cbc0038I Pass  43: suminf.    2.49759 (11) obj. -38.3116 iterations 18
Cbc0038I Pass  44: suminf.    1.53256 (5) obj. -38.3116 iterations 18
Cbc0038I Pass  45: suminf.    4.03366 (16) obj. -38.3116 iterations 19
Cbc0038I Pass  46: suminf.    2.30835 (7) obj. -38.3116 iterations 18
Cbc0038I Pass  47: suminf.    2.30835 (7) obj. -38.3116 iterations 0
Cbc0038I Pass  48: suminf.    2.26802 (6) obj. -38.3116 iterations 16
Cbc0038I Pass  49: suminf.    2.26802 (6) obj. -38.3116 iterations 0
Cbc0038I Pass  50: suminf.    2.18046 (6) obj. -38.3116 iterations 2
Cbc0038I Pass  51: suminf.    2.18046 (6) obj. -38.3116 iterations 1
Cbc0038I Pass  52: suminf.    2.26802 (6) obj. -38.3116 iterations 2
Cbc0038I Pass  53: suminf.    3.10621 (9) obj. -38.3116 iterations 13
Cbc0038I Pass  54: suminf.    1.90645 (7) obj. -38.3116 iterations 8
Cbc0038I Pass  55: suminf.    1.90231 (7) obj. -38.3116 iterations 2
Cbc0038I Pass  56: suminf.    2.39052 (6) obj. -38.3116 iterations 7
Cbc0038I Pass  57: suminf.    2.36058 (6) obj. -38.3116 iterations 1
Cbc0038I Pass  58: suminf.    2.16960 (6) obj. -38.3116 iterations 3
Cbc0038I Pass  59: suminf.    2.13807 (6) obj. -38.3116 iterations 3
Cbc0038I Rounding solution of -35.8212 is better than previous of -31.0967

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -45.4341
Cbc0038I Pass  59: suminf.    4.14237 (27) obj. -45.4341 iterations 0
Cbc0038I Pass  60: suminf.    4.34434 (13) obj. -45.4341 iterations 33
Cbc0038I Pass  61: suminf.    2.96077 (9) obj. -45.4341 iterations 13
Cbc0038I Pass  62: suminf.    3.13754 (8) obj. -45.4341 iterations 12
Cbc0038I Pass  63: suminf.    1.82254 (7) obj. -45.4341 iterations 12
Cbc0038I Pass  64: suminf.    1.73368 (6) obj. -45.4341 iterations 4
Cbc0038I Pass  65: suminf.    2.24431 (6) obj. -45.4341 iterations 6
Cbc0038I Pass  66: suminf.    1.89061 (6) obj. -45.4341 iterations 10
Cbc0038I Pass  67: suminf.    1.82031 (6) obj. -45.4341 iterations 2
Cbc0038I Pass  68: suminf.    4.81078 (22) obj. -45.4341 iterations 30
Cbc0038I Pass  69: suminf.    3.30646 (10) obj. -45.4341 iterations 25
Cbc0038I Pass  70: suminf.    2.55203 (7) obj. -45.4341 iterations 7
Cbc0038I Pass  71: suminf.    2.24431 (6) obj. -45.4341 iterations 7
Cbc0038I Pass  72: suminf.    1.89061 (6) obj. -45.4341 iterations 10
Cbc0038I Pass  73: suminf.    1.82031 (6) obj. -45.4341 iterations 2
Cbc0038I Pass  74: suminf.    1.73368 (6) obj. -45.4341 iterations 1
Cbc0038I Pass  75: suminf.    3.92862 (13) obj. -45.4341 iterations 21
Cbc0038I Pass  76: suminf.    2.62233 (7) obj. -45.4341 iterations 19
Cbc0038I Pass  77: suminf.    2.93571 (8) obj. -45.4341 iterations 8
Cbc0038I Pass  78: suminf.    2.93571 (8) obj. -45.4341 iterations 2
Cbc0038I Pass  79: suminf.    3.51887 (10) obj. -45.4341 iterations 8
Cbc0038I Pass  80: suminf.    3.51887 (10) obj. -45.4341 iterations 0
Cbc0038I Pass  81: suminf.    2.97755 (9) obj. -45.4341 iterations 12
Cbc0038I Pass  82: suminf.    2.76117 (8) obj. -45.4341 iterations 10
Cbc0038I Pass  83: suminf.    2.76117 (8) obj. -45.4341 iterations 1
Cbc0038I Pass  84: suminf.    3.35682 (9) obj. -45.4341 iterations 7
Cbc0038I Pass  85: suminf.    2.83421 (7) obj. -45.4341 iterations 5
Cbc0038I Pass  86: suminf.    2.61522 (7) obj. -45.4341 iterations 6
Cbc0038I Pass  87: suminf.    3.51887 (10) obj. -45.4341 iterations 9
Cbc0038I Pass  88: suminf.    3.51887 (10) obj. -45.4341 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 96 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -35.8212 - took 0.15 seconds
Cbc0012I Integer solution of -35.82122 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 43 columns
Cbc0031I 14 added rows had average density of 60.214286
Cbc0013I At root node, 14 cuts changed objective from -62.053266 to -54.140718 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8781 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1558 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.82122 best solution, best possible -54.140718 (0.84 seconds)
Cbc0001I Search completed - best objective -35.82122, took 7677 iterations and 42 nodes (1.05 seconds)
Cbc0032I Strong branching done 566 times (11449 iterations), fathomed 1 nodes and fixed 18 variables
Cbc0035I Maximum depth 20, 54 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 121 (-32) columns and 2076 (-1228) elements
Clp1000I sum of infeasibilities 2.86506e-07 - average 2.6285e-09, 21 fixed columns
Coin0506I Presolve 88 (-21) rows, 100 (-21) columns and 1436 (-640) elements
Clp0006I 0  Obj 60.868107 Dual inf 16.824966 (99)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.1585164 - largest nonzero change 2.5717089e-05 ( 0.0015380202%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 74.016634
Clp0000I Optimal - objective value 74.016634
Coin0511I After Postsolve, objective 74.016634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 74.016634
Clp0000I Optimal - objective value 74.016634
Clp0000I Optimal - objective value 74.016634
Clp0000I Optimal - objective value 74.016634
Coin0511I After Postsolve, objective 74.016634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.01663417 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 121 columns (121 integer (121 of which binary)) and 2082 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.632%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 5.38116
Cbc0038I Pass   1: suminf.    1.79238 (32) obj. -38.3504 iterations 23
Cbc0038I Pass   2: suminf.    1.79238 (32) obj. -38.3504 iterations 1
Cbc0038I Pass   3: suminf.    0.97554 (20) obj. -25.316 iterations 12
Cbc0038I Solution found of 6.15438
Cbc0038I Rounding solution of -7.4312 is better than previous of 6.15438

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 121 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -7.4312 to -10.0071 (0.03 seconds)
Cbc0038I Round again with cutoff of -15.6771
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.79238 (32) obj. -38.3504 iterations 0
Cbc0038I Pass   5: suminf.    1.79238 (32) obj. -38.3504 iterations 1
Cbc0038I Pass   6: suminf.    0.58702 (13) obj. -18.7045 iterations 19
Cbc0038I Pass   7: suminf.    0.48619 (2) obj. -15.6771 iterations 21
Cbc0038I Pass   8: suminf.    0.48619 (2) obj. -15.6771 iterations 0
Cbc0038I Pass   9: suminf.    0.48403 (2) obj. -21.825 iterations 4
Cbc0038I Pass  10: suminf.    0.05405 (1) obj. -15.6776 iterations 1
Cbc0038I Pass  11: suminf.    1.45756 (18) obj. -24.9822 iterations 24
Cbc0038I Pass  12: suminf.    0.57456 (8) obj. -20.7709 iterations 9
Cbc0038I Pass  13: suminf.    0.62606 (3) obj. -15.6771 iterations 11
Cbc0038I Pass  14: suminf.    0.62606 (3) obj. -15.6771 iterations 0
Cbc0038I Pass  15: suminf.    0.62905 (2) obj. -15.6771 iterations 4
Cbc0038I Pass  16: suminf.    0.62905 (2) obj. -15.6771 iterations 1
Cbc0038I Pass  17: suminf.    0.48403 (2) obj. -20.825 iterations 2
Cbc0038I Pass  18: suminf.    0.12396 (2) obj. -15.6771 iterations 1
Cbc0038I Pass  19: suminf.    0.96236 (12) obj. -21.7061 iterations 34
Cbc0038I Pass  20: suminf.    0.96236 (12) obj. -21.7061 iterations 3
Cbc0038I Pass  21: suminf.    1.34193 (5) obj. -15.6771 iterations 20
Cbc0038I Pass  22: suminf.    1.27081 (5) obj. -15.6771 iterations 6
Cbc0038I Pass  23: suminf.    2.21980 (6) obj. -15.6771 iterations 6
Cbc0038I Pass  24: suminf.    1.27081 (5) obj. -15.6771 iterations 6
Cbc0038I Pass  25: suminf.    1.54898 (12) obj. -15.6771 iterations 25
Cbc0038I Pass  26: suminf.    0.91181 (11) obj. -17.8622 iterations 10
Cbc0038I Pass  27: suminf.    0.69191 (8) obj. -15.6771 iterations 24
Cbc0038I Pass  28: suminf.    0.55939 (7) obj. -15.6771 iterations 1
Cbc0038I Pass  29: suminf.    0.65602 (4) obj. -15.6771 iterations 11
Cbc0038I Pass  30: suminf.    0.57403 (7) obj. -15.6771 iterations 8
Cbc0038I Pass  31: suminf.    0.51406 (5) obj. -15.6771 iterations 6
Cbc0038I Pass  32: suminf.    0.30530 (6) obj. -15.6771 iterations 7
Cbc0038I Pass  33: suminf.    0.71684 (6) obj. -15.6771 iterations 11
Cbc0038I Rounding solution of -14.182 is better than previous of -10.0071

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 121 columns, reduced to 62 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -14.182 to -19.22 (0.15 seconds)
Cbc0038I Round again with cutoff of -28.7174
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.79238 (32) obj. -38.3504 iterations 0
Cbc0038I Pass  34: suminf.    1.79238 (32) obj. -38.3504 iterations 1
Cbc0038I Pass  35: suminf.    0.58472 (8) obj. -28.7174 iterations 27
Cbc0038I Pass  36: suminf.    0.58472 (8) obj. -28.7174 iterations 0
Cbc0038I Pass  37: suminf.    1.03095 (12) obj. -28.7174 iterations 14
Cbc0038I Pass  38: suminf.    1.03095 (12) obj. -28.7174 iterations 3
Cbc0038I Pass  39: suminf.    0.64722 (6) obj. -28.7174 iterations 12
Cbc0038I Pass  40: suminf.    0.60140 (6) obj. -28.7174 iterations 3
Cbc0038I Pass  41: suminf.    0.73369 (7) obj. -28.7174 iterations 7
Cbc0038I Pass  42: suminf.    0.71512 (7) obj. -28.7174 iterations 2
Cbc0038I Pass  43: suminf.    1.07744 (6) obj. -28.7174 iterations 11
Cbc0038I Pass  44: suminf.    0.87110 (5) obj. -28.7174 iterations 6
Cbc0038I Pass  45: suminf.    0.85966 (5) obj. -28.7174 iterations 6
Cbc0038I Pass  46: suminf.    0.54928 (4) obj. -28.7174 iterations 3
Cbc0038I Pass  47: suminf.    0.90026 (5) obj. -28.7174 iterations 5
Cbc0038I Pass  48: suminf.    1.38046 (12) obj. -28.7174 iterations 17
Cbc0038I Pass  49: suminf.    0.97809 (10) obj. -28.7174 iterations 6
Cbc0038I Pass  50: suminf.    1.28458 (8) obj. -28.7174 iterations 13
Cbc0038I Pass  51: suminf.    1.19055 (8) obj. -28.7174 iterations 2
Cbc0038I Pass  52: suminf.    0.93603 (6) obj. -28.7174 iterations 14
Cbc0038I Pass  53: suminf.    0.62210 (5) obj. -28.7174 iterations 9
Cbc0038I Pass  54: suminf.    1.14651 (6) obj. -28.7174 iterations 5
Cbc0038I Pass  55: suminf.    0.95425 (5) obj. -28.7174 iterations 5
Cbc0038I Pass  56: suminf.    1.27526 (6) obj. -28.7174 iterations 12
Cbc0038I Pass  57: suminf.    2.80682 (17) obj. -28.7174 iterations 22
Cbc0038I Pass  58: suminf.    1.51047 (15) obj. -28.7174 iterations 10
Cbc0038I Pass  59: suminf.    1.14651 (6) obj. -28.7174 iterations 20
Cbc0038I Pass  60: suminf.    1.42819 (11) obj. -28.7174 iterations 24
Cbc0038I Pass  61: suminf.    1.04109 (11) obj. -28.7174 iterations 9
Cbc0038I Pass  62: suminf.    1.05751 (8) obj. -28.7174 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 121 columns, reduced to 51 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -19.22 to -20.046 (0.21 seconds)
Cbc0038I Round again with cutoff of -40.114
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.08788 (42) obj. -40.114 iterations 8
Cbc0038I Pass  63: suminf.    1.96170 (33) obj. -40.114 iterations 3
Cbc0038I Pass  64: suminf.    1.85514 (23) obj. -40.114 iterations 24
Cbc0038I Pass  65: suminf.    1.55715 (15) obj. -40.114 iterations 39
Cbc0038I Pass  66: suminf.    1.55429 (15) obj. -40.114 iterations 2
Cbc0038I Pass  67: suminf.    1.99020 (13) obj. -40.114 iterations 12
Cbc0038I Pass  68: suminf.    1.59332 (12) obj. -40.114 iterations 9
Cbc0038I Pass  69: suminf.    1.99020 (13) obj. -40.114 iterations 10
Cbc0038I Pass  70: suminf.    1.62048 (12) obj. -40.114 iterations 13
Cbc0038I Pass  71: suminf.    3.91448 (22) obj. -40.114 iterations 19
Cbc0038I Pass  72: suminf.    2.52806 (19) obj. -40.114 iterations 7
Cbc0038I Pass  73: suminf.    1.57002 (18) obj. -40.114 iterations 4
Cbc0038I Pass  74: suminf.    1.46578 (18) obj. -40.8076 iterations 4
Cbc0038I Pass  75: suminf.    1.95385 (21) obj. -40.114 iterations 23
Cbc0038I Pass  76: suminf.    1.62048 (12) obj. -40.114 iterations 18
Cbc0038I Pass  77: suminf.    1.99020 (13) obj. -40.114 iterations 7
Cbc0038I Pass  78: suminf.    2.33985 (18) obj. -40.114 iterations 33
Cbc0038I Pass  79: suminf.    2.00470 (16) obj. -40.114 iterations 3
Cbc0038I Pass  80: suminf.    1.99020 (13) obj. -40.114 iterations 22
Cbc0038I Pass  81: suminf.    2.68424 (21) obj. -40.114 iterations 47
Cbc0038I Pass  82: suminf.    2.68424 (21) obj. -40.114 iterations 0
Cbc0038I Pass  83: suminf.    1.99020 (13) obj. -40.114 iterations 24
Cbc0038I Pass  84: suminf.    1.62048 (12) obj. -40.114 iterations 14
Cbc0038I Pass  85: suminf.    1.99020 (13) obj. -40.114 iterations 8
Cbc0038I Pass  86: suminf.    2.10792 (16) obj. -40.114 iterations 45
Cbc0038I Pass  87: suminf.    1.97774 (14) obj. -40.114 iterations 4
Cbc0038I Pass  88: suminf.    1.99020 (13) obj. -40.114 iterations 14
Cbc0038I Pass  89: suminf.    2.03154 (20) obj. -40.114 iterations 17
Cbc0038I Pass  90: suminf.    1.53504 (15) obj. -40.114 iterations 14
Cbc0038I Pass  91: suminf.    1.99020 (13) obj. -40.114 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -20.046 - took 0.22 seconds
Cbc0012I Integer solution of -20.04603 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 109 rows 121 columns, reduced to 50 rows 58 columns
Cbc0031I 62 added rows had average density of 36.419355
Cbc0013I At root node, 62 cuts changed objective from -66.706261 to -41.670967 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15368 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2425 row cuts average 113.7 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 78 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 695 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 964 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 347 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 147 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.480 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.04603 best solution, best possible -41.670967 (2.63 seconds)
Cbc0012I Integer solution of -22.34054 found by rounding after 6437 iterations and 4 nodes (2.99 seconds)
Cbc0012I Integer solution of -31.09672 found by DiveCoefficient after 6654 iterations and 6 nodes (3.09 seconds)
Cbc0012I Integer solution of -35.82122 found by rounding after 7451 iterations and 20 nodes (3.29 seconds)
Cbc0001I Search completed - best objective -35.82122, took 7451 iterations and 20 nodes (3.29 seconds)
Cbc0032I Strong branching done 462 times (10520 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 61 variables fixed on reduced cost
Total time (CPU seconds):       2.66   (Wallclock seconds):       3.31

