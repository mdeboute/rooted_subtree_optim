Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 4.92767e-05 - average 5.53671e-07, 1 fixed columns
Coin0506I Presolve 87 (-2) rows, 50 (-1) columns and 266 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 34.527085
Clp0000I Optimal - objective value 34.527085
Coin0511I After Postsolve, objective 34.527085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.527085
Clp0000I Optimal - objective value 34.527085
Clp0000I Optimal - objective value 34.527085
Coin0511I After Postsolve, objective 34.527085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.52708523 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.36951
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.63574 iterations 33
Cbc0038I Solution found of 9.63574
Cbc0038I Relaxing continuous gives 9.63574
Cbc0038I Rounding solution of 7.48606 is better than previous of 9.63574

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 7.48606 to -2.13692 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.37603
Cbc0038I Pass   2: suminf.    1.79923 (6) obj. -5.37603 iterations 8
Cbc0038I Pass   3: suminf.    1.48658 (7) obj. -5.37603 iterations 8
Cbc0038I Pass   4: suminf.    1.17212 (8) obj. -5.37603 iterations 1
Cbc0038I Pass   5: suminf.    1.17212 (8) obj. -5.37603 iterations 0
Cbc0038I Pass   6: suminf.    1.82470 (5) obj. -5.37603 iterations 8
Cbc0038I Pass   7: suminf.    1.39165 (6) obj. -5.37603 iterations 2
Cbc0038I Pass   8: suminf.    1.39165 (6) obj. -5.37603 iterations 0
Cbc0038I Pass   9: suminf.    1.73960 (5) obj. -5.37603 iterations 8
Cbc0038I Pass  10: suminf.    1.43429 (7) obj. -5.37603 iterations 5
Cbc0038I Pass  11: suminf.    1.72429 (7) obj. -5.37603 iterations 7
Cbc0038I Pass  12: suminf.    1.21496 (7) obj. -5.37603 iterations 3
Cbc0038I Pass  13: suminf.    1.65768 (5) obj. -5.37603 iterations 10
Cbc0038I Pass  14: suminf.    0.95256 (5) obj. -5.37603 iterations 3
Cbc0038I Pass  15: suminf.    0.91453 (5) obj. -5.37603 iterations 1
Cbc0038I Pass  16: suminf.    1.84230 (6) obj. -5.37603 iterations 7
Cbc0038I Pass  17: suminf.    1.82470 (5) obj. -5.37603 iterations 5
Cbc0038I Pass  18: suminf.    1.39165 (6) obj. -5.37603 iterations 2
Cbc0038I Pass  19: suminf.    1.39165 (6) obj. -5.37603 iterations 0
Cbc0038I Pass  20: suminf.    1.73960 (5) obj. -5.37603 iterations 8
Cbc0038I Pass  21: suminf.    1.43429 (7) obj. -5.37603 iterations 5
Cbc0038I Pass  22: suminf.    1.72429 (7) obj. -5.37603 iterations 7
Cbc0038I Pass  23: suminf.    1.21496 (7) obj. -5.37603 iterations 3
Cbc0038I Pass  24: suminf.    1.65768 (5) obj. -5.37603 iterations 10
Cbc0038I Pass  25: suminf.    0.95256 (5) obj. -5.37603 iterations 3
Cbc0038I Pass  26: suminf.    0.91453 (5) obj. -5.37603 iterations 1
Cbc0038I Pass  27: suminf.    1.84230 (6) obj. -5.37603 iterations 7
Cbc0038I Pass  28: suminf.    1.82470 (5) obj. -5.37603 iterations 5
Cbc0038I Pass  29: suminf.    1.39165 (6) obj. -5.37603 iterations 2
Cbc0038I Pass  30: suminf.    1.39165 (6) obj. -5.37603 iterations 0
Cbc0038I Pass  31: suminf.    1.73960 (5) obj. -5.37603 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2.13692 - took 0.04 seconds
Cbc0012I Integer solution of -2.13692 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 68 rows 40 columns
Cbc0031I 23 added rows had average density of 42.869565
Cbc0013I At root node, 23 cuts changed objective from -34.527085 to -24.206398 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10564 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1724 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 111 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 15 nodes, 10 on tree, -2.13692 best solution, best possible -24.206398 (0.68 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 49 rows 29 columns
Cbc0012I Integer solution of -2.20027 found by rounding after 8363 iterations and 61 nodes (0.76 seconds)
Cbc0001I Search completed - best objective -2.200269999999996, took 8915 iterations and 76 nodes (0.78 seconds)
Cbc0032I Strong branching done 754 times (13002 iterations), fathomed 5 nodes and fixed 40 variables
Cbc0035I Maximum depth 23, 115 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.79

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-33) rows, 82 (-20) columns and 1005 (-573) elements
Clp1000I sum of infeasibilities 1.11973e-07 - average 1.57708e-09, 6 fixed columns
Coin0506I Presolve 66 (-5) rows, 76 (-6) columns and 875 (-130) elements
Clp0006I 0  Obj 24.231624 Dual inf 2.0685805 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 4.5337418 - largest nonzero change 2.9067692e-05 ( 0.001281334%) - largest zero change 2.9495848e-05
Clp0000I Optimal - objective value 44.454749
Clp0000I Optimal - objective value 44.454749
Coin0511I After Postsolve, objective 44.454749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 44.454749
Clp0000I Optimal - objective value 44.454749
Clp0000I Optimal - objective value 44.454749
Clp0000I Optimal - objective value 44.454749
Coin0511I After Postsolve, objective 44.454749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.45474887 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 82 columns (82 integer (82 of which binary)) and 1007 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.800%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 6.08989
Cbc0038I Pass   1: suminf.    2.74736 (23) obj. -26.309 iterations 13
Cbc0038I Pass   2: suminf.    2.74736 (23) obj. -26.309 iterations 1
Cbc0038I Pass   3: suminf.    0.17424 (2) obj. 11.1097 iterations 21
Cbc0038I Solution found of 14.7536
Cbc0038I Rounding solution of 9.58865 is better than previous of 14.7536

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 82 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 9.58865 to 6.45735 (0.02 seconds)
Cbc0038I Round again with cutoff of 2.07028
Cbc0038I Pass   4: suminf.    2.74736 (23) obj. -26.309 iterations 0
Cbc0038I Pass   5: suminf.    2.74736 (23) obj. -26.309 iterations 1
Cbc0038I Pass   6: suminf.    0.62641 (5) obj. 2.07028 iterations 22
Cbc0038I Pass   7: suminf.    0.62641 (5) obj. 2.07028 iterations 0
Cbc0038I Pass   8: suminf.    0.32476 (2) obj. 2.07028 iterations 4
Cbc0038I Pass   9: suminf.    0.18367 (1) obj. 1.17134 iterations 2
Cbc0038I Pass  10: suminf.    0.32476 (2) obj. 2.07028 iterations 2
Cbc0038I Pass  11: suminf.    2.07631 (8) obj. 2.07028 iterations 23
Cbc0038I Pass  12: suminf.    0.92724 (6) obj. 2.07028 iterations 4
Cbc0038I Pass  13: suminf.    0.55308 (3) obj. 2.07028 iterations 16
Cbc0038I Pass  14: suminf.    0.18367 (1) obj. -0.0864522 iterations 2
Cbc0038I Pass  15: suminf.    0.51070 (2) obj. 2.07028 iterations 2
Cbc0038I Pass  16: suminf.    2.77803 (12) obj. 2.07028 iterations 27
Cbc0038I Pass  17: suminf.    1.53589 (9) obj. 2.07028 iterations 9
Cbc0038I Pass  18: suminf.    1.36051 (8) obj. 0.892443 iterations 2
Cbc0038I Pass  19: suminf.    1.24588 (6) obj. 2.07028 iterations 14
Cbc0038I Pass  20: suminf.    1.24588 (6) obj. 2.07028 iterations 0
Cbc0038I Pass  21: suminf.    1.63352 (5) obj. 2.07028 iterations 8
Cbc0038I Pass  22: suminf.    1.33835 (6) obj. 2.07028 iterations 1
Cbc0038I Pass  23: suminf.    0.74425 (5) obj. 2.07028 iterations 13
Cbc0038I Pass  24: suminf.    0.74425 (5) obj. 2.07028 iterations 0
Cbc0038I Pass  25: suminf.    1.13932 (5) obj. 2.07028 iterations 8
Cbc0038I Pass  26: suminf.    1.13940 (4) obj. 2.07028 iterations 6
Cbc0038I Pass  27: suminf.    1.06406 (4) obj. 2.07028 iterations 4
Cbc0038I Pass  28: suminf.    0.51982 (4) obj. 2.07028 iterations 2
Cbc0038I Pass  29: suminf.    0.80578 (3) obj. 2.07028 iterations 4
Cbc0038I Pass  30: suminf.    3.01368 (17) obj. 2.07028 iterations 32
Cbc0038I Pass  31: suminf.    2.28515 (11) obj. 2.07028 iterations 12
Cbc0038I Pass  32: suminf.    0.61250 (2) obj. 2.07028 iterations 19
Cbc0038I Pass  33: suminf.    0.61250 (2) obj. 2.07028 iterations 2
Cbc0038I Rounding solution of 4.8935 is better than previous of 6.45735

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 82 columns, reduced to 44 rows 52 columns
Cbc0038I Mini branch and bound improved solution from 4.8935 to -2.13692 (0.05 seconds)
Cbc0038I Round again with cutoff of -9.19211
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.74736 (23) obj. -26.309 iterations 0
Cbc0038I Pass  34: suminf.    2.74736 (23) obj. -26.309 iterations 1
Cbc0038I Pass  35: suminf.    1.63775 (9) obj. -9.19211 iterations 32
Cbc0038I Pass  36: suminf.    1.55810 (6) obj. -9.19211 iterations 1
Cbc0038I Pass  37: suminf.    1.32554 (8) obj. -9.19211 iterations 5
Cbc0038I Pass  38: suminf.    1.45040 (5) obj. -9.19211 iterations 15
Cbc0038I Pass  39: suminf.    1.45040 (5) obj. -9.19211 iterations 2
Cbc0038I Pass  40: suminf.    1.34522 (5) obj. -9.19211 iterations 3
Cbc0038I Pass  41: suminf.    1.11172 (5) obj. -10.3596 iterations 2
Cbc0038I Pass  42: suminf.    1.45040 (5) obj. -9.19211 iterations 4
Cbc0038I Pass  43: suminf.    1.64118 (8) obj. -9.19211 iterations 17
Cbc0038I Pass  44: suminf.    1.64118 (8) obj. -9.19211 iterations 2
Cbc0038I Pass  45: suminf.    1.34448 (5) obj. -9.19211 iterations 11
Cbc0038I Pass  46: suminf.    1.34448 (5) obj. -9.19211 iterations 0
Cbc0038I Pass  47: suminf.    1.29360 (5) obj. -9.19211 iterations 3
Cbc0038I Pass  48: suminf.    0.84557 (4) obj. -9.19211 iterations 2
Cbc0038I Pass  49: suminf.    1.06649 (4) obj. -9.19211 iterations 4
Cbc0038I Pass  50: suminf.    2.04559 (12) obj. -9.19211 iterations 27
Cbc0038I Pass  51: suminf.    1.43344 (9) obj. -9.19211 iterations 7
Cbc0038I Pass  52: suminf.    0.95613 (5) obj. -9.19211 iterations 11
Cbc0038I Pass  53: suminf.    0.83581 (5) obj. -9.55306 iterations 2
Cbc0038I Pass  54: suminf.    1.54486 (6) obj. -9.19211 iterations 7
Cbc0038I Pass  55: suminf.    0.88816 (5) obj. -9.44355 iterations 4
Cbc0038I Pass  56: suminf.    2.04034 (10) obj. -9.19211 iterations 19
Cbc0038I Pass  57: suminf.    1.90470 (11) obj. -9.19211 iterations 5
Cbc0038I Pass  58: suminf.    2.33343 (11) obj. -9.19211 iterations 14
Cbc0038I Pass  59: suminf.    2.32249 (10) obj. -9.19211 iterations 2
Cbc0038I Pass  60: suminf.    2.10486 (9) obj. -9.19211 iterations 7
Cbc0038I Pass  61: suminf.    1.78916 (9) obj. -9.19211 iterations 8
Cbc0038I Pass  62: suminf.    2.12939 (9) obj. -9.19211 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 82 columns, reduced to 36 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.13692 - took 0.06 seconds
Cbc0012I Integer solution of -2.13692 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 71 rows 82 columns, reduced to 37 rows 41 columns
Cbc0031I 49 added rows had average density of 20.428571
Cbc0013I At root node, 49 cuts changed objective from -37.412484 to -11.999068 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11940 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1714 row cuts average 78.6 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1391 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 387 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.615 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.13692 best solution, best possible -11.999068 (1.96 seconds)
Cbc0012I Integer solution of -2.20027 found by rounding after 5360 iterations and 6 nodes (2.21 seconds)
Cbc0001I Search completed - best objective -2.200269999999996, took 5919 iterations and 20 nodes (2.26 seconds)
Cbc0032I Strong branching done 412 times (7239 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 37 variables fixed on reduced cost
Total time (CPU seconds):       1.68   (Wallclock seconds):       2.27

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 4.92767e-05 - average 5.53671e-07, 1 fixed columns
Coin0506I Presolve 87 (-2) rows, 50 (-1) columns and 266 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 34.527085
Clp0000I Optimal - objective value 34.527085
Coin0511I After Postsolve, objective 34.527085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.527085
Clp0000I Optimal - objective value 34.527085
Clp0000I Optimal - objective value 34.527085
Coin0511I After Postsolve, objective 34.527085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.52708523 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.36951
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.63574 iterations 33
Cbc0038I Solution found of 9.63574
Cbc0038I Relaxing continuous gives 9.63574
Cbc0038I Rounding solution of 7.48606 is better than previous of 9.63574

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 7.48606 to -2.13692 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.37603
Cbc0038I Pass   2: suminf.    1.79923 (6) obj. -5.37603 iterations 8
Cbc0038I Pass   3: suminf.    1.48658 (7) obj. -5.37603 iterations 8
Cbc0038I Pass   4: suminf.    1.17212 (8) obj. -5.37603 iterations 1
Cbc0038I Pass   5: suminf.    1.17212 (8) obj. -5.37603 iterations 0
Cbc0038I Pass   6: suminf.    1.82470 (5) obj. -5.37603 iterations 8
Cbc0038I Pass   7: suminf.    1.39165 (6) obj. -5.37603 iterations 2
Cbc0038I Pass   8: suminf.    1.39165 (6) obj. -5.37603 iterations 0
Cbc0038I Pass   9: suminf.    1.73960 (5) obj. -5.37603 iterations 8
Cbc0038I Pass  10: suminf.    1.43429 (7) obj. -5.37603 iterations 5
Cbc0038I Pass  11: suminf.    1.72429 (7) obj. -5.37603 iterations 7
Cbc0038I Pass  12: suminf.    1.21496 (7) obj. -5.37603 iterations 3
Cbc0038I Pass  13: suminf.    1.65768 (5) obj. -5.37603 iterations 10
Cbc0038I Pass  14: suminf.    0.95256 (5) obj. -5.37603 iterations 3
Cbc0038I Pass  15: suminf.    0.91453 (5) obj. -5.37603 iterations 1
Cbc0038I Pass  16: suminf.    1.84230 (6) obj. -5.37603 iterations 7
Cbc0038I Pass  17: suminf.    1.82470 (5) obj. -5.37603 iterations 5
Cbc0038I Pass  18: suminf.    1.39165 (6) obj. -5.37603 iterations 2
Cbc0038I Pass  19: suminf.    1.39165 (6) obj. -5.37603 iterations 0
Cbc0038I Pass  20: suminf.    1.73960 (5) obj. -5.37603 iterations 8
Cbc0038I Pass  21: suminf.    1.43429 (7) obj. -5.37603 iterations 5
Cbc0038I Pass  22: suminf.    1.72429 (7) obj. -5.37603 iterations 7
Cbc0038I Pass  23: suminf.    1.21496 (7) obj. -5.37603 iterations 3
Cbc0038I Pass  24: suminf.    1.65768 (5) obj. -5.37603 iterations 10
Cbc0038I Pass  25: suminf.    0.95256 (5) obj. -5.37603 iterations 3
Cbc0038I Pass  26: suminf.    0.91453 (5) obj. -5.37603 iterations 1
Cbc0038I Pass  27: suminf.    1.84230 (6) obj. -5.37603 iterations 7
Cbc0038I Pass  28: suminf.    1.82470 (5) obj. -5.37603 iterations 5
Cbc0038I Pass  29: suminf.    1.39165 (6) obj. -5.37603 iterations 2
Cbc0038I Pass  30: suminf.    1.39165 (6) obj. -5.37603 iterations 0
Cbc0038I Pass  31: suminf.    1.73960 (5) obj. -5.37603 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2.13692 - took 0.04 seconds
Cbc0012I Integer solution of -2.13692 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 68 rows 40 columns
Cbc0031I 23 added rows had average density of 42.869565
Cbc0013I At root node, 23 cuts changed objective from -34.527085 to -24.206398 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10564 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1724 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 111 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -2.13692 best solution, best possible -24.206398 (0.70 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 49 rows 29 columns
Cbc0012I Integer solution of -2.20027 found by rounding after 8363 iterations and 61 nodes (0.86 seconds)
Cbc0001I Search completed - best objective -2.200269999999996, took 8915 iterations and 76 nodes (0.87 seconds)
Cbc0032I Strong branching done 754 times (13002 iterations), fathomed 5 nodes and fixed 40 variables
Cbc0035I Maximum depth 23, 115 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-34) rows, 82 (-21) columns and 1005 (-574) elements
Clp1000I sum of infeasibilities 1.11973e-07 - average 1.57708e-09, 6 fixed columns
Coin0506I Presolve 66 (-5) rows, 76 (-6) columns and 875 (-130) elements
Clp0006I 0  Obj 24.231624 Dual inf 2.0685805 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 4.5337418 - largest nonzero change 2.9067692e-05 ( 0.001281334%) - largest zero change 2.9495848e-05
Clp0000I Optimal - objective value 44.454749
Clp0000I Optimal - objective value 44.454749
Coin0511I After Postsolve, objective 44.454749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 44.454749
Clp0000I Optimal - objective value 44.454749
Clp0000I Optimal - objective value 44.454749
Clp0000I Optimal - objective value 44.454749
Coin0511I After Postsolve, objective 44.454749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.45474887 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 82 columns (82 integer (82 of which binary)) and 1007 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.800%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 6.08989
Cbc0038I Pass   1: suminf.    2.74736 (23) obj. -26.309 iterations 13
Cbc0038I Pass   2: suminf.    2.74736 (23) obj. -26.309 iterations 1
Cbc0038I Pass   3: suminf.    0.17424 (2) obj. 11.1097 iterations 21
Cbc0038I Solution found of 14.7536
Cbc0038I Rounding solution of 9.58865 is better than previous of 14.7536

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 82 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 9.58865 to 6.45735 (0.02 seconds)
Cbc0038I Round again with cutoff of 2.07028
Cbc0038I Pass   4: suminf.    2.74736 (23) obj. -26.309 iterations 0
Cbc0038I Pass   5: suminf.    2.74736 (23) obj. -26.309 iterations 1
Cbc0038I Pass   6: suminf.    0.62641 (5) obj. 2.07028 iterations 22
Cbc0038I Pass   7: suminf.    0.62641 (5) obj. 2.07028 iterations 0
Cbc0038I Pass   8: suminf.    0.32476 (2) obj. 2.07028 iterations 4
Cbc0038I Pass   9: suminf.    0.18367 (1) obj. 1.17134 iterations 2
Cbc0038I Pass  10: suminf.    0.32476 (2) obj. 2.07028 iterations 2
Cbc0038I Pass  11: suminf.    2.07631 (8) obj. 2.07028 iterations 23
Cbc0038I Pass  12: suminf.    0.92724 (6) obj. 2.07028 iterations 4
Cbc0038I Pass  13: suminf.    0.55308 (3) obj. 2.07028 iterations 16
Cbc0038I Pass  14: suminf.    0.18367 (1) obj. -0.0864522 iterations 2
Cbc0038I Pass  15: suminf.    0.51070 (2) obj. 2.07028 iterations 2
Cbc0038I Pass  16: suminf.    2.77803 (12) obj. 2.07028 iterations 27
Cbc0038I Pass  17: suminf.    1.53589 (9) obj. 2.07028 iterations 9
Cbc0038I Pass  18: suminf.    1.36051 (8) obj. 0.892443 iterations 2
Cbc0038I Pass  19: suminf.    1.24588 (6) obj. 2.07028 iterations 14
Cbc0038I Pass  20: suminf.    1.24588 (6) obj. 2.07028 iterations 0
Cbc0038I Pass  21: suminf.    1.63352 (5) obj. 2.07028 iterations 8
Cbc0038I Pass  22: suminf.    1.33835 (6) obj. 2.07028 iterations 1
Cbc0038I Pass  23: suminf.    0.74425 (5) obj. 2.07028 iterations 13
Cbc0038I Pass  24: suminf.    0.74425 (5) obj. 2.07028 iterations 0
Cbc0038I Pass  25: suminf.    1.13932 (5) obj. 2.07028 iterations 8
Cbc0038I Pass  26: suminf.    1.13940 (4) obj. 2.07028 iterations 6
Cbc0038I Pass  27: suminf.    1.06406 (4) obj. 2.07028 iterations 4
Cbc0038I Pass  28: suminf.    0.51982 (4) obj. 2.07028 iterations 2
Cbc0038I Pass  29: suminf.    0.80578 (3) obj. 2.07028 iterations 4
Cbc0038I Pass  30: suminf.    3.01368 (17) obj. 2.07028 iterations 32
Cbc0038I Pass  31: suminf.    2.28515 (11) obj. 2.07028 iterations 12
Cbc0038I Pass  32: suminf.    0.61250 (2) obj. 2.07028 iterations 19
Cbc0038I Pass  33: suminf.    0.61250 (2) obj. 2.07028 iterations 2
Cbc0038I Rounding solution of 4.8935 is better than previous of 6.45735

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 82 columns, reduced to 44 rows 52 columns
Cbc0038I Mini branch and bound improved solution from 4.8935 to -2.13692 (0.05 seconds)
Cbc0038I Round again with cutoff of -9.19211
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.74736 (23) obj. -26.309 iterations 0
Cbc0038I Pass  34: suminf.    2.74736 (23) obj. -26.309 iterations 1
Cbc0038I Pass  35: suminf.    1.63775 (9) obj. -9.19211 iterations 32
Cbc0038I Pass  36: suminf.    1.55810 (6) obj. -9.19211 iterations 1
Cbc0038I Pass  37: suminf.    1.32554 (8) obj. -9.19211 iterations 5
Cbc0038I Pass  38: suminf.    1.45040 (5) obj. -9.19211 iterations 15
Cbc0038I Pass  39: suminf.    1.45040 (5) obj. -9.19211 iterations 2
Cbc0038I Pass  40: suminf.    1.34522 (5) obj. -9.19211 iterations 3
Cbc0038I Pass  41: suminf.    1.11172 (5) obj. -10.3596 iterations 2
Cbc0038I Pass  42: suminf.    1.45040 (5) obj. -9.19211 iterations 4
Cbc0038I Pass  43: suminf.    1.64118 (8) obj. -9.19211 iterations 17
Cbc0038I Pass  44: suminf.    1.64118 (8) obj. -9.19211 iterations 2
Cbc0038I Pass  45: suminf.    1.34448 (5) obj. -9.19211 iterations 11
Cbc0038I Pass  46: suminf.    1.34448 (5) obj. -9.19211 iterations 0
Cbc0038I Pass  47: suminf.    1.29360 (5) obj. -9.19211 iterations 3
Cbc0038I Pass  48: suminf.    0.84557 (4) obj. -9.19211 iterations 2
Cbc0038I Pass  49: suminf.    1.06649 (4) obj. -9.19211 iterations 4
Cbc0038I Pass  50: suminf.    2.04559 (12) obj. -9.19211 iterations 27
Cbc0038I Pass  51: suminf.    1.43344 (9) obj. -9.19211 iterations 7
Cbc0038I Pass  52: suminf.    0.95613 (5) obj. -9.19211 iterations 11
Cbc0038I Pass  53: suminf.    0.83581 (5) obj. -9.55306 iterations 2
Cbc0038I Pass  54: suminf.    1.54486 (6) obj. -9.19211 iterations 7
Cbc0038I Pass  55: suminf.    0.88816 (5) obj. -9.44355 iterations 4
Cbc0038I Pass  56: suminf.    2.04034 (10) obj. -9.19211 iterations 19
Cbc0038I Pass  57: suminf.    1.90470 (11) obj. -9.19211 iterations 5
Cbc0038I Pass  58: suminf.    2.33343 (11) obj. -9.19211 iterations 14
Cbc0038I Pass  59: suminf.    2.32249 (10) obj. -9.19211 iterations 2
Cbc0038I Pass  60: suminf.    2.10486 (9) obj. -9.19211 iterations 7
Cbc0038I Pass  61: suminf.    1.78916 (9) obj. -9.19211 iterations 8
Cbc0038I Pass  62: suminf.    2.12939 (9) obj. -9.19211 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 82 columns, reduced to 36 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.13692 - took 0.06 seconds
Cbc0012I Integer solution of -2.13692 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 71 rows 82 columns, reduced to 37 rows 41 columns
Cbc0031I 49 added rows had average density of 20.428571
Cbc0013I At root node, 49 cuts changed objective from -37.412484 to -11.999068 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11940 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1714 row cuts average 78.6 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1391 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 387 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.13692 best solution, best possible -11.999068 (2.18 seconds)
Cbc0012I Integer solution of -2.20027 found by rounding after 5360 iterations and 6 nodes (2.46 seconds)
Cbc0001I Search completed - best objective -2.200269999999996, took 5919 iterations and 20 nodes (2.51 seconds)
Cbc0032I Strong branching done 412 times (7239 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 37 variables fixed on reduced cost
Total time (CPU seconds):       1.85   (Wallclock seconds):       2.52

