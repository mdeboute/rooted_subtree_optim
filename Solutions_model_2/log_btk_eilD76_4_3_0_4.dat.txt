Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 63 (-15) columns and 337 (-116) elements
Clp1000I sum of infeasibilities 3.52115e-05 - average 3.23041e-07, 43 fixed columns
Coin0506I Presolve 15 (-94) rows, 15 (-48) columns and 54 (-283) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 681.13905
Clp0000I Optimal - objective value 681.13905
Coin0511I After Postsolve, objective 681.13905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 681.13905
Clp0000I Optimal - objective value 681.13905
Clp0000I Optimal - objective value 681.13905
Coin0511I After Postsolve, objective 681.13905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 681.1390472 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 109 rows, 63 columns (62 integer (62 of which binary)) and 337 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.337%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 1.69222
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -600.72 iterations 11
Cbc0038I Solution found of -600.72
Cbc0038I Relaxing continuous gives -600.72
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -600.72 to -602.768 (0.01 seconds)
Cbc0038I Round again with cutoff of -610.605
Cbc0038I Pass   2: suminf.    0.16490 (4) obj. -610.605 iterations 7
Cbc0038I Pass   3: suminf.    0.26621 (2) obj. -610.605 iterations 13
Cbc0038I Pass   4: suminf.    0.26621 (2) obj. -610.605 iterations 0
Cbc0038I Pass   5: suminf.    1.14867 (3) obj. -610.605 iterations 3
Cbc0038I Pass   6: suminf.    0.53128 (4) obj. -610.605 iterations 5
Cbc0038I Pass   7: suminf.    3.02546 (9) obj. -610.605 iterations 12
Cbc0038I Pass   8: suminf.    0.72802 (3) obj. -610.605 iterations 9
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -610.605 iterations 8
Cbc0038I Solution found of -610.605
Cbc0038I Relaxing continuous gives -625.804
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -625.804 to -632.858 (0.02 seconds)
Cbc0038I Round again with cutoff of -642.514
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  10: suminf.    0.69721 (4) obj. -642.514 iterations 0
Cbc0038I Pass  11: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  12: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  13: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  14: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  15: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I Pass  16: suminf.    0.69721 (4) obj. -642.514 iterations 1
Cbc0038I Pass  17: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  18: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  19: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  20: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  21: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I Pass  22: suminf.    0.69721 (4) obj. -642.514 iterations 1
Cbc0038I Pass  23: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  24: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  25: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  26: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  27: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I Pass  28: suminf.    0.69721 (4) obj. -642.514 iterations 1
Cbc0038I Pass  29: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  30: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  31: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  32: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  33: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I Pass  34: suminf.    0.69721 (4) obj. -642.514 iterations 1
Cbc0038I Pass  35: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  36: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  37: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  38: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  39: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -632.858 - took 0.02 seconds
Cbc0012I Integer solution of -632.85802 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 109 rows 63 columns, reduced to 14 rows 13 columns
Cbc0031I 7 added rows had average density of 24.285714
Cbc0013I At root node, 7 cuts changed objective from -681.13905 to -654.05486 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 36 row cuts average 2.9 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 61.5 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0010I After 13 nodes, 1 on tree, -632.85802 best solution, best possible -654.05486 (0.68 seconds)
Cbc0001I Search completed - best objective -632.8580199999999, took 303 iterations and 14 nodes (0.69 seconds)
Cbc0032I Strong branching done 96 times (454 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 67 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-63) rows, 106 (-46) columns and 1641 (-1662) elements
Clp1000I sum of infeasibilities 1.75533e-07 - average 1.92893e-09, 33 fixed columns
Coin0506I Presolve 60 (-31) rows, 69 (-37) columns and 789 (-852) elements
Clp0006I 0  Obj 706.49624 Dual inf 34.186797 (64)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 4.9356526 - largest nonzero change 1.9927355e-05 ( 0.00095415479%) - largest zero change 2.9826093e-05
Clp0000I Optimal - objective value 721.40668
Clp0000I Optimal - objective value 721.40668
Coin0511I After Postsolve, objective 721.40668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 721.40668 Dual inf 6.3303948 (1)
Clp0014I Perturbing problem by 0.001% of 5.7692745 - largest nonzero change 2.5586049e-05 ( 0.00095415479%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 721.40668
Clp0000I Optimal - objective value 721.40668
Clp0000I Optimal - objective value 721.40668
Coin0511I After Postsolve, objective 721.40668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 721.406685 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 106 columns (106 integer (106 of which binary)) and 1651 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.799%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.4447
Cbc0038I Pass   1: suminf.    3.57751 (27) obj. -571.676 iterations 21
Cbc0038I Pass   2: suminf.    3.57751 (27) obj. -571.676 iterations 1
Cbc0038I Pass   3: suminf.    2.02066 (17) obj. -562.379 iterations 10
Cbc0038I Pass   4: suminf.    0.69496 (7) obj. -551.097 iterations 10
Cbc0038I Solution found of -543.851
Cbc0038I Rounding solution of -597.138 is better than previous of -543.851

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -597.138 to -628.554 (0.04 seconds)
Cbc0038I Round again with cutoff of -636.422
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   5: suminf.    5.00097 (34) obj. -636.422 iterations 8
Cbc0038I Pass   6: suminf.    1.01144 (8) obj. -636.422 iterations 33
Cbc0038I Pass   7: suminf.    0.23333 (1) obj. -653.522 iterations 16
Cbc0038I Pass   8: suminf.    0.04025 (1) obj. -636.422 iterations 1
Cbc0038I Pass   9: suminf.    2.09834 (11) obj. -636.422 iterations 34
Cbc0038I Pass  10: suminf.    1.39525 (13) obj. -636.422 iterations 10
Cbc0038I Pass  11: suminf.    1.14095 (4) obj. -636.422 iterations 19
Cbc0038I Pass  12: suminf.    1.14095 (4) obj. -636.422 iterations 4
Cbc0038I Pass  13: suminf.    0.62473 (2) obj. -636.422 iterations 6
Cbc0038I Pass  14: suminf.    0.23333 (1) obj. -651.522 iterations 12
Cbc0038I Pass  15: suminf.    0.06283 (1) obj. -636.422 iterations 1
Cbc0038I Pass  16: suminf.    3.81772 (21) obj. -636.422 iterations 29
Cbc0038I Pass  17: suminf.    3.19082 (16) obj. -636.422 iterations 9
Cbc0038I Pass  18: suminf.    0.40000 (1) obj. -644.999 iterations 21
Cbc0038I Pass  19: suminf.    0.49685 (1) obj. -636.422 iterations 1
Cbc0038I Pass  20: suminf.    1.29627 (7) obj. -636.422 iterations 15
Cbc0038I Pass  21: suminf.    1.13820 (6) obj. -636.422 iterations 9
Cbc0038I Pass  22: suminf.    2.34448 (20) obj. -636.422 iterations 18
Cbc0038I Pass  23: suminf.    1.64099 (9) obj. -636.422 iterations 8
Cbc0038I Pass  24: suminf.    0.40000 (1) obj. -645.999 iterations 10
Cbc0038I Pass  25: suminf.    0.49186 (1) obj. -636.422 iterations 1
Cbc0038I Pass  26: suminf.    1.62890 (8) obj. -636.422 iterations 15
Cbc0038I Pass  27: suminf.    0.95923 (4) obj. -636.422 iterations 10
Cbc0038I Pass  28: suminf.    0.40000 (1) obj. -646.999 iterations 5
Cbc0038I Pass  29: suminf.    0.48057 (1) obj. -636.422 iterations 1
Cbc0038I Pass  30: suminf.    2.04812 (9) obj. -636.422 iterations 17
Cbc0038I Pass  31: suminf.    0.79606 (5) obj. -636.422 iterations 9
Cbc0038I Pass  32: suminf.    0.40000 (1) obj. -642.999 iterations 10
Cbc0038I Pass  33: suminf.    0.47426 (1) obj. -636.422 iterations 1
Cbc0038I Pass  34: suminf.    1.70546 (9) obj. -636.422 iterations 19
Cbc0038I Rounding solution of -632.858 is better than previous of -628.554

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 24 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -650.586
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  34: suminf.    5.29034 (34) obj. -650.586 iterations 0
Cbc0038I Pass  35: suminf.    2.36313 (19) obj. -662.684 iterations 21
Cbc0038I Pass  36: suminf.    0.97522 (13) obj. -650.586 iterations 25
Cbc0038I Pass  37: suminf.    0.69198 (8) obj. -650.586 iterations 13
Cbc0038I Pass  38: suminf.    0.27316 (2) obj. -650.586 iterations 5
Cbc0038I Pass  39: suminf.    0.23333 (1) obj. -653.522 iterations 3
Cbc0038I Pass  40: suminf.    0.20017 (1) obj. -650.586 iterations 1
Cbc0038I Pass  41: suminf.    2.40980 (12) obj. -650.586 iterations 25
Cbc0038I Pass  42: suminf.    1.61503 (8) obj. -650.586 iterations 7
Cbc0038I Pass  43: suminf.    1.53298 (9) obj. -650.586 iterations 3
Cbc0038I Pass  44: suminf.    0.54413 (2) obj. -650.586 iterations 13
Cbc0038I Pass  45: suminf.    0.40544 (3) obj. -650.586 iterations 8
Cbc0038I Pass  46: suminf.    0.54413 (2) obj. -650.586 iterations 6
Cbc0038I Pass  47: suminf.    2.71741 (13) obj. -650.586 iterations 17
Cbc0038I Pass  48: suminf.    2.24662 (17) obj. -650.586 iterations 7
Cbc0038I Pass  49: suminf.    1.84119 (8) obj. -650.586 iterations 15
Cbc0038I Pass  50: suminf.    1.05164 (3) obj. -650.586 iterations 11
Cbc0038I Pass  51: suminf.    0.41174 (3) obj. -650.586 iterations 5
Cbc0038I Pass  52: suminf.    0.49442 (2) obj. -650.586 iterations 6
Cbc0038I Pass  53: suminf.    2.50706 (9) obj. -650.586 iterations 19
Cbc0038I Pass  54: suminf.    2.42591 (10) obj. -650.586 iterations 7
Cbc0038I Pass  55: suminf.    1.71516 (7) obj. -650.586 iterations 11
Cbc0038I Pass  56: suminf.    1.57215 (5) obj. -650.586 iterations 3
Cbc0038I Pass  57: suminf.    1.57215 (5) obj. -650.586 iterations 3
Cbc0038I Pass  58: suminf.    1.10424 (4) obj. -650.586 iterations 6
Cbc0038I Pass  59: suminf.    0.40251 (3) obj. -650.586 iterations 8
Cbc0038I Pass  60: suminf.    0.39839 (4) obj. -650.586 iterations 6
Cbc0038I Pass  61: suminf.    0.96316 (3) obj. -650.586 iterations 6
Cbc0038I Pass  62: suminf.    0.90913 (2) obj. -650.586 iterations 6
Cbc0038I Pass  63: suminf.    3.47603 (19) obj. -650.586 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 21 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -632.858 - took 0.05 seconds
Cbc0012I Integer solution of -632.85802 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 91 rows 106 columns, reduced to 8 rows 9 columns
Cbc0031I 23 added rows had average density of 16.73913
Cbc0013I At root node, 23 cuts changed objective from -707.23899 to -656.01913 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 471 row cuts average 16.8 elements, 32 column cuts (32 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 44.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -632.85802 best solution, best possible -655.97418 (0.22 seconds)
Cbc0001I Search completed - best objective -632.8580199999999, took 352 iterations and 10 nodes (0.25 seconds)
Cbc0032I Strong branching done 94 times (392 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.25

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 63 (-15) columns and 337 (-116) elements
Clp1000I sum of infeasibilities 3.52115e-05 - average 3.23041e-07, 43 fixed columns
Coin0506I Presolve 15 (-94) rows, 15 (-48) columns and 54 (-283) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 681.13905
Clp0000I Optimal - objective value 681.13905
Coin0511I After Postsolve, objective 681.13905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 681.13905
Clp0000I Optimal - objective value 681.13905
Clp0000I Optimal - objective value 681.13905
Coin0511I After Postsolve, objective 681.13905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 681.1390472 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 109 rows, 63 columns (62 integer (62 of which binary)) and 337 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.337%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 1.69222
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -600.72 iterations 11
Cbc0038I Solution found of -600.72
Cbc0038I Relaxing continuous gives -600.72
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -600.72 to -602.768 (0.01 seconds)
Cbc0038I Round again with cutoff of -610.605
Cbc0038I Pass   2: suminf.    0.16490 (4) obj. -610.605 iterations 7
Cbc0038I Pass   3: suminf.    0.26621 (2) obj. -610.605 iterations 13
Cbc0038I Pass   4: suminf.    0.26621 (2) obj. -610.605 iterations 0
Cbc0038I Pass   5: suminf.    1.14867 (3) obj. -610.605 iterations 3
Cbc0038I Pass   6: suminf.    0.53128 (4) obj. -610.605 iterations 5
Cbc0038I Pass   7: suminf.    3.02546 (9) obj. -610.605 iterations 12
Cbc0038I Pass   8: suminf.    0.72802 (3) obj. -610.605 iterations 9
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -610.605 iterations 8
Cbc0038I Solution found of -610.605
Cbc0038I Relaxing continuous gives -625.804
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -625.804 to -632.858 (0.02 seconds)
Cbc0038I Round again with cutoff of -642.514
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  10: suminf.    0.69721 (4) obj. -642.514 iterations 0
Cbc0038I Pass  11: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  12: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  13: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  14: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  15: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I Pass  16: suminf.    0.69721 (4) obj. -642.514 iterations 1
Cbc0038I Pass  17: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  18: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  19: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  20: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  21: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I Pass  22: suminf.    0.69721 (4) obj. -642.514 iterations 1
Cbc0038I Pass  23: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  24: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  25: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  26: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  27: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I Pass  28: suminf.    0.69721 (4) obj. -642.514 iterations 1
Cbc0038I Pass  29: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  30: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  31: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  32: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  33: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I Pass  34: suminf.    0.69721 (4) obj. -642.514 iterations 1
Cbc0038I Pass  35: suminf.    0.49170 (7) obj. -642.514 iterations 11
Cbc0038I Pass  36: suminf.    0.37811 (6) obj. -642.514 iterations 2
Cbc0038I Pass  37: suminf.    2.73858 (7) obj. -642.514 iterations 12
Cbc0038I Pass  38: suminf.    2.73858 (7) obj. -642.514 iterations 2
Cbc0038I Pass  39: suminf.    0.84818 (5) obj. -642.514 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -632.858 - took 0.02 seconds
Cbc0012I Integer solution of -632.85802 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 109 rows 63 columns, reduced to 14 rows 13 columns
Cbc0031I 7 added rows had average density of 24.285714
Cbc0013I At root node, 7 cuts changed objective from -681.13905 to -654.05486 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 36 row cuts average 2.9 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 61.5 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0001I Search completed - best objective -632.8580199999999, took 303 iterations and 14 nodes (0.70 seconds)
Cbc0032I Strong branching done 96 times (454 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 67 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-64) rows, 106 (-47) columns and 1641 (-1663) elements
Clp1000I sum of infeasibilities 1.75533e-07 - average 1.92893e-09, 33 fixed columns
Coin0506I Presolve 60 (-31) rows, 69 (-37) columns and 789 (-852) elements
Clp0006I 0  Obj 706.49624 Dual inf 34.186797 (64)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 4.9356526 - largest nonzero change 1.9927355e-05 ( 0.00095415479%) - largest zero change 2.9826093e-05
Clp0000I Optimal - objective value 721.40668
Clp0000I Optimal - objective value 721.40668
Coin0511I After Postsolve, objective 721.40668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 721.40668 Dual inf 6.3303948 (1)
Clp0014I Perturbing problem by 0.001% of 5.7692745 - largest nonzero change 2.5586049e-05 ( 0.00095415479%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 721.40668
Clp0000I Optimal - objective value 721.40668
Clp0000I Optimal - objective value 721.40668
Coin0511I After Postsolve, objective 721.40668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 721.406685 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 106 columns (106 integer (106 of which binary)) and 1651 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.799%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.4447
Cbc0038I Pass   1: suminf.    3.57751 (27) obj. -571.676 iterations 21
Cbc0038I Pass   2: suminf.    3.57751 (27) obj. -571.676 iterations 1
Cbc0038I Pass   3: suminf.    2.02066 (17) obj. -562.379 iterations 10
Cbc0038I Pass   4: suminf.    0.69496 (7) obj. -551.097 iterations 10
Cbc0038I Solution found of -543.851
Cbc0038I Rounding solution of -597.138 is better than previous of -543.851

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -597.138 to -628.554 (0.04 seconds)
Cbc0038I Round again with cutoff of -636.422
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   5: suminf.    5.00097 (34) obj. -636.422 iterations 8
Cbc0038I Pass   6: suminf.    1.01144 (8) obj. -636.422 iterations 33
Cbc0038I Pass   7: suminf.    0.23333 (1) obj. -653.522 iterations 16
Cbc0038I Pass   8: suminf.    0.04025 (1) obj. -636.422 iterations 1
Cbc0038I Pass   9: suminf.    2.09834 (11) obj. -636.422 iterations 34
Cbc0038I Pass  10: suminf.    1.39525 (13) obj. -636.422 iterations 10
Cbc0038I Pass  11: suminf.    1.14095 (4) obj. -636.422 iterations 19
Cbc0038I Pass  12: suminf.    1.14095 (4) obj. -636.422 iterations 4
Cbc0038I Pass  13: suminf.    0.62473 (2) obj. -636.422 iterations 6
Cbc0038I Pass  14: suminf.    0.23333 (1) obj. -651.522 iterations 12
Cbc0038I Pass  15: suminf.    0.06283 (1) obj. -636.422 iterations 1
Cbc0038I Pass  16: suminf.    3.81772 (21) obj. -636.422 iterations 29
Cbc0038I Pass  17: suminf.    3.19082 (16) obj. -636.422 iterations 9
Cbc0038I Pass  18: suminf.    0.40000 (1) obj. -644.999 iterations 21
Cbc0038I Pass  19: suminf.    0.49685 (1) obj. -636.422 iterations 1
Cbc0038I Pass  20: suminf.    1.29627 (7) obj. -636.422 iterations 15
Cbc0038I Pass  21: suminf.    1.13820 (6) obj. -636.422 iterations 9
Cbc0038I Pass  22: suminf.    2.34448 (20) obj. -636.422 iterations 18
Cbc0038I Pass  23: suminf.    1.64099 (9) obj. -636.422 iterations 8
Cbc0038I Pass  24: suminf.    0.40000 (1) obj. -645.999 iterations 10
Cbc0038I Pass  25: suminf.    0.49186 (1) obj. -636.422 iterations 1
Cbc0038I Pass  26: suminf.    1.62890 (8) obj. -636.422 iterations 15
Cbc0038I Pass  27: suminf.    0.95923 (4) obj. -636.422 iterations 10
Cbc0038I Pass  28: suminf.    0.40000 (1) obj. -646.999 iterations 5
Cbc0038I Pass  29: suminf.    0.48057 (1) obj. -636.422 iterations 1
Cbc0038I Pass  30: suminf.    2.04812 (9) obj. -636.422 iterations 17
Cbc0038I Pass  31: suminf.    0.79606 (5) obj. -636.422 iterations 9
Cbc0038I Pass  32: suminf.    0.40000 (1) obj. -642.999 iterations 10
Cbc0038I Pass  33: suminf.    0.47426 (1) obj. -636.422 iterations 1
Cbc0038I Pass  34: suminf.    1.70546 (9) obj. -636.422 iterations 19
Cbc0038I Rounding solution of -632.858 is better than previous of -628.554

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 24 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -650.586
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  34: suminf.    5.29034 (34) obj. -650.586 iterations 0
Cbc0038I Pass  35: suminf.    2.36313 (19) obj. -662.684 iterations 21
Cbc0038I Pass  36: suminf.    0.97522 (13) obj. -650.586 iterations 25
Cbc0038I Pass  37: suminf.    0.69198 (8) obj. -650.586 iterations 13
Cbc0038I Pass  38: suminf.    0.27316 (2) obj. -650.586 iterations 5
Cbc0038I Pass  39: suminf.    0.23333 (1) obj. -653.522 iterations 3
Cbc0038I Pass  40: suminf.    0.20017 (1) obj. -650.586 iterations 1
Cbc0038I Pass  41: suminf.    2.40980 (12) obj. -650.586 iterations 25
Cbc0038I Pass  42: suminf.    1.61503 (8) obj. -650.586 iterations 7
Cbc0038I Pass  43: suminf.    1.53298 (9) obj. -650.586 iterations 3
Cbc0038I Pass  44: suminf.    0.54413 (2) obj. -650.586 iterations 13
Cbc0038I Pass  45: suminf.    0.40544 (3) obj. -650.586 iterations 8
Cbc0038I Pass  46: suminf.    0.54413 (2) obj. -650.586 iterations 6
Cbc0038I Pass  47: suminf.    2.71741 (13) obj. -650.586 iterations 17
Cbc0038I Pass  48: suminf.    2.24662 (17) obj. -650.586 iterations 7
Cbc0038I Pass  49: suminf.    1.84119 (8) obj. -650.586 iterations 15
Cbc0038I Pass  50: suminf.    1.05164 (3) obj. -650.586 iterations 11
Cbc0038I Pass  51: suminf.    0.41174 (3) obj. -650.586 iterations 5
Cbc0038I Pass  52: suminf.    0.49442 (2) obj. -650.586 iterations 6
Cbc0038I Pass  53: suminf.    2.50706 (9) obj. -650.586 iterations 19
Cbc0038I Pass  54: suminf.    2.42591 (10) obj. -650.586 iterations 7
Cbc0038I Pass  55: suminf.    1.71516 (7) obj. -650.586 iterations 11
Cbc0038I Pass  56: suminf.    1.57215 (5) obj. -650.586 iterations 3
Cbc0038I Pass  57: suminf.    1.57215 (5) obj. -650.586 iterations 3
Cbc0038I Pass  58: suminf.    1.10424 (4) obj. -650.586 iterations 6
Cbc0038I Pass  59: suminf.    0.40251 (3) obj. -650.586 iterations 8
Cbc0038I Pass  60: suminf.    0.39839 (4) obj. -650.586 iterations 6
Cbc0038I Pass  61: suminf.    0.96316 (3) obj. -650.586 iterations 6
Cbc0038I Pass  62: suminf.    0.90913 (2) obj. -650.586 iterations 6
Cbc0038I Pass  63: suminf.    3.47603 (19) obj. -650.586 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 21 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -632.858 - took 0.05 seconds
Cbc0012I Integer solution of -632.85802 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 91 rows 106 columns, reduced to 8 rows 9 columns
Cbc0031I 23 added rows had average density of 16.73913
Cbc0013I At root node, 23 cuts changed objective from -707.23899 to -656.01913 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 471 row cuts average 16.8 elements, 32 column cuts (32 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 44.7 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -632.85802 best solution, best possible -655.97418 (0.22 seconds)
Cbc0001I Search completed - best objective -632.8580199999999, took 352 iterations and 10 nodes (0.26 seconds)
Cbc0032I Strong branching done 94 times (392 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.26

