Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 5.27078e-05 - average 8.93353e-07, 1 fixed columns
Coin0506I Presolve 58 (-1) rows, 32 (-1) columns and 173 (-3) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Coin0511I After Postsolve, objective 84.897929, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Coin0511I After Postsolve, objective 84.897929, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.89792898 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.00655
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.8671 iterations 27
Cbc0038I Solution found of 18.8671
Cbc0038I Relaxing continuous gives 18.8671
Cbc0038I Rounding solution of -2.76026 is better than previous of 18.8671

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -2.76026 to -38.1463 (0.04 seconds)
Cbc0038I Round again with cutoff of -42.8216
Cbc0038I Pass   2: suminf.    2.78247 (7) obj. -42.8216 iterations 9
Cbc0038I Pass   3: suminf.    0.80999 (3) obj. -42.8216 iterations 10
Cbc0038I Pass   4: suminf.    0.43355 (2) obj. -42.8216 iterations 1
Cbc0038I Pass   5: suminf.    0.82253 (2) obj. -42.8216 iterations 3
Cbc0038I Pass   6: suminf.    0.54419 (2) obj. -42.8216 iterations 1
Cbc0038I Pass   7: suminf.    1.36740 (3) obj. -42.8216 iterations 7
Cbc0038I Pass   8: suminf.    0.87268 (3) obj. -42.8216 iterations 5
Cbc0038I Pass   9: suminf.    0.53799 (3) obj. -42.8216 iterations 3
Cbc0038I Pass  10: suminf.    0.47615 (3) obj. -42.8216 iterations 1
Cbc0038I Pass  11: suminf.    1.36740 (3) obj. -42.8216 iterations 2
Cbc0038I Pass  12: suminf.    1.69923 (6) obj. -42.8216 iterations 6
Cbc0038I Pass  13: suminf.    1.37028 (4) obj. -42.8216 iterations 2
Cbc0038I Pass  14: suminf.    0.54403 (2) obj. -42.8216 iterations 6
Cbc0038I Pass  15: suminf.    0.54403 (2) obj. -42.8216 iterations 0
Cbc0038I Pass  16: suminf.    0.82239 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  17: suminf.    1.80547 (6) obj. -42.8216 iterations 10
Cbc0038I Pass  18: suminf.    1.15272 (5) obj. -42.8216 iterations 4
Cbc0038I Pass  19: suminf.    0.63776 (2) obj. -42.8216 iterations 7
Cbc0038I Pass  20: suminf.    0.15163 (1) obj. -42.8216 iterations 2
Cbc0038I Pass  21: suminf.    0.63776 (2) obj. -42.8216 iterations 2
Cbc0038I Pass  22: suminf.    0.75798 (2) obj. -42.8216 iterations 4
Cbc0038I Pass  23: suminf.    0.47207 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  24: suminf.    0.75798 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  25: suminf.    1.36645 (6) obj. -42.8216 iterations 8
Cbc0038I Pass  26: suminf.    0.82653 (3) obj. -42.8216 iterations 5
Cbc0038I Pass  27: suminf.    0.60296 (3) obj. -42.8216 iterations 3
Cbc0038I Pass  28: suminf.    1.27964 (3) obj. -42.8216 iterations 2
Cbc0038I Pass  29: suminf.    1.27964 (3) obj. -42.8216 iterations 0
Cbc0038I Pass  30: suminf.    0.73492 (2) obj. -42.8216 iterations 2
Cbc0038I Pass  31: suminf.    0.76913 (2) obj. -42.8216 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -38.1463 - took 0.08 seconds
Cbc0012I Integer solution of -38.146349 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 38 rows 23 columns
Cbc0031I 17 added rows had average density of 24.411765
Cbc0013I At root node, 17 cuts changed objective from -84.897929 to -64.713637 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2206 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 917 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 63 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0004I Integer solution of -38.147589 found after 3669 iterations and 11 nodes (0.35 seconds)
Cbc0004I Integer solution of -38.47573 found after 3742 iterations and 17 nodes (0.35 seconds)
Cbc0001I Search completed - best objective -38.47573, took 4153 iterations and 34 nodes (0.38 seconds)
Cbc0032I Strong branching done 324 times (3425 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 9, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-13) rows, 60 (-6) columns and 588 (-135) elements
Clp1000I sum of infeasibilities 1.2387e-08 - average 2.25218e-10, 39 fixed columns
Coin0506I Presolve 18 (-37) rows, 21 (-39) columns and 72 (-516) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.471939 - largest nonzero change 2.1846294e-05 ( 0.0010393299%) - largest zero change 1.702643e-05
Clp0000I Optimal - objective value 34.032553
Clp0000I Optimal - objective value 34.032553
Coin0511I After Postsolve, objective 34.032553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7653434 - largest nonzero change 2.7660781e-05 ( 0.0021869008%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 112.7309
Clp0000I Optimal - objective value 112.7309
Clp0000I Optimal - objective value 112.7309
Coin0511I After Postsolve, objective 112.7309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.7309008 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 60 columns (60 integer (60 of which binary)) and 592 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 7.73221
Cbc0038I Pass   1: suminf.    2.25908 (18) obj. -68.0057 iterations 16
Cbc0038I Pass   2: suminf.    2.25908 (18) obj. -68.0057 iterations 1
Cbc0038I Pass   3: suminf.    0.81254 (8) obj. -41.4628 iterations 10
Cbc0038I Solution found of -18.2627
Cbc0038I Rounding solution of -33.4584 is better than previous of -18.2627

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -40.9703
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.25908 (18) obj. -68.0057 iterations 0
Cbc0038I Pass   5: suminf.    2.25908 (18) obj. -68.0057 iterations 1
Cbc0038I Pass   6: suminf.    0.98808 (6) obj. -40.9703 iterations 31
Cbc0038I Pass   7: suminf.    0.98394 (6) obj. -48.8642 iterations 4
Cbc0038I Pass   8: suminf.    0.50587 (2) obj. -40.9703 iterations 8
Cbc0038I Pass   9: suminf.    0.29600 (2) obj. -43.069 iterations 2
Cbc0038I Pass  10: suminf.    0.90164 (8) obj. -40.9703 iterations 15
Cbc0038I Pass  11: suminf.    0.90164 (8) obj. -40.9703 iterations 1
Cbc0038I Pass  12: suminf.    1.72860 (10) obj. -40.9703 iterations 11
Cbc0038I Pass  13: suminf.    1.39046 (7) obj. -40.9703 iterations 1
Cbc0038I Pass  14: suminf.    1.10866 (7) obj. -40.9703 iterations 3
Cbc0038I Pass  15: suminf.    0.54973 (4) obj. -40.9703 iterations 9
Cbc0038I Pass  16: suminf.    0.29600 (2) obj. -43.069 iterations 3
Cbc0038I Pass  17: suminf.    0.50587 (2) obj. -40.9703 iterations 1
Cbc0038I Pass  18: suminf.    1.91235 (8) obj. -40.9703 iterations 11
Cbc0038I Pass  19: suminf.    1.58314 (7) obj. -40.9703 iterations 4
Cbc0038I Pass  20: suminf.    1.60666 (7) obj. -40.9703 iterations 8
Cbc0038I Pass  21: suminf.    1.60666 (7) obj. -40.9703 iterations 0
Cbc0038I Pass  22: suminf.    1.56923 (5) obj. -40.9703 iterations 6
Cbc0038I Pass  23: suminf.    1.08961 (4) obj. -40.9703 iterations 7
Cbc0038I Pass  24: suminf.    1.08961 (4) obj. -40.9703 iterations 0
Cbc0038I Pass  25: suminf.    1.31711 (4) obj. -40.9703 iterations 3
Cbc0038I Pass  26: suminf.    1.28627 (4) obj. -40.9703 iterations 2
Cbc0038I Pass  27: suminf.    1.10268 (4) obj. -40.9703 iterations 2
Cbc0038I Pass  28: suminf.    1.89151 (10) obj. -40.9703 iterations 18
Cbc0038I Pass  29: suminf.    1.84233 (10) obj. -40.9703 iterations 7
Cbc0038I Pass  30: suminf.    0.89781 (4) obj. -40.9703 iterations 13
Cbc0038I Pass  31: suminf.    0.61644 (4) obj. -40.9703 iterations 1
Cbc0038I Pass  32: suminf.    0.97007 (3) obj. -40.9703 iterations 5
Cbc0038I Pass  33: suminf.    0.84745 (3) obj. -40.9703 iterations 3
Cbc0038I Rounding solution of -36.3795 is better than previous of -33.4584

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -54.4916
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.25908 (18) obj. -68.0057 iterations 0
Cbc0038I Pass  34: suminf.    2.25908 (18) obj. -68.0057 iterations 1
Cbc0038I Pass  35: suminf.    1.81920 (11) obj. -54.4916 iterations 30
Cbc0038I Pass  36: suminf.    1.36052 (8) obj. -54.4916 iterations 2
Cbc0038I Pass  37: suminf.    1.17426 (7) obj. -54.4916 iterations 2
Cbc0038I Pass  38: suminf.    1.43203 (8) obj. -54.4916 iterations 6
Cbc0038I Pass  39: suminf.    1.21474 (9) obj. -54.4916 iterations 5
Cbc0038I Pass  40: suminf.    1.46267 (5) obj. -54.4916 iterations 11
Cbc0038I Pass  41: suminf.    1.08677 (4) obj. -54.7525 iterations 3
Cbc0038I Pass  42: suminf.    1.34449 (4) obj. -54.4916 iterations 4
Cbc0038I Pass  43: suminf.    1.19221 (4) obj. -56.0145 iterations 2
Cbc0038I Pass  44: suminf.    1.72680 (10) obj. -54.4916 iterations 15
Cbc0038I Pass  45: suminf.    1.64468 (10) obj. -54.4916 iterations 3
Cbc0038I Pass  46: suminf.    1.75909 (6) obj. -54.4916 iterations 11
Cbc0038I Pass  47: suminf.    1.29524 (5) obj. -54.4916 iterations 2
Cbc0038I Pass  48: suminf.    1.04180 (4) obj. -54.9439 iterations 3
Cbc0038I Pass  49: suminf.    1.08702 (4) obj. -54.4916 iterations 3
Cbc0038I Pass  50: suminf.    1.88795 (11) obj. -54.4916 iterations 12
Cbc0038I Pass  51: suminf.    1.80989 (9) obj. -54.4916 iterations 2
Cbc0038I Pass  52: suminf.    1.24919 (5) obj. -54.4916 iterations 9
Cbc0038I Pass  53: suminf.    1.15583 (5) obj. -54.4916 iterations 4
Cbc0038I Pass  54: suminf.    1.24919 (5) obj. -54.4916 iterations 3
Cbc0038I Pass  55: suminf.    3.32829 (11) obj. -54.4916 iterations 12
Cbc0038I Pass  56: suminf.    2.67845 (10) obj. -54.4916 iterations 6
Cbc0038I Pass  57: suminf.    2.31056 (10) obj. -54.4916 iterations 1
Cbc0038I Pass  58: suminf.    2.31056 (10) obj. -54.4916 iterations 0
Cbc0038I Pass  59: suminf.    1.29697 (5) obj. -54.4916 iterations 15
Cbc0038I Pass  60: suminf.    1.29697 (5) obj. -54.4916 iterations 0
Cbc0038I Pass  61: suminf.    1.47083 (5) obj. -54.4916 iterations 1
Cbc0038I Pass  62: suminf.    1.88814 (8) obj. -54.4916 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 39 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -36.3795 - took 0.02 seconds
Cbc0012I Integer solution of -36.379499 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 60 columns, reduced to 9 rows 12 columns
Cbc0031I 28 added rows had average density of 16.964286
Cbc0013I At root node, 28 cuts changed objective from -108.57688 to -45.183875 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1901 row cuts average 5.3 elements, 10 column cuts (10 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 552 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 99 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 291 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 26.9 elements, 0 column cuts (0 active)  in 0.766 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.379499 best solution, best possible -45.183875 (1.69 seconds)
Cbc0012I Integer solution of -38.06383 found by DiveCoefficient after 1820 iterations and 3 nodes (1.88 seconds)
Cbc0016I Integer solution of -38.146349 found by strong branching after 2057 iterations and 8 nodes (2.28 seconds)
Cbc0010I After 13 nodes, 3 on tree, -38.146349 best solution, best possible -45.183875 (2.48 seconds)
Cbc0012I Integer solution of -38.147589 found by rounding after 2319 iterations and 17 nodes (2.82 seconds)
Cbc0012I Integer solution of -38.47573 found by DiveCoefficient after 2443 iterations and 25 nodes (3.08 seconds)
Cbc0001I Search completed - best objective -38.47573, took 2578 iterations and 30 nodes (3.16 seconds)
Cbc0032I Strong branching done 340 times (2664 iterations), fathomed 2 nodes and fixed 15 variables
Cbc0035I Maximum depth 7, 54 variables fixed on reduced cost
Total time (CPU seconds):       1.97   (Wallclock seconds):       3.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 5.27078e-05 - average 8.93353e-07, 1 fixed columns
Coin0506I Presolve 58 (-1) rows, 32 (-1) columns and 173 (-3) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Coin0511I After Postsolve, objective 84.897929, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Coin0511I After Postsolve, objective 84.897929, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.89792898 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.00655
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.8671 iterations 27
Cbc0038I Solution found of 18.8671
Cbc0038I Relaxing continuous gives 18.8671
Cbc0038I Rounding solution of -2.76026 is better than previous of 18.8671

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -2.76026 to -38.1463 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.8216
Cbc0038I Pass   2: suminf.    2.78247 (7) obj. -42.8216 iterations 9
Cbc0038I Pass   3: suminf.    0.80999 (3) obj. -42.8216 iterations 10
Cbc0038I Pass   4: suminf.    0.43355 (2) obj. -42.8216 iterations 1
Cbc0038I Pass   5: suminf.    0.82253 (2) obj. -42.8216 iterations 3
Cbc0038I Pass   6: suminf.    0.54419 (2) obj. -42.8216 iterations 1
Cbc0038I Pass   7: suminf.    1.36740 (3) obj. -42.8216 iterations 7
Cbc0038I Pass   8: suminf.    0.87268 (3) obj. -42.8216 iterations 5
Cbc0038I Pass   9: suminf.    0.53799 (3) obj. -42.8216 iterations 3
Cbc0038I Pass  10: suminf.    0.47615 (3) obj. -42.8216 iterations 1
Cbc0038I Pass  11: suminf.    1.36740 (3) obj. -42.8216 iterations 2
Cbc0038I Pass  12: suminf.    1.69923 (6) obj. -42.8216 iterations 6
Cbc0038I Pass  13: suminf.    1.37028 (4) obj. -42.8216 iterations 2
Cbc0038I Pass  14: suminf.    0.54403 (2) obj. -42.8216 iterations 6
Cbc0038I Pass  15: suminf.    0.54403 (2) obj. -42.8216 iterations 0
Cbc0038I Pass  16: suminf.    0.82239 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  17: suminf.    1.80547 (6) obj. -42.8216 iterations 10
Cbc0038I Pass  18: suminf.    1.15272 (5) obj. -42.8216 iterations 4
Cbc0038I Pass  19: suminf.    0.63776 (2) obj. -42.8216 iterations 7
Cbc0038I Pass  20: suminf.    0.15163 (1) obj. -42.8216 iterations 2
Cbc0038I Pass  21: suminf.    0.63776 (2) obj. -42.8216 iterations 2
Cbc0038I Pass  22: suminf.    0.75798 (2) obj. -42.8216 iterations 4
Cbc0038I Pass  23: suminf.    0.47207 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  24: suminf.    0.75798 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  25: suminf.    1.36645 (6) obj. -42.8216 iterations 8
Cbc0038I Pass  26: suminf.    0.82653 (3) obj. -42.8216 iterations 5
Cbc0038I Pass  27: suminf.    0.60296 (3) obj. -42.8216 iterations 3
Cbc0038I Pass  28: suminf.    1.27964 (3) obj. -42.8216 iterations 2
Cbc0038I Pass  29: suminf.    1.27964 (3) obj. -42.8216 iterations 0
Cbc0038I Pass  30: suminf.    0.73492 (2) obj. -42.8216 iterations 2
Cbc0038I Pass  31: suminf.    0.76913 (2) obj. -42.8216 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -38.1463 - took 0.05 seconds
Cbc0012I Integer solution of -38.146349 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 38 rows 23 columns
Cbc0031I 17 added rows had average density of 24.411765
Cbc0013I At root node, 17 cuts changed objective from -84.897929 to -64.713637 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2206 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 917 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 63 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0004I Integer solution of -38.147589 found after 3669 iterations and 11 nodes (0.35 seconds)
Cbc0004I Integer solution of -38.47573 found after 3742 iterations and 17 nodes (0.36 seconds)
Cbc0001I Search completed - best objective -38.47573, took 4153 iterations and 34 nodes (0.38 seconds)
Cbc0032I Strong branching done 324 times (3425 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 9, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 60 (-7) columns and 588 (-136) elements
Clp1000I sum of infeasibilities 1.2387e-08 - average 2.25218e-10, 39 fixed columns
Coin0506I Presolve 18 (-37) rows, 21 (-39) columns and 72 (-516) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.471939 - largest nonzero change 2.1846294e-05 ( 0.0010393299%) - largest zero change 1.702643e-05
Clp0000I Optimal - objective value 34.032553
Clp0000I Optimal - objective value 34.032553
Coin0511I After Postsolve, objective 34.032553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7653434 - largest nonzero change 2.7660781e-05 ( 0.0021869008%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 112.7309
Clp0000I Optimal - objective value 112.7309
Clp0000I Optimal - objective value 112.7309
Coin0511I After Postsolve, objective 112.7309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.7309008 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 60 columns (60 integer (60 of which binary)) and 592 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 7.73221
Cbc0038I Pass   1: suminf.    2.25908 (18) obj. -68.0057 iterations 16
Cbc0038I Pass   2: suminf.    2.25908 (18) obj. -68.0057 iterations 1
Cbc0038I Pass   3: suminf.    0.81254 (8) obj. -41.4628 iterations 10
Cbc0038I Solution found of -18.2627
Cbc0038I Rounding solution of -33.4584 is better than previous of -18.2627

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -40.9703
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.25908 (18) obj. -68.0057 iterations 0
Cbc0038I Pass   5: suminf.    2.25908 (18) obj. -68.0057 iterations 1
Cbc0038I Pass   6: suminf.    0.98808 (6) obj. -40.9703 iterations 31
Cbc0038I Pass   7: suminf.    0.98394 (6) obj. -48.8642 iterations 4
Cbc0038I Pass   8: suminf.    0.50587 (2) obj. -40.9703 iterations 8
Cbc0038I Pass   9: suminf.    0.29600 (2) obj. -43.069 iterations 2
Cbc0038I Pass  10: suminf.    0.90164 (8) obj. -40.9703 iterations 15
Cbc0038I Pass  11: suminf.    0.90164 (8) obj. -40.9703 iterations 1
Cbc0038I Pass  12: suminf.    1.72860 (10) obj. -40.9703 iterations 11
Cbc0038I Pass  13: suminf.    1.39046 (7) obj. -40.9703 iterations 1
Cbc0038I Pass  14: suminf.    1.10866 (7) obj. -40.9703 iterations 3
Cbc0038I Pass  15: suminf.    0.54973 (4) obj. -40.9703 iterations 9
Cbc0038I Pass  16: suminf.    0.29600 (2) obj. -43.069 iterations 3
Cbc0038I Pass  17: suminf.    0.50587 (2) obj. -40.9703 iterations 1
Cbc0038I Pass  18: suminf.    1.91235 (8) obj. -40.9703 iterations 11
Cbc0038I Pass  19: suminf.    1.58314 (7) obj. -40.9703 iterations 4
Cbc0038I Pass  20: suminf.    1.60666 (7) obj. -40.9703 iterations 8
Cbc0038I Pass  21: suminf.    1.60666 (7) obj. -40.9703 iterations 0
Cbc0038I Pass  22: suminf.    1.56923 (5) obj. -40.9703 iterations 6
Cbc0038I Pass  23: suminf.    1.08961 (4) obj. -40.9703 iterations 7
Cbc0038I Pass  24: suminf.    1.08961 (4) obj. -40.9703 iterations 0
Cbc0038I Pass  25: suminf.    1.31711 (4) obj. -40.9703 iterations 3
Cbc0038I Pass  26: suminf.    1.28627 (4) obj. -40.9703 iterations 2
Cbc0038I Pass  27: suminf.    1.10268 (4) obj. -40.9703 iterations 2
Cbc0038I Pass  28: suminf.    1.89151 (10) obj. -40.9703 iterations 18
Cbc0038I Pass  29: suminf.    1.84233 (10) obj. -40.9703 iterations 7
Cbc0038I Pass  30: suminf.    0.89781 (4) obj. -40.9703 iterations 13
Cbc0038I Pass  31: suminf.    0.61644 (4) obj. -40.9703 iterations 1
Cbc0038I Pass  32: suminf.    0.97007 (3) obj. -40.9703 iterations 5
Cbc0038I Pass  33: suminf.    0.84745 (3) obj. -40.9703 iterations 3
Cbc0038I Rounding solution of -36.3795 is better than previous of -33.4584

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -54.4916
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.25908 (18) obj. -68.0057 iterations 0
Cbc0038I Pass  34: suminf.    2.25908 (18) obj. -68.0057 iterations 1
Cbc0038I Pass  35: suminf.    1.81920 (11) obj. -54.4916 iterations 30
Cbc0038I Pass  36: suminf.    1.36052 (8) obj. -54.4916 iterations 2
Cbc0038I Pass  37: suminf.    1.17426 (7) obj. -54.4916 iterations 2
Cbc0038I Pass  38: suminf.    1.43203 (8) obj. -54.4916 iterations 6
Cbc0038I Pass  39: suminf.    1.21474 (9) obj. -54.4916 iterations 5
Cbc0038I Pass  40: suminf.    1.46267 (5) obj. -54.4916 iterations 11
Cbc0038I Pass  41: suminf.    1.08677 (4) obj. -54.7525 iterations 3
Cbc0038I Pass  42: suminf.    1.34449 (4) obj. -54.4916 iterations 4
Cbc0038I Pass  43: suminf.    1.19221 (4) obj. -56.0145 iterations 2
Cbc0038I Pass  44: suminf.    1.72680 (10) obj. -54.4916 iterations 15
Cbc0038I Pass  45: suminf.    1.64468 (10) obj. -54.4916 iterations 3
Cbc0038I Pass  46: suminf.    1.75909 (6) obj. -54.4916 iterations 11
Cbc0038I Pass  47: suminf.    1.29524 (5) obj. -54.4916 iterations 2
Cbc0038I Pass  48: suminf.    1.04180 (4) obj. -54.9439 iterations 3
Cbc0038I Pass  49: suminf.    1.08702 (4) obj. -54.4916 iterations 3
Cbc0038I Pass  50: suminf.    1.88795 (11) obj. -54.4916 iterations 12
Cbc0038I Pass  51: suminf.    1.80989 (9) obj. -54.4916 iterations 2
Cbc0038I Pass  52: suminf.    1.24919 (5) obj. -54.4916 iterations 9
Cbc0038I Pass  53: suminf.    1.15583 (5) obj. -54.4916 iterations 4
Cbc0038I Pass  54: suminf.    1.24919 (5) obj. -54.4916 iterations 3
Cbc0038I Pass  55: suminf.    3.32829 (11) obj. -54.4916 iterations 12
Cbc0038I Pass  56: suminf.    2.67845 (10) obj. -54.4916 iterations 6
Cbc0038I Pass  57: suminf.    2.31056 (10) obj. -54.4916 iterations 1
Cbc0038I Pass  58: suminf.    2.31056 (10) obj. -54.4916 iterations 0
Cbc0038I Pass  59: suminf.    1.29697 (5) obj. -54.4916 iterations 15
Cbc0038I Pass  60: suminf.    1.29697 (5) obj. -54.4916 iterations 0
Cbc0038I Pass  61: suminf.    1.47083 (5) obj. -54.4916 iterations 1
Cbc0038I Pass  62: suminf.    1.88814 (8) obj. -54.4916 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 39 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -36.3795 - took 0.02 seconds
Cbc0012I Integer solution of -36.379499 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 60 columns, reduced to 9 rows 12 columns
Cbc0031I 28 added rows had average density of 16.964286
Cbc0013I At root node, 28 cuts changed objective from -108.57688 to -45.183875 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1901 row cuts average 5.3 elements, 10 column cuts (10 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 552 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 99 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 291 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 26.9 elements, 0 column cuts (0 active)  in 0.734 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.379499 best solution, best possible -45.183875 (1.64 seconds)
Cbc0012I Integer solution of -38.06383 found by DiveCoefficient after 1820 iterations and 3 nodes (1.83 seconds)
Cbc0016I Integer solution of -38.146349 found by strong branching after 2057 iterations and 8 nodes (2.21 seconds)
Cbc0010I After 13 nodes, 3 on tree, -38.146349 best solution, best possible -45.183875 (2.40 seconds)
Cbc0012I Integer solution of -38.147589 found by rounding after 2319 iterations and 17 nodes (2.72 seconds)
Cbc0012I Integer solution of -38.47573 found by DiveCoefficient after 2443 iterations and 25 nodes (2.95 seconds)
Cbc0001I Search completed - best objective -38.47573, took 2578 iterations and 30 nodes (3.02 seconds)
Cbc0032I Strong branching done 340 times (2664 iterations), fathomed 2 nodes and fixed 15 variables
Cbc0035I Maximum depth 7, 54 variables fixed on reduced cost
Total time (CPU seconds):       1.89   (Wallclock seconds):       3.05

