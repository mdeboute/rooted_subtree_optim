Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-31) rows, 13 (-12) columns and 55 (-80) elements
Clp1000I sum of infeasibilities 0 - average 0, 9 fixed columns
Coin0506I Presolve 4 (-14) rows, 4 (-9) columns and 10 (-45) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Coin0511I After Postsolve, objective 12583.503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26750404 - largest nonzero change 0 ( 0%) - largest zero change 1.5917103e-05
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Coin0511I After Postsolve, objective 12583.503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12583.50328 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 55 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.262%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.00485
Cbc0038I Pass   1: suminf.    0.02317 (1) obj. -7436.95 iterations 2
Cbc0038I Solution found of -1884.08
Cbc0038I Relaxing continuous gives -1937.07
Cbc0038I Rounding solution of -2387.69 is better than previous of -1937.07

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2909.24
Cbc0038I Pass   2: suminf.    0.02317 (1) obj. -7436.95 iterations 0
Cbc0038I Pass   3: suminf.    0.17081 (1) obj. -2909.24 iterations 3
Cbc0038I Pass   4: suminf.    0.11364 (1) obj. -6981.88 iterations 1
Cbc0038I Pass   5: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass   6: suminf.    0.27273 (1) obj. -6076.4 iterations 0
Cbc0038I Pass   7: suminf.    0.17081 (1) obj. -2909.24 iterations 1
Cbc0038I Pass   8: suminf.    0.22257 (1) obj. -2909.24 iterations 3
Cbc0038I Pass   9: suminf.    0.32955 (1) obj. -5458.41 iterations 1
Cbc0038I Pass  10: suminf.    0.22257 (1) obj. -2909.24 iterations 1
Cbc0038I Pass  11: suminf.    0.23891 (1) obj. -2909.24 iterations 2
Cbc0038I Pass  12: suminf.    0.22727 (1) obj. -5947.5 iterations 1
Cbc0038I Pass  13: suminf.    0.23891 (1) obj. -2909.24 iterations 1
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -3108.91 iterations 4
Cbc0038I Solution found of -3108.91
Cbc0038I Relaxing continuous gives -3108.91
Cbc0038I Rounding solution of -3629.52 is better than previous of -3108.91

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -4424.25
Cbc0038I Pass  15: suminf.    0.02317 (1) obj. -7436.95 iterations 0
Cbc0038I Pass  16: suminf.    0.43699 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  17: suminf.    0.11364 (1) obj. -6981.88 iterations 1
Cbc0038I Pass  18: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass  19: suminf.    0.43699 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  20: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass  21: suminf.    0.93933 (2) obj. -4424.25 iterations 2
Cbc0038I Pass  22: suminf.    0.49921 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  23: suminf.    0.12683 (1) obj. -6510.56 iterations 2
Cbc0038I Pass  24: suminf.    0.15122 (1) obj. -5993.47 iterations 4
Cbc0038I Pass  25: suminf.    0.15122 (1) obj. -5993.47 iterations 1
Cbc0038I Pass  26: suminf.    0.43366 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  27: suminf.    0.45178 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  28: suminf.    0.18171 (1) obj. -5931.12 iterations 3
Cbc0038I Pass  29: suminf.    0.45178 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  30: suminf.    0.03537 (1) obj. -6727.99 iterations 3
Cbc0038I Pass  31: suminf.    0.03537 (1) obj. -6727.99 iterations 0
Cbc0038I Pass  32: suminf.    0.44896 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  33: suminf.    0.17561 (1) obj. -6299.6 iterations 4
Cbc0038I Pass  34: suminf.    0.48876 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  35: suminf.    0.32955 (1) obj. -5458.41 iterations 1
Cbc0038I Pass  36: suminf.    0.42642 (1) obj. -6099.9 iterations 3
Cbc0038I Pass  37: suminf.    0.27918 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  38: suminf.    0.42642 (1) obj. -6099.9 iterations 1
Cbc0038I Pass  39: suminf.    0.39497 (1) obj. -6171.88 iterations 1
Cbc0038I Pass  40: suminf.    0.29798 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  41: suminf.    0.39497 (1) obj. -6171.88 iterations 1
Cbc0038I Pass  42: suminf.    0.36478 (1) obj. -5080.87 iterations 1
Cbc0038I Pass  43: suminf.    0.48015 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  44: suminf.    0.36478 (1) obj. -5080.87 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3629.52 - took 0.02 seconds
Cbc0012I Integer solution of -3629.519 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -6365.816 found by DiveCoefficient after 32 iterations and 0 nodes (0.01 seconds)
Cbc0031I 8 added rows had average density of 4.75
Cbc0013I At root node, 8 cuts changed objective from -7603.1713 to -6365.816 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 5.6 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 22 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6365.816000000001, took 32 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-19) rows, 35 (-11) columns and 218 (-170) elements
Clp1000I sum of infeasibilities 1.37788e-09 - average 4.75133e-11, 14 fixed columns
Coin0506I Presolve 6 (-23) rows, 6 (-29) columns and 19 (-199) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 12687.213
Clp0000I Optimal - objective value 12687.213
Coin0511I After Postsolve, objective 12687.213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1753506 - largest nonzero change 0 ( 0%) - largest zero change 2.9494874e-05
Clp0000I Optimal - objective value 12687.213
Clp0000I Optimal - objective value 12687.213
Clp0000I Optimal - objective value 12687.213
Coin0511I After Postsolve, objective 12687.213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12687.21347 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 32 columns (32 integer (32 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 3.7926
Cbc0038I Pass   1: suminf.    0.00488 (1) obj. -6789.7 iterations 23
Cbc0038I Solution found of -1132.84
Cbc0038I Rounding solution of -1563.45 is better than previous of -1132.84

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 32 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -1563.45 to -3072.91 (0.01 seconds)
Cbc0038I Round again with cutoff of -3554.74
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.00488 (1) obj. -6789.7 iterations 0
Cbc0038I Pass   3: suminf.    0.42605 (1) obj. -3554.74 iterations 1
Cbc0038I Pass   4: suminf.    0.67104 (2) obj. -3554.74 iterations 8
Cbc0038I Pass   5: suminf.    0.67104 (2) obj. -3554.74 iterations 1
Cbc0038I Pass   6: suminf.    0.21341 (1) obj. -6354.99 iterations 2
Cbc0038I Pass   7: suminf.    0.29459 (1) obj. -3554.74 iterations 1
Cbc0038I Pass   8: suminf.    1.02249 (3) obj. -3554.74 iterations 5
Cbc0038I Pass   9: suminf.    0.12195 (1) obj. -6478.95 iterations 3
Cbc0038I Pass  10: suminf.    0.36427 (1) obj. -3554.74 iterations 1
Cbc0038I Pass  11: suminf.    0.97780 (3) obj. -3554.74 iterations 10
Cbc0038I Pass  12: suminf.    0.30366 (2) obj. -5422.42 iterations 3
Cbc0038I Pass  13: suminf.    0.43124 (1) obj. -3554.74 iterations 2
Cbc0038I Pass  14: suminf.    0.10366 (1) obj. -5419.22 iterations 1
Cbc0038I Pass  15: suminf.    0.10366 (1) obj. -5428.22 iterations 3
Cbc0038I Pass  16: suminf.    0.43283 (1) obj. -3554.74 iterations 1
Cbc0038I Pass  17: suminf.    0.10366 (1) obj. -5428.22 iterations 1
Cbc0038I Pass  18: suminf.    0.25000 (1) obj. -4964.92 iterations 2
Cbc0038I Pass  19: suminf.    0.25000 (1) obj. -4964.92 iterations 0
Cbc0038I Pass  20: suminf.    0.49777 (1) obj. -3554.74 iterations 1
Cbc0038I Pass  21: suminf.    1.07027 (3) obj. -3554.74 iterations 8
Cbc0038I Pass  22: suminf.    0.97527 (4) obj. -4762.13 iterations 5
Cbc0038I Pass  23: suminf.    0.49654 (1) obj. -3554.74 iterations 4
Cbc0038I Pass  24: suminf.    0.28659 (1) obj. -4749.69 iterations 1
Cbc0038I Pass  25: suminf.    0.70925 (4) obj. -5443.64 iterations 8
Cbc0038I Pass  26: suminf.    0.70925 (4) obj. -5443.64 iterations 0
Cbc0038I Pass  27: suminf.    0.43353 (1) obj. -3554.74 iterations 4
Cbc0038I Pass  28: suminf.    0.10366 (1) obj. -5432.22 iterations 1
Cbc0038I Pass  29: suminf.    0.70000 (3) obj. -6045.03 iterations 13
Cbc0038I Pass  30: suminf.    0.62222 (2) obj. -6044.65 iterations 1
Cbc0038I Pass  31: suminf.    0.34073 (1) obj. -3554.74 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 32 columns, reduced to 24 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -3072.91 to -6365.82 (0.02 seconds)
Cbc0038I Round again with cutoff of -6670.9
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.00488 (1) obj. -6789.7 iterations 0
Cbc0038I Pass  32: suminf.    0.02578 (1) obj. -6670.9 iterations 1
Cbc0038I Pass  33: suminf.    2.50219 (9) obj. -6670.9 iterations 13
Cbc0038I Pass  34: suminf.    1.01216 (4) obj. -6670.9 iterations 4
Cbc0038I Pass  35: suminf.    0.15896 (1) obj. -6670.9 iterations 3
Cbc0038I Pass  36: suminf.    0.11111 (1) obj. -6943.26 iterations 1
Cbc0038I Pass  37: suminf.    0.42853 (2) obj. -6670.9 iterations 4
Cbc0038I Pass  38: suminf.    0.15984 (1) obj. -6670.9 iterations 1
Cbc0038I Pass  39: suminf.    0.11111 (1) obj. -6948.26 iterations 1
Cbc0038I Pass  40: suminf.    0.95461 (3) obj. -6670.9 iterations 3
Cbc0038I Pass  41: suminf.    0.44138 (2) obj. -6670.9 iterations 1
Cbc0038I Pass  42: suminf.    0.17864 (1) obj. -6670.9 iterations 1
Cbc0038I Pass  43: suminf.    0.11585 (1) obj. -7028.26 iterations 1
Cbc0038I Pass  44: suminf.    0.18760 (3) obj. -6783.68 iterations 7
Cbc0038I Pass  45: suminf.    0.09069 (1) obj. -6670.9 iterations 3
Cbc0038I Pass  46: suminf.    0.07317 (1) obj. -6770.59 iterations 1
Cbc0038I Pass  47: suminf.    0.03659 (1) obj. -6993.81 iterations 5
Cbc0038I Pass  48: suminf.    0.03659 (1) obj. -6993.81 iterations 0
Cbc0038I Pass  49: suminf.    0.09332 (1) obj. -6670.9 iterations 1
Cbc0038I Pass  50: suminf.    0.03659 (1) obj. -6991.81 iterations 5
Cbc0038I Pass  51: suminf.    0.09297 (1) obj. -6670.9 iterations 1
Cbc0038I Pass  52: suminf.    0.03659 (1) obj. -6991.81 iterations 1
Cbc0038I Pass  53: suminf.    1.00262 (5) obj. -6670.9 iterations 8
Cbc0038I Pass  54: suminf.    0.09191 (1) obj. -6670.9 iterations 6
Cbc0038I Pass  55: suminf.    0.07317 (1) obj. -6777.59 iterations 1
Cbc0038I Pass  56: suminf.    0.66766 (12) obj. -6670.9 iterations 11
Cbc0038I Pass  57: suminf.    0.55939 (3) obj. -6670.9 iterations 2
Cbc0038I Pass  58: suminf.    0.09490 (1) obj. -6670.9 iterations 2
Cbc0038I Pass  59: suminf.    0.06707 (1) obj. -6829.29 iterations 1
Cbc0038I Pass  60: suminf.    0.35279 (3) obj. -6839.86 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 32 columns, reduced to 23 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -6365.82 - took 0.02 seconds
Cbc0012I Integer solution of -6365.816 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 26 rows 32 columns, reduced to 23 rows 25 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7891.2407 to -7891.2407 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 21 column cuts (21 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6365.816000000001, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-31) rows, 13 (-12) columns and 55 (-80) elements
Clp1000I sum of infeasibilities 0 - average 0, 9 fixed columns
Coin0506I Presolve 4 (-14) rows, 4 (-9) columns and 10 (-45) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Coin0511I After Postsolve, objective 12583.503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26750404 - largest nonzero change 0 ( 0%) - largest zero change 1.5917103e-05
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Coin0511I After Postsolve, objective 12583.503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12583.50328 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 55 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.262%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.00485
Cbc0038I Pass   1: suminf.    0.02317 (1) obj. -7436.95 iterations 2
Cbc0038I Solution found of -1884.08
Cbc0038I Relaxing continuous gives -1937.07
Cbc0038I Rounding solution of -2387.69 is better than previous of -1937.07

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2909.24
Cbc0038I Pass   2: suminf.    0.02317 (1) obj. -7436.95 iterations 0
Cbc0038I Pass   3: suminf.    0.17081 (1) obj. -2909.24 iterations 3
Cbc0038I Pass   4: suminf.    0.11364 (1) obj. -6981.88 iterations 1
Cbc0038I Pass   5: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass   6: suminf.    0.27273 (1) obj. -6076.4 iterations 0
Cbc0038I Pass   7: suminf.    0.17081 (1) obj. -2909.24 iterations 1
Cbc0038I Pass   8: suminf.    0.22257 (1) obj. -2909.24 iterations 3
Cbc0038I Pass   9: suminf.    0.32955 (1) obj. -5458.41 iterations 1
Cbc0038I Pass  10: suminf.    0.22257 (1) obj. -2909.24 iterations 1
Cbc0038I Pass  11: suminf.    0.23891 (1) obj. -2909.24 iterations 2
Cbc0038I Pass  12: suminf.    0.22727 (1) obj. -5947.5 iterations 1
Cbc0038I Pass  13: suminf.    0.23891 (1) obj. -2909.24 iterations 1
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -3108.91 iterations 4
Cbc0038I Solution found of -3108.91
Cbc0038I Relaxing continuous gives -3108.91
Cbc0038I Rounding solution of -3629.52 is better than previous of -3108.91

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4424.25
Cbc0038I Pass  15: suminf.    0.02317 (1) obj. -7436.95 iterations 0
Cbc0038I Pass  16: suminf.    0.43699 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  17: suminf.    0.11364 (1) obj. -6981.88 iterations 1
Cbc0038I Pass  18: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass  19: suminf.    0.43699 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  20: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass  21: suminf.    0.93933 (2) obj. -4424.25 iterations 2
Cbc0038I Pass  22: suminf.    0.49921 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  23: suminf.    0.12683 (1) obj. -6510.56 iterations 2
Cbc0038I Pass  24: suminf.    0.15122 (1) obj. -5993.47 iterations 4
Cbc0038I Pass  25: suminf.    0.15122 (1) obj. -5993.47 iterations 1
Cbc0038I Pass  26: suminf.    0.43366 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  27: suminf.    0.45178 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  28: suminf.    0.18171 (1) obj. -5931.12 iterations 3
Cbc0038I Pass  29: suminf.    0.45178 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  30: suminf.    0.03537 (1) obj. -6727.99 iterations 3
Cbc0038I Pass  31: suminf.    0.03537 (1) obj. -6727.99 iterations 0
Cbc0038I Pass  32: suminf.    0.44896 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  33: suminf.    0.17561 (1) obj. -6299.6 iterations 4
Cbc0038I Pass  34: suminf.    0.48876 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  35: suminf.    0.32955 (1) obj. -5458.41 iterations 1
Cbc0038I Pass  36: suminf.    0.42642 (1) obj. -6099.9 iterations 3
Cbc0038I Pass  37: suminf.    0.27918 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  38: suminf.    0.42642 (1) obj. -6099.9 iterations 1
Cbc0038I Pass  39: suminf.    0.39497 (1) obj. -6171.88 iterations 1
Cbc0038I Pass  40: suminf.    0.29798 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  41: suminf.    0.39497 (1) obj. -6171.88 iterations 1
Cbc0038I Pass  42: suminf.    0.36478 (1) obj. -5080.87 iterations 1
Cbc0038I Pass  43: suminf.    0.48015 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  44: suminf.    0.36478 (1) obj. -5080.87 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3629.52 - took 0.01 seconds
Cbc0012I Integer solution of -3629.519 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -6365.816 found by DiveCoefficient after 32 iterations and 0 nodes (0.02 seconds)
Cbc0031I 8 added rows had average density of 4.75
Cbc0013I At root node, 8 cuts changed objective from -7603.1713 to -6365.816 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 5.6 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 22 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6365.816000000001, took 32 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-24) rows, 31 (-16) columns and 150 (-239) elements
Clp1000I sum of infeasibilities 0 - average 0, 28 fixed columns
Coin0506I Presolve 3 (-22) rows, 3 (-28) columns and 8 (-142) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 12562.201
Clp0000I Optimal - objective value 12562.201
Coin0511I After Postsolve, objective 12562.201, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.18021122 - largest nonzero change 0 ( 0%) - largest zero change 2.6176227e-05
Clp0000I Optimal - objective value 12687.213
Clp0000I Optimal - objective value 12687.213
Clp0000I Optimal - objective value 12687.213
Coin0511I After Postsolve, objective 12687.213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12687.21347 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 32 columns (32 integer (32 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.260%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 8.33643
Cbc0038I Pass   1: suminf.    0.17209 (2) obj. -7288.72 iterations 23
Cbc0038I Solution found of -1937.07
Cbc0038I Rounding solution of -2333.68 is better than previous of -1937.07

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2859.18
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17209 (2) obj. -7288.72 iterations 0
Cbc0038I Pass   3: suminf.    0.16201 (1) obj. -2859.18 iterations 4
Cbc0038I Pass   4: suminf.    0.06098 (1) obj. -7281.61 iterations 1
Cbc0038I Pass   5: suminf.    0.53808 (3) obj. -7060.69 iterations 5
Cbc0038I Pass   6: suminf.    0.53808 (3) obj. -7060.69 iterations 0
Cbc0038I Pass   7: suminf.    0.14761 (1) obj. -2859.18 iterations 5
Cbc0038I Pass   8: suminf.    0.11585 (1) obj. -7051.26 iterations 1
Cbc0038I Pass   9: suminf.    0.04268 (1) obj. -6201.88 iterations 3
Cbc0038I Pass  10: suminf.    0.04268 (1) obj. -6201.88 iterations 1
Cbc0038I Pass  11: suminf.    0.37001 (1) obj. -2859.18 iterations 1
Cbc0038I Pass  12: suminf.    1.28663 (5) obj. -2859.18 iterations 9
Cbc0038I Pass  13: suminf.    0.13415 (1) obj. -5939.92 iterations 5
Cbc0038I Pass  14: suminf.    0.32457 (1) obj. -2859.18 iterations 1
Cbc0038I Pass  15: suminf.    0.32721 (1) obj. -2859.18 iterations 3
Cbc0038I Pass  16: suminf.    0.13415 (1) obj. -5924.92 iterations 1
Cbc0038I Pass  17: suminf.    0.32721 (1) obj. -2859.18 iterations 1
Cbc0038I Pass  18: suminf.    0.39215 (1) obj. -2859.18 iterations 3
Cbc0038I Pass  19: suminf.    0.39215 (1) obj. -2859.18 iterations 2
Cbc0038I Solution found of -6318.82
Cbc0038I Rounding solution of -6365.82 is better than previous of -6318.82

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 32 columns, reduced to 18 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6610.4
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  20: suminf.    0.17209 (2) obj. -7288.72 iterations 0
Cbc0038I Pass  21: suminf.    0.17891 (1) obj. -6610.4 iterations 4
Cbc0038I Pass  22: suminf.    0.06098 (1) obj. -7281.61 iterations 1
Cbc0038I Pass  23: suminf.    1.31890 (5) obj. -6610.4 iterations 8
Cbc0038I Pass  24: suminf.    1.08124 (4) obj. -6628.21 iterations 2
Cbc0038I Pass  25: suminf.    0.26370 (1) obj. -6610.4 iterations 6
Cbc0038I Pass  26: suminf.    0.26220 (1) obj. -6618.96 iterations 1
Cbc0038I Pass  27: suminf.    0.32714 (3) obj. -6775.55 iterations 30
Cbc0038I Pass  28: suminf.    0.10079 (1) obj. -6610.4 iterations 3
Cbc0038I Pass  29: suminf.    0.07317 (1) obj. -6767.59 iterations 1
Cbc0038I Pass  30: suminf.    0.71196 (5) obj. -6610.4 iterations 10
Cbc0038I Pass  31: suminf.    0.35889 (3) obj. -6809.16 iterations 2
Cbc0038I Pass  32: suminf.    0.10659 (1) obj. -6610.4 iterations 3
Cbc0038I Pass  33: suminf.    0.07317 (1) obj. -6800.59 iterations 1
Cbc0038I Pass  34: suminf.    0.20279 (2) obj. -6610.4 iterations 8
Cbc0038I Pass  35: suminf.    0.03659 (1) obj. -7014.81 iterations 4
Cbc0038I Pass  36: suminf.    0.10764 (1) obj. -6610.4 iterations 1
Cbc0038I Pass  37: suminf.    0.38543 (3) obj. -6610.4 iterations 6
Cbc0038I Pass  38: suminf.    0.38543 (3) obj. -6610.4 iterations 1
Cbc0038I Pass  39: suminf.    0.10500 (1) obj. -6610.4 iterations 6
Cbc0038I Pass  40: suminf.    0.03659 (1) obj. -6999.81 iterations 1
Cbc0038I Pass  41: suminf.    0.44860 (3) obj. -6610.4 iterations 3
Cbc0038I Pass  42: suminf.    0.30352 (2) obj. -6610.4 iterations 2
Cbc0038I Pass  43: suminf.    0.65484 (4) obj. -6610.4 iterations 10
Cbc0038I Pass  44: suminf.    0.36856 (2) obj. -6781.96 iterations 4
Cbc0038I Pass  45: suminf.    0.17539 (1) obj. -6610.4 iterations 4
Cbc0038I Pass  46: suminf.    0.14634 (1) obj. -6775.74 iterations 1
Cbc0038I Pass  47: suminf.    1.10839 (4) obj. -6610.4 iterations 6
Cbc0038I Pass  48: suminf.    1.10839 (4) obj. -6610.4 iterations 0
Cbc0038I Pass  49: suminf.    0.17434 (1) obj. -6610.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 32 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -6365.82 - took 0.01 seconds
Cbc0012I Integer solution of -6365.816 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 26 rows 32 columns, reduced to 15 rows 15 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7588.7359 to -7588.7359 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6365.816000000001, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

