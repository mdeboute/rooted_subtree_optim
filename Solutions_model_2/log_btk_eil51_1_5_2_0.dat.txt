Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 0.000103083 - average 1.18487e-06, 2 fixed columns
Coin0506I Presolve 83 (-4) rows, 49 (-2) columns and 256 (-12) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 37.917862
Clp0000I Optimal - objective value 37.917862
Coin0511I After Postsolve, objective 37.917862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.917862
Clp0000I Optimal - objective value 37.917862
Clp0000I Optimal - objective value 37.917862
Coin0511I After Postsolve, objective 37.917862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.91786196 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.95414
Cbc0038I Solution found of 8.57203
Cbc0038I Relaxing continuous gives -2.84275
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 67 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.84275 to -3.3583 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.81435
Cbc0038I Pass   1: suminf.    1.01131 (33) obj. -6.81435 iterations 21
Cbc0038I Pass   2: suminf.    2.21601 (8) obj. -6.81435 iterations 30
Cbc0038I Pass   3: suminf.    0.62802 (6) obj. -6.81435 iterations 6
Cbc0038I Pass   4: suminf.    0.59868 (5) obj. -6.81435 iterations 1
Cbc0038I Pass   5: suminf.    0.32474 (4) obj. -6.81435 iterations 7
Cbc0038I Pass   6: suminf.    1.81608 (6) obj. -6.81435 iterations 7
Cbc0038I Pass   7: suminf.    1.78155 (5) obj. -6.81435 iterations 1
Cbc0038I Pass   8: suminf.    1.27222 (4) obj. -6.81435 iterations 3
Cbc0038I Pass   9: suminf.    0.89410 (4) obj. -6.81435 iterations 5
Cbc0038I Pass  10: suminf.    1.22039 (4) obj. -6.81435 iterations 3
Cbc0038I Pass  11: suminf.    1.00801 (4) obj. -6.81435 iterations 5
Cbc0038I Pass  12: suminf.    1.26107 (4) obj. -6.81435 iterations 4
Cbc0038I Pass  13: suminf.    1.71667 (6) obj. -6.81435 iterations 14
Cbc0038I Pass  14: suminf.    0.81801 (4) obj. -6.81435 iterations 5
Cbc0038I Pass  15: suminf.    1.39168 (5) obj. -6.81435 iterations 4
Cbc0038I Pass  16: suminf.    1.14460 (3) obj. -6.81435 iterations 2
Cbc0038I Pass  17: suminf.    0.88478 (4) obj. -6.81435 iterations 3
Cbc0038I Pass  18: suminf.    1.73940 (7) obj. -6.81435 iterations 5
Cbc0038I Pass  19: suminf.    1.63535 (5) obj. -6.81435 iterations 2
Cbc0038I Pass  20: suminf.    1.21298 (4) obj. -6.81435 iterations 4
Cbc0038I Pass  21: suminf.    1.14460 (3) obj. -6.81435 iterations 1
Cbc0038I Pass  22: suminf.    0.88478 (4) obj. -6.81435 iterations 2
Cbc0038I Pass  23: suminf.    1.73940 (7) obj. -6.81435 iterations 5
Cbc0038I Pass  24: suminf.    1.63535 (5) obj. -6.81435 iterations 2
Cbc0038I Pass  25: suminf.    1.21298 (4) obj. -6.81435 iterations 4
Cbc0038I Pass  26: suminf.    1.14460 (3) obj. -6.81435 iterations 1
Cbc0038I Pass  27: suminf.    0.88478 (4) obj. -6.81435 iterations 2
Cbc0038I Pass  28: suminf.    1.73940 (7) obj. -6.81435 iterations 5
Cbc0038I Pass  29: suminf.    1.63535 (5) obj. -6.81435 iterations 2
Cbc0038I Pass  30: suminf.    1.21298 (4) obj. -6.81435 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 75 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -3.3583 - took 0.10 seconds
Cbc0012I Integer solution of -3.3583 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 19 added rows had average density of 46.052632
Cbc0013I At root node, 19 cuts changed objective from -37.917862 to -26.672396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7775 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0038I Full problem 87 rows 51 columns, reduced to 2 rows 7 columns
Cbc0012I Integer solution of -3.46877 found by rounding after 6049 iterations and 73 nodes (0.62 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 18 rows 19 columns
Cbc0012I Integer solution of -3.5888 found by DiveCoefficient after 6782 iterations and 127 nodes (0.68 seconds)
Cbc0010I After 127 nodes, 2 on tree, -3.5888 best solution, best possible -5.2394758 (0.68 seconds)
Cbc0016I Integer solution of -3.86301 found by strong branching after 6850 iterations and 137 nodes (0.69 seconds)
Cbc0001I Search completed - best objective -3.863009999999996, took 6867 iterations and 138 nodes (0.69 seconds)
Cbc0032I Strong branching done 906 times (11938 iterations), fathomed 21 nodes and fixed 42 variables
Cbc0035I Maximum depth 19, 383 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-36) rows, 81 (-21) columns and 1023 (-555) elements
Clp1000I sum of infeasibilities 2.14168e-08 - average 3.14952e-10, 12 fixed columns
Coin0506I Presolve 56 (-12) rows, 68 (-13) columns and 793 (-230) elements
Clp0006I 0  Obj 34.780836 Dual inf 2.1611002 (68)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 4.8184855 - largest nonzero change 1.7371728e-05 ( 0.00095608279%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 50.955107
Clp0000I Optimal - objective value 50.955107
Coin0511I After Postsolve, objective 50.955107, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.955107
Clp0000I Optimal - objective value 50.955107
Clp0000I Optimal - objective value 50.955107
Clp0000I Optimal - objective value 50.955107
Coin0511I After Postsolve, objective 50.955107, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.95510655 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 82 columns (82 integer (82 of which binary)) and 1034 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.970%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.01686
Cbc0038I Pass   1: suminf.    3.94089 (23) obj. -31.354 iterations 9
Cbc0038I Pass   2: suminf.    1.39858 (10) obj. -18.1812 iterations 11
Cbc0038I Solution found of 0.47434
Cbc0038I Rounding solution of -1.17779 is better than previous of 0.47434

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.58853
Cbc0038I Pass   3: suminf.    3.94089 (23) obj. -31.354 iterations 0
Cbc0038I Pass   4: suminf.    2.97043 (19) obj. -27.2522 iterations 3
Cbc0038I Pass   5: suminf.    0.42191 (2) obj. -4.58853 iterations 20
Cbc0038I Pass   6: suminf.    0.21429 (2) obj. -10.1787 iterations 1
Cbc0038I Pass   7: suminf.    0.16327 (1) obj. -9.56648 iterations 1
Cbc0038I Pass   8: suminf.    1.17937 (7) obj. -11.3748 iterations 16
Cbc0038I Pass   9: suminf.    0.98836 (6) obj. -10.9974 iterations 6
Cbc0038I Pass  10: suminf.    0.43040 (3) obj. -4.58853 iterations 7
Cbc0038I Pass  11: suminf.    0.43040 (3) obj. -4.58853 iterations 0
Cbc0038I Pass  12: suminf.    0.57418 (2) obj. -4.58853 iterations 3
Cbc0038I Pass  13: suminf.    0.57418 (2) obj. -4.58853 iterations 0
Cbc0038I Pass  14: suminf.    0.40052 (3) obj. -4.58853 iterations 2
Cbc0038I Pass  15: suminf.    3.88314 (15) obj. -4.58853 iterations 16
Cbc0038I Pass  16: suminf.    1.32234 (10) obj. -4.58853 iterations 10
Cbc0038I Pass  17: suminf.    1.80293 (7) obj. -4.58853 iterations 10
Cbc0038I Pass  18: suminf.    1.74338 (7) obj. -4.58853 iterations 7
Cbc0038I Pass  19: suminf.    2.52223 (7) obj. -4.58853 iterations 4
Cbc0038I Pass  20: suminf.    2.11010 (7) obj. -4.58853 iterations 3
Cbc0038I Pass  21: suminf.    1.82875 (6) obj. -4.58853 iterations 6
Cbc0038I Pass  22: suminf.    0.73356 (4) obj. -4.83823 iterations 2
Cbc0038I Pass  23: suminf.    1.51550 (6) obj. -4.58853 iterations 5
Cbc0038I Pass  24: suminf.    0.81679 (4) obj. -4.58853 iterations 4
Cbc0038I Pass  25: suminf.    1.90509 (8) obj. -4.58853 iterations 24
Cbc0038I Pass  26: suminf.    1.90509 (8) obj. -4.58853 iterations 6
Cbc0038I Pass  27: suminf.    2.08648 (7) obj. -4.58853 iterations 11
Cbc0038I Pass  28: suminf.    2.08648 (7) obj. -4.58853 iterations 0
Cbc0038I Pass  29: suminf.    2.43161 (7) obj. -4.58853 iterations 7
Cbc0038I Pass  30: suminf.    1.67735 (6) obj. -4.58853 iterations 7
Cbc0038I Pass  31: suminf.    1.67735 (6) obj. -4.58853 iterations 3
Cbc0038I Pass  32: suminf.    1.53397 (5) obj. -4.58853 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 23 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 0.47434 to -3.5888 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.7277
Cbc0038I Pass  32: suminf.    3.94089 (23) obj. -31.354 iterations 0
Cbc0038I Pass  33: suminf.    2.97043 (19) obj. -27.2522 iterations 3
Cbc0038I Pass  34: suminf.    0.29860 (6) obj. -10.7277 iterations 20
Cbc0038I Pass  35: suminf.    0.29860 (6) obj. -10.7277 iterations 0
Cbc0038I Pass  36: suminf.    0.64604 (2) obj. -10.7277 iterations 7
Cbc0038I Pass  37: suminf.    0.41691 (2) obj. -13.4773 iterations 2
Cbc0038I Pass  38: suminf.    0.33155 (2) obj. -10.7277 iterations 3
Cbc0038I Pass  39: suminf.    0.32151 (2) obj. -10.7277 iterations 1
Cbc0038I Pass  40: suminf.    0.33155 (2) obj. -10.7277 iterations 2
Cbc0038I Pass  41: suminf.    1.01122 (7) obj. -10.7277 iterations 15
Cbc0038I Pass  42: suminf.    0.79378 (6) obj. -10.7277 iterations 4
Cbc0038I Pass  43: suminf.    0.84265 (4) obj. -10.7277 iterations 7
Cbc0038I Pass  44: suminf.    0.64431 (3) obj. -10.7277 iterations 2
Cbc0038I Pass  45: suminf.    0.57676 (3) obj. -10.7277 iterations 2
Cbc0038I Pass  46: suminf.    1.03824 (6) obj. -10.7277 iterations 5
Cbc0038I Pass  47: suminf.    0.89638 (3) obj. -10.7277 iterations 5
Cbc0038I Pass  48: suminf.    0.63434 (3) obj. -10.7277 iterations 3
Cbc0038I Pass  49: suminf.    0.63434 (3) obj. -10.7277 iterations 0
Cbc0038I Pass  50: suminf.    0.53631 (3) obj. -10.7277 iterations 5
Cbc0038I Pass  51: suminf.    0.40816 (3) obj. -12.2655 iterations 1
Cbc0038I Pass  52: suminf.    0.78128 (4) obj. -10.7277 iterations 2
Cbc0038I Pass  53: suminf.    1.34764 (9) obj. -10.7277 iterations 16
Cbc0038I Pass  54: suminf.    1.04101 (7) obj. -10.7277 iterations 6
Cbc0038I Pass  55: suminf.    0.79024 (4) obj. -10.7277 iterations 11
Cbc0038I Pass  56: suminf.    0.69793 (3) obj. -10.7277 iterations 1
Cbc0038I Pass  57: suminf.    0.91769 (3) obj. -10.7277 iterations 8
Cbc0038I Pass  58: suminf.    0.21429 (3) obj. -11.1718 iterations 9
Cbc0038I Pass  59: suminf.    0.32205 (4) obj. -10.7277 iterations 2
Cbc0038I Pass  60: suminf.    1.57256 (10) obj. -10.7277 iterations 21
Cbc0038I Pass  61: suminf.    1.21233 (9) obj. -12.1686 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3.5888 - took 0.03 seconds
Cbc0012I Integer solution of -3.5888 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 8 rows 10 columns
Cbc0031I 40 added rows had average density of 27.525
Cbc0013I At root node, 40 cuts changed objective from -35.284286 to -8.7786979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6668 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1360 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 72 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 993 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 312 row cuts average 39.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.629 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.5888 best solution, best possible -8.7786979 (1.72 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 11 rows 16 columns
Cbc0004I Integer solution of -3.86301 found after 5439 iterations and 51 nodes (2.01 seconds)
Cbc0001I Search completed - best objective -3.863009999999996, took 5831 iterations and 60 nodes (2.03 seconds)
Cbc0032I Strong branching done 646 times (6489 iterations), fathomed 8 nodes and fixed 13 variables
Cbc0035I Maximum depth 14, 116 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       2.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 0.000103083 - average 1.18487e-06, 2 fixed columns
Coin0506I Presolve 83 (-4) rows, 49 (-2) columns and 256 (-12) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 37.917862
Clp0000I Optimal - objective value 37.917862
Coin0511I After Postsolve, objective 37.917862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.917862
Clp0000I Optimal - objective value 37.917862
Clp0000I Optimal - objective value 37.917862
Coin0511I After Postsolve, objective 37.917862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.91786196 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.95414
Cbc0038I Solution found of 8.57203
Cbc0038I Relaxing continuous gives -2.84275
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 67 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.84275 to -3.3583 (0.06 seconds)
Cbc0038I Round again with cutoff of -6.81435
Cbc0038I Pass   1: suminf.    1.01131 (33) obj. -6.81435 iterations 21
Cbc0038I Pass   2: suminf.    2.21601 (8) obj. -6.81435 iterations 30
Cbc0038I Pass   3: suminf.    0.62802 (6) obj. -6.81435 iterations 6
Cbc0038I Pass   4: suminf.    0.59868 (5) obj. -6.81435 iterations 1
Cbc0038I Pass   5: suminf.    0.32474 (4) obj. -6.81435 iterations 7
Cbc0038I Pass   6: suminf.    1.81608 (6) obj. -6.81435 iterations 7
Cbc0038I Pass   7: suminf.    1.78155 (5) obj. -6.81435 iterations 1
Cbc0038I Pass   8: suminf.    1.27222 (4) obj. -6.81435 iterations 3
Cbc0038I Pass   9: suminf.    0.89410 (4) obj. -6.81435 iterations 5
Cbc0038I Pass  10: suminf.    1.22039 (4) obj. -6.81435 iterations 3
Cbc0038I Pass  11: suminf.    1.00801 (4) obj. -6.81435 iterations 5
Cbc0038I Pass  12: suminf.    1.26107 (4) obj. -6.81435 iterations 4
Cbc0038I Pass  13: suminf.    1.71667 (6) obj. -6.81435 iterations 14
Cbc0038I Pass  14: suminf.    0.81801 (4) obj. -6.81435 iterations 5
Cbc0038I Pass  15: suminf.    1.39168 (5) obj. -6.81435 iterations 4
Cbc0038I Pass  16: suminf.    1.14460 (3) obj. -6.81435 iterations 2
Cbc0038I Pass  17: suminf.    0.88478 (4) obj. -6.81435 iterations 3
Cbc0038I Pass  18: suminf.    1.73940 (7) obj. -6.81435 iterations 5
Cbc0038I Pass  19: suminf.    1.63535 (5) obj. -6.81435 iterations 2
Cbc0038I Pass  20: suminf.    1.21298 (4) obj. -6.81435 iterations 4
Cbc0038I Pass  21: suminf.    1.14460 (3) obj. -6.81435 iterations 1
Cbc0038I Pass  22: suminf.    0.88478 (4) obj. -6.81435 iterations 2
Cbc0038I Pass  23: suminf.    1.73940 (7) obj. -6.81435 iterations 5
Cbc0038I Pass  24: suminf.    1.63535 (5) obj. -6.81435 iterations 2
Cbc0038I Pass  25: suminf.    1.21298 (4) obj. -6.81435 iterations 4
Cbc0038I Pass  26: suminf.    1.14460 (3) obj. -6.81435 iterations 1
Cbc0038I Pass  27: suminf.    0.88478 (4) obj. -6.81435 iterations 2
Cbc0038I Pass  28: suminf.    1.73940 (7) obj. -6.81435 iterations 5
Cbc0038I Pass  29: suminf.    1.63535 (5) obj. -6.81435 iterations 2
Cbc0038I Pass  30: suminf.    1.21298 (4) obj. -6.81435 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 75 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -3.3583 - took 0.10 seconds
Cbc0012I Integer solution of -3.3583 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 19 added rows had average density of 46.052632
Cbc0013I At root node, 19 cuts changed objective from -37.917862 to -26.672396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7775 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0038I Full problem 87 rows 51 columns, reduced to 2 rows 7 columns
Cbc0012I Integer solution of -3.46877 found by rounding after 6049 iterations and 73 nodes (0.65 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 18 rows 19 columns
Cbc0010I After 102 nodes, 3 on tree, -3.46877 best solution, best possible -5.5114886 (0.68 seconds)
Cbc0012I Integer solution of -3.5888 found by DiveCoefficient after 6782 iterations and 127 nodes (0.72 seconds)
Cbc0016I Integer solution of -3.86301 found by strong branching after 6850 iterations and 137 nodes (0.73 seconds)
Cbc0001I Search completed - best objective -3.863009999999996, took 6867 iterations and 138 nodes (0.73 seconds)
Cbc0032I Strong branching done 906 times (11938 iterations), fathomed 21 nodes and fixed 42 variables
Cbc0035I Maximum depth 19, 383 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-37) rows, 81 (-22) columns and 1023 (-556) elements
Clp1000I sum of infeasibilities 2.14168e-08 - average 3.14952e-10, 12 fixed columns
Coin0506I Presolve 56 (-12) rows, 68 (-13) columns and 793 (-230) elements
Clp0006I 0  Obj 34.780836 Dual inf 2.1611002 (68)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 4.8184855 - largest nonzero change 1.7371728e-05 ( 0.00095608279%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 50.955107
Clp0000I Optimal - objective value 50.955107
Coin0511I After Postsolve, objective 50.955107, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.955107
Clp0000I Optimal - objective value 50.955107
Clp0000I Optimal - objective value 50.955107
Clp0000I Optimal - objective value 50.955107
Coin0511I After Postsolve, objective 50.955107, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.95510655 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 82 columns (82 integer (82 of which binary)) and 1034 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.970%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.01686
Cbc0038I Pass   1: suminf.    3.94089 (23) obj. -31.354 iterations 9
Cbc0038I Pass   2: suminf.    1.39858 (10) obj. -18.1812 iterations 11
Cbc0038I Solution found of 0.47434
Cbc0038I Rounding solution of -1.17779 is better than previous of 0.47434

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4.58853
Cbc0038I Pass   3: suminf.    3.94089 (23) obj. -31.354 iterations 0
Cbc0038I Pass   4: suminf.    2.97043 (19) obj. -27.2522 iterations 3
Cbc0038I Pass   5: suminf.    0.42191 (2) obj. -4.58853 iterations 20
Cbc0038I Pass   6: suminf.    0.21429 (2) obj. -10.1787 iterations 1
Cbc0038I Pass   7: suminf.    0.16327 (1) obj. -9.56648 iterations 1
Cbc0038I Pass   8: suminf.    1.17937 (7) obj. -11.3748 iterations 16
Cbc0038I Pass   9: suminf.    0.98836 (6) obj. -10.9974 iterations 6
Cbc0038I Pass  10: suminf.    0.43040 (3) obj. -4.58853 iterations 7
Cbc0038I Pass  11: suminf.    0.43040 (3) obj. -4.58853 iterations 0
Cbc0038I Pass  12: suminf.    0.57418 (2) obj. -4.58853 iterations 3
Cbc0038I Pass  13: suminf.    0.57418 (2) obj. -4.58853 iterations 0
Cbc0038I Pass  14: suminf.    0.40052 (3) obj. -4.58853 iterations 2
Cbc0038I Pass  15: suminf.    3.88314 (15) obj. -4.58853 iterations 16
Cbc0038I Pass  16: suminf.    1.32234 (10) obj. -4.58853 iterations 10
Cbc0038I Pass  17: suminf.    1.80293 (7) obj. -4.58853 iterations 10
Cbc0038I Pass  18: suminf.    1.74338 (7) obj. -4.58853 iterations 7
Cbc0038I Pass  19: suminf.    2.52223 (7) obj. -4.58853 iterations 4
Cbc0038I Pass  20: suminf.    2.11010 (7) obj. -4.58853 iterations 3
Cbc0038I Pass  21: suminf.    1.82875 (6) obj. -4.58853 iterations 6
Cbc0038I Pass  22: suminf.    0.73356 (4) obj. -4.83823 iterations 2
Cbc0038I Pass  23: suminf.    1.51550 (6) obj. -4.58853 iterations 5
Cbc0038I Pass  24: suminf.    0.81679 (4) obj. -4.58853 iterations 4
Cbc0038I Pass  25: suminf.    1.90509 (8) obj. -4.58853 iterations 24
Cbc0038I Pass  26: suminf.    1.90509 (8) obj. -4.58853 iterations 6
Cbc0038I Pass  27: suminf.    2.08648 (7) obj. -4.58853 iterations 11
Cbc0038I Pass  28: suminf.    2.08648 (7) obj. -4.58853 iterations 0
Cbc0038I Pass  29: suminf.    2.43161 (7) obj. -4.58853 iterations 7
Cbc0038I Pass  30: suminf.    1.67735 (6) obj. -4.58853 iterations 7
Cbc0038I Pass  31: suminf.    1.67735 (6) obj. -4.58853 iterations 3
Cbc0038I Pass  32: suminf.    1.53397 (5) obj. -4.58853 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 23 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 0.47434 to -3.5888 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.7277
Cbc0038I Pass  32: suminf.    3.94089 (23) obj. -31.354 iterations 0
Cbc0038I Pass  33: suminf.    2.97043 (19) obj. -27.2522 iterations 3
Cbc0038I Pass  34: suminf.    0.29860 (6) obj. -10.7277 iterations 20
Cbc0038I Pass  35: suminf.    0.29860 (6) obj. -10.7277 iterations 0
Cbc0038I Pass  36: suminf.    0.64604 (2) obj. -10.7277 iterations 7
Cbc0038I Pass  37: suminf.    0.41691 (2) obj. -13.4773 iterations 2
Cbc0038I Pass  38: suminf.    0.33155 (2) obj. -10.7277 iterations 3
Cbc0038I Pass  39: suminf.    0.32151 (2) obj. -10.7277 iterations 1
Cbc0038I Pass  40: suminf.    0.33155 (2) obj. -10.7277 iterations 2
Cbc0038I Pass  41: suminf.    1.01122 (7) obj. -10.7277 iterations 15
Cbc0038I Pass  42: suminf.    0.79378 (6) obj. -10.7277 iterations 4
Cbc0038I Pass  43: suminf.    0.84265 (4) obj. -10.7277 iterations 7
Cbc0038I Pass  44: suminf.    0.64431 (3) obj. -10.7277 iterations 2
Cbc0038I Pass  45: suminf.    0.57676 (3) obj. -10.7277 iterations 2
Cbc0038I Pass  46: suminf.    1.03824 (6) obj. -10.7277 iterations 5
Cbc0038I Pass  47: suminf.    0.89638 (3) obj. -10.7277 iterations 5
Cbc0038I Pass  48: suminf.    0.63434 (3) obj. -10.7277 iterations 3
Cbc0038I Pass  49: suminf.    0.63434 (3) obj. -10.7277 iterations 0
Cbc0038I Pass  50: suminf.    0.53631 (3) obj. -10.7277 iterations 5
Cbc0038I Pass  51: suminf.    0.40816 (3) obj. -12.2655 iterations 1
Cbc0038I Pass  52: suminf.    0.78128 (4) obj. -10.7277 iterations 2
Cbc0038I Pass  53: suminf.    1.34764 (9) obj. -10.7277 iterations 16
Cbc0038I Pass  54: suminf.    1.04101 (7) obj. -10.7277 iterations 6
Cbc0038I Pass  55: suminf.    0.79024 (4) obj. -10.7277 iterations 11
Cbc0038I Pass  56: suminf.    0.69793 (3) obj. -10.7277 iterations 1
Cbc0038I Pass  57: suminf.    0.91769 (3) obj. -10.7277 iterations 8
Cbc0038I Pass  58: suminf.    0.21429 (3) obj. -11.1718 iterations 9
Cbc0038I Pass  59: suminf.    0.32205 (4) obj. -10.7277 iterations 2
Cbc0038I Pass  60: suminf.    1.57256 (10) obj. -10.7277 iterations 21
Cbc0038I Pass  61: suminf.    1.21233 (9) obj. -12.1686 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -3.5888 - took 0.03 seconds
Cbc0012I Integer solution of -3.5888 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 8 rows 10 columns
Cbc0031I 40 added rows had average density of 27.525
Cbc0013I At root node, 40 cuts changed objective from -35.284286 to -8.7786979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6668 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1360 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 72 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 993 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 312 row cuts average 39.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.685 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.5888 best solution, best possible -8.7786979 (1.86 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 11 rows 16 columns
Cbc0004I Integer solution of -3.86301 found after 5439 iterations and 51 nodes (2.17 seconds)
Cbc0001I Search completed - best objective -3.863009999999996, took 5831 iterations and 60 nodes (2.19 seconds)
Cbc0032I Strong branching done 646 times (6489 iterations), fathomed 8 nodes and fixed 13 variables
Cbc0035I Maximum depth 14, 116 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       2.20

