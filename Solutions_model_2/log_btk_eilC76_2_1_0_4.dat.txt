Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-62) rows, 54 (-24) columns and 287 (-166) elements
Clp1000I sum of infeasibilities 4.56208e-05 - average 4.90546e-07, 18 fixed columns
Coin0506I Presolve 36 (-57) rows, 33 (-21) columns and 131 (-156) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 144.4468
Clp0000I Optimal - objective value 144.4468
Coin0511I After Postsolve, objective 144.4468, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 144.4468
Clp0000I Optimal - objective value 144.4468
Clp0000I Optimal - objective value 144.4468
Coin0511I After Postsolve, objective 144.4468, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.4467987 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 54 columns (53 integer (53 of which binary)) and 287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.546%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.04454
Cbc0038I Pass   1: suminf.    0.60638 (2) obj. -129.889 iterations 10
Cbc0038I Pass   2: suminf.    0.35714 (1) obj. -130.27 iterations 1
Cbc0038I Solution found of -113.214
Cbc0038I Relaxing continuous gives -113.214
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 54 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -113.214 to -125.238 (0.01 seconds)
Cbc0038I Round again with cutoff of -127.159
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.60638 (2) obj. -129.889 iterations 0
Cbc0038I Pass   4: suminf.    0.35714 (1) obj. -130.27 iterations 3
Cbc0038I Pass   5: suminf.    0.47441 (1) obj. -127.159 iterations 2
Cbc0038I Pass   6: suminf.    0.77084 (5) obj. -127.159 iterations 8
Cbc0038I Pass   7: suminf.    0.66730 (4) obj. -127.159 iterations 4
Cbc0038I Pass   8: suminf.    0.98655 (2) obj. -127.159 iterations 7
Cbc0038I Pass   9: suminf.    1.04219 (5) obj. -127.159 iterations 11
Cbc0038I Pass  10: suminf.    0.91490 (3) obj. -127.159 iterations 7
Cbc0038I Pass  11: suminf.    1.37560 (4) obj. -127.159 iterations 4
Cbc0038I Pass  12: suminf.    2.16174 (7) obj. -127.159 iterations 5
Cbc0038I Pass  13: suminf.    1.71064 (8) obj. -127.159 iterations 6
Cbc0038I Pass  14: suminf.    1.77518 (7) obj. -127.159 iterations 11
Cbc0038I Pass  15: suminf.    0.69973 (4) obj. -127.159 iterations 11
Cbc0038I Pass  16: suminf.    0.08031 (2) obj. -127.159 iterations 2
Cbc0038I Pass  17: suminf.    1.04586 (3) obj. -127.159 iterations 5
Cbc0038I Pass  18: suminf.    0.25260 (2) obj. -127.159 iterations 3
Cbc0038I Pass  19: suminf.    2.33037 (7) obj. -127.159 iterations 16
Cbc0038I Pass  20: suminf.    1.08519 (3) obj. -127.159 iterations 5
Cbc0038I Pass  21: suminf.    0.42857 (1) obj. -127.159 iterations 3
Cbc0038I Pass  22: suminf.    0.45690 (1) obj. -127.159 iterations 2
Cbc0038I Pass  23: suminf.    2.48059 (10) obj. -127.159 iterations 19
Cbc0038I Pass  24: suminf.    0.98050 (9) obj. -127.159 iterations 10
Cbc0038I Pass  25: suminf.    0.46610 (5) obj. -127.159 iterations 4
Cbc0038I Pass  26: suminf.    1.26968 (6) obj. -127.159 iterations 5
Cbc0038I Pass  27: suminf.    1.22777 (8) obj. -127.159 iterations 2
Cbc0038I Pass  28: suminf.    1.77903 (5) obj. -127.159 iterations 12
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. -127.867 iterations 10
Cbc0038I Solution found of -127.867
Cbc0038I Relaxing continuous gives -127.867
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 54 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -131.183
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.66654 (4) obj. -131.183 iterations 1
Cbc0038I Pass  31: suminf.    0.36860 (3) obj. -131.183 iterations 3
Cbc0038I Pass  32: suminf.    0.81078 (2) obj. -131.183 iterations 2
Cbc0038I Pass  33: suminf.    1.32048 (5) obj. -131.183 iterations 8
Cbc0038I Pass  34: suminf.    0.37876 (2) obj. -131.183 iterations 7
Cbc0038I Pass  35: suminf.    0.91043 (4) obj. -131.183 iterations 10
Cbc0038I Pass  36: suminf.    0.60418 (3) obj. -131.183 iterations 6
Cbc0038I Pass  37: suminf.    0.37530 (2) obj. -131.183 iterations 8
Cbc0038I Pass  38: suminf.    0.71886 (2) obj. -131.183 iterations 6
Cbc0038I Pass  39: suminf.    0.44094 (3) obj. -131.183 iterations 3
Cbc0038I Pass  40: suminf.    0.89039 (2) obj. -131.183 iterations 2
Cbc0038I Pass  41: suminf.    1.14108 (4) obj. -131.183 iterations 4
Cbc0038I Pass  42: suminf.    0.68334 (4) obj. -131.183 iterations 5
Cbc0038I Pass  43: suminf.    0.30539 (2) obj. -131.183 iterations 7
Cbc0038I Pass  44: suminf.    1.16954 (3) obj. -131.183 iterations 5
Cbc0038I Pass  45: suminf.    0.47059 (3) obj. -131.183 iterations 2
Cbc0038I Pass  46: suminf.    2.04896 (6) obj. -131.183 iterations 12
Cbc0038I Pass  47: suminf.    2.04822 (5) obj. -131.183 iterations 4
Cbc0038I Pass  48: suminf.    0.62997 (2) obj. -131.183 iterations 4
Cbc0038I Pass  49: suminf.    0.44094 (3) obj. -131.183 iterations 2
Cbc0038I Pass  50: suminf.    0.89039 (2) obj. -131.183 iterations 2
Cbc0038I Pass  51: suminf.    2.45636 (6) obj. -131.183 iterations 10
Cbc0038I Pass  52: suminf.    0.89039 (2) obj. -131.183 iterations 9
Cbc0038I Pass  53: suminf.    1.60080 (5) obj. -131.183 iterations 6
Cbc0038I Pass  54: suminf.    1.43983 (6) obj. -131.183 iterations 3
Cbc0038I Pass  55: suminf.    0.53447 (3) obj. -131.183 iterations 10
Cbc0038I Pass  56: suminf.    0.53447 (3) obj. -131.183 iterations 0
Cbc0038I Pass  57: suminf.    0.63620 (4) obj. -131.183 iterations 3
Cbc0038I Pass  58: suminf.    0.60388 (4) obj. -131.183 iterations 5
Cbc0038I Pass  59: suminf.    0.53923 (3) obj. -131.183 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 54 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -127.867 - took 0.02 seconds
Cbc0012I Integer solution of -127.8669 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 93 rows 54 columns, reduced to 8 rows 9 columns
Cbc0031I 8 added rows had average density of 16.375
Cbc0013I At root node, 8 cuts changed objective from -144.4468 to -130.32156 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 3.2 elements, 13 column cuts (13 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 65 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -127.8669, took 127 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 14 times (79 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-71) rows, 96 (-56) columns and 1329 (-1974) elements
Clp1000I sum of infeasibilities 3.11367e-07 - average 3.75141e-09, 28 fixed columns
Coin0506I Presolve 59 (-24) rows, 67 (-29) columns and 543 (-786) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 5.4028463 - largest nonzero change 2.0537761e-05 ( 0.0010393299%) - largest zero change 2.6900221e-05
Clp0000I Optimal - objective value 188.04008
Clp0000I Optimal - objective value 188.04008
Coin0511I After Postsolve, objective 188.04008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 188.04008
Clp0000I Optimal - objective value 188.04008
Clp0000I Optimal - objective value 188.04008
Coin0511I After Postsolve, objective 188.04008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 188.040078 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 97 columns (97 integer (97 of which binary)) and 1333 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.561%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.95689
Cbc0038I Pass   1: suminf.    1.78882 (21) obj. -84.7099 iterations 16
Cbc0038I Pass   2: suminf.    1.78882 (21) obj. -84.7099 iterations 1
Cbc0038I Pass   3: suminf.    0.54744 (9) obj. -69.5284 iterations 12
Cbc0038I Solution found of -58.2782
Cbc0038I Rounding solution of -73.1733 is better than previous of -58.2782

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -73.1733 to -127.867 (0.03 seconds)
Cbc0038I Round again with cutoff of -132.89
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.49334 (42) obj. -132.89 iterations 8
Cbc0038I Pass   5: suminf.    3.45421 (34) obj. -132.89 iterations 2
Cbc0038I Pass   6: suminf.    2.05954 (21) obj. -132.89 iterations 28
Cbc0038I Pass   7: suminf.    0.56998 (4) obj. -132.89 iterations 27
Cbc0038I Pass   8: suminf.    0.48404 (2) obj. -133.341 iterations 6
Cbc0038I Pass   9: suminf.    0.41920 (1) obj. -132.89 iterations 9
Cbc0038I Pass  10: suminf.    1.23083 (8) obj. -132.89 iterations 12
Cbc0038I Pass  11: suminf.    1.13140 (8) obj. -132.89 iterations 7
Cbc0038I Pass  12: suminf.    0.34624 (1) obj. -132.89 iterations 18
Cbc0038I Pass  13: suminf.    0.34624 (1) obj. -132.89 iterations 0
Cbc0038I Pass  14: suminf.    0.48404 (2) obj. -133.341 iterations 12
Cbc0038I Pass  15: suminf.    0.41920 (1) obj. -132.89 iterations 9
Cbc0038I Pass  16: suminf.    3.28981 (17) obj. -132.89 iterations 41
Cbc0038I Pass  17: suminf.    2.95130 (18) obj. -132.89 iterations 13
Cbc0038I Pass  18: suminf.    0.77335 (2) obj. -132.89 iterations 30
Cbc0038I Pass  19: suminf.    0.77335 (2) obj. -132.89 iterations 0
Cbc0038I Pass  20: suminf.    0.60706 (3) obj. -132.89 iterations 3
Cbc0038I Pass  21: suminf.    0.34624 (1) obj. -132.89 iterations 11
Cbc0038I Pass  22: suminf.    0.34624 (1) obj. -132.89 iterations 0
Cbc0038I Pass  23: suminf.    0.48404 (2) obj. -133.341 iterations 12
Cbc0038I Pass  24: suminf.    0.41920 (1) obj. -132.89 iterations 9
Cbc0038I Pass  25: suminf.    1.25372 (7) obj. -132.89 iterations 18
Cbc0038I Pass  26: suminf.    1.16263 (7) obj. -132.89 iterations 5
Cbc0038I Pass  27: suminf.    0.61567 (2) obj. -132.89 iterations 23
Cbc0038I Pass  28: suminf.    0.61567 (2) obj. -132.89 iterations 0
Cbc0038I Pass  29: suminf.    0.65685 (3) obj. -134.823 iterations 4
Cbc0038I Pass  30: suminf.    0.50160 (2) obj. -132.89 iterations 9
Cbc0038I Pass  31: suminf.    0.73277 (5) obj. -132.89 iterations 15
Cbc0038I Pass  32: suminf.    0.39964 (2) obj. -132.89 iterations 11
Cbc0038I Pass  33: suminf.    0.39964 (2) obj. -132.89 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -127.867 - took 0.02 seconds
Cbc0012I Integer solution of -127.8669 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 22 added rows had average density of 3.4545455
Cbc0013I At root node, 31 cuts changed objective from -178.09889 to -127.8669 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 235 row cuts average 2.0 elements, 37 column cuts (37 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 54 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0001I Search completed - best objective -127.8669, took 109 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-62) rows, 54 (-24) columns and 287 (-166) elements
Clp1000I sum of infeasibilities 4.56208e-05 - average 4.90546e-07, 18 fixed columns
Coin0506I Presolve 36 (-57) rows, 33 (-21) columns and 131 (-156) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 144.4468
Clp0000I Optimal - objective value 144.4468
Coin0511I After Postsolve, objective 144.4468, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 144.4468
Clp0000I Optimal - objective value 144.4468
Clp0000I Optimal - objective value 144.4468
Coin0511I After Postsolve, objective 144.4468, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.4467987 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 54 columns (53 integer (53 of which binary)) and 287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.546%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.04454
Cbc0038I Pass   1: suminf.    0.60638 (2) obj. -129.889 iterations 10
Cbc0038I Pass   2: suminf.    0.35714 (1) obj. -130.27 iterations 1
Cbc0038I Solution found of -113.214
Cbc0038I Relaxing continuous gives -113.214
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 54 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -113.214 to -125.238 (0.01 seconds)
Cbc0038I Round again with cutoff of -127.159
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.60638 (2) obj. -129.889 iterations 0
Cbc0038I Pass   4: suminf.    0.35714 (1) obj. -130.27 iterations 3
Cbc0038I Pass   5: suminf.    0.47441 (1) obj. -127.159 iterations 2
Cbc0038I Pass   6: suminf.    0.77084 (5) obj. -127.159 iterations 8
Cbc0038I Pass   7: suminf.    0.66730 (4) obj. -127.159 iterations 4
Cbc0038I Pass   8: suminf.    0.98655 (2) obj. -127.159 iterations 7
Cbc0038I Pass   9: suminf.    1.04219 (5) obj. -127.159 iterations 11
Cbc0038I Pass  10: suminf.    0.91490 (3) obj. -127.159 iterations 7
Cbc0038I Pass  11: suminf.    1.37560 (4) obj. -127.159 iterations 4
Cbc0038I Pass  12: suminf.    2.16174 (7) obj. -127.159 iterations 5
Cbc0038I Pass  13: suminf.    1.71064 (8) obj. -127.159 iterations 6
Cbc0038I Pass  14: suminf.    1.77518 (7) obj. -127.159 iterations 11
Cbc0038I Pass  15: suminf.    0.69973 (4) obj. -127.159 iterations 11
Cbc0038I Pass  16: suminf.    0.08031 (2) obj. -127.159 iterations 2
Cbc0038I Pass  17: suminf.    1.04586 (3) obj. -127.159 iterations 5
Cbc0038I Pass  18: suminf.    0.25260 (2) obj. -127.159 iterations 3
Cbc0038I Pass  19: suminf.    2.33037 (7) obj. -127.159 iterations 16
Cbc0038I Pass  20: suminf.    1.08519 (3) obj. -127.159 iterations 5
Cbc0038I Pass  21: suminf.    0.42857 (1) obj. -127.159 iterations 3
Cbc0038I Pass  22: suminf.    0.45690 (1) obj. -127.159 iterations 2
Cbc0038I Pass  23: suminf.    2.48059 (10) obj. -127.159 iterations 19
Cbc0038I Pass  24: suminf.    0.98050 (9) obj. -127.159 iterations 10
Cbc0038I Pass  25: suminf.    0.46610 (5) obj. -127.159 iterations 4
Cbc0038I Pass  26: suminf.    1.26968 (6) obj. -127.159 iterations 5
Cbc0038I Pass  27: suminf.    1.22777 (8) obj. -127.159 iterations 2
Cbc0038I Pass  28: suminf.    1.77903 (5) obj. -127.159 iterations 12
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. -127.867 iterations 10
Cbc0038I Solution found of -127.867
Cbc0038I Relaxing continuous gives -127.867
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 54 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -131.183
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.66654 (4) obj. -131.183 iterations 1
Cbc0038I Pass  31: suminf.    0.36860 (3) obj. -131.183 iterations 3
Cbc0038I Pass  32: suminf.    0.81078 (2) obj. -131.183 iterations 2
Cbc0038I Pass  33: suminf.    1.32048 (5) obj. -131.183 iterations 8
Cbc0038I Pass  34: suminf.    0.37876 (2) obj. -131.183 iterations 7
Cbc0038I Pass  35: suminf.    0.91043 (4) obj. -131.183 iterations 10
Cbc0038I Pass  36: suminf.    0.60418 (3) obj. -131.183 iterations 6
Cbc0038I Pass  37: suminf.    0.37530 (2) obj. -131.183 iterations 8
Cbc0038I Pass  38: suminf.    0.71886 (2) obj. -131.183 iterations 6
Cbc0038I Pass  39: suminf.    0.44094 (3) obj. -131.183 iterations 3
Cbc0038I Pass  40: suminf.    0.89039 (2) obj. -131.183 iterations 2
Cbc0038I Pass  41: suminf.    1.14108 (4) obj. -131.183 iterations 4
Cbc0038I Pass  42: suminf.    0.68334 (4) obj. -131.183 iterations 5
Cbc0038I Pass  43: suminf.    0.30539 (2) obj. -131.183 iterations 7
Cbc0038I Pass  44: suminf.    1.16954 (3) obj. -131.183 iterations 5
Cbc0038I Pass  45: suminf.    0.47059 (3) obj. -131.183 iterations 2
Cbc0038I Pass  46: suminf.    2.04896 (6) obj. -131.183 iterations 12
Cbc0038I Pass  47: suminf.    2.04822 (5) obj. -131.183 iterations 4
Cbc0038I Pass  48: suminf.    0.62997 (2) obj. -131.183 iterations 4
Cbc0038I Pass  49: suminf.    0.44094 (3) obj. -131.183 iterations 2
Cbc0038I Pass  50: suminf.    0.89039 (2) obj. -131.183 iterations 2
Cbc0038I Pass  51: suminf.    2.45636 (6) obj. -131.183 iterations 10
Cbc0038I Pass  52: suminf.    0.89039 (2) obj. -131.183 iterations 9
Cbc0038I Pass  53: suminf.    1.60080 (5) obj. -131.183 iterations 6
Cbc0038I Pass  54: suminf.    1.43983 (6) obj. -131.183 iterations 3
Cbc0038I Pass  55: suminf.    0.53447 (3) obj. -131.183 iterations 10
Cbc0038I Pass  56: suminf.    0.53447 (3) obj. -131.183 iterations 0
Cbc0038I Pass  57: suminf.    0.63620 (4) obj. -131.183 iterations 3
Cbc0038I Pass  58: suminf.    0.60388 (4) obj. -131.183 iterations 5
Cbc0038I Pass  59: suminf.    0.53923 (3) obj. -131.183 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 54 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -127.867 - took 0.02 seconds
Cbc0012I Integer solution of -127.8669 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 93 rows 54 columns, reduced to 8 rows 9 columns
Cbc0031I 8 added rows had average density of 16.375
Cbc0013I At root node, 8 cuts changed objective from -144.4468 to -130.32156 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 3.2 elements, 13 column cuts (13 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 65 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -127.8669, took 127 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 14 times (79 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-72) rows, 96 (-57) columns and 1329 (-1975) elements
Clp1000I sum of infeasibilities 3.11367e-07 - average 3.75141e-09, 28 fixed columns
Coin0506I Presolve 59 (-24) rows, 67 (-29) columns and 543 (-786) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 5.4028463 - largest nonzero change 2.0537761e-05 ( 0.0010393299%) - largest zero change 2.6900221e-05
Clp0000I Optimal - objective value 188.04008
Clp0000I Optimal - objective value 188.04008
Coin0511I After Postsolve, objective 188.04008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 188.04008
Clp0000I Optimal - objective value 188.04008
Clp0000I Optimal - objective value 188.04008
Coin0511I After Postsolve, objective 188.04008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 188.040078 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 97 columns (97 integer (97 of which binary)) and 1333 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.561%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.95689
Cbc0038I Pass   1: suminf.    1.78882 (21) obj. -84.7099 iterations 16
Cbc0038I Pass   2: suminf.    1.78882 (21) obj. -84.7099 iterations 1
Cbc0038I Pass   3: suminf.    0.54744 (9) obj. -69.5284 iterations 12
Cbc0038I Solution found of -58.2782
Cbc0038I Rounding solution of -73.1733 is better than previous of -58.2782

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -73.1733 to -127.867 (0.02 seconds)
Cbc0038I Round again with cutoff of -132.89
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.49334 (42) obj. -132.89 iterations 8
Cbc0038I Pass   5: suminf.    3.45421 (34) obj. -132.89 iterations 2
Cbc0038I Pass   6: suminf.    2.05954 (21) obj. -132.89 iterations 28
Cbc0038I Pass   7: suminf.    0.56998 (4) obj. -132.89 iterations 27
Cbc0038I Pass   8: suminf.    0.48404 (2) obj. -133.341 iterations 6
Cbc0038I Pass   9: suminf.    0.41920 (1) obj. -132.89 iterations 9
Cbc0038I Pass  10: suminf.    1.23083 (8) obj. -132.89 iterations 12
Cbc0038I Pass  11: suminf.    1.13140 (8) obj. -132.89 iterations 7
Cbc0038I Pass  12: suminf.    0.34624 (1) obj. -132.89 iterations 18
Cbc0038I Pass  13: suminf.    0.34624 (1) obj. -132.89 iterations 0
Cbc0038I Pass  14: suminf.    0.48404 (2) obj. -133.341 iterations 12
Cbc0038I Pass  15: suminf.    0.41920 (1) obj. -132.89 iterations 9
Cbc0038I Pass  16: suminf.    3.28981 (17) obj. -132.89 iterations 41
Cbc0038I Pass  17: suminf.    2.95130 (18) obj. -132.89 iterations 13
Cbc0038I Pass  18: suminf.    0.77335 (2) obj. -132.89 iterations 30
Cbc0038I Pass  19: suminf.    0.77335 (2) obj. -132.89 iterations 0
Cbc0038I Pass  20: suminf.    0.60706 (3) obj. -132.89 iterations 3
Cbc0038I Pass  21: suminf.    0.34624 (1) obj. -132.89 iterations 11
Cbc0038I Pass  22: suminf.    0.34624 (1) obj. -132.89 iterations 0
Cbc0038I Pass  23: suminf.    0.48404 (2) obj. -133.341 iterations 12
Cbc0038I Pass  24: suminf.    0.41920 (1) obj. -132.89 iterations 9
Cbc0038I Pass  25: suminf.    1.25372 (7) obj. -132.89 iterations 18
Cbc0038I Pass  26: suminf.    1.16263 (7) obj. -132.89 iterations 5
Cbc0038I Pass  27: suminf.    0.61567 (2) obj. -132.89 iterations 23
Cbc0038I Pass  28: suminf.    0.61567 (2) obj. -132.89 iterations 0
Cbc0038I Pass  29: suminf.    0.65685 (3) obj. -134.823 iterations 4
Cbc0038I Pass  30: suminf.    0.50160 (2) obj. -132.89 iterations 9
Cbc0038I Pass  31: suminf.    0.73277 (5) obj. -132.89 iterations 15
Cbc0038I Pass  32: suminf.    0.39964 (2) obj. -132.89 iterations 11
Cbc0038I Pass  33: suminf.    0.39964 (2) obj. -132.89 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -127.867 - took 0.02 seconds
Cbc0012I Integer solution of -127.8669 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 22 added rows had average density of 3.4545455
Cbc0013I At root node, 31 cuts changed objective from -178.09889 to -127.8669 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 235 row cuts average 2.0 elements, 37 column cuts (37 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 54 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0001I Search completed - best objective -127.8669, took 109 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.17

