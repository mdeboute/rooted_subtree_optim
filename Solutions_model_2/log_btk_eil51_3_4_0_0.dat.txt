Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 51 (-2) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 3.99508e-05 - average 4.64544e-07, 0 fixed columns
Coin0506I Presolve 86 (0) rows, 51 (0) columns and 266 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 45.559355
Clp0000I Optimal - objective value 45.559355
Coin0511I After Postsolve, objective 45.559355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.559355
Clp0000I Optimal - objective value 45.559355
Clp0000I Optimal - objective value 45.559355
Coin0511I After Postsolve, objective 45.559355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.55935487 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 51 columns (50 integer (50 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.82751
Cbc0038I Solution found of -1.2701
Cbc0038I Relaxing continuous gives -10.7984
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -10.7984 to -17.1521 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.9929
Cbc0038I Pass   1: suminf.    1.95449 (29) obj. -19.9929 iterations 28
Cbc0038I Pass   2: suminf.    2.65096 (8) obj. -19.9929 iterations 28
Cbc0038I Pass   3: suminf.    2.65096 (8) obj. -19.9929 iterations 1
Cbc0038I Pass   4: suminf.    2.37286 (8) obj. -19.9929 iterations 17
Cbc0038I Pass   5: suminf.    2.37286 (8) obj. -19.9929 iterations 0
Cbc0038I Pass   6: suminf.    2.48309 (7) obj. -19.9929 iterations 8
Cbc0038I Pass   7: suminf.    2.00668 (6) obj. -19.9929 iterations 3
Cbc0038I Pass   8: suminf.    2.37286 (8) obj. -19.9929 iterations 8
Cbc0038I Pass   9: suminf.    2.19556 (8) obj. -19.9929 iterations 11
Cbc0038I Pass  10: suminf.    1.58911 (6) obj. -19.9929 iterations 6
Cbc0038I Pass  11: suminf.    2.30020 (8) obj. -19.9929 iterations 10
Cbc0038I Pass  12: suminf.    2.65293 (7) obj. -19.9929 iterations 8
Cbc0038I Pass  13: suminf.    1.99177 (6) obj. -19.9929 iterations 3
Cbc0038I Pass  14: suminf.    2.30020 (8) obj. -19.9929 iterations 7
Cbc0038I Pass  15: suminf.    2.06966 (8) obj. -19.9929 iterations 13
Cbc0038I Pass  16: suminf.    1.85606 (6) obj. -19.9929 iterations 8
Cbc0038I Pass  17: suminf.    1.83707 (6) obj. -19.9929 iterations 3
Cbc0038I Pass  18: suminf.    1.97097 (6) obj. -19.9929 iterations 9
Cbc0038I Pass  19: suminf.    1.36293 (5) obj. -19.9929 iterations 2
Cbc0038I Pass  20: suminf.    1.96204 (5) obj. -19.9929 iterations 4
Cbc0038I Pass  21: suminf.    1.96204 (5) obj. -19.9929 iterations 0
Cbc0038I Pass  22: suminf.    1.38080 (5) obj. -19.9929 iterations 5
Cbc0038I Pass  23: suminf.    1.99181 (11) obj. -19.9929 iterations 14
Cbc0038I Pass  24: suminf.    1.36858 (6) obj. -19.9929 iterations 9
Cbc0038I Pass  25: suminf.    1.25354 (5) obj. -19.9929 iterations 8
Cbc0038I Pass  26: suminf.    1.25354 (5) obj. -19.9929 iterations 0
Cbc0038I Pass  27: suminf.    1.72408 (5) obj. -19.9929 iterations 6
Cbc0038I Pass  28: suminf.    1.72408 (5) obj. -19.9929 iterations 1
Cbc0038I Pass  29: suminf.    1.25354 (5) obj. -19.9929 iterations 7
Cbc0038I Pass  30: suminf.    1.69156 (7) obj. -19.9929 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 72 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.1521 to -18.7152 (0.07 seconds)
Cbc0038I Round again with cutoff of -25.1062
Cbc0038I Pass  30: suminf.    3.04144 (29) obj. -25.1062 iterations 0
Cbc0038I Pass  31: suminf.    3.63005 (10) obj. -25.1062 iterations 40
Cbc0038I Pass  32: suminf.    3.63005 (10) obj. -25.1062 iterations 1
Cbc0038I Pass  33: suminf.    3.28453 (10) obj. -25.1062 iterations 19
Cbc0038I Pass  34: suminf.    3.28453 (10) obj. -25.1062 iterations 0
Cbc0038I Pass  35: suminf.    3.86377 (9) obj. -25.1062 iterations 10
Cbc0038I Pass  36: suminf.    3.38249 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  37: suminf.    3.38249 (10) obj. -25.1062 iterations 0
Cbc0038I Pass  38: suminf.    3.86921 (11) obj. -25.1062 iterations 7
Cbc0038I Pass  39: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I Pass  40: suminf.    3.00118 (10) obj. -25.1062 iterations 2
Cbc0038I Pass  41: suminf.    3.62308 (10) obj. -25.1062 iterations 7
Cbc0038I Pass  42: suminf.    3.52239 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  43: suminf.    3.62727 (11) obj. -25.1062 iterations 10
Cbc0038I Pass  44: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I Pass  45: suminf.    3.00118 (10) obj. -25.1062 iterations 2
Cbc0038I Pass  46: suminf.    3.62308 (10) obj. -25.1062 iterations 7
Cbc0038I Pass  47: suminf.    3.52239 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  48: suminf.    3.62727 (11) obj. -25.1062 iterations 10
Cbc0038I Pass  49: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I Pass  50: suminf.    3.00118 (10) obj. -25.1062 iterations 2
Cbc0038I Pass  51: suminf.    3.62308 (10) obj. -25.1062 iterations 7
Cbc0038I Pass  52: suminf.    3.52239 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  53: suminf.    3.62727 (11) obj. -25.1062 iterations 10
Cbc0038I Pass  54: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I Pass  55: suminf.    3.00118 (10) obj. -25.1062 iterations 2
Cbc0038I Pass  56: suminf.    3.62308 (10) obj. -25.1062 iterations 7
Cbc0038I Pass  57: suminf.    3.52239 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  58: suminf.    3.62727 (11) obj. -25.1062 iterations 10
Cbc0038I Pass  59: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -18.7152 - took 0.12 seconds
Cbc0012I Integer solution of -18.715181 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 30 added rows had average density of 38.366667
Cbc0013I At root node, 30 cuts changed objective from -45.559355 to -33.368459 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9745 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2059 row cuts average 50.6 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 12 nodes, 9 on tree, -18.715181 best solution, best possible -33.368459 (0.69 seconds)
Cbc0001I Search completed - best objective -18.715181218, took 6611 iterations and 38 nodes (0.73 seconds)
Cbc0032I Strong branching done 552 times (11221 iterations), fathomed 2 nodes and fixed 9 variables
Cbc0035I Maximum depth 18, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.75   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-35) rows, 83 (-19) columns and 989 (-589) elements
Clp1000I sum of infeasibilities 7.90473e-08 - average 1.14561e-09, 6 fixed columns
Coin0506I Presolve 66 (-3) rows, 77 (-6) columns and 886 (-103) elements
Clp0006I 0  Obj 39.685238 Dual inf 2.4956407 (77)
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 4.3444854 - largest nonzero change 1.9843458e-05 ( 0.00089285843%) - largest zero change 2.9119939e-05
Clp0000I Optimal - objective value 51.108472
Clp0000I Optimal - objective value 51.108472
Coin0511I After Postsolve, objective 51.108472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.108472
Clp0000I Optimal - objective value 51.108472
Clp0000I Optimal - objective value 51.108472
Clp0000I Optimal - objective value 51.108472
Coin0511I After Postsolve, objective 51.108472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.10847224 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 83 columns (83 integer (83 of which binary)) and 991 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.544%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.02017
Cbc0038I Pass   1: suminf.    2.76288 (21) obj. -43.792 iterations 21
Cbc0038I Pass   2: suminf.    1.98975 (20) obj. -41.4037 iterations 2
Cbc0038I Solution found of -3.60658
Cbc0038I Rounding solution of -5.34978 is better than previous of -3.60658

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 83 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -5.34978 to -6.84761 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.95
Cbc0038I Pass   3: suminf.    2.76288 (21) obj. -43.792 iterations 0
Cbc0038I Pass   4: suminf.    1.98975 (20) obj. -41.4037 iterations 4
Cbc0038I Pass   5: suminf.    0.43512 (1) obj. -10.95 iterations 20
Cbc0038I Pass   6: suminf.    0.16327 (1) obj. -14.4841 iterations 1
Cbc0038I Pass   7: suminf.    2.38259 (9) obj. -19.4651 iterations 15
Cbc0038I Pass   8: suminf.    0.51697 (5) obj. -11.1852 iterations 7
Cbc0038I Pass   9: suminf.    0.52205 (2) obj. -10.95 iterations 12
Cbc0038I Pass  10: suminf.    0.35165 (2) obj. -12.3821 iterations 2
Cbc0038I Pass  11: suminf.    0.49532 (6) obj. -11.6104 iterations 32
Cbc0038I Pass  12: suminf.    0.49532 (6) obj. -11.6104 iterations 0
Cbc0038I Pass  13: suminf.    0.49097 (2) obj. -10.95 iterations 23
Cbc0038I Pass  14: suminf.    0.28231 (2) obj. -11.9933 iterations 7
Cbc0038I Pass  15: suminf.    0.49097 (2) obj. -10.95 iterations 7
Cbc0038I Pass  16: suminf.    2.89092 (17) obj. -10.95 iterations 34
Cbc0038I Pass  17: suminf.    0.84325 (11) obj. -10.95 iterations 13
Cbc0038I Pass  18: suminf.    0.84325 (11) obj. -10.95 iterations 0
Cbc0038I Pass  19: suminf.    1.16714 (6) obj. -10.95 iterations 21
Cbc0038I Pass  20: suminf.    0.89689 (5) obj. -10.95 iterations 7
Cbc0038I Pass  21: suminf.    0.74332 (4) obj. -10.95 iterations 2
Cbc0038I Pass  22: suminf.    0.65209 (3) obj. -10.95 iterations 3
Cbc0038I Pass  23: suminf.    0.65209 (3) obj. -10.95 iterations 2
Cbc0038I Pass  24: suminf.    0.52527 (3) obj. -10.95 iterations 6
Cbc0038I Pass  25: suminf.    0.32653 (2) obj. -12.7539 iterations 3
Cbc0038I Pass  26: suminf.    0.65209 (3) obj. -10.95 iterations 3
Cbc0038I Pass  27: suminf.    0.94694 (7) obj. -10.95 iterations 16
Cbc0038I Pass  28: suminf.    0.94694 (7) obj. -10.95 iterations 0
Cbc0038I Pass  29: suminf.    0.34837 (3) obj. -10.95 iterations 12
Cbc0038I Pass  30: suminf.    0.34837 (3) obj. -10.95 iterations 0
Cbc0038I Pass  31: suminf.    0.90830 (3) obj. -10.95 iterations 5
Cbc0038I Pass  32: suminf.    0.49945 (2) obj. -10.95 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 83 columns, reduced to 38 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -6.84761 to -15.3403 (0.08 seconds)
Cbc0038I Round again with cutoff of -21.8465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.76288 (21) obj. -43.792 iterations 0
Cbc0038I Pass  33: suminf.    1.98975 (20) obj. -41.4037 iterations 5
Cbc0038I Pass  34: suminf.    0.74630 (7) obj. -21.8465 iterations 16
Cbc0038I Pass  35: suminf.    0.74630 (7) obj. -21.8465 iterations 0
Cbc0038I Pass  36: suminf.    0.74672 (3) obj. -21.8465 iterations 17
Cbc0038I Pass  37: suminf.    0.40218 (4) obj. -21.8465 iterations 10
Cbc0038I Pass  38: suminf.    0.94082 (3) obj. -21.8465 iterations 8
Cbc0038I Pass  39: suminf.    0.71795 (3) obj. -22.9609 iterations 1
Cbc0038I Pass  40: suminf.    1.00024 (3) obj. -21.8465 iterations 8
Cbc0038I Pass  41: suminf.    0.77879 (3) obj. -22.9538 iterations 4
Cbc0038I Pass  42: suminf.    2.30295 (15) obj. -21.8465 iterations 20
Cbc0038I Pass  43: suminf.    1.13462 (7) obj. -21.8465 iterations 6
Cbc0038I Pass  44: suminf.    0.65643 (5) obj. -21.8465 iterations 8
Cbc0038I Pass  45: suminf.    0.65643 (5) obj. -21.8465 iterations 0
Cbc0038I Pass  46: suminf.    0.50388 (3) obj. -21.8465 iterations 5
Cbc0038I Pass  47: suminf.    0.49738 (3) obj. -21.879 iterations 1
Cbc0038I Pass  48: suminf.    0.58559 (3) obj. -21.8465 iterations 4
Cbc0038I Pass  49: suminf.    0.58105 (3) obj. -21.8692 iterations 2
Cbc0038I Pass  50: suminf.    1.04377 (6) obj. -21.8465 iterations 19
Cbc0038I Pass  51: suminf.    0.84132 (5) obj. -21.8465 iterations 2
Cbc0038I Pass  52: suminf.    0.90720 (4) obj. -21.8465 iterations 6
Cbc0038I Pass  53: suminf.    0.73872 (4) obj. -21.8465 iterations 2
Cbc0038I Pass  54: suminf.    1.07607 (8) obj. -21.9703 iterations 13
Cbc0038I Pass  55: suminf.    1.07607 (8) obj. -21.9703 iterations 1
Cbc0038I Pass  56: suminf.    1.04445 (6) obj. -21.8465 iterations 10
Cbc0038I Pass  57: suminf.    0.96350 (6) obj. -21.8465 iterations 4
Cbc0038I Pass  58: suminf.    1.06022 (6) obj. -21.8465 iterations 2
Cbc0038I Pass  59: suminf.    3.73297 (16) obj. -21.8465 iterations 21
Cbc0038I Pass  60: suminf.    1.64169 (12) obj. -21.8465 iterations 8
Cbc0038I Pass  61: suminf.    1.19040 (11) obj. -22.703 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 83 columns, reduced to 38 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -15.3403 to -16.6654 (0.10 seconds)
Cbc0038I Round again with cutoff of -29.6539
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.76288 (21) obj. -43.792 iterations 0
Cbc0038I Pass  62: suminf.    1.98975 (20) obj. -41.4037 iterations 5
Cbc0038I Pass  63: suminf.    1.56032 (8) obj. -29.6539 iterations 33
Cbc0038I Pass  64: suminf.    1.56032 (8) obj. -29.6539 iterations 1
Cbc0038I Pass  65: suminf.    0.99818 (8) obj. -29.6539 iterations 12
Cbc0038I Pass  66: suminf.    0.99818 (8) obj. -29.6539 iterations 0
Cbc0038I Pass  67: suminf.    1.30519 (7) obj. -29.6539 iterations 7
Cbc0038I Pass  68: suminf.    0.96048 (8) obj. -29.6539 iterations 9
Cbc0038I Pass  69: suminf.    1.14804 (7) obj. -29.6539 iterations 9
Cbc0038I Pass  70: suminf.    1.14804 (7) obj. -29.6539 iterations 2
Cbc0038I Pass  71: suminf.    1.51958 (6) obj. -29.6539 iterations 17
Cbc0038I Pass  72: suminf.    1.37233 (8) obj. -29.6539 iterations 6
Cbc0038I Pass  73: suminf.    1.26783 (8) obj. -29.6539 iterations 6
Cbc0038I Pass  74: suminf.    1.26783 (8) obj. -29.6539 iterations 1
Cbc0038I Pass  75: suminf.    1.37233 (8) obj. -29.6539 iterations 6
Cbc0038I Pass  76: suminf.    2.33271 (15) obj. -29.6539 iterations 15
Cbc0038I Pass  77: suminf.    1.77787 (11) obj. -29.6539 iterations 5
Cbc0038I Pass  78: suminf.    1.77787 (11) obj. -29.6539 iterations 4
Cbc0038I Pass  79: suminf.    1.51207 (8) obj. -29.6539 iterations 17
Cbc0038I Pass  80: suminf.    1.50261 (8) obj. -29.6539 iterations 3
Cbc0038I Pass  81: suminf.    1.71820 (7) obj. -29.6539 iterations 16
Cbc0038I Pass  82: suminf.    1.27779 (6) obj. -29.6539 iterations 8
Cbc0038I Pass  83: suminf.    1.46057 (6) obj. -29.6539 iterations 9
Cbc0038I Pass  84: suminf.    1.14092 (6) obj. -29.6539 iterations 6
Cbc0038I Pass  85: suminf.    1.60482 (9) obj. -29.6539 iterations 19
Cbc0038I Pass  86: suminf.    1.60482 (9) obj. -29.6539 iterations 2
Cbc0038I Pass  87: suminf.    1.71820 (7) obj. -29.6539 iterations 16
Cbc0038I Pass  88: suminf.    1.14092 (6) obj. -29.6539 iterations 8
Cbc0038I Pass  89: suminf.    1.46057 (6) obj. -29.6539 iterations 5
Cbc0038I Pass  90: suminf.    1.32676 (9) obj. -29.6539 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -16.6654 - took 0.09 seconds
Cbc0012I Integer solution of -16.665371 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 69 rows 83 columns, reduced to 29 rows 34 columns
Cbc0031I 55 added rows had average density of 22.618182
Cbc0013I At root node, 55 cuts changed objective from -47.870992 to -23.003933 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13396 row cuts average 7.0 elements, 1 column cuts (1 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1450 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 83 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 68 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 796 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 286 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 134 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.629 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.665371 best solution, best possible -23.003933 (2.07 seconds)
Cbc0012I Integer solution of -18.715101 found by rounding after 4306 iterations and 1 nodes (2.07 seconds)
Cbc0001I Search completed - best objective -18.715101218, took 5023 iterations and 10 nodes (2.62 seconds)
Cbc0032I Strong branching done 284 times (6664 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.94   (Wallclock seconds):       2.64

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 51 (-2) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 3.99508e-05 - average 4.64544e-07, 0 fixed columns
Coin0506I Presolve 86 (0) rows, 51 (0) columns and 266 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 45.559355
Clp0000I Optimal - objective value 45.559355
Coin0511I After Postsolve, objective 45.559355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.559355
Clp0000I Optimal - objective value 45.559355
Clp0000I Optimal - objective value 45.559355
Coin0511I After Postsolve, objective 45.559355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.55935487 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 51 columns (50 integer (50 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.82751
Cbc0038I Solution found of -1.2701
Cbc0038I Relaxing continuous gives -10.7984
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -10.7984 to -17.1521 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.9929
Cbc0038I Pass   1: suminf.    1.95449 (29) obj. -19.9929 iterations 28
Cbc0038I Pass   2: suminf.    2.65096 (8) obj. -19.9929 iterations 28
Cbc0038I Pass   3: suminf.    2.65096 (8) obj. -19.9929 iterations 1
Cbc0038I Pass   4: suminf.    2.37286 (8) obj. -19.9929 iterations 17
Cbc0038I Pass   5: suminf.    2.37286 (8) obj. -19.9929 iterations 0
Cbc0038I Pass   6: suminf.    2.48309 (7) obj. -19.9929 iterations 8
Cbc0038I Pass   7: suminf.    2.00668 (6) obj. -19.9929 iterations 3
Cbc0038I Pass   8: suminf.    2.37286 (8) obj. -19.9929 iterations 8
Cbc0038I Pass   9: suminf.    2.19556 (8) obj. -19.9929 iterations 11
Cbc0038I Pass  10: suminf.    1.58911 (6) obj. -19.9929 iterations 6
Cbc0038I Pass  11: suminf.    2.30020 (8) obj. -19.9929 iterations 10
Cbc0038I Pass  12: suminf.    2.65293 (7) obj. -19.9929 iterations 8
Cbc0038I Pass  13: suminf.    1.99177 (6) obj. -19.9929 iterations 3
Cbc0038I Pass  14: suminf.    2.30020 (8) obj. -19.9929 iterations 7
Cbc0038I Pass  15: suminf.    2.06966 (8) obj. -19.9929 iterations 13
Cbc0038I Pass  16: suminf.    1.85606 (6) obj. -19.9929 iterations 8
Cbc0038I Pass  17: suminf.    1.83707 (6) obj. -19.9929 iterations 3
Cbc0038I Pass  18: suminf.    1.97097 (6) obj. -19.9929 iterations 9
Cbc0038I Pass  19: suminf.    1.36293 (5) obj. -19.9929 iterations 2
Cbc0038I Pass  20: suminf.    1.96204 (5) obj. -19.9929 iterations 4
Cbc0038I Pass  21: suminf.    1.96204 (5) obj. -19.9929 iterations 0
Cbc0038I Pass  22: suminf.    1.38080 (5) obj. -19.9929 iterations 5
Cbc0038I Pass  23: suminf.    1.99181 (11) obj. -19.9929 iterations 14
Cbc0038I Pass  24: suminf.    1.36858 (6) obj. -19.9929 iterations 9
Cbc0038I Pass  25: suminf.    1.25354 (5) obj. -19.9929 iterations 8
Cbc0038I Pass  26: suminf.    1.25354 (5) obj. -19.9929 iterations 0
Cbc0038I Pass  27: suminf.    1.72408 (5) obj. -19.9929 iterations 6
Cbc0038I Pass  28: suminf.    1.72408 (5) obj. -19.9929 iterations 1
Cbc0038I Pass  29: suminf.    1.25354 (5) obj. -19.9929 iterations 7
Cbc0038I Pass  30: suminf.    1.69156 (7) obj. -19.9929 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 72 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.1521 to -18.7152 (0.07 seconds)
Cbc0038I Round again with cutoff of -25.1062
Cbc0038I Pass  30: suminf.    3.04144 (29) obj. -25.1062 iterations 0
Cbc0038I Pass  31: suminf.    3.63005 (10) obj. -25.1062 iterations 40
Cbc0038I Pass  32: suminf.    3.63005 (10) obj. -25.1062 iterations 1
Cbc0038I Pass  33: suminf.    3.28453 (10) obj. -25.1062 iterations 19
Cbc0038I Pass  34: suminf.    3.28453 (10) obj. -25.1062 iterations 0
Cbc0038I Pass  35: suminf.    3.86377 (9) obj. -25.1062 iterations 10
Cbc0038I Pass  36: suminf.    3.38249 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  37: suminf.    3.38249 (10) obj. -25.1062 iterations 0
Cbc0038I Pass  38: suminf.    3.86921 (11) obj. -25.1062 iterations 7
Cbc0038I Pass  39: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I Pass  40: suminf.    3.00118 (10) obj. -25.1062 iterations 2
Cbc0038I Pass  41: suminf.    3.62308 (10) obj. -25.1062 iterations 7
Cbc0038I Pass  42: suminf.    3.52239 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  43: suminf.    3.62727 (11) obj. -25.1062 iterations 10
Cbc0038I Pass  44: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I Pass  45: suminf.    3.00118 (10) obj. -25.1062 iterations 2
Cbc0038I Pass  46: suminf.    3.62308 (10) obj. -25.1062 iterations 7
Cbc0038I Pass  47: suminf.    3.52239 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  48: suminf.    3.62727 (11) obj. -25.1062 iterations 10
Cbc0038I Pass  49: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I Pass  50: suminf.    3.00118 (10) obj. -25.1062 iterations 2
Cbc0038I Pass  51: suminf.    3.62308 (10) obj. -25.1062 iterations 7
Cbc0038I Pass  52: suminf.    3.52239 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  53: suminf.    3.62727 (11) obj. -25.1062 iterations 10
Cbc0038I Pass  54: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I Pass  55: suminf.    3.00118 (10) obj. -25.1062 iterations 2
Cbc0038I Pass  56: suminf.    3.62308 (10) obj. -25.1062 iterations 7
Cbc0038I Pass  57: suminf.    3.52239 (10) obj. -25.1062 iterations 5
Cbc0038I Pass  58: suminf.    3.62727 (11) obj. -25.1062 iterations 10
Cbc0038I Pass  59: suminf.    3.10205 (10) obj. -25.1062 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -18.7152 - took 0.09 seconds
Cbc0012I Integer solution of -18.715181 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 30 added rows had average density of 38.366667
Cbc0013I At root node, 30 cuts changed objective from -45.559355 to -33.368459 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9745 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2059 row cuts average 50.6 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -18.715181 best solution, best possible -33.368459 (0.69 seconds)
Cbc0001I Search completed - best objective -18.715181218, took 6611 iterations and 38 nodes (0.79 seconds)
Cbc0032I Strong branching done 552 times (11221 iterations), fathomed 2 nodes and fixed 9 variables
Cbc0035I Maximum depth 18, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 83 (-20) columns and 989 (-590) elements
Clp1000I sum of infeasibilities 7.90473e-08 - average 1.14561e-09, 6 fixed columns
Coin0506I Presolve 66 (-3) rows, 77 (-6) columns and 886 (-103) elements
Clp0006I 0  Obj 39.685238 Dual inf 2.4956407 (77)
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 4.3444854 - largest nonzero change 1.9843458e-05 ( 0.00089285843%) - largest zero change 2.9119939e-05
Clp0000I Optimal - objective value 51.108472
Clp0000I Optimal - objective value 51.108472
Coin0511I After Postsolve, objective 51.108472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.108472
Clp0000I Optimal - objective value 51.108472
Clp0000I Optimal - objective value 51.108472
Clp0000I Optimal - objective value 51.108472
Coin0511I After Postsolve, objective 51.108472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.10847224 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 83 columns (83 integer (83 of which binary)) and 991 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.544%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.02017
Cbc0038I Pass   1: suminf.    2.76288 (21) obj. -43.792 iterations 21
Cbc0038I Pass   2: suminf.    1.98975 (20) obj. -41.4037 iterations 2
Cbc0038I Solution found of -3.60658
Cbc0038I Rounding solution of -5.34978 is better than previous of -3.60658

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 83 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -5.34978 to -6.84761 (0.01 seconds)
Cbc0038I Round again with cutoff of -10.95
Cbc0038I Pass   3: suminf.    2.76288 (21) obj. -43.792 iterations 0
Cbc0038I Pass   4: suminf.    1.98975 (20) obj. -41.4037 iterations 4
Cbc0038I Pass   5: suminf.    0.43512 (1) obj. -10.95 iterations 20
Cbc0038I Pass   6: suminf.    0.16327 (1) obj. -14.4841 iterations 1
Cbc0038I Pass   7: suminf.    2.38259 (9) obj. -19.4651 iterations 15
Cbc0038I Pass   8: suminf.    0.51697 (5) obj. -11.1852 iterations 7
Cbc0038I Pass   9: suminf.    0.52205 (2) obj. -10.95 iterations 12
Cbc0038I Pass  10: suminf.    0.35165 (2) obj. -12.3821 iterations 2
Cbc0038I Pass  11: suminf.    0.49532 (6) obj. -11.6104 iterations 32
Cbc0038I Pass  12: suminf.    0.49532 (6) obj. -11.6104 iterations 0
Cbc0038I Pass  13: suminf.    0.49097 (2) obj. -10.95 iterations 23
Cbc0038I Pass  14: suminf.    0.28231 (2) obj. -11.9933 iterations 7
Cbc0038I Pass  15: suminf.    0.49097 (2) obj. -10.95 iterations 7
Cbc0038I Pass  16: suminf.    2.89092 (17) obj. -10.95 iterations 34
Cbc0038I Pass  17: suminf.    0.84325 (11) obj. -10.95 iterations 13
Cbc0038I Pass  18: suminf.    0.84325 (11) obj. -10.95 iterations 0
Cbc0038I Pass  19: suminf.    1.16714 (6) obj. -10.95 iterations 21
Cbc0038I Pass  20: suminf.    0.89689 (5) obj. -10.95 iterations 7
Cbc0038I Pass  21: suminf.    0.74332 (4) obj. -10.95 iterations 2
Cbc0038I Pass  22: suminf.    0.65209 (3) obj. -10.95 iterations 3
Cbc0038I Pass  23: suminf.    0.65209 (3) obj. -10.95 iterations 2
Cbc0038I Pass  24: suminf.    0.52527 (3) obj. -10.95 iterations 6
Cbc0038I Pass  25: suminf.    0.32653 (2) obj. -12.7539 iterations 3
Cbc0038I Pass  26: suminf.    0.65209 (3) obj. -10.95 iterations 3
Cbc0038I Pass  27: suminf.    0.94694 (7) obj. -10.95 iterations 16
Cbc0038I Pass  28: suminf.    0.94694 (7) obj. -10.95 iterations 0
Cbc0038I Pass  29: suminf.    0.34837 (3) obj. -10.95 iterations 12
Cbc0038I Pass  30: suminf.    0.34837 (3) obj. -10.95 iterations 0
Cbc0038I Pass  31: suminf.    0.90830 (3) obj. -10.95 iterations 5
Cbc0038I Pass  32: suminf.    0.49945 (2) obj. -10.95 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 83 columns, reduced to 38 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -6.84761 to -15.3403 (0.07 seconds)
Cbc0038I Round again with cutoff of -21.8465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.76288 (21) obj. -43.792 iterations 0
Cbc0038I Pass  33: suminf.    1.98975 (20) obj. -41.4037 iterations 5
Cbc0038I Pass  34: suminf.    0.74630 (7) obj. -21.8465 iterations 16
Cbc0038I Pass  35: suminf.    0.74630 (7) obj. -21.8465 iterations 0
Cbc0038I Pass  36: suminf.    0.74672 (3) obj. -21.8465 iterations 17
Cbc0038I Pass  37: suminf.    0.40218 (4) obj. -21.8465 iterations 10
Cbc0038I Pass  38: suminf.    0.94082 (3) obj. -21.8465 iterations 8
Cbc0038I Pass  39: suminf.    0.71795 (3) obj. -22.9609 iterations 1
Cbc0038I Pass  40: suminf.    1.00024 (3) obj. -21.8465 iterations 8
Cbc0038I Pass  41: suminf.    0.77879 (3) obj. -22.9538 iterations 4
Cbc0038I Pass  42: suminf.    2.30295 (15) obj. -21.8465 iterations 20
Cbc0038I Pass  43: suminf.    1.13462 (7) obj. -21.8465 iterations 6
Cbc0038I Pass  44: suminf.    0.65643 (5) obj. -21.8465 iterations 8
Cbc0038I Pass  45: suminf.    0.65643 (5) obj. -21.8465 iterations 0
Cbc0038I Pass  46: suminf.    0.50388 (3) obj. -21.8465 iterations 5
Cbc0038I Pass  47: suminf.    0.49738 (3) obj. -21.879 iterations 1
Cbc0038I Pass  48: suminf.    0.58559 (3) obj. -21.8465 iterations 4
Cbc0038I Pass  49: suminf.    0.58105 (3) obj. -21.8692 iterations 2
Cbc0038I Pass  50: suminf.    1.04377 (6) obj. -21.8465 iterations 19
Cbc0038I Pass  51: suminf.    0.84132 (5) obj. -21.8465 iterations 2
Cbc0038I Pass  52: suminf.    0.90720 (4) obj. -21.8465 iterations 6
Cbc0038I Pass  53: suminf.    0.73872 (4) obj. -21.8465 iterations 2
Cbc0038I Pass  54: suminf.    1.07607 (8) obj. -21.9703 iterations 13
Cbc0038I Pass  55: suminf.    1.07607 (8) obj. -21.9703 iterations 1
Cbc0038I Pass  56: suminf.    1.04445 (6) obj. -21.8465 iterations 10
Cbc0038I Pass  57: suminf.    0.96350 (6) obj. -21.8465 iterations 4
Cbc0038I Pass  58: suminf.    1.06022 (6) obj. -21.8465 iterations 2
Cbc0038I Pass  59: suminf.    3.73297 (16) obj. -21.8465 iterations 21
Cbc0038I Pass  60: suminf.    1.64169 (12) obj. -21.8465 iterations 8
Cbc0038I Pass  61: suminf.    1.19040 (11) obj. -22.703 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 83 columns, reduced to 38 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -15.3403 to -16.6654 (0.10 seconds)
Cbc0038I Round again with cutoff of -29.6539
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.76288 (21) obj. -43.792 iterations 0
Cbc0038I Pass  62: suminf.    1.98975 (20) obj. -41.4037 iterations 5
Cbc0038I Pass  63: suminf.    1.56032 (8) obj. -29.6539 iterations 33
Cbc0038I Pass  64: suminf.    1.56032 (8) obj. -29.6539 iterations 1
Cbc0038I Pass  65: suminf.    0.99818 (8) obj. -29.6539 iterations 12
Cbc0038I Pass  66: suminf.    0.99818 (8) obj. -29.6539 iterations 0
Cbc0038I Pass  67: suminf.    1.30519 (7) obj. -29.6539 iterations 7
Cbc0038I Pass  68: suminf.    0.96048 (8) obj. -29.6539 iterations 9
Cbc0038I Pass  69: suminf.    1.14804 (7) obj. -29.6539 iterations 9
Cbc0038I Pass  70: suminf.    1.14804 (7) obj. -29.6539 iterations 2
Cbc0038I Pass  71: suminf.    1.51958 (6) obj. -29.6539 iterations 17
Cbc0038I Pass  72: suminf.    1.37233 (8) obj. -29.6539 iterations 6
Cbc0038I Pass  73: suminf.    1.26783 (8) obj. -29.6539 iterations 6
Cbc0038I Pass  74: suminf.    1.26783 (8) obj. -29.6539 iterations 1
Cbc0038I Pass  75: suminf.    1.37233 (8) obj. -29.6539 iterations 6
Cbc0038I Pass  76: suminf.    2.33271 (15) obj. -29.6539 iterations 15
Cbc0038I Pass  77: suminf.    1.77787 (11) obj. -29.6539 iterations 5
Cbc0038I Pass  78: suminf.    1.77787 (11) obj. -29.6539 iterations 4
Cbc0038I Pass  79: suminf.    1.51207 (8) obj. -29.6539 iterations 17
Cbc0038I Pass  80: suminf.    1.50261 (8) obj. -29.6539 iterations 3
Cbc0038I Pass  81: suminf.    1.71820 (7) obj. -29.6539 iterations 16
Cbc0038I Pass  82: suminf.    1.27779 (6) obj. -29.6539 iterations 8
Cbc0038I Pass  83: suminf.    1.46057 (6) obj. -29.6539 iterations 9
Cbc0038I Pass  84: suminf.    1.14092 (6) obj. -29.6539 iterations 6
Cbc0038I Pass  85: suminf.    1.60482 (9) obj. -29.6539 iterations 19
Cbc0038I Pass  86: suminf.    1.60482 (9) obj. -29.6539 iterations 2
Cbc0038I Pass  87: suminf.    1.71820 (7) obj. -29.6539 iterations 16
Cbc0038I Pass  88: suminf.    1.14092 (6) obj. -29.6539 iterations 8
Cbc0038I Pass  89: suminf.    1.46057 (6) obj. -29.6539 iterations 5
Cbc0038I Pass  90: suminf.    1.32676 (9) obj. -29.6539 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -16.6654 - took 0.09 seconds
Cbc0012I Integer solution of -16.665371 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 69 rows 83 columns, reduced to 29 rows 34 columns
Cbc0031I 55 added rows had average density of 22.618182
Cbc0013I At root node, 55 cuts changed objective from -47.870992 to -23.003933 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13396 row cuts average 7.0 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1450 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 83 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 68 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 796 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 286 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 134 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.654 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.665371 best solution, best possible -23.003933 (2.17 seconds)
Cbc0012I Integer solution of -18.715101 found by rounding after 4306 iterations and 1 nodes (2.17 seconds)
Cbc0001I Search completed - best objective -18.715101218, took 5023 iterations and 10 nodes (2.75 seconds)
Cbc0032I Strong branching done 284 times (6664 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 9 variables fixed on reduced cost
Total time (CPU seconds):       2.02   (Wallclock seconds):       2.76

