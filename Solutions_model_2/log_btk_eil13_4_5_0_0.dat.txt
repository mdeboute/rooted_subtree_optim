Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 59 (-16) elements
Clp1000I sum of infeasibilities 2.88462e-06 - average 1.44231e-07, 1 fixed columns
Coin0506I Presolve 18 (-2) rows, 12 (-1) columns and 53 (-6) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 91.309955
Clp0000I Optimal - objective value 91.309955
Coin0511I After Postsolve, objective 91.309955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.309955
Clp0000I Optimal - objective value 91.309955
Clp0000I Optimal - objective value 91.309955
Coin0511I After Postsolve, objective 91.309955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.30995454 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 13 columns (12 integer (12 of which binary)) and 60 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.00847
Cbc0038I Solution found of -39.9
Cbc0038I Relaxing continuous gives -39.9
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -39.9 to -67.35 (0.00 seconds)
Cbc0038I Round again with cutoff of -69.7
Cbc0038I Pass   1: suminf.    0.99188 (3) obj. -69.7 iterations 5
Cbc0038I Pass   2: suminf.    0.82759 (2) obj. -78.6603 iterations 4
Cbc0038I Pass   3: suminf.    0.52990 (2) obj. -69.7 iterations 2
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -70.8875 iterations 3
Cbc0038I Pass   5: suminf.    0.52990 (2) obj. -69.7 iterations 3
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -70.8875 iterations 3
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -70.8875 iterations 0
Cbc0038I Pass   8: suminf.    0.58280 (3) obj. -69.7 iterations 4
Cbc0038I Pass   9: suminf.    0.16320 (2) obj. -69.7 iterations 2
Cbc0038I Pass  10: suminf.    1.15984 (4) obj. -69.7 iterations 4
Cbc0038I Pass  11: suminf.    0.63646 (4) obj. -69.7 iterations 2
Cbc0038I Pass  12: suminf.    0.85523 (3) obj. -69.7 iterations 2
Cbc0038I Pass  13: suminf.    0.63646 (4) obj. -69.7 iterations 2
Cbc0038I Pass  14: suminf.    0.73473 (2) obj. -69.7 iterations 3
Cbc0038I Pass  15: suminf.    0.82759 (2) obj. -78.6603 iterations 4
Cbc0038I Pass  16: suminf.    0.52990 (2) obj. -69.7 iterations 2
Cbc0038I Pass  17: suminf.    0.52990 (2) obj. -69.7 iterations 1
Cbc0038I Pass  18: suminf.    0.52990 (2) obj. -69.7 iterations 1
Cbc0038I Pass  19: suminf.    1.06996 (4) obj. -69.7 iterations 5
Cbc0038I Pass  20: suminf.    1.62036 (5) obj. -69.7 iterations 8
Cbc0038I Pass  21: suminf.    0.07807 (2) obj. -69.7 iterations 5
Cbc0038I Pass  22: suminf.    0.31332 (3) obj. -69.7 iterations 4
Cbc0038I Pass  23: suminf.    0.31332 (3) obj. -69.7 iterations 0
Cbc0038I Pass  24: suminf.    1.16110 (4) obj. -69.7 iterations 1
Cbc0038I Pass  25: suminf.    1.16110 (4) obj. -69.7 iterations 0
Cbc0038I Pass  26: suminf.    1.62036 (5) obj. -69.7 iterations 7
Cbc0038I Pass  27: suminf.    0.07807 (2) obj. -69.7 iterations 5
Cbc0038I Pass  28: suminf.    0.31332 (3) obj. -69.7 iterations 4
Cbc0038I Pass  29: suminf.    0.31332 (3) obj. -69.7 iterations 0
Cbc0038I Pass  30: suminf.    0.47195 (2) obj. -69.7 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -67.35 - took 0.01 seconds
Cbc0012I Integer solution of -67.35 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 13 columns, reduced to 12 rows 8 columns
Cbc0031I 5 added rows had average density of 5
Cbc0013I At root node, 16 cuts changed objective from -90.293088 to -67.35 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.9 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 19 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.34999999999999, took 16 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-8) rows, 24 (-2) columns and 125 (-28) elements
Clp1000I sum of infeasibilities 1.71918e-13 - average 8.5959e-15, 8 fixed columns
Coin0506I Presolve 16 (-4) rows, 16 (-8) columns and 58 (-67) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 2.3898441 - largest nonzero change 1.2329431e-05 ( 0.00078665127%) - largest zero change 1.896476e-05
Clp0000I Optimal - objective value 103.82065
Clp0000I Optimal - objective value 103.82065
Coin0511I After Postsolve, objective 103.82065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.82065
Clp0000I Optimal - objective value 103.82065
Clp0000I Optimal - objective value 103.82065
Coin0511I After Postsolve, objective 103.82065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.8206498 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 24 columns (24 integer (24 of which binary)) and 132 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.609%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.0156
Cbc0038I Solution found of -67.35
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 24 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -68.3
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.04158 (1) obj. -68.3 iterations 10
Cbc0038I Pass   2: suminf.    0.44444 (1) obj. -74.95 iterations 3
Cbc0038I Pass   3: suminf.    0.20219 (1) obj. -68.3 iterations 2
Cbc0038I Pass   4: suminf.    0.55278 (2) obj. -68.3 iterations 4
Cbc0038I Pass   5: suminf.    0.42077 (1) obj. -68.3 iterations 3
Cbc0038I Pass   6: suminf.    0.44444 (1) obj. -68.95 iterations 2
Cbc0038I Pass   7: suminf.    0.80944 (2) obj. -68.3 iterations 4
Cbc0038I Pass   8: suminf.    0.31148 (1) obj. -68.3 iterations 3
Cbc0038I Pass   9: suminf.    0.44444 (1) obj. -71.95 iterations 2
Cbc0038I Pass  10: suminf.    0.80944 (2) obj. -68.3 iterations 3
Cbc0038I Pass  11: suminf.    0.92302 (2) obj. -68.3 iterations 4
Cbc0038I Pass  12: suminf.    0.92302 (2) obj. -68.3 iterations 1
Cbc0038I Pass  13: suminf.    0.57724 (3) obj. -68.3 iterations 4
Cbc0038I Pass  14: suminf.    0.57724 (3) obj. -68.3 iterations 1
Cbc0038I Pass  15: suminf.    0.92987 (4) obj. -68.3 iterations 6
Cbc0038I Pass  16: suminf.    0.92987 (4) obj. -68.3 iterations 0
Cbc0038I Pass  17: suminf.    0.70899 (3) obj. -68.3 iterations 2
Cbc0038I Pass  18: suminf.    0.70899 (3) obj. -68.3 iterations 0
Cbc0038I Pass  19: suminf.    0.81971 (3) obj. -68.3 iterations 1
Cbc0038I Pass  20: suminf.    0.21663 (1) obj. -68.3 iterations 2
Cbc0038I Pass  21: suminf.    0.44444 (1) obj. -70.95 iterations 2
Cbc0038I Pass  22: suminf.    0.34791 (1) obj. -68.3 iterations 1
Cbc0038I Pass  23: suminf.    0.89062 (4) obj. -68.3 iterations 2
Cbc0038I Pass  24: suminf.    0.34791 (1) obj. -68.3 iterations 2
Cbc0038I Pass  25: suminf.    0.31148 (1) obj. -68.3 iterations 1
Cbc0038I Pass  26: suminf.    0.31148 (1) obj. -68.3 iterations 0
Cbc0038I Pass  27: suminf.    0.44444 (1) obj. -71.95 iterations 1
Cbc0038I Pass  28: suminf.    0.71518 (2) obj. -68.3 iterations 2
Cbc0038I Pass  29: suminf.    0.71518 (2) obj. -68.3 iterations 0
Cbc0038I Pass  30: suminf.    0.86773 (5) obj. -68.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 24 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -67.35 - took 0.00 seconds
Cbc0012I Integer solution of -67.35 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -76.151642 to -66.47605 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.34999999999999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 59 (-16) elements
Clp1000I sum of infeasibilities 2.88462e-06 - average 1.44231e-07, 1 fixed columns
Coin0506I Presolve 18 (-2) rows, 12 (-1) columns and 53 (-6) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 91.309955
Clp0000I Optimal - objective value 91.309955
Coin0511I After Postsolve, objective 91.309955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.309955
Clp0000I Optimal - objective value 91.309955
Clp0000I Optimal - objective value 91.309955
Coin0511I After Postsolve, objective 91.309955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.30995454 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 13 columns (12 integer (12 of which binary)) and 60 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.00847
Cbc0038I Solution found of -39.9
Cbc0038I Relaxing continuous gives -39.9
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -39.9 to -67.35 (0.00 seconds)
Cbc0038I Round again with cutoff of -69.7
Cbc0038I Pass   1: suminf.    0.99188 (3) obj. -69.7 iterations 5
Cbc0038I Pass   2: suminf.    0.82759 (2) obj. -78.6603 iterations 4
Cbc0038I Pass   3: suminf.    0.52990 (2) obj. -69.7 iterations 2
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -70.8875 iterations 3
Cbc0038I Pass   5: suminf.    0.52990 (2) obj. -69.7 iterations 3
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -70.8875 iterations 3
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -70.8875 iterations 0
Cbc0038I Pass   8: suminf.    0.58280 (3) obj. -69.7 iterations 4
Cbc0038I Pass   9: suminf.    0.16320 (2) obj. -69.7 iterations 2
Cbc0038I Pass  10: suminf.    1.15984 (4) obj. -69.7 iterations 4
Cbc0038I Pass  11: suminf.    0.63646 (4) obj. -69.7 iterations 2
Cbc0038I Pass  12: suminf.    0.85523 (3) obj. -69.7 iterations 2
Cbc0038I Pass  13: suminf.    0.63646 (4) obj. -69.7 iterations 2
Cbc0038I Pass  14: suminf.    0.73473 (2) obj. -69.7 iterations 3
Cbc0038I Pass  15: suminf.    0.82759 (2) obj. -78.6603 iterations 4
Cbc0038I Pass  16: suminf.    0.52990 (2) obj. -69.7 iterations 2
Cbc0038I Pass  17: suminf.    0.52990 (2) obj. -69.7 iterations 1
Cbc0038I Pass  18: suminf.    0.52990 (2) obj. -69.7 iterations 1
Cbc0038I Pass  19: suminf.    1.06996 (4) obj. -69.7 iterations 5
Cbc0038I Pass  20: suminf.    1.62036 (5) obj. -69.7 iterations 8
Cbc0038I Pass  21: suminf.    0.07807 (2) obj. -69.7 iterations 5
Cbc0038I Pass  22: suminf.    0.31332 (3) obj. -69.7 iterations 4
Cbc0038I Pass  23: suminf.    0.31332 (3) obj. -69.7 iterations 0
Cbc0038I Pass  24: suminf.    1.16110 (4) obj. -69.7 iterations 1
Cbc0038I Pass  25: suminf.    1.16110 (4) obj. -69.7 iterations 0
Cbc0038I Pass  26: suminf.    1.62036 (5) obj. -69.7 iterations 7
Cbc0038I Pass  27: suminf.    0.07807 (2) obj. -69.7 iterations 5
Cbc0038I Pass  28: suminf.    0.31332 (3) obj. -69.7 iterations 4
Cbc0038I Pass  29: suminf.    0.31332 (3) obj. -69.7 iterations 0
Cbc0038I Pass  30: suminf.    0.47195 (2) obj. -69.7 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -67.35 - took 0.01 seconds
Cbc0012I Integer solution of -67.35 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 13 columns, reduced to 12 rows 8 columns
Cbc0031I 5 added rows had average density of 5
Cbc0013I At root node, 16 cuts changed objective from -90.293088 to -67.35 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.9 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 19 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.34999999999999, took 16 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 24 (-3) columns and 125 (-29) elements
Clp1000I sum of infeasibilities 1.71918e-13 - average 8.5959e-15, 8 fixed columns
Coin0506I Presolve 16 (-4) rows, 16 (-8) columns and 58 (-67) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 2.3898441 - largest nonzero change 1.2329431e-05 ( 0.00078665127%) - largest zero change 1.896476e-05
Clp0000I Optimal - objective value 103.82065
Clp0000I Optimal - objective value 103.82065
Coin0511I After Postsolve, objective 103.82065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.82065
Clp0000I Optimal - objective value 103.82065
Clp0000I Optimal - objective value 103.82065
Coin0511I After Postsolve, objective 103.82065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.8206498 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 24 columns (24 integer (24 of which binary)) and 132 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.609%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.0156
Cbc0038I Solution found of -67.35
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 24 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -68.3
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.04158 (1) obj. -68.3 iterations 10
Cbc0038I Pass   2: suminf.    0.44444 (1) obj. -74.95 iterations 3
Cbc0038I Pass   3: suminf.    0.20219 (1) obj. -68.3 iterations 2
Cbc0038I Pass   4: suminf.    0.55278 (2) obj. -68.3 iterations 4
Cbc0038I Pass   5: suminf.    0.42077 (1) obj. -68.3 iterations 3
Cbc0038I Pass   6: suminf.    0.44444 (1) obj. -68.95 iterations 2
Cbc0038I Pass   7: suminf.    0.80944 (2) obj. -68.3 iterations 4
Cbc0038I Pass   8: suminf.    0.31148 (1) obj. -68.3 iterations 3
Cbc0038I Pass   9: suminf.    0.44444 (1) obj. -71.95 iterations 2
Cbc0038I Pass  10: suminf.    0.80944 (2) obj. -68.3 iterations 3
Cbc0038I Pass  11: suminf.    0.92302 (2) obj. -68.3 iterations 4
Cbc0038I Pass  12: suminf.    0.92302 (2) obj. -68.3 iterations 1
Cbc0038I Pass  13: suminf.    0.57724 (3) obj. -68.3 iterations 4
Cbc0038I Pass  14: suminf.    0.57724 (3) obj. -68.3 iterations 1
Cbc0038I Pass  15: suminf.    0.92987 (4) obj. -68.3 iterations 6
Cbc0038I Pass  16: suminf.    0.92987 (4) obj. -68.3 iterations 0
Cbc0038I Pass  17: suminf.    0.70899 (3) obj. -68.3 iterations 2
Cbc0038I Pass  18: suminf.    0.70899 (3) obj. -68.3 iterations 0
Cbc0038I Pass  19: suminf.    0.81971 (3) obj. -68.3 iterations 1
Cbc0038I Pass  20: suminf.    0.21663 (1) obj. -68.3 iterations 2
Cbc0038I Pass  21: suminf.    0.44444 (1) obj. -70.95 iterations 2
Cbc0038I Pass  22: suminf.    0.34791 (1) obj. -68.3 iterations 1
Cbc0038I Pass  23: suminf.    0.89062 (4) obj. -68.3 iterations 2
Cbc0038I Pass  24: suminf.    0.34791 (1) obj. -68.3 iterations 2
Cbc0038I Pass  25: suminf.    0.31148 (1) obj. -68.3 iterations 1
Cbc0038I Pass  26: suminf.    0.31148 (1) obj. -68.3 iterations 0
Cbc0038I Pass  27: suminf.    0.44444 (1) obj. -71.95 iterations 1
Cbc0038I Pass  28: suminf.    0.71518 (2) obj. -68.3 iterations 2
Cbc0038I Pass  29: suminf.    0.71518 (2) obj. -68.3 iterations 0
Cbc0038I Pass  30: suminf.    0.86773 (5) obj. -68.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 24 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -67.35 - took 0.00 seconds
Cbc0012I Integer solution of -67.35 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -76.151642 to -66.47605 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.34999999999999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

