Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 574 (-29) elements
Clp1000I sum of infeasibilities 0.000344717 - average 1.8143e-06, 17 fixed columns
Coin0506I Presolve 151 (-39) rows, 81 (-20) columns and 456 (-118) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 2.344423 - largest nonzero change 0 ( 0%) - largest zero change 1.8986656e-05
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Coin0511I After Postsolve, objective 40.063149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2391794 - largest nonzero change 0 ( 0%) - largest zero change 2.9075471e-05
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Coin0511I After Postsolve, objective 40.063149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.06314943 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 13.3217
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.79866 iterations 92
Cbc0038I Solution found of 6.79866
Cbc0038I Relaxing continuous gives 6.79866
Cbc0038I Rounding solution of -15.7979 is better than previous of 6.79866

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 102 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -15.7979 to -17.5482 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.7998
Cbc0038I Pass   2: suminf.    2.66053 (13) obj. -19.7998 iterations 25
Cbc0038I Pass   3: suminf.    2.66053 (13) obj. -19.7998 iterations 0
Cbc0038I Pass   4: suminf.    2.20120 (10) obj. -19.7998 iterations 22
Cbc0038I Pass   5: suminf.    2.08720 (9) obj. -19.7998 iterations 5
Cbc0038I Pass   6: suminf.    1.19049 (5) obj. -19.7998 iterations 12
Cbc0038I Pass   7: suminf.    0.96268 (4) obj. -19.7998 iterations 2
Cbc0038I Pass   8: suminf.    1.14310 (3) obj. -19.7998 iterations 4
Cbc0038I Pass   9: suminf.    0.84110 (3) obj. -19.7998 iterations 2
Cbc0038I Pass  10: suminf.    0.95936 (5) obj. -19.7998 iterations 5
Cbc0038I Pass  11: suminf.    0.95936 (5) obj. -19.7998 iterations 0
Cbc0038I Pass  12: suminf.    1.74130 (5) obj. -19.7998 iterations 4
Cbc0038I Pass  13: suminf.    1.39385 (4) obj. -19.7998 iterations 4
Cbc0038I Pass  14: suminf.    1.51823 (4) obj. -19.7998 iterations 3
Cbc0038I Pass  15: suminf.    1.42688 (4) obj. -19.7998 iterations 1
Cbc0038I Pass  16: suminf.    2.02544 (9) obj. -19.7998 iterations 21
Cbc0038I Pass  17: suminf.    0.53809 (2) obj. -19.7998 iterations 15
Cbc0038I Pass  18: suminf.    0.44149 (3) obj. -19.7998 iterations 7
Cbc0038I Pass  19: suminf.    0.44149 (3) obj. -19.7998 iterations 0
Cbc0038I Pass  20: suminf.    0.99906 (3) obj. -19.7998 iterations 3
Cbc0038I Pass  21: suminf.    6.96638 (22) obj. -19.7998 iterations 32
Cbc0038I Pass  22: suminf.    3.53842 (12) obj. -19.7998 iterations 33
Cbc0038I Pass  23: suminf.    1.64285 (6) obj. -19.7998 iterations 16
Cbc0038I Pass  24: suminf.    1.57001 (5) obj. -19.7998 iterations 1
Cbc0038I Pass  25: suminf.    1.56117 (5) obj. -19.7998 iterations 1
Cbc0038I Pass  26: suminf.    1.99822 (6) obj. -19.7998 iterations 3
Cbc0038I Pass  27: suminf.    2.88262 (11) obj. -19.7998 iterations 21
Cbc0038I Pass  28: suminf.    1.76016 (6) obj. -19.7998 iterations 13
Cbc0038I Pass  29: suminf.    1.73233 (6) obj. -19.7998 iterations 1
Cbc0038I Pass  30: suminf.    2.00777 (6) obj. -19.7998 iterations 8
Cbc0038I Pass  31: suminf.    1.57006 (5) obj. -19.7998 iterations 3
Cbc0038I Rounding solution of -18.0538 is better than previous of -17.5482

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 114 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -18.0538 to -19.4506 (0.12 seconds)
Cbc0038I Round again with cutoff of -23.8525
Cbc0038I Pass  31: suminf.    3.66671 (13) obj. -23.8525 iterations 0
Cbc0038I Pass  32: suminf.    3.64114 (12) obj. -23.8525 iterations 7
Cbc0038I Pass  33: suminf.    2.69334 (11) obj. -23.8525 iterations 13
Cbc0038I Pass  34: suminf.    1.63853 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  35: suminf.    1.04167 (5) obj. -23.8525 iterations 5
Cbc0038I Pass  36: suminf.    2.27050 (8) obj. -23.8525 iterations 15
Cbc0038I Pass  37: suminf.    2.27268 (8) obj. -23.8525 iterations 1
Cbc0038I Pass  38: suminf.    2.70596 (8) obj. -23.8525 iterations 14
Cbc0038I Pass  39: suminf.    2.20954 (8) obj. -23.8525 iterations 4
Cbc0038I Pass  40: suminf.    3.14601 (8) obj. -23.8525 iterations 7
Cbc0038I Pass  41: suminf.    2.66253 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  42: suminf.    2.54355 (9) obj. -23.8525 iterations 17
Cbc0038I Pass  43: suminf.    1.87334 (7) obj. -23.8525 iterations 11
Cbc0038I Pass  44: suminf.    2.52397 (7) obj. -23.8525 iterations 12
Cbc0038I Pass  45: suminf.    1.61492 (7) obj. -23.8525 iterations 6
Cbc0038I Pass  46: suminf.    2.55791 (8) obj. -23.8525 iterations 6
Cbc0038I Pass  47: suminf.    2.10106 (8) obj. -23.8525 iterations 4
Cbc0038I Pass  48: suminf.    2.50942 (7) obj. -23.8525 iterations 17
Cbc0038I Pass  49: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  50: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  51: suminf.    2.17937 (8) obj. -23.8525 iterations 2
Cbc0038I Pass  52: suminf.    2.17937 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  53: suminf.    2.50942 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  54: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  55: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  56: suminf.    2.17937 (8) obj. -23.8525 iterations 2
Cbc0038I Pass  57: suminf.    2.17937 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  58: suminf.    2.50942 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  59: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  60: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 106 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -19.4506 - took 0.18 seconds
Cbc0012I Integer solution of -19.450598 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 56 columns
Cbc0012I Integer solution of -19.55482 found by RINS after 0 iterations and 0 nodes (0.27 seconds)
Cbc0031I 35 added rows had average density of 65.6
Cbc0013I At root node, 35 cuts changed objective from -40.063149 to -33.62866 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24671 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2925 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 467 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.55482 best solution, best possible -33.62866 (2.14 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 36 rows 29 columns
Cbc0012I Integer solution of -20.40449 found by RINS after 13708 iterations and 41 nodes (2.48 seconds)
Cbc0001I Search completed - best objective -20.40449, took 15557 iterations and 82 nodes (2.57 seconds)
Cbc0032I Strong branching done 902 times (18985 iterations), fathomed 3 nodes and fixed 33 variables
Cbc0035I Maximum depth 34, 184 variables fixed on reduced cost
Total time (CPU seconds):       2.46   (Wallclock seconds):       2.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 146 (-58) rows, 156 (-46) columns and 3229 (-2424) elements
Clp1000I sum of infeasibilities 1.75613e-06 - average 1.20283e-08, 79 fixed columns
Coin0506I Presolve 68 (-78) rows, 76 (-80) columns and 282 (-2947) elements
Clp0006I 0  Obj -25.716788 Dual inf 3.755371 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 1.4647397 - largest nonzero change 2.4976533e-05 ( 0.0017128079%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value -19.737097
Clp0000I Optimal - objective value -19.737097
Coin0511I After Postsolve, objective -19.737097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -19.737097 Dual inf 100.57299 (56)
Clp0014I Perturbing problem by 0.001% of 1.6835265 - largest nonzero change 2.6421447e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 54.32326
Clp0000I Optimal - objective value 54.32326
Clp0000I Optimal - objective value 54.32326
Coin0511I After Postsolve, objective 54.32326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.32326025 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 146 rows, 156 columns (156 integer (156 of which binary)) and 3233 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.232%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 4.8457
Cbc0038I Pass   1: suminf.    2.69848 (40) obj. -45.3122 iterations 23
Cbc0038I Pass   2: suminf.    2.69848 (40) obj. -45.3122 iterations 1
Cbc0038I Pass   3: suminf.    1.39815 (27) obj. -30.0077 iterations 13
Cbc0038I Pass   4: suminf.    0.42961 (11) obj. -10.3071 iterations 16
Cbc0038I Solution found of 2.17982
Cbc0038I Rounding solution of 0.038664 is better than previous of 2.17982

Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 156 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 0.038664 to -1.74631 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.74673
Cbc0038I Pass   5: suminf.    2.69848 (40) obj. -45.3122 iterations 0
Cbc0038I Pass   6: suminf.    2.69848 (40) obj. -45.3122 iterations 1
Cbc0038I Pass   7: suminf.    0.90681 (20) obj. -20.7283 iterations 20
Cbc0038I Pass   8: suminf.    0.77683 (5) obj. -6.74673 iterations 32
Cbc0038I Pass   9: suminf.    0.65276 (5) obj. -6.74673 iterations 3
Cbc0038I Pass  10: suminf.    0.68417 (3) obj. -6.74673 iterations 7
Cbc0038I Pass  11: suminf.    0.62552 (3) obj. -6.74673 iterations 2
Cbc0038I Pass  12: suminf.    2.32982 (20) obj. -6.74673 iterations 41
Cbc0038I Pass  13: suminf.    2.08195 (19) obj. -6.74673 iterations 4
Cbc0038I Pass  14: suminf.    2.59317 (13) obj. -6.74673 iterations 21
Cbc0038I Pass  15: suminf.    2.02391 (13) obj. -6.74673 iterations 2
Cbc0038I Pass  16: suminf.    2.29234 (10) obj. -6.74673 iterations 10
Cbc0038I Pass  17: suminf.    1.59106 (9) obj. -7.42823 iterations 7
Cbc0038I Pass  18: suminf.    2.19976 (10) obj. -6.74673 iterations 5
Cbc0038I Pass  19: suminf.    1.92503 (9) obj. -6.88486 iterations 5
Cbc0038I Pass  20: suminf.    1.99410 (9) obj. -6.74673 iterations 4
Cbc0038I Pass  21: suminf.    3.04248 (19) obj. -6.74673 iterations 31
Cbc0038I Pass  22: suminf.    1.92749 (17) obj. -8.00217 iterations 7
Cbc0038I Pass  23: suminf.    1.75894 (13) obj. -6.74673 iterations 15
Cbc0038I Pass  24: suminf.    1.35506 (11) obj. -6.74673 iterations 4
Cbc0038I Pass  25: suminf.    1.05326 (10) obj. -6.74673 iterations 6
Cbc0038I Pass  26: suminf.    1.67314 (11) obj. -6.74673 iterations 3
Cbc0038I Pass  27: suminf.    1.58255 (12) obj. -6.74673 iterations 2
Cbc0038I Pass  28: suminf.    1.91227 (11) obj. -6.74673 iterations 13
Cbc0038I Pass  29: suminf.    1.64208 (11) obj. -6.74673 iterations 2
Cbc0038I Pass  30: suminf.    1.78843 (10) obj. -6.74673 iterations 9
Cbc0038I Pass  31: suminf.    1.78843 (10) obj. -6.74673 iterations 3
Cbc0038I Pass  32: suminf.    1.76415 (10) obj. -6.74673 iterations 5
Cbc0038I Pass  33: suminf.    1.76415 (10) obj. -6.74673 iterations 3
Cbc0038I Pass  34: suminf.    1.78843 (10) obj. -6.74673 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 156 columns, reduced to 27 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -1.74631 to -3.50222 (0.09 seconds)
Cbc0038I Round again with cutoff of -15.7473
Cbc0038I Pass  34: suminf.    2.69848 (40) obj. -45.3122 iterations 0
Cbc0038I Pass  35: suminf.    2.69848 (40) obj. -45.3122 iterations 1
Cbc0038I Pass  36: suminf.    1.09335 (23) obj. -23.5418 iterations 17
Cbc0038I Pass  37: suminf.    1.28772 (12) obj. -15.7473 iterations 36
Cbc0038I Pass  38: suminf.    0.96539 (12) obj. -15.7473 iterations 4
Cbc0038I Pass  39: suminf.    1.97652 (15) obj. -15.7473 iterations 19
Cbc0038I Pass  40: suminf.    1.43594 (14) obj. -15.7473 iterations 5
Cbc0038I Pass  41: suminf.    1.38409 (11) obj. -15.7473 iterations 19
Cbc0038I Pass  42: suminf.    1.31461 (11) obj. -15.7473 iterations 6
Cbc0038I Pass  43: suminf.    1.75405 (15) obj. -15.7473 iterations 7
Cbc0038I Pass  44: suminf.    2.37048 (18) obj. -15.7473 iterations 13
Cbc0038I Pass  45: suminf.    2.11499 (16) obj. -15.7473 iterations 4
Cbc0038I Pass  46: suminf.    1.75124 (13) obj. -15.7473 iterations 11
Cbc0038I Pass  47: suminf.    1.54739 (14) obj. -15.7473 iterations 3
Cbc0038I Pass  48: suminf.    1.75124 (13) obj. -15.7473 iterations 2
Cbc0038I Pass  49: suminf.    2.08720 (17) obj. -15.7473 iterations 22
Cbc0038I Pass  50: suminf.    1.60379 (17) obj. -15.7473 iterations 13
Cbc0038I Pass  51: suminf.    1.81576 (14) obj. -15.7473 iterations 11
Cbc0038I Pass  52: suminf.    1.81576 (14) obj. -15.7473 iterations 0
Cbc0038I Pass  53: suminf.    1.64910 (13) obj. -15.7473 iterations 4
Cbc0038I Pass  54: suminf.    1.64910 (13) obj. -15.7473 iterations 0
Cbc0038I Pass  55: suminf.    1.54296 (13) obj. -15.7473 iterations 4
Cbc0038I Pass  56: suminf.    1.54296 (13) obj. -15.7473 iterations 0
Cbc0038I Pass  57: suminf.    1.64910 (13) obj. -15.7473 iterations 1
Cbc0038I Pass  58: suminf.    1.66846 (21) obj. -15.7473 iterations 36
Cbc0038I Pass  59: suminf.    1.33636 (19) obj. -15.7473 iterations 8
Cbc0038I Pass  60: suminf.    1.70037 (14) obj. -15.7473 iterations 21
Cbc0038I Pass  61: suminf.    1.16260 (14) obj. -15.7473 iterations 4
Cbc0038I Pass  62: suminf.    1.48165 (14) obj. -15.7473 iterations 7
Cbc0038I Pass  63: suminf.    1.45289 (14) obj. -15.7473 iterations 6
Cbc0038I Rounding solution of -12.0432 is better than previous of -3.50222

Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 156 columns, reduced to 35 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -12.0432 to -17.2905 (0.17 seconds)
Cbc0038I Round again with cutoff of -27.6283
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.69848 (40) obj. -45.3122 iterations 0
Cbc0038I Pass  64: suminf.    2.69848 (40) obj. -45.3122 iterations 1
Cbc0038I Pass  65: suminf.    2.00424 (20) obj. -27.6283 iterations 36
Cbc0038I Pass  66: suminf.    2.00424 (20) obj. -27.6283 iterations 4
Cbc0038I Pass  67: suminf.    2.57536 (23) obj. -27.6283 iterations 20
Cbc0038I Pass  68: suminf.    2.55228 (23) obj. -27.6283 iterations 4
Cbc0038I Pass  69: suminf.    2.73900 (23) obj. -27.6283 iterations 11
Cbc0038I Pass  70: suminf.    2.73900 (23) obj. -27.6283 iterations 3
Cbc0038I Pass  71: suminf.    2.79495 (26) obj. -27.6283 iterations 4
Cbc0038I Pass  72: suminf.    2.78062 (23) obj. -27.6283 iterations 2
Cbc0038I Pass  73: suminf.    2.73900 (23) obj. -27.6283 iterations 6
Cbc0038I Pass  74: suminf.    2.38527 (26) obj. -27.6283 iterations 28
Cbc0038I Pass  75: suminf.    2.38527 (26) obj. -27.6283 iterations 11
Cbc0038I Pass  76: suminf.    2.68250 (24) obj. -27.6283 iterations 14
Cbc0038I Pass  77: suminf.    2.42359 (24) obj. -27.6283 iterations 2
Cbc0038I Pass  78: suminf.    2.43773 (24) obj. -27.6283 iterations 6
Cbc0038I Pass  79: suminf.    2.43773 (24) obj. -27.6283 iterations 0
Cbc0038I Pass  80: suminf.    2.54263 (24) obj. -27.6283 iterations 13
Cbc0038I Pass  81: suminf.    2.16826 (23) obj. -27.9363 iterations 6
Cbc0038I Pass  82: suminf.    2.98899 (25) obj. -27.6283 iterations 10
Cbc0038I Pass  83: suminf.    2.54263 (24) obj. -27.6283 iterations 5
Cbc0038I Pass  84: suminf.    4.17364 (29) obj. -27.6283 iterations 29
Cbc0038I Pass  85: suminf.    3.10117 (26) obj. -27.6283 iterations 11
Cbc0038I Pass  86: suminf.    3.36320 (24) obj. -27.6283 iterations 21
Cbc0038I Pass  87: suminf.    3.00274 (23) obj. -27.6898 iterations 5
Cbc0038I Pass  88: suminf.    3.68075 (25) obj. -27.6283 iterations 11
Cbc0038I Pass  89: suminf.    3.03013 (23) obj. -27.6624 iterations 7
Cbc0038I Pass  90: suminf.    3.06422 (23) obj. -27.6283 iterations 9
Cbc0038I Pass  91: suminf.    3.18979 (27) obj. -27.6283 iterations 34
Cbc0038I Pass  92: suminf.    2.75685 (27) obj. -27.6283 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -17.2905 - took 0.15 seconds
Cbc0012I Integer solution of -17.29055 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 146 rows 156 columns, reduced to 1 rows 4 columns
Cbc0031I 70 added rows had average density of 24.557143
Cbc0013I At root node, 70 cuts changed objective from -51.749586 to -26.064005 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11020 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1577 row cuts average 142.5 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 135 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1056 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1074 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 91.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 199 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.512 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17.29055 best solution, best possible -26.064005 (2.65 seconds)
Cbc0012I Integer solution of -19.51953 found by rounding after 5100 iterations and 1 nodes (2.65 seconds)
Cbc0016I Integer solution of -20.40449 found by strong branching after 5184 iterations and 1 nodes (2.80 seconds)
Cbc0010I After 3 nodes, 2 on tree, -20.40449 best solution, best possible -25.363127 (3.59 seconds)
Cbc0010I After 9 nodes, 7 on tree, -20.40449 best solution, best possible -25.363127 (4.34 seconds)
Cbc0010I After 19 nodes, 6 on tree, -20.40449 best solution, best possible -25.363127 (5.09 seconds)
Cbc0010I After 28 nodes, 3 on tree, -20.40449 best solution, best possible -25.363127 (5.89 seconds)
Cbc0010I After 35 nodes, 2 on tree, -20.40449 best solution, best possible -25.363127 (6.64 seconds)
Cbc0001I Search completed - best objective -20.40449, took 8724 iterations and 40 nodes (7.02 seconds)
Cbc0032I Strong branching done 728 times (19609 iterations), fathomed 7 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 113 variables fixed on reduced cost
Total time (CPU seconds):       5.47   (Wallclock seconds):       7.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 574 (-29) elements
Clp1000I sum of infeasibilities 0.000344717 - average 1.8143e-06, 17 fixed columns
Coin0506I Presolve 151 (-39) rows, 81 (-20) columns and 456 (-118) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 2.344423 - largest nonzero change 0 ( 0%) - largest zero change 1.8986656e-05
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Coin0511I After Postsolve, objective 40.063149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2391794 - largest nonzero change 0 ( 0%) - largest zero change 2.9075471e-05
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Coin0511I After Postsolve, objective 40.063149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.06314943 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 13.3217
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.79866 iterations 92
Cbc0038I Solution found of 6.79866
Cbc0038I Relaxing continuous gives 6.79866
Cbc0038I Rounding solution of -15.7979 is better than previous of 6.79866

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 102 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -15.7979 to -17.5482 (0.06 seconds)
Cbc0038I Round again with cutoff of -19.7998
Cbc0038I Pass   2: suminf.    2.66053 (13) obj. -19.7998 iterations 25
Cbc0038I Pass   3: suminf.    2.66053 (13) obj. -19.7998 iterations 0
Cbc0038I Pass   4: suminf.    2.20120 (10) obj. -19.7998 iterations 22
Cbc0038I Pass   5: suminf.    2.08720 (9) obj. -19.7998 iterations 5
Cbc0038I Pass   6: suminf.    1.19049 (5) obj. -19.7998 iterations 12
Cbc0038I Pass   7: suminf.    0.96268 (4) obj. -19.7998 iterations 2
Cbc0038I Pass   8: suminf.    1.14310 (3) obj. -19.7998 iterations 4
Cbc0038I Pass   9: suminf.    0.84110 (3) obj. -19.7998 iterations 2
Cbc0038I Pass  10: suminf.    0.95936 (5) obj. -19.7998 iterations 5
Cbc0038I Pass  11: suminf.    0.95936 (5) obj. -19.7998 iterations 0
Cbc0038I Pass  12: suminf.    1.74130 (5) obj. -19.7998 iterations 4
Cbc0038I Pass  13: suminf.    1.39385 (4) obj. -19.7998 iterations 4
Cbc0038I Pass  14: suminf.    1.51823 (4) obj. -19.7998 iterations 3
Cbc0038I Pass  15: suminf.    1.42688 (4) obj. -19.7998 iterations 1
Cbc0038I Pass  16: suminf.    2.02544 (9) obj. -19.7998 iterations 21
Cbc0038I Pass  17: suminf.    0.53809 (2) obj. -19.7998 iterations 15
Cbc0038I Pass  18: suminf.    0.44149 (3) obj. -19.7998 iterations 7
Cbc0038I Pass  19: suminf.    0.44149 (3) obj. -19.7998 iterations 0
Cbc0038I Pass  20: suminf.    0.99906 (3) obj. -19.7998 iterations 3
Cbc0038I Pass  21: suminf.    6.96638 (22) obj. -19.7998 iterations 32
Cbc0038I Pass  22: suminf.    3.53842 (12) obj. -19.7998 iterations 33
Cbc0038I Pass  23: suminf.    1.64285 (6) obj. -19.7998 iterations 16
Cbc0038I Pass  24: suminf.    1.57001 (5) obj. -19.7998 iterations 1
Cbc0038I Pass  25: suminf.    1.56117 (5) obj. -19.7998 iterations 1
Cbc0038I Pass  26: suminf.    1.99822 (6) obj. -19.7998 iterations 3
Cbc0038I Pass  27: suminf.    2.88262 (11) obj. -19.7998 iterations 21
Cbc0038I Pass  28: suminf.    1.76016 (6) obj. -19.7998 iterations 13
Cbc0038I Pass  29: suminf.    1.73233 (6) obj. -19.7998 iterations 1
Cbc0038I Pass  30: suminf.    2.00777 (6) obj. -19.7998 iterations 8
Cbc0038I Pass  31: suminf.    1.57006 (5) obj. -19.7998 iterations 3
Cbc0038I Rounding solution of -18.0538 is better than previous of -17.5482

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 114 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -18.0538 to -19.4506 (0.13 seconds)
Cbc0038I Round again with cutoff of -23.8525
Cbc0038I Pass  31: suminf.    3.66671 (13) obj. -23.8525 iterations 0
Cbc0038I Pass  32: suminf.    3.64114 (12) obj. -23.8525 iterations 7
Cbc0038I Pass  33: suminf.    2.69334 (11) obj. -23.8525 iterations 13
Cbc0038I Pass  34: suminf.    1.63853 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  35: suminf.    1.04167 (5) obj. -23.8525 iterations 5
Cbc0038I Pass  36: suminf.    2.27050 (8) obj. -23.8525 iterations 15
Cbc0038I Pass  37: suminf.    2.27268 (8) obj. -23.8525 iterations 1
Cbc0038I Pass  38: suminf.    2.70596 (8) obj. -23.8525 iterations 14
Cbc0038I Pass  39: suminf.    2.20954 (8) obj. -23.8525 iterations 4
Cbc0038I Pass  40: suminf.    3.14601 (8) obj. -23.8525 iterations 7
Cbc0038I Pass  41: suminf.    2.66253 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  42: suminf.    2.54355 (9) obj. -23.8525 iterations 17
Cbc0038I Pass  43: suminf.    1.87334 (7) obj. -23.8525 iterations 11
Cbc0038I Pass  44: suminf.    2.52397 (7) obj. -23.8525 iterations 12
Cbc0038I Pass  45: suminf.    1.61492 (7) obj. -23.8525 iterations 6
Cbc0038I Pass  46: suminf.    2.55791 (8) obj. -23.8525 iterations 6
Cbc0038I Pass  47: suminf.    2.10106 (8) obj. -23.8525 iterations 4
Cbc0038I Pass  48: suminf.    2.50942 (7) obj. -23.8525 iterations 17
Cbc0038I Pass  49: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  50: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  51: suminf.    2.17937 (8) obj. -23.8525 iterations 2
Cbc0038I Pass  52: suminf.    2.17937 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  53: suminf.    2.50942 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  54: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  55: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  56: suminf.    2.17937 (8) obj. -23.8525 iterations 2
Cbc0038I Pass  57: suminf.    2.17937 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  58: suminf.    2.50942 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  59: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  60: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 106 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -19.4506 - took 0.16 seconds
Cbc0012I Integer solution of -19.450598 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 56 columns
Cbc0012I Integer solution of -19.55482 found by RINS after 0 iterations and 0 nodes (0.25 seconds)
Cbc0031I 35 added rows had average density of 65.6
Cbc0013I At root node, 35 cuts changed objective from -40.063149 to -33.62866 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24671 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2925 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 467 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.55482 best solution, best possible -33.62866 (1.92 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 36 rows 29 columns
Cbc0012I Integer solution of -20.40449 found by RINS after 13708 iterations and 41 nodes (2.22 seconds)
Cbc0001I Search completed - best objective -20.40449, took 15557 iterations and 82 nodes (2.30 seconds)
Cbc0032I Strong branching done 902 times (18985 iterations), fathomed 3 nodes and fixed 33 variables
Cbc0035I Maximum depth 34, 184 variables fixed on reduced cost
Total time (CPU seconds):       2.25   (Wallclock seconds):       2.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 146 (-59) rows, 156 (-47) columns and 3229 (-2425) elements
Clp1000I sum of infeasibilities 1.75613e-06 - average 1.20283e-08, 79 fixed columns
Coin0506I Presolve 68 (-78) rows, 76 (-80) columns and 282 (-2947) elements
Clp0006I 0  Obj -25.716788 Dual inf 3.755371 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 1.4647397 - largest nonzero change 2.4976533e-05 ( 0.0017128079%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value -19.737097
Clp0000I Optimal - objective value -19.737097
Coin0511I After Postsolve, objective -19.737097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -19.737097 Dual inf 100.57299 (56)
Clp0014I Perturbing problem by 0.001% of 1.6835265 - largest nonzero change 2.6421447e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 54.32326
Clp0000I Optimal - objective value 54.32326
Clp0000I Optimal - objective value 54.32326
Coin0511I After Postsolve, objective 54.32326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.32326025 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 146 rows, 156 columns (156 integer (156 of which binary)) and 3233 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.232%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 4.8457
Cbc0038I Pass   1: suminf.    2.69848 (40) obj. -45.3122 iterations 23
Cbc0038I Pass   2: suminf.    2.69848 (40) obj. -45.3122 iterations 1
Cbc0038I Pass   3: suminf.    1.39815 (27) obj. -30.0077 iterations 13
Cbc0038I Pass   4: suminf.    0.42961 (11) obj. -10.3071 iterations 16
Cbc0038I Solution found of 2.17982
Cbc0038I Rounding solution of 0.038664 is better than previous of 2.17982

Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 156 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 0.038664 to -1.74631 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.74673
Cbc0038I Pass   5: suminf.    2.69848 (40) obj. -45.3122 iterations 0
Cbc0038I Pass   6: suminf.    2.69848 (40) obj. -45.3122 iterations 1
Cbc0038I Pass   7: suminf.    0.90681 (20) obj. -20.7283 iterations 20
Cbc0038I Pass   8: suminf.    0.77683 (5) obj. -6.74673 iterations 32
Cbc0038I Pass   9: suminf.    0.65276 (5) obj. -6.74673 iterations 3
Cbc0038I Pass  10: suminf.    0.68417 (3) obj. -6.74673 iterations 7
Cbc0038I Pass  11: suminf.    0.62552 (3) obj. -6.74673 iterations 2
Cbc0038I Pass  12: suminf.    2.32982 (20) obj. -6.74673 iterations 41
Cbc0038I Pass  13: suminf.    2.08195 (19) obj. -6.74673 iterations 4
Cbc0038I Pass  14: suminf.    2.59317 (13) obj. -6.74673 iterations 21
Cbc0038I Pass  15: suminf.    2.02391 (13) obj. -6.74673 iterations 2
Cbc0038I Pass  16: suminf.    2.29234 (10) obj. -6.74673 iterations 10
Cbc0038I Pass  17: suminf.    1.59106 (9) obj. -7.42823 iterations 7
Cbc0038I Pass  18: suminf.    2.19976 (10) obj. -6.74673 iterations 5
Cbc0038I Pass  19: suminf.    1.92503 (9) obj. -6.88486 iterations 5
Cbc0038I Pass  20: suminf.    1.99410 (9) obj. -6.74673 iterations 4
Cbc0038I Pass  21: suminf.    3.04248 (19) obj. -6.74673 iterations 31
Cbc0038I Pass  22: suminf.    1.92749 (17) obj. -8.00217 iterations 7
Cbc0038I Pass  23: suminf.    1.75894 (13) obj. -6.74673 iterations 15
Cbc0038I Pass  24: suminf.    1.35506 (11) obj. -6.74673 iterations 4
Cbc0038I Pass  25: suminf.    1.05326 (10) obj. -6.74673 iterations 6
Cbc0038I Pass  26: suminf.    1.67314 (11) obj. -6.74673 iterations 3
Cbc0038I Pass  27: suminf.    1.58255 (12) obj. -6.74673 iterations 2
Cbc0038I Pass  28: suminf.    1.91227 (11) obj. -6.74673 iterations 13
Cbc0038I Pass  29: suminf.    1.64208 (11) obj. -6.74673 iterations 2
Cbc0038I Pass  30: suminf.    1.78843 (10) obj. -6.74673 iterations 9
Cbc0038I Pass  31: suminf.    1.78843 (10) obj. -6.74673 iterations 3
Cbc0038I Pass  32: suminf.    1.76415 (10) obj. -6.74673 iterations 5
Cbc0038I Pass  33: suminf.    1.76415 (10) obj. -6.74673 iterations 3
Cbc0038I Pass  34: suminf.    1.78843 (10) obj. -6.74673 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 156 columns, reduced to 27 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -1.74631 to -3.50222 (0.09 seconds)
Cbc0038I Round again with cutoff of -15.7473
Cbc0038I Pass  34: suminf.    2.69848 (40) obj. -45.3122 iterations 0
Cbc0038I Pass  35: suminf.    2.69848 (40) obj. -45.3122 iterations 1
Cbc0038I Pass  36: suminf.    1.09335 (23) obj. -23.5418 iterations 17
Cbc0038I Pass  37: suminf.    1.28772 (12) obj. -15.7473 iterations 36
Cbc0038I Pass  38: suminf.    0.96539 (12) obj. -15.7473 iterations 4
Cbc0038I Pass  39: suminf.    1.97652 (15) obj. -15.7473 iterations 19
Cbc0038I Pass  40: suminf.    1.43594 (14) obj. -15.7473 iterations 5
Cbc0038I Pass  41: suminf.    1.38409 (11) obj. -15.7473 iterations 19
Cbc0038I Pass  42: suminf.    1.31461 (11) obj. -15.7473 iterations 6
Cbc0038I Pass  43: suminf.    1.75405 (15) obj. -15.7473 iterations 7
Cbc0038I Pass  44: suminf.    2.37048 (18) obj. -15.7473 iterations 13
Cbc0038I Pass  45: suminf.    2.11499 (16) obj. -15.7473 iterations 4
Cbc0038I Pass  46: suminf.    1.75124 (13) obj. -15.7473 iterations 11
Cbc0038I Pass  47: suminf.    1.54739 (14) obj. -15.7473 iterations 3
Cbc0038I Pass  48: suminf.    1.75124 (13) obj. -15.7473 iterations 2
Cbc0038I Pass  49: suminf.    2.08720 (17) obj. -15.7473 iterations 22
Cbc0038I Pass  50: suminf.    1.60379 (17) obj. -15.7473 iterations 13
Cbc0038I Pass  51: suminf.    1.81576 (14) obj. -15.7473 iterations 11
Cbc0038I Pass  52: suminf.    1.81576 (14) obj. -15.7473 iterations 0
Cbc0038I Pass  53: suminf.    1.64910 (13) obj. -15.7473 iterations 4
Cbc0038I Pass  54: suminf.    1.64910 (13) obj. -15.7473 iterations 0
Cbc0038I Pass  55: suminf.    1.54296 (13) obj. -15.7473 iterations 4
Cbc0038I Pass  56: suminf.    1.54296 (13) obj. -15.7473 iterations 0
Cbc0038I Pass  57: suminf.    1.64910 (13) obj. -15.7473 iterations 1
Cbc0038I Pass  58: suminf.    1.66846 (21) obj. -15.7473 iterations 36
Cbc0038I Pass  59: suminf.    1.33636 (19) obj. -15.7473 iterations 8
Cbc0038I Pass  60: suminf.    1.70037 (14) obj. -15.7473 iterations 21
Cbc0038I Pass  61: suminf.    1.16260 (14) obj. -15.7473 iterations 4
Cbc0038I Pass  62: suminf.    1.48165 (14) obj. -15.7473 iterations 7
Cbc0038I Pass  63: suminf.    1.45289 (14) obj. -15.7473 iterations 6
Cbc0038I Rounding solution of -12.0432 is better than previous of -3.50222

Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 156 columns, reduced to 35 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -12.0432 to -17.2905 (0.16 seconds)
Cbc0038I Round again with cutoff of -27.6283
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.69848 (40) obj. -45.3122 iterations 0
Cbc0038I Pass  64: suminf.    2.69848 (40) obj. -45.3122 iterations 1
Cbc0038I Pass  65: suminf.    2.00424 (20) obj. -27.6283 iterations 36
Cbc0038I Pass  66: suminf.    2.00424 (20) obj. -27.6283 iterations 4
Cbc0038I Pass  67: suminf.    2.57536 (23) obj. -27.6283 iterations 20
Cbc0038I Pass  68: suminf.    2.55228 (23) obj. -27.6283 iterations 4
Cbc0038I Pass  69: suminf.    2.73900 (23) obj. -27.6283 iterations 11
Cbc0038I Pass  70: suminf.    2.73900 (23) obj. -27.6283 iterations 3
Cbc0038I Pass  71: suminf.    2.79495 (26) obj. -27.6283 iterations 4
Cbc0038I Pass  72: suminf.    2.78062 (23) obj. -27.6283 iterations 2
Cbc0038I Pass  73: suminf.    2.73900 (23) obj. -27.6283 iterations 6
Cbc0038I Pass  74: suminf.    2.38527 (26) obj. -27.6283 iterations 28
Cbc0038I Pass  75: suminf.    2.38527 (26) obj. -27.6283 iterations 11
Cbc0038I Pass  76: suminf.    2.68250 (24) obj. -27.6283 iterations 14
Cbc0038I Pass  77: suminf.    2.42359 (24) obj. -27.6283 iterations 2
Cbc0038I Pass  78: suminf.    2.43773 (24) obj. -27.6283 iterations 6
Cbc0038I Pass  79: suminf.    2.43773 (24) obj. -27.6283 iterations 0
Cbc0038I Pass  80: suminf.    2.54263 (24) obj. -27.6283 iterations 13
Cbc0038I Pass  81: suminf.    2.16826 (23) obj. -27.9363 iterations 6
Cbc0038I Pass  82: suminf.    2.98899 (25) obj. -27.6283 iterations 10
Cbc0038I Pass  83: suminf.    2.54263 (24) obj. -27.6283 iterations 5
Cbc0038I Pass  84: suminf.    4.17364 (29) obj. -27.6283 iterations 29
Cbc0038I Pass  85: suminf.    3.10117 (26) obj. -27.6283 iterations 11
Cbc0038I Pass  86: suminf.    3.36320 (24) obj. -27.6283 iterations 21
Cbc0038I Pass  87: suminf.    3.00274 (23) obj. -27.6898 iterations 5
Cbc0038I Pass  88: suminf.    3.68075 (25) obj. -27.6283 iterations 11
Cbc0038I Pass  89: suminf.    3.03013 (23) obj. -27.6624 iterations 7
Cbc0038I Pass  90: suminf.    3.06422 (23) obj. -27.6283 iterations 9
Cbc0038I Pass  91: suminf.    3.18979 (27) obj. -27.6283 iterations 34
Cbc0038I Pass  92: suminf.    2.75685 (27) obj. -27.6283 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -17.2905 - took 0.14 seconds
Cbc0012I Integer solution of -17.29055 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 146 rows 156 columns, reduced to 1 rows 4 columns
Cbc0031I 70 added rows had average density of 24.557143
Cbc0013I At root node, 70 cuts changed objective from -51.749586 to -26.064005 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11020 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1577 row cuts average 142.5 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 135 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1056 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1074 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 91.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 199 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.482 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17.29055 best solution, best possible -26.064005 (2.46 seconds)
Cbc0012I Integer solution of -19.51953 found by rounding after 5100 iterations and 1 nodes (2.47 seconds)
Cbc0016I Integer solution of -20.40449 found by strong branching after 5184 iterations and 1 nodes (2.60 seconds)
Cbc0010I After 3 nodes, 2 on tree, -20.40449 best solution, best possible -25.363127 (3.21 seconds)
Cbc0010I After 14 nodes, 3 on tree, -20.40449 best solution, best possible -25.363127 (4.04 seconds)
Cbc0010I After 28 nodes, 3 on tree, -20.40449 best solution, best possible -25.363127 (5.20 seconds)
Cbc0010I After 36 nodes, 3 on tree, -20.40449 best solution, best possible -25.363127 (5.98 seconds)
Cbc0001I Search completed - best objective -20.40449, took 8724 iterations and 40 nodes (6.19 seconds)
Cbc0032I Strong branching done 728 times (19609 iterations), fathomed 7 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 113 variables fixed on reduced cost
Total time (CPU seconds):       4.91   (Wallclock seconds):       6.21

