Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 409 (-44) elements
Clp1000I sum of infeasibilities 2.77429e-05 - average 2.10173e-07, 7 fixed columns
Coin0506I Presolve 117 (-15) rows, 67 (-9) columns and 361 (-48) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.5323718 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 39.990891
Clp0000I Optimal - objective value 39.990891
Coin0511I After Postsolve, objective 39.990891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.990891
Clp0000I Optimal - objective value 39.990891
Clp0000I Optimal - objective value 39.990891
Coin0511I After Postsolve, objective 39.990891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.99089072 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.44946
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.64549 iterations 60
Cbc0038I Solution found of 6.64549
Cbc0038I Relaxing continuous gives 6.64549
Cbc0038I Rounding solution of -4.75137 is better than previous of 6.64549

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 73 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.75137 to -8.76512 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.8878
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.42940 (16) obj. -11.8878 iterations 17
Cbc0038I Pass   3: suminf.    1.28516 (17) obj. -11.8878 iterations 3
Cbc0038I Pass   4: suminf.    0.76656 (5) obj. -11.8878 iterations 32
Cbc0038I Pass   5: suminf.    0.48417 (4) obj. -11.8878 iterations 9
Cbc0038I Pass   6: suminf.    0.27446 (5) obj. -11.8878 iterations 6
Cbc0038I Pass   7: suminf.    0.26951 (5) obj. -11.8878 iterations 1
Cbc0038I Pass   8: suminf.    1.72689 (10) obj. -11.8878 iterations 15
Cbc0038I Pass   9: suminf.    0.93965 (7) obj. -11.8878 iterations 5
Cbc0038I Pass  10: suminf.    1.55252 (5) obj. -11.8878 iterations 13
Cbc0038I Pass  11: suminf.    0.67324 (3) obj. -11.8878 iterations 2
Cbc0038I Pass  12: suminf.    0.63691 (4) obj. -11.8878 iterations 2
Cbc0038I Pass  13: suminf.    1.56589 (5) obj. -11.8878 iterations 8
Cbc0038I Pass  14: suminf.    1.10328 (5) obj. -11.8878 iterations 3
Cbc0038I Pass  15: suminf.    1.00504 (6) obj. -11.8878 iterations 2
Cbc0038I Pass  16: suminf.    1.44688 (5) obj. -11.8878 iterations 10
Cbc0038I Pass  17: suminf.    1.40813 (4) obj. -11.8878 iterations 1
Cbc0038I Pass  18: suminf.    1.43856 (5) obj. -11.8878 iterations 5
Cbc0038I Pass  19: suminf.    1.39659 (4) obj. -11.8878 iterations 1
Cbc0038I Pass  20: suminf.    1.44688 (5) obj. -11.8878 iterations 5
Cbc0038I Pass  21: suminf.    2.94090 (10) obj. -11.8878 iterations 21
Cbc0038I Pass  22: suminf.    1.59360 (7) obj. -11.8878 iterations 10
Cbc0038I Pass  23: suminf.    1.59360 (7) obj. -11.8878 iterations 0
Cbc0038I Pass  24: suminf.    2.27745 (8) obj. -11.8878 iterations 16
Cbc0038I Pass  25: suminf.    1.73488 (9) obj. -11.8878 iterations 1
Cbc0038I Pass  26: suminf.    1.45551 (9) obj. -11.8878 iterations 10
Cbc0038I Pass  27: suminf.    1.79876 (8) obj. -11.8878 iterations 13
Cbc0038I Pass  28: suminf.    1.45455 (6) obj. -11.8878 iterations 2
Cbc0038I Pass  29: suminf.    2.10889 (6) obj. -11.8878 iterations 6
Cbc0038I Pass  30: suminf.    1.68209 (8) obj. -11.8878 iterations 5
Cbc0038I Pass  31: suminf.    1.45551 (9) obj. -11.8878 iterations 7
Cbc0038I Rounding solution of -9.41915 is better than previous of -8.76512

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 81 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -9.41915 to -9.59801 (0.11 seconds)
Cbc0038I Round again with cutoff of -17.5084
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.62498 (29) obj. -17.5084 iterations 7
Cbc0038I Pass  32: suminf.    2.49848 (29) obj. -17.5084 iterations 4
Cbc0038I Pass  33: suminf.    2.45205 (9) obj. -17.5084 iterations 26
Cbc0038I Pass  34: suminf.    2.16207 (9) obj. -17.5084 iterations 6
Cbc0038I Pass  35: suminf.    2.35685 (6) obj. -17.5084 iterations 11
Cbc0038I Pass  36: suminf.    2.35685 (6) obj. -17.5084 iterations 0
Cbc0038I Pass  37: suminf.    1.87864 (6) obj. -17.5084 iterations 4
Cbc0038I Pass  38: suminf.    1.87864 (6) obj. -17.5084 iterations 2
Cbc0038I Pass  39: suminf.    2.48837 (7) obj. -17.5084 iterations 4
Cbc0038I Pass  40: suminf.    3.93973 (14) obj. -17.5084 iterations 23
Cbc0038I Pass  41: suminf.    2.65889 (8) obj. -17.5084 iterations 16
Cbc0038I Pass  42: suminf.    2.57052 (7) obj. -17.5084 iterations 1
Cbc0038I Pass  43: suminf.    2.51554 (7) obj. -17.5084 iterations 1
Cbc0038I Pass  44: suminf.    2.15449 (5) obj. -17.5084 iterations 7
Cbc0038I Pass  45: suminf.    2.04642 (6) obj. -17.5084 iterations 1
Cbc0038I Pass  46: suminf.    2.04642 (6) obj. -17.5084 iterations 0
Cbc0038I Pass  47: suminf.    2.52171 (6) obj. -17.5084 iterations 3
Cbc0038I Pass  48: suminf.    2.16916 (5) obj. -17.5084 iterations 2
Cbc0038I Pass  49: suminf.    4.63831 (16) obj. -17.5084 iterations 33
Cbc0038I Pass  50: suminf.    2.96668 (12) obj. -17.5084 iterations 15
Cbc0038I Pass  51: suminf.    2.36980 (6) obj. -17.5084 iterations 12
Cbc0038I Pass  52: suminf.    2.01021 (6) obj. -17.5084 iterations 1
Cbc0038I Pass  53: suminf.    2.54042 (8) obj. -17.5084 iterations 6
Cbc0038I Pass  54: suminf.    2.41602 (10) obj. -17.5084 iterations 3
Cbc0038I Pass  55: suminf.    2.38772 (7) obj. -17.5084 iterations 10
Cbc0038I Pass  56: suminf.    2.38772 (7) obj. -17.5084 iterations 0
Cbc0038I Pass  57: suminf.    2.79603 (10) obj. -17.5084 iterations 11
Cbc0038I Pass  58: suminf.    2.34535 (6) obj. -17.5084 iterations 8
Cbc0038I Pass  59: suminf.    2.34535 (6) obj. -17.5084 iterations 0
Cbc0038I Pass  60: suminf.    2.38314 (7) obj. -17.5084 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 91 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -9.59801 - took 0.15 seconds
Cbc0012I Integer solution of -9.59801 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 74 rows 46 columns
Cbc0012I Integer solution of -9.72801 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 31 added rows had average density of 57.225806
Cbc0013I At root node, 31 cuts changed objective from -39.990891 to -31.387599 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10755 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1302 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 202 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.72801 best solution, best possible -31.387599 (0.86 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 11 rows 10 columns
Cbc0004I Integer solution of -10.52098 found after 8951 iterations and 59 nodes (1.15 seconds)
Cbc0004I Integer solution of -10.67473 found after 9257 iterations and 80 nodes (1.16 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 3 rows 8 columns
Cbc0001I Search completed - best objective -10.67473, took 10092 iterations and 118 nodes (1.20 seconds)
Cbc0032I Strong branching done 1038 times (19377 iterations), fathomed 13 nodes and fixed 44 variables
Cbc0035I Maximum depth 37, 371 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 115 (-37) columns and 1987 (-1316) elements
Clp1000I sum of infeasibilities 1.88687e-06 - average 1.94523e-08, 50 fixed columns
Coin0506I Presolve 48 (-49) rows, 64 (-51) columns and 220 (-1767) elements
Clp0006I 0  Obj -46.756482 Dual inf 2.8059838 (63)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 1.7539155 - largest nonzero change 2.2864039e-05 ( 0.0014341412%) - largest zero change 2.8691903e-05
Clp0000I Optimal - objective value 6.9113542
Clp0000I Optimal - objective value 6.9113542
Coin0511I After Postsolve, objective 6.9113542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 6.9113542 Dual inf 35.616551 (42)
Clp0014I Perturbing problem by 0.001% of 1.9238549 - largest nonzero change 2.8385582e-05 ( 0.002086088%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 52.606526
Clp0000I Optimal - objective value 52.606526
Clp0000I Optimal - objective value 52.606526
Coin0511I After Postsolve, objective 52.606526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.60652601 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 117 columns (117 integer (117 of which binary)) and 1997 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.787%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.46028
Cbc0038I Pass   1: suminf.    2.47955 (34) obj. -29.7782 iterations 27
Cbc0038I Pass   2: suminf.    2.47955 (34) obj. -29.7782 iterations 1
Cbc0038I Pass   3: suminf.    1.21132 (21) obj. -11.6672 iterations 13
Cbc0038I Pass   4: suminf.    0.56013 (11) obj. -0.454137 iterations 10
Cbc0038I Solution found of 10.9357
Cbc0038I Rounding solution of 3.01297 is better than previous of 10.9357

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 3.01297 to -5.6259 (0.03 seconds)
Cbc0038I Round again with cutoff of -9.98281
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.47955 (34) obj. -29.7782 iterations 0
Cbc0038I Pass   6: suminf.    2.47955 (34) obj. -29.7782 iterations 1
Cbc0038I Pass   7: suminf.    0.84429 (8) obj. -9.98281 iterations 37
Cbc0038I Pass   8: suminf.    0.77217 (8) obj. -9.98281 iterations 5
Cbc0038I Pass   9: suminf.    0.55849 (3) obj. -9.98281 iterations 18
Cbc0038I Pass  10: suminf.    0.41674 (3) obj. -10.5498 iterations 2
Cbc0038I Pass  11: suminf.    0.55849 (3) obj. -9.98281 iterations 3
Cbc0038I Pass  12: suminf.    2.64619 (18) obj. -9.98281 iterations 23
Cbc0038I Pass  13: suminf.    2.25476 (15) obj. -9.98281 iterations 7
Cbc0038I Pass  14: suminf.    1.02214 (9) obj. -9.98281 iterations 12
Cbc0038I Pass  15: suminf.    1.02214 (9) obj. -9.98281 iterations 0
Cbc0038I Pass  16: suminf.    1.52487 (6) obj. -9.98281 iterations 12
Cbc0038I Pass  17: suminf.    1.24103 (6) obj. -9.98281 iterations 6
Cbc0038I Pass  18: suminf.    1.45382 (5) obj. -9.98281 iterations 7
Cbc0038I Pass  19: suminf.    0.82723 (6) obj. -9.98281 iterations 6
Cbc0038I Pass  20: suminf.    0.63377 (4) obj. -10.6156 iterations 4
Cbc0038I Pass  21: suminf.    1.45382 (5) obj. -9.98281 iterations 3
Cbc0038I Pass  22: suminf.    2.16542 (13) obj. -9.98281 iterations 19
Cbc0038I Pass  23: suminf.    2.16542 (13) obj. -9.98281 iterations 2
Cbc0038I Pass  24: suminf.    0.92834 (5) obj. -9.98281 iterations 19
Cbc0038I Pass  25: suminf.    0.70643 (5) obj. -10.786 iterations 4
Cbc0038I Pass  26: suminf.    0.92834 (5) obj. -9.98281 iterations 5
Cbc0038I Pass  27: suminf.    2.32837 (12) obj. -9.98281 iterations 30
Cbc0038I Pass  28: suminf.    1.79369 (11) obj. -9.98281 iterations 6
Cbc0038I Pass  29: suminf.    0.80958 (5) obj. -9.98281 iterations 16
Cbc0038I Pass  30: suminf.    0.67189 (5) obj. -10.5336 iterations 2
Cbc0038I Pass  31: suminf.    1.11413 (5) obj. -9.98281 iterations 8
Cbc0038I Pass  32: suminf.    2.14653 (14) obj. -9.98281 iterations 17
Cbc0038I Pass  33: suminf.    1.85766 (12) obj. -9.98281 iterations 6
Cbc0038I Pass  34: suminf.    0.91074 (6) obj. -9.98281 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 46 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -5.6259 to -7.43805 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.8251
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.47955 (34) obj. -29.7782 iterations 0
Cbc0038I Pass  35: suminf.    2.47955 (34) obj. -29.7782 iterations 1
Cbc0038I Pass  36: suminf.    1.77169 (17) obj. -17.8251 iterations 25
Cbc0038I Pass  37: suminf.    1.77169 (17) obj. -17.8251 iterations 0
Cbc0038I Pass  38: suminf.    1.38325 (9) obj. -17.8251 iterations 34
Cbc0038I Pass  39: suminf.    1.26181 (10) obj. -17.8251 iterations 11
Cbc0038I Pass  40: suminf.    1.62637 (10) obj. -17.8251 iterations 17
Cbc0038I Pass  41: suminf.    1.40264 (6) obj. -17.8251 iterations 9
Cbc0038I Pass  42: suminf.    0.94658 (6) obj. -17.8251 iterations 4
Cbc0038I Pass  43: suminf.    1.69411 (8) obj. -17.8251 iterations 8
Cbc0038I Pass  44: suminf.    1.69411 (8) obj. -17.8251 iterations 1
Cbc0038I Pass  45: suminf.    2.50756 (9) obj. -17.8251 iterations 18
Cbc0038I Pass  46: suminf.    1.28756 (6) obj. -18.1069 iterations 8
Cbc0038I Pass  47: suminf.    1.02640 (5) obj. -17.8251 iterations 2
Cbc0038I Pass  48: suminf.    1.42845 (6) obj. -17.8251 iterations 9
Cbc0038I Pass  49: suminf.    0.99336 (5) obj. -17.8251 iterations 6
Cbc0038I Pass  50: suminf.    2.73166 (12) obj. -17.8251 iterations 18
Cbc0038I Pass  51: suminf.    1.81394 (12) obj. -17.8251 iterations 5
Cbc0038I Pass  52: suminf.    1.44772 (9) obj. -17.8251 iterations 25
Cbc0038I Pass  53: suminf.    1.21357 (6) obj. -17.8251 iterations 9
Cbc0038I Pass  54: suminf.    1.43033 (8) obj. -17.8251 iterations 10
Cbc0038I Pass  55: suminf.    2.18906 (15) obj. -17.8251 iterations 25
Cbc0038I Pass  56: suminf.    1.73889 (10) obj. -18.5154 iterations 7
Cbc0038I Pass  57: suminf.    1.32373 (10) obj. -17.8251 iterations 16
Cbc0038I Pass  58: suminf.    0.92509 (7) obj. -18.0738 iterations 6
Cbc0038I Pass  59: suminf.    2.63529 (18) obj. -17.8251 iterations 26
Cbc0038I Pass  60: suminf.    2.55786 (17) obj. -17.8251 iterations 8
Cbc0038I Pass  61: suminf.    2.24581 (14) obj. -17.8251 iterations 18
Cbc0038I Pass  62: suminf.    1.05366 (8) obj. -18.9452 iterations 6
Cbc0038I Pass  63: suminf.    1.32373 (10) obj. -17.8251 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 10 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.43805 - took 0.08 seconds
Cbc0012I Integer solution of -7.43805 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 99 rows 117 columns, reduced to 35 rows 44 columns
Cbc0031I 59 added rows had average density of 41.033898
Cbc0013I At root node, 59 cuts changed objective from -49.194116 to -22.366138 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20868 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.193 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2121 row cuts average 110.2 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 716 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1587 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 388 row cuts average 55.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.453 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.43805 best solution, best possible -22.366138 (2.42 seconds)
Cbc0012I Integer solution of -10.03666 found by rounding after 6347 iterations and 1 nodes (2.43 seconds)
Cbc0012I Integer solution of -10.6106 found by DiveCoefficient after 6413 iterations and 2 nodes (2.43 seconds)
Cbc0012I Integer solution of -10.61418 found by rounding after 6453 iterations and 14 nodes (2.45 seconds)
Cbc0012I Integer solution of -10.67473 found by DiveCoefficient after 6464 iterations and 16 nodes (2.45 seconds)
Cbc0010I After 27 nodes, 6 on tree, -10.67473 best solution, best possible -22.2508 (3.13 seconds)
Cbc0038I Full problem 99 rows 117 columns, reduced to 33 rows 52 columns
Cbc0038I Full problem 99 rows 117 columns, reduced to 27 rows 43 columns
Cbc0001I Search completed - best objective -10.67473, took 12692 iterations and 136 nodes (3.80 seconds)
Cbc0032I Strong branching done 1426 times (15723 iterations), fathomed 4 nodes and fixed 7 variables
Cbc0035I Maximum depth 25, 178 variables fixed on reduced cost
Total time (CPU seconds):       3.23   (Wallclock seconds):       3.83

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 409 (-44) elements
Clp1000I sum of infeasibilities 2.77429e-05 - average 2.10173e-07, 7 fixed columns
Coin0506I Presolve 117 (-15) rows, 67 (-9) columns and 361 (-48) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.5323718 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 39.990891
Clp0000I Optimal - objective value 39.990891
Coin0511I After Postsolve, objective 39.990891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.990891
Clp0000I Optimal - objective value 39.990891
Clp0000I Optimal - objective value 39.990891
Coin0511I After Postsolve, objective 39.990891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.99089072 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.44946
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.64549 iterations 60
Cbc0038I Solution found of 6.64549
Cbc0038I Relaxing continuous gives 6.64549
Cbc0038I Rounding solution of -4.75137 is better than previous of 6.64549

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 73 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.75137 to -8.76512 (0.07 seconds)
Cbc0038I Round again with cutoff of -11.8878
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.42940 (16) obj. -11.8878 iterations 17
Cbc0038I Pass   3: suminf.    1.28516 (17) obj. -11.8878 iterations 3
Cbc0038I Pass   4: suminf.    0.76656 (5) obj. -11.8878 iterations 32
Cbc0038I Pass   5: suminf.    0.48417 (4) obj. -11.8878 iterations 9
Cbc0038I Pass   6: suminf.    0.27446 (5) obj. -11.8878 iterations 6
Cbc0038I Pass   7: suminf.    0.26951 (5) obj. -11.8878 iterations 1
Cbc0038I Pass   8: suminf.    1.72689 (10) obj. -11.8878 iterations 15
Cbc0038I Pass   9: suminf.    0.93965 (7) obj. -11.8878 iterations 5
Cbc0038I Pass  10: suminf.    1.55252 (5) obj. -11.8878 iterations 13
Cbc0038I Pass  11: suminf.    0.67324 (3) obj. -11.8878 iterations 2
Cbc0038I Pass  12: suminf.    0.63691 (4) obj. -11.8878 iterations 2
Cbc0038I Pass  13: suminf.    1.56589 (5) obj. -11.8878 iterations 8
Cbc0038I Pass  14: suminf.    1.10328 (5) obj. -11.8878 iterations 3
Cbc0038I Pass  15: suminf.    1.00504 (6) obj. -11.8878 iterations 2
Cbc0038I Pass  16: suminf.    1.44688 (5) obj. -11.8878 iterations 10
Cbc0038I Pass  17: suminf.    1.40813 (4) obj. -11.8878 iterations 1
Cbc0038I Pass  18: suminf.    1.43856 (5) obj. -11.8878 iterations 5
Cbc0038I Pass  19: suminf.    1.39659 (4) obj. -11.8878 iterations 1
Cbc0038I Pass  20: suminf.    1.44688 (5) obj. -11.8878 iterations 5
Cbc0038I Pass  21: suminf.    2.94090 (10) obj. -11.8878 iterations 21
Cbc0038I Pass  22: suminf.    1.59360 (7) obj. -11.8878 iterations 10
Cbc0038I Pass  23: suminf.    1.59360 (7) obj. -11.8878 iterations 0
Cbc0038I Pass  24: suminf.    2.27745 (8) obj. -11.8878 iterations 16
Cbc0038I Pass  25: suminf.    1.73488 (9) obj. -11.8878 iterations 1
Cbc0038I Pass  26: suminf.    1.45551 (9) obj. -11.8878 iterations 10
Cbc0038I Pass  27: suminf.    1.79876 (8) obj. -11.8878 iterations 13
Cbc0038I Pass  28: suminf.    1.45455 (6) obj. -11.8878 iterations 2
Cbc0038I Pass  29: suminf.    2.10889 (6) obj. -11.8878 iterations 6
Cbc0038I Pass  30: suminf.    1.68209 (8) obj. -11.8878 iterations 5
Cbc0038I Pass  31: suminf.    1.45551 (9) obj. -11.8878 iterations 7
Cbc0038I Rounding solution of -9.41915 is better than previous of -8.76512

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 81 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -9.41915 to -9.59801 (0.14 seconds)
Cbc0038I Round again with cutoff of -17.5084
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.62498 (29) obj. -17.5084 iterations 7
Cbc0038I Pass  32: suminf.    2.49848 (29) obj. -17.5084 iterations 4
Cbc0038I Pass  33: suminf.    2.45205 (9) obj. -17.5084 iterations 26
Cbc0038I Pass  34: suminf.    2.16207 (9) obj. -17.5084 iterations 6
Cbc0038I Pass  35: suminf.    2.35685 (6) obj. -17.5084 iterations 11
Cbc0038I Pass  36: suminf.    2.35685 (6) obj. -17.5084 iterations 0
Cbc0038I Pass  37: suminf.    1.87864 (6) obj. -17.5084 iterations 4
Cbc0038I Pass  38: suminf.    1.87864 (6) obj. -17.5084 iterations 2
Cbc0038I Pass  39: suminf.    2.48837 (7) obj. -17.5084 iterations 4
Cbc0038I Pass  40: suminf.    3.93973 (14) obj. -17.5084 iterations 23
Cbc0038I Pass  41: suminf.    2.65889 (8) obj. -17.5084 iterations 16
Cbc0038I Pass  42: suminf.    2.57052 (7) obj. -17.5084 iterations 1
Cbc0038I Pass  43: suminf.    2.51554 (7) obj. -17.5084 iterations 1
Cbc0038I Pass  44: suminf.    2.15449 (5) obj. -17.5084 iterations 7
Cbc0038I Pass  45: suminf.    2.04642 (6) obj. -17.5084 iterations 1
Cbc0038I Pass  46: suminf.    2.04642 (6) obj. -17.5084 iterations 0
Cbc0038I Pass  47: suminf.    2.52171 (6) obj. -17.5084 iterations 3
Cbc0038I Pass  48: suminf.    2.16916 (5) obj. -17.5084 iterations 2
Cbc0038I Pass  49: suminf.    4.63831 (16) obj. -17.5084 iterations 33
Cbc0038I Pass  50: suminf.    2.96668 (12) obj. -17.5084 iterations 15
Cbc0038I Pass  51: suminf.    2.36980 (6) obj. -17.5084 iterations 12
Cbc0038I Pass  52: suminf.    2.01021 (6) obj. -17.5084 iterations 1
Cbc0038I Pass  53: suminf.    2.54042 (8) obj. -17.5084 iterations 6
Cbc0038I Pass  54: suminf.    2.41602 (10) obj. -17.5084 iterations 3
Cbc0038I Pass  55: suminf.    2.38772 (7) obj. -17.5084 iterations 10
Cbc0038I Pass  56: suminf.    2.38772 (7) obj. -17.5084 iterations 0
Cbc0038I Pass  57: suminf.    2.79603 (10) obj. -17.5084 iterations 11
Cbc0038I Pass  58: suminf.    2.34535 (6) obj. -17.5084 iterations 8
Cbc0038I Pass  59: suminf.    2.34535 (6) obj. -17.5084 iterations 0
Cbc0038I Pass  60: suminf.    2.38314 (7) obj. -17.5084 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 91 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -9.59801 - took 0.19 seconds
Cbc0012I Integer solution of -9.59801 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 74 rows 46 columns
Cbc0012I Integer solution of -9.72801 found by RINS after 0 iterations and 0 nodes (0.29 seconds)
Cbc0031I 31 added rows had average density of 57.225806
Cbc0013I At root node, 31 cuts changed objective from -39.990891 to -31.387599 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10755 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1302 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 202 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.72801 best solution, best possible -31.387599 (1.10 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 11 rows 10 columns
Cbc0004I Integer solution of -10.52098 found after 8951 iterations and 59 nodes (1.44 seconds)
Cbc0004I Integer solution of -10.67473 found after 9257 iterations and 80 nodes (1.46 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 3 rows 8 columns
Cbc0001I Search completed - best objective -10.67473, took 10092 iterations and 118 nodes (1.51 seconds)
Cbc0032I Strong branching done 1038 times (19377 iterations), fathomed 13 nodes and fixed 44 variables
Cbc0035I Maximum depth 37, 371 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       1.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 115 (-38) columns and 1987 (-1317) elements
Clp1000I sum of infeasibilities 1.88687e-06 - average 1.94523e-08, 50 fixed columns
Coin0506I Presolve 48 (-49) rows, 64 (-51) columns and 220 (-1767) elements
Clp0006I 0  Obj -46.756482 Dual inf 2.8059838 (63)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 1.7539155 - largest nonzero change 2.2864039e-05 ( 0.0014341412%) - largest zero change 2.8691903e-05
Clp0000I Optimal - objective value 6.9113542
Clp0000I Optimal - objective value 6.9113542
Coin0511I After Postsolve, objective 6.9113542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 6.9113542 Dual inf 35.616551 (42)
Clp0014I Perturbing problem by 0.001% of 1.9238549 - largest nonzero change 2.8385582e-05 ( 0.002086088%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 52.606526
Clp0000I Optimal - objective value 52.606526
Clp0000I Optimal - objective value 52.606526
Coin0511I After Postsolve, objective 52.606526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.60652601 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 117 columns (117 integer (117 of which binary)) and 1997 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.787%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.46028
Cbc0038I Pass   1: suminf.    2.47955 (34) obj. -29.7782 iterations 27
Cbc0038I Pass   2: suminf.    2.47955 (34) obj. -29.7782 iterations 1
Cbc0038I Pass   3: suminf.    1.21132 (21) obj. -11.6672 iterations 13
Cbc0038I Pass   4: suminf.    0.56013 (11) obj. -0.454137 iterations 10
Cbc0038I Solution found of 10.9357
Cbc0038I Rounding solution of 3.01297 is better than previous of 10.9357

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 3.01297 to -5.6259 (0.03 seconds)
Cbc0038I Round again with cutoff of -9.98281
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.47955 (34) obj. -29.7782 iterations 0
Cbc0038I Pass   6: suminf.    2.47955 (34) obj. -29.7782 iterations 1
Cbc0038I Pass   7: suminf.    0.84429 (8) obj. -9.98281 iterations 37
Cbc0038I Pass   8: suminf.    0.77217 (8) obj. -9.98281 iterations 5
Cbc0038I Pass   9: suminf.    0.55849 (3) obj. -9.98281 iterations 18
Cbc0038I Pass  10: suminf.    0.41674 (3) obj. -10.5498 iterations 2
Cbc0038I Pass  11: suminf.    0.55849 (3) obj. -9.98281 iterations 3
Cbc0038I Pass  12: suminf.    2.64619 (18) obj. -9.98281 iterations 23
Cbc0038I Pass  13: suminf.    2.25476 (15) obj. -9.98281 iterations 7
Cbc0038I Pass  14: suminf.    1.02214 (9) obj. -9.98281 iterations 12
Cbc0038I Pass  15: suminf.    1.02214 (9) obj. -9.98281 iterations 0
Cbc0038I Pass  16: suminf.    1.52487 (6) obj. -9.98281 iterations 12
Cbc0038I Pass  17: suminf.    1.24103 (6) obj. -9.98281 iterations 6
Cbc0038I Pass  18: suminf.    1.45382 (5) obj. -9.98281 iterations 7
Cbc0038I Pass  19: suminf.    0.82723 (6) obj. -9.98281 iterations 6
Cbc0038I Pass  20: suminf.    0.63377 (4) obj. -10.6156 iterations 4
Cbc0038I Pass  21: suminf.    1.45382 (5) obj. -9.98281 iterations 3
Cbc0038I Pass  22: suminf.    2.16542 (13) obj. -9.98281 iterations 19
Cbc0038I Pass  23: suminf.    2.16542 (13) obj. -9.98281 iterations 2
Cbc0038I Pass  24: suminf.    0.92834 (5) obj. -9.98281 iterations 19
Cbc0038I Pass  25: suminf.    0.70643 (5) obj. -10.786 iterations 4
Cbc0038I Pass  26: suminf.    0.92834 (5) obj. -9.98281 iterations 5
Cbc0038I Pass  27: suminf.    2.32837 (12) obj. -9.98281 iterations 30
Cbc0038I Pass  28: suminf.    1.79369 (11) obj. -9.98281 iterations 6
Cbc0038I Pass  29: suminf.    0.80958 (5) obj. -9.98281 iterations 16
Cbc0038I Pass  30: suminf.    0.67189 (5) obj. -10.5336 iterations 2
Cbc0038I Pass  31: suminf.    1.11413 (5) obj. -9.98281 iterations 8
Cbc0038I Pass  32: suminf.    2.14653 (14) obj. -9.98281 iterations 17
Cbc0038I Pass  33: suminf.    1.85766 (12) obj. -9.98281 iterations 6
Cbc0038I Pass  34: suminf.    0.91074 (6) obj. -9.98281 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 46 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -5.6259 to -7.43805 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.8251
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.47955 (34) obj. -29.7782 iterations 0
Cbc0038I Pass  35: suminf.    2.47955 (34) obj. -29.7782 iterations 1
Cbc0038I Pass  36: suminf.    1.77169 (17) obj. -17.8251 iterations 25
Cbc0038I Pass  37: suminf.    1.77169 (17) obj. -17.8251 iterations 0
Cbc0038I Pass  38: suminf.    1.38325 (9) obj. -17.8251 iterations 34
Cbc0038I Pass  39: suminf.    1.26181 (10) obj. -17.8251 iterations 11
Cbc0038I Pass  40: suminf.    1.62637 (10) obj. -17.8251 iterations 17
Cbc0038I Pass  41: suminf.    1.40264 (6) obj. -17.8251 iterations 9
Cbc0038I Pass  42: suminf.    0.94658 (6) obj. -17.8251 iterations 4
Cbc0038I Pass  43: suminf.    1.69411 (8) obj. -17.8251 iterations 8
Cbc0038I Pass  44: suminf.    1.69411 (8) obj. -17.8251 iterations 1
Cbc0038I Pass  45: suminf.    2.50756 (9) obj. -17.8251 iterations 18
Cbc0038I Pass  46: suminf.    1.28756 (6) obj. -18.1069 iterations 8
Cbc0038I Pass  47: suminf.    1.02640 (5) obj. -17.8251 iterations 2
Cbc0038I Pass  48: suminf.    1.42845 (6) obj. -17.8251 iterations 9
Cbc0038I Pass  49: suminf.    0.99336 (5) obj. -17.8251 iterations 6
Cbc0038I Pass  50: suminf.    2.73166 (12) obj. -17.8251 iterations 18
Cbc0038I Pass  51: suminf.    1.81394 (12) obj. -17.8251 iterations 5
Cbc0038I Pass  52: suminf.    1.44772 (9) obj. -17.8251 iterations 25
Cbc0038I Pass  53: suminf.    1.21357 (6) obj. -17.8251 iterations 9
Cbc0038I Pass  54: suminf.    1.43033 (8) obj. -17.8251 iterations 10
Cbc0038I Pass  55: suminf.    2.18906 (15) obj. -17.8251 iterations 25
Cbc0038I Pass  56: suminf.    1.73889 (10) obj. -18.5154 iterations 7
Cbc0038I Pass  57: suminf.    1.32373 (10) obj. -17.8251 iterations 16
Cbc0038I Pass  58: suminf.    0.92509 (7) obj. -18.0738 iterations 6
Cbc0038I Pass  59: suminf.    2.63529 (18) obj. -17.8251 iterations 26
Cbc0038I Pass  60: suminf.    2.55786 (17) obj. -17.8251 iterations 8
Cbc0038I Pass  61: suminf.    2.24581 (14) obj. -17.8251 iterations 18
Cbc0038I Pass  62: suminf.    1.05366 (8) obj. -18.9452 iterations 6
Cbc0038I Pass  63: suminf.    1.32373 (10) obj. -17.8251 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 117 columns, reduced to 10 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.43805 - took 0.08 seconds
Cbc0012I Integer solution of -7.43805 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 99 rows 117 columns, reduced to 35 rows 44 columns
Cbc0031I 59 added rows had average density of 41.033898
Cbc0013I At root node, 59 cuts changed objective from -49.194116 to -22.366138 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20868 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2121 row cuts average 110.2 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 716 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1587 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 388 row cuts average 55.6 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.495 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.43805 best solution, best possible -22.366138 (2.71 seconds)
Cbc0012I Integer solution of -10.03666 found by rounding after 6347 iterations and 1 nodes (2.71 seconds)
Cbc0012I Integer solution of -10.6106 found by DiveCoefficient after 6413 iterations and 2 nodes (2.72 seconds)
Cbc0012I Integer solution of -10.61418 found by rounding after 6453 iterations and 14 nodes (2.74 seconds)
Cbc0012I Integer solution of -10.67473 found by DiveCoefficient after 6464 iterations and 16 nodes (2.75 seconds)
Cbc0010I After 23 nodes, 4 on tree, -10.67473 best solution, best possible -22.2508 (3.47 seconds)
Cbc0038I Full problem 99 rows 117 columns, reduced to 33 rows 52 columns
Cbc0010I After 87 nodes, 11 on tree, -10.67473 best solution, best possible -22.2508 (4.17 seconds)
Cbc0038I Full problem 99 rows 117 columns, reduced to 27 rows 43 columns
Cbc0001I Search completed - best objective -10.67473, took 12692 iterations and 136 nodes (4.44 seconds)
Cbc0032I Strong branching done 1426 times (15723 iterations), fathomed 4 nodes and fixed 7 variables
Cbc0035I Maximum depth 25, 178 variables fixed on reduced cost
Total time (CPU seconds):       3.72   (Wallclock seconds):       4.46

