Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 75 (-3) columns and 401 (-52) elements
Clp1000I sum of infeasibilities 5.65948e-05 - average 4.3872e-07, 6 fixed columns
Coin0506I Presolve 117 (-12) rows, 69 (-6) columns and 365 (-36) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 0.26472261 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Coin0511I After Postsolve, objective 39.477188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Coin0511I After Postsolve, objective 39.477188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.47718767 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.139%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.04568
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 17.1979 iterations 52
Cbc0038I Solution found of 17.1979
Cbc0038I Relaxing continuous gives 17.1979
Cbc0038I Rounding solution of -5.37063 is better than previous of 17.1979

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 52 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -5.37063 to -13.251 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.8737
Cbc0038I Pass   2: suminf.    2.99457 (18) obj. -15.8737 iterations 29
Cbc0038I Pass   3: suminf.    2.85021 (30) obj. -15.8737 iterations 10
Cbc0038I Pass   4: suminf.    1.48791 (6) obj. -15.8737 iterations 27
Cbc0038I Pass   5: suminf.    1.33048 (5) obj. -15.8737 iterations 2
Cbc0038I Pass   6: suminf.    1.79888 (6) obj. -15.8737 iterations 10
Cbc0038I Pass   7: suminf.    1.66820 (4) obj. -15.8737 iterations 6
Cbc0038I Pass   8: suminf.    1.62720 (4) obj. -15.8737 iterations 2
Cbc0038I Pass   9: suminf.    1.72370 (4) obj. -15.8737 iterations 2
Cbc0038I Pass  10: suminf.    1.62868 (6) obj. -15.8737 iterations 4
Cbc0038I Pass  11: suminf.    2.47272 (6) obj. -15.8737 iterations 5
Cbc0038I Pass  12: suminf.    1.99098 (6) obj. -15.8737 iterations 2
Cbc0038I Pass  13: suminf.    1.74064 (6) obj. -15.8737 iterations 3
Cbc0038I Pass  14: suminf.    2.05540 (8) obj. -15.8737 iterations 13
Cbc0038I Pass  15: suminf.    1.85185 (5) obj. -15.8737 iterations 7
Cbc0038I Pass  16: suminf.    1.85185 (5) obj. -15.8737 iterations 1
Cbc0038I Pass  17: suminf.    2.07475 (7) obj. -15.8737 iterations 7
Cbc0038I Pass  18: suminf.    2.07475 (7) obj. -15.8737 iterations 0
Cbc0038I Pass  19: suminf.    1.26904 (6) obj. -15.8737 iterations 8
Cbc0038I Pass  20: suminf.    0.88276 (6) obj. -15.8737 iterations 3
Cbc0038I Pass  21: suminf.    1.23243 (3) obj. -15.8737 iterations 7
Cbc0038I Pass  22: suminf.    1.23243 (3) obj. -15.8737 iterations 0
Cbc0038I Pass  23: suminf.    1.31801 (3) obj. -15.8737 iterations 1
Cbc0038I Pass  24: suminf.    3.01764 (11) obj. -15.8737 iterations 17
Cbc0038I Pass  25: suminf.    2.06602 (8) obj. -15.8737 iterations 13
Cbc0038I Pass  26: suminf.    2.00699 (6) obj. -15.8737 iterations 1
Cbc0038I Pass  27: suminf.    2.00699 (6) obj. -15.8737 iterations 1
Cbc0038I Pass  28: suminf.    2.03899 (6) obj. -15.8737 iterations 13
Cbc0038I Pass  29: suminf.    1.94576 (6) obj. -15.8737 iterations 2
Cbc0038I Pass  30: suminf.    2.18503 (5) obj. -15.8737 iterations 4
Cbc0038I Pass  31: suminf.    1.34530 (4) obj. -15.8737 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 82 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -13.251 to -13.6897 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.5944
Cbc0038I Pass  31: suminf.    3.88513 (18) obj. -20.5944 iterations 0
Cbc0038I Pass  32: suminf.    3.69784 (30) obj. -20.5944 iterations 10
Cbc0038I Pass  33: suminf.    2.27084 (6) obj. -20.5944 iterations 29
Cbc0038I Pass  34: suminf.    1.78788 (5) obj. -20.5944 iterations 5
Cbc0038I Pass  35: suminf.    1.12786 (5) obj. -20.5944 iterations 6
Cbc0038I Pass  36: suminf.    1.12786 (5) obj. -20.5944 iterations 0
Cbc0038I Pass  37: suminf.    1.82425 (6) obj. -20.5944 iterations 3
Cbc0038I Pass  38: suminf.    1.76165 (6) obj. -20.5944 iterations 3
Cbc0038I Pass  39: suminf.    2.71756 (7) obj. -20.5944 iterations 4
Cbc0038I Pass  40: suminf.    2.62738 (7) obj. -20.5944 iterations 2
Cbc0038I Pass  41: suminf.    2.47017 (7) obj. -20.5944 iterations 3
Cbc0038I Pass  42: suminf.    2.40656 (9) obj. -20.5944 iterations 3
Cbc0038I Pass  43: suminf.    2.21055 (6) obj. -20.5944 iterations 8
Cbc0038I Pass  44: suminf.    2.21055 (6) obj. -20.5944 iterations 0
Cbc0038I Pass  45: suminf.    1.57147 (5) obj. -20.5944 iterations 7
Cbc0038I Pass  46: suminf.    1.48420 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  47: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  48: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  49: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  50: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  51: suminf.    1.48420 (5) obj. -20.5944 iterations 1
Cbc0038I Pass  52: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  53: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  54: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  55: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  56: suminf.    1.48420 (5) obj. -20.5944 iterations 1
Cbc0038I Pass  57: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  58: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  59: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  60: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -13.6897 - took 0.09 seconds
Cbc0012I Integer solution of -13.6897 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 54 rows 34 columns
Cbc0031I 27 added rows had average density of 56.555556
Cbc0013I At root node, 27 cuts changed objective from -39.477188 to -32.146778 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9289 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1529 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 119 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.6897 best solution, best possible -32.146778 (0.69 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 6 rows 11 columns
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 40 columns
Cbc0001I Search completed - best objective -13.6897, took 10039 iterations and 166 nodes (1.13 seconds)
Cbc0032I Strong branching done 1430 times (21750 iterations), fathomed 18 nodes and fixed 66 variables
Cbc0035I Maximum depth 27, 241 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-59) rows, 114 (-38) columns and 1780 (-1523) elements
Clp1000I sum of infeasibilities 9.84048e-08 - average 1.03584e-09, 20 fixed columns
Coin0506I Presolve 79 (-16) rows, 94 (-20) columns and 1305 (-475) elements
Clp0006I 0  Obj 44.372581 Dual inf 6.8500932 (94)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.9287618 - largest nonzero change 2.0349356e-05 ( 0.0016756202%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 55.605606
Clp0000I Optimal - objective value 55.605606
Coin0511I After Postsolve, objective 55.605606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.605606
Clp0000I Optimal - objective value 55.605606
Clp0000I Optimal - objective value 55.605606
Clp0000I Optimal - objective value 55.605606
Coin0511I After Postsolve, objective 55.605606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.60560584 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 114 columns (114 integer (114 of which binary)) and 1783 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.74822
Cbc0038I Pass   1: suminf.    3.43852 (33) obj. -48.3818 iterations 16
Cbc0038I Pass   2: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass   3: suminf.    2.10380 (22) obj. -33.4598 iterations 11
Cbc0038I Solution found of 1.882
Cbc0038I Rounding solution of -3.118 is better than previous of 1.882

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 114 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -3.118 to -4.15156 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.76647
Cbc0038I Pass   4: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass   5: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass   6: suminf.    2.21967 (23) obj. -34.344 iterations 10
Cbc0038I Pass   7: suminf.    0.34347 (2) obj. -8.76647 iterations 36
Cbc0038I Pass   8: suminf.    0.31104 (2) obj. -8.76647 iterations 3
Cbc0038I Pass   9: suminf.    0.68635 (3) obj. -8.76647 iterations 4
Cbc0038I Pass  10: suminf.    0.54315 (3) obj. -8.76647 iterations 2
Cbc0038I Pass  11: suminf.    0.41075 (2) obj. -8.76647 iterations 7
Cbc0038I Pass  12: suminf.    0.18038 (2) obj. -8.76647 iterations 2
Cbc0038I Pass  13: suminf.    0.54647 (2) obj. -8.76647 iterations 5
Cbc0038I Pass  14: suminf.    0.54647 (2) obj. -8.76647 iterations 0
Cbc0038I Pass  15: suminf.    0.40463 (2) obj. -8.76647 iterations 3
Cbc0038I Pass  16: suminf.    1.47741 (12) obj. -18.392 iterations 42
Cbc0038I Pass  17: suminf.    1.21900 (11) obj. -19.227 iterations 2
Cbc0038I Pass  18: suminf.    0.51613 (3) obj. -8.76647 iterations 19
Cbc0038I Pass  19: suminf.    0.38136 (3) obj. -9.44035 iterations 2
Cbc0038I Pass  20: suminf.    0.60598 (3) obj. -8.76647 iterations 5
Cbc0038I Pass  21: suminf.    0.43868 (3) obj. -9.26837 iterations 3
Cbc0038I Pass  22: suminf.    1.93103 (15) obj. -8.76647 iterations 31
Cbc0038I Pass  23: suminf.    1.32220 (10) obj. -8.76647 iterations 12
Cbc0038I Pass  24: suminf.    1.09929 (6) obj. -8.76647 iterations 15
Cbc0038I Pass  25: suminf.    0.57354 (4) obj. -8.76647 iterations 11
Cbc0038I Pass  26: suminf.    1.09929 (6) obj. -8.76647 iterations 4
Cbc0038I Pass  27: suminf.    0.93079 (8) obj. -8.76647 iterations 23
Cbc0038I Pass  28: suminf.    0.89015 (7) obj. -8.76647 iterations 4
Cbc0038I Pass  29: suminf.    1.19459 (4) obj. -8.76647 iterations 17
Cbc0038I Pass  30: suminf.    0.75693 (4) obj. -8.76647 iterations 2
Cbc0038I Pass  31: suminf.    1.33129 (4) obj. -8.76647 iterations 3
Cbc0038I Pass  32: suminf.    0.79715 (5) obj. -8.76647 iterations 3
Cbc0038I Pass  33: suminf.    0.88225 (6) obj. -8.76647 iterations 15
Cbc0038I Rounding solution of -6.63658 is better than previous of -4.15156

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 114 columns, reduced to 24 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -6.63658 to -11.3049 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.104
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass  34: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass  35: suminf.    1.13683 (13) obj. -22.7644 iterations 22
Cbc0038I Pass  36: suminf.    0.60991 (10) obj. -19.104 iterations 25
Cbc0038I Pass  37: suminf.    0.54201 (9) obj. -19.104 iterations 2
Cbc0038I Pass  38: suminf.    0.99823 (7) obj. -19.104 iterations 13
Cbc0038I Pass  39: suminf.    0.91704 (7) obj. -19.104 iterations 4
Cbc0038I Pass  40: suminf.    2.24390 (14) obj. -19.104 iterations 17
Cbc0038I Pass  41: suminf.    1.63052 (11) obj. -19.104 iterations 13
Cbc0038I Pass  42: suminf.    0.97796 (9) obj. -20.683 iterations 4
Cbc0038I Pass  43: suminf.    0.90486 (10) obj. -19.104 iterations 16
Cbc0038I Pass  44: suminf.    0.87390 (12) obj. -19.104 iterations 3
Cbc0038I Pass  45: suminf.    1.03289 (8) obj. -19.104 iterations 12
Cbc0038I Pass  46: suminf.    0.80755 (8) obj. -19.104 iterations 2
Cbc0038I Pass  47: suminf.    2.31199 (9) obj. -19.104 iterations 10
Cbc0038I Pass  48: suminf.    2.08329 (9) obj. -19.104 iterations 1
Cbc0038I Pass  49: suminf.    1.09877 (8) obj. -19.104 iterations 8
Cbc0038I Pass  50: suminf.    2.09567 (10) obj. -19.104 iterations 13
Cbc0038I Pass  51: suminf.    1.26114 (9) obj. -19.104 iterations 3
Cbc0038I Pass  52: suminf.    1.04540 (9) obj. -19.104 iterations 1
Cbc0038I Pass  53: suminf.    1.00474 (7) obj. -19.104 iterations 9
Cbc0038I Pass  54: suminf.    0.96657 (7) obj. -19.1803 iterations 5
Cbc0038I Pass  55: suminf.    2.37762 (10) obj. -19.104 iterations 14
Cbc0038I Pass  56: suminf.    2.01908 (10) obj. -19.104 iterations 2
Cbc0038I Pass  57: suminf.    1.09877 (8) obj. -19.104 iterations 10
Cbc0038I Pass  58: suminf.    0.80755 (8) obj. -19.104 iterations 3
Cbc0038I Pass  59: suminf.    2.31199 (9) obj. -19.104 iterations 10
Cbc0038I Pass  60: suminf.    2.08329 (9) obj. -19.104 iterations 1
Cbc0038I Pass  61: suminf.    1.63771 (13) obj. -19.104 iterations 17
Cbc0038I Pass  62: suminf.    1.18863 (9) obj. -20.776 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 114 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -11.3049 - took 0.05 seconds
Cbc0012I Integer solution of -11.30491 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 95 rows 114 columns, reduced to 11 rows 14 columns
Cbc0031I 51 added rows had average density of 41.54902
Cbc0013I At root node, 51 cuts changed objective from -50.299728 to -23.120054 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19014 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2062 row cuts average 109.3 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 710 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1274 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 377 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 53 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.532 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.30491 best solution, best possible -23.120054 (2.50 seconds)
Cbc0004I Integer solution of -11.69012 found after 6035 iterations and 1 nodes (2.51 seconds)
Cbc0010I After 12 nodes, 7 on tree, -11.69012 best solution, best possible -22.111979 (3.21 seconds)
Cbc0038I Full problem 95 rows 114 columns, reduced to 46 rows 59 columns
Cbc0012I Integer solution of -13.68969 found by RINS after 8266 iterations and 43 nodes (3.65 seconds)
Cbc0010I After 60 nodes, 7 on tree, -13.68969 best solution, best possible -22.111979 (3.91 seconds)
Cbc0038I Full problem 95 rows 114 columns, reduced to 6 rows 13 columns
Cbc0001I Search completed - best objective -13.68969000000001, took 11724 iterations and 142 nodes (4.29 seconds)
Cbc0032I Strong branching done 1490 times (27541 iterations), fathomed 20 nodes and fixed 19 variables
Cbc0035I Maximum depth 19, 443 variables fixed on reduced cost
Total time (CPU seconds):       3.50   (Wallclock seconds):       4.31

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 75 (-3) columns and 401 (-52) elements
Clp1000I sum of infeasibilities 5.65948e-05 - average 4.3872e-07, 6 fixed columns
Coin0506I Presolve 117 (-12) rows, 69 (-6) columns and 365 (-36) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 0.26472261 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Coin0511I After Postsolve, objective 39.477188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Coin0511I After Postsolve, objective 39.477188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.47718767 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.139%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.04568
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 17.1979 iterations 52
Cbc0038I Solution found of 17.1979
Cbc0038I Relaxing continuous gives 17.1979
Cbc0038I Rounding solution of -5.37063 is better than previous of 17.1979

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 52 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -5.37063 to -13.251 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.8737
Cbc0038I Pass   2: suminf.    2.99457 (18) obj. -15.8737 iterations 29
Cbc0038I Pass   3: suminf.    2.85021 (30) obj. -15.8737 iterations 10
Cbc0038I Pass   4: suminf.    1.48791 (6) obj. -15.8737 iterations 27
Cbc0038I Pass   5: suminf.    1.33048 (5) obj. -15.8737 iterations 2
Cbc0038I Pass   6: suminf.    1.79888 (6) obj. -15.8737 iterations 10
Cbc0038I Pass   7: suminf.    1.66820 (4) obj. -15.8737 iterations 6
Cbc0038I Pass   8: suminf.    1.62720 (4) obj. -15.8737 iterations 2
Cbc0038I Pass   9: suminf.    1.72370 (4) obj. -15.8737 iterations 2
Cbc0038I Pass  10: suminf.    1.62868 (6) obj. -15.8737 iterations 4
Cbc0038I Pass  11: suminf.    2.47272 (6) obj. -15.8737 iterations 5
Cbc0038I Pass  12: suminf.    1.99098 (6) obj. -15.8737 iterations 2
Cbc0038I Pass  13: suminf.    1.74064 (6) obj. -15.8737 iterations 3
Cbc0038I Pass  14: suminf.    2.05540 (8) obj. -15.8737 iterations 13
Cbc0038I Pass  15: suminf.    1.85185 (5) obj. -15.8737 iterations 7
Cbc0038I Pass  16: suminf.    1.85185 (5) obj. -15.8737 iterations 1
Cbc0038I Pass  17: suminf.    2.07475 (7) obj. -15.8737 iterations 7
Cbc0038I Pass  18: suminf.    2.07475 (7) obj. -15.8737 iterations 0
Cbc0038I Pass  19: suminf.    1.26904 (6) obj. -15.8737 iterations 8
Cbc0038I Pass  20: suminf.    0.88276 (6) obj. -15.8737 iterations 3
Cbc0038I Pass  21: suminf.    1.23243 (3) obj. -15.8737 iterations 7
Cbc0038I Pass  22: suminf.    1.23243 (3) obj. -15.8737 iterations 0
Cbc0038I Pass  23: suminf.    1.31801 (3) obj. -15.8737 iterations 1
Cbc0038I Pass  24: suminf.    3.01764 (11) obj. -15.8737 iterations 17
Cbc0038I Pass  25: suminf.    2.06602 (8) obj. -15.8737 iterations 13
Cbc0038I Pass  26: suminf.    2.00699 (6) obj. -15.8737 iterations 1
Cbc0038I Pass  27: suminf.    2.00699 (6) obj. -15.8737 iterations 1
Cbc0038I Pass  28: suminf.    2.03899 (6) obj. -15.8737 iterations 13
Cbc0038I Pass  29: suminf.    1.94576 (6) obj. -15.8737 iterations 2
Cbc0038I Pass  30: suminf.    2.18503 (5) obj. -15.8737 iterations 4
Cbc0038I Pass  31: suminf.    1.34530 (4) obj. -15.8737 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 82 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -13.251 to -13.6897 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.5944
Cbc0038I Pass  31: suminf.    3.88513 (18) obj. -20.5944 iterations 0
Cbc0038I Pass  32: suminf.    3.69784 (30) obj. -20.5944 iterations 10
Cbc0038I Pass  33: suminf.    2.27084 (6) obj. -20.5944 iterations 29
Cbc0038I Pass  34: suminf.    1.78788 (5) obj. -20.5944 iterations 5
Cbc0038I Pass  35: suminf.    1.12786 (5) obj. -20.5944 iterations 6
Cbc0038I Pass  36: suminf.    1.12786 (5) obj. -20.5944 iterations 0
Cbc0038I Pass  37: suminf.    1.82425 (6) obj. -20.5944 iterations 3
Cbc0038I Pass  38: suminf.    1.76165 (6) obj. -20.5944 iterations 3
Cbc0038I Pass  39: suminf.    2.71756 (7) obj. -20.5944 iterations 4
Cbc0038I Pass  40: suminf.    2.62738 (7) obj. -20.5944 iterations 2
Cbc0038I Pass  41: suminf.    2.47017 (7) obj. -20.5944 iterations 3
Cbc0038I Pass  42: suminf.    2.40656 (9) obj. -20.5944 iterations 3
Cbc0038I Pass  43: suminf.    2.21055 (6) obj. -20.5944 iterations 8
Cbc0038I Pass  44: suminf.    2.21055 (6) obj. -20.5944 iterations 0
Cbc0038I Pass  45: suminf.    1.57147 (5) obj. -20.5944 iterations 7
Cbc0038I Pass  46: suminf.    1.48420 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  47: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  48: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  49: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  50: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  51: suminf.    1.48420 (5) obj. -20.5944 iterations 1
Cbc0038I Pass  52: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  53: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  54: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  55: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  56: suminf.    1.48420 (5) obj. -20.5944 iterations 1
Cbc0038I Pass  57: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  58: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  59: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  60: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -13.6897 - took 0.09 seconds
Cbc0012I Integer solution of -13.6897 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 54 rows 34 columns
Cbc0031I 27 added rows had average density of 56.555556
Cbc0013I At root node, 27 cuts changed objective from -39.477188 to -32.146778 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9289 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1529 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 119 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.6897 best solution, best possible -32.146778 (0.70 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 6 rows 11 columns
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 40 columns
Cbc0001I Search completed - best objective -13.6897, took 10039 iterations and 166 nodes (1.15 seconds)
Cbc0032I Strong branching done 1430 times (21750 iterations), fathomed 18 nodes and fixed 66 variables
Cbc0035I Maximum depth 27, 241 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 114 (-39) columns and 1780 (-1524) elements
Clp1000I sum of infeasibilities 9.84048e-08 - average 1.03584e-09, 20 fixed columns
Coin0506I Presolve 79 (-16) rows, 94 (-20) columns and 1305 (-475) elements
Clp0006I 0  Obj 44.372581 Dual inf 6.8500932 (94)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.9287618 - largest nonzero change 2.0349356e-05 ( 0.0016756202%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 55.605606
Clp0000I Optimal - objective value 55.605606
Coin0511I After Postsolve, objective 55.605606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.605606
Clp0000I Optimal - objective value 55.605606
Clp0000I Optimal - objective value 55.605606
Clp0000I Optimal - objective value 55.605606
Coin0511I After Postsolve, objective 55.605606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.60560584 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 114 columns (114 integer (114 of which binary)) and 1783 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.74822
Cbc0038I Pass   1: suminf.    3.43852 (33) obj. -48.3818 iterations 16
Cbc0038I Pass   2: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass   3: suminf.    2.10380 (22) obj. -33.4598 iterations 11
Cbc0038I Solution found of 1.882
Cbc0038I Rounding solution of -3.118 is better than previous of 1.882

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 114 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -3.118 to -4.15156 (0.02 seconds)
Cbc0038I Round again with cutoff of -8.76647
Cbc0038I Pass   4: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass   5: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass   6: suminf.    2.21967 (23) obj. -34.344 iterations 10
Cbc0038I Pass   7: suminf.    0.34347 (2) obj. -8.76647 iterations 36
Cbc0038I Pass   8: suminf.    0.31104 (2) obj. -8.76647 iterations 3
Cbc0038I Pass   9: suminf.    0.68635 (3) obj. -8.76647 iterations 4
Cbc0038I Pass  10: suminf.    0.54315 (3) obj. -8.76647 iterations 2
Cbc0038I Pass  11: suminf.    0.41075 (2) obj. -8.76647 iterations 7
Cbc0038I Pass  12: suminf.    0.18038 (2) obj. -8.76647 iterations 2
Cbc0038I Pass  13: suminf.    0.54647 (2) obj. -8.76647 iterations 5
Cbc0038I Pass  14: suminf.    0.54647 (2) obj. -8.76647 iterations 0
Cbc0038I Pass  15: suminf.    0.40463 (2) obj. -8.76647 iterations 3
Cbc0038I Pass  16: suminf.    1.47741 (12) obj. -18.392 iterations 42
Cbc0038I Pass  17: suminf.    1.21900 (11) obj. -19.227 iterations 2
Cbc0038I Pass  18: suminf.    0.51613 (3) obj. -8.76647 iterations 19
Cbc0038I Pass  19: suminf.    0.38136 (3) obj. -9.44035 iterations 2
Cbc0038I Pass  20: suminf.    0.60598 (3) obj. -8.76647 iterations 5
Cbc0038I Pass  21: suminf.    0.43868 (3) obj. -9.26837 iterations 3
Cbc0038I Pass  22: suminf.    1.93103 (15) obj. -8.76647 iterations 31
Cbc0038I Pass  23: suminf.    1.32220 (10) obj. -8.76647 iterations 12
Cbc0038I Pass  24: suminf.    1.09929 (6) obj. -8.76647 iterations 15
Cbc0038I Pass  25: suminf.    0.57354 (4) obj. -8.76647 iterations 11
Cbc0038I Pass  26: suminf.    1.09929 (6) obj. -8.76647 iterations 4
Cbc0038I Pass  27: suminf.    0.93079 (8) obj. -8.76647 iterations 23
Cbc0038I Pass  28: suminf.    0.89015 (7) obj. -8.76647 iterations 4
Cbc0038I Pass  29: suminf.    1.19459 (4) obj. -8.76647 iterations 17
Cbc0038I Pass  30: suminf.    0.75693 (4) obj. -8.76647 iterations 2
Cbc0038I Pass  31: suminf.    1.33129 (4) obj. -8.76647 iterations 3
Cbc0038I Pass  32: suminf.    0.79715 (5) obj. -8.76647 iterations 3
Cbc0038I Pass  33: suminf.    0.88225 (6) obj. -8.76647 iterations 15
Cbc0038I Rounding solution of -6.63658 is better than previous of -4.15156

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 114 columns, reduced to 24 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -6.63658 to -11.3049 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.104
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass  34: suminf.    3.43852 (33) obj. -48.3818 iterations 0
Cbc0038I Pass  35: suminf.    1.13683 (13) obj. -22.7644 iterations 22
Cbc0038I Pass  36: suminf.    0.60991 (10) obj. -19.104 iterations 25
Cbc0038I Pass  37: suminf.    0.54201 (9) obj. -19.104 iterations 2
Cbc0038I Pass  38: suminf.    0.99823 (7) obj. -19.104 iterations 13
Cbc0038I Pass  39: suminf.    0.91704 (7) obj. -19.104 iterations 4
Cbc0038I Pass  40: suminf.    2.24390 (14) obj. -19.104 iterations 17
Cbc0038I Pass  41: suminf.    1.63052 (11) obj. -19.104 iterations 13
Cbc0038I Pass  42: suminf.    0.97796 (9) obj. -20.683 iterations 4
Cbc0038I Pass  43: suminf.    0.90486 (10) obj. -19.104 iterations 16
Cbc0038I Pass  44: suminf.    0.87390 (12) obj. -19.104 iterations 3
Cbc0038I Pass  45: suminf.    1.03289 (8) obj. -19.104 iterations 12
Cbc0038I Pass  46: suminf.    0.80755 (8) obj. -19.104 iterations 2
Cbc0038I Pass  47: suminf.    2.31199 (9) obj. -19.104 iterations 10
Cbc0038I Pass  48: suminf.    2.08329 (9) obj. -19.104 iterations 1
Cbc0038I Pass  49: suminf.    1.09877 (8) obj. -19.104 iterations 8
Cbc0038I Pass  50: suminf.    2.09567 (10) obj. -19.104 iterations 13
Cbc0038I Pass  51: suminf.    1.26114 (9) obj. -19.104 iterations 3
Cbc0038I Pass  52: suminf.    1.04540 (9) obj. -19.104 iterations 1
Cbc0038I Pass  53: suminf.    1.00474 (7) obj. -19.104 iterations 9
Cbc0038I Pass  54: suminf.    0.96657 (7) obj. -19.1803 iterations 5
Cbc0038I Pass  55: suminf.    2.37762 (10) obj. -19.104 iterations 14
Cbc0038I Pass  56: suminf.    2.01908 (10) obj. -19.104 iterations 2
Cbc0038I Pass  57: suminf.    1.09877 (8) obj. -19.104 iterations 10
Cbc0038I Pass  58: suminf.    0.80755 (8) obj. -19.104 iterations 3
Cbc0038I Pass  59: suminf.    2.31199 (9) obj. -19.104 iterations 10
Cbc0038I Pass  60: suminf.    2.08329 (9) obj. -19.104 iterations 1
Cbc0038I Pass  61: suminf.    1.63771 (13) obj. -19.104 iterations 17
Cbc0038I Pass  62: suminf.    1.18863 (9) obj. -20.776 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 114 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -11.3049 - took 0.05 seconds
Cbc0012I Integer solution of -11.30491 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 95 rows 114 columns, reduced to 11 rows 14 columns
Cbc0031I 51 added rows had average density of 41.54902
Cbc0013I At root node, 51 cuts changed objective from -50.299728 to -23.120054 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19014 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2062 row cuts average 109.3 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 710 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1274 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 377 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 53 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.528 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.30491 best solution, best possible -23.120054 (2.47 seconds)
Cbc0004I Integer solution of -11.69012 found after 6035 iterations and 1 nodes (2.47 seconds)
Cbc0010I After 12 nodes, 7 on tree, -11.69012 best solution, best possible -22.111979 (3.17 seconds)
Cbc0038I Full problem 95 rows 114 columns, reduced to 46 rows 59 columns
Cbc0012I Integer solution of -13.68969 found by RINS after 8266 iterations and 43 nodes (3.58 seconds)
Cbc0010I After 70 nodes, 6 on tree, -13.68969 best solution, best possible -22.111979 (3.88 seconds)
Cbc0038I Full problem 95 rows 114 columns, reduced to 6 rows 13 columns
Cbc0001I Search completed - best objective -13.68969000000001, took 11724 iterations and 142 nodes (4.16 seconds)
Cbc0032I Strong branching done 1490 times (27541 iterations), fathomed 20 nodes and fixed 19 variables
Cbc0035I Maximum depth 19, 443 variables fixed on reduced cost
Total time (CPU seconds):       3.42   (Wallclock seconds):       4.17

