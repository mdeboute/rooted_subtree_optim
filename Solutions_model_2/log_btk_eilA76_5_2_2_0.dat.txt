Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 2.49501e-05 - average 1.82118e-07, 29 fixed columns
Coin0506I Presolve 79 (-58) rows, 46 (-30) columns and 244 (-174) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.29829098 - largest nonzero change 0 ( 0%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value 68.577926
Clp0000I Optimal - objective value 68.577926
Coin0511I After Postsolve, objective 68.577926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24612527 - largest nonzero change 0 ( 0%) - largest zero change 2.9525394e-05
Clp0000I Optimal - objective value 68.577926
Clp0000I Optimal - objective value 68.577926
Clp0000I Optimal - objective value 68.577926
Coin0511I After Postsolve, objective 68.577926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.57792623 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.78317
Cbc0038I Solution found of -8.14083
Cbc0038I Relaxing continuous gives -8.14083
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -8.14083 to -40.8838 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.6533
Cbc0038I Pass   1: suminf.    2.13291 (7) obj. -43.6533 iterations 22
Cbc0038I Pass   2: suminf.    0.75330 (4) obj. -43.6533 iterations 11
Cbc0038I Pass   3: suminf.    0.61574 (3) obj. -43.6533 iterations 2
Cbc0038I Pass   4: suminf.    1.32907 (4) obj. -43.6533 iterations 5
Cbc0038I Pass   5: suminf.    0.84312 (4) obj. -43.6533 iterations 2
Cbc0038I Pass   6: suminf.    0.69944 (2) obj. -43.6533 iterations 4
Cbc0038I Pass   7: suminf.    0.99481 (3) obj. -43.6533 iterations 4
Cbc0038I Pass   8: suminf.    0.81820 (3) obj. -43.6533 iterations 2
Cbc0038I Pass   9: suminf.    2.26214 (7) obj. -43.6533 iterations 16
Cbc0038I Pass  10: suminf.    0.65703 (4) obj. -43.6533 iterations 8
Cbc0038I Pass  11: suminf.    1.40412 (4) obj. -43.6533 iterations 7
Cbc0038I Pass  12: suminf.    1.39518 (4) obj. -43.6533 iterations 1
Cbc0038I Pass  13: suminf.    0.37738 (3) obj. -43.6533 iterations 8
Cbc0038I Pass  14: suminf.    0.33745 (2) obj. -43.6533 iterations 1
Cbc0038I Pass  15: suminf.    1.18397 (4) obj. -43.6533 iterations 4
Cbc0038I Pass  16: suminf.    1.12898 (4) obj. -43.6533 iterations 6
Cbc0038I Pass  17: suminf.    0.88741 (4) obj. -43.6533 iterations 2
Cbc0038I Pass  18: suminf.    0.45923 (2) obj. -43.6533 iterations 3
Cbc0038I Pass  19: suminf.    1.25855 (4) obj. -43.6533 iterations 8
Cbc0038I Pass  20: suminf.    1.07983 (3) obj. -43.6533 iterations 6
Cbc0038I Pass  21: suminf.    0.98318 (3) obj. -43.6533 iterations 2
Cbc0038I Pass  22: suminf.    0.76326 (3) obj. -43.6533 iterations 6
Cbc0038I Pass  23: suminf.    0.62442 (3) obj. -43.6533 iterations 1
Cbc0038I Pass  24: suminf.    1.83500 (6) obj. -43.6533 iterations 14
Cbc0038I Pass  25: suminf.    0.49703 (2) obj. -43.6533 iterations 12
Cbc0038I Pass  26: suminf.    0.70377 (2) obj. -43.6533 iterations 1
Cbc0038I Pass  27: suminf.    0.70423 (3) obj. -43.6533 iterations 2
Cbc0038I Pass  28: suminf.    0.87217 (3) obj. -43.6533 iterations 9
Cbc0038I Pass  29: suminf.    1.08511 (3) obj. -43.6533 iterations 5
Cbc0038I Pass  30: suminf.    1.48388 (6) obj. -43.6533 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 41 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.8838 - took 0.03 seconds
Cbc0012I Integer solution of -40.883816 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 22 rows 16 columns
Cbc0031I 12 added rows had average density of 46.25
Cbc0013I At root node, 12 cuts changed objective from -68.577926 to -56.060933 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4575 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 869 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 87 row cuts average 68.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0004I Integer solution of -40.986206 found after 4156 iterations and 20 nodes (0.46 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 17 rows 13 columns
Cbc0001I Search completed - best objective -40.9862057, took 4874 iterations and 44 nodes (0.52 seconds)
Cbc0032I Strong branching done 480 times (6114 iterations), fathomed 4 nodes and fixed 38 variables
Cbc0035I Maximum depth 13, 155 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 117 (-35) columns and 2004 (-1299) elements
Clp1000I sum of infeasibilities 2.63368e-07 - average 2.53238e-09, 66 fixed columns
Coin0506I Presolve 37 (-67) rows, 51 (-66) columns and 171 (-1833) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 0.25540043 - largest nonzero change 2.1024929e-05 ( 0.0018056464%) - largest zero change 2.9745158e-05
Clp0000I Optimal - objective value 28.351758
Clp0000I Optimal - objective value 28.351758
Coin0511I After Postsolve, objective 28.351758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.616896 - largest nonzero change 1.0082245e-05 ( 0.00060188215%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 86.539309
Clp0000I Optimal - objective value 86.539309
Clp0000I Optimal - objective value 86.539309
Coin0511I After Postsolve, objective 86.539309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.53930928 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 2012 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 3.04505
Cbc0038I Pass   1: suminf.    2.06054 (29) obj. -68.588 iterations 13
Cbc0038I Solution found of -12.5626
Cbc0038I Rounding solution of -30.631 is better than previous of -12.5626

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -34.615
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.06054 (29) obj. -68.588 iterations 0
Cbc0038I Pass   3: suminf.    0.70474 (17) obj. -34.615 iterations 20
Cbc0038I Pass   4: suminf.    0.33492 (4) obj. -34.615 iterations 19
Cbc0038I Pass   5: suminf.    0.09677 (1) obj. -41.3085 iterations 4
Cbc0038I Pass   6: suminf.    0.48522 (1) obj. -34.615 iterations 1
Cbc0038I Pass   7: suminf.    0.90554 (8) obj. -34.615 iterations 24
Cbc0038I Pass   8: suminf.    0.90554 (8) obj. -34.615 iterations 4
Cbc0038I Pass   9: suminf.    0.77013 (2) obj. -34.615 iterations 8
Cbc0038I Pass  10: suminf.    0.72944 (4) obj. -34.615 iterations 3
Cbc0038I Pass  11: suminf.    0.77013 (2) obj. -34.615 iterations 2
Cbc0038I Pass  12: suminf.    1.35442 (9) obj. -34.615 iterations 35
Cbc0038I Pass  13: suminf.    0.80256 (8) obj. -35.7986 iterations 10
Cbc0038I Pass  14: suminf.    1.54540 (13) obj. -34.615 iterations 19
Cbc0038I Pass  15: suminf.    0.91891 (3) obj. -34.615 iterations 9
Cbc0038I Pass  16: suminf.    0.77565 (4) obj. -34.615 iterations 4
Cbc0038I Pass  17: suminf.    0.82381 (2) obj. -34.615 iterations 4
Cbc0038I Pass  18: suminf.    0.75720 (3) obj. -34.615 iterations 4
Cbc0038I Pass  19: suminf.    1.09591 (10) obj. -39.8945 iterations 23
Cbc0038I Pass  20: suminf.    0.43476 (10) obj. -34.615 iterations 6
Cbc0038I Pass  21: suminf.    0.60117 (4) obj. -34.615 iterations 11
Cbc0038I Pass  22: suminf.    0.58507 (13) obj. -34.615 iterations 12
Cbc0038I Pass  23: suminf.    0.88856 (5) obj. -34.615 iterations 11
Cbc0038I Pass  24: suminf.    0.58364 (3) obj. -34.615 iterations 7
Cbc0038I Pass  25: suminf.    1.32404 (3) obj. -34.615 iterations 6
Cbc0038I Pass  26: suminf.    1.32404 (3) obj. -34.615 iterations 2
Cbc0038I Pass  27: suminf.    0.84476 (2) obj. -34.615 iterations 9
Cbc0038I Pass  28: suminf.    0.70854 (2) obj. -35.865 iterations 2
Cbc0038I Pass  29: suminf.    0.84476 (2) obj. -34.615 iterations 3
Cbc0038I Pass  30: suminf.    1.81919 (9) obj. -34.615 iterations 19
Cbc0038I Pass  31: suminf.    1.27407 (10) obj. -34.615 iterations 12
Cbc0038I Rounding solution of -36.5744 is better than previous of -30.631

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 40 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -36.5744 to -39.3859 (0.08 seconds)
Cbc0038I Round again with cutoff of -45.6028
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.06054 (29) obj. -68.588 iterations 0
Cbc0038I Pass  32: suminf.    0.98618 (17) obj. -45.6028 iterations 46
Cbc0038I Pass  33: suminf.    0.50215 (5) obj. -45.6028 iterations 7
Cbc0038I Pass  34: suminf.    0.27082 (5) obj. -46.0654 iterations 7
Cbc0038I Pass  35: suminf.    0.88311 (15) obj. -45.6028 iterations 11
Cbc0038I Pass  36: suminf.    0.50889 (4) obj. -45.6028 iterations 7
Cbc0038I Pass  37: suminf.    0.88311 (15) obj. -45.6028 iterations 7
Cbc0038I Pass  38: suminf.    0.53524 (4) obj. -45.6028 iterations 7
Cbc0038I Pass  39: suminf.    0.88311 (15) obj. -45.6028 iterations 19
Cbc0038I Pass  40: suminf.    0.82899 (12) obj. -45.6028 iterations 14
Cbc0038I Pass  41: suminf.    0.69150 (11) obj. -45.6028 iterations 7
Cbc0038I Pass  42: suminf.    1.52479 (8) obj. -45.6028 iterations 13
Cbc0038I Pass  43: suminf.    1.06049 (5) obj. -45.6028 iterations 5
Cbc0038I Pass  44: suminf.    1.52479 (7) obj. -45.6028 iterations 9
Cbc0038I Pass  45: suminf.    2.54067 (13) obj. -45.6028 iterations 16
Cbc0038I Pass  46: suminf.    2.20692 (13) obj. -45.6028 iterations 5
Cbc0038I Pass  47: suminf.    0.90191 (13) obj. -45.6028 iterations 2
Cbc0038I Pass  48: suminf.    0.77328 (10) obj. -45.6028 iterations 10
Cbc0038I Pass  49: suminf.    1.49641 (7) obj. -45.6028 iterations 15
Cbc0038I Pass  50: suminf.    0.30589 (4) obj. -45.8903 iterations 8
Cbc0038I Pass  51: suminf.    1.08877 (15) obj. -45.6028 iterations 11
Cbc0038I Pass  52: suminf.    0.44965 (4) obj. -45.6028 iterations 7
Cbc0038I Pass  53: suminf.    1.52341 (18) obj. -45.6028 iterations 21
Cbc0038I Pass  54: suminf.    1.13844 (11) obj. -45.6028 iterations 9
Cbc0038I Pass  55: suminf.    0.68345 (10) obj. -46.5127 iterations 10
Cbc0038I Pass  56: suminf.    1.46118 (14) obj. -45.6028 iterations 21
Cbc0038I Pass  57: suminf.    1.35727 (14) obj. -45.6028 iterations 4
Cbc0038I Pass  58: suminf.    2.10649 (14) obj. -45.6028 iterations 22
Cbc0038I Pass  59: suminf.    1.70570 (14) obj. -45.6028 iterations 5
Cbc0038I Pass  60: suminf.    1.57369 (15) obj. -45.6028 iterations 9
Cbc0038I Rounding solution of -40.6846 is better than previous of -39.3859

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 36 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -53.0629
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    2.06054 (29) obj. -68.588 iterations 0
Cbc0038I Pass  61: suminf.    1.13296 (16) obj. -53.0629 iterations 26
Cbc0038I Pass  62: suminf.    0.96389 (16) obj. -57.3089 iterations 2
Cbc0038I Pass  63: suminf.    1.45661 (22) obj. -53.0629 iterations 26
Cbc0038I Pass  64: suminf.    1.46214 (17) obj. -53.0629 iterations 2
Cbc0038I Pass  65: suminf.    1.62760 (13) obj. -53.0629 iterations 20
Cbc0038I Pass  66: suminf.    1.60396 (23) obj. -53.0629 iterations 7
Cbc0038I Pass  67: suminf.    1.43686 (19) obj. -53.0629 iterations 13
Cbc0038I Pass  68: suminf.    1.43686 (19) obj. -53.0629 iterations 1
Cbc0038I Pass  69: suminf.    2.05065 (19) obj. -53.0629 iterations 11
Cbc0038I Pass  70: suminf.    1.89517 (17) obj. -53.0629 iterations 3
Cbc0038I Pass  71: suminf.    1.29144 (18) obj. -53.0629 iterations 5
Cbc0038I Pass  72: suminf.    2.05065 (19) obj. -53.0629 iterations 12
Cbc0038I Pass  73: suminf.    1.65085 (19) obj. -53.0629 iterations 27
Cbc0038I Pass  74: suminf.    1.61295 (14) obj. -53.0629 iterations 10
Cbc0038I Pass  75: suminf.    1.70997 (17) obj. -53.0629 iterations 18
Cbc0038I Pass  76: suminf.    1.68776 (23) obj. -53.0629 iterations 6
Cbc0038I Pass  77: suminf.    1.43686 (19) obj. -53.0629 iterations 12
Cbc0038I Pass  78: suminf.    1.43686 (19) obj. -53.0629 iterations 1
Cbc0038I Pass  79: suminf.    2.05065 (19) obj. -53.0629 iterations 9
Cbc0038I Pass  80: suminf.    1.89517 (17) obj. -53.0629 iterations 3
Cbc0038I Pass  81: suminf.    1.29144 (18) obj. -53.0629 iterations 5
Cbc0038I Pass  82: suminf.    2.05065 (19) obj. -53.0629 iterations 10
Cbc0038I Pass  83: suminf.    1.98270 (19) obj. -53.0629 iterations 9
Cbc0038I Pass  84: suminf.    1.82988 (16) obj. -53.0629 iterations 6
Cbc0038I Pass  85: suminf.    1.25186 (17) obj. -53.0629 iterations 7
Cbc0038I Pass  86: suminf.    1.90722 (19) obj. -53.0629 iterations 14
Cbc0038I Pass  87: suminf.    1.86198 (23) obj. -53.0629 iterations 4
Cbc0038I Pass  88: suminf.    1.36898 (16) obj. -53.0629 iterations 4
Cbc0038I Pass  89: suminf.    1.20482 (17) obj. -53.0629 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 38 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -40.6846 - took 0.11 seconds
Cbc0012I Integer solution of -40.684596 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 8 rows 9 columns
Cbc0031I 46 added rows had average density of 30.108696
Cbc0013I At root node, 46 cuts changed objective from -70.469895 to -48.222718 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 949 row cuts average 6.2 elements, 7 column cuts (13 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 39 row cuts average 77.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 239 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 310 row cuts average 70.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -40.684596 best solution, best possible -48.222718 (0.42 seconds)
Cbc0012I Integer solution of -40.883816 found by DiveCoefficient after 585 iterations and 4 nodes (0.71 seconds)
Cbc0010I After 21 nodes, 8 on tree, -40.883816 best solution, best possible -48.222718 (1.14 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 9 rows 11 columns
Cbc0038I Full problem 150 rows 117 columns, reduced to 84 rows 98 columns
Cbc0044I Reduced cost fixing - 84 rows, 98 columns - restarting search
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.65802
Cbc0038I Pass   1: suminf.    2.38439 (27) obj. -67.7503 iterations 13
Cbc0038I Pass   2: suminf.    0.71271 (12) obj. -43.017 iterations 12
Cbc0038I Pass   3: suminf.    0.41848 (4) obj. -40.8839 iterations 13
Cbc0038I Pass   4: suminf.    0.24593 (4) obj. -44.1594 iterations 1
Cbc0038I Pass   5: suminf.    0.12329 (1) obj. -40.8839 iterations 4
Cbc0038I Pass   6: suminf.    0.09677 (1) obj. -41.3085 iterations 1
Cbc0038I Pass   7: suminf.    1.37955 (7) obj. -40.8839 iterations 18
Cbc0038I Pass   8: suminf.    0.77031 (5) obj. -41.597 iterations 3
Cbc0038I Pass   9: suminf.    1.20411 (3) obj. -40.8839 iterations 14
Cbc0038I Pass  10: suminf.    0.91829 (2) obj. -41.5077 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 98 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (1.70 seconds)
Cbc0038I Full problem 85 rows 98 columns, reduced to 85 rows 98 columns
Cbc0038I After 1.78 seconds - Feasibility pump exiting with objective of -40.8838 - took 0.08 seconds
Cbc0031I 41 added rows had average density of 26.97561
Cbc0013I At root node, 41 cuts changed objective from -69.348156 to -48.148022 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 860 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 66.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 74 row cuts average 20.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -48.101229 (2.03 seconds)
Cbc0012I Integer solution of -40.986206 found by rounding after 1900 iterations and 70 nodes (2.67 seconds)
Cbc0038I Full problem 84 rows 98 columns, reduced to 2 rows 4 columns
Cbc0038I Full problem 84 rows 98 columns, reduced to 50 rows 55 columns
Cbc0010I After 100 nodes, 9 on tree, -40.986206 best solution, best possible -48.101229 (3.05 seconds)
Cbc0001I Search completed - best objective -40.9862057, took 4700 iterations and 184 nodes (3.83 seconds)
Cbc0032I Strong branching done 1892 times (23791 iterations), fathomed 19 nodes and fixed 54 variables
Cbc0035I Maximum depth 14, 514 variables fixed on reduced cost
Cbc0038I Probing was tried 167 times and created 1648 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Cbc0038I Gomory was tried 136 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I Knapsack was tried 14 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I OddWheel was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I MixedIntegerRounding2 was tried 136 times and created 1040 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Cbc0038I FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 136 times and created 217 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
Cbc0038I ZeroHalf was tried 136 times and created 357 cuts of which 0 were active after adding rounds of cuts (0.564 seconds)
Cbc0038I Stored from first was tried 136 times and created 278 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -40.986206 found by Reduced search after 6550 iterations and 234 nodes (3.83 seconds)
Cbc0001I Search completed - best objective -40.9862057, took 6550 iterations and 234 nodes (3.83 seconds)
Cbc0032I Strong branching done 640 times (9511 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 28, 119 variables fixed on reduced cost
Total time (CPU seconds):       2.57   (Wallclock seconds):       3.84

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 2.49501e-05 - average 1.82118e-07, 29 fixed columns
Coin0506I Presolve 79 (-58) rows, 46 (-30) columns and 244 (-174) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.29829098 - largest nonzero change 0 ( 0%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value 68.577926
Clp0000I Optimal - objective value 68.577926
Coin0511I After Postsolve, objective 68.577926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24612527 - largest nonzero change 0 ( 0%) - largest zero change 2.9525394e-05
Clp0000I Optimal - objective value 68.577926
Clp0000I Optimal - objective value 68.577926
Clp0000I Optimal - objective value 68.577926
Coin0511I After Postsolve, objective 68.577926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.57792623 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.78317
Cbc0038I Solution found of -8.14083
Cbc0038I Relaxing continuous gives -8.14083
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -8.14083 to -40.8838 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.6533
Cbc0038I Pass   1: suminf.    2.13291 (7) obj. -43.6533 iterations 22
Cbc0038I Pass   2: suminf.    0.75330 (4) obj. -43.6533 iterations 11
Cbc0038I Pass   3: suminf.    0.61574 (3) obj. -43.6533 iterations 2
Cbc0038I Pass   4: suminf.    1.32907 (4) obj. -43.6533 iterations 5
Cbc0038I Pass   5: suminf.    0.84312 (4) obj. -43.6533 iterations 2
Cbc0038I Pass   6: suminf.    0.69944 (2) obj. -43.6533 iterations 4
Cbc0038I Pass   7: suminf.    0.99481 (3) obj. -43.6533 iterations 4
Cbc0038I Pass   8: suminf.    0.81820 (3) obj. -43.6533 iterations 2
Cbc0038I Pass   9: suminf.    2.26214 (7) obj. -43.6533 iterations 16
Cbc0038I Pass  10: suminf.    0.65703 (4) obj. -43.6533 iterations 8
Cbc0038I Pass  11: suminf.    1.40412 (4) obj. -43.6533 iterations 7
Cbc0038I Pass  12: suminf.    1.39518 (4) obj. -43.6533 iterations 1
Cbc0038I Pass  13: suminf.    0.37738 (3) obj. -43.6533 iterations 8
Cbc0038I Pass  14: suminf.    0.33745 (2) obj. -43.6533 iterations 1
Cbc0038I Pass  15: suminf.    1.18397 (4) obj. -43.6533 iterations 4
Cbc0038I Pass  16: suminf.    1.12898 (4) obj. -43.6533 iterations 6
Cbc0038I Pass  17: suminf.    0.88741 (4) obj. -43.6533 iterations 2
Cbc0038I Pass  18: suminf.    0.45923 (2) obj. -43.6533 iterations 3
Cbc0038I Pass  19: suminf.    1.25855 (4) obj. -43.6533 iterations 8
Cbc0038I Pass  20: suminf.    1.07983 (3) obj. -43.6533 iterations 6
Cbc0038I Pass  21: suminf.    0.98318 (3) obj. -43.6533 iterations 2
Cbc0038I Pass  22: suminf.    0.76326 (3) obj. -43.6533 iterations 6
Cbc0038I Pass  23: suminf.    0.62442 (3) obj. -43.6533 iterations 1
Cbc0038I Pass  24: suminf.    1.83500 (6) obj. -43.6533 iterations 14
Cbc0038I Pass  25: suminf.    0.49703 (2) obj. -43.6533 iterations 12
Cbc0038I Pass  26: suminf.    0.70377 (2) obj. -43.6533 iterations 1
Cbc0038I Pass  27: suminf.    0.70423 (3) obj. -43.6533 iterations 2
Cbc0038I Pass  28: suminf.    0.87217 (3) obj. -43.6533 iterations 9
Cbc0038I Pass  29: suminf.    1.08511 (3) obj. -43.6533 iterations 5
Cbc0038I Pass  30: suminf.    1.48388 (6) obj. -43.6533 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 41 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.8838 - took 0.03 seconds
Cbc0012I Integer solution of -40.883816 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 22 rows 16 columns
Cbc0031I 12 added rows had average density of 46.25
Cbc0013I At root node, 12 cuts changed objective from -68.577926 to -56.060933 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4575 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 869 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 87 row cuts average 68.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0004I Integer solution of -40.986206 found after 4156 iterations and 20 nodes (0.62 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 17 rows 13 columns
Cbc0001I Search completed - best objective -40.9862057, took 4874 iterations and 44 nodes (0.67 seconds)
Cbc0032I Strong branching done 480 times (6114 iterations), fathomed 4 nodes and fixed 38 variables
Cbc0035I Maximum depth 13, 155 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 117 (-36) columns and 2004 (-1300) elements
Clp1000I sum of infeasibilities 2.63368e-07 - average 2.53238e-09, 66 fixed columns
Coin0506I Presolve 37 (-67) rows, 51 (-66) columns and 171 (-1833) elements
Clp0006I 0  Obj 28.302564 Dual inf 692.49665 (50)
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 0.25540043 - largest nonzero change 2.1024929e-05 ( 0.0018056464%) - largest zero change 2.9745158e-05
Clp0000I Optimal - objective value 28.351758
Clp0000I Optimal - objective value 28.351758
Coin0511I After Postsolve, objective 28.351758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 28.351758 Dual inf 33.565879 (42)
Clp0014I Perturbing problem by 0.001% of 1.616896 - largest nonzero change 1.0082245e-05 ( 0.00060188215%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 86.539309
Clp0000I Optimal - objective value 86.539309
Clp0000I Optimal - objective value 86.539309
Coin0511I After Postsolve, objective 86.539309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.53930928 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 2012 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 3.04505
Cbc0038I Pass   1: suminf.    2.06054 (29) obj. -68.588 iterations 13
Cbc0038I Solution found of -12.5626
Cbc0038I Rounding solution of -30.631 is better than previous of -12.5626

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -34.615
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.06054 (29) obj. -68.588 iterations 0
Cbc0038I Pass   3: suminf.    0.70474 (17) obj. -34.615 iterations 20
Cbc0038I Pass   4: suminf.    0.33492 (4) obj. -34.615 iterations 19
Cbc0038I Pass   5: suminf.    0.09677 (1) obj. -41.3085 iterations 4
Cbc0038I Pass   6: suminf.    0.48522 (1) obj. -34.615 iterations 1
Cbc0038I Pass   7: suminf.    0.90554 (8) obj. -34.615 iterations 24
Cbc0038I Pass   8: suminf.    0.90554 (8) obj. -34.615 iterations 4
Cbc0038I Pass   9: suminf.    0.77013 (2) obj. -34.615 iterations 8
Cbc0038I Pass  10: suminf.    0.72944 (4) obj. -34.615 iterations 3
Cbc0038I Pass  11: suminf.    0.77013 (2) obj. -34.615 iterations 2
Cbc0038I Pass  12: suminf.    1.35442 (9) obj. -34.615 iterations 35
Cbc0038I Pass  13: suminf.    0.80256 (8) obj. -35.7986 iterations 10
Cbc0038I Pass  14: suminf.    1.54540 (13) obj. -34.615 iterations 19
Cbc0038I Pass  15: suminf.    0.91891 (3) obj. -34.615 iterations 9
Cbc0038I Pass  16: suminf.    0.77565 (4) obj. -34.615 iterations 4
Cbc0038I Pass  17: suminf.    0.82381 (2) obj. -34.615 iterations 4
Cbc0038I Pass  18: suminf.    0.75720 (3) obj. -34.615 iterations 4
Cbc0038I Pass  19: suminf.    1.09591 (10) obj. -39.8945 iterations 23
Cbc0038I Pass  20: suminf.    0.43476 (10) obj. -34.615 iterations 6
Cbc0038I Pass  21: suminf.    0.60117 (4) obj. -34.615 iterations 11
Cbc0038I Pass  22: suminf.    0.58507 (13) obj. -34.615 iterations 12
Cbc0038I Pass  23: suminf.    0.88856 (5) obj. -34.615 iterations 11
Cbc0038I Pass  24: suminf.    0.58364 (3) obj. -34.615 iterations 7
Cbc0038I Pass  25: suminf.    1.32404 (3) obj. -34.615 iterations 6
Cbc0038I Pass  26: suminf.    1.32404 (3) obj. -34.615 iterations 2
Cbc0038I Pass  27: suminf.    0.84476 (2) obj. -34.615 iterations 9
Cbc0038I Pass  28: suminf.    0.70854 (2) obj. -35.865 iterations 2
Cbc0038I Pass  29: suminf.    0.84476 (2) obj. -34.615 iterations 3
Cbc0038I Pass  30: suminf.    1.81919 (9) obj. -34.615 iterations 19
Cbc0038I Pass  31: suminf.    1.27407 (10) obj. -34.615 iterations 12
Cbc0038I Rounding solution of -36.5744 is better than previous of -30.631

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 40 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -36.5744 to -39.3859 (0.08 seconds)
Cbc0038I Round again with cutoff of -45.6028
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.06054 (29) obj. -68.588 iterations 0
Cbc0038I Pass  32: suminf.    0.98618 (17) obj. -45.6028 iterations 46
Cbc0038I Pass  33: suminf.    0.50215 (5) obj. -45.6028 iterations 7
Cbc0038I Pass  34: suminf.    0.27082 (5) obj. -46.0654 iterations 7
Cbc0038I Pass  35: suminf.    0.88311 (15) obj. -45.6028 iterations 11
Cbc0038I Pass  36: suminf.    0.50889 (4) obj. -45.6028 iterations 7
Cbc0038I Pass  37: suminf.    0.88311 (15) obj. -45.6028 iterations 7
Cbc0038I Pass  38: suminf.    0.53524 (4) obj. -45.6028 iterations 7
Cbc0038I Pass  39: suminf.    0.88311 (15) obj. -45.6028 iterations 19
Cbc0038I Pass  40: suminf.    0.82899 (12) obj. -45.6028 iterations 14
Cbc0038I Pass  41: suminf.    0.69150 (11) obj. -45.6028 iterations 7
Cbc0038I Pass  42: suminf.    1.52479 (8) obj. -45.6028 iterations 13
Cbc0038I Pass  43: suminf.    1.06049 (5) obj. -45.6028 iterations 5
Cbc0038I Pass  44: suminf.    1.52479 (7) obj. -45.6028 iterations 9
Cbc0038I Pass  45: suminf.    2.54067 (13) obj. -45.6028 iterations 16
Cbc0038I Pass  46: suminf.    2.20692 (13) obj. -45.6028 iterations 5
Cbc0038I Pass  47: suminf.    0.90191 (13) obj. -45.6028 iterations 2
Cbc0038I Pass  48: suminf.    0.77328 (10) obj. -45.6028 iterations 10
Cbc0038I Pass  49: suminf.    1.49641 (7) obj. -45.6028 iterations 15
Cbc0038I Pass  50: suminf.    0.30589 (4) obj. -45.8903 iterations 8
Cbc0038I Pass  51: suminf.    1.08877 (15) obj. -45.6028 iterations 11
Cbc0038I Pass  52: suminf.    0.44965 (4) obj. -45.6028 iterations 7
Cbc0038I Pass  53: suminf.    1.52341 (18) obj. -45.6028 iterations 21
Cbc0038I Pass  54: suminf.    1.13844 (11) obj. -45.6028 iterations 9
Cbc0038I Pass  55: suminf.    0.68345 (10) obj. -46.5127 iterations 10
Cbc0038I Pass  56: suminf.    1.46118 (14) obj. -45.6028 iterations 21
Cbc0038I Pass  57: suminf.    1.35727 (14) obj. -45.6028 iterations 4
Cbc0038I Pass  58: suminf.    2.10649 (14) obj. -45.6028 iterations 22
Cbc0038I Pass  59: suminf.    1.70570 (14) obj. -45.6028 iterations 5
Cbc0038I Pass  60: suminf.    1.57369 (15) obj. -45.6028 iterations 9
Cbc0038I Rounding solution of -40.6846 is better than previous of -39.3859

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 36 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -53.0629
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    2.06054 (29) obj. -68.588 iterations 0
Cbc0038I Pass  61: suminf.    1.13296 (16) obj. -53.0629 iterations 26
Cbc0038I Pass  62: suminf.    0.96389 (16) obj. -57.3089 iterations 2
Cbc0038I Pass  63: suminf.    1.45661 (22) obj. -53.0629 iterations 26
Cbc0038I Pass  64: suminf.    1.46214 (17) obj. -53.0629 iterations 2
Cbc0038I Pass  65: suminf.    1.62760 (13) obj. -53.0629 iterations 20
Cbc0038I Pass  66: suminf.    1.60396 (23) obj. -53.0629 iterations 7
Cbc0038I Pass  67: suminf.    1.43686 (19) obj. -53.0629 iterations 13
Cbc0038I Pass  68: suminf.    1.43686 (19) obj. -53.0629 iterations 1
Cbc0038I Pass  69: suminf.    2.05065 (19) obj. -53.0629 iterations 11
Cbc0038I Pass  70: suminf.    1.89517 (17) obj. -53.0629 iterations 3
Cbc0038I Pass  71: suminf.    1.29144 (18) obj. -53.0629 iterations 5
Cbc0038I Pass  72: suminf.    2.05065 (19) obj. -53.0629 iterations 12
Cbc0038I Pass  73: suminf.    1.65085 (19) obj. -53.0629 iterations 27
Cbc0038I Pass  74: suminf.    1.61295 (14) obj. -53.0629 iterations 10
Cbc0038I Pass  75: suminf.    1.70997 (17) obj. -53.0629 iterations 18
Cbc0038I Pass  76: suminf.    1.68776 (23) obj. -53.0629 iterations 6
Cbc0038I Pass  77: suminf.    1.43686 (19) obj. -53.0629 iterations 12
Cbc0038I Pass  78: suminf.    1.43686 (19) obj. -53.0629 iterations 1
Cbc0038I Pass  79: suminf.    2.05065 (19) obj. -53.0629 iterations 9
Cbc0038I Pass  80: suminf.    1.89517 (17) obj. -53.0629 iterations 3
Cbc0038I Pass  81: suminf.    1.29144 (18) obj. -53.0629 iterations 5
Cbc0038I Pass  82: suminf.    2.05065 (19) obj. -53.0629 iterations 10
Cbc0038I Pass  83: suminf.    1.98270 (19) obj. -53.0629 iterations 9
Cbc0038I Pass  84: suminf.    1.82988 (16) obj. -53.0629 iterations 6
Cbc0038I Pass  85: suminf.    1.25186 (17) obj. -53.0629 iterations 7
Cbc0038I Pass  86: suminf.    1.90722 (19) obj. -53.0629 iterations 14
Cbc0038I Pass  87: suminf.    1.86198 (23) obj. -53.0629 iterations 4
Cbc0038I Pass  88: suminf.    1.36898 (16) obj. -53.0629 iterations 4
Cbc0038I Pass  89: suminf.    1.20482 (17) obj. -53.0629 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 38 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -40.6846 - took 0.11 seconds
Cbc0012I Integer solution of -40.684596 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 8 rows 9 columns
Cbc0031I 46 added rows had average density of 30.108696
Cbc0013I At root node, 46 cuts changed objective from -70.469895 to -48.222718 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 949 row cuts average 6.2 elements, 7 column cuts (13 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 39 row cuts average 77.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 239 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 310 row cuts average 70.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -40.684596 best solution, best possible -48.222718 (0.43 seconds)
Cbc0012I Integer solution of -40.883816 found by DiveCoefficient after 585 iterations and 4 nodes (0.73 seconds)
Cbc0010I After 18 nodes, 9 on tree, -40.883816 best solution, best possible -48.222718 (1.14 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 9 rows 11 columns
Cbc0038I Full problem 150 rows 117 columns, reduced to 84 rows 98 columns
Cbc0044I Reduced cost fixing - 84 rows, 98 columns - restarting search
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.65802
Cbc0038I Pass   1: suminf.    2.38439 (27) obj. -67.7503 iterations 13
Cbc0038I Pass   2: suminf.    0.71271 (12) obj. -43.017 iterations 12
Cbc0038I Pass   3: suminf.    0.41848 (4) obj. -40.8839 iterations 13
Cbc0038I Pass   4: suminf.    0.24593 (4) obj. -44.1594 iterations 1
Cbc0038I Pass   5: suminf.    0.12329 (1) obj. -40.8839 iterations 4
Cbc0038I Pass   6: suminf.    0.09677 (1) obj. -41.3085 iterations 1
Cbc0038I Pass   7: suminf.    1.37955 (7) obj. -40.8839 iterations 18
Cbc0038I Pass   8: suminf.    0.77031 (5) obj. -41.597 iterations 3
Cbc0038I Pass   9: suminf.    1.20411 (3) obj. -40.8839 iterations 14
Cbc0038I Pass  10: suminf.    0.91829 (2) obj. -41.5077 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 98 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (1.74 seconds)
Cbc0038I Full problem 85 rows 98 columns, reduced to 85 rows 98 columns
Cbc0038I After 1.81 seconds - Feasibility pump exiting with objective of -40.8838 - took 0.07 seconds
Cbc0031I 41 added rows had average density of 26.97561
Cbc0013I At root node, 41 cuts changed objective from -69.348156 to -48.148022 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 860 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 66.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 74 row cuts average 20.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -48.101229 (2.08 seconds)
Cbc0012I Integer solution of -40.986206 found by rounding after 1900 iterations and 70 nodes (2.76 seconds)
Cbc0038I Full problem 84 rows 98 columns, reduced to 2 rows 4 columns
Cbc0038I Full problem 84 rows 98 columns, reduced to 50 rows 55 columns
Cbc0010I After 97 nodes, 9 on tree, -40.986206 best solution, best possible -48.101229 (3.08 seconds)
Cbc0001I Search completed - best objective -40.9862057, took 4700 iterations and 184 nodes (3.95 seconds)
Cbc0032I Strong branching done 1892 times (23791 iterations), fathomed 19 nodes and fixed 54 variables
Cbc0035I Maximum depth 14, 514 variables fixed on reduced cost
Cbc0038I Probing was tried 167 times and created 1648 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Cbc0038I Gomory was tried 136 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I Knapsack was tried 14 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I OddWheel was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I MixedIntegerRounding2 was tried 136 times and created 1040 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Cbc0038I FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 136 times and created 217 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
Cbc0038I ZeroHalf was tried 136 times and created 357 cuts of which 0 were active after adding rounds of cuts (0.577 seconds)
Cbc0038I Stored from first was tried 136 times and created 278 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -40.986206 found by Reduced search after 6550 iterations and 234 nodes (3.95 seconds)
Cbc0001I Search completed - best objective -40.9862057, took 6550 iterations and 234 nodes (3.95 seconds)
Cbc0032I Strong branching done 640 times (9511 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 28, 119 variables fixed on reduced cost
Total time (CPU seconds):       2.68   (Wallclock seconds):       3.97

