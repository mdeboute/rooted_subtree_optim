Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 21 (-28) rows, 13 (-12) columns and 62 (-73) elements
Clp0000I Optimal - objective value 184.76276
Coin0511I After Postsolve, objective 184.76276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184.7627586 - 13 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 63 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.117%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.46467
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.4286 iterations 10
Cbc0038I Solution found of -15.4286
Cbc0038I Relaxing continuous gives -15.4286
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -27.6179
Cbc0038I Pass   2: suminf.    0.11562 (1) obj. -27.6179 iterations 1
Cbc0038I Pass   3: suminf.    0.36585 (1) obj. -27.6179 iterations 1
Cbc0038I Pass   4: suminf.    0.75891 (3) obj. -27.6179 iterations 3
Cbc0038I Pass   5: suminf.    0.13188 (1) obj. -27.6179 iterations 1
Cbc0038I Pass   6: suminf.    0.40854 (1) obj. -27.6179 iterations 1
Cbc0038I Pass   7: suminf.    0.84239 (2) obj. -27.6179 iterations 5
Cbc0038I Pass   8: suminf.    0.84239 (2) obj. -27.6179 iterations 0
Cbc0038I Pass   9: suminf.    0.58079 (2) obj. -27.6179 iterations 2
Cbc0038I Pass  10: suminf.    0.60893 (3) obj. -27.6179 iterations 5
Cbc0038I Pass  11: suminf.    0.16779 (1) obj. -27.6179 iterations 6
Cbc0038I Pass  12: suminf.    0.16779 (1) obj. -27.6179 iterations 0
Cbc0038I Pass  13: suminf.    0.27822 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  14: suminf.    0.44433 (2) obj. -27.6179 iterations 2
Cbc0038I Pass  15: suminf.    0.27822 (1) obj. -27.6179 iterations 2
Cbc0038I Pass  16: suminf.    0.47876 (1) obj. -27.6179 iterations 3
Cbc0038I Pass  17: suminf.    0.47876 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  18: suminf.    0.32886 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  19: suminf.    0.32886 (1) obj. -27.6179 iterations 0
Cbc0038I Pass  20: suminf.    0.32886 (1) obj. -27.6179 iterations 0
Cbc0038I Pass  21: suminf.    0.38926 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  22: suminf.    0.47876 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  23: suminf.    0.38926 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  24: suminf.    0.37586 (2) obj. -27.6179 iterations 3
Cbc0038I Pass  25: suminf.    0.37586 (2) obj. -27.6179 iterations 0
Cbc0038I Pass  26: suminf.    0.35681 (1) obj. -27.6179 iterations 2
Cbc0038I Pass  27: suminf.    0.27517 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  28: suminf.    0.94728 (3) obj. -27.6179 iterations 4
Cbc0038I Pass  29: suminf.    0.75993 (3) obj. -27.6179 iterations 4
Cbc0038I Pass  30: suminf.    0.35366 (1) obj. -27.6179 iterations 5
Cbc0038I Pass  31: suminf.    0.13188 (1) obj. -27.6179 iterations 1
Cbc0038I Rounding solution of -28.2857 is better than previous of -15.4286

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -50.0927
Cbc0038I Pass  31: suminf.    0.32879 (1) obj. -50.0927 iterations 0
Cbc0038I Pass  32: suminf.    0.36585 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  33: suminf.    0.32879 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  34: suminf.    0.36585 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  35: suminf.    0.43002 (1) obj. -50.0927 iterations 3
Cbc0038I Pass  36: suminf.    0.21477 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  37: suminf.    0.43002 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  38: suminf.    0.44803 (1) obj. -50.0927 iterations 2
Cbc0038I Pass  39: suminf.    0.37584 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  40: suminf.    0.44803 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  41: suminf.    0.00000 (0) obj. -50.0927 iterations 4
Cbc0038I Solution found of -50.0927
Cbc0038I Relaxing continuous gives -66.8571
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -87.9961
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  42: suminf.    1.03916 (4) obj. -87.9961 iterations 4
Cbc0038I Pass  43: suminf.    0.86151 (3) obj. -87.9961 iterations 9
Cbc0038I Pass  44: suminf.    0.86151 (3) obj. -87.9961 iterations 0
Cbc0038I Pass  45: suminf.    1.00123 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  46: suminf.    0.77548 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  47: suminf.    0.86151 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  48: suminf.    0.92807 (3) obj. -87.9961 iterations 3
Cbc0038I Pass  49: suminf.    0.96664 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  50: suminf.    0.96664 (3) obj. -87.9961 iterations 0
Cbc0038I Pass  51: suminf.    1.08283 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  52: suminf.    0.92807 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  53: suminf.    1.65447 (7) obj. -87.9961 iterations 8
Cbc0038I Pass  54: suminf.    0.59170 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  55: suminf.    0.82776 (5) obj. -87.9961 iterations 4
Cbc0038I Pass  56: suminf.    0.69910 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  57: suminf.    0.46303 (2) obj. -87.9961 iterations 2
Cbc0038I Pass  58: suminf.    0.46303 (2) obj. -87.9961 iterations 0
Cbc0038I Pass  59: suminf.    0.46303 (2) obj. -87.9961 iterations 0
Cbc0038I Pass  60: suminf.    3.07305 (8) obj. -87.9961 iterations 7
Cbc0038I Pass  61: suminf.    0.59170 (3) obj. -87.9961 iterations 3
Cbc0038I Pass  62: suminf.    0.82776 (5) obj. -87.9961 iterations 4
Cbc0038I Pass  63: suminf.    0.69910 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  64: suminf.    1.63580 (4) obj. -87.9961 iterations 5
Cbc0038I Pass  65: suminf.    1.63580 (4) obj. -87.9961 iterations 0
Cbc0038I Pass  66: suminf.    1.18669 (3) obj. -87.9961 iterations 8
Cbc0038I Pass  67: suminf.    0.86151 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  68: suminf.    1.00123 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  69: suminf.    0.77548 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  70: suminf.    0.86151 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  71: suminf.    2.55219 (7) obj. -87.9961 iterations 5
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -102.793
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 5
Cbc0038I Pass  71: suminf.    1.50700 (5) obj. -102.793 iterations 1
Cbc0038I Pass  72: suminf.    1.19884 (4) obj. -102.793 iterations 8
Cbc0038I Pass  73: suminf.    1.19884 (4) obj. -102.793 iterations 0
Cbc0038I Pass  74: suminf.    0.87862 (4) obj. -102.793 iterations 1
Cbc0038I Pass  75: suminf.    0.87862 (4) obj. -102.793 iterations 0
Cbc0038I Pass  76: suminf.    1.19884 (4) obj. -102.793 iterations 3
Cbc0038I Pass  77: suminf.    1.44548 (5) obj. -102.793 iterations 6
Cbc0038I Pass  78: suminf.    1.31830 (5) obj. -102.793 iterations 2
Cbc0038I Pass  79: suminf.    1.18049 (5) obj. -102.793 iterations 4
Cbc0038I Pass  80: suminf.    0.99395 (3) obj. -102.793 iterations 2
Cbc0038I Pass  81: suminf.    0.55520 (5) obj. -102.793 iterations 3
Cbc0038I Pass  82: suminf.    0.49117 (3) obj. -102.793 iterations 2
Cbc0038I Pass  83: suminf.    1.17748 (5) obj. -102.793 iterations 2
Cbc0038I Pass  84: suminf.    1.12506 (4) obj. -102.793 iterations 1
Cbc0038I Pass  85: suminf.    0.72522 (5) obj. -102.793 iterations 4
Cbc0038I Pass  86: suminf.    2.16653 (7) obj. -102.793 iterations 5
Cbc0038I Pass  87: suminf.    1.31830 (5) obj. -102.793 iterations 1
Cbc0038I Pass  88: suminf.    1.18049 (5) obj. -102.793 iterations 4
Cbc0038I Pass  89: suminf.    0.99395 (3) obj. -102.793 iterations 2
Cbc0038I Pass  90: suminf.    0.55520 (5) obj. -102.793 iterations 3
Cbc0038I Pass  91: suminf.    0.49117 (3) obj. -102.793 iterations 2
Cbc0038I Pass  92: suminf.    1.17748 (5) obj. -102.793 iterations 2
Cbc0038I Pass  93: suminf.    1.12506 (4) obj. -102.793 iterations 1
Cbc0038I Pass  94: suminf.    0.72522 (5) obj. -102.793 iterations 4
Cbc0038I Pass  95: suminf.    0.50845 (4) obj. -102.793 iterations 4
Cbc0038I Pass  96: suminf.    0.38872 (2) obj. -102.793 iterations 4
Cbc0038I Pass  97: suminf.    0.35948 (2) obj. -102.793 iterations 2
Cbc0038I Pass  98: suminf.    0.55520 (5) obj. -102.793 iterations 3
Cbc0038I Pass  99: suminf.    0.49117 (3) obj. -102.793 iterations 2
Cbc0038I Pass 100: suminf.    1.17748 (5) obj. -102.793 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -66.8571 - took 0.03 seconds
Cbc0012I Integer solution of -66.85709 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 8 columns
Cbc0012I Integer solution of -75.99999 found by DiveCoefficient after 12 iterations and 0 nodes (0.02 seconds)
Cbc0031I 6 added rows had average density of 3.3333333
Cbc0013I At root node, 6 cuts changed objective from -137.32031 to -75.99999 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -75.99999, took 12 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-23) rows, 28 (-18) columns and 153 (-235) elements
Clp1000I sum of infeasibilities 1.92007e-10 - average 7.68029e-12, 23 fixed columns
Coin0506I Presolve 4 (-21) rows, 5 (-23) columns and 14 (-139) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 196.09261
Clp0000I Optimal - objective value 196.09261
Coin0511I After Postsolve, objective 196.09261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19458361 - largest nonzero change 2.7917842e-05 ( 0.0024591791%) - largest zero change 2.2379552e-05
Clp0000I Optimal - objective value 268.75715
Clp0000I Optimal - objective value 268.75715
Clp0000I Optimal - objective value 268.75715
Coin0511I After Postsolve, objective 268.75715, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 268.7571467 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 33 columns (33 integer (33 of which binary)) and 194 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.096%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.29287
Cbc0038I Pass   1: suminf.    1.50000 (3) obj. -108.143 iterations 21
Cbc0038I Solution found of -80.1429
Cbc0038I Rounding solution of -117 is better than previous of -80.1429

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -122.654
Cbc0038I Pass   2: suminf.    1.63764 (4) obj. -122.654 iterations 1
Cbc0038I Pass   3: suminf.    0.41585 (1) obj. -123.986 iterations 5
Cbc0038I Pass   4: suminf.    0.40322 (1) obj. -122.654 iterations 1
Cbc0038I Pass   5: suminf.    0.82581 (5) obj. -122.654 iterations 6
Cbc0038I Pass   6: suminf.    0.46366 (2) obj. -122.654 iterations 3
Cbc0038I Pass   7: suminf.    0.70000 (2) obj. -131.871 iterations 2
Cbc0038I Pass   8: suminf.    0.61257 (2) obj. -122.654 iterations 1
Cbc0038I Pass   9: suminf.    0.46366 (2) obj. -122.654 iterations 1
Cbc0038I Pass  10: suminf.    0.85877 (5) obj. -122.654 iterations 2
Cbc0038I Pass  11: suminf.    3.75415 (11) obj. -122.654 iterations 12
Cbc0038I Pass  12: suminf.    2.30376 (7) obj. -122.654 iterations 6
Cbc0038I Pass  13: suminf.    1.34726 (5) obj. -122.654 iterations 5
Cbc0038I Pass  14: suminf.    1.29660 (4) obj. -122.654 iterations 1
Cbc0038I Pass  15: suminf.    0.14286 (1) obj. -132.061 iterations 5
Cbc0038I Pass  16: suminf.    0.05363 (1) obj. -122.654 iterations 1
Cbc0038I Pass  17: suminf.    0.59091 (2) obj. -138.136 iterations 4
Cbc0038I Pass  18: suminf.    0.50000 (1) obj. -136.5 iterations 1
Cbc0038I Pass  19: suminf.    1.90485 (6) obj. -122.654 iterations 7
Cbc0038I Pass  20: suminf.    1.47851 (4) obj. -122.654 iterations 4
Cbc0038I Pass  21: suminf.    2.85372 (7) obj. -122.654 iterations 11
Cbc0038I Pass  22: suminf.    1.18201 (3) obj. -122.654 iterations 4
Cbc0038I Pass  23: suminf.    1.18201 (3) obj. -122.654 iterations 0
Cbc0038I Pass  24: suminf.    0.47518 (2) obj. -122.654 iterations 1
Cbc0038I Pass  25: suminf.    0.47518 (2) obj. -122.654 iterations 0
Cbc0038I Pass  26: suminf.    0.86098 (2) obj. -137.7 iterations 2
Cbc0038I Pass  27: suminf.    0.71826 (2) obj. -122.654 iterations 1
Cbc0038I Pass  28: suminf.    3.67519 (11) obj. -122.654 iterations 10
Cbc0038I Pass  29: suminf.    1.18201 (3) obj. -122.654 iterations 10
Cbc0038I Pass  30: suminf.    0.47518 (2) obj. -122.654 iterations 1
Cbc0038I Pass  31: suminf.    0.47518 (2) obj. -122.654 iterations 0
Cbc0038I Rounding solution of -137 is better than previous of -117

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -144.308
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.84303 (4) obj. -144.308 iterations 0
Cbc0038I Pass  32: suminf.    0.96154 (3) obj. -144.308 iterations 4
Cbc0038I Pass  33: suminf.    1.05987 (3) obj. -146.078 iterations 2
Cbc0038I Pass  34: suminf.    5.51512 (15) obj. -144.308 iterations 12
Cbc0038I Pass  35: suminf.    2.58398 (8) obj. -144.308 iterations 8
Cbc0038I Pass  36: suminf.    3.20783 (9) obj. -144.308 iterations 6
Cbc0038I Pass  37: suminf.    3.15732 (8) obj. -144.308 iterations 7
Cbc0038I Pass  38: suminf.    2.27261 (6) obj. -144.308 iterations 7
Cbc0038I Pass  39: suminf.    2.31420 (8) obj. -144.308 iterations 5
Cbc0038I Pass  40: suminf.    0.45688 (2) obj. -144.308 iterations 7
Cbc0038I Pass  41: suminf.    0.64286 (2) obj. -151.561 iterations 2
Cbc0038I Pass  42: suminf.    1.24861 (5) obj. -144.308 iterations 4
Cbc0038I Pass  43: suminf.    1.22942 (5) obj. -144.308 iterations 9
Cbc0038I Pass  44: suminf.    0.87711 (3) obj. -144.308 iterations 3
Cbc0038I Pass  45: suminf.    0.62195 (2) obj. -149.357 iterations 3
Cbc0038I Pass  46: suminf.    0.49249 (2) obj. -144.308 iterations 1
Cbc0038I Pass  47: suminf.    1.72809 (5) obj. -144.308 iterations 4
Cbc0038I Pass  48: suminf.    1.26107 (5) obj. -144.308 iterations 4
Cbc0038I Pass  49: suminf.    0.75752 (4) obj. -151.686 iterations 2
Cbc0038I Pass  50: suminf.    0.63519 (3) obj. -144.308 iterations 4
Cbc0038I Pass  51: suminf.    1.01280 (5) obj. -144.308 iterations 4
Cbc0038I Pass  52: suminf.    0.81932 (3) obj. -144.308 iterations 4
Cbc0038I Pass  53: suminf.    1.84017 (7) obj. -144.308 iterations 5
Cbc0038I Pass  54: suminf.    0.45688 (2) obj. -144.308 iterations 6
Cbc0038I Pass  55: suminf.    0.64286 (2) obj. -151.561 iterations 2
Cbc0038I Pass  56: suminf.    2.80972 (8) obj. -144.308 iterations 7
Cbc0038I Pass  57: suminf.    4.68439 (12) obj. -144.308 iterations 5
Cbc0038I Pass  58: suminf.    3.79757 (10) obj. -144.308 iterations 2
Cbc0038I Pass  59: suminf.    1.97284 (5) obj. -144.308 iterations 6
Cbc0038I Pass  60: suminf.    0.96154 (3) obj. -144.308 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -137 - took 0.01 seconds
Cbc0012I Integer solution of -136.99999 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0001I Search completed - best objective -136.99999, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 21 (-28) rows, 13 (-12) columns and 62 (-73) elements
Clp0000I Optimal - objective value 184.76276
Coin0511I After Postsolve, objective 184.76276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184.7627586 - 13 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 63 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.117%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.46467
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.4286 iterations 10
Cbc0038I Solution found of -15.4286
Cbc0038I Relaxing continuous gives -15.4286
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -27.6179
Cbc0038I Pass   2: suminf.    0.11562 (1) obj. -27.6179 iterations 1
Cbc0038I Pass   3: suminf.    0.36585 (1) obj. -27.6179 iterations 1
Cbc0038I Pass   4: suminf.    0.75891 (3) obj. -27.6179 iterations 3
Cbc0038I Pass   5: suminf.    0.13188 (1) obj. -27.6179 iterations 1
Cbc0038I Pass   6: suminf.    0.40854 (1) obj. -27.6179 iterations 1
Cbc0038I Pass   7: suminf.    0.84239 (2) obj. -27.6179 iterations 5
Cbc0038I Pass   8: suminf.    0.84239 (2) obj. -27.6179 iterations 0
Cbc0038I Pass   9: suminf.    0.58079 (2) obj. -27.6179 iterations 2
Cbc0038I Pass  10: suminf.    0.60893 (3) obj. -27.6179 iterations 5
Cbc0038I Pass  11: suminf.    0.16779 (1) obj. -27.6179 iterations 6
Cbc0038I Pass  12: suminf.    0.16779 (1) obj. -27.6179 iterations 0
Cbc0038I Pass  13: suminf.    0.27822 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  14: suminf.    0.44433 (2) obj. -27.6179 iterations 2
Cbc0038I Pass  15: suminf.    0.27822 (1) obj. -27.6179 iterations 2
Cbc0038I Pass  16: suminf.    0.47876 (1) obj. -27.6179 iterations 3
Cbc0038I Pass  17: suminf.    0.47876 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  18: suminf.    0.32886 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  19: suminf.    0.32886 (1) obj. -27.6179 iterations 0
Cbc0038I Pass  20: suminf.    0.32886 (1) obj. -27.6179 iterations 0
Cbc0038I Pass  21: suminf.    0.38926 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  22: suminf.    0.47876 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  23: suminf.    0.38926 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  24: suminf.    0.37586 (2) obj. -27.6179 iterations 3
Cbc0038I Pass  25: suminf.    0.37586 (2) obj. -27.6179 iterations 0
Cbc0038I Pass  26: suminf.    0.35681 (1) obj. -27.6179 iterations 2
Cbc0038I Pass  27: suminf.    0.27517 (1) obj. -27.6179 iterations 1
Cbc0038I Pass  28: suminf.    0.94728 (3) obj. -27.6179 iterations 4
Cbc0038I Pass  29: suminf.    0.75993 (3) obj. -27.6179 iterations 4
Cbc0038I Pass  30: suminf.    0.35366 (1) obj. -27.6179 iterations 5
Cbc0038I Pass  31: suminf.    0.13188 (1) obj. -27.6179 iterations 1
Cbc0038I Rounding solution of -28.2857 is better than previous of -15.4286

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -50.0927
Cbc0038I Pass  31: suminf.    0.32879 (1) obj. -50.0927 iterations 0
Cbc0038I Pass  32: suminf.    0.36585 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  33: suminf.    0.32879 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  34: suminf.    0.36585 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  35: suminf.    0.43002 (1) obj. -50.0927 iterations 3
Cbc0038I Pass  36: suminf.    0.21477 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  37: suminf.    0.43002 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  38: suminf.    0.44803 (1) obj. -50.0927 iterations 2
Cbc0038I Pass  39: suminf.    0.37584 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  40: suminf.    0.44803 (1) obj. -50.0927 iterations 1
Cbc0038I Pass  41: suminf.    0.00000 (0) obj. -50.0927 iterations 4
Cbc0038I Solution found of -50.0927
Cbc0038I Relaxing continuous gives -66.8571
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -87.9961
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  42: suminf.    1.03916 (4) obj. -87.9961 iterations 4
Cbc0038I Pass  43: suminf.    0.86151 (3) obj. -87.9961 iterations 9
Cbc0038I Pass  44: suminf.    0.86151 (3) obj. -87.9961 iterations 0
Cbc0038I Pass  45: suminf.    1.00123 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  46: suminf.    0.77548 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  47: suminf.    0.86151 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  48: suminf.    0.92807 (3) obj. -87.9961 iterations 3
Cbc0038I Pass  49: suminf.    0.96664 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  50: suminf.    0.96664 (3) obj. -87.9961 iterations 0
Cbc0038I Pass  51: suminf.    1.08283 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  52: suminf.    0.92807 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  53: suminf.    1.65447 (7) obj. -87.9961 iterations 8
Cbc0038I Pass  54: suminf.    0.59170 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  55: suminf.    0.82776 (5) obj. -87.9961 iterations 4
Cbc0038I Pass  56: suminf.    0.69910 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  57: suminf.    0.46303 (2) obj. -87.9961 iterations 2
Cbc0038I Pass  58: suminf.    0.46303 (2) obj. -87.9961 iterations 0
Cbc0038I Pass  59: suminf.    0.46303 (2) obj. -87.9961 iterations 0
Cbc0038I Pass  60: suminf.    3.07305 (8) obj. -87.9961 iterations 7
Cbc0038I Pass  61: suminf.    0.59170 (3) obj. -87.9961 iterations 3
Cbc0038I Pass  62: suminf.    0.82776 (5) obj. -87.9961 iterations 4
Cbc0038I Pass  63: suminf.    0.69910 (3) obj. -87.9961 iterations 2
Cbc0038I Pass  64: suminf.    1.63580 (4) obj. -87.9961 iterations 5
Cbc0038I Pass  65: suminf.    1.63580 (4) obj. -87.9961 iterations 0
Cbc0038I Pass  66: suminf.    1.18669 (3) obj. -87.9961 iterations 8
Cbc0038I Pass  67: suminf.    0.86151 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  68: suminf.    1.00123 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  69: suminf.    0.77548 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  70: suminf.    0.86151 (3) obj. -87.9961 iterations 1
Cbc0038I Pass  71: suminf.    2.55219 (7) obj. -87.9961 iterations 5
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -102.793
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 5
Cbc0038I Pass  71: suminf.    1.50700 (5) obj. -102.793 iterations 1
Cbc0038I Pass  72: suminf.    1.19884 (4) obj. -102.793 iterations 8
Cbc0038I Pass  73: suminf.    1.19884 (4) obj. -102.793 iterations 0
Cbc0038I Pass  74: suminf.    0.87862 (4) obj. -102.793 iterations 1
Cbc0038I Pass  75: suminf.    0.87862 (4) obj. -102.793 iterations 0
Cbc0038I Pass  76: suminf.    1.19884 (4) obj. -102.793 iterations 3
Cbc0038I Pass  77: suminf.    1.44548 (5) obj. -102.793 iterations 6
Cbc0038I Pass  78: suminf.    1.31830 (5) obj. -102.793 iterations 2
Cbc0038I Pass  79: suminf.    1.18049 (5) obj. -102.793 iterations 4
Cbc0038I Pass  80: suminf.    0.99395 (3) obj. -102.793 iterations 2
Cbc0038I Pass  81: suminf.    0.55520 (5) obj. -102.793 iterations 3
Cbc0038I Pass  82: suminf.    0.49117 (3) obj. -102.793 iterations 2
Cbc0038I Pass  83: suminf.    1.17748 (5) obj. -102.793 iterations 2
Cbc0038I Pass  84: suminf.    1.12506 (4) obj. -102.793 iterations 1
Cbc0038I Pass  85: suminf.    0.72522 (5) obj. -102.793 iterations 4
Cbc0038I Pass  86: suminf.    2.16653 (7) obj. -102.793 iterations 5
Cbc0038I Pass  87: suminf.    1.31830 (5) obj. -102.793 iterations 1
Cbc0038I Pass  88: suminf.    1.18049 (5) obj. -102.793 iterations 4
Cbc0038I Pass  89: suminf.    0.99395 (3) obj. -102.793 iterations 2
Cbc0038I Pass  90: suminf.    0.55520 (5) obj. -102.793 iterations 3
Cbc0038I Pass  91: suminf.    0.49117 (3) obj. -102.793 iterations 2
Cbc0038I Pass  92: suminf.    1.17748 (5) obj. -102.793 iterations 2
Cbc0038I Pass  93: suminf.    1.12506 (4) obj. -102.793 iterations 1
Cbc0038I Pass  94: suminf.    0.72522 (5) obj. -102.793 iterations 4
Cbc0038I Pass  95: suminf.    0.50845 (4) obj. -102.793 iterations 4
Cbc0038I Pass  96: suminf.    0.38872 (2) obj. -102.793 iterations 4
Cbc0038I Pass  97: suminf.    0.35948 (2) obj. -102.793 iterations 2
Cbc0038I Pass  98: suminf.    0.55520 (5) obj. -102.793 iterations 3
Cbc0038I Pass  99: suminf.    0.49117 (3) obj. -102.793 iterations 2
Cbc0038I Pass 100: suminf.    1.17748 (5) obj. -102.793 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -66.8571 - took 0.02 seconds
Cbc0012I Integer solution of -66.85709 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 8 columns
Cbc0012I Integer solution of -75.99999 found by DiveCoefficient after 12 iterations and 0 nodes (0.03 seconds)
Cbc0031I 6 added rows had average density of 3.3333333
Cbc0013I At root node, 6 cuts changed objective from -137.32031 to -75.99999 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -75.99999, took 12 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-25) rows, 27 (-20) columns and 144 (-245) elements
Clp1000I sum of infeasibilities 1.13192e-10 - average 4.71635e-12, 22 fixed columns
Coin0506I Presolve 4 (-20) rows, 5 (-22) columns and 14 (-130) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 153.75364
Clp0000I Optimal - objective value 153.75364
Coin0511I After Postsolve, objective 153.75364, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19289854 - largest nonzero change 2.7917842e-05 ( 0.0024591791%) - largest zero change 1.9423356e-05
Clp0000I Optimal - objective value 228.51625
Clp0000I Optimal - objective value 228.51625
Clp0000I Optimal - objective value 228.51625
Coin0511I After Postsolve, objective 228.51625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 228.5162471 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 32 columns (32 integer (32 of which binary)) and 187 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.86401
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -42.6857 iterations 12
Cbc0038I Solution found of -28.2857
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 32 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -28.2857 to -66.8571 (0.01 seconds)
Cbc0038I Round again with cutoff of -71.2358
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.07080 (5) obj. -71.2358 iterations 1
Cbc0038I Pass   3: suminf.    0.50000 (1) obj. -81.0002 iterations 5
Cbc0038I Pass   4: suminf.    0.40738 (1) obj. -71.2358 iterations 1
Cbc0038I Pass   5: suminf.    1.13330 (5) obj. -71.2358 iterations 6
Cbc0038I Pass   6: suminf.    0.51309 (2) obj. -71.2358 iterations 4
Cbc0038I Pass   7: suminf.    0.57708 (2) obj. -71.2358 iterations 1
Cbc0038I Pass   8: suminf.    0.51309 (2) obj. -71.2358 iterations 1
Cbc0038I Pass   9: suminf.    1.65700 (6) obj. -71.2358 iterations 3
Cbc0038I Pass  10: suminf.    1.15213 (5) obj. -71.2358 iterations 4
Cbc0038I Pass  11: suminf.    1.11403 (4) obj. -71.2358 iterations 2
Cbc0038I Pass  12: suminf.    2.69861 (9) obj. -71.2358 iterations 7
Cbc0038I Pass  13: suminf.    1.93998 (5) obj. -71.2358 iterations 4
Cbc0038I Pass  14: suminf.    1.10893 (3) obj. -71.2358 iterations 2
Cbc0038I Pass  15: suminf.    0.67947 (2) obj. -71.2358 iterations 1
Cbc0038I Pass  16: suminf.    0.75512 (4) obj. -71.2358 iterations 4
Cbc0038I Pass  17: suminf.    0.75512 (4) obj. -71.2358 iterations 0
Cbc0038I Pass  18: suminf.    1.03463 (4) obj. -71.2358 iterations 1
Cbc0038I Pass  19: suminf.    1.03463 (4) obj. -71.2358 iterations 0
Cbc0038I Pass  20: suminf.    1.30357 (6) obj. -71.2358 iterations 3
Cbc0038I Pass  21: suminf.    0.85512 (5) obj. -71.2358 iterations 3
Cbc0038I Pass  22: suminf.    0.85512 (5) obj. -71.2358 iterations 0
Cbc0038I Pass  23: suminf.    1.73196 (6) obj. -71.2358 iterations 9
Cbc0038I Pass  24: suminf.    1.06980 (4) obj. -75.8161 iterations 3
Cbc0038I Pass  25: suminf.    1.02635 (4) obj. -71.2358 iterations 1
Cbc0038I Pass  26: suminf.    0.96089 (5) obj. -71.2358 iterations 7
Cbc0038I Pass  27: suminf.    0.96089 (5) obj. -71.2358 iterations 0
Cbc0038I Pass  28: suminf.    1.03409 (4) obj. -71.2358 iterations 1
Cbc0038I Pass  29: suminf.    0.46429 (1) obj. -71.2358 iterations 3
Cbc0038I Pass  30: suminf.    0.46980 (1) obj. -71.8161 iterations 1
Cbc0038I Pass  31: suminf.    3.13117 (12) obj. -71.2358 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 32 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -66.8571 - took 0.01 seconds
Cbc0012I Integer solution of -66.85709 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -75.99999 found by DiveCoefficient after 22 iterations and 0 nodes (0.02 seconds)
Cbc0031I 2 added rows had average density of 2
Cbc0013I At root node, 2 cuts changed objective from -110.64318 to -75.99999 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 2.0 elements, 18 column cuts (18 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -75.99999, took 22 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

