Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 2.58867e-05 - average 1.90343e-07, 7 fixed columns
Coin0506I Presolve 125 (-11) rows, 69 (-7) columns and 380 (-36) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 3.0662515 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 43.724741
Clp0000I Optimal - objective value 43.724741
Coin0511I After Postsolve, objective 43.724741, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.724741
Clp0000I Optimal - objective value 43.724741
Clp0000I Optimal - objective value 43.724741
Coin0511I After Postsolve, objective 43.724741, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.72474126 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.8047
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.8402 iterations 50
Cbc0038I Solution found of 7.8402
Cbc0038I Relaxing continuous gives 7.8402
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 7.8402 to -10.9412 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.2197
Cbc0038I Pass   2: suminf.    3.12269 (16) obj. -14.2197 iterations 19
Cbc0038I Pass   3: suminf.    1.17389 (5) obj. -14.2197 iterations 17
Cbc0038I Pass   4: suminf.    1.12523 (5) obj. -14.2197 iterations 2
Cbc0038I Pass   5: suminf.    0.99530 (4) obj. -14.2197 iterations 5
Cbc0038I Pass   6: suminf.    0.82149 (3) obj. -14.2197 iterations 3
Cbc0038I Pass   7: suminf.    1.29373 (5) obj. -14.2197 iterations 3
Cbc0038I Pass   8: suminf.    0.88812 (4) obj. -14.2197 iterations 2
Cbc0038I Pass   9: suminf.    2.62699 (8) obj. -14.2197 iterations 14
Cbc0038I Pass  10: suminf.    1.44039 (6) obj. -14.2197 iterations 7
Cbc0038I Pass  11: suminf.    1.59918 (5) obj. -14.2197 iterations 10
Cbc0038I Pass  12: suminf.    1.55369 (4) obj. -14.2197 iterations 1
Cbc0038I Pass  13: suminf.    1.55369 (4) obj. -14.2197 iterations 0
Cbc0038I Pass  14: suminf.    1.18359 (5) obj. -14.2197 iterations 3
Cbc0038I Pass  15: suminf.    1.09831 (4) obj. -14.2197 iterations 1
Cbc0038I Pass  16: suminf.    0.97422 (3) obj. -14.2197 iterations 1
Cbc0038I Pass  17: suminf.    1.11167 (4) obj. -14.2197 iterations 3
Cbc0038I Pass  18: suminf.    0.93284 (3) obj. -14.2197 iterations 1
Cbc0038I Pass  19: suminf.    1.09831 (4) obj. -14.2197 iterations 2
Cbc0038I Pass  20: suminf.    3.15983 (11) obj. -14.2197 iterations 15
Cbc0038I Pass  21: suminf.    1.91163 (8) obj. -14.2197 iterations 7
Cbc0038I Pass  22: suminf.    1.85803 (5) obj. -14.2197 iterations 9
Cbc0038I Pass  23: suminf.    1.73552 (4) obj. -14.2197 iterations 1
Cbc0038I Pass  24: suminf.    0.85460 (3) obj. -14.2197 iterations 1
Cbc0038I Pass  25: suminf.    1.39973 (5) obj. -14.2197 iterations 3
Cbc0038I Pass  26: suminf.    1.31444 (4) obj. -14.2197 iterations 1
Cbc0038I Pass  27: suminf.    0.91157 (3) obj. -14.2197 iterations 1
Cbc0038I Pass  28: suminf.    3.86684 (12) obj. -14.2197 iterations 31
Cbc0038I Pass  29: suminf.    2.01649 (6) obj. -14.2197 iterations 16
Cbc0038I Pass  30: suminf.    1.50468 (5) obj. -14.2197 iterations 9
Cbc0038I Pass  31: suminf.    1.50468 (5) obj. -14.2197 iterations 0
Cbc0038I Rounding solution of -12.7072 is better than previous of -10.9412

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -20.1207
Cbc0038I Pass  31: suminf.    4.24942 (16) obj. -20.1207 iterations 0
Cbc0038I Pass  32: suminf.    1.03208 (5) obj. -20.1207 iterations 15
Cbc0038I Pass  33: suminf.    0.94218 (4) obj. -20.1207 iterations 3
Cbc0038I Pass  34: suminf.    1.18328 (4) obj. -20.1207 iterations 5
Cbc0038I Pass  35: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  36: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  37: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  38: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  39: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  40: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  41: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  42: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  43: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  44: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  45: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  46: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  47: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  48: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  49: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  50: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  51: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  52: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  53: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  54: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  55: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  56: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  57: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  58: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  59: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  60: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -12.7072 - took 0.15 seconds
Cbc0012I Integer solution of -12.70721 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 80 rows 46 columns
Cbc0012I Integer solution of -12.92099 found by RINS after 0 iterations and 0 nodes (0.21 seconds)
Cbc0031I 23 added rows had average density of 57.217391
Cbc0013I At root node, 23 cuts changed objective from -43.724741 to -35.332498 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15304 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2281 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.92099 best solution, best possible -35.332498 (1.03 seconds)
Cbc0012I Integer solution of -12.95674 found by rounding after 9702 iterations and 24 nodes (1.22 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 2 rows 3 columns
Cbc0016I Integer solution of -13.02153 found by strong branching after 9981 iterations and 62 nodes (1.25 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 8 rows 11 columns
Cbc0016I Integer solution of -13.13804 found by strong branching after 11350 iterations and 121 nodes (1.35 seconds)
Cbc0012I Integer solution of -13.64649 found by rounding after 11605 iterations and 150 nodes (1.37 seconds)
Cbc0001I Search completed - best objective -13.64649, took 13098 iterations and 198 nodes (1.47 seconds)
Cbc0032I Strong branching done 1348 times (16080 iterations), fathomed 25 nodes and fixed 84 variables
Cbc0035I Maximum depth 25, 605 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       1.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 113 (-39) columns and 1878 (-1425) elements
Clp1000I sum of infeasibilities 4.25326e-06 - average 4.29622e-08, 34 fixed columns
Coin0506I Presolve 68 (-31) rows, 77 (-36) columns and 1015 (-863) elements
Clp0006I 0  Obj 43.978975 Dual inf 2.9044647 (77)
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 2.6165799 - largest nonzero change 2.6640316e-05 ( 0.0018056464%) - largest zero change 2.3776716e-05
Clp0000I Optimal - objective value 64.314935
Clp0000I Optimal - objective value 64.314935
Coin0511I After Postsolve, objective 64.314935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 64.314935
Clp0000I Optimal - objective value 64.314935
Clp0000I Optimal - objective value 64.314935
Clp0000I Optimal - objective value 64.314935
Coin0511I After Postsolve, objective 64.314935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.31493522 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 113 columns (113 integer (113 of which binary)) and 1886 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.807%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.9444
Cbc0038I Pass   1: suminf.    4.45428 (31) obj. -49.2645 iterations 7
Cbc0038I Pass   2: suminf.    4.45428 (31) obj. -49.2645 iterations 0
Cbc0038I Pass   3: suminf.    1.88297 (15) obj. -33.2148 iterations 15
Cbc0038I Pass   4: suminf.    0.44858 (4) obj. -8.03622 iterations 11
Cbc0038I Solution found of -1.80059
Cbc0038I Rounding solution of -6.70656 is better than previous of -1.80059

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 113 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -6.70656 to -13.4241 (0.04 seconds)
Cbc0038I Round again with cutoff of -17.5179
Cbc0038I Pass   5: suminf.    4.45428 (31) obj. -49.2645 iterations 0
Cbc0038I Pass   6: suminf.    4.45428 (31) obj. -49.2645 iterations 0
Cbc0038I Pass   7: suminf.    2.27856 (18) obj. -35.8192 iterations 12
Cbc0038I Pass   8: suminf.    0.38375 (6) obj. -17.5179 iterations 18
Cbc0038I Pass   9: suminf.    0.38375 (6) obj. -17.5179 iterations 0
Cbc0038I Pass  10: suminf.    0.56676 (2) obj. -17.5179 iterations 7
Cbc0038I Pass  11: suminf.    0.53806 (2) obj. -18.5687 iterations 1
Cbc0038I Pass  12: suminf.    0.61467 (2) obj. -17.5179 iterations 1
Cbc0038I Pass  13: suminf.    0.61467 (2) obj. -17.5179 iterations 0
Cbc0038I Pass  14: suminf.    2.42292 (13) obj. -17.5179 iterations 22
Cbc0038I Pass  15: suminf.    1.83358 (13) obj. -17.5179 iterations 4
Cbc0038I Pass  16: suminf.    1.52564 (7) obj. -17.5179 iterations 18
Cbc0038I Pass  17: suminf.    1.39838 (8) obj. -17.5179 iterations 2
Cbc0038I Pass  18: suminf.    1.52564 (7) obj. -17.5179 iterations 2
Cbc0038I Pass  19: suminf.    2.93272 (18) obj. -17.5179 iterations 32
Cbc0038I Pass  20: suminf.    1.75669 (14) obj. -17.5179 iterations 10
Cbc0038I Pass  21: suminf.    1.22321 (6) obj. -17.5179 iterations 13
Cbc0038I Pass  22: suminf.    1.09847 (6) obj. -17.9456 iterations 5
Cbc0038I Pass  23: suminf.    1.08317 (5) obj. -17.5179 iterations 13
Cbc0038I Pass  24: suminf.    0.95316 (3) obj. -17.5179 iterations 13
Cbc0038I Pass  25: suminf.    0.67939 (3) obj. -17.5179 iterations 2
Cbc0038I Pass  26: suminf.    0.67939 (3) obj. -17.5179 iterations 0
Cbc0038I Pass  27: suminf.    0.95316 (3) obj. -17.5179 iterations 4
Cbc0038I Pass  28: suminf.    2.33423 (11) obj. -17.5179 iterations 17
Cbc0038I Pass  29: suminf.    1.68823 (9) obj. -18.6725 iterations 8
Cbc0038I Pass  30: suminf.    0.93752 (5) obj. -17.5179 iterations 13
Cbc0038I Pass  31: suminf.    0.85188 (5) obj. -17.5179 iterations 6
Cbc0038I Pass  32: suminf.    0.88143 (5) obj. -17.5179 iterations 11
Cbc0038I Pass  33: suminf.    0.39583 (3) obj. -17.5179 iterations 3
Cbc0038I Pass  34: suminf.    0.61150 (3) obj. -17.5179 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 113 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -13.4241 - took 0.02 seconds
Cbc0012I Integer solution of -13.42412 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 99 rows 113 columns, reduced to 0 rows 0 columns
Cbc0031I 49 added rows had average density of 36.918367
Cbc0013I At root node, 49 cuts changed objective from -54.360824 to -20.542369 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12125 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1539 row cuts average 106.7 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 256 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1276 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 328 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.605 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.42412 best solution, best possible -20.542369 (2.25 seconds)
Cbc0038I Full problem 99 rows 113 columns, reduced to 29 rows 39 columns
Cbc0012I Integer solution of -13.64649 found by rounding after 5641 iterations and 66 nodes (2.75 seconds)
Cbc0001I Search completed - best objective -13.64649, took 6002 iterations and 80 nodes (2.78 seconds)
Cbc0032I Strong branching done 660 times (9010 iterations), fathomed 10 nodes and fixed 9 variables
Cbc0035I Maximum depth 19, 214 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       2.79

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 2.58867e-05 - average 1.90343e-07, 7 fixed columns
Coin0506I Presolve 125 (-11) rows, 69 (-7) columns and 380 (-36) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 3.0662515 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 43.724741
Clp0000I Optimal - objective value 43.724741
Coin0511I After Postsolve, objective 43.724741, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.724741
Clp0000I Optimal - objective value 43.724741
Clp0000I Optimal - objective value 43.724741
Coin0511I After Postsolve, objective 43.724741, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.72474126 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.8047
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.8402 iterations 50
Cbc0038I Solution found of 7.8402
Cbc0038I Relaxing continuous gives 7.8402
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 7.8402 to -10.9412 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.2197
Cbc0038I Pass   2: suminf.    3.12269 (16) obj. -14.2197 iterations 19
Cbc0038I Pass   3: suminf.    1.17389 (5) obj. -14.2197 iterations 17
Cbc0038I Pass   4: suminf.    1.12523 (5) obj. -14.2197 iterations 2
Cbc0038I Pass   5: suminf.    0.99530 (4) obj. -14.2197 iterations 5
Cbc0038I Pass   6: suminf.    0.82149 (3) obj. -14.2197 iterations 3
Cbc0038I Pass   7: suminf.    1.29373 (5) obj. -14.2197 iterations 3
Cbc0038I Pass   8: suminf.    0.88812 (4) obj. -14.2197 iterations 2
Cbc0038I Pass   9: suminf.    2.62699 (8) obj. -14.2197 iterations 14
Cbc0038I Pass  10: suminf.    1.44039 (6) obj. -14.2197 iterations 7
Cbc0038I Pass  11: suminf.    1.59918 (5) obj. -14.2197 iterations 10
Cbc0038I Pass  12: suminf.    1.55369 (4) obj. -14.2197 iterations 1
Cbc0038I Pass  13: suminf.    1.55369 (4) obj. -14.2197 iterations 0
Cbc0038I Pass  14: suminf.    1.18359 (5) obj. -14.2197 iterations 3
Cbc0038I Pass  15: suminf.    1.09831 (4) obj. -14.2197 iterations 1
Cbc0038I Pass  16: suminf.    0.97422 (3) obj. -14.2197 iterations 1
Cbc0038I Pass  17: suminf.    1.11167 (4) obj. -14.2197 iterations 3
Cbc0038I Pass  18: suminf.    0.93284 (3) obj. -14.2197 iterations 1
Cbc0038I Pass  19: suminf.    1.09831 (4) obj. -14.2197 iterations 2
Cbc0038I Pass  20: suminf.    3.15983 (11) obj. -14.2197 iterations 15
Cbc0038I Pass  21: suminf.    1.91163 (8) obj. -14.2197 iterations 7
Cbc0038I Pass  22: suminf.    1.85803 (5) obj. -14.2197 iterations 9
Cbc0038I Pass  23: suminf.    1.73552 (4) obj. -14.2197 iterations 1
Cbc0038I Pass  24: suminf.    0.85460 (3) obj. -14.2197 iterations 1
Cbc0038I Pass  25: suminf.    1.39973 (5) obj. -14.2197 iterations 3
Cbc0038I Pass  26: suminf.    1.31444 (4) obj. -14.2197 iterations 1
Cbc0038I Pass  27: suminf.    0.91157 (3) obj. -14.2197 iterations 1
Cbc0038I Pass  28: suminf.    3.86684 (12) obj. -14.2197 iterations 31
Cbc0038I Pass  29: suminf.    2.01649 (6) obj. -14.2197 iterations 16
Cbc0038I Pass  30: suminf.    1.50468 (5) obj. -14.2197 iterations 9
Cbc0038I Pass  31: suminf.    1.50468 (5) obj. -14.2197 iterations 0
Cbc0038I Rounding solution of -12.7072 is better than previous of -10.9412

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -20.1207
Cbc0038I Pass  31: suminf.    4.24942 (16) obj. -20.1207 iterations 0
Cbc0038I Pass  32: suminf.    1.03208 (5) obj. -20.1207 iterations 15
Cbc0038I Pass  33: suminf.    0.94218 (4) obj. -20.1207 iterations 3
Cbc0038I Pass  34: suminf.    1.18328 (4) obj. -20.1207 iterations 5
Cbc0038I Pass  35: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  36: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  37: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  38: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  39: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  40: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  41: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  42: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  43: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  44: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  45: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  46: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  47: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  48: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  49: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  50: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  51: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  52: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  53: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  54: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  55: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I Pass  56: suminf.    0.93195 (4) obj. -20.1207 iterations 4
Cbc0038I Pass  57: suminf.    2.03133 (6) obj. -20.1207 iterations 4
Cbc0038I Pass  58: suminf.    1.00173 (3) obj. -20.1207 iterations 6
Cbc0038I Pass  59: suminf.    1.18328 (4) obj. -20.1207 iterations 2
Cbc0038I Pass  60: suminf.    1.04274 (3) obj. -20.1207 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -12.7072 - took 0.14 seconds
Cbc0012I Integer solution of -12.70721 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 80 rows 46 columns
Cbc0012I Integer solution of -12.92099 found by RINS after 0 iterations and 0 nodes (0.21 seconds)
Cbc0031I 23 added rows had average density of 57.217391
Cbc0013I At root node, 23 cuts changed objective from -43.724741 to -35.332498 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15304 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2281 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.92099 best solution, best possible -35.332498 (1.01 seconds)
Cbc0012I Integer solution of -12.95674 found by rounding after 9702 iterations and 24 nodes (1.21 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 2 rows 3 columns
Cbc0016I Integer solution of -13.02153 found by strong branching after 9981 iterations and 62 nodes (1.24 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 8 rows 11 columns
Cbc0016I Integer solution of -13.13804 found by strong branching after 11350 iterations and 121 nodes (1.33 seconds)
Cbc0012I Integer solution of -13.64649 found by rounding after 11605 iterations and 150 nodes (1.35 seconds)
Cbc0001I Search completed - best objective -13.64649, took 13098 iterations and 198 nodes (1.45 seconds)
Cbc0032I Strong branching done 1348 times (16080 iterations), fathomed 25 nodes and fixed 84 variables
Cbc0035I Maximum depth 25, 605 variables fixed on reduced cost
Total time (CPU seconds):       1.42   (Wallclock seconds):       1.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 113 (-40) columns and 1878 (-1426) elements
Clp1000I sum of infeasibilities 4.25326e-06 - average 4.29622e-08, 34 fixed columns
Coin0506I Presolve 68 (-31) rows, 77 (-36) columns and 1015 (-863) elements
Clp0006I 0  Obj 43.978975 Dual inf 2.9044647 (77)
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 2.6165799 - largest nonzero change 2.6640316e-05 ( 0.0018056464%) - largest zero change 2.3776716e-05
Clp0000I Optimal - objective value 64.314935
Clp0000I Optimal - objective value 64.314935
Coin0511I After Postsolve, objective 64.314935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 64.314935
Clp0000I Optimal - objective value 64.314935
Clp0000I Optimal - objective value 64.314935
Clp0000I Optimal - objective value 64.314935
Coin0511I After Postsolve, objective 64.314935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.31493522 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 113 columns (113 integer (113 of which binary)) and 1886 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.807%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.9444
Cbc0038I Pass   1: suminf.    4.45428 (31) obj. -49.2645 iterations 7
Cbc0038I Pass   2: suminf.    4.45428 (31) obj. -49.2645 iterations 0
Cbc0038I Pass   3: suminf.    1.88297 (15) obj. -33.2148 iterations 15
Cbc0038I Pass   4: suminf.    0.44858 (4) obj. -8.03622 iterations 11
Cbc0038I Solution found of -1.80059
Cbc0038I Rounding solution of -6.70656 is better than previous of -1.80059

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 113 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -6.70656 to -13.4241 (0.03 seconds)
Cbc0038I Round again with cutoff of -17.5179
Cbc0038I Pass   5: suminf.    4.45428 (31) obj. -49.2645 iterations 0
Cbc0038I Pass   6: suminf.    4.45428 (31) obj. -49.2645 iterations 0
Cbc0038I Pass   7: suminf.    2.27856 (18) obj. -35.8192 iterations 12
Cbc0038I Pass   8: suminf.    0.38375 (6) obj. -17.5179 iterations 18
Cbc0038I Pass   9: suminf.    0.38375 (6) obj. -17.5179 iterations 0
Cbc0038I Pass  10: suminf.    0.56676 (2) obj. -17.5179 iterations 7
Cbc0038I Pass  11: suminf.    0.53806 (2) obj. -18.5687 iterations 1
Cbc0038I Pass  12: suminf.    0.61467 (2) obj. -17.5179 iterations 1
Cbc0038I Pass  13: suminf.    0.61467 (2) obj. -17.5179 iterations 0
Cbc0038I Pass  14: suminf.    2.42292 (13) obj. -17.5179 iterations 22
Cbc0038I Pass  15: suminf.    1.83358 (13) obj. -17.5179 iterations 4
Cbc0038I Pass  16: suminf.    1.52564 (7) obj. -17.5179 iterations 18
Cbc0038I Pass  17: suminf.    1.39838 (8) obj. -17.5179 iterations 2
Cbc0038I Pass  18: suminf.    1.52564 (7) obj. -17.5179 iterations 2
Cbc0038I Pass  19: suminf.    2.93272 (18) obj. -17.5179 iterations 32
Cbc0038I Pass  20: suminf.    1.75669 (14) obj. -17.5179 iterations 10
Cbc0038I Pass  21: suminf.    1.22321 (6) obj. -17.5179 iterations 13
Cbc0038I Pass  22: suminf.    1.09847 (6) obj. -17.9456 iterations 5
Cbc0038I Pass  23: suminf.    1.08317 (5) obj. -17.5179 iterations 13
Cbc0038I Pass  24: suminf.    0.95316 (3) obj. -17.5179 iterations 13
Cbc0038I Pass  25: suminf.    0.67939 (3) obj. -17.5179 iterations 2
Cbc0038I Pass  26: suminf.    0.67939 (3) obj. -17.5179 iterations 0
Cbc0038I Pass  27: suminf.    0.95316 (3) obj. -17.5179 iterations 4
Cbc0038I Pass  28: suminf.    2.33423 (11) obj. -17.5179 iterations 17
Cbc0038I Pass  29: suminf.    1.68823 (9) obj. -18.6725 iterations 8
Cbc0038I Pass  30: suminf.    0.93752 (5) obj. -17.5179 iterations 13
Cbc0038I Pass  31: suminf.    0.85188 (5) obj. -17.5179 iterations 6
Cbc0038I Pass  32: suminf.    0.88143 (5) obj. -17.5179 iterations 11
Cbc0038I Pass  33: suminf.    0.39583 (3) obj. -17.5179 iterations 3
Cbc0038I Pass  34: suminf.    0.61150 (3) obj. -17.5179 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 113 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -13.4241 - took 0.03 seconds
Cbc0012I Integer solution of -13.42412 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 99 rows 113 columns, reduced to 0 rows 0 columns
Cbc0031I 49 added rows had average density of 36.918367
Cbc0013I At root node, 49 cuts changed objective from -54.360824 to -20.542369 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12125 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1539 row cuts average 106.7 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 256 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1276 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 328 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.598 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.42412 best solution, best possible -20.542369 (2.23 seconds)
Cbc0038I Full problem 99 rows 113 columns, reduced to 29 rows 39 columns
Cbc0012I Integer solution of -13.64649 found by rounding after 5641 iterations and 66 nodes (2.74 seconds)
Cbc0001I Search completed - best objective -13.64649, took 6002 iterations and 80 nodes (2.77 seconds)
Cbc0032I Strong branching done 660 times (9010 iterations), fathomed 10 nodes and fixed 9 variables
Cbc0035I Maximum depth 19, 214 variables fixed on reduced cost
Total time (CPU seconds):       2.03   (Wallclock seconds):       2.79

