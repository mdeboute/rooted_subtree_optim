Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.85061e-05 - average 3.70121e-07, 15 fixed columns
Coin0506I Presolve 19 (-31) rows, 11 (-17) columns and 54 (-94) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Coin0511I After Postsolve, objective 537.10829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Coin0511I After Postsolve, objective 537.10829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 537.1082925 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 2.01389
Cbc0038I Pass   1: suminf.    0.54692 (2) obj. -515.508 iterations 10
Cbc0038I Solution found of -162.138
Cbc0038I Relaxing continuous gives -162.138
Cbc0038I Rounding solution of -212.433 is better than previous of -162.138

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -212.433 to -358.607 (0.01 seconds)
Cbc0038I Round again with cutoff of -376.161
Cbc0038I Pass   2: suminf.    0.54692 (2) obj. -515.508 iterations 0
Cbc0038I Pass   3: suminf.    0.35786 (1) obj. -376.161 iterations 4
Cbc0038I Pass   4: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass   5: suminf.    0.34959 (1) obj. -396.332 iterations 7
Cbc0038I Pass   6: suminf.    0.34959 (1) obj. -396.332 iterations 2
Cbc0038I Pass   7: suminf.    0.41011 (1) obj. -376.161 iterations 1
Cbc0038I Pass   8: suminf.    0.37398 (1) obj. -413.683 iterations 6
Cbc0038I Pass   9: suminf.    0.37398 (1) obj. -413.683 iterations 2
Cbc0038I Pass  10: suminf.    0.48656 (1) obj. -376.161 iterations 1
Cbc0038I Pass  11: suminf.    0.60830 (2) obj. -376.161 iterations 4
Cbc0038I Pass  12: suminf.    0.60830 (2) obj. -376.161 iterations 2
Cbc0038I Pass  13: suminf.    0.37404 (1) obj. -376.161 iterations 1
Cbc0038I Pass  14: suminf.    0.43902 (1) obj. -438.465 iterations 1
Cbc0038I Pass  15: suminf.    1.18742 (3) obj. -376.161 iterations 9
Cbc0038I Pass  16: suminf.    1.05607 (3) obj. -376.161 iterations 3
Cbc0038I Pass  17: suminf.    0.42711 (2) obj. -376.161 iterations 2
Cbc0038I Pass  18: suminf.    0.65687 (2) obj. -376.161 iterations 2
Cbc0038I Pass  19: suminf.    0.26829 (1) obj. -393.477 iterations 1
Cbc0038I Pass  20: suminf.    0.32025 (1) obj. -376.161 iterations 1
Cbc0038I Pass  21: suminf.    0.28455 (1) obj. -492.882 iterations 4
Cbc0038I Pass  22: suminf.    0.36525 (1) obj. -376.161 iterations 1
Cbc0038I Pass  23: suminf.    0.28455 (1) obj. -492.882 iterations 1
Cbc0038I Pass  24: suminf.    0.39422 (4) obj. -471.51 iterations 6
Cbc0038I Pass  25: suminf.    0.08130 (1) obj. -458.853 iterations 4
Cbc0038I Pass  26: suminf.    0.32940 (1) obj. -376.161 iterations 1
Cbc0038I Pass  27: suminf.    1.62178 (7) obj. -376.161 iterations 10
Cbc0038I Pass  28: suminf.    0.49235 (1) obj. -376.161 iterations 8
Cbc0038I Pass  29: suminf.    0.47967 (1) obj. -385.485 iterations 1
Cbc0038I Pass  30: suminf.    0.49721 (3) obj. -376.161 iterations 12
Cbc0038I Pass  31: suminf.    0.49721 (3) obj. -376.161 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -358.607 to -379.756 (0.02 seconds)
Cbc0038I Round again with cutoff of -410.635
Cbc0038I Pass  31: suminf.    0.54692 (2) obj. -515.508 iterations 0
Cbc0038I Pass  32: suminf.    0.25443 (1) obj. -410.635 iterations 4
Cbc0038I Pass  33: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass  34: suminf.    1.70648 (4) obj. -410.635 iterations 16
Cbc0038I Pass  35: suminf.    0.45862 (2) obj. -410.635 iterations 7
Cbc0038I Pass  36: suminf.    0.45071 (2) obj. -410.635 iterations 2
Cbc0038I Pass  37: suminf.    0.45071 (2) obj. -410.635 iterations 0
Cbc0038I Pass  38: suminf.    0.73926 (2) obj. -450.139 iterations 1
Cbc0038I Pass  39: suminf.    0.60170 (2) obj. -410.635 iterations 1
Cbc0038I Pass  40: suminf.    0.44538 (2) obj. -410.635 iterations 12
Cbc0038I Pass  41: suminf.    0.40960 (2) obj. -410.635 iterations 4
Cbc0038I Pass  42: suminf.    0.26154 (1) obj. -410.635 iterations 3
Cbc0038I Pass  43: suminf.    0.14634 (1) obj. -449.029 iterations 1
Cbc0038I Pass  44: suminf.    0.08130 (1) obj. -467.37 iterations 7
Cbc0038I Pass  45: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass  46: suminf.    0.25443 (1) obj. -410.635 iterations 2
Cbc0038I Pass  47: suminf.    0.73194 (2) obj. -410.635 iterations 3
Cbc0038I Pass  48: suminf.    0.27642 (1) obj. -423.265 iterations 2
Cbc0038I Pass  49: suminf.    0.31432 (1) obj. -410.635 iterations 1
Cbc0038I Pass  50: suminf.    0.60274 (2) obj. -447.738 iterations 2
Cbc0038I Pass  51: suminf.    1.21639 (3) obj. -410.635 iterations 8
Cbc0038I Pass  52: suminf.    1.21639 (3) obj. -410.635 iterations 2
Cbc0038I Pass  53: suminf.    0.84386 (2) obj. -410.635 iterations 3
Cbc0038I Pass  54: suminf.    0.48370 (2) obj. -410.635 iterations 1
Cbc0038I Pass  55: suminf.    0.35854 (5) obj. -410.635 iterations 6
Cbc0038I Pass  56: suminf.    0.22684 (2) obj. -410.635 iterations 7
Cbc0038I Pass  57: suminf.    0.03252 (1) obj. -477.924 iterations 4
Cbc0038I Pass  58: suminf.    0.03252 (1) obj. -477.924 iterations 0
Cbc0038I Pass  59: suminf.    0.23497 (1) obj. -410.635 iterations 2
Cbc0038I Pass  60: suminf.    0.03252 (1) obj. -477.924 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -379.756 - took 0.04 seconds
Cbc0012I Integer solution of -379.75625 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 11 rows 7 columns
Cbc0031I 9 added rows had average density of 13.666667
Cbc0013I At root node, 9 cuts changed objective from -534.1503 to -458.19989 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 349 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 291 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -379.75625, took 1867 iterations and 14 nodes (0.16 seconds)
Cbc0032I Strong branching done 138 times (1026 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-20) rows, 48 (-14) columns and 417 (-229) elements
Clp1000I sum of infeasibilities 6.21761e-08 - average 1.44596e-09, 39 fixed columns
Coin0506I Presolve 6 (-37) rows, 9 (-39) columns and 26 (-391) elements
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 1.7311026 - largest nonzero change 1.7703867e-05 ( 0.001281334%) - largest zero change 2.8312864e-05
Clp0000I Optimal - objective value 520.32973
Clp0000I Optimal - objective value 520.32973
Coin0511I After Postsolve, objective 520.32973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2459021 - largest nonzero change 1.0166249e-05 ( 0.00074158712%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 559.65391
Clp0000I Optimal - objective value 559.65391
Clp0000I Optimal - objective value 559.65391
Coin0511I After Postsolve, objective 559.65391, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 559.6539129 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 47 columns (47 integer (47 of which binary)) and 405 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.003%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.0492
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -159.138 iterations 17
Cbc0038I Solution found of -159.138
Cbc0038I Rounding solution of -214.803 is better than previous of -159.138

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -214.803 to -358.607 (0.02 seconds)
Cbc0038I Round again with cutoff of -376.251
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.34859 (1) obj. -376.251 iterations 5
Cbc0038I Pass   3: suminf.    0.08130 (1) obj. -465.337 iterations 3
Cbc0038I Pass   4: suminf.    0.34859 (1) obj. -376.251 iterations 1
Cbc0038I Pass   5: suminf.    2.52325 (14) obj. -376.251 iterations 9
Cbc0038I Pass   6: suminf.    0.05263 (1) obj. -379.651 iterations 8
Cbc0038I Pass   7: suminf.    0.05263 (1) obj. -379.651 iterations 2
Cbc0038I Solution found of -377.756
Cbc0038I Rounding solution of -379.756 is better than previous of -377.756

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 22 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -410.814
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.24489 (1) obj. -410.814 iterations 0
Cbc0038I Pass   9: suminf.    0.08130 (1) obj. -465.337 iterations 3
Cbc0038I Pass  10: suminf.    0.24489 (1) obj. -410.814 iterations 1
Cbc0038I Pass  11: suminf.    0.83940 (6) obj. -410.814 iterations 12
Cbc0038I Pass  12: suminf.    0.83940 (6) obj. -410.814 iterations 1
Cbc0038I Pass  13: suminf.    0.48780 (1) obj. -439.185 iterations 6
Cbc0038I Pass  14: suminf.    0.42707 (1) obj. -410.814 iterations 1
Cbc0038I Pass  15: suminf.    1.28382 (4) obj. -410.814 iterations 8
Cbc0038I Pass  16: suminf.    0.95715 (2) obj. -420.66 iterations 2
Cbc0038I Pass  17: suminf.    0.92416 (2) obj. -410.814 iterations 1
Cbc0038I Pass  18: suminf.    0.96104 (2) obj. -410.814 iterations 1
Cbc0038I Pass  19: suminf.    0.95501 (3) obj. -410.814 iterations 1
Cbc0038I Pass  20: suminf.    1.18064 (5) obj. -410.814 iterations 12
Cbc0038I Pass  21: suminf.    0.90894 (3) obj. -410.814 iterations 6
Cbc0038I Pass  22: suminf.    0.68358 (2) obj. -420.795 iterations 3
Cbc0038I Pass  23: suminf.    0.64883 (2) obj. -410.814 iterations 1
Cbc0038I Pass  24: suminf.    0.59186 (2) obj. -410.814 iterations 1
Cbc0038I Pass  25: suminf.    0.59186 (2) obj. -410.814 iterations 0
Cbc0038I Pass  26: suminf.    2.24091 (9) obj. -410.814 iterations 13
Cbc0038I Pass  27: suminf.    2.24091 (9) obj. -410.814 iterations 2
Cbc0038I Pass  28: suminf.    0.40497 (1) obj. -410.814 iterations 10
Cbc0038I Pass  29: suminf.    0.43089 (1) obj. -419.453 iterations 1
Cbc0038I Pass  30: suminf.    1.86596 (8) obj. -410.814 iterations 10
Cbc0038I Pass  31: suminf.    1.76892 (7) obj. -410.814 iterations 2
Cbc0038I Pass  32: suminf.    0.32272 (2) obj. -410.814 iterations 6
Cbc0038I Pass  33: suminf.    0.98641 (5) obj. -410.814 iterations 6
Cbc0038I Pass  34: suminf.    0.98641 (5) obj. -410.814 iterations 1
Cbc0038I Pass  35: suminf.    0.43089 (1) obj. -415.453 iterations 5
Cbc0038I Pass  36: suminf.    0.41698 (1) obj. -410.814 iterations 1
Cbc0038I Pass  37: suminf.    2.22988 (6) obj. -410.814 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -379.756 - took 0.02 seconds
Cbc0012I Integer solution of -379.75625 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 41 rows 47 columns, reduced to 20 rows 18 columns
Cbc0031I 11 added rows had average density of 19.909091
Cbc0013I At root node, 11 cuts changed objective from -535.04393 to -449.11903 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1192 row cuts average 3.9 elements, 7 column cuts (7 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 623 row cuts average 33.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 97 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 17 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 182 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -379.75625 best solution, best possible -449.11903 (1.53 seconds)
Cbc0001I Search completed - best objective -379.75625, took 2264 iterations and 10 nodes (2.12 seconds)
Cbc0032I Strong branching done 116 times (892 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       2.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.85061e-05 - average 3.70121e-07, 15 fixed columns
Coin0506I Presolve 19 (-31) rows, 11 (-17) columns and 54 (-94) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Coin0511I After Postsolve, objective 537.10829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Coin0511I After Postsolve, objective 537.10829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 537.1082925 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 2.01389
Cbc0038I Pass   1: suminf.    0.54692 (2) obj. -515.508 iterations 10
Cbc0038I Solution found of -162.138
Cbc0038I Relaxing continuous gives -162.138
Cbc0038I Rounding solution of -212.433 is better than previous of -162.138

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -212.433 to -358.607 (0.01 seconds)
Cbc0038I Round again with cutoff of -376.161
Cbc0038I Pass   2: suminf.    0.54692 (2) obj. -515.508 iterations 0
Cbc0038I Pass   3: suminf.    0.35786 (1) obj. -376.161 iterations 4
Cbc0038I Pass   4: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass   5: suminf.    0.34959 (1) obj. -396.332 iterations 7
Cbc0038I Pass   6: suminf.    0.34959 (1) obj. -396.332 iterations 2
Cbc0038I Pass   7: suminf.    0.41011 (1) obj. -376.161 iterations 1
Cbc0038I Pass   8: suminf.    0.37398 (1) obj. -413.683 iterations 6
Cbc0038I Pass   9: suminf.    0.37398 (1) obj. -413.683 iterations 2
Cbc0038I Pass  10: suminf.    0.48656 (1) obj. -376.161 iterations 1
Cbc0038I Pass  11: suminf.    0.60830 (2) obj. -376.161 iterations 4
Cbc0038I Pass  12: suminf.    0.60830 (2) obj. -376.161 iterations 2
Cbc0038I Pass  13: suminf.    0.37404 (1) obj. -376.161 iterations 1
Cbc0038I Pass  14: suminf.    0.43902 (1) obj. -438.465 iterations 1
Cbc0038I Pass  15: suminf.    1.18742 (3) obj. -376.161 iterations 9
Cbc0038I Pass  16: suminf.    1.05607 (3) obj. -376.161 iterations 3
Cbc0038I Pass  17: suminf.    0.42711 (2) obj. -376.161 iterations 2
Cbc0038I Pass  18: suminf.    0.65687 (2) obj. -376.161 iterations 2
Cbc0038I Pass  19: suminf.    0.26829 (1) obj. -393.477 iterations 1
Cbc0038I Pass  20: suminf.    0.32025 (1) obj. -376.161 iterations 1
Cbc0038I Pass  21: suminf.    0.28455 (1) obj. -492.882 iterations 4
Cbc0038I Pass  22: suminf.    0.36525 (1) obj. -376.161 iterations 1
Cbc0038I Pass  23: suminf.    0.28455 (1) obj. -492.882 iterations 1
Cbc0038I Pass  24: suminf.    0.39422 (4) obj. -471.51 iterations 6
Cbc0038I Pass  25: suminf.    0.08130 (1) obj. -458.853 iterations 4
Cbc0038I Pass  26: suminf.    0.32940 (1) obj. -376.161 iterations 1
Cbc0038I Pass  27: suminf.    1.62178 (7) obj. -376.161 iterations 10
Cbc0038I Pass  28: suminf.    0.49235 (1) obj. -376.161 iterations 8
Cbc0038I Pass  29: suminf.    0.47967 (1) obj. -385.485 iterations 1
Cbc0038I Pass  30: suminf.    0.49721 (3) obj. -376.161 iterations 12
Cbc0038I Pass  31: suminf.    0.49721 (3) obj. -376.161 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -358.607 to -379.756 (0.02 seconds)
Cbc0038I Round again with cutoff of -410.635
Cbc0038I Pass  31: suminf.    0.54692 (2) obj. -515.508 iterations 0
Cbc0038I Pass  32: suminf.    0.25443 (1) obj. -410.635 iterations 4
Cbc0038I Pass  33: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass  34: suminf.    1.70648 (4) obj. -410.635 iterations 16
Cbc0038I Pass  35: suminf.    0.45862 (2) obj. -410.635 iterations 7
Cbc0038I Pass  36: suminf.    0.45071 (2) obj. -410.635 iterations 2
Cbc0038I Pass  37: suminf.    0.45071 (2) obj. -410.635 iterations 0
Cbc0038I Pass  38: suminf.    0.73926 (2) obj. -450.139 iterations 1
Cbc0038I Pass  39: suminf.    0.60170 (2) obj. -410.635 iterations 1
Cbc0038I Pass  40: suminf.    0.44538 (2) obj. -410.635 iterations 12
Cbc0038I Pass  41: suminf.    0.40960 (2) obj. -410.635 iterations 4
Cbc0038I Pass  42: suminf.    0.26154 (1) obj. -410.635 iterations 3
Cbc0038I Pass  43: suminf.    0.14634 (1) obj. -449.029 iterations 1
Cbc0038I Pass  44: suminf.    0.08130 (1) obj. -467.37 iterations 7
Cbc0038I Pass  45: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass  46: suminf.    0.25443 (1) obj. -410.635 iterations 2
Cbc0038I Pass  47: suminf.    0.73194 (2) obj. -410.635 iterations 3
Cbc0038I Pass  48: suminf.    0.27642 (1) obj. -423.265 iterations 2
Cbc0038I Pass  49: suminf.    0.31432 (1) obj. -410.635 iterations 1
Cbc0038I Pass  50: suminf.    0.60274 (2) obj. -447.738 iterations 2
Cbc0038I Pass  51: suminf.    1.21639 (3) obj. -410.635 iterations 8
Cbc0038I Pass  52: suminf.    1.21639 (3) obj. -410.635 iterations 2
Cbc0038I Pass  53: suminf.    0.84386 (2) obj. -410.635 iterations 3
Cbc0038I Pass  54: suminf.    0.48370 (2) obj. -410.635 iterations 1
Cbc0038I Pass  55: suminf.    0.35854 (5) obj. -410.635 iterations 6
Cbc0038I Pass  56: suminf.    0.22684 (2) obj. -410.635 iterations 7
Cbc0038I Pass  57: suminf.    0.03252 (1) obj. -477.924 iterations 4
Cbc0038I Pass  58: suminf.    0.03252 (1) obj. -477.924 iterations 0
Cbc0038I Pass  59: suminf.    0.23497 (1) obj. -410.635 iterations 2
Cbc0038I Pass  60: suminf.    0.03252 (1) obj. -477.924 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -379.756 - took 0.02 seconds
Cbc0012I Integer solution of -379.75625 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 11 rows 7 columns
Cbc0031I 9 added rows had average density of 13.666667
Cbc0013I At root node, 9 cuts changed objective from -534.1503 to -458.19989 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 349 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 291 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -379.75625, took 1867 iterations and 14 nodes (0.18 seconds)
Cbc0032I Strong branching done 138 times (1026 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-23) rows, 46 (-17) columns and 377 (-272) elements
Clp1000I sum of infeasibilities 4.06085e-08 - average 9.66869e-10, 36 fixed columns
Coin0506I Presolve 9 (-33) rows, 10 (-36) columns and 34 (-343) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 1.6703987 - largest nonzero change 2.1704472e-05 ( 0.0016324266%) - largest zero change 2.9117611e-05
Clp0000I Optimal - objective value 520.32973
Clp0000I Optimal - objective value 520.32973
Coin0511I After Postsolve, objective 520.32973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3274082 - largest nonzero change 2.2024645e-05 ( 0.0016324266%) - largest zero change 2.9450707e-05
Clp0000I Optimal - objective value 559.65391
Clp0000I Optimal - objective value 559.65391
Clp0000I Optimal - objective value 559.65391
Coin0511I After Postsolve, objective 559.65391, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 559.6539129 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 46 columns (46 integer (46 of which binary)) and 387 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.602%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.56394
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -159.138 iterations 13
Cbc0038I Solution found of -159.138
Cbc0038I Rounding solution of -214.803 is better than previous of -159.138

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -214.803 to -358.607 (0.01 seconds)
Cbc0038I Round again with cutoff of -376.283
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.57183 (10) obj. -376.283 iterations 2
Cbc0038I Pass   3: suminf.    1.57183 (10) obj. -376.283 iterations 0
Cbc0038I Pass   4: suminf.    0.21951 (1) obj. -468.099 iterations 10
Cbc0038I Pass   5: suminf.    0.49499 (1) obj. -376.283 iterations 1
Cbc0038I Pass   6: suminf.    1.08738 (3) obj. -376.283 iterations 8
Cbc0038I Pass   7: suminf.    0.64870 (2) obj. -376.283 iterations 6
Cbc0038I Pass   8: suminf.    0.64870 (2) obj. -376.283 iterations 0
Cbc0038I Pass   9: suminf.    0.76491 (2) obj. -376.283 iterations 1
Cbc0038I Pass  10: suminf.    1.34213 (8) obj. -376.283 iterations 9
Cbc0038I Pass  11: suminf.    1.34213 (8) obj. -376.283 iterations 0
Cbc0038I Pass  12: suminf.    0.44715 (1) obj. -462.004 iterations 7
Cbc0038I Pass  13: suminf.    0.29565 (1) obj. -376.283 iterations 1
Cbc0038I Pass  14: suminf.    1.88336 (7) obj. -376.283 iterations 7
Cbc0038I Pass  15: suminf.    1.39800 (6) obj. -376.283 iterations 3
Cbc0038I Pass  16: suminf.    0.48825 (2) obj. -376.283 iterations 6
Cbc0038I Pass  17: suminf.    0.48825 (2) obj. -376.283 iterations 0
Cbc0038I Pass  18: suminf.    0.63010 (2) obj. -399.139 iterations 2
Cbc0038I Pass  19: suminf.    0.88943 (3) obj. -376.283 iterations 10
Cbc0038I Pass  20: suminf.    0.49834 (2) obj. -376.283 iterations 1
Cbc0038I Pass  21: suminf.    0.72282 (2) obj. -376.283 iterations 1
Cbc0038I Pass  22: suminf.    0.93911 (8) obj. -376.283 iterations 19
Cbc0038I Pass  23: suminf.    0.34025 (3) obj. -376.283 iterations 7
Cbc0038I Pass  24: suminf.    0.47400 (1) obj. -376.283 iterations 2
Cbc0038I Pass  25: suminf.    0.26016 (1) obj. -447.554 iterations 1
Cbc0038I Pass  26: suminf.    1.57886 (8) obj. -376.283 iterations 11
Cbc0038I Pass  27: suminf.    0.92309 (7) obj. -376.283 iterations 2
Cbc0038I Pass  28: suminf.    0.31793 (2) obj. -376.283 iterations 7
Cbc0038I Pass  29: suminf.    0.31793 (2) obj. -376.283 iterations 0
Cbc0038I Pass  30: suminf.    0.31793 (2) obj. -376.283 iterations 0
Cbc0038I Pass  31: suminf.    0.89810 (7) obj. -376.283 iterations 8
Cbc0038I Rounding solution of -364.849 is better than previous of -358.607

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -364.849 to -379.756 (0.05 seconds)
Cbc0038I Round again with cutoff of -410.879
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.52199 (10) obj. -410.879 iterations 0
Cbc0038I Pass  32: suminf.    0.08130 (1) obj. -465.337 iterations 2
Cbc0038I Pass  33: suminf.    0.08130 (1) obj. -465.337 iterations 0
Cbc0038I Pass  34: suminf.    0.24469 (1) obj. -410.879 iterations 1
Cbc0038I Pass  35: suminf.    0.56574 (2) obj. -410.879 iterations 5
Cbc0038I Pass  36: suminf.    0.08130 (1) obj. -459.337 iterations 3
Cbc0038I Pass  37: suminf.    0.22669 (1) obj. -410.879 iterations 1
Cbc0038I Pass  38: suminf.    1.63884 (6) obj. -410.879 iterations 10
Cbc0038I Pass  39: suminf.    0.52432 (6) obj. -410.879 iterations 4
Cbc0038I Pass  40: suminf.    0.77822 (2) obj. -410.879 iterations 5
Cbc0038I Pass  41: suminf.    0.14634 (1) obj. -434.029 iterations 2
Cbc0038I Pass  42: suminf.    0.21580 (1) obj. -410.879 iterations 1
Cbc0038I Pass  43: suminf.    0.61268 (3) obj. -456.485 iterations 7
Cbc0038I Pass  44: suminf.    0.14634 (1) obj. -435.029 iterations 6
Cbc0038I Pass  45: suminf.    0.21880 (1) obj. -410.879 iterations 1
Cbc0038I Pass  46: suminf.    0.99746 (4) obj. -410.879 iterations 7
Cbc0038I Pass  47: suminf.    0.19512 (1) obj. -417.771 iterations 5
Cbc0038I Pass  48: suminf.    0.21580 (1) obj. -410.879 iterations 1
Cbc0038I Pass  49: suminf.    2.49655 (8) obj. -410.879 iterations 13
Cbc0038I Pass  50: suminf.    0.68719 (3) obj. -410.879 iterations 3
Cbc0038I Pass  51: suminf.    0.68606 (4) obj. -410.879 iterations 1
Cbc0038I Pass  52: suminf.    0.90590 (3) obj. -410.879 iterations 4
Cbc0038I Pass  53: suminf.    0.85144 (2) obj. -414.24 iterations 2
Cbc0038I Pass  54: suminf.    1.00768 (5) obj. -410.879 iterations 2
Cbc0038I Pass  55: suminf.    0.86069 (2) obj. -410.879 iterations 1
Cbc0038I Pass  56: suminf.    1.36178 (5) obj. -410.879 iterations 5
Cbc0038I Pass  57: suminf.    0.94409 (3) obj. -410.879 iterations 3
Cbc0038I Pass  58: suminf.    0.91810 (3) obj. -413.174 iterations 3
Cbc0038I Pass  59: suminf.    0.92469 (5) obj. -410.879 iterations 5
Cbc0038I Pass  60: suminf.    0.85144 (2) obj. -412.24 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -379.756 - took 0.04 seconds
Cbc0012I Integer solution of -379.75625 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 41 rows 46 columns, reduced to 19 rows 18 columns
Cbc0031I 18 added rows had average density of 21.055556
Cbc0013I At root node, 18 cuts changed objective from -535.37101 to -445.13638 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1059 row cuts average 2.8 elements, 6 column cuts (6 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 380 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 54 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 25 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.850 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -379.75625 best solution, best possible -445.13638 (1.78 seconds)
Cbc0010I After 8 nodes, 4 on tree, -379.75625 best solution, best possible -445.13638 (2.51 seconds)
Cbc0001I Search completed - best objective -379.75625, took 2047 iterations and 12 nodes (2.60 seconds)
Cbc0032I Strong branching done 218 times (1769 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 23 variables fixed on reduced cost
Total time (CPU seconds):       1.64   (Wallclock seconds):       2.60

