Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-19) rows, 16 (-8) columns and 82 (-47) elements
Clp1000I sum of infeasibilities 1.84446e-06 - average 6.58734e-08, 4 fixed columns
Coin0506I Presolve 18 (-10) rows, 12 (-4) columns and 54 (-28) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 83.37064
Clp0000I Optimal - objective value 83.37064
Coin0511I After Postsolve, objective 83.37064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.37064
Clp0000I Optimal - objective value 83.37064
Clp0000I Optimal - objective value 83.37064
Coin0511I After Postsolve, objective 83.37064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.3706404 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 16 columns (15 integer (15 of which binary)) and 85 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.682%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.7974
Cbc0038I Pass   1: suminf.    0.56913 (2) obj. -49.627 iterations 8
Cbc0038I Solution found of -40.8
Cbc0038I Relaxing continuous gives -40.8
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 16 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -40.8 to -45.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -49.3711
Cbc0038I Pass   2: suminf.    0.56913 (2) obj. -49.627 iterations 0
Cbc0038I Pass   3: suminf.    0.32061 (3) obj. -49.3711 iterations 3
Cbc0038I Pass   4: suminf.    0.56913 (2) obj. -49.627 iterations 3
Cbc0038I Pass   5: suminf.    0.55006 (2) obj. -49.3711 iterations 3
Cbc0038I Pass   6: suminf.    0.55006 (2) obj. -49.3711 iterations 1
Cbc0038I Pass   7: suminf.    0.97389 (4) obj. -49.3711 iterations 5
Cbc0038I Pass   8: suminf.    0.59939 (3) obj. -49.3711 iterations 4
Cbc0038I Pass   9: suminf.    0.56444 (2) obj. -49.3711 iterations 1
Cbc0038I Pass  10: suminf.    0.49519 (1) obj. -49.3711 iterations 5
Cbc0038I Pass  11: suminf.    0.23810 (1) obj. -58.5238 iterations 1
Cbc0038I Pass  12: suminf.    0.49519 (1) obj. -49.3711 iterations 1
Cbc0038I Pass  13: suminf.    1.13513 (3) obj. -49.3711 iterations 4
Cbc0038I Pass  14: suminf.    1.05378 (3) obj. -49.3711 iterations 2
Cbc0038I Pass  15: suminf.    1.13513 (3) obj. -49.3711 iterations 3
Cbc0038I Pass  16: suminf.    1.29527 (5) obj. -49.3711 iterations 5
Cbc0038I Pass  17: suminf.    0.70697 (3) obj. -49.3711 iterations 5
Cbc0038I Pass  18: suminf.    0.32061 (3) obj. -49.3711 iterations 4
Cbc0038I Pass  19: suminf.    0.56913 (2) obj. -49.627 iterations 3
Cbc0038I Pass  20: suminf.    0.50090 (3) obj. -49.3711 iterations 9
Cbc0038I Pass  21: suminf.    0.38463 (2) obj. -49.3711 iterations 3
Cbc0038I Pass  22: suminf.    0.82934 (3) obj. -49.3711 iterations 4
Cbc0038I Pass  23: suminf.    0.88235 (2) obj. -52.7941 iterations 2
Cbc0038I Pass  24: suminf.    0.88235 (2) obj. -52.7941 iterations 0
Cbc0038I Pass  25: suminf.    0.68023 (2) obj. -57.6977 iterations 5
Cbc0038I Pass  26: suminf.    0.08333 (1) obj. -58.0667 iterations 1
Cbc0038I Pass  27: suminf.    0.14106 (3) obj. -49.3711 iterations 4
Cbc0038I Pass  28: suminf.    0.70588 (2) obj. -61.7647 iterations 2
Cbc0038I Pass  29: suminf.    0.45161 (2) obj. -51.1419 iterations 8
Cbc0038I Pass  30: suminf.    0.32061 (3) obj. -49.3711 iterations 3
Cbc0038I Pass  31: suminf.    0.56913 (2) obj. -49.627 iterations 3
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 16 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -55.7993
Cbc0038I Pass  31: suminf.    0.88891 (4) obj. -55.7993 iterations 2
Cbc0038I Pass  32: suminf.    0.88891 (4) obj. -55.7993 iterations 0
Cbc0038I Pass  33: suminf.    0.58065 (2) obj. -55.7993 iterations 3
Cbc0038I Pass  34: suminf.    0.48028 (3) obj. -55.7993 iterations 3
Cbc0038I Pass  35: suminf.    1.41832 (5) obj. -55.7993 iterations 4
Cbc0038I Pass  36: suminf.    0.82635 (4) obj. -55.7993 iterations 5
Cbc0038I Pass  37: suminf.    0.31776 (2) obj. -55.7993 iterations 4
Cbc0038I Pass  38: suminf.    0.96478 (2) obj. -55.7993 iterations 3
Cbc0038I Pass  39: suminf.    1.32072 (4) obj. -55.7993 iterations 2
Cbc0038I Pass  40: suminf.    1.64220 (5) obj. -55.7993 iterations 7
Cbc0038I Pass  41: suminf.    0.38433 (3) obj. -55.7993 iterations 5
Cbc0038I Pass  42: suminf.    0.87962 (3) obj. -55.7993 iterations 3
Cbc0038I Pass  43: suminf.    0.34831 (2) obj. -55.7993 iterations 2
Cbc0038I Pass  44: suminf.    1.79144 (7) obj. -55.7993 iterations 10
Cbc0038I Pass  45: suminf.    0.98052 (5) obj. -55.7993 iterations 2
Cbc0038I Pass  46: suminf.    0.67416 (2) obj. -55.7993 iterations 6
Cbc0038I Pass  47: suminf.    0.62864 (2) obj. -55.7993 iterations 2
Cbc0038I Pass  48: suminf.    0.99114 (5) obj. -55.7993 iterations 4
Cbc0038I Pass  49: suminf.    0.32180 (3) obj. -55.7993 iterations 5
Cbc0038I Pass  50: suminf.    1.43860 (4) obj. -55.7993 iterations 4
Cbc0038I Pass  51: suminf.    1.43860 (4) obj. -55.7993 iterations 2
Cbc0038I Pass  52: suminf.    0.80493 (3) obj. -55.7993 iterations 5
Cbc0038I Pass  53: suminf.    0.85417 (3) obj. -55.7993 iterations 2
Cbc0038I Pass  54: suminf.    0.32353 (3) obj. -55.7993 iterations 1
Cbc0038I Pass  55: suminf.    0.89139 (5) obj. -55.7993 iterations 4
Cbc0038I Pass  56: suminf.    0.83851 (3) obj. -55.7993 iterations 2
Cbc0038I Pass  57: suminf.    0.80493 (3) obj. -55.7993 iterations 2
Cbc0038I Pass  58: suminf.    0.85417 (3) obj. -55.7993 iterations 2
Cbc0038I Pass  59: suminf.    0.32353 (3) obj. -55.7993 iterations 1
Cbc0038I Pass  60: suminf.    0.89139 (5) obj. -55.7993 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 16 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -45.6 - took 0.03 seconds
Cbc0012I Integer solution of -45.6 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 28 rows 16 columns, reduced to 14 rows 10 columns
Cbc0031I 6 added rows had average density of 12.333333
Cbc0013I At root node, 6 cuts changed objective from -81.511975 to -57.940094 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 181 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 308 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0004I Integer solution of -46.8 found after 863 iterations and 2 nodes (0.08 seconds)
Cbc0001I Search completed - best objective -46.80000000000001, took 920 iterations and 4 nodes (0.08 seconds)
Cbc0032I Strong branching done 26 times (133 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-16) rows, 32 (-12) columns and 210 (-150) elements
Clp1000I sum of infeasibilities 2.61436e-10 - average 8.71455e-12, 3 fixed columns
Coin0506I Presolve 27 (-3) rows, 29 (-3) columns and 167 (-43) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 104.07032
Clp0000I Optimal - objective value 104.07032
Coin0511I After Postsolve, objective 104.07032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 104.07032
Clp0000I Optimal - objective value 104.07032
Clp0000I Optimal - objective value 104.07032
Coin0511I After Postsolve, objective 104.07032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.0703229 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 32 columns (32 integer (32 of which binary)) and 215 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.038%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.71606
Cbc0038I Pass   1: suminf.    1.52330 (9) obj. -76.1583 iterations 5
Cbc0038I Pass   2: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Solution found of -45.6
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 32 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -50.3775
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Pass   4: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Pass   5: suminf.    0.21257 (2) obj. -50.3775 iterations 11
Cbc0038I Pass   6: suminf.    0.23810 (1) obj. -58.5238 iterations 4
Cbc0038I Pass   7: suminf.    0.46692 (1) obj. -50.3775 iterations 1
Cbc0038I Pass   8: suminf.    0.56619 (3) obj. -50.3775 iterations 4
Cbc0038I Pass   9: suminf.    0.48077 (2) obj. -52.8962 iterations 1
Cbc0038I Pass  10: suminf.    0.17711 (1) obj. -50.3775 iterations 4
Cbc0038I Pass  11: suminf.    0.60147 (3) obj. -50.3775 iterations 3
Cbc0038I Pass  12: suminf.    0.31572 (2) obj. -50.3775 iterations 2
Cbc0038I Pass  13: suminf.    0.23810 (1) obj. -58.5238 iterations 3
Cbc0038I Pass  14: suminf.    0.46692 (1) obj. -50.3775 iterations 1
Cbc0038I Pass  15: suminf.    1.61786 (5) obj. -55.1069 iterations 15
Cbc0038I Pass  16: suminf.    1.36922 (5) obj. -50.3775 iterations 1
Cbc0038I Pass  17: suminf.    0.70588 (2) obj. -50.7647 iterations 4
Cbc0038I Pass  18: suminf.    0.68898 (2) obj. -50.3775 iterations 1
Cbc0038I Pass  19: suminf.    1.53727 (8) obj. -50.3775 iterations 3
Cbc0038I Pass  20: suminf.    0.96544 (3) obj. -50.3775 iterations 2
Cbc0038I Pass  21: suminf.    1.01117 (3) obj. -50.3775 iterations 2
Cbc0038I Pass  22: suminf.    1.01117 (3) obj. -50.3775 iterations 0
Cbc0038I Pass  23: suminf.    0.75302 (3) obj. -50.3775 iterations 3
Cbc0038I Pass  24: suminf.    0.75302 (3) obj. -50.3775 iterations 0
Cbc0038I Pass  25: suminf.    1.01070 (3) obj. -58.8021 iterations 1
Cbc0038I Pass  26: suminf.    0.61590 (3) obj. -50.3775 iterations 1
Cbc0038I Pass  27: suminf.    2.62433 (8) obj. -50.3775 iterations 5
Cbc0038I Pass  28: suminf.    1.18111 (4) obj. -50.3775 iterations 2
Cbc0038I Pass  29: suminf.    0.70942 (3) obj. -58.599 iterations 2
Cbc0038I Pass  30: suminf.    0.53454 (2) obj. -50.3775 iterations 3
Cbc0038I Pass  31: suminf.    0.53525 (3) obj. -50.3775 iterations 1
Cbc0038I Pass  32: suminf.    0.87504 (3) obj. -50.3775 iterations 1
Cbc0038I Rounding solution of -46.8 is better than previous of -45.6

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 32 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -58.6173
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Pass  33: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Pass  34: suminf.    0.68897 (3) obj. -58.6173 iterations 11
Cbc0038I Pass  35: suminf.    0.48918 (2) obj. -68.2597 iterations 4
Cbc0038I Pass  36: suminf.    0.24529 (2) obj. -58.6173 iterations 3
Cbc0038I Pass  37: suminf.    0.24535 (2) obj. -58.6173 iterations 2
Cbc0038I Pass  38: suminf.    0.36606 (2) obj. -58.6173 iterations 2
Cbc0038I Pass  39: suminf.    1.04804 (5) obj. -65.689 iterations 12
Cbc0038I Pass  40: suminf.    1.04804 (5) obj. -65.689 iterations 0
Cbc0038I Pass  41: suminf.    0.54877 (3) obj. -58.6173 iterations 8
Cbc0038I Pass  42: suminf.    0.52194 (3) obj. -58.6173 iterations 3
Cbc0038I Pass  43: suminf.    0.62994 (3) obj. -58.6173 iterations 3
Cbc0038I Pass  44: suminf.    2.29795 (12) obj. -58.6173 iterations 10
Cbc0038I Pass  45: suminf.    2.28770 (8) obj. -58.6173 iterations 1
Cbc0038I Pass  46: suminf.    1.37014 (6) obj. -58.6173 iterations 8
Cbc0038I Pass  47: suminf.    0.90831 (3) obj. -58.6173 iterations 3
Cbc0038I Pass  48: suminf.    1.17876 (3) obj. -58.6173 iterations 3
Cbc0038I Pass  49: suminf.    0.72056 (3) obj. -58.6173 iterations 19
Cbc0038I Pass  50: suminf.    0.52569 (3) obj. -58.6173 iterations 2
Cbc0038I Pass  51: suminf.    0.53341 (3) obj. -58.6173 iterations 4
Cbc0038I Pass  52: suminf.    0.70588 (2) obj. -59.7647 iterations 2
Cbc0038I Pass  53: suminf.    0.65578 (2) obj. -58.6173 iterations 1
Cbc0038I Pass  54: suminf.    1.68768 (8) obj. -58.6173 iterations 5
Cbc0038I Pass  55: suminf.    1.68768 (8) obj. -58.6173 iterations 0
Cbc0038I Pass  56: suminf.    0.84839 (3) obj. -58.6173 iterations 7
Cbc0038I Pass  57: suminf.    0.84839 (3) obj. -58.6173 iterations 1
Cbc0038I Pass  58: suminf.    1.01070 (3) obj. -65.8021 iterations 1
Cbc0038I Pass  59: suminf.    0.67400 (3) obj. -58.6173 iterations 1
Cbc0038I Pass  60: suminf.    1.25086 (5) obj. -58.6173 iterations 3
Cbc0038I Pass  61: suminf.    1.25086 (5) obj. -58.6173 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 32 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -46.8 - took 0.01 seconds
Cbc0012I Integer solution of -46.8 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 30 rows 32 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 6 cuts changed objective from -91.5763 to -47.301605 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 2.3 elements, 13 column cuts (13 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 34 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0001I Search completed - best objective -46.80000000000001, took 54 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-19) rows, 16 (-8) columns and 82 (-47) elements
Clp1000I sum of infeasibilities 1.84446e-06 - average 6.58734e-08, 4 fixed columns
Coin0506I Presolve 18 (-10) rows, 12 (-4) columns and 54 (-28) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 83.37064
Clp0000I Optimal - objective value 83.37064
Coin0511I After Postsolve, objective 83.37064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.37064
Clp0000I Optimal - objective value 83.37064
Clp0000I Optimal - objective value 83.37064
Coin0511I After Postsolve, objective 83.37064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.3706404 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 16 columns (15 integer (15 of which binary)) and 85 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.682%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.7974
Cbc0038I Pass   1: suminf.    0.56913 (2) obj. -49.627 iterations 8
Cbc0038I Solution found of -40.8
Cbc0038I Relaxing continuous gives -40.8
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 16 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -40.8 to -45.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -49.3711
Cbc0038I Pass   2: suminf.    0.56913 (2) obj. -49.627 iterations 0
Cbc0038I Pass   3: suminf.    0.32061 (3) obj. -49.3711 iterations 3
Cbc0038I Pass   4: suminf.    0.56913 (2) obj. -49.627 iterations 3
Cbc0038I Pass   5: suminf.    0.55006 (2) obj. -49.3711 iterations 3
Cbc0038I Pass   6: suminf.    0.55006 (2) obj. -49.3711 iterations 1
Cbc0038I Pass   7: suminf.    0.97389 (4) obj. -49.3711 iterations 5
Cbc0038I Pass   8: suminf.    0.59939 (3) obj. -49.3711 iterations 4
Cbc0038I Pass   9: suminf.    0.56444 (2) obj. -49.3711 iterations 1
Cbc0038I Pass  10: suminf.    0.49519 (1) obj. -49.3711 iterations 5
Cbc0038I Pass  11: suminf.    0.23810 (1) obj. -58.5238 iterations 1
Cbc0038I Pass  12: suminf.    0.49519 (1) obj. -49.3711 iterations 1
Cbc0038I Pass  13: suminf.    1.13513 (3) obj. -49.3711 iterations 4
Cbc0038I Pass  14: suminf.    1.05378 (3) obj. -49.3711 iterations 2
Cbc0038I Pass  15: suminf.    1.13513 (3) obj. -49.3711 iterations 3
Cbc0038I Pass  16: suminf.    1.29527 (5) obj. -49.3711 iterations 5
Cbc0038I Pass  17: suminf.    0.70697 (3) obj. -49.3711 iterations 5
Cbc0038I Pass  18: suminf.    0.32061 (3) obj. -49.3711 iterations 4
Cbc0038I Pass  19: suminf.    0.56913 (2) obj. -49.627 iterations 3
Cbc0038I Pass  20: suminf.    0.50090 (3) obj. -49.3711 iterations 9
Cbc0038I Pass  21: suminf.    0.38463 (2) obj. -49.3711 iterations 3
Cbc0038I Pass  22: suminf.    0.82934 (3) obj. -49.3711 iterations 4
Cbc0038I Pass  23: suminf.    0.88235 (2) obj. -52.7941 iterations 2
Cbc0038I Pass  24: suminf.    0.88235 (2) obj. -52.7941 iterations 0
Cbc0038I Pass  25: suminf.    0.68023 (2) obj. -57.6977 iterations 5
Cbc0038I Pass  26: suminf.    0.08333 (1) obj. -58.0667 iterations 1
Cbc0038I Pass  27: suminf.    0.14106 (3) obj. -49.3711 iterations 4
Cbc0038I Pass  28: suminf.    0.70588 (2) obj. -61.7647 iterations 2
Cbc0038I Pass  29: suminf.    0.45161 (2) obj. -51.1419 iterations 8
Cbc0038I Pass  30: suminf.    0.32061 (3) obj. -49.3711 iterations 3
Cbc0038I Pass  31: suminf.    0.56913 (2) obj. -49.627 iterations 3
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 16 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -55.7993
Cbc0038I Pass  31: suminf.    0.88891 (4) obj. -55.7993 iterations 2
Cbc0038I Pass  32: suminf.    0.88891 (4) obj. -55.7993 iterations 0
Cbc0038I Pass  33: suminf.    0.58065 (2) obj. -55.7993 iterations 3
Cbc0038I Pass  34: suminf.    0.48028 (3) obj. -55.7993 iterations 3
Cbc0038I Pass  35: suminf.    1.41832 (5) obj. -55.7993 iterations 4
Cbc0038I Pass  36: suminf.    0.82635 (4) obj. -55.7993 iterations 5
Cbc0038I Pass  37: suminf.    0.31776 (2) obj. -55.7993 iterations 4
Cbc0038I Pass  38: suminf.    0.96478 (2) obj. -55.7993 iterations 3
Cbc0038I Pass  39: suminf.    1.32072 (4) obj. -55.7993 iterations 2
Cbc0038I Pass  40: suminf.    1.64220 (5) obj. -55.7993 iterations 7
Cbc0038I Pass  41: suminf.    0.38433 (3) obj. -55.7993 iterations 5
Cbc0038I Pass  42: suminf.    0.87962 (3) obj. -55.7993 iterations 3
Cbc0038I Pass  43: suminf.    0.34831 (2) obj. -55.7993 iterations 2
Cbc0038I Pass  44: suminf.    1.79144 (7) obj. -55.7993 iterations 10
Cbc0038I Pass  45: suminf.    0.98052 (5) obj. -55.7993 iterations 2
Cbc0038I Pass  46: suminf.    0.67416 (2) obj. -55.7993 iterations 6
Cbc0038I Pass  47: suminf.    0.62864 (2) obj. -55.7993 iterations 2
Cbc0038I Pass  48: suminf.    0.99114 (5) obj. -55.7993 iterations 4
Cbc0038I Pass  49: suminf.    0.32180 (3) obj. -55.7993 iterations 5
Cbc0038I Pass  50: suminf.    1.43860 (4) obj. -55.7993 iterations 4
Cbc0038I Pass  51: suminf.    1.43860 (4) obj. -55.7993 iterations 2
Cbc0038I Pass  52: suminf.    0.80493 (3) obj. -55.7993 iterations 5
Cbc0038I Pass  53: suminf.    0.85417 (3) obj. -55.7993 iterations 2
Cbc0038I Pass  54: suminf.    0.32353 (3) obj. -55.7993 iterations 1
Cbc0038I Pass  55: suminf.    0.89139 (5) obj. -55.7993 iterations 4
Cbc0038I Pass  56: suminf.    0.83851 (3) obj. -55.7993 iterations 2
Cbc0038I Pass  57: suminf.    0.80493 (3) obj. -55.7993 iterations 2
Cbc0038I Pass  58: suminf.    0.85417 (3) obj. -55.7993 iterations 2
Cbc0038I Pass  59: suminf.    0.32353 (3) obj. -55.7993 iterations 1
Cbc0038I Pass  60: suminf.    0.89139 (5) obj. -55.7993 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 16 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -45.6 - took 0.02 seconds
Cbc0012I Integer solution of -45.6 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 28 rows 16 columns, reduced to 14 rows 10 columns
Cbc0031I 6 added rows had average density of 12.333333
Cbc0013I At root node, 6 cuts changed objective from -81.511975 to -57.940094 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 181 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 308 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0004I Integer solution of -46.8 found after 863 iterations and 2 nodes (0.09 seconds)
Cbc0001I Search completed - best objective -46.80000000000001, took 920 iterations and 4 nodes (0.10 seconds)
Cbc0032I Strong branching done 26 times (133 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-17) rows, 32 (-13) columns and 210 (-151) elements
Clp1000I sum of infeasibilities 2.61436e-10 - average 8.71455e-12, 3 fixed columns
Coin0506I Presolve 27 (-3) rows, 29 (-3) columns and 167 (-43) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 104.07032
Clp0000I Optimal - objective value 104.07032
Coin0511I After Postsolve, objective 104.07032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 104.07032
Clp0000I Optimal - objective value 104.07032
Clp0000I Optimal - objective value 104.07032
Coin0511I After Postsolve, objective 104.07032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.0703229 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 32 columns (32 integer (32 of which binary)) and 215 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.038%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.71606
Cbc0038I Pass   1: suminf.    1.52330 (9) obj. -76.1583 iterations 5
Cbc0038I Pass   2: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Solution found of -45.6
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 32 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -50.3775
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Pass   4: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Pass   5: suminf.    0.21257 (2) obj. -50.3775 iterations 11
Cbc0038I Pass   6: suminf.    0.23810 (1) obj. -58.5238 iterations 4
Cbc0038I Pass   7: suminf.    0.46692 (1) obj. -50.3775 iterations 1
Cbc0038I Pass   8: suminf.    0.56619 (3) obj. -50.3775 iterations 4
Cbc0038I Pass   9: suminf.    0.48077 (2) obj. -52.8962 iterations 1
Cbc0038I Pass  10: suminf.    0.17711 (1) obj. -50.3775 iterations 4
Cbc0038I Pass  11: suminf.    0.60147 (3) obj. -50.3775 iterations 3
Cbc0038I Pass  12: suminf.    0.31572 (2) obj. -50.3775 iterations 2
Cbc0038I Pass  13: suminf.    0.23810 (1) obj. -58.5238 iterations 3
Cbc0038I Pass  14: suminf.    0.46692 (1) obj. -50.3775 iterations 1
Cbc0038I Pass  15: suminf.    1.61786 (5) obj. -55.1069 iterations 15
Cbc0038I Pass  16: suminf.    1.36922 (5) obj. -50.3775 iterations 1
Cbc0038I Pass  17: suminf.    0.70588 (2) obj. -50.7647 iterations 4
Cbc0038I Pass  18: suminf.    0.68898 (2) obj. -50.3775 iterations 1
Cbc0038I Pass  19: suminf.    1.53727 (8) obj. -50.3775 iterations 3
Cbc0038I Pass  20: suminf.    0.96544 (3) obj. -50.3775 iterations 2
Cbc0038I Pass  21: suminf.    1.01117 (3) obj. -50.3775 iterations 2
Cbc0038I Pass  22: suminf.    1.01117 (3) obj. -50.3775 iterations 0
Cbc0038I Pass  23: suminf.    0.75302 (3) obj. -50.3775 iterations 3
Cbc0038I Pass  24: suminf.    0.75302 (3) obj. -50.3775 iterations 0
Cbc0038I Pass  25: suminf.    1.01070 (3) obj. -58.8021 iterations 1
Cbc0038I Pass  26: suminf.    0.61590 (3) obj. -50.3775 iterations 1
Cbc0038I Pass  27: suminf.    2.62433 (8) obj. -50.3775 iterations 5
Cbc0038I Pass  28: suminf.    1.18111 (4) obj. -50.3775 iterations 2
Cbc0038I Pass  29: suminf.    0.70942 (3) obj. -58.599 iterations 2
Cbc0038I Pass  30: suminf.    0.53454 (2) obj. -50.3775 iterations 3
Cbc0038I Pass  31: suminf.    0.53525 (3) obj. -50.3775 iterations 1
Cbc0038I Pass  32: suminf.    0.87504 (3) obj. -50.3775 iterations 1
Cbc0038I Rounding solution of -46.8 is better than previous of -45.6

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 32 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -58.6173
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Pass  33: suminf.    1.52330 (9) obj. -76.1583 iterations 0
Cbc0038I Pass  34: suminf.    0.68897 (3) obj. -58.6173 iterations 11
Cbc0038I Pass  35: suminf.    0.48918 (2) obj. -68.2597 iterations 4
Cbc0038I Pass  36: suminf.    0.24529 (2) obj. -58.6173 iterations 3
Cbc0038I Pass  37: suminf.    0.24535 (2) obj. -58.6173 iterations 2
Cbc0038I Pass  38: suminf.    0.36606 (2) obj. -58.6173 iterations 2
Cbc0038I Pass  39: suminf.    1.04804 (5) obj. -65.689 iterations 12
Cbc0038I Pass  40: suminf.    1.04804 (5) obj. -65.689 iterations 0
Cbc0038I Pass  41: suminf.    0.54877 (3) obj. -58.6173 iterations 8
Cbc0038I Pass  42: suminf.    0.52194 (3) obj. -58.6173 iterations 3
Cbc0038I Pass  43: suminf.    0.62994 (3) obj. -58.6173 iterations 3
Cbc0038I Pass  44: suminf.    2.29795 (12) obj. -58.6173 iterations 10
Cbc0038I Pass  45: suminf.    2.28770 (8) obj. -58.6173 iterations 1
Cbc0038I Pass  46: suminf.    1.37014 (6) obj. -58.6173 iterations 8
Cbc0038I Pass  47: suminf.    0.90831 (3) obj. -58.6173 iterations 3
Cbc0038I Pass  48: suminf.    1.17876 (3) obj. -58.6173 iterations 3
Cbc0038I Pass  49: suminf.    0.72056 (3) obj. -58.6173 iterations 19
Cbc0038I Pass  50: suminf.    0.52569 (3) obj. -58.6173 iterations 2
Cbc0038I Pass  51: suminf.    0.53341 (3) obj. -58.6173 iterations 4
Cbc0038I Pass  52: suminf.    0.70588 (2) obj. -59.7647 iterations 2
Cbc0038I Pass  53: suminf.    0.65578 (2) obj. -58.6173 iterations 1
Cbc0038I Pass  54: suminf.    1.68768 (8) obj. -58.6173 iterations 5
Cbc0038I Pass  55: suminf.    1.68768 (8) obj. -58.6173 iterations 0
Cbc0038I Pass  56: suminf.    0.84839 (3) obj. -58.6173 iterations 7
Cbc0038I Pass  57: suminf.    0.84839 (3) obj. -58.6173 iterations 1
Cbc0038I Pass  58: suminf.    1.01070 (3) obj. -65.8021 iterations 1
Cbc0038I Pass  59: suminf.    0.67400 (3) obj. -58.6173 iterations 1
Cbc0038I Pass  60: suminf.    1.25086 (5) obj. -58.6173 iterations 3
Cbc0038I Pass  61: suminf.    1.25086 (5) obj. -58.6173 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 32 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -46.8 - took 0.02 seconds
Cbc0012I Integer solution of -46.8 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 30 rows 32 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 6 cuts changed objective from -91.5763 to -47.301605 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 2.3 elements, 13 column cuts (13 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 34 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0001I Search completed - best objective -46.80000000000001, took 54 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.12

