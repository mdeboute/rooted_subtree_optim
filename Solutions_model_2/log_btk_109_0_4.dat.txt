Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 158 (-62) rows, 81 (-30) columns and 394 (-150) elements
Clp0000I Optimal - objective value 9388836
Coin0511I After Postsolve, objective 9388836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9388836.049 - 69 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 158 rows, 81 columns (80 integer (80 of which binary)) and 394 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.189%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 3.44798
Cbc0038I Pass   1: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 21
Cbc0038I Solution found of -9.14167e+06
Cbc0038I Relaxing continuous gives -9.14167e+06
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 81 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -9.16639e+06
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 0
Cbc0038I Pass   3: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 9
Cbc0038I Pass   4: suminf.    0.57364 (4) obj. -9.16639e+06 iterations 11
Cbc0038I Pass   5: suminf.    0.54323 (2) obj. -9.16639e+06 iterations 9
Cbc0038I Pass   6: suminf.    0.36949 (2) obj. -9.16639e+06 iterations 26
Cbc0038I Pass   7: suminf.    0.23410 (3) obj. -9.16639e+06 iterations 4
Cbc0038I Pass   8: suminf.    0.29167 (3) obj. -9.18914e+06 iterations 9
Cbc0038I Pass   9: suminf.    0.32729 (4) obj. -9.16639e+06 iterations 14
Cbc0038I Pass  10: suminf.    0.32729 (4) obj. -9.16639e+06 iterations 4
Cbc0038I Pass  11: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 8
Cbc0038I Pass  12: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 10
Cbc0038I Pass  13: suminf.    1.37131 (8) obj. -9.16639e+06 iterations 15
Cbc0038I Pass  14: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 16
Cbc0038I Pass  15: suminf.    0.05507 (3) obj. -9.16639e+06 iterations 7
Cbc0038I Pass  16: suminf.    0.05507 (3) obj. -9.16639e+06 iterations 9
Cbc0038I Pass  17: suminf.    0.12500 (3) obj. -9.19403e+06 iterations 7
Cbc0038I Pass  18: suminf.    1.51076 (5) obj. -9.16639e+06 iterations 22
Cbc0038I Pass  19: suminf.    1.16044 (3) obj. -9.16639e+06 iterations 19
Cbc0038I Pass  20: suminf.    1.37500 (3) obj. -9.25119e+06 iterations 8
Cbc0038I Pass  21: suminf.    1.82982 (6) obj. -9.16639e+06 iterations 8
Cbc0038I Pass  22: suminf.    1.37500 (3) obj. -9.25119e+06 iterations 9
Cbc0038I Pass  23: suminf.    1.44652 (4) obj. -9.16639e+06 iterations 7
Cbc0038I Pass  24: suminf.    1.48751 (5) obj. -9.16639e+06 iterations 17
Cbc0038I Pass  25: suminf.    1.48751 (5) obj. -9.16639e+06 iterations 2
Cbc0038I Pass  26: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 26
Cbc0038I Pass  27: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 0
Cbc0038I Pass  28: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 10
Cbc0038I Pass  29: suminf.    0.46562 (5) obj. -9.16639e+06 iterations 16
Cbc0038I Pass  30: suminf.    1.35423 (3) obj. -9.16639e+06 iterations 19
Cbc0038I Pass  31: suminf.    1.35423 (3) obj. -9.16639e+06 iterations 10
Cbc0038I Rounding solution of -9.14462e+06 is better than previous of -9.14167e+06

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 81 columns, reduced to 85 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -9.21088e+06
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 0
Cbc0038I Pass  32: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 9
Cbc0038I Pass  33: suminf.    0.91355 (5) obj. -9.21088e+06 iterations 11
Cbc0038I Pass  34: suminf.    0.50359 (4) obj. -9.21088e+06 iterations 5
Cbc0038I Pass  35: suminf.    1.44262 (4) obj. -9.31401e+06 iterations 26
Cbc0038I Pass  36: suminf.    0.79081 (9) obj. -9.21088e+06 iterations 8
Cbc0038I Pass  37: suminf.    0.56222 (7) obj. -9.21088e+06 iterations 23
Cbc0038I Pass  38: suminf.    0.79081 (9) obj. -9.21088e+06 iterations 28
Cbc0038I Pass  39: suminf.    1.39904 (5) obj. -9.21088e+06 iterations 20
Cbc0038I Pass  40: suminf.    2.27064 (8) obj. -9.21088e+06 iterations 9
Cbc0038I Pass  41: suminf.    0.79081 (9) obj. -9.21088e+06 iterations 11
Cbc0038I Pass  42: suminf.    1.24784 (11) obj. -9.21088e+06 iterations 12
Cbc0038I Pass  43: suminf.    1.17052 (4) obj. -9.21088e+06 iterations 6
Cbc0038I Pass  44: suminf.    1.08710 (11) obj. -9.21088e+06 iterations 18
Cbc0038I Pass  45: suminf.    0.75669 (3) obj. -9.21088e+06 iterations 23
Cbc0038I Pass  46: suminf.    0.72143 (6) obj. -9.21088e+06 iterations 8
Cbc0038I Pass  47: suminf.    0.84878 (4) obj. -9.21088e+06 iterations 26
Cbc0038I Pass  48: suminf.    0.84878 (4) obj. -9.21088e+06 iterations 0
Cbc0038I Pass  49: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 23
Cbc0038I Pass  50: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 0
Cbc0038I Pass  51: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 8
Cbc0038I Pass  52: suminf.    1.02065 (3) obj. -9.21088e+06 iterations 15
Cbc0038I Pass  53: suminf.    0.95386 (4) obj. -9.21088e+06 iterations 17
Cbc0038I Pass  54: suminf.    1.15914 (4) obj. -9.21088e+06 iterations 5
Cbc0038I Pass  55: suminf.    0.95386 (4) obj. -9.21088e+06 iterations 4
Cbc0038I Pass  56: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 23
Cbc0038I Pass  57: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 0
Cbc0038I Pass  58: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 10
Cbc0038I Pass  59: suminf.    1.10828 (4) obj. -9.21088e+06 iterations 18
Cbc0038I Pass  60: suminf.    1.10828 (4) obj. -9.21088e+06 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 81 columns, reduced to 86 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -9.14462e+06 - took 0.05 seconds
Cbc0012I Integer solution of -9144622.4 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 158 rows 81 columns, reduced to 59 rows 33 columns
Cbc0031I 4 added rows had average density of 54.5
Cbc0013I At root node, 4 cuts changed objective from -9388836 to -9217748.2 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 12.8 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 30 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 80.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0001I Search completed - best objective -9144622.4, took 237 iterations and 8 nodes (0.64 seconds)
Cbc0032I Strong branching done 74 times (214 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-76) rows, 145 (-73) columns and 2848 (-3582) elements
Clp1000I sum of infeasibilities 0.00133059 - average 9.30479e-06, 16 fixed columns
Coin0506I Presolve 126 (-17) rows, 128 (-17) columns and 2366 (-482) elements
Clp0006I 0  Obj 7952674.8 Primal inf 0.00043250926 (34) Dual inf 5.6118751e+09 (115)
Clp0029I End of values pass after 128 iterations
Clp0014I Perturbing problem by 0.001% of 2.7456365 - largest nonzero change 2.9088941e-05 ( 0.0025914967%) - largest zero change 2.9019187e-05
Clp0000I Optimal - objective value 9034793.3
Clp0000I Optimal - objective value 9034793.3
Coin0511I After Postsolve, objective 9034793.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 9034793.3 Dual inf 16904542 (6)
Clp0014I Perturbing problem by 0.001% of 2.4986665 - largest nonzero change 2.9328246e-05 ( 0.0026537852%) - largest zero change 2.9019187e-05
Clp0000I Optimal - objective value 9408656.1
Clp0000I Optimal - objective value 9408656.1
Clp0000I Optimal - objective value 9408656.1
Coin0511I After Postsolve, objective 9408656.1, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9408656.066 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 143 rows, 145 columns (145 integer (145 of which binary)) and 2849 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.567%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 87 integers unsatisfied sum - 24.8571
Cbc0038I Pass   1: suminf.    5.89781 (42) obj. -4.87016e+06 iterations 39
Cbc0038I Pass   2: suminf.    5.89781 (42) obj. -4.87016e+06 iterations 1
Cbc0038I Pass   3: suminf.    1.36851 (17) obj. -4.85711e+06 iterations 25
Cbc0038I Solution found of -4.85219e+06
Cbc0038I Rounding solution of -4.85874e+06 is better than previous of -4.85219e+06

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 145 columns, reduced to 72 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -4.85874e+06 to -8.74166e+06 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.80784e+06
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   4: suminf.   18.86861 (69) obj. -8.80784e+06 iterations 24
Cbc0038I Pass   5: suminf.   18.86861 (69) obj. -8.80784e+06 iterations 0
Cbc0038I Pass   6: suminf.   16.47712 (62) obj. -8.80784e+06 iterations 14
Cbc0038I Pass   7: suminf.   16.47712 (62) obj. -8.80784e+06 iterations 8
Cbc0038I Pass   8: suminf.   14.66363 (56) obj. -8.80784e+06 iterations 12
Cbc0038I Pass   9: suminf.   14.64646 (55) obj. -8.80784e+06 iterations 8
Cbc0038I Pass  10: suminf.    9.77695 (38) obj. -8.80784e+06 iterations 27
Cbc0038I Pass  11: suminf.    9.63146 (45) obj. -8.80784e+06 iterations 12
Cbc0038I Pass  12: suminf.    3.78115 (29) obj. -8.80784e+06 iterations 30
Cbc0038I Pass  13: suminf.    2.04237 (6) obj. -9.25198e+06 iterations 15
Cbc0038I Pass  14: suminf.    0.91864 (6) obj. -8.80784e+06 iterations 7
Cbc0038I Pass  15: suminf.    1.37500 (3) obj. -9.25119e+06 iterations 11
Cbc0038I Pass  16: suminf.    0.25327 (3) obj. -8.80784e+06 iterations 7
Cbc0038I Pass  17: suminf.    8.09138 (25) obj. -8.80784e+06 iterations 31
Cbc0038I Pass  18: suminf.    7.61571 (22) obj. -8.80784e+06 iterations 8
Cbc0038I Pass  19: suminf.    1.29412 (4) obj. -9.09007e+06 iterations 25
Cbc0038I Pass  20: suminf.    0.95975 (3) obj. -8.80784e+06 iterations 5
Cbc0038I Pass  21: suminf.    0.95975 (3) obj. -8.80784e+06 iterations 0
Cbc0038I Pass  22: suminf.    4.31339 (12) obj. -8.80784e+06 iterations 30
Cbc0038I Pass  23: suminf.    2.87768 (8) obj. -8.85702e+06 iterations 18
Cbc0038I Pass  24: suminf.    0.33641 (1) obj. -8.80784e+06 iterations 12
Cbc0038I Solution found of -8.95265e+06
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 145 columns, reduced to 91 rows 93 columns
Cbc0038I Mini branch and bound improved solution from -8.95265e+06 to -9.14167e+06 (0.07 seconds)
Cbc0038I Round again with cutoff of -9.19403e+06
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  25: suminf.   20.74305 (84) obj. -9.19403e+06 iterations 5
Cbc0038I Pass  26: suminf.   20.74305 (84) obj. -9.19403e+06 iterations 0
Cbc0038I Pass  27: suminf.   15.31424 (63) obj. -9.19403e+06 iterations 19
Cbc0038I Pass  28: suminf.   11.79590 (53) obj. -9.19403e+06 iterations 11
Cbc0038I Pass  29: suminf.    3.96410 (14) obj. -9.19403e+06 iterations 33
Cbc0038I Pass  30: suminf.    3.66774 (12) obj. -9.19403e+06 iterations 8
Cbc0038I Pass  31: suminf.    1.37500 (3) obj. -9.25119e+06 iterations 17
Cbc0038I Pass  32: suminf.    1.23039 (3) obj. -9.19403e+06 iterations 8
Cbc0038I Pass  33: suminf.    5.92239 (15) obj. -9.19403e+06 iterations 20
Cbc0038I Pass  34: suminf.    5.32585 (14) obj. -9.19403e+06 iterations 6
Cbc0038I Pass  35: suminf.    1.37500 (3) obj. -9.25079e+06 iterations 19
Cbc0038I Pass  36: suminf.    1.23140 (3) obj. -9.19403e+06 iterations 7
Cbc0038I Pass  37: suminf.    5.20027 (14) obj. -9.19403e+06 iterations 15
Cbc0038I Pass  38: suminf.    5.20027 (14) obj. -9.19403e+06 iterations 4
Cbc0038I Pass  39: suminf.    9.99487 (26) obj. -9.19403e+06 iterations 31
Cbc0038I Pass  40: suminf.    8.85820 (49) obj. -9.19403e+06 iterations 15
Cbc0038I Pass  41: suminf.    7.88152 (49) obj. -9.19403e+06 iterations 3
Cbc0038I Pass  42: suminf.    0.65958 (4) obj. -9.19403e+06 iterations 23
Cbc0038I Pass  43: suminf.    0.65958 (4) obj. -9.19403e+06 iterations 7
Cbc0038I Pass  44: suminf.    1.40062 (3) obj. -9.19403e+06 iterations 20
Cbc0038I Pass  45: suminf.    1.40062 (3) obj. -9.19403e+06 iterations 0
Cbc0038I Pass  46: suminf.    1.33333 (3) obj. -9.29918e+06 iterations 8
Cbc0038I Pass  47: suminf.    4.53428 (31) obj. -9.19403e+06 iterations 28
Cbc0038I Pass  48: suminf.    4.35469 (14) obj. -9.19403e+06 iterations 12
Cbc0038I Pass  49: suminf.    3.86892 (13) obj. -9.19403e+06 iterations 1
Cbc0038I Pass  50: suminf.    1.39993 (3) obj. -9.19403e+06 iterations 15
Cbc0038I Pass  51: suminf.    1.39993 (3) obj. -9.19403e+06 iterations 1
Cbc0038I Pass  52: suminf.    1.33333 (3) obj. -9.29946e+06 iterations 9
Cbc0038I Pass  53: suminf.    7.70514 (43) obj. -9.19403e+06 iterations 32
Cbc0038I Pass  54: suminf.    7.22591 (19) obj. -9.19403e+06 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 145 columns, reduced to 89 rows 92 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -9.14167e+06 - took 0.09 seconds
Cbc0012I Integer solution of -9141672.4 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 143 rows 145 columns, reduced to 81 rows 82 columns
Cbc0031I 15 added rows had average density of 19.2
Cbc0013I At root node, 15 cuts changed objective from -9403480.3 to -9224506.7 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1131 row cuts average 10.5 elements, 44 column cuts (44 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 34.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 51.6 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9141672.4 best solution, best possible -9224506.7 (0.35 seconds)
Cbc0012I Integer solution of -9144622.4 found by rounding after 187 iterations and 3 nodes (0.47 seconds)
Cbc0001I Search completed - best objective -9144622.4, took 299 iterations and 12 nodes (0.64 seconds)
Cbc0032I Strong branching done 86 times (268 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 158 (-62) rows, 81 (-30) columns and 394 (-150) elements
Clp0000I Optimal - objective value 9388836
Coin0511I After Postsolve, objective 9388836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9388836.049 - 69 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 158 rows, 81 columns (80 integer (80 of which binary)) and 394 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.189%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 3.44798
Cbc0038I Pass   1: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 21
Cbc0038I Solution found of -9.14167e+06
Cbc0038I Relaxing continuous gives -9.14167e+06
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 81 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -9.16639e+06
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 0
Cbc0038I Pass   3: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 9
Cbc0038I Pass   4: suminf.    0.57364 (4) obj. -9.16639e+06 iterations 11
Cbc0038I Pass   5: suminf.    0.54323 (2) obj. -9.16639e+06 iterations 9
Cbc0038I Pass   6: suminf.    0.36949 (2) obj. -9.16639e+06 iterations 26
Cbc0038I Pass   7: suminf.    0.23410 (3) obj. -9.16639e+06 iterations 4
Cbc0038I Pass   8: suminf.    0.29167 (3) obj. -9.18914e+06 iterations 9
Cbc0038I Pass   9: suminf.    0.32729 (4) obj. -9.16639e+06 iterations 14
Cbc0038I Pass  10: suminf.    0.32729 (4) obj. -9.16639e+06 iterations 4
Cbc0038I Pass  11: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 8
Cbc0038I Pass  12: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 10
Cbc0038I Pass  13: suminf.    1.37131 (8) obj. -9.16639e+06 iterations 15
Cbc0038I Pass  14: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 16
Cbc0038I Pass  15: suminf.    0.05507 (3) obj. -9.16639e+06 iterations 7
Cbc0038I Pass  16: suminf.    0.05507 (3) obj. -9.16639e+06 iterations 9
Cbc0038I Pass  17: suminf.    0.12500 (3) obj. -9.19403e+06 iterations 7
Cbc0038I Pass  18: suminf.    1.51076 (5) obj. -9.16639e+06 iterations 22
Cbc0038I Pass  19: suminf.    1.16044 (3) obj. -9.16639e+06 iterations 19
Cbc0038I Pass  20: suminf.    1.37500 (3) obj. -9.25119e+06 iterations 8
Cbc0038I Pass  21: suminf.    1.82982 (6) obj. -9.16639e+06 iterations 8
Cbc0038I Pass  22: suminf.    1.37500 (3) obj. -9.25119e+06 iterations 9
Cbc0038I Pass  23: suminf.    1.44652 (4) obj. -9.16639e+06 iterations 7
Cbc0038I Pass  24: suminf.    1.48751 (5) obj. -9.16639e+06 iterations 17
Cbc0038I Pass  25: suminf.    1.48751 (5) obj. -9.16639e+06 iterations 2
Cbc0038I Pass  26: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 26
Cbc0038I Pass  27: suminf.    0.06254 (3) obj. -9.16639e+06 iterations 0
Cbc0038I Pass  28: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 10
Cbc0038I Pass  29: suminf.    0.46562 (5) obj. -9.16639e+06 iterations 16
Cbc0038I Pass  30: suminf.    1.35423 (3) obj. -9.16639e+06 iterations 19
Cbc0038I Pass  31: suminf.    1.35423 (3) obj. -9.16639e+06 iterations 10
Cbc0038I Rounding solution of -9.14462e+06 is better than previous of -9.14167e+06

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 81 columns, reduced to 85 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -9.21088e+06
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 0
Cbc0038I Pass  32: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 9
Cbc0038I Pass  33: suminf.    0.91355 (5) obj. -9.21088e+06 iterations 11
Cbc0038I Pass  34: suminf.    0.50359 (4) obj. -9.21088e+06 iterations 5
Cbc0038I Pass  35: suminf.    1.44262 (4) obj. -9.31401e+06 iterations 26
Cbc0038I Pass  36: suminf.    0.79081 (9) obj. -9.21088e+06 iterations 8
Cbc0038I Pass  37: suminf.    0.56222 (7) obj. -9.21088e+06 iterations 23
Cbc0038I Pass  38: suminf.    0.79081 (9) obj. -9.21088e+06 iterations 28
Cbc0038I Pass  39: suminf.    1.39904 (5) obj. -9.21088e+06 iterations 20
Cbc0038I Pass  40: suminf.    2.27064 (8) obj. -9.21088e+06 iterations 9
Cbc0038I Pass  41: suminf.    0.79081 (9) obj. -9.21088e+06 iterations 11
Cbc0038I Pass  42: suminf.    1.24784 (11) obj. -9.21088e+06 iterations 12
Cbc0038I Pass  43: suminf.    1.17052 (4) obj. -9.21088e+06 iterations 6
Cbc0038I Pass  44: suminf.    1.08710 (11) obj. -9.21088e+06 iterations 18
Cbc0038I Pass  45: suminf.    0.75669 (3) obj. -9.21088e+06 iterations 23
Cbc0038I Pass  46: suminf.    0.72143 (6) obj. -9.21088e+06 iterations 8
Cbc0038I Pass  47: suminf.    0.84878 (4) obj. -9.21088e+06 iterations 26
Cbc0038I Pass  48: suminf.    0.84878 (4) obj. -9.21088e+06 iterations 0
Cbc0038I Pass  49: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 23
Cbc0038I Pass  50: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 0
Cbc0038I Pass  51: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 8
Cbc0038I Pass  52: suminf.    1.02065 (3) obj. -9.21088e+06 iterations 15
Cbc0038I Pass  53: suminf.    0.95386 (4) obj. -9.21088e+06 iterations 17
Cbc0038I Pass  54: suminf.    1.15914 (4) obj. -9.21088e+06 iterations 5
Cbc0038I Pass  55: suminf.    0.95386 (4) obj. -9.21088e+06 iterations 4
Cbc0038I Pass  56: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 23
Cbc0038I Pass  57: suminf.    0.17510 (3) obj. -9.21088e+06 iterations 0
Cbc0038I Pass  58: suminf.    0.58333 (3) obj. -9.37223e+06 iterations 10
Cbc0038I Pass  59: suminf.    1.10828 (4) obj. -9.21088e+06 iterations 18
Cbc0038I Pass  60: suminf.    1.10828 (4) obj. -9.21088e+06 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 81 columns, reduced to 86 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -9.14462e+06 - took 0.03 seconds
Cbc0012I Integer solution of -9144622.4 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 158 rows 81 columns, reduced to 59 rows 33 columns
Cbc0031I 4 added rows had average density of 54.5
Cbc0013I At root node, 4 cuts changed objective from -9388836 to -9217748.2 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 12.8 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 30 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 80.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0001I Search completed - best objective -9144622.4, took 237 iterations and 8 nodes (0.70 seconds)
Cbc0032I Strong branching done 74 times (214 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-77) rows, 145 (-74) columns and 2848 (-3583) elements
Clp1000I sum of infeasibilities 0.00133059 - average 9.30479e-06, 16 fixed columns
Coin0506I Presolve 126 (-17) rows, 128 (-17) columns and 2366 (-482) elements
Clp0006I 0  Obj 7952674.8 Primal inf 0.00043250926 (34) Dual inf 5.6118751e+09 (115)
Clp0029I End of values pass after 128 iterations
Clp0014I Perturbing problem by 0.001% of 2.7456365 - largest nonzero change 2.9088941e-05 ( 0.0025914967%) - largest zero change 2.9019187e-05
Clp0000I Optimal - objective value 9034793.3
Clp0000I Optimal - objective value 9034793.3
Coin0511I After Postsolve, objective 9034793.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 9034793.3 Dual inf 16904542 (6)
Clp0014I Perturbing problem by 0.001% of 2.4986665 - largest nonzero change 2.9328246e-05 ( 0.0026537852%) - largest zero change 2.9019187e-05
Clp0000I Optimal - objective value 9408656.1
Clp0000I Optimal - objective value 9408656.1
Clp0000I Optimal - objective value 9408656.1
Coin0511I After Postsolve, objective 9408656.1, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9408656.066 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 143 rows, 145 columns (145 integer (145 of which binary)) and 2849 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.567%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 87 integers unsatisfied sum - 24.8571
Cbc0038I Pass   1: suminf.    5.89781 (42) obj. -4.87016e+06 iterations 39
Cbc0038I Pass   2: suminf.    5.89781 (42) obj. -4.87016e+06 iterations 1
Cbc0038I Pass   3: suminf.    1.36851 (17) obj. -4.85711e+06 iterations 25
Cbc0038I Solution found of -4.85219e+06
Cbc0038I Rounding solution of -4.85874e+06 is better than previous of -4.85219e+06

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 145 columns, reduced to 72 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -4.85874e+06 to -8.74166e+06 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.80784e+06
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   4: suminf.   18.86861 (69) obj. -8.80784e+06 iterations 24
Cbc0038I Pass   5: suminf.   18.86861 (69) obj. -8.80784e+06 iterations 0
Cbc0038I Pass   6: suminf.   16.47712 (62) obj. -8.80784e+06 iterations 14
Cbc0038I Pass   7: suminf.   16.47712 (62) obj. -8.80784e+06 iterations 8
Cbc0038I Pass   8: suminf.   14.66363 (56) obj. -8.80784e+06 iterations 12
Cbc0038I Pass   9: suminf.   14.64646 (55) obj. -8.80784e+06 iterations 8
Cbc0038I Pass  10: suminf.    9.77695 (38) obj. -8.80784e+06 iterations 27
Cbc0038I Pass  11: suminf.    9.63146 (45) obj. -8.80784e+06 iterations 12
Cbc0038I Pass  12: suminf.    3.78115 (29) obj. -8.80784e+06 iterations 30
Cbc0038I Pass  13: suminf.    2.04237 (6) obj. -9.25198e+06 iterations 15
Cbc0038I Pass  14: suminf.    0.91864 (6) obj. -8.80784e+06 iterations 7
Cbc0038I Pass  15: suminf.    1.37500 (3) obj. -9.25119e+06 iterations 11
Cbc0038I Pass  16: suminf.    0.25327 (3) obj. -8.80784e+06 iterations 7
Cbc0038I Pass  17: suminf.    8.09138 (25) obj. -8.80784e+06 iterations 31
Cbc0038I Pass  18: suminf.    7.61571 (22) obj. -8.80784e+06 iterations 8
Cbc0038I Pass  19: suminf.    1.29412 (4) obj. -9.09007e+06 iterations 25
Cbc0038I Pass  20: suminf.    0.95975 (3) obj. -8.80784e+06 iterations 5
Cbc0038I Pass  21: suminf.    0.95975 (3) obj. -8.80784e+06 iterations 0
Cbc0038I Pass  22: suminf.    4.31339 (12) obj. -8.80784e+06 iterations 30
Cbc0038I Pass  23: suminf.    2.87768 (8) obj. -8.85702e+06 iterations 18
Cbc0038I Pass  24: suminf.    0.33641 (1) obj. -8.80784e+06 iterations 12
Cbc0038I Solution found of -8.95265e+06
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 145 columns, reduced to 91 rows 93 columns
Cbc0038I Mini branch and bound improved solution from -8.95265e+06 to -9.14167e+06 (0.08 seconds)
Cbc0038I Round again with cutoff of -9.19403e+06
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  25: suminf.   20.74305 (84) obj. -9.19403e+06 iterations 5
Cbc0038I Pass  26: suminf.   20.74305 (84) obj. -9.19403e+06 iterations 0
Cbc0038I Pass  27: suminf.   15.31424 (63) obj. -9.19403e+06 iterations 19
Cbc0038I Pass  28: suminf.   11.79590 (53) obj. -9.19403e+06 iterations 11
Cbc0038I Pass  29: suminf.    3.96410 (14) obj. -9.19403e+06 iterations 33
Cbc0038I Pass  30: suminf.    3.66774 (12) obj. -9.19403e+06 iterations 8
Cbc0038I Pass  31: suminf.    1.37500 (3) obj. -9.25119e+06 iterations 17
Cbc0038I Pass  32: suminf.    1.23039 (3) obj. -9.19403e+06 iterations 8
Cbc0038I Pass  33: suminf.    5.92239 (15) obj. -9.19403e+06 iterations 20
Cbc0038I Pass  34: suminf.    5.32585 (14) obj. -9.19403e+06 iterations 6
Cbc0038I Pass  35: suminf.    1.37500 (3) obj. -9.25079e+06 iterations 19
Cbc0038I Pass  36: suminf.    1.23140 (3) obj. -9.19403e+06 iterations 7
Cbc0038I Pass  37: suminf.    5.20027 (14) obj. -9.19403e+06 iterations 15
Cbc0038I Pass  38: suminf.    5.20027 (14) obj. -9.19403e+06 iterations 4
Cbc0038I Pass  39: suminf.    9.99487 (26) obj. -9.19403e+06 iterations 31
Cbc0038I Pass  40: suminf.    8.85820 (49) obj. -9.19403e+06 iterations 15
Cbc0038I Pass  41: suminf.    7.88152 (49) obj. -9.19403e+06 iterations 3
Cbc0038I Pass  42: suminf.    0.65958 (4) obj. -9.19403e+06 iterations 23
Cbc0038I Pass  43: suminf.    0.65958 (4) obj. -9.19403e+06 iterations 7
Cbc0038I Pass  44: suminf.    1.40062 (3) obj. -9.19403e+06 iterations 20
Cbc0038I Pass  45: suminf.    1.40062 (3) obj. -9.19403e+06 iterations 0
Cbc0038I Pass  46: suminf.    1.33333 (3) obj. -9.29918e+06 iterations 8
Cbc0038I Pass  47: suminf.    4.53428 (31) obj. -9.19403e+06 iterations 28
Cbc0038I Pass  48: suminf.    4.35469 (14) obj. -9.19403e+06 iterations 12
Cbc0038I Pass  49: suminf.    3.86892 (13) obj. -9.19403e+06 iterations 1
Cbc0038I Pass  50: suminf.    1.39993 (3) obj. -9.19403e+06 iterations 15
Cbc0038I Pass  51: suminf.    1.39993 (3) obj. -9.19403e+06 iterations 1
Cbc0038I Pass  52: suminf.    1.33333 (3) obj. -9.29946e+06 iterations 9
Cbc0038I Pass  53: suminf.    7.70514 (43) obj. -9.19403e+06 iterations 32
Cbc0038I Pass  54: suminf.    7.22591 (19) obj. -9.19403e+06 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 145 columns, reduced to 89 rows 92 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -9.14167e+06 - took 0.08 seconds
Cbc0012I Integer solution of -9141672.4 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 143 rows 145 columns, reduced to 81 rows 82 columns
Cbc0031I 15 added rows had average density of 19.2
Cbc0013I At root node, 15 cuts changed objective from -9403480.3 to -9224506.7 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1131 row cuts average 10.5 elements, 44 column cuts (44 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 34.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 51.6 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9141672.4 best solution, best possible -9224506.7 (0.38 seconds)
Cbc0012I Integer solution of -9144622.4 found by rounding after 187 iterations and 3 nodes (0.53 seconds)
Cbc0001I Search completed - best objective -9144622.4, took 299 iterations and 12 nodes (0.73 seconds)
Cbc0032I Strong branching done 86 times (268 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.74

