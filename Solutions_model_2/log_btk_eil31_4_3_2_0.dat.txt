Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 24 (-9) columns and 126 (-57) elements
Clp1000I sum of infeasibilities 3.1958e-05 - average 7.43209e-07, 1 fixed columns
Coin0506I Presolve 41 (-2) rows, 23 (-1) columns and 120 (-6) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 93.280868
Clp0000I Optimal - objective value 93.280868
Coin0511I After Postsolve, objective 93.280868, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.280868
Clp0000I Optimal - objective value 93.280868
Clp0000I Optimal - objective value 93.280868
Coin0511I After Postsolve, objective 93.280868, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.28086769 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 24 columns (23 integer (23 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.952%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.8638
Cbc0038I Pass   1: suminf.    0.98551 (2) obj. -43.5241 iterations 15
Cbc0038I Solution found of -23.9875
Cbc0038I Relaxing continuous gives -23.9875
Cbc0038I Rounding solution of -43.6225 is better than previous of -23.9875

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 25 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -43.6225 to -58.0675 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.283
Cbc0038I Pass   2: suminf.    1.63115 (6) obj. -61.283 iterations 3
Cbc0038I Pass   3: suminf.    1.44285 (6) obj. -61.283 iterations 11
Cbc0038I Pass   4: suminf.    0.86792 (2) obj. -61.283 iterations 4
Cbc0038I Pass   5: suminf.    0.91783 (2) obj. -61.283 iterations 1
Cbc0038I Pass   6: suminf.    0.91203 (2) obj. -61.283 iterations 1
Cbc0038I Pass   7: suminf.    0.86792 (2) obj. -61.283 iterations 3
Cbc0038I Pass   8: suminf.    1.23296 (3) obj. -61.283 iterations 5
Cbc0038I Pass   9: suminf.    1.21571 (4) obj. -61.283 iterations 1
Cbc0038I Pass  10: suminf.    0.73602 (2) obj. -61.283 iterations 2
Cbc0038I Pass  11: suminf.    0.60814 (2) obj. -61.283 iterations 1
Cbc0038I Pass  12: suminf.    0.50093 (2) obj. -61.283 iterations 4
Cbc0038I Pass  13: suminf.    1.48061 (5) obj. -61.283 iterations 7
Cbc0038I Pass  14: suminf.    0.57683 (2) obj. -61.283 iterations 5
Cbc0038I Pass  15: suminf.    0.54958 (2) obj. -61.283 iterations 2
Cbc0038I Pass  16: suminf.    0.53375 (2) obj. -61.283 iterations 1
Cbc0038I Pass  17: suminf.    0.11446 (2) obj. -61.283 iterations 1
Cbc0038I Pass  18: suminf.    0.44211 (1) obj. -61.283 iterations 1
Cbc0038I Pass  19: suminf.    0.35070 (1) obj. -61.283 iterations 1
Cbc0038I Pass  20: suminf.    1.33206 (5) obj. -61.283 iterations 4
Cbc0038I Pass  21: suminf.    0.81738 (3) obj. -61.283 iterations 4
Cbc0038I Pass  22: suminf.    0.88130 (5) obj. -61.283 iterations 4
Cbc0038I Pass  23: suminf.    0.64287 (4) obj. -61.283 iterations 3
Cbc0038I Pass  24: suminf.    1.10442 (5) obj. -61.283 iterations 3
Cbc0038I Pass  25: suminf.    0.64287 (4) obj. -61.283 iterations 5
Cbc0038I Pass  26: suminf.    0.44211 (1) obj. -61.283 iterations 4
Cbc0038I Pass  27: suminf.    0.35070 (1) obj. -61.283 iterations 1
Cbc0038I Pass  28: suminf.    0.11446 (2) obj. -61.283 iterations 2
Cbc0038I Pass  29: suminf.    1.09775 (3) obj. -61.283 iterations 9
Cbc0038I Pass  30: suminf.    1.09775 (3) obj. -61.283 iterations 0
Cbc0038I Pass  31: suminf.    0.83809 (3) obj. -61.283 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -58.0675 - took 0.05 seconds
Cbc0012I Integer solution of -58.0675 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 43 rows 24 columns, reduced to 25 rows 14 columns
Cbc0031I 11 added rows had average density of 15.818182
Cbc0013I At root node, 11 cuts changed objective from -90.200047 to -70.616237 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 604 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 639 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58.06750000000001, took 2153 iterations and 12 nodes (0.16 seconds)
Cbc0032I Strong branching done 134 times (1255 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 52 (-10) columns and 465 (-181) elements
Clp1000I sum of infeasibilities 1.53512e-10 - average 3.19816e-12, 31 fixed columns
Coin0506I Presolve 17 (-31) rows, 21 (-31) columns and 70 (-395) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 69.51366
Clp0000I Optimal - objective value 69.51366
Coin0511I After Postsolve, objective 69.51366, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6676831 - largest nonzero change 1.2379597e-05 ( 0.00088891716%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 103.58118
Clp0000I Optimal - objective value 103.58118
Clp0000I Optimal - objective value 103.58118
Coin0511I After Postsolve, objective 103.58118, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.5811805 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.784%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.83046
Cbc0038I Pass   1: suminf.    1.53410 (8) obj. -39.9872 iterations 10
Cbc0038I Pass   2: suminf.    1.53410 (8) obj. -39.9872 iterations 0
Cbc0038I Solution found of -21.01
Cbc0038I Rounding solution of -44.645 is better than previous of -21.01

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -48.6913
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.90178 (10) obj. -48.6913 iterations 2
Cbc0038I Pass   4: suminf.    2.45910 (9) obj. -48.6913 iterations 1
Cbc0038I Pass   5: suminf.    0.32051 (3) obj. -48.6913 iterations 12
Cbc0038I Pass   6: suminf.    0.71422 (2) obj. -48.6913 iterations 2
Cbc0038I Pass   7: suminf.    0.15000 (1) obj. -50.359 iterations 2
Cbc0038I Pass   8: suminf.    0.22238 (1) obj. -48.6913 iterations 1
Cbc0038I Pass   9: suminf.    2.40233 (16) obj. -48.6913 iterations 6
Cbc0038I Pass  10: suminf.    2.19580 (15) obj. -48.6913 iterations 3
Cbc0038I Pass  11: suminf.    0.91540 (4) obj. -48.6913 iterations 18
Cbc0038I Pass  12: suminf.    0.87664 (4) obj. -55.2582 iterations 2
Cbc0038I Pass  13: suminf.    0.18355 (1) obj. -48.6913 iterations 4
Cbc0038I Pass  14: suminf.    0.15789 (1) obj. -50.1139 iterations 1
Cbc0038I Pass  15: suminf.    3.51160 (10) obj. -48.6913 iterations 13
Cbc0038I Pass  16: suminf.    2.20813 (7) obj. -48.6913 iterations 6
Cbc0038I Pass  17: suminf.    0.13444 (2) obj. -48.6913 iterations 6
Cbc0038I Pass  18: suminf.    0.02105 (1) obj. -50.1475 iterations 2
Cbc0038I Pass  19: suminf.    0.04731 (1) obj. -48.6913 iterations 1
Cbc0038I Pass  20: suminf.    0.57232 (3) obj. -48.6913 iterations 7
Cbc0038I Pass  21: suminf.    0.57232 (3) obj. -48.6913 iterations 0
Cbc0038I Pass  22: suminf.    0.24211 (1) obj. -49.0116 iterations 5
Cbc0038I Pass  23: suminf.    0.24788 (1) obj. -48.6913 iterations 1
Cbc0038I Pass  24: suminf.    0.41773 (5) obj. -53.9428 iterations 12
Cbc0038I Pass  25: suminf.    0.29293 (2) obj. -53.2721 iterations 4
Cbc0038I Solution found of -51.565
Cbc0038I Rounding solution of -57.2475 is better than previous of -51.565

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 35 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -62.8171
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  26: suminf.    3.08064 (10) obj. -62.8171 iterations 0
Cbc0038I Pass  27: suminf.    2.63959 (24) obj. -62.8171 iterations 4
Cbc0038I Pass  28: suminf.    2.26158 (13) obj. -62.8171 iterations 14
Cbc0038I Pass  29: suminf.    1.82111 (6) obj. -62.8171 iterations 18
Cbc0038I Pass  30: suminf.    1.82111 (6) obj. -62.8171 iterations 0
Cbc0038I Pass  31: suminf.    2.06819 (5) obj. -62.8171 iterations 3
Cbc0038I Pass  32: suminf.    2.06819 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  33: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  34: suminf.    1.78989 (5) obj. -62.8171 iterations 2
Cbc0038I Pass  35: suminf.    1.78989 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  36: suminf.    2.06819 (5) obj. -62.8171 iterations 4
Cbc0038I Pass  37: suminf.    2.06819 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  38: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  39: suminf.    1.78989 (5) obj. -62.8171 iterations 2
Cbc0038I Pass  40: suminf.    1.78989 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  41: suminf.    2.06819 (5) obj. -62.8171 iterations 4
Cbc0038I Pass  42: suminf.    2.06819 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  43: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  44: suminf.    1.78989 (5) obj. -62.8171 iterations 2
Cbc0038I Pass  45: suminf.    1.78989 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  46: suminf.    2.06819 (5) obj. -62.8171 iterations 4
Cbc0038I Pass  47: suminf.    2.06819 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  48: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  49: suminf.    1.78989 (5) obj. -62.8171 iterations 2
Cbc0038I Pass  50: suminf.    1.78989 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  51: suminf.    2.06819 (5) obj. -62.8171 iterations 4
Cbc0038I Pass  52: suminf.    2.06819 (5) obj. -62.8171 iterations 0
Cbc0038I Pass  53: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  54: suminf.    1.78989 (5) obj. -62.8171 iterations 2
Cbc0038I Pass  55: suminf.    1.78989 (5) obj. -62.8171 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 31 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -57.2475 - took 0.04 seconds
Cbc0012I Integer solution of -57.2475 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 23 rows 26 columns
Cbc0031I 21 added rows had average density of 23.095238
Cbc0013I At root node, 21 cuts changed objective from -85.085479 to -65.780665 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1689 row cuts average 3.5 elements, 7 column cuts (7 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1205 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 105 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 196 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 224 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 297 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 67 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.718 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -57.2475 best solution, best possible -65.780665 (1.61 seconds)
Cbc0010I After 5 nodes, 6 on tree, -57.2475 best solution, best possible -65.780665 (2.31 seconds)
Cbc0016I Integer solution of -58.0675 found by strong branching after 3012 iterations and 9 nodes (2.53 seconds)
Cbc0001I Search completed - best objective -58.06750000000001, took 3375 iterations and 22 nodes (2.82 seconds)
Cbc0032I Strong branching done 368 times (3840 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.79   (Wallclock seconds):       2.83

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 24 (-9) columns and 126 (-57) elements
Clp1000I sum of infeasibilities 3.1958e-05 - average 7.43209e-07, 1 fixed columns
Coin0506I Presolve 41 (-2) rows, 23 (-1) columns and 120 (-6) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 93.280868
Clp0000I Optimal - objective value 93.280868
Coin0511I After Postsolve, objective 93.280868, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.280868
Clp0000I Optimal - objective value 93.280868
Clp0000I Optimal - objective value 93.280868
Coin0511I After Postsolve, objective 93.280868, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.28086769 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 24 columns (23 integer (23 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.952%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.8638
Cbc0038I Pass   1: suminf.    0.98551 (2) obj. -43.5241 iterations 15
Cbc0038I Solution found of -23.9875
Cbc0038I Relaxing continuous gives -23.9875
Cbc0038I Rounding solution of -43.6225 is better than previous of -23.9875

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 25 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -43.6225 to -58.0675 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.283
Cbc0038I Pass   2: suminf.    1.63115 (6) obj. -61.283 iterations 3
Cbc0038I Pass   3: suminf.    1.44285 (6) obj. -61.283 iterations 11
Cbc0038I Pass   4: suminf.    0.86792 (2) obj. -61.283 iterations 4
Cbc0038I Pass   5: suminf.    0.91783 (2) obj. -61.283 iterations 1
Cbc0038I Pass   6: suminf.    0.91203 (2) obj. -61.283 iterations 1
Cbc0038I Pass   7: suminf.    0.86792 (2) obj. -61.283 iterations 3
Cbc0038I Pass   8: suminf.    1.23296 (3) obj. -61.283 iterations 5
Cbc0038I Pass   9: suminf.    1.21571 (4) obj. -61.283 iterations 1
Cbc0038I Pass  10: suminf.    0.73602 (2) obj. -61.283 iterations 2
Cbc0038I Pass  11: suminf.    0.60814 (2) obj. -61.283 iterations 1
Cbc0038I Pass  12: suminf.    0.50093 (2) obj. -61.283 iterations 4
Cbc0038I Pass  13: suminf.    1.48061 (5) obj. -61.283 iterations 7
Cbc0038I Pass  14: suminf.    0.57683 (2) obj. -61.283 iterations 5
Cbc0038I Pass  15: suminf.    0.54958 (2) obj. -61.283 iterations 2
Cbc0038I Pass  16: suminf.    0.53375 (2) obj. -61.283 iterations 1
Cbc0038I Pass  17: suminf.    0.11446 (2) obj. -61.283 iterations 1
Cbc0038I Pass  18: suminf.    0.44211 (1) obj. -61.283 iterations 1
Cbc0038I Pass  19: suminf.    0.35070 (1) obj. -61.283 iterations 1
Cbc0038I Pass  20: suminf.    1.33206 (5) obj. -61.283 iterations 4
Cbc0038I Pass  21: suminf.    0.81738 (3) obj. -61.283 iterations 4
Cbc0038I Pass  22: suminf.    0.88130 (5) obj. -61.283 iterations 4
Cbc0038I Pass  23: suminf.    0.64287 (4) obj. -61.283 iterations 3
Cbc0038I Pass  24: suminf.    1.10442 (5) obj. -61.283 iterations 3
Cbc0038I Pass  25: suminf.    0.64287 (4) obj. -61.283 iterations 5
Cbc0038I Pass  26: suminf.    0.44211 (1) obj. -61.283 iterations 4
Cbc0038I Pass  27: suminf.    0.35070 (1) obj. -61.283 iterations 1
Cbc0038I Pass  28: suminf.    0.11446 (2) obj. -61.283 iterations 2
Cbc0038I Pass  29: suminf.    1.09775 (3) obj. -61.283 iterations 9
Cbc0038I Pass  30: suminf.    1.09775 (3) obj. -61.283 iterations 0
Cbc0038I Pass  31: suminf.    0.83809 (3) obj. -61.283 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 24 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -58.0675 - took 0.05 seconds
Cbc0012I Integer solution of -58.0675 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 43 rows 24 columns, reduced to 25 rows 14 columns
Cbc0031I 11 added rows had average density of 15.818182
Cbc0013I At root node, 11 cuts changed objective from -90.200047 to -70.616237 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 604 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 639 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58.06750000000001, took 2153 iterations and 12 nodes (0.20 seconds)
Cbc0032I Strong branching done 134 times (1255 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 47 (-16) columns and 399 (-250) elements
Clp1000I sum of infeasibilities 1.39713e-09 - average 3.1753e-11, 29 fixed columns
Coin0506I Presolve 15 (-29) rows, 18 (-29) columns and 61 (-338) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 69.51366
Clp0000I Optimal - objective value 69.51366
Coin0511I After Postsolve, objective 69.51366, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8162987 - largest nonzero change 2.5242541e-05 ( 0.0025242541%) - largest zero change 1.9121656e-05
Clp0000I Optimal - objective value 103.58118
Clp0000I Optimal - objective value 103.58118
Clp0000I Optimal - objective value 103.58118
Coin0511I After Postsolve, objective 103.58118, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.5811805 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 47 columns (47 integer (47 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.712%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.8225
Cbc0038I Pass   1: suminf.    1.38568 (8) obj. -40.2924 iterations 9
Cbc0038I Pass   2: suminf.    1.38568 (8) obj. -40.2924 iterations 0
Cbc0038I Solution found of -21.01
Cbc0038I Rounding solution of -44.645 is better than previous of -21.01

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -48.6892
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.45159 (9) obj. -48.6892 iterations 1
Cbc0038I Pass   4: suminf.    2.13867 (7) obj. -48.6892 iterations 1
Cbc0038I Pass   5: suminf.    0.15000 (1) obj. -51.359 iterations 7
Cbc0038I Pass   6: suminf.    0.26588 (1) obj. -48.6892 iterations 1
Cbc0038I Pass   7: suminf.    0.68644 (4) obj. -53.3015 iterations 7
Cbc0038I Pass   8: suminf.    0.33571 (2) obj. -50.0691 iterations 1
Cbc0038I Pass   9: suminf.    0.05874 (10) obj. -48.6892 iterations 3
Cbc0038I Pass  10: suminf.    0.05502 (3) obj. -48.6892 iterations 1
Cbc0038I Pass  11: suminf.    0.55807 (3) obj. -48.6892 iterations 1
Cbc0038I Pass  12: suminf.    2.32700 (13) obj. -48.6892 iterations 11
Cbc0038I Pass  13: suminf.    1.23813 (10) obj. -48.6892 iterations 3
Cbc0038I Pass  14: suminf.    0.60267 (8) obj. -48.6892 iterations 14
Cbc0038I Pass  15: suminf.    0.56768 (7) obj. -48.6892 iterations 2
Cbc0038I Pass  16: suminf.    1.27869 (3) obj. -54.1377 iterations 7
Cbc0038I Pass  17: suminf.    1.02170 (4) obj. -48.6892 iterations 2
Cbc0038I Pass  18: suminf.    0.98808 (5) obj. -48.6892 iterations 2
Cbc0038I Pass  19: suminf.    0.98808 (5) obj. -48.6892 iterations 4
Cbc0038I Pass  20: suminf.    0.98876 (4) obj. -51.9563 iterations 8
Cbc0038I Pass  21: suminf.    0.98876 (4) obj. -51.9563 iterations 0
Cbc0038I Pass  22: suminf.    0.62946 (3) obj. -48.6892 iterations 9
Cbc0038I Pass  23: suminf.    0.59012 (5) obj. -48.6892 iterations 2
Cbc0038I Pass  24: suminf.    1.49608 (4) obj. -48.6892 iterations 8
Cbc0038I Pass  25: suminf.    0.59012 (5) obj. -48.6892 iterations 2
Cbc0038I Pass  26: suminf.    1.25484 (7) obj. -48.6892 iterations 17
Cbc0038I Pass  27: suminf.    0.90243 (4) obj. -48.6892 iterations 7
Cbc0038I Pass  28: suminf.    0.07391 (2) obj. -48.6892 iterations 5
Cbc0038I Pass  29: suminf.    0.10526 (1) obj. -54.4249 iterations 2
Cbc0038I Pass  30: suminf.    0.00183 (1) obj. -48.6892 iterations 1
Cbc0038I Pass  31: suminf.    4.08301 (17) obj. -48.6892 iterations 20
Cbc0038I Pass  32: suminf.    2.24446 (11) obj. -48.6892 iterations 6
Cbc0038I Rounding solution of -56.435 is better than previous of -44.645

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 36 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -62.1628
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.38751 (24) obj. -62.1628 iterations 1
Cbc0038I Pass  33: suminf.    2.38751 (24) obj. -62.1628 iterations 0
Cbc0038I Pass  34: suminf.    2.39842 (15) obj. -62.1628 iterations 11
Cbc0038I Pass  35: suminf.    2.30941 (14) obj. -62.1628 iterations 1
Cbc0038I Pass  36: suminf.    1.77596 (5) obj. -62.1628 iterations 18
Cbc0038I Pass  37: suminf.    1.69784 (6) obj. -62.1628 iterations 2
Cbc0038I Pass  38: suminf.    1.99226 (5) obj. -62.1628 iterations 3
Cbc0038I Pass  39: suminf.    1.99226 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  40: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  41: suminf.    1.66097 (5) obj. -62.1628 iterations 3
Cbc0038I Pass  42: suminf.    1.66097 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  43: suminf.    1.99226 (5) obj. -62.1628 iterations 4
Cbc0038I Pass  44: suminf.    1.99226 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  45: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  46: suminf.    1.66097 (5) obj. -62.1628 iterations 3
Cbc0038I Pass  47: suminf.    1.66097 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  48: suminf.    1.99226 (5) obj. -62.1628 iterations 4
Cbc0038I Pass  49: suminf.    1.99226 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  50: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  51: suminf.    1.66097 (5) obj. -62.1628 iterations 3
Cbc0038I Pass  52: suminf.    1.66097 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  53: suminf.    1.99226 (5) obj. -62.1628 iterations 4
Cbc0038I Pass  54: suminf.    1.99226 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  55: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  56: suminf.    1.66097 (5) obj. -62.1628 iterations 3
Cbc0038I Pass  57: suminf.    1.66097 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  58: suminf.    1.99226 (5) obj. -62.1628 iterations 4
Cbc0038I Pass  59: suminf.    1.99226 (5) obj. -62.1628 iterations 0
Cbc0038I Pass  60: suminf.    2.39918 (5) obj. -66.0458 iterations 3
Cbc0038I Pass  61: suminf.    1.66097 (5) obj. -62.1628 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 31 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -56.435 - took 0.02 seconds
Cbc0012I Integer solution of -56.435 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 47 columns, reduced to 3 rows 3 columns
Cbc0031I 22 added rows had average density of 19
Cbc0013I At root node, 22 cuts changed objective from -85.064243 to -65.087664 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1262 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 635 row cuts average 34.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 83 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 198 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 191 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -56.435 best solution, best possible -65.087664 (1.61 seconds)
Cbc0012I Integer solution of -58.0675 found by DiveCoefficient after 2186 iterations and 3 nodes (1.96 seconds)
Cbc0010I After 7 nodes, 8 on tree, -58.0675 best solution, best possible -65.087664 (2.32 seconds)
Cbc0001I Search completed - best objective -58.06750000000001, took 2695 iterations and 16 nodes (2.47 seconds)
Cbc0032I Strong branching done 286 times (2707 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.60   (Wallclock seconds):       2.48

