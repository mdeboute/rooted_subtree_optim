Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 75 (-3) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 4.79146e-05 - average 3.7728e-07, 7 fixed columns
Coin0506I Presolve 113 (-14) rows, 67 (-8) columns and 352 (-44) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.6328177 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 33.52793
Clp0000I Optimal - objective value 33.52793
Coin0511I After Postsolve, objective 33.52793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.52793
Clp0000I Optimal - objective value 33.52793
Clp0000I Optimal - objective value 33.52793
Coin0511I After Postsolve, objective 33.52793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.52792956 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 127 rows, 75 columns (74 integer (74 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.104%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 10.6251
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.8153 iterations 52
Cbc0038I Solution found of 15.8153
Cbc0038I Relaxing continuous gives 15.8153
Cbc0038I Rounding solution of -2.21233 is better than previous of 15.8153

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 75 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.21233 to -4.35974 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.27665
Cbc0038I Pass   2: suminf.    2.77954 (10) obj. -7.27665 iterations 16
Cbc0038I Pass   3: suminf.    2.57436 (9) obj. -7.27665 iterations 2
Cbc0038I Pass   4: suminf.    0.58523 (4) obj. -7.27665 iterations 10
Cbc0038I Pass   5: suminf.    0.58523 (4) obj. -7.27665 iterations 1
Cbc0038I Pass   6: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass   7: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass   8: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass   9: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  10: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  11: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass  12: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass  13: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass  14: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  15: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  16: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass  17: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass  18: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass  19: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  20: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  21: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass  22: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass  23: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass  24: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  25: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  26: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass  27: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass  28: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass  29: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  30: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  31: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Rounding solution of -5.45252 is better than previous of -4.35974

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 75 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -12.5269
Cbc0038I Pass  31: suminf.    3.88762 (15) obj. -12.5269 iterations 3
Cbc0038I Pass  32: suminf.    3.70281 (14) obj. -12.5269 iterations 1
Cbc0038I Pass  33: suminf.    1.20620 (7) obj. -12.5269 iterations 9
Cbc0038I Pass  34: suminf.    1.20620 (7) obj. -12.5269 iterations 1
Cbc0038I Pass  35: suminf.    2.04211 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  36: suminf.    1.85400 (5) obj. -12.5269 iterations 1
Cbc0038I Pass  37: suminf.    1.71254 (7) obj. -12.5269 iterations 4
Cbc0038I Pass  38: suminf.    1.71254 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  39: suminf.    2.03709 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  40: suminf.    1.20620 (7) obj. -12.5269 iterations 3
Cbc0038I Pass  41: suminf.    1.20620 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  42: suminf.    2.04211 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  43: suminf.    1.85400 (5) obj. -12.5269 iterations 1
Cbc0038I Pass  44: suminf.    1.71254 (7) obj. -12.5269 iterations 4
Cbc0038I Pass  45: suminf.    1.71254 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  46: suminf.    2.03709 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  47: suminf.    1.20620 (7) obj. -12.5269 iterations 3
Cbc0038I Pass  48: suminf.    1.20620 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  49: suminf.    2.04211 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  50: suminf.    1.85400 (5) obj. -12.5269 iterations 1
Cbc0038I Pass  51: suminf.    1.71254 (7) obj. -12.5269 iterations 4
Cbc0038I Pass  52: suminf.    1.71254 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  53: suminf.    2.03709 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  54: suminf.    1.20620 (7) obj. -12.5269 iterations 3
Cbc0038I Pass  55: suminf.    1.20620 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  56: suminf.    2.04211 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  57: suminf.    1.85400 (5) obj. -12.5269 iterations 1
Cbc0038I Pass  58: suminf.    1.71254 (7) obj. -12.5269 iterations 4
Cbc0038I Pass  59: suminf.    1.71254 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  60: suminf.    2.03709 (6) obj. -12.5269 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 75 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -5.45252 - took 0.14 seconds
Cbc0012I Integer solution of -5.45252 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 127 rows 75 columns, reduced to 71 rows 47 columns
Cbc0012I Integer solution of -8.16611 found by RINS after 0 iterations and 0 nodes (0.19 seconds)
Cbc0031I 29 added rows had average density of 58.103448
Cbc0013I At root node, 29 cuts changed objective from -33.52793 to -24.589145 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13685 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2395 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 126 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.16611 best solution, best possible -24.589145 (1.04 seconds)
Cbc0038I Full problem 127 rows 75 columns, reduced to 39 rows 26 columns
Cbc0001I Search completed - best objective -8.166110000000003, took 10190 iterations and 88 nodes (1.38 seconds)
Cbc0032I Strong branching done 942 times (18839 iterations), fathomed 8 nodes and fixed 15 variables
Cbc0035I Maximum depth 33, 164 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 113 (-39) columns and 1770 (-1533) elements
Clp1000I sum of infeasibilities 1.69297e-06 - average 1.84018e-08, 68 fixed columns
Coin0506I Presolve 33 (-59) rows, 44 (-69) columns and 148 (-1622) elements
Clp0006I 0  Obj -10.354487 Dual inf 1.4903629 (43)
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.9275174 - largest nonzero change 2.3415568e-05 ( 0.0016580886%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value -9.0398649
Clp0000I Optimal - objective value -9.0398649
Coin0511I After Postsolve, objective -9.0398649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.0398649 Dual inf 65.918555 (39)
Clp0014I Perturbing problem by 0.001% of 1.7288106 - largest nonzero change 2.3069546e-05 ( 0.0018056464%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 53.578037
Clp0000I Optimal - objective value 53.578037
Clp0000I Optimal - objective value 53.578037
Coin0511I After Postsolve, objective 53.578037, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.57803714 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 113 columns (113 integer (113 of which binary)) and 1772 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.421%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.17622
Cbc0038I Pass   1: suminf.    3.87540 (32) obj. -37.0924 iterations 10
Cbc0038I Pass   2: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass   3: suminf.    2.06910 (19) obj. -20.7034 iterations 13
Cbc0038I Pass   4: suminf.    0.77530 (8) obj. -8.34751 iterations 11
Cbc0038I Solution found of 0.69157
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 0.69157 to -0.58432 (0.03 seconds)
Cbc0038I Round again with cutoff of -4.87066
Cbc0038I Pass   5: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass   6: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass   7: suminf.    2.44784 (22) obj. -24.1976 iterations 10
Cbc0038I Pass   8: suminf.    0.27833 (3) obj. -4.87066 iterations 24
Cbc0038I Pass   9: suminf.    0.16071 (2) obj. -5.74311 iterations 3
Cbc0038I Pass  10: suminf.    0.47385 (2) obj. -4.87066 iterations 3
Cbc0038I Pass  11: suminf.    0.44247 (2) obj. -4.87066 iterations 1
Cbc0038I Pass  12: suminf.    0.63287 (3) obj. -4.87066 iterations 5
Cbc0038I Pass  13: suminf.    0.44247 (2) obj. -4.87066 iterations 6
Cbc0038I Pass  14: suminf.    1.66466 (9) obj. -4.87066 iterations 20
Cbc0038I Pass  15: suminf.    1.59652 (9) obj. -4.87066 iterations 5
Cbc0038I Pass  16: suminf.    0.50791 (3) obj. -4.87066 iterations 13
Cbc0038I Pass  17: suminf.    0.28938 (2) obj. -5.37472 iterations 7
Cbc0038I Pass  18: suminf.    0.63515 (3) obj. -4.87066 iterations 8
Cbc0038I Pass  19: suminf.    3.24218 (17) obj. -4.87066 iterations 31
Cbc0038I Pass  20: suminf.    1.95177 (13) obj. -4.87066 iterations 8
Cbc0038I Pass  21: suminf.    1.68978 (10) obj. -4.87066 iterations 20
Cbc0038I Pass  22: suminf.    1.68978 (10) obj. -4.87066 iterations 1
Cbc0038I Pass  23: suminf.    0.73687 (4) obj. -4.87066 iterations 10
Cbc0038I Pass  24: suminf.    0.73687 (4) obj. -4.87066 iterations 1
Cbc0038I Pass  25: suminf.    0.70618 (3) obj. -4.87066 iterations 28
Cbc0038I Pass  26: suminf.    0.27568 (2) obj. -5.25304 iterations 7
Cbc0038I Pass  27: suminf.    0.70618 (3) obj. -4.87066 iterations 8
Cbc0038I Pass  28: suminf.    2.79519 (13) obj. -4.87066 iterations 28
Cbc0038I Pass  29: suminf.    2.48264 (13) obj. -4.87066 iterations 4
Cbc0038I Pass  30: suminf.    0.63790 (4) obj. -4.87066 iterations 15
Cbc0038I Pass  31: suminf.    0.47838 (4) obj. -4.87066 iterations 3
Cbc0038I Pass  32: suminf.    0.55321 (2) obj. -4.87066 iterations 5
Cbc0038I Pass  33: suminf.    0.39117 (3) obj. -4.87066 iterations 5
Cbc0038I Pass  34: suminf.    0.40978 (2) obj. -4.87066 iterations 5
Cbc0038I Rounding solution of -1.78522 is better than previous of -0.58432

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 7 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1.78522 to -3.22579 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.5859
Cbc0038I Pass  34: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass  35: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass  36: suminf.    1.70412 (16) obj. -17.189 iterations 16
Cbc0038I Pass  37: suminf.    0.64471 (5) obj. -12.5859 iterations 25
Cbc0038I Pass  38: suminf.    0.62032 (6) obj. -12.5859 iterations 1
Cbc0038I Pass  39: suminf.    1.45609 (7) obj. -12.5859 iterations 11
Cbc0038I Pass  40: suminf.    0.64471 (5) obj. -12.5859 iterations 7
Cbc0038I Pass  41: suminf.    1.80764 (11) obj. -12.5859 iterations 24
Cbc0038I Pass  42: suminf.    1.79995 (10) obj. -12.5859 iterations 2
Cbc0038I Pass  43: suminf.    1.38753 (6) obj. -12.5859 iterations 18
Cbc0038I Pass  44: suminf.    1.17735 (5) obj. -12.5859 iterations 9
Cbc0038I Pass  45: suminf.    1.27613 (6) obj. -12.5859 iterations 8
Cbc0038I Pass  46: suminf.    1.19354 (5) obj. -12.5859 iterations 7
Cbc0038I Pass  47: suminf.    1.25345 (6) obj. -12.5859 iterations 8
Cbc0038I Pass  48: suminf.    1.76554 (9) obj. -12.5859 iterations 19
Cbc0038I Pass  49: suminf.    1.29067 (7) obj. -12.8489 iterations 6
Cbc0038I Pass  50: suminf.    1.44489 (7) obj. -12.5859 iterations 5
Cbc0038I Pass  51: suminf.    1.15972 (7) obj. -12.5859 iterations 1
Cbc0038I Pass  52: suminf.    1.83810 (10) obj. -12.5859 iterations 10
Cbc0038I Pass  53: suminf.    1.66739 (8) obj. -12.5859 iterations 3
Cbc0038I Pass  54: suminf.    1.55888 (6) obj. -12.5859 iterations 5
Cbc0038I Pass  55: suminf.    1.21448 (7) obj. -12.5859 iterations 1
Cbc0038I Pass  56: suminf.    2.43344 (14) obj. -12.5859 iterations 21
Cbc0038I Pass  57: suminf.    1.80202 (12) obj. -12.5859 iterations 5
Cbc0038I Pass  58: suminf.    1.79219 (12) obj. -12.5859 iterations 2
Cbc0038I Pass  59: suminf.    0.93301 (7) obj. -12.5859 iterations 11
Cbc0038I Pass  60: suminf.    0.93301 (7) obj. -12.5859 iterations 0
Cbc0038I Pass  61: suminf.    1.01595 (7) obj. -12.5859 iterations 2
Cbc0038I Pass  62: suminf.    1.01595 (7) obj. -12.5859 iterations 0
Cbc0038I Pass  63: suminf.    0.93301 (7) obj. -12.5859 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 26 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -3.22579 - took 0.05 seconds
Cbc0012I Integer solution of -3.22579 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 92 rows 113 columns, reduced to 4 rows 6 columns
Cbc0031I 59 added rows had average density of 28.898305
Cbc0013I At root node, 59 cuts changed objective from -43.446817 to -10.289409 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9585 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1170 row cuts average 107.2 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 513 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1154 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 337 row cuts average 67.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 65 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.681 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.22579 best solution, best possible -10.289409 (2.19 seconds)
Cbc0012I Integer solution of -6.68368 found by rounding after 3455 iterations and 1 nodes (2.20 seconds)
Cbc0012I Integer solution of -7.70278 found by rounding after 3669 iterations and 2 nodes (2.23 seconds)
Cbc0012I Integer solution of -7.86058 found by DiveCoefficient after 3669 iterations and 2 nodes (2.23 seconds)
Cbc0012I Integer solution of -8.16611 found by rounding after 3680 iterations and 5 nodes (2.24 seconds)
Cbc0001I Search completed - best objective -8.166110000000003, took 4383 iterations and 18 nodes (2.57 seconds)
Cbc0032I Strong branching done 360 times (7172 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 25 variables fixed on reduced cost
Total time (CPU seconds):       1.96   (Wallclock seconds):       2.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 75 (-3) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 4.79146e-05 - average 3.7728e-07, 7 fixed columns
Coin0506I Presolve 113 (-14) rows, 67 (-8) columns and 352 (-44) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.6328177 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 33.52793
Clp0000I Optimal - objective value 33.52793
Coin0511I After Postsolve, objective 33.52793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.52793
Clp0000I Optimal - objective value 33.52793
Clp0000I Optimal - objective value 33.52793
Coin0511I After Postsolve, objective 33.52793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.52792956 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 127 rows, 75 columns (74 integer (74 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.104%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 10.6251
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.8153 iterations 52
Cbc0038I Solution found of 15.8153
Cbc0038I Relaxing continuous gives 15.8153
Cbc0038I Rounding solution of -2.21233 is better than previous of 15.8153

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 75 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.21233 to -4.35974 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.27665
Cbc0038I Pass   2: suminf.    2.77954 (10) obj. -7.27665 iterations 16
Cbc0038I Pass   3: suminf.    2.57436 (9) obj. -7.27665 iterations 2
Cbc0038I Pass   4: suminf.    0.58523 (4) obj. -7.27665 iterations 10
Cbc0038I Pass   5: suminf.    0.58523 (4) obj. -7.27665 iterations 1
Cbc0038I Pass   6: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass   7: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass   8: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass   9: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  10: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  11: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass  12: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass  13: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass  14: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  15: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  16: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass  17: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass  18: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass  19: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  20: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  21: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass  22: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass  23: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass  24: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  25: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  26: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Pass  27: suminf.    1.70027 (6) obj. -7.27665 iterations 0
Cbc0038I Pass  28: suminf.    2.08221 (5) obj. -7.27665 iterations 8
Cbc0038I Pass  29: suminf.    0.95930 (5) obj. -7.27665 iterations 6
Cbc0038I Pass  30: suminf.    0.58523 (4) obj. -7.27665 iterations 5
Cbc0038I Pass  31: suminf.    1.70027 (6) obj. -7.27665 iterations 8
Cbc0038I Rounding solution of -5.45252 is better than previous of -4.35974

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 75 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -12.5269
Cbc0038I Pass  31: suminf.    3.88762 (15) obj. -12.5269 iterations 3
Cbc0038I Pass  32: suminf.    3.70281 (14) obj. -12.5269 iterations 1
Cbc0038I Pass  33: suminf.    1.20620 (7) obj. -12.5269 iterations 9
Cbc0038I Pass  34: suminf.    1.20620 (7) obj. -12.5269 iterations 1
Cbc0038I Pass  35: suminf.    2.04211 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  36: suminf.    1.85400 (5) obj. -12.5269 iterations 1
Cbc0038I Pass  37: suminf.    1.71254 (7) obj. -12.5269 iterations 4
Cbc0038I Pass  38: suminf.    1.71254 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  39: suminf.    2.03709 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  40: suminf.    1.20620 (7) obj. -12.5269 iterations 3
Cbc0038I Pass  41: suminf.    1.20620 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  42: suminf.    2.04211 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  43: suminf.    1.85400 (5) obj. -12.5269 iterations 1
Cbc0038I Pass  44: suminf.    1.71254 (7) obj. -12.5269 iterations 4
Cbc0038I Pass  45: suminf.    1.71254 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  46: suminf.    2.03709 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  47: suminf.    1.20620 (7) obj. -12.5269 iterations 3
Cbc0038I Pass  48: suminf.    1.20620 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  49: suminf.    2.04211 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  50: suminf.    1.85400 (5) obj. -12.5269 iterations 1
Cbc0038I Pass  51: suminf.    1.71254 (7) obj. -12.5269 iterations 4
Cbc0038I Pass  52: suminf.    1.71254 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  53: suminf.    2.03709 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  54: suminf.    1.20620 (7) obj. -12.5269 iterations 3
Cbc0038I Pass  55: suminf.    1.20620 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  56: suminf.    2.04211 (6) obj. -12.5269 iterations 6
Cbc0038I Pass  57: suminf.    1.85400 (5) obj. -12.5269 iterations 1
Cbc0038I Pass  58: suminf.    1.71254 (7) obj. -12.5269 iterations 4
Cbc0038I Pass  59: suminf.    1.71254 (7) obj. -12.5269 iterations 0
Cbc0038I Pass  60: suminf.    2.03709 (6) obj. -12.5269 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 75 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -5.45252 - took 0.14 seconds
Cbc0012I Integer solution of -5.45252 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 127 rows 75 columns, reduced to 71 rows 47 columns
Cbc0012I Integer solution of -8.16611 found by RINS after 0 iterations and 0 nodes (0.19 seconds)
Cbc0031I 29 added rows had average density of 58.103448
Cbc0013I At root node, 29 cuts changed objective from -33.52793 to -24.589145 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13685 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2395 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 126 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.16611 best solution, best possible -24.589145 (1.03 seconds)
Cbc0038I Full problem 127 rows 75 columns, reduced to 39 rows 26 columns
Cbc0001I Search completed - best objective -8.166110000000003, took 10190 iterations and 88 nodes (1.35 seconds)
Cbc0032I Strong branching done 942 times (18839 iterations), fathomed 8 nodes and fixed 15 variables
Cbc0035I Maximum depth 33, 164 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 113 (-40) columns and 1770 (-1534) elements
Clp1000I sum of infeasibilities 1.69297e-06 - average 1.84018e-08, 68 fixed columns
Coin0506I Presolve 33 (-59) rows, 44 (-69) columns and 148 (-1622) elements
Clp0006I 0  Obj -10.354487 Dual inf 1.4903629 (43)
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.9275174 - largest nonzero change 2.3415568e-05 ( 0.0016580886%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value -9.0398649
Clp0000I Optimal - objective value -9.0398649
Coin0511I After Postsolve, objective -9.0398649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.0398649 Dual inf 65.918555 (39)
Clp0014I Perturbing problem by 0.001% of 1.7288106 - largest nonzero change 2.3069546e-05 ( 0.0018056464%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 53.578037
Clp0000I Optimal - objective value 53.578037
Clp0000I Optimal - objective value 53.578037
Coin0511I After Postsolve, objective 53.578037, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.57803714 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 113 columns (113 integer (113 of which binary)) and 1772 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.421%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.17622
Cbc0038I Pass   1: suminf.    3.87540 (32) obj. -37.0924 iterations 10
Cbc0038I Pass   2: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass   3: suminf.    2.06910 (19) obj. -20.7034 iterations 13
Cbc0038I Pass   4: suminf.    0.77530 (8) obj. -8.34751 iterations 11
Cbc0038I Solution found of 0.69157
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 0.69157 to -0.58432 (0.03 seconds)
Cbc0038I Round again with cutoff of -4.87066
Cbc0038I Pass   5: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass   6: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass   7: suminf.    2.44784 (22) obj. -24.1976 iterations 10
Cbc0038I Pass   8: suminf.    0.27833 (3) obj. -4.87066 iterations 24
Cbc0038I Pass   9: suminf.    0.16071 (2) obj. -5.74311 iterations 3
Cbc0038I Pass  10: suminf.    0.47385 (2) obj. -4.87066 iterations 3
Cbc0038I Pass  11: suminf.    0.44247 (2) obj. -4.87066 iterations 1
Cbc0038I Pass  12: suminf.    0.63287 (3) obj. -4.87066 iterations 5
Cbc0038I Pass  13: suminf.    0.44247 (2) obj. -4.87066 iterations 6
Cbc0038I Pass  14: suminf.    1.66466 (9) obj. -4.87066 iterations 20
Cbc0038I Pass  15: suminf.    1.59652 (9) obj. -4.87066 iterations 5
Cbc0038I Pass  16: suminf.    0.50791 (3) obj. -4.87066 iterations 13
Cbc0038I Pass  17: suminf.    0.28938 (2) obj. -5.37472 iterations 7
Cbc0038I Pass  18: suminf.    0.63515 (3) obj. -4.87066 iterations 8
Cbc0038I Pass  19: suminf.    3.24218 (17) obj. -4.87066 iterations 31
Cbc0038I Pass  20: suminf.    1.95177 (13) obj. -4.87066 iterations 8
Cbc0038I Pass  21: suminf.    1.68978 (10) obj. -4.87066 iterations 20
Cbc0038I Pass  22: suminf.    1.68978 (10) obj. -4.87066 iterations 1
Cbc0038I Pass  23: suminf.    0.73687 (4) obj. -4.87066 iterations 10
Cbc0038I Pass  24: suminf.    0.73687 (4) obj. -4.87066 iterations 1
Cbc0038I Pass  25: suminf.    0.70618 (3) obj. -4.87066 iterations 28
Cbc0038I Pass  26: suminf.    0.27568 (2) obj. -5.25304 iterations 7
Cbc0038I Pass  27: suminf.    0.70618 (3) obj. -4.87066 iterations 8
Cbc0038I Pass  28: suminf.    2.79519 (13) obj. -4.87066 iterations 28
Cbc0038I Pass  29: suminf.    2.48264 (13) obj. -4.87066 iterations 4
Cbc0038I Pass  30: suminf.    0.63790 (4) obj. -4.87066 iterations 15
Cbc0038I Pass  31: suminf.    0.47838 (4) obj. -4.87066 iterations 3
Cbc0038I Pass  32: suminf.    0.55321 (2) obj. -4.87066 iterations 5
Cbc0038I Pass  33: suminf.    0.39117 (3) obj. -4.87066 iterations 5
Cbc0038I Pass  34: suminf.    0.40978 (2) obj. -4.87066 iterations 5
Cbc0038I Rounding solution of -1.78522 is better than previous of -0.58432

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 7 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1.78522 to -3.22579 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.5859
Cbc0038I Pass  34: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass  35: suminf.    3.87540 (32) obj. -37.0924 iterations 0
Cbc0038I Pass  36: suminf.    1.70412 (16) obj. -17.189 iterations 16
Cbc0038I Pass  37: suminf.    0.64471 (5) obj. -12.5859 iterations 25
Cbc0038I Pass  38: suminf.    0.62032 (6) obj. -12.5859 iterations 1
Cbc0038I Pass  39: suminf.    1.45609 (7) obj. -12.5859 iterations 11
Cbc0038I Pass  40: suminf.    0.64471 (5) obj. -12.5859 iterations 7
Cbc0038I Pass  41: suminf.    1.80764 (11) obj. -12.5859 iterations 24
Cbc0038I Pass  42: suminf.    1.79995 (10) obj. -12.5859 iterations 2
Cbc0038I Pass  43: suminf.    1.38753 (6) obj. -12.5859 iterations 18
Cbc0038I Pass  44: suminf.    1.17735 (5) obj. -12.5859 iterations 9
Cbc0038I Pass  45: suminf.    1.27613 (6) obj. -12.5859 iterations 8
Cbc0038I Pass  46: suminf.    1.19354 (5) obj. -12.5859 iterations 7
Cbc0038I Pass  47: suminf.    1.25345 (6) obj. -12.5859 iterations 8
Cbc0038I Pass  48: suminf.    1.76554 (9) obj. -12.5859 iterations 19
Cbc0038I Pass  49: suminf.    1.29067 (7) obj. -12.8489 iterations 6
Cbc0038I Pass  50: suminf.    1.44489 (7) obj. -12.5859 iterations 5
Cbc0038I Pass  51: suminf.    1.15972 (7) obj. -12.5859 iterations 1
Cbc0038I Pass  52: suminf.    1.83810 (10) obj. -12.5859 iterations 10
Cbc0038I Pass  53: suminf.    1.66739 (8) obj. -12.5859 iterations 3
Cbc0038I Pass  54: suminf.    1.55888 (6) obj. -12.5859 iterations 5
Cbc0038I Pass  55: suminf.    1.21448 (7) obj. -12.5859 iterations 1
Cbc0038I Pass  56: suminf.    2.43344 (14) obj. -12.5859 iterations 21
Cbc0038I Pass  57: suminf.    1.80202 (12) obj. -12.5859 iterations 5
Cbc0038I Pass  58: suminf.    1.79219 (12) obj. -12.5859 iterations 2
Cbc0038I Pass  59: suminf.    0.93301 (7) obj. -12.5859 iterations 11
Cbc0038I Pass  60: suminf.    0.93301 (7) obj. -12.5859 iterations 0
Cbc0038I Pass  61: suminf.    1.01595 (7) obj. -12.5859 iterations 2
Cbc0038I Pass  62: suminf.    1.01595 (7) obj. -12.5859 iterations 0
Cbc0038I Pass  63: suminf.    0.93301 (7) obj. -12.5859 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 26 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -3.22579 - took 0.04 seconds
Cbc0012I Integer solution of -3.22579 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 92 rows 113 columns, reduced to 4 rows 6 columns
Cbc0031I 59 added rows had average density of 28.898305
Cbc0013I At root node, 59 cuts changed objective from -43.446817 to -10.289409 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9585 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1170 row cuts average 107.2 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 513 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1154 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 337 row cuts average 67.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 65 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.648 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.22579 best solution, best possible -10.289409 (2.06 seconds)
Cbc0012I Integer solution of -6.68368 found by rounding after 3455 iterations and 1 nodes (2.06 seconds)
Cbc0012I Integer solution of -7.70278 found by rounding after 3669 iterations and 2 nodes (2.09 seconds)
Cbc0012I Integer solution of -7.86058 found by DiveCoefficient after 3669 iterations and 2 nodes (2.09 seconds)
Cbc0012I Integer solution of -8.16611 found by rounding after 3680 iterations and 5 nodes (2.10 seconds)
Cbc0001I Search completed - best objective -8.166110000000003, took 4383 iterations and 18 nodes (2.42 seconds)
Cbc0032I Strong branching done 360 times (7172 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 25 variables fixed on reduced cost
Total time (CPU seconds):       1.84   (Wallclock seconds):       2.43

