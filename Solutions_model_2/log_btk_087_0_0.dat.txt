Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 166 (-10) rows, 85 (-4) columns and 414 (-20) elements
Clp1000I sum of infeasibilities 0.00331954 - average 1.99972e-05, 34 fixed columns
Coin0506I Presolve 82 (-84) rows, 51 (-34) columns and 212 (-202) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 19535.685
Clp0000I Optimal - objective value 19535.685
Coin0511I After Postsolve, objective 19535.685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28001168 - largest nonzero change 2.026601e-05 ( 0.0017128079%) - largest zero change 2.8652236e-05
Clp0000I Optimal - objective value 19535.685
Clp0000I Optimal - objective value 19535.685
Clp0000I Optimal - objective value 19535.685
Coin0511I After Postsolve, objective 19535.685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19535.68532 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 166 rows, 85 columns (84 integer (84 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 15.6933
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5331.46 iterations 46
Cbc0038I Solution found of -5331.46
Cbc0038I Relaxing continuous gives -5331.46
Cbc0038I Rounding solution of -5475.68 is better than previous of -5331.46

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 166 rows 85 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -5475.68 to -13022.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -13674.1
Cbc0038I Pass   2: suminf.    2.71893 (14) obj. -13674.1 iterations 15
Cbc0038I Pass   3: suminf.    1.72589 (12) obj. -13674.1 iterations 3
Cbc0038I Pass   4: suminf.    1.63664 (6) obj. -13674.1 iterations 15
Cbc0038I Pass   5: suminf.    1.61069 (5) obj. -13674.1 iterations 7
Cbc0038I Pass   6: suminf.    1.61069 (5) obj. -13674.1 iterations 0
Cbc0038I Pass   7: suminf.    1.53426 (5) obj. -13674.1 iterations 5
Cbc0038I Pass   8: suminf.    0.98189 (4) obj. -13674.1 iterations 2
Cbc0038I Pass   9: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  10: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  11: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I Pass  12: suminf.    2.12333 (6) obj. -13674.1 iterations 8
Cbc0038I Pass  13: suminf.    1.62647 (5) obj. -13674.1 iterations 1
Cbc0038I Pass  14: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  15: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  16: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I Pass  17: suminf.    2.12333 (6) obj. -13674.1 iterations 8
Cbc0038I Pass  18: suminf.    1.62647 (5) obj. -13674.1 iterations 1
Cbc0038I Pass  19: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  20: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  21: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I Pass  22: suminf.    2.12333 (6) obj. -13674.1 iterations 8
Cbc0038I Pass  23: suminf.    1.62647 (5) obj. -13674.1 iterations 1
Cbc0038I Pass  24: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  25: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  26: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I Pass  27: suminf.    2.12333 (6) obj. -13674.1 iterations 8
Cbc0038I Pass  28: suminf.    1.62647 (5) obj. -13674.1 iterations 1
Cbc0038I Pass  29: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  30: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  31: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 166 rows 85 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -13022.8 - took 0.04 seconds
Cbc0012I Integer solution of -13022.795 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 166 rows 85 columns, reduced to 74 rows 46 columns
Cbc0031I 11 added rows had average density of 64.909091
Cbc0013I At root node, 11 cuts changed objective from -19535.685 to -13841.662 in 72 passes
Cbc0014I Cut generator 0 (Probing) - 2035 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 318 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 87 row cuts average 39.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0012I Integer solution of -13034.666 found by rounding after 1167 iterations and 4 nodes (0.34 seconds)
Cbc0012I Integer solution of -13150.843 found by rounding after 1171 iterations and 5 nodes (0.34 seconds)
Cbc0012I Integer solution of -13219.135 found by rounding after 1298 iterations and 11 nodes (0.36 seconds)
Cbc0001I Search completed - best objective -13219.13480000001, took 1482 iterations and 16 nodes (0.41 seconds)
Cbc0032I Strong branching done 164 times (1931 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 93 variables fixed on reduced cost
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-44) rows, 133 (-41) columns and 2262 (-1913) elements
Clp1000I sum of infeasibilities 1.07693e-05 - average 8.22081e-08, 109 fixed columns
Coin0506I Presolve 20 (-111) rows, 24 (-109) columns and 62 (-2200) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 5737.2047
Clp0000I Optimal - objective value 5737.2047
Coin0511I After Postsolve, objective 5737.2047, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.8929031 - largest nonzero change 2.398299e-05 ( 0.002398299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 25555.049
Clp0000I Optimal - objective value 25555.049
Clp0000I Optimal - objective value 25555.049
Coin0511I After Postsolve, objective 25555.049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 25555.04876 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 133 columns (133 integer (133 of which binary)) and 2263 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 13.0669
Cbc0038I Pass   1: suminf.   10.76214 (39) obj. -21824.4 iterations 18
Cbc0038I Pass   2: suminf.   10.03732 (38) obj. -20324.5 iterations 1
Cbc0038I Pass   3: suminf.    5.37539 (25) obj. -16734.3 iterations 13
Cbc0038I Pass   4: suminf.    2.07727 (12) obj. -14236.1 iterations 13
Cbc0038I Solution found of -8901.03
Cbc0038I Rounding solution of -9117.67 is better than previous of -8901.03

Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 133 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -9117.67 to -12165.6 (0.04 seconds)
Cbc0038I Round again with cutoff of -13445.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.   10.76214 (39) obj. -21824.4 iterations 0
Cbc0038I Pass   6: suminf.   10.03732 (38) obj. -20324.5 iterations 1
Cbc0038I Pass   7: suminf.    1.54785 (10) obj. -13445.2 iterations 30
Cbc0038I Pass   8: suminf.    1.77357 (4) obj. -13445.2 iterations 16
Cbc0038I Pass   9: suminf.    0.67030 (2) obj. -14232.3 iterations 3
Cbc0038I Pass  10: suminf.    0.43263 (2) obj. -13445.2 iterations 1
Cbc0038I Pass  11: suminf.    0.45046 (2) obj. -13445.2 iterations 3
Cbc0038I Pass  12: suminf.    3.16590 (16) obj. -13445.2 iterations 28
Cbc0038I Pass  13: suminf.    3.01448 (10) obj. -13558.3 iterations 16
Cbc0038I Pass  14: suminf.    2.02657 (7) obj. -13445.2 iterations 11
Cbc0038I Pass  15: suminf.    2.02657 (7) obj. -13445.2 iterations 1
Cbc0038I Pass  16: suminf.    1.80072 (4) obj. -13445.2 iterations 12
Cbc0038I Pass  17: suminf.    1.50507 (4) obj. -13445.2 iterations 2
Cbc0038I Pass  18: suminf.    1.26377 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  19: suminf.    1.70373 (4) obj. -13445.2 iterations 5
Cbc0038I Pass  20: suminf.    1.52672 (4) obj. -13445.2 iterations 1
Cbc0038I Pass  21: suminf.    1.24595 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  22: suminf.    1.50507 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  23: suminf.    1.26377 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  24: suminf.    1.70373 (4) obj. -13445.2 iterations 5
Cbc0038I Pass  25: suminf.    1.52672 (4) obj. -13445.2 iterations 1
Cbc0038I Pass  26: suminf.    1.24595 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  27: suminf.    1.50507 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  28: suminf.    1.26377 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  29: suminf.    1.70373 (4) obj. -13445.2 iterations 5
Cbc0038I Pass  30: suminf.    1.52672 (4) obj. -13445.2 iterations 1
Cbc0038I Pass  31: suminf.    1.24595 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  32: suminf.    1.50507 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  33: suminf.    1.26377 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  34: suminf.    1.70373 (4) obj. -13445.2 iterations 5
Cbc0038I Rounding solution of -12199.6 is better than previous of -12165.6

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 133 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -15748.4
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.   10.76214 (39) obj. -21824.4 iterations 0
Cbc0038I Pass  35: suminf.   10.03732 (38) obj. -20324.5 iterations 1
Cbc0038I Pass  36: suminf.    4.55273 (22) obj. -15932.6 iterations 16
Cbc0038I Pass  37: suminf.    1.24770 (6) obj. -15748.4 iterations 28
Cbc0038I Pass  38: suminf.    1.19365 (6) obj. -15748.4 iterations 2
Cbc0038I Pass  39: suminf.    1.78840 (5) obj. -15748.4 iterations 14
Cbc0038I Pass  40: suminf.    1.78840 (5) obj. -15748.4 iterations 0
Cbc0038I Pass  41: suminf.    1.77408 (5) obj. -15748.4 iterations 5
Cbc0038I Pass  42: suminf.    1.77408 (5) obj. -15748.4 iterations 0
Cbc0038I Pass  43: suminf.    1.78840 (5) obj. -15748.4 iterations 3
Cbc0038I Pass  44: suminf.    3.05049 (11) obj. -15748.4 iterations 17
Cbc0038I Pass  45: suminf.    2.78990 (11) obj. -15748.4 iterations 10
Cbc0038I Pass  46: suminf.    1.71281 (7) obj. -15748.4 iterations 13
Cbc0038I Pass  47: suminf.    1.61003 (7) obj. -15748.4 iterations 6
Cbc0038I Pass  48: suminf.    1.94445 (7) obj. -15748.4 iterations 2
Cbc0038I Pass  49: suminf.    1.94445 (7) obj. -15748.4 iterations 1
Cbc0038I Pass  50: suminf.    1.71281 (7) obj. -15748.4 iterations 4
Cbc0038I Pass  51: suminf.    4.37090 (16) obj. -15748.4 iterations 21
Cbc0038I Pass  52: suminf.    4.24529 (15) obj. -15748.4 iterations 3
Cbc0038I Pass  53: suminf.    2.16305 (9) obj. -15748.4 iterations 16
Cbc0038I Pass  54: suminf.    2.16305 (9) obj. -15748.4 iterations 0
Cbc0038I Pass  55: suminf.    2.06178 (5) obj. -15748.4 iterations 14
Cbc0038I Pass  56: suminf.    2.06178 (5) obj. -15748.4 iterations 0
Cbc0038I Pass  57: suminf.    2.01062 (5) obj. -15748.4 iterations 3
Cbc0038I Pass  58: suminf.    2.01062 (5) obj. -15748.4 iterations 1
Cbc0038I Pass  59: suminf.    1.97816 (5) obj. -15748.4 iterations 5
Cbc0038I Pass  60: suminf.    1.97816 (5) obj. -15748.4 iterations 1
Cbc0038I Pass  61: suminf.    3.79943 (12) obj. -15748.4 iterations 19
Cbc0038I Pass  62: suminf.    3.10337 (9) obj. -15748.4 iterations 17
Cbc0038I Pass  63: suminf.    3.10337 (9) obj. -15748.4 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 133 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -12199.6 - took 0.05 seconds
Cbc0012I Integer solution of -12199.61 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 131 rows 133 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -12553.593 found by DiveCoefficient after 1272 iterations and 0 nodes (1.97 seconds)
Cbc0031I 34 added rows had average density of 21.529412
Cbc0013I At root node, 34 cuts changed objective from -24961.069 to -13492.413 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4330 row cuts average 10.2 elements, 13 column cuts (13 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 387 row cuts average 93.4 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 188 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 238 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 66.4 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 52 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12553.593 best solution, best possible -13492.408 (2.00 seconds)
Cbc0012I Integer solution of -12788.043 found by DiveCoefficient after 1365 iterations and 3 nodes (2.22 seconds)
Cbc0012I Integer solution of -13022.795 found by DiveCoefficient after 1434 iterations and 3 nodes (2.41 seconds)
Cbc0012I Integer solution of -13219.135 found by DiveCoefficient after 1453 iterations and 4 nodes (2.42 seconds)
Cbc0001I Search completed - best objective -13219.13480000001, took 1591 iterations and 8 nodes (2.63 seconds)
Cbc0032I Strong branching done 80 times (612 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 49 variables fixed on reduced cost
Total time (CPU seconds):       1.70   (Wallclock seconds):       2.64

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 166 (-10) rows, 85 (-4) columns and 414 (-20) elements
Clp1000I sum of infeasibilities 0.00331954 - average 1.99972e-05, 34 fixed columns
Coin0506I Presolve 82 (-84) rows, 51 (-34) columns and 212 (-202) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 19535.685
Clp0000I Optimal - objective value 19535.685
Coin0511I After Postsolve, objective 19535.685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28001168 - largest nonzero change 2.026601e-05 ( 0.0017128079%) - largest zero change 2.8652236e-05
Clp0000I Optimal - objective value 19535.685
Clp0000I Optimal - objective value 19535.685
Clp0000I Optimal - objective value 19535.685
Coin0511I After Postsolve, objective 19535.685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19535.68532 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 166 rows, 85 columns (84 integer (84 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 15.6933
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5331.46 iterations 46
Cbc0038I Solution found of -5331.46
Cbc0038I Relaxing continuous gives -5331.46
Cbc0038I Rounding solution of -5475.68 is better than previous of -5331.46

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 166 rows 85 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -5475.68 to -13022.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -13674.1
Cbc0038I Pass   2: suminf.    2.71893 (14) obj. -13674.1 iterations 15
Cbc0038I Pass   3: suminf.    1.72589 (12) obj. -13674.1 iterations 3
Cbc0038I Pass   4: suminf.    1.63664 (6) obj. -13674.1 iterations 15
Cbc0038I Pass   5: suminf.    1.61069 (5) obj. -13674.1 iterations 7
Cbc0038I Pass   6: suminf.    1.61069 (5) obj. -13674.1 iterations 0
Cbc0038I Pass   7: suminf.    1.53426 (5) obj. -13674.1 iterations 5
Cbc0038I Pass   8: suminf.    0.98189 (4) obj. -13674.1 iterations 2
Cbc0038I Pass   9: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  10: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  11: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I Pass  12: suminf.    2.12333 (6) obj. -13674.1 iterations 8
Cbc0038I Pass  13: suminf.    1.62647 (5) obj. -13674.1 iterations 1
Cbc0038I Pass  14: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  15: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  16: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I Pass  17: suminf.    2.12333 (6) obj. -13674.1 iterations 8
Cbc0038I Pass  18: suminf.    1.62647 (5) obj. -13674.1 iterations 1
Cbc0038I Pass  19: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  20: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  21: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I Pass  22: suminf.    2.12333 (6) obj. -13674.1 iterations 8
Cbc0038I Pass  23: suminf.    1.62647 (5) obj. -13674.1 iterations 1
Cbc0038I Pass  24: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  25: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  26: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I Pass  27: suminf.    2.12333 (6) obj. -13674.1 iterations 8
Cbc0038I Pass  28: suminf.    1.62647 (5) obj. -13674.1 iterations 1
Cbc0038I Pass  29: suminf.    0.63958 (7) obj. -13674.1 iterations 6
Cbc0038I Pass  30: suminf.    3.30333 (8) obj. -13674.1 iterations 8
Cbc0038I Pass  31: suminf.    2.70430 (7) obj. -13674.1 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 166 rows 85 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -13022.8 - took 0.05 seconds
Cbc0012I Integer solution of -13022.795 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 166 rows 85 columns, reduced to 74 rows 46 columns
Cbc0031I 11 added rows had average density of 64.909091
Cbc0013I At root node, 11 cuts changed objective from -19535.685 to -13841.662 in 72 passes
Cbc0014I Cut generator 0 (Probing) - 2035 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 318 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 87 row cuts average 39.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0012I Integer solution of -13034.666 found by rounding after 1167 iterations and 4 nodes (0.29 seconds)
Cbc0012I Integer solution of -13150.843 found by rounding after 1171 iterations and 5 nodes (0.29 seconds)
Cbc0012I Integer solution of -13219.135 found by rounding after 1298 iterations and 11 nodes (0.31 seconds)
Cbc0001I Search completed - best objective -13219.13480000001, took 1482 iterations and 16 nodes (0.35 seconds)
Cbc0032I Strong branching done 164 times (1931 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 93 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-45) rows, 133 (-42) columns and 2262 (-1914) elements
Clp1000I sum of infeasibilities 1.07693e-05 - average 8.22081e-08, 109 fixed columns
Coin0506I Presolve 20 (-111) rows, 24 (-109) columns and 62 (-2200) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 5737.2047
Clp0000I Optimal - objective value 5737.2047
Coin0511I After Postsolve, objective 5737.2047, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.8929031 - largest nonzero change 2.398299e-05 ( 0.002398299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 25555.049
Clp0000I Optimal - objective value 25555.049
Clp0000I Optimal - objective value 25555.049
Coin0511I After Postsolve, objective 25555.049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 25555.04876 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 133 columns (133 integer (133 of which binary)) and 2263 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 13.0669
Cbc0038I Pass   1: suminf.   10.76214 (39) obj. -21824.4 iterations 18
Cbc0038I Pass   2: suminf.   10.03732 (38) obj. -20324.5 iterations 1
Cbc0038I Pass   3: suminf.    5.37539 (25) obj. -16734.3 iterations 13
Cbc0038I Pass   4: suminf.    2.07727 (12) obj. -14236.1 iterations 13
Cbc0038I Solution found of -8901.03
Cbc0038I Rounding solution of -9117.67 is better than previous of -8901.03

Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 133 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -9117.67 to -12165.6 (0.03 seconds)
Cbc0038I Round again with cutoff of -13445.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.   10.76214 (39) obj. -21824.4 iterations 0
Cbc0038I Pass   6: suminf.   10.03732 (38) obj. -20324.5 iterations 1
Cbc0038I Pass   7: suminf.    1.54785 (10) obj. -13445.2 iterations 30
Cbc0038I Pass   8: suminf.    1.77357 (4) obj. -13445.2 iterations 16
Cbc0038I Pass   9: suminf.    0.67030 (2) obj. -14232.3 iterations 3
Cbc0038I Pass  10: suminf.    0.43263 (2) obj. -13445.2 iterations 1
Cbc0038I Pass  11: suminf.    0.45046 (2) obj. -13445.2 iterations 3
Cbc0038I Pass  12: suminf.    3.16590 (16) obj. -13445.2 iterations 28
Cbc0038I Pass  13: suminf.    3.01448 (10) obj. -13558.3 iterations 16
Cbc0038I Pass  14: suminf.    2.02657 (7) obj. -13445.2 iterations 11
Cbc0038I Pass  15: suminf.    2.02657 (7) obj. -13445.2 iterations 1
Cbc0038I Pass  16: suminf.    1.80072 (4) obj. -13445.2 iterations 12
Cbc0038I Pass  17: suminf.    1.50507 (4) obj. -13445.2 iterations 2
Cbc0038I Pass  18: suminf.    1.26377 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  19: suminf.    1.70373 (4) obj. -13445.2 iterations 5
Cbc0038I Pass  20: suminf.    1.52672 (4) obj. -13445.2 iterations 1
Cbc0038I Pass  21: suminf.    1.24595 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  22: suminf.    1.50507 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  23: suminf.    1.26377 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  24: suminf.    1.70373 (4) obj. -13445.2 iterations 5
Cbc0038I Pass  25: suminf.    1.52672 (4) obj. -13445.2 iterations 1
Cbc0038I Pass  26: suminf.    1.24595 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  27: suminf.    1.50507 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  28: suminf.    1.26377 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  29: suminf.    1.70373 (4) obj. -13445.2 iterations 5
Cbc0038I Pass  30: suminf.    1.52672 (4) obj. -13445.2 iterations 1
Cbc0038I Pass  31: suminf.    1.24595 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  32: suminf.    1.50507 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  33: suminf.    1.26377 (4) obj. -13445.2 iterations 4
Cbc0038I Pass  34: suminf.    1.70373 (4) obj. -13445.2 iterations 5
Cbc0038I Rounding solution of -12199.6 is better than previous of -12165.6

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 133 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -15748.4
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.   10.76214 (39) obj. -21824.4 iterations 0
Cbc0038I Pass  35: suminf.   10.03732 (38) obj. -20324.5 iterations 1
Cbc0038I Pass  36: suminf.    4.55273 (22) obj. -15932.6 iterations 16
Cbc0038I Pass  37: suminf.    1.24770 (6) obj. -15748.4 iterations 28
Cbc0038I Pass  38: suminf.    1.19365 (6) obj. -15748.4 iterations 2
Cbc0038I Pass  39: suminf.    1.78840 (5) obj. -15748.4 iterations 14
Cbc0038I Pass  40: suminf.    1.78840 (5) obj. -15748.4 iterations 0
Cbc0038I Pass  41: suminf.    1.77408 (5) obj. -15748.4 iterations 5
Cbc0038I Pass  42: suminf.    1.77408 (5) obj. -15748.4 iterations 0
Cbc0038I Pass  43: suminf.    1.78840 (5) obj. -15748.4 iterations 3
Cbc0038I Pass  44: suminf.    3.05049 (11) obj. -15748.4 iterations 17
Cbc0038I Pass  45: suminf.    2.78990 (11) obj. -15748.4 iterations 10
Cbc0038I Pass  46: suminf.    1.71281 (7) obj. -15748.4 iterations 13
Cbc0038I Pass  47: suminf.    1.61003 (7) obj. -15748.4 iterations 6
Cbc0038I Pass  48: suminf.    1.94445 (7) obj. -15748.4 iterations 2
Cbc0038I Pass  49: suminf.    1.94445 (7) obj. -15748.4 iterations 1
Cbc0038I Pass  50: suminf.    1.71281 (7) obj. -15748.4 iterations 4
Cbc0038I Pass  51: suminf.    4.37090 (16) obj. -15748.4 iterations 21
Cbc0038I Pass  52: suminf.    4.24529 (15) obj. -15748.4 iterations 3
Cbc0038I Pass  53: suminf.    2.16305 (9) obj. -15748.4 iterations 16
Cbc0038I Pass  54: suminf.    2.16305 (9) obj. -15748.4 iterations 0
Cbc0038I Pass  55: suminf.    2.06178 (5) obj. -15748.4 iterations 14
Cbc0038I Pass  56: suminf.    2.06178 (5) obj. -15748.4 iterations 0
Cbc0038I Pass  57: suminf.    2.01062 (5) obj. -15748.4 iterations 3
Cbc0038I Pass  58: suminf.    2.01062 (5) obj. -15748.4 iterations 1
Cbc0038I Pass  59: suminf.    1.97816 (5) obj. -15748.4 iterations 5
Cbc0038I Pass  60: suminf.    1.97816 (5) obj. -15748.4 iterations 1
Cbc0038I Pass  61: suminf.    3.79943 (12) obj. -15748.4 iterations 19
Cbc0038I Pass  62: suminf.    3.10337 (9) obj. -15748.4 iterations 17
Cbc0038I Pass  63: suminf.    3.10337 (9) obj. -15748.4 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 133 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -12199.6 - took 0.04 seconds
Cbc0012I Integer solution of -12199.61 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 131 rows 133 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -12553.593 found by DiveCoefficient after 1272 iterations and 0 nodes (1.69 seconds)
Cbc0031I 34 added rows had average density of 21.529412
Cbc0013I At root node, 34 cuts changed objective from -24961.069 to -13492.413 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4330 row cuts average 10.2 elements, 13 column cuts (13 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 387 row cuts average 93.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 188 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 238 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 66.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 52 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.656 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12553.593 best solution, best possible -13492.408 (1.70 seconds)
Cbc0012I Integer solution of -12788.043 found by DiveCoefficient after 1365 iterations and 3 nodes (1.82 seconds)
Cbc0012I Integer solution of -13022.795 found by DiveCoefficient after 1434 iterations and 3 nodes (1.95 seconds)
Cbc0012I Integer solution of -13219.135 found by DiveCoefficient after 1453 iterations and 4 nodes (1.95 seconds)
Cbc0001I Search completed - best objective -13219.13480000001, took 1591 iterations and 8 nodes (2.12 seconds)
Cbc0032I Strong branching done 80 times (612 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 49 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       2.13

