Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 71 (-7) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 4.23347e-05 - average 3.1593e-07, 29 fixed columns
Coin0506I Presolve 69 (-65) rows, 37 (-34) columns and 204 (-198) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 63.512538
Clp0000I Optimal - objective value 63.512538
Coin0511I After Postsolve, objective 63.512538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.512538
Clp0000I Optimal - objective value 63.512538
Clp0000I Optimal - objective value 63.512538
Coin0511I After Postsolve, objective 63.512538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.51253837 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 71 columns (70 integer (70 of which binary)) and 401 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.310%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.01754
Cbc0038I Solution found of 4.7676
Cbc0038I Relaxing continuous gives -7.12023
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 71 columns, reduced to 61 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -7.12023 to -31.2852 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.508
Cbc0038I Pass   1: suminf.    2.93175 (22) obj. -34.508 iterations 41
Cbc0038I Pass   2: suminf.    2.48848 (11) obj. -34.508 iterations 25
Cbc0038I Pass   3: suminf.    1.80674 (8) obj. -34.508 iterations 4
Cbc0038I Pass   4: suminf.    2.77679 (8) obj. -34.508 iterations 25
Cbc0038I Pass   5: suminf.    1.37365 (5) obj. -34.508 iterations 5
Cbc0038I Pass   6: suminf.    1.15050 (4) obj. -34.508 iterations 2
Cbc0038I Pass   7: suminf.    1.00240 (4) obj. -34.508 iterations 2
Cbc0038I Pass   8: suminf.    1.03699 (3) obj. -34.508 iterations 6
Cbc0038I Pass   9: suminf.    0.95661 (3) obj. -34.508 iterations 1
Cbc0038I Pass  10: suminf.    0.78485 (3) obj. -34.508 iterations 3
Cbc0038I Pass  11: suminf.    0.40063 (3) obj. -34.508 iterations 2
Cbc0038I Pass  12: suminf.    1.05421 (5) obj. -34.508 iterations 5
Cbc0038I Pass  13: suminf.    0.98867 (4) obj. -34.508 iterations 1
Cbc0038I Pass  14: suminf.    1.03699 (3) obj. -34.508 iterations 4
Cbc0038I Pass  15: suminf.    0.95661 (3) obj. -34.508 iterations 1
Cbc0038I Pass  16: suminf.    0.78485 (3) obj. -34.508 iterations 3
Cbc0038I Pass  17: suminf.    0.40063 (3) obj. -34.508 iterations 2
Cbc0038I Pass  18: suminf.    1.05421 (5) obj. -34.508 iterations 5
Cbc0038I Pass  19: suminf.    0.98867 (4) obj. -34.508 iterations 1
Cbc0038I Pass  20: suminf.    1.03699 (3) obj. -34.508 iterations 4
Cbc0038I Pass  21: suminf.    0.95661 (3) obj. -34.508 iterations 1
Cbc0038I Pass  22: suminf.    0.78485 (3) obj. -34.508 iterations 3
Cbc0038I Pass  23: suminf.    0.40063 (3) obj. -34.508 iterations 2
Cbc0038I Pass  24: suminf.    1.05421 (5) obj. -34.508 iterations 5
Cbc0038I Pass  25: suminf.    0.98867 (4) obj. -34.508 iterations 1
Cbc0038I Pass  26: suminf.    1.03699 (3) obj. -34.508 iterations 4
Cbc0038I Pass  27: suminf.    0.95661 (3) obj. -34.508 iterations 1
Cbc0038I Pass  28: suminf.    0.78485 (3) obj. -34.508 iterations 3
Cbc0038I Pass  29: suminf.    0.40063 (3) obj. -34.508 iterations 2
Cbc0038I Pass  30: suminf.    1.05421 (5) obj. -34.508 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 71 columns, reduced to 65 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -31.2852 - took 0.05 seconds
Cbc0012I Integer solution of -31.28518 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 133 rows 71 columns, reduced to 61 rows 33 columns
Cbc0031I 21 added rows had average density of 23.619048
Cbc0013I At root node, 21 cuts changed objective from -63.512538 to -54.517107 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5908 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1417 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0016I Integer solution of -31.89754 found by strong branching after 5505 iterations and 34 nodes (0.53 seconds)
Cbc0038I Full problem 133 rows 71 columns, reduced to 9 rows 9 columns
Cbc0001I Search completed - best objective -31.89754000000001, took 5740 iterations and 46 nodes (0.55 seconds)
Cbc0032I Strong branching done 386 times (4711 iterations), fathomed 8 nodes and fixed 23 variables
Cbc0035I Maximum depth 8, 206 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-42) rows, 118 (-34) columns and 1970 (-1333) elements
Clp1000I sum of infeasibilities 5.15584e-07 - average 4.60343e-09, 36 fixed columns
Coin0506I Presolve 78 (-34) rows, 82 (-36) columns and 939 (-1031) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 2.2301199 - largest nonzero change 1.4009651e-05 ( 0.00086069148%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 85.987261
Clp0000I Optimal - objective value 85.987261
Coin0511I After Postsolve, objective 85.987261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.987261
Clp0000I Optimal - objective value 85.987261
Clp0000I Optimal - objective value 85.987261
Coin0511I After Postsolve, objective 85.987261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.98726089 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 118 columns (118 integer (118 of which binary)) and 1971 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.583%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 4.30717
Cbc0038I Pass   1: suminf.    0.88536 (22) obj. -41.089 iterations 13
Cbc0038I Pass   2: suminf.    0.88536 (22) obj. -41.089 iterations 1
Cbc0038I Pass   3: suminf.    0.41936 (12) obj. -20.099 iterations 10
Cbc0038I Solution found of -2.76118
Cbc0038I Rounding solution of -12.4284 is better than previous of -2.76118

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 118 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -12.4284 to -26.925 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.6199
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.88536 (22) obj. -41.089 iterations 0
Cbc0038I Pass   5: suminf.    0.88536 (22) obj. -41.089 iterations 1
Cbc0038I Pass   6: suminf.    1.04424 (19) obj. -31.6199 iterations 30
Cbc0038I Pass   7: suminf.    0.76833 (16) obj. -31.6199 iterations 4
Cbc0038I Pass   8: suminf.    1.13183 (8) obj. -31.6199 iterations 20
Cbc0038I Pass   9: suminf.    0.71498 (7) obj. -31.6199 iterations 4
Cbc0038I Pass  10: suminf.    1.88646 (6) obj. -31.6199 iterations 7
Cbc0038I Pass  11: suminf.    1.82964 (6) obj. -31.6199 iterations 2
Cbc0038I Pass  12: suminf.    2.63126 (13) obj. -31.6199 iterations 20
Cbc0038I Pass  13: suminf.    2.27042 (15) obj. -31.6199 iterations 7
Cbc0038I Pass  14: suminf.    1.71603 (16) obj. -31.6199 iterations 5
Cbc0038I Pass  15: suminf.    1.66055 (10) obj. -31.6199 iterations 12
Cbc0038I Pass  16: suminf.    1.53270 (10) obj. -31.6199 iterations 5
Cbc0038I Pass  17: suminf.    1.66055 (9) obj. -31.6199 iterations 6
Cbc0038I Pass  18: suminf.    1.46899 (12) obj. -31.6199 iterations 22
Cbc0038I Pass  19: suminf.    1.46899 (12) obj. -31.6199 iterations 5
Cbc0038I Pass  20: suminf.    1.33804 (11) obj. -31.6199 iterations 17
Cbc0038I Pass  21: suminf.    1.09498 (12) obj. -31.6199 iterations 2
Cbc0038I Pass  22: suminf.    1.85193 (9) obj. -31.6199 iterations 13
Cbc0038I Pass  23: suminf.    1.31868 (10) obj. -31.6199 iterations 10
Cbc0038I Pass  24: suminf.    1.85193 (9) obj. -31.6199 iterations 9
Cbc0038I Pass  25: suminf.    1.35735 (10) obj. -31.6199 iterations 10
Cbc0038I Pass  26: suminf.    1.85193 (9) obj. -31.6199 iterations 11
Cbc0038I Pass  27: suminf.    1.28679 (19) obj. -31.6199 iterations 24
Cbc0038I Pass  28: suminf.    0.89586 (14) obj. -31.6199 iterations 10
Cbc0038I Pass  29: suminf.    1.68830 (10) obj. -31.6199 iterations 21
Cbc0038I Pass  30: suminf.    1.61771 (11) obj. -31.6199 iterations 6
Cbc0038I Pass  31: suminf.    1.70004 (10) obj. -31.6199 iterations 3
Cbc0038I Pass  32: suminf.    1.22301 (14) obj. -31.6199 iterations 20
Cbc0038I Pass  33: suminf.    1.19072 (12) obj. -31.6199 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 118 columns, reduced to 31 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -26.925 - took 0.04 seconds
Cbc0012I Integer solution of -26.92503 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 111 rows 118 columns, reduced to 7 rows 7 columns
Cbc0031I 42 added rows had average density of 24.904762
Cbc0013I At root node, 42 cuts changed objective from -73.872922 to -38.967814 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 966 row cuts average 9.0 elements, 3 column cuts (4 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 57 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 162 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 259 row cuts average 62.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.92503 best solution, best possible -38.967814 (0.35 seconds)
Cbc0012I Integer solution of -27.732954 found by rounding after 434 iterations and 1 nodes (0.36 seconds)
Cbc0012I Integer solution of -28.67878 found by rounding after 852 iterations and 15 nodes (1.00 seconds)
Cbc0010I After 17 nodes, 14 on tree, -28.67878 best solution, best possible -38.967814 (1.05 seconds)
Cbc0012I Integer solution of -28.85308 found by DiveCoefficient after 979 iterations and 22 nodes (1.15 seconds)
Cbc0016I Integer solution of -29.89754 found by strong branching after 1027 iterations and 25 nodes (1.25 seconds)
Cbc0038I Full problem 111 rows 118 columns, reduced to 19 rows 23 columns
Cbc0012I Integer solution of -30.42412 found by rounding after 1583 iterations and 44 nodes (1.77 seconds)
Cbc0010I After 44 nodes, 10 on tree, -30.42412 best solution, best possible -38.967814 (1.77 seconds)
Cbc0038I Full problem 153 rows 118 columns, reduced to 96 rows 102 columns
Cbc0044I Reduced cost fixing - 96 rows, 102 columns - restarting search
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.1382
Cbc0038I Pass   1: suminf.    1.18723 (22) obj. -40.5493 iterations 19
Cbc0038I Pass   2: suminf.    1.18723 (22) obj. -40.5493 iterations 1
Cbc0038I Pass   3: suminf.    1.08836 (5) obj. -30.4242 iterations 34
Cbc0038I Pass   4: suminf.    0.59255 (2) obj. -30.4242 iterations 4
Cbc0038I Pass   5: suminf.    0.25786 (2) obj. -33.4364 iterations 1
Cbc0038I Pass   6: suminf.    1.08836 (5) obj. -30.4242 iterations 6
Cbc0038I Pass   7: suminf.    1.45647 (11) obj. -30.4242 iterations 15
Cbc0038I Pass   8: suminf.    1.15409 (18) obj. -30.4242 iterations 10
Cbc0038I Pass   9: suminf.    1.30836 (8) obj. -30.4242 iterations 17
Cbc0038I Pass  10: suminf.    1.18712 (9) obj. -30.4242 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 102 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (1.90 seconds)
Cbc0038I Full problem 97 rows 102 columns, reduced to 97 rows 102 columns
Cbc0038I After 1.96 seconds - Feasibility pump exiting with objective of -26.925 - took 0.06 seconds
Cbc0031I 45 added rows had average density of 31.444444
Cbc0013I At root node, 45 cuts changed objective from -72.508464 to -38.189825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2310 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 297 row cuts average 86.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 314 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 501 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.618 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 354 row cuts average 25.9 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -38.139794 (3.40 seconds)
Cbc0012I Integer solution of -31.19128 found by rounding after 2311 iterations and 2 nodes (3.55 seconds)
Cbc0038I Full problem 96 rows 102 columns, reduced to 40 rows 46 columns
Cbc0004I Integer solution of -31.89754 found after 3088 iterations and 17 nodes (4.33 seconds)
Cbc0010I After 20 nodes, 3 on tree, -31.89754 best solution, best possible -38.139794 (4.52 seconds)
Cbc0001I Search completed - best objective -31.89753999999999, took 3592 iterations and 26 nodes (4.73 seconds)
Cbc0032I Strong branching done 322 times (5321 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 8, 119 variables fixed on reduced cost
Cbc0038I Probing was tried 198 times and created 2917 cuts of which 0 were active after adding rounds of cuts (0.086 seconds)
Cbc0038I Gomory was tried 192 times and created 299 cuts of which 0 were active after adding rounds of cuts (0.078 seconds)
Cbc0038I Knapsack was tried 192 times and created 568 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)
Cbc0038I Clique was tried 192 times and created 498 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Cbc0038I MixedIntegerRounding2 was tried 192 times and created 603 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 192 times and created 206 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
Cbc0038I ZeroHalf was tried 192 times and created 285 cuts of which 0 were active after adding rounds of cuts (1.181 seconds)
Cbc0038I Stored from first was tried 192 times and created 440 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -31.89754 found by Reduced search after 5323 iterations and 76 nodes (4.74 seconds)
Cbc0001I Search completed - best objective -31.89754000000001, took 5323 iterations and 76 nodes (4.74 seconds)
Cbc0032I Strong branching done 654 times (7777 iterations), fathomed 7 nodes and fixed 10 variables
Cbc0035I Maximum depth 16, 148 variables fixed on reduced cost
Total time (CPU seconds):       3.15   (Wallclock seconds):       4.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 71 (-7) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 4.23347e-05 - average 3.1593e-07, 29 fixed columns
Coin0506I Presolve 69 (-65) rows, 37 (-34) columns and 204 (-198) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 63.512538
Clp0000I Optimal - objective value 63.512538
Coin0511I After Postsolve, objective 63.512538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.512538
Clp0000I Optimal - objective value 63.512538
Clp0000I Optimal - objective value 63.512538
Coin0511I After Postsolve, objective 63.512538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.51253837 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 71 columns (70 integer (70 of which binary)) and 401 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.310%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.01754
Cbc0038I Solution found of 4.7676
Cbc0038I Relaxing continuous gives -7.12023
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 71 columns, reduced to 61 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -7.12023 to -31.2852 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.508
Cbc0038I Pass   1: suminf.    2.93175 (22) obj. -34.508 iterations 41
Cbc0038I Pass   2: suminf.    2.48848 (11) obj. -34.508 iterations 25
Cbc0038I Pass   3: suminf.    1.80674 (8) obj. -34.508 iterations 4
Cbc0038I Pass   4: suminf.    2.77679 (8) obj. -34.508 iterations 25
Cbc0038I Pass   5: suminf.    1.37365 (5) obj. -34.508 iterations 5
Cbc0038I Pass   6: suminf.    1.15050 (4) obj. -34.508 iterations 2
Cbc0038I Pass   7: suminf.    1.00240 (4) obj. -34.508 iterations 2
Cbc0038I Pass   8: suminf.    1.03699 (3) obj. -34.508 iterations 6
Cbc0038I Pass   9: suminf.    0.95661 (3) obj. -34.508 iterations 1
Cbc0038I Pass  10: suminf.    0.78485 (3) obj. -34.508 iterations 3
Cbc0038I Pass  11: suminf.    0.40063 (3) obj. -34.508 iterations 2
Cbc0038I Pass  12: suminf.    1.05421 (5) obj. -34.508 iterations 5
Cbc0038I Pass  13: suminf.    0.98867 (4) obj. -34.508 iterations 1
Cbc0038I Pass  14: suminf.    1.03699 (3) obj. -34.508 iterations 4
Cbc0038I Pass  15: suminf.    0.95661 (3) obj. -34.508 iterations 1
Cbc0038I Pass  16: suminf.    0.78485 (3) obj. -34.508 iterations 3
Cbc0038I Pass  17: suminf.    0.40063 (3) obj. -34.508 iterations 2
Cbc0038I Pass  18: suminf.    1.05421 (5) obj. -34.508 iterations 5
Cbc0038I Pass  19: suminf.    0.98867 (4) obj. -34.508 iterations 1
Cbc0038I Pass  20: suminf.    1.03699 (3) obj. -34.508 iterations 4
Cbc0038I Pass  21: suminf.    0.95661 (3) obj. -34.508 iterations 1
Cbc0038I Pass  22: suminf.    0.78485 (3) obj. -34.508 iterations 3
Cbc0038I Pass  23: suminf.    0.40063 (3) obj. -34.508 iterations 2
Cbc0038I Pass  24: suminf.    1.05421 (5) obj. -34.508 iterations 5
Cbc0038I Pass  25: suminf.    0.98867 (4) obj. -34.508 iterations 1
Cbc0038I Pass  26: suminf.    1.03699 (3) obj. -34.508 iterations 4
Cbc0038I Pass  27: suminf.    0.95661 (3) obj. -34.508 iterations 1
Cbc0038I Pass  28: suminf.    0.78485 (3) obj. -34.508 iterations 3
Cbc0038I Pass  29: suminf.    0.40063 (3) obj. -34.508 iterations 2
Cbc0038I Pass  30: suminf.    1.05421 (5) obj. -34.508 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 71 columns, reduced to 65 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -31.2852 - took 0.05 seconds
Cbc0012I Integer solution of -31.28518 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 133 rows 71 columns, reduced to 61 rows 33 columns
Cbc0031I 21 added rows had average density of 23.619048
Cbc0013I At root node, 21 cuts changed objective from -63.512538 to -54.517107 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5908 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1417 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0016I Integer solution of -31.89754 found by strong branching after 5505 iterations and 34 nodes (0.61 seconds)
Cbc0038I Full problem 133 rows 71 columns, reduced to 9 rows 9 columns
Cbc0001I Search completed - best objective -31.89754000000001, took 5740 iterations and 46 nodes (0.63 seconds)
Cbc0032I Strong branching done 386 times (4711 iterations), fathomed 8 nodes and fixed 23 variables
Cbc0035I Maximum depth 8, 206 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-43) rows, 118 (-35) columns and 1970 (-1334) elements
Clp1000I sum of infeasibilities 5.15584e-07 - average 4.60343e-09, 36 fixed columns
Coin0506I Presolve 78 (-34) rows, 82 (-36) columns and 939 (-1031) elements
Clp0006I 0  Obj 76.320849 Dual inf 6.0445094 (79)
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 2.2301199 - largest nonzero change 1.4009651e-05 ( 0.00086069148%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 85.987261
Clp0000I Optimal - objective value 85.987261
Coin0511I After Postsolve, objective 85.987261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 85.987261
Clp0000I Optimal - objective value 85.987261
Clp0000I Optimal - objective value 85.987261
Clp0000I Optimal - objective value 85.987261
Coin0511I After Postsolve, objective 85.987261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.98726089 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 118 columns (118 integer (118 of which binary)) and 1971 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.583%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 4.30717
Cbc0038I Pass   1: suminf.    0.88536 (22) obj. -41.089 iterations 13
Cbc0038I Pass   2: suminf.    0.88536 (22) obj. -41.089 iterations 1
Cbc0038I Pass   3: suminf.    0.41936 (12) obj. -20.099 iterations 10
Cbc0038I Solution found of -2.76118
Cbc0038I Rounding solution of -12.4284 is better than previous of -2.76118

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 118 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -12.4284 to -26.925 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.6199
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.88536 (22) obj. -41.089 iterations 0
Cbc0038I Pass   5: suminf.    0.88536 (22) obj. -41.089 iterations 1
Cbc0038I Pass   6: suminf.    1.04424 (19) obj. -31.6199 iterations 30
Cbc0038I Pass   7: suminf.    0.76833 (16) obj. -31.6199 iterations 4
Cbc0038I Pass   8: suminf.    1.13183 (8) obj. -31.6199 iterations 20
Cbc0038I Pass   9: suminf.    0.71498 (7) obj. -31.6199 iterations 4
Cbc0038I Pass  10: suminf.    1.88646 (6) obj. -31.6199 iterations 7
Cbc0038I Pass  11: suminf.    1.82964 (6) obj. -31.6199 iterations 2
Cbc0038I Pass  12: suminf.    2.63126 (13) obj. -31.6199 iterations 20
Cbc0038I Pass  13: suminf.    2.27042 (15) obj. -31.6199 iterations 7
Cbc0038I Pass  14: suminf.    1.71603 (16) obj. -31.6199 iterations 5
Cbc0038I Pass  15: suminf.    1.66055 (10) obj. -31.6199 iterations 12
Cbc0038I Pass  16: suminf.    1.53270 (10) obj. -31.6199 iterations 5
Cbc0038I Pass  17: suminf.    1.66055 (9) obj. -31.6199 iterations 6
Cbc0038I Pass  18: suminf.    1.46899 (12) obj. -31.6199 iterations 22
Cbc0038I Pass  19: suminf.    1.46899 (12) obj. -31.6199 iterations 5
Cbc0038I Pass  20: suminf.    1.33804 (11) obj. -31.6199 iterations 17
Cbc0038I Pass  21: suminf.    1.09498 (12) obj. -31.6199 iterations 2
Cbc0038I Pass  22: suminf.    1.85193 (9) obj. -31.6199 iterations 13
Cbc0038I Pass  23: suminf.    1.31868 (10) obj. -31.6199 iterations 10
Cbc0038I Pass  24: suminf.    1.85193 (9) obj. -31.6199 iterations 9
Cbc0038I Pass  25: suminf.    1.35735 (10) obj. -31.6199 iterations 10
Cbc0038I Pass  26: suminf.    1.85193 (9) obj. -31.6199 iterations 11
Cbc0038I Pass  27: suminf.    1.28679 (19) obj. -31.6199 iterations 24
Cbc0038I Pass  28: suminf.    0.89586 (14) obj. -31.6199 iterations 10
Cbc0038I Pass  29: suminf.    1.68830 (10) obj. -31.6199 iterations 21
Cbc0038I Pass  30: suminf.    1.61771 (11) obj. -31.6199 iterations 6
Cbc0038I Pass  31: suminf.    1.70004 (10) obj. -31.6199 iterations 3
Cbc0038I Pass  32: suminf.    1.22301 (14) obj. -31.6199 iterations 20
Cbc0038I Pass  33: suminf.    1.19072 (12) obj. -31.6199 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 118 columns, reduced to 31 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -26.925 - took 0.04 seconds
Cbc0012I Integer solution of -26.92503 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 111 rows 118 columns, reduced to 7 rows 7 columns
Cbc0031I 42 added rows had average density of 24.904762
Cbc0013I At root node, 42 cuts changed objective from -73.872922 to -38.967814 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 966 row cuts average 9.0 elements, 3 column cuts (4 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 57 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 162 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 259 row cuts average 62.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.92503 best solution, best possible -38.967814 (0.39 seconds)
Cbc0012I Integer solution of -27.732954 found by rounding after 434 iterations and 1 nodes (0.40 seconds)
Cbc0010I After 14 nodes, 13 on tree, -27.732954 best solution, best possible -38.967814 (1.09 seconds)
Cbc0012I Integer solution of -28.67878 found by rounding after 852 iterations and 15 nodes (1.12 seconds)
Cbc0012I Integer solution of -28.85308 found by DiveCoefficient after 979 iterations and 22 nodes (1.31 seconds)
Cbc0016I Integer solution of -29.89754 found by strong branching after 1027 iterations and 25 nodes (1.42 seconds)
Cbc0038I Full problem 111 rows 118 columns, reduced to 19 rows 23 columns
Cbc0010I After 41 nodes, 9 on tree, -29.89754 best solution, best possible -38.967814 (1.88 seconds)
Cbc0012I Integer solution of -30.42412 found by rounding after 1583 iterations and 44 nodes (2.00 seconds)
Cbc0038I Full problem 153 rows 118 columns, reduced to 96 rows 102 columns
Cbc0044I Reduced cost fixing - 96 rows, 102 columns - restarting search
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.1382
Cbc0038I Pass   1: suminf.    1.18723 (22) obj. -40.5493 iterations 19
Cbc0038I Pass   2: suminf.    1.18723 (22) obj. -40.5493 iterations 1
Cbc0038I Pass   3: suminf.    1.08836 (5) obj. -30.4242 iterations 34
Cbc0038I Pass   4: suminf.    0.59255 (2) obj. -30.4242 iterations 4
Cbc0038I Pass   5: suminf.    0.25786 (2) obj. -33.4364 iterations 1
Cbc0038I Pass   6: suminf.    1.08836 (5) obj. -30.4242 iterations 6
Cbc0038I Pass   7: suminf.    1.45647 (11) obj. -30.4242 iterations 15
Cbc0038I Pass   8: suminf.    1.15409 (18) obj. -30.4242 iterations 10
Cbc0038I Pass   9: suminf.    1.30836 (8) obj. -30.4242 iterations 17
Cbc0038I Pass  10: suminf.    1.18712 (9) obj. -30.4242 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 102 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (2.15 seconds)
Cbc0038I Full problem 97 rows 102 columns, reduced to 97 rows 102 columns
Cbc0038I After 2.21 seconds - Feasibility pump exiting with objective of -26.925 - took 0.07 seconds
Cbc0031I 45 added rows had average density of 31.444444
Cbc0013I At root node, 45 cuts changed objective from -72.508464 to -38.189825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2310 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 297 row cuts average 86.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 314 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 501 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.738 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 354 row cuts average 25.9 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -38.139794 (3.96 seconds)
Cbc0012I Integer solution of -31.19128 found by rounding after 2311 iterations and 2 nodes (4.14 seconds)
Cbc0038I Full problem 96 rows 102 columns, reduced to 40 rows 46 columns
Cbc0010I After 11 nodes, 6 on tree, -31.19128 best solution, best possible -38.139794 (4.96 seconds)
Cbc0004I Integer solution of -31.89754 found after 3088 iterations and 17 nodes (5.07 seconds)
Cbc0001I Search completed - best objective -31.89753999999999, took 3592 iterations and 26 nodes (5.53 seconds)
Cbc0032I Strong branching done 322 times (5321 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 8, 119 variables fixed on reduced cost
Cbc0038I Probing was tried 198 times and created 2917 cuts of which 0 were active after adding rounds of cuts (0.101 seconds)
Cbc0038I Gomory was tried 192 times and created 299 cuts of which 0 were active after adding rounds of cuts (0.093 seconds)
Cbc0038I Knapsack was tried 192 times and created 568 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
Cbc0038I Clique was tried 192 times and created 498 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Cbc0038I MixedIntegerRounding2 was tried 192 times and created 603 cuts of which 0 were active after adding rounds of cuts (0.067 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 192 times and created 206 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
Cbc0038I ZeroHalf was tried 192 times and created 285 cuts of which 0 were active after adding rounds of cuts (1.380 seconds)
Cbc0038I Stored from first was tried 192 times and created 440 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -31.89754 found by Reduced search after 5323 iterations and 76 nodes (5.53 seconds)
Cbc0001I Search completed - best objective -31.89754000000001, took 5323 iterations and 76 nodes (5.53 seconds)
Cbc0032I Strong branching done 654 times (7777 iterations), fathomed 7 nodes and fixed 10 variables
Cbc0035I Maximum depth 16, 148 variables fixed on reduced cost
Total time (CPU seconds):       3.61   (Wallclock seconds):       5.54

