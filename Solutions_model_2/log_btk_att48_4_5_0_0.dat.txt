Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 48 (-2) columns and 268 (-17) elements
Clp1000I sum of infeasibilities 0.000354384 - average 3.9376e-06, 2 fixed columns
Coin0506I Presolve 86 (-4) rows, 46 (-2) columns and 256 (-12) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 1822.3625
Clp0000I Optimal - objective value 1822.3625
Coin0511I After Postsolve, objective 1822.3625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1822.3625
Clp0000I Optimal - objective value 1822.3625
Clp0000I Optimal - objective value 1822.3625
Coin0511I After Postsolve, objective 1822.3625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1822.36246 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 48 columns (47 integer (47 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 13.6795
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 782.883 iterations 36
Cbc0038I Solution found of 782.883
Cbc0038I Relaxing continuous gives 782.883
Cbc0038I Rounding solution of -110.708 is better than previous of 782.883

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 72 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -110.708 to -382.909 (0.03 seconds)
Cbc0038I Round again with cutoff of -526.854
Cbc0038I Pass   2: suminf.    3.41335 (16) obj. -526.854 iterations 14
Cbc0038I Pass   3: suminf.    3.40019 (15) obj. -526.854 iterations 1
Cbc0038I Pass   4: suminf.    2.85719 (8) obj. -526.854 iterations 20
Cbc0038I Pass   5: suminf.    2.00000 (7) obj. -526.854 iterations 3
Cbc0038I Pass   6: suminf.    2.01577 (12) obj. -526.854 iterations 10
Cbc0038I Pass   7: suminf.    1.90558 (10) obj. -526.854 iterations 2
Cbc0038I Pass   8: suminf.    3.11192 (8) obj. -526.854 iterations 9
Cbc0038I Pass   9: suminf.    2.86763 (10) obj. -526.854 iterations 7
Cbc0038I Pass  10: suminf.    3.43933 (9) obj. -526.854 iterations 9
Cbc0038I Pass  11: suminf.    2.88482 (11) obj. -526.854 iterations 5
Cbc0038I Pass  12: suminf.    2.88482 (11) obj. -526.854 iterations 0
Cbc0038I Pass  13: suminf.    3.41280 (9) obj. -526.854 iterations 11
Cbc0038I Pass  14: suminf.    2.92111 (9) obj. -526.854 iterations 4
Cbc0038I Pass  15: suminf.    2.84174 (9) obj. -526.854 iterations 1
Cbc0038I Pass  16: suminf.    3.51791 (9) obj. -526.854 iterations 7
Cbc0038I Pass  17: suminf.    2.88482 (11) obj. -526.854 iterations 5
Cbc0038I Pass  18: suminf.    2.88482 (11) obj. -526.854 iterations 0
Cbc0038I Pass  19: suminf.    3.87952 (10) obj. -526.854 iterations 9
Cbc0038I Pass  20: suminf.    2.92111 (9) obj. -526.854 iterations 4
Cbc0038I Pass  21: suminf.    2.84174 (9) obj. -526.854 iterations 1
Cbc0038I Pass  22: suminf.    3.51791 (9) obj. -526.854 iterations 7
Cbc0038I Pass  23: suminf.    2.88482 (11) obj. -526.854 iterations 5
Cbc0038I Pass  24: suminf.    2.88482 (11) obj. -526.854 iterations 0
Cbc0038I Pass  25: suminf.    3.41280 (9) obj. -526.854 iterations 11
Cbc0038I Pass  26: suminf.    2.92111 (9) obj. -526.854 iterations 4
Cbc0038I Pass  27: suminf.    2.84174 (9) obj. -526.854 iterations 1
Cbc0038I Pass  28: suminf.    3.51791 (9) obj. -526.854 iterations 7
Cbc0038I Pass  29: suminf.    2.88482 (11) obj. -526.854 iterations 5
Cbc0038I Pass  30: suminf.    2.88482 (11) obj. -526.854 iterations 0
Cbc0038I Pass  31: suminf.    3.41280 (9) obj. -526.854 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 72 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -382.909 - took 0.06 seconds
Cbc0012I Integer solution of -382.909 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 26 added rows had average density of 25.038462
Cbc0013I At root node, 26 cuts changed objective from -1822.3625 to -1174.5362 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10139 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2388 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -382.909 best solution, best possible -1174.5362 (0.68 seconds)
Cbc0016I Integer solution of -383.5182 found by strong branching after 7710 iterations and 8 nodes (0.72 seconds)
Cbc0038I Full problem 90 rows 48 columns, reduced to 55 rows 30 columns
Cbc0001I Search completed - best objective -383.5182, took 10936 iterations and 52 nodes (1.09 seconds)
Cbc0032I Strong branching done 766 times (14181 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 13, 59 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-8) rows, 94 (-2) columns and 1349 (-64) elements
Clp1000I sum of infeasibilities 2.78194e-08 - average 3.09104e-10, 51 fixed columns
Coin0506I Presolve 31 (-59) rows, 34 (-60) columns and 256 (-1093) elements
Clp0006I 0  Obj 1457.7029 Dual inf 43.810332 (34)
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 2259.2728
Clp0000I Optimal - objective value 2259.2728
Coin0511I After Postsolve, objective 2259.2728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2259.2728 Dual inf 1341.6665 (13)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 2434.6826
Clp0000I Optimal - objective value 2434.6826
Clp0000I Optimal - objective value 2434.6826
Coin0511I After Postsolve, objective 2434.6826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2434.682582 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 94 columns (94 integer (94 of which binary)) and 1351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 10.9561
Cbc0038I Pass   1: suminf.    3.57842 (28) obj. -868.74 iterations 19
Cbc0038I Pass   2: suminf.    3.57842 (28) obj. -868.74 iterations 2
Cbc0038I Pass   3: suminf.    1.92345 (17) obj. -124.037 iterations 11
Cbc0038I Pass   4: suminf.    0.54937 (6) obj. 323.225 iterations 11
Cbc0038I Solution found of 569.773
Cbc0038I Rounding solution of -127.911 is better than previous of 569.773

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 6 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -127.911 to -344.829 (0.02 seconds)
Cbc0038I Round again with cutoff of -514.776
Cbc0038I Pass   5: suminf.    3.57842 (28) obj. -868.74 iterations 0
Cbc0038I Pass   6: suminf.    3.57842 (28) obj. -868.74 iterations 1
Cbc0038I Pass   7: suminf.    1.35661 (8) obj. -514.776 iterations 35
Cbc0038I Pass   8: suminf.    0.84352 (6) obj. -520.812 iterations 4
Cbc0038I Pass   9: suminf.    0.50079 (6) obj. -514.776 iterations 10
Cbc0038I Pass  10: suminf.    0.50079 (6) obj. -514.776 iterations 0
Cbc0038I Pass  11: suminf.    0.67473 (3) obj. -514.776 iterations 6
Cbc0038I Pass  12: suminf.    0.67473 (3) obj. -514.776 iterations 0
Cbc0038I Pass  13: suminf.    0.64497 (3) obj. -514.776 iterations 2
Cbc0038I Pass  14: suminf.    0.36890 (2) obj. -540.343 iterations 2
Cbc0038I Pass  15: suminf.    0.63402 (3) obj. -514.776 iterations 6
Cbc0038I Pass  16: suminf.    0.18750 (1) obj. -604.016 iterations 3
Cbc0038I Pass  17: suminf.    0.46725 (1) obj. -514.776 iterations 2
Cbc0038I Pass  18: suminf.    1.38823 (6) obj. -514.776 iterations 26
Cbc0038I Pass  19: suminf.    1.38823 (6) obj. -514.776 iterations 4
Cbc0038I Pass  20: suminf.    0.86883 (4) obj. -514.776 iterations 7
Cbc0038I Pass  21: suminf.    0.86883 (4) obj. -514.776 iterations 0
Cbc0038I Pass  22: suminf.    0.91824 (4) obj. -514.776 iterations 1
Cbc0038I Pass  23: suminf.    0.91824 (4) obj. -514.776 iterations 0
Cbc0038I Pass  24: suminf.    4.16954 (17) obj. -514.776 iterations 23
Cbc0038I Pass  25: suminf.    3.64421 (16) obj. -514.776 iterations 4
Cbc0038I Pass  26: suminf.    3.35462 (14) obj. -656.403 iterations 2
Cbc0038I Pass  27: suminf.    1.41397 (5) obj. -514.776 iterations 15
Cbc0038I Pass  28: suminf.    1.41397 (5) obj. -514.776 iterations 0
Cbc0038I Pass  29: suminf.    0.85302 (4) obj. -514.776 iterations 6
Cbc0038I Pass  30: suminf.    0.85302 (4) obj. -514.776 iterations 0
Cbc0038I Pass  31: suminf.    0.83322 (3) obj. -514.776 iterations 5
Cbc0038I Pass  32: suminf.    0.82529 (3) obj. -516.639 iterations 3
Cbc0038I Pass  33: suminf.    3.58305 (14) obj. -514.776 iterations 19
Cbc0038I Pass  34: suminf.    2.72057 (12) obj. -514.776 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 31 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -344.829 to -371.61 (0.04 seconds)
Cbc0038I Round again with cutoff of -820.681
Cbc0038I Pass  34: suminf.    3.57842 (28) obj. -868.74 iterations 0
Cbc0038I Pass  35: suminf.    3.57842 (28) obj. -868.74 iterations 1
Cbc0038I Pass  36: suminf.    2.55488 (17) obj. -820.681 iterations 23
Cbc0038I Pass  37: suminf.    2.55442 (16) obj. -820.681 iterations 1
Cbc0038I Pass  38: suminf.    1.12574 (6) obj. -820.681 iterations 19
Cbc0038I Pass  39: suminf.    0.67557 (4) obj. -913.111 iterations 3
Cbc0038I Pass  40: suminf.    0.74996 (3) obj. -820.681 iterations 8
Cbc0038I Pass  41: suminf.    0.74996 (3) obj. -820.681 iterations 1
Cbc0038I Pass  42: suminf.    0.98965 (3) obj. -820.681 iterations 2
Cbc0038I Pass  43: suminf.    0.98965 (3) obj. -820.681 iterations 0
Cbc0038I Pass  44: suminf.    0.74996 (3) obj. -820.681 iterations 2
Cbc0038I Pass  45: suminf.    2.39375 (10) obj. -820.681 iterations 20
Cbc0038I Pass  46: suminf.    2.39375 (10) obj. -820.681 iterations 7
Cbc0038I Pass  47: suminf.    1.36409 (5) obj. -820.681 iterations 12
Cbc0038I Pass  48: suminf.    1.36409 (5) obj. -820.681 iterations 0
Cbc0038I Pass  49: suminf.    0.83541 (4) obj. -820.681 iterations 5
Cbc0038I Pass  50: suminf.    0.83541 (4) obj. -820.681 iterations 0
Cbc0038I Pass  51: suminf.    0.80409 (4) obj. -820.681 iterations 3
Cbc0038I Pass  52: suminf.    0.80409 (4) obj. -820.681 iterations 0
Cbc0038I Pass  53: suminf.    0.83541 (4) obj. -820.681 iterations 4
Cbc0038I Pass  54: suminf.    2.31536 (10) obj. -820.681 iterations 19
Cbc0038I Pass  55: suminf.    2.31536 (10) obj. -820.681 iterations 6
Cbc0038I Pass  56: suminf.    1.17943 (5) obj. -820.681 iterations 10
Cbc0038I Pass  57: suminf.    1.17943 (5) obj. -820.681 iterations 0
Cbc0038I Pass  58: suminf.    0.93770 (5) obj. -820.681 iterations 5
Cbc0038I Pass  59: suminf.    0.93770 (5) obj. -820.681 iterations 0
Cbc0038I Pass  60: suminf.    1.17943 (5) obj. -820.681 iterations 1
Cbc0038I Pass  61: suminf.    2.11460 (12) obj. -820.681 iterations 12
Cbc0038I Pass  62: suminf.    1.77115 (9) obj. -820.681 iterations 6
Cbc0038I Pass  63: suminf.    0.99746 (5) obj. -820.681 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 10 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -371.61 - took 0.03 seconds
Cbc0012I Integer solution of -371.61 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 32 added rows had average density of 20.8125
Cbc0013I At root node, 32 cuts changed objective from -2044.2996 to -436.13054 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4132 row cuts average 4.0 elements, 24 column cuts (24 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 617 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 534 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 199 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.808 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -371.61 best solution, best possible -436.13054 (1.84 seconds)
Cbc0012I Integer solution of -377.1502 found by rounding after 2334 iterations and 1 nodes (1.89 seconds)
Cbc0016I Integer solution of -383.5182 found by strong branching after 2347 iterations and 2 nodes (1.90 seconds)
Cbc0001I Search completed - best objective -383.5182, took 2478 iterations and 4 nodes (1.91 seconds)
Cbc0032I Strong branching done 148 times (2115 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.92

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 48 (-2) columns and 268 (-17) elements
Clp1000I sum of infeasibilities 0.000354384 - average 3.9376e-06, 2 fixed columns
Coin0506I Presolve 86 (-4) rows, 46 (-2) columns and 256 (-12) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 1822.3625
Clp0000I Optimal - objective value 1822.3625
Coin0511I After Postsolve, objective 1822.3625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1822.3625
Clp0000I Optimal - objective value 1822.3625
Clp0000I Optimal - objective value 1822.3625
Coin0511I After Postsolve, objective 1822.3625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1822.36246 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 48 columns (47 integer (47 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 13.6795
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 782.883 iterations 36
Cbc0038I Solution found of 782.883
Cbc0038I Relaxing continuous gives 782.883
Cbc0038I Rounding solution of -110.708 is better than previous of 782.883

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 72 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -110.708 to -382.909 (0.03 seconds)
Cbc0038I Round again with cutoff of -526.854
Cbc0038I Pass   2: suminf.    3.41335 (16) obj. -526.854 iterations 14
Cbc0038I Pass   3: suminf.    3.40019 (15) obj. -526.854 iterations 1
Cbc0038I Pass   4: suminf.    2.85719 (8) obj. -526.854 iterations 20
Cbc0038I Pass   5: suminf.    2.00000 (7) obj. -526.854 iterations 3
Cbc0038I Pass   6: suminf.    2.01577 (12) obj. -526.854 iterations 10
Cbc0038I Pass   7: suminf.    1.90558 (10) obj. -526.854 iterations 2
Cbc0038I Pass   8: suminf.    3.11192 (8) obj. -526.854 iterations 9
Cbc0038I Pass   9: suminf.    2.86763 (10) obj. -526.854 iterations 7
Cbc0038I Pass  10: suminf.    3.43933 (9) obj. -526.854 iterations 9
Cbc0038I Pass  11: suminf.    2.88482 (11) obj. -526.854 iterations 5
Cbc0038I Pass  12: suminf.    2.88482 (11) obj. -526.854 iterations 0
Cbc0038I Pass  13: suminf.    3.41280 (9) obj. -526.854 iterations 11
Cbc0038I Pass  14: suminf.    2.92111 (9) obj. -526.854 iterations 4
Cbc0038I Pass  15: suminf.    2.84174 (9) obj. -526.854 iterations 1
Cbc0038I Pass  16: suminf.    3.51791 (9) obj. -526.854 iterations 7
Cbc0038I Pass  17: suminf.    2.88482 (11) obj. -526.854 iterations 5
Cbc0038I Pass  18: suminf.    2.88482 (11) obj. -526.854 iterations 0
Cbc0038I Pass  19: suminf.    3.87952 (10) obj. -526.854 iterations 9
Cbc0038I Pass  20: suminf.    2.92111 (9) obj. -526.854 iterations 4
Cbc0038I Pass  21: suminf.    2.84174 (9) obj. -526.854 iterations 1
Cbc0038I Pass  22: suminf.    3.51791 (9) obj. -526.854 iterations 7
Cbc0038I Pass  23: suminf.    2.88482 (11) obj. -526.854 iterations 5
Cbc0038I Pass  24: suminf.    2.88482 (11) obj. -526.854 iterations 0
Cbc0038I Pass  25: suminf.    3.41280 (9) obj. -526.854 iterations 11
Cbc0038I Pass  26: suminf.    2.92111 (9) obj. -526.854 iterations 4
Cbc0038I Pass  27: suminf.    2.84174 (9) obj. -526.854 iterations 1
Cbc0038I Pass  28: suminf.    3.51791 (9) obj. -526.854 iterations 7
Cbc0038I Pass  29: suminf.    2.88482 (11) obj. -526.854 iterations 5
Cbc0038I Pass  30: suminf.    2.88482 (11) obj. -526.854 iterations 0
Cbc0038I Pass  31: suminf.    3.41280 (9) obj. -526.854 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 72 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -382.909 - took 0.06 seconds
Cbc0012I Integer solution of -382.909 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 26 added rows had average density of 25.038462
Cbc0013I At root node, 26 cuts changed objective from -1822.3625 to -1174.5362 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10139 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2388 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0016I Integer solution of -383.5182 found by strong branching after 7710 iterations and 8 nodes (0.67 seconds)
Cbc0010I After 18 nodes, 1 on tree, -383.5182 best solution, best possible -947.81275 (0.73 seconds)
Cbc0038I Full problem 90 rows 48 columns, reduced to 55 rows 30 columns
Cbc0001I Search completed - best objective -383.5182, took 10936 iterations and 52 nodes (1.03 seconds)
Cbc0032I Strong branching done 766 times (14181 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 13, 59 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 94 (-3) columns and 1349 (-65) elements
Clp1000I sum of infeasibilities 2.78194e-08 - average 3.09104e-10, 51 fixed columns
Coin0506I Presolve 31 (-59) rows, 34 (-60) columns and 256 (-1093) elements
Clp0006I 0  Obj 1457.7029 Dual inf 43.810332 (34)
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 2259.2728
Clp0000I Optimal - objective value 2259.2728
Coin0511I After Postsolve, objective 2259.2728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2259.2728 Dual inf 1341.6665 (13)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 2434.6826
Clp0000I Optimal - objective value 2434.6826
Clp0000I Optimal - objective value 2434.6826
Coin0511I After Postsolve, objective 2434.6826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2434.682582 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 94 columns (94 integer (94 of which binary)) and 1351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 10.9561
Cbc0038I Pass   1: suminf.    3.57842 (28) obj. -868.74 iterations 19
Cbc0038I Pass   2: suminf.    3.57842 (28) obj. -868.74 iterations 2
Cbc0038I Pass   3: suminf.    1.92345 (17) obj. -124.037 iterations 11
Cbc0038I Pass   4: suminf.    0.54937 (6) obj. 323.225 iterations 11
Cbc0038I Solution found of 569.773
Cbc0038I Rounding solution of -127.911 is better than previous of 569.773

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 6 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -127.911 to -344.829 (0.02 seconds)
Cbc0038I Round again with cutoff of -514.776
Cbc0038I Pass   5: suminf.    3.57842 (28) obj. -868.74 iterations 0
Cbc0038I Pass   6: suminf.    3.57842 (28) obj. -868.74 iterations 1
Cbc0038I Pass   7: suminf.    1.35661 (8) obj. -514.776 iterations 35
Cbc0038I Pass   8: suminf.    0.84352 (6) obj. -520.812 iterations 4
Cbc0038I Pass   9: suminf.    0.50079 (6) obj. -514.776 iterations 10
Cbc0038I Pass  10: suminf.    0.50079 (6) obj. -514.776 iterations 0
Cbc0038I Pass  11: suminf.    0.67473 (3) obj. -514.776 iterations 6
Cbc0038I Pass  12: suminf.    0.67473 (3) obj. -514.776 iterations 0
Cbc0038I Pass  13: suminf.    0.64497 (3) obj. -514.776 iterations 2
Cbc0038I Pass  14: suminf.    0.36890 (2) obj. -540.343 iterations 2
Cbc0038I Pass  15: suminf.    0.63402 (3) obj. -514.776 iterations 6
Cbc0038I Pass  16: suminf.    0.18750 (1) obj. -604.016 iterations 3
Cbc0038I Pass  17: suminf.    0.46725 (1) obj. -514.776 iterations 2
Cbc0038I Pass  18: suminf.    1.38823 (6) obj. -514.776 iterations 26
Cbc0038I Pass  19: suminf.    1.38823 (6) obj. -514.776 iterations 4
Cbc0038I Pass  20: suminf.    0.86883 (4) obj. -514.776 iterations 7
Cbc0038I Pass  21: suminf.    0.86883 (4) obj. -514.776 iterations 0
Cbc0038I Pass  22: suminf.    0.91824 (4) obj. -514.776 iterations 1
Cbc0038I Pass  23: suminf.    0.91824 (4) obj. -514.776 iterations 0
Cbc0038I Pass  24: suminf.    4.16954 (17) obj. -514.776 iterations 23
Cbc0038I Pass  25: suminf.    3.64421 (16) obj. -514.776 iterations 4
Cbc0038I Pass  26: suminf.    3.35462 (14) obj. -656.403 iterations 2
Cbc0038I Pass  27: suminf.    1.41397 (5) obj. -514.776 iterations 15
Cbc0038I Pass  28: suminf.    1.41397 (5) obj. -514.776 iterations 0
Cbc0038I Pass  29: suminf.    0.85302 (4) obj. -514.776 iterations 6
Cbc0038I Pass  30: suminf.    0.85302 (4) obj. -514.776 iterations 0
Cbc0038I Pass  31: suminf.    0.83322 (3) obj. -514.776 iterations 5
Cbc0038I Pass  32: suminf.    0.82529 (3) obj. -516.639 iterations 3
Cbc0038I Pass  33: suminf.    3.58305 (14) obj. -514.776 iterations 19
Cbc0038I Pass  34: suminf.    2.72057 (12) obj. -514.776 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 31 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -344.829 to -371.61 (0.04 seconds)
Cbc0038I Round again with cutoff of -820.681
Cbc0038I Pass  34: suminf.    3.57842 (28) obj. -868.74 iterations 0
Cbc0038I Pass  35: suminf.    3.57842 (28) obj. -868.74 iterations 1
Cbc0038I Pass  36: suminf.    2.55488 (17) obj. -820.681 iterations 23
Cbc0038I Pass  37: suminf.    2.55442 (16) obj. -820.681 iterations 1
Cbc0038I Pass  38: suminf.    1.12574 (6) obj. -820.681 iterations 19
Cbc0038I Pass  39: suminf.    0.67557 (4) obj. -913.111 iterations 3
Cbc0038I Pass  40: suminf.    0.74996 (3) obj. -820.681 iterations 8
Cbc0038I Pass  41: suminf.    0.74996 (3) obj. -820.681 iterations 1
Cbc0038I Pass  42: suminf.    0.98965 (3) obj. -820.681 iterations 2
Cbc0038I Pass  43: suminf.    0.98965 (3) obj. -820.681 iterations 0
Cbc0038I Pass  44: suminf.    0.74996 (3) obj. -820.681 iterations 2
Cbc0038I Pass  45: suminf.    2.39375 (10) obj. -820.681 iterations 20
Cbc0038I Pass  46: suminf.    2.39375 (10) obj. -820.681 iterations 7
Cbc0038I Pass  47: suminf.    1.36409 (5) obj. -820.681 iterations 12
Cbc0038I Pass  48: suminf.    1.36409 (5) obj. -820.681 iterations 0
Cbc0038I Pass  49: suminf.    0.83541 (4) obj. -820.681 iterations 5
Cbc0038I Pass  50: suminf.    0.83541 (4) obj. -820.681 iterations 0
Cbc0038I Pass  51: suminf.    0.80409 (4) obj. -820.681 iterations 3
Cbc0038I Pass  52: suminf.    0.80409 (4) obj. -820.681 iterations 0
Cbc0038I Pass  53: suminf.    0.83541 (4) obj. -820.681 iterations 4
Cbc0038I Pass  54: suminf.    2.31536 (10) obj. -820.681 iterations 19
Cbc0038I Pass  55: suminf.    2.31536 (10) obj. -820.681 iterations 6
Cbc0038I Pass  56: suminf.    1.17943 (5) obj. -820.681 iterations 10
Cbc0038I Pass  57: suminf.    1.17943 (5) obj. -820.681 iterations 0
Cbc0038I Pass  58: suminf.    0.93770 (5) obj. -820.681 iterations 5
Cbc0038I Pass  59: suminf.    0.93770 (5) obj. -820.681 iterations 0
Cbc0038I Pass  60: suminf.    1.17943 (5) obj. -820.681 iterations 1
Cbc0038I Pass  61: suminf.    2.11460 (12) obj. -820.681 iterations 12
Cbc0038I Pass  62: suminf.    1.77115 (9) obj. -820.681 iterations 6
Cbc0038I Pass  63: suminf.    0.99746 (5) obj. -820.681 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 10 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -371.61 - took 0.03 seconds
Cbc0012I Integer solution of -371.61 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 32 added rows had average density of 20.8125
Cbc0013I At root node, 32 cuts changed objective from -2044.2996 to -436.13054 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4132 row cuts average 4.0 elements, 24 column cuts (24 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 617 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 534 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 199 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.669 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -371.61 best solution, best possible -436.13054 (1.55 seconds)
Cbc0012I Integer solution of -377.1502 found by rounding after 2334 iterations and 1 nodes (1.60 seconds)
Cbc0016I Integer solution of -383.5182 found by strong branching after 2347 iterations and 2 nodes (1.61 seconds)
Cbc0001I Search completed - best objective -383.5182, took 2478 iterations and 4 nodes (1.62 seconds)
Cbc0032I Strong branching done 148 times (2115 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.63

