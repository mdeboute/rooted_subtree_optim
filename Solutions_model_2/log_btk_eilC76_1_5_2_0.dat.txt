Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-33) rows, 70 (-8) columns and 377 (-76) elements
Clp1000I sum of infeasibilities 5.78889e-05 - average 4.74499e-07, 13 fixed columns
Coin0506I Presolve 99 (-23) rows, 57 (-13) columns and 305 (-72) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 40.578836
Clp0000I Optimal - objective value 40.578836
Coin0511I After Postsolve, objective 40.578836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.578836
Clp0000I Optimal - objective value 40.578836
Clp0000I Optimal - objective value 40.578836
Coin0511I After Postsolve, objective 40.578836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.57883599 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 122 rows, 70 columns (69 integer (69 of which binary)) and 377 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.216%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.46894
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.6965 iterations 38
Cbc0038I Solution found of 18.6965
Cbc0038I Relaxing continuous gives 18.6965
Cbc0038I Rounding solution of 7.15975 is better than previous of 18.6965

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from 7.15975 to -7.82969 (0.02 seconds)
Cbc0038I Round again with cutoff of -11.1047
Cbc0038I Pass   2: suminf.    3.01788 (10) obj. -11.1047 iterations 11
Cbc0038I Pass   3: suminf.    1.15193 (7) obj. -11.1047 iterations 5
Cbc0038I Pass   4: suminf.    1.00566 (6) obj. -11.1047 iterations 1
Cbc0038I Pass   5: suminf.    0.57894 (4) obj. -11.1047 iterations 8
Cbc0038I Pass   6: suminf.    0.61728 (3) obj. -11.1047 iterations 2
Cbc0038I Pass   7: suminf.    1.19168 (4) obj. -11.1047 iterations 4
Cbc0038I Pass   8: suminf.    0.48794 (4) obj. -11.1047 iterations 3
Cbc0038I Pass   9: suminf.    1.33867 (6) obj. -11.1047 iterations 4
Cbc0038I Pass  10: suminf.    0.81013 (3) obj. -11.1047 iterations 3
Cbc0038I Pass  11: suminf.    0.58997 (3) obj. -11.1047 iterations 3
Cbc0038I Pass  12: suminf.    0.58997 (3) obj. -11.1047 iterations 0
Cbc0038I Pass  13: suminf.    0.47021 (3) obj. -11.1047 iterations 1
Cbc0038I Pass  14: suminf.    0.43564 (2) obj. -11.1047 iterations 1
Cbc0038I Pass  15: suminf.    1.68493 (6) obj. -11.1047 iterations 24
Cbc0038I Pass  16: suminf.    1.57923 (6) obj. -11.1047 iterations 7
Cbc0038I Pass  17: suminf.    1.77905 (7) obj. -11.1047 iterations 13
Cbc0038I Pass  18: suminf.    1.77905 (7) obj. -11.1047 iterations 0
Cbc0038I Pass  19: suminf.    1.66567 (5) obj. -11.1047 iterations 7
Cbc0038I Pass  20: suminf.    1.56569 (6) obj. -11.1047 iterations 2
Cbc0038I Pass  21: suminf.    2.00883 (7) obj. -11.1047 iterations 7
Cbc0038I Pass  22: suminf.    2.00883 (7) obj. -11.1047 iterations 0
Cbc0038I Pass  23: suminf.    3.57791 (14) obj. -11.1047 iterations 22
Cbc0038I Pass  24: suminf.    1.62538 (8) obj. -11.1047 iterations 8
Cbc0038I Pass  25: suminf.    2.14033 (7) obj. -11.1047 iterations 12
Cbc0038I Pass  26: suminf.    2.14033 (7) obj. -11.1047 iterations 0
Cbc0038I Pass  27: suminf.    0.72925 (5) obj. -11.1047 iterations 9
Cbc0038I Pass  28: suminf.    0.57976 (4) obj. -11.1047 iterations 1
Cbc0038I Pass  29: suminf.    0.62904 (3) obj. -11.1047 iterations 3
Cbc0038I Pass  30: suminf.    0.62904 (3) obj. -11.1047 iterations 0
Cbc0038I Pass  31: suminf.    0.94279 (3) obj. -11.1047 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7.82969 - took 0.05 seconds
Cbc0012I Integer solution of -7.8296906 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 70 columns, reduced to 44 rows 26 columns
Cbc0031I 18 added rows had average density of 70
Cbc0013I At root node, 18 cuts changed objective from -40.578836 to -27.989437 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5266 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 747 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0004I Integer solution of -8.03637 found after 4774 iterations and 31 nodes (0.62 seconds)
Cbc0038I Full problem 122 rows 70 columns, reduced to 18 rows 16 columns
Cbc0016I Integer solution of -8.2753306 found by strong branching after 5352 iterations and 59 nodes (0.66 seconds)
Cbc0001I Search completed - best objective -8.275330599999997, took 5596 iterations and 72 nodes (0.68 seconds)
Cbc0032I Strong branching done 682 times (11120 iterations), fathomed 6 nodes and fixed 15 variables
Cbc0035I Maximum depth 22, 238 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-60) rows, 110 (-42) columns and 1656 (-1647) elements
Clp1000I sum of infeasibilities 1.95112e-07 - average 2.07566e-09, 68 fixed columns
Coin0506I Presolve 32 (-62) rows, 42 (-68) columns and 143 (-1513) elements
Clp0006I 0  Obj 1.2311997 Dual inf 1.0080625 (40)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 2.8212468 - largest nonzero change 2.5978046e-05 ( 0.00096990836%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 1.2337835
Clp0000I Optimal - objective value 1.2337835
Coin0511I After Postsolve, objective 1.2337835, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1.2337835 Dual inf 25.294018 (41)
Clp0014I Perturbing problem by 0.001% of 2.0713597 - largest nonzero change 1.6168749e-05 ( 0.0010393299%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 59.899647
Clp0000I Optimal - objective value 59.899647
Clp0000I Optimal - objective value 59.899647
Coin0511I After Postsolve, objective 59.899647, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.89964713 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 111 columns (111 integer (111 of which binary)) and 1663 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.221%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.16539
Cbc0038I Pass   1: suminf.    2.90166 (29) obj. -33.535 iterations 19
Cbc0038I Pass   2: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass   3: suminf.    0.47229 (7) obj. -9.54766 iterations 22
Cbc0038I Solution found of -2.09687
Cbc0038I Rounding solution of -2.1005 is better than previous of -2.09687

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -6.22652
Cbc0038I Pass   4: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass   5: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass   6: suminf.    0.47229 (7) obj. -9.54766 iterations 22
Cbc0038I Pass   7: suminf.    0.64070 (9) obj. -6.22652 iterations 15
Cbc0038I Pass   8: suminf.    0.65559 (7) obj. -6.22652 iterations 26
Cbc0038I Pass   9: suminf.    0.64462 (6) obj. -6.22652 iterations 1
Cbc0038I Pass  10: suminf.    0.77892 (8) obj. -6.22652 iterations 6
Cbc0038I Pass  11: suminf.    0.71412 (6) obj. -6.22652 iterations 5
Cbc0038I Pass  12: suminf.    0.71393 (8) obj. -6.22652 iterations 11
Cbc0038I Pass  13: suminf.    2.21612 (12) obj. -6.22652 iterations 21
Cbc0038I Pass  14: suminf.    1.59010 (15) obj. -6.22652 iterations 4
Cbc0038I Pass  15: suminf.    1.99100 (10) obj. -6.22652 iterations 19
Cbc0038I Pass  16: suminf.    1.82669 (10) obj. -6.22652 iterations 3
Cbc0038I Pass  17: suminf.    1.99100 (10) obj. -6.22652 iterations 6
Cbc0038I Pass  18: suminf.    2.56716 (16) obj. -6.22652 iterations 25
Cbc0038I Pass  19: suminf.    2.03303 (12) obj. -6.22652 iterations 9
Cbc0038I Pass  20: suminf.    1.81473 (13) obj. -6.22652 iterations 10
Cbc0038I Pass  21: suminf.    3.27555 (11) obj. -6.22652 iterations 25
Cbc0038I Pass  22: suminf.    2.54022 (11) obj. -6.22652 iterations 8
Cbc0038I Pass  23: suminf.    1.08603 (9) obj. -6.22652 iterations 16
Cbc0038I Pass  24: suminf.    1.02219 (7) obj. -6.22652 iterations 3
Cbc0038I Pass  25: suminf.    1.26615 (9) obj. -6.22652 iterations 6
Cbc0038I Pass  26: suminf.    0.70812 (7) obj. -6.22652 iterations 5
Cbc0038I Pass  27: suminf.    1.18535 (11) obj. -6.22652 iterations 6
Cbc0038I Pass  28: suminf.    2.80166 (15) obj. -7.58763 iterations 24
Cbc0038I Pass  29: suminf.    1.84992 (15) obj. -6.22652 iterations 11
Cbc0038I Pass  30: suminf.    1.55127 (13) obj. -6.22652 iterations 3
Cbc0038I Pass  31: suminf.    1.13935 (6) obj. -6.22652 iterations 28
Cbc0038I Pass  32: suminf.    0.70812 (7) obj. -6.22652 iterations 4
Cbc0038I Pass  33: suminf.    1.18535 (11) obj. -6.22652 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 55 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -2.09687 to -2.72122 (0.08 seconds)
Cbc0038I Round again with cutoff of -13.6532
Cbc0038I Pass  33: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass  34: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass  35: suminf.    1.14242 (18) obj. -13.6532 iterations 29
Cbc0038I Pass  36: suminf.    1.23096 (11) obj. -13.6532 iterations 35
Cbc0038I Pass  37: suminf.    1.23096 (11) obj. -13.6532 iterations 0
Cbc0038I Pass  38: suminf.    1.20716 (11) obj. -13.6532 iterations 10
Cbc0038I Pass  39: suminf.    1.20716 (11) obj. -13.6532 iterations 1
Cbc0038I Pass  40: suminf.    1.23096 (11) obj. -13.6532 iterations 9
Cbc0038I Pass  41: suminf.    2.97183 (16) obj. -13.6532 iterations 19
Cbc0038I Pass  42: suminf.    2.93611 (15) obj. -13.6532 iterations 8
Cbc0038I Pass  43: suminf.    1.29339 (12) obj. -13.6532 iterations 18
Cbc0038I Pass  44: suminf.    1.23096 (11) obj. -13.6532 iterations 3
Cbc0038I Pass  45: suminf.    1.20716 (11) obj. -13.6532 iterations 7
Cbc0038I Pass  46: suminf.    1.20716 (11) obj. -13.6532 iterations 0
Cbc0038I Pass  47: suminf.    1.23096 (11) obj. -13.6532 iterations 6
Cbc0038I Pass  48: suminf.    1.82321 (15) obj. -13.6532 iterations 19
Cbc0038I Pass  49: suminf.    1.49914 (14) obj. -13.6532 iterations 8
Cbc0038I Pass  50: suminf.    1.23472 (11) obj. -13.6532 iterations 21
Cbc0038I Pass  51: suminf.    1.23096 (11) obj. -13.6532 iterations 1
Cbc0038I Pass  52: suminf.    1.20716 (11) obj. -13.6532 iterations 10
Cbc0038I Pass  53: suminf.    1.20716 (11) obj. -13.6532 iterations 1
Cbc0038I Pass  54: suminf.    1.23096 (11) obj. -13.6532 iterations 2
Cbc0038I Pass  55: suminf.    2.66066 (14) obj. -13.6532 iterations 17
Cbc0038I Pass  56: suminf.    2.40873 (15) obj. -13.6532 iterations 7
Cbc0038I Pass  57: suminf.    1.27693 (12) obj. -13.6532 iterations 12
Cbc0038I Pass  58: suminf.    1.23096 (11) obj. -13.6532 iterations 2
Cbc0038I Pass  59: suminf.    1.20716 (11) obj. -13.6532 iterations 8
Cbc0038I Pass  60: suminf.    1.20716 (11) obj. -13.6532 iterations 1
Cbc0038I Pass  61: suminf.    1.23096 (11) obj. -13.6532 iterations 2
Cbc0038I Pass  62: suminf.    2.08714 (14) obj. -13.6532 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 35 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -2.72122 to -7.82969 (0.13 seconds)
Cbc0038I Round again with cutoff of -22.5652
Cbc0038I Pass  62: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass  63: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass  64: suminf.    2.36640 (20) obj. -22.5652 iterations 48
Cbc0038I Pass  65: suminf.    2.36640 (20) obj. -22.5652 iterations 0
Cbc0038I Pass  66: suminf.    2.29397 (19) obj. -22.5652 iterations 20
Cbc0038I Pass  67: suminf.    2.29397 (19) obj. -22.5652 iterations 1
Cbc0038I Pass  68: suminf.    2.26855 (19) obj. -22.5652 iterations 7
Cbc0038I Pass  69: suminf.    2.26855 (19) obj. -22.5652 iterations 4
Cbc0038I Pass  70: suminf.    2.29397 (19) obj. -22.5652 iterations 7
Cbc0038I Pass  71: suminf.    3.09038 (23) obj. -22.5652 iterations 19
Cbc0038I Pass  72: suminf.    2.38317 (20) obj. -22.5652 iterations 6
Cbc0038I Pass  73: suminf.    2.57358 (20) obj. -22.5652 iterations 17
Cbc0038I Pass  74: suminf.    2.57358 (20) obj. -22.5652 iterations 0
Cbc0038I Pass  75: suminf.    2.53643 (20) obj. -22.5652 iterations 2
Cbc0038I Pass  76: suminf.    2.53643 (20) obj. -22.5652 iterations 0
Cbc0038I Pass  77: suminf.    2.57358 (20) obj. -22.5652 iterations 3
Cbc0038I Pass  78: suminf.    3.61739 (22) obj. -22.5652 iterations 16
Cbc0038I Pass  79: suminf.    2.83810 (24) obj. -22.5652 iterations 5
Cbc0038I Pass  80: suminf.    2.53643 (20) obj. -22.5652 iterations 14
Cbc0038I Pass  81: suminf.    3.81070 (22) obj. -22.5652 iterations 19
Cbc0038I Pass  82: suminf.    3.02076 (22) obj. -22.5652 iterations 13
Cbc0038I Pass  83: suminf.    2.81604 (21) obj. -22.5652 iterations 23
Cbc0038I Pass  84: suminf.    2.81604 (21) obj. -22.5652 iterations 0
Cbc0038I Pass  85: suminf.    2.76133 (21) obj. -22.5652 iterations 3
Cbc0038I Pass  86: suminf.    2.76133 (21) obj. -22.5652 iterations 1
Cbc0038I Pass  87: suminf.    2.79847 (21) obj. -22.5652 iterations 3
Cbc0038I Pass  88: suminf.    2.79847 (21) obj. -22.5652 iterations 0
Cbc0038I Pass  89: suminf.    2.81604 (21) obj. -22.5652 iterations 5
Cbc0038I Pass  90: suminf.    2.81604 (21) obj. -22.5652 iterations 3
Cbc0038I Pass  91: suminf.    2.76133 (21) obj. -22.5652 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -7.82969 - took 0.12 seconds
Cbc0012I Integer solution of -7.8296906 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 95 rows 111 columns, reduced to 20 rows 22 columns
Cbc0031I 47 added rows had average density of 28.957447
Cbc0013I At root node, 47 cuts changed objective from -43.359818 to -13.089522 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8197 row cuts average 6.6 elements, 5 column cuts (8 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1162 row cuts average 93.7 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 163 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1141 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 415 row cuts average 51.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.638 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.8296906 best solution, best possible -13.089522 (2.18 seconds)
Cbc0004I Integer solution of -8.03637 found after 3971 iterations and 1 nodes (2.19 seconds)
Cbc0012I Integer solution of -8.2753306 found by rounding after 4573 iterations and 13 nodes (2.43 seconds)
Cbc0001I Search completed - best objective -8.275330599999997, took 5482 iterations and 40 nodes (2.62 seconds)
Cbc0032I Strong branching done 632 times (10583 iterations), fathomed 6 nodes and fixed 11 variables
Cbc0035I Maximum depth 11, 131 variables fixed on reduced cost
Total time (CPU seconds):       2.04   (Wallclock seconds):       2.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-33) rows, 70 (-8) columns and 377 (-76) elements
Clp1000I sum of infeasibilities 5.78889e-05 - average 4.74499e-07, 13 fixed columns
Coin0506I Presolve 99 (-23) rows, 57 (-13) columns and 305 (-72) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 40.578836
Clp0000I Optimal - objective value 40.578836
Coin0511I After Postsolve, objective 40.578836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.578836
Clp0000I Optimal - objective value 40.578836
Clp0000I Optimal - objective value 40.578836
Coin0511I After Postsolve, objective 40.578836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.57883599 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 122 rows, 70 columns (69 integer (69 of which binary)) and 377 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.216%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.46894
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.6965 iterations 38
Cbc0038I Solution found of 18.6965
Cbc0038I Relaxing continuous gives 18.6965
Cbc0038I Rounding solution of 7.15975 is better than previous of 18.6965

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from 7.15975 to -7.82969 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.1047
Cbc0038I Pass   2: suminf.    3.01788 (10) obj. -11.1047 iterations 11
Cbc0038I Pass   3: suminf.    1.15193 (7) obj. -11.1047 iterations 5
Cbc0038I Pass   4: suminf.    1.00566 (6) obj. -11.1047 iterations 1
Cbc0038I Pass   5: suminf.    0.57894 (4) obj. -11.1047 iterations 8
Cbc0038I Pass   6: suminf.    0.61728 (3) obj. -11.1047 iterations 2
Cbc0038I Pass   7: suminf.    1.19168 (4) obj. -11.1047 iterations 4
Cbc0038I Pass   8: suminf.    0.48794 (4) obj. -11.1047 iterations 3
Cbc0038I Pass   9: suminf.    1.33867 (6) obj. -11.1047 iterations 4
Cbc0038I Pass  10: suminf.    0.81013 (3) obj. -11.1047 iterations 3
Cbc0038I Pass  11: suminf.    0.58997 (3) obj. -11.1047 iterations 3
Cbc0038I Pass  12: suminf.    0.58997 (3) obj. -11.1047 iterations 0
Cbc0038I Pass  13: suminf.    0.47021 (3) obj. -11.1047 iterations 1
Cbc0038I Pass  14: suminf.    0.43564 (2) obj. -11.1047 iterations 1
Cbc0038I Pass  15: suminf.    1.68493 (6) obj. -11.1047 iterations 24
Cbc0038I Pass  16: suminf.    1.57923 (6) obj. -11.1047 iterations 7
Cbc0038I Pass  17: suminf.    1.77905 (7) obj. -11.1047 iterations 13
Cbc0038I Pass  18: suminf.    1.77905 (7) obj. -11.1047 iterations 0
Cbc0038I Pass  19: suminf.    1.66567 (5) obj. -11.1047 iterations 7
Cbc0038I Pass  20: suminf.    1.56569 (6) obj. -11.1047 iterations 2
Cbc0038I Pass  21: suminf.    2.00883 (7) obj. -11.1047 iterations 7
Cbc0038I Pass  22: suminf.    2.00883 (7) obj. -11.1047 iterations 0
Cbc0038I Pass  23: suminf.    3.57791 (14) obj. -11.1047 iterations 22
Cbc0038I Pass  24: suminf.    1.62538 (8) obj. -11.1047 iterations 8
Cbc0038I Pass  25: suminf.    2.14033 (7) obj. -11.1047 iterations 12
Cbc0038I Pass  26: suminf.    2.14033 (7) obj. -11.1047 iterations 0
Cbc0038I Pass  27: suminf.    0.72925 (5) obj. -11.1047 iterations 9
Cbc0038I Pass  28: suminf.    0.57976 (4) obj. -11.1047 iterations 1
Cbc0038I Pass  29: suminf.    0.62904 (3) obj. -11.1047 iterations 3
Cbc0038I Pass  30: suminf.    0.62904 (3) obj. -11.1047 iterations 0
Cbc0038I Pass  31: suminf.    0.94279 (3) obj. -11.1047 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7.82969 - took 0.05 seconds
Cbc0012I Integer solution of -7.8296906 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 70 columns, reduced to 44 rows 26 columns
Cbc0031I 18 added rows had average density of 70
Cbc0013I At root node, 18 cuts changed objective from -40.578836 to -27.989437 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5266 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 747 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0004I Integer solution of -8.03637 found after 4774 iterations and 31 nodes (0.64 seconds)
Cbc0038I Full problem 122 rows 70 columns, reduced to 18 rows 16 columns
Cbc0016I Integer solution of -8.2753306 found by strong branching after 5352 iterations and 59 nodes (0.69 seconds)
Cbc0010I After 59 nodes, 3 on tree, -8.2753306 best solution, best possible -27.989437 (0.69 seconds)
Cbc0001I Search completed - best objective -8.275330599999997, took 5596 iterations and 72 nodes (0.71 seconds)
Cbc0032I Strong branching done 682 times (11120 iterations), fathomed 6 nodes and fixed 15 variables
Cbc0035I Maximum depth 22, 238 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-61) rows, 110 (-43) columns and 1656 (-1648) elements
Clp1000I sum of infeasibilities 1.95112e-07 - average 2.07566e-09, 68 fixed columns
Coin0506I Presolve 32 (-62) rows, 42 (-68) columns and 143 (-1513) elements
Clp0006I 0  Obj 1.2311997 Dual inf 1.0080625 (40)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 2.8212468 - largest nonzero change 2.5978046e-05 ( 0.00096990836%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 1.2337835
Clp0000I Optimal - objective value 1.2337835
Coin0511I After Postsolve, objective 1.2337835, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1.2337835 Dual inf 25.294018 (41)
Clp0014I Perturbing problem by 0.001% of 2.0713597 - largest nonzero change 1.6168749e-05 ( 0.0010393299%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 59.899647
Clp0000I Optimal - objective value 59.899647
Clp0000I Optimal - objective value 59.899647
Coin0511I After Postsolve, objective 59.899647, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.89964713 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 111 columns (111 integer (111 of which binary)) and 1663 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.221%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.16539
Cbc0038I Pass   1: suminf.    2.90166 (29) obj. -33.535 iterations 19
Cbc0038I Pass   2: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass   3: suminf.    0.47229 (7) obj. -9.54766 iterations 22
Cbc0038I Solution found of -2.09687
Cbc0038I Rounding solution of -2.1005 is better than previous of -2.09687

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -6.22652
Cbc0038I Pass   4: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass   5: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass   6: suminf.    0.47229 (7) obj. -9.54766 iterations 22
Cbc0038I Pass   7: suminf.    0.64070 (9) obj. -6.22652 iterations 15
Cbc0038I Pass   8: suminf.    0.65559 (7) obj. -6.22652 iterations 26
Cbc0038I Pass   9: suminf.    0.64462 (6) obj. -6.22652 iterations 1
Cbc0038I Pass  10: suminf.    0.77892 (8) obj. -6.22652 iterations 6
Cbc0038I Pass  11: suminf.    0.71412 (6) obj. -6.22652 iterations 5
Cbc0038I Pass  12: suminf.    0.71393 (8) obj. -6.22652 iterations 11
Cbc0038I Pass  13: suminf.    2.21612 (12) obj. -6.22652 iterations 21
Cbc0038I Pass  14: suminf.    1.59010 (15) obj. -6.22652 iterations 4
Cbc0038I Pass  15: suminf.    1.99100 (10) obj. -6.22652 iterations 19
Cbc0038I Pass  16: suminf.    1.82669 (10) obj. -6.22652 iterations 3
Cbc0038I Pass  17: suminf.    1.99100 (10) obj. -6.22652 iterations 6
Cbc0038I Pass  18: suminf.    2.56716 (16) obj. -6.22652 iterations 25
Cbc0038I Pass  19: suminf.    2.03303 (12) obj. -6.22652 iterations 9
Cbc0038I Pass  20: suminf.    1.81473 (13) obj. -6.22652 iterations 10
Cbc0038I Pass  21: suminf.    3.27555 (11) obj. -6.22652 iterations 25
Cbc0038I Pass  22: suminf.    2.54022 (11) obj. -6.22652 iterations 8
Cbc0038I Pass  23: suminf.    1.08603 (9) obj. -6.22652 iterations 16
Cbc0038I Pass  24: suminf.    1.02219 (7) obj. -6.22652 iterations 3
Cbc0038I Pass  25: suminf.    1.26615 (9) obj. -6.22652 iterations 6
Cbc0038I Pass  26: suminf.    0.70812 (7) obj. -6.22652 iterations 5
Cbc0038I Pass  27: suminf.    1.18535 (11) obj. -6.22652 iterations 6
Cbc0038I Pass  28: suminf.    2.80166 (15) obj. -7.58763 iterations 24
Cbc0038I Pass  29: suminf.    1.84992 (15) obj. -6.22652 iterations 11
Cbc0038I Pass  30: suminf.    1.55127 (13) obj. -6.22652 iterations 3
Cbc0038I Pass  31: suminf.    1.13935 (6) obj. -6.22652 iterations 28
Cbc0038I Pass  32: suminf.    0.70812 (7) obj. -6.22652 iterations 4
Cbc0038I Pass  33: suminf.    1.18535 (11) obj. -6.22652 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 55 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -2.09687 to -2.72122 (0.08 seconds)
Cbc0038I Round again with cutoff of -13.6532
Cbc0038I Pass  33: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass  34: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass  35: suminf.    1.14242 (18) obj. -13.6532 iterations 29
Cbc0038I Pass  36: suminf.    1.23096 (11) obj. -13.6532 iterations 35
Cbc0038I Pass  37: suminf.    1.23096 (11) obj. -13.6532 iterations 0
Cbc0038I Pass  38: suminf.    1.20716 (11) obj. -13.6532 iterations 10
Cbc0038I Pass  39: suminf.    1.20716 (11) obj. -13.6532 iterations 1
Cbc0038I Pass  40: suminf.    1.23096 (11) obj. -13.6532 iterations 9
Cbc0038I Pass  41: suminf.    2.97183 (16) obj. -13.6532 iterations 19
Cbc0038I Pass  42: suminf.    2.93611 (15) obj. -13.6532 iterations 8
Cbc0038I Pass  43: suminf.    1.29339 (12) obj. -13.6532 iterations 18
Cbc0038I Pass  44: suminf.    1.23096 (11) obj. -13.6532 iterations 3
Cbc0038I Pass  45: suminf.    1.20716 (11) obj. -13.6532 iterations 7
Cbc0038I Pass  46: suminf.    1.20716 (11) obj. -13.6532 iterations 0
Cbc0038I Pass  47: suminf.    1.23096 (11) obj. -13.6532 iterations 6
Cbc0038I Pass  48: suminf.    1.82321 (15) obj. -13.6532 iterations 19
Cbc0038I Pass  49: suminf.    1.49914 (14) obj. -13.6532 iterations 8
Cbc0038I Pass  50: suminf.    1.23472 (11) obj. -13.6532 iterations 21
Cbc0038I Pass  51: suminf.    1.23096 (11) obj. -13.6532 iterations 1
Cbc0038I Pass  52: suminf.    1.20716 (11) obj. -13.6532 iterations 10
Cbc0038I Pass  53: suminf.    1.20716 (11) obj. -13.6532 iterations 1
Cbc0038I Pass  54: suminf.    1.23096 (11) obj. -13.6532 iterations 2
Cbc0038I Pass  55: suminf.    2.66066 (14) obj. -13.6532 iterations 17
Cbc0038I Pass  56: suminf.    2.40873 (15) obj. -13.6532 iterations 7
Cbc0038I Pass  57: suminf.    1.27693 (12) obj. -13.6532 iterations 12
Cbc0038I Pass  58: suminf.    1.23096 (11) obj. -13.6532 iterations 2
Cbc0038I Pass  59: suminf.    1.20716 (11) obj. -13.6532 iterations 8
Cbc0038I Pass  60: suminf.    1.20716 (11) obj. -13.6532 iterations 1
Cbc0038I Pass  61: suminf.    1.23096 (11) obj. -13.6532 iterations 2
Cbc0038I Pass  62: suminf.    2.08714 (14) obj. -13.6532 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 35 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -2.72122 to -7.82969 (0.15 seconds)
Cbc0038I Round again with cutoff of -22.5652
Cbc0038I Pass  62: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass  63: suminf.    2.90166 (29) obj. -33.535 iterations 0
Cbc0038I Pass  64: suminf.    2.36640 (20) obj. -22.5652 iterations 48
Cbc0038I Pass  65: suminf.    2.36640 (20) obj. -22.5652 iterations 0
Cbc0038I Pass  66: suminf.    2.29397 (19) obj. -22.5652 iterations 20
Cbc0038I Pass  67: suminf.    2.29397 (19) obj. -22.5652 iterations 1
Cbc0038I Pass  68: suminf.    2.26855 (19) obj. -22.5652 iterations 7
Cbc0038I Pass  69: suminf.    2.26855 (19) obj. -22.5652 iterations 4
Cbc0038I Pass  70: suminf.    2.29397 (19) obj. -22.5652 iterations 7
Cbc0038I Pass  71: suminf.    3.09038 (23) obj. -22.5652 iterations 19
Cbc0038I Pass  72: suminf.    2.38317 (20) obj. -22.5652 iterations 6
Cbc0038I Pass  73: suminf.    2.57358 (20) obj. -22.5652 iterations 17
Cbc0038I Pass  74: suminf.    2.57358 (20) obj. -22.5652 iterations 0
Cbc0038I Pass  75: suminf.    2.53643 (20) obj. -22.5652 iterations 2
Cbc0038I Pass  76: suminf.    2.53643 (20) obj. -22.5652 iterations 0
Cbc0038I Pass  77: suminf.    2.57358 (20) obj. -22.5652 iterations 3
Cbc0038I Pass  78: suminf.    3.61739 (22) obj. -22.5652 iterations 16
Cbc0038I Pass  79: suminf.    2.83810 (24) obj. -22.5652 iterations 5
Cbc0038I Pass  80: suminf.    2.53643 (20) obj. -22.5652 iterations 14
Cbc0038I Pass  81: suminf.    3.81070 (22) obj. -22.5652 iterations 19
Cbc0038I Pass  82: suminf.    3.02076 (22) obj. -22.5652 iterations 13
Cbc0038I Pass  83: suminf.    2.81604 (21) obj. -22.5652 iterations 23
Cbc0038I Pass  84: suminf.    2.81604 (21) obj. -22.5652 iterations 0
Cbc0038I Pass  85: suminf.    2.76133 (21) obj. -22.5652 iterations 3
Cbc0038I Pass  86: suminf.    2.76133 (21) obj. -22.5652 iterations 1
Cbc0038I Pass  87: suminf.    2.79847 (21) obj. -22.5652 iterations 3
Cbc0038I Pass  88: suminf.    2.79847 (21) obj. -22.5652 iterations 0
Cbc0038I Pass  89: suminf.    2.81604 (21) obj. -22.5652 iterations 5
Cbc0038I Pass  90: suminf.    2.81604 (21) obj. -22.5652 iterations 3
Cbc0038I Pass  91: suminf.    2.76133 (21) obj. -22.5652 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -7.82969 - took 0.13 seconds
Cbc0012I Integer solution of -7.8296906 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 95 rows 111 columns, reduced to 20 rows 22 columns
Cbc0031I 47 added rows had average density of 28.957447
Cbc0013I At root node, 47 cuts changed objective from -43.359818 to -13.089522 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8197 row cuts average 6.6 elements, 5 column cuts (8 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1162 row cuts average 93.7 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 163 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1141 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 415 row cuts average 51.5 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.715 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.8296906 best solution, best possible -13.089522 (2.52 seconds)
Cbc0004I Integer solution of -8.03637 found after 3971 iterations and 1 nodes (2.54 seconds)
Cbc0012I Integer solution of -8.2753306 found by rounding after 4573 iterations and 13 nodes (2.82 seconds)
Cbc0001I Search completed - best objective -8.275330599999997, took 5482 iterations and 40 nodes (3.03 seconds)
Cbc0032I Strong branching done 632 times (10583 iterations), fathomed 6 nodes and fixed 11 variables
Cbc0035I Maximum depth 11, 131 variables fixed on reduced cost
Total time (CPU seconds):       2.29   (Wallclock seconds):       3.05

