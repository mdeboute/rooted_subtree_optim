Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 71 (-7) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 2.20441e-05 - average 1.6957e-07, 16 fixed columns
Coin0506I Presolve 96 (-34) rows, 53 (-18) columns and 290 (-104) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 1.9838191 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Coin0511I After Postsolve, objective 49.198665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Coin0511I After Postsolve, objective 49.198665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.19866504 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 71 columns (70 integer (70 of which binary)) and 436 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.177%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.7166
Cbc0038I Solution found of 2.32694
Cbc0038I Relaxing continuous gives -4.59681
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -4.59681 to -29.5892 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.5099
Cbc0038I Pass   1: suminf.    1.69502 (8) obj. -31.5099 iterations 32
Cbc0038I Pass   2: suminf.    1.00679 (3) obj. -31.5099 iterations 6
Cbc0038I Pass   3: suminf.    0.42602 (1) obj. -31.5099 iterations 6
Cbc0038I Pass   4: suminf.    0.32992 (2) obj. -31.5099 iterations 3
Cbc0038I Pass   5: suminf.    3.25855 (9) obj. -31.5099 iterations 11
Cbc0038I Pass   6: suminf.    1.47769 (4) obj. -31.5099 iterations 12
Cbc0038I Pass   7: suminf.    0.78702 (3) obj. -31.5099 iterations 6
Cbc0038I Pass   8: suminf.    0.78702 (3) obj. -31.5099 iterations 0
Cbc0038I Pass   9: suminf.    0.63480 (3) obj. -31.5099 iterations 4
Cbc0038I Pass  10: suminf.    0.62781 (6) obj. -31.5099 iterations 5
Cbc0038I Pass  11: suminf.    2.21190 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  12: suminf.    1.73418 (7) obj. -31.5099 iterations 10
Cbc0038I Pass  13: suminf.    1.06210 (4) obj. -31.5099 iterations 11
Cbc0038I Pass  14: suminf.    1.75519 (4) obj. -31.5099 iterations 5
Cbc0038I Pass  15: suminf.    0.78702 (3) obj. -31.5099 iterations 7
Cbc0038I Pass  16: suminf.    0.63480 (3) obj. -31.5099 iterations 4
Cbc0038I Pass  17: suminf.    0.62781 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  18: suminf.    2.21190 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  19: suminf.    1.64191 (6) obj. -31.5099 iterations 17
Cbc0038I Pass  20: suminf.    1.64168 (7) obj. -31.5099 iterations 7
Cbc0038I Pass  21: suminf.    1.42264 (4) obj. -31.5099 iterations 13
Cbc0038I Pass  22: suminf.    0.62941 (2) obj. -31.5099 iterations 2
Cbc0038I Pass  23: suminf.    0.69255 (2) obj. -31.5099 iterations 6
Cbc0038I Pass  24: suminf.    0.68858 (2) obj. -31.5099 iterations 3
Cbc0038I Pass  25: suminf.    3.16744 (9) obj. -31.5099 iterations 15
Cbc0038I Pass  26: suminf.    1.56734 (4) obj. -31.5099 iterations 7
Cbc0038I Pass  27: suminf.    0.72627 (3) obj. -31.5099 iterations 5
Cbc0038I Pass  28: suminf.    0.17323 (3) obj. -31.5099 iterations 7
Cbc0038I Pass  29: suminf.    0.00809 (2) obj. -31.5099 iterations 1
Cbc0038I Pass  30: suminf.    0.65044 (2) obj. -31.5099 iterations 8
Cbc0038I Rounding solution of -31.371 is better than previous of -29.5892

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 67 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -34.967
Cbc0038I Pass  30: suminf.    1.71352 (8) obj. -34.967 iterations 0
Cbc0038I Pass  31: suminf.    0.42898 (1) obj. -34.967 iterations 11
Cbc0038I Pass  32: suminf.    0.32313 (2) obj. -34.967 iterations 3
Cbc0038I Pass  33: suminf.    0.93587 (5) obj. -34.967 iterations 7
Cbc0038I Pass  34: suminf.    1.77918 (8) obj. -34.967 iterations 12
Cbc0038I Pass  35: suminf.    1.03376 (3) obj. -34.967 iterations 8
Cbc0038I Pass  36: suminf.    0.96779 (3) obj. -34.967 iterations 5
Cbc0038I Pass  37: suminf.    0.93537 (6) obj. -34.967 iterations 7
Cbc0038I Pass  38: suminf.    1.94147 (6) obj. -34.967 iterations 8
Cbc0038I Pass  39: suminf.    2.11371 (10) obj. -34.967 iterations 7
Cbc0038I Pass  40: suminf.    2.24547 (13) obj. -34.967 iterations 14
Cbc0038I Pass  41: suminf.    1.57500 (7) obj. -34.967 iterations 21
Cbc0038I Pass  42: suminf.    2.22862 (6) obj. -34.967 iterations 9
Cbc0038I Pass  43: suminf.    1.58638 (4) obj. -34.967 iterations 4
Cbc0038I Pass  44: suminf.    1.19035 (4) obj. -34.967 iterations 4
Cbc0038I Pass  45: suminf.    1.36058 (4) obj. -34.967 iterations 1
Cbc0038I Pass  46: suminf.    1.62611 (9) obj. -34.967 iterations 15
Cbc0038I Pass  47: suminf.    1.03376 (3) obj. -34.967 iterations 12
Cbc0038I Pass  48: suminf.    0.96779 (3) obj. -34.967 iterations 4
Cbc0038I Pass  49: suminf.    0.93537 (6) obj. -34.967 iterations 5
Cbc0038I Pass  50: suminf.    1.94147 (6) obj. -34.967 iterations 7
Cbc0038I Pass  51: suminf.    3.17364 (12) obj. -34.967 iterations 14
Cbc0038I Pass  52: suminf.    1.38625 (6) obj. -34.967 iterations 13
Cbc0038I Pass  53: suminf.    0.89910 (5) obj. -34.967 iterations 1
Cbc0038I Pass  54: suminf.    0.80111 (3) obj. -34.967 iterations 8
Cbc0038I Pass  55: suminf.    0.56808 (3) obj. -34.967 iterations 6
Cbc0038I Pass  56: suminf.    0.52147 (2) obj. -34.967 iterations 2
Cbc0038I Pass  57: suminf.    0.93537 (6) obj. -34.967 iterations 8
Cbc0038I Pass  58: suminf.    1.94147 (6) obj. -34.967 iterations 7
Cbc0038I Pass  59: suminf.    1.03376 (3) obj. -34.967 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 81 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -31.371 - took 0.06 seconds
Cbc0012I Integer solution of -31.37101 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 125 rows 71 columns, reduced to 55 rows 31 columns
Cbc0031I 13 added rows had average density of 45.923077
Cbc0013I At root node, 13 cuts changed objective from -48.795411 to -40.25834 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3550 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1010 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 49.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0001I Search completed - best objective -31.37101, took 4072 iterations and 18 nodes (0.47 seconds)
Cbc0032I Strong branching done 320 times (5428 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 8, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 118 (-34) columns and 2015 (-1288) elements
Clp1000I sum of infeasibilities 3.81023e-07 - average 3.52799e-09, 59 fixed columns
Coin0506I Presolve 57 (-51) rows, 59 (-59) columns and 507 (-1508) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 126.78489
Clp0000I Optimal - objective value 126.78489
Coin0511I After Postsolve, objective 126.78489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 126.78489
Clp0000I Optimal - objective value 126.78489
Clp0000I Optimal - objective value 126.78489
Coin0511I After Postsolve, objective 126.78489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.7848883 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 65 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 118 columns (118 integer (118 of which binary)) and 2053 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.055%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.39356
Cbc0038I Pass   1: suminf.    0.75573 (31) obj. -37.8393 iterations 5
Cbc0038I Pass   2: suminf.    0.39151 (12) obj. -27.9807 iterations 2
Cbc0038I Pass   3: suminf.    0.03306 (2) obj. -9.70156 iterations 10
Cbc0038I Solution found of -7.73462
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 118 columns, reduced to 41 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -7.73462 to -7.89242 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.7001
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.75573 (31) obj. -37.8393 iterations 0
Cbc0038I Pass   5: suminf.    0.39151 (12) obj. -27.9807 iterations 5
Cbc0038I Pass   6: suminf.    0.25465 (19) obj. -15.7001 iterations 13
Cbc0038I Pass   7: suminf.    0.58988 (8) obj. -26.5158 iterations 16
Cbc0038I Pass   8: suminf.    1.63516 (7) obj. -15.7001 iterations 14
Cbc0038I Pass   9: suminf.    0.38793 (5) obj. -20.7212 iterations 3
Cbc0038I Pass  10: suminf.    0.23610 (5) obj. -15.7001 iterations 1
Cbc0038I Pass  11: suminf.    0.76056 (3) obj. -29.7938 iterations 7
Cbc0038I Pass  12: suminf.    1.18765 (3) obj. -15.7001 iterations 1
Cbc0038I Pass  13: suminf.    1.48809 (13) obj. -15.7001 iterations 21
Cbc0038I Pass  14: suminf.    1.48809 (13) obj. -15.7001 iterations 4
Cbc0038I Pass  15: suminf.    2.41845 (5) obj. -15.7001 iterations 10
Cbc0038I Pass  16: suminf.    2.07861 (6) obj. -15.7001 iterations 1
Cbc0038I Pass  17: suminf.    1.79684 (6) obj. -15.7001 iterations 1
Cbc0038I Pass  18: suminf.    1.71450 (4) obj. -16.5949 iterations 7
Cbc0038I Pass  19: suminf.    1.41986 (3) obj. -15.7001 iterations 2
Cbc0038I Pass  20: suminf.    1.39437 (3) obj. -16.5415 iterations 1
Cbc0038I Pass  21: suminf.    4.33205 (19) obj. -15.7001 iterations 24
Cbc0038I Pass  22: suminf.    2.32806 (15) obj. -15.7001 iterations 8
Cbc0038I Pass  23: suminf.    1.95885 (14) obj. -15.7001 iterations 7
Cbc0038I Pass  24: suminf.    1.63972 (5) obj. -15.7001 iterations 15
Cbc0038I Pass  25: suminf.    1.38955 (7) obj. -15.7001 iterations 1
Cbc0038I Pass  26: suminf.    1.72013 (5) obj. -15.7001 iterations 9
Cbc0038I Pass  27: suminf.    0.76056 (3) obj. -25.7938 iterations 3
Cbc0038I Pass  28: suminf.    1.06643 (3) obj. -15.7001 iterations 1
Cbc0038I Pass  29: suminf.    2.60633 (13) obj. -15.7001 iterations 16
Cbc0038I Pass  30: suminf.    1.74811 (12) obj. -15.7001 iterations 5
Cbc0038I Pass  31: suminf.    1.57158 (13) obj. -15.7001 iterations 1
Cbc0038I Pass  32: suminf.    1.96203 (5) obj. -22.2435 iterations 11
Cbc0038I Pass  33: suminf.    1.64220 (5) obj. -15.7001 iterations 1
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 118 columns, reduced to 46 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -7.89242 to -29.5892 (0.08 seconds)
Cbc0038I Round again with cutoff of -40.8651
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    0.93253 (32) obj. -40.8651 iterations 1
Cbc0038I Pass  34: suminf.    0.90752 (32) obj. -40.8651 iterations 2
Cbc0038I Pass  35: suminf.    1.15391 (24) obj. -40.8651 iterations 9
Cbc0038I Pass  36: suminf.    1.00037 (25) obj. -40.8651 iterations 2
Cbc0038I Pass  37: suminf.    1.42982 (10) obj. -40.8651 iterations 40
Cbc0038I Pass  38: suminf.    1.40184 (10) obj. -40.8651 iterations 1
Cbc0038I Pass  39: suminf.    1.85098 (5) obj. -40.8651 iterations 9
Cbc0038I Pass  40: suminf.    1.62940 (6) obj. -40.8651 iterations 4
Cbc0038I Pass  41: suminf.    3.29978 (13) obj. -40.8651 iterations 11
Cbc0038I Pass  42: suminf.    2.38095 (11) obj. -40.8651 iterations 4
Cbc0038I Pass  43: suminf.    1.67714 (6) obj. -40.8651 iterations 17
Cbc0038I Pass  44: suminf.    1.65662 (6) obj. -40.8651 iterations 3
Cbc0038I Pass  45: suminf.    2.97188 (12) obj. -40.8651 iterations 10
Cbc0038I Pass  46: suminf.    2.97188 (12) obj. -40.8651 iterations 1
Cbc0038I Pass  47: suminf.    1.99908 (7) obj. -40.8651 iterations 13
Cbc0038I Pass  48: suminf.    1.99908 (7) obj. -40.8651 iterations 0
Cbc0038I Pass  49: suminf.    1.97276 (7) obj. -40.8651 iterations 1
Cbc0038I Pass  50: suminf.    1.81239 (7) obj. -40.8651 iterations 3
Cbc0038I Pass  51: suminf.    2.67210 (11) obj. -40.8651 iterations 12
Cbc0038I Pass  52: suminf.    2.15758 (10) obj. -40.8651 iterations 6
Cbc0038I Pass  53: suminf.    1.91962 (7) obj. -40.8651 iterations 11
Cbc0038I Pass  54: suminf.    1.83506 (7) obj. -40.8651 iterations 3
Cbc0038I Pass  55: suminf.    3.76147 (16) obj. -40.8651 iterations 16
Cbc0038I Pass  56: suminf.    3.51861 (15) obj. -40.8651 iterations 4
Cbc0038I Pass  57: suminf.    2.72235 (8) obj. -40.8651 iterations 22
Cbc0038I Pass  58: suminf.    1.80105 (7) obj. -40.8651 iterations 5
Cbc0038I Pass  59: suminf.    1.79908 (7) obj. -40.8651 iterations 15
Cbc0038I Pass  60: suminf.    1.79908 (7) obj. -40.8651 iterations 1
Cbc0038I Pass  61: suminf.    2.02413 (6) obj. -40.8651 iterations 3
Cbc0038I Pass  62: suminf.    3.04893 (13) obj. -40.8651 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 118 columns, reduced to 46 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.5892 - took 0.06 seconds
Cbc0012I Integer solution of -29.58921 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 102 rows 118 columns, reduced to 41 rows 42 columns
Cbc0031I 54 added rows had average density of 30.037037
Cbc0013I At root node, 54 cuts changed objective from -85.968488 to -42.504896 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12940 row cuts average 2.0 elements, 3 column cuts (9 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2169 row cuts average 107.4 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 128 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1873 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 49 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 317 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.630 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -29.58921 best solution, best possible -42.504896 (2.46 seconds)
Cbc0012I Integer solution of -31.37101 found by rounding after 5886 iterations and 13 nodes (2.95 seconds)
Cbc0001I Search completed - best objective -31.37101, took 5975 iterations and 14 nodes (2.95 seconds)
Cbc0032I Strong branching done 364 times (11843 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 49 variables fixed on reduced cost
Total time (CPU seconds):       2.22   (Wallclock seconds):       2.97

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 71 (-7) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 2.20441e-05 - average 1.6957e-07, 16 fixed columns
Coin0506I Presolve 96 (-34) rows, 53 (-18) columns and 290 (-104) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 1.9838191 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Coin0511I After Postsolve, objective 49.198665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Coin0511I After Postsolve, objective 49.198665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.19866504 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 71 columns (70 integer (70 of which binary)) and 436 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.177%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.7166
Cbc0038I Solution found of 2.32694
Cbc0038I Relaxing continuous gives -4.59681
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -4.59681 to -29.5892 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.5099
Cbc0038I Pass   1: suminf.    1.69502 (8) obj. -31.5099 iterations 32
Cbc0038I Pass   2: suminf.    1.00679 (3) obj. -31.5099 iterations 6
Cbc0038I Pass   3: suminf.    0.42602 (1) obj. -31.5099 iterations 6
Cbc0038I Pass   4: suminf.    0.32992 (2) obj. -31.5099 iterations 3
Cbc0038I Pass   5: suminf.    3.25855 (9) obj. -31.5099 iterations 11
Cbc0038I Pass   6: suminf.    1.47769 (4) obj. -31.5099 iterations 12
Cbc0038I Pass   7: suminf.    0.78702 (3) obj. -31.5099 iterations 6
Cbc0038I Pass   8: suminf.    0.78702 (3) obj. -31.5099 iterations 0
Cbc0038I Pass   9: suminf.    0.63480 (3) obj. -31.5099 iterations 4
Cbc0038I Pass  10: suminf.    0.62781 (6) obj. -31.5099 iterations 5
Cbc0038I Pass  11: suminf.    2.21190 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  12: suminf.    1.73418 (7) obj. -31.5099 iterations 10
Cbc0038I Pass  13: suminf.    1.06210 (4) obj. -31.5099 iterations 11
Cbc0038I Pass  14: suminf.    1.75519 (4) obj. -31.5099 iterations 5
Cbc0038I Pass  15: suminf.    0.78702 (3) obj. -31.5099 iterations 7
Cbc0038I Pass  16: suminf.    0.63480 (3) obj. -31.5099 iterations 4
Cbc0038I Pass  17: suminf.    0.62781 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  18: suminf.    2.21190 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  19: suminf.    1.64191 (6) obj. -31.5099 iterations 17
Cbc0038I Pass  20: suminf.    1.64168 (7) obj. -31.5099 iterations 7
Cbc0038I Pass  21: suminf.    1.42264 (4) obj. -31.5099 iterations 13
Cbc0038I Pass  22: suminf.    0.62941 (2) obj. -31.5099 iterations 2
Cbc0038I Pass  23: suminf.    0.69255 (2) obj. -31.5099 iterations 6
Cbc0038I Pass  24: suminf.    0.68858 (2) obj. -31.5099 iterations 3
Cbc0038I Pass  25: suminf.    3.16744 (9) obj. -31.5099 iterations 15
Cbc0038I Pass  26: suminf.    1.56734 (4) obj. -31.5099 iterations 7
Cbc0038I Pass  27: suminf.    0.72627 (3) obj. -31.5099 iterations 5
Cbc0038I Pass  28: suminf.    0.17323 (3) obj. -31.5099 iterations 7
Cbc0038I Pass  29: suminf.    0.00809 (2) obj. -31.5099 iterations 1
Cbc0038I Pass  30: suminf.    0.65044 (2) obj. -31.5099 iterations 8
Cbc0038I Rounding solution of -31.371 is better than previous of -29.5892

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 67 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -34.967
Cbc0038I Pass  30: suminf.    1.71352 (8) obj. -34.967 iterations 0
Cbc0038I Pass  31: suminf.    0.42898 (1) obj. -34.967 iterations 11
Cbc0038I Pass  32: suminf.    0.32313 (2) obj. -34.967 iterations 3
Cbc0038I Pass  33: suminf.    0.93587 (5) obj. -34.967 iterations 7
Cbc0038I Pass  34: suminf.    1.77918 (8) obj. -34.967 iterations 12
Cbc0038I Pass  35: suminf.    1.03376 (3) obj. -34.967 iterations 8
Cbc0038I Pass  36: suminf.    0.96779 (3) obj. -34.967 iterations 5
Cbc0038I Pass  37: suminf.    0.93537 (6) obj. -34.967 iterations 7
Cbc0038I Pass  38: suminf.    1.94147 (6) obj. -34.967 iterations 8
Cbc0038I Pass  39: suminf.    2.11371 (10) obj. -34.967 iterations 7
Cbc0038I Pass  40: suminf.    2.24547 (13) obj. -34.967 iterations 14
Cbc0038I Pass  41: suminf.    1.57500 (7) obj. -34.967 iterations 21
Cbc0038I Pass  42: suminf.    2.22862 (6) obj. -34.967 iterations 9
Cbc0038I Pass  43: suminf.    1.58638 (4) obj. -34.967 iterations 4
Cbc0038I Pass  44: suminf.    1.19035 (4) obj. -34.967 iterations 4
Cbc0038I Pass  45: suminf.    1.36058 (4) obj. -34.967 iterations 1
Cbc0038I Pass  46: suminf.    1.62611 (9) obj. -34.967 iterations 15
Cbc0038I Pass  47: suminf.    1.03376 (3) obj. -34.967 iterations 12
Cbc0038I Pass  48: suminf.    0.96779 (3) obj. -34.967 iterations 4
Cbc0038I Pass  49: suminf.    0.93537 (6) obj. -34.967 iterations 5
Cbc0038I Pass  50: suminf.    1.94147 (6) obj. -34.967 iterations 7
Cbc0038I Pass  51: suminf.    3.17364 (12) obj. -34.967 iterations 14
Cbc0038I Pass  52: suminf.    1.38625 (6) obj. -34.967 iterations 13
Cbc0038I Pass  53: suminf.    0.89910 (5) obj. -34.967 iterations 1
Cbc0038I Pass  54: suminf.    0.80111 (3) obj. -34.967 iterations 8
Cbc0038I Pass  55: suminf.    0.56808 (3) obj. -34.967 iterations 6
Cbc0038I Pass  56: suminf.    0.52147 (2) obj. -34.967 iterations 2
Cbc0038I Pass  57: suminf.    0.93537 (6) obj. -34.967 iterations 8
Cbc0038I Pass  58: suminf.    1.94147 (6) obj. -34.967 iterations 7
Cbc0038I Pass  59: suminf.    1.03376 (3) obj. -34.967 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 81 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -31.371 - took 0.08 seconds
Cbc0012I Integer solution of -31.37101 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 125 rows 71 columns, reduced to 55 rows 31 columns
Cbc0031I 13 added rows had average density of 45.923077
Cbc0013I At root node, 13 cuts changed objective from -48.795411 to -40.25834 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3550 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1010 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 49.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0001I Search completed - best objective -31.37101, took 4072 iterations and 18 nodes (0.68 seconds)
Cbc0032I Strong branching done 320 times (5428 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 8, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 115 (-38) columns and 1900 (-1404) elements
Clp1000I sum of infeasibilities 1.91404e-07 - average 1.8229e-09, 68 fixed columns
Coin0506I Presolve 39 (-66) rows, 47 (-68) columns and 166 (-1734) elements
Clp0006I 0  Obj -1.2652733 Dual inf 4.7625609 (40)
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 1.4791364 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value -1.2637065
Clp0000I Optimal - objective value -1.2637065
Coin0511I After Postsolve, objective -1.2637065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1.2637065 Dual inf 60.700957 (45)
Clp0014I Perturbing problem by 0.001% of 1.8134832 - largest nonzero change 0 ( 0%) - largest zero change 2.9600382e-05
Clp0000I Optimal - objective value 64.587684
Clp0000I Optimal - objective value 64.587684
Clp0000I Optimal - objective value 64.587684
Coin0511I After Postsolve, objective 64.587684, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.5876842 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 115 columns (115 integer (115 of which binary)) and 1941 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.972%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 2.61615
Cbc0038I Pass   1: suminf.    0.61087 (21) obj. -32.9892 iterations 21
Cbc0038I Pass   2: suminf.    0.61087 (21) obj. -32.9892 iterations 1
Cbc0038I Solution found of -4.81011
Cbc0038I Rounding solution of -7.71143 is better than previous of -4.81011

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 31 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.71143 to -20.7078 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.8339
Cbc0038I Pass   3: suminf.    0.61087 (21) obj. -32.9892 iterations 0
Cbc0038I Pass   4: suminf.    0.61087 (21) obj. -32.9892 iterations 2
Cbc0038I Pass   5: suminf.    0.51674 (12) obj. -23.8339 iterations 11
Cbc0038I Pass   6: suminf.    2.04910 (21) obj. -23.8339 iterations 27
Cbc0038I Pass   7: suminf.    1.17521 (6) obj. -23.8339 iterations 7
Cbc0038I Pass   8: suminf.    1.17521 (6) obj. -23.8339 iterations 0
Cbc0038I Pass   9: suminf.    1.59922 (22) obj. -23.8339 iterations 8
Cbc0038I Pass  10: suminf.    2.70966 (16) obj. -23.8339 iterations 21
Cbc0038I Pass  11: suminf.    2.62077 (16) obj. -23.8339 iterations 2
Cbc0038I Pass  12: suminf.    1.53734 (16) obj. -23.8339 iterations 8
Cbc0038I Pass  13: suminf.    0.92258 (16) obj. -23.8339 iterations 5
Cbc0038I Pass  14: suminf.    2.92367 (14) obj. -23.8339 iterations 21
Cbc0038I Pass  15: suminf.    1.11869 (13) obj. -23.8339 iterations 6
Cbc0038I Pass  16: suminf.    1.11869 (13) obj. -23.8339 iterations 0
Cbc0038I Pass  17: suminf.    2.52933 (13) obj. -23.8339 iterations 12
Cbc0038I Pass  18: suminf.    1.58273 (13) obj. -23.8339 iterations 1
Cbc0038I Pass  19: suminf.    1.15029 (12) obj. -23.8339 iterations 1
Cbc0038I Pass  20: suminf.    3.74262 (17) obj. -23.8339 iterations 14
Cbc0038I Pass  21: suminf.    1.11869 (13) obj. -23.8339 iterations 8
Cbc0038I Pass  22: suminf.    1.11869 (13) obj. -23.8339 iterations 0
Cbc0038I Pass  23: suminf.    2.52933 (13) obj. -23.8339 iterations 10
Cbc0038I Pass  24: suminf.    1.58273 (13) obj. -23.8339 iterations 1
Cbc0038I Pass  25: suminf.    1.15029 (12) obj. -23.8339 iterations 1
Cbc0038I Pass  26: suminf.    3.74262 (17) obj. -23.8339 iterations 15
Cbc0038I Pass  27: suminf.    1.11869 (13) obj. -23.8339 iterations 8
Cbc0038I Pass  28: suminf.    1.11869 (13) obj. -23.8339 iterations 0
Cbc0038I Pass  29: suminf.    2.52933 (13) obj. -23.8339 iterations 10
Cbc0038I Pass  30: suminf.    1.58273 (13) obj. -23.8339 iterations 1
Cbc0038I Pass  31: suminf.    1.15029 (12) obj. -23.8339 iterations 1
Cbc0038I Pass  32: suminf.    3.74262 (17) obj. -23.8339 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 37 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -20.7078 - took 0.06 seconds
Cbc0012I Integer solution of -20.70781 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 100 rows 115 columns, reduced to 13 rows 13 columns
Cbc0031I 50 added rows had average density of 13.34
Cbc0013I At root node, 50 cuts changed objective from -51.967491 to -31.40725 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4440 row cuts average 2.1 elements, 1 column cuts (17 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 624 row cuts average 93.7 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 93 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 69 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 387 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 342 row cuts average 69.1 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 300 row cuts average 44.1 elements, 0 column cuts (0 active)  in 1.055 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.70781 best solution, best possible -31.40725 (2.86 seconds)
Cbc0012I Integer solution of -21.35261 found by DiveCoefficient after 1709 iterations and 1 nodes (2.88 seconds)
Cbc0012I Integer solution of -26.58921 found by DiveCoefficient after 1766 iterations and 1 nodes (3.09 seconds)
Cbc0012I Integer solution of -31.37101 found by rounding after 1768 iterations and 2 nodes (3.11 seconds)
Cbc0001I Search completed - best objective -31.37101, took 1953 iterations and 4 nodes (3.32 seconds)
Cbc0032I Strong branching done 188 times (3725 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 33 variables fixed on reduced cost
Total time (CPU seconds):       2.43   (Wallclock seconds):       3.37

