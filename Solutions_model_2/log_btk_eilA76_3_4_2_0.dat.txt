Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 66 (-12) columns and 357 (-96) elements
Clp1000I sum of infeasibilities 3.5383e-05 - average 3.05026e-07, 20 fixed columns
Coin0506I Presolve 74 (-42) rows, 44 (-22) columns and 229 (-128) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Coin0511I After Postsolve, objective 72.810273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2554995 - largest nonzero change 0 ( 0%) - largest zero change 2.9646431e-05
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Coin0511I After Postsolve, objective 72.810273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.81027286 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 116 rows, 66 columns (65 integer (65 of which binary)) and 357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.44745
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.38991 iterations 38
Cbc0038I Solution found of 3.38991
Cbc0038I Relaxing continuous gives 3.38991
Cbc0038I Rounding solution of -38.7037 is better than previous of 3.38991

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -38.7037 to -43.1933 (0.03 seconds)
Cbc0038I Round again with cutoff of -46.1551
Cbc0038I Pass   2: suminf.    2.81884 (8) obj. -46.1551 iterations 10
Cbc0038I Pass   3: suminf.    1.85217 (6) obj. -46.1551 iterations 7
Cbc0038I Pass   4: suminf.    1.52726 (4) obj. -46.1551 iterations 6
Cbc0038I Pass   5: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass   6: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass   7: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass   8: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass   9: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  10: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  11: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  12: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  13: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  14: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  15: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  16: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  17: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  18: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  19: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  20: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  21: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  22: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  23: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  24: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  25: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  26: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  27: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  28: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  29: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  30: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  31: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -43.1933 - took 0.03 seconds
Cbc0012I Integer solution of -43.19332 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0031I 22 added rows had average density of 43.409091
Cbc0013I At root node, 22 cuts changed objective from -72.810273 to -64.003185 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6195 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1356 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0012I Integer solution of -43.74517 found by rounding after 4867 iterations and 13 nodes (0.48 seconds)
Cbc0012I Integer solution of -43.94186 found by DiveCoefficient after 5120 iterations and 24 nodes (0.50 seconds)
Cbc0001I Search completed - best objective -43.94185999999999, took 5376 iterations and 42 nodes (0.52 seconds)
Cbc0032I Strong branching done 390 times (5737 iterations), fathomed 4 nodes and fixed 32 variables
Cbc0035I Maximum depth 7, 150 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-70) rows, 98 (-54) columns and 1428 (-1875) elements
Clp1000I sum of infeasibilities 3.16744e-07 - average 3.77077e-09, 23 fixed columns
Coin0506I Presolve 64 (-20) rows, 75 (-23) columns and 907 (-521) elements
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 1.9678375 - largest nonzero change 2.0491675e-05 ( 0.001262127%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 91.303994
Clp0000I Optimal - objective value 91.303994
Coin0511I After Postsolve, objective 91.303994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6362315 - largest nonzero change 2.0491675e-05 ( 0.001262127%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 91.303994
Clp0000I Optimal - objective value 91.303994
Clp0000I Optimal - objective value 91.303994
Coin0511I After Postsolve, objective 91.303994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.30399406 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 102 columns (102 integer (102 of which binary)) and 1456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 5.40977
Cbc0038I Pass   1: suminf.    2.54274 (26) obj. -67.1533 iterations 13
Cbc0038I Pass   2: suminf.    2.54274 (26) obj. -67.1533 iterations 0
Cbc0038I Pass   3: suminf.    0.18254 (3) obj. -39.2783 iterations 23
Cbc0038I Solution found of -36.4608
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 102 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -40.2017
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.54274 (26) obj. -67.1533 iterations 0
Cbc0038I Pass   5: suminf.    2.54274 (26) obj. -67.1533 iterations 0
Cbc0038I Pass   6: suminf.    1.39869 (16) obj. -56.5239 iterations 10
Cbc0038I Pass   7: suminf.    0.43126 (6) obj. -43.8683 iterations 10
Cbc0038I Pass   8: suminf.    0.24335 (2) obj. -40.2017 iterations 12
Cbc0038I Pass   9: suminf.    0.32258 (2) obj. -41.4197 iterations 2
Cbc0038I Pass  10: suminf.    1.29294 (8) obj. -40.2017 iterations 24
Cbc0038I Pass  11: suminf.    0.79163 (7) obj. -40.2017 iterations 4
Cbc0038I Pass  12: suminf.    0.76047 (5) obj. -40.2017 iterations 14
Cbc0038I Pass  13: suminf.    0.72265 (5) obj. -40.2017 iterations 4
Cbc0038I Pass  14: suminf.    1.92141 (6) obj. -40.2017 iterations 6
Cbc0038I Pass  15: suminf.    1.53480 (6) obj. -40.2017 iterations 2
Cbc0038I Pass  16: suminf.    2.05408 (6) obj. -40.2017 iterations 5
Cbc0038I Pass  17: suminf.    1.54822 (6) obj. -40.2017 iterations 3
Cbc0038I Pass  18: suminf.    1.55643 (16) obj. -40.2017 iterations 28
Cbc0038I Pass  19: suminf.    1.44792 (16) obj. -40.2017 iterations 7
Cbc0038I Pass  20: suminf.    1.93709 (10) obj. -40.2017 iterations 24
Cbc0038I Pass  21: suminf.    0.98829 (10) obj. -40.2017 iterations 2
Cbc0038I Pass  22: suminf.    0.98829 (10) obj. -40.2017 iterations 0
Cbc0038I Pass  23: suminf.    1.98772 (8) obj. -40.2017 iterations 11
Cbc0038I Pass  24: suminf.    1.45704 (7) obj. -40.2017 iterations 3
Cbc0038I Pass  25: suminf.    1.83428 (7) obj. -40.2017 iterations 10
Cbc0038I Pass  26: suminf.    1.83428 (7) obj. -40.2017 iterations 2
Cbc0038I Pass  27: suminf.    1.83426 (7) obj. -40.2017 iterations 4
Cbc0038I Pass  28: suminf.    1.83426 (7) obj. -40.2017 iterations 2
Cbc0038I Pass  29: suminf.    1.83428 (7) obj. -40.2017 iterations 4
Cbc0038I Pass  30: suminf.    2.07709 (11) obj. -40.2017 iterations 18
Cbc0038I Pass  31: suminf.    1.93895 (11) obj. -40.2017 iterations 9
Cbc0038I Pass  32: suminf.    2.05373 (9) obj. -40.2017 iterations 12
Cbc0038I Pass  33: suminf.    1.71170 (8) obj. -40.2017 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 102 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.4608 - took 0.02 seconds
Cbc0012I Integer solution of -36.46083 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 88 rows 102 columns, reduced to 9 rows 8 columns
Cbc0031I 46 added rows had average density of 31.717391
Cbc0013I At root node, 46 cuts changed objective from -73.868844 to -47.977784 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6724 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1269 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 766 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 317 row cuts average 63.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.606 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.46083 best solution, best possible -47.977784 (1.68 seconds)
Cbc0012I Integer solution of -37.24442 found by DiveCoefficient after 2788 iterations and 1 nodes (1.84 seconds)
Cbc0012I Integer solution of -42.59199 found by DiveCoefficient after 2796 iterations and 2 nodes (1.86 seconds)
Cbc0016I Integer solution of -43.74517 found by strong branching after 2834 iterations and 2 nodes (1.94 seconds)
Cbc0010I After 8 nodes, 5 on tree, -43.74517 best solution, best possible -47.631183 (2.39 seconds)
Cbc0010I After 31 nodes, 6 on tree, -43.74517 best solution, best possible -47.631183 (3.16 seconds)
Cbc0016I Integer solution of -43.94186 found by strong branching after 4334 iterations and 38 nodes (3.49 seconds)
Cbc0038I Full problem 88 rows 102 columns, reduced to 46 rows 56 columns
Cbc0010I After 48 nodes, 5 on tree, -43.94186 best solution, best possible -47.394923 (3.92 seconds)
Cbc0038I Full problem 134 rows 102 columns, reduced to 57 rows 70 columns
Cbc0044I Reduced cost fixing - 57 rows, 70 columns - restarting search
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.68346
Cbc0038I Pass   1: suminf.    3.38297 (24) obj. -43.9419 iterations 18
Cbc0038I Pass   2: suminf.    3.38297 (24) obj. -43.9419 iterations 1
Cbc0038I Pass   3: suminf.    0.81272 (7) obj. -43.9419 iterations 31
Cbc0038I Pass   4: suminf.    0.66130 (5) obj. -43.9419 iterations 4
Cbc0038I Pass   5: suminf.    0.75171 (6) obj. -43.9419 iterations 9
Cbc0038I Pass   6: suminf.    0.49747 (4) obj. -43.9419 iterations 3
Cbc0038I Pass   7: suminf.    0.65224 (4) obj. -43.9419 iterations 1
Cbc0038I Pass   8: suminf.    2.02314 (12) obj. -43.9419 iterations 14
Cbc0038I Pass   9: suminf.    1.92607 (14) obj. -43.9419 iterations 1
Cbc0038I Pass  10: suminf.    1.86999 (7) obj. -43.9419 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (4.04 seconds)
Cbc0038I Full problem 58 rows 70 columns, reduced to 58 rows 70 columns
Cbc0038I After 4.12 seconds - Feasibility pump exiting with objective of -37.3584 - took 0.08 seconds
Cbc0031I 41 added rows had average density of 14.195122
Cbc0013I At root node, 41 cuts changed objective from -69.135968 to -46.321065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2162 row cuts average 4.2 elements, 5 column cuts (5 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 336 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 128 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 278 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 349 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 100 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 340 row cuts average 9.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -46.321065 (5.56 seconds)
Cbc0010I After 16 nodes, 5 on tree, 1e+50 best solution, best possible -46.321065 (6.62 seconds)
Cbc0001I Search completed - best objective 1e+50, took 3066 iterations and 32 nodes (7.05 seconds)
Cbc0032I Strong branching done 662 times (10172 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 7, 58 variables fixed on reduced cost
Cbc0038I Probing was tried 195 times and created 2619 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
Cbc0038I Gomory was tried 191 times and created 356 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
Cbc0038I Knapsack was tried 191 times and created 346 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
Cbc0038I Clique was tried 191 times and created 579 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Cbc0038I MixedIntegerRounding2 was tried 191 times and created 516 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 191 times and created 294 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Cbc0038I ZeroHalf was tried 191 times and created 164 cuts of which 0 were active after adding rounds of cuts (1.249 seconds)
Cbc0038I Stored from first was tried 191 times and created 496 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -43.94185999999999, took 7785 iterations and 82 nodes (7.06 seconds)
Cbc0032I Strong branching done 914 times (12643 iterations), fathomed 7 nodes and fixed 20 variables
Cbc0035I Maximum depth 9, 116 variables fixed on reduced cost
Total time (CPU seconds):       4.69   (Wallclock seconds):       7.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 66 (-12) columns and 357 (-96) elements
Clp1000I sum of infeasibilities 3.5383e-05 - average 3.05026e-07, 20 fixed columns
Coin0506I Presolve 74 (-42) rows, 44 (-22) columns and 229 (-128) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Coin0511I After Postsolve, objective 72.810273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2554995 - largest nonzero change 0 ( 0%) - largest zero change 2.9646431e-05
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Coin0511I After Postsolve, objective 72.810273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.81027286 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 116 rows, 66 columns (65 integer (65 of which binary)) and 357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.44745
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.38991 iterations 38
Cbc0038I Solution found of 3.38991
Cbc0038I Relaxing continuous gives 3.38991
Cbc0038I Rounding solution of -38.7037 is better than previous of 3.38991

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -38.7037 to -43.1933 (0.03 seconds)
Cbc0038I Round again with cutoff of -46.1551
Cbc0038I Pass   2: suminf.    2.81884 (8) obj. -46.1551 iterations 10
Cbc0038I Pass   3: suminf.    1.85217 (6) obj. -46.1551 iterations 7
Cbc0038I Pass   4: suminf.    1.52726 (4) obj. -46.1551 iterations 6
Cbc0038I Pass   5: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass   6: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass   7: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass   8: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass   9: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  10: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  11: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  12: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  13: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  14: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  15: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  16: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  17: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  18: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  19: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  20: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  21: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  22: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  23: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  24: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  25: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  26: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  27: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  28: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  29: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  30: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  31: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -43.1933 - took 0.03 seconds
Cbc0012I Integer solution of -43.19332 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0031I 22 added rows had average density of 43.409091
Cbc0013I At root node, 22 cuts changed objective from -72.810273 to -64.003185 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6195 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1356 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0012I Integer solution of -43.74517 found by rounding after 4867 iterations and 13 nodes (0.48 seconds)
Cbc0012I Integer solution of -43.94186 found by DiveCoefficient after 5120 iterations and 24 nodes (0.50 seconds)
Cbc0001I Search completed - best objective -43.94185999999999, took 5376 iterations and 42 nodes (0.52 seconds)
Cbc0032I Strong branching done 390 times (5737 iterations), fathomed 4 nodes and fixed 32 variables
Cbc0035I Maximum depth 7, 150 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-71) rows, 98 (-55) columns and 1428 (-1876) elements
Clp1000I sum of infeasibilities 3.16744e-07 - average 3.77077e-09, 23 fixed columns
Coin0506I Presolve 64 (-20) rows, 75 (-23) columns and 907 (-521) elements
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 1.9678375 - largest nonzero change 2.0491675e-05 ( 0.001262127%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 91.303994
Clp0000I Optimal - objective value 91.303994
Coin0511I After Postsolve, objective 91.303994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6362315 - largest nonzero change 2.0491675e-05 ( 0.001262127%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 91.303994
Clp0000I Optimal - objective value 91.303994
Clp0000I Optimal - objective value 91.303994
Coin0511I After Postsolve, objective 91.303994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.30399406 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 102 columns (102 integer (102 of which binary)) and 1456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 5.40977
Cbc0038I Pass   1: suminf.    2.54274 (26) obj. -67.1533 iterations 13
Cbc0038I Pass   2: suminf.    2.54274 (26) obj. -67.1533 iterations 0
Cbc0038I Pass   3: suminf.    0.18254 (3) obj. -39.2783 iterations 23
Cbc0038I Solution found of -36.4608
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 102 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -40.2017
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.54274 (26) obj. -67.1533 iterations 0
Cbc0038I Pass   5: suminf.    2.54274 (26) obj. -67.1533 iterations 0
Cbc0038I Pass   6: suminf.    1.39869 (16) obj. -56.5239 iterations 10
Cbc0038I Pass   7: suminf.    0.43126 (6) obj. -43.8683 iterations 10
Cbc0038I Pass   8: suminf.    0.24335 (2) obj. -40.2017 iterations 12
Cbc0038I Pass   9: suminf.    0.32258 (2) obj. -41.4197 iterations 2
Cbc0038I Pass  10: suminf.    1.29294 (8) obj. -40.2017 iterations 24
Cbc0038I Pass  11: suminf.    0.79163 (7) obj. -40.2017 iterations 4
Cbc0038I Pass  12: suminf.    0.76047 (5) obj. -40.2017 iterations 14
Cbc0038I Pass  13: suminf.    0.72265 (5) obj. -40.2017 iterations 4
Cbc0038I Pass  14: suminf.    1.92141 (6) obj. -40.2017 iterations 6
Cbc0038I Pass  15: suminf.    1.53480 (6) obj. -40.2017 iterations 2
Cbc0038I Pass  16: suminf.    2.05408 (6) obj. -40.2017 iterations 5
Cbc0038I Pass  17: suminf.    1.54822 (6) obj. -40.2017 iterations 3
Cbc0038I Pass  18: suminf.    1.55643 (16) obj. -40.2017 iterations 28
Cbc0038I Pass  19: suminf.    1.44792 (16) obj. -40.2017 iterations 7
Cbc0038I Pass  20: suminf.    1.93709 (10) obj. -40.2017 iterations 24
Cbc0038I Pass  21: suminf.    0.98829 (10) obj. -40.2017 iterations 2
Cbc0038I Pass  22: suminf.    0.98829 (10) obj. -40.2017 iterations 0
Cbc0038I Pass  23: suminf.    1.98772 (8) obj. -40.2017 iterations 11
Cbc0038I Pass  24: suminf.    1.45704 (7) obj. -40.2017 iterations 3
Cbc0038I Pass  25: suminf.    1.83428 (7) obj. -40.2017 iterations 10
Cbc0038I Pass  26: suminf.    1.83428 (7) obj. -40.2017 iterations 2
Cbc0038I Pass  27: suminf.    1.83426 (7) obj. -40.2017 iterations 4
Cbc0038I Pass  28: suminf.    1.83426 (7) obj. -40.2017 iterations 2
Cbc0038I Pass  29: suminf.    1.83428 (7) obj. -40.2017 iterations 4
Cbc0038I Pass  30: suminf.    2.07709 (11) obj. -40.2017 iterations 18
Cbc0038I Pass  31: suminf.    1.93895 (11) obj. -40.2017 iterations 9
Cbc0038I Pass  32: suminf.    2.05373 (9) obj. -40.2017 iterations 12
Cbc0038I Pass  33: suminf.    1.71170 (8) obj. -40.2017 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 102 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.4608 - took 0.02 seconds
Cbc0012I Integer solution of -36.46083 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 102 columns, reduced to 9 rows 8 columns
Cbc0031I 46 added rows had average density of 31.717391
Cbc0013I At root node, 46 cuts changed objective from -73.868844 to -47.977784 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6724 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1269 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 766 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 317 row cuts average 63.9 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.614 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.46083 best solution, best possible -47.977784 (1.72 seconds)
Cbc0012I Integer solution of -37.24442 found by DiveCoefficient after 2788 iterations and 1 nodes (1.89 seconds)
Cbc0012I Integer solution of -42.59199 found by DiveCoefficient after 2796 iterations and 2 nodes (1.90 seconds)
Cbc0016I Integer solution of -43.74517 found by strong branching after 2834 iterations and 2 nodes (1.99 seconds)
Cbc0010I After 8 nodes, 5 on tree, -43.74517 best solution, best possible -47.631183 (2.44 seconds)
Cbc0010I After 31 nodes, 6 on tree, -43.74517 best solution, best possible -47.631183 (3.18 seconds)
Cbc0016I Integer solution of -43.94186 found by strong branching after 4334 iterations and 38 nodes (3.51 seconds)
Cbc0038I Full problem 88 rows 102 columns, reduced to 46 rows 56 columns
Cbc0010I After 48 nodes, 5 on tree, -43.94186 best solution, best possible -47.394923 (3.94 seconds)
Cbc0038I Full problem 134 rows 102 columns, reduced to 57 rows 70 columns
Cbc0044I Reduced cost fixing - 57 rows, 70 columns - restarting search
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.68346
Cbc0038I Pass   1: suminf.    3.38297 (24) obj. -43.9419 iterations 18
Cbc0038I Pass   2: suminf.    3.38297 (24) obj. -43.9419 iterations 1
Cbc0038I Pass   3: suminf.    0.81272 (7) obj. -43.9419 iterations 31
Cbc0038I Pass   4: suminf.    0.66130 (5) obj. -43.9419 iterations 4
Cbc0038I Pass   5: suminf.    0.75171 (6) obj. -43.9419 iterations 9
Cbc0038I Pass   6: suminf.    0.49747 (4) obj. -43.9419 iterations 3
Cbc0038I Pass   7: suminf.    0.65224 (4) obj. -43.9419 iterations 1
Cbc0038I Pass   8: suminf.    2.02314 (12) obj. -43.9419 iterations 14
Cbc0038I Pass   9: suminf.    1.92607 (14) obj. -43.9419 iterations 1
Cbc0038I Pass  10: suminf.    1.86999 (7) obj. -43.9419 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (4.06 seconds)
Cbc0038I Full problem 58 rows 70 columns, reduced to 58 rows 70 columns
Cbc0038I After 4.14 seconds - Feasibility pump exiting with objective of -37.3584 - took 0.08 seconds
Cbc0031I 41 added rows had average density of 14.195122
Cbc0013I At root node, 41 cuts changed objective from -69.135968 to -46.321065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2162 row cuts average 4.2 elements, 5 column cuts (5 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 336 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 128 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 278 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 349 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 100 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 340 row cuts average 9.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -46.321065 (5.58 seconds)
Cbc0010I After 16 nodes, 5 on tree, 1e+50 best solution, best possible -46.321065 (6.62 seconds)
Cbc0001I Search completed - best objective 1e+50, took 3066 iterations and 32 nodes (7.03 seconds)
Cbc0032I Strong branching done 662 times (10172 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 7, 58 variables fixed on reduced cost
Cbc0038I Probing was tried 195 times and created 2619 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
Cbc0038I Gomory was tried 191 times and created 356 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
Cbc0038I Knapsack was tried 191 times and created 346 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
Cbc0038I Clique was tried 191 times and created 579 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I MixedIntegerRounding2 was tried 191 times and created 516 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 191 times and created 294 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Cbc0038I ZeroHalf was tried 191 times and created 164 cuts of which 0 were active after adding rounds of cuts (1.219 seconds)
Cbc0038I Stored from first was tried 191 times and created 496 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -43.94185999999999, took 7785 iterations and 82 nodes (7.03 seconds)
Cbc0032I Strong branching done 914 times (12643 iterations), fathomed 7 nodes and fixed 20 variables
Cbc0035I Maximum depth 9, 116 variables fixed on reduced cost
Total time (CPU seconds):       4.67   (Wallclock seconds):       7.05

