Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 23 (-40) rows, 15 (-17) columns and 58 (-119) elements
Clp0000I Optimal - objective value 222.92288
Coin0511I After Postsolve, objective 222.92288, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 222.9228771 - 15 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 23 rows, 15 columns (14 integer (14 of which binary)) and 58 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.19928
Cbc0038I Pass   1: suminf.    0.80556 (2) obj. -203.111 iterations 11
Cbc0038I Pass   2: suminf.    0.48333 (1) obj. -198.283 iterations 4
Cbc0038I Solution found of -174
Cbc0038I Relaxing continuous gives -174
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -179.792
Cbc0038I Pass   3: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass   4: suminf.    0.48333 (1) obj. -198.283 iterations 3
Cbc0038I Pass   5: suminf.    0.06034 (1) obj. -179.792 iterations 2
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -198 iterations 1
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -198 iterations 2
Cbc0038I Pass   8: suminf.    0.61941 (3) obj. -179.792 iterations 6
Cbc0038I Pass   9: suminf.    0.61941 (3) obj. -179.792 iterations 0
Cbc0038I Pass  10: suminf.    0.51301 (4) obj. -179.792 iterations 5
Cbc0038I Pass  11: suminf.    0.18586 (2) obj. -179.792 iterations 2
Cbc0038I Pass  12: suminf.    0.40681 (3) obj. -179.792 iterations 3
Cbc0038I Pass  13: suminf.    0.62599 (2) obj. -179.792 iterations 4
Cbc0038I Pass  14: suminf.    0.62599 (2) obj. -179.792 iterations 1
Cbc0038I Pass  15: suminf.    0.88619 (3) obj. -179.792 iterations 3
Cbc0038I Pass  16: suminf.    0.44860 (2) obj. -179.792 iterations 4
Cbc0038I Pass  17: suminf.    0.44860 (2) obj. -179.792 iterations 1
Cbc0038I Pass  18: suminf.    0.80181 (3) obj. -179.792 iterations 3
Cbc0038I Pass  19: suminf.    1.20803 (5) obj. -179.792 iterations 2
Cbc0038I Pass  20: suminf.    1.17385 (4) obj. -179.792 iterations 1
Cbc0038I Pass  21: suminf.    0.98501 (4) obj. -179.792 iterations 2
Cbc0038I Pass  22: suminf.    0.46384 (2) obj. -179.792 iterations 2
Cbc0038I Pass  23: suminf.    0.52498 (3) obj. -179.792 iterations 4
Cbc0038I Pass  24: suminf.    0.41696 (3) obj. -179.792 iterations 1
Cbc0038I Pass  25: suminf.    0.68562 (3) obj. -179.792 iterations 1
Cbc0038I Pass  26: suminf.    0.84952 (3) obj. -179.792 iterations 4
Cbc0038I Pass  27: suminf.    0.89160 (4) obj. -179.792 iterations 8
Cbc0038I Pass  28: suminf.    0.88081 (4) obj. -179.792 iterations 4
Cbc0038I Pass  29: suminf.    0.27100 (2) obj. -179.792 iterations 5
Cbc0038I Pass  30: suminf.    0.27100 (2) obj. -179.792 iterations 0
Cbc0038I Pass  31: suminf.    0.57637 (3) obj. -179.792 iterations 3
Cbc0038I Pass  32: suminf.    0.57637 (3) obj. -179.792 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -174 to -175 (0.01 seconds)
Cbc0038I Round again with cutoff of -188.418
Cbc0038I Pass  32: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass  33: suminf.    0.48333 (1) obj. -198.283 iterations 3
Cbc0038I Pass  34: suminf.    0.15019 (1) obj. -188.418 iterations 2
Cbc0038I Pass  35: suminf.    0.25000 (1) obj. -198 iterations 1
Cbc0038I Pass  36: suminf.    0.22850 (3) obj. -188.418 iterations 3
Cbc0038I Pass  37: suminf.    0.22850 (3) obj. -188.418 iterations 0
Cbc0038I Pass  38: suminf.    0.54364 (5) obj. -188.418 iterations 5
Cbc0038I Pass  39: suminf.    0.54364 (5) obj. -188.418 iterations 0
Cbc0038I Pass  40: suminf.    1.72908 (5) obj. -188.418 iterations 3
Cbc0038I Pass  41: suminf.    1.94889 (6) obj. -188.418 iterations 3
Cbc0038I Pass  42: suminf.    0.25915 (2) obj. -188.418 iterations 5
Cbc0038I Pass  43: suminf.    0.06619 (2) obj. -188.418 iterations 3
Cbc0038I Pass  44: suminf.    0.50060 (3) obj. -188.418 iterations 2
Cbc0038I Pass  45: suminf.    1.27535 (6) obj. -188.418 iterations 7
Cbc0038I Pass  46: suminf.    0.54174 (3) obj. -188.418 iterations 6
Cbc0038I Pass  47: suminf.    1.39448 (4) obj. -188.418 iterations 4
Cbc0038I Pass  48: suminf.    0.69612 (3) obj. -188.418 iterations 4
Cbc0038I Pass  49: suminf.    0.68644 (4) obj. -188.418 iterations 1
Cbc0038I Pass  50: suminf.    0.54364 (5) obj. -188.418 iterations 4
Cbc0038I Pass  51: suminf.    1.72908 (5) obj. -188.418 iterations 3
Cbc0038I Pass  52: suminf.    1.71187 (5) obj. -188.418 iterations 1
Cbc0038I Pass  53: suminf.    1.67943 (5) obj. -188.418 iterations 1
Cbc0038I Pass  54: suminf.    0.63036 (4) obj. -188.418 iterations 3
Cbc0038I Pass  55: suminf.    0.55433 (5) obj. -188.418 iterations 1
Cbc0038I Pass  56: suminf.    1.71187 (5) obj. -188.418 iterations 3
Cbc0038I Pass  57: suminf.    3.15963 (10) obj. -188.418 iterations 12
Cbc0038I Pass  58: suminf.    2.35173 (7) obj. -188.418 iterations 4
Cbc0038I Pass  59: suminf.    0.34541 (6) obj. -188.418 iterations 7
Cbc0038I Pass  60: suminf.    0.34541 (6) obj. -188.418 iterations 0
Cbc0038I Pass  61: suminf.    1.46514 (5) obj. -188.418 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -175 to -184 (0.01 seconds)
Cbc0038I Round again with cutoff of -198.77
Cbc0038I Pass  61: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass  62: suminf.    0.48693 (2) obj. -198.77 iterations 3
Cbc0038I Pass  63: suminf.    0.43100 (3) obj. -198.77 iterations 3
Cbc0038I Pass  64: suminf.    0.26543 (2) obj. -198.77 iterations 2
Cbc0038I Pass  65: suminf.    0.74746 (3) obj. -198.77 iterations 2
Cbc0038I Pass  66: suminf.    3.66123 (10) obj. -198.77 iterations 8
Cbc0038I Pass  67: suminf.    1.07314 (6) obj. -198.77 iterations 5
Cbc0038I Pass  68: suminf.    1.07314 (6) obj. -198.77 iterations 0
Cbc0038I Pass  69: suminf.    2.07011 (5) obj. -198.77 iterations 5
Cbc0038I Pass  70: suminf.    1.09719 (5) obj. -198.77 iterations 3
Cbc0038I Pass  71: suminf.    1.79295 (9) obj. -198.77 iterations 7
Cbc0038I Pass  72: suminf.    1.37593 (6) obj. -198.77 iterations 3
Cbc0038I Pass  73: suminf.    1.37593 (6) obj. -198.77 iterations 1
Cbc0038I Pass  74: suminf.    1.80617 (5) obj. -198.77 iterations 3
Cbc0038I Pass  75: suminf.    1.73940 (5) obj. -198.77 iterations 1
Cbc0038I Pass  76: suminf.    0.23852 (2) obj. -198.77 iterations 4
Cbc0038I Pass  77: suminf.    0.58725 (3) obj. -198.77 iterations 3
Cbc0038I Pass  78: suminf.    0.44682 (2) obj. -198.77 iterations 2
Cbc0038I Pass  79: suminf.    0.83500 (3) obj. -198.77 iterations 2
Cbc0038I Pass  80: suminf.    2.17488 (7) obj. -198.77 iterations 6
Cbc0038I Pass  81: suminf.    1.10039 (4) obj. -198.77 iterations 3
Cbc0038I Pass  82: suminf.    1.05520 (4) obj. -198.77 iterations 1
Cbc0038I Pass  83: suminf.    0.26543 (2) obj. -198.77 iterations 2
Cbc0038I Pass  84: suminf.    0.74746 (3) obj. -198.77 iterations 2
Cbc0038I Pass  85: suminf.    1.74853 (6) obj. -198.77 iterations 6
Cbc0038I Pass  86: suminf.    1.07314 (6) obj. -198.77 iterations 5
Cbc0038I Pass  87: suminf.    1.07314 (6) obj. -198.77 iterations 1
Cbc0038I Pass  88: suminf.    2.07011 (5) obj. -198.77 iterations 5
Cbc0038I Pass  89: suminf.    1.09719 (5) obj. -198.77 iterations 3
Cbc0038I Pass  90: suminf.    1.09719 (5) obj. -198.77 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -184 - took 0.04 seconds
Cbc0012I Integer solution of -184 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 4 added rows had average density of 3.75
Cbc0013I At root node, 17 cuts changed objective from -222.92288 to -180.19486 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.5 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -184, took 3 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-25) rows, 41 (-19) columns and 242 (-370) elements
Clp1000I sum of infeasibilities 2.22122e-07 - average 6.00331e-09, 12 fixed columns
Coin0506I Presolve 29 (-8) rows, 29 (-12) columns and 111 (-131) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 327.55029
Clp0000I Optimal - objective value 327.55029
Coin0511I After Postsolve, objective 327.55029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22163515 - largest nonzero change 1.9889419e-05 ( 0.0016861079%) - largest zero change 2.8423872e-05
Clp0000I Optimal - objective value 328.82235
Clp0000I Optimal - objective value 328.82235
Clp0000I Optimal - objective value 328.82235
Coin0511I After Postsolve, objective 328.82235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 328.8223462 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 220 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.512%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.68993
Cbc0038I Pass   1: suminf.    0.43611 (3) obj. -128.739 iterations 9
Cbc0038I Pass   2: suminf.    0.43611 (3) obj. -128.739 iterations 0
Cbc0038I Solution found of -121
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -131.827
Cbc0038I Pass   3: suminf.    0.61553 (9) obj. -131.827 iterations 1
Cbc0038I Pass   4: suminf.    0.51564 (4) obj. -131.827 iterations 1
Cbc0038I Pass   5: suminf.    0.61721 (2) obj. -131.827 iterations 7
Cbc0038I Pass   6: suminf.    0.90001 (2) obj. -131.827 iterations 1
Cbc0038I Pass   7: suminf.    1.67769 (8) obj. -131.827 iterations 8
Cbc0038I Pass   8: suminf.    0.46774 (1) obj. -139.903 iterations 8
Cbc0038I Pass   9: suminf.    0.38362 (1) obj. -131.827 iterations 1
Cbc0038I Pass  10: suminf.    2.06009 (5) obj. -131.827 iterations 10
Cbc0038I Pass  11: suminf.    2.06009 (5) obj. -131.827 iterations 0
Cbc0038I Pass  12: suminf.    0.46774 (1) obj. -132.903 iterations 5
Cbc0038I Pass  13: suminf.    0.45653 (1) obj. -131.827 iterations 1
Cbc0038I Pass  14: suminf.    1.32911 (5) obj. -131.827 iterations 10
Cbc0038I Pass  15: suminf.    1.18003 (4) obj. -131.827 iterations 1
Cbc0038I Pass  16: suminf.    0.96457 (8) obj. -131.827 iterations 5
Cbc0038I Pass  17: suminf.    0.96457 (8) obj. -131.827 iterations 0
Cbc0038I Pass  18: suminf.    0.55335 (2) obj. -162.025 iterations 9
Cbc0038I Pass  19: suminf.    0.06070 (1) obj. -131.827 iterations 2
Cbc0038I Pass  20: suminf.    0.29032 (1) obj. -153.871 iterations 1
Cbc0038I Pass  21: suminf.    1.72882 (6) obj. -131.827 iterations 8
Cbc0038I Pass  22: suminf.    0.52498 (2) obj. -131.827 iterations 4
Cbc0038I Pass  23: suminf.    0.33871 (1) obj. -154.516 iterations 2
Cbc0038I Pass  24: suminf.    0.10237 (1) obj. -131.827 iterations 1
Cbc0038I Pass  25: suminf.    1.56667 (4) obj. -141.967 iterations 10
Cbc0038I Pass  26: suminf.    0.83333 (2) obj. -138.833 iterations 2
Cbc0038I Pass  27: suminf.    0.03987 (1) obj. -131.827 iterations 3
Cbc0038I Pass  28: suminf.    0.20968 (1) obj. -148.129 iterations 1
Cbc0038I Pass  29: suminf.    3.36527 (9) obj. -131.827 iterations 13
Cbc0038I Pass  30: suminf.    2.77005 (7) obj. -131.827 iterations 3
Cbc0038I Pass  31: suminf.    1.15045 (3) obj. -131.827 iterations 7
Cbc0038I Pass  32: suminf.    0.99968 (3) obj. -131.827 iterations 1
Cbc0038I Rounding solution of -151 is better than previous of -121

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -151 to -175 (0.02 seconds)
Cbc0038I Round again with cutoff of -184.854
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    5.96482 (15) obj. -203.784 iterations 2
Cbc0038I Pass  33: suminf.    0.36262 (2) obj. -184.854 iterations 21
Cbc0038I Pass  34: suminf.    0.36262 (2) obj. -184.854 iterations 0
Cbc0038I Pass  35: suminf.    0.60049 (2) obj. -184.854 iterations 2
Cbc0038I Pass  36: suminf.    3.07210 (8) obj. -184.854 iterations 11
Cbc0038I Pass  37: suminf.    2.27432 (6) obj. -184.854 iterations 5
Cbc0038I Pass  38: suminf.    0.86942 (3) obj. -184.854 iterations 7
Cbc0038I Pass  39: suminf.    0.86942 (3) obj. -184.854 iterations 0
Cbc0038I Pass  40: suminf.    0.92540 (3) obj. -184.854 iterations 1
Cbc0038I Pass  41: suminf.    0.71746 (3) obj. -184.854 iterations 1
Cbc0038I Pass  42: suminf.    1.72120 (6) obj. -184.854 iterations 4
Cbc0038I Pass  43: suminf.    1.32978 (5) obj. -184.854 iterations 1
Cbc0038I Pass  44: suminf.    0.65513 (3) obj. -184.854 iterations 5
Cbc0038I Pass  45: suminf.    0.65513 (3) obj. -184.854 iterations 0
Cbc0038I Pass  46: suminf.    0.96334 (3) obj. -184.854 iterations 1
Cbc0038I Pass  47: suminf.    0.62069 (3) obj. -184.854 iterations 1
Cbc0038I Pass  48: suminf.    2.05636 (7) obj. -184.854 iterations 4
Cbc0038I Pass  49: suminf.    3.73260 (11) obj. -184.854 iterations 7
Cbc0038I Pass  50: suminf.    3.73260 (11) obj. -184.854 iterations 2
Cbc0038I Pass  51: suminf.    0.86942 (3) obj. -184.854 iterations 9
Cbc0038I Pass  52: suminf.    0.86942 (3) obj. -184.854 iterations 0
Cbc0038I Pass  53: suminf.    0.92540 (3) obj. -184.854 iterations 1
Cbc0038I Pass  54: suminf.    0.71746 (3) obj. -184.854 iterations 1
Cbc0038I Pass  55: suminf.    1.76945 (6) obj. -184.854 iterations 5
Cbc0038I Pass  56: suminf.    1.37803 (5) obj. -184.854 iterations 1
Cbc0038I Pass  57: suminf.    0.53726 (2) obj. -184.854 iterations 5
Cbc0038I Pass  58: suminf.    0.52391 (2) obj. -184.854 iterations 1
Cbc0038I Pass  59: suminf.    2.52470 (7) obj. -184.854 iterations 6
Cbc0038I Pass  60: suminf.    2.17859 (6) obj. -184.854 iterations 1
Cbc0038I Pass  61: suminf.    0.58371 (3) obj. -184.854 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -175 - took 0.02 seconds
Cbc0012I Integer solution of -175 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -184 found by DiveCoefficient after 25 iterations and 0 nodes (0.07 seconds)
Cbc0031I 2 added rows had average density of 12
Cbc0013I At root node, 2 cuts changed objective from -220.2717 to -184 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 62 row cuts average 2.1 elements, 24 column cuts (24 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -184, took 25 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 23 (-40) rows, 15 (-17) columns and 58 (-119) elements
Clp0000I Optimal - objective value 222.92288
Coin0511I After Postsolve, objective 222.92288, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 222.9228771 - 15 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 23 rows, 15 columns (14 integer (14 of which binary)) and 58 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.19928
Cbc0038I Pass   1: suminf.    0.80556 (2) obj. -203.111 iterations 11
Cbc0038I Pass   2: suminf.    0.48333 (1) obj. -198.283 iterations 4
Cbc0038I Solution found of -174
Cbc0038I Relaxing continuous gives -174
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -179.792
Cbc0038I Pass   3: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass   4: suminf.    0.48333 (1) obj. -198.283 iterations 3
Cbc0038I Pass   5: suminf.    0.06034 (1) obj. -179.792 iterations 2
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -198 iterations 1
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -198 iterations 2
Cbc0038I Pass   8: suminf.    0.61941 (3) obj. -179.792 iterations 6
Cbc0038I Pass   9: suminf.    0.61941 (3) obj. -179.792 iterations 0
Cbc0038I Pass  10: suminf.    0.51301 (4) obj. -179.792 iterations 5
Cbc0038I Pass  11: suminf.    0.18586 (2) obj. -179.792 iterations 2
Cbc0038I Pass  12: suminf.    0.40681 (3) obj. -179.792 iterations 3
Cbc0038I Pass  13: suminf.    0.62599 (2) obj. -179.792 iterations 4
Cbc0038I Pass  14: suminf.    0.62599 (2) obj. -179.792 iterations 1
Cbc0038I Pass  15: suminf.    0.88619 (3) obj. -179.792 iterations 3
Cbc0038I Pass  16: suminf.    0.44860 (2) obj. -179.792 iterations 4
Cbc0038I Pass  17: suminf.    0.44860 (2) obj. -179.792 iterations 1
Cbc0038I Pass  18: suminf.    0.80181 (3) obj. -179.792 iterations 3
Cbc0038I Pass  19: suminf.    1.20803 (5) obj. -179.792 iterations 2
Cbc0038I Pass  20: suminf.    1.17385 (4) obj. -179.792 iterations 1
Cbc0038I Pass  21: suminf.    0.98501 (4) obj. -179.792 iterations 2
Cbc0038I Pass  22: suminf.    0.46384 (2) obj. -179.792 iterations 2
Cbc0038I Pass  23: suminf.    0.52498 (3) obj. -179.792 iterations 4
Cbc0038I Pass  24: suminf.    0.41696 (3) obj. -179.792 iterations 1
Cbc0038I Pass  25: suminf.    0.68562 (3) obj. -179.792 iterations 1
Cbc0038I Pass  26: suminf.    0.84952 (3) obj. -179.792 iterations 4
Cbc0038I Pass  27: suminf.    0.89160 (4) obj. -179.792 iterations 8
Cbc0038I Pass  28: suminf.    0.88081 (4) obj. -179.792 iterations 4
Cbc0038I Pass  29: suminf.    0.27100 (2) obj. -179.792 iterations 5
Cbc0038I Pass  30: suminf.    0.27100 (2) obj. -179.792 iterations 0
Cbc0038I Pass  31: suminf.    0.57637 (3) obj. -179.792 iterations 3
Cbc0038I Pass  32: suminf.    0.57637 (3) obj. -179.792 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -174 to -175 (0.01 seconds)
Cbc0038I Round again with cutoff of -188.418
Cbc0038I Pass  32: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass  33: suminf.    0.48333 (1) obj. -198.283 iterations 3
Cbc0038I Pass  34: suminf.    0.15019 (1) obj. -188.418 iterations 2
Cbc0038I Pass  35: suminf.    0.25000 (1) obj. -198 iterations 1
Cbc0038I Pass  36: suminf.    0.22850 (3) obj. -188.418 iterations 3
Cbc0038I Pass  37: suminf.    0.22850 (3) obj. -188.418 iterations 0
Cbc0038I Pass  38: suminf.    0.54364 (5) obj. -188.418 iterations 5
Cbc0038I Pass  39: suminf.    0.54364 (5) obj. -188.418 iterations 0
Cbc0038I Pass  40: suminf.    1.72908 (5) obj. -188.418 iterations 3
Cbc0038I Pass  41: suminf.    1.94889 (6) obj. -188.418 iterations 3
Cbc0038I Pass  42: suminf.    0.25915 (2) obj. -188.418 iterations 5
Cbc0038I Pass  43: suminf.    0.06619 (2) obj. -188.418 iterations 3
Cbc0038I Pass  44: suminf.    0.50060 (3) obj. -188.418 iterations 2
Cbc0038I Pass  45: suminf.    1.27535 (6) obj. -188.418 iterations 7
Cbc0038I Pass  46: suminf.    0.54174 (3) obj. -188.418 iterations 6
Cbc0038I Pass  47: suminf.    1.39448 (4) obj. -188.418 iterations 4
Cbc0038I Pass  48: suminf.    0.69612 (3) obj. -188.418 iterations 4
Cbc0038I Pass  49: suminf.    0.68644 (4) obj. -188.418 iterations 1
Cbc0038I Pass  50: suminf.    0.54364 (5) obj. -188.418 iterations 4
Cbc0038I Pass  51: suminf.    1.72908 (5) obj. -188.418 iterations 3
Cbc0038I Pass  52: suminf.    1.71187 (5) obj. -188.418 iterations 1
Cbc0038I Pass  53: suminf.    1.67943 (5) obj. -188.418 iterations 1
Cbc0038I Pass  54: suminf.    0.63036 (4) obj. -188.418 iterations 3
Cbc0038I Pass  55: suminf.    0.55433 (5) obj. -188.418 iterations 1
Cbc0038I Pass  56: suminf.    1.71187 (5) obj. -188.418 iterations 3
Cbc0038I Pass  57: suminf.    3.15963 (10) obj. -188.418 iterations 12
Cbc0038I Pass  58: suminf.    2.35173 (7) obj. -188.418 iterations 4
Cbc0038I Pass  59: suminf.    0.34541 (6) obj. -188.418 iterations 7
Cbc0038I Pass  60: suminf.    0.34541 (6) obj. -188.418 iterations 0
Cbc0038I Pass  61: suminf.    1.46514 (5) obj. -188.418 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -175 to -184 (0.02 seconds)
Cbc0038I Round again with cutoff of -198.77
Cbc0038I Pass  61: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass  62: suminf.    0.48693 (2) obj. -198.77 iterations 3
Cbc0038I Pass  63: suminf.    0.43100 (3) obj. -198.77 iterations 3
Cbc0038I Pass  64: suminf.    0.26543 (2) obj. -198.77 iterations 2
Cbc0038I Pass  65: suminf.    0.74746 (3) obj. -198.77 iterations 2
Cbc0038I Pass  66: suminf.    3.66123 (10) obj. -198.77 iterations 8
Cbc0038I Pass  67: suminf.    1.07314 (6) obj. -198.77 iterations 5
Cbc0038I Pass  68: suminf.    1.07314 (6) obj. -198.77 iterations 0
Cbc0038I Pass  69: suminf.    2.07011 (5) obj. -198.77 iterations 5
Cbc0038I Pass  70: suminf.    1.09719 (5) obj. -198.77 iterations 3
Cbc0038I Pass  71: suminf.    1.79295 (9) obj. -198.77 iterations 7
Cbc0038I Pass  72: suminf.    1.37593 (6) obj. -198.77 iterations 3
Cbc0038I Pass  73: suminf.    1.37593 (6) obj. -198.77 iterations 1
Cbc0038I Pass  74: suminf.    1.80617 (5) obj. -198.77 iterations 3
Cbc0038I Pass  75: suminf.    1.73940 (5) obj. -198.77 iterations 1
Cbc0038I Pass  76: suminf.    0.23852 (2) obj. -198.77 iterations 4
Cbc0038I Pass  77: suminf.    0.58725 (3) obj. -198.77 iterations 3
Cbc0038I Pass  78: suminf.    0.44682 (2) obj. -198.77 iterations 2
Cbc0038I Pass  79: suminf.    0.83500 (3) obj. -198.77 iterations 2
Cbc0038I Pass  80: suminf.    2.17488 (7) obj. -198.77 iterations 6
Cbc0038I Pass  81: suminf.    1.10039 (4) obj. -198.77 iterations 3
Cbc0038I Pass  82: suminf.    1.05520 (4) obj. -198.77 iterations 1
Cbc0038I Pass  83: suminf.    0.26543 (2) obj. -198.77 iterations 2
Cbc0038I Pass  84: suminf.    0.74746 (3) obj. -198.77 iterations 2
Cbc0038I Pass  85: suminf.    1.74853 (6) obj. -198.77 iterations 6
Cbc0038I Pass  86: suminf.    1.07314 (6) obj. -198.77 iterations 5
Cbc0038I Pass  87: suminf.    1.07314 (6) obj. -198.77 iterations 1
Cbc0038I Pass  88: suminf.    2.07011 (5) obj. -198.77 iterations 5
Cbc0038I Pass  89: suminf.    1.09719 (5) obj. -198.77 iterations 3
Cbc0038I Pass  90: suminf.    1.09719 (5) obj. -198.77 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -184 - took 0.02 seconds
Cbc0012I Integer solution of -184 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 4 added rows had average density of 3.75
Cbc0013I At root node, 17 cuts changed objective from -222.92288 to -180.19486 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.5 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -184, took 3 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-28) rows, 40 (-21) columns and 218 (-395) elements
Clp1000I sum of infeasibilities 9.85734e-08 - average 2.81638e-09, 4 fixed columns
Coin0506I Presolve 32 (-3) rows, 36 (-4) columns and 183 (-35) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 4.2852814 - largest nonzero change 2.6704166e-05 ( 0.0018056464%) - largest zero change 1.7162549e-05
Clp0000I Optimal - objective value 272.80529
Clp0000I Optimal - objective value 272.80529
Coin0511I After Postsolve, objective 272.80529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.7381611 - largest nonzero change 2.7636445e-05 ( 0.0018056464%) - largest zero change 2.0805638e-05
Clp0000I Optimal - objective value 294.767
Clp0000I Optimal - objective value 294.767
Clp0000I Optimal - objective value 294.767
Coin0511I After Postsolve, objective 294.767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 294.767001 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 222 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.512%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.78863
Cbc0038I Pass   1: suminf.    0.49495 (3) obj. -124.394 iterations 19
Cbc0038I Pass   2: suminf.    0.49495 (3) obj. -124.394 iterations 1
Cbc0038I Solution found of -121
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -131.28
Cbc0038I Pass   3: suminf.    0.88367 (9) obj. -131.28 iterations 1
Cbc0038I Pass   4: suminf.    0.68749 (5) obj. -131.28 iterations 3
Cbc0038I Pass   5: suminf.    0.98131 (2) obj. -137.495 iterations 7
Cbc0038I Pass   6: suminf.    0.68114 (2) obj. -131.28 iterations 3
Cbc0038I Pass   7: suminf.    0.94100 (2) obj. -131.28 iterations 3
Cbc0038I Pass   8: suminf.    1.12146 (3) obj. -131.28 iterations 11
Cbc0038I Pass   9: suminf.    0.79439 (2) obj. -143.598 iterations 3
Cbc0038I Pass  10: suminf.    0.29762 (2) obj. -131.28 iterations 3
Cbc0038I Pass  11: suminf.    0.29762 (2) obj. -131.28 iterations 0
Cbc0038I Pass  12: suminf.    0.90987 (2) obj. -131.28 iterations 2
Cbc0038I Pass  13: suminf.    0.87426 (3) obj. -131.28 iterations 13
Cbc0038I Pass  14: suminf.    0.86734 (3) obj. -131.452 iterations 3
Cbc0038I Pass  15: suminf.    0.93456 (3) obj. -131.28 iterations 5
Cbc0038I Pass  16: suminf.    0.92913 (3) obj. -131.28 iterations 1
Cbc0038I Pass  17: suminf.    0.42830 (2) obj. -131.28 iterations 2
Cbc0038I Pass  18: suminf.    0.42830 (2) obj. -131.28 iterations 0
Cbc0038I Pass  19: suminf.    0.72862 (2) obj. -131.28 iterations 1
Cbc0038I Pass  20: suminf.    0.64486 (2) obj. -140.215 iterations 1
Cbc0038I Pass  21: suminf.    1.21735 (4) obj. -131.28 iterations 4
Cbc0038I Pass  22: suminf.    0.72793 (3) obj. -138.132 iterations 3
Cbc0038I Pass  23: suminf.    0.57319 (2) obj. -131.28 iterations 3
Cbc0038I Pass  24: suminf.    0.57319 (2) obj. -131.28 iterations 0
Cbc0038I Pass  25: suminf.    0.70050 (2) obj. -131.28 iterations 3
Cbc0038I Pass  26: suminf.    0.64486 (2) obj. -137.215 iterations 1
Cbc0038I Pass  27: suminf.    1.60543 (5) obj. -134.32 iterations 9
Cbc0038I Pass  28: suminf.    1.60543 (5) obj. -134.32 iterations 0
Cbc0038I Pass  29: suminf.    0.98362 (3) obj. -131.28 iterations 6
Cbc0038I Pass  30: suminf.    0.98362 (3) obj. -131.28 iterations 1
Cbc0038I Pass  31: suminf.    0.47660 (2) obj. -131.28 iterations 1
Cbc0038I Pass  32: suminf.    0.47660 (2) obj. -131.28 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -121 to -141 (0.02 seconds)
Cbc0038I Round again with cutoff of -156.56
Cbc0038I Pass  32: suminf.    1.59587 (10) obj. -156.56 iterations 7
Cbc0038I Pass  33: suminf.    1.59587 (10) obj. -156.56 iterations 6
Cbc0038I Pass  34: suminf.    0.59787 (2) obj. -156.56 iterations 10
Cbc0038I Pass  35: suminf.    0.58411 (2) obj. -158.028 iterations 1
Cbc0038I Pass  36: suminf.    0.54126 (2) obj. -156.56 iterations 3
Cbc0038I Pass  37: suminf.    0.54126 (2) obj. -156.56 iterations 0
Cbc0038I Pass  38: suminf.    1.32586 (7) obj. -156.56 iterations 12
Cbc0038I Pass  39: suminf.    1.24781 (6) obj. -157.653 iterations 4
Cbc0038I Pass  40: suminf.    1.07601 (9) obj. -156.56 iterations 10
Cbc0038I Pass  41: suminf.    1.07601 (9) obj. -156.56 iterations 0
Cbc0038I Pass  42: suminf.    0.84300 (2) obj. -156.56 iterations 12
Cbc0038I Pass  43: suminf.    0.12903 (1) obj. -171.613 iterations 2
Cbc0038I Pass  44: suminf.    0.28583 (1) obj. -156.56 iterations 1
Cbc0038I Pass  45: suminf.    3.03461 (9) obj. -156.56 iterations 15
Cbc0038I Pass  46: suminf.    2.01705 (6) obj. -156.56 iterations 3
Cbc0038I Pass  47: suminf.    0.66800 (2) obj. -156.56 iterations 5
Cbc0038I Pass  48: suminf.    0.12903 (1) obj. -157.613 iterations 2
Cbc0038I Pass  49: suminf.    0.14000 (1) obj. -156.56 iterations 1
Cbc0038I Pass  50: suminf.    2.24963 (6) obj. -156.56 iterations 8
Cbc0038I Pass  51: suminf.    2.19505 (7) obj. -156.56 iterations 2
Cbc0038I Pass  52: suminf.    0.15818 (1) obj. -156.56 iterations 7
Cbc0038I Solution found of -167
Cbc0038I Rounding solution of -175 is better than previous of -167

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -187.64
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  53: suminf.    5.05856 (18) obj. -187.64 iterations 2
Cbc0038I Pass  54: suminf.    4.95719 (19) obj. -187.64 iterations 2
Cbc0038I Pass  55: suminf.    4.95719 (19) obj. -187.64 iterations 0
Cbc0038I Pass  56: suminf.    0.64521 (3) obj. -187.64 iterations 26
Cbc0038I Pass  57: suminf.    0.64521 (3) obj. -187.64 iterations 0
Cbc0038I Pass  58: suminf.    0.97949 (3) obj. -187.64 iterations 2
Cbc0038I Pass  59: suminf.    0.49589 (3) obj. -187.64 iterations 2
Cbc0038I Pass  60: suminf.    0.64521 (3) obj. -187.64 iterations 2
Cbc0038I Pass  61: suminf.    0.88006 (3) obj. -195.595 iterations 2
Cbc0038I Pass  62: suminf.    2.15773 (6) obj. -187.64 iterations 8
Cbc0038I Pass  63: suminf.    1.14577 (4) obj. -187.64 iterations 2
Cbc0038I Pass  64: suminf.    0.87949 (3) obj. -187.64 iterations 3
Cbc0038I Pass  65: suminf.    0.54135 (3) obj. -187.64 iterations 1
Cbc0038I Pass  66: suminf.    0.74602 (3) obj. -187.64 iterations 3
Cbc0038I Pass  67: suminf.    0.74602 (3) obj. -187.64 iterations 1
Cbc0038I Pass  68: suminf.    2.26189 (6) obj. -187.64 iterations 3
Cbc0038I Pass  69: suminf.    1.63221 (5) obj. -187.64 iterations 1
Cbc0038I Pass  70: suminf.    1.64830 (5) obj. -187.64 iterations 5
Cbc0038I Pass  71: suminf.    1.64830 (5) obj. -187.64 iterations 2
Cbc0038I Pass  72: suminf.    0.87254 (4) obj. -187.64 iterations 6
Cbc0038I Pass  73: suminf.    0.87254 (4) obj. -187.64 iterations 0
Cbc0038I Pass  74: suminf.    1.38643 (4) obj. -187.64 iterations 6
Cbc0038I Pass  75: suminf.    0.87254 (4) obj. -187.64 iterations 1
Cbc0038I Pass  76: suminf.    2.37963 (7) obj. -187.64 iterations 12
Cbc0038I Pass  77: suminf.    1.64515 (5) obj. -187.64 iterations 3
Cbc0038I Pass  78: suminf.    0.87254 (4) obj. -187.64 iterations 5
Cbc0038I Pass  79: suminf.    0.87254 (4) obj. -187.64 iterations 0
Cbc0038I Pass  80: suminf.    1.38643 (4) obj. -187.64 iterations 4
Cbc0038I Pass  81: suminf.    0.87254 (4) obj. -187.64 iterations 1
Cbc0038I Pass  82: suminf.    1.95394 (6) obj. -187.64 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -175 - took 0.02 seconds
Cbc0012I Integer solution of -175 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -184 found by DiveCoefficient after 26 iterations and 0 nodes (0.04 seconds)
Cbc0031I 2 added rows had average density of 11
Cbc0013I At root node, 2 cuts changed objective from -205.63438 to -184 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 56 row cuts average 2.0 elements, 18 column cuts (18 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -184, took 26 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

