Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-23) rows, 15 (-9) columns and 72 (-57) elements
Clp1000I sum of infeasibilities 0.000201323 - average 8.38847e-06, 4 fixed columns
Coin0506I Presolve 16 (-8) rows, 11 (-4) columns and 48 (-24) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Coin0511I After Postsolve, objective 125.96782, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Coin0511I After Postsolve, objective 125.96782, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.9678215 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.731%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.64975
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -95.5 iterations 5
Cbc0038I Solution found of -95.5
Cbc0038I Relaxing continuous gives -95.5
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 10 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -95.5 to -101.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -104.397
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18929 (1) obj. -104.397 iterations 1
Cbc0038I Pass   3: suminf.    0.15246 (1) obj. -104.397 iterations 1
Cbc0038I Pass   4: suminf.    0.19639 (4) obj. -104.397 iterations 2
Cbc0038I Pass   5: suminf.    0.15246 (1) obj. -104.397 iterations 2
Cbc0038I Pass   6: suminf.    1.60172 (5) obj. -104.397 iterations 6
Cbc0038I Pass   7: suminf.    0.73609 (4) obj. -104.397 iterations 4
Cbc0038I Pass   8: suminf.    0.59526 (3) obj. -104.397 iterations 2
Cbc0038I Pass   9: suminf.    0.15246 (1) obj. -104.397 iterations 5
Cbc0038I Pass  10: suminf.    1.22222 (3) obj. -104.397 iterations 2
Cbc0038I Pass  11: suminf.    0.59526 (3) obj. -104.397 iterations 3
Cbc0038I Pass  12: suminf.    0.15246 (1) obj. -104.397 iterations 5
Cbc0038I Pass  13: suminf.    1.54295 (4) obj. -104.397 iterations 4
Cbc0038I Pass  14: suminf.    1.38422 (4) obj. -104.397 iterations 2
Cbc0038I Pass  15: suminf.    0.15246 (1) obj. -104.397 iterations 9
Cbc0038I Pass  16: suminf.    0.18929 (1) obj. -104.397 iterations 2
Cbc0038I Pass  17: suminf.    0.70646 (3) obj. -104.397 iterations 4
Cbc0038I Pass  18: suminf.    0.49288 (2) obj. -104.397 iterations 2
Cbc0038I Pass  19: suminf.    0.09819 (1) obj. -104.397 iterations 3
Cbc0038I Pass  20: suminf.    0.09819 (1) obj. -104.397 iterations 0
Cbc0038I Pass  21: suminf.    0.57237 (2) obj. -104.397 iterations 2
Cbc0038I Pass  22: suminf.    0.46775 (4) obj. -104.397 iterations 5
Cbc0038I Pass  23: suminf.    0.18929 (1) obj. -104.397 iterations 3
Cbc0038I Pass  24: suminf.    0.15246 (1) obj. -104.397 iterations 2
Cbc0038I Pass  25: suminf.    0.09819 (1) obj. -104.397 iterations 2
Cbc0038I Pass  26: suminf.    0.49288 (2) obj. -104.397 iterations 4
Cbc0038I Pass  27: suminf.    0.49288 (2) obj. -104.397 iterations 0
Cbc0038I Pass  28: suminf.    0.09819 (1) obj. -104.397 iterations 3
Cbc0038I Pass  29: suminf.    0.09819 (1) obj. -104.397 iterations 0
Cbc0038I Pass  30: suminf.    0.57237 (2) obj. -104.397 iterations 2
Cbc0038I Pass  31: suminf.    0.77800 (3) obj. -104.397 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -101.5 - took 0.01 seconds
Cbc0012I Integer solution of -101.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 10 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -125.96782 to -125.96782 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -101.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-18) rows, 33 (-11) columns and 206 (-154) elements
Clp1000I sum of infeasibilities 7.88932e-12 - average 2.81761e-13, 15 fixed columns
Coin0506I Presolve 15 (-13) rows, 18 (-15) columns and 90 (-116) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 4.0237892 - largest nonzero change 2.1432324e-05 ( 0.00091573104%) - largest zero change 0
Clp0000I Optimal - objective value 201.07149
Clp0000I Optimal - objective value 201.07149
Coin0511I After Postsolve, objective 201.07149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 201.07149
Clp0000I Optimal - objective value 201.07149
Clp0000I Optimal - objective value 201.07149
Coin0511I After Postsolve, objective 201.07149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 201.0714948 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 33 columns (33 integer (33 of which binary)) and 212 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.141%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.85373
Cbc0038I Pass   1: suminf.    1.14412 (6) obj. -168.757 iterations 3
Cbc0038I Solution found of -131
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 33 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -136.795
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.14412 (6) obj. -168.757 iterations 0
Cbc0038I Pass   3: suminf.    0.22245 (2) obj. -136.795 iterations 8
Cbc0038I Pass   4: suminf.    0.08000 (1) obj. -140.7 iterations 5
Cbc0038I Pass   5: suminf.    0.16220 (1) obj. -136.795 iterations 1
Cbc0038I Pass   6: suminf.    1.30802 (4) obj. -136.795 iterations 5
Cbc0038I Pass   7: suminf.    0.61145 (3) obj. -136.795 iterations 2
Cbc0038I Pass   8: suminf.    0.08617 (2) obj. -136.795 iterations 7
Cbc0038I Pass   9: suminf.    0.64991 (2) obj. -136.795 iterations 1
Cbc0038I Pass  10: suminf.    0.43316 (2) obj. -147.548 iterations 1
Cbc0038I Pass  11: suminf.    0.09560 (2) obj. -136.795 iterations 3
Cbc0038I Pass  12: suminf.    0.20500 (2) obj. -144.45 iterations 4
Cbc0038I Pass  13: suminf.    0.20500 (2) obj. -144.45 iterations 1
Cbc0038I Pass  14: suminf.    0.25904 (2) obj. -136.795 iterations 3
Cbc0038I Pass  15: suminf.    0.15076 (2) obj. -136.795 iterations 1
Cbc0038I Pass  16: suminf.    0.62975 (2) obj. -136.795 iterations 1
Cbc0038I Pass  17: suminf.    0.43316 (2) obj. -146.548 iterations 1
Cbc0038I Pass  18: suminf.    1.27130 (8) obj. -136.795 iterations 9
Cbc0038I Pass  19: suminf.    0.91490 (4) obj. -136.795 iterations 6
Cbc0038I Pass  20: suminf.    0.08617 (2) obj. -136.795 iterations 6
Cbc0038I Pass  21: suminf.    0.08617 (2) obj. -136.795 iterations 0
Cbc0038I Pass  22: suminf.    0.64991 (2) obj. -136.795 iterations 1
Cbc0038I Pass  23: suminf.    0.43316 (2) obj. -147.548 iterations 1
Cbc0038I Pass  24: suminf.    0.09560 (2) obj. -136.795 iterations 3
Cbc0038I Pass  25: suminf.    0.64753 (4) obj. -136.795 iterations 5
Cbc0038I Pass  26: suminf.    0.45657 (3) obj. -139.194 iterations 2
Cbc0038I Pass  27: suminf.    0.74936 (2) obj. -136.795 iterations 4
Cbc0038I Pass  28: suminf.    0.34455 (2) obj. -136.795 iterations 1
Cbc0038I Pass  29: suminf.    0.56928 (2) obj. -136.795 iterations 1
Cbc0038I Pass  30: suminf.    0.43316 (2) obj. -143.548 iterations 1
Cbc0038I Pass  31: suminf.    2.03398 (7) obj. -136.795 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 33 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -131 to -138 (0.01 seconds)
Cbc0038I Round again with cutoff of -147.691
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.14412 (6) obj. -168.757 iterations 0
Cbc0038I Pass  32: suminf.    0.64067 (2) obj. -147.691 iterations 9
Cbc0038I Pass  33: suminf.    0.53159 (2) obj. -147.691 iterations 6
Cbc0038I Pass  34: suminf.    0.51091 (2) obj. -147.691 iterations 1
Cbc0038I Pass  35: suminf.    0.43316 (2) obj. -151.548 iterations 1
Cbc0038I Pass  36: suminf.    0.71917 (2) obj. -147.691 iterations 3
Cbc0038I Pass  37: suminf.    0.65071 (3) obj. -147.691 iterations 2
Cbc0038I Pass  38: suminf.    0.64067 (2) obj. -147.691 iterations 1
Cbc0038I Pass  39: suminf.    0.53159 (2) obj. -147.691 iterations 6
Cbc0038I Pass  40: suminf.    0.51091 (2) obj. -147.691 iterations 1
Cbc0038I Pass  41: suminf.    0.43316 (2) obj. -151.548 iterations 1
Cbc0038I Pass  42: suminf.    0.71917 (2) obj. -147.691 iterations 3
Cbc0038I Pass  43: suminf.    0.65071 (3) obj. -147.691 iterations 2
Cbc0038I Pass  44: suminf.    0.64067 (2) obj. -147.691 iterations 1
Cbc0038I Pass  45: suminf.    0.53159 (2) obj. -147.691 iterations 6
Cbc0038I Pass  46: suminf.    0.51091 (2) obj. -147.691 iterations 1
Cbc0038I Pass  47: suminf.    0.43316 (2) obj. -151.548 iterations 1
Cbc0038I Pass  48: suminf.    0.71917 (2) obj. -147.691 iterations 3
Cbc0038I Pass  49: suminf.    0.65071 (3) obj. -147.691 iterations 2
Cbc0038I Pass  50: suminf.    0.64067 (2) obj. -147.691 iterations 1
Cbc0038I Pass  51: suminf.    0.53159 (2) obj. -147.691 iterations 6
Cbc0038I Pass  52: suminf.    0.51091 (2) obj. -147.691 iterations 1
Cbc0038I Pass  53: suminf.    0.43316 (2) obj. -151.548 iterations 1
Cbc0038I Pass  54: suminf.    0.71917 (2) obj. -147.691 iterations 3
Cbc0038I Pass  55: suminf.    0.65071 (3) obj. -147.691 iterations 2
Cbc0038I Pass  56: suminf.    0.64067 (2) obj. -147.691 iterations 1
Cbc0038I Pass  57: suminf.    0.53159 (2) obj. -147.691 iterations 6
Cbc0038I Pass  58: suminf.    0.51091 (2) obj. -147.691 iterations 1
Cbc0038I Pass  59: suminf.    0.43316 (2) obj. -151.548 iterations 1
Cbc0038I Pass  60: suminf.    0.71917 (2) obj. -147.691 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 33 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -138 - took 0.01 seconds
Cbc0012I Integer solution of -138 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 28 rows 33 columns, reduced to 3 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 16
Cbc0013I At root node, 1 cuts changed objective from -184.45546 to -142.13436 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 1.9 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -138, took 15 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-23) rows, 15 (-9) columns and 72 (-57) elements
Clp1000I sum of infeasibilities 0.000201323 - average 8.38847e-06, 4 fixed columns
Coin0506I Presolve 16 (-8) rows, 11 (-4) columns and 48 (-24) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Coin0511I After Postsolve, objective 125.96782, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Coin0511I After Postsolve, objective 125.96782, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.9678215 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.731%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.64975
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -95.5 iterations 5
Cbc0038I Solution found of -95.5
Cbc0038I Relaxing continuous gives -95.5
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 10 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -95.5 to -101.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -104.397
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18929 (1) obj. -104.397 iterations 1
Cbc0038I Pass   3: suminf.    0.15246 (1) obj. -104.397 iterations 1
Cbc0038I Pass   4: suminf.    0.19639 (4) obj. -104.397 iterations 2
Cbc0038I Pass   5: suminf.    0.15246 (1) obj. -104.397 iterations 2
Cbc0038I Pass   6: suminf.    1.60172 (5) obj. -104.397 iterations 6
Cbc0038I Pass   7: suminf.    0.73609 (4) obj. -104.397 iterations 4
Cbc0038I Pass   8: suminf.    0.59526 (3) obj. -104.397 iterations 2
Cbc0038I Pass   9: suminf.    0.15246 (1) obj. -104.397 iterations 5
Cbc0038I Pass  10: suminf.    1.22222 (3) obj. -104.397 iterations 2
Cbc0038I Pass  11: suminf.    0.59526 (3) obj. -104.397 iterations 3
Cbc0038I Pass  12: suminf.    0.15246 (1) obj. -104.397 iterations 5
Cbc0038I Pass  13: suminf.    1.54295 (4) obj. -104.397 iterations 4
Cbc0038I Pass  14: suminf.    1.38422 (4) obj. -104.397 iterations 2
Cbc0038I Pass  15: suminf.    0.15246 (1) obj. -104.397 iterations 9
Cbc0038I Pass  16: suminf.    0.18929 (1) obj. -104.397 iterations 2
Cbc0038I Pass  17: suminf.    0.70646 (3) obj. -104.397 iterations 4
Cbc0038I Pass  18: suminf.    0.49288 (2) obj. -104.397 iterations 2
Cbc0038I Pass  19: suminf.    0.09819 (1) obj. -104.397 iterations 3
Cbc0038I Pass  20: suminf.    0.09819 (1) obj. -104.397 iterations 0
Cbc0038I Pass  21: suminf.    0.57237 (2) obj. -104.397 iterations 2
Cbc0038I Pass  22: suminf.    0.46775 (4) obj. -104.397 iterations 5
Cbc0038I Pass  23: suminf.    0.18929 (1) obj. -104.397 iterations 3
Cbc0038I Pass  24: suminf.    0.15246 (1) obj. -104.397 iterations 2
Cbc0038I Pass  25: suminf.    0.09819 (1) obj. -104.397 iterations 2
Cbc0038I Pass  26: suminf.    0.49288 (2) obj. -104.397 iterations 4
Cbc0038I Pass  27: suminf.    0.49288 (2) obj. -104.397 iterations 0
Cbc0038I Pass  28: suminf.    0.09819 (1) obj. -104.397 iterations 3
Cbc0038I Pass  29: suminf.    0.09819 (1) obj. -104.397 iterations 0
Cbc0038I Pass  30: suminf.    0.57237 (2) obj. -104.397 iterations 2
Cbc0038I Pass  31: suminf.    0.77800 (3) obj. -104.397 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -101.5 - took 0.01 seconds
Cbc0012I Integer solution of -101.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 10 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -125.96782 to -125.96782 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -101.5, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-21) rows, 30 (-15) columns and 175 (-186) elements
Clp1000I sum of infeasibilities 3.07921e-09 - average 1.18431e-10, 21 fixed columns
Coin0506I Presolve 7 (-19) rows, 9 (-21) columns and 28 (-147) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 78.872365
Clp0000I Optimal - objective value 78.872365
Coin0511I After Postsolve, objective 78.872365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9367407 - largest nonzero change 0 ( 0%) - largest zero change 2.0708098e-05
Clp0000I Optimal - objective value 154.98158
Clp0000I Optimal - objective value 154.98158
Clp0000I Optimal - objective value 154.98158
Coin0511I After Postsolve, objective 154.98158, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.9815772 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 30 columns (30 integer (30 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.361%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.84415
Cbc0038I Pass   1: suminf.    1.29008 (6) obj. -132.549 iterations 9
Cbc0038I Solution found of -95.5
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 30 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -100.047
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.29008 (6) obj. -132.549 iterations 0
Cbc0038I Pass   3: suminf.    0.25263 (1) obj. -100.047 iterations 8
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -107.5 iterations 3
Cbc0038I Pass   5: suminf.    1.31900 (5) obj. -100.047 iterations 6
Cbc0038I Pass   6: suminf.    1.02593 (4) obj. -100.047 iterations 2
Cbc0038I Pass   7: suminf.    0.62500 (3) obj. -120.167 iterations 1
Cbc0038I Pass   8: suminf.    1.56353 (5) obj. -100.047 iterations 4
Cbc0038I Pass   9: suminf.    1.46124 (6) obj. -100.047 iterations 1
Cbc0038I Pass  10: suminf.    0.25263 (1) obj. -100.047 iterations 7
Cbc0038I Pass  11: suminf.    0.33333 (1) obj. -107.5 iterations 2
Cbc0038I Pass  12: suminf.    0.67315 (4) obj. -100.047 iterations 9
Cbc0038I Pass  13: suminf.    0.45833 (2) obj. -101 iterations 2
Cbc0038I Pass  14: suminf.    0.51722 (4) obj. -100.047 iterations 6
Cbc0038I Pass  15: suminf.    0.51645 (5) obj. -100.047 iterations 1
Cbc0038I Pass  16: suminf.    0.79830 (3) obj. -100.047 iterations 5
Cbc0038I Pass  17: suminf.    2.15230 (7) obj. -100.047 iterations 9
Cbc0038I Pass  18: suminf.    1.07655 (6) obj. -100.047 iterations 8
Cbc0038I Pass  19: suminf.    0.51837 (4) obj. -100.047 iterations 4
Cbc0038I Pass  20: suminf.    0.37143 (3) obj. -100.768 iterations 6
Cbc0038I Pass  21: suminf.    0.16667 (1) obj. -100.667 iterations 2
Cbc0038I Pass  22: suminf.    0.47485 (1) obj. -100.047 iterations 4
Cbc0038I Pass  23: suminf.    0.33333 (1) obj. -103.5 iterations 1
Cbc0038I Pass  24: suminf.    1.17068 (6) obj. -100.047 iterations 8
Cbc0038I Pass  25: suminf.    0.66667 (2) obj. -103.167 iterations 3
Cbc0038I Pass  26: suminf.    0.46960 (1) obj. -100.047 iterations 2
Cbc0038I Pass  27: suminf.    0.33333 (1) obj. -102.5 iterations 1
Cbc0038I Pass  28: suminf.    1.04560 (5) obj. -106.741 iterations 7
Cbc0038I Pass  29: suminf.    0.85556 (3) obj. -107.311 iterations 2
Cbc0038I Pass  30: suminf.    0.47485 (1) obj. -100.047 iterations 3
Cbc0038I Pass  31: suminf.    0.33333 (1) obj. -103.5 iterations 1
Cbc0038I Rounding solution of -101.5 is better than previous of -95.5

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 30 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -108.895
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.29008 (6) obj. -132.549 iterations 0
Cbc0038I Pass  32: suminf.    0.42050 (2) obj. -108.895 iterations 8
Cbc0038I Pass  33: suminf.    0.42050 (2) obj. -108.895 iterations 0
Cbc0038I Pass  34: suminf.    0.43575 (2) obj. -108.895 iterations 5
Cbc0038I Pass  35: suminf.    2.22970 (8) obj. -108.895 iterations 9
Cbc0038I Pass  36: suminf.    1.96300 (8) obj. -108.895 iterations 3
Cbc0038I Pass  37: suminf.    0.46637 (2) obj. -108.895 iterations 11
Cbc0038I Pass  38: suminf.    0.46637 (2) obj. -108.895 iterations 0
Cbc0038I Pass  39: suminf.    0.50309 (5) obj. -108.895 iterations 4
Cbc0038I Pass  40: suminf.    0.80678 (3) obj. -108.895 iterations 5
Cbc0038I Pass  41: suminf.    1.75620 (9) obj. -108.895 iterations 9
Cbc0038I Pass  42: suminf.    1.36413 (6) obj. -108.895 iterations 3
Cbc0038I Pass  43: suminf.    0.78335 (4) obj. -108.895 iterations 11
Cbc0038I Pass  44: suminf.    0.77220 (5) obj. -108.895 iterations 2
Cbc0038I Pass  45: suminf.    0.72872 (4) obj. -108.895 iterations 3
Cbc0038I Pass  46: suminf.    0.62378 (2) obj. -108.895 iterations 5
Cbc0038I Pass  47: suminf.    0.36696 (1) obj. -108.895 iterations 9
Cbc0038I Pass  48: suminf.    0.25000 (1) obj. -111 iterations 3
Cbc0038I Pass  49: suminf.    0.36696 (1) obj. -108.895 iterations 1
Cbc0038I Pass  50: suminf.    1.45446 (8) obj. -108.895 iterations 8
Cbc0038I Pass  51: suminf.    0.30592 (2) obj. -108.895 iterations 2
Cbc0038I Pass  52: suminf.    0.30592 (2) obj. -108.895 iterations 0
Cbc0038I Pass  53: suminf.    0.85261 (2) obj. -108.895 iterations 2
Cbc0038I Pass  54: suminf.    0.91446 (5) obj. -108.895 iterations 5
Cbc0038I Pass  55: suminf.    0.88674 (3) obj. -108.895 iterations 7
Cbc0038I Pass  56: suminf.    0.61842 (2) obj. -108.895 iterations 2
Cbc0038I Pass  57: suminf.    0.82199 (2) obj. -108.895 iterations 2
Cbc0038I Pass  58: suminf.    0.80969 (3) obj. -108.895 iterations 7
Cbc0038I Pass  59: suminf.    0.72619 (2) obj. -111.619 iterations 2
Cbc0038I Pass  60: suminf.    0.55592 (2) obj. -108.895 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 30 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -101.5 - took 0.02 seconds
Cbc0012I Integer solution of -101.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 26 rows 30 columns, reduced to 6 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -125.01465 to -125.01465 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -101.5, took 1 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

