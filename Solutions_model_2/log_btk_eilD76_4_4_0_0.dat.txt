Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 3.41259e-05 - average 2.4551e-07, 8 fixed columns
Coin0506I Presolve 123 (-16) rows, 68 (-8) columns and 374 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.5446472 - largest nonzero change 0 ( 0%) - largest zero change 1.836629e-05
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Coin0511I After Postsolve, objective 54.342905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Coin0511I After Postsolve, objective 54.342905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34290506 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 10.3314
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.09622 iterations 61
Cbc0038I Solution found of 3.09622
Cbc0038I Relaxing continuous gives 3.09622
Cbc0038I Rounding solution of 0.15896 is better than previous of 3.09622

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 95 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 0.15896 to -30.3794 (0.07 seconds)
Cbc0038I Round again with cutoff of -32.7758
Cbc0038I Pass   2: suminf.    5.03689 (21) obj. -32.7758 iterations 26
Cbc0038I Pass   3: suminf.    2.50590 (9) obj. -32.7758 iterations 27
Cbc0038I Pass   4: suminf.    1.80962 (7) obj. -32.7758 iterations 9
Cbc0038I Pass   5: suminf.    2.10588 (7) obj. -32.7758 iterations 7
Cbc0038I Pass   6: suminf.    1.65351 (7) obj. -32.7758 iterations 8
Cbc0038I Pass   7: suminf.    1.65351 (7) obj. -32.7758 iterations 2
Cbc0038I Pass   8: suminf.    2.92959 (8) obj. -32.7758 iterations 11
Cbc0038I Pass   9: suminf.    2.81349 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  10: suminf.    2.81349 (8) obj. -32.7758 iterations 0
Cbc0038I Pass  11: suminf.    2.04027 (8) obj. -32.7758 iterations 4
Cbc0038I Pass  12: suminf.    2.01771 (7) obj. -32.7758 iterations 1
Cbc0038I Pass  13: suminf.    2.38369 (9) obj. -32.7758 iterations 8
Cbc0038I Pass  14: suminf.    2.35295 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  15: suminf.    2.58400 (8) obj. -32.7758 iterations 5
Cbc0038I Pass  16: suminf.    2.58987 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  17: suminf.    2.75301 (8) obj. -32.7758 iterations 7
Cbc0038I Pass  18: suminf.    3.92856 (11) obj. -32.7758 iterations 18
Cbc0038I Pass  19: suminf.    3.04069 (10) obj. -32.7758 iterations 12
Cbc0038I Pass  20: suminf.    2.38369 (9) obj. -32.7758 iterations 12
Cbc0038I Pass  21: suminf.    2.35295 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  22: suminf.    2.58400 (8) obj. -32.7758 iterations 5
Cbc0038I Pass  23: suminf.    2.58987 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  24: suminf.    2.75301 (8) obj. -32.7758 iterations 7
Cbc0038I Pass  25: suminf.    2.05083 (12) obj. -32.7758 iterations 20
Cbc0038I Pass  26: suminf.    1.58898 (6) obj. -32.7758 iterations 13
Cbc0038I Pass  27: suminf.    1.80759 (6) obj. -32.7758 iterations 5
Cbc0038I Pass  28: suminf.    1.58696 (6) obj. -32.7758 iterations 3
Cbc0038I Pass  29: suminf.    1.88356 (6) obj. -32.7758 iterations 4
Cbc0038I Pass  30: suminf.    1.52524 (5) obj. -32.7758 iterations 3
Cbc0038I Pass  31: suminf.    1.52524 (5) obj. -32.7758 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 99 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -30.3794 - took 0.10 seconds
Cbc0012I Integer solution of -30.37938 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 95 rows 54 columns
Cbc0031I 33 added rows had average density of 32.909091
Cbc0013I At root node, 33 cuts changed objective from -54.342905 to -46.328021 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18381 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2320 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.37938 best solution, best possible -46.328021 (1.17 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 32 rows 23 columns
Cbc0016I Integer solution of -30.80046 found by strong branching after 11815 iterations and 68 nodes (1.44 seconds)
Cbc0001I Search completed - best objective -30.80046, took 11855 iterations and 70 nodes (1.44 seconds)
Cbc0032I Strong branching done 784 times (15954 iterations), fathomed 8 nodes and fixed 54 variables
Cbc0035I Maximum depth 19, 153 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 119 (-33) columns and 2164 (-1139) elements
Clp1000I sum of infeasibilities 4.86442e-08 - average 4.50409e-10, 66 fixed columns
Coin0506I Presolve 42 (-66) rows, 53 (-66) columns and 184 (-1980) elements
Clp0006I 0  Obj -20.768239 Dual inf 0.91402682 (53)
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 3.8406741 - largest nonzero change 4.207308e-05 ( 0.00091204228%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value -15.175301
Clp0000I Optimal - objective value -15.175301
Coin0511I After Postsolve, objective -15.175301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -15.175301 Dual inf 111.34279 (44)
Clp0014I Perturbing problem by 0.001% of 1.9049901 - largest nonzero change 2.6774595e-05 ( 0.0026774595%) - largest zero change 2.9633539e-05
Clp0000I Optimal - objective value 62.266465
Clp0000I Optimal - objective value 62.266465
Clp0000I Optimal - objective value 62.266465
Coin0511I After Postsolve, objective 62.266465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.26646463 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 122 columns (122 integer (122 of which binary)) and 2180 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.828%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.24576
Cbc0038I Pass   1: suminf.    2.45001 (37) obj. -47.391 iterations 17
Cbc0038I Pass   2: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass   3: suminf.    0.34199 (8) obj. -1.33284 iterations 29
Cbc0038I Solution found of 7.2817
Cbc0038I Rounding solution of 2.40936 is better than previous of 7.2817

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 122 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.38424
Cbc0038I Pass   4: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass   5: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass   6: suminf.    1.04020 (21) obj. -19.3061 iterations 16
Cbc0038I Pass   7: suminf.    0.61708 (2) obj. -3.38424 iterations 27
Cbc0038I Pass   8: suminf.    0.51418 (2) obj. -3.38424 iterations 1
Cbc0038I Pass   9: suminf.    0.62694 (2) obj. -3.38424 iterations 3
Cbc0038I Pass  10: suminf.    0.50490 (2) obj. -3.38424 iterations 1
Cbc0038I Pass  11: suminf.    1.05656 (10) obj. -3.38424 iterations 28
Cbc0038I Pass  12: suminf.    0.92631 (9) obj. -5.33805 iterations 12
Cbc0038I Pass  13: suminf.    1.26090 (6) obj. -3.38424 iterations 18
Cbc0038I Pass  14: suminf.    1.06883 (9) obj. -3.38424 iterations 5
Cbc0038I Pass  15: suminf.    0.68299 (3) obj. -3.38424 iterations 7
Cbc0038I Pass  16: suminf.    0.53309 (2) obj. -3.38424 iterations 2
Cbc0038I Pass  17: suminf.    0.62470 (2) obj. -3.38424 iterations 2
Cbc0038I Pass  18: suminf.    2.11907 (13) obj. -3.38424 iterations 39
Cbc0038I Pass  19: suminf.    0.96438 (10) obj. -3.38424 iterations 11
Cbc0038I Pass  20: suminf.    0.81636 (5) obj. -3.38424 iterations 17
Cbc0038I Pass  21: suminf.    0.64007 (6) obj. -3.38424 iterations 12
Cbc0038I Pass  22: suminf.    1.43048 (5) obj. -3.38424 iterations 7
Cbc0038I Pass  23: suminf.    1.43048 (5) obj. -3.38424 iterations 0
Cbc0038I Pass  24: suminf.    1.64349 (5) obj. -3.38424 iterations 8
Cbc0038I Pass  25: suminf.    0.76677 (4) obj. -3.46162 iterations 4
Cbc0038I Pass  26: suminf.    1.70868 (5) obj. -3.38424 iterations 9
Cbc0038I Pass  27: suminf.    0.78612 (4) obj. -3.38424 iterations 5
Cbc0038I Pass  28: suminf.    2.36947 (15) obj. -3.38424 iterations 33
Cbc0038I Pass  29: suminf.    1.93558 (12) obj. -3.38424 iterations 12
Cbc0038I Pass  30: suminf.    1.72779 (12) obj. -3.38424 iterations 3
Cbc0038I Pass  31: suminf.    1.78600 (8) obj. -3.38424 iterations 15
Cbc0038I Pass  32: suminf.    1.29161 (7) obj. -3.72418 iterations 5
Cbc0038I Pass  33: suminf.    1.78930 (9) obj. -3.38424 iterations 5
Cbc0038I Rounding solution of -0.752 is better than previous of 2.40936

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 122 columns, reduced to 35 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -0.752 to -3.03127 (0.08 seconds)
Cbc0038I Round again with cutoff of -13.8125
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass  34: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass  35: suminf.    1.46016 (27) obj. -29.5101 iterations 10
Cbc0038I Pass  36: suminf.    1.01077 (7) obj. -13.8125 iterations 35
Cbc0038I Pass  37: suminf.    1.01077 (7) obj. -13.8125 iterations 1
Cbc0038I Pass  38: suminf.    0.90600 (6) obj. -13.8125 iterations 11
Cbc0038I Pass  39: suminf.    0.55019 (5) obj. -13.8125 iterations 6
Cbc0038I Pass  40: suminf.    0.90600 (6) obj. -13.8125 iterations 5
Cbc0038I Pass  41: suminf.    1.14809 (9) obj. -13.8125 iterations 17
Cbc0038I Pass  42: suminf.    1.14130 (8) obj. -13.8125 iterations 5
Cbc0038I Pass  43: suminf.    0.91371 (6) obj. -13.8125 iterations 8
Cbc0038I Pass  44: suminf.    0.59885 (5) obj. -13.8125 iterations 7
Cbc0038I Pass  45: suminf.    0.91371 (6) obj. -13.8125 iterations 5
Cbc0038I Pass  46: suminf.    1.65346 (15) obj. -13.8125 iterations 28
Cbc0038I Pass  47: suminf.    1.65346 (15) obj. -13.8125 iterations 1
Cbc0038I Pass  48: suminf.    1.29966 (8) obj. -13.8125 iterations 23
Cbc0038I Pass  49: suminf.    0.93942 (8) obj. -13.8125 iterations 2
Cbc0038I Pass  50: suminf.    1.10029 (6) obj. -13.8125 iterations 16
Cbc0038I Pass  51: suminf.    1.10029 (6) obj. -13.8125 iterations 0
Cbc0038I Pass  52: suminf.    0.59627 (5) obj. -13.8125 iterations 9
Cbc0038I Pass  53: suminf.    0.46208 (4) obj. -13.8779 iterations 4
Cbc0038I Pass  54: suminf.    0.63659 (5) obj. -13.8125 iterations 8
Cbc0038I Pass  55: suminf.    1.53254 (13) obj. -13.8125 iterations 25
Cbc0038I Pass  56: suminf.    1.53254 (13) obj. -13.8125 iterations 3
Cbc0038I Pass  57: suminf.    1.15872 (6) obj. -13.8125 iterations 10
Cbc0038I Pass  58: suminf.    1.10029 (6) obj. -13.8125 iterations 3
Cbc0038I Pass  59: suminf.    0.59627 (5) obj. -13.8125 iterations 9
Cbc0038I Pass  60: suminf.    0.46208 (4) obj. -13.8779 iterations 4
Cbc0038I Pass  61: suminf.    0.63659 (5) obj. -13.8125 iterations 8
Cbc0038I Pass  62: suminf.    2.15277 (11) obj. -13.8125 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 122 columns, reduced to 50 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -3.03127 to -30.2022 (0.10 seconds)
Cbc0038I Round again with cutoff of -37.7993
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass  63: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass  64: suminf.    2.05106 (28) obj. -37.7993 iterations 19
Cbc0038I Pass  65: suminf.    1.81887 (27) obj. -37.7993 iterations 4
Cbc0038I Pass  66: suminf.    3.23157 (26) obj. -37.7993 iterations 38
Cbc0038I Pass  67: suminf.    2.65946 (25) obj. -37.7993 iterations 2
Cbc0038I Pass  68: suminf.    2.53376 (26) obj. -37.7993 iterations 2
Cbc0038I Pass  69: suminf.    3.28580 (26) obj. -37.7993 iterations 5
Cbc0038I Pass  70: suminf.    2.65946 (25) obj. -37.7993 iterations 1
Cbc0038I Pass  71: suminf.    2.49571 (26) obj. -37.7993 iterations 2
Cbc0038I Pass  72: suminf.    3.28580 (26) obj. -37.7993 iterations 10
Cbc0038I Pass  73: suminf.    2.87157 (27) obj. -37.7993 iterations 29
Cbc0038I Pass  74: suminf.    2.74419 (23) obj. -37.7993 iterations 8
Cbc0038I Pass  75: suminf.    2.83965 (22) obj. -37.7993 iterations 20
Cbc0038I Pass  76: suminf.    2.74591 (23) obj. -37.7993 iterations 4
Cbc0038I Pass  77: suminf.    3.31445 (26) obj. -37.7993 iterations 10
Cbc0038I Pass  78: suminf.    2.63861 (22) obj. -37.7993 iterations 3
Cbc0038I Pass  79: suminf.    2.23634 (22) obj. -38.2016 iterations 6
Cbc0038I Pass  80: suminf.    3.75052 (23) obj. -37.7993 iterations 9
Cbc0038I Pass  81: suminf.    3.31445 (26) obj. -37.7993 iterations 1
Cbc0038I Pass  82: suminf.    2.58740 (22) obj. -37.7993 iterations 4
Cbc0038I Pass  83: suminf.    3.75984 (23) obj. -37.7993 iterations 9
Cbc0038I Pass  84: suminf.    2.70828 (26) obj. -37.7993 iterations 3
Cbc0038I Pass  85: suminf.    2.63861 (22) obj. -37.7993 iterations 3
Cbc0038I Pass  86: suminf.    2.23634 (22) obj. -38.2016 iterations 6
Cbc0038I Pass  87: suminf.    3.75984 (23) obj. -37.7993 iterations 12
Cbc0038I Pass  88: suminf.    3.21993 (26) obj. -37.7993 iterations 30
Cbc0038I Pass  89: suminf.    3.01784 (26) obj. -37.7993 iterations 6
Cbc0038I Pass  90: suminf.    2.44367 (28) obj. -37.7993 iterations 32
Cbc0038I Pass  91: suminf.    2.11872 (23) obj. -37.7993 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -30.2022 - took 0.09 seconds
Cbc0012I Integer solution of -30.20219 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 77 added rows had average density of 11.155844
Cbc0013I At root node, 77 cuts changed objective from -55.525706 to -34.425736 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18122 row cuts average 13.4 elements, 1 column cuts (1 active)  in 0.290 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1193 row cuts average 108.7 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 353 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 709 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 338 row cuts average 72.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 318 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.711 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -30.20219 best solution, best possible -34.425736 (2.60 seconds)
Cbc0012I Integer solution of -30.27293 found by rounding after 3803 iterations and 1 nodes (2.61 seconds)
Cbc0010I After 5 nodes, 4 on tree, -30.27293 best solution, best possible -33.554983 (3.36 seconds)
Cbc0016I Integer solution of -30.37938 found by strong branching after 4636 iterations and 10 nodes (3.52 seconds)
Cbc0004I Integer solution of -30.80046 found after 4659 iterations and 12 nodes (3.60 seconds)
Cbc0001I Search completed - best objective -30.80046, took 4922 iterations and 20 nodes (3.61 seconds)
Cbc0032I Strong branching done 402 times (8412 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 47 variables fixed on reduced cost
Total time (CPU seconds):       2.83   (Wallclock seconds):       3.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 3.41259e-05 - average 2.4551e-07, 8 fixed columns
Coin0506I Presolve 123 (-16) rows, 68 (-8) columns and 374 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.5446472 - largest nonzero change 0 ( 0%) - largest zero change 1.836629e-05
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Coin0511I After Postsolve, objective 54.342905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Coin0511I After Postsolve, objective 54.342905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34290506 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 10.3314
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.09622 iterations 61
Cbc0038I Solution found of 3.09622
Cbc0038I Relaxing continuous gives 3.09622
Cbc0038I Rounding solution of 0.15896 is better than previous of 3.09622

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 95 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 0.15896 to -30.3794 (0.06 seconds)
Cbc0038I Round again with cutoff of -32.7758
Cbc0038I Pass   2: suminf.    5.03689 (21) obj. -32.7758 iterations 26
Cbc0038I Pass   3: suminf.    2.50590 (9) obj. -32.7758 iterations 27
Cbc0038I Pass   4: suminf.    1.80962 (7) obj. -32.7758 iterations 9
Cbc0038I Pass   5: suminf.    2.10588 (7) obj. -32.7758 iterations 7
Cbc0038I Pass   6: suminf.    1.65351 (7) obj. -32.7758 iterations 8
Cbc0038I Pass   7: suminf.    1.65351 (7) obj. -32.7758 iterations 2
Cbc0038I Pass   8: suminf.    2.92959 (8) obj. -32.7758 iterations 11
Cbc0038I Pass   9: suminf.    2.81349 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  10: suminf.    2.81349 (8) obj. -32.7758 iterations 0
Cbc0038I Pass  11: suminf.    2.04027 (8) obj. -32.7758 iterations 4
Cbc0038I Pass  12: suminf.    2.01771 (7) obj. -32.7758 iterations 1
Cbc0038I Pass  13: suminf.    2.38369 (9) obj. -32.7758 iterations 8
Cbc0038I Pass  14: suminf.    2.35295 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  15: suminf.    2.58400 (8) obj. -32.7758 iterations 5
Cbc0038I Pass  16: suminf.    2.58987 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  17: suminf.    2.75301 (8) obj. -32.7758 iterations 7
Cbc0038I Pass  18: suminf.    3.92856 (11) obj. -32.7758 iterations 18
Cbc0038I Pass  19: suminf.    3.04069 (10) obj. -32.7758 iterations 12
Cbc0038I Pass  20: suminf.    2.38369 (9) obj. -32.7758 iterations 12
Cbc0038I Pass  21: suminf.    2.35295 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  22: suminf.    2.58400 (8) obj. -32.7758 iterations 5
Cbc0038I Pass  23: suminf.    2.58987 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  24: suminf.    2.75301 (8) obj. -32.7758 iterations 7
Cbc0038I Pass  25: suminf.    2.05083 (12) obj. -32.7758 iterations 20
Cbc0038I Pass  26: suminf.    1.58898 (6) obj. -32.7758 iterations 13
Cbc0038I Pass  27: suminf.    1.80759 (6) obj. -32.7758 iterations 5
Cbc0038I Pass  28: suminf.    1.58696 (6) obj. -32.7758 iterations 3
Cbc0038I Pass  29: suminf.    1.88356 (6) obj. -32.7758 iterations 4
Cbc0038I Pass  30: suminf.    1.52524 (5) obj. -32.7758 iterations 3
Cbc0038I Pass  31: suminf.    1.52524 (5) obj. -32.7758 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 99 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -30.3794 - took 0.10 seconds
Cbc0012I Integer solution of -30.37938 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 95 rows 54 columns
Cbc0031I 33 added rows had average density of 32.909091
Cbc0013I At root node, 33 cuts changed objective from -54.342905 to -46.328021 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18381 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2320 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.37938 best solution, best possible -46.328021 (1.13 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 32 rows 23 columns
Cbc0016I Integer solution of -30.80046 found by strong branching after 11815 iterations and 68 nodes (1.41 seconds)
Cbc0001I Search completed - best objective -30.80046, took 11855 iterations and 70 nodes (1.41 seconds)
Cbc0032I Strong branching done 784 times (15954 iterations), fathomed 8 nodes and fixed 54 variables
Cbc0035I Maximum depth 19, 153 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 119 (-34) columns and 2164 (-1140) elements
Clp1000I sum of infeasibilities 4.86442e-08 - average 4.50409e-10, 66 fixed columns
Coin0506I Presolve 42 (-66) rows, 53 (-66) columns and 184 (-1980) elements
Clp0006I 0  Obj -20.768239 Dual inf 0.91402682 (53)
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 3.8406741 - largest nonzero change 4.207308e-05 ( 0.00091204228%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value -15.175301
Clp0000I Optimal - objective value -15.175301
Coin0511I After Postsolve, objective -15.175301, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -15.175301 Dual inf 111.34279 (44)
Clp0014I Perturbing problem by 0.001% of 1.9049901 - largest nonzero change 2.6774595e-05 ( 0.0026774595%) - largest zero change 2.9633539e-05
Clp0000I Optimal - objective value 62.266465
Clp0000I Optimal - objective value 62.266465
Clp0000I Optimal - objective value 62.266465
Coin0511I After Postsolve, objective 62.266465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.26646463 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 122 columns (122 integer (122 of which binary)) and 2180 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.828%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.24576
Cbc0038I Pass   1: suminf.    2.45001 (37) obj. -47.391 iterations 17
Cbc0038I Pass   2: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass   3: suminf.    0.34199 (8) obj. -1.33284 iterations 29
Cbc0038I Solution found of 7.2817
Cbc0038I Rounding solution of 2.40936 is better than previous of 7.2817

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 122 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.38424
Cbc0038I Pass   4: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass   5: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass   6: suminf.    1.04020 (21) obj. -19.3061 iterations 16
Cbc0038I Pass   7: suminf.    0.61708 (2) obj. -3.38424 iterations 27
Cbc0038I Pass   8: suminf.    0.51418 (2) obj. -3.38424 iterations 1
Cbc0038I Pass   9: suminf.    0.62694 (2) obj. -3.38424 iterations 3
Cbc0038I Pass  10: suminf.    0.50490 (2) obj. -3.38424 iterations 1
Cbc0038I Pass  11: suminf.    1.05656 (10) obj. -3.38424 iterations 28
Cbc0038I Pass  12: suminf.    0.92631 (9) obj. -5.33805 iterations 12
Cbc0038I Pass  13: suminf.    1.26090 (6) obj. -3.38424 iterations 18
Cbc0038I Pass  14: suminf.    1.06883 (9) obj. -3.38424 iterations 5
Cbc0038I Pass  15: suminf.    0.68299 (3) obj. -3.38424 iterations 7
Cbc0038I Pass  16: suminf.    0.53309 (2) obj. -3.38424 iterations 2
Cbc0038I Pass  17: suminf.    0.62470 (2) obj. -3.38424 iterations 2
Cbc0038I Pass  18: suminf.    2.11907 (13) obj. -3.38424 iterations 39
Cbc0038I Pass  19: suminf.    0.96438 (10) obj. -3.38424 iterations 11
Cbc0038I Pass  20: suminf.    0.81636 (5) obj. -3.38424 iterations 17
Cbc0038I Pass  21: suminf.    0.64007 (6) obj. -3.38424 iterations 12
Cbc0038I Pass  22: suminf.    1.43048 (5) obj. -3.38424 iterations 7
Cbc0038I Pass  23: suminf.    1.43048 (5) obj. -3.38424 iterations 0
Cbc0038I Pass  24: suminf.    1.64349 (5) obj. -3.38424 iterations 8
Cbc0038I Pass  25: suminf.    0.76677 (4) obj. -3.46162 iterations 4
Cbc0038I Pass  26: suminf.    1.70868 (5) obj. -3.38424 iterations 9
Cbc0038I Pass  27: suminf.    0.78612 (4) obj. -3.38424 iterations 5
Cbc0038I Pass  28: suminf.    2.36947 (15) obj. -3.38424 iterations 33
Cbc0038I Pass  29: suminf.    1.93558 (12) obj. -3.38424 iterations 12
Cbc0038I Pass  30: suminf.    1.72779 (12) obj. -3.38424 iterations 3
Cbc0038I Pass  31: suminf.    1.78600 (8) obj. -3.38424 iterations 15
Cbc0038I Pass  32: suminf.    1.29161 (7) obj. -3.72418 iterations 5
Cbc0038I Pass  33: suminf.    1.78930 (9) obj. -3.38424 iterations 5
Cbc0038I Rounding solution of -0.752 is better than previous of 2.40936

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 122 columns, reduced to 35 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -0.752 to -3.03127 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.8125
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass  34: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass  35: suminf.    1.46016 (27) obj. -29.5101 iterations 10
Cbc0038I Pass  36: suminf.    1.01077 (7) obj. -13.8125 iterations 35
Cbc0038I Pass  37: suminf.    1.01077 (7) obj. -13.8125 iterations 1
Cbc0038I Pass  38: suminf.    0.90600 (6) obj. -13.8125 iterations 11
Cbc0038I Pass  39: suminf.    0.55019 (5) obj. -13.8125 iterations 6
Cbc0038I Pass  40: suminf.    0.90600 (6) obj. -13.8125 iterations 5
Cbc0038I Pass  41: suminf.    1.14809 (9) obj. -13.8125 iterations 17
Cbc0038I Pass  42: suminf.    1.14130 (8) obj. -13.8125 iterations 5
Cbc0038I Pass  43: suminf.    0.91371 (6) obj. -13.8125 iterations 8
Cbc0038I Pass  44: suminf.    0.59885 (5) obj. -13.8125 iterations 7
Cbc0038I Pass  45: suminf.    0.91371 (6) obj. -13.8125 iterations 5
Cbc0038I Pass  46: suminf.    1.65346 (15) obj. -13.8125 iterations 28
Cbc0038I Pass  47: suminf.    1.65346 (15) obj. -13.8125 iterations 1
Cbc0038I Pass  48: suminf.    1.29966 (8) obj. -13.8125 iterations 23
Cbc0038I Pass  49: suminf.    0.93942 (8) obj. -13.8125 iterations 2
Cbc0038I Pass  50: suminf.    1.10029 (6) obj. -13.8125 iterations 16
Cbc0038I Pass  51: suminf.    1.10029 (6) obj. -13.8125 iterations 0
Cbc0038I Pass  52: suminf.    0.59627 (5) obj. -13.8125 iterations 9
Cbc0038I Pass  53: suminf.    0.46208 (4) obj. -13.8779 iterations 4
Cbc0038I Pass  54: suminf.    0.63659 (5) obj. -13.8125 iterations 8
Cbc0038I Pass  55: suminf.    1.53254 (13) obj. -13.8125 iterations 25
Cbc0038I Pass  56: suminf.    1.53254 (13) obj. -13.8125 iterations 3
Cbc0038I Pass  57: suminf.    1.15872 (6) obj. -13.8125 iterations 10
Cbc0038I Pass  58: suminf.    1.10029 (6) obj. -13.8125 iterations 3
Cbc0038I Pass  59: suminf.    0.59627 (5) obj. -13.8125 iterations 9
Cbc0038I Pass  60: suminf.    0.46208 (4) obj. -13.8779 iterations 4
Cbc0038I Pass  61: suminf.    0.63659 (5) obj. -13.8125 iterations 8
Cbc0038I Pass  62: suminf.    2.15277 (11) obj. -13.8125 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 122 columns, reduced to 50 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -3.03127 to -30.2022 (0.10 seconds)
Cbc0038I Round again with cutoff of -37.7993
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass  63: suminf.    2.45001 (37) obj. -47.391 iterations 0
Cbc0038I Pass  64: suminf.    2.05106 (28) obj. -37.7993 iterations 19
Cbc0038I Pass  65: suminf.    1.81887 (27) obj. -37.7993 iterations 4
Cbc0038I Pass  66: suminf.    3.23157 (26) obj. -37.7993 iterations 38
Cbc0038I Pass  67: suminf.    2.65946 (25) obj. -37.7993 iterations 2
Cbc0038I Pass  68: suminf.    2.53376 (26) obj. -37.7993 iterations 2
Cbc0038I Pass  69: suminf.    3.28580 (26) obj. -37.7993 iterations 5
Cbc0038I Pass  70: suminf.    2.65946 (25) obj. -37.7993 iterations 1
Cbc0038I Pass  71: suminf.    2.49571 (26) obj. -37.7993 iterations 2
Cbc0038I Pass  72: suminf.    3.28580 (26) obj. -37.7993 iterations 10
Cbc0038I Pass  73: suminf.    2.87157 (27) obj. -37.7993 iterations 29
Cbc0038I Pass  74: suminf.    2.74419 (23) obj. -37.7993 iterations 8
Cbc0038I Pass  75: suminf.    2.83965 (22) obj. -37.7993 iterations 20
Cbc0038I Pass  76: suminf.    2.74591 (23) obj. -37.7993 iterations 4
Cbc0038I Pass  77: suminf.    3.31445 (26) obj. -37.7993 iterations 10
Cbc0038I Pass  78: suminf.    2.63861 (22) obj. -37.7993 iterations 3
Cbc0038I Pass  79: suminf.    2.23634 (22) obj. -38.2016 iterations 6
Cbc0038I Pass  80: suminf.    3.75052 (23) obj. -37.7993 iterations 9
Cbc0038I Pass  81: suminf.    3.31445 (26) obj. -37.7993 iterations 1
Cbc0038I Pass  82: suminf.    2.58740 (22) obj. -37.7993 iterations 4
Cbc0038I Pass  83: suminf.    3.75984 (23) obj. -37.7993 iterations 9
Cbc0038I Pass  84: suminf.    2.70828 (26) obj. -37.7993 iterations 3
Cbc0038I Pass  85: suminf.    2.63861 (22) obj. -37.7993 iterations 3
Cbc0038I Pass  86: suminf.    2.23634 (22) obj. -38.2016 iterations 6
Cbc0038I Pass  87: suminf.    3.75984 (23) obj. -37.7993 iterations 12
Cbc0038I Pass  88: suminf.    3.21993 (26) obj. -37.7993 iterations 30
Cbc0038I Pass  89: suminf.    3.01784 (26) obj. -37.7993 iterations 6
Cbc0038I Pass  90: suminf.    2.44367 (28) obj. -37.7993 iterations 32
Cbc0038I Pass  91: suminf.    2.11872 (23) obj. -37.7993 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -30.2022 - took 0.08 seconds
Cbc0012I Integer solution of -30.20219 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 77 added rows had average density of 11.155844
Cbc0013I At root node, 77 cuts changed objective from -55.525706 to -34.425736 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18122 row cuts average 13.4 elements, 1 column cuts (1 active)  in 0.293 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1193 row cuts average 108.7 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 353 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 709 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 338 row cuts average 72.6 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 318 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.704 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -30.20219 best solution, best possible -34.425736 (2.63 seconds)
Cbc0012I Integer solution of -30.27293 found by rounding after 3803 iterations and 1 nodes (2.63 seconds)
Cbc0010I After 5 nodes, 4 on tree, -30.27293 best solution, best possible -33.554983 (3.41 seconds)
Cbc0016I Integer solution of -30.37938 found by strong branching after 4636 iterations and 10 nodes (3.58 seconds)
Cbc0004I Integer solution of -30.80046 found after 4659 iterations and 12 nodes (3.66 seconds)
Cbc0001I Search completed - best objective -30.80046, took 4922 iterations and 20 nodes (3.67 seconds)
Cbc0032I Strong branching done 402 times (8412 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 47 variables fixed on reduced cost
Total time (CPU seconds):       2.86   (Wallclock seconds):       3.69

