Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 9.03663e-06 - average 2.31708e-07, 0 fixed columns
Coin0506I Presolve 39 (0) rows, 22 (0) columns and 114 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Coin0511I After Postsolve, objective 116.92692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Coin0511I After Postsolve, objective 116.92692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.9269192 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.49873
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.57695 iterations 19
Cbc0038I Solution found of -2.57695
Cbc0038I Relaxing continuous gives -2.57695
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2.57695 to -31.0939 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.3778
Cbc0038I Pass   2: suminf.    0.40535 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   3: suminf.    0.33878 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   4: suminf.    0.51583 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   5: suminf.    0.30951 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   6: suminf.    0.52769 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   7: suminf.    0.28512 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   8: suminf.    0.53435 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   9: suminf.    0.38648 (2) obj. -39.3778 iterations 2
Cbc0038I Pass  10: suminf.    0.86632 (2) obj. -39.3778 iterations 1
Cbc0038I Pass  11: suminf.    0.45513 (2) obj. -39.3778 iterations 3
Cbc0038I Pass  12: suminf.    1.50640 (5) obj. -39.3778 iterations 12
Cbc0038I Pass  13: suminf.    1.17598 (4) obj. -39.3778 iterations 2
Cbc0038I Pass  14: suminf.    1.40781 (5) obj. -39.3778 iterations 6
Cbc0038I Pass  15: suminf.    1.40781 (5) obj. -39.3778 iterations 0
Cbc0038I Pass  16: suminf.    1.56555 (4) obj. -39.3778 iterations 6
Cbc0038I Pass  17: suminf.    1.56555 (4) obj. -39.3778 iterations 0
Cbc0038I Pass  18: suminf.    1.41242 (5) obj. -39.3778 iterations 9
Cbc0038I Pass  19: suminf.    1.42739 (4) obj. -39.3778 iterations 10
Cbc0038I Pass  20: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  21: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  22: suminf.    1.12511 (4) obj. -39.3778 iterations 4
Cbc0038I Pass  23: suminf.    1.11975 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  24: suminf.    1.42739 (4) obj. -39.3778 iterations 3
Cbc0038I Pass  25: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  26: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  27: suminf.    1.12511 (4) obj. -39.3778 iterations 4
Cbc0038I Pass  28: suminf.    1.11975 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  29: suminf.    1.42739 (4) obj. -39.3778 iterations 3
Cbc0038I Pass  30: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  31: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.0939 to -31.1849 (0.02 seconds)
Cbc0038I Round again with cutoff of -54.2886
Cbc0038I Pass  31: suminf.    0.63974 (2) obj. -54.2886 iterations 0
Cbc0038I Pass  32: suminf.    0.43574 (3) obj. -54.2886 iterations 3
Cbc0038I Pass  33: suminf.    0.57192 (3) obj. -54.2886 iterations 7
Cbc0038I Pass  34: suminf.    0.56473 (2) obj. -54.2886 iterations 1
Cbc0038I Pass  35: suminf.    0.93753 (2) obj. -54.2886 iterations 1
Cbc0038I Pass  36: suminf.    0.81624 (3) obj. -54.2886 iterations 4
Cbc0038I Pass  37: suminf.    0.81619 (3) obj. -54.2886 iterations 3
Cbc0038I Pass  38: suminf.    0.81624 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  39: suminf.    2.05882 (6) obj. -54.2886 iterations 10
Cbc0038I Pass  40: suminf.    1.49413 (5) obj. -54.2886 iterations 1
Cbc0038I Pass  41: suminf.    1.41543 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  42: suminf.    1.41543 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  43: suminf.    1.22013 (3) obj. -54.2886 iterations 2
Cbc0038I Pass  44: suminf.    1.22013 (3) obj. -54.2886 iterations 0
Cbc0038I Pass  45: suminf.    1.36817 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  46: suminf.    1.14254 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  47: suminf.    1.14193 (4) obj. -54.2886 iterations 5
Cbc0038I Pass  48: suminf.    0.73269 (3) obj. -54.2886 iterations 4
Cbc0038I Pass  49: suminf.    0.69155 (4) obj. -54.2886 iterations 1
Cbc0038I Pass  50: suminf.    1.27718 (4) obj. -54.2886 iterations 6
Cbc0038I Pass  51: suminf.    1.14193 (4) obj. -54.2886 iterations 2
Cbc0038I Pass  52: suminf.    1.55326 (7) obj. -54.2886 iterations 6
Cbc0038I Pass  53: suminf.    1.38369 (5) obj. -54.2886 iterations 1
Cbc0038I Pass  54: suminf.    1.54305 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  55: suminf.    1.54305 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  56: suminf.    1.36954 (4) obj. -54.2886 iterations 1
Cbc0038I Pass  57: suminf.    1.36954 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  58: suminf.    1.54305 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  59: suminf.    0.80246 (5) obj. -54.2886 iterations 14
Cbc0038I Pass  60: suminf.    0.74571 (5) obj. -54.2886 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -31.1849 - took 0.02 seconds
Cbc0012I Integer solution of -31.184919 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 18.444444
Cbc0013I At root node, 9 cuts changed objective from -113.93192 to -44.451226 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 799 row cuts average 4.9 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 438 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -31.193859 found by rounding after 1631 iterations and 1 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -31.19385879999999, took 2462 iterations and 24 nodes (0.21 seconds)
Cbc0032I Strong branching done 174 times (856 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-8) rows, 43 (-3) columns and 338 (-50) elements
Clp1000I sum of infeasibilities 0 - average 0, 33 fixed columns
Coin0506I Presolve 9 (-31) rows, 10 (-33) columns and 34 (-304) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 25.160388
Clp0000I Optimal - objective value 25.160388
Coin0511I After Postsolve, objective 25.160388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15843872 - largest nonzero change 0 ( 0%) - largest zero change 2.9591007e-05
Clp0000I Optimal - objective value 178.2375
Clp0000I Optimal - objective value 178.2375
Clp0000I Optimal - objective value 178.2375
Coin0511I After Postsolve, objective 178.2375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 178.2375042 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 43 columns (43 integer (43 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.768%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 8.39367
Cbc0038I Pass   1: suminf.    2.40729 (9) obj. -20.2606 iterations 19
Cbc0038I Solution found of 5.74771
Cbc0038I Rounding solution of -3.77455 is better than previous of 5.74771

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -3.77455 to -22.4053 (0.02 seconds)
Cbc0038I Round again with cutoff of -28.382
Cbc0038I Pass   2: suminf.    2.63288 (10) obj. -28.382 iterations 1
Cbc0038I Pass   3: suminf.    0.93766 (2) obj. -28.382 iterations 28
Cbc0038I Pass   4: suminf.    0.90043 (2) obj. -28.382 iterations 1
Cbc0038I Pass   5: suminf.    2.27189 (7) obj. -28.382 iterations 14
Cbc0038I Pass   6: suminf.    1.85980 (6) obj. -28.382 iterations 2
Cbc0038I Pass   7: suminf.    1.40633 (4) obj. -28.382 iterations 10
Cbc0038I Pass   8: suminf.    1.40633 (4) obj. -28.382 iterations 1
Cbc0038I Pass   9: suminf.    1.36066 (4) obj. -28.382 iterations 1
Cbc0038I Pass  10: suminf.    1.35842 (4) obj. -28.382 iterations 2
Cbc0038I Pass  11: suminf.    1.17407 (4) obj. -28.382 iterations 10
Cbc0038I Pass  12: suminf.    1.17407 (4) obj. -28.382 iterations 0
Cbc0038I Pass  13: suminf.    1.48369 (4) obj. -28.382 iterations 3
Cbc0038I Pass  14: suminf.    1.98526 (10) obj. -28.382 iterations 16
Cbc0038I Pass  15: suminf.    1.98526 (10) obj. -28.382 iterations 2
Cbc0038I Pass  16: suminf.    1.83615 (6) obj. -28.382 iterations 15
Cbc0038I Pass  17: suminf.    1.82891 (6) obj. -28.382 iterations 2
Cbc0038I Pass  18: suminf.    1.19009 (5) obj. -28.382 iterations 9
Cbc0038I Pass  19: suminf.    1.19009 (5) obj. -28.382 iterations 0
Cbc0038I Pass  20: suminf.    1.81229 (5) obj. -28.382 iterations 4
Cbc0038I Pass  21: suminf.    1.53868 (5) obj. -28.382 iterations 5
Cbc0038I Pass  22: suminf.    1.30870 (4) obj. -28.382 iterations 6
Cbc0038I Pass  23: suminf.    0.96138 (3) obj. -28.382 iterations 4
Cbc0038I Pass  24: suminf.    0.82589 (3) obj. -28.382 iterations 2
Cbc0038I Pass  25: suminf.    1.18648 (3) obj. -28.382 iterations 4
Cbc0038I Pass  26: suminf.    2.16849 (8) obj. -28.382 iterations 9
Cbc0038I Pass  27: suminf.    1.90134 (7) obj. -28.382 iterations 3
Cbc0038I Pass  28: suminf.    1.90134 (7) obj. -28.382 iterations 0
Cbc0038I Pass  29: suminf.    0.66139 (3) obj. -28.382 iterations 9
Cbc0038I Pass  30: suminf.    0.66139 (3) obj. -28.382 iterations 0
Cbc0038I Pass  31: suminf.    1.30751 (3) obj. -28.382 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -22.4053 to -30.5489 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.8735
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.89439 (11) obj. -40.8735 iterations 1
Cbc0038I Pass  32: suminf.    2.89439 (11) obj. -40.8735 iterations 0
Cbc0038I Pass  33: suminf.    1.11242 (4) obj. -40.8735 iterations 34
Cbc0038I Pass  34: suminf.    1.27831 (4) obj. -40.8735 iterations 5
Cbc0038I Pass  35: suminf.    1.27831 (4) obj. -40.8735 iterations 0
Cbc0038I Pass  36: suminf.    1.52071 (4) obj. -40.8735 iterations 3
Cbc0038I Pass  37: suminf.    1.11242 (4) obj. -40.8735 iterations 5
Cbc0038I Pass  38: suminf.    1.11242 (4) obj. -40.8735 iterations 2
Cbc0038I Pass  39: suminf.    1.27831 (4) obj. -40.8735 iterations 6
Cbc0038I Pass  40: suminf.    1.27831 (4) obj. -40.8735 iterations 0
Cbc0038I Pass  41: suminf.    1.52071 (4) obj. -40.8735 iterations 3
Cbc0038I Pass  42: suminf.    1.11242 (4) obj. -40.8735 iterations 4
Cbc0038I Pass  43: suminf.    1.11242 (4) obj. -40.8735 iterations 1
Cbc0038I Pass  44: suminf.    1.27831 (4) obj. -40.8735 iterations 8
Cbc0038I Pass  45: suminf.    1.27831 (4) obj. -40.8735 iterations 0
Cbc0038I Pass  46: suminf.    1.52071 (4) obj. -40.8735 iterations 3
Cbc0038I Pass  47: suminf.    1.11242 (4) obj. -40.8735 iterations 5
Cbc0038I Pass  48: suminf.    1.11242 (4) obj. -40.8735 iterations 2
Cbc0038I Pass  49: suminf.    1.27831 (4) obj. -40.8735 iterations 5
Cbc0038I Pass  50: suminf.    1.27831 (4) obj. -40.8735 iterations 0
Cbc0038I Pass  51: suminf.    1.52071 (4) obj. -40.8735 iterations 2
Cbc0038I Pass  52: suminf.    1.11242 (4) obj. -40.8735 iterations 4
Cbc0038I Pass  53: suminf.    1.11242 (4) obj. -40.8735 iterations 1
Cbc0038I Pass  54: suminf.    1.27831 (4) obj. -40.8735 iterations 6
Cbc0038I Pass  55: suminf.    1.27831 (4) obj. -40.8735 iterations 0
Cbc0038I Pass  56: suminf.    1.52071 (4) obj. -40.8735 iterations 3
Cbc0038I Pass  57: suminf.    1.11242 (4) obj. -40.8735 iterations 5
Cbc0038I Pass  58: suminf.    1.11242 (4) obj. -40.8735 iterations 2
Cbc0038I Pass  59: suminf.    1.27831 (4) obj. -40.8735 iterations 6
Cbc0038I Pass  60: suminf.    1.27831 (4) obj. -40.8735 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -30.5489 - took 0.03 seconds
Cbc0012I Integer solution of -30.548949 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 40 rows 43 columns, reduced to 7 rows 8 columns
Cbc0012I Integer solution of -30.843459 found by DiveCoefficient after 922 iterations and 0 nodes (1.48 seconds)
Cbc0031I 8 added rows had average density of 14.625
Cbc0013I At root node, 8 cuts changed objective from -82.171498 to -34.778569 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 280 row cuts average 7.9 elements, 19 column cuts (19 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 346 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 151 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 20 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 158 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 266 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.752 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.843459 best solution, best possible -34.778569 (1.48 seconds)
Cbc0012I Integer solution of -30.979969 found by DiveCoefficient after 936 iterations and 1 nodes (1.48 seconds)
Cbc0012I Integer solution of -31.036559 found by rounding after 1145 iterations and 4 nodes (1.51 seconds)
Cbc0012I Integer solution of -31.193859 found by rounding after 1155 iterations and 7 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -31.19385879999999, took 1530 iterations and 22 nodes (1.56 seconds)
Cbc0032I Strong branching done 176 times (632 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 9.03663e-06 - average 2.31708e-07, 0 fixed columns
Coin0506I Presolve 39 (0) rows, 22 (0) columns and 114 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Coin0511I After Postsolve, objective 116.92692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Coin0511I After Postsolve, objective 116.92692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.9269192 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.49873
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.57695 iterations 19
Cbc0038I Solution found of -2.57695
Cbc0038I Relaxing continuous gives -2.57695
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2.57695 to -31.0939 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.3778
Cbc0038I Pass   2: suminf.    0.40535 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   3: suminf.    0.33878 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   4: suminf.    0.51583 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   5: suminf.    0.30951 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   6: suminf.    0.52769 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   7: suminf.    0.28512 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   8: suminf.    0.53435 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   9: suminf.    0.38648 (2) obj. -39.3778 iterations 2
Cbc0038I Pass  10: suminf.    0.86632 (2) obj. -39.3778 iterations 1
Cbc0038I Pass  11: suminf.    0.45513 (2) obj. -39.3778 iterations 3
Cbc0038I Pass  12: suminf.    1.50640 (5) obj. -39.3778 iterations 12
Cbc0038I Pass  13: suminf.    1.17598 (4) obj. -39.3778 iterations 2
Cbc0038I Pass  14: suminf.    1.40781 (5) obj. -39.3778 iterations 6
Cbc0038I Pass  15: suminf.    1.40781 (5) obj. -39.3778 iterations 0
Cbc0038I Pass  16: suminf.    1.56555 (4) obj. -39.3778 iterations 6
Cbc0038I Pass  17: suminf.    1.56555 (4) obj. -39.3778 iterations 0
Cbc0038I Pass  18: suminf.    1.41242 (5) obj. -39.3778 iterations 9
Cbc0038I Pass  19: suminf.    1.42739 (4) obj. -39.3778 iterations 10
Cbc0038I Pass  20: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  21: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  22: suminf.    1.12511 (4) obj. -39.3778 iterations 4
Cbc0038I Pass  23: suminf.    1.11975 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  24: suminf.    1.42739 (4) obj. -39.3778 iterations 3
Cbc0038I Pass  25: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  26: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  27: suminf.    1.12511 (4) obj. -39.3778 iterations 4
Cbc0038I Pass  28: suminf.    1.11975 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  29: suminf.    1.42739 (4) obj. -39.3778 iterations 3
Cbc0038I Pass  30: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  31: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.0939 to -31.1849 (0.02 seconds)
Cbc0038I Round again with cutoff of -54.2886
Cbc0038I Pass  31: suminf.    0.63974 (2) obj. -54.2886 iterations 0
Cbc0038I Pass  32: suminf.    0.43574 (3) obj. -54.2886 iterations 3
Cbc0038I Pass  33: suminf.    0.57192 (3) obj. -54.2886 iterations 7
Cbc0038I Pass  34: suminf.    0.56473 (2) obj. -54.2886 iterations 1
Cbc0038I Pass  35: suminf.    0.93753 (2) obj. -54.2886 iterations 1
Cbc0038I Pass  36: suminf.    0.81624 (3) obj. -54.2886 iterations 4
Cbc0038I Pass  37: suminf.    0.81619 (3) obj. -54.2886 iterations 3
Cbc0038I Pass  38: suminf.    0.81624 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  39: suminf.    2.05882 (6) obj. -54.2886 iterations 10
Cbc0038I Pass  40: suminf.    1.49413 (5) obj. -54.2886 iterations 1
Cbc0038I Pass  41: suminf.    1.41543 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  42: suminf.    1.41543 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  43: suminf.    1.22013 (3) obj. -54.2886 iterations 2
Cbc0038I Pass  44: suminf.    1.22013 (3) obj. -54.2886 iterations 0
Cbc0038I Pass  45: suminf.    1.36817 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  46: suminf.    1.14254 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  47: suminf.    1.14193 (4) obj. -54.2886 iterations 5
Cbc0038I Pass  48: suminf.    0.73269 (3) obj. -54.2886 iterations 4
Cbc0038I Pass  49: suminf.    0.69155 (4) obj. -54.2886 iterations 1
Cbc0038I Pass  50: suminf.    1.27718 (4) obj. -54.2886 iterations 6
Cbc0038I Pass  51: suminf.    1.14193 (4) obj. -54.2886 iterations 2
Cbc0038I Pass  52: suminf.    1.55326 (7) obj. -54.2886 iterations 6
Cbc0038I Pass  53: suminf.    1.38369 (5) obj. -54.2886 iterations 1
Cbc0038I Pass  54: suminf.    1.54305 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  55: suminf.    1.54305 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  56: suminf.    1.36954 (4) obj. -54.2886 iterations 1
Cbc0038I Pass  57: suminf.    1.36954 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  58: suminf.    1.54305 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  59: suminf.    0.80246 (5) obj. -54.2886 iterations 14
Cbc0038I Pass  60: suminf.    0.74571 (5) obj. -54.2886 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -31.1849 - took 0.04 seconds
Cbc0012I Integer solution of -31.184919 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 18.444444
Cbc0013I At root node, 9 cuts changed objective from -113.93192 to -44.451226 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 799 row cuts average 4.9 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 438 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -31.193859 found by rounding after 1631 iterations and 1 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -31.19385879999999, took 2462 iterations and 24 nodes (0.21 seconds)
Cbc0032I Strong branching done 174 times (856 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 42 (-5) columns and 320 (-69) elements
Clp1000I sum of infeasibilities 1.73112e-08 - average 4.43876e-10, 21 fixed columns
Coin0506I Presolve 20 (-19) rows, 21 (-21) columns and 107 (-213) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 1.5884819 - largest nonzero change 2.1804284e-05 ( 0.0016981022%) - largest zero change 1.5989058e-05
Clp0000I Optimal - objective value 74.165952
Clp0000I Optimal - objective value 74.165952
Coin0511I After Postsolve, objective 74.165952, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4549074 - largest nonzero change 2.6193307e-05 ( 0.0020584323%) - largest zero change 1.7963867e-05
Clp0000I Optimal - objective value 136.37964
Clp0000I Optimal - objective value 136.37964
Clp0000I Optimal - objective value 136.37964
Coin0511I After Postsolve, objective 136.37964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.3796378 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 42 columns (42 integer (42 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.235%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 9.57026
Cbc0038I Pass   1: suminf.    0.45147 (3) obj. -19.5667 iterations 15
Cbc0038I Pass   2: suminf.    0.45147 (3) obj. -19.5667 iterations 0
Cbc0038I Solution found of -3.47969
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -3.47969 to -25.937 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.1854
Cbc0038I Pass   3: suminf.    1.58363 (11) obj. -32.1854 iterations 1
Cbc0038I Pass   4: suminf.    1.58363 (11) obj. -32.1854 iterations 0
Cbc0038I Pass   5: suminf.    1.15909 (4) obj. -32.1854 iterations 17
Cbc0038I Pass   6: suminf.    0.75965 (3) obj. -32.1854 iterations 1
Cbc0038I Pass   7: suminf.    1.27814 (4) obj. -32.1854 iterations 4
Cbc0038I Pass   8: suminf.    0.68256 (3) obj. -32.1854 iterations 1
Cbc0038I Pass   9: suminf.    0.68256 (3) obj. -32.1854 iterations 0
Cbc0038I Pass  10: suminf.    0.89199 (4) obj. -32.1854 iterations 2
Cbc0038I Pass  11: suminf.    0.68256 (3) obj. -32.1854 iterations 2
Cbc0038I Pass  12: suminf.    1.94606 (6) obj. -32.1854 iterations 6
Cbc0038I Pass  13: suminf.    1.94606 (6) obj. -32.1854 iterations 1
Cbc0038I Pass  14: suminf.    1.09606 (4) obj. -32.1854 iterations 4
Cbc0038I Pass  15: suminf.    1.07356 (4) obj. -32.1854 iterations 2
Cbc0038I Pass  16: suminf.    1.75931 (7) obj. -32.1854 iterations 14
Cbc0038I Pass  17: suminf.    1.62297 (5) obj. -33.3907 iterations 3
Cbc0038I Pass  18: suminf.    0.62818 (4) obj. -32.1854 iterations 7
Cbc0038I Pass  19: suminf.    0.82586 (3) obj. -32.1854 iterations 3
Cbc0038I Pass  20: suminf.    0.80710 (4) obj. -32.1854 iterations 1
Cbc0038I Pass  21: suminf.    0.86183 (3) obj. -32.1854 iterations 2
Cbc0038I Pass  22: suminf.    0.86183 (3) obj. -32.1854 iterations 0
Cbc0038I Pass  23: suminf.    1.32772 (6) obj. -32.1854 iterations 5
Cbc0038I Pass  24: suminf.    0.84076 (4) obj. -32.1854 iterations 2
Cbc0038I Pass  25: suminf.    0.93826 (4) obj. -39.8171 iterations 3
Cbc0038I Pass  26: suminf.    0.68664 (3) obj. -32.1854 iterations 2
Cbc0038I Pass  27: suminf.    0.60131 (3) obj. -32.1854 iterations 3
Cbc0038I Pass  28: suminf.    0.60131 (3) obj. -32.1854 iterations 0
Cbc0038I Pass  29: suminf.    2.43955 (9) obj. -32.1854 iterations 12
Cbc0038I Pass  30: suminf.    2.43955 (9) obj. -32.1854 iterations 0
Cbc0038I Pass  31: suminf.    1.05028 (5) obj. -32.1854 iterations 7
Cbc0038I Pass  32: suminf.    1.00565 (4) obj. -32.1854 iterations 1
Cbc0038I Rounding solution of -30.9231 is better than previous of -25.937

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.4323
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.75065 (11) obj. -43.4323 iterations 1
Cbc0038I Pass  33: suminf.    1.75065 (11) obj. -43.4323 iterations 0
Cbc0038I Pass  34: suminf.    1.52343 (5) obj. -43.4323 iterations 20
Cbc0038I Pass  35: suminf.    1.17000 (4) obj. -43.4323 iterations 1
Cbc0038I Pass  36: suminf.    1.17000 (4) obj. -43.4323 iterations 0
Cbc0038I Pass  37: suminf.    1.51068 (6) obj. -43.4323 iterations 3
Cbc0038I Pass  38: suminf.    1.51068 (6) obj. -43.4323 iterations 0
Cbc0038I Pass  39: suminf.    0.94392 (3) obj. -43.4323 iterations 5
Cbc0038I Pass  40: suminf.    0.94392 (3) obj. -43.4323 iterations 0
Cbc0038I Pass  41: suminf.    1.43880 (4) obj. -43.4323 iterations 3
Cbc0038I Pass  42: suminf.    1.19992 (4) obj. -43.4323 iterations 4
Cbc0038I Pass  43: suminf.    0.81440 (3) obj. -43.4323 iterations 1
Cbc0038I Pass  44: suminf.    0.81440 (3) obj. -43.4323 iterations 0
Cbc0038I Pass  45: suminf.    1.27593 (4) obj. -43.4323 iterations 5
Cbc0038I Pass  46: suminf.    0.94392 (3) obj. -43.4323 iterations 1
Cbc0038I Pass  47: suminf.    0.94392 (3) obj. -43.4323 iterations 0
Cbc0038I Pass  48: suminf.    1.43880 (4) obj. -43.4323 iterations 3
Cbc0038I Pass  49: suminf.    1.19992 (4) obj. -43.4323 iterations 4
Cbc0038I Pass  50: suminf.    0.81440 (3) obj. -43.4323 iterations 1
Cbc0038I Pass  51: suminf.    0.81440 (3) obj. -43.4323 iterations 0
Cbc0038I Pass  52: suminf.    1.27593 (4) obj. -43.4323 iterations 5
Cbc0038I Pass  53: suminf.    0.94392 (3) obj. -43.4323 iterations 1
Cbc0038I Pass  54: suminf.    0.94392 (3) obj. -43.4323 iterations 0
Cbc0038I Pass  55: suminf.    1.43880 (4) obj. -43.4323 iterations 3
Cbc0038I Pass  56: suminf.    1.19992 (4) obj. -43.4323 iterations 4
Cbc0038I Pass  57: suminf.    0.81440 (3) obj. -43.4323 iterations 1
Cbc0038I Pass  58: suminf.    0.81440 (3) obj. -43.4323 iterations 0
Cbc0038I Pass  59: suminf.    1.27593 (4) obj. -43.4323 iterations 5
Cbc0038I Pass  60: suminf.    0.94392 (3) obj. -43.4323 iterations 1
Cbc0038I Pass  61: suminf.    0.94392 (3) obj. -43.4323 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30.9231 - took 0.02 seconds
Cbc0012I Integer solution of -30.923079 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 42 columns, reduced to 7 rows 9 columns
Cbc0012I Integer solution of -31.080379 found by RINS after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 7 added rows had average density of 9.7142857
Cbc0013I At root node, 7 cuts changed objective from -88.419976 to -34.776834 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 110 row cuts average 3.1 elements, 20 column cuts (20 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 349 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 99 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 229 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.764 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.080379 best solution, best possible -34.776834 (1.48 seconds)
Cbc0012I Integer solution of -31.176289 found by DiveCoefficient after 1074 iterations and 12 nodes (1.54 seconds)
Cbc0012I Integer solution of -31.193859 found by DiveCoefficient after 1092 iterations and 13 nodes (1.54 seconds)
Cbc0001I Search completed - best objective -31.19385879999999, took 1547 iterations and 34 nodes (1.61 seconds)
Cbc0032I Strong branching done 304 times (1043 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 25 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.61

