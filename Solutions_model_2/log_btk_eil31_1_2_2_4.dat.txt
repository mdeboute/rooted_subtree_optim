Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 3.54907e-06 - average 6.82513e-08, 4 fixed columns
Coin0506I Presolve 44 (-8) rows, 24 (-4) columns and 129 (-24) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Coin0511I After Postsolve, objective 72.254322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Coin0511I After Postsolve, objective 72.254322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.25432208 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 28 columns (27 integer (27 of which binary)) and 159 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.018%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.79648
Cbc0038I Solution found of 5.86113
Cbc0038I Relaxing continuous gives 2.1464
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 2.1464 to -42.7889 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.3111
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.41691 (1) obj. -45.3111 iterations 20
Cbc0038I Pass   2: suminf.    0.41691 (1) obj. -45.3111 iterations 0
Cbc0038I Pass   3: suminf.    0.04065 (1) obj. -51.7755 iterations 4
Cbc0038I Pass   4: suminf.    0.18904 (1) obj. -45.3111 iterations 1
Cbc0038I Pass   5: suminf.    0.64616 (4) obj. -45.3111 iterations 11
Cbc0038I Pass   6: suminf.    0.35552 (4) obj. -45.3111 iterations 5
Cbc0038I Pass   7: suminf.    1.44809 (4) obj. -45.3111 iterations 5
Cbc0038I Pass   8: suminf.    1.21665 (4) obj. -45.3111 iterations 3
Cbc0038I Pass   9: suminf.    0.49061 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  10: suminf.    0.21667 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  11: suminf.    0.15396 (2) obj. -49.6668 iterations 1
Cbc0038I Pass  12: suminf.    0.49061 (2) obj. -45.3111 iterations 3
Cbc0038I Pass  13: suminf.    0.95004 (3) obj. -45.3111 iterations 7
Cbc0038I Pass  14: suminf.    0.26588 (1) obj. -45.3111 iterations 4
Cbc0038I Pass  15: suminf.    0.26829 (1) obj. -45.4163 iterations 1
Cbc0038I Pass  16: suminf.    1.69150 (5) obj. -45.3111 iterations 10
Cbc0038I Pass  17: suminf.    1.49358 (5) obj. -45.3111 iterations 4
Cbc0038I Pass  18: suminf.    0.83948 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  19: suminf.    0.53856 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  20: suminf.    0.43016 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  21: suminf.    0.10906 (2) obj. -45.3111 iterations 1
Cbc0038I Pass  22: suminf.    0.62801 (3) obj. -45.3111 iterations 4
Cbc0038I Pass  23: suminf.    0.62801 (3) obj. -45.3111 iterations 0
Cbc0038I Pass  24: suminf.    0.66149 (2) obj. -45.3111 iterations 4
Cbc0038I Pass  25: suminf.    0.66149 (2) obj. -45.3111 iterations 0
Cbc0038I Pass  26: suminf.    0.45503 (2) obj. -45.3111 iterations 3
Cbc0038I Pass  27: suminf.    0.41119 (2) obj. -48.3565 iterations 1
Cbc0038I Pass  28: suminf.    0.25748 (3) obj. -45.3111 iterations 7
Cbc0038I Pass  29: suminf.    0.13632 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  30: suminf.    0.70115 (3) obj. -45.3111 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -42.7889 to -44.0321 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.8509
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.40822 (2) obj. -49.8509 iterations 2
Cbc0038I Pass  31: suminf.    0.04065 (1) obj. -51.7755 iterations 2
Cbc0038I Pass  32: suminf.    0.08483 (1) obj. -49.8509 iterations 1
Cbc0038I Pass  33: suminf.    0.24661 (4) obj. -49.8509 iterations 5
Cbc0038I Pass  34: suminf.    0.18118 (5) obj. -49.8509 iterations 2
Cbc0038I Pass  35: suminf.    0.66338 (3) obj. -49.8509 iterations 6
Cbc0038I Pass  36: suminf.    0.66338 (3) obj. -49.8509 iterations 0
Cbc0038I Pass  37: suminf.    0.24874 (3) obj. -49.8509 iterations 5
Cbc0038I Pass  38: suminf.    0.17465 (2) obj. -49.8509 iterations 4
Cbc0038I Pass  39: suminf.    0.36348 (2) obj. -49.8509 iterations 4
Cbc0038I Pass  40: suminf.    0.36348 (2) obj. -49.8509 iterations 0
Cbc0038I Pass  41: suminf.    0.64711 (3) obj. -49.8509 iterations 3
Cbc0038I Pass  42: suminf.    0.54695 (2) obj. -49.8509 iterations 1
Cbc0038I Pass  43: suminf.    1.80057 (8) obj. -49.8509 iterations 17
Cbc0038I Pass  44: suminf.    1.02998 (4) obj. -49.8509 iterations 7
Cbc0038I Pass  45: suminf.    0.22082 (3) obj. -49.8509 iterations 11
Cbc0038I Pass  46: suminf.    0.13008 (1) obj. -49.9719 iterations 3
Cbc0038I Pass  47: suminf.    0.13286 (1) obj. -49.8509 iterations 1
Cbc0038I Pass  48: suminf.    3.08375 (8) obj. -49.8509 iterations 10
Cbc0038I Pass  49: suminf.    1.25639 (5) obj. -49.8509 iterations 4
Cbc0038I Pass  50: suminf.    0.61721 (3) obj. -49.8509 iterations 8
Cbc0038I Pass  51: suminf.    0.18118 (5) obj. -49.8509 iterations 2
Cbc0038I Pass  52: suminf.    0.66338 (3) obj. -49.8509 iterations 6
Cbc0038I Pass  53: suminf.    0.66338 (3) obj. -49.8509 iterations 0
Cbc0038I Pass  54: suminf.    0.24874 (3) obj. -49.8509 iterations 4
Cbc0038I Pass  55: suminf.    0.17465 (2) obj. -49.8509 iterations 2
Cbc0038I Pass  56: suminf.    0.36348 (2) obj. -49.8509 iterations 3
Cbc0038I Pass  57: suminf.    0.36348 (2) obj. -49.8509 iterations 0
Cbc0038I Pass  58: suminf.    0.64711 (3) obj. -49.8509 iterations 3
Cbc0038I Pass  59: suminf.    0.54695 (2) obj. -49.8509 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 42 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -44.0321 - took 0.09 seconds
Cbc0012I Integer solution of -44.03214 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 50 rows 28 columns, reduced to 35 rows 20 columns
Cbc0031I 10 added rows had average density of 24.2
Cbc0013I At root node, 10 cuts changed objective from -68.009969 to -58.127529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 985 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 553 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0016I Integer solution of -45.07749 found by strong branching after 2136 iterations and 8 nodes (0.25 seconds)
Cbc0001I Search completed - best objective -45.07749, took 2349 iterations and 14 nodes (0.27 seconds)
Cbc0032I Strong branching done 152 times (1249 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-15) rows, 51 (-11) columns and 476 (-172) elements
Clp1000I sum of infeasibilities 1.71714e-08 - average 3.50436e-10, 28 fixed columns
Coin0506I Presolve 21 (-28) rows, 23 (-28) columns and 83 (-393) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 1.7494541 - largest nonzero change 1.2513252e-05 ( 0.00089819337%) - largest zero change 2.7229762e-05
Clp0000I Optimal - objective value 54.487715
Clp0000I Optimal - objective value 54.487715
Coin0511I After Postsolve, objective 54.487715, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2342912 - largest nonzero change 1.1880021e-05 ( 0.00089819337%) - largest zero change 2.9737844e-05
Clp0000I Optimal - objective value 93.303457
Clp0000I Optimal - objective value 93.303457
Clp0000I Optimal - objective value 93.303457
Coin0511I After Postsolve, objective 93.303457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.30345662 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 426 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.300%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.69716
Cbc0038I Pass   1: suminf.    1.08398 (11) obj. -32.8309 iterations 14
Cbc0038I Pass   2: suminf.    1.08398 (11) obj. -32.8309 iterations 0
Cbc0038I Solution found of -20.155
Cbc0038I Rounding solution of -32.6485 is better than previous of -20.155

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.1761
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.75132 (14) obj. -36.1761 iterations 4
Cbc0038I Pass   4: suminf.    1.37649 (12) obj. -36.1761 iterations 17
Cbc0038I Pass   5: suminf.    0.08709 (2) obj. -36.1761 iterations 17
Cbc0038I Pass   6: suminf.    0.41626 (2) obj. -49.2419 iterations 1
Cbc0038I Pass   7: suminf.    0.38889 (1) obj. -48.6158 iterations 1
Cbc0038I Pass   8: suminf.    0.34637 (4) obj. -39.1091 iterations 6
Cbc0038I Pass   9: suminf.    0.07778 (1) obj. -36.1896 iterations 5
Cbc0038I Pass  10: suminf.    0.32962 (2) obj. -36.1761 iterations 2
Cbc0038I Pass  11: suminf.    2.56503 (8) obj. -36.1761 iterations 14
Cbc0038I Pass  12: suminf.    1.14063 (6) obj. -36.1761 iterations 14
Cbc0038I Pass  13: suminf.    0.61941 (2) obj. -39.1601 iterations 5
Cbc0038I Pass  14: suminf.    0.48896 (2) obj. -36.1761 iterations 2
Cbc0038I Pass  15: suminf.    0.61380 (2) obj. -36.1761 iterations 2
Cbc0038I Pass  16: suminf.    0.61380 (2) obj. -36.1761 iterations 0
Cbc0038I Pass  17: suminf.    0.67287 (3) obj. -36.1761 iterations 4
Cbc0038I Pass  18: suminf.    0.61459 (3) obj. -36.1761 iterations 2
Cbc0038I Pass  19: suminf.    0.75892 (2) obj. -42.3931 iterations 3
Cbc0038I Pass  20: suminf.    0.34881 (2) obj. -36.1761 iterations 5
Cbc0038I Pass  21: suminf.    0.62298 (2) obj. -42.8702 iterations 1
Cbc0038I Pass  22: suminf.    1.73800 (7) obj. -36.1761 iterations 15
Cbc0038I Pass  23: suminf.    1.06313 (5) obj. -36.1761 iterations 4
Cbc0038I Pass  24: suminf.    0.68226 (3) obj. -36.1761 iterations 4
Cbc0038I Pass  25: suminf.    0.68226 (3) obj. -36.1761 iterations 0
Cbc0038I Pass  26: suminf.    0.22306 (2) obj. -41.0432 iterations 1
Cbc0038I Pass  27: suminf.    0.09191 (1) obj. -36.1761 iterations 2
Cbc0038I Pass  28: suminf.    0.17886 (1) obj. -39.9642 iterations 1
Cbc0038I Pass  29: suminf.    2.23479 (9) obj. -36.1761 iterations 17
Cbc0038I Pass  30: suminf.    1.65692 (10) obj. -36.1761 iterations 4
Cbc0038I Pass  31: suminf.    1.00196 (3) obj. -36.1761 iterations 11
Cbc0038I Pass  32: suminf.    0.68021 (2) obj. -36.1761 iterations 2
Cbc0038I Rounding solution of -42.4825 is better than previous of -32.6485

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -42.4825 to -45.0775 (0.03 seconds)
Cbc0038I Round again with cutoff of -49.6468
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.22015 (15) obj. -49.6468 iterations 4
Cbc0038I Pass  33: suminf.    2.28861 (14) obj. -49.6468 iterations 6
Cbc0038I Pass  34: suminf.    1.69078 (17) obj. -49.6468 iterations 7
Cbc0038I Pass  35: suminf.    1.10546 (4) obj. -49.6468 iterations 14
Cbc0038I Pass  36: suminf.    1.07693 (3) obj. -49.6468 iterations 1
Cbc0038I Pass  37: suminf.    0.98320 (3) obj. -49.6468 iterations 3
Cbc0038I Pass  38: suminf.    0.98320 (3) obj. -49.6468 iterations 0
Cbc0038I Pass  39: suminf.    0.80062 (2) obj. -49.6468 iterations 3
Cbc0038I Pass  40: suminf.    0.76267 (2) obj. -50.5733 iterations 1
Cbc0038I Pass  41: suminf.    1.54744 (5) obj. -49.6468 iterations 3
Cbc0038I Pass  42: suminf.    1.19972 (4) obj. -49.6468 iterations 1
Cbc0038I Pass  43: suminf.    1.48735 (4) obj. -49.6468 iterations 1
Cbc0038I Pass  44: suminf.    1.01020 (3) obj. -51.0782 iterations 1
Cbc0038I Pass  45: suminf.    0.80273 (9) obj. -49.6468 iterations 2
Cbc0038I Pass  46: suminf.    0.79942 (3) obj. -49.6468 iterations 1
Cbc0038I Pass  47: suminf.    1.05176 (3) obj. -49.6468 iterations 1
Cbc0038I Pass  48: suminf.    1.00551 (3) obj. -51.0876 iterations 1
Cbc0038I Pass  49: suminf.    1.55397 (8) obj. -49.6468 iterations 12
Cbc0038I Pass  50: suminf.    1.43663 (7) obj. -49.6468 iterations 3
Cbc0038I Pass  51: suminf.    1.59181 (4) obj. -49.6468 iterations 12
Cbc0038I Pass  52: suminf.    0.90230 (12) obj. -49.6468 iterations 4
Cbc0038I Pass  53: suminf.    1.34948 (4) obj. -49.6468 iterations 17
Cbc0038I Pass  54: suminf.    1.07622 (4) obj. -49.6468 iterations 7
Cbc0038I Pass  55: suminf.    0.74046 (3) obj. -49.9704 iterations 4
Cbc0038I Pass  56: suminf.    0.72720 (3) obj. -49.6468 iterations 1
Cbc0038I Pass  57: suminf.    1.07622 (4) obj. -49.6468 iterations 3
Cbc0038I Pass  58: suminf.    1.64090 (6) obj. -49.6468 iterations 6
Cbc0038I Pass  59: suminf.    1.64090 (6) obj. -49.6468 iterations 1
Cbc0038I Pass  60: suminf.    0.82642 (4) obj. -49.6468 iterations 6
Cbc0038I Pass  61: suminf.    0.80455 (4) obj. -49.6468 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 33 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -45.0775 - took 0.03 seconds
Cbc0012I Integer solution of -45.07749 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 11 rows 14 columns
Cbc0031I 18 added rows had average density of 13.444444
Cbc0013I At root node, 18 cuts changed objective from -67.923428 to -51.112489 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 683 row cuts average 2.3 elements, 7 column cuts (7 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 480 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 71 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 72 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 194 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 205 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.726 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45.07749 best solution, best possible -51.112489 (1.53 seconds)
Cbc0010I After 7 nodes, 6 on tree, -45.07749 best solution, best possible -51.112489 (2.24 seconds)
Cbc0001I Search completed - best objective -45.07749, took 2268 iterations and 24 nodes (2.58 seconds)
Cbc0032I Strong branching done 296 times (2413 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 11, 28 variables fixed on reduced cost
Total time (CPU seconds):       1.62   (Wallclock seconds):       2.59

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 3.54907e-06 - average 6.82513e-08, 4 fixed columns
Coin0506I Presolve 44 (-8) rows, 24 (-4) columns and 129 (-24) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Coin0511I After Postsolve, objective 72.254322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Coin0511I After Postsolve, objective 72.254322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.25432208 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 28 columns (27 integer (27 of which binary)) and 159 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.018%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.79648
Cbc0038I Solution found of 5.86113
Cbc0038I Relaxing continuous gives 2.1464
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 2.1464 to -42.7889 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.3111
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.41691 (1) obj. -45.3111 iterations 20
Cbc0038I Pass   2: suminf.    0.41691 (1) obj. -45.3111 iterations 0
Cbc0038I Pass   3: suminf.    0.04065 (1) obj. -51.7755 iterations 4
Cbc0038I Pass   4: suminf.    0.18904 (1) obj. -45.3111 iterations 1
Cbc0038I Pass   5: suminf.    0.64616 (4) obj. -45.3111 iterations 11
Cbc0038I Pass   6: suminf.    0.35552 (4) obj. -45.3111 iterations 5
Cbc0038I Pass   7: suminf.    1.44809 (4) obj. -45.3111 iterations 5
Cbc0038I Pass   8: suminf.    1.21665 (4) obj. -45.3111 iterations 3
Cbc0038I Pass   9: suminf.    0.49061 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  10: suminf.    0.21667 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  11: suminf.    0.15396 (2) obj. -49.6668 iterations 1
Cbc0038I Pass  12: suminf.    0.49061 (2) obj. -45.3111 iterations 3
Cbc0038I Pass  13: suminf.    0.95004 (3) obj. -45.3111 iterations 7
Cbc0038I Pass  14: suminf.    0.26588 (1) obj. -45.3111 iterations 4
Cbc0038I Pass  15: suminf.    0.26829 (1) obj. -45.4163 iterations 1
Cbc0038I Pass  16: suminf.    1.69150 (5) obj. -45.3111 iterations 10
Cbc0038I Pass  17: suminf.    1.49358 (5) obj. -45.3111 iterations 4
Cbc0038I Pass  18: suminf.    0.83948 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  19: suminf.    0.53856 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  20: suminf.    0.43016 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  21: suminf.    0.10906 (2) obj. -45.3111 iterations 1
Cbc0038I Pass  22: suminf.    0.62801 (3) obj. -45.3111 iterations 4
Cbc0038I Pass  23: suminf.    0.62801 (3) obj. -45.3111 iterations 0
Cbc0038I Pass  24: suminf.    0.66149 (2) obj. -45.3111 iterations 4
Cbc0038I Pass  25: suminf.    0.66149 (2) obj. -45.3111 iterations 0
Cbc0038I Pass  26: suminf.    0.45503 (2) obj. -45.3111 iterations 3
Cbc0038I Pass  27: suminf.    0.41119 (2) obj. -48.3565 iterations 1
Cbc0038I Pass  28: suminf.    0.25748 (3) obj. -45.3111 iterations 7
Cbc0038I Pass  29: suminf.    0.13632 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  30: suminf.    0.70115 (3) obj. -45.3111 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -42.7889 to -44.0321 (0.06 seconds)
Cbc0038I Round again with cutoff of -49.8509
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.40822 (2) obj. -49.8509 iterations 2
Cbc0038I Pass  31: suminf.    0.04065 (1) obj. -51.7755 iterations 2
Cbc0038I Pass  32: suminf.    0.08483 (1) obj. -49.8509 iterations 1
Cbc0038I Pass  33: suminf.    0.24661 (4) obj. -49.8509 iterations 5
Cbc0038I Pass  34: suminf.    0.18118 (5) obj. -49.8509 iterations 2
Cbc0038I Pass  35: suminf.    0.66338 (3) obj. -49.8509 iterations 6
Cbc0038I Pass  36: suminf.    0.66338 (3) obj. -49.8509 iterations 0
Cbc0038I Pass  37: suminf.    0.24874 (3) obj. -49.8509 iterations 5
Cbc0038I Pass  38: suminf.    0.17465 (2) obj. -49.8509 iterations 4
Cbc0038I Pass  39: suminf.    0.36348 (2) obj. -49.8509 iterations 4
Cbc0038I Pass  40: suminf.    0.36348 (2) obj. -49.8509 iterations 0
Cbc0038I Pass  41: suminf.    0.64711 (3) obj. -49.8509 iterations 3
Cbc0038I Pass  42: suminf.    0.54695 (2) obj. -49.8509 iterations 1
Cbc0038I Pass  43: suminf.    1.80057 (8) obj. -49.8509 iterations 17
Cbc0038I Pass  44: suminf.    1.02998 (4) obj. -49.8509 iterations 7
Cbc0038I Pass  45: suminf.    0.22082 (3) obj. -49.8509 iterations 11
Cbc0038I Pass  46: suminf.    0.13008 (1) obj. -49.9719 iterations 3
Cbc0038I Pass  47: suminf.    0.13286 (1) obj. -49.8509 iterations 1
Cbc0038I Pass  48: suminf.    3.08375 (8) obj. -49.8509 iterations 10
Cbc0038I Pass  49: suminf.    1.25639 (5) obj. -49.8509 iterations 4
Cbc0038I Pass  50: suminf.    0.61721 (3) obj. -49.8509 iterations 8
Cbc0038I Pass  51: suminf.    0.18118 (5) obj. -49.8509 iterations 2
Cbc0038I Pass  52: suminf.    0.66338 (3) obj. -49.8509 iterations 6
Cbc0038I Pass  53: suminf.    0.66338 (3) obj. -49.8509 iterations 0
Cbc0038I Pass  54: suminf.    0.24874 (3) obj. -49.8509 iterations 4
Cbc0038I Pass  55: suminf.    0.17465 (2) obj. -49.8509 iterations 2
Cbc0038I Pass  56: suminf.    0.36348 (2) obj. -49.8509 iterations 3
Cbc0038I Pass  57: suminf.    0.36348 (2) obj. -49.8509 iterations 0
Cbc0038I Pass  58: suminf.    0.64711 (3) obj. -49.8509 iterations 3
Cbc0038I Pass  59: suminf.    0.54695 (2) obj. -49.8509 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 42 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -44.0321 - took 0.07 seconds
Cbc0012I Integer solution of -44.03214 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 50 rows 28 columns, reduced to 35 rows 20 columns
Cbc0031I 10 added rows had average density of 24.2
Cbc0013I At root node, 10 cuts changed objective from -68.009969 to -58.127529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 985 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 553 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0016I Integer solution of -45.07749 found by strong branching after 2136 iterations and 8 nodes (0.27 seconds)
Cbc0001I Search completed - best objective -45.07749, took 2349 iterations and 14 nodes (0.29 seconds)
Cbc0032I Strong branching done 152 times (1249 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 48 (-15) columns and 417 (-232) elements
Clp1000I sum of infeasibilities 1.42418e-07 - average 3.09605e-09, 30 fixed columns
Coin0506I Presolve 17 (-29) rows, 18 (-30) columns and 65 (-352) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 2.1859513 - largest nonzero change 2.8195548e-05 ( 0.0023983587%) - largest zero change 1.4239761e-05
Clp0000I Optimal - objective value 44.820331
Clp0000I Optimal - objective value 44.820331
Coin0511I After Postsolve, objective 44.820331, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.26365 - largest nonzero change 1.9886339e-05 ( 0.0017029246%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 80.117748
Clp0000I Optimal - objective value 80.117748
Clp0000I Optimal - objective value 80.117748
Coin0511I After Postsolve, objective 80.117748, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.11774827 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 425 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.300%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.98629
Cbc0038I Pass   1: suminf.    1.23783 (12) obj. -35.3693 iterations 9
Cbc0038I Pass   2: suminf.    1.23783 (12) obj. -35.3693 iterations 0
Cbc0038I Solution found of -20.155
Cbc0038I Rounding solution of -32.6485 is better than previous of -20.155

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.3646
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.44074 (15) obj. -36.3646 iterations 2
Cbc0038I Pass   4: suminf.    1.32880 (13) obj. -36.3646 iterations 7
Cbc0038I Pass   5: suminf.    0.09482 (2) obj. -36.3646 iterations 20
Cbc0038I Pass   6: suminf.    0.41626 (2) obj. -49.2419 iterations 1
Cbc0038I Pass   7: suminf.    0.38889 (1) obj. -48.6158 iterations 1
Cbc0038I Pass   8: suminf.    0.34637 (4) obj. -39.1091 iterations 7
Cbc0038I Pass   9: suminf.    0.08543 (2) obj. -36.3646 iterations 5
Cbc0038I Pass  10: suminf.    0.32038 (2) obj. -36.3646 iterations 1
Cbc0038I Pass  11: suminf.    2.48188 (8) obj. -36.3646 iterations 11
Cbc0038I Pass  12: suminf.    1.09928 (6) obj. -36.3646 iterations 9
Cbc0038I Pass  13: suminf.    0.61941 (2) obj. -39.1601 iterations 5
Cbc0038I Pass  14: suminf.    0.49721 (2) obj. -36.3646 iterations 1
Cbc0038I Pass  15: suminf.    0.62152 (2) obj. -36.3646 iterations 1
Cbc0038I Pass  16: suminf.    0.62152 (2) obj. -36.3646 iterations 0
Cbc0038I Pass  17: suminf.    0.68219 (3) obj. -36.3646 iterations 4
Cbc0038I Pass  18: suminf.    0.62407 (3) obj. -36.3646 iterations 2
Cbc0038I Pass  19: suminf.    0.75892 (2) obj. -42.3931 iterations 3
Cbc0038I Pass  20: suminf.    0.35653 (2) obj. -36.3646 iterations 5
Cbc0038I Pass  21: suminf.    0.62298 (2) obj. -42.8702 iterations 1
Cbc0038I Pass  22: suminf.    1.64171 (7) obj. -36.3646 iterations 16
Cbc0038I Pass  23: suminf.    1.06968 (5) obj. -36.3646 iterations 4
Cbc0038I Pass  24: suminf.    0.70321 (3) obj. -36.3646 iterations 4
Cbc0038I Pass  25: suminf.    0.70321 (3) obj. -36.3646 iterations 0
Cbc0038I Pass  26: suminf.    0.22306 (2) obj. -41.0432 iterations 1
Cbc0038I Pass  27: suminf.    0.09624 (1) obj. -36.3646 iterations 2
Cbc0038I Pass  28: suminf.    0.17886 (1) obj. -39.9642 iterations 1
Cbc0038I Pass  29: suminf.    2.16211 (9) obj. -36.3646 iterations 17
Cbc0038I Pass  30: suminf.    1.59184 (9) obj. -36.3646 iterations 3
Cbc0038I Pass  31: suminf.    1.03967 (3) obj. -36.3646 iterations 13
Cbc0038I Pass  32: suminf.    0.69032 (2) obj. -36.3646 iterations 2
Cbc0038I Rounding solution of -42.4825 is better than previous of -32.6485

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -42.4825 to -45.0775 (0.03 seconds)
Cbc0038I Round again with cutoff of -50.0238
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.27503 (16) obj. -50.0238 iterations 1
Cbc0038I Pass  33: suminf.    3.27503 (16) obj. -50.0238 iterations 0
Cbc0038I Pass  34: suminf.    0.65911 (3) obj. -50.0238 iterations 21
Cbc0038I Pass  35: suminf.    0.27765 (2) obj. -50.9812 iterations 2
Cbc0038I Pass  36: suminf.    0.80343 (3) obj. -50.0238 iterations 3
Cbc0038I Pass  37: suminf.    0.80343 (3) obj. -50.0238 iterations 0
Cbc0038I Pass  38: suminf.    1.21559 (3) obj. -50.0238 iterations 1
Cbc0038I Pass  39: suminf.    1.08887 (3) obj. -53.1177 iterations 1
Cbc0038I Pass  40: suminf.    1.34633 (4) obj. -50.0238 iterations 8
Cbc0038I Pass  41: suminf.    1.16230 (4) obj. -50.0238 iterations 2
Cbc0038I Pass  42: suminf.    1.33625 (6) obj. -50.0238 iterations 5
Cbc0038I Pass  43: suminf.    0.81431 (5) obj. -50.0238 iterations 4
Cbc0038I Pass  44: suminf.    1.08750 (4) obj. -50.0238 iterations 5
Cbc0038I Pass  45: suminf.    1.08181 (4) obj. -50.0238 iterations 1
Cbc0038I Pass  46: suminf.    0.64620 (4) obj. -50.0238 iterations 2
Cbc0038I Pass  47: suminf.    0.63860 (4) obj. -50.0238 iterations 1
Cbc0038I Pass  48: suminf.    1.08750 (4) obj. -50.0238 iterations 2
Cbc0038I Pass  49: suminf.    0.98546 (5) obj. -50.0238 iterations 4
Cbc0038I Pass  50: suminf.    0.98546 (5) obj. -50.0238 iterations 1
Cbc0038I Pass  51: suminf.    0.72165 (4) obj. -50.0238 iterations 3
Cbc0038I Pass  52: suminf.    0.51224 (3) obj. -50.0238 iterations 5
Cbc0038I Pass  53: suminf.    0.83750 (4) obj. -50.0238 iterations 4
Cbc0038I Pass  54: suminf.    0.83181 (4) obj. -50.0238 iterations 1
Cbc0038I Pass  55: suminf.    0.54167 (2) obj. -50.3722 iterations 3
Cbc0038I Pass  56: suminf.    3.25620 (10) obj. -50.0238 iterations 13
Cbc0038I Pass  57: suminf.    3.24984 (10) obj. -50.0238 iterations 2
Cbc0038I Pass  58: suminf.    1.08750 (4) obj. -50.0238 iterations 9
Cbc0038I Pass  59: suminf.    1.08181 (4) obj. -50.0238 iterations 1
Cbc0038I Pass  60: suminf.    0.64620 (4) obj. -50.0238 iterations 2
Cbc0038I Pass  61: suminf.    0.63860 (4) obj. -50.0238 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -45.0775 - took 0.02 seconds
Cbc0012I Integer solution of -45.07749 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 11 rows 14 columns
Cbc0031I 20 added rows had average density of 12.1
Cbc0013I At root node, 20 cuts changed objective from -69.808851 to -50.947839 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1302 row cuts average 2.3 elements, 8 column cuts (8 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 545 row cuts average 36.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 108 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 178 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 195 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.708 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45.07749 best solution, best possible -50.947839 (1.48 seconds)
Cbc0010I After 7 nodes, 6 on tree, -45.07749 best solution, best possible -50.89028 (2.19 seconds)
Cbc0001I Search completed - best objective -45.07749, took 2472 iterations and 26 nodes (2.83 seconds)
Cbc0032I Strong branching done 342 times (2289 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 37 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       2.83

