Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 1.6113e-05 - average 1.85207e-07, 8 fixed columns
Coin0506I Presolve 72 (-15) rows, 43 (-8) columns and 222 (-46) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 0.42616776 - largest nonzero change 0 ( 0%) - largest zero change 2.6118902e-05
Clp0000I Optimal - objective value 37.298975
Clp0000I Optimal - objective value 37.298975
Coin0511I After Postsolve, objective 37.298975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.298975
Clp0000I Optimal - objective value 37.298975
Clp0000I Optimal - objective value 37.298975
Coin0511I After Postsolve, objective 37.298975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.29897454 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.71724
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.9318 iterations 29
Cbc0038I Solution found of 9.9318
Cbc0038I Relaxing continuous gives 9.9318
Cbc0038I Rounding solution of 6.51184 is better than previous of 9.9318

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 44 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 6.51184 to -2.59516 (0.04 seconds)
Cbc0038I Round again with cutoff of -6.06563
Cbc0038I Pass   2: suminf.    1.75187 (8) obj. -6.06563 iterations 9
Cbc0038I Pass   3: suminf.    0.54605 (3) obj. -6.06563 iterations 8
Cbc0038I Pass   4: suminf.    1.37159 (5) obj. -6.06563 iterations 3
Cbc0038I Pass   5: suminf.    0.97540 (3) obj. -6.06563 iterations 13
Cbc0038I Pass   6: suminf.    0.40977 (2) obj. -6.06563 iterations 4
Cbc0038I Pass   7: suminf.    0.47075 (4) obj. -6.06563 iterations 5
Cbc0038I Pass   8: suminf.    0.47075 (4) obj. -6.06563 iterations 0
Cbc0038I Pass   9: suminf.    1.12668 (4) obj. -6.06563 iterations 3
Cbc0038I Pass  10: suminf.    1.11263 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  11: suminf.    0.68388 (4) obj. -6.06563 iterations 2
Cbc0038I Pass  12: suminf.    0.64077 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  13: suminf.    1.85279 (8) obj. -6.06563 iterations 16
Cbc0038I Pass  14: suminf.    1.17270 (5) obj. -6.06563 iterations 7
Cbc0038I Pass  15: suminf.    0.47075 (4) obj. -6.06563 iterations 8
Cbc0038I Pass  16: suminf.    0.47075 (4) obj. -6.06563 iterations 0
Cbc0038I Pass  17: suminf.    1.12668 (4) obj. -6.06563 iterations 3
Cbc0038I Pass  18: suminf.    1.11263 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  19: suminf.    0.68388 (4) obj. -6.06563 iterations 2
Cbc0038I Pass  20: suminf.    0.64077 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  21: suminf.    1.51669 (4) obj. -6.06563 iterations 14
Cbc0038I Pass  22: suminf.    0.48071 (4) obj. -6.06563 iterations 6
Cbc0038I Pass  23: suminf.    1.59416 (5) obj. -6.06563 iterations 7
Cbc0038I Pass  24: suminf.    1.07267 (4) obj. -6.06563 iterations 1
Cbc0038I Pass  25: suminf.    0.56005 (2) obj. -6.06563 iterations 3
Cbc0038I Pass  26: suminf.    1.48759 (7) obj. -6.06563 iterations 9
Cbc0038I Pass  27: suminf.    1.04931 (3) obj. -6.06563 iterations 8
Cbc0038I Pass  28: suminf.    0.61812 (4) obj. -6.06563 iterations 2
Cbc0038I Pass  29: suminf.    0.57501 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  30: suminf.    1.06336 (4) obj. -6.06563 iterations 2
Cbc0038I Pass  31: suminf.    2.93104 (12) obj. -6.06563 iterations 21
Cbc0038I Rounding solution of -3.30995 is better than previous of -2.59516

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 53 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -3.30995 to -5.04252 (0.10 seconds)
Cbc0038I Round again with cutoff of -12.3123
Cbc0038I Pass  31: suminf.    2.71674 (10) obj. -12.3123 iterations 4
Cbc0038I Pass  32: suminf.    1.43452 (5) obj. -12.3123 iterations 10
Cbc0038I Pass  33: suminf.    1.12777 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  34: suminf.    0.41140 (3) obj. -12.3123 iterations 1
Cbc0038I Pass  35: suminf.    1.22478 (5) obj. -12.3123 iterations 3
Cbc0038I Pass  36: suminf.    1.07809 (3) obj. -12.3123 iterations 2
Cbc0038I Pass  37: suminf.    0.90790 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  38: suminf.    0.90366 (3) obj. -12.3123 iterations 1
Cbc0038I Pass  39: suminf.    1.07703 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  40: suminf.    1.22901 (8) obj. -12.3123 iterations 13
Cbc0038I Pass  41: suminf.    1.20678 (7) obj. -12.3123 iterations 2
Cbc0038I Pass  42: suminf.    0.93715 (5) obj. -12.3123 iterations 8
Cbc0038I Pass  43: suminf.    0.79046 (3) obj. -12.3123 iterations 2
Cbc0038I Pass  44: suminf.    0.62809 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  45: suminf.    0.62385 (3) obj. -12.3123 iterations 1
Cbc0038I Pass  46: suminf.    0.78941 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  47: suminf.    1.68977 (7) obj. -12.3123 iterations 9
Cbc0038I Pass  48: suminf.    1.68977 (7) obj. -12.3123 iterations 0
Cbc0038I Pass  49: suminf.    2.87869 (7) obj. -12.3123 iterations 11
Cbc0038I Pass  50: suminf.    2.28321 (8) obj. -12.3123 iterations 2
Cbc0038I Pass  51: suminf.    2.04550 (7) obj. -12.3123 iterations 1
Cbc0038I Pass  52: suminf.    1.14691 (6) obj. -12.3123 iterations 3
Cbc0038I Pass  53: suminf.    2.08903 (5) obj. -12.3123 iterations 5
Cbc0038I Pass  54: suminf.    1.04070 (5) obj. -12.3123 iterations 5
Cbc0038I Pass  55: suminf.    1.01349 (5) obj. -12.3123 iterations 1
Cbc0038I Pass  56: suminf.    2.08903 (5) obj. -12.3123 iterations 6
Cbc0038I Pass  57: suminf.    3.59496 (11) obj. -12.3123 iterations 14
Cbc0038I Pass  58: suminf.    1.98400 (7) obj. -12.3123 iterations 9
Cbc0038I Pass  59: suminf.    0.80396 (4) obj. -12.3123 iterations 7
Cbc0038I Pass  60: suminf.    0.76248 (3) obj. -12.3123 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 59 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -5.04252 to -8.52704 (0.15 seconds)
Cbc0038I Round again with cutoff of -19.8083
Cbc0038I Pass  60: suminf.    4.02865 (15) obj. -19.8083 iterations 5
Cbc0038I Pass  61: suminf.    1.20269 (6) obj. -19.8083 iterations 15
Cbc0038I Pass  62: suminf.    1.20269 (6) obj. -19.8083 iterations 0
Cbc0038I Pass  63: suminf.    1.68985 (7) obj. -19.8083 iterations 10
Cbc0038I Pass  64: suminf.    1.42867 (7) obj. -19.8083 iterations 4
Cbc0038I Pass  65: suminf.    1.67040 (8) obj. -19.8083 iterations 12
Cbc0038I Pass  66: suminf.    3.42143 (10) obj. -19.8083 iterations 11
Cbc0038I Pass  67: suminf.    3.42143 (10) obj. -19.8083 iterations 0
Cbc0038I Pass  68: suminf.    2.52565 (9) obj. -19.8083 iterations 6
Cbc0038I Pass  69: suminf.    1.74700 (7) obj. -19.8083 iterations 2
Cbc0038I Pass  70: suminf.    3.42143 (10) obj. -19.8083 iterations 6
Cbc0038I Pass  71: suminf.    4.47060 (14) obj. -19.8083 iterations 19
Cbc0038I Pass  72: suminf.    1.95858 (9) obj. -19.8083 iterations 9
Cbc0038I Pass  73: suminf.    1.95858 (9) obj. -19.8083 iterations 0
Cbc0038I Pass  74: suminf.    2.90645 (8) obj. -19.8083 iterations 8
Cbc0038I Pass  75: suminf.    2.27448 (7) obj. -19.8083 iterations 2
Cbc0038I Pass  76: suminf.    2.69857 (7) obj. -19.8083 iterations 3
Cbc0038I Pass  77: suminf.    2.50770 (7) obj. -19.8083 iterations 1
Cbc0038I Pass  78: suminf.    2.50770 (7) obj. -19.8083 iterations 0
Cbc0038I Pass  79: suminf.    2.35112 (7) obj. -19.8083 iterations 3
Cbc0038I Pass  80: suminf.    1.91201 (6) obj. -19.8083 iterations 2
Cbc0038I Pass  81: suminf.    1.81720 (7) obj. -19.8083 iterations 2
Cbc0038I Pass  82: suminf.    1.67792 (8) obj. -19.8083 iterations 1
Cbc0038I Pass  83: suminf.    3.43010 (8) obj. -19.8083 iterations 5
Cbc0038I Pass  84: suminf.    1.00744 (6) obj. -19.8083 iterations 2
Cbc0038I Pass  85: suminf.    0.93050 (5) obj. -19.8083 iterations 2
Cbc0038I Pass  86: suminf.    1.65144 (7) obj. -19.8083 iterations 7
Cbc0038I Pass  87: suminf.    1.54101 (7) obj. -19.8083 iterations 4
Cbc0038I Pass  88: suminf.    1.68985 (7) obj. -19.8083 iterations 6
Cbc0038I Pass  89: suminf.    1.42867 (7) obj. -19.8083 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 44 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -8.52704 - took 0.16 seconds
Cbc0012I Integer solution of -8.527041 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 44 rows 30 columns
Cbc0031I 20 added rows had average density of 36.6
Cbc0013I At root node, 20 cuts changed objective from -37.298975 to -24.452541 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6618 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1189 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 8 nodes, 9 on tree, -8.527041 best solution, best possible -24.452541 (0.69 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 12 rows 12 columns
Cbc0001I Search completed - best objective -8.527040999999997, took 6579 iterations and 50 nodes (0.77 seconds)
Cbc0032I Strong branching done 600 times (11363 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 21, 92 variables fixed on reduced cost
Total time (CPU seconds):       0.75   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-36) rows, 81 (-21) columns and 1070 (-508) elements
Clp1000I sum of infeasibilities 6.67e-08 - average 9.80882e-10, 49 fixed columns
Coin0506I Presolve 24 (-44) rows, 32 (-49) columns and 107 (-963) elements
Clp0006I 0  Obj 1.521094 Dual inf 6.1130373 (30)
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 0.44095818 - largest nonzero change 2.8178787e-05 ( 0.0022179273%) - largest zero change 2.9023528e-05
Clp0000I Optimal - objective value 2.2499363
Clp0000I Optimal - objective value 2.2499363
Coin0511I After Postsolve, objective 2.2499363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2.2499363 Dual inf 9.3511249 (31)
Clp0014I Perturbing problem by 0.001% of 4.4348758 - largest nonzero change 2.9885368e-05 ( 0.0012920527%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 57.402192
Clp0000I Optimal - objective value 57.402192
Clp0000I Optimal - objective value 57.402192
Coin0511I After Postsolve, objective 57.402192, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.40219181 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 70 rows, 83 columns (83 integer (83 of which binary)) and 1080 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.171%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.35165
Cbc0038I Pass   1: suminf.    2.93921 (25) obj. -47.4877 iterations 7
Cbc0038I Pass   2: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Solution found of 0.51783
Cbc0038I Rounding solution of -3.93662 is better than previous of 0.51783

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -9.16938
Cbc0038I Pass   3: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Pass   4: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Pass   5: suminf.    0.55446 (5) obj. -9.16938 iterations 22
Cbc0038I Pass   6: suminf.    0.16000 (1) obj. -9.56217 iterations 5
Cbc0038I Pass   7: suminf.    0.19273 (1) obj. -9.16938 iterations 1
Cbc0038I Pass   8: suminf.    1.71184 (8) obj. -9.16938 iterations 20
Cbc0038I Pass   9: suminf.    1.22632 (7) obj. -9.16938 iterations 6
Cbc0038I Pass  10: suminf.    0.75198 (3) obj. -9.16938 iterations 14
Cbc0038I Pass  11: suminf.    0.21403 (2) obj. -11.9202 iterations 5
Cbc0038I Pass  12: suminf.    0.53934 (2) obj. -9.16938 iterations 2
Cbc0038I Pass  13: suminf.    2.96665 (11) obj. -9.16938 iterations 20
Cbc0038I Pass  14: suminf.    1.81704 (9) obj. -9.16938 iterations 8
Cbc0038I Pass  15: suminf.    1.17877 (4) obj. -9.16938 iterations 10
Cbc0038I Pass  16: suminf.    0.93083 (4) obj. -9.16938 iterations 3
Cbc0038I Pass  17: suminf.    0.57813 (4) obj. -9.16938 iterations 6
Cbc0038I Pass  18: suminf.    0.45892 (3) obj. -9.16938 iterations 8
Cbc0038I Pass  19: suminf.    0.40968 (2) obj. -9.16938 iterations 5
Cbc0038I Pass  20: suminf.    0.29561 (2) obj. -10.5382 iterations 1
Cbc0038I Pass  21: suminf.    0.47806 (2) obj. -9.16938 iterations 3
Cbc0038I Pass  22: suminf.    2.36757 (12) obj. -9.16938 iterations 27
Cbc0038I Pass  23: suminf.    2.36757 (12) obj. -9.16938 iterations 1
Cbc0038I Pass  24: suminf.    1.09552 (5) obj. -9.16938 iterations 19
Cbc0038I Pass  25: suminf.    1.09552 (5) obj. -9.16938 iterations 4
Cbc0038I Pass  26: suminf.    1.21307 (5) obj. -9.16938 iterations 5
Cbc0038I Pass  27: suminf.    1.21307 (5) obj. -9.16938 iterations 5
Cbc0038I Pass  28: suminf.    1.09552 (5) obj. -9.16938 iterations 7
Cbc0038I Pass  29: suminf.    1.72580 (8) obj. -9.16938 iterations 12
Cbc0038I Pass  30: suminf.    1.59331 (9) obj. -9.16938 iterations 3
Cbc0038I Pass  31: suminf.    1.34546 (5) obj. -9.16938 iterations 9
Cbc0038I Pass  32: suminf.    1.16177 (5) obj. -9.16938 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 83 columns, reduced to 11 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 0.51783 to -6.26342 (0.03 seconds)
Cbc0038I Round again with cutoff of -18.5882
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Pass  33: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Pass  34: suminf.    1.34921 (11) obj. -18.5882 iterations 16
Cbc0038I Pass  35: suminf.    1.03320 (11) obj. -22.3804 iterations 1
Cbc0038I Pass  36: suminf.    0.84249 (8) obj. -18.5882 iterations 16
Cbc0038I Pass  37: suminf.    0.84063 (7) obj. -18.5882 iterations 1
Cbc0038I Pass  38: suminf.    0.74471 (7) obj. -18.5882 iterations 10
Cbc0038I Pass  39: suminf.    0.74471 (7) obj. -18.5882 iterations 1
Cbc0038I Pass  40: suminf.    1.15583 (5) obj. -18.5882 iterations 8
Cbc0038I Pass  41: suminf.    1.15583 (5) obj. -18.5882 iterations 1
Cbc0038I Pass  42: suminf.    1.25614 (5) obj. -18.5882 iterations 3
Cbc0038I Pass  43: suminf.    0.77210 (4) obj. -18.5882 iterations 2
Cbc0038I Pass  44: suminf.    0.65101 (4) obj. -19.1936 iterations 2
Cbc0038I Pass  45: suminf.    1.15583 (5) obj. -18.5882 iterations 5
Cbc0038I Pass  46: suminf.    1.15583 (5) obj. -18.5882 iterations 0
Cbc0038I Pass  47: suminf.    1.25614 (5) obj. -18.5882 iterations 3
Cbc0038I Pass  48: suminf.    0.77210 (4) obj. -18.5882 iterations 2
Cbc0038I Pass  49: suminf.    0.65101 (4) obj. -19.1936 iterations 2
Cbc0038I Pass  50: suminf.    1.15583 (5) obj. -18.5882 iterations 5
Cbc0038I Pass  51: suminf.    1.15583 (5) obj. -18.5882 iterations 0
Cbc0038I Pass  52: suminf.    1.25614 (5) obj. -18.5882 iterations 3
Cbc0038I Pass  53: suminf.    0.77210 (4) obj. -18.5882 iterations 2
Cbc0038I Pass  54: suminf.    0.65101 (4) obj. -19.1936 iterations 2
Cbc0038I Pass  55: suminf.    1.15583 (5) obj. -18.5882 iterations 5
Cbc0038I Pass  56: suminf.    1.15583 (5) obj. -18.5882 iterations 0
Cbc0038I Pass  57: suminf.    1.25614 (5) obj. -18.5882 iterations 3
Cbc0038I Pass  58: suminf.    0.77210 (4) obj. -18.5882 iterations 2
Cbc0038I Pass  59: suminf.    0.65101 (4) obj. -19.1936 iterations 2
Cbc0038I Pass  60: suminf.    1.15583 (5) obj. -18.5882 iterations 5
Cbc0038I Pass  61: suminf.    1.15583 (5) obj. -18.5882 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -6.26342 - took 0.03 seconds
Cbc0012I Integer solution of -6.26342 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 70 rows 83 columns, reduced to 1 rows 2 columns
Cbc0031I 35 added rows had average density of 34.314286
Cbc0013I At root node, 35 cuts changed objective from -56.263367 to -12.643876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6721 row cuts average 5.8 elements, 3 column cuts (3 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1066 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 40 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 779 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 297 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.628 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.26342 best solution, best possible -12.643876 (1.65 seconds)
Cbc0012I Integer solution of -7.799101 found by rounding after 3646 iterations and 9 nodes (1.84 seconds)
Cbc0004I Integer solution of -8.527041 found after 3720 iterations and 13 nodes (1.85 seconds)
Cbc0001I Search completed - best objective -8.527040999999997, took 4089 iterations and 24 nodes (1.86 seconds)
Cbc0032I Strong branching done 376 times (5882 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 40 variables fixed on reduced cost
Total time (CPU seconds):       1.38   (Wallclock seconds):       1.87

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 1.6113e-05 - average 1.85207e-07, 8 fixed columns
Coin0506I Presolve 72 (-15) rows, 43 (-8) columns and 222 (-46) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 0.42616776 - largest nonzero change 0 ( 0%) - largest zero change 2.6118902e-05
Clp0000I Optimal - objective value 37.298975
Clp0000I Optimal - objective value 37.298975
Coin0511I After Postsolve, objective 37.298975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.298975
Clp0000I Optimal - objective value 37.298975
Clp0000I Optimal - objective value 37.298975
Coin0511I After Postsolve, objective 37.298975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.29897454 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.71724
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.9318 iterations 29
Cbc0038I Solution found of 9.9318
Cbc0038I Relaxing continuous gives 9.9318
Cbc0038I Rounding solution of 6.51184 is better than previous of 9.9318

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 44 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 6.51184 to -2.59516 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.06563
Cbc0038I Pass   2: suminf.    1.75187 (8) obj. -6.06563 iterations 9
Cbc0038I Pass   3: suminf.    0.54605 (3) obj. -6.06563 iterations 8
Cbc0038I Pass   4: suminf.    1.37159 (5) obj. -6.06563 iterations 3
Cbc0038I Pass   5: suminf.    0.97540 (3) obj. -6.06563 iterations 13
Cbc0038I Pass   6: suminf.    0.40977 (2) obj. -6.06563 iterations 4
Cbc0038I Pass   7: suminf.    0.47075 (4) obj. -6.06563 iterations 5
Cbc0038I Pass   8: suminf.    0.47075 (4) obj. -6.06563 iterations 0
Cbc0038I Pass   9: suminf.    1.12668 (4) obj. -6.06563 iterations 3
Cbc0038I Pass  10: suminf.    1.11263 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  11: suminf.    0.68388 (4) obj. -6.06563 iterations 2
Cbc0038I Pass  12: suminf.    0.64077 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  13: suminf.    1.85279 (8) obj. -6.06563 iterations 16
Cbc0038I Pass  14: suminf.    1.17270 (5) obj. -6.06563 iterations 7
Cbc0038I Pass  15: suminf.    0.47075 (4) obj. -6.06563 iterations 8
Cbc0038I Pass  16: suminf.    0.47075 (4) obj. -6.06563 iterations 0
Cbc0038I Pass  17: suminf.    1.12668 (4) obj. -6.06563 iterations 3
Cbc0038I Pass  18: suminf.    1.11263 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  19: suminf.    0.68388 (4) obj. -6.06563 iterations 2
Cbc0038I Pass  20: suminf.    0.64077 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  21: suminf.    1.51669 (4) obj. -6.06563 iterations 14
Cbc0038I Pass  22: suminf.    0.48071 (4) obj. -6.06563 iterations 6
Cbc0038I Pass  23: suminf.    1.59416 (5) obj. -6.06563 iterations 7
Cbc0038I Pass  24: suminf.    1.07267 (4) obj. -6.06563 iterations 1
Cbc0038I Pass  25: suminf.    0.56005 (2) obj. -6.06563 iterations 3
Cbc0038I Pass  26: suminf.    1.48759 (7) obj. -6.06563 iterations 9
Cbc0038I Pass  27: suminf.    1.04931 (3) obj. -6.06563 iterations 8
Cbc0038I Pass  28: suminf.    0.61812 (4) obj. -6.06563 iterations 2
Cbc0038I Pass  29: suminf.    0.57501 (3) obj. -6.06563 iterations 1
Cbc0038I Pass  30: suminf.    1.06336 (4) obj. -6.06563 iterations 2
Cbc0038I Pass  31: suminf.    2.93104 (12) obj. -6.06563 iterations 21
Cbc0038I Rounding solution of -3.30995 is better than previous of -2.59516

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 53 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -3.30995 to -5.04252 (0.10 seconds)
Cbc0038I Round again with cutoff of -12.3123
Cbc0038I Pass  31: suminf.    2.71674 (10) obj. -12.3123 iterations 4
Cbc0038I Pass  32: suminf.    1.43452 (5) obj. -12.3123 iterations 10
Cbc0038I Pass  33: suminf.    1.12777 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  34: suminf.    0.41140 (3) obj. -12.3123 iterations 1
Cbc0038I Pass  35: suminf.    1.22478 (5) obj. -12.3123 iterations 3
Cbc0038I Pass  36: suminf.    1.07809 (3) obj. -12.3123 iterations 2
Cbc0038I Pass  37: suminf.    0.90790 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  38: suminf.    0.90366 (3) obj. -12.3123 iterations 1
Cbc0038I Pass  39: suminf.    1.07703 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  40: suminf.    1.22901 (8) obj. -12.3123 iterations 13
Cbc0038I Pass  41: suminf.    1.20678 (7) obj. -12.3123 iterations 2
Cbc0038I Pass  42: suminf.    0.93715 (5) obj. -12.3123 iterations 8
Cbc0038I Pass  43: suminf.    0.79046 (3) obj. -12.3123 iterations 2
Cbc0038I Pass  44: suminf.    0.62809 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  45: suminf.    0.62385 (3) obj. -12.3123 iterations 1
Cbc0038I Pass  46: suminf.    0.78941 (4) obj. -12.3123 iterations 2
Cbc0038I Pass  47: suminf.    1.68977 (7) obj. -12.3123 iterations 9
Cbc0038I Pass  48: suminf.    1.68977 (7) obj. -12.3123 iterations 0
Cbc0038I Pass  49: suminf.    2.87869 (7) obj. -12.3123 iterations 11
Cbc0038I Pass  50: suminf.    2.28321 (8) obj. -12.3123 iterations 2
Cbc0038I Pass  51: suminf.    2.04550 (7) obj. -12.3123 iterations 1
Cbc0038I Pass  52: suminf.    1.14691 (6) obj. -12.3123 iterations 3
Cbc0038I Pass  53: suminf.    2.08903 (5) obj. -12.3123 iterations 5
Cbc0038I Pass  54: suminf.    1.04070 (5) obj. -12.3123 iterations 5
Cbc0038I Pass  55: suminf.    1.01349 (5) obj. -12.3123 iterations 1
Cbc0038I Pass  56: suminf.    2.08903 (5) obj. -12.3123 iterations 6
Cbc0038I Pass  57: suminf.    3.59496 (11) obj. -12.3123 iterations 14
Cbc0038I Pass  58: suminf.    1.98400 (7) obj. -12.3123 iterations 9
Cbc0038I Pass  59: suminf.    0.80396 (4) obj. -12.3123 iterations 7
Cbc0038I Pass  60: suminf.    0.76248 (3) obj. -12.3123 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 59 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -5.04252 to -8.52704 (0.16 seconds)
Cbc0038I Round again with cutoff of -19.8083
Cbc0038I Pass  60: suminf.    4.02865 (15) obj. -19.8083 iterations 5
Cbc0038I Pass  61: suminf.    1.20269 (6) obj. -19.8083 iterations 15
Cbc0038I Pass  62: suminf.    1.20269 (6) obj. -19.8083 iterations 0
Cbc0038I Pass  63: suminf.    1.68985 (7) obj. -19.8083 iterations 10
Cbc0038I Pass  64: suminf.    1.42867 (7) obj. -19.8083 iterations 4
Cbc0038I Pass  65: suminf.    1.67040 (8) obj. -19.8083 iterations 12
Cbc0038I Pass  66: suminf.    3.42143 (10) obj. -19.8083 iterations 11
Cbc0038I Pass  67: suminf.    3.42143 (10) obj. -19.8083 iterations 0
Cbc0038I Pass  68: suminf.    2.52565 (9) obj. -19.8083 iterations 6
Cbc0038I Pass  69: suminf.    1.74700 (7) obj. -19.8083 iterations 2
Cbc0038I Pass  70: suminf.    3.42143 (10) obj. -19.8083 iterations 6
Cbc0038I Pass  71: suminf.    4.47060 (14) obj. -19.8083 iterations 19
Cbc0038I Pass  72: suminf.    1.95858 (9) obj. -19.8083 iterations 9
Cbc0038I Pass  73: suminf.    1.95858 (9) obj. -19.8083 iterations 0
Cbc0038I Pass  74: suminf.    2.90645 (8) obj. -19.8083 iterations 8
Cbc0038I Pass  75: suminf.    2.27448 (7) obj. -19.8083 iterations 2
Cbc0038I Pass  76: suminf.    2.69857 (7) obj. -19.8083 iterations 3
Cbc0038I Pass  77: suminf.    2.50770 (7) obj. -19.8083 iterations 1
Cbc0038I Pass  78: suminf.    2.50770 (7) obj. -19.8083 iterations 0
Cbc0038I Pass  79: suminf.    2.35112 (7) obj. -19.8083 iterations 3
Cbc0038I Pass  80: suminf.    1.91201 (6) obj. -19.8083 iterations 2
Cbc0038I Pass  81: suminf.    1.81720 (7) obj. -19.8083 iterations 2
Cbc0038I Pass  82: suminf.    1.67792 (8) obj. -19.8083 iterations 1
Cbc0038I Pass  83: suminf.    3.43010 (8) obj. -19.8083 iterations 5
Cbc0038I Pass  84: suminf.    1.00744 (6) obj. -19.8083 iterations 2
Cbc0038I Pass  85: suminf.    0.93050 (5) obj. -19.8083 iterations 2
Cbc0038I Pass  86: suminf.    1.65144 (7) obj. -19.8083 iterations 7
Cbc0038I Pass  87: suminf.    1.54101 (7) obj. -19.8083 iterations 4
Cbc0038I Pass  88: suminf.    1.68985 (7) obj. -19.8083 iterations 6
Cbc0038I Pass  89: suminf.    1.42867 (7) obj. -19.8083 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 44 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -8.52704 - took 0.17 seconds
Cbc0012I Integer solution of -8.527041 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 44 rows 30 columns
Cbc0031I 20 added rows had average density of 36.6
Cbc0013I At root node, 20 cuts changed objective from -37.298975 to -24.452541 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6618 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1189 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.527041 best solution, best possible -24.452541 (0.69 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 12 rows 12 columns
Cbc0001I Search completed - best objective -8.527040999999997, took 6579 iterations and 50 nodes (0.89 seconds)
Cbc0032I Strong branching done 600 times (11363 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 21, 92 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.89

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-37) rows, 81 (-22) columns and 1070 (-509) elements
Clp1000I sum of infeasibilities 6.67e-08 - average 9.80882e-10, 49 fixed columns
Coin0506I Presolve 24 (-44) rows, 32 (-49) columns and 107 (-963) elements
Clp0006I 0  Obj 1.521094 Dual inf 6.1130373 (30)
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 0.44095818 - largest nonzero change 2.8178787e-05 ( 0.0022179273%) - largest zero change 2.9023528e-05
Clp0000I Optimal - objective value 2.2499363
Clp0000I Optimal - objective value 2.2499363
Coin0511I After Postsolve, objective 2.2499363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2.2499363 Dual inf 9.3511249 (31)
Clp0014I Perturbing problem by 0.001% of 4.4348758 - largest nonzero change 2.9885368e-05 ( 0.0012920527%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 57.402192
Clp0000I Optimal - objective value 57.402192
Clp0000I Optimal - objective value 57.402192
Coin0511I After Postsolve, objective 57.402192, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.40219181 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 70 rows, 83 columns (83 integer (83 of which binary)) and 1080 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.171%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.35165
Cbc0038I Pass   1: suminf.    2.93921 (25) obj. -47.4877 iterations 7
Cbc0038I Pass   2: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Solution found of 0.51783
Cbc0038I Rounding solution of -3.93662 is better than previous of 0.51783

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -9.16938
Cbc0038I Pass   3: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Pass   4: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Pass   5: suminf.    0.55446 (5) obj. -9.16938 iterations 22
Cbc0038I Pass   6: suminf.    0.16000 (1) obj. -9.56217 iterations 5
Cbc0038I Pass   7: suminf.    0.19273 (1) obj. -9.16938 iterations 1
Cbc0038I Pass   8: suminf.    1.71184 (8) obj. -9.16938 iterations 20
Cbc0038I Pass   9: suminf.    1.22632 (7) obj. -9.16938 iterations 6
Cbc0038I Pass  10: suminf.    0.75198 (3) obj. -9.16938 iterations 14
Cbc0038I Pass  11: suminf.    0.21403 (2) obj. -11.9202 iterations 5
Cbc0038I Pass  12: suminf.    0.53934 (2) obj. -9.16938 iterations 2
Cbc0038I Pass  13: suminf.    2.96665 (11) obj. -9.16938 iterations 20
Cbc0038I Pass  14: suminf.    1.81704 (9) obj. -9.16938 iterations 8
Cbc0038I Pass  15: suminf.    1.17877 (4) obj. -9.16938 iterations 10
Cbc0038I Pass  16: suminf.    0.93083 (4) obj. -9.16938 iterations 3
Cbc0038I Pass  17: suminf.    0.57813 (4) obj. -9.16938 iterations 6
Cbc0038I Pass  18: suminf.    0.45892 (3) obj. -9.16938 iterations 8
Cbc0038I Pass  19: suminf.    0.40968 (2) obj. -9.16938 iterations 5
Cbc0038I Pass  20: suminf.    0.29561 (2) obj. -10.5382 iterations 1
Cbc0038I Pass  21: suminf.    0.47806 (2) obj. -9.16938 iterations 3
Cbc0038I Pass  22: suminf.    2.36757 (12) obj. -9.16938 iterations 27
Cbc0038I Pass  23: suminf.    2.36757 (12) obj. -9.16938 iterations 1
Cbc0038I Pass  24: suminf.    1.09552 (5) obj. -9.16938 iterations 19
Cbc0038I Pass  25: suminf.    1.09552 (5) obj. -9.16938 iterations 4
Cbc0038I Pass  26: suminf.    1.21307 (5) obj. -9.16938 iterations 5
Cbc0038I Pass  27: suminf.    1.21307 (5) obj. -9.16938 iterations 5
Cbc0038I Pass  28: suminf.    1.09552 (5) obj. -9.16938 iterations 7
Cbc0038I Pass  29: suminf.    1.72580 (8) obj. -9.16938 iterations 12
Cbc0038I Pass  30: suminf.    1.59331 (9) obj. -9.16938 iterations 3
Cbc0038I Pass  31: suminf.    1.34546 (5) obj. -9.16938 iterations 9
Cbc0038I Pass  32: suminf.    1.16177 (5) obj. -9.16938 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 83 columns, reduced to 11 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 0.51783 to -6.26342 (0.03 seconds)
Cbc0038I Round again with cutoff of -18.5882
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Pass  33: suminf.    2.93921 (25) obj. -47.4877 iterations 0
Cbc0038I Pass  34: suminf.    1.34921 (11) obj. -18.5882 iterations 16
Cbc0038I Pass  35: suminf.    1.03320 (11) obj. -22.3804 iterations 1
Cbc0038I Pass  36: suminf.    0.84249 (8) obj. -18.5882 iterations 16
Cbc0038I Pass  37: suminf.    0.84063 (7) obj. -18.5882 iterations 1
Cbc0038I Pass  38: suminf.    0.74471 (7) obj. -18.5882 iterations 10
Cbc0038I Pass  39: suminf.    0.74471 (7) obj. -18.5882 iterations 1
Cbc0038I Pass  40: suminf.    1.15583 (5) obj. -18.5882 iterations 8
Cbc0038I Pass  41: suminf.    1.15583 (5) obj. -18.5882 iterations 1
Cbc0038I Pass  42: suminf.    1.25614 (5) obj. -18.5882 iterations 3
Cbc0038I Pass  43: suminf.    0.77210 (4) obj. -18.5882 iterations 2
Cbc0038I Pass  44: suminf.    0.65101 (4) obj. -19.1936 iterations 2
Cbc0038I Pass  45: suminf.    1.15583 (5) obj. -18.5882 iterations 5
Cbc0038I Pass  46: suminf.    1.15583 (5) obj. -18.5882 iterations 0
Cbc0038I Pass  47: suminf.    1.25614 (5) obj. -18.5882 iterations 3
Cbc0038I Pass  48: suminf.    0.77210 (4) obj. -18.5882 iterations 2
Cbc0038I Pass  49: suminf.    0.65101 (4) obj. -19.1936 iterations 2
Cbc0038I Pass  50: suminf.    1.15583 (5) obj. -18.5882 iterations 5
Cbc0038I Pass  51: suminf.    1.15583 (5) obj. -18.5882 iterations 0
Cbc0038I Pass  52: suminf.    1.25614 (5) obj. -18.5882 iterations 3
Cbc0038I Pass  53: suminf.    0.77210 (4) obj. -18.5882 iterations 2
Cbc0038I Pass  54: suminf.    0.65101 (4) obj. -19.1936 iterations 2
Cbc0038I Pass  55: suminf.    1.15583 (5) obj. -18.5882 iterations 5
Cbc0038I Pass  56: suminf.    1.15583 (5) obj. -18.5882 iterations 0
Cbc0038I Pass  57: suminf.    1.25614 (5) obj. -18.5882 iterations 3
Cbc0038I Pass  58: suminf.    0.77210 (4) obj. -18.5882 iterations 2
Cbc0038I Pass  59: suminf.    0.65101 (4) obj. -19.1936 iterations 2
Cbc0038I Pass  60: suminf.    1.15583 (5) obj. -18.5882 iterations 5
Cbc0038I Pass  61: suminf.    1.15583 (5) obj. -18.5882 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -6.26342 - took 0.03 seconds
Cbc0012I Integer solution of -6.26342 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 70 rows 83 columns, reduced to 1 rows 2 columns
Cbc0031I 35 added rows had average density of 34.314286
Cbc0013I At root node, 35 cuts changed objective from -56.263367 to -12.643876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6721 row cuts average 5.8 elements, 3 column cuts (3 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1066 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 40 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 779 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 297 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.689 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.26342 best solution, best possible -12.643876 (1.89 seconds)
Cbc0012I Integer solution of -7.799101 found by rounding after 3646 iterations and 9 nodes (2.08 seconds)
Cbc0004I Integer solution of -8.527041 found after 3720 iterations and 13 nodes (2.10 seconds)
Cbc0001I Search completed - best objective -8.527040999999997, took 4089 iterations and 24 nodes (2.11 seconds)
Cbc0032I Strong branching done 376 times (5882 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 40 variables fixed on reduced cost
Total time (CPU seconds):       1.52   (Wallclock seconds):       2.12

