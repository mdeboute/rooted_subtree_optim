Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 99 (-4) columns and 557 (-46) elements
Clp1000I sum of infeasibilities 0.000122956 - average 6.71889e-07, 42 fixed columns
Coin0506I Presolve 89 (-94) rows, 51 (-48) columns and 273 (-284) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 0.27404038 - largest nonzero change 0 ( 0%) - largest zero change 2.8257266e-05
Clp0000I Optimal - objective value 65.199847
Clp0000I Optimal - objective value 65.199847
Coin0511I After Postsolve, objective 65.199847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20500251 - largest nonzero change 0 ( 0%) - largest zero change 2.8551042e-05
Clp0000I Optimal - objective value 65.199847
Clp0000I Optimal - objective value 65.199847
Clp0000I Optimal - objective value 65.199847
Coin0511I After Postsolve, objective 65.199847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.19984703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 99 columns (98 integer (98 of which binary)) and 566 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.81485
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.99988 iterations 43
Cbc0038I Solution found of 0.99988
Cbc0038I Relaxing continuous gives 0.99988
Cbc0038I Rounding solution of -17.5096 is better than previous of 0.99988

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 99 columns, reduced to 43 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -17.5096 to -40.6769 (0.04 seconds)
Cbc0038I Round again with cutoff of -43.1143
Cbc0038I Pass   2: suminf.    2.27308 (9) obj. -43.1143 iterations 17
Cbc0038I Pass   3: suminf.    1.49590 (5) obj. -43.1143 iterations 12
Cbc0038I Pass   4: suminf.    1.36338 (5) obj. -43.1143 iterations 9
Cbc0038I Pass   5: suminf.    2.22548 (7) obj. -43.1143 iterations 14
Cbc0038I Pass   6: suminf.    2.22548 (7) obj. -43.1143 iterations 2
Cbc0038I Pass   7: suminf.    1.59359 (8) obj. -43.1143 iterations 16
Cbc0038I Pass   8: suminf.    1.05984 (5) obj. -43.1143 iterations 4
Cbc0038I Pass   9: suminf.    1.06592 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  10: suminf.    1.51901 (8) obj. -43.1143 iterations 6
Cbc0038I Pass  11: suminf.    1.29326 (6) obj. -43.1143 iterations 2
Cbc0038I Pass  12: suminf.    1.06167 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  13: suminf.    1.59359 (8) obj. -43.1143 iterations 7
Cbc0038I Pass  14: suminf.    1.05984 (5) obj. -43.1143 iterations 4
Cbc0038I Pass  15: suminf.    1.06592 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  16: suminf.    1.51901 (8) obj. -43.1143 iterations 6
Cbc0038I Pass  17: suminf.    1.29326 (6) obj. -43.1143 iterations 2
Cbc0038I Pass  18: suminf.    1.06167 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  19: suminf.    1.59359 (8) obj. -43.1143 iterations 7
Cbc0038I Pass  20: suminf.    1.05984 (5) obj. -43.1143 iterations 4
Cbc0038I Pass  21: suminf.    1.06592 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  22: suminf.    1.51901 (8) obj. -43.1143 iterations 6
Cbc0038I Pass  23: suminf.    1.29326 (6) obj. -43.1143 iterations 2
Cbc0038I Pass  24: suminf.    1.06167 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  25: suminf.    1.59359 (8) obj. -43.1143 iterations 7
Cbc0038I Pass  26: suminf.    1.05984 (5) obj. -43.1143 iterations 4
Cbc0038I Pass  27: suminf.    1.06592 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  28: suminf.    1.51901 (8) obj. -43.1143 iterations 6
Cbc0038I Pass  29: suminf.    1.29326 (6) obj. -43.1143 iterations 2
Cbc0038I Pass  30: suminf.    1.06167 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  31: suminf.    1.59359 (8) obj. -43.1143 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 99 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -40.6769 - took 0.06 seconds
Cbc0012I Integer solution of -40.67689 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 182 rows 99 columns, reduced to 43 rows 27 columns
Cbc0031I 22 added rows had average density of 69.136364
Cbc0013I At root node, 22 cuts changed objective from -65.050205 to -56.865862 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6804 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1339 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.67689 best solution, best possible -56.865862 (0.74 seconds)
Cbc0038I Full problem 182 rows 99 columns, reduced to 10 rows 14 columns
Cbc0001I Search completed - best objective -40.67689, took 6992 iterations and 58 nodes (0.99 seconds)
Cbc0032I Strong branching done 642 times (12256 iterations), fathomed 2 nodes and fixed 19 variables
Cbc0035I Maximum depth 18, 286 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       1.00

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-78) rows, 139 (-63) columns and 2424 (-3229) elements
Clp1000I sum of infeasibilities 3.37854e-07 - average 2.68138e-09, 43 fixed columns
Coin0506I Presolve 86 (-40) rows, 96 (-43) columns and 1418 (-1006) elements
Clp0006I 0  Obj 74.850577 Dual inf 10.733993 (93)
Clp0029I End of values pass after 96 iterations
Clp0014I Perturbing problem by 0.001% of 1.7149773 - largest nonzero change 2.8521425e-05 ( 0.0022247614%) - largest zero change 2.9654836e-05
Clp0000I Optimal - objective value 88.45536
Clp0000I Optimal - objective value 88.45536
Coin0511I After Postsolve, objective 88.45536, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 88.45536 Dual inf 0.38742131 (1)
Clp0014I Perturbing problem by 0.001% of 1.4927348 - largest nonzero change 2.3540427e-05 ( 0.0018562596%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 88.45536
Clp0000I Optimal - objective value 88.45536
Clp0000I Optimal - objective value 88.45536
Coin0511I After Postsolve, objective 88.45536, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.45535985 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 139 columns (139 integer (139 of which binary)) and 2442 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.828%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 5.47763
Cbc0038I Pass   1: suminf.    3.44626 (30) obj. -58.0458 iterations 17
Cbc0038I Pass   2: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass   3: suminf.    0.15476 (2) obj. -32.4484 iterations 28
Cbc0038I Solution found of -30.6032
Cbc0038I Rounding solution of -35.8432 is better than previous of -30.6032

Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 139 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -39.2993
Cbc0038I Pass   4: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass   5: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass   6: suminf.    0.92389 (10) obj. -39.6793 iterations 20
Cbc0038I Pass   7: suminf.    0.73840 (7) obj. -39.2993 iterations 21
Cbc0038I Pass   8: suminf.    0.69946 (4) obj. -39.2993 iterations 13
Cbc0038I Pass   9: suminf.    0.57234 (2) obj. -39.2993 iterations 6
Cbc0038I Pass  10: suminf.    0.37207 (2) obj. -39.2993 iterations 3
Cbc0038I Pass  11: suminf.    0.29677 (2) obj. -40.597 iterations 2
Cbc0038I Pass  12: suminf.    0.63228 (3) obj. -39.2993 iterations 7
Cbc0038I Pass  13: suminf.    2.89359 (16) obj. -39.2993 iterations 41
Cbc0038I Pass  14: suminf.    1.95138 (13) obj. -40.7464 iterations 10
Cbc0038I Pass  15: suminf.    1.11213 (6) obj. -39.2993 iterations 21
Cbc0038I Pass  16: suminf.    0.90386 (4) obj. -39.2993 iterations 7
Cbc0038I Pass  17: suminf.    0.57234 (2) obj. -39.2993 iterations 8
Cbc0038I Pass  18: suminf.    0.57234 (2) obj. -39.2993 iterations 0
Cbc0038I Pass  19: suminf.    0.37207 (2) obj. -39.2993 iterations 3
Cbc0038I Pass  20: suminf.    0.29677 (2) obj. -40.597 iterations 2
Cbc0038I Pass  21: suminf.    0.63228 (3) obj. -39.2993 iterations 7
Cbc0038I Pass  22: suminf.    1.07537 (7) obj. -39.2993 iterations 23
Cbc0038I Pass  23: suminf.    0.62479 (6) obj. -39.2993 iterations 8
Cbc0038I Pass  24: suminf.    1.39798 (5) obj. -39.2993 iterations 10
Cbc0038I Pass  25: suminf.    1.31505 (10) obj. -39.2993 iterations 6
Cbc0038I Pass  26: suminf.    1.49764 (4) obj. -39.2993 iterations 10
Cbc0038I Pass  27: suminf.    0.96176 (3) obj. -39.2993 iterations 6
Cbc0038I Pass  28: suminf.    0.79658 (3) obj. -39.2993 iterations 5
Cbc0038I Pass  29: suminf.    1.04961 (3) obj. -39.2993 iterations 4
Cbc0038I Pass  30: suminf.    0.68387 (2) obj. -40.9151 iterations 2
Cbc0038I Pass  31: suminf.    0.88400 (3) obj. -39.2993 iterations 7
Cbc0038I Pass  32: suminf.    0.87992 (2) obj. -39.2993 iterations 2
Cbc0038I Pass  33: suminf.    0.62238 (2) obj. -39.2993 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 139 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -30.6032 to -39.5928 (0.07 seconds)
Cbc0038I Round again with cutoff of -45.7551
Cbc0038I Pass  33: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass  34: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass  35: suminf.    1.33559 (10) obj. -45.7551 iterations 44
Cbc0038I Pass  36: suminf.    1.15580 (8) obj. -45.7551 iterations 3
Cbc0038I Pass  37: suminf.    1.23605 (7) obj. -45.7551 iterations 16
Cbc0038I Pass  38: suminf.    1.23605 (7) obj. -45.7551 iterations 0
Cbc0038I Pass  39: suminf.    1.34302 (7) obj. -45.7551 iterations 4
Cbc0038I Pass  40: suminf.    1.34302 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  41: suminf.    1.23605 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  42: suminf.    2.16590 (13) obj. -45.7551 iterations 17
Cbc0038I Pass  43: suminf.    1.57985 (13) obj. -45.7551 iterations 4
Cbc0038I Pass  44: suminf.    1.23605 (7) obj. -45.7551 iterations 15
Cbc0038I Pass  45: suminf.    1.23605 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  46: suminf.    1.34302 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  47: suminf.    1.34302 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  48: suminf.    1.23605 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  49: suminf.    1.30041 (8) obj. -45.7551 iterations 10
Cbc0038I Pass  50: suminf.    1.30041 (8) obj. -45.7551 iterations 3
Cbc0038I Pass  51: suminf.    1.23605 (7) obj. -45.7551 iterations 11
Cbc0038I Pass  52: suminf.    1.23605 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  53: suminf.    1.34302 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  54: suminf.    1.34302 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  55: suminf.    1.23605 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  56: suminf.    1.90757 (10) obj. -45.7551 iterations 17
Cbc0038I Pass  57: suminf.    1.23497 (8) obj. -45.7551 iterations 8
Cbc0038I Pass  58: suminf.    1.23605 (7) obj. -45.7551 iterations 16
Cbc0038I Pass  59: suminf.    1.23605 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  60: suminf.    1.34302 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  61: suminf.    1.34302 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  62: suminf.    1.23605 (7) obj. -45.7551 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 139 columns, reduced to 13 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -39.5928 - took 0.05 seconds
Cbc0012I Integer solution of -39.59284 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 125 rows 139 columns, reduced to 10 rows 13 columns
Cbc0031I 45 added rows had average density of 17.711111
Cbc0013I At root node, 45 cuts changed objective from -70.403659 to -43.475006 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 1234 row cuts average 3.6 elements, 7 column cuts (7 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 64.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 159 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 77.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.59284 best solution, best possible -43.475006 (0.36 seconds)
Cbc0010I After 18 nodes, 9 on tree, -39.59284 best solution, best possible -43.475006 (1.07 seconds)
Cbc0012I Integer solution of -39.70766 found by rounding after 875 iterations and 27 nodes (1.29 seconds)
Cbc0016I Integer solution of -40.67689 found by strong branching after 925 iterations and 30 nodes (1.39 seconds)
Cbc0010I After 38 nodes, 7 on tree, -40.67689 best solution, best possible -43.475006 (1.77 seconds)
Cbc0038I Full problem 125 rows 139 columns, reduced to 20 rows 26 columns
Cbc0038I Full problem 170 rows 139 columns, reduced to 82 rows 94 columns
Cbc0044I Reduced cost fixing - 82 rows, 94 columns - restarting search
Cbc0012I Integer solution of -40.67689 found by Previous solution after 0 iterations and 0 nodes (2.10 seconds)
Cbc0038I Full problem 82 rows 94 columns, reduced to 25 rows 29 columns
Cbc0031I 44 added rows had average density of 21.113636
Cbc0013I At root node, 44 cuts changed objective from -66.964104 to -43.425158 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3082 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 264 row cuts average 85.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 82 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 320 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 688 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.707 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 249 row cuts average 34.3 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -40.67689 best solution, best possible -43.425101 (3.71 seconds)
Cbc0001I Search completed - best objective -40.67689, took 2328 iterations and 22 nodes (4.65 seconds)
Cbc0032I Strong branching done 364 times (3399 iterations), fathomed 3 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 111 variables fixed on reduced cost
Cbc0038I Probing was tried 167 times and created 3442 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
Cbc0038I Gomory was tried 167 times and created 268 cuts of which 0 were active after adding rounds of cuts (0.076 seconds)
Cbc0038I Knapsack was tried 167 times and created 235 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Cbc0038I Clique was tried 167 times and created 438 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
Cbc0038I MixedIntegerRounding2 was tried 167 times and created 837 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 167 times and created 224 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
Cbc0038I ZeroHalf was tried 167 times and created 101 cuts of which 0 were active after adding rounds of cuts (1.088 seconds)
Cbc0038I Stored from first was tried 167 times and created 323 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -40.67689, took 3740 iterations and 72 nodes (4.66 seconds)
Cbc0032I Strong branching done 658 times (7731 iterations), fathomed 10 nodes and fixed 9 variables
Cbc0035I Maximum depth 13, 241 variables fixed on reduced cost
Total time (CPU seconds):       3.02   (Wallclock seconds):       4.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 99 (-4) columns and 557 (-46) elements
Clp1000I sum of infeasibilities 0.000122956 - average 6.71889e-07, 42 fixed columns
Coin0506I Presolve 89 (-94) rows, 51 (-48) columns and 273 (-284) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 0.27404038 - largest nonzero change 0 ( 0%) - largest zero change 2.8257266e-05
Clp0000I Optimal - objective value 65.199847
Clp0000I Optimal - objective value 65.199847
Coin0511I After Postsolve, objective 65.199847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20500251 - largest nonzero change 0 ( 0%) - largest zero change 2.8551042e-05
Clp0000I Optimal - objective value 65.199847
Clp0000I Optimal - objective value 65.199847
Clp0000I Optimal - objective value 65.199847
Coin0511I After Postsolve, objective 65.199847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.19984703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 99 columns (98 integer (98 of which binary)) and 566 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.81485
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.99988 iterations 43
Cbc0038I Solution found of 0.99988
Cbc0038I Relaxing continuous gives 0.99988
Cbc0038I Rounding solution of -17.5096 is better than previous of 0.99988

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 99 columns, reduced to 43 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -17.5096 to -40.6769 (0.04 seconds)
Cbc0038I Round again with cutoff of -43.1143
Cbc0038I Pass   2: suminf.    2.27308 (9) obj. -43.1143 iterations 17
Cbc0038I Pass   3: suminf.    1.49590 (5) obj. -43.1143 iterations 12
Cbc0038I Pass   4: suminf.    1.36338 (5) obj. -43.1143 iterations 9
Cbc0038I Pass   5: suminf.    2.22548 (7) obj. -43.1143 iterations 14
Cbc0038I Pass   6: suminf.    2.22548 (7) obj. -43.1143 iterations 2
Cbc0038I Pass   7: suminf.    1.59359 (8) obj. -43.1143 iterations 16
Cbc0038I Pass   8: suminf.    1.05984 (5) obj. -43.1143 iterations 4
Cbc0038I Pass   9: suminf.    1.06592 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  10: suminf.    1.51901 (8) obj. -43.1143 iterations 6
Cbc0038I Pass  11: suminf.    1.29326 (6) obj. -43.1143 iterations 2
Cbc0038I Pass  12: suminf.    1.06167 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  13: suminf.    1.59359 (8) obj. -43.1143 iterations 7
Cbc0038I Pass  14: suminf.    1.05984 (5) obj. -43.1143 iterations 4
Cbc0038I Pass  15: suminf.    1.06592 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  16: suminf.    1.51901 (8) obj. -43.1143 iterations 6
Cbc0038I Pass  17: suminf.    1.29326 (6) obj. -43.1143 iterations 2
Cbc0038I Pass  18: suminf.    1.06167 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  19: suminf.    1.59359 (8) obj. -43.1143 iterations 7
Cbc0038I Pass  20: suminf.    1.05984 (5) obj. -43.1143 iterations 4
Cbc0038I Pass  21: suminf.    1.06592 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  22: suminf.    1.51901 (8) obj. -43.1143 iterations 6
Cbc0038I Pass  23: suminf.    1.29326 (6) obj. -43.1143 iterations 2
Cbc0038I Pass  24: suminf.    1.06167 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  25: suminf.    1.59359 (8) obj. -43.1143 iterations 7
Cbc0038I Pass  26: suminf.    1.05984 (5) obj. -43.1143 iterations 4
Cbc0038I Pass  27: suminf.    1.06592 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  28: suminf.    1.51901 (8) obj. -43.1143 iterations 6
Cbc0038I Pass  29: suminf.    1.29326 (6) obj. -43.1143 iterations 2
Cbc0038I Pass  30: suminf.    1.06167 (4) obj. -43.1143 iterations 2
Cbc0038I Pass  31: suminf.    1.59359 (8) obj. -43.1143 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 99 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -40.6769 - took 0.06 seconds
Cbc0012I Integer solution of -40.67689 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 182 rows 99 columns, reduced to 43 rows 27 columns
Cbc0031I 22 added rows had average density of 69.136364
Cbc0013I At root node, 22 cuts changed objective from -65.050205 to -56.865862 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6804 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1339 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 1 nodes, 2 on tree, -40.67689 best solution, best possible -56.865862 (0.67 seconds)
Cbc0038I Full problem 182 rows 99 columns, reduced to 10 rows 14 columns
Cbc0001I Search completed - best objective -40.67689, took 6992 iterations and 58 nodes (0.88 seconds)
Cbc0032I Strong branching done 642 times (12256 iterations), fathomed 2 nodes and fixed 19 variables
Cbc0035I Maximum depth 18, 286 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.89

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-79) rows, 139 (-64) columns and 2424 (-3230) elements
Clp1000I sum of infeasibilities 3.37854e-07 - average 2.68138e-09, 43 fixed columns
Coin0506I Presolve 86 (-40) rows, 96 (-43) columns and 1418 (-1006) elements
Clp0006I 0  Obj 74.850577 Dual inf 10.733993 (93)
Clp0029I End of values pass after 96 iterations
Clp0014I Perturbing problem by 0.001% of 1.7149773 - largest nonzero change 2.8521425e-05 ( 0.0022247614%) - largest zero change 2.9654836e-05
Clp0000I Optimal - objective value 88.45536
Clp0000I Optimal - objective value 88.45536
Coin0511I After Postsolve, objective 88.45536, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 88.45536 Dual inf 0.38742131 (1)
Clp0014I Perturbing problem by 0.001% of 1.4927348 - largest nonzero change 2.3540427e-05 ( 0.0018562596%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 88.45536
Clp0000I Optimal - objective value 88.45536
Clp0000I Optimal - objective value 88.45536
Coin0511I After Postsolve, objective 88.45536, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.45535985 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 139 columns (139 integer (139 of which binary)) and 2442 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.828%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 5.47763
Cbc0038I Pass   1: suminf.    3.44626 (30) obj. -58.0458 iterations 17
Cbc0038I Pass   2: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass   3: suminf.    0.15476 (2) obj. -32.4484 iterations 28
Cbc0038I Solution found of -30.6032
Cbc0038I Rounding solution of -35.8432 is better than previous of -30.6032

Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 139 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -39.2993
Cbc0038I Pass   4: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass   5: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass   6: suminf.    0.92389 (10) obj. -39.6793 iterations 20
Cbc0038I Pass   7: suminf.    0.73840 (7) obj. -39.2993 iterations 21
Cbc0038I Pass   8: suminf.    0.69946 (4) obj. -39.2993 iterations 13
Cbc0038I Pass   9: suminf.    0.57234 (2) obj. -39.2993 iterations 6
Cbc0038I Pass  10: suminf.    0.37207 (2) obj. -39.2993 iterations 3
Cbc0038I Pass  11: suminf.    0.29677 (2) obj. -40.597 iterations 2
Cbc0038I Pass  12: suminf.    0.63228 (3) obj. -39.2993 iterations 7
Cbc0038I Pass  13: suminf.    2.89359 (16) obj. -39.2993 iterations 41
Cbc0038I Pass  14: suminf.    1.95138 (13) obj. -40.7464 iterations 10
Cbc0038I Pass  15: suminf.    1.11213 (6) obj. -39.2993 iterations 21
Cbc0038I Pass  16: suminf.    0.90386 (4) obj. -39.2993 iterations 7
Cbc0038I Pass  17: suminf.    0.57234 (2) obj. -39.2993 iterations 8
Cbc0038I Pass  18: suminf.    0.57234 (2) obj. -39.2993 iterations 0
Cbc0038I Pass  19: suminf.    0.37207 (2) obj. -39.2993 iterations 3
Cbc0038I Pass  20: suminf.    0.29677 (2) obj. -40.597 iterations 2
Cbc0038I Pass  21: suminf.    0.63228 (3) obj. -39.2993 iterations 7
Cbc0038I Pass  22: suminf.    1.07537 (7) obj. -39.2993 iterations 23
Cbc0038I Pass  23: suminf.    0.62479 (6) obj. -39.2993 iterations 8
Cbc0038I Pass  24: suminf.    1.39798 (5) obj. -39.2993 iterations 10
Cbc0038I Pass  25: suminf.    1.31505 (10) obj. -39.2993 iterations 6
Cbc0038I Pass  26: suminf.    1.49764 (4) obj. -39.2993 iterations 10
Cbc0038I Pass  27: suminf.    0.96176 (3) obj. -39.2993 iterations 6
Cbc0038I Pass  28: suminf.    0.79658 (3) obj. -39.2993 iterations 5
Cbc0038I Pass  29: suminf.    1.04961 (3) obj. -39.2993 iterations 4
Cbc0038I Pass  30: suminf.    0.68387 (2) obj. -40.9151 iterations 2
Cbc0038I Pass  31: suminf.    0.88400 (3) obj. -39.2993 iterations 7
Cbc0038I Pass  32: suminf.    0.87992 (2) obj. -39.2993 iterations 2
Cbc0038I Pass  33: suminf.    0.62238 (2) obj. -39.2993 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 139 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -30.6032 to -39.5928 (0.07 seconds)
Cbc0038I Round again with cutoff of -45.7551
Cbc0038I Pass  33: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass  34: suminf.    3.44626 (30) obj. -58.0458 iterations 0
Cbc0038I Pass  35: suminf.    1.33559 (10) obj. -45.7551 iterations 44
Cbc0038I Pass  36: suminf.    1.15580 (8) obj. -45.7551 iterations 3
Cbc0038I Pass  37: suminf.    1.23605 (7) obj. -45.7551 iterations 16
Cbc0038I Pass  38: suminf.    1.23605 (7) obj. -45.7551 iterations 0
Cbc0038I Pass  39: suminf.    1.34302 (7) obj. -45.7551 iterations 4
Cbc0038I Pass  40: suminf.    1.34302 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  41: suminf.    1.23605 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  42: suminf.    2.16590 (13) obj. -45.7551 iterations 17
Cbc0038I Pass  43: suminf.    1.57985 (13) obj. -45.7551 iterations 4
Cbc0038I Pass  44: suminf.    1.23605 (7) obj. -45.7551 iterations 15
Cbc0038I Pass  45: suminf.    1.23605 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  46: suminf.    1.34302 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  47: suminf.    1.34302 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  48: suminf.    1.23605 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  49: suminf.    1.30041 (8) obj. -45.7551 iterations 10
Cbc0038I Pass  50: suminf.    1.30041 (8) obj. -45.7551 iterations 3
Cbc0038I Pass  51: suminf.    1.23605 (7) obj. -45.7551 iterations 11
Cbc0038I Pass  52: suminf.    1.23605 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  53: suminf.    1.34302 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  54: suminf.    1.34302 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  55: suminf.    1.23605 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  56: suminf.    1.90757 (10) obj. -45.7551 iterations 17
Cbc0038I Pass  57: suminf.    1.23497 (8) obj. -45.7551 iterations 8
Cbc0038I Pass  58: suminf.    1.23605 (7) obj. -45.7551 iterations 16
Cbc0038I Pass  59: suminf.    1.23605 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  60: suminf.    1.34302 (7) obj. -45.7551 iterations 5
Cbc0038I Pass  61: suminf.    1.34302 (7) obj. -45.7551 iterations 1
Cbc0038I Pass  62: suminf.    1.23605 (7) obj. -45.7551 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 139 columns, reduced to 13 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -39.5928 - took 0.05 seconds
Cbc0012I Integer solution of -39.59284 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 125 rows 139 columns, reduced to 10 rows 13 columns
Cbc0031I 45 added rows had average density of 17.711111
Cbc0013I At root node, 45 cuts changed objective from -70.403659 to -43.475006 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 1234 row cuts average 3.6 elements, 7 column cuts (7 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 64.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 159 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 77.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.59284 best solution, best possible -43.475006 (0.32 seconds)
Cbc0010I After 20 nodes, 11 on tree, -39.59284 best solution, best possible -43.475006 (1.02 seconds)
Cbc0012I Integer solution of -39.70766 found by rounding after 875 iterations and 27 nodes (1.18 seconds)
Cbc0016I Integer solution of -40.67689 found by strong branching after 925 iterations and 30 nodes (1.27 seconds)
Cbc0038I Full problem 125 rows 139 columns, reduced to 20 rows 26 columns
Cbc0010I After 41 nodes, 8 on tree, -40.67689 best solution, best possible -43.475006 (1.80 seconds)
Cbc0038I Full problem 170 rows 139 columns, reduced to 82 rows 94 columns
Cbc0044I Reduced cost fixing - 82 rows, 94 columns - restarting search
Cbc0012I Integer solution of -40.67689 found by Previous solution after 0 iterations and 0 nodes (1.89 seconds)
Cbc0038I Full problem 82 rows 94 columns, reduced to 25 rows 29 columns
Cbc0031I 44 added rows had average density of 21.113636
Cbc0013I At root node, 44 cuts changed objective from -66.964104 to -43.425158 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3082 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 264 row cuts average 85.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 82 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 320 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 688 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.636 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 249 row cuts average 34.3 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -40.67689 best solution, best possible -43.425101 (3.32 seconds)
Cbc0001I Search completed - best objective -40.67689, took 2328 iterations and 22 nodes (4.24 seconds)
Cbc0032I Strong branching done 364 times (3399 iterations), fathomed 3 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 111 variables fixed on reduced cost
Cbc0038I Probing was tried 167 times and created 3442 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
Cbc0038I Gomory was tried 167 times and created 268 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
Cbc0038I Knapsack was tried 167 times and created 235 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Cbc0038I Clique was tried 167 times and created 438 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
Cbc0038I MixedIntegerRounding2 was tried 167 times and created 837 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 167 times and created 224 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
Cbc0038I ZeroHalf was tried 167 times and created 101 cuts of which 0 were active after adding rounds of cuts (1.001 seconds)
Cbc0038I Stored from first was tried 167 times and created 323 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -40.67689, took 3740 iterations and 72 nodes (4.25 seconds)
Cbc0032I Strong branching done 658 times (7731 iterations), fathomed 10 nodes and fixed 9 variables
Cbc0035I Maximum depth 13, 241 variables fixed on reduced cost
Total time (CPU seconds):       2.74   (Wallclock seconds):       4.25

