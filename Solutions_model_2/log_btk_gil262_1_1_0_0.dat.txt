Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 493 (-34) rows, 255 (-9) columns and 1470 (-75) elements
Clp1000I sum of infeasibilities 0.000112065 - average 2.27312e-07, 134 fixed columns
Coin0506I Presolve 218 (-275) rows, 116 (-139) columns and 648 (-822) elements
Clp0029I End of values pass after 116 iterations
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Coin0511I After Postsolve, objective 185.28344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13418008 - largest nonzero change 0 ( 0%) - largest zero change 2.9749394e-05
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Coin0511I After Postsolve, objective 185.28344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 185.2834446 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 493 rows, 255 columns (254 integer (254 of which binary)) and 1470 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 79 integers unsatisfied sum - 10.5885
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.274 iterations 194
Cbc0038I Solution found of -18.274
Cbc0038I Relaxing continuous gives -18.274
Cbc0038I Rounding solution of -37.3591 is better than previous of -18.274

Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 148 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -37.3591 to -131.027 (0.07 seconds)
Cbc0038I Round again with cutoff of -136.453
Cbc0038I Pass   2: suminf.    4.71400 (29) obj. -136.453 iterations 58
Cbc0038I Pass   3: suminf.    3.92431 (15) obj. -136.453 iterations 45
Cbc0038I Pass   4: suminf.    3.17185 (15) obj. -136.453 iterations 24
Cbc0038I Pass   5: suminf.    3.14136 (9) obj. -136.453 iterations 6
Cbc0038I Pass   6: suminf.    3.79738 (12) obj. -136.453 iterations 38
Cbc0038I Pass   7: suminf.    3.79738 (12) obj. -136.453 iterations 0
Cbc0038I Pass   8: suminf.    3.56450 (12) obj. -136.453 iterations 23
Cbc0038I Pass   9: suminf.    3.04605 (12) obj. -136.453 iterations 19
Cbc0038I Pass  10: suminf.    3.34502 (13) obj. -136.453 iterations 25
Cbc0038I Pass  11: suminf.    2.29127 (10) obj. -136.453 iterations 27
Cbc0038I Pass  12: suminf.    2.21996 (11) obj. -136.453 iterations 17
Cbc0038I Pass  13: suminf.    2.41523 (11) obj. -136.453 iterations 54
Cbc0038I Pass  14: suminf.    2.32089 (15) obj. -136.453 iterations 14
Cbc0038I Pass  15: suminf.    2.61795 (12) obj. -136.453 iterations 44
Cbc0038I Pass  16: suminf.    2.00072 (11) obj. -136.453 iterations 13
Cbc0038I Pass  17: suminf.    1.71327 (12) obj. -136.453 iterations 4
Cbc0038I Pass  18: suminf.    4.56055 (12) obj. -136.453 iterations 35
Cbc0038I Pass  19: suminf.    3.43672 (10) obj. -136.453 iterations 22
Cbc0038I Pass  20: suminf.    2.76078 (13) obj. -136.453 iterations 16
Cbc0038I Pass  21: suminf.    2.75150 (12) obj. -136.453 iterations 1
Cbc0038I Pass  22: suminf.    3.47538 (9) obj. -136.453 iterations 27
Cbc0038I Pass  23: suminf.    3.07927 (10) obj. -136.453 iterations 25
Cbc0038I Pass  24: suminf.    3.07927 (10) obj. -136.453 iterations 0
Cbc0038I Pass  25: suminf.    3.24436 (10) obj. -136.453 iterations 29
Cbc0038I Pass  26: suminf.    2.57109 (12) obj. -136.453 iterations 17
Cbc0038I Pass  27: suminf.    2.53478 (12) obj. -136.453 iterations 2
Cbc0038I Pass  28: suminf.    3.50641 (11) obj. -136.453 iterations 35
Cbc0038I Pass  29: suminf.    3.21103 (11) obj. -136.453 iterations 18
Cbc0038I Pass  30: suminf.    3.13971 (12) obj. -136.453 iterations 6
Cbc0038I Pass  31: suminf.    3.12781 (12) obj. -136.453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 169 rows 91 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -131.027 - took 0.14 seconds
Cbc0012I Integer solution of -131.02689 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 148 rows 80 columns
Cbc0031I 35 added rows had average density of 146.11429
Cbc0013I At root node, 35 cuts changed objective from -185.28344 to -169.98329 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27885 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.435 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2483 row cuts average 252.4 elements, 0 column cuts (0 active)  in 0.393 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.446 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 247.5 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -131.02689 best solution, best possible -169.98329 (3.63 seconds)
Cbc0010I After 12 nodes, 11 on tree, -131.02689 best solution, best possible -169.98329 (4.35 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 95 rows 51 columns
Cbc0038I Full problem 493 rows 255 columns, reduced to 137 rows 74 columns
Cbc0010I After 96 nodes, 3 on tree, -131.02689 best solution, best possible -169.98138 (5.08 seconds)
Cbc0001I Search completed - best objective -131.02689, took 20481 iterations and 140 nodes (5.38 seconds)
Cbc0032I Strong branching done 1768 times (45459 iterations), fathomed 17 nodes and fixed 72 variables
Cbc0035I Maximum depth 38, 1180 variables fixed on reduced cost
Total time (CPU seconds):       5.30   (Wallclock seconds):       5.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 380 (-146) rows, 395 (-129) columns and 19527 (-16209) elements
Clp1000I sum of infeasibilities 1.70329e-06 - average 4.48234e-09, 236 fixed columns
Coin0506I Presolve 143 (-237) rows, 159 (-236) columns and 584 (-18943) elements
Clp0006I 0  Obj 326.58214 Dual inf 25.376558 (155)
Clp0029I End of values pass after 159 iterations
Clp0014I Perturbing problem by 0.001% of 1.2818311 - largest nonzero change 2.9659176e-05 ( 0.0024527873%) - largest zero change 2.9474886e-05
Clp0000I Optimal - objective value 331.83421
Clp0000I Optimal - objective value 331.83421
Coin0511I After Postsolve, objective 331.83421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 331.83421 Dual inf 275.65643 (145)
Clp0014I Perturbing problem by 0.001% of 1.7254059 - largest nonzero change 2.4128175e-05 ( 0.0018545384%) - largest zero change 2.9849807e-05
Clp0000I Optimal - objective value 541.10173
Clp0000I Optimal - objective value 541.10173
Clp0000I Optimal - objective value 541.10173
Coin0511I After Postsolve, objective 541.10173, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 541.10173 - 0 iterations time 0.162, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0004I processed model has 383 rows, 398 columns (398 integer (398 of which binary)) and 19539 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.010%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 139 integers unsatisfied sum - 7.51834
Cbc0038I Pass   1: suminf.    3.22435 (114) obj. -194.972 iterations 51
Cbc0038I Pass   2: suminf.    3.22435 (114) obj. -194.972 iterations 1
Cbc0038I Pass   3: suminf.    2.52292 (97) obj. -149.011 iterations 17
Cbc0038I Pass   4: suminf.    1.74283 (75) obj. -123.938 iterations 22
Cbc0038I Pass   5: suminf.    1.20295 (57) obj. -100.662 iterations 18
Cbc0038I Pass   6: suminf.    0.53326 (30) obj. -65.5586 iterations 27
Cbc0038I Pass   7: suminf.    0.20076 (13) obj. -45.9493 iterations 17
Cbc0038I Solution found of -32.1642
Cbc0038I Rounding solution of -37.1232 is better than previous of -32.1642

Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 398 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -37.1232 to -329.479 (0.16 seconds)
Cbc0038I Round again with cutoff of -350.616
Cbc0038I Pass   8: suminf.    5.40807 (134) obj. -350.616 iterations 18
Cbc0038I Pass   9: suminf.    5.40807 (134) obj. -350.616 iterations 0
Cbc0038I Pass  10: suminf.    4.11954 (121) obj. -350.616 iterations 15
Cbc0038I Pass  11: suminf.    3.62613 (120) obj. -350.616 iterations 10
Cbc0038I Pass  12: suminf.    3.01308 (99) obj. -350.616 iterations 21
Cbc0038I Pass  13: suminf.    3.01308 (99) obj. -350.616 iterations 0
Cbc0038I Pass  14: suminf.    2.70654 (79) obj. -350.616 iterations 28
Cbc0038I Pass  15: suminf.    2.70654 (79) obj. -350.616 iterations 1
Cbc0038I Pass  16: suminf.    1.60384 (63) obj. -371.513 iterations 25
Cbc0038I Pass  17: suminf.    0.98706 (39) obj. -350.616 iterations 29
Cbc0038I Pass  18: suminf.    0.42739 (23) obj. -358.879 iterations 20
Cbc0038I Pass  19: suminf.    1.01685 (15) obj. -350.616 iterations 52
Cbc0038I Pass  20: suminf.    0.42274 (5) obj. -362.988 iterations 23
Cbc0038I Pass  21: suminf.    0.42274 (5) obj. -362.988 iterations 0
Cbc0038I Pass  22: suminf.    0.41259 (2) obj. -350.616 iterations 20
Cbc0038I Pass  23: suminf.    0.66143 (3) obj. -350.616 iterations 13
Cbc0038I Pass  24: suminf.    0.29032 (1) obj. -351.563 iterations 7
Cbc0038I Pass  25: suminf.    0.52569 (2) obj. -350.616 iterations 15
Cbc0038I Pass  26: suminf.    1.89102 (28) obj. -350.616 iterations 89
Cbc0038I Pass  27: suminf.    1.48429 (27) obj. -350.616 iterations 25
Cbc0038I Pass  28: suminf.    1.17151 (12) obj. -350.616 iterations 27
Cbc0038I Pass  29: suminf.    1.17151 (12) obj. -350.616 iterations 0
Cbc0038I Pass  30: suminf.    1.29673 (4) obj. -350.616 iterations 22
Cbc0038I Pass  31: suminf.    0.76939 (3) obj. -350.616 iterations 12
Cbc0038I Pass  32: suminf.    0.79489 (5) obj. -350.616 iterations 13
Cbc0038I Pass  33: suminf.    2.18736 (6) obj. -350.616 iterations 16
Cbc0038I Pass  34: suminf.    0.26376 (3) obj. -350.616 iterations 19
Cbc0038I Pass  35: suminf.    0.26376 (3) obj. -350.616 iterations 0
Cbc0038I Pass  36: suminf.    0.81020 (3) obj. -350.616 iterations 9
Cbc0038I Pass  37: suminf.    0.79489 (5) obj. -350.616 iterations 8
Cbc0038I Rounding solution of -343.534 is better than previous of -329.479

Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 398 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -343.534 to -344.263 (0.24 seconds)
Cbc0038I Round again with cutoff of -388.662
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  37: suminf.    6.97559 (135) obj. -537.606 iterations 4
Cbc0038I Pass  38: suminf.    3.35678 (116) obj. -462.328 iterations 23
Cbc0038I Pass  39: suminf.    2.86943 (106) obj. -450.923 iterations 10
Cbc0038I Pass  40: suminf.    2.17724 (88) obj. -408.571 iterations 18
Cbc0038I Pass  41: suminf.    1.83648 (67) obj. -388.662 iterations 24
Cbc0038I Pass  42: suminf.    1.16441 (49) obj. -388.662 iterations 48
Cbc0038I Pass  43: suminf.    1.52078 (28) obj. -388.662 iterations 36
Cbc0038I Pass  44: suminf.    1.20699 (34) obj. -388.662 iterations 15
Cbc0038I Pass  45: suminf.    2.40095 (15) obj. -388.662 iterations 70
Cbc0038I Pass  46: suminf.    1.83527 (17) obj. -388.662 iterations 30
Cbc0038I Pass  47: suminf.    2.87652 (13) obj. -388.662 iterations 49
Cbc0038I Pass  48: suminf.    2.19752 (13) obj. -388.662 iterations 30
Cbc0038I Pass  49: suminf.    1.22363 (12) obj. -388.662 iterations 28
Cbc0038I Pass  50: suminf.    0.95388 (11) obj. -388.662 iterations 21
Cbc0038I Pass  51: suminf.    3.76157 (15) obj. -388.662 iterations 28
Cbc0038I Pass  52: suminf.    2.16389 (14) obj. -388.662 iterations 25
Cbc0038I Pass  53: suminf.    2.76881 (13) obj. -388.662 iterations 41
Cbc0038I Pass  54: suminf.    2.19752 (13) obj. -388.662 iterations 29
Cbc0038I Pass  55: suminf.    1.22363 (12) obj. -388.662 iterations 28
Cbc0038I Pass  56: suminf.    0.95388 (11) obj. -388.662 iterations 21
Cbc0038I Pass  57: suminf.    3.76157 (15) obj. -388.662 iterations 28
Cbc0038I Pass  58: suminf.    2.16389 (14) obj. -388.662 iterations 25
Cbc0038I Pass  59: suminf.    2.76881 (13) obj. -388.662 iterations 40
Cbc0038I Pass  60: suminf.    2.19752 (13) obj. -388.662 iterations 28
Cbc0038I Pass  61: suminf.    1.22363 (12) obj. -388.662 iterations 28
Cbc0038I Pass  62: suminf.    0.95388 (11) obj. -388.662 iterations 21
Cbc0038I Pass  63: suminf.    3.76157 (15) obj. -388.662 iterations 28
Cbc0038I Pass  64: suminf.    2.16389 (14) obj. -388.662 iterations 25
Cbc0038I Pass  65: suminf.    2.87652 (13) obj. -388.662 iterations 42
Cbc0038I Pass  66: suminf.    2.19752 (13) obj. -388.662 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 398 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -344.263 to -352.123 (0.40 seconds)
Cbc0038I Round again with cutoff of -434.317
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  66: suminf.    6.97559 (135) obj. -537.606 iterations 0
Cbc0038I Pass  67: suminf.    3.02657 (109) obj. -454.713 iterations 30
Cbc0038I Pass  68: suminf.    2.57159 (91) obj. -434.317 iterations 20
Cbc0038I Pass  69: suminf.    2.05262 (72) obj. -434.317 iterations 47
Cbc0038I Pass  70: suminf.    2.00692 (76) obj. -434.317 iterations 10
Cbc0038I Pass  71: suminf.    2.30113 (61) obj. -434.317 iterations 45
Cbc0038I Pass  72: suminf.    2.25513 (62) obj. -434.317 iterations 1
Cbc0038I Pass  73: suminf.    2.65205 (43) obj. -434.317 iterations 63
Cbc0038I Pass  74: suminf.    2.65205 (43) obj. -434.317 iterations 9
Cbc0038I Pass  75: suminf.    2.63513 (37) obj. -434.317 iterations 31
Cbc0038I Pass  76: suminf.    2.63513 (37) obj. -434.317 iterations 7
Cbc0038I Pass  77: suminf.    2.60505 (36) obj. -434.317 iterations 11
Cbc0038I Pass  78: suminf.    2.60505 (36) obj. -434.317 iterations 7
Cbc0038I Pass  79: suminf.    2.24074 (33) obj. -434.317 iterations 32
Cbc0038I Pass  80: suminf.    2.21173 (33) obj. -434.317 iterations 22
Cbc0038I Pass  81: suminf.    2.24074 (33) obj. -434.317 iterations 26
Cbc0038I Pass  82: suminf.    3.06159 (52) obj. -434.317 iterations 62
Cbc0038I Pass  83: suminf.    2.74829 (50) obj. -435.627 iterations 10
Cbc0038I Pass  84: suminf.    2.01402 (41) obj. -434.317 iterations 61
Cbc0038I Pass  85: suminf.    2.01394 (41) obj. -434.317 iterations 3
Cbc0038I Pass  86: suminf.    1.66557 (41) obj. -434.317 iterations 33
Cbc0038I Pass  87: suminf.    1.62983 (37) obj. -434.317 iterations 30
Cbc0038I Pass  88: suminf.    1.66271 (37) obj. -434.317 iterations 23
Cbc0038I Pass  89: suminf.    2.25072 (41) obj. -434.317 iterations 57
Cbc0038I Pass  90: suminf.    1.84767 (39) obj. -435.053 iterations 22
Cbc0038I Pass  91: suminf.    1.71220 (37) obj. -434.317 iterations 45
Cbc0038I Pass  92: suminf.    1.61950 (37) obj. -434.317 iterations 24
Cbc0038I Pass  93: suminf.    2.02881 (35) obj. -434.317 iterations 34
Cbc0038I Pass  94: suminf.    2.02870 (35) obj. -434.317 iterations 3
Cbc0038I Pass  95: suminf.    1.55818 (37) obj. -434.317 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 247 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 398 columns, reduced to 10 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.49 seconds)
Cbc0038I After 0.49 seconds - Feasibility pump exiting with objective of -352.123 - took 0.38 seconds
Cbc0012I Integer solution of -352.12341 found by feasibility pump after 0 iterations and 0 nodes (0.49 seconds)
Cbc0038I Full problem 383 rows 398 columns, reduced to 11 rows 14 columns
Cbc0031I 81 added rows had average density of 11.728395
Cbc0013I At root node, 81 cuts changed objective from -540.84623 to -355.92094 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 543 row cuts average 2.0 elements, 34 column cuts (34 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 89.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 78 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 173.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 90.8 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -352.12341 best solution, best possible -355.92094 (0.72 seconds)
Cbc0001I Search completed - best objective -352.1234099999999, took 789 iterations and 22 nodes (1.06 seconds)
Cbc0032I Strong branching done 166 times (1485 iterations), fathomed 9 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 279 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 493 (-34) rows, 255 (-9) columns and 1470 (-75) elements
Clp1000I sum of infeasibilities 0.000112065 - average 2.27312e-07, 134 fixed columns
Coin0506I Presolve 218 (-275) rows, 116 (-139) columns and 648 (-822) elements
Clp0029I End of values pass after 116 iterations
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Coin0511I After Postsolve, objective 185.28344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13418008 - largest nonzero change 0 ( 0%) - largest zero change 2.9749394e-05
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Coin0511I After Postsolve, objective 185.28344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 185.2834446 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 493 rows, 255 columns (254 integer (254 of which binary)) and 1470 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 79 integers unsatisfied sum - 10.5885
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.274 iterations 194
Cbc0038I Solution found of -18.274
Cbc0038I Relaxing continuous gives -18.274
Cbc0038I Rounding solution of -37.3591 is better than previous of -18.274

Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 148 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -37.3591 to -131.027 (0.08 seconds)
Cbc0038I Round again with cutoff of -136.453
Cbc0038I Pass   2: suminf.    4.71400 (29) obj. -136.453 iterations 58
Cbc0038I Pass   3: suminf.    3.92431 (15) obj. -136.453 iterations 45
Cbc0038I Pass   4: suminf.    3.17185 (15) obj. -136.453 iterations 24
Cbc0038I Pass   5: suminf.    3.14136 (9) obj. -136.453 iterations 6
Cbc0038I Pass   6: suminf.    3.79738 (12) obj. -136.453 iterations 38
Cbc0038I Pass   7: suminf.    3.79738 (12) obj. -136.453 iterations 0
Cbc0038I Pass   8: suminf.    3.56450 (12) obj. -136.453 iterations 23
Cbc0038I Pass   9: suminf.    3.04605 (12) obj. -136.453 iterations 19
Cbc0038I Pass  10: suminf.    3.34502 (13) obj. -136.453 iterations 25
Cbc0038I Pass  11: suminf.    2.29127 (10) obj. -136.453 iterations 27
Cbc0038I Pass  12: suminf.    2.21996 (11) obj. -136.453 iterations 17
Cbc0038I Pass  13: suminf.    2.41523 (11) obj. -136.453 iterations 54
Cbc0038I Pass  14: suminf.    2.32089 (15) obj. -136.453 iterations 14
Cbc0038I Pass  15: suminf.    2.61795 (12) obj. -136.453 iterations 44
Cbc0038I Pass  16: suminf.    2.00072 (11) obj. -136.453 iterations 13
Cbc0038I Pass  17: suminf.    1.71327 (12) obj. -136.453 iterations 4
Cbc0038I Pass  18: suminf.    4.56055 (12) obj. -136.453 iterations 35
Cbc0038I Pass  19: suminf.    3.43672 (10) obj. -136.453 iterations 22
Cbc0038I Pass  20: suminf.    2.76078 (13) obj. -136.453 iterations 16
Cbc0038I Pass  21: suminf.    2.75150 (12) obj. -136.453 iterations 1
Cbc0038I Pass  22: suminf.    3.47538 (9) obj. -136.453 iterations 27
Cbc0038I Pass  23: suminf.    3.07927 (10) obj. -136.453 iterations 25
Cbc0038I Pass  24: suminf.    3.07927 (10) obj. -136.453 iterations 0
Cbc0038I Pass  25: suminf.    3.24436 (10) obj. -136.453 iterations 29
Cbc0038I Pass  26: suminf.    2.57109 (12) obj. -136.453 iterations 17
Cbc0038I Pass  27: suminf.    2.53478 (12) obj. -136.453 iterations 2
Cbc0038I Pass  28: suminf.    3.50641 (11) obj. -136.453 iterations 35
Cbc0038I Pass  29: suminf.    3.21103 (11) obj. -136.453 iterations 18
Cbc0038I Pass  30: suminf.    3.13971 (12) obj. -136.453 iterations 6
Cbc0038I Pass  31: suminf.    3.12781 (12) obj. -136.453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 169 rows 91 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -131.027 - took 0.14 seconds
Cbc0012I Integer solution of -131.02689 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 148 rows 80 columns
Cbc0031I 35 added rows had average density of 146.11429
Cbc0013I At root node, 35 cuts changed objective from -185.28344 to -169.98329 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27885 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.429 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2483 row cuts average 252.4 elements, 0 column cuts (0 active)  in 0.382 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.433 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 247.5 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -131.02689 best solution, best possible -169.98329 (3.53 seconds)
Cbc0010I After 11 nodes, 10 on tree, -131.02689 best solution, best possible -169.98329 (4.24 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 95 rows 51 columns
Cbc0038I Full problem 493 rows 255 columns, reduced to 137 rows 74 columns
Cbc0010I After 95 nodes, 2 on tree, -131.02689 best solution, best possible -169.98138 (4.98 seconds)
Cbc0001I Search completed - best objective -131.02689, took 20481 iterations and 140 nodes (5.32 seconds)
Cbc0032I Strong branching done 1768 times (45459 iterations), fathomed 17 nodes and fixed 72 variables
Cbc0035I Maximum depth 38, 1180 variables fixed on reduced cost
Total time (CPU seconds):       5.25   (Wallclock seconds):       5.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 378 (-149) rows, 393 (-132) columns and 19261 (-16476) elements
Clp1000I sum of infeasibilities 1.11781e-06 - average 2.95718e-09, 231 fixed columns
Coin0506I Presolve 149 (-229) rows, 162 (-231) columns and 602 (-18659) elements
Clp0006I 0  Obj -6.5095609 Dual inf 25.667097 (158)
Clp0029I End of values pass after 162 iterations
Clp0014I Perturbing problem by 0.001% of 1.466919 - largest nonzero change 2.9699117e-05 ( 0.0018307317%) - largest zero change 2.9612373e-05
Clp0000I Optimal - objective value 0.43808863
Clp0000I Optimal - objective value 0.43808863
Coin0511I After Postsolve, objective 0.43808863, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 0.43808863 Dual inf 312.42786 (148)
Clp0014I Perturbing problem by 0.001% of 1.7310355 - largest nonzero change 2.9540395e-05 ( 0.0024275985%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 212.17014
Clp0000I Optimal - objective value 212.17014
Clp0000I Optimal - objective value 212.17014
Coin0511I After Postsolve, objective 212.17014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 212.1701358 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 381 rows, 396 columns (396 integer (396 of which binary)) and 19273 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.987%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 130 integers unsatisfied sum - 4.05418
Cbc0038I Pass   1: suminf.    3.51109 (118) obj. -204.276 iterations 47
Cbc0038I Pass   2: suminf.    0.91454 (86) obj. -73.802 iterations 39
Cbc0038I Pass   3: suminf.    0.59659 (67) obj. -51.1916 iterations 19
Cbc0038I Pass   4: suminf.    0.45788 (56) obj. -35.3967 iterations 11
Cbc0038I Pass   5: suminf.    0.28047 (39) obj. -14.6144 iterations 17
Cbc0038I Pass   6: suminf.    0.10417 (17) obj. 10.1861 iterations 22
Cbc0038I Solution found of 33.0444
Cbc0038I Rounding solution of -2.99799 is better than previous of 33.0444

Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 396 columns, reduced to 25 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -2.99799 to -42.0327 (0.15 seconds)
Cbc0038I Round again with cutoff of -59.0262
Cbc0038I Pass   7: suminf.    3.51109 (118) obj. -204.276 iterations 0
Cbc0038I Pass   8: suminf.    1.10727 (95) obj. -84.5677 iterations 21
Cbc0038I Pass   9: suminf.    0.81723 (81) obj. -66.9387 iterations 14
Cbc0038I Pass  10: suminf.    0.76209 (58) obj. -59.0262 iterations 28
Cbc0038I Pass  11: suminf.    0.46918 (57) obj. -68.405 iterations 4
Cbc0038I Pass  12: suminf.    0.57913 (43) obj. -59.0262 iterations 20
Cbc0038I Pass  13: suminf.    0.85934 (29) obj. -59.0262 iterations 45
Cbc0038I Pass  14: suminf.    0.85934 (29) obj. -59.0262 iterations 0
Cbc0038I Pass  15: suminf.    1.08652 (17) obj. -59.0262 iterations 42
Cbc0038I Pass  16: suminf.    0.64529 (17) obj. -59.0262 iterations 9
Cbc0038I Pass  17: suminf.    0.63822 (6) obj. -59.0262 iterations 41
Cbc0038I Pass  18: suminf.    0.57814 (6) obj. -59.0262 iterations 6
Cbc0038I Pass  19: suminf.    1.54046 (24) obj. -59.0262 iterations 92
Cbc0038I Pass  20: suminf.    1.31727 (29) obj. -59.0262 iterations 25
Cbc0038I Pass  21: suminf.    0.89718 (35) obj. -59.0262 iterations 12
Cbc0038I Pass  22: suminf.    1.53334 (22) obj. -59.0262 iterations 58
Cbc0038I Pass  23: suminf.    1.08156 (24) obj. -59.0262 iterations 23
Cbc0038I Pass  24: suminf.    1.00838 (15) obj. -59.0262 iterations 35
Cbc0038I Pass  25: suminf.    0.66120 (15) obj. -59.0262 iterations 17
Cbc0038I Pass  26: suminf.    0.34354 (8) obj. -59.0262 iterations 22
Cbc0038I Pass  27: suminf.    0.64485 (7) obj. -59.0262 iterations 27
Cbc0038I Pass  28: suminf.    0.60367 (8) obj. -59.0262 iterations 20
Cbc0038I Pass  29: suminf.    0.53108 (7) obj. -59.0262 iterations 26
Cbc0038I Pass  30: suminf.    0.48859 (11) obj. -59.0262 iterations 11
Cbc0038I Pass  31: suminf.    0.48802 (11) obj. -59.0262 iterations 24
Cbc0038I Pass  32: suminf.    0.48802 (11) obj. -59.0262 iterations 11
Cbc0038I Pass  33: suminf.    0.48859 (11) obj. -59.0262 iterations 24
Cbc0038I Pass  34: suminf.    2.04056 (29) obj. -59.0262 iterations 94
Cbc0038I Pass  35: suminf.    0.79559 (30) obj. -59.0262 iterations 43
Cbc0038I Pass  36: suminf.    0.67860 (26) obj. -59.0262 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 232 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 396 columns, reduced to 22 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -42.0327 to -44.9528 (0.25 seconds)
Cbc0038I Round again with cutoff of -89.6142
Cbc0038I Pass  36: suminf.    3.51109 (118) obj. -204.276 iterations 0
Cbc0038I Pass  37: suminf.    1.35248 (91) obj. -89.6142 iterations 30
Cbc0038I Pass  38: suminf.    0.82818 (68) obj. -89.6142 iterations 30
Cbc0038I Pass  39: suminf.    1.72865 (46) obj. -89.6142 iterations 57
Cbc0038I Pass  40: suminf.    1.72865 (46) obj. -89.6142 iterations 0
Cbc0038I Pass  41: suminf.    1.22549 (41) obj. -89.6142 iterations 32
Cbc0038I Pass  42: suminf.    1.22549 (41) obj. -89.6142 iterations 0
Cbc0038I Pass  43: suminf.    2.12919 (29) obj. -89.6142 iterations 34
Cbc0038I Pass  44: suminf.    1.27966 (30) obj. -89.6142 iterations 14
Cbc0038I Pass  45: suminf.    1.94407 (31) obj. -89.6142 iterations 64
Cbc0038I Pass  46: suminf.    1.86254 (37) obj. -89.6142 iterations 18
Cbc0038I Pass  47: suminf.    2.34407 (22) obj. -89.6142 iterations 64
Cbc0038I Pass  48: suminf.    2.28870 (22) obj. -89.6142 iterations 5
Cbc0038I Pass  49: suminf.    1.68334 (15) obj. -89.6142 iterations 56
Cbc0038I Pass  50: suminf.    0.87400 (15) obj. -89.6142 iterations 31
Cbc0038I Pass  51: suminf.    1.18551 (15) obj. -89.6142 iterations 27
Cbc0038I Pass  52: suminf.    1.92989 (26) obj. -89.6142 iterations 53
Cbc0038I Pass  53: suminf.    1.92989 (26) obj. -89.6142 iterations 12
Cbc0038I Pass  54: suminf.    1.80796 (24) obj. -89.6142 iterations 29
Cbc0038I Pass  55: suminf.    1.02516 (24) obj. -89.6142 iterations 26
Cbc0038I Pass  56: suminf.    1.31785 (20) obj. -89.6142 iterations 49
Cbc0038I Pass  57: suminf.    1.03972 (20) obj. -89.6142 iterations 19
Cbc0038I Pass  58: suminf.    1.36874 (15) obj. -89.6142 iterations 22
Cbc0038I Pass  59: suminf.    2.38701 (39) obj. -89.6142 iterations 51
Cbc0038I Pass  60: suminf.    1.99152 (36) obj. -89.6142 iterations 19
Cbc0038I Pass  61: suminf.    1.53635 (35) obj. -92.0027 iterations 9
Cbc0038I Pass  62: suminf.    1.29622 (20) obj. -89.6142 iterations 44
Cbc0038I Pass  63: suminf.    1.29622 (20) obj. -89.6142 iterations 0
Cbc0038I Pass  64: suminf.    1.60632 (28) obj. -89.6142 iterations 79
Cbc0038I Pass  65: suminf.    1.60632 (28) obj. -89.6142 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 396 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -44.9528 - took 0.23 seconds
Cbc0012I Integer solution of -44.95283 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 381 rows 396 columns, reduced to 3 rows 4 columns
Cbc0012I Integer solution of -85.20037 found by DiveCoefficient after 13091 iterations and 0 nodes (9.00 seconds)
Cbc0031I 151 added rows had average density of 76.086093
Cbc0013I At root node, 151 cuts changed objective from -211.96641 to -151.9522 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41451 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.588 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3439 row cuts average 366.1 elements, 0 column cuts (0 active)  in 1.489 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1044 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6568 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.301 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.847 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2412 row cuts average 12.3 elements, 0 column cuts (0 active)  in 1.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 407 row cuts average 214.7 elements, 0 column cuts (0 active)  in 0.264 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 314 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.617 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -85.20037 best solution, best possible -151.9522 (9.91 seconds)
Cbc0012I Integer solution of -85.29926 found by DiveCoefficient after 14172 iterations and 3 nodes (10.67 seconds)
Cbc0010I After 3 nodes, 2 on tree, -85.29926 best solution, best possible -148.39657 (10.98 seconds)
Cbc0012I Integer solution of -95.41833 found by DiveCoefficient after 14513 iterations and 4 nodes (11.17 seconds)
Cbc0012I Integer solution of -98.67216 found by DiveCoefficient after 14606 iterations and 5 nodes (11.32 seconds)
Cbc0012I Integer solution of -106.09756 found by DiveCoefficient after 14781 iterations and 8 nodes (11.53 seconds)
Cbc0010I After 12 nodes, 7 on tree, -106.09756 best solution, best possible -148.39657 (11.68 seconds)
Cbc0038I Full problem 381 rows 396 columns, reduced to 14 rows 19 columns
Cbc0012I Integer solution of -131.02689 found by RINS after 16715 iterations and 41 nodes (12.16 seconds)
Cbc0010I After 56 nodes, 3 on tree, -131.02689 best solution, best possible -148.39657 (12.88 seconds)
Cbc0010I After 59 nodes, 6 on tree, -131.02689 best solution, best possible -148.39657 (13.72 seconds)
Cbc0010I After 68 nodes, 5 on tree, -131.02689 best solution, best possible -148.39657 (14.42 seconds)
Cbc0001I Search completed - best objective -131.02689, took 22234 iterations and 92 nodes (14.75 seconds)
Cbc0032I Strong branching done 1152 times (33442 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 28, 494 variables fixed on reduced cost
Total time (CPU seconds):       14.47   (Wallclock seconds):       14.85

