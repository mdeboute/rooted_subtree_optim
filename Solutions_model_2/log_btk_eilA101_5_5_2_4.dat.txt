Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 9.65748e-05 - average 5.13696e-07, 16 fixed columns
Coin0506I Presolve 156 (-32) rows, 84 (-17) columns and 472 (-98) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 0.26858507 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Coin0511I After Postsolve, objective 34.262848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24373901 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Coin0511I After Postsolve, objective 34.262848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.26284845 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 13.7525
Cbc0038I Solution found of 8.08819
Cbc0038I Relaxing continuous gives 8.00114
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 87 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 8.00114 to 0.853417 (0.07 seconds)
Cbc0038I Round again with cutoff of -2.6583
Cbc0038I Pass   1: suminf.    1.69986 (13) obj. -2.6583 iterations 99
Cbc0038I Pass   2: suminf.    1.64580 (10) obj. -2.6583 iterations 13
Cbc0038I Pass   3: suminf.    1.15367 (7) obj. -2.6583 iterations 2
Cbc0038I Pass   4: suminf.    2.25764 (7) obj. -2.6583 iterations 8
Cbc0038I Pass   5: suminf.    2.78720 (7) obj. -2.6583 iterations 3
Cbc0038I Pass   6: suminf.    2.53484 (7) obj. -2.6583 iterations 4
Cbc0038I Pass   7: suminf.    2.49086 (6) obj. -2.6583 iterations 1
Cbc0038I Pass   8: suminf.    2.69246 (7) obj. -2.6583 iterations 2
Cbc0038I Pass   9: suminf.    2.39826 (8) obj. -2.6583 iterations 26
Cbc0038I Pass  10: suminf.    2.39826 (8) obj. -2.6583 iterations 5
Cbc0038I Pass  11: suminf.    1.85729 (6) obj. -2.6583 iterations 19
Cbc0038I Pass  12: suminf.    1.64960 (6) obj. -2.6583 iterations 3
Cbc0038I Pass  13: suminf.    1.53748 (4) obj. -2.6583 iterations 1
Cbc0038I Pass  14: suminf.    1.41230 (4) obj. -2.6583 iterations 3
Cbc0038I Pass  15: suminf.    1.64960 (6) obj. -2.6583 iterations 3
Cbc0038I Pass  16: suminf.    4.26201 (20) obj. -2.6583 iterations 37
Cbc0038I Pass  17: suminf.    2.12513 (8) obj. -2.6583 iterations 20
Cbc0038I Pass  18: suminf.    1.35639 (6) obj. -2.6583 iterations 12
Cbc0038I Pass  19: suminf.    1.18671 (4) obj. -2.6583 iterations 2
Cbc0038I Pass  20: suminf.    2.11618 (7) obj. -2.6583 iterations 4
Cbc0038I Pass  21: suminf.    2.80012 (12) obj. -2.6583 iterations 23
Cbc0038I Pass  22: suminf.    1.39671 (9) obj. -2.6583 iterations 11
Cbc0038I Pass  23: suminf.    1.17481 (6) obj. -2.6583 iterations 5
Cbc0038I Pass  24: suminf.    1.42197 (6) obj. -2.6583 iterations 10
Cbc0038I Pass  25: suminf.    1.22723 (3) obj. -2.6583 iterations 2
Cbc0038I Pass  26: suminf.    0.80995 (3) obj. -2.6583 iterations 2
Cbc0038I Pass  27: suminf.    0.84724 (6) obj. -2.6583 iterations 17
Cbc0038I Pass  28: suminf.    0.84724 (6) obj. -2.6583 iterations 2
Cbc0038I Pass  29: suminf.    1.80749 (7) obj. -2.6583 iterations 11
Cbc0038I Pass  30: suminf.    1.43176 (5) obj. -2.6583 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 121 rows 72 columns - 1 fixed gives 118, 71 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 118 rows 71 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of 0.853417 - took 0.07 seconds
Cbc0012I Integer solution of 0.853417 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 87 rows 54 columns
Cbc0012I Integer solution of -3.290182 found by RINS after 0 iterations and 0 nodes (0.13 seconds)
Cbc0031I 30 added rows had average density of 65.333333
Cbc0013I At root node, 30 cuts changed objective from -34.262848 to -26.964564 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21177 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2840 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.290182 best solution, best possible -26.964564 (1.53 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 70 rows 45 columns
Cbc0012I Integer solution of -3.529783 found by RINS after 14527 iterations and 42 nodes (1.93 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 68 rows 44 columns
Cbc0010I After 149 nodes, 10 on tree, -3.529783 best solution, best possible -26.964564 (2.23 seconds)
Cbc0001I Search completed - best objective -3.529782999999995, took 18916 iterations and 168 nodes (2.28 seconds)
Cbc0032I Strong branching done 1818 times (34744 iterations), fathomed 17 nodes and fixed 109 variables
Cbc0035I Maximum depth 38, 665 variables fixed on reduced cost
Total time (CPU seconds):       2.24   (Wallclock seconds):       2.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-73) rows, 143 (-59) columns and 2573 (-3080) elements
Clp1000I sum of infeasibilities 1.8664e-07 - average 1.42473e-09, 32 fixed columns
Coin0506I Presolve 101 (-30) rows, 111 (-32) columns and 1702 (-871) elements
Clp0006I 0  Obj 36.621858 Dual inf 5.1546071 (109)
Clp0029I End of values pass after 111 iterations
Clp0014I Perturbing problem by 0.001% of 1.538472 - largest nonzero change 2.2399148e-05 ( 0.0016756202%) - largest zero change 2.9840106e-05
Clp0000I Optimal - objective value 53.654923
Clp0000I Optimal - objective value 53.654923
Coin0511I After Postsolve, objective 53.654923, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.654923
Clp0000I Optimal - objective value 53.654923
Clp0000I Optimal - objective value 53.654923
Clp0000I Optimal - objective value 53.654923
Coin0511I After Postsolve, objective 53.654923, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.65492251 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 143 columns (143 integer (143 of which binary)) and 2576 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.821%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 8.40318
Cbc0038I Pass   1: suminf.    3.35451 (34) obj. -31.3394 iterations 12
Cbc0038I Pass   2: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass   3: suminf.    1.15031 (14) obj. -5.5716 iterations 20
Cbc0038I Solution found of 8.18026
Cbc0038I Rounding solution of 2.15804 is better than previous of 8.18026

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 2.15804 to 1.09345 (0.04 seconds)
Cbc0038I Round again with cutoff of -3.6135
Cbc0038I Pass   4: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass   5: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass   6: suminf.    1.17412 (11) obj. -3.6135 iterations 27
Cbc0038I Pass   7: suminf.    0.77491 (10) obj. -3.6135 iterations 12
Cbc0038I Pass   8: suminf.    0.77491 (10) obj. -3.6135 iterations 3
Cbc0038I Pass   9: suminf.    0.98899 (5) obj. -3.6135 iterations 16
Cbc0038I Pass  10: suminf.    0.98899 (5) obj. -3.6135 iterations 0
Cbc0038I Pass  11: suminf.    0.35523 (2) obj. -3.6135 iterations 6
Cbc0038I Pass  12: suminf.    0.13265 (1) obj. -4.11063 iterations 2
Cbc0038I Pass  13: suminf.    0.72844 (2) obj. -3.6135 iterations 4
Cbc0038I Pass  14: suminf.    0.46939 (2) obj. -6.42651 iterations 2
Cbc0038I Pass  15: suminf.    2.33658 (14) obj. -3.6135 iterations 45
Cbc0038I Pass  16: suminf.    1.74439 (13) obj. -3.6135 iterations 8
Cbc0038I Pass  17: suminf.    1.16609 (8) obj. -3.6135 iterations 25
Cbc0038I Pass  18: suminf.    1.14477 (8) obj. -3.6135 iterations 2
Cbc0038I Pass  19: suminf.    0.52734 (5) obj. -3.6135 iterations 16
Cbc0038I Pass  20: suminf.    0.52734 (5) obj. -3.6135 iterations 0
Cbc0038I Pass  21: suminf.    0.87309 (5) obj. -3.6135 iterations 12
Cbc0038I Pass  22: suminf.    0.87309 (5) obj. -3.6135 iterations 0
Cbc0038I Pass  23: suminf.    1.06928 (4) obj. -3.6135 iterations 13
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -3.71683 iterations 4
Cbc0038I Pass  25: suminf.    0.41025 (2) obj. -3.6135 iterations 4
Cbc0038I Pass  26: suminf.    2.05175 (10) obj. -3.6135 iterations 40
Cbc0038I Pass  27: suminf.    2.05175 (10) obj. -3.6135 iterations 5
Cbc0038I Pass  28: suminf.    0.53332 (7) obj. -3.6135 iterations 27
Cbc0038I Pass  29: suminf.    0.53332 (7) obj. -3.6135 iterations 0
Cbc0038I Pass  30: suminf.    0.67466 (4) obj. -3.6135 iterations 18
Cbc0038I Pass  31: suminf.    0.39286 (2) obj. -4.02921 iterations 4
Cbc0038I Pass  32: suminf.    0.82940 (2) obj. -3.6135 iterations 5
Cbc0038I Pass  33: suminf.    0.29150 (3) obj. -3.6135 iterations 1
Cbc0038I Rounding solution of 0.056311 is better than previous of 1.09345

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 21 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 0.056311 to -1.64659 (0.07 seconds)
Cbc0038I Round again with cutoff of -12.0858
Cbc0038I Pass  33: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass  34: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass  35: suminf.    1.37306 (15) obj. -12.0858 iterations 31
Cbc0038I Pass  36: suminf.    1.37306 (15) obj. -12.0858 iterations 0
Cbc0038I Pass  37: suminf.    2.21457 (11) obj. -12.0858 iterations 34
Cbc0038I Pass  38: suminf.    1.58914 (13) obj. -12.0858 iterations 7
Cbc0038I Pass  39: suminf.    1.74841 (8) obj. -12.0858 iterations 13
Cbc0038I Pass  40: suminf.    0.97697 (5) obj. -12.1392 iterations 4
Cbc0038I Pass  41: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  42: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I Pass  43: suminf.    2.29532 (8) obj. -12.0858 iterations 12
Cbc0038I Pass  44: suminf.    1.15828 (8) obj. -12.0858 iterations 8
Cbc0038I Pass  45: suminf.    0.97697 (5) obj. -12.1392 iterations 9
Cbc0038I Pass  46: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  47: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I Pass  48: suminf.    2.29532 (8) obj. -12.0858 iterations 12
Cbc0038I Pass  49: suminf.    1.15828 (8) obj. -12.0858 iterations 8
Cbc0038I Pass  50: suminf.    0.97697 (5) obj. -12.1392 iterations 9
Cbc0038I Pass  51: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  52: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I Pass  53: suminf.    2.29532 (8) obj. -12.0858 iterations 12
Cbc0038I Pass  54: suminf.    1.15828 (8) obj. -12.0858 iterations 8
Cbc0038I Pass  55: suminf.    0.97697 (5) obj. -12.1392 iterations 9
Cbc0038I Pass  56: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  57: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I Pass  58: suminf.    2.29532 (8) obj. -12.0858 iterations 12
Cbc0038I Pass  59: suminf.    1.15828 (8) obj. -12.0858 iterations 8
Cbc0038I Pass  60: suminf.    0.97697 (5) obj. -12.1392 iterations 9
Cbc0038I Pass  61: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  62: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -1.64659 - took 0.06 seconds
Cbc0012I Integer solution of -1.646588 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 2 rows 3 columns
Cbc0031I 60 added rows had average density of 57.883333
Cbc0013I At root node, 60 cuts changed objective from -45.975132 to -10.312065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16702 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2298 row cuts average 139.1 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 831 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1928 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 470 row cuts average 72.3 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.354 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.646588 best solution, best possible -10.312065 (2.25 seconds)
Cbc0012I Integer solution of -1.833 found by DiveCoefficient after 6468 iterations and 8 nodes (2.56 seconds)
Cbc0016I Integer solution of -1.960181 found by strong branching after 7022 iterations and 37 nodes (2.67 seconds)
Cbc0012I Integer solution of -2.36749 found by rounding after 7041 iterations and 39 nodes (2.68 seconds)
Cbc0012I Integer solution of -2.420132 found by rounding after 7047 iterations and 40 nodes (2.68 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 3 rows 4 columns
Cbc0012I Integer solution of -2.53751 found by rounding after 7098 iterations and 45 nodes (2.70 seconds)
Cbc0012I Integer solution of -2.56994 found by rounding after 7499 iterations and 65 nodes (2.80 seconds)
Cbc0012I Integer solution of -2.825111 found by rounding after 7663 iterations and 71 nodes (2.84 seconds)
Cbc0012I Integer solution of -3.513461 found by rounding after 7677 iterations and 72 nodes (2.84 seconds)
Cbc0010I After 89 nodes, 6 on tree, -3.513461 best solution, best possible -10.312065 (2.95 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 51 rows 67 columns
Cbc0010I After 131 nodes, 4 on tree, -3.513461 best solution, best possible -10.312065 (3.70 seconds)
Cbc0010I After 155 nodes, 6 on tree, -3.513461 best solution, best possible -10.311554 (4.44 seconds)
Cbc0010I After 188 nodes, 17 on tree, -3.513461 best solution, best possible -10.311554 (5.14 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 54 rows 69 columns
Cbc0010I After 275 nodes, 18 on tree, -3.513461 best solution, best possible -10.311554 (5.84 seconds)
Cbc0010I After 390 nodes, 10 on tree, -3.513461 best solution, best possible -10.311554 (6.55 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 51 rows 66 columns
Cbc0010I After 446 nodes, 22 on tree, -3.513461 best solution, best possible -10.311554 (7.25 seconds)
Cbc0010I After 503 nodes, 31 on tree, -3.513461 best solution, best possible -10.311554 (7.95 seconds)
Cbc0010I After 573 nodes, 5 on tree, -3.513461 best solution, best possible -10.311554 (8.79 seconds)
Cbc0016I Integer solution of -3.529783 found by strong branching after 24908 iterations and 591 nodes (9.37 seconds)
Cbc0001I Search completed - best objective -3.529782999999995, took 109308 iterations and 9986 nodes (9.38 seconds)
Cbc0032I Strong branching done 4974 times (58418 iterations), fathomed 42 nodes and fixed 69 variables
Cbc0041I Maximum depth 29, 1833 variables fixed on reduced cost (complete fathoming 63 times, 9390 nodes taking 84118 iterations)
Total time (CPU seconds):       8.81   (Wallclock seconds):       9.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 9.65748e-05 - average 5.13696e-07, 16 fixed columns
Coin0506I Presolve 156 (-32) rows, 84 (-17) columns and 472 (-98) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 0.26858507 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Coin0511I After Postsolve, objective 34.262848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24373901 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Coin0511I After Postsolve, objective 34.262848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.26284845 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 13.7525
Cbc0038I Solution found of 8.08819
Cbc0038I Relaxing continuous gives 8.00114
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 87 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 8.00114 to 0.853417 (0.07 seconds)
Cbc0038I Round again with cutoff of -2.6583
Cbc0038I Pass   1: suminf.    1.69986 (13) obj. -2.6583 iterations 99
Cbc0038I Pass   2: suminf.    1.64580 (10) obj. -2.6583 iterations 13
Cbc0038I Pass   3: suminf.    1.15367 (7) obj. -2.6583 iterations 2
Cbc0038I Pass   4: suminf.    2.25764 (7) obj. -2.6583 iterations 8
Cbc0038I Pass   5: suminf.    2.78720 (7) obj. -2.6583 iterations 3
Cbc0038I Pass   6: suminf.    2.53484 (7) obj. -2.6583 iterations 4
Cbc0038I Pass   7: suminf.    2.49086 (6) obj. -2.6583 iterations 1
Cbc0038I Pass   8: suminf.    2.69246 (7) obj. -2.6583 iterations 2
Cbc0038I Pass   9: suminf.    2.39826 (8) obj. -2.6583 iterations 26
Cbc0038I Pass  10: suminf.    2.39826 (8) obj. -2.6583 iterations 5
Cbc0038I Pass  11: suminf.    1.85729 (6) obj. -2.6583 iterations 19
Cbc0038I Pass  12: suminf.    1.64960 (6) obj. -2.6583 iterations 3
Cbc0038I Pass  13: suminf.    1.53748 (4) obj. -2.6583 iterations 1
Cbc0038I Pass  14: suminf.    1.41230 (4) obj. -2.6583 iterations 3
Cbc0038I Pass  15: suminf.    1.64960 (6) obj. -2.6583 iterations 3
Cbc0038I Pass  16: suminf.    4.26201 (20) obj. -2.6583 iterations 37
Cbc0038I Pass  17: suminf.    2.12513 (8) obj. -2.6583 iterations 20
Cbc0038I Pass  18: suminf.    1.35639 (6) obj. -2.6583 iterations 12
Cbc0038I Pass  19: suminf.    1.18671 (4) obj. -2.6583 iterations 2
Cbc0038I Pass  20: suminf.    2.11618 (7) obj. -2.6583 iterations 4
Cbc0038I Pass  21: suminf.    2.80012 (12) obj. -2.6583 iterations 23
Cbc0038I Pass  22: suminf.    1.39671 (9) obj. -2.6583 iterations 11
Cbc0038I Pass  23: suminf.    1.17481 (6) obj. -2.6583 iterations 5
Cbc0038I Pass  24: suminf.    1.42197 (6) obj. -2.6583 iterations 10
Cbc0038I Pass  25: suminf.    1.22723 (3) obj. -2.6583 iterations 2
Cbc0038I Pass  26: suminf.    0.80995 (3) obj. -2.6583 iterations 2
Cbc0038I Pass  27: suminf.    0.84724 (6) obj. -2.6583 iterations 17
Cbc0038I Pass  28: suminf.    0.84724 (6) obj. -2.6583 iterations 2
Cbc0038I Pass  29: suminf.    1.80749 (7) obj. -2.6583 iterations 11
Cbc0038I Pass  30: suminf.    1.43176 (5) obj. -2.6583 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 121 rows 72 columns - 1 fixed gives 118, 71 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 118 rows 71 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of 0.853417 - took 0.07 seconds
Cbc0012I Integer solution of 0.853417 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 87 rows 54 columns
Cbc0012I Integer solution of -3.290182 found by RINS after 0 iterations and 0 nodes (0.15 seconds)
Cbc0031I 30 added rows had average density of 65.333333
Cbc0013I At root node, 30 cuts changed objective from -34.262848 to -26.964564 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21177 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2840 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.290182 best solution, best possible -26.964564 (1.88 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 70 rows 45 columns
Cbc0012I Integer solution of -3.529783 found by RINS after 14527 iterations and 42 nodes (2.33 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 68 rows 44 columns
Cbc0010I After 114 nodes, 14 on tree, -3.529783 best solution, best possible -26.964564 (2.59 seconds)
Cbc0001I Search completed - best objective -3.529782999999995, took 18916 iterations and 168 nodes (2.72 seconds)
Cbc0032I Strong branching done 1818 times (34744 iterations), fathomed 17 nodes and fixed 109 variables
Cbc0035I Maximum depth 38, 665 variables fixed on reduced cost
Total time (CPU seconds):       2.55   (Wallclock seconds):       2.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-74) rows, 143 (-60) columns and 2573 (-3081) elements
Clp1000I sum of infeasibilities 1.8664e-07 - average 1.42473e-09, 32 fixed columns
Coin0506I Presolve 101 (-30) rows, 111 (-32) columns and 1702 (-871) elements
Clp0006I 0  Obj 36.621858 Dual inf 5.1546071 (109)
Clp0029I End of values pass after 111 iterations
Clp0014I Perturbing problem by 0.001% of 1.538472 - largest nonzero change 2.2399148e-05 ( 0.0016756202%) - largest zero change 2.9840106e-05
Clp0000I Optimal - objective value 53.654923
Clp0000I Optimal - objective value 53.654923
Coin0511I After Postsolve, objective 53.654923, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.654923
Clp0000I Optimal - objective value 53.654923
Clp0000I Optimal - objective value 53.654923
Clp0000I Optimal - objective value 53.654923
Coin0511I After Postsolve, objective 53.654923, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.65492251 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 143 columns (143 integer (143 of which binary)) and 2576 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.821%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 8.40318
Cbc0038I Pass   1: suminf.    3.35451 (34) obj. -31.3394 iterations 12
Cbc0038I Pass   2: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass   3: suminf.    1.15031 (14) obj. -5.5716 iterations 20
Cbc0038I Solution found of 8.18026
Cbc0038I Rounding solution of 2.15804 is better than previous of 8.18026

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 2.15804 to 1.09345 (0.04 seconds)
Cbc0038I Round again with cutoff of -3.6135
Cbc0038I Pass   4: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass   5: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass   6: suminf.    1.17412 (11) obj. -3.6135 iterations 27
Cbc0038I Pass   7: suminf.    0.77491 (10) obj. -3.6135 iterations 12
Cbc0038I Pass   8: suminf.    0.77491 (10) obj. -3.6135 iterations 3
Cbc0038I Pass   9: suminf.    0.98899 (5) obj. -3.6135 iterations 16
Cbc0038I Pass  10: suminf.    0.98899 (5) obj. -3.6135 iterations 0
Cbc0038I Pass  11: suminf.    0.35523 (2) obj. -3.6135 iterations 6
Cbc0038I Pass  12: suminf.    0.13265 (1) obj. -4.11063 iterations 2
Cbc0038I Pass  13: suminf.    0.72844 (2) obj. -3.6135 iterations 4
Cbc0038I Pass  14: suminf.    0.46939 (2) obj. -6.42651 iterations 2
Cbc0038I Pass  15: suminf.    2.33658 (14) obj. -3.6135 iterations 45
Cbc0038I Pass  16: suminf.    1.74439 (13) obj. -3.6135 iterations 8
Cbc0038I Pass  17: suminf.    1.16609 (8) obj. -3.6135 iterations 25
Cbc0038I Pass  18: suminf.    1.14477 (8) obj. -3.6135 iterations 2
Cbc0038I Pass  19: suminf.    0.52734 (5) obj. -3.6135 iterations 16
Cbc0038I Pass  20: suminf.    0.52734 (5) obj. -3.6135 iterations 0
Cbc0038I Pass  21: suminf.    0.87309 (5) obj. -3.6135 iterations 12
Cbc0038I Pass  22: suminf.    0.87309 (5) obj. -3.6135 iterations 0
Cbc0038I Pass  23: suminf.    1.06928 (4) obj. -3.6135 iterations 13
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -3.71683 iterations 4
Cbc0038I Pass  25: suminf.    0.41025 (2) obj. -3.6135 iterations 4
Cbc0038I Pass  26: suminf.    2.05175 (10) obj. -3.6135 iterations 40
Cbc0038I Pass  27: suminf.    2.05175 (10) obj. -3.6135 iterations 5
Cbc0038I Pass  28: suminf.    0.53332 (7) obj. -3.6135 iterations 27
Cbc0038I Pass  29: suminf.    0.53332 (7) obj. -3.6135 iterations 0
Cbc0038I Pass  30: suminf.    0.67466 (4) obj. -3.6135 iterations 18
Cbc0038I Pass  31: suminf.    0.39286 (2) obj. -4.02921 iterations 4
Cbc0038I Pass  32: suminf.    0.82940 (2) obj. -3.6135 iterations 5
Cbc0038I Pass  33: suminf.    0.29150 (3) obj. -3.6135 iterations 1
Cbc0038I Rounding solution of 0.056311 is better than previous of 1.09345

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 21 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 0.056311 to -1.64659 (0.07 seconds)
Cbc0038I Round again with cutoff of -12.0858
Cbc0038I Pass  33: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass  34: suminf.    3.35451 (34) obj. -31.3394 iterations 0
Cbc0038I Pass  35: suminf.    1.37306 (15) obj. -12.0858 iterations 31
Cbc0038I Pass  36: suminf.    1.37306 (15) obj. -12.0858 iterations 0
Cbc0038I Pass  37: suminf.    2.21457 (11) obj. -12.0858 iterations 34
Cbc0038I Pass  38: suminf.    1.58914 (13) obj. -12.0858 iterations 7
Cbc0038I Pass  39: suminf.    1.74841 (8) obj. -12.0858 iterations 13
Cbc0038I Pass  40: suminf.    0.97697 (5) obj. -12.1392 iterations 4
Cbc0038I Pass  41: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  42: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I Pass  43: suminf.    2.29532 (8) obj. -12.0858 iterations 12
Cbc0038I Pass  44: suminf.    1.15828 (8) obj. -12.0858 iterations 8
Cbc0038I Pass  45: suminf.    0.97697 (5) obj. -12.1392 iterations 9
Cbc0038I Pass  46: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  47: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I Pass  48: suminf.    2.29532 (8) obj. -12.0858 iterations 12
Cbc0038I Pass  49: suminf.    1.15828 (8) obj. -12.0858 iterations 8
Cbc0038I Pass  50: suminf.    0.97697 (5) obj. -12.1392 iterations 9
Cbc0038I Pass  51: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  52: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I Pass  53: suminf.    2.29532 (8) obj. -12.0858 iterations 12
Cbc0038I Pass  54: suminf.    1.15828 (8) obj. -12.0858 iterations 8
Cbc0038I Pass  55: suminf.    0.97697 (5) obj. -12.1392 iterations 9
Cbc0038I Pass  56: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  57: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I Pass  58: suminf.    2.29532 (8) obj. -12.0858 iterations 12
Cbc0038I Pass  59: suminf.    1.15828 (8) obj. -12.0858 iterations 8
Cbc0038I Pass  60: suminf.    0.97697 (5) obj. -12.1392 iterations 9
Cbc0038I Pass  61: suminf.    1.88951 (9) obj. -12.0858 iterations 11
Cbc0038I Pass  62: suminf.    1.88951 (9) obj. -12.0858 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -1.64659 - took 0.06 seconds
Cbc0012I Integer solution of -1.646588 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 2 rows 3 columns
Cbc0031I 60 added rows had average density of 57.883333
Cbc0013I At root node, 60 cuts changed objective from -45.975132 to -10.312065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16702 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2298 row cuts average 139.1 elements, 0 column cuts (0 active)  in 0.254 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 831 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1928 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 470 row cuts average 72.3 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.386 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.646588 best solution, best possible -10.312065 (2.50 seconds)
Cbc0012I Integer solution of -1.833 found by DiveCoefficient after 6468 iterations and 8 nodes (2.86 seconds)
Cbc0016I Integer solution of -1.960181 found by strong branching after 7022 iterations and 37 nodes (2.99 seconds)
Cbc0012I Integer solution of -2.36749 found by rounding after 7041 iterations and 39 nodes (2.99 seconds)
Cbc0012I Integer solution of -2.420132 found by rounding after 7047 iterations and 40 nodes (3.00 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 3 rows 4 columns
Cbc0012I Integer solution of -2.53751 found by rounding after 7098 iterations and 45 nodes (3.01 seconds)
Cbc0012I Integer solution of -2.56994 found by rounding after 7499 iterations and 65 nodes (3.14 seconds)
Cbc0012I Integer solution of -2.825111 found by rounding after 7663 iterations and 71 nodes (3.18 seconds)
Cbc0012I Integer solution of -3.513461 found by rounding after 7677 iterations and 72 nodes (3.18 seconds)
Cbc0010I After 78 nodes, 11 on tree, -3.513461 best solution, best possible -10.312065 (3.20 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 51 rows 67 columns
Cbc0010I After 109 nodes, 9 on tree, -3.513461 best solution, best possible -10.312065 (3.94 seconds)
Cbc0010I After 150 nodes, 1 on tree, -3.513461 best solution, best possible -10.311554 (4.66 seconds)
Cbc0010I After 163 nodes, 10 on tree, -3.513461 best solution, best possible -10.311554 (5.37 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 54 rows 69 columns
Cbc0010I After 200 nodes, 18 on tree, -3.513461 best solution, best possible -10.311554 (6.15 seconds)
Cbc0010I After 311 nodes, 14 on tree, -3.513461 best solution, best possible -10.311554 (6.85 seconds)
Cbc0010I After 393 nodes, 9 on tree, -3.513461 best solution, best possible -10.311554 (7.58 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 51 rows 66 columns
Cbc0010I After 434 nodes, 18 on tree, -3.513461 best solution, best possible -10.311554 (8.28 seconds)
Cbc0010I After 500 nodes, 33 on tree, -3.513461 best solution, best possible -10.311554 (8.99 seconds)
Cbc0010I After 562 nodes, 3 on tree, -3.513461 best solution, best possible -10.311554 (9.78 seconds)
Cbc0010I After 582 nodes, 5 on tree, -3.513461 best solution, best possible -10.290352 (10.53 seconds)
Cbc0016I Integer solution of -3.529783 found by strong branching after 24908 iterations and 591 nodes (10.82 seconds)
Cbc0001I Search completed - best objective -3.529782999999995, took 109308 iterations and 9986 nodes (10.83 seconds)
Cbc0032I Strong branching done 4974 times (58418 iterations), fathomed 42 nodes and fixed 69 variables
Cbc0041I Maximum depth 29, 1833 variables fixed on reduced cost (complete fathoming 63 times, 9390 nodes taking 84118 iterations)
Total time (CPU seconds):       10.03   (Wallclock seconds):       10.86

