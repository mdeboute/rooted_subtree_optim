Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 1.17006e-05 - average 6.25702e-08, 12 fixed columns
Coin0506I Presolve 163 (-24) rows, 89 (-12) columns and 496 (-72) elements
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.6314236 - largest nonzero change 0 ( 0%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 46.747243
Clp0000I Optimal - objective value 46.747243
Coin0511I After Postsolve, objective 46.747243, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.747243
Clp0000I Optimal - objective value 46.747243
Clp0000I Optimal - objective value 46.747243
Coin0511I After Postsolve, objective 46.747243, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.74724343 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.936%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.72527
Cbc0038I Solution found of 6.11765
Cbc0038I Relaxing continuous gives -2.46681
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.46681 to -24.638 (0.04 seconds)
Cbc0038I Round again with cutoff of -26.849
Cbc0038I Pass   1: suminf.    2.72775 (21) obj. -26.849 iterations 62
Cbc0038I Pass   2: suminf.    2.22832 (14) obj. -26.849 iterations 14
Cbc0038I Pass   3: suminf.    1.67584 (9) obj. -26.849 iterations 22
Cbc0038I Pass   4: suminf.    1.59631 (8) obj. -26.849 iterations 3
Cbc0038I Pass   5: suminf.    1.68004 (6) obj. -26.849 iterations 8
Cbc0038I Pass   6: suminf.    1.47217 (5) obj. -26.849 iterations 6
Cbc0038I Pass   7: suminf.    1.42910 (5) obj. -26.849 iterations 3
Cbc0038I Pass   8: suminf.    0.73125 (4) obj. -26.849 iterations 5
Cbc0038I Pass   9: suminf.    0.73125 (4) obj. -26.849 iterations 1
Cbc0038I Pass  10: suminf.    1.10678 (4) obj. -26.849 iterations 8
Cbc0038I Pass  11: suminf.    0.66440 (3) obj. -26.849 iterations 3
Cbc0038I Pass  12: suminf.    0.73125 (4) obj. -26.849 iterations 4
Cbc0038I Pass  13: suminf.    2.45085 (6) obj. -26.849 iterations 23
Cbc0038I Pass  14: suminf.    2.08313 (6) obj. -26.849 iterations 12
Cbc0038I Pass  15: suminf.    0.77991 (4) obj. -26.849 iterations 4
Cbc0038I Pass  16: suminf.    0.28271 (5) obj. -26.849 iterations 4
Cbc0038I Pass  17: suminf.    1.67439 (5) obj. -26.849 iterations 10
Cbc0038I Pass  18: suminf.    1.23433 (4) obj. -26.849 iterations 4
Cbc0038I Pass  19: suminf.    1.10484 (5) obj. -26.849 iterations 3
Cbc0038I Pass  20: suminf.    1.27377 (4) obj. -26.849 iterations 8
Cbc0038I Pass  21: suminf.    1.20370 (5) obj. -26.849 iterations 2
Cbc0038I Pass  22: suminf.    1.19753 (5) obj. -26.849 iterations 3
Cbc0038I Pass  23: suminf.    0.97651 (3) obj. -26.849 iterations 7
Cbc0038I Pass  24: suminf.    0.91258 (4) obj. -26.849 iterations 3
Cbc0038I Pass  25: suminf.    1.31417 (5) obj. -26.849 iterations 10
Cbc0038I Pass  26: suminf.    1.20370 (5) obj. -26.849 iterations 2
Cbc0038I Pass  27: suminf.    1.19753 (5) obj. -26.849 iterations 3
Cbc0038I Pass  28: suminf.    0.97651 (3) obj. -26.849 iterations 7
Cbc0038I Pass  29: suminf.    0.91258 (4) obj. -26.849 iterations 3
Cbc0038I Pass  30: suminf.    1.31417 (5) obj. -26.849 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -24.638 - took 0.08 seconds
Cbc0012I Integer solution of -24.63803 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 73 rows 41 columns
Cbc0031I 31 added rows had average density of 26.032258
Cbc0013I At root node, 31 cuts changed objective from -46.747243 to -41.171027 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16408 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2244 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.63803 best solution, best possible -41.171027 (1.12 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 92 rows 52 columns
Cbc0038I Full problem 187 rows 101 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of -24.71601 found by rounding after 13491 iterations and 152 nodes (1.70 seconds)
Cbc0012I Integer solution of -24.72083 found by rounding after 15060 iterations and 229 nodes (1.79 seconds)
Cbc0001I Search completed - best objective -24.72083, took 15231 iterations and 238 nodes (1.81 seconds)
Cbc0032I Strong branching done 1828 times (28362 iterations), fathomed 17 nodes and fixed 87 variables
Cbc0035I Maximum depth 49, 500 variables fixed on reduced cost
Total time (CPU seconds):       1.78   (Wallclock seconds):       1.83

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 145 (-59) rows, 158 (-44) columns and 3333 (-2320) elements
Clp1000I sum of infeasibilities 1.73988e-07 - average 1.19992e-09, 19 fixed columns
Coin0506I Presolve 124 (-21) rows, 139 (-19) columns and 2586 (-747) elements
Clp0006I 0  Obj 50.648635 Dual inf 13.588141 (138)
Clp0014I Perturbing problem by 0.001% of 1.5793919 - largest nonzero change 2.8761944e-05 ( 0.0025988751%) - largest zero change 2.8936074e-05
Clp0000I Optimal - objective value 58.344186
Clp0000I Optimal - objective value 58.344186
Coin0511I After Postsolve, objective 58.344186, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 58.344186
Clp0000I Optimal - objective value 58.344186
Clp0000I Optimal - objective value 58.344186
Clp0000I Optimal - objective value 58.344186
Coin0511I After Postsolve, objective 58.344186, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.34418584 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 145 rows, 158 columns (158 integer (158 of which binary)) and 3337 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.289%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 3.21838
Cbc0038I Pass   1: suminf.    3.08052 (45) obj. -53.9668 iterations 17
Cbc0038I Pass   2: suminf.    1.26809 (29) obj. -26.2752 iterations 16
Cbc0038I Pass   3: suminf.    0.25270 (9) obj. -5.40273 iterations 20
Cbc0038I Solution found of 5.29059
Cbc0038I Rounding solution of 1.13778 is better than previous of 5.29059

Cbc0038I Before mini branch and bound, 111 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4.38949
Cbc0038I Pass   4: suminf.    3.08052 (45) obj. -53.9668 iterations 0
Cbc0038I Pass   5: suminf.    0.95313 (25) obj. -21.6659 iterations 22
Cbc0038I Pass   6: suminf.    0.21937 (8) obj. -4.43607 iterations 17
Cbc0038I Pass   7: suminf.    0.32196 (1) obj. -4.38949 iterations 11
Cbc0038I Pass   8: suminf.    0.22857 (1) obj. -5.72279 iterations 1
Cbc0038I Pass   9: suminf.    1.84686 (22) obj. -6.32076 iterations 40
Cbc0038I Pass  10: suminf.    0.95199 (15) obj. -4.38949 iterations 13
Cbc0038I Pass  11: suminf.    0.89216 (4) obj. -4.38949 iterations 26
Cbc0038I Pass  12: suminf.    0.74226 (5) obj. -4.38949 iterations 8
Cbc0038I Pass  13: suminf.    0.89216 (4) obj. -4.38949 iterations 7
Cbc0038I Pass  14: suminf.    1.38304 (13) obj. -4.38949 iterations 34
Cbc0038I Pass  15: suminf.    1.29474 (12) obj. -4.38949 iterations 8
Cbc0038I Pass  16: suminf.    0.87726 (6) obj. -4.38949 iterations 18
Cbc0038I Pass  17: suminf.    0.64991 (5) obj. -4.38949 iterations 6
Cbc0038I Pass  18: suminf.    0.87726 (5) obj. -4.38949 iterations 8
Cbc0038I Pass  19: suminf.    0.75712 (11) obj. -4.38949 iterations 21
Cbc0038I Pass  20: suminf.    0.75712 (11) obj. -4.38949 iterations 2
Cbc0038I Pass  21: suminf.    0.79527 (6) obj. -4.38949 iterations 17
Cbc0038I Pass  22: suminf.    0.63502 (5) obj. -4.38949 iterations 4
Cbc0038I Pass  23: suminf.    0.76796 (6) obj. -4.38949 iterations 11
Cbc0038I Pass  24: suminf.    0.76796 (6) obj. -4.38949 iterations 6
Cbc0038I Pass  25: suminf.    0.78695 (5) obj. -4.38949 iterations 14
Cbc0038I Pass  26: suminf.    0.78695 (5) obj. -4.38949 iterations 6
Cbc0038I Pass  27: suminf.    0.78589 (4) obj. -4.38949 iterations 8
Cbc0038I Pass  28: suminf.    0.59921 (4) obj. -4.38949 iterations 4
Cbc0038I Pass  29: suminf.    0.78589 (4) obj. -4.38949 iterations 5
Cbc0038I Pass  30: suminf.    1.76879 (11) obj. -4.38949 iterations 36
Cbc0038I Pass  31: suminf.    0.74396 (9) obj. -4.38949 iterations 11
Cbc0038I Pass  32: suminf.    0.84891 (5) obj. -4.38949 iterations 15
Cbc0038I Pass  33: suminf.    0.50529 (5) obj. -4.38949 iterations 7
Cbc0038I Rounding solution of -15.1883 is better than previous of 1.13778

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 145 rows 158 columns, reduced to 44 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -15.1883 to -24.6691 (0.08 seconds)
Cbc0038I Round again with cutoff of -30.5621
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.08052 (45) obj. -53.9668 iterations 0
Cbc0038I Pass  34: suminf.    1.33000 (26) obj. -30.5621 iterations 21
Cbc0038I Pass  35: suminf.    1.18170 (26) obj. -32.6793 iterations 1
Cbc0038I Pass  36: suminf.    1.23252 (21) obj. -30.5621 iterations 37
Cbc0038I Pass  37: suminf.    1.22126 (21) obj. -30.5621 iterations 6
Cbc0038I Pass  38: suminf.    1.75089 (21) obj. -30.5621 iterations 18
Cbc0038I Pass  39: suminf.    1.75089 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  40: suminf.    1.62327 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  41: suminf.    1.62327 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  42: suminf.    1.63990 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  43: suminf.    1.63990 (21) obj. -30.5621 iterations 4
Cbc0038I Pass  44: suminf.    1.75089 (21) obj. -30.5621 iterations 8
Cbc0038I Pass  45: suminf.    1.75089 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  46: suminf.    1.62327 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  47: suminf.    1.62327 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  48: suminf.    1.75089 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  49: suminf.    1.80129 (22) obj. -30.5621 iterations 34
Cbc0038I Pass  50: suminf.    1.79438 (22) obj. -30.5621 iterations 6
Cbc0038I Pass  51: suminf.    1.59228 (22) obj. -30.5621 iterations 20
Cbc0038I Pass  52: suminf.    1.59228 (22) obj. -30.5621 iterations 3
Cbc0038I Pass  53: suminf.    1.75089 (21) obj. -30.5621 iterations 12
Cbc0038I Pass  54: suminf.    1.75089 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  55: suminf.    1.62327 (21) obj. -30.5621 iterations 9
Cbc0038I Pass  56: suminf.    1.62327 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  57: suminf.    1.75089 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  58: suminf.    1.99992 (25) obj. -30.5621 iterations 19
Cbc0038I Pass  59: suminf.    1.94198 (25) obj. -30.5621 iterations 6
Cbc0038I Pass  60: suminf.    1.98146 (25) obj. -30.5621 iterations 16
Cbc0038I Pass  61: suminf.    1.98146 (25) obj. -30.5621 iterations 3
Cbc0038I Pass  62: suminf.    2.12771 (25) obj. -30.5621 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -24.6691 - took 0.06 seconds
Cbc0012I Integer solution of -24.66909 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 145 rows 158 columns, reduced to 5 rows 8 columns
Cbc0031I 73 added rows had average density of 30.972603
Cbc0013I At root node, 73 cuts changed objective from -54.133971 to -32.110638 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20915 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.315 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2120 row cuts average 142.2 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 140 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 990 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1422 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 412 row cuts average 88.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 348 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.312 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.66909 best solution, best possible -32.110638 (2.49 seconds)
Cbc0010I After 5 nodes, 4 on tree, -24.66909 best solution, best possible -31.579942 (3.24 seconds)
Cbc0010I After 18 nodes, 9 on tree, -24.66909 best solution, best possible -31.579942 (3.94 seconds)
Cbc0010I After 37 nodes, 15 on tree, -24.66909 best solution, best possible -31.579942 (4.66 seconds)
Cbc0038I Full problem 145 rows 158 columns, reduced to 9 rows 15 columns
Cbc0010I After 55 nodes, 16 on tree, -24.66909 best solution, best possible -31.579942 (5.38 seconds)
Cbc0004I Integer solution of -24.71601 found after 9330 iterations and 78 nodes (5.98 seconds)
Cbc0010I After 82 nodes, 9 on tree, -24.71601 best solution, best possible -31.579942 (6.13 seconds)
Cbc0038I Full problem 145 rows 158 columns, reduced to 14 rows 17 columns
Cbc0004I Integer solution of -24.72083 found after 9864 iterations and 97 nodes (6.61 seconds)
Cbc0001I Search completed - best objective -24.72083, took 10563 iterations and 106 nodes (6.72 seconds)
Cbc0032I Strong branching done 1070 times (17792 iterations), fathomed 13 nodes and fixed 23 variables
Cbc0035I Maximum depth 22, 238 variables fixed on reduced cost
Total time (CPU seconds):       5.16   (Wallclock seconds):       6.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 1.17006e-05 - average 6.25702e-08, 12 fixed columns
Coin0506I Presolve 163 (-24) rows, 89 (-12) columns and 496 (-72) elements
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.6314236 - largest nonzero change 0 ( 0%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 46.747243
Clp0000I Optimal - objective value 46.747243
Coin0511I After Postsolve, objective 46.747243, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.747243
Clp0000I Optimal - objective value 46.747243
Clp0000I Optimal - objective value 46.747243
Coin0511I After Postsolve, objective 46.747243, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.74724343 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.936%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.72527
Cbc0038I Solution found of 6.11765
Cbc0038I Relaxing continuous gives -2.46681
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.46681 to -24.638 (0.05 seconds)
Cbc0038I Round again with cutoff of -26.849
Cbc0038I Pass   1: suminf.    2.72775 (21) obj. -26.849 iterations 62
Cbc0038I Pass   2: suminf.    2.22832 (14) obj. -26.849 iterations 14
Cbc0038I Pass   3: suminf.    1.67584 (9) obj. -26.849 iterations 22
Cbc0038I Pass   4: suminf.    1.59631 (8) obj. -26.849 iterations 3
Cbc0038I Pass   5: suminf.    1.68004 (6) obj. -26.849 iterations 8
Cbc0038I Pass   6: suminf.    1.47217 (5) obj. -26.849 iterations 6
Cbc0038I Pass   7: suminf.    1.42910 (5) obj. -26.849 iterations 3
Cbc0038I Pass   8: suminf.    0.73125 (4) obj. -26.849 iterations 5
Cbc0038I Pass   9: suminf.    0.73125 (4) obj. -26.849 iterations 1
Cbc0038I Pass  10: suminf.    1.10678 (4) obj. -26.849 iterations 8
Cbc0038I Pass  11: suminf.    0.66440 (3) obj. -26.849 iterations 3
Cbc0038I Pass  12: suminf.    0.73125 (4) obj. -26.849 iterations 4
Cbc0038I Pass  13: suminf.    2.45085 (6) obj. -26.849 iterations 23
Cbc0038I Pass  14: suminf.    2.08313 (6) obj. -26.849 iterations 12
Cbc0038I Pass  15: suminf.    0.77991 (4) obj. -26.849 iterations 4
Cbc0038I Pass  16: suminf.    0.28271 (5) obj. -26.849 iterations 4
Cbc0038I Pass  17: suminf.    1.67439 (5) obj. -26.849 iterations 10
Cbc0038I Pass  18: suminf.    1.23433 (4) obj. -26.849 iterations 4
Cbc0038I Pass  19: suminf.    1.10484 (5) obj. -26.849 iterations 3
Cbc0038I Pass  20: suminf.    1.27377 (4) obj. -26.849 iterations 8
Cbc0038I Pass  21: suminf.    1.20370 (5) obj. -26.849 iterations 2
Cbc0038I Pass  22: suminf.    1.19753 (5) obj. -26.849 iterations 3
Cbc0038I Pass  23: suminf.    0.97651 (3) obj. -26.849 iterations 7
Cbc0038I Pass  24: suminf.    0.91258 (4) obj. -26.849 iterations 3
Cbc0038I Pass  25: suminf.    1.31417 (5) obj. -26.849 iterations 10
Cbc0038I Pass  26: suminf.    1.20370 (5) obj. -26.849 iterations 2
Cbc0038I Pass  27: suminf.    1.19753 (5) obj. -26.849 iterations 3
Cbc0038I Pass  28: suminf.    0.97651 (3) obj. -26.849 iterations 7
Cbc0038I Pass  29: suminf.    0.91258 (4) obj. -26.849 iterations 3
Cbc0038I Pass  30: suminf.    1.31417 (5) obj. -26.849 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -24.638 - took 0.09 seconds
Cbc0012I Integer solution of -24.63803 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 73 rows 41 columns
Cbc0031I 31 added rows had average density of 26.032258
Cbc0013I At root node, 31 cuts changed objective from -46.747243 to -41.171027 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16408 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2244 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.63803 best solution, best possible -41.171027 (1.36 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 92 rows 52 columns
Cbc0038I Full problem 187 rows 101 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of -24.71601 found by rounding after 13491 iterations and 152 nodes (2.04 seconds)
Cbc0010I After 166 nodes, 13 on tree, -24.71601 best solution, best possible -41.171027 (2.06 seconds)
Cbc0012I Integer solution of -24.72083 found by rounding after 15060 iterations and 229 nodes (2.16 seconds)
Cbc0001I Search completed - best objective -24.72083, took 15231 iterations and 238 nodes (2.17 seconds)
Cbc0032I Strong branching done 1828 times (28362 iterations), fathomed 17 nodes and fixed 87 variables
Cbc0035I Maximum depth 49, 500 variables fixed on reduced cost
Total time (CPU seconds):       2.08   (Wallclock seconds):       2.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 145 (-60) rows, 158 (-45) columns and 3333 (-2321) elements
Clp1000I sum of infeasibilities 1.73988e-07 - average 1.19992e-09, 19 fixed columns
Coin0506I Presolve 124 (-21) rows, 139 (-19) columns and 2586 (-747) elements
Clp0006I 0  Obj 50.648635 Dual inf 13.588141 (138)
Clp0014I Perturbing problem by 0.001% of 1.5793919 - largest nonzero change 2.8761944e-05 ( 0.0025988751%) - largest zero change 2.8936074e-05
Clp0000I Optimal - objective value 58.344186
Clp0000I Optimal - objective value 58.344186
Coin0511I After Postsolve, objective 58.344186, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 58.344186
Clp0000I Optimal - objective value 58.344186
Clp0000I Optimal - objective value 58.344186
Clp0000I Optimal - objective value 58.344186
Coin0511I After Postsolve, objective 58.344186, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.34418584 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 145 rows, 158 columns (158 integer (158 of which binary)) and 3337 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.289%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 3.21838
Cbc0038I Pass   1: suminf.    3.08052 (45) obj. -53.9668 iterations 17
Cbc0038I Pass   2: suminf.    1.26809 (29) obj. -26.2752 iterations 16
Cbc0038I Pass   3: suminf.    0.25270 (9) obj. -5.40273 iterations 20
Cbc0038I Solution found of 5.29059
Cbc0038I Rounding solution of 1.13778 is better than previous of 5.29059

Cbc0038I Before mini branch and bound, 111 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4.38949
Cbc0038I Pass   4: suminf.    3.08052 (45) obj. -53.9668 iterations 0
Cbc0038I Pass   5: suminf.    0.95313 (25) obj. -21.6659 iterations 22
Cbc0038I Pass   6: suminf.    0.21937 (8) obj. -4.43607 iterations 17
Cbc0038I Pass   7: suminf.    0.32196 (1) obj. -4.38949 iterations 11
Cbc0038I Pass   8: suminf.    0.22857 (1) obj. -5.72279 iterations 1
Cbc0038I Pass   9: suminf.    1.84686 (22) obj. -6.32076 iterations 40
Cbc0038I Pass  10: suminf.    0.95199 (15) obj. -4.38949 iterations 13
Cbc0038I Pass  11: suminf.    0.89216 (4) obj. -4.38949 iterations 26
Cbc0038I Pass  12: suminf.    0.74226 (5) obj. -4.38949 iterations 8
Cbc0038I Pass  13: suminf.    0.89216 (4) obj. -4.38949 iterations 7
Cbc0038I Pass  14: suminf.    1.38304 (13) obj. -4.38949 iterations 34
Cbc0038I Pass  15: suminf.    1.29474 (12) obj. -4.38949 iterations 8
Cbc0038I Pass  16: suminf.    0.87726 (6) obj. -4.38949 iterations 18
Cbc0038I Pass  17: suminf.    0.64991 (5) obj. -4.38949 iterations 6
Cbc0038I Pass  18: suminf.    0.87726 (5) obj. -4.38949 iterations 8
Cbc0038I Pass  19: suminf.    0.75712 (11) obj. -4.38949 iterations 21
Cbc0038I Pass  20: suminf.    0.75712 (11) obj. -4.38949 iterations 2
Cbc0038I Pass  21: suminf.    0.79527 (6) obj. -4.38949 iterations 17
Cbc0038I Pass  22: suminf.    0.63502 (5) obj. -4.38949 iterations 4
Cbc0038I Pass  23: suminf.    0.76796 (6) obj. -4.38949 iterations 11
Cbc0038I Pass  24: suminf.    0.76796 (6) obj. -4.38949 iterations 6
Cbc0038I Pass  25: suminf.    0.78695 (5) obj. -4.38949 iterations 14
Cbc0038I Pass  26: suminf.    0.78695 (5) obj. -4.38949 iterations 6
Cbc0038I Pass  27: suminf.    0.78589 (4) obj. -4.38949 iterations 8
Cbc0038I Pass  28: suminf.    0.59921 (4) obj. -4.38949 iterations 4
Cbc0038I Pass  29: suminf.    0.78589 (4) obj. -4.38949 iterations 5
Cbc0038I Pass  30: suminf.    1.76879 (11) obj. -4.38949 iterations 36
Cbc0038I Pass  31: suminf.    0.74396 (9) obj. -4.38949 iterations 11
Cbc0038I Pass  32: suminf.    0.84891 (5) obj. -4.38949 iterations 15
Cbc0038I Pass  33: suminf.    0.50529 (5) obj. -4.38949 iterations 7
Cbc0038I Rounding solution of -15.1883 is better than previous of 1.13778

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 145 rows 158 columns, reduced to 44 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -15.1883 to -24.6691 (0.09 seconds)
Cbc0038I Round again with cutoff of -30.5621
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.08052 (45) obj. -53.9668 iterations 0
Cbc0038I Pass  34: suminf.    1.33000 (26) obj. -30.5621 iterations 21
Cbc0038I Pass  35: suminf.    1.18170 (26) obj. -32.6793 iterations 1
Cbc0038I Pass  36: suminf.    1.23252 (21) obj. -30.5621 iterations 37
Cbc0038I Pass  37: suminf.    1.22126 (21) obj. -30.5621 iterations 6
Cbc0038I Pass  38: suminf.    1.75089 (21) obj. -30.5621 iterations 18
Cbc0038I Pass  39: suminf.    1.75089 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  40: suminf.    1.62327 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  41: suminf.    1.62327 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  42: suminf.    1.63990 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  43: suminf.    1.63990 (21) obj. -30.5621 iterations 4
Cbc0038I Pass  44: suminf.    1.75089 (21) obj. -30.5621 iterations 8
Cbc0038I Pass  45: suminf.    1.75089 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  46: suminf.    1.62327 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  47: suminf.    1.62327 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  48: suminf.    1.75089 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  49: suminf.    1.80129 (22) obj. -30.5621 iterations 34
Cbc0038I Pass  50: suminf.    1.79438 (22) obj. -30.5621 iterations 6
Cbc0038I Pass  51: suminf.    1.59228 (22) obj. -30.5621 iterations 20
Cbc0038I Pass  52: suminf.    1.59228 (22) obj. -30.5621 iterations 3
Cbc0038I Pass  53: suminf.    1.75089 (21) obj. -30.5621 iterations 12
Cbc0038I Pass  54: suminf.    1.75089 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  55: suminf.    1.62327 (21) obj. -30.5621 iterations 9
Cbc0038I Pass  56: suminf.    1.62327 (21) obj. -30.5621 iterations 3
Cbc0038I Pass  57: suminf.    1.75089 (21) obj. -30.5621 iterations 7
Cbc0038I Pass  58: suminf.    1.99992 (25) obj. -30.5621 iterations 19
Cbc0038I Pass  59: suminf.    1.94198 (25) obj. -30.5621 iterations 6
Cbc0038I Pass  60: suminf.    1.98146 (25) obj. -30.5621 iterations 16
Cbc0038I Pass  61: suminf.    1.98146 (25) obj. -30.5621 iterations 3
Cbc0038I Pass  62: suminf.    2.12771 (25) obj. -30.5621 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -24.6691 - took 0.07 seconds
Cbc0012I Integer solution of -24.66909 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 145 rows 158 columns, reduced to 5 rows 8 columns
Cbc0031I 73 added rows had average density of 30.972603
Cbc0013I At root node, 73 cuts changed objective from -54.133971 to -32.110638 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20915 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.360 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2120 row cuts average 142.2 elements, 0 column cuts (0 active)  in 0.239 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 140 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 990 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1422 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 412 row cuts average 88.1 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 348 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.349 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.66909 best solution, best possible -32.110638 (2.97 seconds)
Cbc0010I After 4 nodes, 3 on tree, -24.66909 best solution, best possible -31.579942 (3.82 seconds)
Cbc0010I After 14 nodes, 7 on tree, -24.66909 best solution, best possible -31.579942 (4.53 seconds)
Cbc0010I After 26 nodes, 11 on tree, -24.66909 best solution, best possible -31.579942 (5.23 seconds)
Cbc0010I After 38 nodes, 14 on tree, -24.66909 best solution, best possible -31.579942 (5.97 seconds)
Cbc0038I Full problem 145 rows 158 columns, reduced to 9 rows 15 columns
Cbc0010I After 50 nodes, 15 on tree, -24.66909 best solution, best possible -31.579942 (6.73 seconds)
Cbc0010I After 65 nodes, 15 on tree, -24.66909 best solution, best possible -31.579942 (7.47 seconds)
Cbc0004I Integer solution of -24.71601 found after 9330 iterations and 78 nodes (7.91 seconds)
Cbc0010I After 83 nodes, 9 on tree, -24.71601 best solution, best possible -31.579942 (8.20 seconds)
Cbc0038I Full problem 145 rows 158 columns, reduced to 14 rows 17 columns
Cbc0004I Integer solution of -24.72083 found after 9864 iterations and 97 nodes (8.82 seconds)
Cbc0010I After 98 nodes, 7 on tree, -24.72083 best solution, best possible -31.579942 (8.92 seconds)
Cbc0001I Search completed - best objective -24.72083, took 10563 iterations and 106 nodes (8.97 seconds)
Cbc0032I Strong branching done 1070 times (17792 iterations), fathomed 13 nodes and fixed 23 variables
Cbc0035I Maximum depth 22, 238 variables fixed on reduced cost
Total time (CPU seconds):       6.59   (Wallclock seconds):       9.00

