Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.28941e-05 - average 3.22512e-07, 20 fixed columns
Coin0506I Presolve 96 (-37) rows, 55 (-20) columns and 294 (-114) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.35157957 - largest nonzero change 0 ( 0%) - largest zero change 2.6046125e-05
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Coin0511I After Postsolve, objective 56.620562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Coin0511I After Postsolve, objective 56.620562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.620562 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.68822
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.48234 iterations 41
Cbc0038I Solution found of 3.48234
Cbc0038I Relaxing continuous gives 3.48234
Cbc0038I Rounding solution of -4.80782 is better than previous of 3.48234

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.80782 to -27.6964 (0.03 seconds)
Cbc0038I Round again with cutoff of -30.5889
Cbc0038I Pass   2: suminf.    3.86405 (11) obj. -30.5889 iterations 20
Cbc0038I Pass   3: suminf.    3.40929 (9) obj. -30.5889 iterations 8
Cbc0038I Pass   4: suminf.    2.25200 (8) obj. -30.5889 iterations 1
Cbc0038I Pass   5: suminf.    1.17894 (6) obj. -30.5889 iterations 3
Cbc0038I Pass   6: suminf.    1.02373 (5) obj. -30.5889 iterations 15
Cbc0038I Pass   7: suminf.    1.39621 (5) obj. -30.5889 iterations 13
Cbc0038I Pass   8: suminf.    0.79812 (4) obj. -30.5889 iterations 6
Cbc0038I Pass   9: suminf.    1.39621 (5) obj. -30.5889 iterations 6
Cbc0038I Pass  10: suminf.    4.29157 (12) obj. -30.5889 iterations 19
Cbc0038I Pass  11: suminf.    2.85959 (12) obj. -30.5889 iterations 9
Cbc0038I Pass  12: suminf.    2.85181 (12) obj. -30.5889 iterations 3
Cbc0038I Pass  13: suminf.    2.47300 (11) obj. -30.5889 iterations 1
Cbc0038I Pass  14: suminf.    2.66985 (8) obj. -30.5889 iterations 14
Cbc0038I Pass  15: suminf.    2.26759 (6) obj. -30.5889 iterations 2
Cbc0038I Pass  16: suminf.    1.40410 (5) obj. -30.5889 iterations 6
Cbc0038I Pass  17: suminf.    2.51747 (7) obj. -30.5889 iterations 7
Cbc0038I Pass  18: suminf.    2.15175 (8) obj. -30.5889 iterations 22
Cbc0038I Pass  19: suminf.    0.73926 (4) obj. -30.5889 iterations 12
Cbc0038I Pass  20: suminf.    0.73926 (4) obj. -30.5889 iterations 0
Cbc0038I Pass  21: suminf.    0.46181 (3) obj. -30.5889 iterations 12
Cbc0038I Pass  22: suminf.    0.46031 (2) obj. -30.5889 iterations 1
Cbc0038I Pass  23: suminf.    0.47242 (2) obj. -30.5889 iterations 6
Cbc0038I Pass  24: suminf.    2.05472 (7) obj. -30.5889 iterations 26
Cbc0038I Pass  25: suminf.    0.87923 (4) obj. -30.5889 iterations 11
Cbc0038I Pass  26: suminf.    0.82958 (5) obj. -30.5889 iterations 3
Cbc0038I Pass  27: suminf.    1.50637 (5) obj. -30.5889 iterations 14
Cbc0038I Pass  28: suminf.    1.40683 (4) obj. -30.5889 iterations 1
Cbc0038I Pass  29: suminf.    1.40683 (4) obj. -30.5889 iterations 0
Cbc0038I Pass  30: suminf.    0.81645 (3) obj. -30.5889 iterations 8
Cbc0038I Pass  31: suminf.    0.81645 (3) obj. -30.5889 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -27.6964 to -29.2179 (0.07 seconds)
Cbc0038I Round again with cutoff of -35.7953
Cbc0038I Pass  31: suminf.    3.80344 (11) obj. -35.7953 iterations 0
Cbc0038I Pass  32: suminf.    1.01141 (7) obj. -35.7953 iterations 11
Cbc0038I Pass  33: suminf.    0.90841 (6) obj. -35.7953 iterations 1
Cbc0038I Pass  34: suminf.    1.58709 (7) obj. -35.7953 iterations 9
Cbc0038I Pass  35: suminf.    3.87427 (10) obj. -35.7953 iterations 16
Cbc0038I Pass  36: suminf.    1.94587 (7) obj. -35.7953 iterations 6
Cbc0038I Pass  37: suminf.    1.82350 (6) obj. -35.7953 iterations 5
Cbc0038I Pass  38: suminf.    1.71776 (6) obj. -35.7953 iterations 7
Cbc0038I Pass  39: suminf.    3.15454 (9) obj. -35.7953 iterations 13
Cbc0038I Pass  40: suminf.    2.69162 (10) obj. -35.7953 iterations 14
Cbc0038I Pass  41: suminf.    2.67094 (10) obj. -35.7953 iterations 1
Cbc0038I Pass  42: suminf.    3.22975 (9) obj. -35.7953 iterations 17
Cbc0038I Pass  43: suminf.    2.54116 (9) obj. -35.7953 iterations 5
Cbc0038I Pass  44: suminf.    2.51579 (8) obj. -35.7953 iterations 3
Cbc0038I Pass  45: suminf.    2.46688 (7) obj. -35.7953 iterations 11
Cbc0038I Pass  46: suminf.    2.17558 (8) obj. -35.7953 iterations 5
Cbc0038I Pass  47: suminf.    2.56712 (8) obj. -35.7953 iterations 12
Cbc0038I Pass  48: suminf.    5.85504 (19) obj. -35.7953 iterations 24
Cbc0038I Pass  49: suminf.    4.07993 (15) obj. -35.7953 iterations 22
Cbc0038I Pass  50: suminf.    4.00126 (15) obj. -35.7953 iterations 1
Cbc0038I Pass  51: suminf.    3.99896 (14) obj. -35.7953 iterations 1
Cbc0038I Pass  52: suminf.    3.62407 (14) obj. -35.7953 iterations 20
Cbc0038I Pass  53: suminf.    3.39743 (11) obj. -35.7953 iterations 3
Cbc0038I Pass  54: suminf.    3.35295 (11) obj. -35.7953 iterations 1
Cbc0038I Pass  55: suminf.    4.00583 (11) obj. -35.7953 iterations 14
Cbc0038I Pass  56: suminf.    1.95331 (8) obj. -35.7953 iterations 9
Cbc0038I Pass  57: suminf.    0.69276 (7) obj. -35.7953 iterations 4
Cbc0038I Pass  58: suminf.    0.69276 (7) obj. -35.7953 iterations 0
Cbc0038I Pass  59: suminf.    2.10291 (6) obj. -35.7953 iterations 14
Cbc0038I Pass  60: suminf.    1.13817 (5) obj. -35.7953 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 78 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.2179 - took 0.08 seconds
Cbc0012I Integer solution of -29.217905 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 70 rows 41 columns
Cbc0031I 20 added rows had average density of 50.5
Cbc0013I At root node, 20 cuts changed objective from -56.620562 to -40.732297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7064 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1153 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 7 nodes, 2 on tree, -29.217905 best solution, best possible -40.730954 (0.68 seconds)
Cbc0001I Search completed - best objective -29.217905, took 5790 iterations and 20 nodes (0.75 seconds)
Cbc0032I Strong branching done 398 times (7082 iterations), fathomed 2 nodes and fixed 22 variables
Cbc0035I Maximum depth 7, 77 variables fixed on reduced cost
Total time (CPU seconds):       0.73   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 119 (-33) columns and 1948 (-1355) elements
Clp1000I sum of infeasibilities 2.38813e-07 - average 2.29628e-09, 9 fixed columns
Coin0506I Presolve 96 (-8) rows, 109 (-10) columns and 1711 (-237) elements
Clp0006I 0  Obj 56.707995 Dual inf 11.843482 (105)
Clp0029I End of values pass after 108 iterations
Clp0014I Perturbing problem by 0.001% of 2.0982708 - largest nonzero change 1.4314608e-05 ( 0.00086296483%) - largest zero change 2.9638141e-05
Clp0000I Optimal - objective value 70.674038
Clp0000I Optimal - objective value 70.674038
Coin0511I After Postsolve, objective 70.674038, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.674038
Clp0000I Optimal - objective value 70.674038
Clp0000I Optimal - objective value 70.674038
Clp0000I Optimal - objective value 70.674038
Coin0511I After Postsolve, objective 70.674038, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.67403823 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 119 columns (119 integer (119 of which binary)) and 1954 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.396%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.62111
Cbc0038I Pass   1: suminf.    2.25345 (30) obj. -44.7113 iterations 21
Cbc0038I Pass   2: suminf.    2.25345 (30) obj. -44.7113 iterations 1
Cbc0038I Pass   3: suminf.    0.07550 (2) obj. -11.5747 iterations 28
Cbc0038I Solution found of -9.65022
Cbc0038I Rounding solution of -9.84501 is better than previous of -9.65022

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -9.84501 to -17.7732 (0.03 seconds)
Cbc0038I Round again with cutoff of -21.8439
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.25345 (30) obj. -44.7113 iterations 0
Cbc0038I Pass   5: suminf.    2.25345 (30) obj. -44.7113 iterations 1
Cbc0038I Pass   6: suminf.    0.95320 (16) obj. -27.5034 iterations 14
Cbc0038I Pass   7: suminf.    1.34816 (8) obj. -21.8439 iterations 28
Cbc0038I Pass   8: suminf.    1.14200 (3) obj. -21.8439 iterations 7
Cbc0038I Pass   9: suminf.    1.06198 (3) obj. -21.8439 iterations 4
Cbc0038I Pass  10: suminf.    1.34644 (11) obj. -21.8439 iterations 23
Cbc0038I Pass  11: suminf.    1.08710 (15) obj. -21.8439 iterations 5
Cbc0038I Pass  12: suminf.    1.30643 (6) obj. -21.8439 iterations 26
Cbc0038I Pass  13: suminf.    1.30643 (6) obj. -21.8439 iterations 4
Cbc0038I Pass  14: suminf.    1.24992 (6) obj. -21.8439 iterations 7
Cbc0038I Pass  15: suminf.    0.83835 (6) obj. -21.8439 iterations 2
Cbc0038I Pass  16: suminf.    1.30643 (6) obj. -21.8439 iterations 4
Cbc0038I Pass  17: suminf.    1.86966 (17) obj. -21.8439 iterations 27
Cbc0038I Pass  18: suminf.    1.27391 (12) obj. -21.8439 iterations 11
Cbc0038I Pass  19: suminf.    1.50607 (7) obj. -21.8439 iterations 16
Cbc0038I Pass  20: suminf.    0.75780 (6) obj. -21.8439 iterations 7
Cbc0038I Pass  21: suminf.    0.71406 (6) obj. -21.8439 iterations 5
Cbc0038I Pass  22: suminf.    0.81228 (6) obj. -21.8439 iterations 9
Cbc0038I Pass  23: suminf.    0.81228 (6) obj. -21.8439 iterations 1
Cbc0038I Pass  24: suminf.    0.90027 (6) obj. -21.8439 iterations 6
Cbc0038I Pass  25: suminf.    0.43400 (6) obj. -21.8439 iterations 3
Cbc0038I Pass  26: suminf.    0.81228 (6) obj. -21.8439 iterations 4
Cbc0038I Pass  27: suminf.    1.83391 (10) obj. -21.8439 iterations 17
Cbc0038I Pass  28: suminf.    1.83391 (10) obj. -21.8439 iterations 1
Cbc0038I Pass  29: suminf.    1.32972 (7) obj. -21.8439 iterations 13
Cbc0038I Pass  30: suminf.    0.60952 (7) obj. -21.8439 iterations 8
Cbc0038I Pass  31: suminf.    1.03229 (7) obj. -21.8439 iterations 5
Cbc0038I Pass  32: suminf.    1.03229 (7) obj. -21.8439 iterations 4
Cbc0038I Pass  33: suminf.    1.07387 (7) obj. -21.8439 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 10 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -17.7732 to -19.4825 (0.05 seconds)
Cbc0038I Round again with cutoff of -29.171
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.25345 (30) obj. -44.7113 iterations 0
Cbc0038I Pass  34: suminf.    2.25345 (30) obj. -44.7113 iterations 1
Cbc0038I Pass  35: suminf.    1.53025 (12) obj. -29.171 iterations 21
Cbc0038I Pass  36: suminf.    0.75889 (11) obj. -30.5377 iterations 2
Cbc0038I Pass  37: suminf.    0.61879 (11) obj. -29.171 iterations 1
Cbc0038I Pass  38: suminf.    1.94344 (9) obj. -29.171 iterations 19
Cbc0038I Pass  39: suminf.    1.94344 (9) obj. -29.171 iterations 4
Cbc0038I Pass  40: suminf.    1.47426 (8) obj. -29.171 iterations 11
Cbc0038I Pass  41: suminf.    1.47426 (8) obj. -29.171 iterations 3
Cbc0038I Pass  42: suminf.    1.51461 (8) obj. -29.171 iterations 6
Cbc0038I Pass  43: suminf.    1.51461 (8) obj. -29.171 iterations 4
Cbc0038I Pass  44: suminf.    1.47426 (8) obj. -29.171 iterations 13
Cbc0038I Pass  45: suminf.    1.29336 (14) obj. -29.171 iterations 34
Cbc0038I Pass  46: suminf.    1.19018 (10) obj. -29.171 iterations 11
Cbc0038I Pass  47: suminf.    1.17383 (8) obj. -29.171 iterations 12
Cbc0038I Pass  48: suminf.    1.17383 (8) obj. -29.171 iterations 1
Cbc0038I Pass  49: suminf.    1.51461 (8) obj. -29.171 iterations 7
Cbc0038I Pass  50: suminf.    1.51461 (8) obj. -29.171 iterations 1
Cbc0038I Pass  51: suminf.    1.47426 (8) obj. -29.171 iterations 9
Cbc0038I Pass  52: suminf.    1.47426 (8) obj. -29.171 iterations 1
Cbc0038I Pass  53: suminf.    1.51461 (8) obj. -29.171 iterations 6
Cbc0038I Pass  54: suminf.    2.02714 (11) obj. -29.171 iterations 15
Cbc0038I Pass  55: suminf.    2.02714 (11) obj. -29.171 iterations 5
Cbc0038I Pass  56: suminf.    1.84950 (8) obj. -29.171 iterations 13
Cbc0038I Pass  57: suminf.    1.46704 (8) obj. -29.171 iterations 3
Cbc0038I Pass  58: suminf.    1.84950 (8) obj. -29.171 iterations 7
Cbc0038I Pass  59: suminf.    4.19287 (18) obj. -29.171 iterations 26
Cbc0038I Pass  60: suminf.    1.35023 (12) obj. -29.171 iterations 11
Cbc0038I Pass  61: suminf.    1.26575 (11) obj. -29.7156 iterations 3
Cbc0038I Pass  62: suminf.    0.96453 (8) obj. -29.171 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -19.4825 - took 0.05 seconds
Cbc0012I Integer solution of -19.48252 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -19.58823 found by DiveCoefficient after 2595 iterations and 0 nodes (1.92 seconds)
Cbc0031I 54 added rows had average density of 22.444444
Cbc0013I At root node, 54 cuts changed objective from -58.479226 to -31.738917 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7878 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 859 row cuts average 105.4 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 336 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 755 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 281 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 156 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.655 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.58823 best solution, best possible -31.738917 (1.98 seconds)
Cbc0012I Integer solution of -20.76506 found by DiveCoefficient after 2603 iterations and 1 nodes (2.01 seconds)
Cbc0012I Integer solution of -24.69342 found by DiveCoefficient after 2699 iterations and 2 nodes (2.15 seconds)
Cbc0012I Integer solution of -25.473925 found by DiveCoefficient after 2716 iterations and 2 nodes (2.19 seconds)
Cbc0012I Integer solution of -26.93908 found by DiveCoefficient after 2725 iterations and 4 nodes (2.26 seconds)
Cbc0012I Integer solution of -27.696425 found by DiveCoefficient after 2776 iterations and 5 nodes (2.43 seconds)
Cbc0010I After 13 nodes, 10 on tree, -27.696425 best solution, best possible -31.738917 (2.69 seconds)
Cbc0016I Integer solution of -28.60204 found by strong branching after 3106 iterations and 20 nodes (2.88 seconds)
Cbc0016I Integer solution of -29.217905 found by strong branching after 3341 iterations and 25 nodes (2.98 seconds)
Cbc0001I Search completed - best objective -29.217905, took 3521 iterations and 28 nodes (2.99 seconds)
Cbc0032I Strong branching done 496 times (9323 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 76 variables fixed on reduced cost
Total time (CPU seconds):       2.18   (Wallclock seconds):       3.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.28941e-05 - average 3.22512e-07, 20 fixed columns
Coin0506I Presolve 96 (-37) rows, 55 (-20) columns and 294 (-114) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.35157957 - largest nonzero change 0 ( 0%) - largest zero change 2.6046125e-05
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Coin0511I After Postsolve, objective 56.620562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Coin0511I After Postsolve, objective 56.620562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.620562 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.68822
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.48234 iterations 41
Cbc0038I Solution found of 3.48234
Cbc0038I Relaxing continuous gives 3.48234
Cbc0038I Rounding solution of -4.80782 is better than previous of 3.48234

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.80782 to -27.6964 (0.03 seconds)
Cbc0038I Round again with cutoff of -30.5889
Cbc0038I Pass   2: suminf.    3.86405 (11) obj. -30.5889 iterations 20
Cbc0038I Pass   3: suminf.    3.40929 (9) obj. -30.5889 iterations 8
Cbc0038I Pass   4: suminf.    2.25200 (8) obj. -30.5889 iterations 1
Cbc0038I Pass   5: suminf.    1.17894 (6) obj. -30.5889 iterations 3
Cbc0038I Pass   6: suminf.    1.02373 (5) obj. -30.5889 iterations 15
Cbc0038I Pass   7: suminf.    1.39621 (5) obj. -30.5889 iterations 13
Cbc0038I Pass   8: suminf.    0.79812 (4) obj. -30.5889 iterations 6
Cbc0038I Pass   9: suminf.    1.39621 (5) obj. -30.5889 iterations 6
Cbc0038I Pass  10: suminf.    4.29157 (12) obj. -30.5889 iterations 19
Cbc0038I Pass  11: suminf.    2.85959 (12) obj. -30.5889 iterations 9
Cbc0038I Pass  12: suminf.    2.85181 (12) obj. -30.5889 iterations 3
Cbc0038I Pass  13: suminf.    2.47300 (11) obj. -30.5889 iterations 1
Cbc0038I Pass  14: suminf.    2.66985 (8) obj. -30.5889 iterations 14
Cbc0038I Pass  15: suminf.    2.26759 (6) obj. -30.5889 iterations 2
Cbc0038I Pass  16: suminf.    1.40410 (5) obj. -30.5889 iterations 6
Cbc0038I Pass  17: suminf.    2.51747 (7) obj. -30.5889 iterations 7
Cbc0038I Pass  18: suminf.    2.15175 (8) obj. -30.5889 iterations 22
Cbc0038I Pass  19: suminf.    0.73926 (4) obj. -30.5889 iterations 12
Cbc0038I Pass  20: suminf.    0.73926 (4) obj. -30.5889 iterations 0
Cbc0038I Pass  21: suminf.    0.46181 (3) obj. -30.5889 iterations 12
Cbc0038I Pass  22: suminf.    0.46031 (2) obj. -30.5889 iterations 1
Cbc0038I Pass  23: suminf.    0.47242 (2) obj. -30.5889 iterations 6
Cbc0038I Pass  24: suminf.    2.05472 (7) obj. -30.5889 iterations 26
Cbc0038I Pass  25: suminf.    0.87923 (4) obj. -30.5889 iterations 11
Cbc0038I Pass  26: suminf.    0.82958 (5) obj. -30.5889 iterations 3
Cbc0038I Pass  27: suminf.    1.50637 (5) obj. -30.5889 iterations 14
Cbc0038I Pass  28: suminf.    1.40683 (4) obj. -30.5889 iterations 1
Cbc0038I Pass  29: suminf.    1.40683 (4) obj. -30.5889 iterations 0
Cbc0038I Pass  30: suminf.    0.81645 (3) obj. -30.5889 iterations 8
Cbc0038I Pass  31: suminf.    0.81645 (3) obj. -30.5889 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -27.6964 to -29.2179 (0.06 seconds)
Cbc0038I Round again with cutoff of -35.7953
Cbc0038I Pass  31: suminf.    3.80344 (11) obj. -35.7953 iterations 0
Cbc0038I Pass  32: suminf.    1.01141 (7) obj. -35.7953 iterations 11
Cbc0038I Pass  33: suminf.    0.90841 (6) obj. -35.7953 iterations 1
Cbc0038I Pass  34: suminf.    1.58709 (7) obj. -35.7953 iterations 9
Cbc0038I Pass  35: suminf.    3.87427 (10) obj. -35.7953 iterations 16
Cbc0038I Pass  36: suminf.    1.94587 (7) obj. -35.7953 iterations 6
Cbc0038I Pass  37: suminf.    1.82350 (6) obj. -35.7953 iterations 5
Cbc0038I Pass  38: suminf.    1.71776 (6) obj. -35.7953 iterations 7
Cbc0038I Pass  39: suminf.    3.15454 (9) obj. -35.7953 iterations 13
Cbc0038I Pass  40: suminf.    2.69162 (10) obj. -35.7953 iterations 14
Cbc0038I Pass  41: suminf.    2.67094 (10) obj. -35.7953 iterations 1
Cbc0038I Pass  42: suminf.    3.22975 (9) obj. -35.7953 iterations 17
Cbc0038I Pass  43: suminf.    2.54116 (9) obj. -35.7953 iterations 5
Cbc0038I Pass  44: suminf.    2.51579 (8) obj. -35.7953 iterations 3
Cbc0038I Pass  45: suminf.    2.46688 (7) obj. -35.7953 iterations 11
Cbc0038I Pass  46: suminf.    2.17558 (8) obj. -35.7953 iterations 5
Cbc0038I Pass  47: suminf.    2.56712 (8) obj. -35.7953 iterations 12
Cbc0038I Pass  48: suminf.    5.85504 (19) obj. -35.7953 iterations 24
Cbc0038I Pass  49: suminf.    4.07993 (15) obj. -35.7953 iterations 22
Cbc0038I Pass  50: suminf.    4.00126 (15) obj. -35.7953 iterations 1
Cbc0038I Pass  51: suminf.    3.99896 (14) obj. -35.7953 iterations 1
Cbc0038I Pass  52: suminf.    3.62407 (14) obj. -35.7953 iterations 20
Cbc0038I Pass  53: suminf.    3.39743 (11) obj. -35.7953 iterations 3
Cbc0038I Pass  54: suminf.    3.35295 (11) obj. -35.7953 iterations 1
Cbc0038I Pass  55: suminf.    4.00583 (11) obj. -35.7953 iterations 14
Cbc0038I Pass  56: suminf.    1.95331 (8) obj. -35.7953 iterations 9
Cbc0038I Pass  57: suminf.    0.69276 (7) obj. -35.7953 iterations 4
Cbc0038I Pass  58: suminf.    0.69276 (7) obj. -35.7953 iterations 0
Cbc0038I Pass  59: suminf.    2.10291 (6) obj. -35.7953 iterations 14
Cbc0038I Pass  60: suminf.    1.13817 (5) obj. -35.7953 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 78 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.2179 - took 0.08 seconds
Cbc0012I Integer solution of -29.217905 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 70 rows 41 columns
Cbc0031I 20 added rows had average density of 50.5
Cbc0013I At root node, 20 cuts changed objective from -56.620562 to -40.732297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7064 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1153 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0010I After 11 nodes, 6 on tree, -29.217905 best solution, best possible -40.730954 (0.68 seconds)
Cbc0001I Search completed - best objective -29.217905, took 5790 iterations and 20 nodes (0.70 seconds)
Cbc0032I Strong branching done 398 times (7082 iterations), fathomed 2 nodes and fixed 22 variables
Cbc0035I Maximum depth 7, 77 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 119 (-34) columns and 1948 (-1356) elements
Clp1000I sum of infeasibilities 2.38813e-07 - average 2.29628e-09, 9 fixed columns
Coin0506I Presolve 96 (-8) rows, 109 (-10) columns and 1711 (-237) elements
Clp0006I 0  Obj 56.707995 Dual inf 11.843482 (105)
Clp0029I End of values pass after 108 iterations
Clp0014I Perturbing problem by 0.001% of 2.0982708 - largest nonzero change 1.4314608e-05 ( 0.00086296483%) - largest zero change 2.9638141e-05
Clp0000I Optimal - objective value 70.674038
Clp0000I Optimal - objective value 70.674038
Coin0511I After Postsolve, objective 70.674038, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.674038
Clp0000I Optimal - objective value 70.674038
Clp0000I Optimal - objective value 70.674038
Clp0000I Optimal - objective value 70.674038
Coin0511I After Postsolve, objective 70.674038, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.67403823 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 119 columns (119 integer (119 of which binary)) and 1954 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.396%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.62111
Cbc0038I Pass   1: suminf.    2.25345 (30) obj. -44.7113 iterations 21
Cbc0038I Pass   2: suminf.    2.25345 (30) obj. -44.7113 iterations 1
Cbc0038I Pass   3: suminf.    0.07550 (2) obj. -11.5747 iterations 28
Cbc0038I Solution found of -9.65022
Cbc0038I Rounding solution of -9.84501 is better than previous of -9.65022

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -9.84501 to -17.7732 (0.03 seconds)
Cbc0038I Round again with cutoff of -21.8439
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.25345 (30) obj. -44.7113 iterations 0
Cbc0038I Pass   5: suminf.    2.25345 (30) obj. -44.7113 iterations 1
Cbc0038I Pass   6: suminf.    0.95320 (16) obj. -27.5034 iterations 14
Cbc0038I Pass   7: suminf.    1.34816 (8) obj. -21.8439 iterations 28
Cbc0038I Pass   8: suminf.    1.14200 (3) obj. -21.8439 iterations 7
Cbc0038I Pass   9: suminf.    1.06198 (3) obj. -21.8439 iterations 4
Cbc0038I Pass  10: suminf.    1.34644 (11) obj. -21.8439 iterations 23
Cbc0038I Pass  11: suminf.    1.08710 (15) obj. -21.8439 iterations 5
Cbc0038I Pass  12: suminf.    1.30643 (6) obj. -21.8439 iterations 26
Cbc0038I Pass  13: suminf.    1.30643 (6) obj. -21.8439 iterations 4
Cbc0038I Pass  14: suminf.    1.24992 (6) obj. -21.8439 iterations 7
Cbc0038I Pass  15: suminf.    0.83835 (6) obj. -21.8439 iterations 2
Cbc0038I Pass  16: suminf.    1.30643 (6) obj. -21.8439 iterations 4
Cbc0038I Pass  17: suminf.    1.86966 (17) obj. -21.8439 iterations 27
Cbc0038I Pass  18: suminf.    1.27391 (12) obj. -21.8439 iterations 11
Cbc0038I Pass  19: suminf.    1.50607 (7) obj. -21.8439 iterations 16
Cbc0038I Pass  20: suminf.    0.75780 (6) obj. -21.8439 iterations 7
Cbc0038I Pass  21: suminf.    0.71406 (6) obj. -21.8439 iterations 5
Cbc0038I Pass  22: suminf.    0.81228 (6) obj. -21.8439 iterations 9
Cbc0038I Pass  23: suminf.    0.81228 (6) obj. -21.8439 iterations 1
Cbc0038I Pass  24: suminf.    0.90027 (6) obj. -21.8439 iterations 6
Cbc0038I Pass  25: suminf.    0.43400 (6) obj. -21.8439 iterations 3
Cbc0038I Pass  26: suminf.    0.81228 (6) obj. -21.8439 iterations 4
Cbc0038I Pass  27: suminf.    1.83391 (10) obj. -21.8439 iterations 17
Cbc0038I Pass  28: suminf.    1.83391 (10) obj. -21.8439 iterations 1
Cbc0038I Pass  29: suminf.    1.32972 (7) obj. -21.8439 iterations 13
Cbc0038I Pass  30: suminf.    0.60952 (7) obj. -21.8439 iterations 8
Cbc0038I Pass  31: suminf.    1.03229 (7) obj. -21.8439 iterations 5
Cbc0038I Pass  32: suminf.    1.03229 (7) obj. -21.8439 iterations 4
Cbc0038I Pass  33: suminf.    1.07387 (7) obj. -21.8439 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 10 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -17.7732 to -19.4825 (0.05 seconds)
Cbc0038I Round again with cutoff of -29.171
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.25345 (30) obj. -44.7113 iterations 0
Cbc0038I Pass  34: suminf.    2.25345 (30) obj. -44.7113 iterations 1
Cbc0038I Pass  35: suminf.    1.53025 (12) obj. -29.171 iterations 21
Cbc0038I Pass  36: suminf.    0.75889 (11) obj. -30.5377 iterations 2
Cbc0038I Pass  37: suminf.    0.61879 (11) obj. -29.171 iterations 1
Cbc0038I Pass  38: suminf.    1.94344 (9) obj. -29.171 iterations 19
Cbc0038I Pass  39: suminf.    1.94344 (9) obj. -29.171 iterations 4
Cbc0038I Pass  40: suminf.    1.47426 (8) obj. -29.171 iterations 11
Cbc0038I Pass  41: suminf.    1.47426 (8) obj. -29.171 iterations 3
Cbc0038I Pass  42: suminf.    1.51461 (8) obj. -29.171 iterations 6
Cbc0038I Pass  43: suminf.    1.51461 (8) obj. -29.171 iterations 4
Cbc0038I Pass  44: suminf.    1.47426 (8) obj. -29.171 iterations 13
Cbc0038I Pass  45: suminf.    1.29336 (14) obj. -29.171 iterations 34
Cbc0038I Pass  46: suminf.    1.19018 (10) obj. -29.171 iterations 11
Cbc0038I Pass  47: suminf.    1.17383 (8) obj. -29.171 iterations 12
Cbc0038I Pass  48: suminf.    1.17383 (8) obj. -29.171 iterations 1
Cbc0038I Pass  49: suminf.    1.51461 (8) obj. -29.171 iterations 7
Cbc0038I Pass  50: suminf.    1.51461 (8) obj. -29.171 iterations 1
Cbc0038I Pass  51: suminf.    1.47426 (8) obj. -29.171 iterations 9
Cbc0038I Pass  52: suminf.    1.47426 (8) obj. -29.171 iterations 1
Cbc0038I Pass  53: suminf.    1.51461 (8) obj. -29.171 iterations 6
Cbc0038I Pass  54: suminf.    2.02714 (11) obj. -29.171 iterations 15
Cbc0038I Pass  55: suminf.    2.02714 (11) obj. -29.171 iterations 5
Cbc0038I Pass  56: suminf.    1.84950 (8) obj. -29.171 iterations 13
Cbc0038I Pass  57: suminf.    1.46704 (8) obj. -29.171 iterations 3
Cbc0038I Pass  58: suminf.    1.84950 (8) obj. -29.171 iterations 7
Cbc0038I Pass  59: suminf.    4.19287 (18) obj. -29.171 iterations 26
Cbc0038I Pass  60: suminf.    1.35023 (12) obj. -29.171 iterations 11
Cbc0038I Pass  61: suminf.    1.26575 (11) obj. -29.7156 iterations 3
Cbc0038I Pass  62: suminf.    0.96453 (8) obj. -29.171 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -19.4825 - took 0.05 seconds
Cbc0012I Integer solution of -19.48252 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -19.58823 found by DiveCoefficient after 2595 iterations and 0 nodes (1.81 seconds)
Cbc0031I 54 added rows had average density of 22.444444
Cbc0013I At root node, 54 cuts changed objective from -58.479226 to -31.738917 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7878 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 859 row cuts average 105.4 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 336 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 755 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 281 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 156 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.618 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.58823 best solution, best possible -31.738917 (1.87 seconds)
Cbc0012I Integer solution of -20.76506 found by DiveCoefficient after 2603 iterations and 1 nodes (1.90 seconds)
Cbc0012I Integer solution of -24.69342 found by DiveCoefficient after 2699 iterations and 2 nodes (2.03 seconds)
Cbc0012I Integer solution of -25.473925 found by DiveCoefficient after 2716 iterations and 2 nodes (2.07 seconds)
Cbc0012I Integer solution of -26.93908 found by DiveCoefficient after 2725 iterations and 4 nodes (2.13 seconds)
Cbc0012I Integer solution of -27.696425 found by DiveCoefficient after 2776 iterations and 5 nodes (2.29 seconds)
Cbc0010I After 15 nodes, 10 on tree, -27.696425 best solution, best possible -31.738917 (2.61 seconds)
Cbc0016I Integer solution of -28.60204 found by strong branching after 3106 iterations and 20 nodes (2.71 seconds)
Cbc0016I Integer solution of -29.217905 found by strong branching after 3341 iterations and 25 nodes (2.81 seconds)
Cbc0001I Search completed - best objective -29.217905, took 3521 iterations and 28 nodes (2.82 seconds)
Cbc0032I Strong branching done 496 times (9323 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 76 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       2.84

