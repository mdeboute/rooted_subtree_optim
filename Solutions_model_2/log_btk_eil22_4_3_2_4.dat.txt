Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 111 (-18) elements
Clp1000I sum of infeasibilities 1.85911e-05 - average 5.02461e-07, 1 fixed columns
Coin0506I Presolve 33 (-4) rows, 20 (-2) columns and 99 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Coin0511I After Postsolve, objective 71.397156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Coin0511I After Postsolve, objective 71.397156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.39715592 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.242%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.67322
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.4485 iterations 11
Cbc0038I Solution found of -25.4485
Cbc0038I Relaxing continuous gives -25.4485
Cbc0038I Rounding solution of -27.181 is better than previous of -25.4485

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -27.181 to -35.9103 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.3184
Cbc0038I Pass   2: suminf.    0.52838 (3) obj. -39.3184 iterations 3
Cbc0038I Pass   3: suminf.    0.44000 (1) obj. -39.3184 iterations 2
Cbc0038I Pass   4: suminf.    0.42263 (1) obj. -39.3184 iterations 1
Cbc0038I Pass   5: suminf.    0.40586 (2) obj. -39.3184 iterations 5
Cbc0038I Pass   6: suminf.    0.40586 (2) obj. -39.3184 iterations 0
Cbc0038I Pass   7: suminf.    0.45290 (2) obj. -39.3184 iterations 2
Cbc0038I Pass   8: suminf.    0.35956 (2) obj. -39.3184 iterations 1
Cbc0038I Pass   9: suminf.    1.05766 (4) obj. -39.3184 iterations 3
Cbc0038I Pass  10: suminf.    0.98470 (3) obj. -39.3184 iterations 1
Cbc0038I Pass  11: suminf.    0.72569 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  12: suminf.    0.48220 (2) obj. -39.3184 iterations 4
Cbc0038I Pass  13: suminf.    0.26358 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  14: suminf.    0.04000 (1) obj. -39.3184 iterations 2
Cbc0038I Pass  15: suminf.    0.07708 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  16: suminf.    1.44731 (5) obj. -39.3184 iterations 8
Cbc0038I Pass  17: suminf.    0.88370 (5) obj. -39.3184 iterations 4
Cbc0038I Pass  18: suminf.    0.94484 (3) obj. -39.3184 iterations 7
Cbc0038I Pass  19: suminf.    0.83124 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  20: suminf.    1.09038 (4) obj. -39.3184 iterations 2
Cbc0038I Pass  21: suminf.    0.97410 (4) obj. -39.3184 iterations 2
Cbc0038I Pass  22: suminf.    0.23360 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  23: suminf.    0.21378 (1) obj. -39.3184 iterations 2
Cbc0038I Pass  24: suminf.    0.21956 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  25: suminf.    0.74904 (3) obj. -39.3184 iterations 4
Cbc0038I Pass  26: suminf.    0.71063 (4) obj. -39.3184 iterations 1
Cbc0038I Pass  27: suminf.    0.92138 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  28: suminf.    0.53074 (3) obj. -39.3184 iterations 3
Cbc0038I Pass  29: suminf.    0.94484 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  30: suminf.    0.83124 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  31: suminf.    1.09038 (4) obj. -39.3184 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -35.9103 - took 0.02 seconds
Cbc0012I Integer solution of -35.9103 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 15 rows 12 columns
Cbc0031I 8 added rows had average density of 17.375
Cbc0013I At root node, 8 cuts changed objective from -69.990451 to -47.942169 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 716 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 426 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0012I Integer solution of -36.5973 found by DiveCoefficient after 1528 iterations and 4 nodes (0.11 seconds)
Cbc0001I Search completed - best objective -36.5973, took 1569 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 36 times (298 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-10) rows, 41 (-3) columns and 308 (-52) elements
Clp1000I sum of infeasibilities 1.15729e-08 - average 3.2147e-10, 4 fixed columns
Coin0506I Presolve 34 (-2) rows, 37 (-4) columns and 251 (-57) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 3.5378055 - largest nonzero change 1.7675939e-05 ( 0.0008647613%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 95.093678
Clp0000I Optimal - objective value 95.093678
Coin0511I After Postsolve, objective 95.093678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.093678
Clp0000I Optimal - objective value 95.093678
Clp0000I Optimal - objective value 95.093678
Coin0511I After Postsolve, objective 95.093678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.09367794 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 41 columns (41 integer (41 of which binary)) and 316 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 1.11114
Cbc0038I Pass   1: suminf.    1.04735 (8) obj. -67.9343 iterations 2
Cbc0038I Solution found of -29.3973
Cbc0038I Rounding solution of -31.1298 is better than previous of -29.3973

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -34.946
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.04735 (8) obj. -67.9343 iterations 0
Cbc0038I Pass   3: suminf.    0.20368 (1) obj. -34.946 iterations 9
Cbc0038I Pass   4: suminf.    0.44000 (1) obj. -41.3842 iterations 1
Cbc0038I Pass   5: suminf.    0.17333 (2) obj. -38.0204 iterations 6
Cbc0038I Pass   6: suminf.    0.13333 (1) obj. -36.9306 iterations 2
Cbc0038I Pass   7: suminf.    0.21649 (2) obj. -34.946 iterations 4
Cbc0038I Pass   8: suminf.    0.69464 (3) obj. -42.0783 iterations 2
Cbc0038I Pass   9: suminf.    0.21649 (2) obj. -34.946 iterations 4
Cbc0038I Pass  10: suminf.    0.85914 (4) obj. -34.946 iterations 7
Cbc0038I Pass  11: suminf.    0.85577 (4) obj. -34.946 iterations 1
Cbc0038I Pass  12: suminf.    0.88205 (4) obj. -34.946 iterations 4
Cbc0038I Pass  13: suminf.    0.73070 (3) obj. -34.946 iterations 3
Cbc0038I Pass  14: suminf.    0.73070 (3) obj. -34.946 iterations 0
Cbc0038I Pass  15: suminf.    0.53125 (3) obj. -34.946 iterations 2
Cbc0038I Pass  16: suminf.    0.53021 (3) obj. -34.946 iterations 1
Cbc0038I Pass  17: suminf.    0.73070 (3) obj. -34.946 iterations 1
Cbc0038I Pass  18: suminf.    0.90869 (5) obj. -34.946 iterations 5
Cbc0038I Pass  19: suminf.    0.68474 (4) obj. -35.1241 iterations 2
Cbc0038I Pass  20: suminf.    0.89188 (3) obj. -34.946 iterations 8
Cbc0038I Pass  21: suminf.    0.89188 (3) obj. -34.946 iterations 1
Cbc0038I Pass  22: suminf.    0.76601 (3) obj. -34.946 iterations 2
Cbc0038I Pass  23: suminf.    0.76601 (3) obj. -34.946 iterations 1
Cbc0038I Pass  24: suminf.    0.89188 (3) obj. -34.946 iterations 2
Cbc0038I Pass  25: suminf.    0.48882 (7) obj. -34.946 iterations 9
Cbc0038I Pass  26: suminf.    0.45360 (7) obj. -34.946 iterations 2
Cbc0038I Pass  27: suminf.    0.74903 (3) obj. -34.946 iterations 7
Cbc0038I Pass  28: suminf.    0.74903 (3) obj. -34.946 iterations 2
Cbc0038I Pass  29: suminf.    0.62315 (3) obj. -34.946 iterations 3
Cbc0038I Pass  30: suminf.    0.62315 (3) obj. -34.946 iterations 1
Cbc0038I Pass  31: suminf.    0.79676 (4) obj. -34.946 iterations 7
Cbc0038I Rounding solution of -36.5973 is better than previous of -31.1298

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.1362
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.04735 (8) obj. -67.9343 iterations 0
Cbc0038I Pass  32: suminf.    0.67220 (2) obj. -43.1362 iterations 9
Cbc0038I Pass  33: suminf.    0.24561 (2) obj. -44.5504 iterations 1
Cbc0038I Pass  34: suminf.    0.19048 (1) obj. -43.1592 iterations 1
Cbc0038I Pass  35: suminf.    1.91800 (10) obj. -43.1362 iterations 11
Cbc0038I Pass  36: suminf.    1.59038 (9) obj. -43.1362 iterations 1
Cbc0038I Pass  37: suminf.    0.50990 (4) obj. -43.1362 iterations 7
Cbc0038I Pass  38: suminf.    0.50990 (4) obj. -43.1362 iterations 0
Cbc0038I Pass  39: suminf.    0.78052 (3) obj. -43.1362 iterations 2
Cbc0038I Pass  40: suminf.    0.61732 (3) obj. -43.1362 iterations 1
Cbc0038I Pass  41: suminf.    0.80186 (3) obj. -43.1362 iterations 3
Cbc0038I Pass  42: suminf.    3.73840 (12) obj. -43.1362 iterations 12
Cbc0038I Pass  43: suminf.    2.13047 (10) obj. -43.1362 iterations 5
Cbc0038I Pass  44: suminf.    3.01450 (8) obj. -43.1362 iterations 8
Cbc0038I Pass  45: suminf.    1.43886 (7) obj. -43.1362 iterations 3
Cbc0038I Pass  46: suminf.    1.43886 (7) obj. -43.1362 iterations 0
Cbc0038I Pass  47: suminf.    2.50401 (7) obj. -43.1362 iterations 7
Cbc0038I Pass  48: suminf.    1.57955 (6) obj. -43.1362 iterations 2
Cbc0038I Pass  49: suminf.    1.57955 (6) obj. -43.1362 iterations 0
Cbc0038I Pass  50: suminf.    1.29412 (7) obj. -43.1362 iterations 3
Cbc0038I Pass  51: suminf.    1.22849 (6) obj. -43.1362 iterations 1
Cbc0038I Pass  52: suminf.    2.53095 (7) obj. -43.1362 iterations 6
Cbc0038I Pass  53: suminf.    1.71599 (6) obj. -43.1362 iterations 2
Cbc0038I Pass  54: suminf.    1.36041 (6) obj. -43.1362 iterations 1
Cbc0038I Pass  55: suminf.    2.46842 (7) obj. -43.1362 iterations 6
Cbc0038I Pass  56: suminf.    1.22849 (6) obj. -43.1362 iterations 2
Cbc0038I Pass  57: suminf.    1.22849 (6) obj. -43.1362 iterations 0
Cbc0038I Pass  58: suminf.    2.53095 (7) obj. -43.1362 iterations 6
Cbc0038I Pass  59: suminf.    1.71599 (6) obj. -43.1362 iterations 2
Cbc0038I Pass  60: suminf.    1.36041 (6) obj. -43.1362 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 20 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -36.5973 - took 0.02 seconds
Cbc0012I Integer solution of -36.5973 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 11 added rows had average density of 5.0909091
Cbc0013I At root node, 13 cuts changed objective from -69.291232 to -36.5973 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 145 row cuts average 2.9 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 91 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0001I Search completed - best objective -36.5973, took 168 iterations and 0 nodes (0.24 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.25

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 111 (-18) elements
Clp1000I sum of infeasibilities 1.85911e-05 - average 5.02461e-07, 1 fixed columns
Coin0506I Presolve 33 (-4) rows, 20 (-2) columns and 99 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Coin0511I After Postsolve, objective 71.397156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Coin0511I After Postsolve, objective 71.397156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.39715592 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.242%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.67322
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.4485 iterations 11
Cbc0038I Solution found of -25.4485
Cbc0038I Relaxing continuous gives -25.4485
Cbc0038I Rounding solution of -27.181 is better than previous of -25.4485

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -27.181 to -35.9103 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.3184
Cbc0038I Pass   2: suminf.    0.52838 (3) obj. -39.3184 iterations 3
Cbc0038I Pass   3: suminf.    0.44000 (1) obj. -39.3184 iterations 2
Cbc0038I Pass   4: suminf.    0.42263 (1) obj. -39.3184 iterations 1
Cbc0038I Pass   5: suminf.    0.40586 (2) obj. -39.3184 iterations 5
Cbc0038I Pass   6: suminf.    0.40586 (2) obj. -39.3184 iterations 0
Cbc0038I Pass   7: suminf.    0.45290 (2) obj. -39.3184 iterations 2
Cbc0038I Pass   8: suminf.    0.35956 (2) obj. -39.3184 iterations 1
Cbc0038I Pass   9: suminf.    1.05766 (4) obj. -39.3184 iterations 3
Cbc0038I Pass  10: suminf.    0.98470 (3) obj. -39.3184 iterations 1
Cbc0038I Pass  11: suminf.    0.72569 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  12: suminf.    0.48220 (2) obj. -39.3184 iterations 4
Cbc0038I Pass  13: suminf.    0.26358 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  14: suminf.    0.04000 (1) obj. -39.3184 iterations 2
Cbc0038I Pass  15: suminf.    0.07708 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  16: suminf.    1.44731 (5) obj. -39.3184 iterations 8
Cbc0038I Pass  17: suminf.    0.88370 (5) obj. -39.3184 iterations 4
Cbc0038I Pass  18: suminf.    0.94484 (3) obj. -39.3184 iterations 7
Cbc0038I Pass  19: suminf.    0.83124 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  20: suminf.    1.09038 (4) obj. -39.3184 iterations 2
Cbc0038I Pass  21: suminf.    0.97410 (4) obj. -39.3184 iterations 2
Cbc0038I Pass  22: suminf.    0.23360 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  23: suminf.    0.21378 (1) obj. -39.3184 iterations 2
Cbc0038I Pass  24: suminf.    0.21956 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  25: suminf.    0.74904 (3) obj. -39.3184 iterations 4
Cbc0038I Pass  26: suminf.    0.71063 (4) obj. -39.3184 iterations 1
Cbc0038I Pass  27: suminf.    0.92138 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  28: suminf.    0.53074 (3) obj. -39.3184 iterations 3
Cbc0038I Pass  29: suminf.    0.94484 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  30: suminf.    0.83124 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  31: suminf.    1.09038 (4) obj. -39.3184 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -35.9103 - took 0.01 seconds
Cbc0012I Integer solution of -35.9103 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 15 rows 12 columns
Cbc0031I 8 added rows had average density of 17.375
Cbc0013I At root node, 8 cuts changed objective from -69.990451 to -47.942169 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 716 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 426 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0012I Integer solution of -36.5973 found by DiveCoefficient after 1528 iterations and 4 nodes (0.12 seconds)
Cbc0001I Search completed - best objective -36.5973, took 1569 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 36 times (298 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 41 (-4) columns and 308 (-53) elements
Clp1000I sum of infeasibilities 1.15729e-08 - average 3.2147e-10, 4 fixed columns
Coin0506I Presolve 34 (-2) rows, 37 (-4) columns and 251 (-57) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 3.5378055 - largest nonzero change 1.7675939e-05 ( 0.0008647613%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 95.093678
Clp0000I Optimal - objective value 95.093678
Coin0511I After Postsolve, objective 95.093678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.093678
Clp0000I Optimal - objective value 95.093678
Clp0000I Optimal - objective value 95.093678
Coin0511I After Postsolve, objective 95.093678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.09367794 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 41 columns (41 integer (41 of which binary)) and 316 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 1.11114
Cbc0038I Pass   1: suminf.    1.04735 (8) obj. -67.9343 iterations 2
Cbc0038I Solution found of -29.3973
Cbc0038I Rounding solution of -31.1298 is better than previous of -29.3973

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -34.946
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.04735 (8) obj. -67.9343 iterations 0
Cbc0038I Pass   3: suminf.    0.20368 (1) obj. -34.946 iterations 9
Cbc0038I Pass   4: suminf.    0.44000 (1) obj. -41.3842 iterations 1
Cbc0038I Pass   5: suminf.    0.17333 (2) obj. -38.0204 iterations 6
Cbc0038I Pass   6: suminf.    0.13333 (1) obj. -36.9306 iterations 2
Cbc0038I Pass   7: suminf.    0.21649 (2) obj. -34.946 iterations 4
Cbc0038I Pass   8: suminf.    0.69464 (3) obj. -42.0783 iterations 2
Cbc0038I Pass   9: suminf.    0.21649 (2) obj. -34.946 iterations 4
Cbc0038I Pass  10: suminf.    0.85914 (4) obj. -34.946 iterations 7
Cbc0038I Pass  11: suminf.    0.85577 (4) obj. -34.946 iterations 1
Cbc0038I Pass  12: suminf.    0.88205 (4) obj. -34.946 iterations 4
Cbc0038I Pass  13: suminf.    0.73070 (3) obj. -34.946 iterations 3
Cbc0038I Pass  14: suminf.    0.73070 (3) obj. -34.946 iterations 0
Cbc0038I Pass  15: suminf.    0.53125 (3) obj. -34.946 iterations 2
Cbc0038I Pass  16: suminf.    0.53021 (3) obj. -34.946 iterations 1
Cbc0038I Pass  17: suminf.    0.73070 (3) obj. -34.946 iterations 1
Cbc0038I Pass  18: suminf.    0.90869 (5) obj. -34.946 iterations 5
Cbc0038I Pass  19: suminf.    0.68474 (4) obj. -35.1241 iterations 2
Cbc0038I Pass  20: suminf.    0.89188 (3) obj. -34.946 iterations 8
Cbc0038I Pass  21: suminf.    0.89188 (3) obj. -34.946 iterations 1
Cbc0038I Pass  22: suminf.    0.76601 (3) obj. -34.946 iterations 2
Cbc0038I Pass  23: suminf.    0.76601 (3) obj. -34.946 iterations 1
Cbc0038I Pass  24: suminf.    0.89188 (3) obj. -34.946 iterations 2
Cbc0038I Pass  25: suminf.    0.48882 (7) obj. -34.946 iterations 9
Cbc0038I Pass  26: suminf.    0.45360 (7) obj. -34.946 iterations 2
Cbc0038I Pass  27: suminf.    0.74903 (3) obj. -34.946 iterations 7
Cbc0038I Pass  28: suminf.    0.74903 (3) obj. -34.946 iterations 2
Cbc0038I Pass  29: suminf.    0.62315 (3) obj. -34.946 iterations 3
Cbc0038I Pass  30: suminf.    0.62315 (3) obj. -34.946 iterations 1
Cbc0038I Pass  31: suminf.    0.79676 (4) obj. -34.946 iterations 7
Cbc0038I Rounding solution of -36.5973 is better than previous of -31.1298

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.1362
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.04735 (8) obj. -67.9343 iterations 0
Cbc0038I Pass  32: suminf.    0.67220 (2) obj. -43.1362 iterations 9
Cbc0038I Pass  33: suminf.    0.24561 (2) obj. -44.5504 iterations 1
Cbc0038I Pass  34: suminf.    0.19048 (1) obj. -43.1592 iterations 1
Cbc0038I Pass  35: suminf.    1.91800 (10) obj. -43.1362 iterations 11
Cbc0038I Pass  36: suminf.    1.59038 (9) obj. -43.1362 iterations 1
Cbc0038I Pass  37: suminf.    0.50990 (4) obj. -43.1362 iterations 7
Cbc0038I Pass  38: suminf.    0.50990 (4) obj. -43.1362 iterations 0
Cbc0038I Pass  39: suminf.    0.78052 (3) obj. -43.1362 iterations 2
Cbc0038I Pass  40: suminf.    0.61732 (3) obj. -43.1362 iterations 1
Cbc0038I Pass  41: suminf.    0.80186 (3) obj. -43.1362 iterations 3
Cbc0038I Pass  42: suminf.    3.73840 (12) obj. -43.1362 iterations 12
Cbc0038I Pass  43: suminf.    2.13047 (10) obj. -43.1362 iterations 5
Cbc0038I Pass  44: suminf.    3.01450 (8) obj. -43.1362 iterations 8
Cbc0038I Pass  45: suminf.    1.43886 (7) obj. -43.1362 iterations 3
Cbc0038I Pass  46: suminf.    1.43886 (7) obj. -43.1362 iterations 0
Cbc0038I Pass  47: suminf.    2.50401 (7) obj. -43.1362 iterations 7
Cbc0038I Pass  48: suminf.    1.57955 (6) obj. -43.1362 iterations 2
Cbc0038I Pass  49: suminf.    1.57955 (6) obj. -43.1362 iterations 0
Cbc0038I Pass  50: suminf.    1.29412 (7) obj. -43.1362 iterations 3
Cbc0038I Pass  51: suminf.    1.22849 (6) obj. -43.1362 iterations 1
Cbc0038I Pass  52: suminf.    2.53095 (7) obj. -43.1362 iterations 6
Cbc0038I Pass  53: suminf.    1.71599 (6) obj. -43.1362 iterations 2
Cbc0038I Pass  54: suminf.    1.36041 (6) obj. -43.1362 iterations 1
Cbc0038I Pass  55: suminf.    2.46842 (7) obj. -43.1362 iterations 6
Cbc0038I Pass  56: suminf.    1.22849 (6) obj. -43.1362 iterations 2
Cbc0038I Pass  57: suminf.    1.22849 (6) obj. -43.1362 iterations 0
Cbc0038I Pass  58: suminf.    2.53095 (7) obj. -43.1362 iterations 6
Cbc0038I Pass  59: suminf.    1.71599 (6) obj. -43.1362 iterations 2
Cbc0038I Pass  60: suminf.    1.36041 (6) obj. -43.1362 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 20 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -36.5973 - took 0.02 seconds
Cbc0012I Integer solution of -36.5973 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 11 added rows had average density of 5.0909091
Cbc0013I At root node, 13 cuts changed objective from -69.291232 to -36.5973 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 145 row cuts average 2.9 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 91 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0001I Search completed - best objective -36.5973, took 168 iterations and 0 nodes (0.24 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.25

