Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-36) rows, 67 (-11) columns and 364 (-89) elements
Clp1000I sum of infeasibilities 0.000129482 - average 1.08808e-06, 60 fixed columns
Coin0506I Presolve 4 (-115) rows, 4 (-63) columns and 10 (-354) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 3973.6758
Clp0000I Optimal - objective value 3973.6758
Coin0511I After Postsolve, objective 3973.6758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.8447542 - largest nonzero change 2.280655e-05 ( 0.00095415479%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 3973.6758
Clp0000I Optimal - objective value 3973.6758
Clp0000I Optimal - objective value 3973.6758
Coin0511I After Postsolve, objective 3973.6758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3973.675771 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 119 rows, 67 columns (66 integer (66 of which binary)) and 364 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.294%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.697248
Cbc0038I Pass   1: suminf.    0.36667 (1) obj. -3321.97 iterations 3
Cbc0038I Solution found of -2800.71
Cbc0038I Relaxing continuous gives -2800.71
Cbc0038I Rounding solution of -2808.44 is better than previous of -2800.71

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 67 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -2808.44 to -2828.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -2943.28
Cbc0038I Pass   2: suminf.    0.36667 (1) obj. -3321.97 iterations 0
Cbc0038I Pass   3: suminf.    0.10029 (1) obj. -2943.28 iterations 2
Cbc0038I Pass   4: suminf.    2.98547 (10) obj. -2943.28 iterations 13
Cbc0038I Pass   5: suminf.    0.24704 (3) obj. -2943.28 iterations 10
Cbc0038I Pass   6: suminf.    0.76806 (5) obj. -2943.28 iterations 2
Cbc0038I Pass   7: suminf.    0.52348 (2) obj. -2943.28 iterations 3
Cbc0038I Pass   8: suminf.    0.38294 (5) obj. -2943.28 iterations 9
Cbc0038I Pass   9: suminf.    0.32578 (4) obj. -2943.28 iterations 5
Cbc0038I Pass  10: suminf.    0.46039 (5) obj. -2943.28 iterations 1
Cbc0038I Pass  11: suminf.    0.70266 (5) obj. -2943.28 iterations 21
Cbc0038I Pass  12: suminf.    0.58352 (5) obj. -2943.28 iterations 5
Cbc0038I Pass  13: suminf.    0.86855 (5) obj. -2943.28 iterations 2
Cbc0038I Pass  14: suminf.    0.37490 (4) obj. -2943.28 iterations 2
Cbc0038I Pass  15: suminf.    0.97334 (6) obj. -2943.28 iterations 15
Cbc0038I Pass  16: suminf.    0.97334 (6) obj. -2943.28 iterations 5
Cbc0038I Pass  17: suminf.    1.74006 (5) obj. -2943.28 iterations 3
Cbc0038I Pass  18: suminf.    0.31027 (4) obj. -2943.28 iterations 2
Cbc0038I Pass  19: suminf.    0.58148 (6) obj. -2943.28 iterations 8
Cbc0038I Pass  20: suminf.    0.30074 (4) obj. -2943.28 iterations 7
Cbc0038I Pass  21: suminf.    0.85913 (5) obj. -2943.28 iterations 1
Cbc0038I Pass  22: suminf.    1.03440 (8) obj. -2943.28 iterations 14
Cbc0038I Pass  23: suminf.    0.68529 (6) obj. -2943.28 iterations 4
Cbc0038I Pass  24: suminf.    2.10370 (5) obj. -2943.28 iterations 6
Cbc0038I Pass  25: suminf.    0.33344 (4) obj. -2943.28 iterations 2
Cbc0038I Pass  26: suminf.    0.45571 (5) obj. -2943.28 iterations 7
Cbc0038I Pass  27: suminf.    0.27237 (4) obj. -2943.28 iterations 3
Cbc0038I Pass  28: suminf.    0.56270 (5) obj. -2943.28 iterations 1
Cbc0038I Pass  29: suminf.    0.94483 (8) obj. -2943.28 iterations 9
Cbc0038I Pass  30: suminf.    0.28471 (4) obj. -2943.28 iterations 5
Cbc0038I Pass  31: suminf.    1.06106 (5) obj. -2943.28 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 67 columns, reduced to 16 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -2828.8 to -2900.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -3149.36
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36667 (1) obj. -3321.97 iterations 0
Cbc0038I Pass  32: suminf.    0.24525 (1) obj. -3149.36 iterations 2
Cbc0038I Pass  33: suminf.    0.37222 (3) obj. -3149.36 iterations 7
Cbc0038I Pass  34: suminf.    0.23004 (1) obj. -3149.36 iterations 7
Cbc0038I Pass  35: suminf.    0.95506 (5) obj. -3149.36 iterations 8
Cbc0038I Pass  36: suminf.    0.93522 (4) obj. -3149.36 iterations 3
Cbc0038I Pass  37: suminf.    0.96790 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  38: suminf.    1.74404 (8) obj. -3149.36 iterations 14
Cbc0038I Pass  39: suminf.    0.91995 (5) obj. -3149.36 iterations 8
Cbc0038I Pass  40: suminf.    2.12026 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  41: suminf.    0.92036 (4) obj. -3149.36 iterations 2
Cbc0038I Pass  42: suminf.    1.63445 (8) obj. -3149.36 iterations 7
Cbc0038I Pass  43: suminf.    0.91007 (4) obj. -3149.36 iterations 7
Cbc0038I Pass  44: suminf.    1.17647 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  45: suminf.    1.37427 (7) obj. -3149.36 iterations 9
Cbc0038I Pass  46: suminf.    0.92816 (4) obj. -3149.36 iterations 6
Cbc0038I Pass  47: suminf.    1.29013 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  48: suminf.    1.58786 (5) obj. -3149.36 iterations 10
Cbc0038I Pass  49: suminf.    1.14161 (5) obj. -3149.36 iterations 6
Cbc0038I Pass  50: suminf.    2.12623 (5) obj. -3149.36 iterations 2
Cbc0038I Pass  51: suminf.    0.99925 (4) obj. -3149.36 iterations 2
Cbc0038I Pass  52: suminf.    2.21942 (9) obj. -3149.36 iterations 10
Cbc0038I Pass  53: suminf.    1.07285 (5) obj. -3149.36 iterations 6
Cbc0038I Pass  54: suminf.    2.21205 (5) obj. -3149.36 iterations 2
Cbc0038I Pass  55: suminf.    1.00429 (4) obj. -3149.36 iterations 2
Cbc0038I Pass  56: suminf.    1.00429 (4) obj. -3149.36 iterations 0
Cbc0038I Pass  57: suminf.    1.29567 (6) obj. -3149.36 iterations 11
Cbc0038I Pass  58: suminf.    0.97343 (4) obj. -3149.36 iterations 6
Cbc0038I Pass  59: suminf.    1.06691 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  60: suminf.    1.18161 (4) obj. -3149.36 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 67 columns, reduced to 13 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2900.1 - took 0.02 seconds
Cbc0012I Integer solution of -2900.1008 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -2907.7695 found by DiveCoefficient after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 119 rows 67 columns, reduced to 7 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 6.4
Cbc0013I At root node, 5 cuts changed objective from -3973.6758 to -2908.3423 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 1.5 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 27 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2907.769495622, took 43 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-54) rows, 113 (-39) columns and 1853 (-1450) elements
Clp1000I sum of infeasibilities 2.18152e-06 - average 2.18152e-08, 108 fixed columns
Coin0506I Presolve 4 (-96) rows, 4 (-109) columns and 10 (-1843) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 3953.6758
Clp0000I Optimal - objective value 3953.6758
Coin0511I After Postsolve, objective 3953.6758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0024879 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4031.2239
Clp0000I Optimal - objective value 4031.2239
Clp0000I Optimal - objective value 4031.2239
Coin0511I After Postsolve, objective 4031.2239, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4031.223941 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 113 columns (113 integer (113 of which binary)) and 1863 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.776%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.6796
Cbc0038I Pass   1: suminf.    1.67196 (27) obj. -1455.62 iterations 6
Cbc0038I Pass   2: suminf.    1.67196 (27) obj. -1455.62 iterations 0
Cbc0038I Pass   3: suminf.    0.57799 (14) obj. -1440.05 iterations 13
Cbc0038I Pass   4: suminf.    0.09684 (3) obj. -1427.62 iterations 11
Cbc0038I Solution found of -1424.72
Cbc0038I Rounding solution of -1426 is better than previous of -1424.72

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -1426 to -2828.8 (0.04 seconds)
Cbc0038I Round again with cutoff of -2947.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.32543 (37) obj. -2947.1 iterations 1
Cbc0038I Pass   6: suminf.    3.32543 (37) obj. -2947.1 iterations 0
Cbc0038I Pass   7: suminf.    2.12643 (27) obj. -2947.1 iterations 10
Cbc0038I Pass   8: suminf.    0.36667 (1) obj. -3321.97 iterations 28
Cbc0038I Pass   9: suminf.    0.10298 (1) obj. -2947.1 iterations 1
Cbc0038I Pass  10: suminf.    3.49326 (13) obj. -2947.1 iterations 29
Cbc0038I Pass  11: suminf.    3.49326 (13) obj. -2947.1 iterations 6
Cbc0038I Pass  12: suminf.    0.42410 (4) obj. -2947.1 iterations 9
Cbc0038I Pass  13: suminf.    0.42410 (4) obj. -2947.1 iterations 0
Cbc0038I Pass  14: suminf.    1.94761 (5) obj. -2947.1 iterations 3
Cbc0038I Pass  15: suminf.    1.94761 (5) obj. -2947.1 iterations 1
Cbc0038I Pass  16: suminf.    2.95966 (21) obj. -2947.1 iterations 23
Cbc0038I Pass  17: suminf.    2.03060 (16) obj. -2947.1 iterations 10
Cbc0038I Pass  18: suminf.    1.69187 (15) obj. -2947.1 iterations 5
Cbc0038I Pass  19: suminf.    0.89736 (5) obj. -2947.1 iterations 16
Cbc0038I Pass  20: suminf.    0.38400 (2) obj. -2947.1 iterations 1
Cbc0038I Pass  21: suminf.    0.18134 (2) obj. -2947.1 iterations 4
Cbc0038I Pass  22: suminf.    1.42006 (12) obj. -2947.1 iterations 19
Cbc0038I Pass  23: suminf.    1.13675 (10) obj. -2947.1 iterations 8
Cbc0038I Pass  24: suminf.    0.89736 (5) obj. -2947.1 iterations 12
Cbc0038I Pass  25: suminf.    0.38400 (2) obj. -2947.1 iterations 1
Cbc0038I Pass  26: suminf.    0.18134 (2) obj. -2947.1 iterations 3
Cbc0038I Pass  27: suminf.    1.58145 (10) obj. -2947.1 iterations 17
Cbc0038I Pass  28: suminf.    1.58145 (10) obj. -2947.1 iterations 0
Cbc0038I Pass  29: suminf.    0.22432 (5) obj. -2947.1 iterations 11
Cbc0038I Pass  30: suminf.    0.20880 (2) obj. -2947.1 iterations 1
Cbc0038I Pass  31: suminf.    0.79167 (2) obj. -3368.9 iterations 5
Cbc0038I Pass  32: suminf.    0.19827 (2) obj. -2947.1 iterations 1
Cbc0038I Pass  33: suminf.    1.28827 (10) obj. -2947.1 iterations 17
Cbc0038I Pass  34: suminf.    1.11332 (9) obj. -2947.1 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 9 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2828.8 to -2885.43 (0.06 seconds)
Cbc0038I Round again with cutoff of -3160.06
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.65624 (37) obj. -3160.06 iterations 0
Cbc0038I Pass  35: suminf.    3.65624 (37) obj. -3160.06 iterations 0
Cbc0038I Pass  36: suminf.    1.99438 (21) obj. -3298.7 iterations 17
Cbc0038I Pass  37: suminf.    1.82214 (21) obj. -3160.06 iterations 1
Cbc0038I Pass  38: suminf.    0.36667 (1) obj. -3321.97 iterations 22
Cbc0038I Pass  39: suminf.    0.25277 (1) obj. -3160.06 iterations 1
Cbc0038I Pass  40: suminf.    2.73059 (14) obj. -3160.06 iterations 24
Cbc0038I Pass  41: suminf.    1.33023 (9) obj. -3160.06 iterations 15
Cbc0038I Pass  42: suminf.    0.36667 (1) obj. -3312.23 iterations 9
Cbc0038I Pass  43: suminf.    0.25963 (1) obj. -3160.06 iterations 1
Cbc0038I Pass  44: suminf.    3.29275 (13) obj. -3160.06 iterations 19
Cbc0038I Pass  45: suminf.    3.29275 (13) obj. -3160.06 iterations 6
Cbc0038I Pass  46: suminf.    1.27479 (7) obj. -3160.06 iterations 7
Cbc0038I Pass  47: suminf.    1.27479 (7) obj. -3160.06 iterations 0
Cbc0038I Pass  48: suminf.    0.75096 (5) obj. -3160.06 iterations 7
Cbc0038I Pass  49: suminf.    0.68993 (2) obj. -3160.06 iterations 1
Cbc0038I Pass  50: suminf.    0.75000 (2) obj. -3325.36 iterations 4
Cbc0038I Pass  51: suminf.    0.51745 (2) obj. -3160.06 iterations 1
Cbc0038I Pass  52: suminf.    3.94228 (16) obj. -3160.06 iterations 19
Cbc0038I Pass  53: suminf.    3.11832 (13) obj. -3160.06 iterations 3
Cbc0038I Pass  54: suminf.    3.11832 (13) obj. -3160.06 iterations 0
Cbc0038I Pass  55: suminf.    1.03496 (4) obj. -3160.06 iterations 10
Cbc0038I Pass  56: suminf.    1.03496 (4) obj. -3160.06 iterations 0
Cbc0038I Pass  57: suminf.    1.94726 (5) obj. -3160.06 iterations 3
Cbc0038I Pass  58: suminf.    1.03496 (4) obj. -3160.06 iterations 1
Cbc0038I Pass  59: suminf.    2.73862 (14) obj. -3160.06 iterations 23
Cbc0038I Pass  60: suminf.    2.73862 (14) obj. -3160.06 iterations 4
Cbc0038I Pass  61: suminf.    2.18630 (5) obj. -3160.06 iterations 14
Cbc0038I Pass  62: suminf.    1.09094 (4) obj. -3160.06 iterations 1
Cbc0038I Pass  63: suminf.    2.34761 (17) obj. -3160.06 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 14 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -2885.43 - took 0.06 seconds
Cbc0012I Integer solution of -2885.4263 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 100 rows 113 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -2907.7695 found by DiveCoefficient after 110 iterations and 0 nodes (0.27 seconds)
Cbc0031I 9 added rows had average density of 18.777778
Cbc0013I At root node, 9 cuts changed objective from -4011.884 to -2908.0391 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 4.4 elements, 25 column cuts (25 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 44.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 39.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.26958728 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -2907.769495622, took 110 iterations and 0 nodes (0.27 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.27

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-36) rows, 67 (-11) columns and 364 (-89) elements
Clp1000I sum of infeasibilities 0.000129482 - average 1.08808e-06, 60 fixed columns
Coin0506I Presolve 4 (-115) rows, 4 (-63) columns and 10 (-354) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 3973.6758
Clp0000I Optimal - objective value 3973.6758
Coin0511I After Postsolve, objective 3973.6758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.8447542 - largest nonzero change 2.280655e-05 ( 0.00095415479%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 3973.6758
Clp0000I Optimal - objective value 3973.6758
Clp0000I Optimal - objective value 3973.6758
Coin0511I After Postsolve, objective 3973.6758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3973.675771 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 119 rows, 67 columns (66 integer (66 of which binary)) and 364 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.294%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.697248
Cbc0038I Pass   1: suminf.    0.36667 (1) obj. -3321.97 iterations 3
Cbc0038I Solution found of -2800.71
Cbc0038I Relaxing continuous gives -2800.71
Cbc0038I Rounding solution of -2808.44 is better than previous of -2800.71

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 67 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -2808.44 to -2828.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -2943.28
Cbc0038I Pass   2: suminf.    0.36667 (1) obj. -3321.97 iterations 0
Cbc0038I Pass   3: suminf.    0.10029 (1) obj. -2943.28 iterations 2
Cbc0038I Pass   4: suminf.    2.98547 (10) obj. -2943.28 iterations 13
Cbc0038I Pass   5: suminf.    0.24704 (3) obj. -2943.28 iterations 10
Cbc0038I Pass   6: suminf.    0.76806 (5) obj. -2943.28 iterations 2
Cbc0038I Pass   7: suminf.    0.52348 (2) obj. -2943.28 iterations 3
Cbc0038I Pass   8: suminf.    0.38294 (5) obj. -2943.28 iterations 9
Cbc0038I Pass   9: suminf.    0.32578 (4) obj. -2943.28 iterations 5
Cbc0038I Pass  10: suminf.    0.46039 (5) obj. -2943.28 iterations 1
Cbc0038I Pass  11: suminf.    0.70266 (5) obj. -2943.28 iterations 21
Cbc0038I Pass  12: suminf.    0.58352 (5) obj. -2943.28 iterations 5
Cbc0038I Pass  13: suminf.    0.86855 (5) obj. -2943.28 iterations 2
Cbc0038I Pass  14: suminf.    0.37490 (4) obj. -2943.28 iterations 2
Cbc0038I Pass  15: suminf.    0.97334 (6) obj. -2943.28 iterations 15
Cbc0038I Pass  16: suminf.    0.97334 (6) obj. -2943.28 iterations 5
Cbc0038I Pass  17: suminf.    1.74006 (5) obj. -2943.28 iterations 3
Cbc0038I Pass  18: suminf.    0.31027 (4) obj. -2943.28 iterations 2
Cbc0038I Pass  19: suminf.    0.58148 (6) obj. -2943.28 iterations 8
Cbc0038I Pass  20: suminf.    0.30074 (4) obj. -2943.28 iterations 7
Cbc0038I Pass  21: suminf.    0.85913 (5) obj. -2943.28 iterations 1
Cbc0038I Pass  22: suminf.    1.03440 (8) obj. -2943.28 iterations 14
Cbc0038I Pass  23: suminf.    0.68529 (6) obj. -2943.28 iterations 4
Cbc0038I Pass  24: suminf.    2.10370 (5) obj. -2943.28 iterations 6
Cbc0038I Pass  25: suminf.    0.33344 (4) obj. -2943.28 iterations 2
Cbc0038I Pass  26: suminf.    0.45571 (5) obj. -2943.28 iterations 7
Cbc0038I Pass  27: suminf.    0.27237 (4) obj. -2943.28 iterations 3
Cbc0038I Pass  28: suminf.    0.56270 (5) obj. -2943.28 iterations 1
Cbc0038I Pass  29: suminf.    0.94483 (8) obj. -2943.28 iterations 9
Cbc0038I Pass  30: suminf.    0.28471 (4) obj. -2943.28 iterations 5
Cbc0038I Pass  31: suminf.    1.06106 (5) obj. -2943.28 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 67 columns, reduced to 16 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -2828.8 to -2900.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -3149.36
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36667 (1) obj. -3321.97 iterations 0
Cbc0038I Pass  32: suminf.    0.24525 (1) obj. -3149.36 iterations 2
Cbc0038I Pass  33: suminf.    0.37222 (3) obj. -3149.36 iterations 7
Cbc0038I Pass  34: suminf.    0.23004 (1) obj. -3149.36 iterations 7
Cbc0038I Pass  35: suminf.    0.95506 (5) obj. -3149.36 iterations 8
Cbc0038I Pass  36: suminf.    0.93522 (4) obj. -3149.36 iterations 3
Cbc0038I Pass  37: suminf.    0.96790 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  38: suminf.    1.74404 (8) obj. -3149.36 iterations 14
Cbc0038I Pass  39: suminf.    0.91995 (5) obj. -3149.36 iterations 8
Cbc0038I Pass  40: suminf.    2.12026 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  41: suminf.    0.92036 (4) obj. -3149.36 iterations 2
Cbc0038I Pass  42: suminf.    1.63445 (8) obj. -3149.36 iterations 7
Cbc0038I Pass  43: suminf.    0.91007 (4) obj. -3149.36 iterations 7
Cbc0038I Pass  44: suminf.    1.17647 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  45: suminf.    1.37427 (7) obj. -3149.36 iterations 9
Cbc0038I Pass  46: suminf.    0.92816 (4) obj. -3149.36 iterations 6
Cbc0038I Pass  47: suminf.    1.29013 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  48: suminf.    1.58786 (5) obj. -3149.36 iterations 10
Cbc0038I Pass  49: suminf.    1.14161 (5) obj. -3149.36 iterations 6
Cbc0038I Pass  50: suminf.    2.12623 (5) obj. -3149.36 iterations 2
Cbc0038I Pass  51: suminf.    0.99925 (4) obj. -3149.36 iterations 2
Cbc0038I Pass  52: suminf.    2.21942 (9) obj. -3149.36 iterations 10
Cbc0038I Pass  53: suminf.    1.07285 (5) obj. -3149.36 iterations 6
Cbc0038I Pass  54: suminf.    2.21205 (5) obj. -3149.36 iterations 2
Cbc0038I Pass  55: suminf.    1.00429 (4) obj. -3149.36 iterations 2
Cbc0038I Pass  56: suminf.    1.00429 (4) obj. -3149.36 iterations 0
Cbc0038I Pass  57: suminf.    1.29567 (6) obj. -3149.36 iterations 11
Cbc0038I Pass  58: suminf.    0.97343 (4) obj. -3149.36 iterations 6
Cbc0038I Pass  59: suminf.    1.06691 (5) obj. -3149.36 iterations 1
Cbc0038I Pass  60: suminf.    1.18161 (4) obj. -3149.36 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 67 columns, reduced to 13 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2900.1 - took 0.02 seconds
Cbc0012I Integer solution of -2900.1008 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -2907.7695 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 119 rows 67 columns, reduced to 7 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 6.4
Cbc0013I At root node, 5 cuts changed objective from -3973.6758 to -2908.3423 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 1.5 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 27 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2907.769495622, took 43 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 113 (-40) columns and 1853 (-1451) elements
Clp1000I sum of infeasibilities 2.18152e-06 - average 2.18152e-08, 108 fixed columns
Coin0506I Presolve 4 (-96) rows, 4 (-109) columns and 10 (-1843) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 3953.6758
Clp0000I Optimal - objective value 3953.6758
Coin0511I After Postsolve, objective 3953.6758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0024879 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4031.2239
Clp0000I Optimal - objective value 4031.2239
Clp0000I Optimal - objective value 4031.2239
Coin0511I After Postsolve, objective 4031.2239, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4031.223941 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 113 columns (113 integer (113 of which binary)) and 1863 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.776%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.6796
Cbc0038I Pass   1: suminf.    1.67196 (27) obj. -1455.62 iterations 6
Cbc0038I Pass   2: suminf.    1.67196 (27) obj. -1455.62 iterations 0
Cbc0038I Pass   3: suminf.    0.57799 (14) obj. -1440.05 iterations 13
Cbc0038I Pass   4: suminf.    0.09684 (3) obj. -1427.62 iterations 11
Cbc0038I Solution found of -1424.72
Cbc0038I Rounding solution of -1426 is better than previous of -1424.72

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -1426 to -2828.8 (0.04 seconds)
Cbc0038I Round again with cutoff of -2947.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.32543 (37) obj. -2947.1 iterations 1
Cbc0038I Pass   6: suminf.    3.32543 (37) obj. -2947.1 iterations 0
Cbc0038I Pass   7: suminf.    2.12643 (27) obj. -2947.1 iterations 10
Cbc0038I Pass   8: suminf.    0.36667 (1) obj. -3321.97 iterations 28
Cbc0038I Pass   9: suminf.    0.10298 (1) obj. -2947.1 iterations 1
Cbc0038I Pass  10: suminf.    3.49326 (13) obj. -2947.1 iterations 29
Cbc0038I Pass  11: suminf.    3.49326 (13) obj. -2947.1 iterations 6
Cbc0038I Pass  12: suminf.    0.42410 (4) obj. -2947.1 iterations 9
Cbc0038I Pass  13: suminf.    0.42410 (4) obj. -2947.1 iterations 0
Cbc0038I Pass  14: suminf.    1.94761 (5) obj. -2947.1 iterations 3
Cbc0038I Pass  15: suminf.    1.94761 (5) obj. -2947.1 iterations 1
Cbc0038I Pass  16: suminf.    2.95966 (21) obj. -2947.1 iterations 23
Cbc0038I Pass  17: suminf.    2.03060 (16) obj. -2947.1 iterations 10
Cbc0038I Pass  18: suminf.    1.69187 (15) obj. -2947.1 iterations 5
Cbc0038I Pass  19: suminf.    0.89736 (5) obj. -2947.1 iterations 16
Cbc0038I Pass  20: suminf.    0.38400 (2) obj. -2947.1 iterations 1
Cbc0038I Pass  21: suminf.    0.18134 (2) obj. -2947.1 iterations 4
Cbc0038I Pass  22: suminf.    1.42006 (12) obj. -2947.1 iterations 19
Cbc0038I Pass  23: suminf.    1.13675 (10) obj. -2947.1 iterations 8
Cbc0038I Pass  24: suminf.    0.89736 (5) obj. -2947.1 iterations 12
Cbc0038I Pass  25: suminf.    0.38400 (2) obj. -2947.1 iterations 1
Cbc0038I Pass  26: suminf.    0.18134 (2) obj. -2947.1 iterations 3
Cbc0038I Pass  27: suminf.    1.58145 (10) obj. -2947.1 iterations 17
Cbc0038I Pass  28: suminf.    1.58145 (10) obj. -2947.1 iterations 0
Cbc0038I Pass  29: suminf.    0.22432 (5) obj. -2947.1 iterations 11
Cbc0038I Pass  30: suminf.    0.20880 (2) obj. -2947.1 iterations 1
Cbc0038I Pass  31: suminf.    0.79167 (2) obj. -3368.9 iterations 5
Cbc0038I Pass  32: suminf.    0.19827 (2) obj. -2947.1 iterations 1
Cbc0038I Pass  33: suminf.    1.28827 (10) obj. -2947.1 iterations 17
Cbc0038I Pass  34: suminf.    1.11332 (9) obj. -2947.1 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 9 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2828.8 to -2885.43 (0.07 seconds)
Cbc0038I Round again with cutoff of -3160.06
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.65624 (37) obj. -3160.06 iterations 0
Cbc0038I Pass  35: suminf.    3.65624 (37) obj. -3160.06 iterations 0
Cbc0038I Pass  36: suminf.    1.99438 (21) obj. -3298.7 iterations 17
Cbc0038I Pass  37: suminf.    1.82214 (21) obj. -3160.06 iterations 1
Cbc0038I Pass  38: suminf.    0.36667 (1) obj. -3321.97 iterations 22
Cbc0038I Pass  39: suminf.    0.25277 (1) obj. -3160.06 iterations 1
Cbc0038I Pass  40: suminf.    2.73059 (14) obj. -3160.06 iterations 24
Cbc0038I Pass  41: suminf.    1.33023 (9) obj. -3160.06 iterations 15
Cbc0038I Pass  42: suminf.    0.36667 (1) obj. -3312.23 iterations 9
Cbc0038I Pass  43: suminf.    0.25963 (1) obj. -3160.06 iterations 1
Cbc0038I Pass  44: suminf.    3.29275 (13) obj. -3160.06 iterations 19
Cbc0038I Pass  45: suminf.    3.29275 (13) obj. -3160.06 iterations 6
Cbc0038I Pass  46: suminf.    1.27479 (7) obj. -3160.06 iterations 7
Cbc0038I Pass  47: suminf.    1.27479 (7) obj. -3160.06 iterations 0
Cbc0038I Pass  48: suminf.    0.75096 (5) obj. -3160.06 iterations 7
Cbc0038I Pass  49: suminf.    0.68993 (2) obj. -3160.06 iterations 1
Cbc0038I Pass  50: suminf.    0.75000 (2) obj. -3325.36 iterations 4
Cbc0038I Pass  51: suminf.    0.51745 (2) obj. -3160.06 iterations 1
Cbc0038I Pass  52: suminf.    3.94228 (16) obj. -3160.06 iterations 19
Cbc0038I Pass  53: suminf.    3.11832 (13) obj. -3160.06 iterations 3
Cbc0038I Pass  54: suminf.    3.11832 (13) obj. -3160.06 iterations 0
Cbc0038I Pass  55: suminf.    1.03496 (4) obj. -3160.06 iterations 10
Cbc0038I Pass  56: suminf.    1.03496 (4) obj. -3160.06 iterations 0
Cbc0038I Pass  57: suminf.    1.94726 (5) obj. -3160.06 iterations 3
Cbc0038I Pass  58: suminf.    1.03496 (4) obj. -3160.06 iterations 1
Cbc0038I Pass  59: suminf.    2.73862 (14) obj. -3160.06 iterations 23
Cbc0038I Pass  60: suminf.    2.73862 (14) obj. -3160.06 iterations 4
Cbc0038I Pass  61: suminf.    2.18630 (5) obj. -3160.06 iterations 14
Cbc0038I Pass  62: suminf.    1.09094 (4) obj. -3160.06 iterations 1
Cbc0038I Pass  63: suminf.    2.34761 (17) obj. -3160.06 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 14 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -2885.43 - took 0.07 seconds
Cbc0012I Integer solution of -2885.4263 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 100 rows 113 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -2907.7695 found by DiveCoefficient after 110 iterations and 0 nodes (0.29 seconds)
Cbc0031I 9 added rows had average density of 18.777778
Cbc0013I At root node, 9 cuts changed objective from -4011.884 to -2908.0391 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 4.4 elements, 25 column cuts (25 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 44.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 39.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.26958728 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -2907.769495622, took 110 iterations and 0 nodes (0.29 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.30

