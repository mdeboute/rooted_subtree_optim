Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-33) rows, 69 (-9) columns and 375 (-78) elements
Clp1000I sum of infeasibilities 0.00012148 - average 9.95734e-07, 22 fixed columns
Coin0506I Presolve 67 (-55) rows, 47 (-22) columns and 221 (-154) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.37497905 - largest nonzero change 0 ( 0%) - largest zero change 2.9555761e-05
Clp0000I Optimal - objective value 44.52356
Clp0000I Optimal - objective value 44.52356
Coin0511I After Postsolve, objective 44.52356, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2604755 - largest nonzero change 0 ( 0%) - largest zero change 2.9752038e-05
Clp0000I Optimal - objective value 44.52356
Clp0000I Optimal - objective value 44.52356
Clp0000I Optimal - objective value 44.52356
Coin0511I After Postsolve, objective 44.52356, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.52355982 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 69 columns (68 integer (68 of which binary)) and 379 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.3122
Cbc0038I Solution found of 5.528
Cbc0038I Relaxing continuous gives 5.528
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 5.528 to -21.2753 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.6002
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.56753 (4) obj. -23.6002 iterations 32
Cbc0038I Pass   2: suminf.    1.20426 (3) obj. -23.6002 iterations 4
Cbc0038I Pass   3: suminf.    0.65884 (2) obj. -23.6002 iterations 6
Cbc0038I Pass   4: suminf.    0.48574 (1) obj. -23.6002 iterations 1
Cbc0038I Pass   5: suminf.    0.35689 (1) obj. -23.6002 iterations 2
Cbc0038I Pass   6: suminf.    0.49969 (1) obj. -23.6002 iterations 1
Cbc0038I Pass   7: suminf.    0.92549 (3) obj. -23.6002 iterations 16
Cbc0038I Pass   8: suminf.    0.92549 (3) obj. -23.6002 iterations 2
Cbc0038I Pass   9: suminf.    0.33104 (2) obj. -23.6002 iterations 7
Cbc0038I Pass  10: suminf.    0.49581 (1) obj. -23.6002 iterations 2
Cbc0038I Pass  11: suminf.    0.34976 (1) obj. -23.6002 iterations 1
Cbc0038I Pass  12: suminf.    1.26253 (3) obj. -23.6002 iterations 16
Cbc0038I Pass  13: suminf.    0.48359 (2) obj. -23.6002 iterations 7
Cbc0038I Pass  14: suminf.    0.18943 (2) obj. -23.6002 iterations 2
Cbc0038I Pass  15: suminf.    0.42792 (1) obj. -23.6002 iterations 2
Cbc0038I Pass  16: suminf.    0.44455 (2) obj. -23.6002 iterations 2
Cbc0038I Pass  17: suminf.    0.45870 (2) obj. -23.6002 iterations 9
Cbc0038I Pass  18: suminf.    0.45870 (2) obj. -23.6002 iterations 0
Cbc0038I Pass  19: suminf.    0.70789 (2) obj. -23.6002 iterations 4
Cbc0038I Pass  20: suminf.    1.44426 (5) obj. -23.6002 iterations 15
Cbc0038I Pass  21: suminf.    1.14302 (4) obj. -23.6002 iterations 8
Cbc0038I Pass  22: suminf.    1.17791 (4) obj. -23.6002 iterations 14
Cbc0038I Pass  23: suminf.    1.45913 (5) obj. -23.6002 iterations 23
Cbc0038I Pass  24: suminf.    1.28807 (5) obj. -23.6002 iterations 6
Cbc0038I Pass  25: suminf.    1.19397 (3) obj. -23.6002 iterations 8
Cbc0038I Pass  26: suminf.    0.73956 (4) obj. -23.6002 iterations 5
Cbc0038I Pass  27: suminf.    0.44892 (2) obj. -23.6002 iterations 7
Cbc0038I Pass  28: suminf.    0.37430 (1) obj. -23.6002 iterations 1
Cbc0038I Pass  29: suminf.    0.12871 (1) obj. -23.6002 iterations 2
Cbc0038I Pass  30: suminf.    0.35632 (1) obj. -23.6002 iterations 1
Cbc0038I Rounding solution of -29.0123 is better than previous of -21.2753

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 30 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -32.1146
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.92664 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  31: suminf.    0.92664 (3) obj. -32.1146 iterations 0
Cbc0038I Pass  32: suminf.    1.66874 (4) obj. -32.1146 iterations 6
Cbc0038I Pass  33: suminf.    0.92664 (3) obj. -32.1146 iterations 6
Cbc0038I Pass  34: suminf.    2.65663 (8) obj. -32.1146 iterations 20
Cbc0038I Pass  35: suminf.    1.68888 (5) obj. -32.1146 iterations 10
Cbc0038I Pass  36: suminf.    1.83722 (4) obj. -32.1146 iterations 16
Cbc0038I Pass  37: suminf.    1.23347 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  38: suminf.    0.66883 (2) obj. -32.1146 iterations 7
Cbc0038I Pass  39: suminf.    0.73619 (2) obj. -32.1146 iterations 2
Cbc0038I Pass  40: suminf.    2.31907 (6) obj. -32.1146 iterations 13
Cbc0038I Pass  41: suminf.    1.50102 (4) obj. -32.1146 iterations 9
Cbc0038I Pass  42: suminf.    1.50102 (4) obj. -32.1146 iterations 0
Cbc0038I Pass  43: suminf.    1.58244 (5) obj. -32.1146 iterations 5
Cbc0038I Pass  44: suminf.    1.34355 (3) obj. -32.1146 iterations 1
Cbc0038I Pass  45: suminf.    0.51049 (2) obj. -32.1146 iterations 4
Cbc0038I Pass  46: suminf.    0.50897 (2) obj. -32.1146 iterations 2
Cbc0038I Pass  47: suminf.    0.50897 (2) obj. -32.1146 iterations 1
Cbc0038I Pass  48: suminf.    1.07686 (3) obj. -32.1146 iterations 5
Cbc0038I Pass  49: suminf.    1.07686 (3) obj. -32.1146 iterations 0
Cbc0038I Pass  50: suminf.    0.79677 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  51: suminf.    0.56952 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  52: suminf.    1.73741 (4) obj. -32.1146 iterations 4
Cbc0038I Pass  53: suminf.    0.71356 (3) obj. -32.1146 iterations 3
Cbc0038I Pass  54: suminf.    1.84083 (5) obj. -32.1146 iterations 10
Cbc0038I Pass  55: suminf.    1.42581 (4) obj. -32.1146 iterations 8
Cbc0038I Pass  56: suminf.    1.07686 (3) obj. -32.1146 iterations 5
Cbc0038I Pass  57: suminf.    1.07686 (3) obj. -32.1146 iterations 0
Cbc0038I Pass  58: suminf.    0.79677 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  59: suminf.    0.56952 (3) obj. -32.1146 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 36 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -29.0123 - took 0.03 seconds
Cbc0012I Integer solution of -29.01226 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 122 rows 69 columns, reduced to 21 rows 18 columns
Cbc0031I 10 added rows had average density of 55.3
Cbc0013I At root node, 10 cuts changed objective from -44.52356 to -33.005211 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1586 row cuts average 6.4 elements, 4 column cuts (4 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 947 row cuts average 60.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0012I Integer solution of -29.21146 found by DiveCoefficient after 2412 iterations and 2 nodes (0.29 seconds)
Cbc0012I Integer solution of -29.29917 found by rounding after 2511 iterations and 5 nodes (0.30 seconds)
Cbc0001I Search completed - best objective -29.29916999999985, took 2998 iterations and 26 nodes (0.35 seconds)
Cbc0032I Strong branching done 90 times (888 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 7, 42 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 111 (-41) columns and 1915 (-1388) elements
Clp1000I sum of infeasibilities 4.18337e-07 - average 4.31275e-09, 58 fixed columns
Coin0506I Presolve 35 (-62) rows, 53 (-58) columns and 171 (-1744) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 3.6177892 - largest nonzero change 4.1476676e-05 ( 0.00088996209%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 4.5218298
Clp0000I Optimal - objective value 4.5218298
Coin0511I After Postsolve, objective 4.5218298, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8457483 - largest nonzero change 1.6059312e-05 ( 0.0012247315%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 61.815429
Clp0000I Optimal - objective value 61.815429
Clp0000I Optimal - objective value 61.815429
Coin0511I After Postsolve, objective 61.815429, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.81542899 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 112 columns (112 integer (112 of which binary)) and 1926 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.167%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.52491
Cbc0038I Pass   1: suminf.    2.29975 (31) obj. -50.9692 iterations 7
Cbc0038I Pass   2: suminf.    2.29975 (31) obj. -50.9692 iterations 1
Cbc0038I Pass   3: suminf.    0.34495 (9) obj. -16.6515 iterations 23
Cbc0038I Solution found of -6.07736
Cbc0038I Rounding solution of -13.8143 is better than previous of -6.07736

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -17.8458
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.29975 (31) obj. -50.9692 iterations 0
Cbc0038I Pass   5: suminf.    2.29975 (31) obj. -50.9692 iterations 1
Cbc0038I Pass   6: suminf.    0.64707 (5) obj. -17.8458 iterations 30
Cbc0038I Pass   7: suminf.    0.52505 (5) obj. -20.1964 iterations 1
Cbc0038I Pass   8: suminf.    0.93762 (3) obj. -17.8458 iterations 12
Cbc0038I Pass   9: suminf.    0.84324 (2) obj. -17.8458 iterations 3
Cbc0038I Pass  10: suminf.    0.49714 (2) obj. -17.8458 iterations 1
Cbc0038I Pass  11: suminf.    0.42287 (2) obj. -19.1556 iterations 1
Cbc0038I Pass  12: suminf.    2.42172 (15) obj. -17.8458 iterations 18
Cbc0038I Pass  13: suminf.    1.28289 (12) obj. -17.8458 iterations 4
Cbc0038I Pass  14: suminf.    1.08166 (12) obj. -17.8458 iterations 4
Cbc0038I Pass  15: suminf.    0.57420 (8) obj. -17.8458 iterations 20
Cbc0038I Pass  16: suminf.    0.57355 (8) obj. -17.8458 iterations 4
Cbc0038I Pass  17: suminf.    0.96914 (5) obj. -17.8458 iterations 11
Cbc0038I Pass  18: suminf.    0.87462 (5) obj. -17.8458 iterations 6
Cbc0038I Pass  19: suminf.    0.86968 (5) obj. -17.8458 iterations 11
Cbc0038I Pass  20: suminf.    0.86968 (5) obj. -17.8458 iterations 3
Cbc0038I Pass  21: suminf.    0.76497 (5) obj. -17.8458 iterations 7
Cbc0038I Pass  22: suminf.    0.76497 (5) obj. -17.8458 iterations 2
Cbc0038I Pass  23: suminf.    1.53663 (15) obj. -17.8458 iterations 31
Cbc0038I Pass  24: suminf.    1.37236 (14) obj. -17.8458 iterations 7
Cbc0038I Pass  25: suminf.    1.91626 (9) obj. -17.8458 iterations 31
Cbc0038I Pass  26: suminf.    1.58939 (9) obj. -18.4995 iterations 7
Cbc0038I Pass  27: suminf.    1.28561 (10) obj. -17.8458 iterations 6
Cbc0038I Pass  28: suminf.    1.28561 (10) obj. -17.8458 iterations 1
Cbc0038I Pass  29: suminf.    1.48899 (7) obj. -17.8458 iterations 14
Cbc0038I Pass  30: suminf.    0.91011 (7) obj. -17.8458 iterations 5
Cbc0038I Pass  31: suminf.    1.17726 (7) obj. -17.8458 iterations 8
Cbc0038I Pass  32: suminf.    0.96403 (7) obj. -17.8458 iterations 2
Cbc0038I Pass  33: suminf.    0.95937 (14) obj. -17.8458 iterations 14
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 34 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -13.8143 to -29.2115 (0.08 seconds)
Cbc0038I Round again with cutoff of -34.1949
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.29975 (31) obj. -50.9692 iterations 0
Cbc0038I Pass  34: suminf.    2.29975 (31) obj. -50.9692 iterations 1
Cbc0038I Pass  35: suminf.    2.00953 (19) obj. -34.1949 iterations 34
Cbc0038I Pass  36: suminf.    1.31038 (19) obj. -34.1949 iterations 3
Cbc0038I Pass  37: suminf.    1.94736 (17) obj. -34.1949 iterations 21
Cbc0038I Pass  38: suminf.    1.94736 (17) obj. -34.1949 iterations 1
Cbc0038I Pass  39: suminf.    1.87575 (17) obj. -34.1949 iterations 5
Cbc0038I Pass  40: suminf.    1.87575 (17) obj. -34.1949 iterations 2
Cbc0038I Pass  41: suminf.    1.94736 (17) obj. -34.1949 iterations 4
Cbc0038I Pass  42: suminf.    3.17520 (23) obj. -34.1949 iterations 15
Cbc0038I Pass  43: suminf.    3.17520 (23) obj. -34.1949 iterations 1
Cbc0038I Pass  44: suminf.    2.31809 (19) obj. -34.1949 iterations 16
Cbc0038I Pass  45: suminf.    1.83976 (18) obj. -34.1949 iterations 8
Cbc0038I Pass  46: suminf.    2.07865 (18) obj. -34.1949 iterations 10
Cbc0038I Pass  47: suminf.    2.07865 (18) obj. -34.1949 iterations 2
Cbc0038I Pass  48: suminf.    2.09292 (18) obj. -34.1949 iterations 6
Cbc0038I Pass  49: suminf.    2.09292 (18) obj. -34.1949 iterations 2
Cbc0038I Pass  50: suminf.    2.07865 (18) obj. -34.1949 iterations 6
Cbc0038I Pass  51: suminf.    1.49356 (20) obj. -34.1949 iterations 19
Cbc0038I Pass  52: suminf.    1.43326 (20) obj. -34.1949 iterations 3
Cbc0038I Pass  53: suminf.    2.07865 (18) obj. -34.1949 iterations 21
Cbc0038I Pass  54: suminf.    2.07865 (18) obj. -34.1949 iterations 2
Cbc0038I Pass  55: suminf.    2.09292 (18) obj. -34.1949 iterations 6
Cbc0038I Pass  56: suminf.    2.09292 (18) obj. -34.1949 iterations 2
Cbc0038I Pass  57: suminf.    2.07865 (18) obj. -34.1949 iterations 6
Cbc0038I Pass  58: suminf.    2.07935 (21) obj. -34.1949 iterations 22
Cbc0038I Pass  59: suminf.    1.99808 (20) obj. -34.1949 iterations 10
Cbc0038I Pass  60: suminf.    2.57332 (17) obj. -34.1949 iterations 13
Cbc0038I Pass  61: suminf.    2.13727 (17) obj. -34.1949 iterations 2
Cbc0038I Pass  62: suminf.    2.57332 (17) obj. -34.1949 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.2115 - took 0.07 seconds
Cbc0012I Integer solution of -29.21147 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 98 rows 112 columns, reduced to 31 rows 36 columns
Cbc0012I Integer solution of -29.29917 found by DiveCoefficient after 822 iterations and 0 nodes (0.65 seconds)
Cbc0031I 54 added rows had average density of 13.259259
Cbc0013I At root node, 54 cuts changed objective from -43.057552 to -30.136625 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 4412 row cuts average 7.2 elements, 3 column cuts (5 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 18 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 226 row cuts average 53.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 44.3 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.29917 best solution, best possible -29.53578 (0.67 seconds)
Cbc0001I Search completed - best objective -29.29916999999985, took 958 iterations and 2 nodes (0.76 seconds)
Cbc0032I Strong branching done 2 times (10 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.77

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-33) rows, 69 (-9) columns and 375 (-78) elements
Clp1000I sum of infeasibilities 0.00012148 - average 9.95734e-07, 22 fixed columns
Coin0506I Presolve 67 (-55) rows, 47 (-22) columns and 221 (-154) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.37497905 - largest nonzero change 0 ( 0%) - largest zero change 2.9555761e-05
Clp0000I Optimal - objective value 44.52356
Clp0000I Optimal - objective value 44.52356
Coin0511I After Postsolve, objective 44.52356, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2604755 - largest nonzero change 0 ( 0%) - largest zero change 2.9752038e-05
Clp0000I Optimal - objective value 44.52356
Clp0000I Optimal - objective value 44.52356
Clp0000I Optimal - objective value 44.52356
Coin0511I After Postsolve, objective 44.52356, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.52355982 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 69 columns (68 integer (68 of which binary)) and 379 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.3122
Cbc0038I Solution found of 5.528
Cbc0038I Relaxing continuous gives 5.528
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 5.528 to -21.2753 (0.02 seconds)
Cbc0038I Round again with cutoff of -23.6002
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.56753 (4) obj. -23.6002 iterations 32
Cbc0038I Pass   2: suminf.    1.20426 (3) obj. -23.6002 iterations 4
Cbc0038I Pass   3: suminf.    0.65884 (2) obj. -23.6002 iterations 6
Cbc0038I Pass   4: suminf.    0.48574 (1) obj. -23.6002 iterations 1
Cbc0038I Pass   5: suminf.    0.35689 (1) obj. -23.6002 iterations 2
Cbc0038I Pass   6: suminf.    0.49969 (1) obj. -23.6002 iterations 1
Cbc0038I Pass   7: suminf.    0.92549 (3) obj. -23.6002 iterations 16
Cbc0038I Pass   8: suminf.    0.92549 (3) obj. -23.6002 iterations 2
Cbc0038I Pass   9: suminf.    0.33104 (2) obj. -23.6002 iterations 7
Cbc0038I Pass  10: suminf.    0.49581 (1) obj. -23.6002 iterations 2
Cbc0038I Pass  11: suminf.    0.34976 (1) obj. -23.6002 iterations 1
Cbc0038I Pass  12: suminf.    1.26253 (3) obj. -23.6002 iterations 16
Cbc0038I Pass  13: suminf.    0.48359 (2) obj. -23.6002 iterations 7
Cbc0038I Pass  14: suminf.    0.18943 (2) obj. -23.6002 iterations 2
Cbc0038I Pass  15: suminf.    0.42792 (1) obj. -23.6002 iterations 2
Cbc0038I Pass  16: suminf.    0.44455 (2) obj. -23.6002 iterations 2
Cbc0038I Pass  17: suminf.    0.45870 (2) obj. -23.6002 iterations 9
Cbc0038I Pass  18: suminf.    0.45870 (2) obj. -23.6002 iterations 0
Cbc0038I Pass  19: suminf.    0.70789 (2) obj. -23.6002 iterations 4
Cbc0038I Pass  20: suminf.    1.44426 (5) obj. -23.6002 iterations 15
Cbc0038I Pass  21: suminf.    1.14302 (4) obj. -23.6002 iterations 8
Cbc0038I Pass  22: suminf.    1.17791 (4) obj. -23.6002 iterations 14
Cbc0038I Pass  23: suminf.    1.45913 (5) obj. -23.6002 iterations 23
Cbc0038I Pass  24: suminf.    1.28807 (5) obj. -23.6002 iterations 6
Cbc0038I Pass  25: suminf.    1.19397 (3) obj. -23.6002 iterations 8
Cbc0038I Pass  26: suminf.    0.73956 (4) obj. -23.6002 iterations 5
Cbc0038I Pass  27: suminf.    0.44892 (2) obj. -23.6002 iterations 7
Cbc0038I Pass  28: suminf.    0.37430 (1) obj. -23.6002 iterations 1
Cbc0038I Pass  29: suminf.    0.12871 (1) obj. -23.6002 iterations 2
Cbc0038I Pass  30: suminf.    0.35632 (1) obj. -23.6002 iterations 1
Cbc0038I Rounding solution of -29.0123 is better than previous of -21.2753

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 30 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -32.1146
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.92664 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  31: suminf.    0.92664 (3) obj. -32.1146 iterations 0
Cbc0038I Pass  32: suminf.    1.66874 (4) obj. -32.1146 iterations 6
Cbc0038I Pass  33: suminf.    0.92664 (3) obj. -32.1146 iterations 6
Cbc0038I Pass  34: suminf.    2.65663 (8) obj. -32.1146 iterations 20
Cbc0038I Pass  35: suminf.    1.68888 (5) obj. -32.1146 iterations 10
Cbc0038I Pass  36: suminf.    1.83722 (4) obj. -32.1146 iterations 16
Cbc0038I Pass  37: suminf.    1.23347 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  38: suminf.    0.66883 (2) obj. -32.1146 iterations 7
Cbc0038I Pass  39: suminf.    0.73619 (2) obj. -32.1146 iterations 2
Cbc0038I Pass  40: suminf.    2.31907 (6) obj. -32.1146 iterations 13
Cbc0038I Pass  41: suminf.    1.50102 (4) obj. -32.1146 iterations 9
Cbc0038I Pass  42: suminf.    1.50102 (4) obj. -32.1146 iterations 0
Cbc0038I Pass  43: suminf.    1.58244 (5) obj. -32.1146 iterations 5
Cbc0038I Pass  44: suminf.    1.34355 (3) obj. -32.1146 iterations 1
Cbc0038I Pass  45: suminf.    0.51049 (2) obj. -32.1146 iterations 4
Cbc0038I Pass  46: suminf.    0.50897 (2) obj. -32.1146 iterations 2
Cbc0038I Pass  47: suminf.    0.50897 (2) obj. -32.1146 iterations 1
Cbc0038I Pass  48: suminf.    1.07686 (3) obj. -32.1146 iterations 5
Cbc0038I Pass  49: suminf.    1.07686 (3) obj. -32.1146 iterations 0
Cbc0038I Pass  50: suminf.    0.79677 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  51: suminf.    0.56952 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  52: suminf.    1.73741 (4) obj. -32.1146 iterations 4
Cbc0038I Pass  53: suminf.    0.71356 (3) obj. -32.1146 iterations 3
Cbc0038I Pass  54: suminf.    1.84083 (5) obj. -32.1146 iterations 10
Cbc0038I Pass  55: suminf.    1.42581 (4) obj. -32.1146 iterations 8
Cbc0038I Pass  56: suminf.    1.07686 (3) obj. -32.1146 iterations 5
Cbc0038I Pass  57: suminf.    1.07686 (3) obj. -32.1146 iterations 0
Cbc0038I Pass  58: suminf.    0.79677 (3) obj. -32.1146 iterations 4
Cbc0038I Pass  59: suminf.    0.56952 (3) obj. -32.1146 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 36 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.0123 - took 0.03 seconds
Cbc0012I Integer solution of -29.01226 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 122 rows 69 columns, reduced to 21 rows 18 columns
Cbc0031I 10 added rows had average density of 55.3
Cbc0013I At root node, 10 cuts changed objective from -44.52356 to -33.005211 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1586 row cuts average 6.4 elements, 4 column cuts (4 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 947 row cuts average 60.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0012I Integer solution of -29.21146 found by DiveCoefficient after 2412 iterations and 2 nodes (0.26 seconds)
Cbc0012I Integer solution of -29.29917 found by rounding after 2511 iterations and 5 nodes (0.27 seconds)
Cbc0001I Search completed - best objective -29.29916999999985, took 2998 iterations and 26 nodes (0.31 seconds)
Cbc0032I Strong branching done 90 times (888 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 7, 42 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 111 (-42) columns and 1915 (-1389) elements
Clp1000I sum of infeasibilities 4.18337e-07 - average 4.31275e-09, 58 fixed columns
Coin0506I Presolve 35 (-62) rows, 53 (-58) columns and 171 (-1744) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 3.6177892 - largest nonzero change 4.1476676e-05 ( 0.00088996209%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 4.5218298
Clp0000I Optimal - objective value 4.5218298
Coin0511I After Postsolve, objective 4.5218298, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8457483 - largest nonzero change 1.6059312e-05 ( 0.0012247315%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 61.815429
Clp0000I Optimal - objective value 61.815429
Clp0000I Optimal - objective value 61.815429
Coin0511I After Postsolve, objective 61.815429, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.81542899 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 112 columns (112 integer (112 of which binary)) and 1926 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.167%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.52491
Cbc0038I Pass   1: suminf.    2.29975 (31) obj. -50.9692 iterations 7
Cbc0038I Pass   2: suminf.    2.29975 (31) obj. -50.9692 iterations 1
Cbc0038I Pass   3: suminf.    0.34495 (9) obj. -16.6515 iterations 23
Cbc0038I Solution found of -6.07736
Cbc0038I Rounding solution of -13.8143 is better than previous of -6.07736

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -17.8458
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.29975 (31) obj. -50.9692 iterations 0
Cbc0038I Pass   5: suminf.    2.29975 (31) obj. -50.9692 iterations 1
Cbc0038I Pass   6: suminf.    0.64707 (5) obj. -17.8458 iterations 30
Cbc0038I Pass   7: suminf.    0.52505 (5) obj. -20.1964 iterations 1
Cbc0038I Pass   8: suminf.    0.93762 (3) obj. -17.8458 iterations 12
Cbc0038I Pass   9: suminf.    0.84324 (2) obj. -17.8458 iterations 3
Cbc0038I Pass  10: suminf.    0.49714 (2) obj. -17.8458 iterations 1
Cbc0038I Pass  11: suminf.    0.42287 (2) obj. -19.1556 iterations 1
Cbc0038I Pass  12: suminf.    2.42172 (15) obj. -17.8458 iterations 18
Cbc0038I Pass  13: suminf.    1.28289 (12) obj. -17.8458 iterations 4
Cbc0038I Pass  14: suminf.    1.08166 (12) obj. -17.8458 iterations 4
Cbc0038I Pass  15: suminf.    0.57420 (8) obj. -17.8458 iterations 20
Cbc0038I Pass  16: suminf.    0.57355 (8) obj. -17.8458 iterations 4
Cbc0038I Pass  17: suminf.    0.96914 (5) obj. -17.8458 iterations 11
Cbc0038I Pass  18: suminf.    0.87462 (5) obj. -17.8458 iterations 6
Cbc0038I Pass  19: suminf.    0.86968 (5) obj. -17.8458 iterations 11
Cbc0038I Pass  20: suminf.    0.86968 (5) obj. -17.8458 iterations 3
Cbc0038I Pass  21: suminf.    0.76497 (5) obj. -17.8458 iterations 7
Cbc0038I Pass  22: suminf.    0.76497 (5) obj. -17.8458 iterations 2
Cbc0038I Pass  23: suminf.    1.53663 (15) obj. -17.8458 iterations 31
Cbc0038I Pass  24: suminf.    1.37236 (14) obj. -17.8458 iterations 7
Cbc0038I Pass  25: suminf.    1.91626 (9) obj. -17.8458 iterations 31
Cbc0038I Pass  26: suminf.    1.58939 (9) obj. -18.4995 iterations 7
Cbc0038I Pass  27: suminf.    1.28561 (10) obj. -17.8458 iterations 6
Cbc0038I Pass  28: suminf.    1.28561 (10) obj. -17.8458 iterations 1
Cbc0038I Pass  29: suminf.    1.48899 (7) obj. -17.8458 iterations 14
Cbc0038I Pass  30: suminf.    0.91011 (7) obj. -17.8458 iterations 5
Cbc0038I Pass  31: suminf.    1.17726 (7) obj. -17.8458 iterations 8
Cbc0038I Pass  32: suminf.    0.96403 (7) obj. -17.8458 iterations 2
Cbc0038I Pass  33: suminf.    0.95937 (14) obj. -17.8458 iterations 14
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 34 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -13.8143 to -29.2115 (0.08 seconds)
Cbc0038I Round again with cutoff of -34.1949
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.29975 (31) obj. -50.9692 iterations 0
Cbc0038I Pass  34: suminf.    2.29975 (31) obj. -50.9692 iterations 1
Cbc0038I Pass  35: suminf.    2.00953 (19) obj. -34.1949 iterations 34
Cbc0038I Pass  36: suminf.    1.31038 (19) obj. -34.1949 iterations 3
Cbc0038I Pass  37: suminf.    1.94736 (17) obj. -34.1949 iterations 21
Cbc0038I Pass  38: suminf.    1.94736 (17) obj. -34.1949 iterations 1
Cbc0038I Pass  39: suminf.    1.87575 (17) obj. -34.1949 iterations 5
Cbc0038I Pass  40: suminf.    1.87575 (17) obj. -34.1949 iterations 2
Cbc0038I Pass  41: suminf.    1.94736 (17) obj. -34.1949 iterations 4
Cbc0038I Pass  42: suminf.    3.17520 (23) obj. -34.1949 iterations 15
Cbc0038I Pass  43: suminf.    3.17520 (23) obj. -34.1949 iterations 1
Cbc0038I Pass  44: suminf.    2.31809 (19) obj. -34.1949 iterations 16
Cbc0038I Pass  45: suminf.    1.83976 (18) obj. -34.1949 iterations 8
Cbc0038I Pass  46: suminf.    2.07865 (18) obj. -34.1949 iterations 10
Cbc0038I Pass  47: suminf.    2.07865 (18) obj. -34.1949 iterations 2
Cbc0038I Pass  48: suminf.    2.09292 (18) obj. -34.1949 iterations 6
Cbc0038I Pass  49: suminf.    2.09292 (18) obj. -34.1949 iterations 2
Cbc0038I Pass  50: suminf.    2.07865 (18) obj. -34.1949 iterations 6
Cbc0038I Pass  51: suminf.    1.49356 (20) obj. -34.1949 iterations 19
Cbc0038I Pass  52: suminf.    1.43326 (20) obj. -34.1949 iterations 3
Cbc0038I Pass  53: suminf.    2.07865 (18) obj. -34.1949 iterations 21
Cbc0038I Pass  54: suminf.    2.07865 (18) obj. -34.1949 iterations 2
Cbc0038I Pass  55: suminf.    2.09292 (18) obj. -34.1949 iterations 6
Cbc0038I Pass  56: suminf.    2.09292 (18) obj. -34.1949 iterations 2
Cbc0038I Pass  57: suminf.    2.07865 (18) obj. -34.1949 iterations 6
Cbc0038I Pass  58: suminf.    2.07935 (21) obj. -34.1949 iterations 22
Cbc0038I Pass  59: suminf.    1.99808 (20) obj. -34.1949 iterations 10
Cbc0038I Pass  60: suminf.    2.57332 (17) obj. -34.1949 iterations 13
Cbc0038I Pass  61: suminf.    2.13727 (17) obj. -34.1949 iterations 2
Cbc0038I Pass  62: suminf.    2.57332 (17) obj. -34.1949 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -29.2115 - took 0.07 seconds
Cbc0012I Integer solution of -29.21147 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 98 rows 112 columns, reduced to 31 rows 36 columns
Cbc0012I Integer solution of -29.29917 found by DiveCoefficient after 822 iterations and 0 nodes (0.67 seconds)
Cbc0031I 54 added rows had average density of 13.259259
Cbc0013I At root node, 54 cuts changed objective from -43.057552 to -30.136625 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 4412 row cuts average 7.2 elements, 3 column cuts (5 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 18 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 226 row cuts average 53.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 44.3 elements, 0 column cuts (0 active)  in 0.203 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.29917 best solution, best possible -29.53578 (0.68 seconds)
Cbc0001I Search completed - best objective -29.29916999999985, took 958 iterations and 2 nodes (0.78 seconds)
Cbc0032I Strong branching done 2 times (10 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.57   (Wallclock seconds):       0.79

