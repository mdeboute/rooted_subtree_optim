Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-20) rows, 18 (-7) columns and 73 (-62) elements
Clp1000I sum of infeasibilities 7.68906e-08 - average 2.6514e-09, 10 fixed columns
Coin0506I Presolve 5 (-24) rows, 8 (-10) columns and 15 (-58) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 7017.0184
Clp0000I Optimal - objective value 7017.0184
Coin0511I After Postsolve, objective 7017.0184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.4738883 - largest nonzero change 1.0737931e-05 ( 0.0008514623%) - largest zero change 1.8508842e-05
Clp0000I Optimal - objective value 7017.0184
Clp0000I Optimal - objective value 7017.0184
Clp0000I Optimal - objective value 7017.0184
Coin0511I After Postsolve, objective 7017.0184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7017.018352 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 29 rows, 18 columns (17 integer (17 of which binary)) and 73 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.204%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.47123
Cbc0038I Pass   1: suminf.    0.36727 (1) obj. -6392.82 iterations 6
Cbc0038I Solution found of -5375.8
Cbc0038I Relaxing continuous gives -5375.8
Cbc0038I Rounding solution of -5408.8 is better than previous of -5375.8

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -5408.8 to -6986.17 (0.01 seconds)
Cbc0038I Round again with cutoff of -6989.25
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.59478 (2) obj. -7005.5 iterations 5
Cbc0038I Pass   3: suminf.    0.09349 (1) obj. -6989.25 iterations 4
Cbc0038I Pass   4: suminf.    0.28500 (1) obj. -6995.57 iterations 1
Cbc0038I Pass   5: suminf.    0.28500 (1) obj. -6995.57 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -6990.17 iterations 3
Cbc0038I Solution found of -6990.17
Cbc0038I Relaxing continuous gives -6990.17
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6995.54
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.59478 (2) obj. -7005.5 iterations 0
Cbc0038I Pass   8: suminf.    0.28394 (1) obj. -6995.54 iterations 4
Cbc0038I Pass   9: suminf.    0.28500 (1) obj. -6995.57 iterations 1
Cbc0038I Pass  10: suminf.    0.28561 (2) obj. -6995.54 iterations 1
Cbc0038I Pass  11: suminf.    0.28394 (1) obj. -6995.54 iterations 1
Cbc0038I Pass  12: suminf.    0.28729 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  13: suminf.    0.28394 (1) obj. -6995.54 iterations 5
Cbc0038I Pass  14: suminf.    0.36533 (4) obj. -6995.54 iterations 7
Cbc0038I Pass  15: suminf.    0.16524 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  16: suminf.    0.46533 (2) obj. -6995.54 iterations 4
Cbc0038I Pass  17: suminf.    0.28729 (1) obj. -6995.54 iterations 1
Cbc0038I Pass  18: suminf.    0.43341 (1) obj. -6995.54 iterations 1
Cbc0038I Pass  19: suminf.    0.43341 (1) obj. -6995.54 iterations 0
Cbc0038I Pass  20: suminf.    0.22873 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  21: suminf.    0.22873 (2) obj. -6995.54 iterations 1
Cbc0038I Pass  22: suminf.    1.22670 (3) obj. -6995.54 iterations 4
Cbc0038I Pass  23: suminf.    0.72278 (2) obj. -6995.54 iterations 2
Cbc0038I Pass  24: suminf.    1.15474 (3) obj. -6995.54 iterations 2
Cbc0038I Pass  25: suminf.    0.73733 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  26: suminf.    0.28729 (1) obj. -6995.54 iterations 2
Cbc0038I Pass  27: suminf.    0.65667 (2) obj. -6995.54 iterations 2
Cbc0038I Pass  28: suminf.    0.28729 (1) obj. -6995.54 iterations 2
Cbc0038I Pass  29: suminf.    0.43341 (1) obj. -6995.54 iterations 1
Cbc0038I Pass  30: suminf.    0.16524 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  31: suminf.    0.16524 (2) obj. -6995.54 iterations 1
Cbc0038I Pass  32: suminf.    0.46533 (2) obj. -6995.54 iterations 4
Cbc0038I Pass  33: suminf.    1.15474 (3) obj. -6995.54 iterations 4
Cbc0038I Pass  34: suminf.    0.73733 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  35: suminf.    0.72278 (2) obj. -6995.54 iterations 1
Cbc0038I Pass  36: suminf.    1.15474 (3) obj. -6995.54 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -6990.17 - took 0.01 seconds
Cbc0012I Integer solution of -6990.168 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 18 columns, reduced to 4 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7017.0184 to -7017.0184 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6990.167999999999, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-15) rows, 37 (-9) columns and 280 (-108) elements
Clp1000I sum of infeasibilities 2.48456e-06 - average 7.52898e-08, 29 fixed columns
Coin0506I Presolve 6 (-27) rows, 8 (-29) columns and 23 (-257) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 3.0727991 - largest nonzero change 0 ( 0%) - largest zero change 2.7631514e-05
Clp0000I Optimal - objective value 6976.3888
Clp0000I Optimal - objective value 6976.3888
Coin0511I After Postsolve, objective 6976.3888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.252346 - largest nonzero change 1.7799242e-05 ( 0.0017799242%) - largest zero change 2.9279553e-05
Clp0000I Optimal - objective value 7050.3934
Clp0000I Optimal - objective value 7050.3934
Clp0000I Optimal - objective value 7050.3934
Coin0511I After Postsolve, objective 7050.3934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7050.393376 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 39 columns (39 integer (39 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.887%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.44647
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -6987.17 iterations 23
Cbc0038I Solution found of -6986.17
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6989.32
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.56533 (2) obj. -6989.32 iterations 1
Cbc0038I Pass   3: suminf.    0.28500 (1) obj. -6995.57 iterations 2
Cbc0038I Pass   4: suminf.    0.09563 (1) obj. -6989.32 iterations 2
Cbc0038I Pass   5: suminf.    2.51348 (8) obj. -6989.32 iterations 11
Cbc0038I Pass   6: suminf.    0.69489 (2) obj. -6989.32 iterations 10
Cbc0038I Pass   7: suminf.    1.74528 (6) obj. -6989.32 iterations 6
Cbc0038I Pass   8: suminf.    0.24715 (1) obj. -6989.32 iterations 6
Cbc0038I Pass   9: suminf.    0.28500 (1) obj. -6990.57 iterations 2
Cbc0038I Pass  10: suminf.    0.70011 (5) obj. -6989.32 iterations 5
Cbc0038I Pass  11: suminf.    0.17316 (1) obj. -6989.32 iterations 4
Cbc0038I Pass  12: suminf.    0.23529 (1) obj. -6990.82 iterations 2
Cbc0038I Pass  13: suminf.    0.55372 (3) obj. -6989.32 iterations 6
Cbc0038I Pass  14: suminf.    0.26417 (2) obj. -6989.32 iterations 3
Cbc0038I Pass  15: suminf.    0.35419 (3) obj. -6989.32 iterations 2
Cbc0038I Pass  16: suminf.    1.72971 (6) obj. -6989.32 iterations 8
Cbc0038I Pass  17: suminf.    0.67878 (3) obj. -6989.32 iterations 2
Cbc0038I Pass  18: suminf.    0.33506 (2) obj. -6989.32 iterations 5
Cbc0038I Pass  19: suminf.    0.36727 (2) obj. -6989.81 iterations 2
Cbc0038I Pass  20: suminf.    2.76657 (10) obj. -6989.32 iterations 12
Cbc0038I Pass  21: suminf.    0.33506 (2) obj. -6989.32 iterations 11
Cbc0038I Pass  22: suminf.    1.42125 (6) obj. -6992.62 iterations 13
Cbc0038I Pass  23: suminf.    0.26417 (2) obj. -6989.32 iterations 10
Cbc0038I Pass  24: suminf.    0.35419 (3) obj. -6989.32 iterations 3
Cbc0038I Pass  25: suminf.    1.36457 (6) obj. -6989.32 iterations 11
Cbc0038I Pass  26: suminf.    1.02595 (5) obj. -6989.32 iterations 5
Cbc0038I Pass  27: suminf.    1.20124 (5) obj. -6990.73 iterations 5
Cbc0038I Pass  28: suminf.    0.25033 (2) obj. -6989.32 iterations 8
Cbc0038I Pass  29: suminf.    0.17316 (1) obj. -6989.32 iterations 5
Cbc0038I Pass  30: suminf.    0.23529 (1) obj. -6990.82 iterations 2
Cbc0038I Pass  31: suminf.    1.91803 (6) obj. -6989.32 iterations 9
Cbc0038I Rounding solution of -6990.17 is better than previous of -6986.17

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6995.68
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.75793 (2) obj. -6995.68 iterations 0
Cbc0038I Pass  32: suminf.    0.29390 (2) obj. -6995.68 iterations 4
Cbc0038I Pass  33: suminf.    0.29212 (2) obj. -6995.68 iterations 2
Cbc0038I Pass  34: suminf.    0.36727 (2) obj. -6996.81 iterations 2
Cbc0038I Pass  35: suminf.    1.39698 (6) obj. -6995.68 iterations 6
Cbc0038I Pass  36: suminf.    1.15803 (5) obj. -6995.68 iterations 13
Cbc0038I Pass  37: suminf.    0.44000 (3) obj. -6995.68 iterations 6
Cbc0038I Pass  38: suminf.    0.67808 (3) obj. -6998.54 iterations 3
Cbc0038I Pass  39: suminf.    1.25478 (6) obj. -6995.68 iterations 8
Cbc0038I Pass  40: suminf.    1.71426 (8) obj. -6995.68 iterations 7
Cbc0038I Pass  41: suminf.    0.65866 (3) obj. -6995.68 iterations 5
Cbc0038I Pass  42: suminf.    1.52588 (6) obj. -6999.19 iterations 7
Cbc0038I Pass  43: suminf.    1.53546 (7) obj. -6995.68 iterations 5
Cbc0038I Pass  44: suminf.    3.39227 (11) obj. -6995.68 iterations 12
Cbc0038I Pass  45: suminf.    2.48625 (7) obj. -6995.68 iterations 8
Cbc0038I Pass  46: suminf.    1.83077 (5) obj. -6996.22 iterations 6
Cbc0038I Pass  47: suminf.    1.62931 (5) obj. -6995.68 iterations 6
Cbc0038I Pass  48: suminf.    2.11410 (6) obj. -6995.68 iterations 5
Cbc0038I Pass  49: suminf.    1.76374 (5) obj. -6995.68 iterations 6
Cbc0038I Pass  50: suminf.    1.89809 (6) obj. -6995.68 iterations 6
Cbc0038I Pass  51: suminf.    1.37931 (4) obj. -6995.68 iterations 4
Cbc0038I Pass  52: suminf.    1.77723 (5) obj. -6995.68 iterations 5
Cbc0038I Pass  53: suminf.    1.51374 (5) obj. -6995.68 iterations 6
Cbc0038I Pass  54: suminf.    2.25685 (7) obj. -6995.68 iterations 7
Cbc0038I Pass  55: suminf.    1.51374 (5) obj. -6995.68 iterations 7
Cbc0038I Pass  56: suminf.    1.88088 (6) obj. -6995.68 iterations 2
Cbc0038I Pass  57: suminf.    1.62931 (5) obj. -6995.68 iterations 5
Cbc0038I Pass  58: suminf.    2.11410 (6) obj. -6995.68 iterations 5
Cbc0038I Pass  59: suminf.    1.76374 (5) obj. -6995.68 iterations 6
Cbc0038I Pass  60: suminf.    2.40343 (8) obj. -6995.68 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -6990.17 - took 0.02 seconds
Cbc0012I Integer solution of -6990.168 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 39 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -6995.573 to -6995.573 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6990.167999999999, took 18 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-20) rows, 18 (-7) columns and 73 (-62) elements
Clp1000I sum of infeasibilities 7.68906e-08 - average 2.6514e-09, 10 fixed columns
Coin0506I Presolve 5 (-24) rows, 8 (-10) columns and 15 (-58) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 7017.0184
Clp0000I Optimal - objective value 7017.0184
Coin0511I After Postsolve, objective 7017.0184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.4738883 - largest nonzero change 1.0737931e-05 ( 0.0008514623%) - largest zero change 1.8508842e-05
Clp0000I Optimal - objective value 7017.0184
Clp0000I Optimal - objective value 7017.0184
Clp0000I Optimal - objective value 7017.0184
Coin0511I After Postsolve, objective 7017.0184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7017.018352 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 29 rows, 18 columns (17 integer (17 of which binary)) and 73 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.204%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.47123
Cbc0038I Pass   1: suminf.    0.36727 (1) obj. -6392.82 iterations 6
Cbc0038I Solution found of -5375.8
Cbc0038I Relaxing continuous gives -5375.8
Cbc0038I Rounding solution of -5408.8 is better than previous of -5375.8

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -5408.8 to -6986.17 (0.00 seconds)
Cbc0038I Round again with cutoff of -6989.25
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.59478 (2) obj. -7005.5 iterations 5
Cbc0038I Pass   3: suminf.    0.09349 (1) obj. -6989.25 iterations 4
Cbc0038I Pass   4: suminf.    0.28500 (1) obj. -6995.57 iterations 1
Cbc0038I Pass   5: suminf.    0.28500 (1) obj. -6995.57 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -6990.17 iterations 3
Cbc0038I Solution found of -6990.17
Cbc0038I Relaxing continuous gives -6990.17
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6995.54
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.59478 (2) obj. -7005.5 iterations 0
Cbc0038I Pass   8: suminf.    0.28394 (1) obj. -6995.54 iterations 4
Cbc0038I Pass   9: suminf.    0.28500 (1) obj. -6995.57 iterations 1
Cbc0038I Pass  10: suminf.    0.28561 (2) obj. -6995.54 iterations 1
Cbc0038I Pass  11: suminf.    0.28394 (1) obj. -6995.54 iterations 1
Cbc0038I Pass  12: suminf.    0.28729 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  13: suminf.    0.28394 (1) obj. -6995.54 iterations 5
Cbc0038I Pass  14: suminf.    0.36533 (4) obj. -6995.54 iterations 7
Cbc0038I Pass  15: suminf.    0.16524 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  16: suminf.    0.46533 (2) obj. -6995.54 iterations 4
Cbc0038I Pass  17: suminf.    0.28729 (1) obj. -6995.54 iterations 1
Cbc0038I Pass  18: suminf.    0.43341 (1) obj. -6995.54 iterations 1
Cbc0038I Pass  19: suminf.    0.43341 (1) obj. -6995.54 iterations 0
Cbc0038I Pass  20: suminf.    0.22873 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  21: suminf.    0.22873 (2) obj. -6995.54 iterations 1
Cbc0038I Pass  22: suminf.    1.22670 (3) obj. -6995.54 iterations 4
Cbc0038I Pass  23: suminf.    0.72278 (2) obj. -6995.54 iterations 2
Cbc0038I Pass  24: suminf.    1.15474 (3) obj. -6995.54 iterations 2
Cbc0038I Pass  25: suminf.    0.73733 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  26: suminf.    0.28729 (1) obj. -6995.54 iterations 2
Cbc0038I Pass  27: suminf.    0.65667 (2) obj. -6995.54 iterations 2
Cbc0038I Pass  28: suminf.    0.28729 (1) obj. -6995.54 iterations 2
Cbc0038I Pass  29: suminf.    0.43341 (1) obj. -6995.54 iterations 1
Cbc0038I Pass  30: suminf.    0.16524 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  31: suminf.    0.16524 (2) obj. -6995.54 iterations 1
Cbc0038I Pass  32: suminf.    0.46533 (2) obj. -6995.54 iterations 4
Cbc0038I Pass  33: suminf.    1.15474 (3) obj. -6995.54 iterations 4
Cbc0038I Pass  34: suminf.    0.73733 (2) obj. -6995.54 iterations 3
Cbc0038I Pass  35: suminf.    0.72278 (2) obj. -6995.54 iterations 1
Cbc0038I Pass  36: suminf.    1.15474 (3) obj. -6995.54 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -6990.17 - took 0.02 seconds
Cbc0012I Integer solution of -6990.168 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 29 rows 18 columns, reduced to 4 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7017.0184 to -7017.0184 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6990.167999999999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-19) rows, 35 (-12) columns and 243 (-146) elements
Clp1000I sum of infeasibilities 2.16659e-06 - average 7.22196e-08, 28 fixed columns
Coin0506I Presolve 4 (-26) rows, 7 (-28) columns and 13 (-230) elements
Clp0029I End of values pass after 7 iterations
Clp0014I Perturbing problem by 0.001% of 1.8806245 - largest nonzero change 1.5224513e-05 ( 0.00089819337%) - largest zero change 0
Clp0000I Optimal - objective value 6967.2851
Clp0000I Optimal - objective value 6967.2851
Coin0511I After Postsolve, objective 6967.2851, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5890712 - largest nonzero change 1.3344837e-05 ( 0.00089819337%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 7046.2257
Clp0000I Optimal - objective value 7046.2257
Clp0000I Optimal - objective value 7046.2257
Coin0511I After Postsolve, objective 7046.2257, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7046.225735 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 39 columns (39 integer (39 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.887%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.85594
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -6987.17 iterations 17
Cbc0038I Solution found of -6986.17
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6988.81
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.54979 (2) obj. -6988.81 iterations 1
Cbc0038I Pass   3: suminf.    0.08009 (1) obj. -6988.81 iterations 1
Cbc0038I Pass   4: suminf.    0.28500 (1) obj. -6995.57 iterations 4
Cbc0038I Pass   5: suminf.    2.35631 (8) obj. -6988.81 iterations 7
Cbc0038I Pass   6: suminf.    0.72853 (2) obj. -6988.81 iterations 6
Cbc0038I Pass   7: suminf.    1.77512 (6) obj. -6988.81 iterations 6
Cbc0038I Pass   8: suminf.    0.40057 (2) obj. -6988.81 iterations 4
Cbc0038I Pass   9: suminf.    0.23161 (1) obj. -6988.81 iterations 2
Cbc0038I Pass  10: suminf.    0.28500 (1) obj. -6990.57 iterations 4
Cbc0038I Pass  11: suminf.    1.43675 (5) obj. -6988.81 iterations 10
Cbc0038I Pass  12: suminf.    1.43675 (5) obj. -6988.81 iterations 1
Cbc0038I Pass  13: suminf.    1.62082 (5) obj. -6988.81 iterations 4
Cbc0038I Pass  14: suminf.    0.92348 (3) obj. -6988.81 iterations 6
Cbc0038I Pass  15: suminf.    0.70777 (3) obj. -6988.81 iterations 3
Cbc0038I Pass  16: suminf.    1.11391 (3) obj. -6988.81 iterations 4
Cbc0038I Pass  17: suminf.    1.81175 (5) obj. -6988.81 iterations 9
Cbc0038I Pass  18: suminf.    1.43675 (5) obj. -6988.81 iterations 2
Cbc0038I Pass  19: suminf.    1.62082 (5) obj. -6988.81 iterations 4
Cbc0038I Pass  20: suminf.    0.92348 (3) obj. -6988.81 iterations 6
Cbc0038I Pass  21: suminf.    0.70777 (3) obj. -6988.81 iterations 3
Cbc0038I Pass  22: suminf.    1.11391 (3) obj. -6988.81 iterations 4
Cbc0038I Pass  23: suminf.    1.31768 (5) obj. -6988.81 iterations 7
Cbc0038I Pass  24: suminf.    0.08009 (1) obj. -6988.81 iterations 6
Cbc0038I Pass  25: suminf.    0.28500 (1) obj. -6995.57 iterations 4
Cbc0038I Pass  26: suminf.    2.95148 (10) obj. -6988.81 iterations 10
Cbc0038I Pass  27: suminf.    0.14070 (1) obj. -6988.81 iterations 12
Cbc0038I Pass  28: suminf.    0.28500 (1) obj. -6993.57 iterations 4
Cbc0038I Pass  29: suminf.    1.35833 (7) obj. -6988.81 iterations 12
Cbc0038I Pass  30: suminf.    0.02680 (1) obj. -6988.81 iterations 9
Cbc0038I Pass  31: suminf.    0.23529 (1) obj. -6993.82 iterations 3
Cbc0038I Rounding solution of -6990.17 is better than previous of -6986.17

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6994.65
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.72685 (2) obj. -6994.65 iterations 0
Cbc0038I Pass  32: suminf.    0.25715 (1) obj. -6994.65 iterations 1
Cbc0038I Pass  33: suminf.    0.28500 (1) obj. -6995.57 iterations 4
Cbc0038I Pass  34: suminf.    0.48529 (2) obj. -6996.82 iterations 4
Cbc0038I Pass  35: suminf.    0.18692 (1) obj. -6994.65 iterations 4
Cbc0038I Pass  36: suminf.    0.23529 (1) obj. -6995.82 iterations 3
Cbc0038I Pass  37: suminf.    0.38484 (2) obj. -6994.65 iterations 5
Cbc0038I Pass  38: suminf.    0.86942 (5) obj. -6994.65 iterations 7
Cbc0038I Pass  39: suminf.    0.58949 (5) obj. -6994.65 iterations 4
Cbc0038I Pass  40: suminf.    0.82383 (4) obj. -6996.23 iterations 5
Cbc0038I Pass  41: suminf.    0.62687 (4) obj. -6994.65 iterations 3
Cbc0038I Pass  42: suminf.    1.11082 (6) obj. -6994.65 iterations 6
Cbc0038I Pass  43: suminf.    0.62687 (4) obj. -6994.65 iterations 6
Cbc0038I Pass  44: suminf.    1.43566 (6) obj. -6994.65 iterations 6
Cbc0038I Pass  45: suminf.    1.24863 (5) obj. -6994.65 iterations 3
Cbc0038I Pass  46: suminf.    1.15395 (4) obj. -6994.65 iterations 9
Cbc0038I Pass  47: suminf.    0.25715 (1) obj. -6994.65 iterations 3
Cbc0038I Pass  48: suminf.    0.28500 (1) obj. -6995.57 iterations 4
Cbc0038I Pass  49: suminf.    0.28500 (1) obj. -6995.57 iterations 0
Cbc0038I Pass  50: suminf.    1.23562 (6) obj. -6994.65 iterations 6
Cbc0038I Pass  51: suminf.    1.51223 (7) obj. -6994.65 iterations 10
Cbc0038I Pass  52: suminf.    1.57604 (9) obj. -6994.65 iterations 11
Cbc0038I Pass  53: suminf.    0.83949 (6) obj. -6994.65 iterations 8
Cbc0038I Pass  54: suminf.    1.03901 (5) obj. -6995.95 iterations 4
Cbc0038I Pass  55: suminf.    0.87687 (5) obj. -6994.65 iterations 4
Cbc0038I Pass  56: suminf.    0.61069 (2) obj. -6994.65 iterations 7
Cbc0038I Pass  57: suminf.    0.35707 (2) obj. -6994.65 iterations 4
Cbc0038I Pass  58: suminf.    0.36727 (2) obj. -6994.81 iterations 4
Cbc0038I Pass  59: suminf.    2.34610 (7) obj. -6994.65 iterations 12
Cbc0038I Pass  60: suminf.    1.85503 (6) obj. -6994.65 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -6990.17 - took 0.02 seconds
Cbc0012I Integer solution of -6990.168 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 39 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -6996.573 to -6996.573 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6990.167999999999, took 13 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

