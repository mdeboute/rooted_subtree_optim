Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-23) rows, 41 (-9) columns and 226 (-59) elements
Clp1000I sum of infeasibilities 3.39328e-05 - average 4.46484e-07, 10 fixed columns
Coin0506I Presolve 56 (-20) rows, 31 (-10) columns and 166 (-60) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Coin0511I After Postsolve, objective 1216.9673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.61905 - largest nonzero change 0 ( 0%) - largest zero change 2.56423e-05
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Coin0511I After Postsolve, objective 1216.9673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1216.967324 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 76 rows, 41 columns (40 integer (40 of which binary)) and 226 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 10.9916
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1152.05 iterations 22
Cbc0038I Solution found of 1152.05
Cbc0038I Relaxing continuous gives 1152.05
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 1152.05 to 0 (0.03 seconds)
Cbc0038I Round again with cutoff of -121.697
Cbc0038I Pass   2: suminf.    2.54785 (14) obj. -121.697 iterations 11
Cbc0038I Pass   3: suminf.    4.75584 (13) obj. -121.697 iterations 16
Cbc0038I Pass   4: suminf.    4.71453 (13) obj. -121.697 iterations 1
Cbc0038I Pass   5: suminf.    1.50293 (8) obj. -121.697 iterations 12
Cbc0038I Pass   6: suminf.    1.00000 (7) obj. -121.697 iterations 7
Cbc0038I Pass   7: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass   8: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass   9: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  10: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  11: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  12: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  13: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  14: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  15: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  16: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  17: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  18: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  19: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  20: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  21: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  22: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  23: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  24: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  25: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  26: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  27: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  28: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  29: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  30: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  31: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 0 - took 0.04 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0031I 14 added rows had average density of 27.571429
Cbc0013I At root node, 14 cuts changed objective from -1216.9673 to -167.49813 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3997 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 958 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective 0, took 3461 iterations and 4 nodes (0.33 seconds)
Cbc0032I Strong branching done 102 times (2252 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-16) rows, 86 (-10) columns and 1109 (-304) elements
Clp1000I sum of infeasibilities 1.39692e-06 - average 1.70356e-08, 35 fixed columns
Coin0506I Presolve 44 (-38) rows, 47 (-39) columns and 232 (-877) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 2551.9108
Clp0000I Optimal - objective value 2551.9108
Coin0511I After Postsolve, objective 2551.9108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.738528 - largest nonzero change 1.2527913e-05 ( 0.0012527913%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2551.9108
Clp0000I Optimal - objective value 2551.9108
Clp0000I Optimal - objective value 2551.9108
Coin0511I After Postsolve, objective 2551.9108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2551.910843 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 82 rows, 86 columns (86 integer (86 of which binary)) and 1111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.970%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 9.94959
Cbc0038I Pass   1: suminf.    3.26741 (22) obj. 46.8452 iterations 19
Cbc0038I Pass   2: suminf.    3.26741 (22) obj. 46.8452 iterations 3
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. 1650.52 iterations 21
Cbc0038I Solution found of 1679.02
Cbc0038I Rounding solution of 1479.76 is better than previous of 1679.02

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 86 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 1479.76 to 314.418 (0.02 seconds)
Cbc0038I Round again with cutoff of 104.864
Cbc0038I Pass   4: suminf.    3.26741 (22) obj. 46.8452 iterations 0
Cbc0038I Pass   5: suminf.    3.26741 (22) obj. 46.8452 iterations 2
Cbc0038I Pass   6: suminf.    2.64157 (26) obj. 104.864 iterations 27
Cbc0038I Pass   7: suminf.    2.61285 (25) obj. 104.864 iterations 1
Cbc0038I Pass   8: suminf.    2.03932 (11) obj. 104.864 iterations 17
Cbc0038I Pass   9: suminf.    1.81741 (9) obj. 71.8949 iterations 2
Cbc0038I Pass  10: suminf.    0.45991 (1) obj. 104.864 iterations 11
Cbc0038I Pass  11: suminf.    0.34211 (1) obj. 59.155 iterations 2
Cbc0038I Pass  12: suminf.    0.45991 (1) obj. 104.864 iterations 2
Cbc0038I Pass  13: suminf.    2.24354 (7) obj. 104.864 iterations 23
Cbc0038I Pass  14: suminf.    2.19266 (7) obj. 85.1235 iterations 12
Cbc0038I Pass  15: suminf.    0.73661 (2) obj. 104.864 iterations 9
Cbc0038I Pass  16: suminf.    0.73661 (2) obj. 104.864 iterations 2
Cbc0038I Pass  17: suminf.    0.72134 (2) obj. 104.864 iterations 2
Cbc0038I Pass  18: suminf.    2.59148 (9) obj. 104.864 iterations 15
Cbc0038I Pass  19: suminf.    2.59148 (9) obj. 104.864 iterations 0
Cbc0038I Pass  20: suminf.    0.80175 (3) obj. 104.864 iterations 14
Cbc0038I Pass  21: suminf.    0.63824 (3) obj. 104.864 iterations 1
Cbc0038I Pass  22: suminf.    0.80175 (3) obj. 104.864 iterations 3
Cbc0038I Pass  23: suminf.    5.24248 (17) obj. 104.864 iterations 31
Cbc0038I Pass  24: suminf.    3.94022 (14) obj. 104.864 iterations 12
Cbc0038I Pass  25: suminf.    3.01407 (12) obj. -235.814 iterations 2
Cbc0038I Pass  26: suminf.    1.02112 (4) obj. 104.864 iterations 14
Cbc0038I Pass  27: suminf.    1.02112 (4) obj. 104.864 iterations 0
Cbc0038I Pass  28: suminf.    1.32160 (4) obj. 104.864 iterations 1
Cbc0038I Pass  29: suminf.    1.32160 (4) obj. 104.864 iterations 0
Cbc0038I Pass  30: suminf.    1.02112 (4) obj. 104.864 iterations 4
Cbc0038I Pass  31: suminf.    1.99778 (10) obj. 104.864 iterations 17
Cbc0038I Pass  32: suminf.    1.99778 (10) obj. 104.864 iterations 0
Cbc0038I Pass  33: suminf.    1.06566 (4) obj. 104.864 iterations 7
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 86 columns, reduced to 32 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -272.334
Cbc0038I Pass  33: suminf.    4.45906 (31) obj. -272.334 iterations 7
Cbc0038I Pass  34: suminf.    4.45906 (31) obj. -272.334 iterations 1
Cbc0038I Pass  35: suminf.    3.31674 (28) obj. -272.334 iterations 19
Cbc0038I Pass  36: suminf.    3.29872 (28) obj. -272.334 iterations 1
Cbc0038I Pass  37: suminf.    2.13994 (9) obj. -272.334 iterations 23
Cbc0038I Pass  38: suminf.    1.85356 (7) obj. -403.451 iterations 3
Cbc0038I Pass  39: suminf.    1.01523 (3) obj. -272.334 iterations 7
Cbc0038I Pass  40: suminf.    1.01523 (3) obj. -272.334 iterations 0
Cbc0038I Pass  41: suminf.    0.80339 (3) obj. -272.334 iterations 5
Cbc0038I Pass  42: suminf.    0.80339 (3) obj. -272.334 iterations 0
Cbc0038I Pass  43: suminf.    1.01523 (3) obj. -272.334 iterations 1
Cbc0038I Pass  44: suminf.    4.38353 (15) obj. -272.334 iterations 27
Cbc0038I Pass  45: suminf.    3.34021 (12) obj. -272.334 iterations 5
Cbc0038I Pass  46: suminf.    3.12139 (12) obj. -272.334 iterations 2
Cbc0038I Pass  47: suminf.    2.68599 (9) obj. -272.334 iterations 9
Cbc0038I Pass  48: suminf.    2.20084 (11) obj. -272.334 iterations 2
Cbc0038I Pass  49: suminf.    2.20084 (11) obj. -272.334 iterations 0
Cbc0038I Pass  50: suminf.    0.81993 (4) obj. -272.334 iterations 25
Cbc0038I Pass  51: suminf.    0.81993 (4) obj. -272.334 iterations 2
Cbc0038I Pass  52: suminf.    1.13552 (4) obj. -272.334 iterations 1
Cbc0038I Pass  53: suminf.    1.13552 (4) obj. -272.334 iterations 0
Cbc0038I Pass  54: suminf.    0.81993 (4) obj. -272.334 iterations 14
Cbc0038I Pass  55: suminf.    2.78362 (11) obj. -272.334 iterations 13
Cbc0038I Pass  56: suminf.    2.78362 (11) obj. -272.334 iterations 2
Cbc0038I Pass  57: suminf.    1.30080 (5) obj. -272.334 iterations 24
Cbc0038I Pass  58: suminf.    1.30080 (5) obj. -272.334 iterations 0
Cbc0038I Pass  59: suminf.    1.38746 (5) obj. -272.334 iterations 2
Cbc0038I Pass  60: suminf.    1.38746 (5) obj. -272.334 iterations 0
Cbc0038I Pass  61: suminf.    1.30080 (5) obj. -272.334 iterations 2
Cbc0038I Pass  62: suminf.    4.08549 (13) obj. -272.334 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 86 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 314.418 - took 0.04 seconds
Cbc0012I Integer solution of 314.4182 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of 0 found by DiveCoefficient after 128 iterations and 0 nodes (0.07 seconds)
Cbc0031I 42 added rows had average density of 2.6190476
Cbc0013I At root node, 42 cuts changed objective from -1781.1262 to 0 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 495 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 37 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 0, took 128 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-23) rows, 41 (-9) columns and 226 (-59) elements
Clp1000I sum of infeasibilities 3.39328e-05 - average 4.46484e-07, 10 fixed columns
Coin0506I Presolve 56 (-20) rows, 31 (-10) columns and 166 (-60) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Coin0511I After Postsolve, objective 1216.9673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.61905 - largest nonzero change 0 ( 0%) - largest zero change 2.56423e-05
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Coin0511I After Postsolve, objective 1216.9673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1216.967324 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 76 rows, 41 columns (40 integer (40 of which binary)) and 226 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 10.9916
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1152.05 iterations 22
Cbc0038I Solution found of 1152.05
Cbc0038I Relaxing continuous gives 1152.05
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 1152.05 to 0 (0.02 seconds)
Cbc0038I Round again with cutoff of -121.697
Cbc0038I Pass   2: suminf.    2.54785 (14) obj. -121.697 iterations 11
Cbc0038I Pass   3: suminf.    4.75584 (13) obj. -121.697 iterations 16
Cbc0038I Pass   4: suminf.    4.71453 (13) obj. -121.697 iterations 1
Cbc0038I Pass   5: suminf.    1.50293 (8) obj. -121.697 iterations 12
Cbc0038I Pass   6: suminf.    1.00000 (7) obj. -121.697 iterations 7
Cbc0038I Pass   7: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass   8: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass   9: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  10: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  11: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  12: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  13: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  14: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  15: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  16: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  17: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  18: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  19: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  20: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  21: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  22: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  23: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  24: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  25: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  26: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  27: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  28: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  29: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  30: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  31: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 0 - took 0.04 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0031I 14 added rows had average density of 27.571429
Cbc0013I At root node, 14 cuts changed objective from -1216.9673 to -167.49813 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3997 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 958 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective 0, took 3461 iterations and 4 nodes (0.31 seconds)
Cbc0032I Strong branching done 102 times (2252 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-17) rows, 86 (-11) columns and 1109 (-305) elements
Clp1000I sum of infeasibilities 1.39692e-06 - average 1.70356e-08, 35 fixed columns
Coin0506I Presolve 44 (-38) rows, 47 (-39) columns and 232 (-877) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 2551.9108
Clp0000I Optimal - objective value 2551.9108
Coin0511I After Postsolve, objective 2551.9108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.738528 - largest nonzero change 1.2527913e-05 ( 0.0012527913%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2551.9108
Clp0000I Optimal - objective value 2551.9108
Clp0000I Optimal - objective value 2551.9108
Coin0511I After Postsolve, objective 2551.9108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2551.910843 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 82 rows, 86 columns (86 integer (86 of which binary)) and 1111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.970%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 9.94959
Cbc0038I Pass   1: suminf.    3.26741 (22) obj. 46.8452 iterations 19
Cbc0038I Pass   2: suminf.    3.26741 (22) obj. 46.8452 iterations 3
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. 1650.52 iterations 21
Cbc0038I Solution found of 1679.02
Cbc0038I Rounding solution of 1479.76 is better than previous of 1679.02

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 86 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 1479.76 to 314.418 (0.02 seconds)
Cbc0038I Round again with cutoff of 104.864
Cbc0038I Pass   4: suminf.    3.26741 (22) obj. 46.8452 iterations 0
Cbc0038I Pass   5: suminf.    3.26741 (22) obj. 46.8452 iterations 2
Cbc0038I Pass   6: suminf.    2.64157 (26) obj. 104.864 iterations 27
Cbc0038I Pass   7: suminf.    2.61285 (25) obj. 104.864 iterations 1
Cbc0038I Pass   8: suminf.    2.03932 (11) obj. 104.864 iterations 17
Cbc0038I Pass   9: suminf.    1.81741 (9) obj. 71.8949 iterations 2
Cbc0038I Pass  10: suminf.    0.45991 (1) obj. 104.864 iterations 11
Cbc0038I Pass  11: suminf.    0.34211 (1) obj. 59.155 iterations 2
Cbc0038I Pass  12: suminf.    0.45991 (1) obj. 104.864 iterations 2
Cbc0038I Pass  13: suminf.    2.24354 (7) obj. 104.864 iterations 23
Cbc0038I Pass  14: suminf.    2.19266 (7) obj. 85.1235 iterations 12
Cbc0038I Pass  15: suminf.    0.73661 (2) obj. 104.864 iterations 9
Cbc0038I Pass  16: suminf.    0.73661 (2) obj. 104.864 iterations 2
Cbc0038I Pass  17: suminf.    0.72134 (2) obj. 104.864 iterations 2
Cbc0038I Pass  18: suminf.    2.59148 (9) obj. 104.864 iterations 15
Cbc0038I Pass  19: suminf.    2.59148 (9) obj. 104.864 iterations 0
Cbc0038I Pass  20: suminf.    0.80175 (3) obj. 104.864 iterations 14
Cbc0038I Pass  21: suminf.    0.63824 (3) obj. 104.864 iterations 1
Cbc0038I Pass  22: suminf.    0.80175 (3) obj. 104.864 iterations 3
Cbc0038I Pass  23: suminf.    5.24248 (17) obj. 104.864 iterations 31
Cbc0038I Pass  24: suminf.    3.94022 (14) obj. 104.864 iterations 12
Cbc0038I Pass  25: suminf.    3.01407 (12) obj. -235.814 iterations 2
Cbc0038I Pass  26: suminf.    1.02112 (4) obj. 104.864 iterations 14
Cbc0038I Pass  27: suminf.    1.02112 (4) obj. 104.864 iterations 0
Cbc0038I Pass  28: suminf.    1.32160 (4) obj. 104.864 iterations 1
Cbc0038I Pass  29: suminf.    1.32160 (4) obj. 104.864 iterations 0
Cbc0038I Pass  30: suminf.    1.02112 (4) obj. 104.864 iterations 4
Cbc0038I Pass  31: suminf.    1.99778 (10) obj. 104.864 iterations 17
Cbc0038I Pass  32: suminf.    1.99778 (10) obj. 104.864 iterations 0
Cbc0038I Pass  33: suminf.    1.06566 (4) obj. 104.864 iterations 7
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 86 columns, reduced to 32 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -272.334
Cbc0038I Pass  33: suminf.    4.45906 (31) obj. -272.334 iterations 7
Cbc0038I Pass  34: suminf.    4.45906 (31) obj. -272.334 iterations 1
Cbc0038I Pass  35: suminf.    3.31674 (28) obj. -272.334 iterations 19
Cbc0038I Pass  36: suminf.    3.29872 (28) obj. -272.334 iterations 1
Cbc0038I Pass  37: suminf.    2.13994 (9) obj. -272.334 iterations 23
Cbc0038I Pass  38: suminf.    1.85356 (7) obj. -403.451 iterations 3
Cbc0038I Pass  39: suminf.    1.01523 (3) obj. -272.334 iterations 7
Cbc0038I Pass  40: suminf.    1.01523 (3) obj. -272.334 iterations 0
Cbc0038I Pass  41: suminf.    0.80339 (3) obj. -272.334 iterations 5
Cbc0038I Pass  42: suminf.    0.80339 (3) obj. -272.334 iterations 0
Cbc0038I Pass  43: suminf.    1.01523 (3) obj. -272.334 iterations 1
Cbc0038I Pass  44: suminf.    4.38353 (15) obj. -272.334 iterations 27
Cbc0038I Pass  45: suminf.    3.34021 (12) obj. -272.334 iterations 5
Cbc0038I Pass  46: suminf.    3.12139 (12) obj. -272.334 iterations 2
Cbc0038I Pass  47: suminf.    2.68599 (9) obj. -272.334 iterations 9
Cbc0038I Pass  48: suminf.    2.20084 (11) obj. -272.334 iterations 2
Cbc0038I Pass  49: suminf.    2.20084 (11) obj. -272.334 iterations 0
Cbc0038I Pass  50: suminf.    0.81993 (4) obj. -272.334 iterations 25
Cbc0038I Pass  51: suminf.    0.81993 (4) obj. -272.334 iterations 2
Cbc0038I Pass  52: suminf.    1.13552 (4) obj. -272.334 iterations 1
Cbc0038I Pass  53: suminf.    1.13552 (4) obj. -272.334 iterations 0
Cbc0038I Pass  54: suminf.    0.81993 (4) obj. -272.334 iterations 14
Cbc0038I Pass  55: suminf.    2.78362 (11) obj. -272.334 iterations 13
Cbc0038I Pass  56: suminf.    2.78362 (11) obj. -272.334 iterations 2
Cbc0038I Pass  57: suminf.    1.30080 (5) obj. -272.334 iterations 24
Cbc0038I Pass  58: suminf.    1.30080 (5) obj. -272.334 iterations 0
Cbc0038I Pass  59: suminf.    1.38746 (5) obj. -272.334 iterations 2
Cbc0038I Pass  60: suminf.    1.38746 (5) obj. -272.334 iterations 0
Cbc0038I Pass  61: suminf.    1.30080 (5) obj. -272.334 iterations 2
Cbc0038I Pass  62: suminf.    4.08549 (13) obj. -272.334 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 86 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 314.418 - took 0.03 seconds
Cbc0012I Integer solution of 314.4182 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of 0 found by DiveCoefficient after 128 iterations and 0 nodes (0.06 seconds)
Cbc0031I 42 added rows had average density of 2.6190476
Cbc0013I At root node, 42 cuts changed objective from -1781.1262 to 0 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 495 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 37 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 0, took 128 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

