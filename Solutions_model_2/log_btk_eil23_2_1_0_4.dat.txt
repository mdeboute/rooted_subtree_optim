Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 18 (-31) rows, 10 (-15) columns and 50 (-85) elements
Clp0000I Optimal - objective value 116.33217
Coin0511I After Postsolve, objective 116.33217, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.3321713 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 10 columns (9 integer (9 of which binary)) and 53 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 12.857%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.14605
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -79.5 iterations 5
Cbc0038I Solution found of -79.5
Cbc0038I Relaxing continuous gives -79.5
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 10 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -82.7062
Cbc0038I Pass   2: suminf.    0.27086 (4) obj. -82.7062 iterations 3
Cbc0038I Pass   3: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass   4: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass   5: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass   6: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass   7: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass   8: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass   9: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  10: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  11: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass  12: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass  13: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass  14: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  15: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  16: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass  17: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass  18: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass  19: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  20: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  21: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass  22: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass  23: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass  24: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  25: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  26: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass  27: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass  28: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass  29: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  30: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  31: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 10 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -79.5 - took 0.01 seconds
Cbc0012I Integer solution of -79.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -107.06279 to -107.06279 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -79.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-20) rows, 28 (-18) columns and 189 (-199) elements
Clp1000I sum of infeasibilities 4.43833e-10 - average 1.58512e-11, 26 fixed columns
Coin0506I Presolve 2 (-26) rows, 2 (-26) columns and 4 (-185) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 240.79344
Clp0000I Optimal - objective value 240.79344
Coin0511I After Postsolve, objective 240.79344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.18404844 - largest nonzero change 0 ( 0%) - largest zero change 2.8303461e-05
Clp0000I Optimal - objective value 323.06112
Clp0000I Optimal - objective value 323.06112
Clp0000I Optimal - objective value 323.06112
Coin0511I After Postsolve, objective 323.06112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 323.0611244 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 33 columns (33 integer (33 of which binary)) and 216 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.046%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.27164
Cbc0038I Pass   1: suminf.    1.50000 (3) obj. -180.5 iterations 29
Cbc0038I Solution found of -168.5
Cbc0038I Rounding solution of -188 is better than previous of -168.5

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -191.792
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.01518 (5) obj. -191.792 iterations 4
Cbc0038I Pass   3: suminf.    1.42415 (5) obj. -191.792 iterations 11
Cbc0038I Pass   4: suminf.    1.42415 (5) obj. -191.792 iterations 1
Cbc0038I Pass   5: suminf.    1.45189 (5) obj. -191.792 iterations 7
Cbc0038I Pass   6: suminf.    0.19514 (2) obj. -191.792 iterations 5
Cbc0038I Pass   7: suminf.    0.15170 (1) obj. -191.792 iterations 3
Cbc0038I Pass   8: suminf.    0.16667 (1) obj. -192.167 iterations 3
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -205.5 iterations 7
Cbc0038I Solution found of -205.5
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 33 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -209.085
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  10: suminf.    3.52039 (10) obj. -209.085 iterations 5
Cbc0038I Pass  11: suminf.    3.37404 (10) obj. -209.085 iterations 9
Cbc0038I Pass  12: suminf.    3.37404 (10) obj. -209.085 iterations 2
Cbc0038I Pass  13: suminf.    3.40434 (10) obj. -209.085 iterations 9
Cbc0038I Pass  14: suminf.    1.76215 (9) obj. -209.085 iterations 5
Cbc0038I Pass  15: suminf.    1.76215 (9) obj. -209.085 iterations 0
Cbc0038I Pass  16: suminf.    3.37404 (10) obj. -209.085 iterations 5
Cbc0038I Pass  17: suminf.    3.37404 (10) obj. -209.085 iterations 2
Cbc0038I Pass  18: suminf.    3.40434 (10) obj. -209.085 iterations 9
Cbc0038I Pass  19: suminf.    1.76215 (9) obj. -209.085 iterations 5
Cbc0038I Pass  20: suminf.    1.76215 (9) obj. -209.085 iterations 0
Cbc0038I Pass  21: suminf.    3.37404 (10) obj. -209.085 iterations 5
Cbc0038I Pass  22: suminf.    3.37404 (10) obj. -209.085 iterations 2
Cbc0038I Pass  23: suminf.    3.40434 (10) obj. -209.085 iterations 10
Cbc0038I Pass  24: suminf.    1.76215 (9) obj. -209.085 iterations 5
Cbc0038I Pass  25: suminf.    1.76215 (9) obj. -209.085 iterations 0
Cbc0038I Pass  26: suminf.    3.37404 (10) obj. -209.085 iterations 5
Cbc0038I Pass  27: suminf.    3.37404 (10) obj. -209.085 iterations 2
Cbc0038I Pass  28: suminf.    3.40434 (10) obj. -209.085 iterations 9
Cbc0038I Pass  29: suminf.    1.76215 (9) obj. -209.085 iterations 5
Cbc0038I Pass  30: suminf.    1.76215 (9) obj. -209.085 iterations 0
Cbc0038I Pass  31: suminf.    3.37404 (10) obj. -209.085 iterations 5
Cbc0038I Pass  32: suminf.    3.37404 (10) obj. -209.085 iterations 2
Cbc0038I Pass  33: suminf.    3.40434 (10) obj. -209.085 iterations 9
Cbc0038I Pass  34: suminf.    1.76215 (9) obj. -209.085 iterations 5
Cbc0038I Pass  35: suminf.    1.76215 (9) obj. -209.085 iterations 0
Cbc0038I Pass  36: suminf.    3.37404 (10) obj. -209.085 iterations 5
Cbc0038I Pass  37: suminf.    3.37404 (10) obj. -209.085 iterations 2
Cbc0038I Pass  38: suminf.    3.40434 (10) obj. -209.085 iterations 9
Cbc0038I Pass  39: suminf.    1.76215 (9) obj. -209.085 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -205.5 - took 0.02 seconds
Cbc0012I Integer solution of -205.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0001I Search completed - best objective -205.5, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 18 (-31) rows, 10 (-15) columns and 50 (-85) elements
Clp0000I Optimal - objective value 116.33217
Coin0511I After Postsolve, objective 116.33217, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.3321713 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 10 columns (9 integer (9 of which binary)) and 53 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 12.857%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.14605
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -79.5 iterations 5
Cbc0038I Solution found of -79.5
Cbc0038I Relaxing continuous gives -79.5
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 10 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -82.7062
Cbc0038I Pass   2: suminf.    0.27086 (4) obj. -82.7062 iterations 3
Cbc0038I Pass   3: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass   4: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass   5: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass   6: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass   7: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass   8: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass   9: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  10: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  11: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass  12: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass  13: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass  14: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  15: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  16: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass  17: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass  18: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass  19: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  20: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  21: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass  22: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass  23: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass  24: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  25: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  26: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I Pass  27: suminf.    0.27086 (4) obj. -82.7062 iterations 2
Cbc0038I Pass  28: suminf.    1.32513 (5) obj. -82.7062 iterations 4
Cbc0038I Pass  29: suminf.    1.31194 (5) obj. -82.7062 iterations 1
Cbc0038I Pass  30: suminf.    1.60663 (4) obj. -82.7062 iterations 5
Cbc0038I Pass  31: suminf.    0.34896 (6) obj. -82.7062 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 10 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -79.5 - took 0.01 seconds
Cbc0012I Integer solution of -79.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -107.06279 to -107.06279 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -79.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-24) rows, 25 (-22) columns and 132 (-257) elements
Clp1000I sum of infeasibilities 9.0014e-06 - average 3.60056e-07, 21 fixed columns
Coin0506I Presolve 5 (-20) rows, 4 (-21) columns and 14 (-118) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 58.882885
Clp0000I Optimal - objective value 58.882885
Coin0511I After Postsolve, objective 58.882885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19105697 - largest nonzero change 0 ( 0%) - largest zero change 1.9748779e-05
Clp0000I Optimal - objective value 161.96907
Clp0000I Optimal - objective value 161.96907
Clp0000I Optimal - objective value 161.96907
Coin0511I After Postsolve, objective 161.96907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.9690659 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 29 columns (29 integer (29 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.124%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.22473
Cbc0038I Pass   1: suminf.    0.85571 (6) obj. -85.2391 iterations 7
Cbc0038I Solution found of 18.5
Cbc0038I Rounding solution of -62.5 is better than previous of 18.5

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 29 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -62.5 to -64.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -67.7905
Cbc0038I Pass   2: suminf.    0.85571 (6) obj. -85.2391 iterations 0
Cbc0038I Pass   3: suminf.    0.28664 (2) obj. -67.7905 iterations 9
Cbc0038I Pass   4: suminf.    0.28664 (2) obj. -67.7905 iterations 0
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -79.5 iterations 2
Cbc0038I Solution found of -79.5
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 29 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -82.5811
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass   6: suminf.    0.85571 (6) obj. -85.2391 iterations 0
Cbc0038I Pass   7: suminf.    1.24979 (7) obj. -82.5811 iterations 8
Cbc0038I Pass   8: suminf.    1.24979 (7) obj. -82.5811 iterations 0
Cbc0038I Pass   9: suminf.    1.58283 (7) obj. -82.5811 iterations 2
Cbc0038I Pass  10: suminf.    0.70605 (5) obj. -82.5811 iterations 3
Cbc0038I Pass  11: suminf.    0.70605 (5) obj. -82.5811 iterations 0
Cbc0038I Pass  12: suminf.    1.24979 (7) obj. -82.5811 iterations 5
Cbc0038I Pass  13: suminf.    1.24979 (7) obj. -82.5811 iterations 0
Cbc0038I Pass  14: suminf.    1.58283 (7) obj. -82.5811 iterations 2
Cbc0038I Pass  15: suminf.    0.70605 (5) obj. -82.5811 iterations 3
Cbc0038I Pass  16: suminf.    0.70605 (5) obj. -82.5811 iterations 0
Cbc0038I Pass  17: suminf.    1.24979 (7) obj. -82.5811 iterations 5
Cbc0038I Pass  18: suminf.    1.24979 (7) obj. -82.5811 iterations 0
Cbc0038I Pass  19: suminf.    1.58283 (7) obj. -82.5811 iterations 2
Cbc0038I Pass  20: suminf.    0.70605 (5) obj. -82.5811 iterations 3
Cbc0038I Pass  21: suminf.    0.70605 (5) obj. -82.5811 iterations 0
Cbc0038I Pass  22: suminf.    1.24979 (7) obj. -82.5811 iterations 5
Cbc0038I Pass  23: suminf.    1.24979 (7) obj. -82.5811 iterations 0
Cbc0038I Pass  24: suminf.    1.58283 (7) obj. -82.5811 iterations 2
Cbc0038I Pass  25: suminf.    0.70605 (5) obj. -82.5811 iterations 3
Cbc0038I Pass  26: suminf.    0.70605 (5) obj. -82.5811 iterations 0
Cbc0038I Pass  27: suminf.    1.24979 (7) obj. -82.5811 iterations 5
Cbc0038I Pass  28: suminf.    1.24979 (7) obj. -82.5811 iterations 0
Cbc0038I Pass  29: suminf.    1.58283 (7) obj. -82.5811 iterations 2
Cbc0038I Pass  30: suminf.    0.70605 (5) obj. -82.5811 iterations 3
Cbc0038I Pass  31: suminf.    0.70605 (5) obj. -82.5811 iterations 0
Cbc0038I Pass  32: suminf.    1.24979 (7) obj. -82.5811 iterations 5
Cbc0038I Pass  33: suminf.    1.24979 (7) obj. -82.5811 iterations 0
Cbc0038I Pass  34: suminf.    1.58283 (7) obj. -82.5811 iterations 2
Cbc0038I Pass  35: suminf.    0.70605 (5) obj. -82.5811 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -79.5 - took 0.01 seconds
Cbc0012I Integer solution of -79.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 29 rows 29 columns, reduced to 13 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -92.905654 to -92.905654 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -79.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

