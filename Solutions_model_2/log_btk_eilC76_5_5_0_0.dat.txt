Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 2.5936e-05 - average 1.93552e-07, 14 fixed columns
Coin0506I Presolve 102 (-32) rows, 60 (-16) columns and 316 (-96) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 56.226888
Clp0000I Optimal - objective value 56.226888
Coin0511I After Postsolve, objective 56.226888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.226888
Clp0000I Optimal - objective value 56.226888
Clp0000I Optimal - objective value 56.226888
Coin0511I After Postsolve, objective 56.226888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.22688841 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.42397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.22177 iterations 51
Cbc0038I Solution found of 5.22177
Cbc0038I Relaxing continuous gives 5.22177
Cbc0038I Rounding solution of -4.30324 is better than previous of 5.22177

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 72 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -4.30324 to -32.3198 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.7106
Cbc0038I Pass   2: suminf.    4.24022 (13) obj. -34.7106 iterations 19
Cbc0038I Pass   3: suminf.    2.63394 (9) obj. -34.7106 iterations 13
Cbc0038I Pass   4: suminf.    2.62838 (10) obj. -34.7106 iterations 7
Cbc0038I Pass   5: suminf.    1.46218 (4) obj. -34.7106 iterations 12
Cbc0038I Pass   6: suminf.    1.39413 (4) obj. -34.7106 iterations 1
Cbc0038I Pass   7: suminf.    0.94229 (3) obj. -34.7106 iterations 4
Cbc0038I Pass   8: suminf.    0.87119 (3) obj. -34.7106 iterations 1
Cbc0038I Pass   9: suminf.    1.39413 (4) obj. -34.7106 iterations 3
Cbc0038I Pass  10: suminf.    1.94287 (6) obj. -34.7106 iterations 17
Cbc0038I Pass  11: suminf.    1.65855 (7) obj. -34.7106 iterations 6
Cbc0038I Pass  12: suminf.    1.92830 (5) obj. -34.7106 iterations 16
Cbc0038I Pass  13: suminf.    1.45430 (4) obj. -34.7106 iterations 4
Cbc0038I Pass  14: suminf.    1.71606 (5) obj. -34.7106 iterations 4
Cbc0038I Pass  15: suminf.    1.39795 (5) obj. -34.7106 iterations 2
Cbc0038I Pass  16: suminf.    1.80598 (6) obj. -34.7106 iterations 4
Cbc0038I Pass  17: suminf.    3.48296 (14) obj. -34.7106 iterations 19
Cbc0038I Pass  18: suminf.    1.64700 (5) obj. -34.7106 iterations 20
Cbc0038I Pass  19: suminf.    1.64086 (5) obj. -34.7106 iterations 2
Cbc0038I Pass  20: suminf.    1.30463 (6) obj. -34.7106 iterations 7
Cbc0038I Pass  21: suminf.    1.23675 (6) obj. -34.7106 iterations 1
Cbc0038I Pass  22: suminf.    2.28662 (5) obj. -34.7106 iterations 6
Cbc0038I Pass  23: suminf.    1.46082 (5) obj. -34.7106 iterations 1
Cbc0038I Pass  24: suminf.    1.71378 (5) obj. -34.7106 iterations 3
Cbc0038I Pass  25: suminf.    1.53073 (5) obj. -34.7106 iterations 1
Cbc0038I Pass  26: suminf.    1.46082 (5) obj. -34.7106 iterations 5
Cbc0038I Pass  27: suminf.    4.65540 (14) obj. -34.7106 iterations 27
Cbc0038I Pass  28: suminf.    2.30869 (9) obj. -34.7106 iterations 26
Cbc0038I Pass  29: suminf.    2.94799 (8) obj. -34.7106 iterations 13
Cbc0038I Pass  30: suminf.    1.74860 (5) obj. -34.7106 iterations 4
Cbc0038I Pass  31: suminf.    1.35830 (4) obj. -34.7106 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 86 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -32.3198 - took 0.10 seconds
Cbc0012I Integer solution of -32.319755 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 72 rows 43 columns
Cbc0031I 33 added rows had average density of 49.636364
Cbc0013I At root node, 33 cuts changed objective from -56.226888 to -47.720271 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11791 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1485 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 75.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.319755 best solution, best possible -47.720271 (0.89 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 13 rows 11 columns
Cbc0038I Full problem 134 rows 76 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -32.319755, took 10106 iterations and 106 nodes (1.18 seconds)
Cbc0032I Strong branching done 812 times (13094 iterations), fathomed 14 nodes and fixed 31 variables
Cbc0035I Maximum depth 22, 370 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 117 (-35) columns and 1816 (-1487) elements
Clp1000I sum of infeasibilities 8.85601e-08 - average 8.76833e-10, 21 fixed columns
Coin0506I Presolve 74 (-27) rows, 90 (-27) columns and 1161 (-655) elements
Clp0006I 0  Obj 54.223284 Dual inf 6.2101869 (90)
Clp0014I Perturbing problem by 0.001% of 1.8747287 - largest nonzero change 2.8745162e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 65.209993
Clp0000I Optimal - objective value 65.209993
Coin0511I After Postsolve, objective 65.209993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.209993
Clp0000I Optimal - objective value 65.209993
Clp0000I Optimal - objective value 65.209993
Clp0000I Optimal - objective value 65.209993
Coin0511I After Postsolve, objective 65.209993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.20999299 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 117 columns (117 integer (117 of which binary)) and 1820 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.132%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.00293
Cbc0038I Pass   1: suminf.    1.60338 (31) obj. -47.6146 iterations 20
Cbc0038I Pass   2: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass   3: suminf.    0.64707 (18) obj. -22.0091 iterations 13
Cbc0038I Pass   4: suminf.    0.21809 (8) obj. -11.4898 iterations 10
Cbc0038I Solution found of -3.70785
Cbc0038I Rounding solution of -11.0446 is better than previous of -3.70785

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -15.4011
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass   6: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass   7: suminf.    0.16158 (3) obj. -15.4011 iterations 29
Cbc0038I Pass   8: suminf.    0.15373 (3) obj. -15.4875 iterations 1
Cbc0038I Pass   9: suminf.    0.30750 (2) obj. -15.4011 iterations 6
Cbc0038I Pass  10: suminf.    0.30750 (2) obj. -15.4011 iterations 1
Cbc0038I Pass  11: suminf.    0.62700 (2) obj. -15.4011 iterations 7
Cbc0038I Pass  12: suminf.    0.19215 (2) obj. -15.4011 iterations 3
Cbc0038I Pass  13: suminf.    1.10291 (9) obj. -21.8185 iterations 22
Cbc0038I Pass  14: suminf.    0.32429 (6) obj. -20.7367 iterations 6
Cbc0038I Pass  15: suminf.    0.15872 (2) obj. -15.4011 iterations 9
Cbc0038I Pass  16: suminf.    0.15872 (2) obj. -15.4011 iterations 1
Cbc0038I Pass  17: suminf.    0.65075 (2) obj. -15.4011 iterations 8
Cbc0038I Pass  18: suminf.    1.74759 (11) obj. -15.4011 iterations 37
Cbc0038I Pass  19: suminf.    1.11936 (10) obj. -15.4011 iterations 10
Cbc0038I Pass  20: suminf.    0.82222 (10) obj. -17.8829 iterations 3
Cbc0038I Pass  21: suminf.    0.32552 (5) obj. -15.4011 iterations 20
Cbc0038I Pass  22: suminf.    0.23115 (5) obj. -15.4011 iterations 3
Cbc0038I Pass  23: suminf.    0.56266 (3) obj. -15.4011 iterations 10
Cbc0038I Pass  24: suminf.    0.56266 (3) obj. -15.4011 iterations 0
Cbc0038I Pass  25: suminf.    0.57130 (3) obj. -15.4011 iterations 7
Cbc0038I Pass  26: suminf.    0.57130 (3) obj. -15.4011 iterations 0
Cbc0038I Pass  27: suminf.    0.44453 (1) obj. -15.4011 iterations 4
Cbc0038I Pass  28: suminf.    0.32319 (2) obj. -17.0474 iterations 2
Cbc0038I Pass  29: suminf.    0.49539 (2) obj. -15.4011 iterations 1
Cbc0038I Pass  30: suminf.    0.88850 (10) obj. -16.674 iterations 28
Cbc0038I Pass  31: suminf.    0.82812 (9) obj. -16.5952 iterations 7
Cbc0038I Pass  32: suminf.    1.35641 (12) obj. -15.4011 iterations 16
Cbc0038I Pass  33: suminf.    0.47530 (4) obj. -15.4011 iterations 9
Cbc0038I Pass  34: suminf.    0.45225 (5) obj. -15.6315 iterations 4
Cbc0038I Rounding solution of -29.1036 is better than previous of -11.0446

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 41 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -29.1036 to -31.8003 (0.05 seconds)
Cbc0038I Round again with cutoff of -36.3621
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass  35: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass  36: suminf.    2.13018 (27) obj. -36.3621 iterations 27
Cbc0038I Pass  37: suminf.    2.13018 (27) obj. -36.3621 iterations 1
Cbc0038I Pass  38: suminf.    2.26804 (25) obj. -36.3621 iterations 6
Cbc0038I Pass  39: suminf.    1.83520 (24) obj. -36.3621 iterations 3
Cbc0038I Pass  40: suminf.    2.14990 (23) obj. -36.3621 iterations 10
Cbc0038I Pass  41: suminf.    1.76443 (22) obj. -36.3621 iterations 4
Cbc0038I Pass  42: suminf.    2.29007 (22) obj. -36.3621 iterations 20
Cbc0038I Pass  43: suminf.    2.29007 (22) obj. -36.3621 iterations 0
Cbc0038I Pass  44: suminf.    2.15436 (21) obj. -36.3621 iterations 13
Cbc0038I Pass  45: suminf.    1.93603 (21) obj. -36.3621 iterations 3
Cbc0038I Pass  46: suminf.    2.15436 (21) obj. -36.3621 iterations 5
Cbc0038I Pass  47: suminf.    2.15982 (23) obj. -36.3621 iterations 21
Cbc0038I Pass  48: suminf.    2.09168 (22) obj. -36.3621 iterations 2
Cbc0038I Pass  49: suminf.    2.23847 (21) obj. -36.3621 iterations 13
Cbc0038I Pass  50: suminf.    1.82245 (20) obj. -36.3621 iterations 8
Cbc0038I Pass  51: suminf.    2.44773 (20) obj. -36.3621 iterations 14
Cbc0038I Pass  52: suminf.    1.86149 (21) obj. -36.3621 iterations 5
Cbc0038I Pass  53: suminf.    2.18959 (21) obj. -36.3621 iterations 5
Cbc0038I Pass  54: suminf.    2.60846 (21) obj. -36.3621 iterations 22
Cbc0038I Pass  55: suminf.    1.88898 (20) obj. -36.3621 iterations 6
Cbc0038I Pass  56: suminf.    1.74641 (21) obj. -36.3621 iterations 3
Cbc0038I Pass  57: suminf.    1.96795 (22) obj. -36.3621 iterations 11
Cbc0038I Pass  58: suminf.    1.94502 (22) obj. -36.3621 iterations 3
Cbc0038I Pass  59: suminf.    2.13279 (20) obj. -36.3621 iterations 3
Cbc0038I Pass  60: suminf.    2.28694 (23) obj. -36.3621 iterations 16
Cbc0038I Pass  61: suminf.    2.24639 (23) obj. -36.3621 iterations 2
Cbc0038I Pass  62: suminf.    2.63626 (23) obj. -36.3621 iterations 14
Cbc0038I Pass  63: suminf.    2.59780 (23) obj. -36.3621 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 38 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -31.8003 - took 0.04 seconds
Cbc0012I Integer solution of -31.800295 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 101 rows 117 columns, reduced to 9 rows 14 columns
Cbc0031I 62 added rows had average density of 17.145161
Cbc0013I At root node, 62 cuts changed objective from -54.608919 to -36.790666 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16811 row cuts average 9.1 elements, 1 column cuts (1 active)  in 0.183 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1150 row cuts average 99.7 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 224 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 796 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 322 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 139 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.700 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.800295 best solution, best possible -36.790666 (2.56 seconds)
Cbc0012I Integer solution of -32.28174 found by DiveCoefficient after 4428 iterations and 6 nodes (3.25 seconds)
Cbc0010I After 7 nodes, 7 on tree, -32.28174 best solution, best possible -36.790666 (3.26 seconds)
Cbc0010I After 25 nodes, 6 on tree, -32.28174 best solution, best possible -36.790666 (3.97 seconds)
Cbc0016I Integer solution of -32.319755 found by strong branching after 4961 iterations and 27 nodes (4.04 seconds)
Cbc0038I Full problem 101 rows 117 columns, reduced to 10 rows 17 columns
Cbc0010I After 46 nodes, 6 on tree, -32.319755 best solution, best possible -36.790666 (4.68 seconds)
Cbc0001I Search completed - best objective -32.319755, took 5806 iterations and 54 nodes (4.72 seconds)
Cbc0032I Strong branching done 704 times (11350 iterations), fathomed 10 nodes and fixed 6 variables
Cbc0035I Maximum depth 12, 99 variables fixed on reduced cost
Total time (CPU seconds):       3.22   (Wallclock seconds):       4.74

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 2.5936e-05 - average 1.93552e-07, 14 fixed columns
Coin0506I Presolve 102 (-32) rows, 60 (-16) columns and 316 (-96) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 56.226888
Clp0000I Optimal - objective value 56.226888
Coin0511I After Postsolve, objective 56.226888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.226888
Clp0000I Optimal - objective value 56.226888
Clp0000I Optimal - objective value 56.226888
Coin0511I After Postsolve, objective 56.226888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.22688841 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.42397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.22177 iterations 51
Cbc0038I Solution found of 5.22177
Cbc0038I Relaxing continuous gives 5.22177
Cbc0038I Rounding solution of -4.30324 is better than previous of 5.22177

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 72 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -4.30324 to -32.3198 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.7106
Cbc0038I Pass   2: suminf.    4.24022 (13) obj. -34.7106 iterations 19
Cbc0038I Pass   3: suminf.    2.63394 (9) obj. -34.7106 iterations 13
Cbc0038I Pass   4: suminf.    2.62838 (10) obj. -34.7106 iterations 7
Cbc0038I Pass   5: suminf.    1.46218 (4) obj. -34.7106 iterations 12
Cbc0038I Pass   6: suminf.    1.39413 (4) obj. -34.7106 iterations 1
Cbc0038I Pass   7: suminf.    0.94229 (3) obj. -34.7106 iterations 4
Cbc0038I Pass   8: suminf.    0.87119 (3) obj. -34.7106 iterations 1
Cbc0038I Pass   9: suminf.    1.39413 (4) obj. -34.7106 iterations 3
Cbc0038I Pass  10: suminf.    1.94287 (6) obj. -34.7106 iterations 17
Cbc0038I Pass  11: suminf.    1.65855 (7) obj. -34.7106 iterations 6
Cbc0038I Pass  12: suminf.    1.92830 (5) obj. -34.7106 iterations 16
Cbc0038I Pass  13: suminf.    1.45430 (4) obj. -34.7106 iterations 4
Cbc0038I Pass  14: suminf.    1.71606 (5) obj. -34.7106 iterations 4
Cbc0038I Pass  15: suminf.    1.39795 (5) obj. -34.7106 iterations 2
Cbc0038I Pass  16: suminf.    1.80598 (6) obj. -34.7106 iterations 4
Cbc0038I Pass  17: suminf.    3.48296 (14) obj. -34.7106 iterations 19
Cbc0038I Pass  18: suminf.    1.64700 (5) obj. -34.7106 iterations 20
Cbc0038I Pass  19: suminf.    1.64086 (5) obj. -34.7106 iterations 2
Cbc0038I Pass  20: suminf.    1.30463 (6) obj. -34.7106 iterations 7
Cbc0038I Pass  21: suminf.    1.23675 (6) obj. -34.7106 iterations 1
Cbc0038I Pass  22: suminf.    2.28662 (5) obj. -34.7106 iterations 6
Cbc0038I Pass  23: suminf.    1.46082 (5) obj. -34.7106 iterations 1
Cbc0038I Pass  24: suminf.    1.71378 (5) obj. -34.7106 iterations 3
Cbc0038I Pass  25: suminf.    1.53073 (5) obj. -34.7106 iterations 1
Cbc0038I Pass  26: suminf.    1.46082 (5) obj. -34.7106 iterations 5
Cbc0038I Pass  27: suminf.    4.65540 (14) obj. -34.7106 iterations 27
Cbc0038I Pass  28: suminf.    2.30869 (9) obj. -34.7106 iterations 26
Cbc0038I Pass  29: suminf.    2.94799 (8) obj. -34.7106 iterations 13
Cbc0038I Pass  30: suminf.    1.74860 (5) obj. -34.7106 iterations 4
Cbc0038I Pass  31: suminf.    1.35830 (4) obj. -34.7106 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 86 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -32.3198 - took 0.08 seconds
Cbc0012I Integer solution of -32.319755 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 72 rows 43 columns
Cbc0031I 33 added rows had average density of 49.636364
Cbc0013I At root node, 33 cuts changed objective from -56.226888 to -47.720271 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11791 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1485 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 75.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.319755 best solution, best possible -47.720271 (0.93 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 13 rows 11 columns
Cbc0038I Full problem 134 rows 76 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -32.319755, took 10106 iterations and 106 nodes (1.21 seconds)
Cbc0032I Strong branching done 812 times (13094 iterations), fathomed 14 nodes and fixed 31 variables
Cbc0035I Maximum depth 22, 370 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 117 (-36) columns and 1816 (-1488) elements
Clp1000I sum of infeasibilities 8.85601e-08 - average 8.76833e-10, 21 fixed columns
Coin0506I Presolve 74 (-27) rows, 90 (-27) columns and 1161 (-655) elements
Clp0006I 0  Obj 54.223284 Dual inf 6.2101869 (90)
Clp0014I Perturbing problem by 0.001% of 1.8747287 - largest nonzero change 2.8745162e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 65.209993
Clp0000I Optimal - objective value 65.209993
Coin0511I After Postsolve, objective 65.209993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.209993
Clp0000I Optimal - objective value 65.209993
Clp0000I Optimal - objective value 65.209993
Clp0000I Optimal - objective value 65.209993
Coin0511I After Postsolve, objective 65.209993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.20999299 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 117 columns (117 integer (117 of which binary)) and 1820 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.132%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.00293
Cbc0038I Pass   1: suminf.    1.60338 (31) obj. -47.6146 iterations 20
Cbc0038I Pass   2: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass   3: suminf.    0.64707 (18) obj. -22.0091 iterations 13
Cbc0038I Pass   4: suminf.    0.21809 (8) obj. -11.4898 iterations 10
Cbc0038I Solution found of -3.70785
Cbc0038I Rounding solution of -11.0446 is better than previous of -3.70785

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -15.4011
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass   6: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass   7: suminf.    0.16158 (3) obj. -15.4011 iterations 29
Cbc0038I Pass   8: suminf.    0.15373 (3) obj. -15.4875 iterations 1
Cbc0038I Pass   9: suminf.    0.30750 (2) obj. -15.4011 iterations 6
Cbc0038I Pass  10: suminf.    0.30750 (2) obj. -15.4011 iterations 1
Cbc0038I Pass  11: suminf.    0.62700 (2) obj. -15.4011 iterations 7
Cbc0038I Pass  12: suminf.    0.19215 (2) obj. -15.4011 iterations 3
Cbc0038I Pass  13: suminf.    1.10291 (9) obj. -21.8185 iterations 22
Cbc0038I Pass  14: suminf.    0.32429 (6) obj. -20.7367 iterations 6
Cbc0038I Pass  15: suminf.    0.15872 (2) obj. -15.4011 iterations 9
Cbc0038I Pass  16: suminf.    0.15872 (2) obj. -15.4011 iterations 1
Cbc0038I Pass  17: suminf.    0.65075 (2) obj. -15.4011 iterations 8
Cbc0038I Pass  18: suminf.    1.74759 (11) obj. -15.4011 iterations 37
Cbc0038I Pass  19: suminf.    1.11936 (10) obj. -15.4011 iterations 10
Cbc0038I Pass  20: suminf.    0.82222 (10) obj. -17.8829 iterations 3
Cbc0038I Pass  21: suminf.    0.32552 (5) obj. -15.4011 iterations 20
Cbc0038I Pass  22: suminf.    0.23115 (5) obj. -15.4011 iterations 3
Cbc0038I Pass  23: suminf.    0.56266 (3) obj. -15.4011 iterations 10
Cbc0038I Pass  24: suminf.    0.56266 (3) obj. -15.4011 iterations 0
Cbc0038I Pass  25: suminf.    0.57130 (3) obj. -15.4011 iterations 7
Cbc0038I Pass  26: suminf.    0.57130 (3) obj. -15.4011 iterations 0
Cbc0038I Pass  27: suminf.    0.44453 (1) obj. -15.4011 iterations 4
Cbc0038I Pass  28: suminf.    0.32319 (2) obj. -17.0474 iterations 2
Cbc0038I Pass  29: suminf.    0.49539 (2) obj. -15.4011 iterations 1
Cbc0038I Pass  30: suminf.    0.88850 (10) obj. -16.674 iterations 28
Cbc0038I Pass  31: suminf.    0.82812 (9) obj. -16.5952 iterations 7
Cbc0038I Pass  32: suminf.    1.35641 (12) obj. -15.4011 iterations 16
Cbc0038I Pass  33: suminf.    0.47530 (4) obj. -15.4011 iterations 9
Cbc0038I Pass  34: suminf.    0.45225 (5) obj. -15.6315 iterations 4
Cbc0038I Rounding solution of -29.1036 is better than previous of -11.0446

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 41 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -29.1036 to -31.8003 (0.06 seconds)
Cbc0038I Round again with cutoff of -36.3621
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass  35: suminf.    1.60338 (31) obj. -47.6146 iterations 0
Cbc0038I Pass  36: suminf.    2.13018 (27) obj. -36.3621 iterations 27
Cbc0038I Pass  37: suminf.    2.13018 (27) obj. -36.3621 iterations 1
Cbc0038I Pass  38: suminf.    2.26804 (25) obj. -36.3621 iterations 6
Cbc0038I Pass  39: suminf.    1.83520 (24) obj. -36.3621 iterations 3
Cbc0038I Pass  40: suminf.    2.14990 (23) obj. -36.3621 iterations 10
Cbc0038I Pass  41: suminf.    1.76443 (22) obj. -36.3621 iterations 4
Cbc0038I Pass  42: suminf.    2.29007 (22) obj. -36.3621 iterations 20
Cbc0038I Pass  43: suminf.    2.29007 (22) obj. -36.3621 iterations 0
Cbc0038I Pass  44: suminf.    2.15436 (21) obj. -36.3621 iterations 13
Cbc0038I Pass  45: suminf.    1.93603 (21) obj. -36.3621 iterations 3
Cbc0038I Pass  46: suminf.    2.15436 (21) obj. -36.3621 iterations 5
Cbc0038I Pass  47: suminf.    2.15982 (23) obj. -36.3621 iterations 21
Cbc0038I Pass  48: suminf.    2.09168 (22) obj. -36.3621 iterations 2
Cbc0038I Pass  49: suminf.    2.23847 (21) obj. -36.3621 iterations 13
Cbc0038I Pass  50: suminf.    1.82245 (20) obj. -36.3621 iterations 8
Cbc0038I Pass  51: suminf.    2.44773 (20) obj. -36.3621 iterations 14
Cbc0038I Pass  52: suminf.    1.86149 (21) obj. -36.3621 iterations 5
Cbc0038I Pass  53: suminf.    2.18959 (21) obj. -36.3621 iterations 5
Cbc0038I Pass  54: suminf.    2.60846 (21) obj. -36.3621 iterations 22
Cbc0038I Pass  55: suminf.    1.88898 (20) obj. -36.3621 iterations 6
Cbc0038I Pass  56: suminf.    1.74641 (21) obj. -36.3621 iterations 3
Cbc0038I Pass  57: suminf.    1.96795 (22) obj. -36.3621 iterations 11
Cbc0038I Pass  58: suminf.    1.94502 (22) obj. -36.3621 iterations 3
Cbc0038I Pass  59: suminf.    2.13279 (20) obj. -36.3621 iterations 3
Cbc0038I Pass  60: suminf.    2.28694 (23) obj. -36.3621 iterations 16
Cbc0038I Pass  61: suminf.    2.24639 (23) obj. -36.3621 iterations 2
Cbc0038I Pass  62: suminf.    2.63626 (23) obj. -36.3621 iterations 14
Cbc0038I Pass  63: suminf.    2.59780 (23) obj. -36.3621 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 38 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -31.8003 - took 0.04 seconds
Cbc0012I Integer solution of -31.800295 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 101 rows 117 columns, reduced to 9 rows 14 columns
Cbc0031I 62 added rows had average density of 17.145161
Cbc0013I At root node, 62 cuts changed objective from -54.608919 to -36.790666 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16811 row cuts average 9.1 elements, 1 column cuts (1 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1150 row cuts average 99.7 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 224 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 796 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 322 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 139 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.717 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.800295 best solution, best possible -36.790666 (2.63 seconds)
Cbc0012I Integer solution of -32.28174 found by DiveCoefficient after 4428 iterations and 6 nodes (3.35 seconds)
Cbc0010I After 6 nodes, 7 on tree, -32.28174 best solution, best possible -36.790666 (3.35 seconds)
Cbc0010I After 24 nodes, 6 on tree, -32.28174 best solution, best possible -36.790666 (4.07 seconds)
Cbc0016I Integer solution of -32.319755 found by strong branching after 4961 iterations and 27 nodes (4.16 seconds)
Cbc0038I Full problem 101 rows 117 columns, reduced to 10 rows 17 columns
Cbc0010I After 45 nodes, 7 on tree, -32.319755 best solution, best possible -36.790666 (4.78 seconds)
Cbc0001I Search completed - best objective -32.319755, took 5806 iterations and 54 nodes (4.86 seconds)
Cbc0032I Strong branching done 704 times (11350 iterations), fathomed 10 nodes and fixed 6 variables
Cbc0035I Maximum depth 12, 99 variables fixed on reduced cost
Total time (CPU seconds):       3.29   (Wallclock seconds):       4.87

