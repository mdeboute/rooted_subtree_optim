Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 177 (-28) rows, 101 (-2) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 4.24024e-05 - average 2.39562e-07, 13 fixed columns
Coin0506I Presolve 149 (-28) rows, 87 (-14) columns and 464 (-84) elements
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 0.26475287 - largest nonzero change 0 ( 0%) - largest zero change 1.9643641e-05
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Coin0511I After Postsolve, objective 44.811612, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Coin0511I After Postsolve, objective 44.811612, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.81161214 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 177 rows, 101 columns (100 integer (100 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.854%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 13.9633
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.0357 iterations 93
Cbc0038I Solution found of 11.0357
Cbc0038I Relaxing continuous gives 11.0357
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 105 rows 63 columns
Cbc0038I Mini branch and bound improved solution from 11.0357 to -16.143 (0.06 seconds)
Cbc0038I Round again with cutoff of -19.01
Cbc0038I Pass   2: suminf.    4.02607 (16) obj. -19.01 iterations 24
Cbc0038I Pass   3: suminf.    2.46504 (10) obj. -19.01 iterations 10
Cbc0038I Pass   4: suminf.    2.46504 (10) obj. -19.01 iterations 0
Cbc0038I Pass   5: suminf.    3.42571 (9) obj. -19.01 iterations 13
Cbc0038I Pass   6: suminf.    2.73669 (8) obj. -19.01 iterations 2
Cbc0038I Pass   7: suminf.    2.38201 (7) obj. -19.01 iterations 1
Cbc0038I Pass   8: suminf.    1.92984 (7) obj. -19.01 iterations 13
Cbc0038I Pass   9: suminf.    1.92984 (7) obj. -19.01 iterations 0
Cbc0038I Pass  10: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  11: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  12: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  13: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  14: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  15: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  16: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  17: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  18: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  19: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  20: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  21: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  22: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  23: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  24: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  25: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  26: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  27: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  28: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  29: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  30: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  31: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 106 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -16.143 to -16.2469 (0.11 seconds)
Cbc0038I Round again with cutoff of -24.1703
Cbc0038I Pass  31: suminf.    5.15096 (21) obj. -24.1703 iterations 3
Cbc0038I Pass  32: suminf.    3.51325 (12) obj. -24.1703 iterations 17
Cbc0038I Pass  33: suminf.    3.51325 (12) obj. -24.1703 iterations 0
Cbc0038I Pass  34: suminf.    4.56419 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  35: suminf.    3.14391 (9) obj. -24.1703 iterations 6
Cbc0038I Pass  36: suminf.    2.97084 (8) obj. -24.1703 iterations 8
Cbc0038I Pass  37: suminf.    3.58862 (11) obj. -24.1703 iterations 12
Cbc0038I Pass  38: suminf.    2.96855 (10) obj. -24.1703 iterations 4
Cbc0038I Pass  39: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  40: suminf.    3.67795 (11) obj. -24.1703 iterations 14
Cbc0038I Pass  41: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  42: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  43: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  44: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  45: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  46: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  47: suminf.    3.67795 (11) obj. -24.1703 iterations 14
Cbc0038I Pass  48: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  49: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  50: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  51: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  52: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  53: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  54: suminf.    3.67795 (11) obj. -24.1703 iterations 16
Cbc0038I Pass  55: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  56: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  57: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  58: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  59: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  60: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 106 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -16.2469 - took 0.16 seconds
Cbc0012I Integer solution of -16.24692 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 105 rows 63 columns
Cbc0031I 42 added rows had average density of 66.404762
Cbc0013I At root node, 42 cuts changed objective from -44.811612 to -36.762744 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24849 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3675 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.24692 best solution, best possible -36.762744 (1.92 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 99 rows 61 columns
Cbc0016I Integer solution of -16.32655 found by strong branching after 14400 iterations and 88 nodes (2.44 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 2 rows 6 columns
Cbc0016I Integer solution of -16.66131 found by strong branching after 15188 iterations and 147 nodes (2.54 seconds)
Cbc0010I After 172 nodes, 14 on tree, -16.66131 best solution, best possible -36.762744 (2.62 seconds)
Cbc0001I Search completed - best objective -16.66131, took 17378 iterations and 200 nodes (2.65 seconds)
Cbc0032I Strong branching done 1618 times (31014 iterations), fathomed 29 nodes and fixed 95 variables
Cbc0035I Maximum depth 40, 671 variables fixed on reduced cost
Total time (CPU seconds):       2.60   (Wallclock seconds):       2.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-83) rows, 144 (-58) columns and 2487 (-3166) elements
Clp1000I sum of infeasibilities 3.34382e-08 - average 2.76349e-10, 29 fixed columns
Coin0506I Presolve 94 (-27) rows, 113 (-31) columns and 1742 (-745) elements
Clp0006I 0  Obj 34.655278 Dual inf 7.4181514 (113)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.523627 - largest nonzero change 2.841424e-05 ( 0.0024275985%) - largest zero change 2.7560947e-05
Clp0000I Optimal - objective value 50.367437
Clp0000I Optimal - objective value 50.367437
Coin0511I After Postsolve, objective 50.367437, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.367437
Clp0000I Optimal - objective value 50.367437
Clp0000I Optimal - objective value 50.367437
Clp0000I Optimal - objective value 50.367437
Coin0511I After Postsolve, objective 50.367437, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.36743699 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 144 columns (144 integer (144 of which binary)) and 2490 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.560%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 5.21836
Cbc0038I Pass   1: suminf.    3.78890 (34) obj. -34.4662 iterations 20
Cbc0038I Pass   2: suminf.    3.12233 (28) obj. -32.9543 iterations 2
Cbc0038I Pass   3: suminf.    0.95255 (13) obj. -15.0681 iterations 15
Cbc0038I Solution found of -3.02065
Cbc0038I Rounding solution of -4.64328 is better than previous of -3.02065

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -4.64328 to -5.125 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.35497
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.78890 (34) obj. -34.4662 iterations 0
Cbc0038I Pass   5: suminf.    3.12233 (28) obj. -32.9543 iterations 17
Cbc0038I Pass   6: suminf.    0.37506 (8) obj. -10.6456 iterations 20
Cbc0038I Pass   7: suminf.    0.59939 (3) obj. -8.35497 iterations 28
Cbc0038I Pass   8: suminf.    0.59939 (3) obj. -8.35497 iterations 0
Cbc0038I Pass   9: suminf.    1.26635 (6) obj. -8.35497 iterations 7
Cbc0038I Pass  10: suminf.    0.97533 (5) obj. -8.35497 iterations 10
Cbc0038I Pass  11: suminf.    0.97533 (5) obj. -8.35497 iterations 0
Cbc0038I Pass  12: suminf.    0.82299 (5) obj. -8.35497 iterations 7
Cbc0038I Pass  13: suminf.    0.82299 (5) obj. -8.35497 iterations 0
Cbc0038I Pass  14: suminf.    1.17509 (5) obj. -8.35497 iterations 19
Cbc0038I Pass  15: suminf.    1.16862 (5) obj. -8.35497 iterations 5
Cbc0038I Pass  16: suminf.    1.69763 (5) obj. -8.35497 iterations 7
Cbc0038I Pass  17: suminf.    1.69763 (5) obj. -8.35497 iterations 0
Cbc0038I Pass  18: suminf.    0.94179 (4) obj. -8.35497 iterations 12
Cbc0038I Pass  19: suminf.    0.84565 (3) obj. -8.35497 iterations 13
Cbc0038I Pass  20: suminf.    0.83852 (8) obj. -8.35497 iterations 4
Cbc0038I Pass  21: suminf.    0.83852 (8) obj. -8.35497 iterations 0
Cbc0038I Pass  22: suminf.    0.87884 (6) obj. -8.35497 iterations 15
Cbc0038I Pass  23: suminf.    0.87884 (6) obj. -8.35497 iterations 1
Cbc0038I Pass  24: suminf.    1.16068 (6) obj. -8.35497 iterations 15
Cbc0038I Pass  25: suminf.    0.97959 (6) obj. -8.35497 iterations 4
Cbc0038I Pass  26: suminf.    1.73943 (6) obj. -8.35497 iterations 13
Cbc0038I Pass  27: suminf.    0.72752 (4) obj. -8.35497 iterations 4
Cbc0038I Pass  28: suminf.    0.62611 (4) obj. -8.35497 iterations 4
Cbc0038I Pass  29: suminf.    0.43295 (3) obj. -9.12594 iterations 3
Cbc0038I Pass  30: suminf.    1.32486 (4) obj. -8.35497 iterations 5
Cbc0038I Pass  31: suminf.    0.62366 (4) obj. -8.35497 iterations 2
Cbc0038I Pass  32: suminf.    3.28829 (20) obj. -8.35497 iterations 40
Cbc0038I Pass  33: suminf.    2.23759 (16) obj. -9.74556 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 15 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -5.125 to -5.31585 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.1687
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.78890 (34) obj. -34.4662 iterations 0
Cbc0038I Pass  34: suminf.    3.12233 (28) obj. -32.9543 iterations 17
Cbc0038I Pass  35: suminf.    1.21841 (15) obj. -16.8022 iterations 13
Cbc0038I Pass  36: suminf.    1.20200 (10) obj. -14.1687 iterations 38
Cbc0038I Pass  37: suminf.    1.20200 (10) obj. -14.1687 iterations 0
Cbc0038I Pass  38: suminf.    1.70536 (10) obj. -14.1687 iterations 12
Cbc0038I Pass  39: suminf.    1.38561 (10) obj. -14.1687 iterations 4
Cbc0038I Pass  40: suminf.    3.72703 (23) obj. -14.1687 iterations 33
Cbc0038I Pass  41: suminf.    2.02100 (17) obj. -14.1687 iterations 20
Cbc0038I Pass  42: suminf.    2.33760 (16) obj. -14.1687 iterations 17
Cbc0038I Pass  43: suminf.    2.18962 (16) obj. -14.1687 iterations 1
Cbc0038I Pass  44: suminf.    2.27682 (15) obj. -14.1687 iterations 6
Cbc0038I Pass  45: suminf.    1.55257 (14) obj. -14.1687 iterations 6
Cbc0038I Pass  46: suminf.    1.74379 (19) obj. -14.1687 iterations 9
Cbc0038I Pass  47: suminf.    1.60487 (12) obj. -14.1687 iterations 5
Cbc0038I Pass  48: suminf.    1.68698 (12) obj. -14.1687 iterations 5
Cbc0038I Pass  49: suminf.    1.68698 (12) obj. -14.1687 iterations 2
Cbc0038I Pass  50: suminf.    1.60487 (12) obj. -14.1687 iterations 6
Cbc0038I Pass  51: suminf.    2.49057 (21) obj. -14.1687 iterations 41
Cbc0038I Pass  52: suminf.    1.79216 (16) obj. -14.186 iterations 12
Cbc0038I Pass  53: suminf.    1.63085 (17) obj. -14.1687 iterations 11
Cbc0038I Pass  54: suminf.    1.69227 (14) obj. -14.1687 iterations 19
Cbc0038I Pass  55: suminf.    1.69227 (14) obj. -14.1687 iterations 1
Cbc0038I Pass  56: suminf.    1.81088 (12) obj. -14.1687 iterations 20
Cbc0038I Pass  57: suminf.    1.46871 (13) obj. -14.1687 iterations 6
Cbc0038I Pass  58: suminf.    1.49282 (13) obj. -14.1687 iterations 5
Cbc0038I Pass  59: suminf.    1.49282 (13) obj. -14.1687 iterations 2
Cbc0038I Pass  60: suminf.    2.28802 (20) obj. -14.1687 iterations 13
Cbc0038I Pass  61: suminf.    1.50356 (13) obj. -14.1687 iterations 9
Cbc0038I Pass  62: suminf.    1.46871 (13) obj. -14.1687 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 27 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -5.31585 to -10.2341 (0.11 seconds)
Cbc0038I Round again with cutoff of -21.1453
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.78890 (34) obj. -34.4662 iterations 0
Cbc0038I Pass  63: suminf.    3.12233 (28) obj. -32.9543 iterations 17
Cbc0038I Pass  64: suminf.    2.09117 (20) obj. -21.1453 iterations 35
Cbc0038I Pass  65: suminf.    2.09117 (20) obj. -21.1453 iterations 0
Cbc0038I Pass  66: suminf.    3.68567 (19) obj. -21.1453 iterations 18
Cbc0038I Pass  67: suminf.    3.54643 (19) obj. -21.2845 iterations 4
Cbc0038I Pass  68: suminf.    2.89196 (20) obj. -21.1453 iterations 14
Cbc0038I Pass  69: suminf.    2.87735 (18) obj. -21.1453 iterations 3
Cbc0038I Pass  70: suminf.    2.91178 (17) obj. -21.1453 iterations 5
Cbc0038I Pass  71: suminf.    2.82057 (18) obj. -21.1453 iterations 4
Cbc0038I Pass  72: suminf.    2.87735 (18) obj. -21.1453 iterations 5
Cbc0038I Pass  73: suminf.    3.34113 (19) obj. -21.1453 iterations 31
Cbc0038I Pass  74: suminf.    3.18066 (18) obj. -21.1453 iterations 2
Cbc0038I Pass  75: suminf.    3.26622 (18) obj. -21.1453 iterations 15
Cbc0038I Pass  76: suminf.    3.04489 (18) obj. -21.1453 iterations 1
Cbc0038I Pass  77: suminf.    3.26622 (18) obj. -21.1453 iterations 10
Cbc0038I Pass  78: suminf.    3.15152 (18) obj. -21.1453 iterations 2
Cbc0038I Pass  79: suminf.    3.33903 (18) obj. -21.1453 iterations 7
Cbc0038I Pass  80: suminf.    3.56259 (23) obj. -21.1453 iterations 21
Cbc0038I Pass  81: suminf.    2.93758 (22) obj. -21.1453 iterations 9
Cbc0038I Pass  82: suminf.    3.37067 (22) obj. -21.1453 iterations 16
Cbc0038I Pass  83: suminf.    3.02784 (22) obj. -21.4881 iterations 4
Cbc0038I Pass  84: suminf.    2.82569 (20) obj. -21.1453 iterations 23
Cbc0038I Pass  85: suminf.    2.81600 (28) obj. -21.1453 iterations 3
Cbc0038I Pass  86: suminf.    2.46182 (19) obj. -21.4835 iterations 13
Cbc0038I Pass  87: suminf.    2.85322 (20) obj. -21.1453 iterations 14
Cbc0038I Pass  88: suminf.    2.67006 (20) obj. -21.1453 iterations 27
Cbc0038I Pass  89: suminf.    2.67006 (20) obj. -21.1453 iterations 4
Cbc0038I Pass  90: suminf.    3.59516 (28) obj. -21.1453 iterations 19
Cbc0038I Pass  91: suminf.    3.22497 (19) obj. -21.1453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -10.2341 - took 0.10 seconds
Cbc0012I Integer solution of -10.23411 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 121 rows 144 columns, reduced to 11 rows 15 columns
Cbc0031I 84 added rows had average density of 21.488095
Cbc0013I At root node, 84 cuts changed objective from -37.423812 to -19.663966 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14029 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1593 row cuts average 135.8 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 92 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 859 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 970 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 327 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 255 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.552 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.23411 best solution, best possible -19.663966 (2.39 seconds)
Cbc0012I Integer solution of -15.70387 found by rounding after 5412 iterations and 1 nodes (2.41 seconds)
Cbc0012I Integer solution of -15.82902 found by rounding after 5881 iterations and 4 nodes (2.80 seconds)
Cbc0012I Integer solution of -16.14301 found by DiveCoefficient after 5881 iterations and 4 nodes (2.80 seconds)
Cbc0016I Integer solution of -16.66131 found by strong branching after 6011 iterations and 7 nodes (3.08 seconds)
Cbc0010I After 9 nodes, 6 on tree, -16.66131 best solution, best possible -19.663966 (3.13 seconds)
Cbc0010I After 21 nodes, 4 on tree, -16.66131 best solution, best possible -19.663966 (3.84 seconds)
Cbc0010I After 32 nodes, 7 on tree, -16.66131 best solution, best possible -19.663966 (4.55 seconds)
Cbc0001I Search completed - best objective -16.66131, took 8028 iterations and 46 nodes (4.88 seconds)
Cbc0032I Strong branching done 658 times (14250 iterations), fathomed 8 nodes and fixed 3 variables
Cbc0035I Maximum depth 13, 130 variables fixed on reduced cost
Total time (CPU seconds):       3.71   (Wallclock seconds):       4.90

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 177 (-28) rows, 101 (-2) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 4.24024e-05 - average 2.39562e-07, 13 fixed columns
Coin0506I Presolve 149 (-28) rows, 87 (-14) columns and 464 (-84) elements
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 0.26475287 - largest nonzero change 0 ( 0%) - largest zero change 1.9643641e-05
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Coin0511I After Postsolve, objective 44.811612, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Coin0511I After Postsolve, objective 44.811612, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.81161214 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 177 rows, 101 columns (100 integer (100 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.854%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 13.9633
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.0357 iterations 93
Cbc0038I Solution found of 11.0357
Cbc0038I Relaxing continuous gives 11.0357
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 105 rows 63 columns
Cbc0038I Mini branch and bound improved solution from 11.0357 to -16.143 (0.07 seconds)
Cbc0038I Round again with cutoff of -19.01
Cbc0038I Pass   2: suminf.    4.02607 (16) obj. -19.01 iterations 24
Cbc0038I Pass   3: suminf.    2.46504 (10) obj. -19.01 iterations 10
Cbc0038I Pass   4: suminf.    2.46504 (10) obj. -19.01 iterations 0
Cbc0038I Pass   5: suminf.    3.42571 (9) obj. -19.01 iterations 13
Cbc0038I Pass   6: suminf.    2.73669 (8) obj. -19.01 iterations 2
Cbc0038I Pass   7: suminf.    2.38201 (7) obj. -19.01 iterations 1
Cbc0038I Pass   8: suminf.    1.92984 (7) obj. -19.01 iterations 13
Cbc0038I Pass   9: suminf.    1.92984 (7) obj. -19.01 iterations 0
Cbc0038I Pass  10: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  11: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  12: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  13: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  14: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  15: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  16: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  17: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  18: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  19: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  20: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  21: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  22: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  23: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  24: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  25: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  26: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  27: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  28: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  29: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  30: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  31: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 106 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -16.143 to -16.2469 (0.12 seconds)
Cbc0038I Round again with cutoff of -24.1703
Cbc0038I Pass  31: suminf.    5.15096 (21) obj. -24.1703 iterations 3
Cbc0038I Pass  32: suminf.    3.51325 (12) obj. -24.1703 iterations 17
Cbc0038I Pass  33: suminf.    3.51325 (12) obj. -24.1703 iterations 0
Cbc0038I Pass  34: suminf.    4.56419 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  35: suminf.    3.14391 (9) obj. -24.1703 iterations 6
Cbc0038I Pass  36: suminf.    2.97084 (8) obj. -24.1703 iterations 8
Cbc0038I Pass  37: suminf.    3.58862 (11) obj. -24.1703 iterations 12
Cbc0038I Pass  38: suminf.    2.96855 (10) obj. -24.1703 iterations 4
Cbc0038I Pass  39: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  40: suminf.    3.67795 (11) obj. -24.1703 iterations 14
Cbc0038I Pass  41: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  42: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  43: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  44: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  45: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  46: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  47: suminf.    3.67795 (11) obj. -24.1703 iterations 14
Cbc0038I Pass  48: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  49: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  50: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  51: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  52: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  53: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  54: suminf.    3.67795 (11) obj. -24.1703 iterations 16
Cbc0038I Pass  55: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  56: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  57: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  58: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  59: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  60: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 106 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -16.2469 - took 0.18 seconds
Cbc0012I Integer solution of -16.24692 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 105 rows 63 columns
Cbc0031I 42 added rows had average density of 66.404762
Cbc0013I At root node, 42 cuts changed objective from -44.811612 to -36.762744 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24849 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3675 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.24692 best solution, best possible -36.762744 (2.10 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 99 rows 61 columns
Cbc0016I Integer solution of -16.32655 found by strong branching after 14400 iterations and 88 nodes (2.71 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 2 rows 6 columns
Cbc0010I After 144 nodes, 13 on tree, -16.32655 best solution, best possible -36.762744 (2.80 seconds)
Cbc0016I Integer solution of -16.66131 found by strong branching after 15188 iterations and 147 nodes (2.81 seconds)
Cbc0001I Search completed - best objective -16.66131, took 17378 iterations and 200 nodes (2.92 seconds)
Cbc0032I Strong branching done 1618 times (31014 iterations), fathomed 29 nodes and fixed 95 variables
Cbc0035I Maximum depth 40, 671 variables fixed on reduced cost
Total time (CPU seconds):       2.81   (Wallclock seconds):       2.95

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-84) rows, 144 (-59) columns and 2487 (-3167) elements
Clp1000I sum of infeasibilities 3.34382e-08 - average 2.76349e-10, 29 fixed columns
Coin0506I Presolve 94 (-27) rows, 113 (-31) columns and 1742 (-745) elements
Clp0006I 0  Obj 34.655278 Dual inf 7.4181514 (113)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.523627 - largest nonzero change 2.841424e-05 ( 0.0024275985%) - largest zero change 2.7560947e-05
Clp0000I Optimal - objective value 50.367437
Clp0000I Optimal - objective value 50.367437
Coin0511I After Postsolve, objective 50.367437, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.367437
Clp0000I Optimal - objective value 50.367437
Clp0000I Optimal - objective value 50.367437
Clp0000I Optimal - objective value 50.367437
Coin0511I After Postsolve, objective 50.367437, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.36743699 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 144 columns (144 integer (144 of which binary)) and 2490 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.560%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 5.21836
Cbc0038I Pass   1: suminf.    3.78890 (34) obj. -34.4662 iterations 20
Cbc0038I Pass   2: suminf.    3.12233 (28) obj. -32.9543 iterations 2
Cbc0038I Pass   3: suminf.    0.95255 (13) obj. -15.0681 iterations 15
Cbc0038I Solution found of -3.02065
Cbc0038I Rounding solution of -4.64328 is better than previous of -3.02065

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -4.64328 to -5.125 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.35497
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.78890 (34) obj. -34.4662 iterations 0
Cbc0038I Pass   5: suminf.    3.12233 (28) obj. -32.9543 iterations 17
Cbc0038I Pass   6: suminf.    0.37506 (8) obj. -10.6456 iterations 20
Cbc0038I Pass   7: suminf.    0.59939 (3) obj. -8.35497 iterations 28
Cbc0038I Pass   8: suminf.    0.59939 (3) obj. -8.35497 iterations 0
Cbc0038I Pass   9: suminf.    1.26635 (6) obj. -8.35497 iterations 7
Cbc0038I Pass  10: suminf.    0.97533 (5) obj. -8.35497 iterations 10
Cbc0038I Pass  11: suminf.    0.97533 (5) obj. -8.35497 iterations 0
Cbc0038I Pass  12: suminf.    0.82299 (5) obj. -8.35497 iterations 7
Cbc0038I Pass  13: suminf.    0.82299 (5) obj. -8.35497 iterations 0
Cbc0038I Pass  14: suminf.    1.17509 (5) obj. -8.35497 iterations 19
Cbc0038I Pass  15: suminf.    1.16862 (5) obj. -8.35497 iterations 5
Cbc0038I Pass  16: suminf.    1.69763 (5) obj. -8.35497 iterations 7
Cbc0038I Pass  17: suminf.    1.69763 (5) obj. -8.35497 iterations 0
Cbc0038I Pass  18: suminf.    0.94179 (4) obj. -8.35497 iterations 12
Cbc0038I Pass  19: suminf.    0.84565 (3) obj. -8.35497 iterations 13
Cbc0038I Pass  20: suminf.    0.83852 (8) obj. -8.35497 iterations 4
Cbc0038I Pass  21: suminf.    0.83852 (8) obj. -8.35497 iterations 0
Cbc0038I Pass  22: suminf.    0.87884 (6) obj. -8.35497 iterations 15
Cbc0038I Pass  23: suminf.    0.87884 (6) obj. -8.35497 iterations 1
Cbc0038I Pass  24: suminf.    1.16068 (6) obj. -8.35497 iterations 15
Cbc0038I Pass  25: suminf.    0.97959 (6) obj. -8.35497 iterations 4
Cbc0038I Pass  26: suminf.    1.73943 (6) obj. -8.35497 iterations 13
Cbc0038I Pass  27: suminf.    0.72752 (4) obj. -8.35497 iterations 4
Cbc0038I Pass  28: suminf.    0.62611 (4) obj. -8.35497 iterations 4
Cbc0038I Pass  29: suminf.    0.43295 (3) obj. -9.12594 iterations 3
Cbc0038I Pass  30: suminf.    1.32486 (4) obj. -8.35497 iterations 5
Cbc0038I Pass  31: suminf.    0.62366 (4) obj. -8.35497 iterations 2
Cbc0038I Pass  32: suminf.    3.28829 (20) obj. -8.35497 iterations 40
Cbc0038I Pass  33: suminf.    2.23759 (16) obj. -9.74556 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 15 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -5.125 to -5.31585 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.1687
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.78890 (34) obj. -34.4662 iterations 0
Cbc0038I Pass  34: suminf.    3.12233 (28) obj. -32.9543 iterations 17
Cbc0038I Pass  35: suminf.    1.21841 (15) obj. -16.8022 iterations 13
Cbc0038I Pass  36: suminf.    1.20200 (10) obj. -14.1687 iterations 38
Cbc0038I Pass  37: suminf.    1.20200 (10) obj. -14.1687 iterations 0
Cbc0038I Pass  38: suminf.    1.70536 (10) obj. -14.1687 iterations 12
Cbc0038I Pass  39: suminf.    1.38561 (10) obj. -14.1687 iterations 4
Cbc0038I Pass  40: suminf.    3.72703 (23) obj. -14.1687 iterations 33
Cbc0038I Pass  41: suminf.    2.02100 (17) obj. -14.1687 iterations 20
Cbc0038I Pass  42: suminf.    2.33760 (16) obj. -14.1687 iterations 17
Cbc0038I Pass  43: suminf.    2.18962 (16) obj. -14.1687 iterations 1
Cbc0038I Pass  44: suminf.    2.27682 (15) obj. -14.1687 iterations 6
Cbc0038I Pass  45: suminf.    1.55257 (14) obj. -14.1687 iterations 6
Cbc0038I Pass  46: suminf.    1.74379 (19) obj. -14.1687 iterations 9
Cbc0038I Pass  47: suminf.    1.60487 (12) obj. -14.1687 iterations 5
Cbc0038I Pass  48: suminf.    1.68698 (12) obj. -14.1687 iterations 5
Cbc0038I Pass  49: suminf.    1.68698 (12) obj. -14.1687 iterations 2
Cbc0038I Pass  50: suminf.    1.60487 (12) obj. -14.1687 iterations 6
Cbc0038I Pass  51: suminf.    2.49057 (21) obj. -14.1687 iterations 41
Cbc0038I Pass  52: suminf.    1.79216 (16) obj. -14.186 iterations 12
Cbc0038I Pass  53: suminf.    1.63085 (17) obj. -14.1687 iterations 11
Cbc0038I Pass  54: suminf.    1.69227 (14) obj. -14.1687 iterations 19
Cbc0038I Pass  55: suminf.    1.69227 (14) obj. -14.1687 iterations 1
Cbc0038I Pass  56: suminf.    1.81088 (12) obj. -14.1687 iterations 20
Cbc0038I Pass  57: suminf.    1.46871 (13) obj. -14.1687 iterations 6
Cbc0038I Pass  58: suminf.    1.49282 (13) obj. -14.1687 iterations 5
Cbc0038I Pass  59: suminf.    1.49282 (13) obj. -14.1687 iterations 2
Cbc0038I Pass  60: suminf.    2.28802 (20) obj. -14.1687 iterations 13
Cbc0038I Pass  61: suminf.    1.50356 (13) obj. -14.1687 iterations 9
Cbc0038I Pass  62: suminf.    1.46871 (13) obj. -14.1687 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 27 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -5.31585 to -10.2341 (0.13 seconds)
Cbc0038I Round again with cutoff of -21.1453
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.78890 (34) obj. -34.4662 iterations 0
Cbc0038I Pass  63: suminf.    3.12233 (28) obj. -32.9543 iterations 17
Cbc0038I Pass  64: suminf.    2.09117 (20) obj. -21.1453 iterations 35
Cbc0038I Pass  65: suminf.    2.09117 (20) obj. -21.1453 iterations 0
Cbc0038I Pass  66: suminf.    3.68567 (19) obj. -21.1453 iterations 18
Cbc0038I Pass  67: suminf.    3.54643 (19) obj. -21.2845 iterations 4
Cbc0038I Pass  68: suminf.    2.89196 (20) obj. -21.1453 iterations 14
Cbc0038I Pass  69: suminf.    2.87735 (18) obj. -21.1453 iterations 3
Cbc0038I Pass  70: suminf.    2.91178 (17) obj. -21.1453 iterations 5
Cbc0038I Pass  71: suminf.    2.82057 (18) obj. -21.1453 iterations 4
Cbc0038I Pass  72: suminf.    2.87735 (18) obj. -21.1453 iterations 5
Cbc0038I Pass  73: suminf.    3.34113 (19) obj. -21.1453 iterations 31
Cbc0038I Pass  74: suminf.    3.18066 (18) obj. -21.1453 iterations 2
Cbc0038I Pass  75: suminf.    3.26622 (18) obj. -21.1453 iterations 15
Cbc0038I Pass  76: suminf.    3.04489 (18) obj. -21.1453 iterations 1
Cbc0038I Pass  77: suminf.    3.26622 (18) obj. -21.1453 iterations 10
Cbc0038I Pass  78: suminf.    3.15152 (18) obj. -21.1453 iterations 2
Cbc0038I Pass  79: suminf.    3.33903 (18) obj. -21.1453 iterations 7
Cbc0038I Pass  80: suminf.    3.56259 (23) obj. -21.1453 iterations 21
Cbc0038I Pass  81: suminf.    2.93758 (22) obj. -21.1453 iterations 9
Cbc0038I Pass  82: suminf.    3.37067 (22) obj. -21.1453 iterations 16
Cbc0038I Pass  83: suminf.    3.02784 (22) obj. -21.4881 iterations 4
Cbc0038I Pass  84: suminf.    2.82569 (20) obj. -21.1453 iterations 23
Cbc0038I Pass  85: suminf.    2.81600 (28) obj. -21.1453 iterations 3
Cbc0038I Pass  86: suminf.    2.46182 (19) obj. -21.4835 iterations 13
Cbc0038I Pass  87: suminf.    2.85322 (20) obj. -21.1453 iterations 14
Cbc0038I Pass  88: suminf.    2.67006 (20) obj. -21.1453 iterations 27
Cbc0038I Pass  89: suminf.    2.67006 (20) obj. -21.1453 iterations 4
Cbc0038I Pass  90: suminf.    3.59516 (28) obj. -21.1453 iterations 19
Cbc0038I Pass  91: suminf.    3.22497 (19) obj. -21.1453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -10.2341 - took 0.11 seconds
Cbc0012I Integer solution of -10.23411 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 121 rows 144 columns, reduced to 11 rows 15 columns
Cbc0031I 84 added rows had average density of 21.488095
Cbc0013I At root node, 84 cuts changed objective from -37.423812 to -19.663966 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14029 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1593 row cuts average 135.8 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 92 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 859 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 970 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 327 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 255 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.657 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.23411 best solution, best possible -19.663966 (2.85 seconds)
Cbc0012I Integer solution of -15.70387 found by rounding after 5412 iterations and 1 nodes (2.87 seconds)
Cbc0012I Integer solution of -15.82902 found by rounding after 5881 iterations and 4 nodes (3.31 seconds)
Cbc0012I Integer solution of -16.14301 found by DiveCoefficient after 5881 iterations and 4 nodes (3.31 seconds)
Cbc0010I After 6 nodes, 7 on tree, -16.14301 best solution, best possible -19.663966 (3.60 seconds)
Cbc0016I Integer solution of -16.66131 found by strong branching after 6011 iterations and 7 nodes (3.72 seconds)
Cbc0010I After 19 nodes, 3 on tree, -16.66131 best solution, best possible -19.663966 (4.31 seconds)
Cbc0010I After 23 nodes, 6 on tree, -16.66131 best solution, best possible -19.663966 (5.11 seconds)
Cbc0010I After 38 nodes, 7 on tree, -16.66131 best solution, best possible -19.663966 (5.89 seconds)
Cbc0001I Search completed - best objective -16.66131, took 8028 iterations and 46 nodes (5.96 seconds)
Cbc0032I Strong branching done 658 times (14250 iterations), fathomed 8 nodes and fixed 3 variables
Cbc0035I Maximum depth 13, 130 variables fixed on reduced cost
Total time (CPU seconds):       4.40   (Wallclock seconds):       5.99

