Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-21) rows, 42 (-8) columns and 233 (-52) elements
Clp1000I sum of infeasibilities 0.000605622 - average 7.76439e-06, 5 fixed columns
Coin0506I Presolve 68 (-10) rows, 37 (-5) columns and 203 (-30) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 1522.6858
Clp0000I Optimal - objective value 1522.6858
Coin0511I After Postsolve, objective 1522.6858, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1522.6858
Clp0000I Optimal - objective value 1522.6858
Clp0000I Optimal - objective value 1522.6858
Coin0511I After Postsolve, objective 1522.6858, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1522.685778 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 78 rows, 42 columns (41 integer (41 of which binary)) and 233 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.129%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 10.9013
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1375.38 iterations 38
Cbc0038I Solution found of 1375.38
Cbc0038I Relaxing continuous gives 1375.38
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 42 columns, reduced to 51 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 1375.38 to -347.677 (0.02 seconds)
Cbc0038I Round again with cutoff of -465.178
Cbc0038I Pass   2: suminf.    3.06794 (15) obj. -465.178 iterations 22
Cbc0038I Pass   3: suminf.    3.06794 (15) obj. -465.178 iterations 0
Cbc0038I Pass   4: suminf.    2.03759 (18) obj. -465.178 iterations 22
Cbc0038I Pass   5: suminf.    1.45033 (27) obj. -465.178 iterations 20
Cbc0038I Pass   6: suminf.    3.28436 (17) obj. -465.178 iterations 34
Cbc0038I Pass   7: suminf.    3.10823 (14) obj. -465.178 iterations 5
Cbc0038I Pass   8: suminf.    1.89879 (19) obj. -465.178 iterations 17
Cbc0038I Pass   9: suminf.    4.38844 (15) obj. -465.178 iterations 14
Cbc0038I Pass  10: suminf.    3.16003 (13) obj. -465.178 iterations 6
Cbc0038I Pass  11: suminf.    3.13619 (14) obj. -465.178 iterations 6
Cbc0038I Pass  12: suminf.    5.22068 (14) obj. -465.178 iterations 8
Cbc0038I Pass  13: suminf.    4.66061 (13) obj. -465.178 iterations 1
Cbc0038I Pass  14: suminf.    4.20666 (13) obj. -465.178 iterations 2
Cbc0038I Pass  15: suminf.    4.16848 (13) obj. -465.178 iterations 1
Cbc0038I Pass  16: suminf.    3.23738 (13) obj. -465.178 iterations 4
Cbc0038I Pass  17: suminf.    2.96421 (12) obj. -465.178 iterations 3
Cbc0038I Pass  18: suminf.    3.52689 (13) obj. -465.178 iterations 15
Cbc0038I Pass  19: suminf.    3.05917 (12) obj. -465.178 iterations 3
Cbc0038I Pass  20: suminf.    2.73150 (10) obj. -465.178 iterations 3
Cbc0038I Pass  21: suminf.    2.42115 (9) obj. -465.178 iterations 2
Cbc0038I Pass  22: suminf.    2.04400 (10) obj. -465.178 iterations 2
Cbc0038I Pass  23: suminf.    3.65485 (15) obj. -465.178 iterations 12
Cbc0038I Pass  24: suminf.    3.12782 (12) obj. -465.178 iterations 4
Cbc0038I Pass  25: suminf.    3.07739 (11) obj. -465.178 iterations 1
Cbc0038I Pass  26: suminf.    2.96091 (12) obj. -465.178 iterations 9
Cbc0038I Pass  27: suminf.    2.78042 (10) obj. -465.178 iterations 2
Cbc0038I Pass  28: suminf.    2.56241 (9) obj. -465.178 iterations 1
Cbc0038I Pass  29: suminf.    2.04400 (10) obj. -465.178 iterations 4
Cbc0038I Pass  30: suminf.    3.65485 (15) obj. -465.178 iterations 12
Cbc0038I Pass  31: suminf.    3.12782 (12) obj. -465.178 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 42 columns, reduced to 51 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -347.677 - took 0.04 seconds
Cbc0012I Integer solution of -347.677 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 78 rows 42 columns, reduced to 51 rows 28 columns
Cbc0031I 21 added rows had average density of 15.142857
Cbc0013I At root node, 163 cuts changed objective from -1522.6858 to -347.67701 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 361 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 81 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -347.677, took 131 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-14) rows, 88 (-8) columns and 1170 (-243) elements
Clp1000I sum of infeasibilities 1.12258e-08 - average 1.3364e-10, 41 fixed columns
Coin0506I Presolve 1 (-83) rows, 3 (-85) columns and 3 (-1167) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 3289.7546
Clp0000I Optimal - objective value 3289.7546
Coin0511I After Postsolve, objective 3289.7546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6745442 - largest nonzero change 2.9576128e-05 ( 0.0029576128%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 3289.7546
Clp0000I Optimal - objective value 3289.7546
Clp0000I Optimal - objective value 3289.7546
Coin0511I After Postsolve, objective 3289.7546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3289.754579 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 88 columns (88 integer (88 of which binary)) and 1172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.2918
Cbc0038I Pass   1: suminf.    0.45760 (9) obj. -721.307 iterations 9
Cbc0038I Pass   2: suminf.    0.45760 (9) obj. -721.307 iterations 1
Cbc0038I Solution found of 2510.88
Cbc0038I Rounding solution of 2362.86 is better than previous of 2510.88

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 88 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 2362.86 to 1947.61 (0.02 seconds)
Cbc0038I Round again with cutoff of 1562.12
Cbc0038I Pass   3: suminf.    0.45760 (9) obj. -721.307 iterations 0
Cbc0038I Pass   4: suminf.    0.45760 (9) obj. -721.307 iterations 1
Cbc0038I Pass   5: suminf.    0.35508 (1) obj. 1562.12 iterations 10
Cbc0038I Pass   6: suminf.    0.21429 (1) obj. 411.455 iterations 1
Cbc0038I Pass   7: suminf.    0.44706 (10) obj. 965.054 iterations 17
Cbc0038I Pass   8: suminf.    0.44706 (10) obj. 965.054 iterations 4
Cbc0038I Pass   9: suminf.    0.20218 (1) obj. 1562.12 iterations 10
Cbc0038I Pass  10: suminf.    0.14286 (1) obj. 1403.61 iterations 1
Cbc0038I Pass  11: suminf.    1.09163 (13) obj. 1464.73 iterations 22
Cbc0038I Pass  12: suminf.    1.09163 (13) obj. 1464.73 iterations 3
Cbc0038I Pass  13: suminf.    0.80539 (3) obj. 1562.12 iterations 12
Cbc0038I Pass  14: suminf.    0.43333 (2) obj. 1347.74 iterations 1
Cbc0038I Pass  15: suminf.    0.80682 (2) obj. 1562.12 iterations 2
Cbc0038I Pass  16: suminf.    1.62568 (9) obj. 1562.12 iterations 35
Cbc0038I Pass  17: suminf.    1.62568 (9) obj. 1562.12 iterations 6
Cbc0038I Pass  18: suminf.    0.71903 (8) obj. 1562.12 iterations 8
Cbc0038I Pass  19: suminf.    0.72216 (5) obj. 1562.12 iterations 1
Cbc0038I Pass  20: suminf.    0.57586 (2) obj. 1562.12 iterations 4
Cbc0038I Pass  21: suminf.    0.57586 (2) obj. 1562.12 iterations 0
Cbc0038I Pass  22: suminf.    0.51071 (2) obj. 1283.81 iterations 1
Cbc0038I Pass  23: suminf.    0.40656 (2) obj. 1562.12 iterations 1
Cbc0038I Pass  24: suminf.    1.35680 (10) obj. 1562.12 iterations 14
Cbc0038I Pass  25: suminf.    1.35680 (10) obj. 1562.12 iterations 2
Cbc0038I Pass  26: suminf.    0.41200 (2) obj. 1562.12 iterations 10
Cbc0038I Pass  27: suminf.    0.41200 (2) obj. 1562.12 iterations 0
Cbc0038I Pass  28: suminf.    0.55714 (2) obj. 1134.41 iterations 1
Cbc0038I Pass  29: suminf.    0.39707 (2) obj. 1562.12 iterations 1
Cbc0038I Pass  30: suminf.    2.05430 (11) obj. 1562.12 iterations 15
Cbc0038I Pass  31: suminf.    2.05430 (11) obj. 1562.12 iterations 2
Cbc0038I Pass  32: suminf.    0.65219 (2) obj. 1562.12 iterations 10
Cbc0038I Rounding solution of 1495.47 is better than previous of 1947.61

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 88 columns, reduced to 48 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 1495.47 to 1010.44 (0.04 seconds)
Cbc0038I Round again with cutoff of 426.886
Cbc0038I Pass  32: suminf.    0.45760 (9) obj. -721.307 iterations 0
Cbc0038I Pass  33: suminf.    0.45760 (9) obj. -721.307 iterations 1
Cbc0038I Pass  34: suminf.    0.22006 (1) obj. 426.886 iterations 9
Cbc0038I Pass  35: suminf.    0.21429 (1) obj. 411.455 iterations 1
Cbc0038I Pass  36: suminf.    3.08585 (25) obj. 426.886 iterations 17
Cbc0038I Pass  37: suminf.    2.26755 (21) obj. 426.886 iterations 4
Cbc0038I Pass  38: suminf.    1.14655 (11) obj. 426.886 iterations 20
Cbc0038I Pass  39: suminf.    1.13047 (15) obj. 426.886 iterations 1
Cbc0038I Pass  40: suminf.    1.07453 (3) obj. 426.886 iterations 14
Cbc0038I Pass  41: suminf.    0.53989 (2) obj. 426.886 iterations 2
Cbc0038I Pass  42: suminf.    0.90001 (2) obj. 426.886 iterations 2
Cbc0038I Pass  43: suminf.    1.79382 (8) obj. 426.886 iterations 13
Cbc0038I Pass  44: suminf.    1.38189 (7) obj. 53.6764 iterations 5
Cbc0038I Pass  45: suminf.    0.93900 (2) obj. 426.886 iterations 7
Cbc0038I Pass  46: suminf.    0.65000 (2) obj. 261.002 iterations 1
Cbc0038I Pass  47: suminf.    2.11473 (9) obj. 426.886 iterations 17
Cbc0038I Pass  48: suminf.    2.08020 (9) obj. 426.886 iterations 2
Cbc0038I Pass  49: suminf.    0.68065 (4) obj. 426.886 iterations 8
Cbc0038I Pass  50: suminf.    0.66977 (4) obj. 426.886 iterations 1
Cbc0038I Pass  51: suminf.    0.96546 (4) obj. 426.886 iterations 2
Cbc0038I Pass  52: suminf.    0.95924 (4) obj. 426.886 iterations 1
Cbc0038I Pass  53: suminf.    0.68065 (4) obj. 426.886 iterations 3
Cbc0038I Pass  54: suminf.    2.12928 (9) obj. 426.886 iterations 14
Cbc0038I Pass  55: suminf.    1.66858 (8) obj. 426.886 iterations 6
Cbc0038I Pass  56: suminf.    0.59822 (3) obj. 426.886 iterations 8
Cbc0038I Pass  57: suminf.    0.51175 (3) obj. 426.886 iterations 1
Cbc0038I Pass  58: suminf.    3.55251 (12) obj. 318.655 iterations 16
Cbc0038I Pass  59: suminf.    2.63752 (11) obj. 426.886 iterations 3
Cbc0038I Pass  60: suminf.    2.17796 (9) obj. 257.614 iterations 3
Cbc0038I Pass  61: suminf.    0.73551 (4) obj. 426.886 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 88 columns, reduced to 36 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 1010.44 to 733.206 (0.05 seconds)
Cbc0038I Round again with cutoff of -273.38
Cbc0038I Pass  61: suminf.    0.45760 (9) obj. -721.307 iterations 0
Cbc0038I Pass  62: suminf.    0.45760 (9) obj. -721.307 iterations 1
Cbc0038I Pass  63: suminf.    0.84999 (23) obj. -273.38 iterations 12
Cbc0038I Pass  64: suminf.    0.84999 (23) obj. -273.38 iterations 0
Cbc0038I Pass  65: suminf.    1.89399 (23) obj. -273.38 iterations 13
Cbc0038I Pass  66: suminf.    1.89399 (23) obj. -273.38 iterations 0
Cbc0038I Pass  67: suminf.    2.05421 (13) obj. -273.38 iterations 11
Cbc0038I Pass  68: suminf.    2.05421 (13) obj. -273.38 iterations 1
Cbc0038I Pass  69: suminf.    0.98712 (4) obj. -273.38 iterations 15
Cbc0038I Pass  70: suminf.    0.76168 (4) obj. -318.918 iterations 1
Cbc0038I Pass  71: suminf.    0.98712 (4) obj. -273.38 iterations 2
Cbc0038I Pass  72: suminf.    1.33390 (9) obj. -273.38 iterations 12
Cbc0038I Pass  73: suminf.    0.92814 (8) obj. -343.172 iterations 3
Cbc0038I Pass  74: suminf.    1.07381 (9) obj. -273.38 iterations 8
Cbc0038I Pass  75: suminf.    0.97440 (5) obj. -273.38 iterations 1
Cbc0038I Pass  76: suminf.    1.07603 (5) obj. -273.38 iterations 2
Cbc0038I Pass  77: suminf.    1.07603 (5) obj. -273.38 iterations 0
Cbc0038I Pass  78: suminf.    0.97440 (5) obj. -273.38 iterations 1
Cbc0038I Pass  79: suminf.    2.87604 (14) obj. -273.38 iterations 15
Cbc0038I Pass  80: suminf.    2.05935 (11) obj. -273.38 iterations 7
Cbc0038I Pass  81: suminf.    1.48125 (7) obj. -273.38 iterations 10
Cbc0038I Pass  82: suminf.    1.32504 (7) obj. -273.38 iterations 2
Cbc0038I Pass  83: suminf.    2.61085 (17) obj. -273.38 iterations 21
Cbc0038I Pass  84: suminf.    2.61085 (17) obj. -273.38 iterations 1
Cbc0038I Pass  85: suminf.    1.20437 (6) obj. -273.38 iterations 16
Cbc0038I Pass  86: suminf.    1.10510 (6) obj. -273.38 iterations 2
Cbc0038I Pass  87: suminf.    1.20437 (6) obj. -273.38 iterations 3
Cbc0038I Pass  88: suminf.    2.32421 (11) obj. -273.38 iterations 19
Cbc0038I Pass  89: suminf.    2.03779 (10) obj. -273.38 iterations 3
Cbc0038I Pass  90: suminf.    1.03775 (6) obj. -273.38 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 733.206 - took 0.05 seconds
Cbc0012I Integer solution of 733.206 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -347.677 found by DiveCoefficient after 33 iterations and 0 nodes (0.09 seconds)
Cbc0031I 31 added rows had average density of 11.870968
Cbc0013I At root node, 31 cuts changed objective from -1907.3351 to -347.677 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 303 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -347.677, took 33 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-21) rows, 42 (-8) columns and 233 (-52) elements
Clp1000I sum of infeasibilities 0.000605622 - average 7.76439e-06, 5 fixed columns
Coin0506I Presolve 68 (-10) rows, 37 (-5) columns and 203 (-30) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 1522.6858
Clp0000I Optimal - objective value 1522.6858
Coin0511I After Postsolve, objective 1522.6858, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1522.6858
Clp0000I Optimal - objective value 1522.6858
Clp0000I Optimal - objective value 1522.6858
Coin0511I After Postsolve, objective 1522.6858, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1522.685778 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 78 rows, 42 columns (41 integer (41 of which binary)) and 233 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.129%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 10.9013
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1375.38 iterations 38
Cbc0038I Solution found of 1375.38
Cbc0038I Relaxing continuous gives 1375.38
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 42 columns, reduced to 51 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 1375.38 to -347.677 (0.02 seconds)
Cbc0038I Round again with cutoff of -465.178
Cbc0038I Pass   2: suminf.    3.06794 (15) obj. -465.178 iterations 22
Cbc0038I Pass   3: suminf.    3.06794 (15) obj. -465.178 iterations 0
Cbc0038I Pass   4: suminf.    2.03759 (18) obj. -465.178 iterations 22
Cbc0038I Pass   5: suminf.    1.45033 (27) obj. -465.178 iterations 20
Cbc0038I Pass   6: suminf.    3.28436 (17) obj. -465.178 iterations 34
Cbc0038I Pass   7: suminf.    3.10823 (14) obj. -465.178 iterations 5
Cbc0038I Pass   8: suminf.    1.89879 (19) obj. -465.178 iterations 17
Cbc0038I Pass   9: suminf.    4.38844 (15) obj. -465.178 iterations 14
Cbc0038I Pass  10: suminf.    3.16003 (13) obj. -465.178 iterations 6
Cbc0038I Pass  11: suminf.    3.13619 (14) obj. -465.178 iterations 6
Cbc0038I Pass  12: suminf.    5.22068 (14) obj. -465.178 iterations 8
Cbc0038I Pass  13: suminf.    4.66061 (13) obj. -465.178 iterations 1
Cbc0038I Pass  14: suminf.    4.20666 (13) obj. -465.178 iterations 2
Cbc0038I Pass  15: suminf.    4.16848 (13) obj. -465.178 iterations 1
Cbc0038I Pass  16: suminf.    3.23738 (13) obj. -465.178 iterations 4
Cbc0038I Pass  17: suminf.    2.96421 (12) obj. -465.178 iterations 3
Cbc0038I Pass  18: suminf.    3.52689 (13) obj. -465.178 iterations 15
Cbc0038I Pass  19: suminf.    3.05917 (12) obj. -465.178 iterations 3
Cbc0038I Pass  20: suminf.    2.73150 (10) obj. -465.178 iterations 3
Cbc0038I Pass  21: suminf.    2.42115 (9) obj. -465.178 iterations 2
Cbc0038I Pass  22: suminf.    2.04400 (10) obj. -465.178 iterations 2
Cbc0038I Pass  23: suminf.    3.65485 (15) obj. -465.178 iterations 12
Cbc0038I Pass  24: suminf.    3.12782 (12) obj. -465.178 iterations 4
Cbc0038I Pass  25: suminf.    3.07739 (11) obj. -465.178 iterations 1
Cbc0038I Pass  26: suminf.    2.96091 (12) obj. -465.178 iterations 9
Cbc0038I Pass  27: suminf.    2.78042 (10) obj. -465.178 iterations 2
Cbc0038I Pass  28: suminf.    2.56241 (9) obj. -465.178 iterations 1
Cbc0038I Pass  29: suminf.    2.04400 (10) obj. -465.178 iterations 4
Cbc0038I Pass  30: suminf.    3.65485 (15) obj. -465.178 iterations 12
Cbc0038I Pass  31: suminf.    3.12782 (12) obj. -465.178 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 42 columns, reduced to 51 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -347.677 - took 0.04 seconds
Cbc0012I Integer solution of -347.677 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 78 rows 42 columns, reduced to 51 rows 28 columns
Cbc0031I 21 added rows had average density of 15.142857
Cbc0013I At root node, 163 cuts changed objective from -1522.6858 to -347.67701 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 361 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 81 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -347.677, took 131 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 88 (-9) columns and 1170 (-244) elements
Clp1000I sum of infeasibilities 1.12258e-08 - average 1.3364e-10, 41 fixed columns
Coin0506I Presolve 1 (-83) rows, 3 (-85) columns and 3 (-1167) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 3289.7546
Clp0000I Optimal - objective value 3289.7546
Coin0511I After Postsolve, objective 3289.7546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6745442 - largest nonzero change 2.9576128e-05 ( 0.0029576128%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 3289.7546
Clp0000I Optimal - objective value 3289.7546
Clp0000I Optimal - objective value 3289.7546
Coin0511I After Postsolve, objective 3289.7546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3289.754579 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 88 columns (88 integer (88 of which binary)) and 1172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.2918
Cbc0038I Pass   1: suminf.    0.45760 (9) obj. -721.307 iterations 9
Cbc0038I Pass   2: suminf.    0.45760 (9) obj. -721.307 iterations 1
Cbc0038I Solution found of 2510.88
Cbc0038I Rounding solution of 2362.86 is better than previous of 2510.88

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 88 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 2362.86 to 1947.61 (0.02 seconds)
Cbc0038I Round again with cutoff of 1562.12
Cbc0038I Pass   3: suminf.    0.45760 (9) obj. -721.307 iterations 0
Cbc0038I Pass   4: suminf.    0.45760 (9) obj. -721.307 iterations 1
Cbc0038I Pass   5: suminf.    0.35508 (1) obj. 1562.12 iterations 10
Cbc0038I Pass   6: suminf.    0.21429 (1) obj. 411.455 iterations 1
Cbc0038I Pass   7: suminf.    0.44706 (10) obj. 965.054 iterations 17
Cbc0038I Pass   8: suminf.    0.44706 (10) obj. 965.054 iterations 4
Cbc0038I Pass   9: suminf.    0.20218 (1) obj. 1562.12 iterations 10
Cbc0038I Pass  10: suminf.    0.14286 (1) obj. 1403.61 iterations 1
Cbc0038I Pass  11: suminf.    1.09163 (13) obj. 1464.73 iterations 22
Cbc0038I Pass  12: suminf.    1.09163 (13) obj. 1464.73 iterations 3
Cbc0038I Pass  13: suminf.    0.80539 (3) obj. 1562.12 iterations 12
Cbc0038I Pass  14: suminf.    0.43333 (2) obj. 1347.74 iterations 1
Cbc0038I Pass  15: suminf.    0.80682 (2) obj. 1562.12 iterations 2
Cbc0038I Pass  16: suminf.    1.62568 (9) obj. 1562.12 iterations 35
Cbc0038I Pass  17: suminf.    1.62568 (9) obj. 1562.12 iterations 6
Cbc0038I Pass  18: suminf.    0.71903 (8) obj. 1562.12 iterations 8
Cbc0038I Pass  19: suminf.    0.72216 (5) obj. 1562.12 iterations 1
Cbc0038I Pass  20: suminf.    0.57586 (2) obj. 1562.12 iterations 4
Cbc0038I Pass  21: suminf.    0.57586 (2) obj. 1562.12 iterations 0
Cbc0038I Pass  22: suminf.    0.51071 (2) obj. 1283.81 iterations 1
Cbc0038I Pass  23: suminf.    0.40656 (2) obj. 1562.12 iterations 1
Cbc0038I Pass  24: suminf.    1.35680 (10) obj. 1562.12 iterations 14
Cbc0038I Pass  25: suminf.    1.35680 (10) obj. 1562.12 iterations 2
Cbc0038I Pass  26: suminf.    0.41200 (2) obj. 1562.12 iterations 10
Cbc0038I Pass  27: suminf.    0.41200 (2) obj. 1562.12 iterations 0
Cbc0038I Pass  28: suminf.    0.55714 (2) obj. 1134.41 iterations 1
Cbc0038I Pass  29: suminf.    0.39707 (2) obj. 1562.12 iterations 1
Cbc0038I Pass  30: suminf.    2.05430 (11) obj. 1562.12 iterations 15
Cbc0038I Pass  31: suminf.    2.05430 (11) obj. 1562.12 iterations 2
Cbc0038I Pass  32: suminf.    0.65219 (2) obj. 1562.12 iterations 10
Cbc0038I Rounding solution of 1495.47 is better than previous of 1947.61

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 88 columns, reduced to 48 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 1495.47 to 1010.44 (0.04 seconds)
Cbc0038I Round again with cutoff of 426.886
Cbc0038I Pass  32: suminf.    0.45760 (9) obj. -721.307 iterations 0
Cbc0038I Pass  33: suminf.    0.45760 (9) obj. -721.307 iterations 1
Cbc0038I Pass  34: suminf.    0.22006 (1) obj. 426.886 iterations 9
Cbc0038I Pass  35: suminf.    0.21429 (1) obj. 411.455 iterations 1
Cbc0038I Pass  36: suminf.    3.08585 (25) obj. 426.886 iterations 17
Cbc0038I Pass  37: suminf.    2.26755 (21) obj. 426.886 iterations 4
Cbc0038I Pass  38: suminf.    1.14655 (11) obj. 426.886 iterations 20
Cbc0038I Pass  39: suminf.    1.13047 (15) obj. 426.886 iterations 1
Cbc0038I Pass  40: suminf.    1.07453 (3) obj. 426.886 iterations 14
Cbc0038I Pass  41: suminf.    0.53989 (2) obj. 426.886 iterations 2
Cbc0038I Pass  42: suminf.    0.90001 (2) obj. 426.886 iterations 2
Cbc0038I Pass  43: suminf.    1.79382 (8) obj. 426.886 iterations 13
Cbc0038I Pass  44: suminf.    1.38189 (7) obj. 53.6764 iterations 5
Cbc0038I Pass  45: suminf.    0.93900 (2) obj. 426.886 iterations 7
Cbc0038I Pass  46: suminf.    0.65000 (2) obj. 261.002 iterations 1
Cbc0038I Pass  47: suminf.    2.11473 (9) obj. 426.886 iterations 17
Cbc0038I Pass  48: suminf.    2.08020 (9) obj. 426.886 iterations 2
Cbc0038I Pass  49: suminf.    0.68065 (4) obj. 426.886 iterations 8
Cbc0038I Pass  50: suminf.    0.66977 (4) obj. 426.886 iterations 1
Cbc0038I Pass  51: suminf.    0.96546 (4) obj. 426.886 iterations 2
Cbc0038I Pass  52: suminf.    0.95924 (4) obj. 426.886 iterations 1
Cbc0038I Pass  53: suminf.    0.68065 (4) obj. 426.886 iterations 3
Cbc0038I Pass  54: suminf.    2.12928 (9) obj. 426.886 iterations 14
Cbc0038I Pass  55: suminf.    1.66858 (8) obj. 426.886 iterations 6
Cbc0038I Pass  56: suminf.    0.59822 (3) obj. 426.886 iterations 8
Cbc0038I Pass  57: suminf.    0.51175 (3) obj. 426.886 iterations 1
Cbc0038I Pass  58: suminf.    3.55251 (12) obj. 318.655 iterations 16
Cbc0038I Pass  59: suminf.    2.63752 (11) obj. 426.886 iterations 3
Cbc0038I Pass  60: suminf.    2.17796 (9) obj. 257.614 iterations 3
Cbc0038I Pass  61: suminf.    0.73551 (4) obj. 426.886 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 88 columns, reduced to 36 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 1010.44 to 733.206 (0.05 seconds)
Cbc0038I Round again with cutoff of -273.38
Cbc0038I Pass  61: suminf.    0.45760 (9) obj. -721.307 iterations 0
Cbc0038I Pass  62: suminf.    0.45760 (9) obj. -721.307 iterations 1
Cbc0038I Pass  63: suminf.    0.84999 (23) obj. -273.38 iterations 12
Cbc0038I Pass  64: suminf.    0.84999 (23) obj. -273.38 iterations 0
Cbc0038I Pass  65: suminf.    1.89399 (23) obj. -273.38 iterations 13
Cbc0038I Pass  66: suminf.    1.89399 (23) obj. -273.38 iterations 0
Cbc0038I Pass  67: suminf.    2.05421 (13) obj. -273.38 iterations 11
Cbc0038I Pass  68: suminf.    2.05421 (13) obj. -273.38 iterations 1
Cbc0038I Pass  69: suminf.    0.98712 (4) obj. -273.38 iterations 15
Cbc0038I Pass  70: suminf.    0.76168 (4) obj. -318.918 iterations 1
Cbc0038I Pass  71: suminf.    0.98712 (4) obj. -273.38 iterations 2
Cbc0038I Pass  72: suminf.    1.33390 (9) obj. -273.38 iterations 12
Cbc0038I Pass  73: suminf.    0.92814 (8) obj. -343.172 iterations 3
Cbc0038I Pass  74: suminf.    1.07381 (9) obj. -273.38 iterations 8
Cbc0038I Pass  75: suminf.    0.97440 (5) obj. -273.38 iterations 1
Cbc0038I Pass  76: suminf.    1.07603 (5) obj. -273.38 iterations 2
Cbc0038I Pass  77: suminf.    1.07603 (5) obj. -273.38 iterations 0
Cbc0038I Pass  78: suminf.    0.97440 (5) obj. -273.38 iterations 1
Cbc0038I Pass  79: suminf.    2.87604 (14) obj. -273.38 iterations 15
Cbc0038I Pass  80: suminf.    2.05935 (11) obj. -273.38 iterations 7
Cbc0038I Pass  81: suminf.    1.48125 (7) obj. -273.38 iterations 10
Cbc0038I Pass  82: suminf.    1.32504 (7) obj. -273.38 iterations 2
Cbc0038I Pass  83: suminf.    2.61085 (17) obj. -273.38 iterations 21
Cbc0038I Pass  84: suminf.    2.61085 (17) obj. -273.38 iterations 1
Cbc0038I Pass  85: suminf.    1.20437 (6) obj. -273.38 iterations 16
Cbc0038I Pass  86: suminf.    1.10510 (6) obj. -273.38 iterations 2
Cbc0038I Pass  87: suminf.    1.20437 (6) obj. -273.38 iterations 3
Cbc0038I Pass  88: suminf.    2.32421 (11) obj. -273.38 iterations 19
Cbc0038I Pass  89: suminf.    2.03779 (10) obj. -273.38 iterations 3
Cbc0038I Pass  90: suminf.    1.03775 (6) obj. -273.38 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 733.206 - took 0.05 seconds
Cbc0012I Integer solution of 733.206 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -347.677 found by DiveCoefficient after 33 iterations and 0 nodes (0.08 seconds)
Cbc0031I 31 added rows had average density of 11.870968
Cbc0013I At root node, 31 cuts changed objective from -1907.3351 to -347.677 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 303 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -347.677, took 33 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

