Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 2.60961e-05 - average 1.43385e-07, 18 fixed columns
Coin0506I Presolve 145 (-37) rows, 81 (-19) columns and 444 (-112) elements
Clp0029I End of values pass after 81 iterations
Clp0000I Optimal - objective value 43.413499
Clp0000I Optimal - objective value 43.413499
Coin0511I After Postsolve, objective 43.413499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19920633 - largest nonzero change 0 ( 0%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value 43.413499
Clp0000I Optimal - objective value 43.413499
Clp0000I Optimal - objective value 43.413499
Coin0511I After Postsolve, objective 43.413499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.41349939 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 583 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.129%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 6.54147
Cbc0038I Solution found of -2.88031
Cbc0038I Relaxing continuous gives -3.01175
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 86 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -3.01175 to -22.7376 (0.07 seconds)
Cbc0038I Round again with cutoff of -24.802
Cbc0038I Pass   1: suminf.    2.41812 (17) obj. -24.802 iterations 64
Cbc0038I Pass   2: suminf.    1.37007 (4) obj. -24.802 iterations 25
Cbc0038I Pass   3: suminf.    1.08301 (4) obj. -24.802 iterations 3
Cbc0038I Pass   4: suminf.    0.83276 (3) obj. -24.802 iterations 8
Cbc0038I Pass   5: suminf.    0.83276 (3) obj. -24.802 iterations 0
Cbc0038I Pass   6: suminf.    0.84808 (3) obj. -24.802 iterations 2
Cbc0038I Pass   7: suminf.    3.95209 (14) obj. -24.802 iterations 17
Cbc0038I Pass   8: suminf.    1.87218 (10) obj. -24.802 iterations 31
Cbc0038I Pass   9: suminf.    1.57429 (11) obj. -24.802 iterations 5
Cbc0038I Pass  10: suminf.    1.06811 (7) obj. -24.802 iterations 9
Cbc0038I Pass  11: suminf.    0.71842 (4) obj. -24.802 iterations 4
Cbc0038I Pass  12: suminf.    1.05787 (4) obj. -24.802 iterations 3
Cbc0038I Pass  13: suminf.    0.97025 (6) obj. -24.802 iterations 2
Cbc0038I Pass  14: suminf.    0.71842 (4) obj. -24.802 iterations 5
Cbc0038I Pass  15: suminf.    4.55544 (11) obj. -24.802 iterations 23
Cbc0038I Pass  16: suminf.    2.08634 (7) obj. -24.802 iterations 13
Cbc0038I Pass  17: suminf.    1.93195 (12) obj. -24.802 iterations 29
Cbc0038I Pass  18: suminf.    1.69039 (11) obj. -24.802 iterations 7
Cbc0038I Pass  19: suminf.    1.03488 (4) obj. -24.802 iterations 9
Cbc0038I Pass  20: suminf.    0.95847 (5) obj. -24.802 iterations 4
Cbc0038I Pass  21: suminf.    1.34531 (7) obj. -24.802 iterations 5
Cbc0038I Pass  22: suminf.    1.13959 (6) obj. -24.802 iterations 2
Cbc0038I Pass  23: suminf.    0.85725 (4) obj. -24.802 iterations 6
Cbc0038I Pass  24: suminf.    0.83276 (3) obj. -24.802 iterations 2
Cbc0038I Pass  25: suminf.    0.84808 (3) obj. -24.802 iterations 2
Cbc0038I Pass  26: suminf.    1.13436 (6) obj. -24.802 iterations 12
Cbc0038I Pass  27: suminf.    0.96255 (4) obj. -24.802 iterations 8
Cbc0038I Pass  28: suminf.    1.13959 (6) obj. -24.802 iterations 9
Cbc0038I Pass  29: suminf.    1.13959 (6) obj. -24.802 iterations 0
Cbc0038I Pass  30: suminf.    0.85725 (4) obj. -24.802 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 100 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -22.7376 - took 0.13 seconds
Cbc0012I Integer solution of -22.73758 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 86 rows 49 columns
Cbc0031I 26 added rows had average density of 63.076923
Cbc0013I At root node, 26 cuts changed objective from -43.380627 to -35.067855 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10991 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1985 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 99.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.73758 best solution, best possible -35.067855 (1.31 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 67 rows 39 columns
Cbc0001I Search completed - best objective -22.73758, took 11118 iterations and 86 nodes (1.73 seconds)
Cbc0032I Strong branching done 1000 times (21853 iterations), fathomed 2 nodes and fixed 22 variables
Cbc0035I Maximum depth 37, 69 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       1.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-68) rows, 152 (-50) columns and 3000 (-2653) elements
Clp1000I sum of infeasibilities 5.14768e-06 - average 3.78506e-08, 49 fixed columns
Coin0506I Presolve 86 (-50) rows, 100 (-52) columns and 1289 (-1711) elements
Clp0006I 0  Obj 72.701002 Dual inf 8.319958 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.2821728 - largest nonzero change 1.0803561e-05 ( 0.00088996209%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 79.055769
Clp0000I Optimal - objective value 79.055769
Coin0511I After Postsolve, objective 79.055769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 79.055769 Dual inf 4.1302376 (1)
Clp0014I Perturbing problem by 0.001% of 1.4984336 - largest nonzero change 0 ( 0%) - largest zero change 2.9533737e-05
Clp0000I Optimal - objective value 79.055769
Clp0000I Optimal - objective value 79.055769
Clp0000I Optimal - objective value 79.055769
Coin0511I After Postsolve, objective 79.055769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.05576942 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 153 columns (153 integer (153 of which binary)) and 3017 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 3.81401
Cbc0038I Pass   1: suminf.    2.01115 (32) obj. -26.583 iterations 19
Cbc0038I Pass   2: suminf.    2.01115 (32) obj. -26.583 iterations 1
Cbc0038I Pass   3: suminf.    0.12655 (7) obj. 4.73791 iterations 25
Cbc0038I Solution found of 12.5952
Cbc0038I Rounding solution of 7.53535 is better than previous of 12.5952

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 153 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -0.567505
Cbc0038I Pass   4: suminf.    2.01115 (32) obj. -26.583 iterations 0
Cbc0038I Pass   5: suminf.    2.01115 (32) obj. -26.583 iterations 1
Cbc0038I Pass   6: suminf.    0.34454 (16) obj. -5.01511 iterations 16
Cbc0038I Pass   7: suminf.    0.56163 (16) obj. -0.567505 iterations 25
Cbc0038I Pass   8: suminf.    0.74533 (2) obj. -8.74143 iterations 17
Cbc0038I Pass   9: suminf.    0.43798 (1) obj. -0.567505 iterations 5
Cbc0038I Pass  10: suminf.    0.43333 (1) obj. -8.16008 iterations 1
Cbc0038I Pass  11: suminf.    0.98578 (18) obj. -0.567505 iterations 29
Cbc0038I Pass  12: suminf.    0.98578 (18) obj. -0.567505 iterations 6
Cbc0038I Pass  13: suminf.    1.73854 (5) obj. -0.567505 iterations 18
Cbc0038I Pass  14: suminf.    1.73854 (5) obj. -0.567505 iterations 0
Cbc0038I Pass  15: suminf.    1.41342 (4) obj. -0.567505 iterations 1
Cbc0038I Pass  16: suminf.    1.03136 (4) obj. -0.567505 iterations 2
Cbc0038I Pass  17: suminf.    1.17851 (15) obj. -0.567505 iterations 23
Cbc0038I Pass  18: suminf.    1.16554 (11) obj. -0.567505 iterations 11
Cbc0038I Pass  19: suminf.    1.34811 (4) obj. -0.567505 iterations 11
Cbc0038I Pass  20: suminf.    1.59338 (4) obj. -0.567505 iterations 1
Cbc0038I Pass  21: suminf.    2.02880 (11) obj. -0.567505 iterations 23
Cbc0038I Pass  22: suminf.    2.02880 (11) obj. -0.567505 iterations 5
Cbc0038I Pass  23: suminf.    2.28521 (6) obj. -0.567505 iterations 11
Cbc0038I Pass  24: suminf.    2.28521 (6) obj. -0.567505 iterations 0
Cbc0038I Pass  25: suminf.    1.60309 (4) obj. -0.567505 iterations 11
Cbc0038I Pass  26: suminf.    0.74194 (4) obj. -0.567505 iterations 4
Cbc0038I Pass  27: suminf.    1.47405 (11) obj. -0.567505 iterations 19
Cbc0038I Pass  28: suminf.    1.26483 (10) obj. -0.567505 iterations 8
Cbc0038I Pass  29: suminf.    1.15303 (4) obj. -0.567505 iterations 11
Cbc0038I Pass  30: suminf.    1.40974 (4) obj. -0.567505 iterations 1
Cbc0038I Pass  31: suminf.    3.45283 (13) obj. -0.567505 iterations 27
Cbc0038I Pass  32: suminf.    2.27861 (11) obj. -0.567505 iterations 11
Cbc0038I Pass  33: suminf.    1.41656 (5) obj. -0.567505 iterations 6
Cbc0038I Rounding solution of -7.05923 is better than previous of 7.53535

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 153 columns, reduced to 39 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -7.05923 to -8.64302 (0.09 seconds)
Cbc0038I Round again with cutoff of -21.613
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.01115 (32) obj. -26.583 iterations 0
Cbc0038I Pass  34: suminf.    2.01115 (32) obj. -26.583 iterations 1
Cbc0038I Pass  35: suminf.    1.29137 (24) obj. -21.613 iterations 33
Cbc0038I Pass  36: suminf.    1.08335 (16) obj. -21.613 iterations 13
Cbc0038I Pass  37: suminf.    0.61829 (4) obj. -21.613 iterations 16
Cbc0038I Pass  38: suminf.    0.61829 (4) obj. -21.613 iterations 0
Cbc0038I Pass  39: suminf.    0.65902 (4) obj. -21.613 iterations 1
Cbc0038I Pass  40: suminf.    0.85202 (11) obj. -21.613 iterations 23
Cbc0038I Pass  41: suminf.    0.59847 (10) obj. -21.613 iterations 12
Cbc0038I Pass  42: suminf.    0.40217 (5) obj. -21.613 iterations 16
Cbc0038I Pass  43: suminf.    0.40217 (5) obj. -21.613 iterations 3
Cbc0038I Pass  44: suminf.    0.35700 (5) obj. -21.613 iterations 2
Cbc0038I Pass  45: suminf.    0.24631 (5) obj. -21.613 iterations 2
Cbc0038I Pass  46: suminf.    0.40217 (5) obj. -21.613 iterations 7
Cbc0038I Pass  47: suminf.    1.19163 (16) obj. -21.613 iterations 31
Cbc0038I Pass  48: suminf.    0.67514 (14) obj. -26.0857 iterations 10
Cbc0038I Pass  49: suminf.    0.32144 (5) obj. -21.613 iterations 20
Cbc0038I Pass  50: suminf.    0.32144 (5) obj. -21.613 iterations 1
Cbc0038I Pass  51: suminf.    0.20596 (5) obj. -21.613 iterations 2
Cbc0038I Pass  52: suminf.    0.10406 (5) obj. -21.613 iterations 4
Cbc0038I Pass  53: suminf.    0.32144 (5) obj. -21.613 iterations 7
Cbc0038I Pass  54: suminf.    1.78285 (13) obj. -21.613 iterations 17
Cbc0038I Pass  55: suminf.    1.30496 (12) obj. -21.613 iterations 5
Cbc0038I Pass  56: suminf.    0.85555 (6) obj. -21.613 iterations 21
Cbc0038I Pass  57: suminf.    0.67981 (6) obj. -21.613 iterations 6
Cbc0038I Pass  58: suminf.    0.11787 (4) obj. -21.613 iterations 4
Cbc0038I Pass  59: suminf.    0.09096 (4) obj. -21.613 iterations 2
Cbc0038I Pass  60: suminf.    1.00766 (10) obj. -21.613 iterations 13
Cbc0038I Pass  61: suminf.    0.37307 (6) obj. -22.2991 iterations 5
Cbc0038I Pass  62: suminf.    0.45622 (6) obj. -21.613 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 153 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -8.64302 - took 0.08 seconds
Cbc0012I Integer solution of -8.643018 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 137 rows 153 columns, reduced to 36 rows 39 columns
Cbc0031I 52 added rows had average density of 43.365385
Cbc0013I At root node, 52 cuts changed objective from -73.492315 to -34.356681 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8963 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1771 row cuts average 128.6 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1258 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1852 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 411 row cuts average 76.2 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 66 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.482 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.643018 best solution, best possible -34.356681 (2.42 seconds)
Cbc0012I Integer solution of -12.08532 found by rounding after 3729 iterations and 1 nodes (2.44 seconds)
Cbc0012I Integer solution of -18.11464 found by DiveCoefficient after 3881 iterations and 2 nodes (2.55 seconds)
Cbc0010I After 6 nodes, 7 on tree, -18.11464 best solution, best possible -34.356681 (3.20 seconds)
Cbc0012I Integer solution of -18.53913 found by rounding after 5848 iterations and 20 nodes (3.77 seconds)
Cbc0038I Full problem 137 rows 153 columns, reduced to 28 rows 40 columns
Cbc0010I After 44 nodes, 11 on tree, -18.53913 best solution, best possible -34.356681 (3.91 seconds)
Cbc0012I Integer solution of -19.07727 found by rounding after 7163 iterations and 57 nodes (3.98 seconds)
Cbc0038I Full problem 137 rows 153 columns, reduced to 86 rows 99 columns
Cbc0012I Integer solution of -20.11464 found by DiveCoefficient after 10538 iterations and 131 nodes (4.64 seconds)
Cbc0010I After 131 nodes, 6 on tree, -20.11464 best solution, best possible -34.356681 (4.64 seconds)
Cbc0012I Integer solution of -20.62773 found by rounding after 10569 iterations and 132 nodes (4.65 seconds)
Cbc0004I Integer solution of -21.93626 found after 10627 iterations and 134 nodes (4.65 seconds)
Cbc0012I Integer solution of -22.73758 found by rounding after 10675 iterations and 137 nodes (4.66 seconds)
Cbc0001I Search completed - best objective -22.73758, took 11343 iterations and 146 nodes (4.73 seconds)
Cbc0032I Strong branching done 1490 times (19823 iterations), fathomed 8 nodes and fixed 18 variables
Cbc0035I Maximum depth 26, 205 variables fixed on reduced cost
Total time (CPU seconds):       4.01   (Wallclock seconds):       4.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 2.60961e-05 - average 1.43385e-07, 18 fixed columns
Coin0506I Presolve 145 (-37) rows, 81 (-19) columns and 444 (-112) elements
Clp0029I End of values pass after 81 iterations
Clp0000I Optimal - objective value 43.413499
Clp0000I Optimal - objective value 43.413499
Coin0511I After Postsolve, objective 43.413499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19920633 - largest nonzero change 0 ( 0%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value 43.413499
Clp0000I Optimal - objective value 43.413499
Clp0000I Optimal - objective value 43.413499
Coin0511I After Postsolve, objective 43.413499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.41349939 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 583 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.129%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 6.54147
Cbc0038I Solution found of -2.88031
Cbc0038I Relaxing continuous gives -3.01175
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 86 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -3.01175 to -22.7376 (0.08 seconds)
Cbc0038I Round again with cutoff of -24.802
Cbc0038I Pass   1: suminf.    2.41812 (17) obj. -24.802 iterations 64
Cbc0038I Pass   2: suminf.    1.37007 (4) obj. -24.802 iterations 25
Cbc0038I Pass   3: suminf.    1.08301 (4) obj. -24.802 iterations 3
Cbc0038I Pass   4: suminf.    0.83276 (3) obj. -24.802 iterations 8
Cbc0038I Pass   5: suminf.    0.83276 (3) obj. -24.802 iterations 0
Cbc0038I Pass   6: suminf.    0.84808 (3) obj. -24.802 iterations 2
Cbc0038I Pass   7: suminf.    3.95209 (14) obj. -24.802 iterations 17
Cbc0038I Pass   8: suminf.    1.87218 (10) obj. -24.802 iterations 31
Cbc0038I Pass   9: suminf.    1.57429 (11) obj. -24.802 iterations 5
Cbc0038I Pass  10: suminf.    1.06811 (7) obj. -24.802 iterations 9
Cbc0038I Pass  11: suminf.    0.71842 (4) obj. -24.802 iterations 4
Cbc0038I Pass  12: suminf.    1.05787 (4) obj. -24.802 iterations 3
Cbc0038I Pass  13: suminf.    0.97025 (6) obj. -24.802 iterations 2
Cbc0038I Pass  14: suminf.    0.71842 (4) obj. -24.802 iterations 5
Cbc0038I Pass  15: suminf.    4.55544 (11) obj. -24.802 iterations 23
Cbc0038I Pass  16: suminf.    2.08634 (7) obj. -24.802 iterations 13
Cbc0038I Pass  17: suminf.    1.93195 (12) obj. -24.802 iterations 29
Cbc0038I Pass  18: suminf.    1.69039 (11) obj. -24.802 iterations 7
Cbc0038I Pass  19: suminf.    1.03488 (4) obj. -24.802 iterations 9
Cbc0038I Pass  20: suminf.    0.95847 (5) obj. -24.802 iterations 4
Cbc0038I Pass  21: suminf.    1.34531 (7) obj. -24.802 iterations 5
Cbc0038I Pass  22: suminf.    1.13959 (6) obj. -24.802 iterations 2
Cbc0038I Pass  23: suminf.    0.85725 (4) obj. -24.802 iterations 6
Cbc0038I Pass  24: suminf.    0.83276 (3) obj. -24.802 iterations 2
Cbc0038I Pass  25: suminf.    0.84808 (3) obj. -24.802 iterations 2
Cbc0038I Pass  26: suminf.    1.13436 (6) obj. -24.802 iterations 12
Cbc0038I Pass  27: suminf.    0.96255 (4) obj. -24.802 iterations 8
Cbc0038I Pass  28: suminf.    1.13959 (6) obj. -24.802 iterations 9
Cbc0038I Pass  29: suminf.    1.13959 (6) obj. -24.802 iterations 0
Cbc0038I Pass  30: suminf.    0.85725 (4) obj. -24.802 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 100 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -22.7376 - took 0.14 seconds
Cbc0012I Integer solution of -22.73758 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 86 rows 49 columns
Cbc0031I 26 added rows had average density of 63.076923
Cbc0013I At root node, 26 cuts changed objective from -43.380627 to -35.067855 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10991 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1985 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 99.7 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.73758 best solution, best possible -35.067855 (1.39 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 67 rows 39 columns
Cbc0001I Search completed - best objective -22.73758, took 11118 iterations and 86 nodes (1.86 seconds)
Cbc0032I Strong branching done 1000 times (21853 iterations), fathomed 2 nodes and fixed 22 variables
Cbc0035I Maximum depth 37, 69 variables fixed on reduced cost
Total time (CPU seconds):       1.77   (Wallclock seconds):       1.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-70) rows, 151 (-52) columns and 2950 (-2704) elements
Clp1000I sum of infeasibilities 3.87649e-07 - average 2.87147e-09, 84 fixed columns
Coin0506I Presolve 54 (-81) rows, 67 (-84) columns and 236 (-2714) elements
Clp0006I 0  Obj -16.158 Dual inf 265.1282 (67)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.21645843 - largest nonzero change 2.9533151e-05 ( 0.0025543869%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value -15.904441
Clp0000I Optimal - objective value -15.904441
Coin0511I After Postsolve, objective -15.904441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -15.904441 Dual inf 65.812803 (54)
Clp0014I Perturbing problem by 0.001% of 1.5033822 - largest nonzero change 2.938764e-05 ( 0.0023983587%) - largest zero change 2.9651042e-05
Clp0000I Optimal - objective value 51.526261
Clp0000I Optimal - objective value 51.526261
Clp0000I Optimal - objective value 51.526261
Coin0511I After Postsolve, objective 51.526261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.52626098 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 152 columns (152 integer (152 of which binary)) and 2967 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.027%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 4.62711
Cbc0038I Pass   1: suminf.    1.79020 (31) obj. -32.4237 iterations 32
Cbc0038I Pass   2: suminf.    1.79020 (31) obj. -32.4237 iterations 1
Cbc0038I Pass   3: suminf.    1.02086 (21) obj. -19.501 iterations 10
Cbc0038I Solution found of 2.37015
Cbc0038I Rounding solution of -3.56802 is better than previous of 2.37015

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 152 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -3.56802 to -3.58452 (0.05 seconds)
Cbc0038I Round again with cutoff of -7.91631
Cbc0038I Pass   4: suminf.    1.79020 (31) obj. -32.4237 iterations 0
Cbc0038I Pass   5: suminf.    1.79020 (31) obj. -32.4237 iterations 1
Cbc0038I Pass   6: suminf.    0.80821 (18) obj. -16.7136 iterations 13
Cbc0038I Pass   7: suminf.    1.10351 (9) obj. -7.91631 iterations 31
Cbc0038I Pass   8: suminf.    0.64777 (4) obj. -7.91631 iterations 18
Cbc0038I Pass   9: suminf.    0.64777 (4) obj. -7.91631 iterations 0
Cbc0038I Pass  10: suminf.    1.06351 (7) obj. -7.91631 iterations 15
Cbc0038I Pass  11: suminf.    0.51590 (5) obj. -7.91631 iterations 13
Cbc0038I Pass  12: suminf.    1.40392 (5) obj. -7.91631 iterations 9
Cbc0038I Pass  13: suminf.    0.82297 (4) obj. -7.91631 iterations 11
Cbc0038I Pass  14: suminf.    0.47884 (4) obj. -7.91631 iterations 6
Cbc0038I Pass  15: suminf.    1.58184 (15) obj. -7.91631 iterations 60
Cbc0038I Pass  16: suminf.    1.20995 (14) obj. -7.91631 iterations 10
Cbc0038I Pass  17: suminf.    0.98559 (9) obj. -7.91631 iterations 24
Cbc0038I Pass  18: suminf.    0.98368 (8) obj. -7.91631 iterations 2
Cbc0038I Pass  19: suminf.    0.98857 (8) obj. -7.91631 iterations 14
Cbc0038I Pass  20: suminf.    0.98857 (8) obj. -7.91631 iterations 4
Cbc0038I Pass  21: suminf.    0.98368 (8) obj. -7.91631 iterations 14
Cbc0038I Pass  22: suminf.    1.06217 (15) obj. -8.43044 iterations 30
Cbc0038I Pass  23: suminf.    1.06217 (15) obj. -8.43044 iterations 5
Cbc0038I Pass  24: suminf.    1.57431 (19) obj. -7.91631 iterations 38
Cbc0038I Pass  25: suminf.    0.85138 (23) obj. -7.91631 iterations 14
Cbc0038I Pass  26: suminf.    2.48365 (17) obj. -7.91631 iterations 15
Cbc0038I Pass  27: suminf.    1.89344 (18) obj. -7.91631 iterations 5
Cbc0038I Pass  28: suminf.    2.14177 (14) obj. -7.91631 iterations 28
Cbc0038I Pass  29: suminf.    2.07935 (18) obj. -7.91631 iterations 4
Cbc0038I Pass  30: suminf.    2.16467 (15) obj. -7.91631 iterations 9
Cbc0038I Pass  31: suminf.    2.11405 (18) obj. -7.91631 iterations 8
Cbc0038I Pass  32: suminf.    2.07935 (18) obj. -7.91631 iterations 10
Cbc0038I Pass  33: suminf.    0.94147 (15) obj. -7.91631 iterations 22
Cbc0038I Rounding solution of -8.77653 is better than previous of -3.58452

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 152 columns, reduced to 49 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -8.77653 to -18.497 (0.10 seconds)
Cbc0038I Round again with cutoff of -24.178
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.79020 (31) obj. -32.4237 iterations 0
Cbc0038I Pass  34: suminf.    1.79020 (31) obj. -32.4237 iterations 1
Cbc0038I Pass  35: suminf.    0.97494 (17) obj. -24.178 iterations 42
Cbc0038I Pass  36: suminf.    0.84618 (17) obj. -25.0031 iterations 5
Cbc0038I Pass  37: suminf.    2.93299 (29) obj. -24.178 iterations 42
Cbc0038I Pass  38: suminf.    2.93114 (32) obj. -24.178 iterations 4
Cbc0038I Pass  39: suminf.    2.65346 (28) obj. -24.178 iterations 19
Cbc0038I Pass  40: suminf.    2.64636 (31) obj. -24.178 iterations 9
Cbc0038I Pass  41: suminf.    2.86063 (28) obj. -24.178 iterations 18
Cbc0038I Pass  42: suminf.    2.84907 (31) obj. -24.178 iterations 6
Cbc0038I Pass  43: suminf.    2.90966 (28) obj. -24.178 iterations 11
Cbc0038I Pass  44: suminf.    2.89659 (31) obj. -24.178 iterations 6
Cbc0038I Pass  45: suminf.    2.86063 (28) obj. -24.178 iterations 14
Cbc0038I Pass  46: suminf.    3.16040 (30) obj. -24.178 iterations 41
Cbc0038I Pass  47: suminf.    2.98894 (29) obj. -24.178 iterations 9
Cbc0038I Pass  48: suminf.    3.03717 (28) obj. -24.178 iterations 37
Cbc0038I Pass  49: suminf.    3.03717 (28) obj. -24.178 iterations 10
Cbc0038I Pass  50: suminf.    3.10691 (28) obj. -24.178 iterations 11
Cbc0038I Pass  51: suminf.    2.41674 (28) obj. -24.178 iterations 12
Cbc0038I Pass  52: suminf.    3.03717 (28) obj. -24.178 iterations 14
Cbc0038I Pass  53: suminf.    2.96421 (28) obj. -24.178 iterations 27
Cbc0038I Pass  54: suminf.    2.96421 (28) obj. -24.178 iterations 6
Cbc0038I Pass  55: suminf.    2.92706 (28) obj. -24.178 iterations 14
Cbc0038I Pass  56: suminf.    2.92706 (28) obj. -24.178 iterations 8
Cbc0038I Pass  57: suminf.    2.87258 (28) obj. -24.178 iterations 11
Cbc0038I Pass  58: suminf.    2.87258 (28) obj. -24.178 iterations 9
Cbc0038I Pass  59: suminf.    3.03717 (28) obj. -24.178 iterations 14
Cbc0038I Pass  60: suminf.    3.03717 (28) obj. -24.178 iterations 8
Cbc0038I Pass  61: suminf.    3.10691 (28) obj. -24.178 iterations 10
Cbc0038I Pass  62: suminf.    2.41674 (28) obj. -24.178 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -18.497 - took 0.08 seconds
Cbc0012I Integer solution of -18.497 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 136 rows 152 columns, reduced to 23 rows 28 columns
Cbc0031I 73 added rows had average density of 35.041096
Cbc0013I At root node, 73 cuts changed objective from -46.901526 to -31.138671 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24442 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.230 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1707 row cuts average 144.1 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1726 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 225 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 831 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 337 row cuts average 86.2 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 224 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.596 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.497 best solution, best possible -31.138671 (3.75 seconds)
Cbc0012I Integer solution of -18.864838 found by rounding after 7647 iterations and 1 nodes (3.76 seconds)
Cbc0012I Integer solution of -21.93626 found by DiveCoefficient after 7759 iterations and 1 nodes (3.97 seconds)
Cbc0012I Integer solution of -22.73758 found by DiveCoefficient after 7866 iterations and 3 nodes (4.31 seconds)
Cbc0010I After 8 nodes, 1 on tree, -22.73758 best solution, best possible -30.835118 (5.10 seconds)
Cbc0010I After 12 nodes, 5 on tree, -22.73758 best solution, best possible -30.835118 (5.90 seconds)
Cbc0001I Search completed - best objective -22.73758, took 10105 iterations and 26 nodes (6.47 seconds)
Cbc0032I Strong branching done 584 times (15297 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 9, 145 variables fixed on reduced cost
Total time (CPU seconds):       4.89   (Wallclock seconds):       6.50

