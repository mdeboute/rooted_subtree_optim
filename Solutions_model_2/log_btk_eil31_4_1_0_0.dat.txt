Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 25 (-8) columns and 129 (-54) elements
Clp1000I sum of infeasibilities 1.90835e-05 - average 4.43802e-07, 18 fixed columns
Coin0506I Presolve 11 (-32) rows, 7 (-18) columns and 30 (-99) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2507.7712
Clp0000I Optimal - objective value 2507.7712
Coin0511I After Postsolve, objective 2507.7712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2507.7712
Clp0000I Optimal - objective value 2507.7712
Clp0000I Optimal - objective value 2507.7712
Coin0511I After Postsolve, objective 2507.7712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2507.771177 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.70808
Cbc0038I Pass   1: suminf.    0.42857 (1) obj. -1541.99 iterations 5
Cbc0038I Solution found of -403.02
Cbc0038I Relaxing continuous gives -404.449
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -404.449 to -1979.98 (0.01 seconds)
Cbc0038I Round again with cutoff of -1980.51
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17903 (5) obj. -1980.51 iterations 6
Cbc0038I Pass   3: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass   4: suminf.    1.87924 (5) obj. -1980.51 iterations 5
Cbc0038I Pass   5: suminf.    1.87924 (5) obj. -1980.51 iterations 0
Cbc0038I Pass   6: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass   7: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass   8: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass   9: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  10: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  11: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  12: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  13: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  14: suminf.    1.72151 (6) obj. -1980.51 iterations 3
Cbc0038I Pass  15: suminf.    0.17903 (5) obj. -1980.51 iterations 2
Cbc0038I Pass  16: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  17: suminf.    1.87924 (5) obj. -1980.51 iterations 5
Cbc0038I Pass  18: suminf.    1.87924 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  19: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass  20: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass  21: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass  22: suminf.    1.77432 (5) obj. -1980.51 iterations 3
Cbc0038I Pass  23: suminf.    0.17903 (5) obj. -1980.51 iterations 2
Cbc0038I Pass  24: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  25: suminf.    1.87924 (5) obj. -1980.51 iterations 5
Cbc0038I Pass  26: suminf.    1.87924 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  27: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass  28: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  29: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  30: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  31: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -1979.98 - took 0.01 seconds
Cbc0012I Integer solution of -1979.975 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 42 rows 25 columns, reduced to 9 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -1985.3397 to -1985.3397 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1979.975, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-15) rows, 54 (-8) columns and 478 (-170) elements
Clp1000I sum of infeasibilities 2.15069e-09 - average 4.38916e-11, 48 fixed columns
Coin0506I Presolve 6 (-43) rows, 6 (-48) columns and 20 (-458) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 2474.4504
Clp0000I Optimal - objective value 2474.4504
Coin0511I After Postsolve, objective 2474.4504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6187038 - largest nonzero change 0 ( 0%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 2518.1425
Clp0000I Optimal - objective value 2518.1425
Clp0000I Optimal - objective value 2518.1425
Coin0511I After Postsolve, objective 2518.1425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2518.142529 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 387 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.586%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.34233
Cbc0038I Pass   1: suminf.    0.42940 (6) obj. -397.02 iterations 18
Cbc0038I Pass   2: suminf.    0.42940 (6) obj. -397.02 iterations 0
Cbc0038I Solution found of -391.449
Cbc0038I Rounding solution of -900.088 is better than previous of -391.449

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -900.088 to -1328.28 (0.02 seconds)
Cbc0038I Round again with cutoff of -1393.73
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.42929 (8) obj. -1393.73 iterations 2
Cbc0038I Pass   4: suminf.    0.86749 (7) obj. -1517.01 iterations 3
Cbc0038I Pass   5: suminf.    0.49715 (1) obj. -1393.73 iterations 7
Cbc0038I Pass   6: suminf.    0.43810 (1) obj. -1511.44 iterations 1
Cbc0038I Pass   7: suminf.    1.47764 (11) obj. -1393.73 iterations 13
Cbc0038I Pass   8: suminf.    1.14209 (9) obj. -1393.73 iterations 6
Cbc0038I Pass   9: suminf.    0.87985 (3) obj. -1393.73 iterations 11
Cbc0038I Pass  10: suminf.    0.14626 (1) obj. -1393.73 iterations 3
Cbc0038I Pass  11: suminf.    0.30000 (1) obj. -1502.84 iterations 1
Cbc0038I Pass  12: suminf.    1.59416 (10) obj. -1393.73 iterations 18
Cbc0038I Pass  13: suminf.    0.86950 (4) obj. -1488.19 iterations 8
Cbc0038I Pass  14: suminf.    0.65211 (2) obj. -1393.73 iterations 7
Cbc0038I Pass  15: suminf.    0.46667 (1) obj. -1661.26 iterations 3
Cbc0038I Pass  16: suminf.    0.39911 (1) obj. -1393.73 iterations 1
Cbc0038I Pass  17: suminf.    0.92606 (6) obj. -1393.73 iterations 6
Cbc0038I Pass  18: suminf.    0.80641 (5) obj. -1393.73 iterations 1
Cbc0038I Pass  19: suminf.    0.46667 (1) obj. -1651.26 iterations 5
Cbc0038I Pass  20: suminf.    0.40413 (1) obj. -1393.73 iterations 1
Cbc0038I Pass  21: suminf.    2.10783 (12) obj. -1393.73 iterations 17
Cbc0038I Pass  22: suminf.    0.95082 (6) obj. -1393.73 iterations 2
Cbc0038I Pass  23: suminf.    0.46177 (5) obj. -1460.47 iterations 3
Cbc0038I Pass  24: suminf.    0.53990 (2) obj. -1393.73 iterations 6
Cbc0038I Pass  25: suminf.    0.36322 (2) obj. -1393.73 iterations 2
Cbc0038I Pass  26: suminf.    0.36322 (2) obj. -1393.73 iterations 0
Cbc0038I Pass  27: suminf.    0.33928 (2) obj. -1393.73 iterations 1
Cbc0038I Pass  28: suminf.    0.33928 (2) obj. -1393.73 iterations 0
Cbc0038I Pass  29: suminf.    1.95067 (10) obj. -1393.73 iterations 22
Cbc0038I Pass  30: suminf.    1.95067 (10) obj. -1393.73 iterations 1
Cbc0038I Pass  31: suminf.    0.49824 (2) obj. -1393.73 iterations 10
Cbc0038I Pass  32: suminf.    0.49824 (2) obj. -1393.73 iterations 0
Cbc0038I Rounding solution of -1521.19 is better than previous of -1328.28

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 35 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -1521.19 to -1979.98 (0.02 seconds)
Cbc0038I Round again with cutoff of -1980.53
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.52188 (17) obj. -1980.53 iterations 8
Cbc0038I Pass  33: suminf.    5.35606 (18) obj. -1980.53 iterations 9
Cbc0038I Pass  34: suminf.    5.13743 (18) obj. -1980.53 iterations 1
Cbc0038I Pass  35: suminf.    5.35606 (18) obj. -1980.53 iterations 4
Cbc0038I Pass  36: suminf.    5.35606 (18) obj. -1980.53 iterations 0
Cbc0038I Pass  37: suminf.    5.35606 (18) obj. -1980.53 iterations 2
Cbc0038I Pass  38: suminf.    5.35606 (18) obj. -1980.53 iterations 0
Cbc0038I Pass  39: suminf.    5.70456 (19) obj. -1980.53 iterations 7
Cbc0038I Pass  40: suminf.    5.35606 (18) obj. -1980.53 iterations 1
Cbc0038I Pass  41: suminf.    5.08372 (18) obj. -1980.53 iterations 1
Cbc0038I Pass  42: suminf.    5.35606 (18) obj. -1980.53 iterations 5
Cbc0038I Pass  43: suminf.    5.13743 (18) obj. -1980.53 iterations 1
Cbc0038I Pass  44: suminf.    5.35606 (18) obj. -1980.53 iterations 4
Cbc0038I Pass  45: suminf.    5.35606 (18) obj. -1980.53 iterations 3
Cbc0038I Pass  46: suminf.    5.08372 (18) obj. -1980.53 iterations 1
Cbc0038I Pass  47: suminf.    5.62085 (20) obj. -1980.53 iterations 6
Cbc0038I Pass  48: suminf.    5.62085 (20) obj. -1980.53 iterations 0
Cbc0038I Pass  49: suminf.    5.96762 (20) obj. -1980.53 iterations 4
Cbc0038I Pass  50: suminf.    5.62085 (20) obj. -1980.53 iterations 1
Cbc0038I Pass  51: suminf.    5.96762 (20) obj. -1980.53 iterations 1
Cbc0038I Pass  52: suminf.    5.35606 (18) obj. -1980.53 iterations 6
Cbc0038I Pass  53: suminf.    5.13743 (18) obj. -1980.53 iterations 1
Cbc0038I Pass  54: suminf.    5.35606 (18) obj. -1980.53 iterations 4
Cbc0038I Pass  55: suminf.    5.60029 (19) obj. -1980.53 iterations 1
Cbc0038I Pass  56: suminf.    5.35606 (18) obj. -1980.53 iterations 1
Cbc0038I Pass  57: suminf.    5.96762 (20) obj. -1980.53 iterations 5
Cbc0038I Pass  58: suminf.    5.62085 (20) obj. -1980.53 iterations 1
Cbc0038I Pass  59: suminf.    5.96762 (20) obj. -1980.53 iterations 1
Cbc0038I Pass  60: suminf.    5.96762 (20) obj. -1980.53 iterations 2
Cbc0038I Pass  61: suminf.    5.96762 (20) obj. -1980.53 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1979.98 - took 0.02 seconds
Cbc0012I Integer solution of -1979.975 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 23 rows 23 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -1982.7727 to -1982.7727 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1979.975, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 25 (-8) columns and 129 (-54) elements
Clp1000I sum of infeasibilities 1.90835e-05 - average 4.43802e-07, 18 fixed columns
Coin0506I Presolve 11 (-32) rows, 7 (-18) columns and 30 (-99) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2507.7712
Clp0000I Optimal - objective value 2507.7712
Coin0511I After Postsolve, objective 2507.7712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2507.7712
Clp0000I Optimal - objective value 2507.7712
Clp0000I Optimal - objective value 2507.7712
Coin0511I After Postsolve, objective 2507.7712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2507.771177 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.70808
Cbc0038I Pass   1: suminf.    0.42857 (1) obj. -1541.99 iterations 5
Cbc0038I Solution found of -403.02
Cbc0038I Relaxing continuous gives -404.449
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -404.449 to -1979.98 (0.01 seconds)
Cbc0038I Round again with cutoff of -1980.51
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17903 (5) obj. -1980.51 iterations 6
Cbc0038I Pass   3: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass   4: suminf.    1.87924 (5) obj. -1980.51 iterations 5
Cbc0038I Pass   5: suminf.    1.87924 (5) obj. -1980.51 iterations 0
Cbc0038I Pass   6: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass   7: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass   8: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass   9: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  10: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  11: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  12: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  13: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  14: suminf.    1.72151 (6) obj. -1980.51 iterations 3
Cbc0038I Pass  15: suminf.    0.17903 (5) obj. -1980.51 iterations 2
Cbc0038I Pass  16: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  17: suminf.    1.87924 (5) obj. -1980.51 iterations 5
Cbc0038I Pass  18: suminf.    1.87924 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  19: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass  20: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass  21: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass  22: suminf.    1.77432 (5) obj. -1980.51 iterations 3
Cbc0038I Pass  23: suminf.    0.17903 (5) obj. -1980.51 iterations 2
Cbc0038I Pass  24: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  25: suminf.    1.87924 (5) obj. -1980.51 iterations 5
Cbc0038I Pass  26: suminf.    1.87924 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  27: suminf.    0.17903 (5) obj. -1980.51 iterations 1
Cbc0038I Pass  28: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  29: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  30: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I Pass  31: suminf.    0.17903 (5) obj. -1980.51 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -1979.98 - took 0.01 seconds
Cbc0012I Integer solution of -1979.975 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 42 rows 25 columns, reduced to 9 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -1985.3397 to -1985.3397 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1979.975, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 49 (-14) columns and 380 (-269) elements
Clp1000I sum of infeasibilities 3.52938e-09 - average 8.02131e-11, 43 fixed columns
Coin0506I Presolve 6 (-38) rows, 6 (-43) columns and 20 (-360) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 2474.4504
Clp0000I Optimal - objective value 2474.4504
Coin0511I After Postsolve, objective 2474.4504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6162165 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 2518.1425
Clp0000I Optimal - objective value 2518.1425
Clp0000I Optimal - objective value 2518.1425
Coin0511I After Postsolve, objective 2518.1425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2518.142529 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 387 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.586%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.84735
Cbc0038I Pass   1: suminf.    0.50593 (6) obj. -396.943 iterations 17
Cbc0038I Pass   2: suminf.    0.50593 (6) obj. -396.943 iterations 0
Cbc0038I Solution found of -391.449
Cbc0038I Rounding solution of -900.088 is better than previous of -391.449

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -900.088 to -1328.28 (0.02 seconds)
Cbc0038I Round again with cutoff of -1393.66
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.50581 (8) obj. -1393.66 iterations 1
Cbc0038I Pass   4: suminf.    0.94402 (7) obj. -1516.93 iterations 2
Cbc0038I Pass   5: suminf.    0.49718 (1) obj. -1393.66 iterations 7
Cbc0038I Pass   6: suminf.    0.43810 (1) obj. -1511.44 iterations 1
Cbc0038I Pass   7: suminf.    1.63634 (11) obj. -1393.66 iterations 12
Cbc0038I Pass   8: suminf.    1.30525 (9) obj. -1393.66 iterations 5
Cbc0038I Pass   9: suminf.    0.91847 (3) obj. -1393.66 iterations 12
Cbc0038I Pass  10: suminf.    0.14616 (1) obj. -1393.66 iterations 2
Cbc0038I Pass  11: suminf.    0.30000 (1) obj. -1502.84 iterations 2
Cbc0038I Pass  12: suminf.    1.73910 (10) obj. -1393.66 iterations 16
Cbc0038I Pass  13: suminf.    0.99495 (4) obj. -1488 iterations 8
Cbc0038I Pass  14: suminf.    0.65204 (2) obj. -1393.66 iterations 6
Cbc0038I Pass  15: suminf.    0.46667 (1) obj. -1661.26 iterations 3
Cbc0038I Pass  16: suminf.    0.39908 (1) obj. -1393.66 iterations 1
Cbc0038I Pass  17: suminf.    0.95176 (6) obj. -1393.66 iterations 6
Cbc0038I Pass  18: suminf.    0.83214 (5) obj. -1393.66 iterations 1
Cbc0038I Pass  19: suminf.    0.46667 (1) obj. -1651.26 iterations 5
Cbc0038I Pass  20: suminf.    0.40409 (1) obj. -1393.66 iterations 1
Cbc0038I Pass  21: suminf.    1.00074 (6) obj. -1393.66 iterations 20
Cbc0038I Pass  22: suminf.    0.51400 (5) obj. -1460.38 iterations 5
Cbc0038I Pass  23: suminf.    0.53983 (2) obj. -1393.66 iterations 6
Cbc0038I Pass  24: suminf.    0.36311 (2) obj. -1393.66 iterations 2
Cbc0038I Pass  25: suminf.    0.36311 (2) obj. -1393.66 iterations 0
Cbc0038I Pass  26: suminf.    0.33909 (2) obj. -1393.66 iterations 1
Cbc0038I Pass  27: suminf.    0.33909 (2) obj. -1393.66 iterations 0
Cbc0038I Pass  28: suminf.    1.89019 (12) obj. -1393.66 iterations 20
Cbc0038I Pass  29: suminf.    0.78512 (6) obj. -1441.15 iterations 8
Cbc0038I Pass  30: suminf.    0.66329 (2) obj. -1393.66 iterations 8
Cbc0038I Pass  31: suminf.    0.46667 (1) obj. -1651.26 iterations 2
Cbc0038I Pass  32: suminf.    0.40409 (1) obj. -1393.66 iterations 1
Cbc0038I Rounding solution of -1521.19 is better than previous of -1328.28

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 34 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -1521.19 to -1979.98 (0.03 seconds)
Cbc0038I Round again with cutoff of -1980.4
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass  32: suminf.    5.22935 (17) obj. -1980.4 iterations 9
Cbc0038I Pass  33: suminf.    6.02848 (20) obj. -1980.4 iterations 8
Cbc0038I Pass  34: suminf.    6.02848 (20) obj. -1980.4 iterations 0
Cbc0038I Pass  35: suminf.    6.02848 (20) obj. -1980.4 iterations 2
Cbc0038I Pass  36: suminf.    6.02848 (19) obj. -1980.4 iterations 1
Cbc0038I Pass  37: suminf.    6.02848 (20) obj. -1980.4 iterations 2
Cbc0038I Pass  38: suminf.    6.02848 (20) obj. -1980.4 iterations 0
Cbc0038I Pass  39: suminf.    6.08707 (20) obj. -1980.4 iterations 4
Cbc0038I Pass  40: suminf.    6.08707 (19) obj. -1980.4 iterations 1
Cbc0038I Pass  41: suminf.    6.02848 (20) obj. -1980.4 iterations 2
Cbc0038I Pass  42: suminf.    6.02848 (20) obj. -1980.4 iterations 0
Cbc0038I Pass  43: suminf.    6.02848 (20) obj. -1980.4 iterations 2
Cbc0038I Pass  44: suminf.    6.02848 (19) obj. -1980.4 iterations 1
Cbc0038I Pass  45: suminf.    6.02848 (20) obj. -1980.4 iterations 2
Cbc0038I Pass  46: suminf.    6.67304 (21) obj. -1980.4 iterations 4
Cbc0038I Pass  47: suminf.    6.67304 (21) obj. -1980.4 iterations 0
Cbc0038I Pass  48: suminf.    6.51190 (21) obj. -1980.4 iterations 1
Cbc0038I Pass  49: suminf.    6.51190 (21) obj. -1980.4 iterations 0
Cbc0038I Pass  50: suminf.    6.67304 (21) obj. -1980.4 iterations 2
Cbc0038I Pass  51: suminf.    6.35148 (20) obj. -1980.4 iterations 3
Cbc0038I Pass  52: suminf.    6.15646 (20) obj. -1980.4 iterations 1
Cbc0038I Pass  53: suminf.    6.51190 (21) obj. -1980.4 iterations 2
Cbc0038I Pass  54: suminf.    6.67304 (21) obj. -1980.4 iterations 4
Cbc0038I Pass  55: suminf.    6.67304 (21) obj. -1980.4 iterations 0
Cbc0038I Pass  56: suminf.    6.51190 (21) obj. -1980.4 iterations 1
Cbc0038I Pass  57: suminf.    6.51190 (21) obj. -1980.4 iterations 0
Cbc0038I Pass  58: suminf.    6.51190 (21) obj. -1980.4 iterations 2
Cbc0038I Pass  59: suminf.    6.35148 (20) obj. -1980.4 iterations 1
Cbc0038I Pass  60: suminf.    6.15646 (20) obj. -1980.4 iterations 1
Cbc0038I Pass  61: suminf.    6.51190 (21) obj. -1980.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1979.98 - took 0.02 seconds
Cbc0012I Integer solution of -1979.975 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 22 rows 23 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -1982.0887 to -1982.0887 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1979.975, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

