Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 375 (-78) elements
Clp1000I sum of infeasibilities 1.85748e-05 - average 1.51015e-07, 54 fixed columns
Coin0506I Presolve 6 (-117) rows, 8 (-60) columns and 24 (-351) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Coin0511I After Postsolve, objective 14717.017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.827586 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Coin0511I After Postsolve, objective 14717.017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14717.01657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 68 columns (67 integer (67 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.846%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.72857
Cbc0038I Solution found of -9166.76
Cbc0038I Relaxing continuous gives -9166.76
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -9166.76 to -11034.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -11402.7
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.45193 (1) obj. -11402.7 iterations 18
Cbc0038I Pass   2: suminf.    0.12121 (1) obj. -13514.6 iterations 1
Cbc0038I Pass   3: suminf.    1.72410 (5) obj. -11402.7 iterations 15
Cbc0038I Pass   4: suminf.    0.24702 (1) obj. -11402.7 iterations 11
Cbc0038I Pass   5: suminf.    0.23333 (1) obj. -11470.4 iterations 1
Cbc0038I Pass   6: suminf.    0.89474 (2) obj. -12143.7 iterations 12
Cbc0038I Pass   7: suminf.    0.30146 (1) obj. -11402.7 iterations 7
Cbc0038I Pass   8: suminf.    0.38710 (2) obj. -12355.9 iterations 6
Cbc0038I Pass   9: suminf.    0.30146 (1) obj. -11402.7 iterations 6
Cbc0038I Pass  10: suminf.    0.57760 (6) obj. -11402.7 iterations 17
Cbc0038I Pass  11: suminf.    0.08386 (5) obj. -11402.7 iterations 16
Cbc0038I Pass  12: suminf.    1.07684 (3) obj. -12869 iterations 13
Cbc0038I Pass  13: suminf.    0.93878 (2) obj. -12543.5 iterations 1
Cbc0038I Pass  14: suminf.    0.35943 (1) obj. -11402.7 iterations 2
Cbc0038I Pass  15: suminf.    0.21212 (1) obj. -13522.5 iterations 1
Cbc0038I Pass  16: suminf.    0.35723 (5) obj. -11402.7 iterations 23
Cbc0038I Pass  17: suminf.    0.12460 (1) obj. -11402.7 iterations 8
Cbc0038I Pass  18: suminf.    0.23333 (1) obj. -11940.7 iterations 1
Cbc0038I Pass  19: suminf.    1.24294 (4) obj. -11402.7 iterations 7
Cbc0038I Pass  20: suminf.    1.24294 (4) obj. -11402.7 iterations 1
Cbc0038I Pass  21: suminf.    0.29606 (1) obj. -11402.7 iterations 8
Cbc0038I Pass  22: suminf.    0.29606 (1) obj. -11402.7 iterations 0
Cbc0038I Pass  23: suminf.    0.42857 (2) obj. -12211.3 iterations 4
Cbc0038I Pass  24: suminf.    0.30543 (2) obj. -11402.7 iterations 14
Cbc0038I Pass  25: suminf.    0.30329 (2) obj. -11402.7 iterations 12
Cbc0038I Pass  26: suminf.    0.19875 (1) obj. -11402.7 iterations 7
Cbc0038I Pass  27: suminf.    0.46667 (1) obj. -12728.2 iterations 1
Cbc0038I Pass  28: suminf.    0.50000 (2) obj. -11402.7 iterations 7
Cbc0038I Pass  29: suminf.    1.45406 (4) obj. -11402.7 iterations 18
Cbc0038I Pass  30: suminf.    0.97320 (3) obj. -11402.7 iterations 4
Cbc0038I Rounding solution of -12261.6 is better than previous of -11034.5

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -12261.6 to -13343.4 (0.03 seconds)
Cbc0038I Round again with cutoff of -13618.1
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.34069 (5) obj. -13618.1 iterations 5
Cbc0038I Pass  31: suminf.    0.20164 (7) obj. -13618.1 iterations 3
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -13674.8 iterations 11
Cbc0038I Pass  33: suminf.    0.15522 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  34: suminf.    1.51314 (4) obj. -13618.1 iterations 8
Cbc0038I Pass  35: suminf.    0.11973 (1) obj. -13618.1 iterations 6
Cbc0038I Pass  36: suminf.    0.10000 (1) obj. -13715.7 iterations 1
Cbc0038I Pass  37: suminf.    0.43333 (1) obj. -13908.8 iterations 6
Cbc0038I Pass  38: suminf.    0.43333 (1) obj. -13908.8 iterations 5
Cbc0038I Pass  39: suminf.    0.49208 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  40: suminf.    0.65747 (2) obj. -13734.7 iterations 9
Cbc0038I Pass  41: suminf.    0.65747 (2) obj. -13734.7 iterations 2
Cbc0038I Pass  42: suminf.    0.76590 (2) obj. -13618.1 iterations 10
Cbc0038I Pass  43: suminf.    0.37681 (2) obj. -13618.1 iterations 3
Cbc0038I Pass  44: suminf.    0.90374 (2) obj. -13618.1 iterations 10
Cbc0038I Pass  45: suminf.    0.49208 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  46: suminf.    0.43333 (1) obj. -13908.8 iterations 1
Cbc0038I Pass  47: suminf.    0.10000 (1) obj. -13715.7 iterations 2
Cbc0038I Pass  48: suminf.    0.10000 (1) obj. -13715.7 iterations 1
Cbc0038I Pass  49: suminf.    0.11973 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  50: suminf.    0.51806 (3) obj. -13618.1 iterations 20
Cbc0038I Pass  51: suminf.    0.24327 (4) obj. -13618.1 iterations 5
Cbc0038I Pass  52: suminf.    1.25000 (4) obj. -14170.5 iterations 11
Cbc0038I Pass  53: suminf.    1.05634 (3) obj. -13747.8 iterations 1
Cbc0038I Pass  54: suminf.    0.83333 (2) obj. -13618.1 iterations 17
Cbc0038I Pass  55: suminf.    0.16667 (1) obj. -13674.8 iterations 2
Cbc0038I Pass  56: suminf.    0.15522 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  57: suminf.    0.28714 (3) obj. -13618.1 iterations 10
Cbc0038I Pass  58: suminf.    0.15522 (1) obj. -13618.1 iterations 9
Cbc0038I Pass  59: suminf.    0.33672 (2) obj. -13618.1 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -13343.4 - took 0.03 seconds
Cbc0012I Integer solution of -13343.43 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 122 rows 68 columns, reduced to 18 rows 11 columns
Cbc0031I 8 added rows had average density of 19.125
Cbc0013I At root node, 8 cuts changed objective from -14717.017 to -14102.944 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 66.4 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13343.43, took 381 iterations and 8 nodes (0.77 seconds)
Cbc0032I Strong branching done 92 times (466 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 113 (-39) columns and 1895 (-1408) elements
Clp1000I sum of infeasibilities 5.24181e-08 - average 5.13902e-10, 77 fixed columns
Coin0506I Presolve 34 (-68) rows, 36 (-77) columns and 167 (-1728) elements
Clp0006I 0  Obj 14751.744 Dual inf 451.62792 (36)
Clp0029I End of values pass after 36 iterations
Clp0000I Optimal - objective value 14756.065
Clp0000I Optimal - objective value 14756.065
Coin0511I After Postsolve, objective 14756.065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 14756.065 Dual inf 13841.919 (10)
Clp0014I Perturbing problem by 0.001% of 1.8160916 - largest nonzero change 2.8696192e-05 ( 0.0028696192%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 14756.065
Clp0000I Optimal - objective value 14756.065
Clp0000I Optimal - objective value 14756.065
Coin0511I After Postsolve, objective 14756.065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14756.06494 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 113 columns (113 integer (113 of which binary)) and 1924 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.091%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 7.34147
Cbc0038I Pass   1: suminf.    0.23568 (14) obj. -5329.82 iterations 28
Cbc0038I Pass   2: suminf.    0.23568 (14) obj. -5329.82 iterations 1
Cbc0038I Pass   3: suminf.    0.01493 (1) obj. -5315.08 iterations 19
Cbc0038I Solution found of -5314.09
Cbc0038I Rounding solution of -7057.92 is better than previous of -5314.09

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7057.92 to -11034.5 (0.05 seconds)
Cbc0038I Round again with cutoff of -11405.2
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.65223 (15) obj. -11405.2 iterations 8
Cbc0038I Pass   5: suminf.    0.65223 (15) obj. -11405.2 iterations 2
Cbc0038I Pass   6: suminf.    0.48761 (3) obj. -11492.1 iterations 14
Cbc0038I Pass   7: suminf.    0.47173 (1) obj. -11405.2 iterations 3
Cbc0038I Pass   8: suminf.    0.45455 (1) obj. -11490.2 iterations 1
Cbc0038I Pass   9: suminf.    0.98959 (13) obj. -11405.2 iterations 19
Cbc0038I Pass  10: suminf.    0.98047 (13) obj. -11405.2 iterations 10
Cbc0038I Pass  11: suminf.    0.85271 (4) obj. -11405.2 iterations 20
Cbc0038I Pass  12: suminf.    0.70247 (4) obj. -11405.2 iterations 10
Cbc0038I Pass  13: suminf.    0.68517 (5) obj. -11405.2 iterations 12
Cbc0038I Pass  14: suminf.    0.68517 (5) obj. -11405.2 iterations 0
Cbc0038I Pass  15: suminf.    0.22667 (1) obj. -11405.2 iterations 10
Cbc0038I Solution found of -12193.4
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 35 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -12193.4 to -12952.9 (0.09 seconds)
Cbc0038I Round again with cutoff of -13310.6
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  16: suminf.    2.26266 (28) obj. -13310.6 iterations 2
Cbc0038I Pass  17: suminf.    2.26266 (28) obj. -13310.6 iterations 0
Cbc0038I Pass  18: suminf.    1.59907 (7) obj. -13310.6 iterations 38
Cbc0038I Pass  19: suminf.    0.43852 (8) obj. -13310.6 iterations 5
Cbc0038I Pass  20: suminf.    0.43852 (8) obj. -13310.6 iterations 2
Cbc0038I Pass  21: suminf.    1.25000 (4) obj. -14168.5 iterations 19
Cbc0038I Pass  22: suminf.    1.05634 (3) obj. -13745.8 iterations 1
Cbc0038I Pass  23: suminf.    0.11501 (1) obj. -13310.6 iterations 12
Cbc0038I Pass  24: suminf.    0.11501 (1) obj. -13310.6 iterations 0
Cbc0038I Pass  25: suminf.    0.16667 (1) obj. -13672.8 iterations 2
Cbc0038I Pass  26: suminf.    0.09346 (1) obj. -13310.6 iterations 1
Cbc0038I Pass  27: suminf.    0.58037 (16) obj. -13310.6 iterations 28
Cbc0038I Pass  28: suminf.    0.41977 (9) obj. -13310.6 iterations 14
Cbc0038I Pass  29: suminf.    0.10000 (1) obj. -13314.2 iterations 9
Cbc0038I Pass  30: suminf.    0.09926 (1) obj. -13310.6 iterations 1
Cbc0038I Pass  31: suminf.    0.84652 (9) obj. -13310.6 iterations 26
Cbc0038I Pass  32: suminf.    0.46537 (7) obj. -13310.6 iterations 5
Cbc0038I Pass  33: suminf.    0.23333 (1) obj. -13509.4 iterations 7
Cbc0038I Pass  34: suminf.    0.19316 (1) obj. -13310.6 iterations 1
Cbc0038I Pass  35: suminf.    0.62339 (8) obj. -13310.6 iterations 15
Cbc0038I Pass  36: suminf.    0.62339 (8) obj. -13310.6 iterations 5
Cbc0038I Pass  37: suminf.    0.44125 (2) obj. -13310.6 iterations 8
Cbc0038I Pass  38: suminf.    0.41121 (1) obj. -13310.6 iterations 2
Cbc0038I Pass  39: suminf.    0.41121 (1) obj. -13310.6 iterations 0
Cbc0038I Pass  40: suminf.    0.56412 (2) obj. -13310.6 iterations 1
Cbc0038I Pass  41: suminf.    0.79874 (8) obj. -13310.6 iterations 10
Cbc0038I Pass  42: suminf.    0.79874 (8) obj. -13310.6 iterations 2
Cbc0038I Pass  43: suminf.    0.41174 (1) obj. -13310.6 iterations 7
Cbc0038I Pass  44: suminf.    0.41174 (1) obj. -13310.6 iterations 0
Cbc0038I Pass  45: suminf.    0.56469 (2) obj. -13310.6 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 41 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -12952.9 to -13343.4 (0.13 seconds)
Cbc0038I Round again with cutoff of -13762.8
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 4
Cbc0038I Pass  45: suminf.    2.94888 (33) obj. -13762.8 iterations 8
Cbc0038I Pass  46: suminf.    2.94888 (33) obj. -13762.8 iterations 0
Cbc0038I Pass  47: suminf.    2.01455 (15) obj. -13762.8 iterations 22
Cbc0038I Pass  48: suminf.    1.97646 (16) obj. -13762.8 iterations 1
Cbc0038I Pass  49: suminf.    1.25000 (4) obj. -14168.5 iterations 26
Cbc0038I Pass  50: suminf.    1.06416 (4) obj. -13762.8 iterations 1
Cbc0038I Pass  51: suminf.    0.29150 (4) obj. -13762.8 iterations 10
Cbc0038I Pass  52: suminf.    1.25000 (4) obj. -14168.5 iterations 15
Cbc0038I Pass  53: suminf.    2.87077 (13) obj. -13762.8 iterations 11
Cbc0038I Pass  54: suminf.    1.10696 (11) obj. -13762.8 iterations 10
Cbc0038I Pass  55: suminf.    1.09543 (11) obj. -13762.8 iterations 2
Cbc0038I Pass  56: suminf.    1.08544 (4) obj. -13762.8 iterations 19
Cbc0038I Pass  57: suminf.    1.08544 (4) obj. -13762.8 iterations 0
Cbc0038I Pass  58: suminf.    0.38671 (4) obj. -13762.8 iterations 10
Cbc0038I Pass  59: suminf.    0.38671 (4) obj. -13762.8 iterations 1
Cbc0038I Pass  60: suminf.    1.09189 (4) obj. -14387.6 iterations 13
Cbc0038I Pass  61: suminf.    0.38671 (4) obj. -13762.8 iterations 10
Cbc0038I Pass  62: suminf.    1.84860 (9) obj. -13762.8 iterations 10
Cbc0038I Pass  63: suminf.    0.77716 (6) obj. -13762.8 iterations 7
Cbc0038I Pass  64: suminf.    0.77716 (6) obj. -13762.8 iterations 0
Cbc0038I Pass  65: suminf.    1.09189 (4) obj. -14382.6 iterations 16
Cbc0038I Pass  66: suminf.    0.41097 (4) obj. -13762.8 iterations 9
Cbc0038I Pass  67: suminf.    0.41097 (4) obj. -13762.8 iterations 1
Cbc0038I Pass  68: suminf.    1.94340 (10) obj. -13762.8 iterations 12
Cbc0038I Pass  69: suminf.    1.84329 (11) obj. -13762.8 iterations 8
Cbc0038I Pass  70: suminf.    1.25000 (4) obj. -14160.5 iterations 22
Cbc0038I Pass  71: suminf.    1.06782 (4) obj. -13762.8 iterations 1
Cbc0038I Pass  72: suminf.    0.30945 (4) obj. -13762.8 iterations 10
Cbc0038I Pass  73: suminf.    1.09189 (4) obj. -14383.6 iterations 12
Cbc0038I Pass  74: suminf.    0.40611 (4) obj. -13762.8 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 113 columns, reduced to 36 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -13343.4 - took 0.12 seconds
Cbc0012I Integer solution of -13343.43 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 100 rows 113 columns, reduced to 34 rows 36 columns
Cbc0031I 29 added rows had average density of 14.827586
Cbc0013I At root node, 29 cuts changed objective from -14741.436 to -14059.184 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 375 row cuts average 5.3 elements, 10 column cuts (10 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 92 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 57.4 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13343.43 best solution, best possible -14059.184 (0.43 seconds)
Cbc0001I Search completed - best objective -13343.43, took 849 iterations and 10 nodes (0.89 seconds)
Cbc0032I Strong branching done 194 times (2019 iterations), fathomed 2 nodes and fixed 17 variables
Cbc0035I Maximum depth 3, 48 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.90

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 375 (-78) elements
Clp1000I sum of infeasibilities 1.85748e-05 - average 1.51015e-07, 54 fixed columns
Coin0506I Presolve 6 (-117) rows, 8 (-60) columns and 24 (-351) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Coin0511I After Postsolve, objective 14717.017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.827586 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Coin0511I After Postsolve, objective 14717.017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14717.01657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 68 columns (67 integer (67 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.846%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.72857
Cbc0038I Solution found of -9166.76
Cbc0038I Relaxing continuous gives -9166.76
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -9166.76 to -11034.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -11402.7
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.45193 (1) obj. -11402.7 iterations 18
Cbc0038I Pass   2: suminf.    0.12121 (1) obj. -13514.6 iterations 1
Cbc0038I Pass   3: suminf.    1.72410 (5) obj. -11402.7 iterations 15
Cbc0038I Pass   4: suminf.    0.24702 (1) obj. -11402.7 iterations 11
Cbc0038I Pass   5: suminf.    0.23333 (1) obj. -11470.4 iterations 1
Cbc0038I Pass   6: suminf.    0.89474 (2) obj. -12143.7 iterations 12
Cbc0038I Pass   7: suminf.    0.30146 (1) obj. -11402.7 iterations 7
Cbc0038I Pass   8: suminf.    0.38710 (2) obj. -12355.9 iterations 6
Cbc0038I Pass   9: suminf.    0.30146 (1) obj. -11402.7 iterations 6
Cbc0038I Pass  10: suminf.    0.57760 (6) obj. -11402.7 iterations 17
Cbc0038I Pass  11: suminf.    0.08386 (5) obj. -11402.7 iterations 16
Cbc0038I Pass  12: suminf.    1.07684 (3) obj. -12869 iterations 13
Cbc0038I Pass  13: suminf.    0.93878 (2) obj. -12543.5 iterations 1
Cbc0038I Pass  14: suminf.    0.35943 (1) obj. -11402.7 iterations 2
Cbc0038I Pass  15: suminf.    0.21212 (1) obj. -13522.5 iterations 1
Cbc0038I Pass  16: suminf.    0.35723 (5) obj. -11402.7 iterations 23
Cbc0038I Pass  17: suminf.    0.12460 (1) obj. -11402.7 iterations 8
Cbc0038I Pass  18: suminf.    0.23333 (1) obj. -11940.7 iterations 1
Cbc0038I Pass  19: suminf.    1.24294 (4) obj. -11402.7 iterations 7
Cbc0038I Pass  20: suminf.    1.24294 (4) obj. -11402.7 iterations 1
Cbc0038I Pass  21: suminf.    0.29606 (1) obj. -11402.7 iterations 8
Cbc0038I Pass  22: suminf.    0.29606 (1) obj. -11402.7 iterations 0
Cbc0038I Pass  23: suminf.    0.42857 (2) obj. -12211.3 iterations 4
Cbc0038I Pass  24: suminf.    0.30543 (2) obj. -11402.7 iterations 14
Cbc0038I Pass  25: suminf.    0.30329 (2) obj. -11402.7 iterations 12
Cbc0038I Pass  26: suminf.    0.19875 (1) obj. -11402.7 iterations 7
Cbc0038I Pass  27: suminf.    0.46667 (1) obj. -12728.2 iterations 1
Cbc0038I Pass  28: suminf.    0.50000 (2) obj. -11402.7 iterations 7
Cbc0038I Pass  29: suminf.    1.45406 (4) obj. -11402.7 iterations 18
Cbc0038I Pass  30: suminf.    0.97320 (3) obj. -11402.7 iterations 4
Cbc0038I Rounding solution of -12261.6 is better than previous of -11034.5

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -12261.6 to -13343.4 (0.03 seconds)
Cbc0038I Round again with cutoff of -13618.1
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.34069 (5) obj. -13618.1 iterations 5
Cbc0038I Pass  31: suminf.    0.20164 (7) obj. -13618.1 iterations 3
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -13674.8 iterations 11
Cbc0038I Pass  33: suminf.    0.15522 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  34: suminf.    1.51314 (4) obj. -13618.1 iterations 8
Cbc0038I Pass  35: suminf.    0.11973 (1) obj. -13618.1 iterations 6
Cbc0038I Pass  36: suminf.    0.10000 (1) obj. -13715.7 iterations 1
Cbc0038I Pass  37: suminf.    0.43333 (1) obj. -13908.8 iterations 6
Cbc0038I Pass  38: suminf.    0.43333 (1) obj. -13908.8 iterations 5
Cbc0038I Pass  39: suminf.    0.49208 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  40: suminf.    0.65747 (2) obj. -13734.7 iterations 9
Cbc0038I Pass  41: suminf.    0.65747 (2) obj. -13734.7 iterations 2
Cbc0038I Pass  42: suminf.    0.76590 (2) obj. -13618.1 iterations 10
Cbc0038I Pass  43: suminf.    0.37681 (2) obj. -13618.1 iterations 3
Cbc0038I Pass  44: suminf.    0.90374 (2) obj. -13618.1 iterations 10
Cbc0038I Pass  45: suminf.    0.49208 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  46: suminf.    0.43333 (1) obj. -13908.8 iterations 1
Cbc0038I Pass  47: suminf.    0.10000 (1) obj. -13715.7 iterations 2
Cbc0038I Pass  48: suminf.    0.10000 (1) obj. -13715.7 iterations 1
Cbc0038I Pass  49: suminf.    0.11973 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  50: suminf.    0.51806 (3) obj. -13618.1 iterations 20
Cbc0038I Pass  51: suminf.    0.24327 (4) obj. -13618.1 iterations 5
Cbc0038I Pass  52: suminf.    1.25000 (4) obj. -14170.5 iterations 11
Cbc0038I Pass  53: suminf.    1.05634 (3) obj. -13747.8 iterations 1
Cbc0038I Pass  54: suminf.    0.83333 (2) obj. -13618.1 iterations 17
Cbc0038I Pass  55: suminf.    0.16667 (1) obj. -13674.8 iterations 2
Cbc0038I Pass  56: suminf.    0.15522 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  57: suminf.    0.28714 (3) obj. -13618.1 iterations 10
Cbc0038I Pass  58: suminf.    0.15522 (1) obj. -13618.1 iterations 9
Cbc0038I Pass  59: suminf.    0.33672 (2) obj. -13618.1 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -13343.4 - took 0.03 seconds
Cbc0012I Integer solution of -13343.43 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 122 rows 68 columns, reduced to 18 rows 11 columns
Cbc0031I 8 added rows had average density of 19.125
Cbc0013I At root node, 8 cuts changed objective from -14717.017 to -14102.944 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 66.4 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0010I After 4 nodes, 3 on tree, -13343.43 best solution, best possible -13713.129 (0.74 seconds)
Cbc0001I Search completed - best objective -13343.43, took 381 iterations and 8 nodes (0.94 seconds)
Cbc0032I Strong branching done 92 times (466 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.57   (Wallclock seconds):       0.95

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 111 (-42) columns and 1822 (-1482) elements
Clp1000I sum of infeasibilities 5.89994e-09 - average 5.89994e-11, 75 fixed columns
Coin0506I Presolve 34 (-66) rows, 36 (-75) columns and 167 (-1655) elements
Clp0006I 0  Obj 14751.885 Dual inf 451.62792 (36)
Clp0029I End of values pass after 36 iterations
Clp0000I Optimal - objective value 14756.065
Clp0000I Optimal - objective value 14756.065
Coin0511I After Postsolve, objective 14756.065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 14756.065 Dual inf 13841.919 (10)
Clp0014I Perturbing problem by 0.001% of 1.8321995 - largest nonzero change 1.1869546e-05 ( 0.0011869546%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 14756.065
Clp0000I Optimal - objective value 14756.065
Clp0000I Optimal - objective value 14756.065
Coin0511I After Postsolve, objective 14756.065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14756.06494 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 111 columns (111 integer (111 of which binary)) and 1847 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.066%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 7.34228
Cbc0038I Pass   1: suminf.    0.24394 (14) obj. -5329.81 iterations 27
Cbc0038I Pass   2: suminf.    0.24394 (14) obj. -5329.81 iterations 1
Cbc0038I Solution found of -5314.09
Cbc0038I Rounding solution of -7057.92 is better than previous of -5314.09

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7057.92 to -11034.5 (0.05 seconds)
Cbc0038I Round again with cutoff of -11405.2
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.22406 (27) obj. -11405.2 iterations 9
Cbc0038I Pass   4: suminf.    0.66343 (15) obj. -11405.2 iterations 6
Cbc0038I Pass   5: suminf.    0.52414 (5) obj. -11494.1 iterations 12
Cbc0038I Pass   6: suminf.    0.47173 (1) obj. -11405.2 iterations 5
Cbc0038I Pass   7: suminf.    0.45455 (1) obj. -11490.2 iterations 1
Cbc0038I Pass   8: suminf.    2.64331 (20) obj. -11405.2 iterations 22
Cbc0038I Pass   9: suminf.    2.64331 (20) obj. -11405.2 iterations 3
Cbc0038I Pass  10: suminf.    0.00515 (1) obj. -11405.2 iterations 34
Cbc0038I Pass  11: suminf.    0.00515 (1) obj. -11405.2 iterations 0
Cbc0038I Pass  12: suminf.    0.46429 (2) obj. -12830.1 iterations 6
Cbc0038I Pass  13: suminf.    0.09352 (1) obj. -11405.2 iterations 4
Cbc0038I Pass  14: suminf.    0.09352 (1) obj. -11405.2 iterations 0
Cbc0038I Pass  15: suminf.    1.12283 (8) obj. -11405.2 iterations 25
Cbc0038I Pass  16: suminf.    1.12283 (8) obj. -11405.2 iterations 4
Cbc0038I Pass  17: suminf.    0.09667 (3) obj. -11405.2 iterations 12
Cbc0038I Pass  18: suminf.    0.09667 (3) obj. -11405.2 iterations 0
Cbc0038I Pass  19: suminf.    0.46429 (2) obj. -12837.1 iterations 5
Cbc0038I Pass  20: suminf.    0.09169 (1) obj. -11405.2 iterations 3
Cbc0038I Pass  21: suminf.    0.09169 (1) obj. -11405.2 iterations 0
Cbc0038I Pass  22: suminf.    0.87167 (3) obj. -11405.2 iterations 18
Cbc0038I Pass  23: suminf.    0.36612 (2) obj. -11405.2 iterations 4
Cbc0038I Pass  24: suminf.    0.18553 (2) obj. -12298.6 iterations 1
Cbc0038I Pass  25: suminf.    0.34705 (1) obj. -11405.2 iterations 2
Cbc0038I Pass  26: suminf.    0.16667 (1) obj. -12297.6 iterations 1
Cbc0038I Pass  27: suminf.    1.20578 (7) obj. -11405.2 iterations 17
Cbc0038I Pass  28: suminf.    0.93567 (5) obj. -11405.2 iterations 5
Cbc0038I Pass  29: suminf.    0.24361 (1) obj. -11405.2 iterations 8
Cbc0038I Pass  30: suminf.    0.03333 (1) obj. -12087.4 iterations 4
Cbc0038I Pass  31: suminf.    0.17122 (1) obj. -11405.2 iterations 1
Cbc0038I Pass  32: suminf.    1.02261 (16) obj. -11405.2 iterations 21
Cbc0038I Rounding solution of -11469.7 is better than previous of -11034.5

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 42 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -11469.7 to -12952.9 (0.09 seconds)
Cbc0038I Round again with cutoff of -13310.6
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.17546 (27) obj. -13310.6 iterations 0
Cbc0038I Pass  33: suminf.    2.17546 (27) obj. -13310.6 iterations 0
Cbc0038I Pass  34: suminf.    0.20905 (3) obj. -13310.6 iterations 37
Cbc0038I Pass  35: suminf.    0.12121 (1) obj. -13514.6 iterations 9
Cbc0038I Pass  36: suminf.    0.16245 (1) obj. -13310.6 iterations 1
Cbc0038I Pass  37: suminf.    0.81366 (8) obj. -13310.6 iterations 17
Cbc0038I Pass  38: suminf.    0.71716 (7) obj. -13310.6 iterations 5
Cbc0038I Pass  39: suminf.    0.33333 (1) obj. -13486.2 iterations 7
Cbc0038I Pass  40: suminf.    0.29784 (1) obj. -13310.6 iterations 1
Cbc0038I Pass  41: suminf.    1.17712 (9) obj. -13310.6 iterations 17
Cbc0038I Pass  42: suminf.    1.17712 (9) obj. -13310.6 iterations 2
Cbc0038I Pass  43: suminf.    0.25224 (1) obj. -13310.6 iterations 11
Cbc0038I Pass  44: suminf.    0.21429 (2) obj. -13334.3 iterations 4
Cbc0038I Pass  45: suminf.    1.41345 (7) obj. -13310.6 iterations 13
Cbc0038I Pass  46: suminf.    0.34660 (5) obj. -13337 iterations 19
Cbc0038I Pass  47: suminf.    0.25172 (1) obj. -13310.6 iterations 7
Cbc0038I Pass  48: suminf.    0.21429 (2) obj. -13332.3 iterations 4
Cbc0038I Pass  49: suminf.    0.57783 (7) obj. -13310.6 iterations 22
Cbc0038I Pass  50: suminf.    0.38778 (4) obj. -13310.6 iterations 7
Cbc0038I Pass  51: suminf.    0.23333 (1) obj. -13512.4 iterations 4
Cbc0038I Pass  52: suminf.    0.19255 (1) obj. -13310.6 iterations 1
Cbc0038I Pass  53: suminf.    2.15437 (10) obj. -13310.6 iterations 31
Cbc0038I Pass  54: suminf.    0.98454 (10) obj. -13310.6 iterations 2
Cbc0038I Pass  55: suminf.    0.45926 (9) obj. -13310.6 iterations 4
Cbc0038I Pass  56: suminf.    0.12195 (3) obj. -13310.6 iterations 16
Cbc0038I Pass  57: suminf.    0.10520 (3) obj. -13310.6 iterations 10
Cbc0038I Pass  58: suminf.    0.38621 (2) obj. -13432.3 iterations 11
Cbc0038I Pass  59: suminf.    0.21190 (2) obj. -13310.6 iterations 9
Cbc0038I Pass  60: suminf.    0.38621 (2) obj. -13432.3 iterations 8
Cbc0038I Pass  61: suminf.    0.49035 (8) obj. -13310.6 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -12952.9 to -13343.4 (0.15 seconds)
Cbc0038I Round again with cutoff of -13762.8
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.85349 (33) obj. -13762.8 iterations 9
Cbc0038I Pass  62: suminf.    2.85349 (33) obj. -13762.8 iterations 0
Cbc0038I Pass  63: suminf.    1.35179 (23) obj. -13762.8 iterations 10
Cbc0038I Pass  64: suminf.    1.26615 (25) obj. -13762.8 iterations 1
Cbc0038I Pass  65: suminf.    2.05814 (16) obj. -13762.8 iterations 11
Cbc0038I Pass  66: suminf.    2.02676 (17) obj. -13762.8 iterations 3
Cbc0038I Pass  67: suminf.    0.25352 (3) obj. -13849.6 iterations 26
Cbc0038I Pass  68: suminf.    0.25352 (3) obj. -13849.6 iterations 0
Cbc0038I Pass  69: suminf.    0.29148 (4) obj. -13762.8 iterations 12
Cbc0038I Pass  70: suminf.    0.29148 (4) obj. -13762.8 iterations 1
Cbc0038I Pass  71: suminf.    1.25000 (4) obj. -14168.5 iterations 14
Cbc0038I Pass  72: suminf.    1.06415 (4) obj. -13762.8 iterations 1
Cbc0038I Pass  73: suminf.    0.71670 (6) obj. -13762.8 iterations 7
Cbc0038I Pass  74: suminf.    0.50926 (5) obj. -13850.4 iterations 5
Cbc0038I Pass  75: suminf.    0.29287 (4) obj. -13762.8 iterations 15
Cbc0038I Pass  76: suminf.    0.29287 (4) obj. -13762.8 iterations 1
Cbc0038I Pass  77: suminf.    1.25000 (4) obj. -14167.5 iterations 14
Cbc0038I Pass  78: suminf.    1.06461 (4) obj. -13762.8 iterations 2
Cbc0038I Pass  79: suminf.    2.40587 (16) obj. -13762.8 iterations 15
Cbc0038I Pass  80: suminf.    1.64561 (13) obj. -13762.8 iterations 2
Cbc0038I Pass  81: suminf.    1.61263 (12) obj. -13762.8 iterations 3
Cbc0038I Pass  82: suminf.    0.45455 (1) obj. -13783.2 iterations 12
Cbc0038I Pass  83: suminf.    0.45042 (1) obj. -13762.8 iterations 1
Cbc0038I Pass  84: suminf.    0.96908 (6) obj. -13762.8 iterations 15
Cbc0038I Pass  85: suminf.    0.61872 (4) obj. -13762.8 iterations 10
Cbc0038I Pass  86: suminf.    0.45455 (1) obj. -13781.2 iterations 4
Cbc0038I Pass  87: suminf.    0.45082 (1) obj. -13762.8 iterations 1
Cbc0038I Pass  88: suminf.    1.40949 (9) obj. -13762.8 iterations 18
Cbc0038I Pass  89: suminf.    0.88089 (5) obj. -13762.8 iterations 11
Cbc0038I Pass  90: suminf.    0.45455 (1) obj. -13772.2 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 40 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -13343.4 - took 0.15 seconds
Cbc0012I Integer solution of -13343.43 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 97 rows 111 columns, reduced to 34 rows 36 columns
Cbc0031I 27 added rows had average density of 12.222222
Cbc0013I At root node, 27 cuts changed objective from -14741.394 to -14115.005 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 405 row cuts average 5.5 elements, 10 column cuts (10 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 66 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 31.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 52.8 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13343.43 best solution, best possible -14115.005 (0.55 seconds)
Cbc0001I Search completed - best objective -13343.43, took 923 iterations and 10 nodes (1.22 seconds)
Cbc0032I Strong branching done 180 times (1760 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       1.23

