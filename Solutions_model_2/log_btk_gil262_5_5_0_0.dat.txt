Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 493 (-34) rows, 255 (-9) columns and 1469 (-76) elements
Clp1000I sum of infeasibilities 6.90191e-05 - average 1.39998e-07, 111 fixed columns
Coin0506I Presolve 265 (-228) rows, 139 (-116) columns and 785 (-684) elements
Clp0029I End of values pass after 139 iterations
Clp0000I Optimal - objective value 164.73283
Clp0000I Optimal - objective value 164.73283
Coin0511I After Postsolve, objective 164.73283, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13367227 - largest nonzero change 0 ( 0%) - largest zero change 2.9697068e-05
Clp0000I Optimal - objective value 164.73283
Clp0000I Optimal - objective value 164.73283
Clp0000I Optimal - objective value 164.73283
Coin0511I After Postsolve, objective 164.73283, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 164.732826 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 493 rows, 255 columns (254 integer (254 of which binary)) and 1469 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 81 integers unsatisfied sum - 9.95088
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23.699 iterations 133
Cbc0038I Solution found of -23.699
Cbc0038I Relaxing continuous gives -23.699
Cbc0038I Rounding solution of -79.7261 is better than previous of -23.699

Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 152 rows 82 columns
Cbc0038I Mini branch and bound improved solution from -79.7261 to -101.02 (0.07 seconds)
Cbc0038I Round again with cutoff of -107.391
Cbc0038I Pass   2: suminf.    2.91622 (9) obj. -107.391 iterations 19
Cbc0038I Pass   3: suminf.    0.89226 (5) obj. -107.391 iterations 13
Cbc0038I Pass   4: suminf.    0.81842 (5) obj. -107.391 iterations 17
Cbc0038I Pass   5: suminf.    1.62512 (5) obj. -107.391 iterations 20
Cbc0038I Pass   6: suminf.    1.09585 (4) obj. -107.391 iterations 16
Cbc0038I Pass   7: suminf.    1.05571 (4) obj. -107.391 iterations 17
Cbc0038I Pass   8: suminf.    1.67582 (6) obj. -107.391 iterations 9
Cbc0038I Pass   9: suminf.    1.35751 (6) obj. -107.391 iterations 21
Cbc0038I Pass  10: suminf.    1.65536 (6) obj. -107.391 iterations 30
Cbc0038I Pass  11: suminf.    0.94379 (5) obj. -107.391 iterations 10
Cbc0038I Pass  12: suminf.    0.92745 (5) obj. -107.391 iterations 3
Cbc0038I Pass  13: suminf.    1.93453 (7) obj. -107.391 iterations 10
Cbc0038I Pass  14: suminf.    1.36169 (7) obj. -107.391 iterations 10
Cbc0038I Pass  15: suminf.    1.35751 (6) obj. -107.391 iterations 7
Cbc0038I Pass  16: suminf.    1.65536 (6) obj. -107.391 iterations 28
Cbc0038I Pass  17: suminf.    0.94379 (5) obj. -107.391 iterations 10
Cbc0038I Pass  18: suminf.    0.92745 (5) obj. -107.391 iterations 3
Cbc0038I Pass  19: suminf.    1.93453 (7) obj. -107.391 iterations 10
Cbc0038I Pass  20: suminf.    1.36169 (7) obj. -107.391 iterations 10
Cbc0038I Pass  21: suminf.    1.35751 (6) obj. -107.391 iterations 7
Cbc0038I Pass  22: suminf.    1.65536 (6) obj. -107.391 iterations 28
Cbc0038I Pass  23: suminf.    0.94379 (5) obj. -107.391 iterations 10
Cbc0038I Pass  24: suminf.    0.92745 (5) obj. -107.391 iterations 3
Cbc0038I Pass  25: suminf.    1.93453 (7) obj. -107.391 iterations 10
Cbc0038I Pass  26: suminf.    1.36169 (7) obj. -107.391 iterations 10
Cbc0038I Pass  27: suminf.    1.35751 (6) obj. -107.391 iterations 7
Cbc0038I Pass  28: suminf.    1.65536 (6) obj. -107.391 iterations 28
Cbc0038I Pass  29: suminf.    0.94379 (5) obj. -107.391 iterations 10
Cbc0038I Pass  30: suminf.    0.92745 (5) obj. -107.391 iterations 3
Cbc0038I Pass  31: suminf.    1.93453 (7) obj. -107.391 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 157 rows 85 columns
Cbc0038I Mini branch and bound improved solution from -101.02 to -106.178 (0.14 seconds)
Cbc0038I Round again with cutoff of -118.86
Cbc0038I Pass  31: suminf.    2.97593 (11) obj. -118.86 iterations 3
Cbc0038I Pass  32: suminf.    2.00248 (8) obj. -118.86 iterations 25
Cbc0038I Pass  33: suminf.    1.93490 (9) obj. -118.86 iterations 3
Cbc0038I Pass  34: suminf.    2.91043 (8) obj. -118.86 iterations 34
Cbc0038I Pass  35: suminf.    2.30168 (8) obj. -118.86 iterations 4
Cbc0038I Pass  36: suminf.    3.08931 (8) obj. -118.86 iterations 18
Cbc0038I Pass  37: suminf.    2.54171 (9) obj. -118.86 iterations 10
Cbc0038I Pass  38: suminf.    2.54302 (12) obj. -118.86 iterations 29
Cbc0038I Pass  39: suminf.    2.33187 (8) obj. -118.86 iterations 12
Cbc0038I Pass  40: suminf.    2.31875 (9) obj. -118.86 iterations 8
Cbc0038I Pass  41: suminf.    2.98755 (9) obj. -118.86 iterations 31
Cbc0038I Pass  42: suminf.    2.76905 (11) obj. -118.86 iterations 11
Cbc0038I Pass  43: suminf.    3.23991 (12) obj. -118.86 iterations 26
Cbc0038I Pass  44: suminf.    2.73621 (9) obj. -118.86 iterations 15
Cbc0038I Pass  45: suminf.    2.60963 (9) obj. -118.86 iterations 11
Cbc0038I Pass  46: suminf.    3.20524 (9) obj. -118.86 iterations 28
Cbc0038I Pass  47: suminf.    2.76905 (11) obj. -118.86 iterations 10
Cbc0038I Pass  48: suminf.    3.23991 (12) obj. -118.86 iterations 27
Cbc0038I Pass  49: suminf.    2.73621 (9) obj. -118.86 iterations 15
Cbc0038I Pass  50: suminf.    2.60963 (9) obj. -118.86 iterations 11
Cbc0038I Pass  51: suminf.    3.20524 (9) obj. -118.86 iterations 25
Cbc0038I Pass  52: suminf.    2.76905 (11) obj. -118.86 iterations 10
Cbc0038I Pass  53: suminf.    3.23991 (12) obj. -118.86 iterations 26
Cbc0038I Pass  54: suminf.    2.73621 (9) obj. -118.86 iterations 15
Cbc0038I Pass  55: suminf.    2.60963 (9) obj. -118.86 iterations 11
Cbc0038I Pass  56: suminf.    3.20524 (9) obj. -118.86 iterations 23
Cbc0038I Pass  57: suminf.    2.76905 (11) obj. -118.86 iterations 10
Cbc0038I Pass  58: suminf.    3.23991 (12) obj. -118.86 iterations 24
Cbc0038I Pass  59: suminf.    2.73621 (9) obj. -118.86 iterations 15
Cbc0038I Pass  60: suminf.    2.60963 (9) obj. -118.86 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 163 rows 88 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -106.178 - took 0.21 seconds
Cbc0012I Integer solution of -106.17786 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 152 rows 82 columns
Cbc0031I 33 added rows had average density of 177.60606
Cbc0013I At root node, 33 cuts changed objective from -164.73283 to -150.96091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39224 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.489 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2963 row cuts average 252.7 elements, 0 column cuts (0 active)  in 0.444 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.530 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 247.0 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -106.17786 best solution, best possible -150.96091 (4.76 seconds)
Cbc0010I After 18 nodes, 9 on tree, -106.17786 best solution, best possible -150.96091 (5.47 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 153 rows 82 columns
Cbc0038I Full problem 493 rows 255 columns, reduced to 16 rows 15 columns
Cbc0010I After 144 nodes, 13 on tree, -106.17786 best solution, best possible -150.96091 (6.17 seconds)
Cbc0001I Search completed - best objective -106.17786, took 22758 iterations and 164 nodes (6.23 seconds)
Cbc0032I Strong branching done 1578 times (43387 iterations), fathomed 34 nodes and fixed 120 variables
Cbc0035I Maximum depth 32, 1103 variables fixed on reduced cost
Total time (CPU seconds):       6.14   (Wallclock seconds):       6.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 386 (-140) rows, 401 (-123) columns and 20288 (-15448) elements
Clp1000I sum of infeasibilities 7.17997e-06 - average 1.8601e-08, 345 fixed columns
Coin0506I Presolve 40 (-346) rows, 53 (-348) columns and 173 (-20115) elements
Clp0006I 0  Obj 795.51269 Dual inf 7.9474565 (53)
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 1.3345605 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 798.92092
Clp0000I Optimal - objective value 798.92092
Coin0511I After Postsolve, objective 798.92092, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 798.92092 Dual inf 548.86599 (173)
Clp0014I Perturbing problem by 0.001% of 2.0377901 - largest nonzero change 1.3103742e-05 ( 0.0012527913%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 1032.3521
Clp0000I Optimal - objective value 1032.3521
Clp0000I Optimal - objective value 1032.3521
Coin0511I After Postsolve, objective 1032.3521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1032.35209 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 386 rows, 401 columns (401 integer (401 of which binary)) and 20288 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 137 integers unsatisfied sum - 7.50784
Cbc0038I Pass   1: suminf.    2.11616 (119) obj. -410.394 iterations 51
Cbc0038I Pass   2: suminf.    2.11616 (119) obj. -410.394 iterations 1
Cbc0038I Pass   3: suminf.    1.44021 (92) obj. -349.975 iterations 27
Cbc0038I Pass   4: suminf.    1.07000 (75) obj. -323.561 iterations 17
Cbc0038I Pass   5: suminf.    0.82207 (61) obj. -304.896 iterations 14
Cbc0038I Pass   6: suminf.    0.44142 (37) obj. -275.373 iterations 24
Cbc0038I Pass   7: suminf.    0.26091 (24) obj. -262.553 iterations 13
Cbc0038I Pass   8: suminf.    0.08206 (9) obj. -243.779 iterations 15
Cbc0038I Solution found of -227.922
Cbc0038I Rounding solution of -257.559 is better than previous of -227.922

Cbc0038I Before mini branch and bound, 261 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 401 columns, reduced to 18 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -257.559 to -810.761 (0.16 seconds)
Cbc0038I Round again with cutoff of -832.908
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   9: suminf.    5.16070 (136) obj. -832.908 iterations 11
Cbc0038I Pass  10: suminf.    5.16070 (136) obj. -832.908 iterations 0
Cbc0038I Pass  11: suminf.    3.82069 (113) obj. -832.908 iterations 23
Cbc0038I Pass  12: suminf.    3.82069 (113) obj. -832.908 iterations 0
Cbc0038I Pass  13: suminf.    3.73836 (98) obj. -958.099 iterations 16
Cbc0038I Pass  14: suminf.    2.81755 (74) obj. -832.908 iterations 25
Cbc0038I Pass  15: suminf.    2.59975 (74) obj. -913.266 iterations 1
Cbc0038I Pass  16: suminf.    2.33913 (62) obj. -832.908 iterations 13
Cbc0038I Pass  17: suminf.    2.15505 (62) obj. -894.006 iterations 1
Cbc0038I Pass  18: suminf.    1.48473 (40) obj. -832.908 iterations 23
Cbc0038I Pass  19: suminf.    1.37001 (40) obj. -865.075 iterations 1
Cbc0038I Pass  20: suminf.    0.79474 (23) obj. -832.908 iterations 18
Cbc0038I Pass  21: suminf.    0.78878 (23) obj. -841.013 iterations 2
Cbc0038I Pass  22: suminf.    0.50460 (15) obj. -832.908 iterations 11
Cbc0038I Pass  23: suminf.    0.50460 (15) obj. -832.908 iterations 0
Cbc0038I Pass  24: suminf.    0.53275 (7) obj. -832.908 iterations 25
Cbc0038I Pass  25: suminf.    0.53275 (7) obj. -832.908 iterations 12
Cbc0038I Pass  26: suminf.    0.96022 (3) obj. -832.908 iterations 28
Cbc0038I Pass  27: suminf.    0.83561 (2) obj. -832.908 iterations 38
Cbc0038I Pass  28: suminf.    0.51398 (3) obj. -832.908 iterations 16
Cbc0038I Pass  29: suminf.    0.84075 (3) obj. -832.908 iterations 8
Cbc0038I Pass  30: suminf.    2.35245 (31) obj. -832.908 iterations 59
Cbc0038I Pass  31: suminf.    2.35245 (31) obj. -832.908 iterations 18
Cbc0038I Pass  32: suminf.    0.68831 (17) obj. -832.908 iterations 20
Cbc0038I Pass  33: suminf.    0.68831 (17) obj. -832.908 iterations 0
Cbc0038I Pass  34: suminf.    0.33981 (9) obj. -832.908 iterations 14
Cbc0038I Pass  35: suminf.    0.69487 (3) obj. -832.908 iterations 25
Cbc0038I Pass  36: suminf.    0.62978 (3) obj. -833.559 iterations 14
Cbc0038I Pass  37: suminf.    0.69487 (3) obj. -832.908 iterations 15
Cbc0038I Pass  38: suminf.    2.00179 (27) obj. -832.908 iterations 82
Cbc0038I Rounding solution of -818.097 is better than previous of -810.761

Cbc0038I Before mini branch and bound, 252 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 401 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I Round again with cutoff of -872.772
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  38: suminf.    6.89791 (136) obj. -1018.91 iterations 2
Cbc0038I Pass  39: suminf.    3.88117 (110) obj. -872.772 iterations 34
Cbc0038I Pass  40: suminf.    3.04378 (85) obj. -953.723 iterations 26
Cbc0038I Pass  41: suminf.    2.60841 (69) obj. -872.772 iterations 19
Cbc0038I Pass  42: suminf.    2.42358 (69) obj. -912.385 iterations 1
Cbc0038I Pass  43: suminf.    2.03895 (56) obj. -872.772 iterations 17
Cbc0038I Pass  44: suminf.    1.94459 (56) obj. -891.196 iterations 1
Cbc0038I Pass  45: suminf.    1.90740 (33) obj. -872.772 iterations 35
Cbc0038I Pass  46: suminf.    1.90740 (33) obj. -872.772 iterations 0
Cbc0038I Pass  47: suminf.    1.34966 (21) obj. -872.772 iterations 36
Cbc0038I Pass  48: suminf.    1.06701 (21) obj. -872.772 iterations 52
Cbc0038I Pass  49: suminf.    1.32056 (18) obj. -872.772 iterations 37
Cbc0038I Pass  50: suminf.    1.20189 (21) obj. -872.772 iterations 27
Cbc0038I Pass  51: suminf.    2.54095 (15) obj. -872.772 iterations 46
Cbc0038I Pass  52: suminf.    1.44507 (13) obj. -872.772 iterations 16
Cbc0038I Pass  53: suminf.    1.44507 (13) obj. -872.772 iterations 8
Cbc0038I Pass  54: suminf.    1.41868 (13) obj. -872.772 iterations 14
Cbc0038I Pass  55: suminf.    1.30017 (16) obj. -872.772 iterations 26
Cbc0038I Pass  56: suminf.    2.54095 (15) obj. -872.772 iterations 33
Cbc0038I Pass  57: suminf.    1.44507 (13) obj. -872.772 iterations 16
Cbc0038I Pass  58: suminf.    1.44507 (13) obj. -872.772 iterations 8
Cbc0038I Pass  59: suminf.    1.41868 (13) obj. -872.772 iterations 14
Cbc0038I Pass  60: suminf.    1.30017 (16) obj. -872.772 iterations 25
Cbc0038I Pass  61: suminf.    2.54095 (15) obj. -872.772 iterations 27
Cbc0038I Pass  62: suminf.    1.44507 (13) obj. -872.772 iterations 17
Cbc0038I Pass  63: suminf.    1.44507 (13) obj. -872.772 iterations 9
Cbc0038I Pass  64: suminf.    1.41868 (13) obj. -872.772 iterations 14
Cbc0038I Pass  65: suminf.    1.30017 (16) obj. -872.772 iterations 27
Cbc0038I Pass  66: suminf.    2.54095 (15) obj. -872.772 iterations 33
Cbc0038I Pass  67: suminf.    1.44507 (13) obj. -872.772 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 258 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 401 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -818.097 - took 0.24 seconds
Cbc0012I Integer solution of -818.09746 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0012I Integer solution of -827.71221 found by DiveCoefficient after 217 iterations and 0 nodes (0.45 seconds)
Cbc0031I 7 added rows had average density of 41.428571
Cbc0013I At root node, 7 cuts changed objective from -1032.2271 to -827.71221 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 238 row cuts average 2.0 elements, 128 column cuts (128 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 164.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 74.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 124.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -827.7122099999999, took 217 iterations and 0 nodes (0.45 seconds)
Cbc0035I Maximum depth 0, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.46

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 493 (-34) rows, 255 (-9) columns and 1469 (-76) elements
Clp1000I sum of infeasibilities 6.90191e-05 - average 1.39998e-07, 111 fixed columns
Coin0506I Presolve 265 (-228) rows, 139 (-116) columns and 785 (-684) elements
Clp0029I End of values pass after 139 iterations
Clp0000I Optimal - objective value 164.73283
Clp0000I Optimal - objective value 164.73283
Coin0511I After Postsolve, objective 164.73283, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13367227 - largest nonzero change 0 ( 0%) - largest zero change 2.9697068e-05
Clp0000I Optimal - objective value 164.73283
Clp0000I Optimal - objective value 164.73283
Clp0000I Optimal - objective value 164.73283
Coin0511I After Postsolve, objective 164.73283, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 164.732826 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 493 rows, 255 columns (254 integer (254 of which binary)) and 1469 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 81 integers unsatisfied sum - 9.95088
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23.699 iterations 133
Cbc0038I Solution found of -23.699
Cbc0038I Relaxing continuous gives -23.699
Cbc0038I Rounding solution of -79.7261 is better than previous of -23.699

Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 152 rows 82 columns
Cbc0038I Mini branch and bound improved solution from -79.7261 to -101.02 (0.07 seconds)
Cbc0038I Round again with cutoff of -107.391
Cbc0038I Pass   2: suminf.    2.91622 (9) obj. -107.391 iterations 19
Cbc0038I Pass   3: suminf.    0.89226 (5) obj. -107.391 iterations 13
Cbc0038I Pass   4: suminf.    0.81842 (5) obj. -107.391 iterations 17
Cbc0038I Pass   5: suminf.    1.62512 (5) obj. -107.391 iterations 20
Cbc0038I Pass   6: suminf.    1.09585 (4) obj. -107.391 iterations 16
Cbc0038I Pass   7: suminf.    1.05571 (4) obj. -107.391 iterations 17
Cbc0038I Pass   8: suminf.    1.67582 (6) obj. -107.391 iterations 9
Cbc0038I Pass   9: suminf.    1.35751 (6) obj. -107.391 iterations 21
Cbc0038I Pass  10: suminf.    1.65536 (6) obj. -107.391 iterations 30
Cbc0038I Pass  11: suminf.    0.94379 (5) obj. -107.391 iterations 10
Cbc0038I Pass  12: suminf.    0.92745 (5) obj. -107.391 iterations 3
Cbc0038I Pass  13: suminf.    1.93453 (7) obj. -107.391 iterations 10
Cbc0038I Pass  14: suminf.    1.36169 (7) obj. -107.391 iterations 10
Cbc0038I Pass  15: suminf.    1.35751 (6) obj. -107.391 iterations 7
Cbc0038I Pass  16: suminf.    1.65536 (6) obj. -107.391 iterations 28
Cbc0038I Pass  17: suminf.    0.94379 (5) obj. -107.391 iterations 10
Cbc0038I Pass  18: suminf.    0.92745 (5) obj. -107.391 iterations 3
Cbc0038I Pass  19: suminf.    1.93453 (7) obj. -107.391 iterations 10
Cbc0038I Pass  20: suminf.    1.36169 (7) obj. -107.391 iterations 10
Cbc0038I Pass  21: suminf.    1.35751 (6) obj. -107.391 iterations 7
Cbc0038I Pass  22: suminf.    1.65536 (6) obj. -107.391 iterations 28
Cbc0038I Pass  23: suminf.    0.94379 (5) obj. -107.391 iterations 10
Cbc0038I Pass  24: suminf.    0.92745 (5) obj. -107.391 iterations 3
Cbc0038I Pass  25: suminf.    1.93453 (7) obj. -107.391 iterations 10
Cbc0038I Pass  26: suminf.    1.36169 (7) obj. -107.391 iterations 10
Cbc0038I Pass  27: suminf.    1.35751 (6) obj. -107.391 iterations 7
Cbc0038I Pass  28: suminf.    1.65536 (6) obj. -107.391 iterations 28
Cbc0038I Pass  29: suminf.    0.94379 (5) obj. -107.391 iterations 10
Cbc0038I Pass  30: suminf.    0.92745 (5) obj. -107.391 iterations 3
Cbc0038I Pass  31: suminf.    1.93453 (7) obj. -107.391 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 157 rows 85 columns
Cbc0038I Mini branch and bound improved solution from -101.02 to -106.178 (0.14 seconds)
Cbc0038I Round again with cutoff of -118.86
Cbc0038I Pass  31: suminf.    2.97593 (11) obj. -118.86 iterations 3
Cbc0038I Pass  32: suminf.    2.00248 (8) obj. -118.86 iterations 25
Cbc0038I Pass  33: suminf.    1.93490 (9) obj. -118.86 iterations 3
Cbc0038I Pass  34: suminf.    2.91043 (8) obj. -118.86 iterations 34
Cbc0038I Pass  35: suminf.    2.30168 (8) obj. -118.86 iterations 4
Cbc0038I Pass  36: suminf.    3.08931 (8) obj. -118.86 iterations 18
Cbc0038I Pass  37: suminf.    2.54171 (9) obj. -118.86 iterations 10
Cbc0038I Pass  38: suminf.    2.54302 (12) obj. -118.86 iterations 29
Cbc0038I Pass  39: suminf.    2.33187 (8) obj. -118.86 iterations 12
Cbc0038I Pass  40: suminf.    2.31875 (9) obj. -118.86 iterations 8
Cbc0038I Pass  41: suminf.    2.98755 (9) obj. -118.86 iterations 31
Cbc0038I Pass  42: suminf.    2.76905 (11) obj. -118.86 iterations 11
Cbc0038I Pass  43: suminf.    3.23991 (12) obj. -118.86 iterations 26
Cbc0038I Pass  44: suminf.    2.73621 (9) obj. -118.86 iterations 15
Cbc0038I Pass  45: suminf.    2.60963 (9) obj. -118.86 iterations 11
Cbc0038I Pass  46: suminf.    3.20524 (9) obj. -118.86 iterations 28
Cbc0038I Pass  47: suminf.    2.76905 (11) obj. -118.86 iterations 10
Cbc0038I Pass  48: suminf.    3.23991 (12) obj. -118.86 iterations 27
Cbc0038I Pass  49: suminf.    2.73621 (9) obj. -118.86 iterations 15
Cbc0038I Pass  50: suminf.    2.60963 (9) obj. -118.86 iterations 11
Cbc0038I Pass  51: suminf.    3.20524 (9) obj. -118.86 iterations 25
Cbc0038I Pass  52: suminf.    2.76905 (11) obj. -118.86 iterations 10
Cbc0038I Pass  53: suminf.    3.23991 (12) obj. -118.86 iterations 26
Cbc0038I Pass  54: suminf.    2.73621 (9) obj. -118.86 iterations 15
Cbc0038I Pass  55: suminf.    2.60963 (9) obj. -118.86 iterations 11
Cbc0038I Pass  56: suminf.    3.20524 (9) obj. -118.86 iterations 23
Cbc0038I Pass  57: suminf.    2.76905 (11) obj. -118.86 iterations 10
Cbc0038I Pass  58: suminf.    3.23991 (12) obj. -118.86 iterations 24
Cbc0038I Pass  59: suminf.    2.73621 (9) obj. -118.86 iterations 15
Cbc0038I Pass  60: suminf.    2.60963 (9) obj. -118.86 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 163 rows 88 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -106.178 - took 0.20 seconds
Cbc0012I Integer solution of -106.17786 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 152 rows 82 columns
Cbc0031I 33 added rows had average density of 177.60606
Cbc0013I At root node, 33 cuts changed objective from -164.73283 to -150.96091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39224 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.481 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2963 row cuts average 252.7 elements, 0 column cuts (0 active)  in 0.440 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.521 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 247.0 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -106.17786 best solution, best possible -150.96091 (4.75 seconds)
Cbc0010I After 17 nodes, 9 on tree, -106.17786 best solution, best possible -150.96091 (5.45 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 153 rows 82 columns
Cbc0038I Full problem 493 rows 255 columns, reduced to 16 rows 15 columns
Cbc0010I After 143 nodes, 12 on tree, -106.17786 best solution, best possible -150.96091 (6.16 seconds)
Cbc0001I Search completed - best objective -106.17786, took 22758 iterations and 164 nodes (6.23 seconds)
Cbc0032I Strong branching done 1578 times (43387 iterations), fathomed 34 nodes and fixed 120 variables
Cbc0035I Maximum depth 32, 1103 variables fixed on reduced cost
Total time (CPU seconds):       6.13   (Wallclock seconds):       6.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 381 (-146) rows, 396 (-129) columns and 19671 (-16066) elements
Clp1000I sum of infeasibilities 7.27583e-06 - average 1.90967e-08, 213 fixed columns
Coin0506I Presolve 165 (-216) rows, 182 (-214) columns and 672 (-18999) elements
Clp0006I 0  Obj -57.193508 Dual inf 25.22881 (181)
Clp0029I End of values pass after 182 iterations
Clp0014I Perturbing problem by 0.001% of 1.4413483 - largest nonzero change 2.5660925e-05 ( 0.0020816521%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value -50.4911
Clp0000I Optimal - objective value -50.4911
Coin0511I After Postsolve, objective -50.4911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -50.4911 Dual inf 232.77663 (146)
Clp0014I Perturbing problem by 0.001% of 2.0563072 - largest nonzero change 0 ( 0%) - largest zero change 2.9990018e-05
Clp0000I Optimal - objective value 187.94341
Clp0000I Optimal - objective value 187.94341
Clp0000I Optimal - objective value 187.94341
Coin0511I After Postsolve, objective 187.94341, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 187.9434147 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.17

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 381 rows, 396 columns (396 integer (396 of which binary)) and 19671 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.114%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 136 integers unsatisfied sum - 6.96419
Cbc0038I Pass   1: suminf.    2.53117 (107) obj. -170.456 iterations 45
Cbc0038I Pass   2: suminf.    2.53117 (107) obj. -170.456 iterations 1
Cbc0038I Pass   3: suminf.    1.01656 (73) obj. -82.5024 iterations 25
Cbc0038I Pass   4: suminf.    0.74999 (62) obj. -64.9376 iterations 11
Cbc0038I Pass   5: suminf.    0.44088 (45) obj. -42.3541 iterations 17
Cbc0038I Pass   6: suminf.    0.18431 (23) obj. -13.6925 iterations 22
Cbc0038I Pass   7: suminf.    0.03569 (5) obj. 16.0547 iterations 18
Cbc0038I Solution found of 21.019
Cbc0038I Rounding solution of -4.29334 is better than previous of 21.019

Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 396 columns, reduced to 103 rows 104 columns
Cbc0038I Mini branch and bound improved solution from -4.29334 to -61.132 (0.16 seconds)
Cbc0038I Round again with cutoff of -73.7832
Cbc0038I Pass   8: suminf.    2.53117 (107) obj. -170.456 iterations 0
Cbc0038I Pass   9: suminf.    2.53117 (107) obj. -170.456 iterations 1
Cbc0038I Pass  10: suminf.    0.89509 (68) obj. -77.6239 iterations 24
Cbc0038I Pass  11: suminf.    0.99016 (56) obj. -73.7832 iterations 14
Cbc0038I Pass  12: suminf.    0.61682 (56) obj. -84.706 iterations 1
Cbc0038I Pass  13: suminf.    1.13514 (55) obj. -73.7832 iterations 22
Cbc0038I Pass  14: suminf.    1.01758 (54) obj. -74.4696 iterations 4
Cbc0038I Pass  15: suminf.    0.89582 (63) obj. -73.7832 iterations 42
Cbc0038I Pass  16: suminf.    0.82034 (44) obj. -73.7832 iterations 13
Cbc0038I Pass  17: suminf.    2.89946 (54) obj. -73.7832 iterations 54
Cbc0038I Pass  18: suminf.    1.91103 (53) obj. -73.7832 iterations 19
Cbc0038I Pass  19: suminf.    1.68250 (53) obj. -73.7832 iterations 4
Cbc0038I Pass  20: suminf.    1.91500 (47) obj. -73.7832 iterations 32
Cbc0038I Pass  21: suminf.    1.52680 (47) obj. -73.7832 iterations 7
Cbc0038I Pass  22: suminf.    1.82983 (46) obj. -73.7832 iterations 9
Cbc0038I Pass  23: suminf.    1.82983 (46) obj. -73.7832 iterations 4
Cbc0038I Pass  24: suminf.    1.92225 (40) obj. -73.7832 iterations 33
Cbc0038I Pass  25: suminf.    1.41886 (40) obj. -73.7832 iterations 13
Cbc0038I Pass  26: suminf.    1.92225 (40) obj. -73.7832 iterations 15
Cbc0038I Pass  27: suminf.    2.00231 (53) obj. -73.7832 iterations 67
Cbc0038I Pass  28: suminf.    1.37725 (51) obj. -74.5992 iterations 18
Cbc0038I Pass  29: suminf.    1.71074 (45) obj. -73.7832 iterations 31
Cbc0038I Pass  30: suminf.    1.61365 (45) obj. -73.7832 iterations 3
Cbc0038I Pass  31: suminf.    1.73278 (43) obj. -73.7832 iterations 14
Cbc0038I Pass  32: suminf.    1.23346 (43) obj. -73.7832 iterations 9
Cbc0038I Pass  33: suminf.    1.68678 (41) obj. -73.7832 iterations 22
Cbc0038I Pass  34: suminf.    1.21189 (41) obj. -73.7832 iterations 11
Cbc0038I Pass  35: suminf.    1.68678 (41) obj. -73.7832 iterations 13
Cbc0038I Pass  36: suminf.    2.43130 (51) obj. -73.7832 iterations 62
Cbc0038I Pass  37: suminf.    1.90945 (51) obj. -73.7832 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 396 columns, reduced to 104 rows 110 columns
Cbc0038I Mini branch and bound improved solution from -61.132 to -79.6632 (0.27 seconds)
Cbc0038I Round again with cutoff of -101.259
Cbc0038I Pass  37: suminf.    2.53117 (107) obj. -170.456 iterations 0
Cbc0038I Pass  38: suminf.    2.53117 (107) obj. -170.456 iterations 1
Cbc0038I Pass  39: suminf.    0.94401 (66) obj. -101.259 iterations 30
Cbc0038I Pass  40: suminf.    0.94401 (66) obj. -101.259 iterations 1
Cbc0038I Pass  41: suminf.    1.91674 (75) obj. -101.259 iterations 11
Cbc0038I Pass  42: suminf.    1.12259 (59) obj. -101.259 iterations 34
Cbc0038I Pass  43: suminf.    0.70379 (59) obj. -105.029 iterations 1
Cbc0038I Pass  44: suminf.    3.09421 (74) obj. -101.259 iterations 57
Cbc0038I Pass  45: suminf.    2.20685 (73) obj. -101.259 iterations 7
Cbc0038I Pass  46: suminf.    2.95912 (68) obj. -101.259 iterations 27
Cbc0038I Pass  47: suminf.    2.95912 (68) obj. -101.259 iterations 0
Cbc0038I Pass  48: suminf.    3.07208 (66) obj. -101.259 iterations 48
Cbc0038I Pass  49: suminf.    2.26289 (66) obj. -101.259 iterations 22
Cbc0038I Pass  50: suminf.    2.08578 (64) obj. -101.259 iterations 14
Cbc0038I Pass  51: suminf.    2.31537 (60) obj. -101.259 iterations 26
Cbc0038I Pass  52: suminf.    1.89182 (60) obj. -101.259 iterations 11
Cbc0038I Pass  53: suminf.    2.31537 (60) obj. -101.259 iterations 13
Cbc0038I Pass  54: suminf.    3.66134 (69) obj. -101.259 iterations 51
Cbc0038I Pass  55: suminf.    3.17630 (66) obj. -101.259 iterations 9
Cbc0038I Pass  56: suminf.    2.83573 (66) obj. -101.259 iterations 12
Cbc0038I Pass  57: suminf.    2.20891 (66) obj. -101.259 iterations 4
Cbc0038I Pass  58: suminf.    2.56906 (63) obj. -101.259 iterations 24
Cbc0038I Pass  59: suminf.    2.56906 (63) obj. -101.259 iterations 0
Cbc0038I Pass  60: suminf.    2.32645 (60) obj. -101.259 iterations 26
Cbc0038I Pass  61: suminf.    2.20749 (60) obj. -101.259 iterations 11
Cbc0038I Pass  62: suminf.    2.57456 (60) obj. -101.259 iterations 15
Cbc0038I Pass  63: suminf.    2.57456 (60) obj. -101.259 iterations 6
Cbc0038I Pass  64: suminf.    2.57493 (60) obj. -101.259 iterations 11
Cbc0038I Pass  65: suminf.    2.57493 (60) obj. -101.259 iterations 7
Cbc0038I Pass  66: suminf.    2.57456 (60) obj. -101.259 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 252 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 396 columns, reduced to 137 rows 141 columns
Cbc0038I Mini branch and bound improved solution from -79.6632 to -81.0281 (0.37 seconds)
Cbc0038I Round again with cutoff of -127.175
Cbc0038I Pass  66: suminf.    2.53117 (107) obj. -170.456 iterations 0
Cbc0038I Pass  67: suminf.    2.53117 (107) obj. -170.456 iterations 1
Cbc0038I Pass  68: suminf.    2.66799 (90) obj. -127.175 iterations 24
Cbc0038I Pass  69: suminf.    1.93064 (89) obj. -131.799 iterations 3
Cbc0038I Pass  70: suminf.    4.38992 (94) obj. -127.175 iterations 64
Cbc0038I Pass  71: suminf.    4.38992 (94) obj. -127.175 iterations 2
Cbc0038I Pass  72: suminf.    3.48164 (89) obj. -127.175 iterations 42
Cbc0038I Pass  73: suminf.    3.32521 (88) obj. -127.175 iterations 12
Cbc0038I Pass  74: suminf.    3.54712 (87) obj. -127.175 iterations 22
Cbc0038I Pass  75: suminf.    2.74585 (86) obj. -127.175 iterations 15
Cbc0038I Pass  76: suminf.    2.54902 (86) obj. -127.175 iterations 3
Cbc0038I Pass  77: suminf.    2.57841 (82) obj. -127.175 iterations 30
Cbc0038I Pass  78: suminf.    2.47264 (82) obj. -127.175 iterations 12
Cbc0038I Pass  79: suminf.    3.43044 (89) obj. -127.175 iterations 46
Cbc0038I Pass  80: suminf.    2.65548 (86) obj. -127.175 iterations 18
Cbc0038I Pass  81: suminf.    2.55650 (82) obj. -127.175 iterations 20
Cbc0038I Pass  82: suminf.    2.50012 (81) obj. -127.175 iterations 9
Cbc0038I Pass  83: suminf.    2.83566 (80) obj. -127.175 iterations 20
Cbc0038I Pass  84: suminf.    2.83566 (80) obj. -127.175 iterations 8
Cbc0038I Pass  85: suminf.    2.83320 (80) obj. -127.175 iterations 12
Cbc0038I Pass  86: suminf.    2.83320 (80) obj. -127.175 iterations 8
Cbc0038I Pass  87: suminf.    2.84133 (80) obj. -127.175 iterations 13
Cbc0038I Pass  88: suminf.    2.84133 (80) obj. -127.175 iterations 8
Cbc0038I Pass  89: suminf.    2.44053 (76) obj. -127.175 iterations 29
Cbc0038I Pass  90: suminf.    2.40042 (76) obj. -127.175 iterations 12
Cbc0038I Pass  91: suminf.    2.44053 (76) obj. -127.175 iterations 16
Cbc0038I Pass  92: suminf.    2.40817 (76) obj. -127.175 iterations 13
Cbc0038I Pass  93: suminf.    2.44053 (76) obj. -127.175 iterations 15
Cbc0038I Pass  94: suminf.    4.03712 (82) obj. -127.175 iterations 52
Cbc0038I Pass  95: suminf.    3.42171 (80) obj. -127.175 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 396 columns, reduced to 106 rows 111 columns
Cbc0038I Mini branch and bound did not improve solution (0.46 seconds)
Cbc0038I After 0.46 seconds - Feasibility pump exiting with objective of -81.0281 - took 0.35 seconds
Cbc0012I Integer solution of -81.0281 found by feasibility pump after 0 iterations and 0 nodes (0.46 seconds)
Cbc0038I Full problem 381 rows 396 columns, reduced to 81 rows 83 columns
Cbc0031I 161 added rows had average density of 63.993789
Cbc0013I At root node, 161 cuts changed objective from -187.64374 to -124.17012 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 37224 row cuts average 8.1 elements, 0 column cuts (4 active)  in 0.823 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3014 row cuts average 371.9 elements, 0 column cuts (0 active)  in 1.297 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1240 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7762 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.301 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.961 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2343 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.804 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 393 row cuts average 224.1 elements, 0 column cuts (0 active)  in 0.296 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 173 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.695 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -81.0281 best solution, best possible -124.17012 (10.10 seconds)
Cbc0012I Integer solution of -81.372752 found by DiveCoefficient after 14190 iterations and 1 nodes (10.54 seconds)
Cbc0010I After 2 nodes, 3 on tree, -81.372752 best solution, best possible -124.17012 (10.84 seconds)
Cbc0012I Integer solution of -100.87811 found by DiveCoefficient after 14715 iterations and 3 nodes (11.17 seconds)
Cbc0010I After 13 nodes, 8 on tree, -100.87811 best solution, best possible -124.17012 (11.54 seconds)
Cbc0038I Full problem 381 rows 396 columns, reduced to 13 rows 22 columns
Cbc0012I Integer solution of -102.36132 found by RINS after 15810 iterations and 41 nodes (12.00 seconds)
Cbc0012I Integer solution of -103.42391 found by rounding after 16041 iterations and 51 nodes (12.14 seconds)
Cbc0010I After 58 nodes, 24 on tree, -103.42391 best solution, best possible -124.17012 (12.26 seconds)
Cbc0012I Integer solution of -106.17786 found by rounding after 16401 iterations and 65 nodes (12.36 seconds)
Cbc0038I Full problem 381 rows 396 columns, reduced to 77 rows 87 columns
Cbc0010I After 94 nodes, 5 on tree, -106.17786 best solution, best possible -124.17012 (12.97 seconds)
Cbc0010I After 126 nodes, 8 on tree, -106.17786 best solution, best possible -124.17012 (13.69 seconds)
Cbc0010I After 146 nodes, 3 on tree, -106.17786 best solution, best possible -124.17012 (14.84 seconds)
Cbc0010I After 149 nodes, 6 on tree, -106.17786 best solution, best possible -124.17012 (15.59 seconds)
Cbc0010I After 162 nodes, 10 on tree, -106.17786 best solution, best possible -124.17012 (16.30 seconds)
Cbc0010I After 188 nodes, 3 on tree, -106.17786 best solution, best possible -124.17012 (17.37 seconds)
Cbc0010I After 190 nodes, 5 on tree, -106.17786 best solution, best possible -124.17012 (18.63 seconds)
Cbc0010I After 193 nodes, 6 on tree, -106.17786 best solution, best possible -124.17012 (19.39 seconds)
Cbc0010I After 196 nodes, 7 on tree, -106.17786 best solution, best possible -124.17012 (20.93 seconds)
Cbc0038I Full problem 381 rows 396 columns, reduced to 190 rows 201 columns - 30 fixed gives 149, 171 - ok now
Cbc0038I Full problem 381 rows 396 columns, reduced to 137 rows 158 columns
Cbc0010I After 208 nodes, 10 on tree, -106.17786 best solution, best possible -124.17012 (21.63 seconds)
Cbc0010I After 235 nodes, 9 on tree, -106.17786 best solution, best possible -124.17012 (22.38 seconds)
Cbc0010I After 271 nodes, 7 on tree, -106.17786 best solution, best possible -124.17012 (23.11 seconds)
Cbc0010I After 278 nodes, 3 on tree, -106.17786 best solution, best possible -124.17012 (23.84 seconds)
Cbc0001I Search completed - best objective -106.17786, took 40306 iterations and 288 nodes (24.48 seconds)
Cbc0032I Strong branching done 2498 times (50029 iterations), fathomed 9 nodes and fixed 37 variables
Cbc0035I Maximum depth 21, 2364 variables fixed on reduced cost
Total time (CPU seconds):       23.96   (Wallclock seconds):       24.59

