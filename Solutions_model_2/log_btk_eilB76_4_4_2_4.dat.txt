Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-30) rows, 68 (-10) columns and 379 (-74) elements
Clp1000I sum of infeasibilities 0.00034724 - average 2.77792e-06, 16 fixed columns
Coin0506I Presolve 90 (-35) rows, 50 (-18) columns and 274 (-105) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 0.25122367 - largest nonzero change 0 ( 0%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Coin0511I After Postsolve, objective 79.068987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Coin0511I After Postsolve, objective 79.068987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.06898732 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 68 columns (67 integer (67 of which binary)) and 444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 4.89832
Cbc0038I Solution found of -6.02272
Cbc0038I Relaxing continuous gives -16.2343
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 49 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -16.2343 to -39.1138 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.0678
Cbc0038I Pass   1: suminf.    1.77634 (16) obj. -43.0678 iterations 41
Cbc0038I Pass   2: suminf.    0.65880 (3) obj. -43.0678 iterations 19
Cbc0038I Pass   3: suminf.    0.65880 (3) obj. -43.0678 iterations 0
Cbc0038I Pass   4: suminf.    0.36917 (2) obj. -43.0678 iterations 9
Cbc0038I Pass   5: suminf.    0.30028 (1) obj. -43.0678 iterations 6
Cbc0038I Pass   6: suminf.    0.36595 (1) obj. -43.0678 iterations 3
Cbc0038I Pass   7: suminf.    0.79109 (3) obj. -43.0678 iterations 29
Cbc0038I Pass   8: suminf.    0.50180 (3) obj. -43.0678 iterations 8
Cbc0038I Pass   9: suminf.    0.71429 (2) obj. -44.1185 iterations 6
Cbc0038I Pass  10: suminf.    0.59295 (2) obj. -43.0678 iterations 3
Cbc0038I Pass  11: suminf.    0.55934 (2) obj. -43.0678 iterations 2
Cbc0038I Pass  12: suminf.    0.91614 (2) obj. -43.0678 iterations 4
Cbc0038I Pass  13: suminf.    0.59765 (2) obj. -43.0678 iterations 1
Cbc0038I Pass  14: suminf.    1.05103 (4) obj. -43.0678 iterations 6
Cbc0038I Pass  15: suminf.    1.04219 (5) obj. -43.0678 iterations 3
Cbc0038I Pass  16: suminf.    1.06563 (4) obj. -43.0678 iterations 12
Cbc0038I Pass  17: suminf.    1.02039 (4) obj. -43.0678 iterations 2
Cbc0038I Pass  18: suminf.    1.82044 (5) obj. -43.0678 iterations 5
Cbc0038I Pass  19: suminf.    1.05802 (3) obj. -43.0678 iterations 2
Cbc0038I Pass  20: suminf.    1.01677 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  21: suminf.    0.96343 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  22: suminf.    0.58798 (3) obj. -43.0678 iterations 8
Cbc0038I Pass  23: suminf.    3.00507 (10) obj. -43.0678 iterations 16
Cbc0038I Pass  24: suminf.    1.67598 (6) obj. -43.0678 iterations 12
Cbc0038I Pass  25: suminf.    1.82044 (5) obj. -43.0678 iterations 11
Cbc0038I Pass  26: suminf.    1.05802 (3) obj. -43.0678 iterations 2
Cbc0038I Pass  27: suminf.    1.01677 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  28: suminf.    0.96343 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  29: suminf.    0.58798 (3) obj. -43.0678 iterations 8
Cbc0038I Pass  30: suminf.    2.12473 (10) obj. -43.0678 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.1138 - took 0.04 seconds
Cbc0012I Integer solution of -39.11378 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 122 rows 68 columns, reduced to 49 rows 28 columns
Cbc0031I 20 added rows had average density of 52.05
Cbc0013I At root node, 20 cuts changed objective from -78.652757 to -66.765985 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5112 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1337 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 67.8 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.11378000000001, took 6250 iterations and 34 nodes (0.61 seconds)
Cbc0032I Strong branching done 452 times (8815 iterations), fathomed 1 nodes and fixed 32 variables
Cbc0035I Maximum depth 10, 91 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-47) rows, 116 (-36) columns and 1915 (-1388) elements
Clp1000I sum of infeasibilities 0 - average 0, 60 fixed columns
Coin0506I Presolve 51 (-56) rows, 56 (-60) columns and 356 (-1559) elements
Clp0029I End of values pass after 52 iterations
Clp0000I Optimal - objective value 174.31692
Clp0000I Optimal - objective value 174.31692
Coin0511I After Postsolve, objective 174.31692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 174.31692
Clp0000I Optimal - objective value 174.31692
Clp0000I Optimal - objective value 174.31692
Coin0511I After Postsolve, objective 174.31692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 174.3169201 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 65 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 116 columns (116 integer (116 of which binary)) and 1974 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.011%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.9495
Cbc0038I Pass   1: suminf.    0.16000 (3) obj. -63.9168 iterations 51
Cbc0038I Solution found of 33.4278
Cbc0038I Rounding solution of -17.4635 is better than previous of 33.4278

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 36 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -17.4635 to -28.1644 (0.05 seconds)
Cbc0038I Round again with cutoff of -33.0256
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.16000 (3) obj. -63.9168 iterations 0
Cbc0038I Pass   3: suminf.    1.06124 (3) obj. -33.0256 iterations 8
Cbc0038I Pass   4: suminf.    2.99445 (9) obj. -33.0256 iterations 22
Cbc0038I Pass   5: suminf.    2.45585 (10) obj. -33.0256 iterations 14
Cbc0038I Pass   6: suminf.    2.45585 (10) obj. -33.0256 iterations 0
Cbc0038I Pass   7: suminf.    0.16000 (3) obj. -55.9168 iterations 10
Cbc0038I Pass   8: suminf.    0.82784 (3) obj. -33.0256 iterations 3
Cbc0038I Pass   9: suminf.    5.67282 (21) obj. -33.0256 iterations 33
Cbc0038I Pass  10: suminf.    3.92810 (18) obj. -33.0256 iterations 14
Cbc0038I Pass  11: suminf.    0.77361 (5) obj. -33.0256 iterations 21
Cbc0038I Pass  12: suminf.    0.51672 (6) obj. -33.0256 iterations 4
Cbc0038I Pass  13: suminf.    0.82308 (4) obj. -33.0256 iterations 6
Cbc0038I Pass  14: suminf.    0.16000 (3) obj. -40.9168 iterations 3
Cbc0038I Pass  15: suminf.    0.64242 (3) obj. -33.0256 iterations 4
Cbc0038I Pass  16: suminf.    0.44471 (3) obj. -33.0256 iterations 1
Cbc0038I Pass  17: suminf.    1.51320 (6) obj. -33.0256 iterations 19
Cbc0038I Pass  18: suminf.    0.49209 (2) obj. -38.5801 iterations 6
Cbc0038I Pass  19: suminf.    0.37162 (1) obj. -33.0256 iterations 6
Cbc0038I Pass  20: suminf.    0.48000 (1) obj. -36.6043 iterations 3
Cbc0038I Pass  21: suminf.    2.31421 (9) obj. -33.0256 iterations 19
Cbc0038I Pass  22: suminf.    0.17266 (5) obj. -35.4693 iterations 8
Cbc0038I Pass  23: suminf.    0.28257 (6) obj. -33.0256 iterations 5
Cbc0038I Pass  24: suminf.    0.16268 (4) obj. -33.0256 iterations 2
Cbc0038I Pass  25: suminf.    0.49601 (1) obj. -33.0256 iterations 3
Cbc0038I Pass  26: suminf.    0.49601 (1) obj. -33.0256 iterations 3
Cbc0038I Pass  27: suminf.    0.48000 (1) obj. -33.6043 iterations 2
Cbc0038I Pass  28: suminf.    1.08448 (6) obj. -33.0256 iterations 10
Cbc0038I Pass  29: suminf.    0.55022 (2) obj. -33.0256 iterations 6
Cbc0038I Pass  30: suminf.    0.76462 (2) obj. -33.0256 iterations 5
Cbc0038I Pass  31: suminf.    0.55022 (2) obj. -33.0256 iterations 6
Cbc0038I Rounding solution of -53.6933 is better than previous of -28.1644

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 50 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -53.6933 to -54.6933 (0.07 seconds)
Cbc0038I Round again with cutoff of -59.1099
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.16000 (3) obj. -63.9168 iterations 0
Cbc0038I Pass  32: suminf.    0.30024 (3) obj. -59.1099 iterations 4
Cbc0038I Pass  33: suminf.    2.11865 (9) obj. -59.1099 iterations 17
Cbc0038I Pass  34: suminf.    0.52797 (5) obj. -59.1099 iterations 11
Cbc0038I Pass  35: suminf.    0.55520 (4) obj. -59.1099 iterations 7
Cbc0038I Pass  36: suminf.    0.16000 (3) obj. -59.9168 iterations 3
Cbc0038I Pass  37: suminf.    0.18354 (3) obj. -59.1099 iterations 3
Cbc0038I Pass  38: suminf.    1.88146 (9) obj. -59.1099 iterations 16
Cbc0038I Pass  39: suminf.    0.83311 (6) obj. -59.1099 iterations 12
Cbc0038I Pass  40: suminf.    1.58622 (6) obj. -59.1099 iterations 5
Cbc0038I Pass  41: suminf.    0.19218 (4) obj. -59.1099 iterations 6
Cbc0038I Pass  42: suminf.    0.51738 (4) obj. -59.1099 iterations 5
Cbc0038I Pass  43: suminf.    3.43971 (11) obj. -59.1099 iterations 17
Cbc0038I Pass  44: suminf.    0.19218 (4) obj. -59.1099 iterations 16
Cbc0038I Pass  45: suminf.    0.51738 (4) obj. -59.1099 iterations 3
Cbc0038I Pass  46: suminf.    1.60409 (9) obj. -59.1099 iterations 12
Cbc0038I Pass  47: suminf.    1.29759 (8) obj. -59.1099 iterations 5
Cbc0038I Pass  48: suminf.    2.36981 (8) obj. -59.1099 iterations 5
Cbc0038I Pass  49: suminf.    0.55965 (5) obj. -59.1099 iterations 8
Cbc0038I Pass  50: suminf.    0.96310 (6) obj. -59.1099 iterations 4
Cbc0038I Pass  51: suminf.    6.15770 (21) obj. -59.1099 iterations 25
Cbc0038I Pass  52: suminf.    2.88875 (12) obj. -59.1099 iterations 4
Cbc0038I Pass  53: suminf.    2.10209 (10) obj. -59.1099 iterations 8
Cbc0038I Pass  54: suminf.    2.30384 (11) obj. -59.1099 iterations 8
Cbc0038I Pass  55: suminf.    3.54091 (15) obj. -59.1099 iterations 13
Cbc0038I Pass  56: suminf.    2.88875 (12) obj. -59.1099 iterations 6
Cbc0038I Pass  57: suminf.    2.10209 (10) obj. -59.1099 iterations 8
Cbc0038I Pass  58: suminf.    2.30384 (11) obj. -59.1099 iterations 8
Cbc0038I Pass  59: suminf.    2.52911 (12) obj. -59.1099 iterations 15
Cbc0038I Pass  60: suminf.    2.10209 (10) obj. -59.1099 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 22 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -54.6933 - took 0.05 seconds
Cbc0012I Integer solution of -54.69328 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 43 rows 43 columns
Cbc0031I 45 added rows had average density of 22.111111
Cbc0013I At root node, 45 cuts changed objective from -76.775748 to -64.978488 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 510 row cuts average 2.6 elements, 11 column cuts (11 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 54 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 23 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 265 row cuts average 56.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 24.3 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -54.69328 best solution, best possible -64.978488 (0.54 seconds)
Cbc0012I Integer solution of -60.94801 found by DiveCoefficient after 476 iterations and 2 nodes (0.73 seconds)
Cbc0001I Search completed - best objective -60.94801000000001, took 839 iterations and 12 nodes (1.01 seconds)
Cbc0032I Strong branching done 242 times (4357 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       1.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-30) rows, 68 (-10) columns and 379 (-74) elements
Clp1000I sum of infeasibilities 0.00034724 - average 2.77792e-06, 16 fixed columns
Coin0506I Presolve 90 (-35) rows, 50 (-18) columns and 274 (-105) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 0.25122367 - largest nonzero change 0 ( 0%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Coin0511I After Postsolve, objective 79.068987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Coin0511I After Postsolve, objective 79.068987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.06898732 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 68 columns (67 integer (67 of which binary)) and 444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 4.89832
Cbc0038I Solution found of -6.02272
Cbc0038I Relaxing continuous gives -16.2343
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 49 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -16.2343 to -39.1138 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.0678
Cbc0038I Pass   1: suminf.    1.77634 (16) obj. -43.0678 iterations 41
Cbc0038I Pass   2: suminf.    0.65880 (3) obj. -43.0678 iterations 19
Cbc0038I Pass   3: suminf.    0.65880 (3) obj. -43.0678 iterations 0
Cbc0038I Pass   4: suminf.    0.36917 (2) obj. -43.0678 iterations 9
Cbc0038I Pass   5: suminf.    0.30028 (1) obj. -43.0678 iterations 6
Cbc0038I Pass   6: suminf.    0.36595 (1) obj. -43.0678 iterations 3
Cbc0038I Pass   7: suminf.    0.79109 (3) obj. -43.0678 iterations 29
Cbc0038I Pass   8: suminf.    0.50180 (3) obj. -43.0678 iterations 8
Cbc0038I Pass   9: suminf.    0.71429 (2) obj. -44.1185 iterations 6
Cbc0038I Pass  10: suminf.    0.59295 (2) obj. -43.0678 iterations 3
Cbc0038I Pass  11: suminf.    0.55934 (2) obj. -43.0678 iterations 2
Cbc0038I Pass  12: suminf.    0.91614 (2) obj. -43.0678 iterations 4
Cbc0038I Pass  13: suminf.    0.59765 (2) obj. -43.0678 iterations 1
Cbc0038I Pass  14: suminf.    1.05103 (4) obj. -43.0678 iterations 6
Cbc0038I Pass  15: suminf.    1.04219 (5) obj. -43.0678 iterations 3
Cbc0038I Pass  16: suminf.    1.06563 (4) obj. -43.0678 iterations 12
Cbc0038I Pass  17: suminf.    1.02039 (4) obj. -43.0678 iterations 2
Cbc0038I Pass  18: suminf.    1.82044 (5) obj. -43.0678 iterations 5
Cbc0038I Pass  19: suminf.    1.05802 (3) obj. -43.0678 iterations 2
Cbc0038I Pass  20: suminf.    1.01677 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  21: suminf.    0.96343 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  22: suminf.    0.58798 (3) obj. -43.0678 iterations 8
Cbc0038I Pass  23: suminf.    3.00507 (10) obj. -43.0678 iterations 16
Cbc0038I Pass  24: suminf.    1.67598 (6) obj. -43.0678 iterations 12
Cbc0038I Pass  25: suminf.    1.82044 (5) obj. -43.0678 iterations 11
Cbc0038I Pass  26: suminf.    1.05802 (3) obj. -43.0678 iterations 2
Cbc0038I Pass  27: suminf.    1.01677 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  28: suminf.    0.96343 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  29: suminf.    0.58798 (3) obj. -43.0678 iterations 8
Cbc0038I Pass  30: suminf.    2.12473 (10) obj. -43.0678 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.1138 - took 0.04 seconds
Cbc0012I Integer solution of -39.11378 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 68 columns, reduced to 49 rows 28 columns
Cbc0031I 20 added rows had average density of 52.05
Cbc0013I At root node, 20 cuts changed objective from -78.652757 to -66.765985 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5112 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1337 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 67.8 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 6 nodes, 7 on tree, -39.11378 best solution, best possible -66.765985 (0.69 seconds)
Cbc0001I Search completed - best objective -39.11378000000001, took 6250 iterations and 34 nodes (0.76 seconds)
Cbc0032I Strong branching done 452 times (8815 iterations), fathomed 1 nodes and fixed 32 variables
Cbc0035I Maximum depth 10, 91 variables fixed on reduced cost
Total time (CPU seconds):       0.73   (Wallclock seconds):       0.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 113 (-40) columns and 1820 (-1484) elements
Clp1000I sum of infeasibilities 1.19298e-07 - average 1.14709e-09, 26 fixed columns
Coin0506I Presolve 81 (-23) rows, 87 (-26) columns and 1114 (-706) elements
Clp0006I 0  Obj 84.42431 Dual inf 11.330503 (85)
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 1.4282609 - largest nonzero change 2.4070771e-05 ( 0.0018056464%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 93.63743
Clp0000I Optimal - objective value 93.63743
Coin0511I After Postsolve, objective 93.63743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 93.63743
Clp0000I Optimal - objective value 93.63743
Clp0000I Optimal - objective value 93.63743
Clp0000I Optimal - objective value 93.63743
Coin0511I After Postsolve, objective 93.63743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.63742972 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 113 columns (113 integer (113 of which binary)) and 1863 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 1.28407
Cbc0038I Pass   1: suminf.    1.25345 (21) obj. -80.3413 iterations 4
Cbc0038I Solution found of -14.7495
Cbc0038I Rounding solution of -31.9181 is better than previous of -14.7495

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -31.9181 to -37.1587 (0.05 seconds)
Cbc0038I Round again with cutoff of -41.5858
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.25345 (21) obj. -80.3413 iterations 0
Cbc0038I Pass   3: suminf.    0.53906 (11) obj. -41.5858 iterations 13
Cbc0038I Pass   4: suminf.    0.35556 (11) obj. -45.6686 iterations 1
Cbc0038I Pass   5: suminf.    0.37074 (3) obj. -41.5858 iterations 14
Cbc0038I Pass   6: suminf.    0.33853 (4) obj. -41.5858 iterations 3
Cbc0038I Pass   7: suminf.    0.55819 (3) obj. -41.5858 iterations 5
Cbc0038I Pass   8: suminf.    0.53188 (2) obj. -41.5858 iterations 3
Cbc0038I Pass   9: suminf.    0.71652 (2) obj. -41.5858 iterations 2
Cbc0038I Pass  10: suminf.    0.53396 (2) obj. -43.7765 iterations 1
Cbc0038I Pass  11: suminf.    0.71652 (2) obj. -41.5858 iterations 3
Cbc0038I Pass  12: suminf.    2.36503 (22) obj. -41.5858 iterations 14
Cbc0038I Pass  13: suminf.    1.04210 (8) obj. -41.5858 iterations 8
Cbc0038I Pass  14: suminf.    1.15369 (7) obj. -41.5858 iterations 9
Cbc0038I Pass  15: suminf.    1.15369 (7) obj. -41.5858 iterations 0
Cbc0038I Pass  16: suminf.    2.38869 (9) obj. -41.5858 iterations 6
Cbc0038I Pass  17: suminf.    1.22909 (8) obj. -41.5858 iterations 2
Cbc0038I Pass  18: suminf.    1.15369 (7) obj. -41.5858 iterations 9
Cbc0038I Pass  19: suminf.    2.49523 (21) obj. -41.5858 iterations 33
Cbc0038I Pass  20: suminf.    2.40427 (21) obj. -41.5858 iterations 8
Cbc0038I Pass  21: suminf.    1.82872 (16) obj. -41.5858 iterations 12
Cbc0038I Pass  22: suminf.    1.64307 (18) obj. -41.5858 iterations 4
Cbc0038I Pass  23: suminf.    2.41115 (16) obj. -41.5858 iterations 10
Cbc0038I Pass  24: suminf.    2.41115 (16) obj. -41.5858 iterations 1
Cbc0038I Pass  25: suminf.    2.86377 (14) obj. -41.5858 iterations 16
Cbc0038I Pass  26: suminf.    2.86377 (14) obj. -41.5858 iterations 3
Cbc0038I Pass  27: suminf.    2.49703 (14) obj. -41.5858 iterations 4
Cbc0038I Pass  28: suminf.    2.49703 (14) obj. -41.5858 iterations 2
Cbc0038I Pass  29: suminf.    2.86377 (14) obj. -41.5858 iterations 5
Cbc0038I Pass  30: suminf.    1.67618 (21) obj. -41.5858 iterations 19
Cbc0038I Pass  31: suminf.    1.60347 (20) obj. -41.5858 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 53 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -37.1587 to -39.1138 (0.11 seconds)
Cbc0038I Round again with cutoff of -49.5544
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.25345 (21) obj. -80.3413 iterations 0
Cbc0038I Pass  32: suminf.    0.52909 (12) obj. -49.5544 iterations 16
Cbc0038I Pass  33: suminf.    0.49261 (12) obj. -49.5544 iterations 2
Cbc0038I Pass  34: suminf.    0.81895 (3) obj. -49.5544 iterations 17
Cbc0038I Pass  35: suminf.    0.29032 (3) obj. -49.5544 iterations 2
Cbc0038I Pass  36: suminf.    0.76911 (3) obj. -49.5544 iterations 3
Cbc0038I Pass  37: suminf.    0.76888 (6) obj. -49.5544 iterations 2
Cbc0038I Pass  38: suminf.    0.93739 (5) obj. -49.5544 iterations 3
Cbc0038I Pass  39: suminf.    0.38666 (3) obj. -49.5544 iterations 3
Cbc0038I Pass  40: suminf.    0.77007 (3) obj. -49.5544 iterations 3
Cbc0038I Pass  41: suminf.    1.70952 (12) obj. -49.5544 iterations 15
Cbc0038I Pass  42: suminf.    0.54907 (5) obj. -49.5544 iterations 8
Cbc0038I Pass  43: suminf.    0.73086 (5) obj. -49.5544 iterations 8
Cbc0038I Pass  44: suminf.    0.62129 (10) obj. -49.5544 iterations 5
Cbc0038I Pass  45: suminf.    0.98634 (6) obj. -49.5544 iterations 10
Cbc0038I Pass  46: suminf.    0.69247 (6) obj. -49.5544 iterations 8
Cbc0038I Pass  47: suminf.    0.89077 (6) obj. -49.5544 iterations 4
Cbc0038I Pass  48: suminf.    1.06148 (10) obj. -49.5544 iterations 13
Cbc0038I Pass  49: suminf.    0.98301 (9) obj. -49.5544 iterations 5
Cbc0038I Pass  50: suminf.    1.27295 (8) obj. -49.5544 iterations 8
Cbc0038I Pass  51: suminf.    1.18452 (19) obj. -49.5544 iterations 3
Cbc0038I Pass  52: suminf.    1.52807 (15) obj. -49.5544 iterations 22
Cbc0038I Pass  53: suminf.    0.98885 (11) obj. -49.5544 iterations 7
Cbc0038I Pass  54: suminf.    1.02956 (10) obj. -49.5544 iterations 7
Cbc0038I Pass  55: suminf.    1.65875 (16) obj. -49.5544 iterations 17
Cbc0038I Pass  56: suminf.    1.04148 (15) obj. -49.5544 iterations 12
Cbc0038I Pass  57: suminf.    1.04940 (12) obj. -49.5544 iterations 13
Cbc0038I Pass  58: suminf.    1.04940 (12) obj. -49.5544 iterations 1
Cbc0038I Pass  59: suminf.    1.39349 (20) obj. -49.5544 iterations 12
Cbc0038I Pass  60: suminf.    1.38051 (12) obj. -49.5544 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 53 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -39.1138 - took 0.10 seconds
Cbc0012I Integer solution of -39.11378 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 101 rows 113 columns, reduced to 12 rows 14 columns
Cbc0031I 58 added rows had average density of 22.37931
Cbc0013I At root node, 58 cuts changed objective from -81.42874 to -49.281534 in 33 passes
Cbc0014I Cut generator 0 (Probing) - 3648 row cuts average 11.3 elements, 4 column cuts (4 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 244 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 205 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 77 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 288 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 62.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 147 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.11378 best solution, best possible -49.281534 (0.93 seconds)
Cbc0010I After 8 nodes, 7 on tree, -39.11378 best solution, best possible -49.281534 (1.65 seconds)
Cbc0001I Search completed - best objective -39.11378000000001, took 2073 iterations and 26 nodes (1.96 seconds)
Cbc0032I Strong branching done 386 times (6547 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 43 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.96

