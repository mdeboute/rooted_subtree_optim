Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 1.48403e-05 - average 2.9445e-08, 72 fixed columns
Coin0506I Presolve 352 (-152) rows, 190 (-72) columns and 1056 (-444) elements
Clp0029I End of values pass after 190 iterations
Clp0014I Perturbing problem by 0.001% of 1.9839526 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 153.01418
Clp0000I Optimal - objective value 153.01418
Coin0511I After Postsolve, objective 153.01418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 153.01418
Clp0000I Optimal - objective value 153.01418
Clp0000I Optimal - objective value 153.01418
Coin0511I After Postsolve, objective 153.01418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 153.0141773 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 13.666
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 26.5389 iterations 199
Cbc0038I Solution found of 26.5389
Cbc0038I Relaxing continuous gives 26.5389
Cbc0038I Rounding solution of -47.8631 is better than previous of 26.5389

Cbc0038I Before mini branch and bound, 209 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 88 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -47.8631 to -83.788 (0.07 seconds)
Cbc0038I Round again with cutoff of -90.7107
Cbc0038I Pass   2: suminf.    3.24903 (11) obj. -90.7107 iterations 42
Cbc0038I Pass   3: suminf.    1.70674 (14) obj. -90.7107 iterations 45
Cbc0038I Pass   4: suminf.    1.70674 (14) obj. -90.7107 iterations 0
Cbc0038I Pass   5: suminf.    2.00842 (9) obj. -90.7107 iterations 37
Cbc0038I Pass   6: suminf.    1.31283 (6) obj. -90.7107 iterations 9
Cbc0038I Pass   7: suminf.    1.15903 (6) obj. -90.7107 iterations 1
Cbc0038I Pass   8: suminf.    2.36302 (8) obj. -90.7107 iterations 18
Cbc0038I Pass   9: suminf.    1.55759 (6) obj. -90.7107 iterations 11
Cbc0038I Pass  10: suminf.    1.25362 (4) obj. -90.7107 iterations 8
Cbc0038I Pass  11: suminf.    1.00353 (5) obj. -90.7107 iterations 6
Cbc0038I Pass  12: suminf.    1.00353 (5) obj. -90.7107 iterations 0
Cbc0038I Pass  13: suminf.    1.74189 (6) obj. -90.7107 iterations 26
Cbc0038I Pass  14: suminf.    1.74137 (6) obj. -90.7107 iterations 3
Cbc0038I Pass  15: suminf.    1.63483 (6) obj. -90.7107 iterations 11
Cbc0038I Pass  16: suminf.    0.98103 (4) obj. -90.7107 iterations 2
Cbc0038I Pass  17: suminf.    0.94367 (4) obj. -90.7107 iterations 3
Cbc0038I Pass  18: suminf.    1.82731 (6) obj. -90.7107 iterations 17
Cbc0038I Pass  19: suminf.    1.82731 (6) obj. -90.7107 iterations 0
Cbc0038I Pass  20: suminf.    1.09993 (5) obj. -90.7107 iterations 14
Cbc0038I Pass  21: suminf.    0.69094 (3) obj. -90.7107 iterations 2
Cbc0038I Pass  22: suminf.    1.43976 (4) obj. -90.7107 iterations 22
Cbc0038I Pass  23: suminf.    1.40248 (5) obj. -90.7107 iterations 1
Cbc0038I Pass  24: suminf.    1.24487 (5) obj. -90.7107 iterations 8
Cbc0038I Pass  25: suminf.    1.17318 (5) obj. -90.7107 iterations 2
Cbc0038I Pass  26: suminf.    2.01143 (7) obj. -90.7107 iterations 26
Cbc0038I Pass  27: suminf.    1.93656 (5) obj. -90.7107 iterations 8
Cbc0038I Pass  28: suminf.    1.93117 (6) obj. -90.7107 iterations 3
Cbc0038I Pass  29: suminf.    1.43522 (6) obj. -90.7107 iterations 16
Cbc0038I Pass  30: suminf.    0.90574 (4) obj. -90.7107 iterations 7
Cbc0038I Pass  31: suminf.    0.88166 (7) obj. -90.7107 iterations 3
Cbc0038I Rounding solution of -84.8084 is better than previous of -83.788

Cbc0038I Before mini branch and bound, 199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 103 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -84.8084 to -85.2765 (0.14 seconds)
Cbc0038I Round again with cutoff of -103.171
Cbc0038I Pass  31: suminf.    4.17599 (19) obj. -103.171 iterations 4
Cbc0038I Pass  32: suminf.    2.77893 (14) obj. -103.171 iterations 39
Cbc0038I Pass  33: suminf.    2.70158 (14) obj. -103.171 iterations 10
Cbc0038I Pass  34: suminf.    3.86687 (12) obj. -103.171 iterations 19
Cbc0038I Pass  35: suminf.    1.79428 (6) obj. -103.171 iterations 22
Cbc0038I Pass  36: suminf.    1.58622 (6) obj. -103.171 iterations 6
Cbc0038I Pass  37: suminf.    2.23964 (8) obj. -103.171 iterations 26
Cbc0038I Pass  38: suminf.    1.40303 (6) obj. -103.171 iterations 14
Cbc0038I Pass  39: suminf.    2.38067 (9) obj. -103.171 iterations 13
Cbc0038I Pass  40: suminf.    1.53257 (8) obj. -103.171 iterations 12
Cbc0038I Pass  41: suminf.    2.04145 (8) obj. -103.171 iterations 29
Cbc0038I Pass  42: suminf.    1.94055 (7) obj. -103.171 iterations 2
Cbc0038I Pass  43: suminf.    2.16962 (8) obj. -103.171 iterations 17
Cbc0038I Pass  44: suminf.    2.02734 (8) obj. -103.171 iterations 4
Cbc0038I Pass  45: suminf.    2.31159 (9) obj. -103.171 iterations 26
Cbc0038I Pass  46: suminf.    1.73573 (6) obj. -103.171 iterations 13
Cbc0038I Pass  47: suminf.    1.73392 (6) obj. -103.171 iterations 10
Cbc0038I Pass  48: suminf.    1.25276 (7) obj. -103.171 iterations 10
Cbc0038I Pass  49: suminf.    2.71268 (8) obj. -103.171 iterations 11
Cbc0038I Pass  50: suminf.    2.04435 (9) obj. -103.171 iterations 14
Cbc0038I Pass  51: suminf.    1.97784 (9) obj. -103.171 iterations 7
Cbc0038I Pass  52: suminf.    2.78408 (9) obj. -103.171 iterations 24
Cbc0038I Pass  53: suminf.    1.80116 (7) obj. -103.171 iterations 18
Cbc0038I Pass  54: suminf.    1.45571 (7) obj. -103.171 iterations 7
Cbc0038I Pass  55: suminf.    2.24798 (8) obj. -103.171 iterations 17
Cbc0038I Pass  56: suminf.    2.23692 (8) obj. -103.171 iterations 4
Cbc0038I Pass  57: suminf.    2.38067 (9) obj. -103.171 iterations 15
Cbc0038I Pass  58: suminf.    1.53257 (8) obj. -103.171 iterations 12
Cbc0038I Pass  59: suminf.    2.04145 (8) obj. -103.171 iterations 29
Cbc0038I Pass  60: suminf.    1.94055 (7) obj. -103.171 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 104 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -85.2765 - took 0.20 seconds
Cbc0012I Integer solution of -85.27653 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 90 rows 54 columns
Cbc0031I 33 added rows had average density of 126.57576
Cbc0013I At root node, 33 cuts changed objective from -153.01418 to -138.36366 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28708 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.460 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3175 row cuts average 257.5 elements, 0 column cuts (0 active)  in 0.407 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.433 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 234 row cuts average 253.0 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -85.27653 best solution, best possible -138.36366 (4.47 seconds)
Cbc0010I After 25 nodes, 8 on tree, -85.27653 best solution, best possible -138.36366 (5.18 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 8 rows 11 columns
Cbc0012I Integer solution of -85.40033 found by RINS after 20657 iterations and 41 nodes (5.32 seconds)
Cbc0004I Integer solution of -86.2031 found after 21380 iterations and 68 nodes (5.40 seconds)
Cbc0012I Integer solution of -88.55089 found by rounding after 21446 iterations and 71 nodes (5.41 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 2 rows 2 columns
Cbc0012I Integer solution of -89.89679 found by rounding after 23630 iterations and 124 nodes (5.65 seconds)
Cbc0012I Integer solution of -90.03797 found by rounding after 23900 iterations and 129 nodes (5.67 seconds)
Cbc0010I After 191 nodes, 20 on tree, -90.03797 best solution, best possible -138.36366 (5.88 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 154 rows 86 columns
Cbc0010I After 302 nodes, 23 on tree, -90.03797 best solution, best possible -138.36366 (6.59 seconds)
Cbc0012I Integer solution of -91.13445 found by rounding after 31151 iterations and 324 nodes (6.67 seconds)
Cbc0010I After 429 nodes, 26 on tree, -91.13445 best solution, best possible -138.36366 (7.29 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 85 rows 49 columns
Cbc0001I Search completed - best objective -91.13444999999999, took 38292 iterations and 512 nodes (7.53 seconds)
Cbc0032I Strong branching done 4068 times (92759 iterations), fathomed 70 nodes and fixed 261 variables
Cbc0035I Maximum depth 117, 2974 variables fixed on reduced cost
Total time (CPU seconds):       7.39   (Wallclock seconds):       7.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 355 (-171) rows, 373 (-151) columns and 17232 (-18504) elements
Clp1000I sum of infeasibilities 2.39508e-06 - average 6.74671e-09, 84 fixed columns
Coin0506I Presolve 255 (-100) rows, 288 (-85) columns and 10730 (-6502) elements
Clp0006I 0  Obj 185.03397 Dual inf 46.371003 (288)
Clp0014I Perturbing problem by 0.001% of 1.9634663 - largest nonzero change 2.4241165e-05 ( 0.0016558695%) - largest zero change 2.9550433e-05
Clp0000I Optimal - objective value 202.96587
Clp0000I Optimal - objective value 202.96587
Coin0511I After Postsolve, objective 202.96587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 202.96587 Dual inf 20.448825 (2)
Clp0014I Perturbing problem by 0.001% of 1.9988319 - largest nonzero change 2.2979705e-05 ( 0.0022979705%) - largest zero change 2.9545781e-05
Clp0000I Optimal - objective value 202.96587
Clp0000I Optimal - objective value 202.96587
Clp0000I Optimal - objective value 202.96587
Coin0511I After Postsolve, objective 202.96587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 202.9658748 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 355 rows, 373 columns (373 integer (373 of which binary)) and 17232 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.014%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 5.18282
Cbc0038I Pass   1: suminf.    2.76683 (91) obj. -169.758 iterations 38
Cbc0038I Pass   2: suminf.    2.76683 (91) obj. -169.758 iterations 1
Cbc0038I Pass   3: suminf.    1.68636 (67) obj. -112.636 iterations 24
Cbc0038I Pass   4: suminf.    0.84641 (41) obj. -82.6459 iterations 26
Cbc0038I Pass   5: suminf.    0.39486 (21) obj. -63.0974 iterations 20
Cbc0038I Pass   6: suminf.    0.05163 (3) obj. -43.4797 iterations 18
Cbc0038I Solution found of -40.5314
Cbc0038I Rounding solution of -49.6602 is better than previous of -40.5314

Cbc0038I Before mini branch and bound, 260 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -64.9909
Cbc0038I Pass   7: suminf.    2.76683 (91) obj. -169.758 iterations 0
Cbc0038I Pass   8: suminf.    2.76683 (91) obj. -169.758 iterations 1
Cbc0038I Pass   9: suminf.    1.84063 (71) obj. -116.482 iterations 20
Cbc0038I Pass  10: suminf.    0.99215 (46) obj. -87.5001 iterations 25
Cbc0038I Pass  11: suminf.    0.67130 (34) obj. -75.821 iterations 12
Cbc0038I Pass  12: suminf.    0.88667 (34) obj. -64.9909 iterations 48
Cbc0038I Pass  13: suminf.    1.54376 (22) obj. -64.9909 iterations 19
Cbc0038I Pass  14: suminf.    1.33408 (22) obj. -64.9909 iterations 3
Cbc0038I Pass  15: suminf.    1.10080 (15) obj. -64.9909 iterations 30
Cbc0038I Pass  16: suminf.    0.69990 (14) obj. -64.9909 iterations 2
Cbc0038I Pass  17: suminf.    0.84382 (5) obj. -64.9909 iterations 32
Cbc0038I Pass  18: suminf.    0.81551 (5) obj. -64.9909 iterations 3
Cbc0038I Pass  19: suminf.    0.95225 (5) obj. -64.9909 iterations 9
Cbc0038I Pass  20: suminf.    0.95225 (5) obj. -64.9909 iterations 0
Cbc0038I Pass  21: suminf.    0.81551 (5) obj. -64.9909 iterations 18
Cbc0038I Pass  22: suminf.    1.38375 (24) obj. -64.9909 iterations 54
Cbc0038I Pass  23: suminf.    0.65563 (20) obj. -66.0321 iterations 22
Cbc0038I Pass  24: suminf.    0.85318 (17) obj. -64.9909 iterations 15
Cbc0038I Pass  25: suminf.    0.55171 (17) obj. -64.9909 iterations 5
Cbc0038I Pass  26: suminf.    0.96751 (7) obj. -64.9909 iterations 20
Cbc0038I Pass  27: suminf.    0.71742 (7) obj. -64.9909 iterations 7
Cbc0038I Pass  28: suminf.    1.00831 (7) obj. -64.9909 iterations 8
Cbc0038I Pass  29: suminf.    0.77917 (6) obj. -64.9909 iterations 5
Cbc0038I Pass  30: suminf.    0.62064 (6) obj. -64.9909 iterations 7
Cbc0038I Pass  31: suminf.    0.62064 (6) obj. -64.9909 iterations 3
Cbc0038I Pass  32: suminf.    0.60790 (6) obj. -64.9909 iterations 7
Cbc0038I Pass  33: suminf.    0.60790 (6) obj. -64.9909 iterations 4
Cbc0038I Pass  34: suminf.    1.46220 (25) obj. -64.9909 iterations 49
Cbc0038I Pass  35: suminf.    1.32810 (24) obj. -64.9909 iterations 19
Cbc0038I Pass  36: suminf.    0.92278 (7) obj. -64.9909 iterations 35
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 118 rows 131 columns - 28 fixed gives 91, 103 - ok now
Cbc0038I Full problem 355 rows 373 columns, reduced to 33 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -49.6602 - took 0.14 seconds
Cbc0012I Integer solution of -49.660216 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 21 rows 25 columns
Cbc0012I Integer solution of -58.85215 found by DiveCoefficient after 12981 iterations and 0 nodes (7.30 seconds)
Cbc0031I 144 added rows had average density of 77.715278
Cbc0013I At root node, 144 cuts changed objective from -202.96587 to -114.01694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35803 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.480 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3080 row cuts average 340.8 elements, 0 column cuts (0 active)  in 1.227 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 758 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6474 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.655 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2971 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.828 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 466 row cuts average 172.9 elements, 0 column cuts (0 active)  in 0.193 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 260 row cuts average 45.1 elements, 0 column cuts (0 active)  in 0.375 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -58.85215 best solution, best possible -114.01694 (8.12 seconds)
Cbc0012I Integer solution of -60.02705 found by DiveCoefficient after 14075 iterations and 3 nodes (9.08 seconds)
Cbc0010I After 3 nodes, 2 on tree, -60.02705 best solution, best possible -113.47084 (9.08 seconds)
Cbc0012I Integer solution of -87.57881 found by rounding after 14218 iterations and 4 nodes (9.10 seconds)
Cbc0012I Integer solution of -89.89679 found by rounding after 14700 iterations and 16 nodes (9.44 seconds)
Cbc0012I Integer solution of -91.13445 found by rounding after 14799 iterations and 23 nodes (9.51 seconds)
Cbc0010I After 33 nodes, 2 on tree, -91.13445 best solution, best possible -113.47084 (9.92 seconds)
Cbc0010I After 36 nodes, 5 on tree, -91.13445 best solution, best possible -113.47084 (10.68 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 162 rows 182 columns
Cbc0010I After 41 nodes, 6 on tree, -91.13445 best solution, best possible -113.47084 (12.84 seconds)
Cbc0010I After 77 nodes, 9 on tree, -91.13445 best solution, best possible -113.47084 (13.54 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 123 rows 141 columns
Cbc0010I After 93 nodes, 6 on tree, -91.13445 best solution, best possible -113.47084 (14.72 seconds)
Cbc0010I After 137 nodes, 3 on tree, -91.13445 best solution, best possible -113.47084 (15.45 seconds)
Cbc0010I After 152 nodes, 5 on tree, -91.13445 best solution, best possible -113.47084 (16.16 seconds)
Cbc0010I After 181 nodes, 2 on tree, -91.13445 best solution, best possible -113.47084 (16.88 seconds)
Cbc0010I After 187 nodes, 5 on tree, -91.13445 best solution, best possible -113.47084 (17.63 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 114 rows 132 columns
Cbc0010I After 200 nodes, 6 on tree, -91.13445 best solution, best possible -113.47084 (18.75 seconds)
Cbc0010I After 251 nodes, 9 on tree, -91.13445 best solution, best possible -113.47084 (19.45 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 80 rows 96 columns
Cbc0010I After 300 nodes, 11 on tree, -91.13445 best solution, best possible -113.47084 (20.43 seconds)
Cbc0001I Search completed - best objective -91.13444999999999, took 38522 iterations and 360 nodes (20.97 seconds)
Cbc0032I Strong branching done 2314 times (43179 iterations), fathomed 10 nodes and fixed 14 variables
Cbc0035I Maximum depth 29, 1856 variables fixed on reduced cost
Total time (CPU seconds):       20.51   (Wallclock seconds):       21.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 1.48403e-05 - average 2.9445e-08, 72 fixed columns
Coin0506I Presolve 352 (-152) rows, 190 (-72) columns and 1056 (-444) elements
Clp0029I End of values pass after 190 iterations
Clp0014I Perturbing problem by 0.001% of 1.9839526 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 153.01418
Clp0000I Optimal - objective value 153.01418
Coin0511I After Postsolve, objective 153.01418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 153.01418
Clp0000I Optimal - objective value 153.01418
Clp0000I Optimal - objective value 153.01418
Coin0511I After Postsolve, objective 153.01418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 153.0141773 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 13.666
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 26.5389 iterations 199
Cbc0038I Solution found of 26.5389
Cbc0038I Relaxing continuous gives 26.5389
Cbc0038I Rounding solution of -47.8631 is better than previous of 26.5389

Cbc0038I Before mini branch and bound, 209 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 88 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -47.8631 to -83.788 (0.06 seconds)
Cbc0038I Round again with cutoff of -90.7107
Cbc0038I Pass   2: suminf.    3.24903 (11) obj. -90.7107 iterations 42
Cbc0038I Pass   3: suminf.    1.70674 (14) obj. -90.7107 iterations 45
Cbc0038I Pass   4: suminf.    1.70674 (14) obj. -90.7107 iterations 0
Cbc0038I Pass   5: suminf.    2.00842 (9) obj. -90.7107 iterations 37
Cbc0038I Pass   6: suminf.    1.31283 (6) obj. -90.7107 iterations 9
Cbc0038I Pass   7: suminf.    1.15903 (6) obj. -90.7107 iterations 1
Cbc0038I Pass   8: suminf.    2.36302 (8) obj. -90.7107 iterations 18
Cbc0038I Pass   9: suminf.    1.55759 (6) obj. -90.7107 iterations 11
Cbc0038I Pass  10: suminf.    1.25362 (4) obj. -90.7107 iterations 8
Cbc0038I Pass  11: suminf.    1.00353 (5) obj. -90.7107 iterations 6
Cbc0038I Pass  12: suminf.    1.00353 (5) obj. -90.7107 iterations 0
Cbc0038I Pass  13: suminf.    1.74189 (6) obj. -90.7107 iterations 26
Cbc0038I Pass  14: suminf.    1.74137 (6) obj. -90.7107 iterations 3
Cbc0038I Pass  15: suminf.    1.63483 (6) obj. -90.7107 iterations 11
Cbc0038I Pass  16: suminf.    0.98103 (4) obj. -90.7107 iterations 2
Cbc0038I Pass  17: suminf.    0.94367 (4) obj. -90.7107 iterations 3
Cbc0038I Pass  18: suminf.    1.82731 (6) obj. -90.7107 iterations 17
Cbc0038I Pass  19: suminf.    1.82731 (6) obj. -90.7107 iterations 0
Cbc0038I Pass  20: suminf.    1.09993 (5) obj. -90.7107 iterations 14
Cbc0038I Pass  21: suminf.    0.69094 (3) obj. -90.7107 iterations 2
Cbc0038I Pass  22: suminf.    1.43976 (4) obj. -90.7107 iterations 22
Cbc0038I Pass  23: suminf.    1.40248 (5) obj. -90.7107 iterations 1
Cbc0038I Pass  24: suminf.    1.24487 (5) obj. -90.7107 iterations 8
Cbc0038I Pass  25: suminf.    1.17318 (5) obj. -90.7107 iterations 2
Cbc0038I Pass  26: suminf.    2.01143 (7) obj. -90.7107 iterations 26
Cbc0038I Pass  27: suminf.    1.93656 (5) obj. -90.7107 iterations 8
Cbc0038I Pass  28: suminf.    1.93117 (6) obj. -90.7107 iterations 3
Cbc0038I Pass  29: suminf.    1.43522 (6) obj. -90.7107 iterations 16
Cbc0038I Pass  30: suminf.    0.90574 (4) obj. -90.7107 iterations 7
Cbc0038I Pass  31: suminf.    0.88166 (7) obj. -90.7107 iterations 3
Cbc0038I Rounding solution of -84.8084 is better than previous of -83.788

Cbc0038I Before mini branch and bound, 199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 103 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -84.8084 to -85.2765 (0.13 seconds)
Cbc0038I Round again with cutoff of -103.171
Cbc0038I Pass  31: suminf.    4.17599 (19) obj. -103.171 iterations 4
Cbc0038I Pass  32: suminf.    2.77893 (14) obj. -103.171 iterations 39
Cbc0038I Pass  33: suminf.    2.70158 (14) obj. -103.171 iterations 10
Cbc0038I Pass  34: suminf.    3.86687 (12) obj. -103.171 iterations 19
Cbc0038I Pass  35: suminf.    1.79428 (6) obj. -103.171 iterations 22
Cbc0038I Pass  36: suminf.    1.58622 (6) obj. -103.171 iterations 6
Cbc0038I Pass  37: suminf.    2.23964 (8) obj. -103.171 iterations 26
Cbc0038I Pass  38: suminf.    1.40303 (6) obj. -103.171 iterations 14
Cbc0038I Pass  39: suminf.    2.38067 (9) obj. -103.171 iterations 13
Cbc0038I Pass  40: suminf.    1.53257 (8) obj. -103.171 iterations 12
Cbc0038I Pass  41: suminf.    2.04145 (8) obj. -103.171 iterations 29
Cbc0038I Pass  42: suminf.    1.94055 (7) obj. -103.171 iterations 2
Cbc0038I Pass  43: suminf.    2.16962 (8) obj. -103.171 iterations 17
Cbc0038I Pass  44: suminf.    2.02734 (8) obj. -103.171 iterations 4
Cbc0038I Pass  45: suminf.    2.31159 (9) obj. -103.171 iterations 26
Cbc0038I Pass  46: suminf.    1.73573 (6) obj. -103.171 iterations 13
Cbc0038I Pass  47: suminf.    1.73392 (6) obj. -103.171 iterations 10
Cbc0038I Pass  48: suminf.    1.25276 (7) obj. -103.171 iterations 10
Cbc0038I Pass  49: suminf.    2.71268 (8) obj. -103.171 iterations 11
Cbc0038I Pass  50: suminf.    2.04435 (9) obj. -103.171 iterations 14
Cbc0038I Pass  51: suminf.    1.97784 (9) obj. -103.171 iterations 7
Cbc0038I Pass  52: suminf.    2.78408 (9) obj. -103.171 iterations 24
Cbc0038I Pass  53: suminf.    1.80116 (7) obj. -103.171 iterations 18
Cbc0038I Pass  54: suminf.    1.45571 (7) obj. -103.171 iterations 7
Cbc0038I Pass  55: suminf.    2.24798 (8) obj. -103.171 iterations 17
Cbc0038I Pass  56: suminf.    2.23692 (8) obj. -103.171 iterations 4
Cbc0038I Pass  57: suminf.    2.38067 (9) obj. -103.171 iterations 15
Cbc0038I Pass  58: suminf.    1.53257 (8) obj. -103.171 iterations 12
Cbc0038I Pass  59: suminf.    2.04145 (8) obj. -103.171 iterations 29
Cbc0038I Pass  60: suminf.    1.94055 (7) obj. -103.171 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 104 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -85.2765 - took 0.19 seconds
Cbc0012I Integer solution of -85.27653 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 90 rows 54 columns
Cbc0031I 33 added rows had average density of 126.57576
Cbc0013I At root node, 33 cuts changed objective from -153.01418 to -138.36366 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28708 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.463 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3175 row cuts average 257.5 elements, 0 column cuts (0 active)  in 0.413 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.439 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 234 row cuts average 253.0 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -85.27653 best solution, best possible -138.36366 (4.52 seconds)
Cbc0010I After 25 nodes, 8 on tree, -85.27653 best solution, best possible -138.36366 (5.23 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 8 rows 11 columns
Cbc0012I Integer solution of -85.40033 found by RINS after 20657 iterations and 41 nodes (5.37 seconds)
Cbc0004I Integer solution of -86.2031 found after 21380 iterations and 68 nodes (5.46 seconds)
Cbc0012I Integer solution of -88.55089 found by rounding after 21446 iterations and 71 nodes (5.46 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 2 rows 2 columns
Cbc0012I Integer solution of -89.89679 found by rounding after 23630 iterations and 124 nodes (5.71 seconds)
Cbc0012I Integer solution of -90.03797 found by rounding after 23900 iterations and 129 nodes (5.73 seconds)
Cbc0010I After 191 nodes, 20 on tree, -90.03797 best solution, best possible -138.36366 (5.93 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 154 rows 86 columns
Cbc0010I After 303 nodes, 24 on tree, -90.03797 best solution, best possible -138.36366 (6.64 seconds)
Cbc0012I Integer solution of -91.13445 found by rounding after 31151 iterations and 324 nodes (6.70 seconds)
Cbc0010I After 437 nodes, 24 on tree, -91.13445 best solution, best possible -138.36366 (7.35 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 85 rows 49 columns
Cbc0001I Search completed - best objective -91.13444999999999, took 38292 iterations and 512 nodes (7.57 seconds)
Cbc0032I Strong branching done 4068 times (92759 iterations), fathomed 70 nodes and fixed 261 variables
Cbc0035I Maximum depth 117, 2974 variables fixed on reduced cost
Total time (CPU seconds):       7.42   (Wallclock seconds):       7.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 355 (-172) rows, 373 (-152) columns and 17232 (-18505) elements
Clp1000I sum of infeasibilities 2.39508e-06 - average 6.74671e-09, 84 fixed columns
Coin0506I Presolve 255 (-100) rows, 288 (-85) columns and 10730 (-6502) elements
Clp0006I 0  Obj 185.03397 Dual inf 46.371003 (288)
Clp0014I Perturbing problem by 0.001% of 1.9634663 - largest nonzero change 2.4241165e-05 ( 0.0016558695%) - largest zero change 2.9550433e-05
Clp0000I Optimal - objective value 202.96587
Clp0000I Optimal - objective value 202.96587
Coin0511I After Postsolve, objective 202.96587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 202.96587 Dual inf 20.448825 (2)
Clp0014I Perturbing problem by 0.001% of 1.9988319 - largest nonzero change 2.2979705e-05 ( 0.0022979705%) - largest zero change 2.9545781e-05
Clp0000I Optimal - objective value 202.96587
Clp0000I Optimal - objective value 202.96587
Clp0000I Optimal - objective value 202.96587
Coin0511I After Postsolve, objective 202.96587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 202.9658748 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 355 rows, 373 columns (373 integer (373 of which binary)) and 17232 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.014%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 5.18282
Cbc0038I Pass   1: suminf.    2.76683 (91) obj. -169.758 iterations 38
Cbc0038I Pass   2: suminf.    2.76683 (91) obj. -169.758 iterations 1
Cbc0038I Pass   3: suminf.    1.68636 (67) obj. -112.636 iterations 24
Cbc0038I Pass   4: suminf.    0.84641 (41) obj. -82.6459 iterations 26
Cbc0038I Pass   5: suminf.    0.39486 (21) obj. -63.0974 iterations 20
Cbc0038I Pass   6: suminf.    0.05163 (3) obj. -43.4797 iterations 18
Cbc0038I Solution found of -40.5314
Cbc0038I Rounding solution of -49.6602 is better than previous of -40.5314

Cbc0038I Before mini branch and bound, 260 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -64.9909
Cbc0038I Pass   7: suminf.    2.76683 (91) obj. -169.758 iterations 0
Cbc0038I Pass   8: suminf.    2.76683 (91) obj. -169.758 iterations 1
Cbc0038I Pass   9: suminf.    1.84063 (71) obj. -116.482 iterations 20
Cbc0038I Pass  10: suminf.    0.99215 (46) obj. -87.5001 iterations 25
Cbc0038I Pass  11: suminf.    0.67130 (34) obj. -75.821 iterations 12
Cbc0038I Pass  12: suminf.    0.88667 (34) obj. -64.9909 iterations 48
Cbc0038I Pass  13: suminf.    1.54376 (22) obj. -64.9909 iterations 19
Cbc0038I Pass  14: suminf.    1.33408 (22) obj. -64.9909 iterations 3
Cbc0038I Pass  15: suminf.    1.10080 (15) obj. -64.9909 iterations 30
Cbc0038I Pass  16: suminf.    0.69990 (14) obj. -64.9909 iterations 2
Cbc0038I Pass  17: suminf.    0.84382 (5) obj. -64.9909 iterations 32
Cbc0038I Pass  18: suminf.    0.81551 (5) obj. -64.9909 iterations 3
Cbc0038I Pass  19: suminf.    0.95225 (5) obj. -64.9909 iterations 9
Cbc0038I Pass  20: suminf.    0.95225 (5) obj. -64.9909 iterations 0
Cbc0038I Pass  21: suminf.    0.81551 (5) obj. -64.9909 iterations 18
Cbc0038I Pass  22: suminf.    1.38375 (24) obj. -64.9909 iterations 54
Cbc0038I Pass  23: suminf.    0.65563 (20) obj. -66.0321 iterations 22
Cbc0038I Pass  24: suminf.    0.85318 (17) obj. -64.9909 iterations 15
Cbc0038I Pass  25: suminf.    0.55171 (17) obj. -64.9909 iterations 5
Cbc0038I Pass  26: suminf.    0.96751 (7) obj. -64.9909 iterations 20
Cbc0038I Pass  27: suminf.    0.71742 (7) obj. -64.9909 iterations 7
Cbc0038I Pass  28: suminf.    1.00831 (7) obj. -64.9909 iterations 8
Cbc0038I Pass  29: suminf.    0.77917 (6) obj. -64.9909 iterations 5
Cbc0038I Pass  30: suminf.    0.62064 (6) obj. -64.9909 iterations 7
Cbc0038I Pass  31: suminf.    0.62064 (6) obj. -64.9909 iterations 3
Cbc0038I Pass  32: suminf.    0.60790 (6) obj. -64.9909 iterations 7
Cbc0038I Pass  33: suminf.    0.60790 (6) obj. -64.9909 iterations 4
Cbc0038I Pass  34: suminf.    1.46220 (25) obj. -64.9909 iterations 49
Cbc0038I Pass  35: suminf.    1.32810 (24) obj. -64.9909 iterations 19
Cbc0038I Pass  36: suminf.    0.92278 (7) obj. -64.9909 iterations 35
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 118 rows 131 columns - 28 fixed gives 91, 103 - ok now
Cbc0038I Full problem 355 rows 373 columns, reduced to 33 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of -49.6602 - took 0.15 seconds
Cbc0012I Integer solution of -49.660216 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 21 rows 25 columns
Cbc0012I Integer solution of -58.85215 found by DiveCoefficient after 12981 iterations and 0 nodes (7.45 seconds)
Cbc0031I 144 added rows had average density of 77.715278
Cbc0013I At root node, 144 cuts changed objective from -202.96587 to -114.01694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35803 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.489 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3080 row cuts average 340.8 elements, 0 column cuts (0 active)  in 1.246 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 758 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6474 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.233 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.669 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2971 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.841 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 466 row cuts average 172.9 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 260 row cuts average 45.1 elements, 0 column cuts (0 active)  in 0.379 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -58.85215 best solution, best possible -114.01694 (8.28 seconds)
Cbc0012I Integer solution of -60.02705 found by DiveCoefficient after 14075 iterations and 3 nodes (9.24 seconds)
Cbc0010I After 3 nodes, 2 on tree, -60.02705 best solution, best possible -113.47084 (9.24 seconds)
Cbc0012I Integer solution of -87.57881 found by rounding after 14218 iterations and 4 nodes (9.26 seconds)
Cbc0012I Integer solution of -89.89679 found by rounding after 14700 iterations and 16 nodes (9.60 seconds)
Cbc0012I Integer solution of -91.13445 found by rounding after 14799 iterations and 23 nodes (9.69 seconds)
Cbc0010I After 33 nodes, 2 on tree, -91.13445 best solution, best possible -113.47084 (10.13 seconds)
Cbc0010I After 36 nodes, 5 on tree, -91.13445 best solution, best possible -113.47084 (10.89 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 162 rows 182 columns
Cbc0010I After 41 nodes, 6 on tree, -91.13445 best solution, best possible -113.47084 (12.97 seconds)
Cbc0010I After 78 nodes, 10 on tree, -91.13445 best solution, best possible -113.47084 (13.69 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 123 rows 141 columns
Cbc0010I After 93 nodes, 6 on tree, -91.13445 best solution, best possible -113.47084 (14.82 seconds)
Cbc0010I After 137 nodes, 3 on tree, -91.13445 best solution, best possible -113.47084 (15.55 seconds)
Cbc0010I After 150 nodes, 5 on tree, -91.13445 best solution, best possible -113.47084 (16.26 seconds)
Cbc0010I After 181 nodes, 2 on tree, -91.13445 best solution, best possible -113.47084 (16.98 seconds)
Cbc0010I After 186 nodes, 5 on tree, -91.13445 best solution, best possible -113.47084 (17.68 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 114 rows 132 columns
Cbc0010I After 200 nodes, 6 on tree, -91.13445 best solution, best possible -113.47084 (18.88 seconds)
Cbc0010I After 250 nodes, 8 on tree, -91.13445 best solution, best possible -113.47084 (19.59 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 80 rows 96 columns
Cbc0010I After 300 nodes, 11 on tree, -91.13445 best solution, best possible -113.47084 (20.62 seconds)
Cbc0001I Search completed - best objective -91.13444999999999, took 38522 iterations and 360 nodes (21.18 seconds)
Cbc0032I Strong branching done 2314 times (43179 iterations), fathomed 10 nodes and fixed 14 variables
Cbc0035I Maximum depth 29, 1856 variables fixed on reduced cost
Total time (CPU seconds):       20.71   (Wallclock seconds):       21.27

