Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 120 (-35) rows, 67 (-11) columns and 366 (-87) elements
Clp1000I sum of infeasibilities 5.7343e-05 - average 4.77859e-07, 56 fixed columns
Coin0506I Presolve 11 (-109) rows, 7 (-60) columns and 30 (-336) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2634.6895
Clp0000I Optimal - objective value 2634.6895
Coin0511I After Postsolve, objective 2634.6895, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0289269 - largest nonzero change 2.1228058e-05 ( 0.00091204228%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2634.6895
Clp0000I Optimal - objective value 2634.6895
Clp0000I Optimal - objective value 2634.6895
Coin0511I After Postsolve, objective 2634.6895, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2634.689538 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 120 rows, 67 columns (66 integer (66 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.360%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.53846
Cbc0038I Solution found of -1394.13
Cbc0038I Relaxing continuous gives -1394.13
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 11 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -1394.13 to -1434.88 (0.01 seconds)
Cbc0038I Round again with cutoff of -1554.86
Cbc0038I Pass   1: suminf.    0.28348 (5) obj. -1554.86 iterations 18
Cbc0038I Pass   2: suminf.    0.58335 (2) obj. -1554.86 iterations 7
Cbc0038I Pass   3: suminf.    0.58335 (2) obj. -1554.86 iterations 0
Cbc0038I Pass   4: suminf.    0.60000 (2) obj. -1554.86 iterations 2
Cbc0038I Pass   5: suminf.    0.11264 (1) obj. -1554.86 iterations 2
Cbc0038I Pass   6: suminf.    0.48649 (1) obj. -2082.34 iterations 1
Cbc0038I Pass   7: suminf.    0.40444 (3) obj. -1554.86 iterations 13
Cbc0038I Pass   8: suminf.    0.27470 (5) obj. -1554.86 iterations 7
Cbc0038I Pass   9: suminf.    0.84300 (4) obj. -1554.86 iterations 4
Cbc0038I Pass  10: suminf.    0.54788 (3) obj. -1554.86 iterations 1
Cbc0038I Pass  11: suminf.    0.19438 (2) obj. -1554.86 iterations 6
Cbc0038I Pass  12: suminf.    0.50019 (2) obj. -1554.86 iterations 1
Cbc0038I Pass  13: suminf.    0.72274 (5) obj. -1554.86 iterations 7
Cbc0038I Pass  14: suminf.    0.51532 (3) obj. -1554.86 iterations 7
Cbc0038I Pass  15: suminf.    0.54263 (2) obj. -1554.86 iterations 3
Cbc0038I Pass  16: suminf.    0.54263 (2) obj. -1554.86 iterations 0
Cbc0038I Pass  17: suminf.    0.51724 (2) obj. -1783.61 iterations 2
Cbc0038I Pass  18: suminf.    0.19681 (2) obj. -1554.86 iterations 1
Cbc0038I Pass  19: suminf.    1.33944 (8) obj. -1554.86 iterations 15
Cbc0038I Pass  20: suminf.    0.37455 (8) obj. -1554.86 iterations 10
Cbc0038I Pass  21: suminf.    0.13492 (2) obj. -1554.86 iterations 20
Cbc0038I Pass  22: suminf.    0.05937 (1) obj. -1554.86 iterations 2
Cbc0038I Pass  23: suminf.    0.10811 (1) obj. -1623.62 iterations 1
Cbc0038I Pass  24: suminf.    0.67730 (5) obj. -1554.86 iterations 25
Cbc0038I Pass  25: suminf.    0.51394 (6) obj. -1554.86 iterations 8
Cbc0038I Pass  26: suminf.    0.53475 (3) obj. -1554.86 iterations 3
Cbc0038I Pass  27: suminf.    0.23671 (5) obj. -1554.86 iterations 2
Cbc0038I Pass  28: suminf.    0.55872 (5) obj. -1554.86 iterations 8
Cbc0038I Pass  29: suminf.    0.52250 (7) obj. -1554.86 iterations 4
Cbc0038I Pass  30: suminf.    0.59158 (2) obj. -1554.86 iterations 13
Cbc0038I Rounding solution of -1517.94 is better than previous of -1434.88

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 27 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -1517.94 to -1527.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -1770.83
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.66439 (5) obj. -1770.83 iterations 0
Cbc0038I Pass  31: suminf.    0.60748 (2) obj. -1770.83 iterations 6
Cbc0038I Pass  32: suminf.    0.26570 (1) obj. -1770.83 iterations 2
Cbc0038I Pass  33: suminf.    0.48649 (1) obj. -1770.83 iterations 1
Cbc0038I Pass  34: suminf.    1.55743 (6) obj. -1770.83 iterations 15
Cbc0038I Pass  35: suminf.    1.34646 (8) obj. -1770.83 iterations 5
Cbc0038I Pass  36: suminf.    0.40925 (3) obj. -1770.83 iterations 12
Cbc0038I Pass  37: suminf.    0.25582 (1) obj. -1770.83 iterations 1
Cbc0038I Pass  38: suminf.    0.35135 (1) obj. -1770.83 iterations 1
Cbc0038I Pass  39: suminf.    0.61534 (3) obj. -1770.83 iterations 8
Cbc0038I Pass  40: suminf.    0.61534 (3) obj. -1770.83 iterations 6
Cbc0038I Pass  41: suminf.    1.08667 (6) obj. -1770.83 iterations 13
Cbc0038I Pass  42: suminf.    1.08667 (6) obj. -1770.83 iterations 4
Cbc0038I Pass  43: suminf.    0.91265 (3) obj. -1770.83 iterations 6
Cbc0038I Pass  44: suminf.    0.78064 (4) obj. -1770.83 iterations 2
Cbc0038I Pass  45: suminf.    1.33784 (3) obj. -1770.83 iterations 6
Cbc0038I Pass  46: suminf.    0.69391 (5) obj. -1770.83 iterations 2
Cbc0038I Pass  47: suminf.    0.60002 (2) obj. -1770.83 iterations 4
Cbc0038I Pass  48: suminf.    0.55113 (2) obj. -1770.83 iterations 1
Cbc0038I Pass  49: suminf.    0.60002 (2) obj. -1770.83 iterations 1
Cbc0038I Pass  50: suminf.    1.23948 (5) obj. -1770.83 iterations 6
Cbc0038I Pass  51: suminf.    1.04200 (7) obj. -1770.83 iterations 3
Cbc0038I Pass  52: suminf.    0.63972 (2) obj. -1770.83 iterations 7
Cbc0038I Pass  53: suminf.    0.63972 (2) obj. -1770.83 iterations 0
Cbc0038I Pass  54: suminf.    0.79310 (2) obj. -1770.83 iterations 2
Cbc0038I Pass  55: suminf.    0.54069 (2) obj. -1770.83 iterations 1
Cbc0038I Pass  56: suminf.    0.63972 (2) obj. -1770.83 iterations 1
Cbc0038I Pass  57: suminf.    1.11325 (7) obj. -1770.83 iterations 20
Cbc0038I Pass  58: suminf.    0.81325 (4) obj. -1770.83 iterations 7
Cbc0038I Pass  59: suminf.    1.39726 (3) obj. -1770.83 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 22 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1527.3 - took 0.02 seconds
Cbc0012I Integer solution of -1527.3 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 120 rows 67 columns, reduced to 13 rows 11 columns
Cbc0012I Integer solution of -1552.6275 found by DiveCoefficient after 83 iterations and 0 nodes (0.16 seconds)
Cbc0031I 7 added rows had average density of 16.142857
Cbc0013I At root node, 7 cuts changed objective from -2634.6895 to -1594.7879 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 38 row cuts average 3.4 elements, 5 column cuts (5 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 29 row cuts average 35.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0016I Integer solution of -1594.7877 found by strong branching after 83 iterations and 0 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -1594.787682, took 83 iterations and 0 nodes (0.16 seconds)
Cbc0032I Strong branching done 2 times (6 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 113 (-39) columns and 1824 (-1479) elements
Clp1000I sum of infeasibilities 3.36045e-07 - average 3.32718e-09, 61 fixed columns
Coin0506I Presolve 40 (-61) rows, 39 (-74) columns and 184 (-1640) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 2668.2512
Clp0000I Optimal - objective value 2668.2512
Coin0511I After Postsolve, objective 2668.2512, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9937087 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2668.8281
Clp0000I Optimal - objective value 2668.8281
Clp0000I Optimal - objective value 2668.8281
Coin0511I After Postsolve, objective 2668.8281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2668.82812 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 113 columns (113 integer (113 of which binary)) and 1830 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.659%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 5.45627
Cbc0038I Pass   1: suminf.    0.37122 (16) obj. -1418.51 iterations 30
Cbc0038I Solution found of -1394.13
Cbc0038I Rounding solution of -1411.32 is better than previous of -1394.13

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 35 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -1411.32 to -1434.88 (0.03 seconds)
Cbc0038I Round again with cutoff of -1556.94
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.69678 (23) obj. -1556.94 iterations 19
Cbc0038I Pass   3: suminf.    0.72435 (13) obj. -2012.87 iterations 13
Cbc0038I Pass   4: suminf.    0.35110 (13) obj. -1556.94 iterations 1
Cbc0038I Pass   5: suminf.    0.35714 (1) obj. -1997.38 iterations 14
Cbc0038I Pass   6: suminf.    0.04349 (1) obj. -1556.94 iterations 1
Cbc0038I Pass   7: suminf.    1.83995 (9) obj. -1556.94 iterations 24
Cbc0038I Pass   8: suminf.    1.39192 (8) obj. -1556.94 iterations 5
Cbc0038I Pass   9: suminf.    0.19200 (3) obj. -1556.94 iterations 9
Cbc0038I Pass  10: suminf.    0.19200 (3) obj. -1556.94 iterations 4
Cbc0038I Pass  11: suminf.    0.34738 (5) obj. -1556.94 iterations 7
Cbc0038I Pass  12: suminf.    0.26136 (3) obj. -1556.94 iterations 1
Cbc0038I Pass  13: suminf.    1.40748 (20) obj. -1556.94 iterations 33
Cbc0038I Pass  14: suminf.    1.30223 (15) obj. -1556.94 iterations 6
Cbc0038I Pass  15: suminf.    1.27892 (4) obj. -1556.94 iterations 16
Cbc0038I Pass  16: suminf.    0.25000 (9) obj. -1556.94 iterations 3
Cbc0038I Pass  17: suminf.    0.46684 (3) obj. -1556.94 iterations 7
Cbc0038I Pass  18: suminf.    0.46684 (3) obj. -1556.94 iterations 0
Cbc0038I Pass  19: suminf.    0.68919 (3) obj. -1750.58 iterations 3
Cbc0038I Pass  20: suminf.    0.23697 (5) obj. -1556.94 iterations 2
Cbc0038I Pass  21: suminf.    0.59046 (13) obj. -1556.94 iterations 18
Cbc0038I Pass  22: suminf.    0.59046 (13) obj. -1556.94 iterations 3
Cbc0038I Pass  23: suminf.    0.34147 (2) obj. -1556.94 iterations 14
Cbc0038I Pass  24: suminf.    0.23131 (2) obj. -1556.94 iterations 1
Cbc0038I Pass  25: suminf.    0.34147 (2) obj. -1556.94 iterations 1
Cbc0038I Pass  26: suminf.    0.63718 (13) obj. -1556.94 iterations 12
Cbc0038I Pass  27: suminf.    0.32224 (13) obj. -1556.94 iterations 4
Cbc0038I Pass  28: suminf.    1.69396 (16) obj. -1556.94 iterations 14
Cbc0038I Pass  29: suminf.    0.58704 (9) obj. -1556.94 iterations 11
Cbc0038I Pass  30: suminf.    1.90658 (4) obj. -1556.94 iterations 9
Cbc0038I Pass  31: suminf.    0.30999 (3) obj. -1556.94 iterations 2
Cbc0038I Rounding solution of -1518.51 is better than previous of -1434.88

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 65 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -1518.51 to -1588.62 (0.07 seconds)
Cbc0038I Round again with cutoff of -1802
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.27313 (23) obj. -1802 iterations 0
Cbc0038I Pass  32: suminf.    0.38346 (2) obj. -1999.32 iterations 24
Cbc0038I Pass  33: suminf.    0.24294 (2) obj. -1802 iterations 1
Cbc0038I Pass  34: suminf.    0.35714 (1) obj. -1997.38 iterations 3
Cbc0038I Pass  35: suminf.    0.21801 (1) obj. -1802 iterations 1
Cbc0038I Pass  36: suminf.    1.46313 (11) obj. -1802 iterations 22
Cbc0038I Pass  37: suminf.    0.82183 (6) obj. -1802 iterations 14
Cbc0038I Pass  38: suminf.    0.85118 (4) obj. -1802 iterations 7
Cbc0038I Pass  39: suminf.    0.65487 (3) obj. -1802 iterations 6
Cbc0038I Pass  40: suminf.    2.10603 (18) obj. -1802 iterations 17
Cbc0038I Pass  41: suminf.    1.34063 (8) obj. -1802 iterations 5
Cbc0038I Pass  42: suminf.    0.25348 (4) obj. -1802 iterations 17
Cbc0038I Pass  43: suminf.    0.22922 (3) obj. -1802 iterations 1
Cbc0038I Pass  44: suminf.    0.56862 (3) obj. -1802 iterations 3
Cbc0038I Pass  45: suminf.    0.56862 (3) obj. -1802 iterations 0
Cbc0038I Pass  46: suminf.    1.42039 (15) obj. -1802 iterations 17
Cbc0038I Pass  47: suminf.    0.64455 (6) obj. -1802 iterations 5
Cbc0038I Pass  48: suminf.    1.15822 (4) obj. -1802 iterations 7
Cbc0038I Pass  49: suminf.    0.85721 (3) obj. -1802 iterations 1
Cbc0038I Pass  50: suminf.    0.53168 (3) obj. -1802 iterations 3
Cbc0038I Pass  51: suminf.    0.53168 (3) obj. -1802 iterations 2
Cbc0038I Pass  52: suminf.    1.77961 (17) obj. -1802 iterations 19
Cbc0038I Pass  53: suminf.    1.27049 (16) obj. -1802 iterations 5
Cbc0038I Pass  54: suminf.    1.81885 (5) obj. -1802 iterations 18
Cbc0038I Pass  55: suminf.    0.66589 (9) obj. -1802 iterations 4
Cbc0038I Pass  56: suminf.    0.66589 (9) obj. -1802 iterations 0
Cbc0038I Pass  57: suminf.    0.56200 (2) obj. -1802 iterations 8
Cbc0038I Pass  58: suminf.    0.56200 (2) obj. -1802 iterations 0
Cbc0038I Pass  59: suminf.    0.79310 (2) obj. -2021.06 iterations 2
Cbc0038I Pass  60: suminf.    0.48624 (2) obj. -1802 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 63 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -1588.62 - took 0.06 seconds
Cbc0012I Integer solution of -1588.6245 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 101 rows 113 columns, reduced to 52 rows 54 columns
Cbc0031I 41 added rows had average density of 4.5609756
Cbc0013I At root node, 41 cuts changed objective from -2655.5136 to -1599.2694 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 789 row cuts average 5.1 elements, 18 column cuts (48 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 139 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 19 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 88 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 202 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0012I Integer solution of -1591.8127 found by rounding after 394 iterations and 1 nodes (0.36 seconds)
Cbc0004I Integer solution of -1594.7877 found after 482 iterations and 2 nodes (0.41 seconds)
Cbc0001I Search completed - best objective -1594.787682, took 482 iterations and 2 nodes (0.41 seconds)
Cbc0032I Strong branching done 32 times (326 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.42

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 120 (-35) rows, 67 (-11) columns and 366 (-87) elements
Clp1000I sum of infeasibilities 5.7343e-05 - average 4.77859e-07, 56 fixed columns
Coin0506I Presolve 11 (-109) rows, 7 (-60) columns and 30 (-336) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2634.6895
Clp0000I Optimal - objective value 2634.6895
Coin0511I After Postsolve, objective 2634.6895, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0289269 - largest nonzero change 2.1228058e-05 ( 0.00091204228%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2634.6895
Clp0000I Optimal - objective value 2634.6895
Clp0000I Optimal - objective value 2634.6895
Coin0511I After Postsolve, objective 2634.6895, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2634.689538 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 120 rows, 67 columns (66 integer (66 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.360%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.53846
Cbc0038I Solution found of -1394.13
Cbc0038I Relaxing continuous gives -1394.13
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 11 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -1394.13 to -1434.88 (0.01 seconds)
Cbc0038I Round again with cutoff of -1554.86
Cbc0038I Pass   1: suminf.    0.28348 (5) obj. -1554.86 iterations 18
Cbc0038I Pass   2: suminf.    0.58335 (2) obj. -1554.86 iterations 7
Cbc0038I Pass   3: suminf.    0.58335 (2) obj. -1554.86 iterations 0
Cbc0038I Pass   4: suminf.    0.60000 (2) obj. -1554.86 iterations 2
Cbc0038I Pass   5: suminf.    0.11264 (1) obj. -1554.86 iterations 2
Cbc0038I Pass   6: suminf.    0.48649 (1) obj. -2082.34 iterations 1
Cbc0038I Pass   7: suminf.    0.40444 (3) obj. -1554.86 iterations 13
Cbc0038I Pass   8: suminf.    0.27470 (5) obj. -1554.86 iterations 7
Cbc0038I Pass   9: suminf.    0.84300 (4) obj. -1554.86 iterations 4
Cbc0038I Pass  10: suminf.    0.54788 (3) obj. -1554.86 iterations 1
Cbc0038I Pass  11: suminf.    0.19438 (2) obj. -1554.86 iterations 6
Cbc0038I Pass  12: suminf.    0.50019 (2) obj. -1554.86 iterations 1
Cbc0038I Pass  13: suminf.    0.72274 (5) obj. -1554.86 iterations 7
Cbc0038I Pass  14: suminf.    0.51532 (3) obj. -1554.86 iterations 7
Cbc0038I Pass  15: suminf.    0.54263 (2) obj. -1554.86 iterations 3
Cbc0038I Pass  16: suminf.    0.54263 (2) obj. -1554.86 iterations 0
Cbc0038I Pass  17: suminf.    0.51724 (2) obj. -1783.61 iterations 2
Cbc0038I Pass  18: suminf.    0.19681 (2) obj. -1554.86 iterations 1
Cbc0038I Pass  19: suminf.    1.33944 (8) obj. -1554.86 iterations 15
Cbc0038I Pass  20: suminf.    0.37455 (8) obj. -1554.86 iterations 10
Cbc0038I Pass  21: suminf.    0.13492 (2) obj. -1554.86 iterations 20
Cbc0038I Pass  22: suminf.    0.05937 (1) obj. -1554.86 iterations 2
Cbc0038I Pass  23: suminf.    0.10811 (1) obj. -1623.62 iterations 1
Cbc0038I Pass  24: suminf.    0.67730 (5) obj. -1554.86 iterations 25
Cbc0038I Pass  25: suminf.    0.51394 (6) obj. -1554.86 iterations 8
Cbc0038I Pass  26: suminf.    0.53475 (3) obj. -1554.86 iterations 3
Cbc0038I Pass  27: suminf.    0.23671 (5) obj. -1554.86 iterations 2
Cbc0038I Pass  28: suminf.    0.55872 (5) obj. -1554.86 iterations 8
Cbc0038I Pass  29: suminf.    0.52250 (7) obj. -1554.86 iterations 4
Cbc0038I Pass  30: suminf.    0.59158 (2) obj. -1554.86 iterations 13
Cbc0038I Rounding solution of -1517.94 is better than previous of -1434.88

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 27 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -1517.94 to -1527.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -1770.83
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.66439 (5) obj. -1770.83 iterations 0
Cbc0038I Pass  31: suminf.    0.60748 (2) obj. -1770.83 iterations 6
Cbc0038I Pass  32: suminf.    0.26570 (1) obj. -1770.83 iterations 2
Cbc0038I Pass  33: suminf.    0.48649 (1) obj. -1770.83 iterations 1
Cbc0038I Pass  34: suminf.    1.55743 (6) obj. -1770.83 iterations 15
Cbc0038I Pass  35: suminf.    1.34646 (8) obj. -1770.83 iterations 5
Cbc0038I Pass  36: suminf.    0.40925 (3) obj. -1770.83 iterations 12
Cbc0038I Pass  37: suminf.    0.25582 (1) obj. -1770.83 iterations 1
Cbc0038I Pass  38: suminf.    0.35135 (1) obj. -1770.83 iterations 1
Cbc0038I Pass  39: suminf.    0.61534 (3) obj. -1770.83 iterations 8
Cbc0038I Pass  40: suminf.    0.61534 (3) obj. -1770.83 iterations 6
Cbc0038I Pass  41: suminf.    1.08667 (6) obj. -1770.83 iterations 13
Cbc0038I Pass  42: suminf.    1.08667 (6) obj. -1770.83 iterations 4
Cbc0038I Pass  43: suminf.    0.91265 (3) obj. -1770.83 iterations 6
Cbc0038I Pass  44: suminf.    0.78064 (4) obj. -1770.83 iterations 2
Cbc0038I Pass  45: suminf.    1.33784 (3) obj. -1770.83 iterations 6
Cbc0038I Pass  46: suminf.    0.69391 (5) obj. -1770.83 iterations 2
Cbc0038I Pass  47: suminf.    0.60002 (2) obj. -1770.83 iterations 4
Cbc0038I Pass  48: suminf.    0.55113 (2) obj. -1770.83 iterations 1
Cbc0038I Pass  49: suminf.    0.60002 (2) obj. -1770.83 iterations 1
Cbc0038I Pass  50: suminf.    1.23948 (5) obj. -1770.83 iterations 6
Cbc0038I Pass  51: suminf.    1.04200 (7) obj. -1770.83 iterations 3
Cbc0038I Pass  52: suminf.    0.63972 (2) obj. -1770.83 iterations 7
Cbc0038I Pass  53: suminf.    0.63972 (2) obj. -1770.83 iterations 0
Cbc0038I Pass  54: suminf.    0.79310 (2) obj. -1770.83 iterations 2
Cbc0038I Pass  55: suminf.    0.54069 (2) obj. -1770.83 iterations 1
Cbc0038I Pass  56: suminf.    0.63972 (2) obj. -1770.83 iterations 1
Cbc0038I Pass  57: suminf.    1.11325 (7) obj. -1770.83 iterations 20
Cbc0038I Pass  58: suminf.    0.81325 (4) obj. -1770.83 iterations 7
Cbc0038I Pass  59: suminf.    1.39726 (3) obj. -1770.83 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 22 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1527.3 - took 0.02 seconds
Cbc0012I Integer solution of -1527.3 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 120 rows 67 columns, reduced to 13 rows 11 columns
Cbc0012I Integer solution of -1552.6275 found by DiveCoefficient after 83 iterations and 0 nodes (0.18 seconds)
Cbc0031I 7 added rows had average density of 16.142857
Cbc0013I At root node, 7 cuts changed objective from -2634.6895 to -1594.7879 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 38 row cuts average 3.4 elements, 5 column cuts (5 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 29 row cuts average 35.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0016I Integer solution of -1594.7877 found by strong branching after 83 iterations and 0 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -1594.787682, took 83 iterations and 0 nodes (0.18 seconds)
Cbc0032I Strong branching done 2 times (6 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 113 (-40) columns and 1824 (-1480) elements
Clp1000I sum of infeasibilities 3.36045e-07 - average 3.32718e-09, 61 fixed columns
Coin0506I Presolve 40 (-61) rows, 39 (-74) columns and 184 (-1640) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 2668.2512
Clp0000I Optimal - objective value 2668.2512
Coin0511I After Postsolve, objective 2668.2512, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9937087 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2668.8281
Clp0000I Optimal - objective value 2668.8281
Clp0000I Optimal - objective value 2668.8281
Coin0511I After Postsolve, objective 2668.8281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2668.82812 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 113 columns (113 integer (113 of which binary)) and 1830 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.659%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 5.45627
Cbc0038I Pass   1: suminf.    0.37122 (16) obj. -1418.51 iterations 30
Cbc0038I Solution found of -1394.13
Cbc0038I Rounding solution of -1411.32 is better than previous of -1394.13

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 35 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -1411.32 to -1434.88 (0.03 seconds)
Cbc0038I Round again with cutoff of -1556.94
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.69678 (23) obj. -1556.94 iterations 19
Cbc0038I Pass   3: suminf.    0.72435 (13) obj. -2012.87 iterations 13
Cbc0038I Pass   4: suminf.    0.35110 (13) obj. -1556.94 iterations 1
Cbc0038I Pass   5: suminf.    0.35714 (1) obj. -1997.38 iterations 14
Cbc0038I Pass   6: suminf.    0.04349 (1) obj. -1556.94 iterations 1
Cbc0038I Pass   7: suminf.    1.83995 (9) obj. -1556.94 iterations 24
Cbc0038I Pass   8: suminf.    1.39192 (8) obj. -1556.94 iterations 5
Cbc0038I Pass   9: suminf.    0.19200 (3) obj. -1556.94 iterations 9
Cbc0038I Pass  10: suminf.    0.19200 (3) obj. -1556.94 iterations 4
Cbc0038I Pass  11: suminf.    0.34738 (5) obj. -1556.94 iterations 7
Cbc0038I Pass  12: suminf.    0.26136 (3) obj. -1556.94 iterations 1
Cbc0038I Pass  13: suminf.    1.40748 (20) obj. -1556.94 iterations 33
Cbc0038I Pass  14: suminf.    1.30223 (15) obj. -1556.94 iterations 6
Cbc0038I Pass  15: suminf.    1.27892 (4) obj. -1556.94 iterations 16
Cbc0038I Pass  16: suminf.    0.25000 (9) obj. -1556.94 iterations 3
Cbc0038I Pass  17: suminf.    0.46684 (3) obj. -1556.94 iterations 7
Cbc0038I Pass  18: suminf.    0.46684 (3) obj. -1556.94 iterations 0
Cbc0038I Pass  19: suminf.    0.68919 (3) obj. -1750.58 iterations 3
Cbc0038I Pass  20: suminf.    0.23697 (5) obj. -1556.94 iterations 2
Cbc0038I Pass  21: suminf.    0.59046 (13) obj. -1556.94 iterations 18
Cbc0038I Pass  22: suminf.    0.59046 (13) obj. -1556.94 iterations 3
Cbc0038I Pass  23: suminf.    0.34147 (2) obj. -1556.94 iterations 14
Cbc0038I Pass  24: suminf.    0.23131 (2) obj. -1556.94 iterations 1
Cbc0038I Pass  25: suminf.    0.34147 (2) obj. -1556.94 iterations 1
Cbc0038I Pass  26: suminf.    0.63718 (13) obj. -1556.94 iterations 12
Cbc0038I Pass  27: suminf.    0.32224 (13) obj. -1556.94 iterations 4
Cbc0038I Pass  28: suminf.    1.69396 (16) obj. -1556.94 iterations 14
Cbc0038I Pass  29: suminf.    0.58704 (9) obj. -1556.94 iterations 11
Cbc0038I Pass  30: suminf.    1.90658 (4) obj. -1556.94 iterations 9
Cbc0038I Pass  31: suminf.    0.30999 (3) obj. -1556.94 iterations 2
Cbc0038I Rounding solution of -1518.51 is better than previous of -1434.88

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 65 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -1518.51 to -1588.62 (0.07 seconds)
Cbc0038I Round again with cutoff of -1802
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.27313 (23) obj. -1802 iterations 0
Cbc0038I Pass  32: suminf.    0.38346 (2) obj. -1999.32 iterations 24
Cbc0038I Pass  33: suminf.    0.24294 (2) obj. -1802 iterations 1
Cbc0038I Pass  34: suminf.    0.35714 (1) obj. -1997.38 iterations 3
Cbc0038I Pass  35: suminf.    0.21801 (1) obj. -1802 iterations 1
Cbc0038I Pass  36: suminf.    1.46313 (11) obj. -1802 iterations 22
Cbc0038I Pass  37: suminf.    0.82183 (6) obj. -1802 iterations 14
Cbc0038I Pass  38: suminf.    0.85118 (4) obj. -1802 iterations 7
Cbc0038I Pass  39: suminf.    0.65487 (3) obj. -1802 iterations 6
Cbc0038I Pass  40: suminf.    2.10603 (18) obj. -1802 iterations 17
Cbc0038I Pass  41: suminf.    1.34063 (8) obj. -1802 iterations 5
Cbc0038I Pass  42: suminf.    0.25348 (4) obj. -1802 iterations 17
Cbc0038I Pass  43: suminf.    0.22922 (3) obj. -1802 iterations 1
Cbc0038I Pass  44: suminf.    0.56862 (3) obj. -1802 iterations 3
Cbc0038I Pass  45: suminf.    0.56862 (3) obj. -1802 iterations 0
Cbc0038I Pass  46: suminf.    1.42039 (15) obj. -1802 iterations 17
Cbc0038I Pass  47: suminf.    0.64455 (6) obj. -1802 iterations 5
Cbc0038I Pass  48: suminf.    1.15822 (4) obj. -1802 iterations 7
Cbc0038I Pass  49: suminf.    0.85721 (3) obj. -1802 iterations 1
Cbc0038I Pass  50: suminf.    0.53168 (3) obj. -1802 iterations 3
Cbc0038I Pass  51: suminf.    0.53168 (3) obj. -1802 iterations 2
Cbc0038I Pass  52: suminf.    1.77961 (17) obj. -1802 iterations 19
Cbc0038I Pass  53: suminf.    1.27049 (16) obj. -1802 iterations 5
Cbc0038I Pass  54: suminf.    1.81885 (5) obj. -1802 iterations 18
Cbc0038I Pass  55: suminf.    0.66589 (9) obj. -1802 iterations 4
Cbc0038I Pass  56: suminf.    0.66589 (9) obj. -1802 iterations 0
Cbc0038I Pass  57: suminf.    0.56200 (2) obj. -1802 iterations 8
Cbc0038I Pass  58: suminf.    0.56200 (2) obj. -1802 iterations 0
Cbc0038I Pass  59: suminf.    0.79310 (2) obj. -2021.06 iterations 2
Cbc0038I Pass  60: suminf.    0.48624 (2) obj. -1802 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 113 columns, reduced to 63 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -1588.62 - took 0.07 seconds
Cbc0012I Integer solution of -1588.6245 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 101 rows 113 columns, reduced to 52 rows 54 columns
Cbc0031I 41 added rows had average density of 4.5609756
Cbc0013I At root node, 41 cuts changed objective from -2655.5136 to -1599.2694 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 789 row cuts average 5.1 elements, 18 column cuts (48 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 139 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 19 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 88 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 202 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0012I Integer solution of -1591.8127 found by rounding after 394 iterations and 1 nodes (0.38 seconds)
Cbc0004I Integer solution of -1594.7877 found after 482 iterations and 2 nodes (0.44 seconds)
Cbc0001I Search completed - best objective -1594.787682, took 482 iterations and 2 nodes (0.44 seconds)
Cbc0032I Strong branching done 32 times (326 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.45

