Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 60 (-18) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 1.27158e-05 - average 1.16659e-07, 10 fixed columns
Coin0506I Presolve 89 (-20) rows, 49 (-11) columns and 268 (-62) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 0.39248319 - largest nonzero change 0 ( 0%) - largest zero change 2.9259604e-05
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Coin0511I After Postsolve, objective 66.780465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Coin0511I After Postsolve, objective 66.780465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.78046547 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 60 columns (59 integer (59 of which binary)) and 374 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.645%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.53166
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.0184 iterations 29
Cbc0038I Solution found of -28.0184
Cbc0038I Relaxing continuous gives -28.0184
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -28.0184 to -42.839 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.0912
Cbc0038I Pass   2: suminf.    0.76277 (3) obj. -45.0912 iterations 10
Cbc0038I Pass   3: suminf.    0.35956 (2) obj. -45.0912 iterations 1
Cbc0038I Pass   4: suminf.    0.85639 (3) obj. -45.0912 iterations 8
Cbc0038I Pass   5: suminf.    0.35669 (2) obj. -45.0912 iterations 1
Cbc0038I Pass   6: suminf.    0.35956 (2) obj. -45.0912 iterations 9
Cbc0038I Pass   7: suminf.    1.18291 (5) obj. -45.0912 iterations 14
Cbc0038I Pass   8: suminf.    0.50427 (2) obj. -45.0912 iterations 8
Cbc0038I Pass   9: suminf.    0.35956 (2) obj. -45.0912 iterations 8
Cbc0038I Pass  10: suminf.    0.35956 (2) obj. -45.0912 iterations 0
Cbc0038I Pass  11: suminf.    0.85639 (3) obj. -45.0912 iterations 8
Cbc0038I Pass  12: suminf.    0.35669 (2) obj. -45.0912 iterations 1
Cbc0038I Pass  13: suminf.    0.35956 (2) obj. -45.0912 iterations 9
Cbc0038I Pass  14: suminf.    3.30702 (13) obj. -45.0912 iterations 23
Cbc0038I Pass  15: suminf.    0.61856 (2) obj. -45.0912 iterations 22
Cbc0038I Pass  16: suminf.    0.04987 (1) obj. -45.0912 iterations 6
Cbc0038I Pass  17: suminf.    0.46082 (2) obj. -45.0912 iterations 3
Cbc0038I Pass  18: suminf.    0.98055 (4) obj. -45.0912 iterations 7
Cbc0038I Pass  19: suminf.    0.67811 (2) obj. -45.0912 iterations 6
Cbc0038I Pass  20: suminf.    0.97842 (3) obj. -45.0912 iterations 5
Cbc0038I Pass  21: suminf.    0.46393 (2) obj. -45.0912 iterations 2
Cbc0038I Pass  22: suminf.    0.61856 (2) obj. -45.0912 iterations 8
Cbc0038I Pass  23: suminf.    0.04987 (1) obj. -45.0912 iterations 6
Cbc0038I Pass  24: suminf.    0.46082 (2) obj. -45.0912 iterations 3
Cbc0038I Pass  25: suminf.    1.29456 (7) obj. -45.0912 iterations 14
Cbc0038I Pass  26: suminf.    0.77220 (2) obj. -45.0912 iterations 12
Cbc0038I Pass  27: suminf.    0.93362 (3) obj. -45.0912 iterations 4
Cbc0038I Pass  28: suminf.    0.41183 (2) obj. -45.0912 iterations 2
Cbc0038I Pass  29: suminf.    0.61856 (2) obj. -45.0912 iterations 7
Cbc0038I Pass  30: suminf.    0.04987 (1) obj. -45.0912 iterations 4
Cbc0038I Pass  31: suminf.    0.46082 (2) obj. -45.0912 iterations 2
Cbc0038I Rounding solution of -43.967 is better than previous of -42.839

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -49.1449
Cbc0038I Pass  31: suminf.    1.02325 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  32: suminf.    0.60876 (2) obj. -49.1449 iterations 11
Cbc0038I Pass  33: suminf.    0.77397 (3) obj. -49.1449 iterations 8
Cbc0038I Pass  34: suminf.    0.54754 (2) obj. -49.1449 iterations 2
Cbc0038I Pass  35: suminf.    0.60876 (2) obj. -49.1449 iterations 8
Cbc0038I Pass  36: suminf.    0.82788 (4) obj. -49.1449 iterations 8
Cbc0038I Pass  37: suminf.    0.82116 (3) obj. -49.1449 iterations 8
Cbc0038I Pass  38: suminf.    0.76330 (4) obj. -49.1449 iterations 12
Cbc0038I Pass  39: suminf.    0.60876 (2) obj. -49.1449 iterations 1
Cbc0038I Pass  40: suminf.    0.77397 (3) obj. -49.1449 iterations 7
Cbc0038I Pass  41: suminf.    0.54754 (2) obj. -49.1449 iterations 2
Cbc0038I Pass  42: suminf.    0.60876 (2) obj. -49.1449 iterations 8
Cbc0038I Pass  43: suminf.    1.69100 (5) obj. -49.1449 iterations 14
Cbc0038I Pass  44: suminf.    1.46346 (8) obj. -49.1449 iterations 12
Cbc0038I Pass  45: suminf.    2.27828 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  46: suminf.    0.99933 (4) obj. -49.1449 iterations 5
Cbc0038I Pass  47: suminf.    0.99933 (4) obj. -49.1449 iterations 0
Cbc0038I Pass  48: suminf.    0.72952 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  49: suminf.    0.36801 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  50: suminf.    1.51545 (5) obj. -49.1449 iterations 3
Cbc0038I Pass  51: suminf.    0.89166 (6) obj. -49.1449 iterations 3
Cbc0038I Pass  52: suminf.    2.20545 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  53: suminf.    0.99933 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  54: suminf.    0.99933 (4) obj. -49.1449 iterations 0
Cbc0038I Pass  55: suminf.    0.72952 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  56: suminf.    0.36801 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  57: suminf.    1.51545 (5) obj. -49.1449 iterations 3
Cbc0038I Pass  58: suminf.    0.89166 (6) obj. -49.1449 iterations 3
Cbc0038I Pass  59: suminf.    2.20545 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  60: suminf.    0.99933 (4) obj. -49.1449 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -43.967 - took 0.05 seconds
Cbc0012I Integer solution of -43.96698 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 103 rows 60 columns, reduced to 39 rows 22 columns
Cbc0031I 15 added rows had average density of 41.933333
Cbc0013I At root node, 15 cuts changed objective from -65.360008 to -55.2007 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5729 row cuts average 5.3 elements, 1 column cuts (1 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1423 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0001I Search completed - best objective -43.96698000000001, took 4542 iterations and 12 nodes (0.43 seconds)
Cbc0032I Strong branching done 212 times (3576 iterations), fathomed 1 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-41) rows, 122 (-30) columns and 2143 (-1160) elements
Clp1000I sum of infeasibilities 5.48034e-07 - average 4.84986e-09, 66 fixed columns
Coin0506I Presolve 57 (-56) rows, 56 (-66) columns and 443 (-1700) elements
Clp0029I End of values pass after 56 iterations
Clp0000I Optimal - objective value 344.3411
Clp0000I Optimal - objective value 344.3411
Coin0511I After Postsolve, objective 344.3411, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5254539 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 344.96139
Clp0000I Optimal - objective value 344.96139
Clp0000I Optimal - objective value 344.96139
Coin0511I After Postsolve, objective 344.96139, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 344.9613903 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 79 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 68 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 121 columns (121 integer (121 of which binary)) and 2209 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.200%
Cgl0015I Clique Strengthening extended 1 cliques, 4 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 17.8261
Cbc0038I Pass   1: suminf.    1.00884 (20) obj. -114.813 iterations 19
Cbc0038I Pass   2: suminf.    1.00884 (20) obj. -114.813 iterations 0
Cbc0038I Pass   3: suminf.    0.24047 (8) obj. -95.1855 iterations 12
Cbc0038I Solution found of -81.6476
Cbc0038I Rounding solution of -93.8151 is better than previous of -81.6476

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 121 columns, reduced to 49 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -93.8151 to -212.648 (0.10 seconds)
Cbc0038I Round again with cutoff of -220.692
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.77871 (39) obj. -220.692 iterations 1
Cbc0038I Pass   5: suminf.    3.33586 (35) obj. -220.692 iterations 1
Cbc0038I Pass   6: suminf.    1.70798 (23) obj. -220.692 iterations 21
Cbc0038I Pass   7: suminf.    1.06001 (9) obj. -220.692 iterations 16
Cbc0038I Pass   8: suminf.    1.06001 (9) obj. -220.692 iterations 0
Cbc0038I Pass   9: suminf.    0.37200 (2) obj. -220.692 iterations 9
Cbc0038I Pass  10: suminf.    0.28681 (2) obj. -220.692 iterations 1
Cbc0038I Pass  11: suminf.    0.91354 (2) obj. -220.692 iterations 3
Cbc0038I Pass  12: suminf.    0.88602 (2) obj. -220.692 iterations 3
Cbc0038I Pass  13: suminf.    3.35490 (10) obj. -220.692 iterations 13
Cbc0038I Pass  14: suminf.    1.99069 (10) obj. -220.692 iterations 5
Cbc0038I Pass  15: suminf.    1.54760 (9) obj. -220.692 iterations 4
Cbc0038I Pass  16: suminf.    0.10705 (1) obj. -220.692 iterations 12
Cbc0038I Pass  17: suminf.    0.04000 (1) obj. -226.928 iterations 1
Cbc0038I Pass  18: suminf.    2.90851 (14) obj. -220.692 iterations 18
Cbc0038I Pass  19: suminf.    1.80349 (9) obj. -220.692 iterations 4
Cbc0038I Pass  20: suminf.    1.40667 (8) obj. -220.692 iterations 3
Cbc0038I Pass  21: suminf.    0.44495 (2) obj. -220.692 iterations 14
Cbc0038I Pass  22: suminf.    0.44495 (2) obj. -220.692 iterations 0
Cbc0038I Pass  23: suminf.    0.43887 (2) obj. -227.607 iterations 3
Cbc0038I Pass  24: suminf.    0.41291 (6) obj. -228.85 iterations 4
Cbc0038I Pass  25: suminf.    4.10208 (9) obj. -220.692 iterations 7
Cbc0038I Pass  26: suminf.    1.68576 (7) obj. -220.692 iterations 4
Cbc0038I Pass  27: suminf.    1.43391 (7) obj. -220.692 iterations 1
Cbc0038I Pass  28: suminf.    1.43391 (7) obj. -220.692 iterations 0
Cbc0038I Pass  29: suminf.    0.44600 (6) obj. -220.692 iterations 4
Cbc0038I Pass  30: suminf.    0.44495 (2) obj. -220.692 iterations 4
Cbc0038I Pass  31: suminf.    0.43887 (2) obj. -227.607 iterations 4
Cbc0038I Pass  32: suminf.    0.41291 (6) obj. -228.85 iterations 4
Cbc0038I Pass  33: suminf.    4.10208 (9) obj. -220.692 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 121 columns, reduced to 59 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -212.648 - took 0.04 seconds
Cbc0012I Integer solution of -212.6476 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 100 rows 121 columns, reduced to 49 rows 47 columns
Cbc0031I 9 added rows had average density of 13.111111
Cbc0013I At root node, 36 cuts changed objective from -293.08691 to -210.9415 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 184 row cuts average 3.3 elements, 54 column cuts (54 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0001I Search completed - best objective -212.6476, took 127 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.20

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 60 (-18) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 1.27158e-05 - average 1.16659e-07, 10 fixed columns
Coin0506I Presolve 89 (-20) rows, 49 (-11) columns and 268 (-62) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 0.39248319 - largest nonzero change 0 ( 0%) - largest zero change 2.9259604e-05
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Coin0511I After Postsolve, objective 66.780465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Coin0511I After Postsolve, objective 66.780465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.78046547 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 60 columns (59 integer (59 of which binary)) and 374 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.645%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.53166
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.0184 iterations 29
Cbc0038I Solution found of -28.0184
Cbc0038I Relaxing continuous gives -28.0184
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -28.0184 to -42.839 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.0912
Cbc0038I Pass   2: suminf.    0.76277 (3) obj. -45.0912 iterations 10
Cbc0038I Pass   3: suminf.    0.35956 (2) obj. -45.0912 iterations 1
Cbc0038I Pass   4: suminf.    0.85639 (3) obj. -45.0912 iterations 8
Cbc0038I Pass   5: suminf.    0.35669 (2) obj. -45.0912 iterations 1
Cbc0038I Pass   6: suminf.    0.35956 (2) obj. -45.0912 iterations 9
Cbc0038I Pass   7: suminf.    1.18291 (5) obj. -45.0912 iterations 14
Cbc0038I Pass   8: suminf.    0.50427 (2) obj. -45.0912 iterations 8
Cbc0038I Pass   9: suminf.    0.35956 (2) obj. -45.0912 iterations 8
Cbc0038I Pass  10: suminf.    0.35956 (2) obj. -45.0912 iterations 0
Cbc0038I Pass  11: suminf.    0.85639 (3) obj. -45.0912 iterations 8
Cbc0038I Pass  12: suminf.    0.35669 (2) obj. -45.0912 iterations 1
Cbc0038I Pass  13: suminf.    0.35956 (2) obj. -45.0912 iterations 9
Cbc0038I Pass  14: suminf.    3.30702 (13) obj. -45.0912 iterations 23
Cbc0038I Pass  15: suminf.    0.61856 (2) obj. -45.0912 iterations 22
Cbc0038I Pass  16: suminf.    0.04987 (1) obj. -45.0912 iterations 6
Cbc0038I Pass  17: suminf.    0.46082 (2) obj. -45.0912 iterations 3
Cbc0038I Pass  18: suminf.    0.98055 (4) obj. -45.0912 iterations 7
Cbc0038I Pass  19: suminf.    0.67811 (2) obj. -45.0912 iterations 6
Cbc0038I Pass  20: suminf.    0.97842 (3) obj. -45.0912 iterations 5
Cbc0038I Pass  21: suminf.    0.46393 (2) obj. -45.0912 iterations 2
Cbc0038I Pass  22: suminf.    0.61856 (2) obj. -45.0912 iterations 8
Cbc0038I Pass  23: suminf.    0.04987 (1) obj. -45.0912 iterations 6
Cbc0038I Pass  24: suminf.    0.46082 (2) obj. -45.0912 iterations 3
Cbc0038I Pass  25: suminf.    1.29456 (7) obj. -45.0912 iterations 14
Cbc0038I Pass  26: suminf.    0.77220 (2) obj. -45.0912 iterations 12
Cbc0038I Pass  27: suminf.    0.93362 (3) obj. -45.0912 iterations 4
Cbc0038I Pass  28: suminf.    0.41183 (2) obj. -45.0912 iterations 2
Cbc0038I Pass  29: suminf.    0.61856 (2) obj. -45.0912 iterations 7
Cbc0038I Pass  30: suminf.    0.04987 (1) obj. -45.0912 iterations 4
Cbc0038I Pass  31: suminf.    0.46082 (2) obj. -45.0912 iterations 2
Cbc0038I Rounding solution of -43.967 is better than previous of -42.839

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -49.1449
Cbc0038I Pass  31: suminf.    1.02325 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  32: suminf.    0.60876 (2) obj. -49.1449 iterations 11
Cbc0038I Pass  33: suminf.    0.77397 (3) obj. -49.1449 iterations 8
Cbc0038I Pass  34: suminf.    0.54754 (2) obj. -49.1449 iterations 2
Cbc0038I Pass  35: suminf.    0.60876 (2) obj. -49.1449 iterations 8
Cbc0038I Pass  36: suminf.    0.82788 (4) obj. -49.1449 iterations 8
Cbc0038I Pass  37: suminf.    0.82116 (3) obj. -49.1449 iterations 8
Cbc0038I Pass  38: suminf.    0.76330 (4) obj. -49.1449 iterations 12
Cbc0038I Pass  39: suminf.    0.60876 (2) obj. -49.1449 iterations 1
Cbc0038I Pass  40: suminf.    0.77397 (3) obj. -49.1449 iterations 7
Cbc0038I Pass  41: suminf.    0.54754 (2) obj. -49.1449 iterations 2
Cbc0038I Pass  42: suminf.    0.60876 (2) obj. -49.1449 iterations 8
Cbc0038I Pass  43: suminf.    1.69100 (5) obj. -49.1449 iterations 14
Cbc0038I Pass  44: suminf.    1.46346 (8) obj. -49.1449 iterations 12
Cbc0038I Pass  45: suminf.    2.27828 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  46: suminf.    0.99933 (4) obj. -49.1449 iterations 5
Cbc0038I Pass  47: suminf.    0.99933 (4) obj. -49.1449 iterations 0
Cbc0038I Pass  48: suminf.    0.72952 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  49: suminf.    0.36801 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  50: suminf.    1.51545 (5) obj. -49.1449 iterations 3
Cbc0038I Pass  51: suminf.    0.89166 (6) obj. -49.1449 iterations 3
Cbc0038I Pass  52: suminf.    2.20545 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  53: suminf.    0.99933 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  54: suminf.    0.99933 (4) obj. -49.1449 iterations 0
Cbc0038I Pass  55: suminf.    0.72952 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  56: suminf.    0.36801 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  57: suminf.    1.51545 (5) obj. -49.1449 iterations 3
Cbc0038I Pass  58: suminf.    0.89166 (6) obj. -49.1449 iterations 3
Cbc0038I Pass  59: suminf.    2.20545 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  60: suminf.    0.99933 (4) obj. -49.1449 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -43.967 - took 0.04 seconds
Cbc0012I Integer solution of -43.96698 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 103 rows 60 columns, reduced to 39 rows 22 columns
Cbc0031I 15 added rows had average density of 41.933333
Cbc0013I At root node, 15 cuts changed objective from -65.360008 to -55.2007 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5729 row cuts average 5.3 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1423 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0001I Search completed - best objective -43.96698000000001, took 4542 iterations and 12 nodes (0.48 seconds)
Cbc0032I Strong branching done 212 times (3576 iterations), fathomed 1 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 106 (-47) columns and 1553 (-1751) elements
Clp1000I sum of infeasibilities 5.19258e-06 - average 5.35318e-08, 20 fixed columns
Coin0506I Presolve 74 (-23) rows, 81 (-25) columns and 972 (-581) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 6.820054 - largest nonzero change 1.9442473e-05 ( 0.0008409402%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 77.301325
Clp0000I Optimal - objective value 77.301325
Coin0511I After Postsolve, objective 77.301325, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.301325
Clp0000I Optimal - objective value 77.301325
Clp0000I Optimal - objective value 77.301325
Coin0511I After Postsolve, objective 77.301325, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.30132522 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 61 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 106 columns (106 integer (106 of which binary)) and 1592 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.719%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 2.57459
Cbc0038I Pass   1: suminf.    0.16307 (5) obj. -45.4477 iterations 41
Cbc0038I Solution found of -30.9694
Cbc0038I Rounding solution of -33.8857 is better than previous of -30.9694

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -36.7055
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.16307 (5) obj. -45.4477 iterations 0
Cbc0038I Pass   3: suminf.    0.33582 (7) obj. -36.7055 iterations 14
Cbc0038I Pass   4: suminf.    0.48047 (2) obj. -36.7055 iterations 24
Cbc0038I Pass   5: suminf.    0.53151 (2) obj. -36.7055 iterations 2
Cbc0038I Pass   6: suminf.    0.33786 (2) obj. -40.5171 iterations 1
Cbc0038I Pass   7: suminf.    0.48047 (2) obj. -36.7055 iterations 17
Cbc0038I Pass   8: suminf.    1.38924 (22) obj. -36.7055 iterations 22
Cbc0038I Pass   9: suminf.    1.38924 (22) obj. -36.7055 iterations 0
Cbc0038I Pass  10: suminf.    1.60795 (13) obj. -36.7055 iterations 25
Cbc0038I Pass  11: suminf.    1.43129 (13) obj. -36.7055 iterations 4
Cbc0038I Pass  12: suminf.    0.76944 (9) obj. -36.7055 iterations 19
Cbc0038I Pass  13: suminf.    0.76944 (9) obj. -36.7055 iterations 4
Cbc0038I Pass  14: suminf.    1.93746 (18) obj. -36.7055 iterations 13
Cbc0038I Pass  15: suminf.    1.78186 (18) obj. -36.7055 iterations 5
Cbc0038I Pass  16: suminf.    1.70177 (16) obj. -36.7055 iterations 14
Cbc0038I Pass  17: suminf.    1.70177 (16) obj. -36.7055 iterations 3
Cbc0038I Pass  18: suminf.    1.60795 (13) obj. -36.7055 iterations 10
Cbc0038I Pass  19: suminf.    1.43129 (13) obj. -36.7055 iterations 6
Cbc0038I Pass  20: suminf.    1.48523 (15) obj. -36.7055 iterations 11
Cbc0038I Pass  21: suminf.    1.48523 (15) obj. -36.7055 iterations 3
Cbc0038I Pass  22: suminf.    1.81372 (14) obj. -36.7055 iterations 11
Cbc0038I Pass  23: suminf.    1.81372 (14) obj. -36.7055 iterations 5
Cbc0038I Pass  24: suminf.    1.80226 (14) obj. -36.7055 iterations 7
Cbc0038I Pass  25: suminf.    1.80226 (14) obj. -36.7055 iterations 5
Cbc0038I Pass  26: suminf.    1.81372 (14) obj. -36.7055 iterations 7
Cbc0038I Pass  27: suminf.    2.26127 (16) obj. -36.7055 iterations 10
Cbc0038I Pass  28: suminf.    2.26127 (16) obj. -36.7055 iterations 2
Cbc0038I Pass  29: suminf.    2.10385 (15) obj. -36.7055 iterations 8
Cbc0038I Pass  30: suminf.    2.10385 (15) obj. -36.7055 iterations 4
Cbc0038I Pass  31: suminf.    1.91543 (14) obj. -36.7055 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -30.9694 to -36.8194 (0.08 seconds)
Cbc0038I Round again with cutoff of -41.8723
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.16307 (5) obj. -45.4477 iterations 0
Cbc0038I Pass  32: suminf.    0.50476 (7) obj. -41.8723 iterations 15
Cbc0038I Pass  33: suminf.    0.37989 (7) obj. -44.6214 iterations 1
Cbc0038I Pass  34: suminf.    1.08944 (23) obj. -41.8723 iterations 36
Cbc0038I Pass  35: suminf.    1.08944 (23) obj. -41.8723 iterations 0
Cbc0038I Pass  36: suminf.    1.90790 (17) obj. -41.8723 iterations 17
Cbc0038I Pass  37: suminf.    1.52511 (17) obj. -41.8723 iterations 1
Cbc0038I Pass  38: suminf.    1.85994 (14) obj. -41.8723 iterations 14
Cbc0038I Pass  39: suminf.    1.85994 (14) obj. -41.8723 iterations 3
Cbc0038I Pass  40: suminf.    1.97691 (13) obj. -41.8723 iterations 3
Cbc0038I Pass  41: suminf.    1.79998 (13) obj. -41.8723 iterations 3
Cbc0038I Pass  42: suminf.    1.97691 (13) obj. -41.8723 iterations 6
Cbc0038I Pass  43: suminf.    2.15041 (14) obj. -41.8723 iterations 7
Cbc0038I Pass  44: suminf.    2.15041 (14) obj. -41.8723 iterations 6
Cbc0038I Pass  45: suminf.    1.92234 (14) obj. -41.8723 iterations 3
Cbc0038I Pass  46: suminf.    1.92234 (14) obj. -41.8723 iterations 0
Cbc0038I Pass  47: suminf.    2.15041 (14) obj. -41.8723 iterations 1
Cbc0038I Pass  48: suminf.    2.94925 (20) obj. -41.8723 iterations 16
Cbc0038I Pass  49: suminf.    2.17438 (17) obj. -41.8723 iterations 10
Cbc0038I Pass  50: suminf.    2.33204 (15) obj. -41.8723 iterations 14
Cbc0038I Pass  51: suminf.    1.52440 (15) obj. -41.8723 iterations 3
Cbc0038I Pass  52: suminf.    1.52440 (15) obj. -41.8723 iterations 1
Cbc0038I Pass  53: suminf.    2.33204 (15) obj. -41.8723 iterations 5
Cbc0038I Pass  54: suminf.    2.33204 (16) obj. -41.8723 iterations 8
Cbc0038I Pass  55: suminf.    1.63569 (16) obj. -41.8723 iterations 5
Cbc0038I Pass  56: suminf.    1.63569 (16) obj. -41.8723 iterations 1
Cbc0038I Pass  57: suminf.    2.33204 (16) obj. -41.8723 iterations 5
Cbc0038I Pass  58: suminf.    1.55793 (16) obj. -41.8723 iterations 2
Cbc0038I Pass  59: suminf.    1.55793 (16) obj. -41.8723 iterations 1
Cbc0038I Pass  60: suminf.    2.33204 (16) obj. -41.8723 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 106 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -36.8194 - took 0.07 seconds
Cbc0012I Integer solution of -36.81942 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 91 rows 106 columns, reduced to 5 rows 6 columns
Cbc0031I 48 added rows had average density of 19.104167
Cbc0013I At root node, 48 cuts changed objective from -62.083519 to -48.903567 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8401 row cuts average 5.2 elements, 4 column cuts (4 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1128 row cuts average 86.4 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 617 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 784 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 285 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 293 row cuts average 58.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 377 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.691 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.81942 best solution, best possible -48.903567 (2.19 seconds)
Cbc0012I Integer solution of -42.83898 found by DiveCoefficient after 3820 iterations and 2 nodes (2.20 seconds)
Cbc0012I Integer solution of -43.96698 found by rounding after 4513 iterations and 6 nodes (2.67 seconds)
Cbc0001I Search completed - best objective -43.96698000000001, took 4513 iterations and 6 nodes (2.68 seconds)
Cbc0032I Strong branching done 190 times (4678 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.86   (Wallclock seconds):       2.71

