Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 48 (-2) columns and 258 (-27) elements
Clp1000I sum of infeasibilities 7.01933e-06 - average 8.25803e-08, 5 fixed columns
Coin0506I Presolve 76 (-9) rows, 43 (-5) columns and 230 (-28) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 22.719947 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Coin0511I After Postsolve, objective 162997.04, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Coin0511I After Postsolve, objective 162997.04, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 162997.0363 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 48 columns (47 integer (47 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.783%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 11.5296
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -128646 iterations 33
Cbc0038I Solution found of -128646
Cbc0038I Relaxing continuous gives -128646
Cbc0038I Rounding solution of -160987 is better than previous of -128646

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 48 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -160987 to -161542 (0.02 seconds)
Cbc0038I Round again with cutoff of -161687
Cbc0038I Pass   2: suminf.    1.55570 (5) obj. -161687 iterations 4
Cbc0038I Pass   3: suminf.    0.61550 (3) obj. -161687 iterations 5
Cbc0038I Pass   4: suminf.    1.00000 (3) obj. -161687 iterations 2
Cbc0038I Pass   5: suminf.    0.72566 (2) obj. -161687 iterations 3
Cbc0038I Pass   6: suminf.    1.13177 (5) obj. -161687 iterations 10
Cbc0038I Pass   7: suminf.    0.57658 (4) obj. -161687 iterations 5
Cbc0038I Pass   8: suminf.    1.61329 (5) obj. -161687 iterations 9
Cbc0038I Pass   9: suminf.    1.61329 (5) obj. -161687 iterations 0
Cbc0038I Pass  10: suminf.    1.47797 (6) obj. -161687 iterations 5
Cbc0038I Pass  11: suminf.    0.62457 (4) obj. -161687 iterations 3
Cbc0038I Pass  12: suminf.    2.31247 (13) obj. -161687 iterations 14
Cbc0038I Pass  13: suminf.    1.44578 (7) obj. -161687 iterations 7
Cbc0038I Pass  14: suminf.    1.77494 (6) obj. -161687 iterations 13
Cbc0038I Pass  15: suminf.    1.77033 (6) obj. -161687 iterations 1
Cbc0038I Pass  16: suminf.    1.39500 (4) obj. -161687 iterations 4
Cbc0038I Pass  17: suminf.    0.93040 (4) obj. -161687 iterations 2
Cbc0038I Pass  18: suminf.    0.93040 (4) obj. -161687 iterations 0
Cbc0038I Pass  19: suminf.    1.59265 (4) obj. -161687 iterations 3
Cbc0038I Pass  20: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  21: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I Pass  22: suminf.    0.94564 (4) obj. -161687 iterations 2
Cbc0038I Pass  23: suminf.    0.94564 (4) obj. -161687 iterations 0
Cbc0038I Pass  24: suminf.    1.59265 (4) obj. -161687 iterations 2
Cbc0038I Pass  25: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  26: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I Pass  27: suminf.    0.94564 (4) obj. -161687 iterations 2
Cbc0038I Pass  28: suminf.    0.94564 (4) obj. -161687 iterations 0
Cbc0038I Pass  29: suminf.    1.59265 (4) obj. -161687 iterations 2
Cbc0038I Pass  30: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  31: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 48 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -161542 - took 0.03 seconds
Cbc0012I Integer solution of -161541.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 85 rows 48 columns, reduced to 56 rows 33 columns
Cbc0031I 18 added rows had average density of 33.944444
Cbc0013I At root node, 18 cuts changed objective from -162997.04 to -162176.34 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5621 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1486 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0012I Integer solution of -161550.9 found by DiveCoefficient after 5710 iterations and 17 nodes (0.56 seconds)
Cbc0001I Search completed - best objective -161550.9, took 5860 iterations and 20 nodes (0.56 seconds)
Cbc0032I Strong branching done 374 times (7682 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 9, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.57

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-13) rows, 94 (-2) columns and 1339 (-74) elements
Clp1000I sum of infeasibilities 0 - average 0, 70 fixed columns
Coin0506I Presolve 20 (-65) rows, 24 (-70) columns and 62 (-1277) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.400004 - largest nonzero change 2.5816127e-05 ( 0.0012908064%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 159038.45
Clp0000I Optimal - objective value 159038.45
Coin0511I After Postsolve, objective 159038.45, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.3891378e-05 ( 0.0017128079%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 163683.31
Clp0000I Optimal - objective value 163683.31
Clp0000I Optimal - objective value 163683.31
Coin0511I After Postsolve, objective 163683.31, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 163683.3095 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 94 columns (94 integer (94 of which binary)) and 1347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.081%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.77088
Cbc0038I Pass   1: suminf.    4.11831 (28) obj. -129794 iterations 24
Cbc0038I Pass   2: suminf.    4.11831 (28) obj. -129794 iterations 1
Cbc0038I Pass   3: suminf.    1.79764 (17) obj. -129332 iterations 11
Cbc0038I Pass   4: suminf.    0.48062 (6) obj. -129041 iterations 11
Cbc0038I Solution found of -128542
Cbc0038I Rounding solution of -160883 is better than previous of -128542

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -160883 to -161031 (0.03 seconds)
Cbc0038I Round again with cutoff of -161227
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   5: suminf.    6.82538 (34) obj. -161227 iterations 11
Cbc0038I Pass   6: suminf.    6.65605 (34) obj. -161227 iterations 6
Cbc0038I Pass   7: suminf.    0.68120 (6) obj. -161522 iterations 28
Cbc0038I Pass   8: suminf.    0.71595 (7) obj. -161227 iterations 13
Cbc0038I Pass   9: suminf.    1.42480 (4) obj. -161227 iterations 13
Cbc0038I Pass  10: suminf.    1.42480 (4) obj. -161227 iterations 3
Cbc0038I Pass  11: suminf.    0.26540 (2) obj. -161227 iterations 6
Cbc0038I Pass  12: suminf.    0.26540 (2) obj. -161227 iterations 1
Cbc0038I Pass  13: suminf.    0.12500 (1) obj. -161341 iterations 5
Cbc0038I Pass  14: suminf.    0.44647 (1) obj. -161227 iterations 5
Cbc0038I Pass  15: suminf.    1.27929 (7) obj. -161227 iterations 20
Cbc0038I Pass  16: suminf.    1.27929 (7) obj. -161227 iterations 5
Cbc0038I Pass  17: suminf.    0.51963 (3) obj. -161227 iterations 14
Cbc0038I Pass  18: suminf.    0.51963 (3) obj. -161227 iterations 0
Cbc0038I Pass  19: suminf.    0.77382 (3) obj. -161227 iterations 4
Cbc0038I Pass  20: suminf.    0.40385 (3) obj. -161321 iterations 6
Cbc0038I Pass  21: suminf.    5.56315 (21) obj. -161227 iterations 28
Cbc0038I Pass  22: suminf.    4.33145 (18) obj. -161227 iterations 5
Cbc0038I Pass  23: suminf.    2.80230 (15) obj. -161227 iterations 2
Cbc0038I Pass  24: suminf.    2.80230 (15) obj. -161227 iterations 0
Cbc0038I Pass  25: suminf.    0.39877 (3) obj. -161227 iterations 18
Cbc0038I Pass  26: suminf.    0.39877 (3) obj. -161227 iterations 0
Cbc0038I Pass  27: suminf.    0.70631 (3) obj. -161227 iterations 3
Cbc0038I Pass  28: suminf.    0.70631 (3) obj. -161227 iterations 0
Cbc0038I Pass  29: suminf.    0.39877 (3) obj. -161227 iterations 4
Cbc0038I Pass  30: suminf.    1.70654 (8) obj. -161227 iterations 19
Cbc0038I Pass  31: suminf.    1.70654 (8) obj. -161227 iterations 6
Cbc0038I Pass  32: suminf.    1.00455 (4) obj. -161227 iterations 7
Cbc0038I Pass  33: suminf.    1.00455 (4) obj. -161227 iterations 0
Cbc0038I Pass  34: suminf.    0.89251 (4) obj. -161227 iterations 4
Cbc0038I Rounding solution of -161127 is better than previous of -161031

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -161127 to -161383 (0.04 seconds)
Cbc0038I Round again with cutoff of -161705
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  34: suminf.    6.78137 (34) obj. -161705 iterations 0
Cbc0038I Pass  35: suminf.    6.67440 (34) obj. -161705 iterations 6
Cbc0038I Pass  36: suminf.    2.27775 (15) obj. -161913 iterations 19
Cbc0038I Pass  37: suminf.    1.86078 (9) obj. -161705 iterations 25
Cbc0038I Pass  38: suminf.    1.65660 (10) obj. -161705 iterations 5
Cbc0038I Pass  39: suminf.    1.91250 (10) obj. -161705 iterations 19
Cbc0038I Pass  40: suminf.    1.91250 (10) obj. -161705 iterations 0
Cbc0038I Pass  41: suminf.    4.12235 (10) obj. -161705 iterations 11
Cbc0038I Pass  42: suminf.    3.07768 (8) obj. -161705 iterations 3
Cbc0038I Pass  43: suminf.    3.07768 (8) obj. -161705 iterations 0
Cbc0038I Pass  44: suminf.    1.90438 (8) obj. -161705 iterations 8
Cbc0038I Pass  45: suminf.    1.90438 (8) obj. -161705 iterations 0
Cbc0038I Pass  46: suminf.    4.12235 (10) obj. -161705 iterations 12
Cbc0038I Pass  47: suminf.    1.16480 (4) obj. -161705 iterations 5
Cbc0038I Pass  48: suminf.    1.16480 (4) obj. -161705 iterations 3
Cbc0038I Pass  49: suminf.    0.99509 (4) obj. -161705 iterations 3
Cbc0038I Pass  50: suminf.    0.99509 (4) obj. -161705 iterations 0
Cbc0038I Pass  51: suminf.    1.16480 (4) obj. -161705 iterations 5
Cbc0038I Pass  52: suminf.    4.16733 (13) obj. -161705 iterations 17
Cbc0038I Pass  53: suminf.    2.76930 (11) obj. -161705 iterations 7
Cbc0038I Pass  54: suminf.    2.76930 (11) obj. -161705 iterations 0
Cbc0038I Pass  55: suminf.    1.82658 (6) obj. -161705 iterations 15
Cbc0038I Pass  56: suminf.    1.70599 (7) obj. -161705 iterations 9
Cbc0038I Pass  57: suminf.    1.03164 (4) obj. -161705 iterations 8
Cbc0038I Pass  58: suminf.    0.74913 (4) obj. -161751 iterations 5
Cbc0038I Pass  59: suminf.    0.93453 (4) obj. -161705 iterations 7
Cbc0038I Pass  60: suminf.    0.93453 (4) obj. -161705 iterations 1
Cbc0038I Pass  61: suminf.    1.06733 (4) obj. -161705 iterations 4
Cbc0038I Pass  62: suminf.    0.76731 (4) obj. -161754 iterations 6
Cbc0038I Pass  63: suminf.    2.59478 (15) obj. -161705 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 22 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -161383 to -161470 (0.06 seconds)
Cbc0038I Round again with cutoff of -162090
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  63: suminf.    6.74583 (34) obj. -162090 iterations 0
Cbc0038I Pass  64: suminf.    6.68922 (34) obj. -162090 iterations 6
Cbc0038I Pass  65: suminf.    3.86876 (26) obj. -162090 iterations 19
Cbc0038I Pass  66: suminf.    3.11431 (17) obj. -162090 iterations 11
Cbc0038I Pass  67: suminf.    2.86787 (18) obj. -162090 iterations 3
Cbc0038I Pass  68: suminf.    1.90103 (9) obj. -162090 iterations 22
Cbc0038I Pass  69: suminf.    1.62361 (9) obj. -162119 iterations 13
Cbc0038I Pass  70: suminf.    1.59647 (9) obj. -162090 iterations 12
Cbc0038I Pass  71: suminf.    1.59647 (9) obj. -162090 iterations 1
Cbc0038I Pass  72: suminf.    1.54514 (8) obj. -162090 iterations 5
Cbc0038I Pass  73: suminf.    1.52361 (8) obj. -162093 iterations 9
Cbc0038I Pass  74: suminf.    3.32695 (14) obj. -162090 iterations 10
Cbc0038I Pass  75: suminf.    2.72229 (13) obj. -162090 iterations 5
Cbc0038I Pass  76: suminf.    2.44669 (13) obj. -162119 iterations 4
Cbc0038I Pass  77: suminf.    1.83242 (10) obj. -162090 iterations 17
Cbc0038I Pass  78: suminf.    1.83242 (10) obj. -162090 iterations 5
Cbc0038I Pass  79: suminf.    1.83800 (10) obj. -162090 iterations 6
Cbc0038I Pass  80: suminf.    1.64429 (10) obj. -162110 iterations 9
Cbc0038I Pass  81: suminf.    2.60244 (15) obj. -162090 iterations 24
Cbc0038I Pass  82: suminf.    2.60244 (15) obj. -162090 iterations 11
Cbc0038I Pass  83: suminf.    2.13817 (12) obj. -162090 iterations 7
Cbc0038I Pass  84: suminf.    2.10406 (12) obj. -162093 iterations 9
Cbc0038I Pass  85: suminf.    2.13900 (12) obj. -162090 iterations 10
Cbc0038I Pass  86: suminf.    3.46788 (17) obj. -162090 iterations 18
Cbc0038I Pass  87: suminf.    3.26152 (18) obj. -162090 iterations 7
Cbc0038I Pass  88: suminf.    2.13900 (12) obj. -162090 iterations 20
Cbc0038I Pass  89: suminf.    3.86188 (17) obj. -162090 iterations 18
Cbc0038I Pass  90: suminf.    2.64389 (15) obj. -162090 iterations 6
Cbc0038I Pass  91: suminf.    2.63686 (14) obj. -162167 iterations 2
Cbc0038I Pass  92: suminf.    1.66785 (10) obj. -162090 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -161470 - took 0.05 seconds
Cbc0012I Integer solution of -161469.6 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 94 columns, reduced to 7 rows 14 columns
Cbc0012I Integer solution of -161550.9 found by DiveCoefficient after 193 iterations and 0 nodes (0.15 seconds)
Cbc0031I 33 added rows had average density of 5.2727273
Cbc0013I At root node, 33 cuts changed objective from -162990.09 to -161550.9 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 796 row cuts average 4.2 elements, 15 column cuts (15 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 41.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 33.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -161550.9, took 193 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 48 (-2) columns and 258 (-27) elements
Clp1000I sum of infeasibilities 7.01933e-06 - average 8.25803e-08, 5 fixed columns
Coin0506I Presolve 76 (-9) rows, 43 (-5) columns and 230 (-28) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 22.719947 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Coin0511I After Postsolve, objective 162997.04, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Coin0511I After Postsolve, objective 162997.04, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 162997.0363 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 48 columns (47 integer (47 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.783%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 11.5296
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -128646 iterations 33
Cbc0038I Solution found of -128646
Cbc0038I Relaxing continuous gives -128646
Cbc0038I Rounding solution of -160987 is better than previous of -128646

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 48 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -160987 to -161542 (0.02 seconds)
Cbc0038I Round again with cutoff of -161687
Cbc0038I Pass   2: suminf.    1.55570 (5) obj. -161687 iterations 4
Cbc0038I Pass   3: suminf.    0.61550 (3) obj. -161687 iterations 5
Cbc0038I Pass   4: suminf.    1.00000 (3) obj. -161687 iterations 2
Cbc0038I Pass   5: suminf.    0.72566 (2) obj. -161687 iterations 3
Cbc0038I Pass   6: suminf.    1.13177 (5) obj. -161687 iterations 10
Cbc0038I Pass   7: suminf.    0.57658 (4) obj. -161687 iterations 5
Cbc0038I Pass   8: suminf.    1.61329 (5) obj. -161687 iterations 9
Cbc0038I Pass   9: suminf.    1.61329 (5) obj. -161687 iterations 0
Cbc0038I Pass  10: suminf.    1.47797 (6) obj. -161687 iterations 5
Cbc0038I Pass  11: suminf.    0.62457 (4) obj. -161687 iterations 3
Cbc0038I Pass  12: suminf.    2.31247 (13) obj. -161687 iterations 14
Cbc0038I Pass  13: suminf.    1.44578 (7) obj. -161687 iterations 7
Cbc0038I Pass  14: suminf.    1.77494 (6) obj. -161687 iterations 13
Cbc0038I Pass  15: suminf.    1.77033 (6) obj. -161687 iterations 1
Cbc0038I Pass  16: suminf.    1.39500 (4) obj. -161687 iterations 4
Cbc0038I Pass  17: suminf.    0.93040 (4) obj. -161687 iterations 2
Cbc0038I Pass  18: suminf.    0.93040 (4) obj. -161687 iterations 0
Cbc0038I Pass  19: suminf.    1.59265 (4) obj. -161687 iterations 3
Cbc0038I Pass  20: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  21: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I Pass  22: suminf.    0.94564 (4) obj. -161687 iterations 2
Cbc0038I Pass  23: suminf.    0.94564 (4) obj. -161687 iterations 0
Cbc0038I Pass  24: suminf.    1.59265 (4) obj. -161687 iterations 2
Cbc0038I Pass  25: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  26: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I Pass  27: suminf.    0.94564 (4) obj. -161687 iterations 2
Cbc0038I Pass  28: suminf.    0.94564 (4) obj. -161687 iterations 0
Cbc0038I Pass  29: suminf.    1.59265 (4) obj. -161687 iterations 2
Cbc0038I Pass  30: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  31: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 48 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -161542 - took 0.04 seconds
Cbc0012I Integer solution of -161541.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 85 rows 48 columns, reduced to 56 rows 33 columns
Cbc0031I 18 added rows had average density of 33.944444
Cbc0013I At root node, 18 cuts changed objective from -162997.04 to -162176.34 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5621 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1486 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0012I Integer solution of -161550.9 found by DiveCoefficient after 5710 iterations and 17 nodes (0.61 seconds)
Cbc0001I Search completed - best objective -161550.9, took 5860 iterations and 20 nodes (0.61 seconds)
Cbc0032I Strong branching done 374 times (7682 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 9, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 94 (-3) columns and 1339 (-75) elements
Clp1000I sum of infeasibilities 0 - average 0, 70 fixed columns
Coin0506I Presolve 20 (-65) rows, 24 (-70) columns and 62 (-1277) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.400004 - largest nonzero change 2.5816127e-05 ( 0.0012908064%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 159038.45
Clp0000I Optimal - objective value 159038.45
Coin0511I After Postsolve, objective 159038.45, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.3891378e-05 ( 0.0017128079%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 163683.31
Clp0000I Optimal - objective value 163683.31
Clp0000I Optimal - objective value 163683.31
Coin0511I After Postsolve, objective 163683.31, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 163683.3095 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 94 columns (94 integer (94 of which binary)) and 1347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.081%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.77088
Cbc0038I Pass   1: suminf.    4.11831 (28) obj. -129794 iterations 24
Cbc0038I Pass   2: suminf.    4.11831 (28) obj. -129794 iterations 1
Cbc0038I Pass   3: suminf.    1.79764 (17) obj. -129332 iterations 11
Cbc0038I Pass   4: suminf.    0.48062 (6) obj. -129041 iterations 11
Cbc0038I Solution found of -128542
Cbc0038I Rounding solution of -160883 is better than previous of -128542

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -160883 to -161031 (0.03 seconds)
Cbc0038I Round again with cutoff of -161227
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   5: suminf.    6.82538 (34) obj. -161227 iterations 11
Cbc0038I Pass   6: suminf.    6.65605 (34) obj. -161227 iterations 6
Cbc0038I Pass   7: suminf.    0.68120 (6) obj. -161522 iterations 28
Cbc0038I Pass   8: suminf.    0.71595 (7) obj. -161227 iterations 13
Cbc0038I Pass   9: suminf.    1.42480 (4) obj. -161227 iterations 13
Cbc0038I Pass  10: suminf.    1.42480 (4) obj. -161227 iterations 3
Cbc0038I Pass  11: suminf.    0.26540 (2) obj. -161227 iterations 6
Cbc0038I Pass  12: suminf.    0.26540 (2) obj. -161227 iterations 1
Cbc0038I Pass  13: suminf.    0.12500 (1) obj. -161341 iterations 5
Cbc0038I Pass  14: suminf.    0.44647 (1) obj. -161227 iterations 5
Cbc0038I Pass  15: suminf.    1.27929 (7) obj. -161227 iterations 20
Cbc0038I Pass  16: suminf.    1.27929 (7) obj. -161227 iterations 5
Cbc0038I Pass  17: suminf.    0.51963 (3) obj. -161227 iterations 14
Cbc0038I Pass  18: suminf.    0.51963 (3) obj. -161227 iterations 0
Cbc0038I Pass  19: suminf.    0.77382 (3) obj. -161227 iterations 4
Cbc0038I Pass  20: suminf.    0.40385 (3) obj. -161321 iterations 6
Cbc0038I Pass  21: suminf.    5.56315 (21) obj. -161227 iterations 28
Cbc0038I Pass  22: suminf.    4.33145 (18) obj. -161227 iterations 5
Cbc0038I Pass  23: suminf.    2.80230 (15) obj. -161227 iterations 2
Cbc0038I Pass  24: suminf.    2.80230 (15) obj. -161227 iterations 0
Cbc0038I Pass  25: suminf.    0.39877 (3) obj. -161227 iterations 18
Cbc0038I Pass  26: suminf.    0.39877 (3) obj. -161227 iterations 0
Cbc0038I Pass  27: suminf.    0.70631 (3) obj. -161227 iterations 3
Cbc0038I Pass  28: suminf.    0.70631 (3) obj. -161227 iterations 0
Cbc0038I Pass  29: suminf.    0.39877 (3) obj. -161227 iterations 4
Cbc0038I Pass  30: suminf.    1.70654 (8) obj. -161227 iterations 19
Cbc0038I Pass  31: suminf.    1.70654 (8) obj. -161227 iterations 6
Cbc0038I Pass  32: suminf.    1.00455 (4) obj. -161227 iterations 7
Cbc0038I Pass  33: suminf.    1.00455 (4) obj. -161227 iterations 0
Cbc0038I Pass  34: suminf.    0.89251 (4) obj. -161227 iterations 4
Cbc0038I Rounding solution of -161127 is better than previous of -161031

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -161127 to -161383 (0.04 seconds)
Cbc0038I Round again with cutoff of -161705
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  34: suminf.    6.78137 (34) obj. -161705 iterations 0
Cbc0038I Pass  35: suminf.    6.67440 (34) obj. -161705 iterations 6
Cbc0038I Pass  36: suminf.    2.27775 (15) obj. -161913 iterations 19
Cbc0038I Pass  37: suminf.    1.86078 (9) obj. -161705 iterations 25
Cbc0038I Pass  38: suminf.    1.65660 (10) obj. -161705 iterations 5
Cbc0038I Pass  39: suminf.    1.91250 (10) obj. -161705 iterations 19
Cbc0038I Pass  40: suminf.    1.91250 (10) obj. -161705 iterations 0
Cbc0038I Pass  41: suminf.    4.12235 (10) obj. -161705 iterations 11
Cbc0038I Pass  42: suminf.    3.07768 (8) obj. -161705 iterations 3
Cbc0038I Pass  43: suminf.    3.07768 (8) obj. -161705 iterations 0
Cbc0038I Pass  44: suminf.    1.90438 (8) obj. -161705 iterations 8
Cbc0038I Pass  45: suminf.    1.90438 (8) obj. -161705 iterations 0
Cbc0038I Pass  46: suminf.    4.12235 (10) obj. -161705 iterations 12
Cbc0038I Pass  47: suminf.    1.16480 (4) obj. -161705 iterations 5
Cbc0038I Pass  48: suminf.    1.16480 (4) obj. -161705 iterations 3
Cbc0038I Pass  49: suminf.    0.99509 (4) obj. -161705 iterations 3
Cbc0038I Pass  50: suminf.    0.99509 (4) obj. -161705 iterations 0
Cbc0038I Pass  51: suminf.    1.16480 (4) obj. -161705 iterations 5
Cbc0038I Pass  52: suminf.    4.16733 (13) obj. -161705 iterations 17
Cbc0038I Pass  53: suminf.    2.76930 (11) obj. -161705 iterations 7
Cbc0038I Pass  54: suminf.    2.76930 (11) obj. -161705 iterations 0
Cbc0038I Pass  55: suminf.    1.82658 (6) obj. -161705 iterations 15
Cbc0038I Pass  56: suminf.    1.70599 (7) obj. -161705 iterations 9
Cbc0038I Pass  57: suminf.    1.03164 (4) obj. -161705 iterations 8
Cbc0038I Pass  58: suminf.    0.74913 (4) obj. -161751 iterations 5
Cbc0038I Pass  59: suminf.    0.93453 (4) obj. -161705 iterations 7
Cbc0038I Pass  60: suminf.    0.93453 (4) obj. -161705 iterations 1
Cbc0038I Pass  61: suminf.    1.06733 (4) obj. -161705 iterations 4
Cbc0038I Pass  62: suminf.    0.76731 (4) obj. -161754 iterations 6
Cbc0038I Pass  63: suminf.    2.59478 (15) obj. -161705 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 94 columns, reduced to 22 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -161383 to -161470 (0.06 seconds)
Cbc0038I Round again with cutoff of -162090
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  63: suminf.    6.74583 (34) obj. -162090 iterations 0
Cbc0038I Pass  64: suminf.    6.68922 (34) obj. -162090 iterations 6
Cbc0038I Pass  65: suminf.    3.86876 (26) obj. -162090 iterations 19
Cbc0038I Pass  66: suminf.    3.11431 (17) obj. -162090 iterations 11
Cbc0038I Pass  67: suminf.    2.86787 (18) obj. -162090 iterations 3
Cbc0038I Pass  68: suminf.    1.90103 (9) obj. -162090 iterations 22
Cbc0038I Pass  69: suminf.    1.62361 (9) obj. -162119 iterations 13
Cbc0038I Pass  70: suminf.    1.59647 (9) obj. -162090 iterations 12
Cbc0038I Pass  71: suminf.    1.59647 (9) obj. -162090 iterations 1
Cbc0038I Pass  72: suminf.    1.54514 (8) obj. -162090 iterations 5
Cbc0038I Pass  73: suminf.    1.52361 (8) obj. -162093 iterations 9
Cbc0038I Pass  74: suminf.    3.32695 (14) obj. -162090 iterations 10
Cbc0038I Pass  75: suminf.    2.72229 (13) obj. -162090 iterations 5
Cbc0038I Pass  76: suminf.    2.44669 (13) obj. -162119 iterations 4
Cbc0038I Pass  77: suminf.    1.83242 (10) obj. -162090 iterations 17
Cbc0038I Pass  78: suminf.    1.83242 (10) obj. -162090 iterations 5
Cbc0038I Pass  79: suminf.    1.83800 (10) obj. -162090 iterations 6
Cbc0038I Pass  80: suminf.    1.64429 (10) obj. -162110 iterations 9
Cbc0038I Pass  81: suminf.    2.60244 (15) obj. -162090 iterations 24
Cbc0038I Pass  82: suminf.    2.60244 (15) obj. -162090 iterations 11
Cbc0038I Pass  83: suminf.    2.13817 (12) obj. -162090 iterations 7
Cbc0038I Pass  84: suminf.    2.10406 (12) obj. -162093 iterations 9
Cbc0038I Pass  85: suminf.    2.13900 (12) obj. -162090 iterations 10
Cbc0038I Pass  86: suminf.    3.46788 (17) obj. -162090 iterations 18
Cbc0038I Pass  87: suminf.    3.26152 (18) obj. -162090 iterations 7
Cbc0038I Pass  88: suminf.    2.13900 (12) obj. -162090 iterations 20
Cbc0038I Pass  89: suminf.    3.86188 (17) obj. -162090 iterations 18
Cbc0038I Pass  90: suminf.    2.64389 (15) obj. -162090 iterations 6
Cbc0038I Pass  91: suminf.    2.63686 (14) obj. -162167 iterations 2
Cbc0038I Pass  92: suminf.    1.66785 (10) obj. -162090 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -161470 - took 0.06 seconds
Cbc0012I Integer solution of -161469.6 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 94 columns, reduced to 7 rows 14 columns
Cbc0012I Integer solution of -161550.9 found by DiveCoefficient after 193 iterations and 0 nodes (0.15 seconds)
Cbc0031I 33 added rows had average density of 5.2727273
Cbc0013I At root node, 33 cuts changed objective from -162990.09 to -161550.9 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 796 row cuts average 4.2 elements, 15 column cuts (15 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 41.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 33.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -161550.9, took 193 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.16

