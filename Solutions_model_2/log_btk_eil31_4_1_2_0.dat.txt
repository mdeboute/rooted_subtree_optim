Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 25 (-8) columns and 129 (-54) elements
Clp1000I sum of infeasibilities 3.10869e-06 - average 7.22952e-08, 5 fixed columns
Coin0506I Presolve 34 (-9) rows, 20 (-5) columns and 101 (-28) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Coin0511I After Postsolve, objective 77.261892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Coin0511I After Postsolve, objective 77.261892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.26189247 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.61757
Cbc0038I Pass   1: suminf.    0.48889 (1) obj. -44.0362 iterations 11
Cbc0038I Solution found of -34.632
Cbc0038I Relaxing continuous gives -34.632
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 21 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -34.632 to -47.005 (0.01 seconds)
Cbc0038I Round again with cutoff of -49.4646
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.83474 (3) obj. -49.4646 iterations 2
Cbc0038I Pass   3: suminf.    0.47448 (2) obj. -49.4646 iterations 5
Cbc0038I Pass   4: suminf.    0.86005 (3) obj. -49.4646 iterations 2
Cbc0038I Pass   5: suminf.    0.47598 (2) obj. -49.4646 iterations 7
Cbc0038I Pass   6: suminf.    0.18038 (2) obj. -49.4646 iterations 1
Cbc0038I Pass   7: suminf.    1.15135 (4) obj. -49.4646 iterations 5
Cbc0038I Pass   8: suminf.    0.98038 (4) obj. -49.4646 iterations 3
Cbc0038I Pass   9: suminf.    0.67108 (2) obj. -49.4646 iterations 6
Cbc0038I Pass  10: suminf.    0.24604 (2) obj. -49.4646 iterations 3
Cbc0038I Pass  11: suminf.    0.84284 (2) obj. -49.4646 iterations 3
Cbc0038I Pass  12: suminf.    0.50358 (2) obj. -52.3578 iterations 2
Cbc0038I Pass  13: suminf.    0.33415 (2) obj. -49.4646 iterations 1
Cbc0038I Pass  14: suminf.    1.16986 (4) obj. -49.4646 iterations 6
Cbc0038I Pass  15: suminf.    0.60787 (4) obj. -49.4646 iterations 4
Cbc0038I Pass  16: suminf.    0.94686 (2) obj. -49.4646 iterations 5
Cbc0038I Pass  17: suminf.    0.28925 (1) obj. -49.4646 iterations 1
Cbc0038I Pass  18: suminf.    0.16842 (1) obj. -53.7032 iterations 1
Cbc0038I Pass  19: suminf.    0.65195 (6) obj. -49.4646 iterations 6
Cbc0038I Pass  20: suminf.    0.52128 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  21: suminf.    0.73913 (3) obj. -49.4646 iterations 4
Cbc0038I Pass  22: suminf.    0.65536 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  23: suminf.    1.25841 (4) obj. -49.4646 iterations 4
Cbc0038I Pass  24: suminf.    0.92191 (3) obj. -49.4646 iterations 4
Cbc0038I Pass  25: suminf.    1.28862 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  26: suminf.    1.00786 (5) obj. -49.4646 iterations 2
Cbc0038I Pass  27: suminf.    0.90129 (3) obj. -49.4646 iterations 7
Cbc0038I Pass  28: suminf.    0.70331 (3) obj. -49.4646 iterations 2
Cbc0038I Pass  29: suminf.    0.09870 (3) obj. -49.4646 iterations 6
Cbc0038I Pass  30: suminf.    0.09870 (3) obj. -49.4646 iterations 0
Cbc0038I Pass  31: suminf.    1.32574 (4) obj. -49.4646 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -47.005 to -48.5299 (0.02 seconds)
Cbc0038I Round again with cutoff of -53.8918
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.14680 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  32: suminf.    0.93442 (2) obj. -53.8918 iterations 4
Cbc0038I Pass  33: suminf.    0.93442 (2) obj. -53.8918 iterations 0
Cbc0038I Pass  34: suminf.    0.29389 (2) obj. -53.8918 iterations 2
Cbc0038I Pass  35: suminf.    1.29099 (4) obj. -53.8918 iterations 11
Cbc0038I Pass  36: suminf.    0.24660 (2) obj. -53.8918 iterations 8
Cbc0038I Pass  37: suminf.    0.63740 (2) obj. -53.8918 iterations 4
Cbc0038I Pass  38: suminf.    0.65090 (3) obj. -53.8918 iterations 3
Cbc0038I Pass  39: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  40: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  41: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  42: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  43: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  44: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I Pass  45: suminf.    0.88413 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  46: suminf.    0.65090 (3) obj. -53.8918 iterations 6
Cbc0038I Pass  47: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  48: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  49: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  50: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  51: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  52: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I Pass  53: suminf.    0.88413 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  54: suminf.    0.65090 (3) obj. -53.8918 iterations 6
Cbc0038I Pass  55: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  56: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  57: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  58: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  59: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  60: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.5299 - took 0.04 seconds
Cbc0012I Integer solution of -48.529858 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 42 rows 25 columns, reduced to 25 rows 15 columns
Cbc0031I 10 added rows had average density of 19.5
Cbc0013I At root node, 10 cuts changed objective from -71.600286 to -61.165161 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 691 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 408 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0012I Integer solution of -50.766998 found by rounding after 1328 iterations and 1 nodes (0.12 seconds)
Cbc0001I Search completed - best objective -50.766998, took 1684 iterations and 8 nodes (0.15 seconds)
Cbc0032I Strong branching done 74 times (511 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-15) rows, 54 (-8) columns and 478 (-170) elements
Clp1000I sum of infeasibilities 2.14888e-08 - average 4.38546e-10, 12 fixed columns
Coin0506I Presolve 39 (-10) rows, 42 (-12) columns and 269 (-209) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.7404989 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 94.990525
Clp0000I Optimal - objective value 94.990525
Coin0511I After Postsolve, objective 94.990525, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.990525
Clp0000I Optimal - objective value 94.990525
Clp0000I Optimal - objective value 94.990525
Coin0511I After Postsolve, objective 94.990525, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.99052529 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 388 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.565%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.65202
Cbc0038I Pass   1: suminf.    1.06918 (9) obj. -47.6972 iterations 6
Cbc0038I Pass   2: suminf.    1.06918 (9) obj. -47.6972 iterations 0
Cbc0038I Solution found of -38.0391
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -41.1696
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.06918 (9) obj. -47.6972 iterations 0
Cbc0038I Pass   4: suminf.    1.06918 (9) obj. -47.6972 iterations 0
Cbc0038I Pass   5: suminf.    0.17506 (2) obj. -41.1696 iterations 11
Cbc0038I Pass   6: suminf.    0.15966 (2) obj. -53.2072 iterations 1
Cbc0038I Pass   7: suminf.    0.17506 (2) obj. -41.1696 iterations 2
Cbc0038I Pass   8: suminf.    0.98548 (3) obj. -41.1696 iterations 7
Cbc0038I Pass   9: suminf.    0.64717 (2) obj. -41.1696 iterations 3
Cbc0038I Pass  10: suminf.    0.32805 (1) obj. -41.1696 iterations 1
Cbc0038I Pass  11: suminf.    0.31111 (1) obj. -47.809 iterations 1
Cbc0038I Pass  12: suminf.    1.43350 (6) obj. -41.1696 iterations 14
Cbc0038I Pass  13: suminf.    0.88300 (4) obj. -41.1696 iterations 2
Cbc0038I Pass  14: suminf.    0.77606 (3) obj. -41.1696 iterations 5
Cbc0038I Pass  15: suminf.    0.77606 (3) obj. -41.1696 iterations 0
Cbc0038I Pass  16: suminf.    0.62439 (6) obj. -41.1696 iterations 3
Cbc0038I Pass  17: suminf.    0.61735 (5) obj. -41.1696 iterations 2
Cbc0038I Pass  18: suminf.    1.16531 (5) obj. -41.1696 iterations 7
Cbc0038I Pass  19: suminf.    1.02049 (6) obj. -41.1696 iterations 1
Cbc0038I Pass  20: suminf.    0.79188 (2) obj. -43.3911 iterations 5
Cbc0038I Pass  21: suminf.    0.50234 (2) obj. -41.1696 iterations 1
Cbc0038I Pass  22: suminf.    0.47930 (2) obj. -41.1696 iterations 3
Cbc0038I Pass  23: suminf.    0.34702 (1) obj. -41.1696 iterations 1
Cbc0038I Pass  24: suminf.    0.10526 (1) obj. -49.6504 iterations 1
Cbc0038I Pass  25: suminf.    2.38881 (7) obj. -41.1696 iterations 11
Cbc0038I Pass  26: suminf.    1.63622 (5) obj. -41.1696 iterations 3
Cbc0038I Pass  27: suminf.    1.17429 (4) obj. -41.1696 iterations 1
Cbc0038I Pass  28: suminf.    0.20065 (3) obj. -41.1696 iterations 5
Cbc0038I Pass  29: suminf.    0.19994 (3) obj. -41.1696 iterations 1
Cbc0038I Pass  30: suminf.    0.28602 (2) obj. -41.1696 iterations 1
Cbc0038I Solution found of -43.2428
Cbc0038I Rounding solution of -47.7157 is better than previous of -43.2428

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 23 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -52.0412
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.22463 (17) obj. -52.0412 iterations 2
Cbc0038I Pass  32: suminf.    2.22463 (17) obj. -52.0412 iterations 0
Cbc0038I Pass  33: suminf.    0.76725 (6) obj. -52.0412 iterations 16
Cbc0038I Pass  34: suminf.    0.76725 (6) obj. -52.0412 iterations 0
Cbc0038I Pass  35: suminf.    0.81935 (3) obj. -52.0412 iterations 5
Cbc0038I Pass  36: suminf.    0.38487 (2) obj. -53.6329 iterations 2
Cbc0038I Pass  37: suminf.    1.87805 (9) obj. -52.0412 iterations 9
Cbc0038I Pass  38: suminf.    1.50409 (8) obj. -55.7808 iterations 1
Cbc0038I Pass  39: suminf.    1.48920 (5) obj. -52.0412 iterations 7
Cbc0038I Pass  40: suminf.    1.48920 (5) obj. -52.0412 iterations 0
Cbc0038I Pass  41: suminf.    0.82476 (3) obj. -52.0412 iterations 3
Cbc0038I Pass  42: suminf.    0.82476 (3) obj. -52.0412 iterations 0
Cbc0038I Pass  43: suminf.    0.48038 (2) obj. -52.0412 iterations 2
Cbc0038I Pass  44: suminf.    0.34081 (2) obj. -54.4799 iterations 1
Cbc0038I Pass  45: suminf.    3.15489 (11) obj. -52.0412 iterations 11
Cbc0038I Pass  46: suminf.    2.39280 (8) obj. -52.0412 iterations 2
Cbc0038I Pass  47: suminf.    1.02420 (3) obj. -52.0412 iterations 7
Cbc0038I Pass  48: suminf.    0.73317 (2) obj. -52.6084 iterations 2
Cbc0038I Pass  49: suminf.    0.76564 (2) obj. -52.0412 iterations 1
Cbc0038I Pass  50: suminf.    1.70412 (6) obj. -52.0412 iterations 6
Cbc0038I Pass  51: suminf.    1.61813 (6) obj. -52.0412 iterations 2
Cbc0038I Pass  52: suminf.    0.93921 (3) obj. -52.0412 iterations 5
Cbc0038I Pass  53: suminf.    0.57251 (2) obj. -52.8188 iterations 2
Cbc0038I Pass  54: suminf.    0.62201 (2) obj. -52.0412 iterations 1
Cbc0038I Pass  55: suminf.    2.83988 (8) obj. -52.0412 iterations 8
Cbc0038I Pass  56: suminf.    2.06807 (6) obj. -52.0412 iterations 2
Cbc0038I Pass  57: suminf.    1.61796 (5) obj. -52.0412 iterations 2
Cbc0038I Pass  58: suminf.    0.62615 (2) obj. -52.0412 iterations 4
Cbc0038I Pass  59: suminf.    0.44428 (2) obj. -52.0412 iterations 1
Cbc0038I Pass  60: suminf.    1.73949 (5) obj. -52.0412 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 27 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -43.2428 to -50.767 (0.06 seconds)
Cbc0038I Round again with cutoff of -57.2318
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  60: suminf.    2.51454 (17) obj. -57.2318 iterations 1
Cbc0038I Pass  61: suminf.    2.51454 (17) obj. -57.2318 iterations 0
Cbc0038I Pass  62: suminf.    1.39513 (8) obj. -57.2318 iterations 21
Cbc0038I Pass  63: suminf.    0.87631 (4) obj. -57.2836 iterations 2
Cbc0038I Pass  64: suminf.    1.83116 (6) obj. -57.2318 iterations 3
Cbc0038I Pass  65: suminf.    1.44641 (5) obj. -57.2318 iterations 2
Cbc0038I Pass  66: suminf.    1.37935 (4) obj. -57.2318 iterations 3
Cbc0038I Pass  67: suminf.    1.31922 (4) obj. -57.2318 iterations 1
Cbc0038I Pass  68: suminf.    0.35501 (2) obj. -57.2318 iterations 4
Cbc0038I Pass  69: suminf.    0.34081 (2) obj. -57.4799 iterations 1
Cbc0038I Pass  70: suminf.    2.81285 (8) obj. -57.2318 iterations 7
Cbc0038I Pass  71: suminf.    2.55863 (7) obj. -57.2318 iterations 2
Cbc0038I Pass  72: suminf.    2.04565 (6) obj. -57.2318 iterations 5
Cbc0038I Pass  73: suminf.    2.04388 (6) obj. -57.2318 iterations 1
Cbc0038I Pass  74: suminf.    0.83853 (4) obj. -57.2318 iterations 3
Cbc0038I Pass  75: suminf.    0.80647 (4) obj. -57.2318 iterations 1
Cbc0038I Pass  76: suminf.    0.83853 (4) obj. -57.2318 iterations 2
Cbc0038I Pass  77: suminf.    3.26892 (10) obj. -57.2318 iterations 7
Cbc0038I Pass  78: suminf.    1.84676 (7) obj. -57.2318 iterations 3
Cbc0038I Pass  79: suminf.    1.67002 (5) obj. -57.2318 iterations 2
Cbc0038I Pass  80: suminf.    1.61679 (6) obj. -57.2318 iterations 3
Cbc0038I Pass  81: suminf.    1.61679 (6) obj. -57.2318 iterations 0
Cbc0038I Pass  82: suminf.    2.13903 (7) obj. -57.2318 iterations 2
Cbc0038I Pass  83: suminf.    1.76436 (6) obj. -57.2318 iterations 2
Cbc0038I Pass  84: suminf.    1.93459 (7) obj. -57.2318 iterations 2
Cbc0038I Pass  85: suminf.    1.80166 (7) obj. -57.2318 iterations 1
Cbc0038I Pass  86: suminf.    1.78103 (6) obj. -57.2318 iterations 1
Cbc0038I Pass  87: suminf.    1.99233 (6) obj. -57.2318 iterations 2
Cbc0038I Pass  88: suminf.    1.99233 (6) obj. -57.2318 iterations 0
Cbc0038I Pass  89: suminf.    2.11436 (6) obj. -57.2318 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -50.767 - took 0.05 seconds
Cbc0012I Integer solution of -50.766998 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 24 rows 29 columns
Cbc0031I 25 added rows had average density of 16.64
Cbc0013I At root node, 25 cuts changed objective from -69.343018 to -56.385771 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2045 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 953 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 159 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 156 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 184 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 401 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 446 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 53 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.743 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -50.766998 best solution, best possible -56.385771 (1.64 seconds)
Cbc0001I Search completed - best objective -50.766998, took 2226 iterations and 10 nodes (1.73 seconds)
Cbc0032I Strong branching done 214 times (2013 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.73

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 25 (-8) columns and 129 (-54) elements
Clp1000I sum of infeasibilities 3.10869e-06 - average 7.22952e-08, 5 fixed columns
Coin0506I Presolve 34 (-9) rows, 20 (-5) columns and 101 (-28) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Coin0511I After Postsolve, objective 77.261892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Coin0511I After Postsolve, objective 77.261892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.26189247 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.61757
Cbc0038I Pass   1: suminf.    0.48889 (1) obj. -44.0362 iterations 11
Cbc0038I Solution found of -34.632
Cbc0038I Relaxing continuous gives -34.632
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 21 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -34.632 to -47.005 (0.01 seconds)
Cbc0038I Round again with cutoff of -49.4646
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.83474 (3) obj. -49.4646 iterations 2
Cbc0038I Pass   3: suminf.    0.47448 (2) obj. -49.4646 iterations 5
Cbc0038I Pass   4: suminf.    0.86005 (3) obj. -49.4646 iterations 2
Cbc0038I Pass   5: suminf.    0.47598 (2) obj. -49.4646 iterations 7
Cbc0038I Pass   6: suminf.    0.18038 (2) obj. -49.4646 iterations 1
Cbc0038I Pass   7: suminf.    1.15135 (4) obj. -49.4646 iterations 5
Cbc0038I Pass   8: suminf.    0.98038 (4) obj. -49.4646 iterations 3
Cbc0038I Pass   9: suminf.    0.67108 (2) obj. -49.4646 iterations 6
Cbc0038I Pass  10: suminf.    0.24604 (2) obj. -49.4646 iterations 3
Cbc0038I Pass  11: suminf.    0.84284 (2) obj. -49.4646 iterations 3
Cbc0038I Pass  12: suminf.    0.50358 (2) obj. -52.3578 iterations 2
Cbc0038I Pass  13: suminf.    0.33415 (2) obj. -49.4646 iterations 1
Cbc0038I Pass  14: suminf.    1.16986 (4) obj. -49.4646 iterations 6
Cbc0038I Pass  15: suminf.    0.60787 (4) obj. -49.4646 iterations 4
Cbc0038I Pass  16: suminf.    0.94686 (2) obj. -49.4646 iterations 5
Cbc0038I Pass  17: suminf.    0.28925 (1) obj. -49.4646 iterations 1
Cbc0038I Pass  18: suminf.    0.16842 (1) obj. -53.7032 iterations 1
Cbc0038I Pass  19: suminf.    0.65195 (6) obj. -49.4646 iterations 6
Cbc0038I Pass  20: suminf.    0.52128 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  21: suminf.    0.73913 (3) obj. -49.4646 iterations 4
Cbc0038I Pass  22: suminf.    0.65536 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  23: suminf.    1.25841 (4) obj. -49.4646 iterations 4
Cbc0038I Pass  24: suminf.    0.92191 (3) obj. -49.4646 iterations 4
Cbc0038I Pass  25: suminf.    1.28862 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  26: suminf.    1.00786 (5) obj. -49.4646 iterations 2
Cbc0038I Pass  27: suminf.    0.90129 (3) obj. -49.4646 iterations 7
Cbc0038I Pass  28: suminf.    0.70331 (3) obj. -49.4646 iterations 2
Cbc0038I Pass  29: suminf.    0.09870 (3) obj. -49.4646 iterations 6
Cbc0038I Pass  30: suminf.    0.09870 (3) obj. -49.4646 iterations 0
Cbc0038I Pass  31: suminf.    1.32574 (4) obj. -49.4646 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -47.005 to -48.5299 (0.02 seconds)
Cbc0038I Round again with cutoff of -53.8918
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.14680 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  32: suminf.    0.93442 (2) obj. -53.8918 iterations 4
Cbc0038I Pass  33: suminf.    0.93442 (2) obj. -53.8918 iterations 0
Cbc0038I Pass  34: suminf.    0.29389 (2) obj. -53.8918 iterations 2
Cbc0038I Pass  35: suminf.    1.29099 (4) obj. -53.8918 iterations 11
Cbc0038I Pass  36: suminf.    0.24660 (2) obj. -53.8918 iterations 8
Cbc0038I Pass  37: suminf.    0.63740 (2) obj. -53.8918 iterations 4
Cbc0038I Pass  38: suminf.    0.65090 (3) obj. -53.8918 iterations 3
Cbc0038I Pass  39: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  40: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  41: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  42: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  43: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  44: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I Pass  45: suminf.    0.88413 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  46: suminf.    0.65090 (3) obj. -53.8918 iterations 6
Cbc0038I Pass  47: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  48: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  49: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  50: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  51: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  52: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I Pass  53: suminf.    0.88413 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  54: suminf.    0.65090 (3) obj. -53.8918 iterations 6
Cbc0038I Pass  55: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  56: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  57: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  58: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  59: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  60: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.5299 - took 0.05 seconds
Cbc0012I Integer solution of -48.529858 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 42 rows 25 columns, reduced to 25 rows 15 columns
Cbc0031I 10 added rows had average density of 19.5
Cbc0013I At root node, 10 cuts changed objective from -71.600286 to -61.165161 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 691 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 408 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -50.766998 found by rounding after 1328 iterations and 1 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -50.766998, took 1684 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 74 times (511 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 49 (-14) columns and 380 (-269) elements
Clp1000I sum of infeasibilities 1.87116e-06 - average 4.25264e-08, 33 fixed columns
Coin0506I Presolve 12 (-32) rows, 15 (-34) columns and 49 (-331) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 1.7957594 - largest nonzero change 0 ( 0%) - largest zero change 2.7557507e-05
Clp0000I Optimal - objective value 48.084489
Clp0000I Optimal - objective value 48.084489
Coin0511I After Postsolve, objective 48.084489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6162165 - largest nonzero change 2.639724e-05 ( 0.0019019041%) - largest zero change 2.7521297e-05
Clp0000I Optimal - objective value 86.832885
Clp0000I Optimal - objective value 86.832885
Clp0000I Optimal - objective value 86.832885
Coin0511I After Postsolve, objective 86.832885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.8328851 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 387 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.586%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.05142
Cbc0038I Pass   1: suminf.    1.33855 (10) obj. -40.4013 iterations 10
Cbc0038I Pass   2: suminf.    1.33855 (10) obj. -40.4013 iterations 1
Cbc0038I Solution found of -30.1035
Cbc0038I Rounding solution of -36.0132 is better than previous of -30.1035

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -39.4081
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.33855 (10) obj. -40.4013 iterations 0
Cbc0038I Pass   4: suminf.    1.33855 (10) obj. -40.4013 iterations 1
Cbc0038I Pass   5: suminf.    0.49430 (1) obj. -39.4081 iterations 19
Cbc0038I Pass   6: suminf.    0.37778 (1) obj. -41.5521 iterations 2
Cbc0038I Pass   7: suminf.    1.41912 (10) obj. -39.4081 iterations 14
Cbc0038I Pass   8: suminf.    1.41912 (10) obj. -39.4081 iterations 2
Cbc0038I Pass   9: suminf.    0.46293 (3) obj. -39.4081 iterations 15
Cbc0038I Pass  10: suminf.    0.40455 (3) obj. -39.4081 iterations 1
Cbc0038I Pass  11: suminf.    0.45821 (1) obj. -39.4081 iterations 3
Cbc0038I Pass  12: suminf.    0.40000 (1) obj. -42.1237 iterations 1
Cbc0038I Pass  13: suminf.    1.60450 (6) obj. -43.7431 iterations 13
Cbc0038I Pass  14: suminf.    1.33627 (5) obj. -39.4081 iterations 2
Cbc0038I Pass  15: suminf.    0.66542 (2) obj. -39.4081 iterations 5
Cbc0038I Pass  16: suminf.    0.64852 (3) obj. -39.4081 iterations 1
Cbc0038I Pass  17: suminf.    0.84454 (2) obj. -42.6395 iterations 1
Cbc0038I Pass  18: suminf.    1.21510 (5) obj. -39.4081 iterations 4
Cbc0038I Pass  19: suminf.    1.21510 (5) obj. -39.4081 iterations 0
Cbc0038I Pass  20: suminf.    1.20746 (3) obj. -39.4081 iterations 4
Cbc0038I Pass  21: suminf.    0.62689 (2) obj. -42.1389 iterations 1
Cbc0038I Pass  22: suminf.    0.62689 (2) obj. -42.1389 iterations 0
Cbc0038I Pass  23: suminf.    0.51869 (5) obj. -43.3321 iterations 13
Cbc0038I Pass  24: suminf.    0.51869 (5) obj. -43.3321 iterations 0
Cbc0038I Pass  25: suminf.    0.03095 (2) obj. -39.4081 iterations 7
Cbc0038I Pass  26: suminf.    0.82743 (3) obj. -44.9128 iterations 3
Cbc0038I Pass  27: suminf.    0.82743 (3) obj. -44.9128 iterations 0
Cbc0038I Pass  28: suminf.    0.95571 (3) obj. -39.4081 iterations 5
Cbc0038I Pass  29: suminf.    0.95571 (3) obj. -39.4081 iterations 0
Cbc0038I Pass  30: suminf.    0.54934 (2) obj. -39.4081 iterations 1
Cbc0038I Pass  31: suminf.    0.08889 (1) obj. -45.6087 iterations 2
Cbc0038I Pass  32: suminf.    1.71273 (10) obj. -39.4081 iterations 19
Cbc0038I Rounding solution of -48.5299 is better than previous of -36.0132

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 28 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -48.5299 to -50.767 (0.06 seconds)
Cbc0038I Round again with cutoff of -54.606
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.90399 (17) obj. -54.606 iterations 4
Cbc0038I Pass  33: suminf.    1.04127 (6) obj. -54.606 iterations 25
Cbc0038I Pass  34: suminf.    0.91986 (3) obj. -54.606 iterations 3
Cbc0038I Pass  35: suminf.    1.21806 (3) obj. -54.606 iterations 1
Cbc0038I Pass  36: suminf.    1.02821 (3) obj. -54.606 iterations 1
Cbc0038I Pass  37: suminf.    1.95086 (6) obj. -54.606 iterations 4
Cbc0038I Pass  38: suminf.    1.47442 (5) obj. -54.606 iterations 2
Cbc0038I Pass  39: suminf.    1.39933 (4) obj. -54.606 iterations 6
Cbc0038I Pass  40: suminf.    1.15610 (3) obj. -54.606 iterations 2
Cbc0038I Pass  41: suminf.    0.91986 (3) obj. -54.606 iterations 3
Cbc0038I Pass  42: suminf.    1.21806 (3) obj. -54.606 iterations 1
Cbc0038I Pass  43: suminf.    1.02821 (3) obj. -54.606 iterations 1
Cbc0038I Pass  44: suminf.    1.04127 (6) obj. -54.606 iterations 3
Cbc0038I Pass  45: suminf.    1.91069 (8) obj. -54.606 iterations 8
Cbc0038I Pass  46: suminf.    1.91069 (8) obj. -54.606 iterations 1
Cbc0038I Pass  47: suminf.    1.27828 (4) obj. -54.606 iterations 9
Cbc0038I Pass  48: suminf.    1.14064 (3) obj. -54.8598 iterations 3
Cbc0038I Pass  49: suminf.    0.48019 (2) obj. -54.606 iterations 3
Cbc0038I Pass  50: suminf.    0.48019 (2) obj. -54.606 iterations 0
Cbc0038I Pass  51: suminf.    0.59849 (2) obj. -54.606 iterations 1
Cbc0038I Pass  52: suminf.    2.08071 (10) obj. -54.606 iterations 12
Cbc0038I Pass  53: suminf.    1.73452 (8) obj. -54.606 iterations 6
Cbc0038I Pass  54: suminf.    2.34286 (6) obj. -54.606 iterations 10
Cbc0038I Pass  55: suminf.    1.23427 (4) obj. -54.606 iterations 2
Cbc0038I Pass  56: suminf.    0.86340 (3) obj. -54.606 iterations 6
Cbc0038I Pass  57: suminf.    0.85905 (4) obj. -54.606 iterations 1
Cbc0038I Pass  58: suminf.    1.69027 (5) obj. -54.606 iterations 1
Cbc0038I Pass  59: suminf.    0.96187 (3) obj. -54.606 iterations 2
Cbc0038I Pass  60: suminf.    3.58850 (11) obj. -54.606 iterations 6
Cbc0038I Pass  61: suminf.    2.64181 (7) obj. -54.606 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 10 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -50.767 - took 0.05 seconds
Cbc0012I Integer solution of -50.766998 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 24 rows 30 columns
Cbc0031I 25 added rows had average density of 14.36
Cbc0013I At root node, 25 cuts changed objective from -69.961518 to -56.594449 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1929 row cuts average 2.4 elements, 4 column cuts (4 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 771 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 102 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 170 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 184 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 319 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 340 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.707 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -50.766998 best solution, best possible -56.594449 (1.51 seconds)
Cbc0001I Search completed - best objective -50.766998, took 2614 iterations and 18 nodes (1.64 seconds)
Cbc0032I Strong branching done 288 times (2727 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 6, 37 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.65

