Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 4.45923e-05 - average 4.90025e-07, 1 fixed columns
Coin0506I Presolve 89 (-2) rows, 50 (-1) columns and 270 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 34.824885
Clp0000I Optimal - objective value 34.824885
Coin0511I After Postsolve, objective 34.824885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.824885
Clp0000I Optimal - objective value 34.824885
Clp0000I Optimal - objective value 34.824885
Coin0511I After Postsolve, objective 34.824885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.82488462 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.84443
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.9327 iterations 44
Cbc0038I Solution found of 3.9327
Cbc0038I Relaxing continuous gives 3.9327
Cbc0038I Rounding solution of 1.33688 is better than previous of 3.9327

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 1.33688 to -6.47378 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.30898
Cbc0038I Pass   2: suminf.    1.77101 (10) obj. -9.30898 iterations 17
Cbc0038I Pass   3: suminf.    1.54658 (5) obj. -9.30898 iterations 16
Cbc0038I Pass   4: suminf.    1.54658 (5) obj. -9.30898 iterations 1
Cbc0038I Pass   5: suminf.    2.53158 (7) obj. -9.30898 iterations 7
Cbc0038I Pass   6: suminf.    1.57965 (6) obj. -9.30898 iterations 6
Cbc0038I Pass   7: suminf.    3.18316 (15) obj. -9.30898 iterations 18
Cbc0038I Pass   8: suminf.    2.25194 (6) obj. -9.30898 iterations 7
Cbc0038I Pass   9: suminf.    2.20962 (7) obj. -9.30898 iterations 11
Cbc0038I Pass  10: suminf.    2.03157 (6) obj. -9.30898 iterations 16
Cbc0038I Pass  11: suminf.    1.58852 (5) obj. -9.30898 iterations 7
Cbc0038I Pass  12: suminf.    2.33965 (7) obj. -9.30898 iterations 9
Cbc0038I Pass  13: suminf.    1.55434 (5) obj. -9.30898 iterations 6
Cbc0038I Pass  14: suminf.    1.20972 (4) obj. -9.30898 iterations 1
Cbc0038I Pass  15: suminf.    1.63122 (5) obj. -9.30898 iterations 5
Cbc0038I Pass  16: suminf.    1.24085 (5) obj. -9.30898 iterations 6
Cbc0038I Pass  17: suminf.    1.22146 (4) obj. -9.30898 iterations 1
Cbc0038I Pass  18: suminf.    1.30969 (5) obj. -9.30898 iterations 7
Cbc0038I Pass  19: suminf.    1.21264 (4) obj. -9.30898 iterations 4
Cbc0038I Pass  20: suminf.    1.12317 (5) obj. -9.30898 iterations 4
Cbc0038I Pass  21: suminf.    1.10011 (4) obj. -9.30898 iterations 1
Cbc0038I Pass  22: suminf.    2.48473 (8) obj. -9.30898 iterations 13
Cbc0038I Pass  23: suminf.    1.09839 (5) obj. -9.30898 iterations 4
Cbc0038I Pass  24: suminf.    1.09839 (5) obj. -9.30898 iterations 0
Cbc0038I Pass  25: suminf.    2.50762 (7) obj. -9.30898 iterations 14
Cbc0038I Pass  26: suminf.    2.25863 (6) obj. -9.30898 iterations 7
Cbc0038I Pass  27: suminf.    1.72772 (9) obj. -9.30898 iterations 6
Cbc0038I Pass  28: suminf.    1.72772 (9) obj. -9.30898 iterations 0
Cbc0038I Pass  29: suminf.    1.93176 (7) obj. -9.30898 iterations 7
Cbc0038I Pass  30: suminf.    1.92020 (7) obj. -9.30898 iterations 4
Cbc0038I Pass  31: suminf.    2.10395 (7) obj. -9.30898 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -6.47378 - took 0.08 seconds
Cbc0012I Integer solution of -6.473779 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 32 added rows had average density of 30.65625
Cbc0013I At root node, 32 cuts changed objective from -34.824885 to -25.913106 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11415 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1851 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.473779 best solution, best possible -25.913106 (0.67 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 4 rows 6 columns
Cbc0001I Search completed - best objective -6.473779, took 9572 iterations and 74 nodes (0.87 seconds)
Cbc0032I Strong branching done 792 times (12335 iterations), fathomed 10 nodes and fixed 46 variables
Cbc0035I Maximum depth 17, 98 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-30) rows, 83 (-19) columns and 1083 (-495) elements
Clp1000I sum of infeasibilities 1.18678e-07 - average 1.60376e-09, 12 fixed columns
Coin0506I Presolve 61 (-13) rows, 71 (-12) columns and 821 (-262) elements
Clp0006I 0  Obj 34.738887 Dual inf 1.6087315 (71)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 4.9589754 - largest nonzero change 2.2445418e-05 ( 0.0013540233%) - largest zero change 2.7755609e-05
Clp0000I Optimal - objective value 43.865456
Clp0000I Optimal - objective value 43.865456
Coin0511I After Postsolve, objective 43.865456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 43.865456
Clp0000I Optimal - objective value 43.865456
Clp0000I Optimal - objective value 43.865456
Clp0000I Optimal - objective value 43.865456
Coin0511I After Postsolve, objective 43.865456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.8654559 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 75 rows, 84 columns (84 integer (84 of which binary)) and 1088 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.037%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.6367
Cbc0038I Pass   1: suminf.    3.18823 (24) obj. -34.9835 iterations 13
Cbc0038I Pass   2: suminf.    3.18823 (24) obj. -34.9835 iterations 1
Cbc0038I Pass   3: suminf.    0.73129 (8) obj. -8.91432 iterations 16
Cbc0038I Solution found of 1.97019
Cbc0038I Rounding solution of 1.283 is better than previous of 1.97019

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2.6824
Cbc0038I Pass   4: suminf.    3.18823 (24) obj. -34.9835 iterations 0
Cbc0038I Pass   5: suminf.    3.18823 (24) obj. -34.9835 iterations 1
Cbc0038I Pass   6: suminf.    0.62415 (7) obj. -7.12861 iterations 17
Cbc0038I Pass   7: suminf.    0.26849 (2) obj. -2.6824 iterations 19
Cbc0038I Pass   8: suminf.    0.17778 (1) obj. -2.96314 iterations 4
Cbc0038I Pass   9: suminf.    1.22305 (8) obj. -5.20136 iterations 15
Cbc0038I Pass  10: suminf.    1.22305 (8) obj. -5.20136 iterations 3
Cbc0038I Pass  11: suminf.    1.15848 (5) obj. -2.6824 iterations 11
Cbc0038I Pass  12: suminf.    1.04288 (5) obj. -3.14223 iterations 2
Cbc0038I Pass  13: suminf.    1.19615 (5) obj. -2.6824 iterations 4
Cbc0038I Pass  14: suminf.    2.15012 (12) obj. -2.6824 iterations 18
Cbc0038I Pass  15: suminf.    1.69807 (11) obj. -2.6824 iterations 4
Cbc0038I Pass  16: suminf.    1.69027 (9) obj. -2.6824 iterations 16
Cbc0038I Pass  17: suminf.    1.50009 (7) obj. -2.6824 iterations 1
Cbc0038I Pass  18: suminf.    0.80198 (6) obj. -2.6824 iterations 1
Cbc0038I Pass  19: suminf.    1.10916 (5) obj. -2.6824 iterations 18
Cbc0038I Pass  20: suminf.    0.83554 (6) obj. -2.6824 iterations 5
Cbc0038I Pass  21: suminf.    1.21847 (5) obj. -2.6824 iterations 14
Cbc0038I Pass  22: suminf.    0.54853 (3) obj. -2.74181 iterations 10
Cbc0038I Pass  23: suminf.    0.56833 (3) obj. -2.6824 iterations 8
Cbc0038I Pass  24: suminf.    2.52818 (21) obj. -2.6824 iterations 35
Cbc0038I Pass  25: suminf.    1.75715 (12) obj. -2.6824 iterations 17
Cbc0038I Pass  26: suminf.    1.34486 (9) obj. -2.6824 iterations 10
Cbc0038I Pass  27: suminf.    1.12310 (7) obj. -2.6824 iterations 5
Cbc0038I Pass  28: suminf.    1.42017 (6) obj. -2.6824 iterations 6
Cbc0038I Pass  29: suminf.    1.28730 (6) obj. -3.08099 iterations 1
Cbc0038I Pass  30: suminf.    1.84925 (7) obj. -2.6824 iterations 8
Cbc0038I Pass  31: suminf.    1.84925 (7) obj. -2.6824 iterations 1
Cbc0038I Pass  32: suminf.    1.29193 (6) obj. -2.6824 iterations 9
Cbc0038I Pass  33: suminf.    0.79145 (6) obj. -2.6824 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 84 columns, reduced to 33 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 1.97019 to -6.47378 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.8531
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.18823 (24) obj. -34.9835 iterations 0
Cbc0038I Pass  34: suminf.    3.18823 (24) obj. -34.9835 iterations 1
Cbc0038I Pass  35: suminf.    0.97873 (9) obj. -12.8531 iterations 19
Cbc0038I Pass  36: suminf.    0.97873 (9) obj. -12.8531 iterations 0
Cbc0038I Pass  37: suminf.    1.21632 (5) obj. -12.8531 iterations 21
Cbc0038I Pass  38: suminf.    1.15797 (5) obj. -12.8531 iterations 4
Cbc0038I Pass  39: suminf.    1.39863 (11) obj. -12.8531 iterations 19
Cbc0038I Pass  40: suminf.    1.33600 (9) obj. -12.8531 iterations 7
Cbc0038I Pass  41: suminf.    1.47902 (7) obj. -12.8531 iterations 12
Cbc0038I Pass  42: suminf.    1.45184 (9) obj. -12.8531 iterations 5
Cbc0038I Pass  43: suminf.    1.54333 (8) obj. -12.8531 iterations 10
Cbc0038I Pass  44: suminf.    1.21409 (8) obj. -13.8076 iterations 4
Cbc0038I Pass  45: suminf.    1.54226 (7) obj. -12.8531 iterations 14
Cbc0038I Pass  46: suminf.    2.05359 (11) obj. -12.8531 iterations 21
Cbc0038I Pass  47: suminf.    1.74624 (10) obj. -12.8531 iterations 7
Cbc0038I Pass  48: suminf.    1.20676 (7) obj. -12.8531 iterations 19
Cbc0038I Pass  49: suminf.    1.15846 (8) obj. -12.8531 iterations 3
Cbc0038I Pass  50: suminf.    1.76757 (8) obj. -12.8531 iterations 9
Cbc0038I Pass  51: suminf.    1.76349 (8) obj. -12.8531 iterations 1
Cbc0038I Pass  52: suminf.    1.20676 (7) obj. -12.8531 iterations 12
Cbc0038I Pass  53: suminf.    1.80050 (13) obj. -12.8531 iterations 29
Cbc0038I Pass  54: suminf.    1.52436 (10) obj. -12.8531 iterations 11
Cbc0038I Pass  55: suminf.    1.35146 (8) obj. -12.8531 iterations 17
Cbc0038I Pass  56: suminf.    1.35146 (8) obj. -12.8531 iterations 5
Cbc0038I Pass  57: suminf.    1.36445 (8) obj. -12.8531 iterations 9
Cbc0038I Pass  58: suminf.    1.36469 (12) obj. -12.8531 iterations 8
Cbc0038I Pass  59: suminf.    1.68878 (9) obj. -12.8531 iterations 10
Cbc0038I Pass  60: suminf.    1.64071 (10) obj. -12.8531 iterations 3
Cbc0038I Pass  61: suminf.    1.61086 (9) obj. -12.8531 iterations 5
Cbc0038I Pass  62: suminf.    1.56325 (11) obj. -12.8531 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -6.47378 - took 0.06 seconds
Cbc0012I Integer solution of -6.473779 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 75 rows 84 columns, reduced to 15 rows 18 columns
Cbc0031I 54 added rows had average density of 25.018519
Cbc0013I At root node, 54 cuts changed objective from -38.370116 to -12.190589 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14295 row cuts average 7.2 elements, 2 column cuts (2 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2182 row cuts average 79.3 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 114 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 887 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 306 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 123 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.650 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.473779 best solution, best possible -12.190589 (2.33 seconds)
Cbc0010I After 8 nodes, 7 on tree, -6.473779 best solution, best possible -11.816257 (3.04 seconds)
Cbc0001I Search completed - best objective -6.473779, took 7632 iterations and 38 nodes (3.71 seconds)
Cbc0032I Strong branching done 498 times (9820 iterations), fathomed 6 nodes and fixed 6 variables
Cbc0035I Maximum depth 16, 25 variables fixed on reduced cost
Total time (CPU seconds):       2.57   (Wallclock seconds):       3.72

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 4.45923e-05 - average 4.90025e-07, 1 fixed columns
Coin0506I Presolve 89 (-2) rows, 50 (-1) columns and 270 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 34.824885
Clp0000I Optimal - objective value 34.824885
Coin0511I After Postsolve, objective 34.824885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.824885
Clp0000I Optimal - objective value 34.824885
Clp0000I Optimal - objective value 34.824885
Coin0511I After Postsolve, objective 34.824885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.82488462 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.84443
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.9327 iterations 44
Cbc0038I Solution found of 3.9327
Cbc0038I Relaxing continuous gives 3.9327
Cbc0038I Rounding solution of 1.33688 is better than previous of 3.9327

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 1.33688 to -6.47378 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.30898
Cbc0038I Pass   2: suminf.    1.77101 (10) obj. -9.30898 iterations 17
Cbc0038I Pass   3: suminf.    1.54658 (5) obj. -9.30898 iterations 16
Cbc0038I Pass   4: suminf.    1.54658 (5) obj. -9.30898 iterations 1
Cbc0038I Pass   5: suminf.    2.53158 (7) obj. -9.30898 iterations 7
Cbc0038I Pass   6: suminf.    1.57965 (6) obj. -9.30898 iterations 6
Cbc0038I Pass   7: suminf.    3.18316 (15) obj. -9.30898 iterations 18
Cbc0038I Pass   8: suminf.    2.25194 (6) obj. -9.30898 iterations 7
Cbc0038I Pass   9: suminf.    2.20962 (7) obj. -9.30898 iterations 11
Cbc0038I Pass  10: suminf.    2.03157 (6) obj. -9.30898 iterations 16
Cbc0038I Pass  11: suminf.    1.58852 (5) obj. -9.30898 iterations 7
Cbc0038I Pass  12: suminf.    2.33965 (7) obj. -9.30898 iterations 9
Cbc0038I Pass  13: suminf.    1.55434 (5) obj. -9.30898 iterations 6
Cbc0038I Pass  14: suminf.    1.20972 (4) obj. -9.30898 iterations 1
Cbc0038I Pass  15: suminf.    1.63122 (5) obj. -9.30898 iterations 5
Cbc0038I Pass  16: suminf.    1.24085 (5) obj. -9.30898 iterations 6
Cbc0038I Pass  17: suminf.    1.22146 (4) obj. -9.30898 iterations 1
Cbc0038I Pass  18: suminf.    1.30969 (5) obj. -9.30898 iterations 7
Cbc0038I Pass  19: suminf.    1.21264 (4) obj. -9.30898 iterations 4
Cbc0038I Pass  20: suminf.    1.12317 (5) obj. -9.30898 iterations 4
Cbc0038I Pass  21: suminf.    1.10011 (4) obj. -9.30898 iterations 1
Cbc0038I Pass  22: suminf.    2.48473 (8) obj. -9.30898 iterations 13
Cbc0038I Pass  23: suminf.    1.09839 (5) obj. -9.30898 iterations 4
Cbc0038I Pass  24: suminf.    1.09839 (5) obj. -9.30898 iterations 0
Cbc0038I Pass  25: suminf.    2.50762 (7) obj. -9.30898 iterations 14
Cbc0038I Pass  26: suminf.    2.25863 (6) obj. -9.30898 iterations 7
Cbc0038I Pass  27: suminf.    1.72772 (9) obj. -9.30898 iterations 6
Cbc0038I Pass  28: suminf.    1.72772 (9) obj. -9.30898 iterations 0
Cbc0038I Pass  29: suminf.    1.93176 (7) obj. -9.30898 iterations 7
Cbc0038I Pass  30: suminf.    1.92020 (7) obj. -9.30898 iterations 4
Cbc0038I Pass  31: suminf.    2.10395 (7) obj. -9.30898 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -6.47378 - took 0.08 seconds
Cbc0012I Integer solution of -6.473779 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 32 added rows had average density of 30.65625
Cbc0013I At root node, 32 cuts changed objective from -34.824885 to -25.913106 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11415 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1851 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0010I After 1 nodes, 2 on tree, -6.473779 best solution, best possible -25.913106 (0.69 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 4 rows 6 columns
Cbc0001I Search completed - best objective -6.473779, took 9572 iterations and 74 nodes (0.89 seconds)
Cbc0032I Strong branching done 792 times (12335 iterations), fathomed 10 nodes and fixed 46 variables
Cbc0035I Maximum depth 17, 98 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-31) rows, 83 (-20) columns and 1083 (-496) elements
Clp1000I sum of infeasibilities 1.18678e-07 - average 1.60376e-09, 12 fixed columns
Coin0506I Presolve 61 (-13) rows, 71 (-12) columns and 821 (-262) elements
Clp0006I 0  Obj 34.738887 Dual inf 1.6087315 (71)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 4.9589754 - largest nonzero change 2.2445418e-05 ( 0.0013540233%) - largest zero change 2.7755609e-05
Clp0000I Optimal - objective value 43.865456
Clp0000I Optimal - objective value 43.865456
Coin0511I After Postsolve, objective 43.865456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 43.865456
Clp0000I Optimal - objective value 43.865456
Clp0000I Optimal - objective value 43.865456
Clp0000I Optimal - objective value 43.865456
Coin0511I After Postsolve, objective 43.865456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.8654559 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 75 rows, 84 columns (84 integer (84 of which binary)) and 1088 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.037%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.6367
Cbc0038I Pass   1: suminf.    3.18823 (24) obj. -34.9835 iterations 13
Cbc0038I Pass   2: suminf.    3.18823 (24) obj. -34.9835 iterations 1
Cbc0038I Pass   3: suminf.    0.73129 (8) obj. -8.91432 iterations 16
Cbc0038I Solution found of 1.97019
Cbc0038I Rounding solution of 1.283 is better than previous of 1.97019

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2.6824
Cbc0038I Pass   4: suminf.    3.18823 (24) obj. -34.9835 iterations 0
Cbc0038I Pass   5: suminf.    3.18823 (24) obj. -34.9835 iterations 1
Cbc0038I Pass   6: suminf.    0.62415 (7) obj. -7.12861 iterations 17
Cbc0038I Pass   7: suminf.    0.26849 (2) obj. -2.6824 iterations 19
Cbc0038I Pass   8: suminf.    0.17778 (1) obj. -2.96314 iterations 4
Cbc0038I Pass   9: suminf.    1.22305 (8) obj. -5.20136 iterations 15
Cbc0038I Pass  10: suminf.    1.22305 (8) obj. -5.20136 iterations 3
Cbc0038I Pass  11: suminf.    1.15848 (5) obj. -2.6824 iterations 11
Cbc0038I Pass  12: suminf.    1.04288 (5) obj. -3.14223 iterations 2
Cbc0038I Pass  13: suminf.    1.19615 (5) obj. -2.6824 iterations 4
Cbc0038I Pass  14: suminf.    2.15012 (12) obj. -2.6824 iterations 18
Cbc0038I Pass  15: suminf.    1.69807 (11) obj. -2.6824 iterations 4
Cbc0038I Pass  16: suminf.    1.69027 (9) obj. -2.6824 iterations 16
Cbc0038I Pass  17: suminf.    1.50009 (7) obj. -2.6824 iterations 1
Cbc0038I Pass  18: suminf.    0.80198 (6) obj. -2.6824 iterations 1
Cbc0038I Pass  19: suminf.    1.10916 (5) obj. -2.6824 iterations 18
Cbc0038I Pass  20: suminf.    0.83554 (6) obj. -2.6824 iterations 5
Cbc0038I Pass  21: suminf.    1.21847 (5) obj. -2.6824 iterations 14
Cbc0038I Pass  22: suminf.    0.54853 (3) obj. -2.74181 iterations 10
Cbc0038I Pass  23: suminf.    0.56833 (3) obj. -2.6824 iterations 8
Cbc0038I Pass  24: suminf.    2.52818 (21) obj. -2.6824 iterations 35
Cbc0038I Pass  25: suminf.    1.75715 (12) obj. -2.6824 iterations 17
Cbc0038I Pass  26: suminf.    1.34486 (9) obj. -2.6824 iterations 10
Cbc0038I Pass  27: suminf.    1.12310 (7) obj. -2.6824 iterations 5
Cbc0038I Pass  28: suminf.    1.42017 (6) obj. -2.6824 iterations 6
Cbc0038I Pass  29: suminf.    1.28730 (6) obj. -3.08099 iterations 1
Cbc0038I Pass  30: suminf.    1.84925 (7) obj. -2.6824 iterations 8
Cbc0038I Pass  31: suminf.    1.84925 (7) obj. -2.6824 iterations 1
Cbc0038I Pass  32: suminf.    1.29193 (6) obj. -2.6824 iterations 9
Cbc0038I Pass  33: suminf.    0.79145 (6) obj. -2.6824 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 84 columns, reduced to 33 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 1.97019 to -6.47378 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.8531
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.18823 (24) obj. -34.9835 iterations 0
Cbc0038I Pass  34: suminf.    3.18823 (24) obj. -34.9835 iterations 1
Cbc0038I Pass  35: suminf.    0.97873 (9) obj. -12.8531 iterations 19
Cbc0038I Pass  36: suminf.    0.97873 (9) obj. -12.8531 iterations 0
Cbc0038I Pass  37: suminf.    1.21632 (5) obj. -12.8531 iterations 21
Cbc0038I Pass  38: suminf.    1.15797 (5) obj. -12.8531 iterations 4
Cbc0038I Pass  39: suminf.    1.39863 (11) obj. -12.8531 iterations 19
Cbc0038I Pass  40: suminf.    1.33600 (9) obj. -12.8531 iterations 7
Cbc0038I Pass  41: suminf.    1.47902 (7) obj. -12.8531 iterations 12
Cbc0038I Pass  42: suminf.    1.45184 (9) obj. -12.8531 iterations 5
Cbc0038I Pass  43: suminf.    1.54333 (8) obj. -12.8531 iterations 10
Cbc0038I Pass  44: suminf.    1.21409 (8) obj. -13.8076 iterations 4
Cbc0038I Pass  45: suminf.    1.54226 (7) obj. -12.8531 iterations 14
Cbc0038I Pass  46: suminf.    2.05359 (11) obj. -12.8531 iterations 21
Cbc0038I Pass  47: suminf.    1.74624 (10) obj. -12.8531 iterations 7
Cbc0038I Pass  48: suminf.    1.20676 (7) obj. -12.8531 iterations 19
Cbc0038I Pass  49: suminf.    1.15846 (8) obj. -12.8531 iterations 3
Cbc0038I Pass  50: suminf.    1.76757 (8) obj. -12.8531 iterations 9
Cbc0038I Pass  51: suminf.    1.76349 (8) obj. -12.8531 iterations 1
Cbc0038I Pass  52: suminf.    1.20676 (7) obj. -12.8531 iterations 12
Cbc0038I Pass  53: suminf.    1.80050 (13) obj. -12.8531 iterations 29
Cbc0038I Pass  54: suminf.    1.52436 (10) obj. -12.8531 iterations 11
Cbc0038I Pass  55: suminf.    1.35146 (8) obj. -12.8531 iterations 17
Cbc0038I Pass  56: suminf.    1.35146 (8) obj. -12.8531 iterations 5
Cbc0038I Pass  57: suminf.    1.36445 (8) obj. -12.8531 iterations 9
Cbc0038I Pass  58: suminf.    1.36469 (12) obj. -12.8531 iterations 8
Cbc0038I Pass  59: suminf.    1.68878 (9) obj. -12.8531 iterations 10
Cbc0038I Pass  60: suminf.    1.64071 (10) obj. -12.8531 iterations 3
Cbc0038I Pass  61: suminf.    1.61086 (9) obj. -12.8531 iterations 5
Cbc0038I Pass  62: suminf.    1.56325 (11) obj. -12.8531 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -6.47378 - took 0.06 seconds
Cbc0012I Integer solution of -6.473779 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 75 rows 84 columns, reduced to 15 rows 18 columns
Cbc0031I 54 added rows had average density of 25.018519
Cbc0013I At root node, 54 cuts changed objective from -38.370116 to -12.190589 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14295 row cuts average 7.2 elements, 2 column cuts (2 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2182 row cuts average 79.3 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 114 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 887 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 306 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 123 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.689 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.473779 best solution, best possible -12.190589 (2.48 seconds)
Cbc0010I After 7 nodes, 6 on tree, -6.473779 best solution, best possible -11.816257 (3.21 seconds)
Cbc0010I After 29 nodes, 8 on tree, -6.473779 best solution, best possible -11.816257 (3.93 seconds)
Cbc0001I Search completed - best objective -6.473779, took 7632 iterations and 38 nodes (4.03 seconds)
Cbc0032I Strong branching done 498 times (9820 iterations), fathomed 6 nodes and fixed 6 variables
Cbc0035I Maximum depth 16, 25 variables fixed on reduced cost
Total time (CPU seconds):       2.73   (Wallclock seconds):       4.05

