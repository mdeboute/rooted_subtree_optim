Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-7) rows, 23 (-2) columns and 123 (-12) elements
Clp1000I sum of infeasibilities 0.000211828 - average 5.04353e-06, 15 fixed columns
Coin0506I Presolve 10 (-32) rows, 8 (-15) columns and 30 (-93) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 7536.6398
Clp0000I Optimal - objective value 7536.6398
Coin0511I After Postsolve, objective 7536.6398, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0190019 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 7536.6398
Clp0000I Optimal - objective value 7536.6398
Clp0000I Optimal - objective value 7536.6398
Coin0511I After Postsolve, objective 7536.6398, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7536.639816 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 23 columns (22 integer (22 of which binary)) and 123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.995%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.97165
Cbc0038I Solution found of -3212.31
Cbc0038I Relaxing continuous gives -3212.31
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 23 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -3212.31 to -3224.17 (0.00 seconds)
Cbc0038I Round again with cutoff of -3398.1
Cbc0038I Pass   1: suminf.    0.05014 (1) obj. -3398.1 iterations 8
Cbc0038I Pass   2: suminf.    0.42829 (1) obj. -4799.38 iterations 1
Cbc0038I Pass   3: suminf.    0.22707 (1) obj. -4196.86 iterations 6
Cbc0038I Pass   4: suminf.    0.01110 (1) obj. -3398.1 iterations 5
Cbc0038I Pass   5: suminf.    0.19566 (1) obj. -4107.79 iterations 1
Cbc0038I Pass   6: suminf.    0.03345 (1) obj. -3398.1 iterations 4
Cbc0038I Pass   7: suminf.    0.03345 (1) obj. -3398.1 iterations 1
Cbc0038I Pass   8: suminf.    0.28718 (1) obj. -4373.76 iterations 1
Cbc0038I Pass   9: suminf.    0.14418 (1) obj. -4072.36 iterations 2
Cbc0038I Solution found of -3517.92
Cbc0038I Relaxing continuous gives -3517.92
Cbc0038I Rounding solution of -3689.88 is better than previous of -3517.92

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3944.59
Cbc0038I Pass  10: suminf.    0.19762 (1) obj. -3944.59 iterations 0
Cbc0038I Pass  11: suminf.    0.42829 (1) obj. -4799.38 iterations 1
Cbc0038I Pass  12: suminf.    0.38561 (1) obj. -4682.05 iterations 4
Cbc0038I Pass  13: suminf.    0.17982 (1) obj. -3944.59 iterations 4
Cbc0038I Pass  14: suminf.    0.23951 (1) obj. -4174.14 iterations 1
Cbc0038I Pass  15: suminf.    0.25756 (1) obj. -4534.47 iterations 7
Cbc0038I Pass  16: suminf.    0.09837 (1) obj. -3944.59 iterations 3
Cbc0038I Pass  17: suminf.    0.25756 (1) obj. -4534.47 iterations 2
Cbc0038I Pass  18: suminf.    1.75679 (4) obj. -3944.59 iterations 5
Cbc0038I Pass  19: suminf.    0.08732 (1) obj. -3944.59 iterations 5
Cbc0038I Pass  20: suminf.    0.22829 (1) obj. -4466.98 iterations 2
Cbc0038I Pass  21: suminf.    0.62071 (5) obj. -3944.59 iterations 5
Cbc0038I Pass  22: suminf.    0.08525 (1) obj. -3944.59 iterations 14
Cbc0038I Pass  23: suminf.    0.08525 (1) obj. -3944.59 iterations 2
Cbc0038I Pass  24: suminf.    0.09414 (1) obj. -3978.77 iterations 1
Cbc0038I Pass  25: suminf.    1.92679 (5) obj. -3944.59 iterations 7
Cbc0038I Pass  26: suminf.    1.92679 (5) obj. -3944.59 iterations 1
Cbc0038I Pass  27: suminf.    0.25187 (2) obj. -4520.72 iterations 4
Cbc0038I Pass  28: suminf.    0.09703 (1) obj. -3944.59 iterations 2
Cbc0038I Pass  29: suminf.    0.11797 (1) obj. -4025.1 iterations 1
Cbc0038I Pass  30: suminf.    0.39618 (3) obj. -3944.59 iterations 10
Cbc0038I Pass  31: suminf.    0.13995 (2) obj. -3944.59 iterations 2
Cbc0038I Pass  32: suminf.    0.18561 (1) obj. -4288.24 iterations 2
Cbc0038I Pass  33: suminf.    0.08950 (1) obj. -3944.59 iterations 2
Cbc0038I Pass  34: suminf.    0.20623 (1) obj. -4393.47 iterations 1
Cbc0038I Pass  35: suminf.    0.96152 (5) obj. -3944.59 iterations 11
Cbc0038I Pass  36: suminf.    0.75605 (3) obj. -3944.59 iterations 9
Cbc0038I Pass  37: suminf.    0.25080 (2) obj. -3944.59 iterations 2
Cbc0038I Pass  38: suminf.    0.13683 (1) obj. -4064.39 iterations 2
Cbc0038I Pass  39: suminf.    0.10070 (1) obj. -3944.59 iterations 2
Cbc0038I Rounding solution of -3702.72 is better than previous of -3689.88

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 23 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -3702.72 to -3867.17 (0.01 seconds)
Cbc0038I Round again with cutoff of -4250.24
Cbc0038I Pass  39: suminf.    0.28010 (1) obj. -4250.24 iterations 0
Cbc0038I Pass  40: suminf.    0.42829 (1) obj. -4799.38 iterations 1
Cbc0038I Pass  41: suminf.    1.55122 (4) obj. -4250.24 iterations 8
Cbc0038I Pass  42: suminf.    0.45268 (1) obj. -4668.57 iterations 6
Cbc0038I Pass  43: suminf.    0.33979 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  44: suminf.    0.59269 (3) obj. -4250.24 iterations 7
Cbc0038I Pass  45: suminf.    0.23701 (3) obj. -4250.24 iterations 4
Cbc0038I Pass  46: suminf.    0.21301 (1) obj. -4272.02 iterations 3
Cbc0038I Pass  47: suminf.    0.20734 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  48: suminf.    0.21301 (1) obj. -4272.02 iterations 1
Cbc0038I Pass  49: suminf.    0.23701 (3) obj. -4250.24 iterations 4
Cbc0038I Pass  50: suminf.    1.12032 (3) obj. -4250.24 iterations 10
Cbc0038I Pass  51: suminf.    0.74988 (2) obj. -4250.24 iterations 3
Cbc0038I Pass  52: suminf.    0.26783 (1) obj. -4250.24 iterations 2
Cbc0038I Pass  53: suminf.    0.32818 (1) obj. -4482.3 iterations 1
Cbc0038I Pass  54: suminf.    0.27849 (1) obj. -4250.24 iterations 2
Cbc0038I Pass  55: suminf.    0.36070 (1) obj. -4566.38 iterations 1
Cbc0038I Pass  56: suminf.    0.27849 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  57: suminf.    0.97277 (3) obj. -4250.24 iterations 2
Cbc0038I Pass  58: suminf.    0.24470 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  59: suminf.    0.32293 (1) obj. -4551.06 iterations 1
Cbc0038I Pass  60: suminf.    0.25366 (1) obj. -4405.56 iterations 6
Cbc0038I Pass  61: suminf.    0.21327 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  62: suminf.    0.25366 (1) obj. -4405.56 iterations 1
Cbc0038I Pass  63: suminf.    0.21327 (1) obj. -4250.24 iterations 2
Cbc0038I Pass  64: suminf.    0.18426 (2) obj. -4250.24 iterations 5
Cbc0038I Pass  65: suminf.    0.18426 (2) obj. -4250.24 iterations 1
Cbc0038I Pass  66: suminf.    0.25694 (2) obj. -4519.23 iterations 1
Cbc0038I Pass  67: suminf.    1.09371 (3) obj. -4250.24 iterations 5
Cbc0038I Pass  68: suminf.    0.25223 (1) obj. -4250.24 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3867.17 - took 0.02 seconds
Cbc0012I Integer solution of -3867.1689 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 42 rows 23 columns, reduced to 7 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 5.6
Cbc0013I At root node, 10 cuts changed objective from -4963.4291 to -3868.0477 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 107 row cuts average 6.0 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 31 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3867.168900000001, took 77 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-6) rows, 44 (-2) columns and 354 (-34) elements
Clp1000I sum of infeasibilities 6.97645e-07 - average 1.66106e-08, 35 fixed columns
Coin0506I Presolve 8 (-34) rows, 9 (-35) columns and 30 (-324) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 7404.3904
Clp0000I Optimal - objective value 7404.3904
Coin0511I After Postsolve, objective 7404.3904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0554035 - largest nonzero change 2.9526342e-05 ( 0.0025543869%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 7616.8576
Clp0000I Optimal - objective value 7616.8576
Clp0000I Optimal - objective value 7616.8576
Coin0511I After Postsolve, objective 7616.8576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7616.857567 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 44 columns (44 integer (44 of which binary)) and 365 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.427%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.79252
Cbc0038I Pass   1: suminf.    1.28856 (7) obj. -463.322 iterations 12
Cbc0038I Pass   2: suminf.    1.28856 (7) obj. -463.322 iterations 0
Cbc0038I Solution found of -430.343
Cbc0038I Rounding solution of -1230.55 is better than previous of -430.343

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 44 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -1230.55 to -3224.17 (0.02 seconds)
Cbc0038I Round again with cutoff of -3402.09
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    4.18541 (11) obj. -3402.09 iterations 1
Cbc0038I Pass   4: suminf.    0.31101 (1) obj. -4420.1 iterations 14
Cbc0038I Pass   5: suminf.    0.04627 (1) obj. -3402.09 iterations 1
Cbc0038I Pass   6: suminf.    1.90678 (5) obj. -3402.09 iterations 8
Cbc0038I Pass   7: suminf.    0.95784 (3) obj. -3402.09 iterations 3
Cbc0038I Pass   8: suminf.    0.39780 (1) obj. -4816.35 iterations 3
Cbc0038I Pass   9: suminf.    0.01615 (1) obj. -3402.09 iterations 1
Cbc0038I Pass  10: suminf.    3.19919 (9) obj. -3402.09 iterations 12
Cbc0038I Pass  11: suminf.    2.26922 (6) obj. -3402.09 iterations 5
Cbc0038I Pass  12: suminf.    0.82235 (2) obj. -3402.09 iterations 6
Cbc0038I Pass  13: suminf.    0.27585 (1) obj. -4573.29 iterations 3
Cbc0038I Solution found of -3551.08
Cbc0038I Rounding solution of -3807.36 is better than previous of -3551.08

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4046.55
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  14: suminf.    4.51957 (11) obj. -4046.55 iterations 0
Cbc0038I Pass  15: suminf.    0.31101 (1) obj. -4420.1 iterations 14
Cbc0038I Pass  16: suminf.    0.21387 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  17: suminf.    0.48224 (2) obj. -4046.55 iterations 4
Cbc0038I Pass  18: suminf.    0.15003 (1) obj. -4046.55 iterations 2
Cbc0038I Pass  19: suminf.    0.16802 (1) obj. -4115.71 iterations 1
Cbc0038I Pass  20: suminf.    2.51612 (10) obj. -4046.55 iterations 11
Cbc0038I Pass  21: suminf.    0.17111 (1) obj. -4046.55 iterations 11
Cbc0038I Pass  22: suminf.    0.34293 (1) obj. -4683.21 iterations 1
Cbc0038I Pass  23: suminf.    1.76592 (5) obj. -4046.55 iterations 15
Cbc0038I Pass  24: suminf.    0.27114 (1) obj. -4046.55 iterations 7
Cbc0038I Pass  25: suminf.    0.42304 (1) obj. -4630.65 iterations 1
Cbc0038I Pass  26: suminf.    4.16674 (11) obj. -4046.55 iterations 17
Cbc0038I Pass  27: suminf.    0.48279 (2) obj. -4046.55 iterations 9
Cbc0038I Pass  28: suminf.    0.14990 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  29: suminf.    0.25878 (1) obj. -4450.01 iterations 1
Cbc0038I Pass  30: suminf.    1.14479 (5) obj. -4046.55 iterations 11
Cbc0038I Pass  31: suminf.    0.58772 (2) obj. -4046.55 iterations 5
Cbc0038I Pass  32: suminf.    0.19049 (1) obj. -4162.09 iterations 2
Cbc0038I Pass  33: suminf.    0.15931 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  34: suminf.    0.67004 (2) obj. -4046.55 iterations 5
Cbc0038I Pass  35: suminf.    0.67004 (2) obj. -4046.55 iterations 2
Cbc0038I Pass  36: suminf.    0.22520 (1) obj. -4254.17 iterations 2
Cbc0038I Pass  37: suminf.    0.17121 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  38: suminf.    1.80765 (6) obj. -4046.55 iterations 12
Cbc0038I Pass  39: suminf.    0.52616 (2) obj. -4046.55 iterations 7
Cbc0038I Pass  40: suminf.    0.17913 (1) obj. -4150.97 iterations 2
Cbc0038I Pass  41: suminf.    0.15198 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  42: suminf.    1.38817 (4) obj. -4067.9 iterations 7
Cbc0038I Pass  43: suminf.    1.02499 (3) obj. -4046.55 iterations 4
Cbc0038I Rounding solution of -3867.17 is better than previous of -3807.36

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 44 columns, reduced to 21 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4333.58
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  43: suminf.    4.66840 (11) obj. -4333.58 iterations 0
Cbc0038I Pass  44: suminf.    0.31101 (1) obj. -4420.1 iterations 14
Cbc0038I Pass  45: suminf.    0.28851 (1) obj. -4333.58 iterations 1
Cbc0038I Pass  46: suminf.    1.37321 (4) obj. -4333.58 iterations 9
Cbc0038I Pass  47: suminf.    0.74525 (2) obj. -4333.58 iterations 6
Cbc0038I Pass  48: suminf.    0.46667 (1) obj. -4797.45 iterations 2
Cbc0038I Pass  49: suminf.    0.34603 (1) obj. -4333.58 iterations 1
Cbc0038I Pass  50: suminf.    1.42174 (5) obj. -4333.58 iterations 6
Cbc0038I Pass  51: suminf.    0.29398 (1) obj. -4333.58 iterations 5
Cbc0038I Pass  52: suminf.    0.38103 (1) obj. -4668.31 iterations 1
Cbc0038I Pass  53: suminf.    0.28333 (1) obj. -4333.58 iterations 6
Cbc0038I Pass  54: suminf.    0.28333 (1) obj. -4333.58 iterations 0
Cbc0038I Pass  55: suminf.    0.33333 (1) obj. -4525.87 iterations 1
Cbc0038I Pass  56: suminf.    1.02901 (4) obj. -4333.58 iterations 10
Cbc0038I Pass  57: suminf.    0.27831 (2) obj. -4333.58 iterations 3
Cbc0038I Pass  58: suminf.    0.36883 (1) obj. -4633.42 iterations 4
Cbc0038I Pass  59: suminf.    0.29086 (1) obj. -4333.58 iterations 1
Cbc0038I Pass  60: suminf.    1.51734 (4) obj. -4333.58 iterations 7
Cbc0038I Pass  61: suminf.    1.24328 (3) obj. -4333.58 iterations 3
Cbc0038I Pass  62: suminf.    0.28076 (1) obj. -4470.21 iterations 3
Cbc0038I Pass  63: suminf.    0.24523 (1) obj. -4333.58 iterations 1
Cbc0038I Pass  64: suminf.    2.56644 (12) obj. -4333.58 iterations 17
Cbc0038I Pass  65: suminf.    2.02845 (11) obj. -4333.58 iterations 3
Cbc0038I Pass  66: suminf.    0.41000 (1) obj. -4482.28 iterations 11
Cbc0038I Pass  67: suminf.    0.35643 (1) obj. -4333.58 iterations 2
Cbc0038I Pass  68: suminf.    0.45556 (1) obj. -4714.73 iterations 1
Cbc0038I Pass  69: suminf.    0.76521 (3) obj. -4333.58 iterations 8
Cbc0038I Pass  70: suminf.    0.28635 (2) obj. -4333.58 iterations 3
Cbc0038I Pass  71: suminf.    0.37051 (2) obj. -4645.08 iterations 1
Cbc0038I Pass  72: suminf.    1.56640 (6) obj. -4333.58 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 44 columns, reduced to 36 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3867.17 - took 0.02 seconds
Cbc0012I Integer solution of -3867.1689 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 42 rows 44 columns, reduced to 7 rows 11 columns
Cbc0031I 15 added rows had average density of 7.4666667
Cbc0013I At root node, 15 cuts changed objective from -5003.3137 to -3876.4941 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3896 row cuts average 3.5 elements, 13 column cuts (13 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 317 row cuts average 25.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.651 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3867.1689 best solution, best possible -3876.4927 (1.31 seconds)
Cbc0001I Search completed - best objective -3867.168900000001, took 1006 iterations and 4 nodes (1.37 seconds)
Cbc0032I Strong branching done 10 times (51 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-7) rows, 23 (-2) columns and 123 (-12) elements
Clp1000I sum of infeasibilities 0.000211828 - average 5.04353e-06, 15 fixed columns
Coin0506I Presolve 10 (-32) rows, 8 (-15) columns and 30 (-93) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 7536.6398
Clp0000I Optimal - objective value 7536.6398
Coin0511I After Postsolve, objective 7536.6398, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0190019 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 7536.6398
Clp0000I Optimal - objective value 7536.6398
Clp0000I Optimal - objective value 7536.6398
Coin0511I After Postsolve, objective 7536.6398, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7536.639816 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 23 columns (22 integer (22 of which binary)) and 123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.995%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.97165
Cbc0038I Solution found of -3212.31
Cbc0038I Relaxing continuous gives -3212.31
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 23 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -3212.31 to -3224.17 (0.00 seconds)
Cbc0038I Round again with cutoff of -3398.1
Cbc0038I Pass   1: suminf.    0.05014 (1) obj. -3398.1 iterations 8
Cbc0038I Pass   2: suminf.    0.42829 (1) obj. -4799.38 iterations 1
Cbc0038I Pass   3: suminf.    0.22707 (1) obj. -4196.86 iterations 6
Cbc0038I Pass   4: suminf.    0.01110 (1) obj. -3398.1 iterations 5
Cbc0038I Pass   5: suminf.    0.19566 (1) obj. -4107.79 iterations 1
Cbc0038I Pass   6: suminf.    0.03345 (1) obj. -3398.1 iterations 4
Cbc0038I Pass   7: suminf.    0.03345 (1) obj. -3398.1 iterations 1
Cbc0038I Pass   8: suminf.    0.28718 (1) obj. -4373.76 iterations 1
Cbc0038I Pass   9: suminf.    0.14418 (1) obj. -4072.36 iterations 2
Cbc0038I Solution found of -3517.92
Cbc0038I Relaxing continuous gives -3517.92
Cbc0038I Rounding solution of -3689.88 is better than previous of -3517.92

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3944.59
Cbc0038I Pass  10: suminf.    0.19762 (1) obj. -3944.59 iterations 0
Cbc0038I Pass  11: suminf.    0.42829 (1) obj. -4799.38 iterations 1
Cbc0038I Pass  12: suminf.    0.38561 (1) obj. -4682.05 iterations 4
Cbc0038I Pass  13: suminf.    0.17982 (1) obj. -3944.59 iterations 4
Cbc0038I Pass  14: suminf.    0.23951 (1) obj. -4174.14 iterations 1
Cbc0038I Pass  15: suminf.    0.25756 (1) obj. -4534.47 iterations 7
Cbc0038I Pass  16: suminf.    0.09837 (1) obj. -3944.59 iterations 3
Cbc0038I Pass  17: suminf.    0.25756 (1) obj. -4534.47 iterations 2
Cbc0038I Pass  18: suminf.    1.75679 (4) obj. -3944.59 iterations 5
Cbc0038I Pass  19: suminf.    0.08732 (1) obj. -3944.59 iterations 5
Cbc0038I Pass  20: suminf.    0.22829 (1) obj. -4466.98 iterations 2
Cbc0038I Pass  21: suminf.    0.62071 (5) obj. -3944.59 iterations 5
Cbc0038I Pass  22: suminf.    0.08525 (1) obj. -3944.59 iterations 14
Cbc0038I Pass  23: suminf.    0.08525 (1) obj. -3944.59 iterations 2
Cbc0038I Pass  24: suminf.    0.09414 (1) obj. -3978.77 iterations 1
Cbc0038I Pass  25: suminf.    1.92679 (5) obj. -3944.59 iterations 7
Cbc0038I Pass  26: suminf.    1.92679 (5) obj. -3944.59 iterations 1
Cbc0038I Pass  27: suminf.    0.25187 (2) obj. -4520.72 iterations 4
Cbc0038I Pass  28: suminf.    0.09703 (1) obj. -3944.59 iterations 2
Cbc0038I Pass  29: suminf.    0.11797 (1) obj. -4025.1 iterations 1
Cbc0038I Pass  30: suminf.    0.39618 (3) obj. -3944.59 iterations 10
Cbc0038I Pass  31: suminf.    0.13995 (2) obj. -3944.59 iterations 2
Cbc0038I Pass  32: suminf.    0.18561 (1) obj. -4288.24 iterations 2
Cbc0038I Pass  33: suminf.    0.08950 (1) obj. -3944.59 iterations 2
Cbc0038I Pass  34: suminf.    0.20623 (1) obj. -4393.47 iterations 1
Cbc0038I Pass  35: suminf.    0.96152 (5) obj. -3944.59 iterations 11
Cbc0038I Pass  36: suminf.    0.75605 (3) obj. -3944.59 iterations 9
Cbc0038I Pass  37: suminf.    0.25080 (2) obj. -3944.59 iterations 2
Cbc0038I Pass  38: suminf.    0.13683 (1) obj. -4064.39 iterations 2
Cbc0038I Pass  39: suminf.    0.10070 (1) obj. -3944.59 iterations 2
Cbc0038I Rounding solution of -3702.72 is better than previous of -3689.88

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 23 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -3702.72 to -3867.17 (0.01 seconds)
Cbc0038I Round again with cutoff of -4250.24
Cbc0038I Pass  39: suminf.    0.28010 (1) obj. -4250.24 iterations 0
Cbc0038I Pass  40: suminf.    0.42829 (1) obj. -4799.38 iterations 1
Cbc0038I Pass  41: suminf.    1.55122 (4) obj. -4250.24 iterations 8
Cbc0038I Pass  42: suminf.    0.45268 (1) obj. -4668.57 iterations 6
Cbc0038I Pass  43: suminf.    0.33979 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  44: suminf.    0.59269 (3) obj. -4250.24 iterations 7
Cbc0038I Pass  45: suminf.    0.23701 (3) obj. -4250.24 iterations 4
Cbc0038I Pass  46: suminf.    0.21301 (1) obj. -4272.02 iterations 3
Cbc0038I Pass  47: suminf.    0.20734 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  48: suminf.    0.21301 (1) obj. -4272.02 iterations 1
Cbc0038I Pass  49: suminf.    0.23701 (3) obj. -4250.24 iterations 4
Cbc0038I Pass  50: suminf.    1.12032 (3) obj. -4250.24 iterations 10
Cbc0038I Pass  51: suminf.    0.74988 (2) obj. -4250.24 iterations 3
Cbc0038I Pass  52: suminf.    0.26783 (1) obj. -4250.24 iterations 2
Cbc0038I Pass  53: suminf.    0.32818 (1) obj. -4482.3 iterations 1
Cbc0038I Pass  54: suminf.    0.27849 (1) obj. -4250.24 iterations 2
Cbc0038I Pass  55: suminf.    0.36070 (1) obj. -4566.38 iterations 1
Cbc0038I Pass  56: suminf.    0.27849 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  57: suminf.    0.97277 (3) obj. -4250.24 iterations 2
Cbc0038I Pass  58: suminf.    0.24470 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  59: suminf.    0.32293 (1) obj. -4551.06 iterations 1
Cbc0038I Pass  60: suminf.    0.25366 (1) obj. -4405.56 iterations 6
Cbc0038I Pass  61: suminf.    0.21327 (1) obj. -4250.24 iterations 1
Cbc0038I Pass  62: suminf.    0.25366 (1) obj. -4405.56 iterations 1
Cbc0038I Pass  63: suminf.    0.21327 (1) obj. -4250.24 iterations 2
Cbc0038I Pass  64: suminf.    0.18426 (2) obj. -4250.24 iterations 5
Cbc0038I Pass  65: suminf.    0.18426 (2) obj. -4250.24 iterations 1
Cbc0038I Pass  66: suminf.    0.25694 (2) obj. -4519.23 iterations 1
Cbc0038I Pass  67: suminf.    1.09371 (3) obj. -4250.24 iterations 5
Cbc0038I Pass  68: suminf.    0.25223 (1) obj. -4250.24 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3867.17 - took 0.01 seconds
Cbc0012I Integer solution of -3867.1689 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 42 rows 23 columns, reduced to 7 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 5.6
Cbc0013I At root node, 10 cuts changed objective from -4963.4291 to -3868.0477 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 107 row cuts average 6.0 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 31 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3867.168900000001, took 77 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-7) rows, 44 (-3) columns and 354 (-35) elements
Clp1000I sum of infeasibilities 6.97645e-07 - average 1.66106e-08, 35 fixed columns
Coin0506I Presolve 8 (-34) rows, 9 (-35) columns and 30 (-324) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 7404.3904
Clp0000I Optimal - objective value 7404.3904
Coin0511I After Postsolve, objective 7404.3904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0554035 - largest nonzero change 2.9526342e-05 ( 0.0025543869%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 7616.8576
Clp0000I Optimal - objective value 7616.8576
Clp0000I Optimal - objective value 7616.8576
Coin0511I After Postsolve, objective 7616.8576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7616.857567 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 44 columns (44 integer (44 of which binary)) and 365 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.427%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.79252
Cbc0038I Pass   1: suminf.    1.28856 (7) obj. -463.322 iterations 12
Cbc0038I Pass   2: suminf.    1.28856 (7) obj. -463.322 iterations 0
Cbc0038I Solution found of -430.343
Cbc0038I Rounding solution of -1230.55 is better than previous of -430.343

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 44 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -1230.55 to -3224.17 (0.02 seconds)
Cbc0038I Round again with cutoff of -3402.09
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    4.18541 (11) obj. -3402.09 iterations 1
Cbc0038I Pass   4: suminf.    0.31101 (1) obj. -4420.1 iterations 14
Cbc0038I Pass   5: suminf.    0.04627 (1) obj. -3402.09 iterations 1
Cbc0038I Pass   6: suminf.    1.90678 (5) obj. -3402.09 iterations 8
Cbc0038I Pass   7: suminf.    0.95784 (3) obj. -3402.09 iterations 3
Cbc0038I Pass   8: suminf.    0.39780 (1) obj. -4816.35 iterations 3
Cbc0038I Pass   9: suminf.    0.01615 (1) obj. -3402.09 iterations 1
Cbc0038I Pass  10: suminf.    3.19919 (9) obj. -3402.09 iterations 12
Cbc0038I Pass  11: suminf.    2.26922 (6) obj. -3402.09 iterations 5
Cbc0038I Pass  12: suminf.    0.82235 (2) obj. -3402.09 iterations 6
Cbc0038I Pass  13: suminf.    0.27585 (1) obj. -4573.29 iterations 3
Cbc0038I Solution found of -3551.08
Cbc0038I Rounding solution of -3807.36 is better than previous of -3551.08

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4046.55
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  14: suminf.    4.51957 (11) obj. -4046.55 iterations 0
Cbc0038I Pass  15: suminf.    0.31101 (1) obj. -4420.1 iterations 14
Cbc0038I Pass  16: suminf.    0.21387 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  17: suminf.    0.48224 (2) obj. -4046.55 iterations 4
Cbc0038I Pass  18: suminf.    0.15003 (1) obj. -4046.55 iterations 2
Cbc0038I Pass  19: suminf.    0.16802 (1) obj. -4115.71 iterations 1
Cbc0038I Pass  20: suminf.    2.51612 (10) obj. -4046.55 iterations 11
Cbc0038I Pass  21: suminf.    0.17111 (1) obj. -4046.55 iterations 11
Cbc0038I Pass  22: suminf.    0.34293 (1) obj. -4683.21 iterations 1
Cbc0038I Pass  23: suminf.    1.76592 (5) obj. -4046.55 iterations 15
Cbc0038I Pass  24: suminf.    0.27114 (1) obj. -4046.55 iterations 7
Cbc0038I Pass  25: suminf.    0.42304 (1) obj. -4630.65 iterations 1
Cbc0038I Pass  26: suminf.    4.16674 (11) obj. -4046.55 iterations 17
Cbc0038I Pass  27: suminf.    0.48279 (2) obj. -4046.55 iterations 9
Cbc0038I Pass  28: suminf.    0.14990 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  29: suminf.    0.25878 (1) obj. -4450.01 iterations 1
Cbc0038I Pass  30: suminf.    1.14479 (5) obj. -4046.55 iterations 11
Cbc0038I Pass  31: suminf.    0.58772 (2) obj. -4046.55 iterations 5
Cbc0038I Pass  32: suminf.    0.19049 (1) obj. -4162.09 iterations 2
Cbc0038I Pass  33: suminf.    0.15931 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  34: suminf.    0.67004 (2) obj. -4046.55 iterations 5
Cbc0038I Pass  35: suminf.    0.67004 (2) obj. -4046.55 iterations 2
Cbc0038I Pass  36: suminf.    0.22520 (1) obj. -4254.17 iterations 2
Cbc0038I Pass  37: suminf.    0.17121 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  38: suminf.    1.80765 (6) obj. -4046.55 iterations 12
Cbc0038I Pass  39: suminf.    0.52616 (2) obj. -4046.55 iterations 7
Cbc0038I Pass  40: suminf.    0.17913 (1) obj. -4150.97 iterations 2
Cbc0038I Pass  41: suminf.    0.15198 (1) obj. -4046.55 iterations 1
Cbc0038I Pass  42: suminf.    1.38817 (4) obj. -4067.9 iterations 7
Cbc0038I Pass  43: suminf.    1.02499 (3) obj. -4046.55 iterations 4
Cbc0038I Rounding solution of -3867.17 is better than previous of -3807.36

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 44 columns, reduced to 21 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4333.58
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  43: suminf.    4.66840 (11) obj. -4333.58 iterations 0
Cbc0038I Pass  44: suminf.    0.31101 (1) obj. -4420.1 iterations 14
Cbc0038I Pass  45: suminf.    0.28851 (1) obj. -4333.58 iterations 1
Cbc0038I Pass  46: suminf.    1.37321 (4) obj. -4333.58 iterations 9
Cbc0038I Pass  47: suminf.    0.74525 (2) obj. -4333.58 iterations 6
Cbc0038I Pass  48: suminf.    0.46667 (1) obj. -4797.45 iterations 2
Cbc0038I Pass  49: suminf.    0.34603 (1) obj. -4333.58 iterations 1
Cbc0038I Pass  50: suminf.    1.42174 (5) obj. -4333.58 iterations 6
Cbc0038I Pass  51: suminf.    0.29398 (1) obj. -4333.58 iterations 5
Cbc0038I Pass  52: suminf.    0.38103 (1) obj. -4668.31 iterations 1
Cbc0038I Pass  53: suminf.    0.28333 (1) obj. -4333.58 iterations 6
Cbc0038I Pass  54: suminf.    0.28333 (1) obj. -4333.58 iterations 0
Cbc0038I Pass  55: suminf.    0.33333 (1) obj. -4525.87 iterations 1
Cbc0038I Pass  56: suminf.    1.02901 (4) obj. -4333.58 iterations 10
Cbc0038I Pass  57: suminf.    0.27831 (2) obj. -4333.58 iterations 3
Cbc0038I Pass  58: suminf.    0.36883 (1) obj. -4633.42 iterations 4
Cbc0038I Pass  59: suminf.    0.29086 (1) obj. -4333.58 iterations 1
Cbc0038I Pass  60: suminf.    1.51734 (4) obj. -4333.58 iterations 7
Cbc0038I Pass  61: suminf.    1.24328 (3) obj. -4333.58 iterations 3
Cbc0038I Pass  62: suminf.    0.28076 (1) obj. -4470.21 iterations 3
Cbc0038I Pass  63: suminf.    0.24523 (1) obj. -4333.58 iterations 1
Cbc0038I Pass  64: suminf.    2.56644 (12) obj. -4333.58 iterations 17
Cbc0038I Pass  65: suminf.    2.02845 (11) obj. -4333.58 iterations 3
Cbc0038I Pass  66: suminf.    0.41000 (1) obj. -4482.28 iterations 11
Cbc0038I Pass  67: suminf.    0.35643 (1) obj. -4333.58 iterations 2
Cbc0038I Pass  68: suminf.    0.45556 (1) obj. -4714.73 iterations 1
Cbc0038I Pass  69: suminf.    0.76521 (3) obj. -4333.58 iterations 8
Cbc0038I Pass  70: suminf.    0.28635 (2) obj. -4333.58 iterations 3
Cbc0038I Pass  71: suminf.    0.37051 (2) obj. -4645.08 iterations 1
Cbc0038I Pass  72: suminf.    1.56640 (6) obj. -4333.58 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 44 columns, reduced to 36 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3867.17 - took 0.02 seconds
Cbc0012I Integer solution of -3867.1689 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 42 rows 44 columns, reduced to 7 rows 11 columns
Cbc0031I 15 added rows had average density of 7.4666667
Cbc0013I At root node, 15 cuts changed objective from -5003.3137 to -3876.4941 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3896 row cuts average 3.5 elements, 13 column cuts (13 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 317 row cuts average 25.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.777 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3867.1689 best solution, best possible -3876.4927 (1.70 seconds)
Cbc0001I Search completed - best objective -3867.168900000001, took 1006 iterations and 4 nodes (1.79 seconds)
Cbc0032I Strong branching done 10 times (51 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 3 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.79

