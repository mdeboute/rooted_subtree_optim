Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-33) rows, 40 (-13) columns and 217 (-86) elements
Clp1000I sum of infeasibilities 3.23566e-05 - average 4.49397e-07, 13 fixed columns
Coin0506I Presolve 44 (-28) rows, 25 (-15) columns and 131 (-86) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 3.2395892 - largest nonzero change 0 ( 0%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 183.69566
Clp0000I Optimal - objective value 183.69566
Coin0511I After Postsolve, objective 183.69566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 183.69566
Clp0000I Optimal - objective value 183.69566
Clp0000I Optimal - objective value 183.69566
Coin0511I After Postsolve, objective 183.69566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 183.6956633 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 40 columns (39 integer (39 of which binary)) and 217 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.65314
Cbc0038I Pass   1: suminf.    0.34426 (3) obj. -137.939 iterations 22
Cbc0038I Pass   2: suminf.    0.34426 (3) obj. -137.939 iterations 0
Cbc0038I Solution found of -84.2879
Cbc0038I Relaxing continuous gives -84.2879
Cbc0038I Rounding solution of -123.849 is better than previous of -84.2879

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -123.849 to -146.265 (0.02 seconds)
Cbc0038I Round again with cutoff of -150.008
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.86399 (6) obj. -150.008 iterations 4
Cbc0038I Pass   4: suminf.    0.35098 (4) obj. -150.008 iterations 9
Cbc0038I Pass   5: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass   6: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass   7: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass   8: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I Pass   9: suminf.    0.50511 (3) obj. -150.008 iterations 4
Cbc0038I Pass  10: suminf.    0.35098 (4) obj. -150.008 iterations 6
Cbc0038I Pass  11: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass  12: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass  13: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass  14: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I Pass  15: suminf.    0.50511 (3) obj. -150.008 iterations 4
Cbc0038I Pass  16: suminf.    0.35098 (4) obj. -150.008 iterations 6
Cbc0038I Pass  17: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass  18: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass  19: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass  20: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I Pass  21: suminf.    0.50511 (3) obj. -150.008 iterations 4
Cbc0038I Pass  22: suminf.    0.35098 (4) obj. -150.008 iterations 6
Cbc0038I Pass  23: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass  24: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass  25: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass  26: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I Pass  27: suminf.    0.50511 (3) obj. -150.008 iterations 4
Cbc0038I Pass  28: suminf.    0.35098 (4) obj. -150.008 iterations 6
Cbc0038I Pass  29: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass  30: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass  31: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass  32: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -146.265 - took 0.03 seconds
Cbc0012I Integer solution of -146.2653 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 72 rows 40 columns, reduced to 34 rows 19 columns
Cbc0031I 8 added rows had average density of 32.25
Cbc0013I At root node, 8 cuts changed objective from -183.69566 to -162.74749 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 432 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 446 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -146.2653, took 1275 iterations and 24 nodes (0.19 seconds)
Cbc0032I Strong branching done 142 times (618 iterations), fathomed 5 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-45) rows, 65 (-37) columns and 749 (-829) elements
Clp1000I sum of infeasibilities 3.47196e-07 - average 5.88468e-09, 13 fixed columns
Coin0506I Presolve 49 (-10) rows, 52 (-13) columns and 511 (-238) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 6.00586 - largest nonzero change 2.5048933e-05 ( 0.0015420975%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 210.53831
Clp0000I Optimal - objective value 210.53831
Coin0511I After Postsolve, objective 210.53831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.2378943 - largest nonzero change 2.4641082e-05 ( 0.0015420975%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 211.83576
Clp0000I Optimal - objective value 211.83576
Clp0000I Optimal - objective value 211.83576
Coin0511I After Postsolve, objective 211.83576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 211.8357606 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 68 columns (68 integer (68 of which binary)) and 796 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.696%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.42575
Cbc0038I Pass   1: suminf.    1.88458 (16) obj. -77.661 iterations 21
Cbc0038I Pass   2: suminf.    1.88458 (16) obj. -77.661 iterations 1
Cbc0038I Pass   3: suminf.    0.35033 (5) obj. -50.2569 iterations 11
Cbc0038I Solution found of -42.8031
Cbc0038I Rounding solution of -56.5379 is better than previous of -42.8031

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -56.5379 to -145.561 (0.03 seconds)
Cbc0038I Round again with cutoff of -151.014
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    5.38152 (23) obj. -151.014 iterations 3
Cbc0038I Pass   5: suminf.    5.38152 (23) obj. -151.014 iterations 0
Cbc0038I Pass   6: suminf.    1.24588 (6) obj. -151.014 iterations 31
Cbc0038I Pass   7: suminf.    1.24588 (6) obj. -151.014 iterations 0
Cbc0038I Pass   8: suminf.    1.40583 (4) obj. -164.101 iterations 9
Cbc0038I Pass   9: suminf.    1.40583 (4) obj. -164.101 iterations 0
Cbc0038I Pass  10: suminf.    0.39272 (1) obj. -151.014 iterations 5
Cbc0038I Pass  11: suminf.    0.17857 (1) obj. -155.354 iterations 3
Cbc0038I Pass  12: suminf.    0.30344 (1) obj. -151.014 iterations 1
Cbc0038I Pass  13: suminf.    3.61128 (12) obj. -151.014 iterations 15
Cbc0038I Pass  14: suminf.    2.98608 (11) obj. -151.014 iterations 3
Cbc0038I Pass  15: suminf.    0.88889 (2) obj. -156.683 iterations 19
Cbc0038I Pass  16: suminf.    0.39272 (1) obj. -151.014 iterations 2
Cbc0038I Pass  17: suminf.    0.17857 (1) obj. -155.354 iterations 3
Cbc0038I Pass  18: suminf.    0.30344 (1) obj. -151.014 iterations 1
Cbc0038I Pass  19: suminf.    4.37885 (12) obj. -151.014 iterations 16
Cbc0038I Pass  20: suminf.    2.88220 (12) obj. -151.014 iterations 3
Cbc0038I Pass  21: suminf.    2.88220 (12) obj. -151.014 iterations 1
Cbc0038I Pass  22: suminf.    0.31685 (5) obj. -151.014 iterations 19
Cbc0038I Pass  23: suminf.    0.31685 (5) obj. -151.014 iterations 0
Cbc0038I Pass  24: suminf.    1.47847 (5) obj. -151.014 iterations 2
Cbc0038I Pass  25: suminf.    0.89802 (3) obj. -159.049 iterations 8
Cbc0038I Pass  26: suminf.    0.04444 (2) obj. -155.765 iterations 1
Cbc0038I Pass  27: suminf.    0.34663 (3) obj. -151.014 iterations 6
Cbc0038I Pass  28: suminf.    0.31685 (5) obj. -151.014 iterations 2
Cbc0038I Pass  29: suminf.    1.47847 (5) obj. -151.014 iterations 2
Cbc0038I Pass  30: suminf.    0.89802 (3) obj. -159.049 iterations 8
Cbc0038I Pass  31: suminf.    0.04444 (2) obj. -155.765 iterations 1
Cbc0038I Pass  32: suminf.    0.34663 (3) obj. -151.014 iterations 6
Cbc0038I Pass  33: suminf.    0.31685 (5) obj. -151.014 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -145.561 to -146.265 (0.05 seconds)
Cbc0038I Round again with cutoff of -160.829
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.60194 (23) obj. -160.829 iterations 0
Cbc0038I Pass  34: suminf.    5.60194 (23) obj. -160.829 iterations 0
Cbc0038I Pass  35: suminf.    2.25490 (8) obj. -160.829 iterations 30
Cbc0038I Pass  36: suminf.    1.40583 (4) obj. -164.101 iterations 12
Cbc0038I Pass  37: suminf.    1.40583 (4) obj. -164.101 iterations 0
Cbc0038I Pass  38: suminf.    1.14015 (3) obj. -160.829 iterations 5
Cbc0038I Pass  39: suminf.    0.78169 (5) obj. -160.829 iterations 4
Cbc0038I Pass  40: suminf.    1.52461 (5) obj. -160.829 iterations 2
Cbc0038I Pass  41: suminf.    4.52797 (14) obj. -160.829 iterations 20
Cbc0038I Pass  42: suminf.    4.14593 (14) obj. -160.829 iterations 4
Cbc0038I Pass  43: suminf.    1.09580 (4) obj. -160.829 iterations 25
Cbc0038I Pass  44: suminf.    0.48178 (3) obj. -160.829 iterations 3
Cbc0038I Pass  45: suminf.    0.30032 (3) obj. -162.462 iterations 3
Cbc0038I Pass  46: suminf.    1.09580 (4) obj. -160.829 iterations 7
Cbc0038I Pass  47: suminf.    0.84581 (12) obj. -160.829 iterations 11
Cbc0038I Pass  48: suminf.    0.82456 (5) obj. -160.829 iterations 7
Cbc0038I Pass  49: suminf.    0.80768 (5) obj. -160.829 iterations 11
Cbc0038I Pass  50: suminf.    0.80768 (5) obj. -160.829 iterations 8
Cbc0038I Pass  51: suminf.    0.99078 (4) obj. -160.829 iterations 12
Cbc0038I Pass  52: suminf.    0.76719 (3) obj. -162.855 iterations 8
Cbc0038I Pass  53: suminf.    0.99225 (3) obj. -160.829 iterations 7
Cbc0038I Pass  54: suminf.    1.92874 (11) obj. -160.829 iterations 14
Cbc0038I Pass  55: suminf.    1.92874 (11) obj. -160.829 iterations 1
Cbc0038I Pass  56: suminf.    0.81998 (7) obj. -160.829 iterations 14
Cbc0038I Pass  57: suminf.    0.80768 (5) obj. -160.829 iterations 6
Cbc0038I Pass  58: suminf.    0.99078 (4) obj. -160.829 iterations 11
Cbc0038I Pass  59: suminf.    0.76719 (3) obj. -162.855 iterations 8
Cbc0038I Pass  60: suminf.    0.99225 (3) obj. -160.829 iterations 7
Cbc0038I Pass  61: suminf.    1.93140 (11) obj. -160.829 iterations 14
Cbc0038I Pass  62: suminf.    1.74825 (8) obj. -160.829 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 38 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -146.265 - took 0.04 seconds
Cbc0012I Integer solution of -146.2653 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 62 rows 68 columns, reduced to 10 rows 12 columns
Cbc0031I 13 added rows had average density of 21.923077
Cbc0013I At root node, 13 cuts changed objective from -200.08982 to -159.08081 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 337 row cuts average 10.7 elements, 23 column cuts (23 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -146.2653 best solution, best possible -159.05664 (0.47 seconds)
Cbc0001I Search completed - best objective -146.2653, took 517 iterations and 16 nodes (0.97 seconds)
Cbc0032I Strong branching done 206 times (1011 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 5, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.97

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-33) rows, 40 (-13) columns and 217 (-86) elements
Clp1000I sum of infeasibilities 3.23566e-05 - average 4.49397e-07, 13 fixed columns
Coin0506I Presolve 44 (-28) rows, 25 (-15) columns and 131 (-86) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 3.2395892 - largest nonzero change 0 ( 0%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 183.69566
Clp0000I Optimal - objective value 183.69566
Coin0511I After Postsolve, objective 183.69566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 183.69566
Clp0000I Optimal - objective value 183.69566
Clp0000I Optimal - objective value 183.69566
Coin0511I After Postsolve, objective 183.69566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 183.6956633 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 40 columns (39 integer (39 of which binary)) and 217 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.65314
Cbc0038I Pass   1: suminf.    0.34426 (3) obj. -137.939 iterations 22
Cbc0038I Pass   2: suminf.    0.34426 (3) obj. -137.939 iterations 0
Cbc0038I Solution found of -84.2879
Cbc0038I Relaxing continuous gives -84.2879
Cbc0038I Rounding solution of -123.849 is better than previous of -84.2879

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -123.849 to -146.265 (0.02 seconds)
Cbc0038I Round again with cutoff of -150.008
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.86399 (6) obj. -150.008 iterations 4
Cbc0038I Pass   4: suminf.    0.35098 (4) obj. -150.008 iterations 9
Cbc0038I Pass   5: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass   6: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass   7: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass   8: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I Pass   9: suminf.    0.50511 (3) obj. -150.008 iterations 4
Cbc0038I Pass  10: suminf.    0.35098 (4) obj. -150.008 iterations 6
Cbc0038I Pass  11: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass  12: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass  13: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass  14: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I Pass  15: suminf.    0.50511 (3) obj. -150.008 iterations 4
Cbc0038I Pass  16: suminf.    0.35098 (4) obj. -150.008 iterations 6
Cbc0038I Pass  17: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass  18: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass  19: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass  20: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I Pass  21: suminf.    0.50511 (3) obj. -150.008 iterations 4
Cbc0038I Pass  22: suminf.    0.35098 (4) obj. -150.008 iterations 6
Cbc0038I Pass  23: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass  24: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass  25: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass  26: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I Pass  27: suminf.    0.50511 (3) obj. -150.008 iterations 4
Cbc0038I Pass  28: suminf.    0.35098 (4) obj. -150.008 iterations 6
Cbc0038I Pass  29: suminf.    0.35098 (4) obj. -150.008 iterations 0
Cbc0038I Pass  30: suminf.    0.50204 (3) obj. -150.008 iterations 7
Cbc0038I Pass  31: suminf.    0.31836 (3) obj. -150.008 iterations 5
Cbc0038I Pass  32: suminf.    0.69470 (4) obj. -150.008 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -146.265 - took 0.03 seconds
Cbc0012I Integer solution of -146.2653 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 72 rows 40 columns, reduced to 34 rows 19 columns
Cbc0031I 8 added rows had average density of 32.25
Cbc0013I At root node, 8 cuts changed objective from -183.69566 to -162.74749 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 432 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 446 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -146.2653, took 1275 iterations and 24 nodes (0.19 seconds)
Cbc0032I Strong branching done 142 times (618 iterations), fathomed 5 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-46) rows, 65 (-38) columns and 749 (-830) elements
Clp1000I sum of infeasibilities 3.47196e-07 - average 5.88468e-09, 13 fixed columns
Coin0506I Presolve 49 (-10) rows, 52 (-13) columns and 511 (-238) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 6.00586 - largest nonzero change 2.5048933e-05 ( 0.0015420975%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 210.53831
Clp0000I Optimal - objective value 210.53831
Coin0511I After Postsolve, objective 210.53831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.2378943 - largest nonzero change 2.4641082e-05 ( 0.0015420975%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 211.83576
Clp0000I Optimal - objective value 211.83576
Clp0000I Optimal - objective value 211.83576
Coin0511I After Postsolve, objective 211.83576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 211.8357606 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 68 columns (68 integer (68 of which binary)) and 796 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.696%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.42575
Cbc0038I Pass   1: suminf.    1.88458 (16) obj. -77.661 iterations 21
Cbc0038I Pass   2: suminf.    1.88458 (16) obj. -77.661 iterations 1
Cbc0038I Pass   3: suminf.    0.35033 (5) obj. -50.2569 iterations 11
Cbc0038I Solution found of -42.8031
Cbc0038I Rounding solution of -56.5379 is better than previous of -42.8031

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -56.5379 to -145.561 (0.04 seconds)
Cbc0038I Round again with cutoff of -151.014
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    5.38152 (23) obj. -151.014 iterations 3
Cbc0038I Pass   5: suminf.    5.38152 (23) obj. -151.014 iterations 0
Cbc0038I Pass   6: suminf.    1.24588 (6) obj. -151.014 iterations 31
Cbc0038I Pass   7: suminf.    1.24588 (6) obj. -151.014 iterations 0
Cbc0038I Pass   8: suminf.    1.40583 (4) obj. -164.101 iterations 9
Cbc0038I Pass   9: suminf.    1.40583 (4) obj. -164.101 iterations 0
Cbc0038I Pass  10: suminf.    0.39272 (1) obj. -151.014 iterations 5
Cbc0038I Pass  11: suminf.    0.17857 (1) obj. -155.354 iterations 3
Cbc0038I Pass  12: suminf.    0.30344 (1) obj. -151.014 iterations 1
Cbc0038I Pass  13: suminf.    3.61128 (12) obj. -151.014 iterations 15
Cbc0038I Pass  14: suminf.    2.98608 (11) obj. -151.014 iterations 3
Cbc0038I Pass  15: suminf.    0.88889 (2) obj. -156.683 iterations 19
Cbc0038I Pass  16: suminf.    0.39272 (1) obj. -151.014 iterations 2
Cbc0038I Pass  17: suminf.    0.17857 (1) obj. -155.354 iterations 3
Cbc0038I Pass  18: suminf.    0.30344 (1) obj. -151.014 iterations 1
Cbc0038I Pass  19: suminf.    4.37885 (12) obj. -151.014 iterations 16
Cbc0038I Pass  20: suminf.    2.88220 (12) obj. -151.014 iterations 3
Cbc0038I Pass  21: suminf.    2.88220 (12) obj. -151.014 iterations 1
Cbc0038I Pass  22: suminf.    0.31685 (5) obj. -151.014 iterations 19
Cbc0038I Pass  23: suminf.    0.31685 (5) obj. -151.014 iterations 0
Cbc0038I Pass  24: suminf.    1.47847 (5) obj. -151.014 iterations 2
Cbc0038I Pass  25: suminf.    0.89802 (3) obj. -159.049 iterations 8
Cbc0038I Pass  26: suminf.    0.04444 (2) obj. -155.765 iterations 1
Cbc0038I Pass  27: suminf.    0.34663 (3) obj. -151.014 iterations 6
Cbc0038I Pass  28: suminf.    0.31685 (5) obj. -151.014 iterations 2
Cbc0038I Pass  29: suminf.    1.47847 (5) obj. -151.014 iterations 2
Cbc0038I Pass  30: suminf.    0.89802 (3) obj. -159.049 iterations 8
Cbc0038I Pass  31: suminf.    0.04444 (2) obj. -155.765 iterations 1
Cbc0038I Pass  32: suminf.    0.34663 (3) obj. -151.014 iterations 6
Cbc0038I Pass  33: suminf.    0.31685 (5) obj. -151.014 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -145.561 to -146.265 (0.05 seconds)
Cbc0038I Round again with cutoff of -160.829
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.60194 (23) obj. -160.829 iterations 0
Cbc0038I Pass  34: suminf.    5.60194 (23) obj. -160.829 iterations 0
Cbc0038I Pass  35: suminf.    2.25490 (8) obj. -160.829 iterations 30
Cbc0038I Pass  36: suminf.    1.40583 (4) obj. -164.101 iterations 12
Cbc0038I Pass  37: suminf.    1.40583 (4) obj. -164.101 iterations 0
Cbc0038I Pass  38: suminf.    1.14015 (3) obj. -160.829 iterations 5
Cbc0038I Pass  39: suminf.    0.78169 (5) obj. -160.829 iterations 4
Cbc0038I Pass  40: suminf.    1.52461 (5) obj. -160.829 iterations 2
Cbc0038I Pass  41: suminf.    4.52797 (14) obj. -160.829 iterations 20
Cbc0038I Pass  42: suminf.    4.14593 (14) obj. -160.829 iterations 4
Cbc0038I Pass  43: suminf.    1.09580 (4) obj. -160.829 iterations 25
Cbc0038I Pass  44: suminf.    0.48178 (3) obj. -160.829 iterations 3
Cbc0038I Pass  45: suminf.    0.30032 (3) obj. -162.462 iterations 3
Cbc0038I Pass  46: suminf.    1.09580 (4) obj. -160.829 iterations 7
Cbc0038I Pass  47: suminf.    0.84581 (12) obj. -160.829 iterations 11
Cbc0038I Pass  48: suminf.    0.82456 (5) obj. -160.829 iterations 7
Cbc0038I Pass  49: suminf.    0.80768 (5) obj. -160.829 iterations 11
Cbc0038I Pass  50: suminf.    0.80768 (5) obj. -160.829 iterations 8
Cbc0038I Pass  51: suminf.    0.99078 (4) obj. -160.829 iterations 12
Cbc0038I Pass  52: suminf.    0.76719 (3) obj. -162.855 iterations 8
Cbc0038I Pass  53: suminf.    0.99225 (3) obj. -160.829 iterations 7
Cbc0038I Pass  54: suminf.    1.92874 (11) obj. -160.829 iterations 14
Cbc0038I Pass  55: suminf.    1.92874 (11) obj. -160.829 iterations 1
Cbc0038I Pass  56: suminf.    0.81998 (7) obj. -160.829 iterations 14
Cbc0038I Pass  57: suminf.    0.80768 (5) obj. -160.829 iterations 6
Cbc0038I Pass  58: suminf.    0.99078 (4) obj. -160.829 iterations 11
Cbc0038I Pass  59: suminf.    0.76719 (3) obj. -162.855 iterations 8
Cbc0038I Pass  60: suminf.    0.99225 (3) obj. -160.829 iterations 7
Cbc0038I Pass  61: suminf.    1.93140 (11) obj. -160.829 iterations 14
Cbc0038I Pass  62: suminf.    1.74825 (8) obj. -160.829 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 38 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -146.265 - took 0.04 seconds
Cbc0012I Integer solution of -146.2653 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 62 rows 68 columns, reduced to 10 rows 12 columns
Cbc0031I 13 added rows had average density of 21.923077
Cbc0013I At root node, 13 cuts changed objective from -200.08982 to -159.08081 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 337 row cuts average 10.7 elements, 23 column cuts (23 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -146.2653 best solution, best possible -159.05664 (0.45 seconds)
Cbc0001I Search completed - best objective -146.2653, took 517 iterations and 16 nodes (1.09 seconds)
Cbc0032I Strong branching done 206 times (1011 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 5, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       1.09

