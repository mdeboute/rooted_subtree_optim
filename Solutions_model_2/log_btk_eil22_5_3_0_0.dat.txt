Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 110 (-19) elements
Clp1000I sum of infeasibilities 4.56265e-05 - average 1.23315e-06, 0 fixed columns
Coin0506I Presolve 37 (0) rows, 22 (0) columns and 110 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.9983664 - largest nonzero change 0 ( 0%) - largest zero change 1.541737e-05
Clp0000I Optimal - objective value 76.239565
Clp0000I Optimal - objective value 76.239565
Coin0511I After Postsolve, objective 76.239565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.239565
Clp0000I Optimal - objective value 76.239565
Clp0000I Optimal - objective value 76.239565
Coin0511I After Postsolve, objective 76.239565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.2395647 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.9679
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.6584 iterations 14
Cbc0038I Solution found of -20.6584
Cbc0038I Relaxing continuous gives -20.6584
Cbc0038I Rounding solution of -31.8514 is better than previous of -20.6584

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.1287
Cbc0038I Pass   2: suminf.    0.43686 (1) obj. -36.1287 iterations 1
Cbc0038I Pass   3: suminf.    0.40053 (1) obj. -36.1287 iterations 1
Cbc0038I Pass   4: suminf.    2.17059 (5) obj. -36.1287 iterations 5
Cbc0038I Pass   5: suminf.    1.33437 (3) obj. -36.1287 iterations 2
Cbc0038I Pass   6: suminf.    0.92975 (4) obj. -36.1287 iterations 2
Cbc0038I Pass   7: suminf.    0.43408 (1) obj. -36.1287 iterations 3
Cbc0038I Pass   8: suminf.    0.46157 (2) obj. -36.1287 iterations 2
Cbc0038I Pass   9: suminf.    0.85844 (3) obj. -36.1287 iterations 2
Cbc0038I Pass  10: suminf.    1.94257 (6) obj. -36.1287 iterations 7
Cbc0038I Pass  11: suminf.    1.77631 (5) obj. -36.1287 iterations 3
Cbc0038I Pass  12: suminf.    1.77631 (5) obj. -36.1287 iterations 0
Cbc0038I Pass  13: suminf.    1.24855 (3) obj. -36.1287 iterations 7
Cbc0038I Pass  14: suminf.    0.46157 (2) obj. -36.1287 iterations 3
Cbc0038I Pass  15: suminf.    0.85844 (3) obj. -36.1287 iterations 2
Cbc0038I Pass  16: suminf.    0.43408 (1) obj. -36.1287 iterations 2
Cbc0038I Pass  17: suminf.    0.59816 (2) obj. -36.1287 iterations 4
Cbc0038I Pass  18: suminf.    0.94359 (3) obj. -36.1287 iterations 5
Cbc0038I Pass  19: suminf.    0.24157 (2) obj. -36.1287 iterations 4
Cbc0038I Pass  20: suminf.    0.17306 (1) obj. -36.1287 iterations 1
Cbc0038I Pass  21: suminf.    0.52776 (2) obj. -36.1287 iterations 2
Cbc0038I Pass  22: suminf.    0.52776 (2) obj. -36.1287 iterations 0
Cbc0038I Pass  23: suminf.    2.06283 (6) obj. -36.1287 iterations 6
Cbc0038I Pass  24: suminf.    0.83018 (4) obj. -36.1287 iterations 5
Cbc0038I Pass  25: suminf.    0.27304 (2) obj. -36.1287 iterations 7
Cbc0038I Pass  26: suminf.    0.36322 (2) obj. -36.1287 iterations 3
Cbc0038I Pass  27: suminf.    0.94359 (3) obj. -36.1287 iterations 2
Cbc0038I Pass  28: suminf.    0.24157 (2) obj. -36.1287 iterations 4
Cbc0038I Pass  29: suminf.    0.17306 (1) obj. -36.1287 iterations 1
Cbc0038I Pass  30: suminf.    0.52776 (2) obj. -36.1287 iterations 2
Cbc0038I Pass  31: suminf.    0.52776 (2) obj. -36.1287 iterations 0
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.8276
Cbc0038I Pass  31: suminf.    0.66069 (2) obj. -43.8276 iterations 1
Cbc0038I Pass  32: suminf.    0.66069 (2) obj. -43.8276 iterations 0
Cbc0038I Pass  33: suminf.    0.49923 (2) obj. -43.8276 iterations 1
Cbc0038I Pass  34: suminf.    0.78420 (3) obj. -43.8276 iterations 3
Cbc0038I Pass  35: suminf.    0.49923 (2) obj. -43.8276 iterations 3
Cbc0038I Pass  36: suminf.    0.76617 (2) obj. -43.8276 iterations 2
Cbc0038I Pass  37: suminf.    2.26117 (6) obj. -43.8276 iterations 8
Cbc0038I Pass  38: suminf.    1.04041 (3) obj. -43.8276 iterations 3
Cbc0038I Pass  39: suminf.    1.04041 (3) obj. -43.8276 iterations 0
Cbc0038I Pass  40: suminf.    0.82514 (3) obj. -43.8276 iterations 4
Cbc0038I Pass  41: suminf.    0.66069 (2) obj. -43.8276 iterations 1
Cbc0038I Pass  42: suminf.    0.66069 (2) obj. -43.8276 iterations 0
Cbc0038I Pass  43: suminf.    0.49923 (2) obj. -43.8276 iterations 2
Cbc0038I Pass  44: suminf.    2.44008 (8) obj. -43.8276 iterations 9
Cbc0038I Pass  45: suminf.    1.20877 (4) obj. -43.8276 iterations 5
Cbc0038I Pass  46: suminf.    0.43147 (2) obj. -43.8276 iterations 4
Cbc0038I Pass  47: suminf.    0.92899 (3) obj. -43.8276 iterations 2
Cbc0038I Pass  48: suminf.    0.33819 (1) obj. -43.8276 iterations 3
Cbc0038I Pass  49: suminf.    1.86466 (5) obj. -43.8276 iterations 7
Cbc0038I Pass  50: suminf.    0.76082 (3) obj. -43.8276 iterations 6
Cbc0038I Pass  51: suminf.    2.30925 (6) obj. -43.8276 iterations 9
Cbc0038I Pass  52: suminf.    1.30882 (4) obj. -43.8276 iterations 2
Cbc0038I Pass  53: suminf.    2.47684 (6) obj. -43.8276 iterations 7
Cbc0038I Pass  54: suminf.    2.07407 (6) obj. -43.8276 iterations 6
Cbc0038I Pass  55: suminf.    0.66069 (2) obj. -43.8276 iterations 9
Cbc0038I Pass  56: suminf.    0.49923 (2) obj. -43.8276 iterations 2
Cbc0038I Pass  57: suminf.    1.76053 (7) obj. -43.8276 iterations 8
Cbc0038I Pass  58: suminf.    1.76053 (7) obj. -43.8276 iterations 0
Cbc0038I Pass  59: suminf.    1.23176 (4) obj. -43.8276 iterations 9
Cbc0038I Pass  60: suminf.    0.94198 (3) obj. -43.8276 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -31.8514 - took 0.04 seconds
Cbc0012I Integer solution of -31.85143 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 21 rows 14 columns
Cbc0031I 10 added rows had average density of 16.8
Cbc0013I At root node, 10 cuts changed objective from -74.623066 to -51.918962 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 952 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 826 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 82 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -32.40724 found by rounding after 2423 iterations and 6 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -32.40724, took 2449 iterations and 8 nodes (0.18 seconds)
Cbc0032I Strong branching done 68 times (584 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-9) rows, 42 (-2) columns and 320 (-40) elements
Clp1000I sum of infeasibilities 2.63344e-08 - average 7.1174e-10, 34 fixed columns
Coin0506I Presolve 7 (-30) rows, 8 (-34) columns and 26 (-294) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 15.879395
Clp0000I Optimal - objective value 15.879395
Coin0511I After Postsolve, objective 15.879395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0869369 - largest nonzero change 0 ( 0%) - largest zero change 1.8234569e-05
Clp0000I Optimal - objective value 95.026115
Clp0000I Optimal - objective value 95.026115
Clp0000I Optimal - objective value 95.026115
Coin0511I After Postsolve, objective 95.026115, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.02611534 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 42 columns (42 integer (42 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.263%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.02468
Cbc0038I Pass   1: suminf.    1.01045 (8) obj. -55.9084 iterations 6
Cbc0038I Pass   2: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Solution found of -14.7907
Cbc0038I Rounding solution of -20.0091 is better than previous of -14.7907

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 42 columns, reduced to 20 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20.0091 to -20.6584 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.651
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Pass   4: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Pass   5: suminf.    0.60490 (2) obj. -25.651 iterations 12
Cbc0038I Pass   6: suminf.    0.83979 (2) obj. -26.9551 iterations 3
Cbc0038I Pass   7: suminf.    0.00994 (1) obj. -25.651 iterations 2
Cbc0038I Solution found of -25.9837
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 42 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -25.9837 to -31.8514 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.5979
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   8: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Pass   9: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Pass  10: suminf.    1.42955 (6) obj. -39.5979 iterations 15
Cbc0038I Pass  11: suminf.    1.10774 (5) obj. -39.5979 iterations 4
Cbc0038I Pass  12: suminf.    0.98229 (5) obj. -39.5979 iterations 1
Cbc0038I Pass  13: suminf.    1.06833 (4) obj. -39.5979 iterations 8
Cbc0038I Pass  14: suminf.    1.06833 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  15: suminf.    0.52790 (4) obj. -39.5979 iterations 5
Cbc0038I Pass  16: suminf.    0.52790 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  17: suminf.    1.12038 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  18: suminf.    1.12038 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  19: suminf.    0.98043 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  20: suminf.    0.98043 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  21: suminf.    0.60799 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  22: suminf.    0.52790 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  23: suminf.    1.12038 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  24: suminf.    1.12038 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  25: suminf.    0.98043 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  26: suminf.    0.98043 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  27: suminf.    0.60799 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  28: suminf.    0.52790 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  29: suminf.    1.12038 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  30: suminf.    1.12038 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  31: suminf.    0.98043 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  32: suminf.    0.98043 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  33: suminf.    0.60799 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  34: suminf.    0.52790 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  35: suminf.    1.12038 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  36: suminf.    1.12038 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  37: suminf.    0.98043 (4) obj. -39.5979 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 42 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -31.8514 - took 0.01 seconds
Cbc0012I Integer solution of -31.85143 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 42 columns, reduced to 20 rows 21 columns
Cbc0031I 20 added rows had average density of 12.1
Cbc0013I At root node, 20 cuts changed objective from -70.583536 to -33.859564 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1362 row cuts average 5.6 elements, 7 column cuts (7 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 448 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 186 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 86 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 303 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 260 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 76 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.818 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.85143 best solution, best possible -33.859554 (1.64 seconds)
Cbc0012I Integer solution of -32.40724 found by rounding after 1458 iterations and 5 nodes (1.77 seconds)
Cbc0001I Search completed - best objective -32.40724, took 1481 iterations and 6 nodes (1.77 seconds)
Cbc0032I Strong branching done 92 times (645 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 6 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.77

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 110 (-19) elements
Clp1000I sum of infeasibilities 4.56265e-05 - average 1.23315e-06, 0 fixed columns
Coin0506I Presolve 37 (0) rows, 22 (0) columns and 110 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.9983664 - largest nonzero change 0 ( 0%) - largest zero change 1.541737e-05
Clp0000I Optimal - objective value 76.239565
Clp0000I Optimal - objective value 76.239565
Coin0511I After Postsolve, objective 76.239565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.239565
Clp0000I Optimal - objective value 76.239565
Clp0000I Optimal - objective value 76.239565
Coin0511I After Postsolve, objective 76.239565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.2395647 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.9679
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.6584 iterations 14
Cbc0038I Solution found of -20.6584
Cbc0038I Relaxing continuous gives -20.6584
Cbc0038I Rounding solution of -31.8514 is better than previous of -20.6584

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.1287
Cbc0038I Pass   2: suminf.    0.43686 (1) obj. -36.1287 iterations 1
Cbc0038I Pass   3: suminf.    0.40053 (1) obj. -36.1287 iterations 1
Cbc0038I Pass   4: suminf.    2.17059 (5) obj. -36.1287 iterations 5
Cbc0038I Pass   5: suminf.    1.33437 (3) obj. -36.1287 iterations 2
Cbc0038I Pass   6: suminf.    0.92975 (4) obj. -36.1287 iterations 2
Cbc0038I Pass   7: suminf.    0.43408 (1) obj. -36.1287 iterations 3
Cbc0038I Pass   8: suminf.    0.46157 (2) obj. -36.1287 iterations 2
Cbc0038I Pass   9: suminf.    0.85844 (3) obj. -36.1287 iterations 2
Cbc0038I Pass  10: suminf.    1.94257 (6) obj. -36.1287 iterations 7
Cbc0038I Pass  11: suminf.    1.77631 (5) obj. -36.1287 iterations 3
Cbc0038I Pass  12: suminf.    1.77631 (5) obj. -36.1287 iterations 0
Cbc0038I Pass  13: suminf.    1.24855 (3) obj. -36.1287 iterations 7
Cbc0038I Pass  14: suminf.    0.46157 (2) obj. -36.1287 iterations 3
Cbc0038I Pass  15: suminf.    0.85844 (3) obj. -36.1287 iterations 2
Cbc0038I Pass  16: suminf.    0.43408 (1) obj. -36.1287 iterations 2
Cbc0038I Pass  17: suminf.    0.59816 (2) obj. -36.1287 iterations 4
Cbc0038I Pass  18: suminf.    0.94359 (3) obj. -36.1287 iterations 5
Cbc0038I Pass  19: suminf.    0.24157 (2) obj. -36.1287 iterations 4
Cbc0038I Pass  20: suminf.    0.17306 (1) obj. -36.1287 iterations 1
Cbc0038I Pass  21: suminf.    0.52776 (2) obj. -36.1287 iterations 2
Cbc0038I Pass  22: suminf.    0.52776 (2) obj. -36.1287 iterations 0
Cbc0038I Pass  23: suminf.    2.06283 (6) obj. -36.1287 iterations 6
Cbc0038I Pass  24: suminf.    0.83018 (4) obj. -36.1287 iterations 5
Cbc0038I Pass  25: suminf.    0.27304 (2) obj. -36.1287 iterations 7
Cbc0038I Pass  26: suminf.    0.36322 (2) obj. -36.1287 iterations 3
Cbc0038I Pass  27: suminf.    0.94359 (3) obj. -36.1287 iterations 2
Cbc0038I Pass  28: suminf.    0.24157 (2) obj. -36.1287 iterations 4
Cbc0038I Pass  29: suminf.    0.17306 (1) obj. -36.1287 iterations 1
Cbc0038I Pass  30: suminf.    0.52776 (2) obj. -36.1287 iterations 2
Cbc0038I Pass  31: suminf.    0.52776 (2) obj. -36.1287 iterations 0
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.8276
Cbc0038I Pass  31: suminf.    0.66069 (2) obj. -43.8276 iterations 1
Cbc0038I Pass  32: suminf.    0.66069 (2) obj. -43.8276 iterations 0
Cbc0038I Pass  33: suminf.    0.49923 (2) obj. -43.8276 iterations 1
Cbc0038I Pass  34: suminf.    0.78420 (3) obj. -43.8276 iterations 3
Cbc0038I Pass  35: suminf.    0.49923 (2) obj. -43.8276 iterations 3
Cbc0038I Pass  36: suminf.    0.76617 (2) obj. -43.8276 iterations 2
Cbc0038I Pass  37: suminf.    2.26117 (6) obj. -43.8276 iterations 8
Cbc0038I Pass  38: suminf.    1.04041 (3) obj. -43.8276 iterations 3
Cbc0038I Pass  39: suminf.    1.04041 (3) obj. -43.8276 iterations 0
Cbc0038I Pass  40: suminf.    0.82514 (3) obj. -43.8276 iterations 4
Cbc0038I Pass  41: suminf.    0.66069 (2) obj. -43.8276 iterations 1
Cbc0038I Pass  42: suminf.    0.66069 (2) obj. -43.8276 iterations 0
Cbc0038I Pass  43: suminf.    0.49923 (2) obj. -43.8276 iterations 2
Cbc0038I Pass  44: suminf.    2.44008 (8) obj. -43.8276 iterations 9
Cbc0038I Pass  45: suminf.    1.20877 (4) obj. -43.8276 iterations 5
Cbc0038I Pass  46: suminf.    0.43147 (2) obj. -43.8276 iterations 4
Cbc0038I Pass  47: suminf.    0.92899 (3) obj. -43.8276 iterations 2
Cbc0038I Pass  48: suminf.    0.33819 (1) obj. -43.8276 iterations 3
Cbc0038I Pass  49: suminf.    1.86466 (5) obj. -43.8276 iterations 7
Cbc0038I Pass  50: suminf.    0.76082 (3) obj. -43.8276 iterations 6
Cbc0038I Pass  51: suminf.    2.30925 (6) obj. -43.8276 iterations 9
Cbc0038I Pass  52: suminf.    1.30882 (4) obj. -43.8276 iterations 2
Cbc0038I Pass  53: suminf.    2.47684 (6) obj. -43.8276 iterations 7
Cbc0038I Pass  54: suminf.    2.07407 (6) obj. -43.8276 iterations 6
Cbc0038I Pass  55: suminf.    0.66069 (2) obj. -43.8276 iterations 9
Cbc0038I Pass  56: suminf.    0.49923 (2) obj. -43.8276 iterations 2
Cbc0038I Pass  57: suminf.    1.76053 (7) obj. -43.8276 iterations 8
Cbc0038I Pass  58: suminf.    1.76053 (7) obj. -43.8276 iterations 0
Cbc0038I Pass  59: suminf.    1.23176 (4) obj. -43.8276 iterations 9
Cbc0038I Pass  60: suminf.    0.94198 (3) obj. -43.8276 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -31.8514 - took 0.03 seconds
Cbc0012I Integer solution of -31.85143 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 21 rows 14 columns
Cbc0031I 10 added rows had average density of 16.8
Cbc0013I At root node, 10 cuts changed objective from -74.623066 to -51.918962 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 952 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 826 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 82 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -32.40724 found by rounding after 2423 iterations and 6 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -32.40724, took 2449 iterations and 8 nodes (0.19 seconds)
Cbc0032I Strong branching done 68 times (584 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 42 (-3) columns and 320 (-41) elements
Clp1000I sum of infeasibilities 2.63344e-08 - average 7.1174e-10, 34 fixed columns
Coin0506I Presolve 7 (-30) rows, 8 (-34) columns and 26 (-294) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 15.879395
Clp0000I Optimal - objective value 15.879395
Coin0511I After Postsolve, objective 15.879395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0869369 - largest nonzero change 0 ( 0%) - largest zero change 1.8234569e-05
Clp0000I Optimal - objective value 95.026115
Clp0000I Optimal - objective value 95.026115
Clp0000I Optimal - objective value 95.026115
Coin0511I After Postsolve, objective 95.026115, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.02611534 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 42 columns (42 integer (42 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.263%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.02468
Cbc0038I Pass   1: suminf.    1.01045 (8) obj. -55.9084 iterations 6
Cbc0038I Pass   2: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Solution found of -14.7907
Cbc0038I Rounding solution of -20.0091 is better than previous of -14.7907

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 42 columns, reduced to 20 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20.0091 to -20.6584 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.651
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Pass   4: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Pass   5: suminf.    0.60490 (2) obj. -25.651 iterations 12
Cbc0038I Pass   6: suminf.    0.83979 (2) obj. -26.9551 iterations 3
Cbc0038I Pass   7: suminf.    0.00994 (1) obj. -25.651 iterations 2
Cbc0038I Solution found of -25.9837
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 42 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -25.9837 to -31.8514 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.5979
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   8: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Pass   9: suminf.    1.01045 (8) obj. -55.9084 iterations 0
Cbc0038I Pass  10: suminf.    1.42955 (6) obj. -39.5979 iterations 15
Cbc0038I Pass  11: suminf.    1.10774 (5) obj. -39.5979 iterations 4
Cbc0038I Pass  12: suminf.    0.98229 (5) obj. -39.5979 iterations 1
Cbc0038I Pass  13: suminf.    1.06833 (4) obj. -39.5979 iterations 8
Cbc0038I Pass  14: suminf.    1.06833 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  15: suminf.    0.52790 (4) obj. -39.5979 iterations 5
Cbc0038I Pass  16: suminf.    0.52790 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  17: suminf.    1.12038 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  18: suminf.    1.12038 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  19: suminf.    0.98043 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  20: suminf.    0.98043 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  21: suminf.    0.60799 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  22: suminf.    0.52790 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  23: suminf.    1.12038 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  24: suminf.    1.12038 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  25: suminf.    0.98043 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  26: suminf.    0.98043 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  27: suminf.    0.60799 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  28: suminf.    0.52790 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  29: suminf.    1.12038 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  30: suminf.    1.12038 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  31: suminf.    0.98043 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  32: suminf.    0.98043 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  33: suminf.    0.60799 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  34: suminf.    0.52790 (4) obj. -39.5979 iterations 1
Cbc0038I Pass  35: suminf.    1.12038 (4) obj. -39.5979 iterations 3
Cbc0038I Pass  36: suminf.    1.12038 (4) obj. -39.5979 iterations 0
Cbc0038I Pass  37: suminf.    0.98043 (4) obj. -39.5979 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 42 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -31.8514 - took 0.01 seconds
Cbc0012I Integer solution of -31.85143 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 42 columns, reduced to 20 rows 21 columns
Cbc0031I 20 added rows had average density of 12.1
Cbc0013I At root node, 20 cuts changed objective from -70.583536 to -33.859564 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1362 row cuts average 5.6 elements, 7 column cuts (7 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 448 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 186 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 86 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 303 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 260 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 76 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.735 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.85143 best solution, best possible -33.859554 (1.45 seconds)
Cbc0012I Integer solution of -32.40724 found by rounding after 1458 iterations and 5 nodes (1.57 seconds)
Cbc0001I Search completed - best objective -32.40724, took 1481 iterations and 6 nodes (1.58 seconds)
Cbc0032I Strong branching done 92 times (645 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 6 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.58

