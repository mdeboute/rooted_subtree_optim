Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 50 (-3) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 0.000770254 - average 8.95644e-06, 2 fixed columns
Coin0506I Presolve 82 (-4) rows, 48 (-2) columns and 252 (-12) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Coin0511I After Postsolve, objective 43.359718, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Coin0511I After Postsolve, objective 43.359718, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.35971761 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 50 columns (49 integer (49 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.663%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.0826
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.01156 iterations 27
Cbc0038I Solution found of 4.01156
Cbc0038I Relaxing continuous gives 4.01156
Cbc0038I Rounding solution of -8.92085 is better than previous of 4.01156

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 50 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -8.92085 to -14.3437 (0.03 seconds)
Cbc0038I Round again with cutoff of -17.2454
Cbc0038I Pass   2: suminf.    1.37795 (10) obj. -17.2454 iterations 11
Cbc0038I Pass   3: suminf.    1.37795 (10) obj. -17.2454 iterations 0
Cbc0038I Pass   4: suminf.    1.52919 (5) obj. -17.2454 iterations 16
Cbc0038I Pass   5: suminf.    0.85704 (4) obj. -17.2454 iterations 5
Cbc0038I Pass   6: suminf.    0.82050 (4) obj. -17.2454 iterations 2
Cbc0038I Pass   7: suminf.    1.38984 (4) obj. -17.2454 iterations 5
Cbc0038I Pass   8: suminf.    1.01142 (4) obj. -17.2454 iterations 1
Cbc0038I Pass   9: suminf.    0.94862 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  10: suminf.    1.20089 (4) obj. -17.2454 iterations 6
Cbc0038I Pass  11: suminf.    1.20089 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  12: suminf.    1.09390 (3) obj. -17.2454 iterations 4
Cbc0038I Pass  13: suminf.    0.87231 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  14: suminf.    1.25787 (4) obj. -17.2454 iterations 3
Cbc0038I Pass  15: suminf.    1.25787 (4) obj. -17.2454 iterations 0
Cbc0038I Pass  16: suminf.    1.03170 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  17: suminf.    0.94493 (4) obj. -17.2454 iterations 8
Cbc0038I Pass  18: suminf.    0.94493 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  19: suminf.    1.13636 (4) obj. -17.2454 iterations 7
Cbc0038I Pass  20: suminf.    1.13636 (4) obj. -17.2454 iterations 0
Cbc0038I Pass  21: suminf.    1.25838 (3) obj. -17.2454 iterations 4
Cbc0038I Pass  22: suminf.    0.82000 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  23: suminf.    1.20430 (5) obj. -17.2454 iterations 4
Cbc0038I Pass  24: suminf.    1.20111 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  25: suminf.    1.20247 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  26: suminf.    3.18978 (9) obj. -17.2454 iterations 15
Cbc0038I Pass  27: suminf.    2.01353 (6) obj. -17.2454 iterations 8
Cbc0038I Pass  28: suminf.    1.56891 (5) obj. -17.2454 iterations 2
Cbc0038I Pass  29: suminf.    1.00086 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  30: suminf.    1.25787 (4) obj. -17.2454 iterations 5
Cbc0038I Pass  31: suminf.    1.25787 (4) obj. -17.2454 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 50 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -14.3437 - took 0.05 seconds
Cbc0012I Integer solution of -14.34374 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 86 rows 50 columns, reduced to 53 rows 31 columns
Cbc0031I 14 added rows had average density of 40.214286
Cbc0013I At root node, 14 cuts changed objective from -43.359718 to -33.584289 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9849 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1798 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 137 row cuts average 49.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 12 nodes, 10 on tree, -14.34374 best solution, best possible -33.584176 (0.68 seconds)
Cbc0038I Full problem 86 rows 50 columns, reduced to 19 rows 16 columns
Cbc0001I Search completed - best objective -14.34374, took 8082 iterations and 90 nodes (0.79 seconds)
Cbc0032I Strong branching done 604 times (8282 iterations), fathomed 9 nodes and fixed 27 variables
Cbc0035I Maximum depth 12, 194 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-32) rows, 84 (-18) columns and 1067 (-511) elements
Clp1000I sum of infeasibilities 1.01449e-07 - average 1.40901e-09, 8 fixed columns
Coin0506I Presolve 65 (-7) rows, 76 (-8) columns and 869 (-198) elements
Clp0006I 0  Obj 35.411747 Dual inf 2.9657241 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 4.5156655 - largest nonzero change 2.9338226e-05 ( 0.0016981022%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 57.210679
Clp0000I Optimal - objective value 57.210679
Coin0511I After Postsolve, objective 57.210679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.210679
Clp0000I Optimal - objective value 57.210679
Clp0000I Optimal - objective value 57.210679
Clp0000I Optimal - objective value 57.210679
Coin0511I After Postsolve, objective 57.210679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.21067907 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 85 columns (85 integer (85 of which binary)) and 1072 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.797%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.95035
Cbc0038I Pass   1: suminf.    2.62519 (22) obj. -45.1097 iterations 12
Cbc0038I Pass   2: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass   3: suminf.    0.04878 (1) obj. -12.2479 iterations 21
Cbc0038I Solution found of -4.11659
Cbc0038I Rounding solution of -10.8496 is better than previous of -4.11659

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -14.8281
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass   5: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass   6: suminf.    0.96615 (10) obj. -22.0975 iterations 12
Cbc0038I Pass   7: suminf.    0.51506 (2) obj. -14.8281 iterations 17
Cbc0038I Pass   8: suminf.    0.51506 (2) obj. -14.8281 iterations 0
Cbc0038I Pass   9: suminf.    0.33547 (2) obj. -14.8281 iterations 3
Cbc0038I Pass  10: suminf.    1.49344 (6) obj. -14.8281 iterations 23
Cbc0038I Pass  11: suminf.    1.22196 (9) obj. -14.8281 iterations 7
Cbc0038I Pass  12: suminf.    0.81624 (4) obj. -14.8281 iterations 11
Cbc0038I Pass  13: suminf.    0.49080 (4) obj. -14.8281 iterations 2
Cbc0038I Pass  14: suminf.    0.81624 (4) obj. -14.8281 iterations 1
Cbc0038I Pass  15: suminf.    1.85887 (9) obj. -14.8281 iterations 13
Cbc0038I Pass  16: suminf.    1.17792 (8) obj. -14.8281 iterations 11
Cbc0038I Pass  17: suminf.    1.40167 (6) obj. -14.8281 iterations 7
Cbc0038I Pass  18: suminf.    1.40167 (6) obj. -14.8281 iterations 0
Cbc0038I Pass  19: suminf.    1.18244 (9) obj. -14.8281 iterations 3
Cbc0038I Pass  20: suminf.    1.16654 (5) obj. -14.8281 iterations 7
Cbc0038I Pass  21: suminf.    1.46158 (5) obj. -14.8281 iterations 1
Cbc0038I Pass  22: suminf.    1.46158 (5) obj. -14.8281 iterations 0
Cbc0038I Pass  23: suminf.    1.16654 (5) obj. -14.8281 iterations 3
Cbc0038I Pass  24: suminf.    2.67317 (14) obj. -14.8281 iterations 23
Cbc0038I Pass  25: suminf.    1.72141 (12) obj. -14.8281 iterations 6
Cbc0038I Pass  26: suminf.    1.47371 (7) obj. -14.8281 iterations 10
Cbc0038I Pass  27: suminf.    1.21589 (7) obj. -14.8281 iterations 1
Cbc0038I Pass  28: suminf.    0.66079 (4) obj. -14.9426 iterations 3
Cbc0038I Pass  29: suminf.    0.95224 (6) obj. -14.8281 iterations 3
Cbc0038I Pass  30: suminf.    1.92469 (12) obj. -14.8281 iterations 19
Cbc0038I Pass  31: suminf.    1.75887 (11) obj. -14.8281 iterations 4
Cbc0038I Pass  32: suminf.    2.12322 (8) obj. -14.8281 iterations 12
Cbc0038I Pass  33: suminf.    1.39535 (8) obj. -14.8281 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 28 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.11659 to -13.5796 (0.07 seconds)
Cbc0038I Round again with cutoff of -21.9892
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass  34: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass  35: suminf.    1.09152 (8) obj. -21.9892 iterations 15
Cbc0038I Pass  36: suminf.    0.59219 (9) obj. -21.9892 iterations 14
Cbc0038I Pass  37: suminf.    0.59219 (9) obj. -21.9892 iterations 0
Cbc0038I Pass  38: suminf.    1.35500 (6) obj. -21.9892 iterations 19
Cbc0038I Pass  39: suminf.    1.35500 (6) obj. -21.9892 iterations 0
Cbc0038I Pass  40: suminf.    1.41172 (6) obj. -21.9892 iterations 3
Cbc0038I Pass  41: suminf.    1.41172 (6) obj. -21.9892 iterations 1
Cbc0038I Pass  42: suminf.    1.35500 (6) obj. -21.9892 iterations 5
Cbc0038I Pass  43: suminf.    1.70788 (8) obj. -21.9892 iterations 12
Cbc0038I Pass  44: suminf.    0.84611 (6) obj. -21.9892 iterations 6
Cbc0038I Pass  45: suminf.    1.04763 (5) obj. -21.9892 iterations 12
Cbc0038I Pass  46: suminf.    1.04763 (5) obj. -21.9892 iterations 1
Cbc0038I Pass  47: suminf.    1.11887 (5) obj. -21.9892 iterations 1
Cbc0038I Pass  48: suminf.    1.11887 (5) obj. -21.9892 iterations 0
Cbc0038I Pass  49: suminf.    1.04763 (5) obj. -21.9892 iterations 4
Cbc0038I Pass  50: suminf.    2.54942 (14) obj. -21.9892 iterations 19
Cbc0038I Pass  51: suminf.    1.33673 (9) obj. -21.9892 iterations 6
Cbc0038I Pass  52: suminf.    1.13279 (9) obj. -21.9892 iterations 2
Cbc0038I Pass  53: suminf.    1.73886 (13) obj. -21.9892 iterations 18
Cbc0038I Pass  54: suminf.    1.56051 (10) obj. -23.4541 iterations 3
Cbc0038I Pass  55: suminf.    1.80015 (11) obj. -21.9892 iterations 6
Cbc0038I Pass  56: suminf.    1.47150 (9) obj. -22.4893 iterations 4
Cbc0038I Pass  57: suminf.    2.36394 (15) obj. -23.0183 iterations 11
Cbc0038I Pass  58: suminf.    1.61665 (14) obj. -21.9892 iterations 8
Cbc0038I Pass  59: suminf.    2.16260 (11) obj. -21.9892 iterations 11
Cbc0038I Pass  60: suminf.    2.16260 (11) obj. -21.9892 iterations 1
Cbc0038I Pass  61: suminf.    1.92826 (10) obj. -21.9892 iterations 5
Cbc0038I Pass  62: suminf.    1.92826 (10) obj. -21.9892 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -13.5796 - took 0.07 seconds
Cbc0012I Integer solution of -13.57959 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 73 rows 85 columns, reduced to 2 rows 6 columns
Cbc0031I 38 added rows had average density of 23.657895
Cbc0013I At root node, 38 cuts changed objective from -50.633629 to -18.4722 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7680 row cuts average 6.5 elements, 3 column cuts (3 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1585 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 923 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.603 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.57959 best solution, best possible -18.4722 (1.73 seconds)
Cbc0012I Integer solution of -14.30018 found by DiveCoefficient after 3067 iterations and 3 nodes (1.83 seconds)
Cbc0012I Integer solution of -14.30526 found by rounding after 3903 iterations and 37 nodes (2.01 seconds)
Cbc0012I Integer solution of -14.30831 found by rounding after 3966 iterations and 42 nodes (2.02 seconds)
Cbc0038I Full problem 73 rows 85 columns, reduced to 5 rows 9 columns
Cbc0016I Integer solution of -14.34374 found by strong branching after 4023 iterations and 48 nodes (2.04 seconds)
Cbc0001I Search completed - best objective -14.34374, took 4374 iterations and 68 nodes (2.09 seconds)
Cbc0032I Strong branching done 716 times (5166 iterations), fathomed 6 nodes and fixed 20 variables
Cbc0035I Maximum depth 12, 119 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       2.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 50 (-3) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 0.000770254 - average 8.95644e-06, 2 fixed columns
Coin0506I Presolve 82 (-4) rows, 48 (-2) columns and 252 (-12) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Coin0511I After Postsolve, objective 43.359718, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Coin0511I After Postsolve, objective 43.359718, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.35971761 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 50 columns (49 integer (49 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.663%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.0826
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.01156 iterations 27
Cbc0038I Solution found of 4.01156
Cbc0038I Relaxing continuous gives 4.01156
Cbc0038I Rounding solution of -8.92085 is better than previous of 4.01156

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 50 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -8.92085 to -14.3437 (0.03 seconds)
Cbc0038I Round again with cutoff of -17.2454
Cbc0038I Pass   2: suminf.    1.37795 (10) obj. -17.2454 iterations 11
Cbc0038I Pass   3: suminf.    1.37795 (10) obj. -17.2454 iterations 0
Cbc0038I Pass   4: suminf.    1.52919 (5) obj. -17.2454 iterations 16
Cbc0038I Pass   5: suminf.    0.85704 (4) obj. -17.2454 iterations 5
Cbc0038I Pass   6: suminf.    0.82050 (4) obj. -17.2454 iterations 2
Cbc0038I Pass   7: suminf.    1.38984 (4) obj. -17.2454 iterations 5
Cbc0038I Pass   8: suminf.    1.01142 (4) obj. -17.2454 iterations 1
Cbc0038I Pass   9: suminf.    0.94862 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  10: suminf.    1.20089 (4) obj. -17.2454 iterations 6
Cbc0038I Pass  11: suminf.    1.20089 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  12: suminf.    1.09390 (3) obj. -17.2454 iterations 4
Cbc0038I Pass  13: suminf.    0.87231 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  14: suminf.    1.25787 (4) obj. -17.2454 iterations 3
Cbc0038I Pass  15: suminf.    1.25787 (4) obj. -17.2454 iterations 0
Cbc0038I Pass  16: suminf.    1.03170 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  17: suminf.    0.94493 (4) obj. -17.2454 iterations 8
Cbc0038I Pass  18: suminf.    0.94493 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  19: suminf.    1.13636 (4) obj. -17.2454 iterations 7
Cbc0038I Pass  20: suminf.    1.13636 (4) obj. -17.2454 iterations 0
Cbc0038I Pass  21: suminf.    1.25838 (3) obj. -17.2454 iterations 4
Cbc0038I Pass  22: suminf.    0.82000 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  23: suminf.    1.20430 (5) obj. -17.2454 iterations 4
Cbc0038I Pass  24: suminf.    1.20111 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  25: suminf.    1.20247 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  26: suminf.    3.18978 (9) obj. -17.2454 iterations 15
Cbc0038I Pass  27: suminf.    2.01353 (6) obj. -17.2454 iterations 8
Cbc0038I Pass  28: suminf.    1.56891 (5) obj. -17.2454 iterations 2
Cbc0038I Pass  29: suminf.    1.00086 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  30: suminf.    1.25787 (4) obj. -17.2454 iterations 5
Cbc0038I Pass  31: suminf.    1.25787 (4) obj. -17.2454 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 50 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -14.3437 - took 0.05 seconds
Cbc0012I Integer solution of -14.34374 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 86 rows 50 columns, reduced to 53 rows 31 columns
Cbc0031I 14 added rows had average density of 40.214286
Cbc0013I At root node, 14 cuts changed objective from -43.359718 to -33.584289 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9849 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1798 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 137 row cuts average 49.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0010I After 15 nodes, 11 on tree, -14.34374 best solution, best possible -33.584176 (0.69 seconds)
Cbc0038I Full problem 86 rows 50 columns, reduced to 19 rows 16 columns
Cbc0001I Search completed - best objective -14.34374, took 8082 iterations and 90 nodes (0.79 seconds)
Cbc0032I Strong branching done 604 times (8282 iterations), fathomed 9 nodes and fixed 27 variables
Cbc0035I Maximum depth 12, 194 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.79

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-33) rows, 84 (-19) columns and 1067 (-512) elements
Clp1000I sum of infeasibilities 1.01449e-07 - average 1.40901e-09, 8 fixed columns
Coin0506I Presolve 65 (-7) rows, 76 (-8) columns and 869 (-198) elements
Clp0006I 0  Obj 35.411747 Dual inf 2.9657241 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 4.5156655 - largest nonzero change 2.9338226e-05 ( 0.0016981022%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 57.210679
Clp0000I Optimal - objective value 57.210679
Coin0511I After Postsolve, objective 57.210679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.210679
Clp0000I Optimal - objective value 57.210679
Clp0000I Optimal - objective value 57.210679
Clp0000I Optimal - objective value 57.210679
Coin0511I After Postsolve, objective 57.210679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.21067907 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 85 columns (85 integer (85 of which binary)) and 1072 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.797%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.95035
Cbc0038I Pass   1: suminf.    2.62519 (22) obj. -45.1097 iterations 12
Cbc0038I Pass   2: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass   3: suminf.    0.04878 (1) obj. -12.2479 iterations 21
Cbc0038I Solution found of -4.11659
Cbc0038I Rounding solution of -10.8496 is better than previous of -4.11659

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -14.8281
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass   5: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass   6: suminf.    0.96615 (10) obj. -22.0975 iterations 12
Cbc0038I Pass   7: suminf.    0.51506 (2) obj. -14.8281 iterations 17
Cbc0038I Pass   8: suminf.    0.51506 (2) obj. -14.8281 iterations 0
Cbc0038I Pass   9: suminf.    0.33547 (2) obj. -14.8281 iterations 3
Cbc0038I Pass  10: suminf.    1.49344 (6) obj. -14.8281 iterations 23
Cbc0038I Pass  11: suminf.    1.22196 (9) obj. -14.8281 iterations 7
Cbc0038I Pass  12: suminf.    0.81624 (4) obj. -14.8281 iterations 11
Cbc0038I Pass  13: suminf.    0.49080 (4) obj. -14.8281 iterations 2
Cbc0038I Pass  14: suminf.    0.81624 (4) obj. -14.8281 iterations 1
Cbc0038I Pass  15: suminf.    1.85887 (9) obj. -14.8281 iterations 13
Cbc0038I Pass  16: suminf.    1.17792 (8) obj. -14.8281 iterations 11
Cbc0038I Pass  17: suminf.    1.40167 (6) obj. -14.8281 iterations 7
Cbc0038I Pass  18: suminf.    1.40167 (6) obj. -14.8281 iterations 0
Cbc0038I Pass  19: suminf.    1.18244 (9) obj. -14.8281 iterations 3
Cbc0038I Pass  20: suminf.    1.16654 (5) obj. -14.8281 iterations 7
Cbc0038I Pass  21: suminf.    1.46158 (5) obj. -14.8281 iterations 1
Cbc0038I Pass  22: suminf.    1.46158 (5) obj. -14.8281 iterations 0
Cbc0038I Pass  23: suminf.    1.16654 (5) obj. -14.8281 iterations 3
Cbc0038I Pass  24: suminf.    2.67317 (14) obj. -14.8281 iterations 23
Cbc0038I Pass  25: suminf.    1.72141 (12) obj. -14.8281 iterations 6
Cbc0038I Pass  26: suminf.    1.47371 (7) obj. -14.8281 iterations 10
Cbc0038I Pass  27: suminf.    1.21589 (7) obj. -14.8281 iterations 1
Cbc0038I Pass  28: suminf.    0.66079 (4) obj. -14.9426 iterations 3
Cbc0038I Pass  29: suminf.    0.95224 (6) obj. -14.8281 iterations 3
Cbc0038I Pass  30: suminf.    1.92469 (12) obj. -14.8281 iterations 19
Cbc0038I Pass  31: suminf.    1.75887 (11) obj. -14.8281 iterations 4
Cbc0038I Pass  32: suminf.    2.12322 (8) obj. -14.8281 iterations 12
Cbc0038I Pass  33: suminf.    1.39535 (8) obj. -14.8281 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 28 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.11659 to -13.5796 (0.07 seconds)
Cbc0038I Round again with cutoff of -21.9892
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass  34: suminf.    2.62519 (22) obj. -45.1097 iterations 0
Cbc0038I Pass  35: suminf.    1.09152 (8) obj. -21.9892 iterations 15
Cbc0038I Pass  36: suminf.    0.59219 (9) obj. -21.9892 iterations 14
Cbc0038I Pass  37: suminf.    0.59219 (9) obj. -21.9892 iterations 0
Cbc0038I Pass  38: suminf.    1.35500 (6) obj. -21.9892 iterations 19
Cbc0038I Pass  39: suminf.    1.35500 (6) obj. -21.9892 iterations 0
Cbc0038I Pass  40: suminf.    1.41172 (6) obj. -21.9892 iterations 3
Cbc0038I Pass  41: suminf.    1.41172 (6) obj. -21.9892 iterations 1
Cbc0038I Pass  42: suminf.    1.35500 (6) obj. -21.9892 iterations 5
Cbc0038I Pass  43: suminf.    1.70788 (8) obj. -21.9892 iterations 12
Cbc0038I Pass  44: suminf.    0.84611 (6) obj. -21.9892 iterations 6
Cbc0038I Pass  45: suminf.    1.04763 (5) obj. -21.9892 iterations 12
Cbc0038I Pass  46: suminf.    1.04763 (5) obj. -21.9892 iterations 1
Cbc0038I Pass  47: suminf.    1.11887 (5) obj. -21.9892 iterations 1
Cbc0038I Pass  48: suminf.    1.11887 (5) obj. -21.9892 iterations 0
Cbc0038I Pass  49: suminf.    1.04763 (5) obj. -21.9892 iterations 4
Cbc0038I Pass  50: suminf.    2.54942 (14) obj. -21.9892 iterations 19
Cbc0038I Pass  51: suminf.    1.33673 (9) obj. -21.9892 iterations 6
Cbc0038I Pass  52: suminf.    1.13279 (9) obj. -21.9892 iterations 2
Cbc0038I Pass  53: suminf.    1.73886 (13) obj. -21.9892 iterations 18
Cbc0038I Pass  54: suminf.    1.56051 (10) obj. -23.4541 iterations 3
Cbc0038I Pass  55: suminf.    1.80015 (11) obj. -21.9892 iterations 6
Cbc0038I Pass  56: suminf.    1.47150 (9) obj. -22.4893 iterations 4
Cbc0038I Pass  57: suminf.    2.36394 (15) obj. -23.0183 iterations 11
Cbc0038I Pass  58: suminf.    1.61665 (14) obj. -21.9892 iterations 8
Cbc0038I Pass  59: suminf.    2.16260 (11) obj. -21.9892 iterations 11
Cbc0038I Pass  60: suminf.    2.16260 (11) obj. -21.9892 iterations 1
Cbc0038I Pass  61: suminf.    1.92826 (10) obj. -21.9892 iterations 5
Cbc0038I Pass  62: suminf.    1.92826 (10) obj. -21.9892 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -13.5796 - took 0.07 seconds
Cbc0012I Integer solution of -13.57959 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 73 rows 85 columns, reduced to 2 rows 6 columns
Cbc0031I 38 added rows had average density of 23.657895
Cbc0013I At root node, 38 cuts changed objective from -50.633629 to -18.4722 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7680 row cuts average 6.5 elements, 3 column cuts (3 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1585 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 923 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.57959 best solution, best possible -18.4722 (1.94 seconds)
Cbc0012I Integer solution of -14.30018 found by DiveCoefficient after 3067 iterations and 3 nodes (2.04 seconds)
Cbc0012I Integer solution of -14.30526 found by rounding after 3903 iterations and 37 nodes (2.20 seconds)
Cbc0012I Integer solution of -14.30831 found by rounding after 3966 iterations and 42 nodes (2.22 seconds)
Cbc0038I Full problem 73 rows 85 columns, reduced to 5 rows 9 columns
Cbc0016I Integer solution of -14.34374 found by strong branching after 4023 iterations and 48 nodes (2.23 seconds)
Cbc0001I Search completed - best objective -14.34374, took 4374 iterations and 68 nodes (2.28 seconds)
Cbc0032I Strong branching done 716 times (5166 iterations), fathomed 6 nodes and fixed 20 variables
Cbc0035I Maximum depth 12, 119 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.29

