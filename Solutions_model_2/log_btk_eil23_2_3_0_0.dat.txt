Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 21 (-4) columns and 110 (-25) elements
Clp1000I sum of infeasibilities 1.42553e-13 - average 3.75139e-15, 18 fixed columns
Coin0506I Presolve 4 (-34) rows, 3 (-18) columns and 8 (-102) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 6124.5659
Clp0000I Optimal - objective value 6124.5659
Coin0511I After Postsolve, objective 6124.5659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 6124.5659
Clp0000I Optimal - objective value 6124.5659
Clp0000I Optimal - objective value 6124.5659
Coin0511I After Postsolve, objective 6124.5659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6124.56589 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 21 columns (20 integer (20 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.532688
Cbc0038I Pass   1: suminf.    0.30303 (1) obj. -5316.48 iterations 3
Cbc0038I Solution found of -3073.55
Cbc0038I Relaxing continuous gives -3073.55
Cbc0038I Rounding solution of -3206.41 is better than previous of -3073.55

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -3431.38
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.30303 (1) obj. -5316.48 iterations 0
Cbc0038I Pass   3: suminf.    0.11119 (1) obj. -3431.38 iterations 1
Cbc0038I Pass   4: suminf.    0.24522 (2) obj. -3431.38 iterations 5
Cbc0038I Pass   5: suminf.    0.24522 (2) obj. -3431.38 iterations 1
Cbc0038I Pass   6: suminf.    0.49036 (1) obj. -4688.24 iterations 3
Cbc0038I Pass   7: suminf.    0.09980 (1) obj. -3431.38 iterations 1
Cbc0038I Pass   8: suminf.    0.07539 (1) obj. -3431.38 iterations 4
Cbc0038I Pass   9: suminf.    0.07539 (1) obj. -3431.38 iterations 2
Cbc0038I Pass  10: suminf.    0.21928 (1) obj. -3894.45 iterations 1
Cbc0038I Pass  11: suminf.    0.24683 (1) obj. -3981.29 iterations 3
Cbc0038I Pass  12: suminf.    0.07595 (1) obj. -3431.38 iterations 3
Cbc0038I Pass  13: suminf.    0.24683 (1) obj. -3981.29 iterations 1
Cbc0038I Pass  14: suminf.    0.39705 (3) obj. -3431.38 iterations 5
Cbc0038I Pass  15: suminf.    0.07485 (1) obj. -3431.38 iterations 2
Cbc0038I Pass  16: suminf.    0.35014 (1) obj. -4317.27 iterations 1
Cbc0038I Pass  17: suminf.    0.27343 (2) obj. -3431.38 iterations 7
Cbc0038I Pass  18: suminf.    0.46391 (1) obj. -4794.72 iterations 2
Cbc0038I Pass  19: suminf.    0.11244 (1) obj. -3431.38 iterations 1
Cbc0038I Pass  20: suminf.    0.08200 (1) obj. -3431.38 iterations 4
Cbc0038I Pass  21: suminf.    0.08200 (1) obj. -3431.38 iterations 1
Cbc0038I Pass  22: suminf.    0.45014 (1) obj. -4937.02 iterations 1
Cbc0038I Pass  23: suminf.    0.30193 (1) obj. -4160.05 iterations 3
Cbc0038I Pass  24: suminf.    0.07550 (1) obj. -3431.38 iterations 1
Cbc0038I Pass  25: suminf.    0.30193 (1) obj. -4160.05 iterations 1
Cbc0038I Pass  26: suminf.    0.06477 (1) obj. -3431.38 iterations 4
Cbc0038I Pass  27: suminf.    0.06477 (1) obj. -3431.38 iterations 1
Cbc0038I Pass  28: suminf.    0.16419 (1) obj. -3751.31 iterations 1
Cbc0038I Pass  29: suminf.    0.36126 (2) obj. -3796.05 iterations 11
Cbc0038I Pass  30: suminf.    0.14082 (2) obj. -3431.38 iterations 5
Cbc0038I Pass  31: suminf.    0.06777 (1) obj. -3500 iterations 3
Cbc0038I Rounding solution of -3283.72 is better than previous of -3206.41

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 21 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3836.32
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.30303 (1) obj. -5316.48 iterations 0
Cbc0038I Pass  32: suminf.    0.23703 (1) obj. -3836.32 iterations 1
Cbc0038I Pass  33: suminf.    0.23703 (1) obj. -3836.32 iterations 0
Cbc0038I Pass  34: suminf.    0.73238 (4) obj. -3836.32 iterations 6
Cbc0038I Pass  35: suminf.    0.41691 (2) obj. -3836.32 iterations 4
Cbc0038I Pass  36: suminf.    0.42149 (1) obj. -4515.47 iterations 2
Cbc0038I Pass  37: suminf.    0.21045 (1) obj. -3836.32 iterations 1
Cbc0038I Pass  38: suminf.    0.45629 (2) obj. -3836.32 iterations 9
Cbc0038I Pass  39: suminf.    0.45629 (2) obj. -3836.32 iterations 0
Cbc0038I Pass  40: suminf.    0.49649 (4) obj. -3836.32 iterations 3
Cbc0038I Pass  41: suminf.    0.49649 (4) obj. -3836.32 iterations 0
Cbc0038I Pass  42: suminf.    0.84988 (2) obj. -4464.33 iterations 4
Cbc0038I Pass  43: suminf.    0.47026 (2) obj. -3836.32 iterations 1
Cbc0038I Pass  44: suminf.    0.34573 (1) obj. -4261.47 iterations 2
Cbc0038I Pass  45: suminf.    0.21362 (1) obj. -3836.32 iterations 1
Cbc0038I Pass  46: suminf.    0.18955 (1) obj. -3836.32 iterations 5
Cbc0038I Pass  47: suminf.    0.18955 (1) obj. -3836.32 iterations 2
Cbc0038I Pass  48: suminf.    0.21488 (1) obj. -3917.81 iterations 1
Cbc0038I Pass  49: suminf.    0.58056 (3) obj. -3836.32 iterations 10
Cbc0038I Pass  50: suminf.    0.58056 (3) obj. -3836.32 iterations 1
Cbc0038I Pass  51: suminf.    0.56090 (4) obj. -3836.32 iterations 4
Cbc0038I Pass  52: suminf.    0.56090 (4) obj. -3836.32 iterations 0
Cbc0038I Pass  53: suminf.    0.86199 (2) obj. -4521.07 iterations 4
Cbc0038I Pass  54: suminf.    0.44807 (2) obj. -3836.32 iterations 1
Cbc0038I Pass  55: suminf.    0.35262 (1) obj. -4314.34 iterations 3
Cbc0038I Pass  56: suminf.    0.20408 (1) obj. -3836.32 iterations 1
Cbc0038I Pass  57: suminf.    0.42322 (3) obj. -3836.32 iterations 2
Cbc0038I Pass  58: suminf.    0.40395 (2) obj. -3836.32 iterations 5
Cbc0038I Pass  59: suminf.    0.40395 (2) obj. -3836.32 iterations 1
Cbc0038I Pass  60: suminf.    0.34573 (1) obj. -4292.49 iterations 2
Cbc0038I Rounding solution of -3285.9 is better than previous of -3283.72

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 21 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4322.26
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.30303 (1) obj. -5316.48 iterations 0
Cbc0038I Pass  61: suminf.    0.38802 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  62: suminf.    0.38802 (1) obj. -4322.26 iterations 0
Cbc0038I Pass  63: suminf.    0.82615 (2) obj. -4322.26 iterations 4
Cbc0038I Pass  64: suminf.    0.82615 (2) obj. -4322.26 iterations 2
Cbc0038I Pass  65: suminf.    0.34435 (1) obj. -5087.34 iterations 2
Cbc0038I Pass  66: suminf.    0.41790 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  67: suminf.    1.00000 (3) obj. -4322.26 iterations 5
Cbc0038I Pass  68: suminf.    0.38867 (1) obj. -4322.26 iterations 4
Cbc0038I Pass  69: suminf.    0.42837 (1) obj. -4450.03 iterations 1
Cbc0038I Pass  70: suminf.    0.49587 (1) obj. -4789.54 iterations 6
Cbc0038I Pass  71: suminf.    0.49587 (1) obj. -4789.54 iterations 2
Cbc0038I Pass  72: suminf.    0.35893 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  73: suminf.    0.76142 (3) obj. -4322.26 iterations 3
Cbc0038I Pass  74: suminf.    0.35568 (1) obj. -4322.26 iterations 3
Cbc0038I Pass  75: suminf.    0.40771 (1) obj. -4489.7 iterations 1
Cbc0038I Pass  76: suminf.    1.83895 (5) obj. -4322.26 iterations 4
Cbc0038I Pass  77: suminf.    1.33335 (6) obj. -4322.26 iterations 4
Cbc0038I Pass  78: suminf.    1.14420 (4) obj. -4322.26 iterations 4
Cbc0038I Pass  79: suminf.    0.43967 (1) obj. -4609.24 iterations 5
Cbc0038I Pass  80: suminf.    0.35049 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  81: suminf.    0.40983 (2) obj. -4322.26 iterations 4
Cbc0038I Pass  82: suminf.    0.43526 (1) obj. -4571.91 iterations 2
Cbc0038I Pass  83: suminf.    0.35768 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  84: suminf.    0.59388 (3) obj. -4322.26 iterations 4
Cbc0038I Pass  85: suminf.    0.59388 (3) obj. -4322.26 iterations 1
Cbc0038I Pass  86: suminf.    0.90799 (2) obj. -4870.74 iterations 2
Cbc0038I Pass  87: suminf.    0.48347 (1) obj. -4704.59 iterations 2
Cbc0038I Pass  88: suminf.    0.36467 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  89: suminf.    0.53906 (3) obj. -4322.26 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3285.9 - took 0.05 seconds
Cbc0012I Integer solution of -3285.8988 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 21 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -3330.2096 found by DiveCoefficient after 31 iterations and 0 nodes (0.03 seconds)
Cbc0031I 6 added rows had average density of 7.6666667
Cbc0013I At root node, 6 cuts changed objective from -5456.1076 to -3330.2096 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 6.7 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 15 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3330.20956, took 31 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-10) rows, 41 (-5) columns and 299 (-89) elements
Clp1000I sum of infeasibilities 3.36513e-11 - average 8.85561e-13, 38 fixed columns
Coin0506I Presolve 3 (-35) rows, 3 (-38) columns and 8 (-291) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 6088.3874
Clp0000I Optimal - objective value 6088.3874
Coin0511I After Postsolve, objective 6088.3874, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.16529069 - largest nonzero change 0 ( 0%) - largest zero change 2.7516307e-05
Clp0000I Optimal - objective value 6344.7512
Clp0000I Optimal - objective value 6344.7512
Clp0000I Optimal - objective value 6344.7512
Coin0511I After Postsolve, objective 6344.7512, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6344.751207 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 308 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.316%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.17556
Cbc0038I Pass   1: suminf.    0.30303 (1) obj. -5310.48 iterations 12
Cbc0038I Solution found of -3067.55
Cbc0038I Rounding solution of -3182 is better than previous of -3067.55

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3405.46
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.30303 (1) obj. -5310.48 iterations 0
Cbc0038I Pass   3: suminf.    0.10500 (1) obj. -3405.46 iterations 1
Cbc0038I Pass   4: suminf.    1.76368 (8) obj. -3405.46 iterations 11
Cbc0038I Pass   5: suminf.    1.76368 (8) obj. -3405.46 iterations 1
Cbc0038I Pass   6: suminf.    0.46832 (1) obj. -4757.58 iterations 8
Cbc0038I Pass   7: suminf.    0.11152 (1) obj. -3405.46 iterations 1
Cbc0038I Pass   8: suminf.    1.43371 (7) obj. -3405.46 iterations 7
Cbc0038I Pass   9: suminf.    1.25688 (6) obj. -3405.46 iterations 2
Cbc0038I Pass  10: suminf.    3.30943 (10) obj. -3405.46 iterations 7
Cbc0038I Pass  11: suminf.    2.83333 (9) obj. -3405.46 iterations 3
Cbc0038I Pass  12: suminf.    0.46970 (1) obj. -4623.17 iterations 9
Cbc0038I Pass  13: suminf.    0.09130 (1) obj. -3405.46 iterations 1
Cbc0038I Pass  14: suminf.    1.22612 (5) obj. -3405.46 iterations 6
Cbc0038I Pass  15: suminf.    1.22612 (5) obj. -3405.46 iterations 1
Cbc0038I Pass  16: suminf.    0.46970 (1) obj. -4635.17 iterations 5
Cbc0038I Pass  17: suminf.    0.08758 (1) obj. -3405.46 iterations 1
Cbc0038I Pass  18: suminf.    2.87147 (8) obj. -3405.46 iterations 9
Cbc0038I Pass  19: suminf.    1.91534 (6) obj. -3405.46 iterations 3
Cbc0038I Pass  20: suminf.    0.35950 (1) obj. -4286.26 iterations 6
Cbc0038I Pass  21: suminf.    0.08580 (1) obj. -3405.46 iterations 1
Cbc0038I Pass  22: suminf.    2.81317 (11) obj. -3405.46 iterations 15
Cbc0038I Pass  23: suminf.    1.65402 (7) obj. -3405.46 iterations 6
Cbc0038I Pass  24: suminf.    0.26061 (1) obj. -3997.25 iterations 7
Cbc0038I Pass  25: suminf.    0.07671 (1) obj. -3405.46 iterations 1
Cbc0038I Pass  26: suminf.    1.41483 (8) obj. -3405.46 iterations 10
Cbc0038I Pass  27: suminf.    0.80895 (4) obj. -3405.46 iterations 7
Cbc0038I Pass  28: suminf.    0.32259 (1) obj. -4148.5 iterations 4
Cbc0038I Pass  29: suminf.    0.09170 (1) obj. -3405.46 iterations 1
Cbc0038I Pass  30: suminf.    1.53359 (7) obj. -3405.46 iterations 8
Cbc0038I Pass  31: suminf.    0.89029 (5) obj. -3405.46 iterations 4
Cbc0038I Rounding solution of -3256.89 is better than previous of -3182

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -3256.89 to -3266.02 (0.02 seconds)
Cbc0038I Round again with cutoff of -3807.67
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.30303 (1) obj. -5310.48 iterations 0
Cbc0038I Pass  32: suminf.    0.22999 (1) obj. -3807.67 iterations 1
Cbc0038I Pass  33: suminf.    1.27393 (4) obj. -3807.67 iterations 4
Cbc0038I Pass  34: suminf.    0.30303 (1) obj. -5308.48 iterations 4
Cbc0038I Pass  35: suminf.    0.23061 (1) obj. -3807.67 iterations 1
Cbc0038I Pass  36: suminf.    1.54555 (6) obj. -3807.67 iterations 8
Cbc0038I Pass  37: suminf.    1.54555 (6) obj. -3807.67 iterations 2
Cbc0038I Pass  38: suminf.    0.39945 (1) obj. -4972.64 iterations 6
Cbc0038I Pass  39: suminf.    0.23855 (1) obj. -3807.67 iterations 1
Cbc0038I Pass  40: suminf.    1.29005 (4) obj. -3807.67 iterations 5
Cbc0038I Pass  41: suminf.    1.29005 (4) obj. -3807.67 iterations 2
Cbc0038I Pass  42: suminf.    1.99667 (6) obj. -3807.67 iterations 6
Cbc0038I Pass  43: suminf.    1.15022 (4) obj. -3807.67 iterations 3
Cbc0038I Pass  44: suminf.    0.33196 (1) obj. -4162.3 iterations 4
Cbc0038I Pass  45: suminf.    0.22176 (1) obj. -3807.67 iterations 1
Cbc0038I Pass  46: suminf.    2.81372 (9) obj. -3807.67 iterations 7
Cbc0038I Pass  47: suminf.    1.68788 (5) obj. -3807.67 iterations 3
Cbc0038I Pass  48: suminf.    2.23833 (7) obj. -3807.67 iterations 6
Cbc0038I Pass  49: suminf.    0.90083 (3) obj. -3807.67 iterations 5
Cbc0038I Pass  50: suminf.    0.23306 (1) obj. -3893.27 iterations 3
Cbc0038I Pass  51: suminf.    0.20646 (1) obj. -3807.67 iterations 1
Cbc0038I Pass  52: suminf.    1.17543 (4) obj. -3807.67 iterations 7
Cbc0038I Pass  53: suminf.    0.60778 (2) obj. -3807.67 iterations 3
Cbc0038I Pass  54: suminf.    0.35702 (1) obj. -4258.06 iterations 2
Cbc0038I Pass  55: suminf.    0.21707 (1) obj. -3807.67 iterations 1
Cbc0038I Pass  56: suminf.    1.28534 (4) obj. -3807.67 iterations 8
Cbc0038I Pass  57: suminf.    1.15169 (3) obj. -3807.67 iterations 3
Cbc0038I Pass  58: suminf.    0.65760 (2) obj. -3807.67 iterations 1
Cbc0038I Pass  59: suminf.    0.38017 (1) obj. -4314.57 iterations 2
Cbc0038I Pass  60: suminf.    0.22265 (1) obj. -3807.67 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3266.02 - took 0.02 seconds
Cbc0012I Integer solution of -3266.02 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 8 rows 10 columns
Cbc0012I Integer solution of -3330.2096 found by DiveCoefficient after 66 iterations and 0 nodes (0.04 seconds)
Cbc0031I 12 added rows had average density of 6.5833333
Cbc0013I At root node, 12 cuts changed objective from -5416.541 to -3330.2096 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 77 row cuts average 4.1 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 33 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3330.20956, took 66 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 21 (-4) columns and 110 (-25) elements
Clp1000I sum of infeasibilities 1.42553e-13 - average 3.75139e-15, 18 fixed columns
Coin0506I Presolve 4 (-34) rows, 3 (-18) columns and 8 (-102) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 6124.5659
Clp0000I Optimal - objective value 6124.5659
Coin0511I After Postsolve, objective 6124.5659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 6124.5659
Clp0000I Optimal - objective value 6124.5659
Clp0000I Optimal - objective value 6124.5659
Coin0511I After Postsolve, objective 6124.5659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6124.56589 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 21 columns (20 integer (20 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.532688
Cbc0038I Pass   1: suminf.    0.30303 (1) obj. -5316.48 iterations 3
Cbc0038I Solution found of -3073.55
Cbc0038I Relaxing continuous gives -3073.55
Cbc0038I Rounding solution of -3206.41 is better than previous of -3073.55

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3431.38
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.30303 (1) obj. -5316.48 iterations 0
Cbc0038I Pass   3: suminf.    0.11119 (1) obj. -3431.38 iterations 1
Cbc0038I Pass   4: suminf.    0.24522 (2) obj. -3431.38 iterations 5
Cbc0038I Pass   5: suminf.    0.24522 (2) obj. -3431.38 iterations 1
Cbc0038I Pass   6: suminf.    0.49036 (1) obj. -4688.24 iterations 3
Cbc0038I Pass   7: suminf.    0.09980 (1) obj. -3431.38 iterations 1
Cbc0038I Pass   8: suminf.    0.07539 (1) obj. -3431.38 iterations 4
Cbc0038I Pass   9: suminf.    0.07539 (1) obj. -3431.38 iterations 2
Cbc0038I Pass  10: suminf.    0.21928 (1) obj. -3894.45 iterations 1
Cbc0038I Pass  11: suminf.    0.24683 (1) obj. -3981.29 iterations 3
Cbc0038I Pass  12: suminf.    0.07595 (1) obj. -3431.38 iterations 3
Cbc0038I Pass  13: suminf.    0.24683 (1) obj. -3981.29 iterations 1
Cbc0038I Pass  14: suminf.    0.39705 (3) obj. -3431.38 iterations 5
Cbc0038I Pass  15: suminf.    0.07485 (1) obj. -3431.38 iterations 2
Cbc0038I Pass  16: suminf.    0.35014 (1) obj. -4317.27 iterations 1
Cbc0038I Pass  17: suminf.    0.27343 (2) obj. -3431.38 iterations 7
Cbc0038I Pass  18: suminf.    0.46391 (1) obj. -4794.72 iterations 2
Cbc0038I Pass  19: suminf.    0.11244 (1) obj. -3431.38 iterations 1
Cbc0038I Pass  20: suminf.    0.08200 (1) obj. -3431.38 iterations 4
Cbc0038I Pass  21: suminf.    0.08200 (1) obj. -3431.38 iterations 1
Cbc0038I Pass  22: suminf.    0.45014 (1) obj. -4937.02 iterations 1
Cbc0038I Pass  23: suminf.    0.30193 (1) obj. -4160.05 iterations 3
Cbc0038I Pass  24: suminf.    0.07550 (1) obj. -3431.38 iterations 1
Cbc0038I Pass  25: suminf.    0.30193 (1) obj. -4160.05 iterations 1
Cbc0038I Pass  26: suminf.    0.06477 (1) obj. -3431.38 iterations 4
Cbc0038I Pass  27: suminf.    0.06477 (1) obj. -3431.38 iterations 1
Cbc0038I Pass  28: suminf.    0.16419 (1) obj. -3751.31 iterations 1
Cbc0038I Pass  29: suminf.    0.36126 (2) obj. -3796.05 iterations 11
Cbc0038I Pass  30: suminf.    0.14082 (2) obj. -3431.38 iterations 5
Cbc0038I Pass  31: suminf.    0.06777 (1) obj. -3500 iterations 3
Cbc0038I Rounding solution of -3283.72 is better than previous of -3206.41

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 21 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3836.32
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.30303 (1) obj. -5316.48 iterations 0
Cbc0038I Pass  32: suminf.    0.23703 (1) obj. -3836.32 iterations 1
Cbc0038I Pass  33: suminf.    0.23703 (1) obj. -3836.32 iterations 0
Cbc0038I Pass  34: suminf.    0.73238 (4) obj. -3836.32 iterations 6
Cbc0038I Pass  35: suminf.    0.41691 (2) obj. -3836.32 iterations 4
Cbc0038I Pass  36: suminf.    0.42149 (1) obj. -4515.47 iterations 2
Cbc0038I Pass  37: suminf.    0.21045 (1) obj. -3836.32 iterations 1
Cbc0038I Pass  38: suminf.    0.45629 (2) obj. -3836.32 iterations 9
Cbc0038I Pass  39: suminf.    0.45629 (2) obj. -3836.32 iterations 0
Cbc0038I Pass  40: suminf.    0.49649 (4) obj. -3836.32 iterations 3
Cbc0038I Pass  41: suminf.    0.49649 (4) obj. -3836.32 iterations 0
Cbc0038I Pass  42: suminf.    0.84988 (2) obj. -4464.33 iterations 4
Cbc0038I Pass  43: suminf.    0.47026 (2) obj. -3836.32 iterations 1
Cbc0038I Pass  44: suminf.    0.34573 (1) obj. -4261.47 iterations 2
Cbc0038I Pass  45: suminf.    0.21362 (1) obj. -3836.32 iterations 1
Cbc0038I Pass  46: suminf.    0.18955 (1) obj. -3836.32 iterations 5
Cbc0038I Pass  47: suminf.    0.18955 (1) obj. -3836.32 iterations 2
Cbc0038I Pass  48: suminf.    0.21488 (1) obj. -3917.81 iterations 1
Cbc0038I Pass  49: suminf.    0.58056 (3) obj. -3836.32 iterations 10
Cbc0038I Pass  50: suminf.    0.58056 (3) obj. -3836.32 iterations 1
Cbc0038I Pass  51: suminf.    0.56090 (4) obj. -3836.32 iterations 4
Cbc0038I Pass  52: suminf.    0.56090 (4) obj. -3836.32 iterations 0
Cbc0038I Pass  53: suminf.    0.86199 (2) obj. -4521.07 iterations 4
Cbc0038I Pass  54: suminf.    0.44807 (2) obj. -3836.32 iterations 1
Cbc0038I Pass  55: suminf.    0.35262 (1) obj. -4314.34 iterations 3
Cbc0038I Pass  56: suminf.    0.20408 (1) obj. -3836.32 iterations 1
Cbc0038I Pass  57: suminf.    0.42322 (3) obj. -3836.32 iterations 2
Cbc0038I Pass  58: suminf.    0.40395 (2) obj. -3836.32 iterations 5
Cbc0038I Pass  59: suminf.    0.40395 (2) obj. -3836.32 iterations 1
Cbc0038I Pass  60: suminf.    0.34573 (1) obj. -4292.49 iterations 2
Cbc0038I Rounding solution of -3285.9 is better than previous of -3283.72

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 21 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4322.26
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.30303 (1) obj. -5316.48 iterations 0
Cbc0038I Pass  61: suminf.    0.38802 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  62: suminf.    0.38802 (1) obj. -4322.26 iterations 0
Cbc0038I Pass  63: suminf.    0.82615 (2) obj. -4322.26 iterations 4
Cbc0038I Pass  64: suminf.    0.82615 (2) obj. -4322.26 iterations 2
Cbc0038I Pass  65: suminf.    0.34435 (1) obj. -5087.34 iterations 2
Cbc0038I Pass  66: suminf.    0.41790 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  67: suminf.    1.00000 (3) obj. -4322.26 iterations 5
Cbc0038I Pass  68: suminf.    0.38867 (1) obj. -4322.26 iterations 4
Cbc0038I Pass  69: suminf.    0.42837 (1) obj. -4450.03 iterations 1
Cbc0038I Pass  70: suminf.    0.49587 (1) obj. -4789.54 iterations 6
Cbc0038I Pass  71: suminf.    0.49587 (1) obj. -4789.54 iterations 2
Cbc0038I Pass  72: suminf.    0.35893 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  73: suminf.    0.76142 (3) obj. -4322.26 iterations 3
Cbc0038I Pass  74: suminf.    0.35568 (1) obj. -4322.26 iterations 3
Cbc0038I Pass  75: suminf.    0.40771 (1) obj. -4489.7 iterations 1
Cbc0038I Pass  76: suminf.    1.83895 (5) obj. -4322.26 iterations 4
Cbc0038I Pass  77: suminf.    1.33335 (6) obj. -4322.26 iterations 4
Cbc0038I Pass  78: suminf.    1.14420 (4) obj. -4322.26 iterations 4
Cbc0038I Pass  79: suminf.    0.43967 (1) obj. -4609.24 iterations 5
Cbc0038I Pass  80: suminf.    0.35049 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  81: suminf.    0.40983 (2) obj. -4322.26 iterations 4
Cbc0038I Pass  82: suminf.    0.43526 (1) obj. -4571.91 iterations 2
Cbc0038I Pass  83: suminf.    0.35768 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  84: suminf.    0.59388 (3) obj. -4322.26 iterations 4
Cbc0038I Pass  85: suminf.    0.59388 (3) obj. -4322.26 iterations 1
Cbc0038I Pass  86: suminf.    0.90799 (2) obj. -4870.74 iterations 2
Cbc0038I Pass  87: suminf.    0.48347 (1) obj. -4704.59 iterations 2
Cbc0038I Pass  88: suminf.    0.36467 (1) obj. -4322.26 iterations 1
Cbc0038I Pass  89: suminf.    0.53906 (3) obj. -4322.26 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3285.9 - took 0.02 seconds
Cbc0012I Integer solution of -3285.8988 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 21 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -3330.2096 found by DiveCoefficient after 31 iterations and 0 nodes (0.03 seconds)
Cbc0031I 6 added rows had average density of 7.6666667
Cbc0013I At root node, 6 cuts changed objective from -5456.1076 to -3330.2096 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 6.7 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 15 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3330.20956, took 31 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 40 (-7) columns and 278 (-111) elements
Clp1000I sum of infeasibilities 6.00775e-12 - average 1.58099e-13, 25 fixed columns
Coin0506I Presolve 15 (-23) rows, 15 (-25) columns and 42 (-236) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 6276.6746
Clp0000I Optimal - objective value 6276.6746
Coin0511I After Postsolve, objective 6276.6746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 6276.6746
Clp0000I Optimal - objective value 6276.6746
Clp0000I Optimal - objective value 6276.6746
Coin0511I After Postsolve, objective 6276.6746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6276.674623 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 40 columns (40 integer (40 of which binary)) and 290 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.840%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.04906
Cbc0038I Pass   1: suminf.    0.30303 (1) obj. -5310.48 iterations 10
Cbc0038I Solution found of -3067.55
Cbc0038I Rounding solution of -3182 is better than previous of -3067.55

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3405.18
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.30303 (1) obj. -5310.48 iterations 0
Cbc0038I Pass   3: suminf.    0.10492 (1) obj. -3405.18 iterations 1
Cbc0038I Pass   4: suminf.    1.05941 (5) obj. -3405.18 iterations 9
Cbc0038I Pass   5: suminf.    1.05941 (5) obj. -3405.18 iterations 1
Cbc0038I Pass   6: suminf.    0.48898 (1) obj. -4787.39 iterations 5
Cbc0038I Pass   7: suminf.    0.08151 (1) obj. -3405.18 iterations 1
Cbc0038I Pass   8: suminf.    1.03581 (5) obj. -3405.18 iterations 6
Cbc0038I Pass   9: suminf.    1.03581 (5) obj. -3405.18 iterations 1
Cbc0038I Pass  10: suminf.    0.48898 (1) obj. -4784.39 iterations 5
Cbc0038I Pass  11: suminf.    0.08244 (1) obj. -3405.18 iterations 1
Cbc0038I Pass  12: suminf.    0.92170 (5) obj. -3405.18 iterations 8
Cbc0038I Pass  13: suminf.    0.92170 (5) obj. -3405.18 iterations 2
Cbc0038I Pass  14: suminf.    0.42700 (1) obj. -4901.8 iterations 5
Cbc0038I Pass  15: suminf.    0.10794 (1) obj. -3405.18 iterations 1
Cbc0038I Pass  16: suminf.    1.30498 (6) obj. -3405.18 iterations 10
Cbc0038I Pass  17: suminf.    1.30498 (6) obj. -3405.18 iterations 2
Cbc0038I Pass  18: suminf.    0.35950 (1) obj. -4240.3 iterations 6
Cbc0038I Pass  19: suminf.    0.10000 (1) obj. -3405.18 iterations 1
Cbc0038I Pass  20: suminf.    1.10404 (4) obj. -3405.18 iterations 9
Cbc0038I Pass  21: suminf.    0.66626 (3) obj. -3405.18 iterations 2
Cbc0038I Pass  22: suminf.    0.49835 (1) obj. -4700.64 iterations 3
Cbc0038I Pass  23: suminf.    0.09910 (1) obj. -3405.18 iterations 1
Cbc0038I Pass  24: suminf.    2.79923 (9) obj. -3405.18 iterations 15
Cbc0038I Pass  25: suminf.    0.95610 (4) obj. -3405.18 iterations 6
Cbc0038I Pass  26: suminf.    0.40771 (1) obj. -4394.41 iterations 4
Cbc0038I Pass  27: suminf.    0.10032 (1) obj. -3405.18 iterations 1
Cbc0038I Pass  28: suminf.    2.03951 (6) obj. -3405.18 iterations 11
Cbc0038I Pass  29: suminf.    1.61181 (5) obj. -3405.18 iterations 4
Cbc0038I Pass  30: suminf.    1.12546 (4) obj. -3405.18 iterations 1
Cbc0038I Pass  31: suminf.    0.40083 (1) obj. -4377.05 iterations 4
Cbc0038I Rounding solution of -3299.15 is better than previous of -3182

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -3299.15 to -3307.86 (0.02 seconds)
Cbc0038I Round again with cutoff of -3806.9
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.30303 (1) obj. -5310.48 iterations 0
Cbc0038I Pass  32: suminf.    0.22975 (1) obj. -3806.9 iterations 1
Cbc0038I Pass  33: suminf.    1.05930 (3) obj. -3806.9 iterations 6
Cbc0038I Pass  34: suminf.    0.65053 (2) obj. -3806.9 iterations 1
Cbc0038I Pass  35: suminf.    0.43636 (1) obj. -4932.75 iterations 2
Cbc0038I Pass  36: suminf.    0.21379 (1) obj. -3806.9 iterations 1
Cbc0038I Pass  37: suminf.    1.34153 (4) obj. -3806.9 iterations 6
Cbc0038I Pass  38: suminf.    1.07129 (3) obj. -3806.9 iterations 2
Cbc0038I Pass  39: suminf.    0.43636 (1) obj. -4930.75 iterations 3
Cbc0038I Pass  40: suminf.    0.21441 (1) obj. -3806.9 iterations 1
Cbc0038I Pass  41: suminf.    1.14563 (3) obj. -3806.9 iterations 8
Cbc0038I Pass  42: suminf.    0.21659 (1) obj. -3806.9 iterations 4
Cbc0038I Pass  43: suminf.    0.48457 (1) obj. -4768.6 iterations 1
Cbc0038I Pass  44: suminf.    0.90689 (2) obj. -4556.47 iterations 5
Cbc0038I Pass  45: suminf.    0.44017 (2) obj. -3806.9 iterations 2
Cbc0038I Pass  46: suminf.    0.45344 (1) obj. -4553.19 iterations 2
Cbc0038I Pass  47: suminf.    0.22154 (1) obj. -3806.9 iterations 1
Cbc0038I Pass  48: suminf.    2.19973 (7) obj. -3806.9 iterations 9
Cbc0038I Pass  49: suminf.    1.73675 (6) obj. -3806.9 iterations 1
Cbc0038I Pass  50: suminf.    0.37080 (1) obj. -4295.12 iterations 6
Cbc0038I Pass  51: suminf.    0.21909 (1) obj. -3806.9 iterations 1
Cbc0038I Pass  52: suminf.    1.26591 (4) obj. -3806.9 iterations 6
Cbc0038I Pass  53: suminf.    0.79916 (3) obj. -3806.9 iterations 2
Cbc0038I Pass  54: suminf.    0.25620 (1) obj. -3928.57 iterations 3
Cbc0038I Pass  55: suminf.    0.21839 (1) obj. -3806.9 iterations 1
Cbc0038I Pass  56: suminf.    0.79759 (3) obj. -3806.9 iterations 5
Cbc0038I Pass  57: suminf.    0.47144 (2) obj. -3806.9 iterations 3
Cbc0038I Pass  58: suminf.    0.40083 (1) obj. -4332.05 iterations 2
Cbc0038I Pass  59: suminf.    0.23764 (1) obj. -3806.9 iterations 1
Cbc0038I Pass  60: suminf.    2.17106 (7) obj. -3806.9 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3307.86 - took 0.02 seconds
Cbc0012I Integer solution of -3307.8623 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 40 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -3330.2096 found by DiveCoefficient after 43 iterations and 0 nodes (0.09 seconds)
Cbc0031I 11 added rows had average density of 5.1818182
Cbc0013I At root node, 11 cuts changed objective from -5413.7884 to -3330.2096 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 9.3 elements, 18 column cuts (18 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 25 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3330.20956, took 43 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

