Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 381 (-146) rows, 200 (-64) columns and 1147 (-398) elements
Clp1000I sum of infeasibilities 0.00172418 - average 4.5254e-06, 189 fixed columns
Coin0506I Presolve 11 (-370) rows, 11 (-189) columns and 37 (-1110) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Coin0511I After Postsolve, objective 215419.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14412985 - largest nonzero change 1.8840887e-05 ( 0.0017128079%) - largest zero change 2.9943738e-05
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Coin0511I After Postsolve, objective 215419.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215419.0857 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 381 rows, 200 columns (199 integer (199 of which binary)) and 1147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.473%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.30921
Cbc0038I Pass   1: suminf.    0.35052 (1) obj. -213139 iterations 33
Cbc0038I Solution found of -202364
Cbc0038I Relaxing continuous gives -202364
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -203670
Cbc0038I Reduced cost fixing fixed 92 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.35052 (1) obj. -213139 iterations 0
Cbc0038I Pass   3: suminf.    0.03525 (2) obj. -203670 iterations 7
Cbc0038I Pass   4: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass   5: suminf.    0.88567 (5) obj. -203670 iterations 33
Cbc0038I Pass   6: suminf.    0.80924 (3) obj. -203670 iterations 18
Cbc0038I Pass   7: suminf.    1.74984 (4) obj. -203670 iterations 15
Cbc0038I Pass   8: suminf.    0.82689 (2) obj. -203670 iterations 8
Cbc0038I Pass   9: suminf.    0.83871 (2) obj. -204126 iterations 5
Cbc0038I Pass  10: suminf.    0.21461 (3) obj. -203670 iterations 19
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -205385 iterations 10
Cbc0038I Solution found of -205385
Cbc0038I Relaxing continuous gives -205385
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -205385 to -209450 (0.03 seconds)
Cbc0038I Round again with cutoff of -210644
Cbc0038I Reduced cost fixing fixed 141 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.35052 (1) obj. -213139 iterations 0
Cbc0038I Pass  13: suminf.    0.22357 (2) obj. -210644 iterations 7
Cbc0038I Pass  14: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass  15: suminf.    0.54746 (3) obj. -210644 iterations 14
Cbc0038I Pass  16: suminf.    0.54746 (3) obj. -210644 iterations 11
Cbc0038I Pass  17: suminf.    0.26374 (2) obj. -215171 iterations 9
Cbc0038I Pass  18: suminf.    0.26374 (2) obj. -215171 iterations 0
Cbc0038I Pass  19: suminf.    1.21166 (3) obj. -210644 iterations 11
Cbc0038I Pass  20: suminf.    0.40620 (2) obj. -210644 iterations 10
Cbc0038I Pass  21: suminf.    0.34278 (1) obj. -210644 iterations 13
Cbc0038I Pass  22: suminf.    0.63212 (2) obj. -211993 iterations 9
Cbc0038I Pass  23: suminf.    0.66856 (2) obj. -210644 iterations 5
Cbc0038I Pass  24: suminf.    0.63245 (2) obj. -210644 iterations 11
Cbc0038I Pass  25: suminf.    0.26638 (3) obj. -210644 iterations 22
Cbc0038I Pass  26: suminf.    0.22357 (2) obj. -210644 iterations 12
Cbc0038I Pass  27: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass  28: suminf.    0.75237 (8) obj. -210644 iterations 38
Cbc0038I Pass  29: suminf.    0.26172 (4) obj. -210644 iterations 21
Cbc0038I Pass  30: suminf.    1.30141 (3) obj. -211879 iterations 22
Cbc0038I Pass  31: suminf.    1.26191 (3) obj. -210644 iterations 3
Cbc0038I Pass  32: suminf.    0.69778 (8) obj. -210644 iterations 18
Cbc0038I Pass  33: suminf.    0.58428 (6) obj. -210644 iterations 12
Cbc0038I Pass  34: suminf.    1.74516 (5) obj. -210644 iterations 27
Cbc0038I Pass  35: suminf.    0.95690 (4) obj. -210644 iterations 17
Cbc0038I Pass  36: suminf.    0.34278 (1) obj. -210644 iterations 12
Cbc0038I Pass  37: suminf.    0.63212 (2) obj. -211993 iterations 7
Cbc0038I Pass  38: suminf.    0.66856 (2) obj. -210644 iterations 3
Cbc0038I Pass  39: suminf.    0.63245 (2) obj. -210644 iterations 13
Cbc0038I Pass  40: suminf.    2.23727 (8) obj. -210644 iterations 18
Cbc0038I Pass  41: suminf.    2.14545 (6) obj. -210644 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -209450 - took 0.03 seconds
Cbc0012I Integer solution of -209449.81 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 381 rows 200 columns, reduced to 8 rows 10 columns
Cbc0031I 8 added rows had average density of 19
Cbc0013I At root node, 8 cuts changed objective from -215419.09 to -213852.52 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 52 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 195.1 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0010I After 12 nodes, 3 on tree, -209449.81 best solution, best possible -213148.51 (0.72 seconds)
Cbc0001I Search completed - best objective -209449.81, took 424 iterations and 18 nodes (0.77 seconds)
Cbc0032I Strong branching done 144 times (728 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 165 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 314 (-212) rows, 331 (-193) columns and 13412 (-22324) elements
Clp1000I sum of infeasibilities 1.11066e-05 - average 3.53715e-08, 274 fixed columns
Coin0506I Presolve 47 (-267) rows, 56 (-275) columns and 200 (-13212) elements
Clp0006I 0  Obj 195238.44 Primal inf 1.4432312e-06 (6) Dual inf 2.9076583e+09 (48)
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 2.2651238 - largest nonzero change 2.4877195e-05 ( 0.0014083952%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 215342.09
Clp0000I Optimal - objective value 215342.09
Coin0511I After Postsolve, objective 215342.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 215342.09 Dual inf 92015.445 (141)
Clp0014I Perturbing problem by 0.001% of 2.0622119 - largest nonzero change 2.1242831e-05 ( 0.0017128079%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 215566.03
Clp0000I Optimal - objective value 215566.03
Clp0000I Optimal - objective value 215566.03
Coin0511I After Postsolve, objective 215566.03, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215566.0311 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0004I processed model has 314 rows, 331 columns (331 integer (331 of which binary)) and 13412 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 114 integers unsatisfied sum - 4.1774
Cbc0038I Pass   1: suminf.    2.32595 (75) obj. -185050 iterations 55
Cbc0038I Pass   2: suminf.    2.32595 (75) obj. -185050 iterations 1
Cbc0038I Pass   3: suminf.    1.13080 (45) obj. -167845 iterations 19
Cbc0038I Pass   4: suminf.    0.75291 (35) obj. -167831 iterations 10
Cbc0038I Pass   5: suminf.    0.08789 (11) obj. -167802 iterations 24
Cbc0038I Solution found of -167792
Cbc0038I Rounding solution of -186776 is better than previous of -167792

Cbc0038I Before mini branch and bound, 215 integers at bound fixed and 0 continuous
Cbc0038I Full problem 314 rows 331 columns, reduced to 58 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -186776 to -202356 (0.12 seconds)
Cbc0038I Round again with cutoff of -203677
Cbc0038I Reduced cost fixing fixed 92 variables on major pass 2
Cbc0038I Pass   6: suminf.    2.76768 (96) obj. -203677 iterations 7
Cbc0038I Pass   7: suminf.    2.64411 (95) obj. -203677 iterations 4
Cbc0038I Pass   8: suminf.    2.49907 (94) obj. -203677 iterations 56
Cbc0038I Pass   9: suminf.    1.60333 (69) obj. -203677 iterations 40
Cbc0038I Pass  10: suminf.    1.42412 (68) obj. -203677 iterations 12
Cbc0038I Pass  11: suminf.    1.22041 (56) obj. -203677 iterations 23
Cbc0038I Pass  12: suminf.    1.18696 (56) obj. -203677 iterations 11
Cbc0038I Pass  13: suminf.    0.96950 (39) obj. -203677 iterations 28
Cbc0038I Pass  14: suminf.    0.93137 (39) obj. -203677 iterations 10
Cbc0038I Pass  15: suminf.    0.84005 (27) obj. -203677 iterations 22
Cbc0038I Pass  16: suminf.    0.79732 (27) obj. -203677 iterations 7
Cbc0038I Pass  17: suminf.    0.76104 (13) obj. -203677 iterations 21
Cbc0038I Pass  18: suminf.    0.71414 (13) obj. -203677 iterations 6
Cbc0038I Pass  19: suminf.    0.64075 (3) obj. -210782 iterations 19
Cbc0038I Pass  20: suminf.    0.30255 (3) obj. -207802 iterations 3
Cbc0038I Pass  21: suminf.    1.17816 (3) obj. -203677 iterations 11
Cbc0038I Pass  22: suminf.    2.59293 (28) obj. -203677 iterations 54
Cbc0038I Pass  23: suminf.    0.65523 (18) obj. -203677 iterations 34
Cbc0038I Pass  24: suminf.    0.61152 (18) obj. -203677 iterations 4
Cbc0038I Pass  25: suminf.    0.37552 (2) obj. -203677 iterations 20
Cbc0038I Pass  26: suminf.    0.32000 (1) obj. -207391 iterations 6
Cbc0038I Pass  27: suminf.    0.47677 (1) obj. -203677 iterations 6
Cbc0038I Pass  28: suminf.    0.33161 (2) obj. -211091 iterations 7
Cbc0038I Pass  29: suminf.    0.53182 (2) obj. -203677 iterations 4
Cbc0038I Pass  30: suminf.    1.68971 (24) obj. -203677 iterations 39
Cbc0038I Pass  31: suminf.    0.89094 (20) obj. -203677 iterations 28
Cbc0038I Pass  32: suminf.    1.10138 (4) obj. -203677 iterations 40
Cbc0038I Pass  33: suminf.    0.73473 (5) obj. -203677 iterations 11
Cbc0038I Pass  34: suminf.    0.48345 (2) obj. -213823 iterations 17
Cbc0038I Solution found of -208871
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 314 rows 331 columns, reduced to 96 rows 102 columns
Cbc0038I Mini branch and bound improved solution from -208871 to -208907 (0.22 seconds)
Cbc0038I Round again with cutoff of -210238
Cbc0038I Reduced cost fixing fixed 136 variables on major pass 3
Cbc0038I Pass  35: suminf.    3.56541 (97) obj. -210238 iterations 1
Cbc0038I Pass  36: suminf.    3.07576 (85) obj. -210238 iterations 20
Cbc0038I Pass  37: suminf.    3.05503 (87) obj. -210238 iterations 6
Cbc0038I Pass  38: suminf.    2.69475 (77) obj. -210238 iterations 15
Cbc0038I Pass  39: suminf.    2.67651 (79) obj. -210238 iterations 6
Cbc0038I Pass  40: suminf.    1.82652 (57) obj. -210238 iterations 30
Cbc0038I Pass  41: suminf.    1.50946 (56) obj. -213206 iterations 8
Cbc0038I Pass  42: suminf.    1.41293 (56) obj. -210238 iterations 6
Cbc0038I Pass  43: suminf.    1.15683 (44) obj. -213192 iterations 19
Cbc0038I Pass  44: suminf.    1.06074 (44) obj. -210238 iterations 8
Cbc0038I Pass  45: suminf.    0.87415 (32) obj. -213179 iterations 21
Cbc0038I Pass  46: suminf.    0.77847 (32) obj. -210238 iterations 10
Cbc0038I Pass  47: suminf.    0.58089 (17) obj. -213164 iterations 24
Cbc0038I Pass  48: suminf.    0.47521 (18) obj. -210238 iterations 14
Cbc0038I Pass  49: suminf.    0.38512 (2) obj. -214544 iterations 27
Cbc0038I Pass  50: suminf.    0.24560 (2) obj. -210238 iterations 17
Cbc0038I Pass  51: suminf.    1.41553 (37) obj. -210238 iterations 50
Cbc0038I Pass  52: suminf.    0.90830 (23) obj. -210238 iterations 26
Cbc0038I Pass  53: suminf.    0.36367 (2) obj. -213119 iterations 30
Cbc0038I Pass  54: suminf.    0.26512 (15) obj. -210238 iterations 13
Cbc0038I Pass  55: suminf.    1.23124 (3) obj. -214336 iterations 22
Cbc0038I Pass  56: suminf.    0.21359 (2) obj. -210238 iterations 15
Cbc0038I Pass  57: suminf.    0.89980 (21) obj. -210238 iterations 35
Cbc0038I Pass  58: suminf.    0.89794 (19) obj. -210238 iterations 10
Cbc0038I Pass  59: suminf.    1.44403 (3) obj. -213355 iterations 24
Cbc0038I Pass  60: suminf.    1.37818 (3) obj. -210238 iterations 4
Cbc0038I Pass  61: suminf.    0.58459 (3) obj. -210238 iterations 5
Cbc0038I Pass  62: suminf.    0.56238 (3) obj. -210238 iterations 10
Cbc0038I Pass  63: suminf.    0.54615 (2) obj. -210238 iterations 10
Cbc0038I Pass  64: suminf.    0.54713 (2) obj. -210238 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 0 continuous
Cbc0038I Full problem 314 rows 331 columns, reduced to 61 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -208907 to -209450 (0.29 seconds)
Cbc0038I Round again with cutoff of -211836
Cbc0038I Reduced cost fixing fixed 141 variables on major pass 4
Cbc0038I Pass  64: suminf.    3.54897 (95) obj. -211836 iterations 1
Cbc0038I Pass  65: suminf.    3.29638 (94) obj. -211836 iterations 8
Cbc0038I Pass  66: suminf.    2.92188 (83) obj. -211836 iterations 17
Cbc0038I Pass  67: suminf.    2.66766 (82) obj. -211836 iterations 7
Cbc0038I Pass  68: suminf.    1.90459 (61) obj. -211836 iterations 28
Cbc0038I Pass  69: suminf.    1.63206 (60) obj. -211836 iterations 6
Cbc0038I Pass  70: suminf.    1.15683 (44) obj. -213192 iterations 22
Cbc0038I Pass  71: suminf.    1.11273 (44) obj. -211836 iterations 7
Cbc0038I Pass  72: suminf.    0.78668 (28) obj. -213175 iterations 24
Cbc0038I Pass  73: suminf.    0.74312 (28) obj. -211836 iterations 10
Cbc0038I Pass  74: suminf.    0.59844 (18) obj. -213165 iterations 18
Cbc0038I Pass  75: suminf.    0.54257 (19) obj. -211836 iterations 10
Cbc0038I Pass  76: suminf.    0.38512 (2) obj. -214544 iterations 26
Cbc0038I Pass  77: suminf.    0.29544 (2) obj. -211836 iterations 17
Cbc0038I Pass  78: suminf.    0.98690 (43) obj. -211836 iterations 54
Cbc0038I Pass  79: suminf.    0.82973 (19) obj. -211836 iterations 18
Cbc0038I Pass  80: suminf.    0.35052 (1) obj. -213123 iterations 25
Cbc0038I Pass  81: suminf.    0.30212 (16) obj. -211836 iterations 8
Cbc0038I Pass  82: suminf.    0.38512 (2) obj. -214511 iterations 22
Cbc0038I Pass  83: suminf.    0.26664 (3) obj. -211836 iterations 11
Cbc0038I Pass  84: suminf.    0.39028 (2) obj. -213213 iterations 9
Cbc0038I Pass  85: suminf.    1.57271 (23) obj. -211836 iterations 37
Cbc0038I Pass  86: suminf.    1.21607 (19) obj. -211836 iterations 11
Cbc0038I Pass  87: suminf.    1.16357 (9) obj. -211836 iterations 30
Cbc0038I Pass  88: suminf.    1.16357 (9) obj. -211836 iterations 0
Cbc0038I Pass  89: suminf.    0.18503 (2) obj. -212433 iterations 13
Cbc0038I Pass  90: suminf.    0.11667 (3) obj. -211836 iterations 9
Cbc0038I Pass  91: suminf.    1.27005 (35) obj. -211836 iterations 44
Cbc0038I Pass  92: suminf.    0.88890 (19) obj. -211836 iterations 20
Cbc0038I Pass  93: suminf.    0.23661 (2) obj. -211836 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 314 rows 331 columns, reduced to 78 rows 82 columns
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -209450 - took 0.26 seconds
Cbc0012I Integer solution of -209449.81 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
Cbc0038I Full problem 314 rows 331 columns, reduced to 40 rows 43 columns
Cbc0031I 95 added rows had average density of 3.9578947
Cbc0013I At root node, 95 cuts changed objective from -215564.74 to -213984.18 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 1025 row cuts average 12.3 elements, 33 column cuts (33 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 105 row cuts average 96.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 33.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 170.3 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -209449.81 best solution, best possible -213984.18 (0.68 seconds)
Cbc0010I After 14 nodes, 1 on tree, -209449.81 best solution, best possible -213070.26 (1.45 seconds)
Cbc0038I Full problem 314 rows 331 columns, reduced to 0 rows 0 columns
Cbc0038I Full problem 409 rows 331 columns, reduced to 103 rows 109 columns
Cbc0044I Reduced cost fixing - 103 rows, 109 columns - restarting search
Cbc0012I Integer solution of -209449.81 found by Previous solution after 0 iterations and 0 nodes (2.01 seconds)
Cbc0038I Full problem 103 rows 109 columns, reduced to 40 rows 43 columns
Cbc0031I 40 added rows had average density of 20.35
Cbc0013I At root node, 40 cuts changed objective from -215471.51 to -213420.67 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 745 row cuts average 2.1 elements, 40 column cuts (40 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 401 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 91 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 272 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 344 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.635 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 264 row cuts average 4.9 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -209449.81 best solution, best possible -213420.67 (3.39 seconds)
Cbc0001I Search completed - best objective -209449.81, took 2786 iterations and 12 nodes (3.88 seconds)
Cbc0032I Strong branching done 316 times (5693 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Cbc0038I Probing was tried 140 times and created 1197 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Cbc0038I Gomory was tried 138 times and created 448 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
Cbc0038I Knapsack was tried 138 times and created 190 cuts of which 0 were active after adding rounds of cuts (0.081 seconds)
Cbc0038I Clique was tried 100 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Cbc0038I MixedIntegerRounding2 was tried 138 times and created 402 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 138 times and created 482 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Cbc0038I ZeroHalf was tried 138 times and created 121 cuts of which 0 were active after adding rounds of cuts (0.869 seconds)
Cbc0038I Stored from first was tried 138 times and created 340 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -209449.81, took 5317 iterations and 62 nodes (3.89 seconds)
Cbc0032I Strong branching done 740 times (12519 iterations), fathomed 4 nodes and fixed 30 variables
Cbc0035I Maximum depth 11, 204 variables fixed on reduced cost
Total time (CPU seconds):       2.77   (Wallclock seconds):       3.90

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 381 (-146) rows, 200 (-64) columns and 1147 (-398) elements
Clp1000I sum of infeasibilities 0.00172418 - average 4.5254e-06, 189 fixed columns
Coin0506I Presolve 11 (-370) rows, 11 (-189) columns and 37 (-1110) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Coin0511I After Postsolve, objective 215419.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14412985 - largest nonzero change 1.8840887e-05 ( 0.0017128079%) - largest zero change 2.9943738e-05
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Coin0511I After Postsolve, objective 215419.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215419.0857 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 381 rows, 200 columns (199 integer (199 of which binary)) and 1147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.473%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.30921
Cbc0038I Pass   1: suminf.    0.35052 (1) obj. -213139 iterations 33
Cbc0038I Solution found of -202364
Cbc0038I Relaxing continuous gives -202364
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -203670
Cbc0038I Reduced cost fixing fixed 92 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.35052 (1) obj. -213139 iterations 0
Cbc0038I Pass   3: suminf.    0.03525 (2) obj. -203670 iterations 7
Cbc0038I Pass   4: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass   5: suminf.    0.88567 (5) obj. -203670 iterations 33
Cbc0038I Pass   6: suminf.    0.80924 (3) obj. -203670 iterations 18
Cbc0038I Pass   7: suminf.    1.74984 (4) obj. -203670 iterations 15
Cbc0038I Pass   8: suminf.    0.82689 (2) obj. -203670 iterations 8
Cbc0038I Pass   9: suminf.    0.83871 (2) obj. -204126 iterations 5
Cbc0038I Pass  10: suminf.    0.21461 (3) obj. -203670 iterations 19
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -205385 iterations 10
Cbc0038I Solution found of -205385
Cbc0038I Relaxing continuous gives -205385
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -205385 to -209450 (0.02 seconds)
Cbc0038I Round again with cutoff of -210644
Cbc0038I Reduced cost fixing fixed 141 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.35052 (1) obj. -213139 iterations 0
Cbc0038I Pass  13: suminf.    0.22357 (2) obj. -210644 iterations 7
Cbc0038I Pass  14: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass  15: suminf.    0.54746 (3) obj. -210644 iterations 14
Cbc0038I Pass  16: suminf.    0.54746 (3) obj. -210644 iterations 11
Cbc0038I Pass  17: suminf.    0.26374 (2) obj. -215171 iterations 9
Cbc0038I Pass  18: suminf.    0.26374 (2) obj. -215171 iterations 0
Cbc0038I Pass  19: suminf.    1.21166 (3) obj. -210644 iterations 11
Cbc0038I Pass  20: suminf.    0.40620 (2) obj. -210644 iterations 10
Cbc0038I Pass  21: suminf.    0.34278 (1) obj. -210644 iterations 13
Cbc0038I Pass  22: suminf.    0.63212 (2) obj. -211993 iterations 9
Cbc0038I Pass  23: suminf.    0.66856 (2) obj. -210644 iterations 5
Cbc0038I Pass  24: suminf.    0.63245 (2) obj. -210644 iterations 11
Cbc0038I Pass  25: suminf.    0.26638 (3) obj. -210644 iterations 22
Cbc0038I Pass  26: suminf.    0.22357 (2) obj. -210644 iterations 12
Cbc0038I Pass  27: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass  28: suminf.    0.75237 (8) obj. -210644 iterations 38
Cbc0038I Pass  29: suminf.    0.26172 (4) obj. -210644 iterations 21
Cbc0038I Pass  30: suminf.    1.30141 (3) obj. -211879 iterations 22
Cbc0038I Pass  31: suminf.    1.26191 (3) obj. -210644 iterations 3
Cbc0038I Pass  32: suminf.    0.69778 (8) obj. -210644 iterations 18
Cbc0038I Pass  33: suminf.    0.58428 (6) obj. -210644 iterations 12
Cbc0038I Pass  34: suminf.    1.74516 (5) obj. -210644 iterations 27
Cbc0038I Pass  35: suminf.    0.95690 (4) obj. -210644 iterations 17
Cbc0038I Pass  36: suminf.    0.34278 (1) obj. -210644 iterations 12
Cbc0038I Pass  37: suminf.    0.63212 (2) obj. -211993 iterations 7
Cbc0038I Pass  38: suminf.    0.66856 (2) obj. -210644 iterations 3
Cbc0038I Pass  39: suminf.    0.63245 (2) obj. -210644 iterations 13
Cbc0038I Pass  40: suminf.    2.23727 (8) obj. -210644 iterations 18
Cbc0038I Pass  41: suminf.    2.14545 (6) obj. -210644 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -209450 - took 0.03 seconds
Cbc0012I Integer solution of -209449.81 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 381 rows 200 columns, reduced to 8 rows 10 columns
Cbc0031I 8 added rows had average density of 19
Cbc0013I At root node, 8 cuts changed objective from -215419.09 to -213852.52 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 52 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 195.1 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0010I After 11 nodes, 2 on tree, -209449.81 best solution, best possible -213148.51 (0.68 seconds)
Cbc0001I Search completed - best objective -209449.81, took 424 iterations and 18 nodes (0.77 seconds)
Cbc0032I Strong branching done 144 times (728 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 165 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 312 (-215) rows, 329 (-196) columns and 13237 (-22500) elements
Clp1000I sum of infeasibilities 1.62203e-05 - average 5.19881e-08, 270 fixed columns
Coin0506I Presolve 49 (-263) rows, 58 (-271) columns and 208 (-13029) elements
Clp0006I 0  Obj 195038.89 Primal inf 1.5682447e-05 (12) Dual inf 4.2189934e+09 (49)
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 2.4046647 - largest nonzero change 1.840062e-05 ( 0.0013165956%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 214328.09
Clp0000I Optimal - objective value 214328.09
Coin0511I After Postsolve, objective 214328.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 214328.09 Dual inf 79191.095 (140)
Clp0014I Perturbing problem by 0.001% of 2.0725534 - largest nonzero change 2.6724751e-05 ( 0.0021548148%) - largest zero change 2.9816722e-05
Clp0000I Optimal - objective value 215566.03
Clp0000I Optimal - objective value 215566.03
Clp0000I Optimal - objective value 215566.03
Coin0511I After Postsolve, objective 215566.03, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215566.0311 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.08

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 312 rows, 329 columns (329 integer (329 of which binary)) and 13237 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.935%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 114 integers unsatisfied sum - 4.21285
Cbc0038I Pass   1: suminf.    2.34916 (75) obj. -185050 iterations 56
Cbc0038I Pass   2: suminf.    2.34916 (75) obj. -185050 iterations 1
Cbc0038I Pass   3: suminf.    0.68935 (33) obj. -167828 iterations 33
Cbc0038I Pass   4: suminf.    0.03914 (5) obj. -167796 iterations 28
Cbc0038I Solution found of -167792
Cbc0038I Rounding solution of -186776 is better than previous of -167792

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 312 rows 329 columns, reduced to 58 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -186776 to -202356 (0.13 seconds)
Cbc0038I Round again with cutoff of -203677
Cbc0038I Reduced cost fixing fixed 90 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.79723 (96) obj. -203677 iterations 7
Cbc0038I Pass   6: suminf.    2.67341 (95) obj. -203677 iterations 3
Cbc0038I Pass   7: suminf.    2.60497 (96) obj. -203677 iterations 52
Cbc0038I Pass   8: suminf.    2.10859 (83) obj. -203677 iterations 25
Cbc0038I Pass   9: suminf.    1.93962 (82) obj. -203677 iterations 12
Cbc0038I Pass  10: suminf.    1.39767 (65) obj. -203677 iterations 27
Cbc0038I Pass  11: suminf.    1.36664 (65) obj. -203677 iterations 11
Cbc0038I Pass  12: suminf.    1.11316 (49) obj. -203677 iterations 27
Cbc0038I Pass  13: suminf.    1.07822 (49) obj. -203677 iterations 10
Cbc0038I Pass  14: suminf.    0.81995 (24) obj. -203677 iterations 35
Cbc0038I Pass  15: suminf.    0.77610 (24) obj. -203677 iterations 6
Cbc0038I Pass  16: suminf.    0.59416 (5) obj. -203677 iterations 27
Cbc0038I Pass  17: suminf.    0.32454 (5) obj. -207804 iterations 3
Cbc0038I Pass  18: suminf.    1.17816 (3) obj. -203677 iterations 12
Cbc0038I Pass  19: suminf.    0.30255 (3) obj. -207802 iterations 11
Cbc0038I Pass  20: suminf.    1.66967 (22) obj. -203677 iterations 50
Cbc0038I Pass  21: suminf.    0.97933 (22) obj. -203677 iterations 16
Cbc0038I Pass  22: suminf.    0.57355 (5) obj. -203677 iterations 27
Cbc0038I Pass  23: suminf.    0.57355 (5) obj. -203677 iterations 1
Cbc0038I Pass  24: suminf.    1.06452 (3) obj. -204589 iterations 14
Cbc0038I Pass  25: suminf.    0.44610 (4) obj. -203677 iterations 2
Cbc0038I Pass  26: suminf.    0.49209 (2) obj. -203677 iterations 10
Cbc0038I Pass  27: suminf.    2.64413 (27) obj. -203677 iterations 49
Cbc0038I Pass  28: suminf.    1.47425 (24) obj. -203677 iterations 22
Cbc0038I Pass  29: suminf.    0.65497 (6) obj. -203677 iterations 22
Cbc0038I Pass  30: suminf.    0.65345 (6) obj. -203677 iterations 4
Cbc0038I Pass  31: suminf.    0.56091 (2) obj. -203677 iterations 7
Cbc0038I Pass  32: suminf.    0.55959 (2) obj. -203726 iterations 4
Cbc0038I Pass  33: suminf.    1.80238 (32) obj. -203677 iterations 49
Cbc0038I Pass  34: suminf.    1.71471 (30) obj. -203677 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 312 rows 329 columns, reduced to 94 rows 100 columns
Cbc0038I Mini branch and bound improved solution from -202356 to -209450 (0.24 seconds)
Cbc0038I Round again with cutoff of -210673
Cbc0038I Reduced cost fixing fixed 135 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.61027 (97) obj. -210673 iterations 1
Cbc0038I Pass  35: suminf.    2.76103 (78) obj. -210673 iterations 24
Cbc0038I Pass  36: suminf.    2.75398 (80) obj. -210673 iterations 5
Cbc0038I Pass  37: suminf.    2.29393 (68) obj. -210673 iterations 17
Cbc0038I Pass  38: suminf.    2.28821 (70) obj. -210673 iterations 6
Cbc0038I Pass  39: suminf.    1.87110 (58) obj. -210673 iterations 17
Cbc0038I Pass  40: suminf.    1.56614 (57) obj. -213206 iterations 7
Cbc0038I Pass  41: suminf.    1.48372 (57) obj. -210673 iterations 5
Cbc0038I Pass  42: suminf.    0.99689 (37) obj. -213185 iterations 26
Cbc0038I Pass  43: suminf.    0.91516 (37) obj. -210673 iterations 7
Cbc0038I Pass  44: suminf.    0.69358 (23) obj. -213169 iterations 22
Cbc0038I Pass  45: suminf.    0.61236 (23) obj. -210673 iterations 11
Cbc0038I Pass  46: suminf.    0.53561 (14) obj. -213160 iterations 17
Cbc0038I Pass  47: suminf.    0.44360 (15) obj. -210673 iterations 12
Cbc0038I Pass  48: suminf.    0.38512 (2) obj. -214544 iterations 23
Cbc0038I Pass  49: suminf.    0.25916 (2) obj. -210673 iterations 15
Cbc0038I Pass  50: suminf.    1.00708 (24) obj. -210673 iterations 35
Cbc0038I Pass  51: suminf.    0.90168 (20) obj. -210673 iterations 11
Cbc0038I Pass  52: suminf.    0.41090 (5) obj. -213137 iterations 21
Cbc0038I Pass  53: suminf.    0.31960 (6) obj. -210673 iterations 7
Cbc0038I Pass  54: suminf.    0.38512 (2) obj. -214537 iterations 12
Cbc0038I Pass  55: suminf.    0.25937 (2) obj. -210673 iterations 8
Cbc0038I Pass  56: suminf.    0.86964 (24) obj. -210673 iterations 41
Cbc0038I Pass  57: suminf.    0.74533 (16) obj. -210673 iterations 16
Cbc0038I Pass  58: suminf.    0.45238 (7) obj. -213127 iterations 16
Cbc0038I Pass  59: suminf.    0.37623 (19) obj. -210673 iterations 7
Cbc0038I Pass  60: suminf.    1.23124 (3) obj. -214337 iterations 25
Cbc0038I Pass  61: suminf.    0.22530 (2) obj. -210673 iterations 14
Cbc0038I Pass  62: suminf.    2.66860 (36) obj. -210673 iterations 52
Cbc0038I Pass  63: suminf.    1.04697 (23) obj. -210673 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 179 integers at bound fixed and 0 continuous
Cbc0038I Full problem 312 rows 329 columns, reduced to 80 rows 84 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -209450 - took 0.20 seconds
Cbc0012I Integer solution of -209449.81 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 312 rows 329 columns, reduced to 40 rows 43 columns
Cbc0031I 82 added rows had average density of 15.073171
Cbc0013I At root node, 82 cuts changed objective from -215564.68 to -214005.54 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1105 row cuts average 10.9 elements, 33 column cuts (33 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 159 row cuts average 93.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 166.9 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -209449.81 best solution, best possible -214003.93 (0.70 seconds)
Cbc0001I Search completed - best objective -209449.81, took 1840 iterations and 24 nodes (0.96 seconds)
Cbc0032I Strong branching done 514 times (6706 iterations), fathomed 2 nodes and fixed 54 variables
Cbc0035I Maximum depth 5, 161 variables fixed on reduced cost
Total time (CPU seconds):       0.83   (Wallclock seconds):       0.97

