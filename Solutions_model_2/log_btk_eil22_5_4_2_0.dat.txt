Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 3.01641e-05 - average 8.37892e-07, 0 fixed columns
Coin0506I Presolve 36 (0) rows, 22 (0) columns and 108 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Coin0511I After Postsolve, objective 64.498719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Coin0511I After Postsolve, objective 64.498719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.49871871 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.636%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.1829
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.1141 iterations 18
Cbc0038I Solution found of 2.1141
Cbc0038I Relaxing continuous gives 2.1141
Cbc0038I Rounding solution of -17.2041 is better than previous of 2.1141

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -17.2041 to -28.2827 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.8727
Cbc0038I Pass   2: suminf.    1.59710 (5) obj. -31.8727 iterations 8
Cbc0038I Pass   3: suminf.    0.80903 (3) obj. -31.8727 iterations 6
Cbc0038I Pass   4: suminf.    0.74163 (2) obj. -31.8727 iterations 1
Cbc0038I Pass   5: suminf.    0.95037 (2) obj. -31.8727 iterations 2
Cbc0038I Pass   6: suminf.    0.70537 (2) obj. -31.8727 iterations 2
Cbc0038I Pass   7: suminf.    0.64178 (3) obj. -31.8727 iterations 4
Cbc0038I Pass   8: suminf.    0.32778 (1) obj. -31.8727 iterations 2
Cbc0038I Pass   9: suminf.    0.49678 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  10: suminf.    0.61090 (2) obj. -31.8727 iterations 8
Cbc0038I Pass  11: suminf.    0.61090 (2) obj. -31.8727 iterations 0
Cbc0038I Pass  12: suminf.    0.55251 (3) obj. -31.8727 iterations 6
Cbc0038I Pass  13: suminf.    0.48510 (2) obj. -31.8727 iterations 1
Cbc0038I Pass  14: suminf.    0.81363 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  15: suminf.    0.81363 (2) obj. -31.8727 iterations 0
Cbc0038I Pass  16: suminf.    2.15915 (5) obj. -31.8727 iterations 6
Cbc0038I Pass  17: suminf.    1.13317 (4) obj. -31.8727 iterations 3
Cbc0038I Pass  18: suminf.    1.03027 (4) obj. -31.8727 iterations 1
Cbc0038I Pass  19: suminf.    1.21685 (4) obj. -31.8727 iterations 7
Cbc0038I Pass  20: suminf.    0.55251 (3) obj. -31.8727 iterations 1
Cbc0038I Pass  21: suminf.    0.48510 (2) obj. -31.8727 iterations 1
Cbc0038I Pass  22: suminf.    0.81363 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  23: suminf.    1.19631 (4) obj. -31.8727 iterations 8
Cbc0038I Pass  24: suminf.    0.99170 (4) obj. -31.8727 iterations 1
Cbc0038I Pass  25: suminf.    0.60716 (3) obj. -31.8727 iterations 7
Cbc0038I Pass  26: suminf.    0.40364 (2) obj. -31.8727 iterations 3
Cbc0038I Pass  27: suminf.    0.50397 (4) obj. -31.8727 iterations 2
Cbc0038I Pass  28: suminf.    0.40364 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  29: suminf.    0.79937 (3) obj. -31.8727 iterations 2
Cbc0038I Pass  30: suminf.    0.64190 (2) obj. -31.8727 iterations 4
Cbc0038I Pass  31: suminf.    0.92275 (2) obj. -31.8727 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -28.2827 - took 0.05 seconds
Cbc0012I Integer solution of -28.28265 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 12 added rows had average density of 18.333333
Cbc0013I At root node, 12 cuts changed objective from -64.182123 to -45.333465 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1845 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 841 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -28.28265000000002, took 2720 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 62 times (642 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-10) rows, 42 (-2) columns and 318 (-42) elements
Clp1000I sum of infeasibilities 6.41182e-10 - average 1.78106e-11, 24 fixed columns
Coin0506I Presolve 12 (-24) rows, 18 (-24) columns and 54 (-264) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 2.7059938 - largest nonzero change 1.8670117e-05 ( 0.0009214854%) - largest zero change 1.896476e-05
Clp0000I Optimal - objective value -4.1124316
Clp0000I Optimal - objective value -4.1124316
Coin0511I After Postsolve, objective -4.1124316, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7835377 - largest nonzero change 2.8771339e-05 ( 0.001451563%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 86.636841
Clp0000I Optimal - objective value 86.636841
Clp0000I Optimal - objective value 86.636841
Coin0511I After Postsolve, objective 86.636841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.63684119 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 321 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.067%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.6059
Cbc0038I Pass   1: suminf.    2.22740 (12) obj. -61.2652 iterations 3
Cbc0038I Pass   2: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Solution found of -6.34855
Cbc0038I Rounding solution of -14.8243 is better than previous of -6.34855

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -14.8243 to -25.6826 (0.01 seconds)
Cbc0038I Round again with cutoff of -30.5014
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Pass   4: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Pass   5: suminf.    0.81162 (6) obj. -30.5014 iterations 14
Cbc0038I Pass   6: suminf.    0.81162 (6) obj. -30.5014 iterations 0
Cbc0038I Pass   7: suminf.    0.49285 (2) obj. -30.5014 iterations 10
Cbc0038I Pass   8: suminf.    0.92874 (3) obj. -40.055 iterations 2
Cbc0038I Pass   9: suminf.    0.33877 (2) obj. -30.5014 iterations 8
Cbc0038I Pass  10: suminf.    0.33877 (2) obj. -30.5014 iterations 0
Cbc0038I Pass  11: suminf.    0.95769 (3) obj. -37.4239 iterations 3
Cbc0038I Pass  12: suminf.    0.30000 (1) obj. -35.4826 iterations 2
Cbc0038I Pass  13: suminf.    1.06667 (5) obj. -30.5014 iterations 4
Cbc0038I Pass  14: suminf.    1.00640 (4) obj. -30.5014 iterations 2
Cbc0038I Pass  15: suminf.    1.84728 (8) obj. -30.5014 iterations 11
Cbc0038I Pass  16: suminf.    1.58889 (7) obj. -33.0853 iterations 4
Cbc0038I Pass  17: suminf.    1.25706 (5) obj. -30.5014 iterations 8
Cbc0038I Pass  18: suminf.    1.18205 (4) obj. -32.598 iterations 2
Cbc0038I Pass  19: suminf.    0.97834 (4) obj. -30.5014 iterations 9
Cbc0038I Pass  20: suminf.    0.97834 (4) obj. -30.5014 iterations 1
Cbc0038I Pass  21: suminf.    0.68358 (2) obj. -30.5014 iterations 6
Cbc0038I Pass  22: suminf.    0.57778 (2) obj. -31.9826 iterations 2
Cbc0038I Pass  23: suminf.    0.80628 (3) obj. -30.5014 iterations 5
Cbc0038I Pass  24: suminf.    0.80628 (3) obj. -30.5014 iterations 0
Cbc0038I Pass  25: suminf.    1.17070 (4) obj. -30.5014 iterations 4
Cbc0038I Pass  26: suminf.    0.97834 (4) obj. -30.5014 iterations 9
Cbc0038I Pass  27: suminf.    0.97834 (4) obj. -30.5014 iterations 1
Cbc0038I Pass  28: suminf.    0.68358 (2) obj. -30.5014 iterations 6
Cbc0038I Pass  29: suminf.    0.57778 (2) obj. -31.9826 iterations 2
Cbc0038I Pass  30: suminf.    0.80628 (3) obj. -30.5014 iterations 5
Cbc0038I Pass  31: suminf.    0.80628 (3) obj. -30.5014 iterations 0
Cbc0038I Pass  32: suminf.    1.17070 (4) obj. -30.5014 iterations 4
Cbc0038I Rounding solution of -28.2827 is better than previous of -25.6826

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -39.175
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Pass  33: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Pass  34: suminf.    1.55916 (6) obj. -39.175 iterations 13
Cbc0038I Pass  35: suminf.    1.55811 (6) obj. -39.3874 iterations 1
Cbc0038I Pass  36: suminf.    0.79890 (3) obj. -39.175 iterations 5
Cbc0038I Pass  37: suminf.    0.79890 (3) obj. -39.175 iterations 0
Cbc0038I Pass  38: suminf.    1.07596 (4) obj. -39.175 iterations 2
Cbc0038I Pass  39: suminf.    1.00554 (3) obj. -39.175 iterations 9
Cbc0038I Pass  40: suminf.    0.92874 (3) obj. -40.055 iterations 2
Cbc0038I Pass  41: suminf.    1.00554 (3) obj. -39.175 iterations 2
Cbc0038I Pass  42: suminf.    2.06938 (7) obj. -39.175 iterations 6
Cbc0038I Pass  43: suminf.    1.32752 (4) obj. -39.175 iterations 2
Cbc0038I Pass  44: suminf.    0.67613 (3) obj. -39.175 iterations 2
Cbc0038I Pass  45: suminf.    0.64457 (2) obj. -39.175 iterations 3
Cbc0038I Pass  46: suminf.    0.47092 (2) obj. -39.175 iterations 1
Cbc0038I Pass  47: suminf.    1.45699 (6) obj. -39.175 iterations 10
Cbc0038I Pass  48: suminf.    1.12361 (4) obj. -39.4471 iterations 2
Cbc0038I Pass  49: suminf.    1.13421 (4) obj. -39.175 iterations 6
Cbc0038I Pass  50: suminf.    1.01173 (4) obj. -40.2773 iterations 2
Cbc0038I Pass  51: suminf.    1.23800 (5) obj. -39.175 iterations 5
Cbc0038I Pass  52: suminf.    0.88210 (3) obj. -39.4069 iterations 5
Cbc0038I Pass  53: suminf.    3.10508 (10) obj. -39.175 iterations 11
Cbc0038I Pass  54: suminf.    1.80932 (8) obj. -39.175 iterations 2
Cbc0038I Pass  55: suminf.    1.75860 (7) obj. -39.175 iterations 4
Cbc0038I Pass  56: suminf.    1.30736 (4) obj. -39.175 iterations 6
Cbc0038I Pass  57: suminf.    1.30736 (4) obj. -39.175 iterations 0
Cbc0038I Pass  58: suminf.    1.06107 (5) obj. -39.175 iterations 3
Cbc0038I Pass  59: suminf.    1.01173 (4) obj. -39.2773 iterations 3
Cbc0038I Pass  60: suminf.    1.12689 (5) obj. -39.175 iterations 4
Cbc0038I Pass  61: suminf.    0.99246 (5) obj. -39.175 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -28.2827 - took 0.02 seconds
Cbc0012I Integer solution of -28.28265 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 2 rows 3 columns
Cbc0031I 15 added rows had average density of 12
Cbc0013I At root node, 15 cuts changed objective from -73.8694 to -28.585137 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 496 row cuts average 2.8 elements, 10 column cuts (10 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 431 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 98 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 299 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 199 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.807 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.28265 best solution, best possible -28.584296 (1.58 seconds)
Cbc0001I Search completed - best objective -28.28265000000002, took 1321 iterations and 2 nodes (1.58 seconds)
Cbc0032I Strong branching done 20 times (137 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 3.01641e-05 - average 8.37892e-07, 0 fixed columns
Coin0506I Presolve 36 (0) rows, 22 (0) columns and 108 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Coin0511I After Postsolve, objective 64.498719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Coin0511I After Postsolve, objective 64.498719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.49871871 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.636%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.1829
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.1141 iterations 18
Cbc0038I Solution found of 2.1141
Cbc0038I Relaxing continuous gives 2.1141
Cbc0038I Rounding solution of -17.2041 is better than previous of 2.1141

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -17.2041 to -28.2827 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.8727
Cbc0038I Pass   2: suminf.    1.59710 (5) obj. -31.8727 iterations 8
Cbc0038I Pass   3: suminf.    0.80903 (3) obj. -31.8727 iterations 6
Cbc0038I Pass   4: suminf.    0.74163 (2) obj. -31.8727 iterations 1
Cbc0038I Pass   5: suminf.    0.95037 (2) obj. -31.8727 iterations 2
Cbc0038I Pass   6: suminf.    0.70537 (2) obj. -31.8727 iterations 2
Cbc0038I Pass   7: suminf.    0.64178 (3) obj. -31.8727 iterations 4
Cbc0038I Pass   8: suminf.    0.32778 (1) obj. -31.8727 iterations 2
Cbc0038I Pass   9: suminf.    0.49678 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  10: suminf.    0.61090 (2) obj. -31.8727 iterations 8
Cbc0038I Pass  11: suminf.    0.61090 (2) obj. -31.8727 iterations 0
Cbc0038I Pass  12: suminf.    0.55251 (3) obj. -31.8727 iterations 6
Cbc0038I Pass  13: suminf.    0.48510 (2) obj. -31.8727 iterations 1
Cbc0038I Pass  14: suminf.    0.81363 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  15: suminf.    0.81363 (2) obj. -31.8727 iterations 0
Cbc0038I Pass  16: suminf.    2.15915 (5) obj. -31.8727 iterations 6
Cbc0038I Pass  17: suminf.    1.13317 (4) obj. -31.8727 iterations 3
Cbc0038I Pass  18: suminf.    1.03027 (4) obj. -31.8727 iterations 1
Cbc0038I Pass  19: suminf.    1.21685 (4) obj. -31.8727 iterations 7
Cbc0038I Pass  20: suminf.    0.55251 (3) obj. -31.8727 iterations 1
Cbc0038I Pass  21: suminf.    0.48510 (2) obj. -31.8727 iterations 1
Cbc0038I Pass  22: suminf.    0.81363 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  23: suminf.    1.19631 (4) obj. -31.8727 iterations 8
Cbc0038I Pass  24: suminf.    0.99170 (4) obj. -31.8727 iterations 1
Cbc0038I Pass  25: suminf.    0.60716 (3) obj. -31.8727 iterations 7
Cbc0038I Pass  26: suminf.    0.40364 (2) obj. -31.8727 iterations 3
Cbc0038I Pass  27: suminf.    0.50397 (4) obj. -31.8727 iterations 2
Cbc0038I Pass  28: suminf.    0.40364 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  29: suminf.    0.79937 (3) obj. -31.8727 iterations 2
Cbc0038I Pass  30: suminf.    0.64190 (2) obj. -31.8727 iterations 4
Cbc0038I Pass  31: suminf.    0.92275 (2) obj. -31.8727 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -28.2827 - took 0.05 seconds
Cbc0012I Integer solution of -28.28265 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 18.333333
Cbc0013I At root node, 12 cuts changed objective from -64.182123 to -45.333465 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1845 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 841 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -28.28265000000002, took 2720 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 62 times (642 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 42 (-3) columns and 318 (-43) elements
Clp1000I sum of infeasibilities 6.41182e-10 - average 1.78106e-11, 24 fixed columns
Coin0506I Presolve 12 (-24) rows, 18 (-24) columns and 54 (-264) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 2.7059938 - largest nonzero change 1.8670117e-05 ( 0.0009214854%) - largest zero change 1.896476e-05
Clp0000I Optimal - objective value -4.1124316
Clp0000I Optimal - objective value -4.1124316
Coin0511I After Postsolve, objective -4.1124316, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7835377 - largest nonzero change 2.8771339e-05 ( 0.001451563%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 86.636841
Clp0000I Optimal - objective value 86.636841
Clp0000I Optimal - objective value 86.636841
Coin0511I After Postsolve, objective 86.636841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.63684119 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 321 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.067%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.6059
Cbc0038I Pass   1: suminf.    2.22740 (12) obj. -61.2652 iterations 3
Cbc0038I Pass   2: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Solution found of -6.34855
Cbc0038I Rounding solution of -14.8243 is better than previous of -6.34855

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -14.8243 to -25.6826 (0.01 seconds)
Cbc0038I Round again with cutoff of -30.5014
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Pass   4: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Pass   5: suminf.    0.81162 (6) obj. -30.5014 iterations 14
Cbc0038I Pass   6: suminf.    0.81162 (6) obj. -30.5014 iterations 0
Cbc0038I Pass   7: suminf.    0.49285 (2) obj. -30.5014 iterations 10
Cbc0038I Pass   8: suminf.    0.92874 (3) obj. -40.055 iterations 2
Cbc0038I Pass   9: suminf.    0.33877 (2) obj. -30.5014 iterations 8
Cbc0038I Pass  10: suminf.    0.33877 (2) obj. -30.5014 iterations 0
Cbc0038I Pass  11: suminf.    0.95769 (3) obj. -37.4239 iterations 3
Cbc0038I Pass  12: suminf.    0.30000 (1) obj. -35.4826 iterations 2
Cbc0038I Pass  13: suminf.    1.06667 (5) obj. -30.5014 iterations 4
Cbc0038I Pass  14: suminf.    1.00640 (4) obj. -30.5014 iterations 2
Cbc0038I Pass  15: suminf.    1.84728 (8) obj. -30.5014 iterations 11
Cbc0038I Pass  16: suminf.    1.58889 (7) obj. -33.0853 iterations 4
Cbc0038I Pass  17: suminf.    1.25706 (5) obj. -30.5014 iterations 8
Cbc0038I Pass  18: suminf.    1.18205 (4) obj. -32.598 iterations 2
Cbc0038I Pass  19: suminf.    0.97834 (4) obj. -30.5014 iterations 9
Cbc0038I Pass  20: suminf.    0.97834 (4) obj. -30.5014 iterations 1
Cbc0038I Pass  21: suminf.    0.68358 (2) obj. -30.5014 iterations 6
Cbc0038I Pass  22: suminf.    0.57778 (2) obj. -31.9826 iterations 2
Cbc0038I Pass  23: suminf.    0.80628 (3) obj. -30.5014 iterations 5
Cbc0038I Pass  24: suminf.    0.80628 (3) obj. -30.5014 iterations 0
Cbc0038I Pass  25: suminf.    1.17070 (4) obj. -30.5014 iterations 4
Cbc0038I Pass  26: suminf.    0.97834 (4) obj. -30.5014 iterations 9
Cbc0038I Pass  27: suminf.    0.97834 (4) obj. -30.5014 iterations 1
Cbc0038I Pass  28: suminf.    0.68358 (2) obj. -30.5014 iterations 6
Cbc0038I Pass  29: suminf.    0.57778 (2) obj. -31.9826 iterations 2
Cbc0038I Pass  30: suminf.    0.80628 (3) obj. -30.5014 iterations 5
Cbc0038I Pass  31: suminf.    0.80628 (3) obj. -30.5014 iterations 0
Cbc0038I Pass  32: suminf.    1.17070 (4) obj. -30.5014 iterations 4
Cbc0038I Rounding solution of -28.2827 is better than previous of -25.6826

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -39.175
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Pass  33: suminf.    2.22740 (12) obj. -61.2652 iterations 0
Cbc0038I Pass  34: suminf.    1.55916 (6) obj. -39.175 iterations 13
Cbc0038I Pass  35: suminf.    1.55811 (6) obj. -39.3874 iterations 1
Cbc0038I Pass  36: suminf.    0.79890 (3) obj. -39.175 iterations 5
Cbc0038I Pass  37: suminf.    0.79890 (3) obj. -39.175 iterations 0
Cbc0038I Pass  38: suminf.    1.07596 (4) obj. -39.175 iterations 2
Cbc0038I Pass  39: suminf.    1.00554 (3) obj. -39.175 iterations 9
Cbc0038I Pass  40: suminf.    0.92874 (3) obj. -40.055 iterations 2
Cbc0038I Pass  41: suminf.    1.00554 (3) obj. -39.175 iterations 2
Cbc0038I Pass  42: suminf.    2.06938 (7) obj. -39.175 iterations 6
Cbc0038I Pass  43: suminf.    1.32752 (4) obj. -39.175 iterations 2
Cbc0038I Pass  44: suminf.    0.67613 (3) obj. -39.175 iterations 2
Cbc0038I Pass  45: suminf.    0.64457 (2) obj. -39.175 iterations 3
Cbc0038I Pass  46: suminf.    0.47092 (2) obj. -39.175 iterations 1
Cbc0038I Pass  47: suminf.    1.45699 (6) obj. -39.175 iterations 10
Cbc0038I Pass  48: suminf.    1.12361 (4) obj. -39.4471 iterations 2
Cbc0038I Pass  49: suminf.    1.13421 (4) obj. -39.175 iterations 6
Cbc0038I Pass  50: suminf.    1.01173 (4) obj. -40.2773 iterations 2
Cbc0038I Pass  51: suminf.    1.23800 (5) obj. -39.175 iterations 5
Cbc0038I Pass  52: suminf.    0.88210 (3) obj. -39.4069 iterations 5
Cbc0038I Pass  53: suminf.    3.10508 (10) obj. -39.175 iterations 11
Cbc0038I Pass  54: suminf.    1.80932 (8) obj. -39.175 iterations 2
Cbc0038I Pass  55: suminf.    1.75860 (7) obj. -39.175 iterations 4
Cbc0038I Pass  56: suminf.    1.30736 (4) obj. -39.175 iterations 6
Cbc0038I Pass  57: suminf.    1.30736 (4) obj. -39.175 iterations 0
Cbc0038I Pass  58: suminf.    1.06107 (5) obj. -39.175 iterations 3
Cbc0038I Pass  59: suminf.    1.01173 (4) obj. -39.2773 iterations 3
Cbc0038I Pass  60: suminf.    1.12689 (5) obj. -39.175 iterations 4
Cbc0038I Pass  61: suminf.    0.99246 (5) obj. -39.175 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -28.2827 - took 0.02 seconds
Cbc0012I Integer solution of -28.28265 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 2 rows 3 columns
Cbc0031I 15 added rows had average density of 12
Cbc0013I At root node, 15 cuts changed objective from -73.8694 to -28.585137 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 496 row cuts average 2.8 elements, 10 column cuts (10 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 431 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 98 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 299 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 199 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.758 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.28265 best solution, best possible -28.584296 (1.50 seconds)
Cbc0001I Search completed - best objective -28.28265000000002, took 1321 iterations and 2 nodes (1.50 seconds)
Cbc0032I Strong branching done 20 times (137 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.50

