Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-27) rows, 40 (-10) columns and 217 (-68) elements
Clp1000I sum of infeasibilities 0.000154011 - average 2.13904e-06, 13 fixed columns
Coin0506I Presolve 34 (-38) rows, 25 (-15) columns and 90 (-127) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.3422695 - largest nonzero change 0 ( 0%) - largest zero change 1.573335e-05
Clp0000I Optimal - objective value 3095.0711
Clp0000I Optimal - objective value 3095.0711
Coin0511I After Postsolve, objective 3095.0711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 20.663907 - largest nonzero change 2.8864737e-05 ( 0.00038965812%) - largest zero change 1.8094956e-05
Clp0000I Optimal - objective value 3095.0711
Clp0000I Optimal - objective value 3095.0711
Clp0000I Optimal - objective value 3095.0711
Coin0511I After Postsolve, objective 3095.0711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3095.071083 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 40 columns (39 integer (39 of which binary)) and 217 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.5927
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1780.49 iterations 21
Cbc0038I Solution found of -1780.49
Cbc0038I Relaxing continuous gives -1780.49
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 28 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -1780.49 to -2105.28 (0.02 seconds)
Cbc0038I Round again with cutoff of -2204.26
Cbc0038I Pass   2: suminf.    0.69808 (4) obj. -2204.26 iterations 4
Cbc0038I Pass   3: suminf.    0.30332 (2) obj. -2204.26 iterations 6
Cbc0038I Pass   4: suminf.    0.43026 (1) obj. -2204.26 iterations 2
Cbc0038I Pass   5: suminf.    0.36628 (2) obj. -2204.26 iterations 2
Cbc0038I Pass   6: suminf.    0.48879 (1) obj. -2204.26 iterations 2
Cbc0038I Pass   7: suminf.    0.42099 (2) obj. -2204.26 iterations 2
Cbc0038I Pass   8: suminf.    0.49115 (3) obj. -2204.26 iterations 4
Cbc0038I Pass   9: suminf.    0.49115 (3) obj. -2204.26 iterations 0
Cbc0038I Pass  10: suminf.    0.70352 (2) obj. -2204.26 iterations 2
Cbc0038I Pass  11: suminf.    0.66573 (2) obj. -2204.26 iterations 1
Cbc0038I Pass  12: suminf.    0.83290 (2) obj. -2204.26 iterations 1
Cbc0038I Pass  13: suminf.    0.82261 (3) obj. -2204.26 iterations 1
Cbc0038I Pass  14: suminf.    0.98135 (3) obj. -2204.26 iterations 1
Cbc0038I Pass  15: suminf.    2.97764 (9) obj. -2204.26 iterations 7
Cbc0038I Pass  16: suminf.    2.19467 (7) obj. -2204.26 iterations 5
Cbc0038I Pass  17: suminf.    2.37117 (8) obj. -2204.26 iterations 14
Cbc0038I Pass  18: suminf.    1.05523 (3) obj. -2204.26 iterations 8
Cbc0038I Pass  19: suminf.    0.39448 (2) obj. -2204.26 iterations 1
Cbc0038I Pass  20: suminf.    0.49318 (1) obj. -2204.26 iterations 2
Cbc0038I Pass  21: suminf.    0.37481 (2) obj. -2204.26 iterations 2
Cbc0038I Pass  22: suminf.    0.42581 (1) obj. -2204.26 iterations 2
Cbc0038I Pass  23: suminf.    0.36659 (1) obj. -2204.26 iterations 1
Cbc0038I Pass  24: suminf.    2.13613 (6) obj. -2204.26 iterations 5
Cbc0038I Pass  25: suminf.    0.81103 (2) obj. -2204.26 iterations 4
Cbc0038I Pass  26: suminf.    0.96368 (5) obj. -2204.26 iterations 20
Cbc0038I Pass  27: suminf.    0.39844 (2) obj. -2204.26 iterations 6
Cbc0038I Pass  28: suminf.    0.47974 (1) obj. -2204.26 iterations 2
Cbc0038I Pass  29: suminf.    0.26641 (1) obj. -2204.26 iterations 1
Cbc0038I Pass  30: suminf.    1.61297 (7) obj. -2204.26 iterations 8
Cbc0038I Pass  31: suminf.    1.24958 (4) obj. -2204.26 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 47 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2105.28 - took 0.03 seconds
Cbc0012I Integer solution of -2105.277 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 72 rows 40 columns, reduced to 28 rows 20 columns
Cbc0031I 9 added rows had average density of 13
Cbc0013I At root node, 9 cuts changed objective from -3095.0711 to -2175.375 in 43 passes
Cbc0014I Cut generator 0 (Probing) - 779 row cuts average 4.6 elements, 5 column cuts (5 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 412 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 98 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2105.277000000001, took 776 iterations and 2 nodes (0.10 seconds)
Cbc0032I Strong branching done 18 times (97 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-20) rows, 84 (-12) columns and 1027 (-386) elements
Clp1000I sum of infeasibilities 1.15085e-07 - average 1.47544e-09, 76 fixed columns
Coin0506I Presolve 3 (-75) rows, 8 (-76) columns and 12 (-1015) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 1.4444556 - largest nonzero change 1.6818804e-05 ( 0.0008409402%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 380.43025
Clp0000I Optimal - objective value 380.43025
Coin0511I After Postsolve, objective 380.43025, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8006787 - largest nonzero change 1.702643e-05 ( 0.001702643%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 4327.4593
Clp0000I Optimal - objective value 4327.4593
Clp0000I Optimal - objective value 4327.4593
Coin0511I After Postsolve, objective 4327.4593, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4327.459292 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 86 columns (86 integer (86 of which binary)) and 1035 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.466%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.39462
Cbc0038I Pass   1: suminf.    3.17010 (22) obj. -2506.72 iterations 16
Cbc0038I Pass   2: suminf.    3.17010 (22) obj. -2506.72 iterations 1
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. -1564.67 iterations 21
Cbc0038I Solution found of -1562.77
Cbc0038I Rounding solution of -1896.36 is better than previous of -1562.77

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2088.82
Cbc0038I Pass   4: suminf.    3.17010 (22) obj. -2506.72 iterations 0
Cbc0038I Pass   5: suminf.    3.17010 (22) obj. -2506.72 iterations 1
Cbc0038I Pass   6: suminf.    1.17552 (22) obj. -2088.82 iterations 21
Cbc0038I Pass   7: suminf.    0.54332 (2) obj. -2088.82 iterations 29
Cbc0038I Pass   8: suminf.    0.38095 (2) obj. -2139.65 iterations 2
Cbc0038I Pass   9: suminf.    0.54332 (2) obj. -2088.82 iterations 3
Cbc0038I Pass  10: suminf.    1.97283 (9) obj. -2088.82 iterations 18
Cbc0038I Pass  11: suminf.    1.97283 (9) obj. -2088.82 iterations 2
Cbc0038I Pass  12: suminf.    0.87373 (4) obj. -2088.82 iterations 8
Cbc0038I Pass  13: suminf.    0.87373 (4) obj. -2088.82 iterations 0
Cbc0038I Pass  14: suminf.    1.01261 (4) obj. -2088.82 iterations 2
Cbc0038I Pass  15: suminf.    1.01261 (4) obj. -2088.82 iterations 0
Cbc0038I Pass  16: suminf.    2.59281 (15) obj. -2088.82 iterations 21
Cbc0038I Pass  17: suminf.    1.55644 (13) obj. -2088.82 iterations 6
Cbc0038I Pass  18: suminf.    1.45970 (12) obj. -2088.82 iterations 1
Cbc0038I Pass  19: suminf.    1.28573 (6) obj. -2088.82 iterations 11
Cbc0038I Pass  20: suminf.    1.28573 (6) obj. -2088.82 iterations 0
Cbc0038I Pass  21: suminf.    0.59240 (4) obj. -2088.82 iterations 3
Cbc0038I Pass  22: suminf.    0.57738 (4) obj. -2091.69 iterations 2
Cbc0038I Pass  23: suminf.    2.32626 (20) obj. -2088.82 iterations 30
Cbc0038I Pass  24: suminf.    2.10605 (15) obj. -2088.82 iterations 4
Cbc0038I Pass  25: suminf.    0.55474 (4) obj. -2088.82 iterations 19
Cbc0038I Pass  26: suminf.    0.50595 (4) obj. -2098.14 iterations 3
Cbc0038I Pass  27: suminf.    2.65245 (13) obj. -2088.82 iterations 15
Cbc0038I Pass  28: suminf.    2.28618 (12) obj. -2088.82 iterations 9
Cbc0038I Pass  29: suminf.    1.32424 (7) obj. -2088.82 iterations 9
Cbc0038I Pass  30: suminf.    1.14646 (6) obj. -2088.82 iterations 2
Cbc0038I Pass  31: suminf.    1.33057 (6) obj. -2088.82 iterations 4
Cbc0038I Pass  32: suminf.    2.45298 (11) obj. -2088.82 iterations 13
Cbc0038I Pass  33: suminf.    1.79457 (10) obj. -2088.82 iterations 4
Cbc0038I Rounding solution of -2067.35 is better than previous of -1896.36

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 86 columns, reduced to 39 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -2067.35 to -2105.28 (0.03 seconds)
Cbc0038I Round again with cutoff of -2448.42
Cbc0038I Pass  33: suminf.    3.17010 (22) obj. -2506.72 iterations 0
Cbc0038I Pass  34: suminf.    3.17010 (22) obj. -2506.72 iterations 1
Cbc0038I Pass  35: suminf.    1.49221 (16) obj. -2448.42 iterations 28
Cbc0038I Pass  36: suminf.    1.49221 (16) obj. -2448.42 iterations 0
Cbc0038I Pass  37: suminf.    0.90569 (4) obj. -2448.42 iterations 17
Cbc0038I Pass  38: suminf.    0.77381 (4) obj. -2473.61 iterations 3
Cbc0038I Pass  39: suminf.    0.90569 (4) obj. -2448.42 iterations 5
Cbc0038I Pass  40: suminf.    2.46888 (12) obj. -2448.42 iterations 22
Cbc0038I Pass  41: suminf.    2.46888 (12) obj. -2448.42 iterations 4
Cbc0038I Pass  42: suminf.    1.17779 (5) obj. -2448.42 iterations 18
Cbc0038I Pass  43: suminf.    1.04449 (5) obj. -2471.08 iterations 3
Cbc0038I Pass  44: suminf.    1.17779 (5) obj. -2448.42 iterations 5
Cbc0038I Pass  45: suminf.    1.80027 (11) obj. -2448.42 iterations 8
Cbc0038I Pass  46: suminf.    1.46006 (8) obj. -2551.33 iterations 3
Cbc0038I Pass  47: suminf.    1.16603 (5) obj. -2448.42 iterations 7
Cbc0038I Pass  48: suminf.    1.04449 (5) obj. -2469.08 iterations 2
Cbc0038I Pass  49: suminf.    1.88700 (14) obj. -2448.42 iterations 22
Cbc0038I Pass  50: suminf.    1.74365 (10) obj. -2455.65 iterations 10
Cbc0038I Pass  51: suminf.    1.33889 (7) obj. -2448.42 iterations 12
Cbc0038I Pass  52: suminf.    1.33889 (7) obj. -2448.42 iterations 1
Cbc0038I Pass  53: suminf.    1.43175 (7) obj. -2448.42 iterations 2
Cbc0038I Pass  54: suminf.    1.43175 (7) obj. -2448.42 iterations 0
Cbc0038I Pass  55: suminf.    1.33889 (7) obj. -2448.42 iterations 3
Cbc0038I Pass  56: suminf.    1.78979 (10) obj. -2448.42 iterations 10
Cbc0038I Pass  57: suminf.    1.68188 (10) obj. -2469.03 iterations 7
Cbc0038I Pass  58: suminf.    1.33889 (7) obj. -2448.42 iterations 13
Cbc0038I Pass  59: suminf.    1.33889 (7) obj. -2448.42 iterations 1
Cbc0038I Pass  60: suminf.    1.43175 (7) obj. -2448.42 iterations 2
Cbc0038I Pass  61: suminf.    1.43175 (7) obj. -2448.42 iterations 0
Cbc0038I Pass  62: suminf.    1.33889 (7) obj. -2448.42 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2105.28 - took 0.03 seconds
Cbc0012I Integer solution of -2105.277 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 80 rows 86 columns, reduced to 1 rows 2 columns
Cbc0031I 25 added rows had average density of 8.84
Cbc0013I At root node, 25 cuts changed objective from -3820.994 to -2140.6519 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 435 row cuts average 3.0 elements, 21 column cuts (21 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 71 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2105.277000000001, took 408 iterations and 10 nodes (0.49 seconds)
Cbc0032I Strong branching done 102 times (641 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.49

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-27) rows, 40 (-10) columns and 217 (-68) elements
Clp1000I sum of infeasibilities 0.000154011 - average 2.13904e-06, 13 fixed columns
Coin0506I Presolve 34 (-38) rows, 25 (-15) columns and 90 (-127) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.3422695 - largest nonzero change 0 ( 0%) - largest zero change 1.573335e-05
Clp0000I Optimal - objective value 3095.0711
Clp0000I Optimal - objective value 3095.0711
Coin0511I After Postsolve, objective 3095.0711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 20.663907 - largest nonzero change 2.8864737e-05 ( 0.00038965812%) - largest zero change 1.8094956e-05
Clp0000I Optimal - objective value 3095.0711
Clp0000I Optimal - objective value 3095.0711
Clp0000I Optimal - objective value 3095.0711
Coin0511I After Postsolve, objective 3095.0711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3095.071083 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 40 columns (39 integer (39 of which binary)) and 217 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.5927
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1780.49 iterations 21
Cbc0038I Solution found of -1780.49
Cbc0038I Relaxing continuous gives -1780.49
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 28 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -1780.49 to -2105.28 (0.02 seconds)
Cbc0038I Round again with cutoff of -2204.26
Cbc0038I Pass   2: suminf.    0.69808 (4) obj. -2204.26 iterations 4
Cbc0038I Pass   3: suminf.    0.30332 (2) obj. -2204.26 iterations 6
Cbc0038I Pass   4: suminf.    0.43026 (1) obj. -2204.26 iterations 2
Cbc0038I Pass   5: suminf.    0.36628 (2) obj. -2204.26 iterations 2
Cbc0038I Pass   6: suminf.    0.48879 (1) obj. -2204.26 iterations 2
Cbc0038I Pass   7: suminf.    0.42099 (2) obj. -2204.26 iterations 2
Cbc0038I Pass   8: suminf.    0.49115 (3) obj. -2204.26 iterations 4
Cbc0038I Pass   9: suminf.    0.49115 (3) obj. -2204.26 iterations 0
Cbc0038I Pass  10: suminf.    0.70352 (2) obj. -2204.26 iterations 2
Cbc0038I Pass  11: suminf.    0.66573 (2) obj. -2204.26 iterations 1
Cbc0038I Pass  12: suminf.    0.83290 (2) obj. -2204.26 iterations 1
Cbc0038I Pass  13: suminf.    0.82261 (3) obj. -2204.26 iterations 1
Cbc0038I Pass  14: suminf.    0.98135 (3) obj. -2204.26 iterations 1
Cbc0038I Pass  15: suminf.    2.97764 (9) obj. -2204.26 iterations 7
Cbc0038I Pass  16: suminf.    2.19467 (7) obj. -2204.26 iterations 5
Cbc0038I Pass  17: suminf.    2.37117 (8) obj. -2204.26 iterations 14
Cbc0038I Pass  18: suminf.    1.05523 (3) obj. -2204.26 iterations 8
Cbc0038I Pass  19: suminf.    0.39448 (2) obj. -2204.26 iterations 1
Cbc0038I Pass  20: suminf.    0.49318 (1) obj. -2204.26 iterations 2
Cbc0038I Pass  21: suminf.    0.37481 (2) obj. -2204.26 iterations 2
Cbc0038I Pass  22: suminf.    0.42581 (1) obj. -2204.26 iterations 2
Cbc0038I Pass  23: suminf.    0.36659 (1) obj. -2204.26 iterations 1
Cbc0038I Pass  24: suminf.    2.13613 (6) obj. -2204.26 iterations 5
Cbc0038I Pass  25: suminf.    0.81103 (2) obj. -2204.26 iterations 4
Cbc0038I Pass  26: suminf.    0.96368 (5) obj. -2204.26 iterations 20
Cbc0038I Pass  27: suminf.    0.39844 (2) obj. -2204.26 iterations 6
Cbc0038I Pass  28: suminf.    0.47974 (1) obj. -2204.26 iterations 2
Cbc0038I Pass  29: suminf.    0.26641 (1) obj. -2204.26 iterations 1
Cbc0038I Pass  30: suminf.    1.61297 (7) obj. -2204.26 iterations 8
Cbc0038I Pass  31: suminf.    1.24958 (4) obj. -2204.26 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 47 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2105.28 - took 0.03 seconds
Cbc0012I Integer solution of -2105.277 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 72 rows 40 columns, reduced to 28 rows 20 columns
Cbc0031I 9 added rows had average density of 13
Cbc0013I At root node, 9 cuts changed objective from -3095.0711 to -2175.375 in 43 passes
Cbc0014I Cut generator 0 (Probing) - 779 row cuts average 4.6 elements, 5 column cuts (5 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 412 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 98 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2105.277000000001, took 776 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 18 times (97 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-21) rows, 84 (-13) columns and 1027 (-387) elements
Clp1000I sum of infeasibilities 1.15085e-07 - average 1.47544e-09, 76 fixed columns
Coin0506I Presolve 3 (-75) rows, 8 (-76) columns and 12 (-1015) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 1.4444556 - largest nonzero change 1.6818804e-05 ( 0.0008409402%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 380.43025
Clp0000I Optimal - objective value 380.43025
Coin0511I After Postsolve, objective 380.43025, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8006787 - largest nonzero change 1.702643e-05 ( 0.001702643%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 4327.4593
Clp0000I Optimal - objective value 4327.4593
Clp0000I Optimal - objective value 4327.4593
Coin0511I After Postsolve, objective 4327.4593, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4327.459292 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 86 columns (86 integer (86 of which binary)) and 1035 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.466%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.39462
Cbc0038I Pass   1: suminf.    3.17010 (22) obj. -2506.72 iterations 16
Cbc0038I Pass   2: suminf.    3.17010 (22) obj. -2506.72 iterations 1
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. -1564.67 iterations 21
Cbc0038I Solution found of -1562.77
Cbc0038I Rounding solution of -1896.36 is better than previous of -1562.77

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2088.82
Cbc0038I Pass   4: suminf.    3.17010 (22) obj. -2506.72 iterations 0
Cbc0038I Pass   5: suminf.    3.17010 (22) obj. -2506.72 iterations 1
Cbc0038I Pass   6: suminf.    1.17552 (22) obj. -2088.82 iterations 21
Cbc0038I Pass   7: suminf.    0.54332 (2) obj. -2088.82 iterations 29
Cbc0038I Pass   8: suminf.    0.38095 (2) obj. -2139.65 iterations 2
Cbc0038I Pass   9: suminf.    0.54332 (2) obj. -2088.82 iterations 3
Cbc0038I Pass  10: suminf.    1.97283 (9) obj. -2088.82 iterations 18
Cbc0038I Pass  11: suminf.    1.97283 (9) obj. -2088.82 iterations 2
Cbc0038I Pass  12: suminf.    0.87373 (4) obj. -2088.82 iterations 8
Cbc0038I Pass  13: suminf.    0.87373 (4) obj. -2088.82 iterations 0
Cbc0038I Pass  14: suminf.    1.01261 (4) obj. -2088.82 iterations 2
Cbc0038I Pass  15: suminf.    1.01261 (4) obj. -2088.82 iterations 0
Cbc0038I Pass  16: suminf.    2.59281 (15) obj. -2088.82 iterations 21
Cbc0038I Pass  17: suminf.    1.55644 (13) obj. -2088.82 iterations 6
Cbc0038I Pass  18: suminf.    1.45970 (12) obj. -2088.82 iterations 1
Cbc0038I Pass  19: suminf.    1.28573 (6) obj. -2088.82 iterations 11
Cbc0038I Pass  20: suminf.    1.28573 (6) obj. -2088.82 iterations 0
Cbc0038I Pass  21: suminf.    0.59240 (4) obj. -2088.82 iterations 3
Cbc0038I Pass  22: suminf.    0.57738 (4) obj. -2091.69 iterations 2
Cbc0038I Pass  23: suminf.    2.32626 (20) obj. -2088.82 iterations 30
Cbc0038I Pass  24: suminf.    2.10605 (15) obj. -2088.82 iterations 4
Cbc0038I Pass  25: suminf.    0.55474 (4) obj. -2088.82 iterations 19
Cbc0038I Pass  26: suminf.    0.50595 (4) obj. -2098.14 iterations 3
Cbc0038I Pass  27: suminf.    2.65245 (13) obj. -2088.82 iterations 15
Cbc0038I Pass  28: suminf.    2.28618 (12) obj. -2088.82 iterations 9
Cbc0038I Pass  29: suminf.    1.32424 (7) obj. -2088.82 iterations 9
Cbc0038I Pass  30: suminf.    1.14646 (6) obj. -2088.82 iterations 2
Cbc0038I Pass  31: suminf.    1.33057 (6) obj. -2088.82 iterations 4
Cbc0038I Pass  32: suminf.    2.45298 (11) obj. -2088.82 iterations 13
Cbc0038I Pass  33: suminf.    1.79457 (10) obj. -2088.82 iterations 4
Cbc0038I Rounding solution of -2067.35 is better than previous of -1896.36

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 86 columns, reduced to 39 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -2067.35 to -2105.28 (0.04 seconds)
Cbc0038I Round again with cutoff of -2448.42
Cbc0038I Pass  33: suminf.    3.17010 (22) obj. -2506.72 iterations 0
Cbc0038I Pass  34: suminf.    3.17010 (22) obj. -2506.72 iterations 1
Cbc0038I Pass  35: suminf.    1.49221 (16) obj. -2448.42 iterations 28
Cbc0038I Pass  36: suminf.    1.49221 (16) obj. -2448.42 iterations 0
Cbc0038I Pass  37: suminf.    0.90569 (4) obj. -2448.42 iterations 17
Cbc0038I Pass  38: suminf.    0.77381 (4) obj. -2473.61 iterations 3
Cbc0038I Pass  39: suminf.    0.90569 (4) obj. -2448.42 iterations 5
Cbc0038I Pass  40: suminf.    2.46888 (12) obj. -2448.42 iterations 22
Cbc0038I Pass  41: suminf.    2.46888 (12) obj. -2448.42 iterations 4
Cbc0038I Pass  42: suminf.    1.17779 (5) obj. -2448.42 iterations 18
Cbc0038I Pass  43: suminf.    1.04449 (5) obj. -2471.08 iterations 3
Cbc0038I Pass  44: suminf.    1.17779 (5) obj. -2448.42 iterations 5
Cbc0038I Pass  45: suminf.    1.80027 (11) obj. -2448.42 iterations 8
Cbc0038I Pass  46: suminf.    1.46006 (8) obj. -2551.33 iterations 3
Cbc0038I Pass  47: suminf.    1.16603 (5) obj. -2448.42 iterations 7
Cbc0038I Pass  48: suminf.    1.04449 (5) obj. -2469.08 iterations 2
Cbc0038I Pass  49: suminf.    1.88700 (14) obj. -2448.42 iterations 22
Cbc0038I Pass  50: suminf.    1.74365 (10) obj. -2455.65 iterations 10
Cbc0038I Pass  51: suminf.    1.33889 (7) obj. -2448.42 iterations 12
Cbc0038I Pass  52: suminf.    1.33889 (7) obj. -2448.42 iterations 1
Cbc0038I Pass  53: suminf.    1.43175 (7) obj. -2448.42 iterations 2
Cbc0038I Pass  54: suminf.    1.43175 (7) obj. -2448.42 iterations 0
Cbc0038I Pass  55: suminf.    1.33889 (7) obj. -2448.42 iterations 3
Cbc0038I Pass  56: suminf.    1.78979 (10) obj. -2448.42 iterations 10
Cbc0038I Pass  57: suminf.    1.68188 (10) obj. -2469.03 iterations 7
Cbc0038I Pass  58: suminf.    1.33889 (7) obj. -2448.42 iterations 13
Cbc0038I Pass  59: suminf.    1.33889 (7) obj. -2448.42 iterations 1
Cbc0038I Pass  60: suminf.    1.43175 (7) obj. -2448.42 iterations 2
Cbc0038I Pass  61: suminf.    1.43175 (7) obj. -2448.42 iterations 0
Cbc0038I Pass  62: suminf.    1.33889 (7) obj. -2448.42 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -2105.28 - took 0.04 seconds
Cbc0012I Integer solution of -2105.277 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 80 rows 86 columns, reduced to 1 rows 2 columns
Cbc0031I 25 added rows had average density of 8.84
Cbc0013I At root node, 25 cuts changed objective from -3820.994 to -2140.6519 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 435 row cuts average 3.0 elements, 21 column cuts (21 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 71 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2105.277000000001, took 408 iterations and 10 nodes (0.57 seconds)
Cbc0032I Strong branching done 102 times (641 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.57

