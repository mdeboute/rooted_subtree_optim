Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 72 (-6) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 1.93574e-05 - average 1.43388e-07, 13 fixed columns
Coin0506I Presolve 102 (-33) rows, 59 (-13) columns and 315 (-91) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 91.575178
Clp0000I Optimal - objective value 91.575178
Coin0511I After Postsolve, objective 91.575178, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.575178
Clp0000I Optimal - objective value 91.575178
Clp0000I Optimal - objective value 91.575178
Coin0511I After Postsolve, objective 91.575178, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.5751782 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 72 columns (71 integer (71 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.274%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 12.0305
Cbc0038I Solution found of -2.56341
Cbc0038I Relaxing continuous gives -6.23555
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 72 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -6.23555 to -61.328 (0.05 seconds)
Cbc0038I Round again with cutoff of -64.3528
Cbc0038I Pass   1: suminf.    6.54568 (34) obj. -64.3528 iterations 41
Cbc0038I Pass   2: suminf.    6.22546 (26) obj. -64.3528 iterations 10
Cbc0038I Pass   3: suminf.    1.55967 (6) obj. -64.3528 iterations 31
Cbc0038I Pass   4: suminf.    1.07495 (6) obj. -64.3528 iterations 6
Cbc0038I Pass   5: suminf.    1.17346 (6) obj. -64.3528 iterations 13
Cbc0038I Pass   6: suminf.    0.76367 (4) obj. -64.3528 iterations 5
Cbc0038I Pass   7: suminf.    0.97678 (5) obj. -64.3528 iterations 4
Cbc0038I Pass   8: suminf.    0.69137 (7) obj. -64.3528 iterations 6
Cbc0038I Pass   9: suminf.    1.80514 (7) obj. -64.3528 iterations 10
Cbc0038I Pass  10: suminf.    1.95039 (5) obj. -64.3528 iterations 19
Cbc0038I Pass  11: suminf.    1.69852 (8) obj. -64.3528 iterations 7
Cbc0038I Pass  12: suminf.    3.19448 (9) obj. -64.3528 iterations 10
Cbc0038I Pass  13: suminf.    1.15951 (6) obj. -64.3528 iterations 14
Cbc0038I Pass  14: suminf.    1.12015 (4) obj. -64.3528 iterations 12
Cbc0038I Pass  15: suminf.    1.33467 (7) obj. -64.3528 iterations 7
Cbc0038I Pass  16: suminf.    0.96966 (5) obj. -64.3528 iterations 5
Cbc0038I Pass  17: suminf.    1.59494 (5) obj. -64.3528 iterations 10
Cbc0038I Pass  18: suminf.    1.15951 (6) obj. -64.3528 iterations 8
Cbc0038I Pass  19: suminf.    1.12015 (4) obj. -64.3528 iterations 10
Cbc0038I Pass  20: suminf.    1.33467 (7) obj. -64.3528 iterations 7
Cbc0038I Pass  21: suminf.    0.96966 (5) obj. -64.3528 iterations 5
Cbc0038I Pass  22: suminf.    1.59494 (5) obj. -64.3528 iterations 10
Cbc0038I Pass  23: suminf.    1.15951 (6) obj. -64.3528 iterations 8
Cbc0038I Pass  24: suminf.    1.12015 (4) obj. -64.3528 iterations 10
Cbc0038I Pass  25: suminf.    1.33467 (7) obj. -64.3528 iterations 7
Cbc0038I Pass  26: suminf.    0.96966 (5) obj. -64.3528 iterations 5
Cbc0038I Pass  27: suminf.    1.59494 (5) obj. -64.3528 iterations 10
Cbc0038I Pass  28: suminf.    1.15951 (6) obj. -64.3528 iterations 8
Cbc0038I Pass  29: suminf.    1.12015 (4) obj. -64.3528 iterations 10
Cbc0038I Pass  30: suminf.    1.33467 (7) obj. -64.3528 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 72 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -61.328 to -61.3296 (0.11 seconds)
Cbc0038I Round again with cutoff of -69.7973
Cbc0038I Pass  30: suminf.    7.27676 (34) obj. -69.7973 iterations 4
Cbc0038I Pass  31: suminf.    6.90828 (28) obj. -69.7973 iterations 14
Cbc0038I Pass  32: suminf.    2.28568 (8) obj. -69.7973 iterations 26
Cbc0038I Pass  33: suminf.    1.82713 (8) obj. -69.7973 iterations 9
Cbc0038I Pass  34: suminf.    3.25730 (9) obj. -69.7973 iterations 11
Cbc0038I Pass  35: suminf.    2.13249 (9) obj. -69.7973 iterations 5
Cbc0038I Pass  36: suminf.    2.13249 (9) obj. -69.7973 iterations 2
Cbc0038I Pass  37: suminf.    2.43727 (19) obj. -69.7973 iterations 13
Cbc0038I Pass  38: suminf.    2.40134 (8) obj. -69.7973 iterations 6
Cbc0038I Pass  39: suminf.    2.27045 (9) obj. -69.7973 iterations 11
Cbc0038I Pass  40: suminf.    2.25478 (11) obj. -69.7973 iterations 3
Cbc0038I Pass  41: suminf.    3.20653 (9) obj. -69.7973 iterations 18
Cbc0038I Pass  42: suminf.    2.86730 (9) obj. -69.7973 iterations 7
Cbc0038I Pass  43: suminf.    3.36946 (16) obj. -69.7973 iterations 14
Cbc0038I Pass  44: suminf.    2.97809 (10) obj. -69.7973 iterations 9
Cbc0038I Pass  45: suminf.    3.46818 (11) obj. -69.7973 iterations 13
Cbc0038I Pass  46: suminf.    2.64851 (12) obj. -69.7973 iterations 9
Cbc0038I Pass  47: suminf.    3.20653 (9) obj. -69.7973 iterations 22
Cbc0038I Pass  48: suminf.    2.86730 (9) obj. -69.7973 iterations 6
Cbc0038I Pass  49: suminf.    3.36946 (16) obj. -69.7973 iterations 12
Cbc0038I Pass  50: suminf.    2.97809 (10) obj. -69.7973 iterations 9
Cbc0038I Pass  51: suminf.    3.46818 (11) obj. -69.7973 iterations 14
Cbc0038I Pass  52: suminf.    2.64851 (12) obj. -69.7973 iterations 10
Cbc0038I Pass  53: suminf.    4.10869 (17) obj. -69.7973 iterations 17
Cbc0038I Pass  54: suminf.    2.86730 (9) obj. -69.7973 iterations 8
Cbc0038I Pass  55: suminf.    3.36946 (16) obj. -69.7973 iterations 12
Cbc0038I Pass  56: suminf.    2.97809 (10) obj. -69.7973 iterations 9
Cbc0038I Pass  57: suminf.    3.46818 (11) obj. -69.7973 iterations 13
Cbc0038I Pass  58: suminf.    2.64851 (12) obj. -69.7973 iterations 9
Cbc0038I Pass  59: suminf.    4.10869 (17) obj. -69.7973 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 72 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -61.3296 - took 0.13 seconds
Cbc0012I Integer solution of -61.329565 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 72 columns, reduced to 79 rows 45 columns
Cbc0031I 22 added rows had average density of 50.818182
Cbc0013I At root node, 22 cuts changed objective from -91.575178 to -79.177834 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7061 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1522 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 3 nodes, 4 on tree, -61.329565 best solution, best possible -79.177834 (0.69 seconds)
Cbc0038I Full problem 135 rows 72 columns, reduced to 8 rows 12 columns
Cbc0012I Integer solution of -61.331165 found by rounding after 5611 iterations and 50 nodes (0.79 seconds)
Cbc0038I Full problem 135 rows 72 columns, reduced to 6 rows 10 columns
Cbc0012I Integer solution of -61.331875 found by rounding after 6794 iterations and 185 nodes (0.91 seconds)
Cbc0001I Search completed - best objective -61.33187515000002, took 8102 iterations and 278 nodes (1.02 seconds)
Cbc0032I Strong branching done 1456 times (13253 iterations), fathomed 61 nodes and fixed 76 variables
Cbc0035I Maximum depth 17, 754 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 109 (-43) columns and 1708 (-1595) elements
Clp1000I sum of infeasibilities 6.02474e-08 - average 5.9066e-10, 57 fixed columns
Coin0506I Presolve 43 (-59) rows, 52 (-57) columns and 185 (-1523) elements
Clp0006I 0  Obj 46.660017 Dual inf 1.3681791 (51)
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 3.6522875 - largest nonzero change 2.6586073e-05 ( 0.00091831452%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 50.476837
Clp0000I Optimal - objective value 50.476837
Coin0511I After Postsolve, objective 50.476837, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.476837 Dual inf 47.633527 (38)
Clp0014I Perturbing problem by 0.001% of 1.8733511 - largest nonzero change 2.041357e-05 ( 0.0014083952%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 99.867533
Clp0000I Optimal - objective value 99.867533
Clp0000I Optimal - objective value 99.867533
Coin0511I After Postsolve, objective 99.867533, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.86753309 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 109 columns (109 integer (109 of which binary)) and 1712 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.606%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.36793
Cbc0038I Pass   1: suminf.    2.60670 (22) obj. -79.8191 iterations 30
Cbc0038I Pass   2: suminf.    2.60670 (22) obj. -79.8191 iterations 1
Cbc0038I Solution found of -49.1315
Cbc0038I Rounding solution of -58.0699 is better than previous of -49.1315

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 109 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -61.6542
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.60670 (22) obj. -79.8191 iterations 0
Cbc0038I Pass   4: suminf.    2.60670 (22) obj. -79.8191 iterations 1
Cbc0038I Pass   5: suminf.    1.47833 (10) obj. -61.6542 iterations 36
Cbc0038I Pass   6: suminf.    1.45232 (6) obj. -61.6542 iterations 20
Cbc0038I Pass   7: suminf.    1.45233 (6) obj. -61.6542 iterations 4
Cbc0038I Pass   8: suminf.    0.78627 (4) obj. -61.6542 iterations 12
Cbc0038I Pass   9: suminf.    0.33756 (3) obj. -61.6542 iterations 6
Cbc0038I Pass  10: suminf.    0.78627 (4) obj. -61.6542 iterations 7
Cbc0038I Pass  11: suminf.    2.20258 (11) obj. -61.6542 iterations 31
Cbc0038I Pass  12: suminf.    1.34301 (14) obj. -61.6542 iterations 12
Cbc0038I Pass  13: suminf.    2.85673 (12) obj. -61.6542 iterations 15
Cbc0038I Pass  14: suminf.    2.03404 (9) obj. -61.6542 iterations 8
Cbc0038I Pass  15: suminf.    1.95956 (11) obj. -61.6542 iterations 5
Cbc0038I Pass  16: suminf.    2.69009 (22) obj. -61.6542 iterations 20
Cbc0038I Pass  17: suminf.    0.98470 (7) obj. -61.6542 iterations 9
Cbc0038I Pass  18: suminf.    2.62895 (7) obj. -61.6542 iterations 12
Cbc0038I Pass  19: suminf.    2.17809 (7) obj. -61.6542 iterations 1
Cbc0038I Pass  20: suminf.    0.98470 (7) obj. -61.6542 iterations 10
Cbc0038I Pass  21: suminf.    3.57991 (18) obj. -61.6542 iterations 31
Cbc0038I Pass  22: suminf.    2.31358 (13) obj. -61.6542 iterations 10
Cbc0038I Pass  23: suminf.    1.71318 (8) obj. -61.6542 iterations 16
Cbc0038I Pass  24: suminf.    1.21169 (8) obj. -61.6542 iterations 12
Cbc0038I Pass  25: suminf.    1.82763 (7) obj. -61.6542 iterations 12
Cbc0038I Pass  26: suminf.    1.35976 (8) obj. -61.6542 iterations 2
Cbc0038I Pass  27: suminf.    2.82696 (9) obj. -61.6542 iterations 13
Cbc0038I Pass  28: suminf.    2.01910 (7) obj. -61.6542 iterations 12
Cbc0038I Pass  29: suminf.    1.28810 (8) obj. -61.6542 iterations 8
Cbc0038I Pass  30: suminf.    1.28810 (8) obj. -61.6542 iterations 0
Cbc0038I Pass  31: suminf.    1.33389 (5) obj. -61.6542 iterations 20
Cbc0038I Pass  32: suminf.    1.13023 (5) obj. -62.2652 iterations 7
Cbc0038I Rounding solution of -60.0828 is better than previous of -58.0699

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 109 columns, reduced to 52 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -60.0828 to -60.6429 (0.14 seconds)
Cbc0038I Round again with cutoff of -68.1058
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.60670 (22) obj. -79.8191 iterations 0
Cbc0038I Pass  33: suminf.    2.60670 (22) obj. -79.8191 iterations 1
Cbc0038I Pass  34: suminf.    0.81590 (11) obj. -68.1058 iterations 24
Cbc0038I Pass  35: suminf.    0.76233 (9) obj. -68.1838 iterations 6
Cbc0038I Pass  36: suminf.    0.77798 (4) obj. -68.1058 iterations 25
Cbc0038I Pass  37: suminf.    0.61177 (4) obj. -68.1058 iterations 10
Cbc0038I Pass  38: suminf.    0.74715 (5) obj. -68.1058 iterations 15
Cbc0038I Pass  39: suminf.    0.66558 (4) obj. -68.1058 iterations 13
Cbc0038I Pass  40: suminf.    0.69339 (5) obj. -68.1058 iterations 17
Cbc0038I Pass  41: suminf.    2.06025 (14) obj. -68.1058 iterations 40
Cbc0038I Pass  42: suminf.    1.40889 (12) obj. -69.3544 iterations 4
Cbc0038I Pass  43: suminf.    2.00380 (12) obj. -68.1058 iterations 36
Cbc0038I Pass  44: suminf.    2.00380 (12) obj. -68.1058 iterations 4
Cbc0038I Pass  45: suminf.    1.74436 (10) obj. -68.1058 iterations 17
Cbc0038I Pass  46: suminf.    1.74436 (10) obj. -68.1058 iterations 6
Cbc0038I Pass  47: suminf.    1.69308 (10) obj. -68.1058 iterations 10
Cbc0038I Pass  48: suminf.    1.69308 (10) obj. -68.1058 iterations 5
Cbc0038I Pass  49: suminf.    1.74436 (10) obj. -68.1058 iterations 8
Cbc0038I Pass  50: suminf.    2.00762 (15) obj. -68.1058 iterations 21
Cbc0038I Pass  51: suminf.    1.98316 (15) obj. -68.2526 iterations 1
Cbc0038I Pass  52: suminf.    4.35242 (15) obj. -68.1058 iterations 27
Cbc0038I Pass  53: suminf.    2.49056 (15) obj. -68.1058 iterations 5
Cbc0038I Pass  54: suminf.    2.49056 (15) obj. -68.1058 iterations 0
Cbc0038I Pass  55: suminf.    1.59852 (11) obj. -68.1058 iterations 21
Cbc0038I Pass  56: suminf.    1.59852 (11) obj. -68.1058 iterations 0
Cbc0038I Pass  57: suminf.    2.25982 (11) obj. -68.1058 iterations 10
Cbc0038I Pass  58: suminf.    2.25982 (11) obj. -68.1058 iterations 6
Cbc0038I Pass  59: suminf.    2.15749 (11) obj. -68.1058 iterations 8
Cbc0038I Pass  60: suminf.    2.15749 (11) obj. -68.1058 iterations 7
Cbc0038I Pass  61: suminf.    2.69402 (18) obj. -68.1058 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 109 columns, reduced to 29 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -60.6429 - took 0.13 seconds
Cbc0012I Integer solution of -60.642935 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 102 rows 109 columns, reduced to 10 rows 13 columns
Cbc0031I 56 added rows had average density of 35.553571
Cbc0013I At root node, 56 cuts changed objective from -93.912218 to -69.107948 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15264 row cuts average 7.4 elements, 2 column cuts (2 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1538 row cuts average 96.3 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 208 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 838 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 304 row cuts average 57.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.613 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -60.642935 best solution, best possible -69.107948 (2.62 seconds)
Cbc0038I Full problem 102 rows 109 columns, reduced to 53 rows 62 columns
Cbc0012I Integer solution of -61.329565 found by RINS after 5883 iterations and 42 nodes (3.28 seconds)
Cbc0010I After 47 nodes, 11 on tree, -61.329565 best solution, best possible -69.107948 (3.33 seconds)
Cbc0038I Full problem 158 rows 109 columns, reduced to 86 rows 98 columns
Cbc0044I Reduced cost fixing - 86 rows, 98 columns - restarting search
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.9877
Cbc0038I Pass   1: suminf.    2.85317 (21) obj. -78.3432 iterations 33
Cbc0038I Pass   2: suminf.    2.85317 (21) obj. -78.3432 iterations 1
Cbc0038I Pass   3: suminf.    1.20182 (7) obj. -61.3296 iterations 37
Cbc0038I Pass   4: suminf.    0.45672 (1) obj. -61.3296 iterations 23
Cbc0038I Pass   5: suminf.    0.16667 (1) obj. -63.0699 iterations 9
Cbc0038I Pass   6: suminf.    1.06711 (7) obj. -61.3296 iterations 17
Cbc0038I Pass   7: suminf.    1.06711 (7) obj. -61.3296 iterations 4
Cbc0038I Pass   8: suminf.    0.93069 (7) obj. -61.3296 iterations 18
Cbc0038I Pass   9: suminf.    0.70474 (6) obj. -61.3844 iterations 7
Cbc0038I Pass  10: suminf.    1.54685 (7) obj. -61.3296 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.35 seconds)
Cbc0038I Full problem 87 rows 98 columns, reduced to 87 rows 98 columns
Cbc0038I After 3.44 seconds - Feasibility pump exiting with objective of -60.6429 - took 0.09 seconds
Cbc0031I 59 added rows had average density of 25.389831
Cbc0013I At root node, 59 cuts changed objective from -91.942257 to -69.082002 in 65 passes
Cbc0014I Cut generator 0 (Probing) - 3629 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 210 row cuts average 92.6 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 132 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 486 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.469 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 209 row cuts average 30.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -69.082002 (4.82 seconds)
Cbc0016I Integer solution of -61.331875 found by strong branching after 3199 iterations and 41 nodes (5.12 seconds)
Cbc0038I Full problem 86 rows 98 columns, reduced to 14 rows 22 columns
Cbc0038I Full problem 86 rows 98 columns, reduced to 42 rows 47 columns
Cbc0001I Search completed - best objective -61.33187515, took 6578 iterations and 264 nodes (5.82 seconds)
Cbc0032I Strong branching done 2110 times (20897 iterations), fathomed 21 nodes and fixed 52 variables
Cbc0035I Maximum depth 18, 404 variables fixed on reduced cost
Cbc0038I Probing was tried 428 times and created 4233 cuts of which 0 were active after adding rounds of cuts (0.075 seconds)
Cbc0038I Gomory was tried 420 times and created 226 cuts of which 0 were active after adding rounds of cuts (0.103 seconds)
Cbc0038I Knapsack was tried 420 times and created 655 cuts of which 0 were active after adding rounds of cuts (0.084 seconds)
Cbc0038I Clique was tried 420 times and created 448 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Cbc0038I OddWheel was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
Cbc0038I MixedIntegerRounding2 was tried 420 times and created 735 cuts of which 0 were active after adding rounds of cuts (0.086 seconds)
Cbc0038I FlowCover was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 420 times and created 336 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)
Cbc0038I ZeroHalf was tried 65 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.469 seconds)
Cbc0038I Stored from first was tried 420 times and created 336 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -61.331875 found by Reduced search after 12677 iterations and 314 nodes (5.82 seconds)
Cbc0001I Search completed - best objective -61.33187515000002, took 12677 iterations and 314 nodes (5.82 seconds)
Cbc0032I Strong branching done 662 times (10672 iterations), fathomed 6 nodes and fixed 15 variables
Cbc0035I Maximum depth 14, 115 variables fixed on reduced cost
Total time (CPU seconds):       4.63   (Wallclock seconds):       5.84

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 72 (-6) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 1.93574e-05 - average 1.43388e-07, 13 fixed columns
Coin0506I Presolve 102 (-33) rows, 59 (-13) columns and 315 (-91) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 91.575178
Clp0000I Optimal - objective value 91.575178
Coin0511I After Postsolve, objective 91.575178, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.575178
Clp0000I Optimal - objective value 91.575178
Clp0000I Optimal - objective value 91.575178
Coin0511I After Postsolve, objective 91.575178, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.5751782 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 72 columns (71 integer (71 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.274%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 12.0305
Cbc0038I Solution found of -2.56341
Cbc0038I Relaxing continuous gives -6.23555
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 72 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -6.23555 to -61.328 (0.06 seconds)
Cbc0038I Round again with cutoff of -64.3528
Cbc0038I Pass   1: suminf.    6.54568 (34) obj. -64.3528 iterations 41
Cbc0038I Pass   2: suminf.    6.22546 (26) obj. -64.3528 iterations 10
Cbc0038I Pass   3: suminf.    1.55967 (6) obj. -64.3528 iterations 31
Cbc0038I Pass   4: suminf.    1.07495 (6) obj. -64.3528 iterations 6
Cbc0038I Pass   5: suminf.    1.17346 (6) obj. -64.3528 iterations 13
Cbc0038I Pass   6: suminf.    0.76367 (4) obj. -64.3528 iterations 5
Cbc0038I Pass   7: suminf.    0.97678 (5) obj. -64.3528 iterations 4
Cbc0038I Pass   8: suminf.    0.69137 (7) obj. -64.3528 iterations 6
Cbc0038I Pass   9: suminf.    1.80514 (7) obj. -64.3528 iterations 10
Cbc0038I Pass  10: suminf.    1.95039 (5) obj. -64.3528 iterations 19
Cbc0038I Pass  11: suminf.    1.69852 (8) obj. -64.3528 iterations 7
Cbc0038I Pass  12: suminf.    3.19448 (9) obj. -64.3528 iterations 10
Cbc0038I Pass  13: suminf.    1.15951 (6) obj. -64.3528 iterations 14
Cbc0038I Pass  14: suminf.    1.12015 (4) obj. -64.3528 iterations 12
Cbc0038I Pass  15: suminf.    1.33467 (7) obj. -64.3528 iterations 7
Cbc0038I Pass  16: suminf.    0.96966 (5) obj. -64.3528 iterations 5
Cbc0038I Pass  17: suminf.    1.59494 (5) obj. -64.3528 iterations 10
Cbc0038I Pass  18: suminf.    1.15951 (6) obj. -64.3528 iterations 8
Cbc0038I Pass  19: suminf.    1.12015 (4) obj. -64.3528 iterations 10
Cbc0038I Pass  20: suminf.    1.33467 (7) obj. -64.3528 iterations 7
Cbc0038I Pass  21: suminf.    0.96966 (5) obj. -64.3528 iterations 5
Cbc0038I Pass  22: suminf.    1.59494 (5) obj. -64.3528 iterations 10
Cbc0038I Pass  23: suminf.    1.15951 (6) obj. -64.3528 iterations 8
Cbc0038I Pass  24: suminf.    1.12015 (4) obj. -64.3528 iterations 10
Cbc0038I Pass  25: suminf.    1.33467 (7) obj. -64.3528 iterations 7
Cbc0038I Pass  26: suminf.    0.96966 (5) obj. -64.3528 iterations 5
Cbc0038I Pass  27: suminf.    1.59494 (5) obj. -64.3528 iterations 10
Cbc0038I Pass  28: suminf.    1.15951 (6) obj. -64.3528 iterations 8
Cbc0038I Pass  29: suminf.    1.12015 (4) obj. -64.3528 iterations 10
Cbc0038I Pass  30: suminf.    1.33467 (7) obj. -64.3528 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 72 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -61.328 to -61.3296 (0.11 seconds)
Cbc0038I Round again with cutoff of -69.7973
Cbc0038I Pass  30: suminf.    7.27676 (34) obj. -69.7973 iterations 4
Cbc0038I Pass  31: suminf.    6.90828 (28) obj. -69.7973 iterations 14
Cbc0038I Pass  32: suminf.    2.28568 (8) obj. -69.7973 iterations 26
Cbc0038I Pass  33: suminf.    1.82713 (8) obj. -69.7973 iterations 9
Cbc0038I Pass  34: suminf.    3.25730 (9) obj. -69.7973 iterations 11
Cbc0038I Pass  35: suminf.    2.13249 (9) obj. -69.7973 iterations 5
Cbc0038I Pass  36: suminf.    2.13249 (9) obj. -69.7973 iterations 2
Cbc0038I Pass  37: suminf.    2.43727 (19) obj. -69.7973 iterations 13
Cbc0038I Pass  38: suminf.    2.40134 (8) obj. -69.7973 iterations 6
Cbc0038I Pass  39: suminf.    2.27045 (9) obj. -69.7973 iterations 11
Cbc0038I Pass  40: suminf.    2.25478 (11) obj. -69.7973 iterations 3
Cbc0038I Pass  41: suminf.    3.20653 (9) obj. -69.7973 iterations 18
Cbc0038I Pass  42: suminf.    2.86730 (9) obj. -69.7973 iterations 7
Cbc0038I Pass  43: suminf.    3.36946 (16) obj. -69.7973 iterations 14
Cbc0038I Pass  44: suminf.    2.97809 (10) obj. -69.7973 iterations 9
Cbc0038I Pass  45: suminf.    3.46818 (11) obj. -69.7973 iterations 13
Cbc0038I Pass  46: suminf.    2.64851 (12) obj. -69.7973 iterations 9
Cbc0038I Pass  47: suminf.    3.20653 (9) obj. -69.7973 iterations 22
Cbc0038I Pass  48: suminf.    2.86730 (9) obj. -69.7973 iterations 6
Cbc0038I Pass  49: suminf.    3.36946 (16) obj. -69.7973 iterations 12
Cbc0038I Pass  50: suminf.    2.97809 (10) obj. -69.7973 iterations 9
Cbc0038I Pass  51: suminf.    3.46818 (11) obj. -69.7973 iterations 14
Cbc0038I Pass  52: suminf.    2.64851 (12) obj. -69.7973 iterations 10
Cbc0038I Pass  53: suminf.    4.10869 (17) obj. -69.7973 iterations 17
Cbc0038I Pass  54: suminf.    2.86730 (9) obj. -69.7973 iterations 8
Cbc0038I Pass  55: suminf.    3.36946 (16) obj. -69.7973 iterations 12
Cbc0038I Pass  56: suminf.    2.97809 (10) obj. -69.7973 iterations 9
Cbc0038I Pass  57: suminf.    3.46818 (11) obj. -69.7973 iterations 13
Cbc0038I Pass  58: suminf.    2.64851 (12) obj. -69.7973 iterations 9
Cbc0038I Pass  59: suminf.    4.10869 (17) obj. -69.7973 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 72 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -61.3296 - took 0.14 seconds
Cbc0012I Integer solution of -61.329565 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 72 columns, reduced to 79 rows 45 columns
Cbc0031I 22 added rows had average density of 50.818182
Cbc0013I At root node, 22 cuts changed objective from -91.575178 to -79.177834 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7061 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1522 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.329565 best solution, best possible -79.177834 (0.68 seconds)
Cbc0038I Full problem 135 rows 72 columns, reduced to 8 rows 12 columns
Cbc0012I Integer solution of -61.331165 found by rounding after 5611 iterations and 50 nodes (0.83 seconds)
Cbc0038I Full problem 135 rows 72 columns, reduced to 6 rows 10 columns
Cbc0012I Integer solution of -61.331875 found by rounding after 6794 iterations and 185 nodes (0.96 seconds)
Cbc0001I Search completed - best objective -61.33187515000002, took 8102 iterations and 278 nodes (1.09 seconds)
Cbc0032I Strong branching done 1456 times (13253 iterations), fathomed 61 nodes and fixed 76 variables
Cbc0035I Maximum depth 17, 754 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 109 (-44) columns and 1708 (-1596) elements
Clp1000I sum of infeasibilities 6.02474e-08 - average 5.9066e-10, 57 fixed columns
Coin0506I Presolve 43 (-59) rows, 52 (-57) columns and 185 (-1523) elements
Clp0006I 0  Obj 46.660017 Dual inf 1.3681791 (51)
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 3.6522875 - largest nonzero change 2.6586073e-05 ( 0.00091831452%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 50.476837
Clp0000I Optimal - objective value 50.476837
Coin0511I After Postsolve, objective 50.476837, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.476837 Dual inf 47.633527 (38)
Clp0014I Perturbing problem by 0.001% of 1.8733511 - largest nonzero change 2.041357e-05 ( 0.0014083952%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 99.867533
Clp0000I Optimal - objective value 99.867533
Clp0000I Optimal - objective value 99.867533
Coin0511I After Postsolve, objective 99.867533, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.86753309 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 109 columns (109 integer (109 of which binary)) and 1712 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.606%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.36793
Cbc0038I Pass   1: suminf.    2.60670 (22) obj. -79.8191 iterations 30
Cbc0038I Pass   2: suminf.    2.60670 (22) obj. -79.8191 iterations 1
Cbc0038I Solution found of -49.1315
Cbc0038I Rounding solution of -58.0699 is better than previous of -49.1315

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 109 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -61.6542
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.60670 (22) obj. -79.8191 iterations 0
Cbc0038I Pass   4: suminf.    2.60670 (22) obj. -79.8191 iterations 1
Cbc0038I Pass   5: suminf.    1.47833 (10) obj. -61.6542 iterations 36
Cbc0038I Pass   6: suminf.    1.45232 (6) obj. -61.6542 iterations 20
Cbc0038I Pass   7: suminf.    1.45233 (6) obj. -61.6542 iterations 4
Cbc0038I Pass   8: suminf.    0.78627 (4) obj. -61.6542 iterations 12
Cbc0038I Pass   9: suminf.    0.33756 (3) obj. -61.6542 iterations 6
Cbc0038I Pass  10: suminf.    0.78627 (4) obj. -61.6542 iterations 7
Cbc0038I Pass  11: suminf.    2.20258 (11) obj. -61.6542 iterations 31
Cbc0038I Pass  12: suminf.    1.34301 (14) obj. -61.6542 iterations 12
Cbc0038I Pass  13: suminf.    2.85673 (12) obj. -61.6542 iterations 15
Cbc0038I Pass  14: suminf.    2.03404 (9) obj. -61.6542 iterations 8
Cbc0038I Pass  15: suminf.    1.95956 (11) obj. -61.6542 iterations 5
Cbc0038I Pass  16: suminf.    2.69009 (22) obj. -61.6542 iterations 20
Cbc0038I Pass  17: suminf.    0.98470 (7) obj. -61.6542 iterations 9
Cbc0038I Pass  18: suminf.    2.62895 (7) obj. -61.6542 iterations 12
Cbc0038I Pass  19: suminf.    2.17809 (7) obj. -61.6542 iterations 1
Cbc0038I Pass  20: suminf.    0.98470 (7) obj. -61.6542 iterations 10
Cbc0038I Pass  21: suminf.    3.57991 (18) obj. -61.6542 iterations 31
Cbc0038I Pass  22: suminf.    2.31358 (13) obj. -61.6542 iterations 10
Cbc0038I Pass  23: suminf.    1.71318 (8) obj. -61.6542 iterations 16
Cbc0038I Pass  24: suminf.    1.21169 (8) obj. -61.6542 iterations 12
Cbc0038I Pass  25: suminf.    1.82763 (7) obj. -61.6542 iterations 12
Cbc0038I Pass  26: suminf.    1.35976 (8) obj. -61.6542 iterations 2
Cbc0038I Pass  27: suminf.    2.82696 (9) obj. -61.6542 iterations 13
Cbc0038I Pass  28: suminf.    2.01910 (7) obj. -61.6542 iterations 12
Cbc0038I Pass  29: suminf.    1.28810 (8) obj. -61.6542 iterations 8
Cbc0038I Pass  30: suminf.    1.28810 (8) obj. -61.6542 iterations 0
Cbc0038I Pass  31: suminf.    1.33389 (5) obj. -61.6542 iterations 20
Cbc0038I Pass  32: suminf.    1.13023 (5) obj. -62.2652 iterations 7
Cbc0038I Rounding solution of -60.0828 is better than previous of -58.0699

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 109 columns, reduced to 52 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -60.0828 to -60.6429 (0.13 seconds)
Cbc0038I Round again with cutoff of -68.1058
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.60670 (22) obj. -79.8191 iterations 0
Cbc0038I Pass  33: suminf.    2.60670 (22) obj. -79.8191 iterations 1
Cbc0038I Pass  34: suminf.    0.81590 (11) obj. -68.1058 iterations 24
Cbc0038I Pass  35: suminf.    0.76233 (9) obj. -68.1838 iterations 6
Cbc0038I Pass  36: suminf.    0.77798 (4) obj. -68.1058 iterations 25
Cbc0038I Pass  37: suminf.    0.61177 (4) obj. -68.1058 iterations 10
Cbc0038I Pass  38: suminf.    0.74715 (5) obj. -68.1058 iterations 15
Cbc0038I Pass  39: suminf.    0.66558 (4) obj. -68.1058 iterations 13
Cbc0038I Pass  40: suminf.    0.69339 (5) obj. -68.1058 iterations 17
Cbc0038I Pass  41: suminf.    2.06025 (14) obj. -68.1058 iterations 40
Cbc0038I Pass  42: suminf.    1.40889 (12) obj. -69.3544 iterations 4
Cbc0038I Pass  43: suminf.    2.00380 (12) obj. -68.1058 iterations 36
Cbc0038I Pass  44: suminf.    2.00380 (12) obj. -68.1058 iterations 4
Cbc0038I Pass  45: suminf.    1.74436 (10) obj. -68.1058 iterations 17
Cbc0038I Pass  46: suminf.    1.74436 (10) obj. -68.1058 iterations 6
Cbc0038I Pass  47: suminf.    1.69308 (10) obj. -68.1058 iterations 10
Cbc0038I Pass  48: suminf.    1.69308 (10) obj. -68.1058 iterations 5
Cbc0038I Pass  49: suminf.    1.74436 (10) obj. -68.1058 iterations 8
Cbc0038I Pass  50: suminf.    2.00762 (15) obj. -68.1058 iterations 21
Cbc0038I Pass  51: suminf.    1.98316 (15) obj. -68.2526 iterations 1
Cbc0038I Pass  52: suminf.    4.35242 (15) obj. -68.1058 iterations 27
Cbc0038I Pass  53: suminf.    2.49056 (15) obj. -68.1058 iterations 5
Cbc0038I Pass  54: suminf.    2.49056 (15) obj. -68.1058 iterations 0
Cbc0038I Pass  55: suminf.    1.59852 (11) obj. -68.1058 iterations 21
Cbc0038I Pass  56: suminf.    1.59852 (11) obj. -68.1058 iterations 0
Cbc0038I Pass  57: suminf.    2.25982 (11) obj. -68.1058 iterations 10
Cbc0038I Pass  58: suminf.    2.25982 (11) obj. -68.1058 iterations 6
Cbc0038I Pass  59: suminf.    2.15749 (11) obj. -68.1058 iterations 8
Cbc0038I Pass  60: suminf.    2.15749 (11) obj. -68.1058 iterations 7
Cbc0038I Pass  61: suminf.    2.69402 (18) obj. -68.1058 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 109 columns, reduced to 29 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -60.6429 - took 0.13 seconds
Cbc0012I Integer solution of -60.642935 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 102 rows 109 columns, reduced to 10 rows 13 columns
Cbc0031I 56 added rows had average density of 35.553571
Cbc0013I At root node, 56 cuts changed objective from -93.912218 to -69.107948 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15264 row cuts average 7.4 elements, 2 column cuts (2 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1538 row cuts average 96.3 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 208 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 838 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 304 row cuts average 57.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.627 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -60.642935 best solution, best possible -69.107948 (2.67 seconds)
Cbc0038I Full problem 102 rows 109 columns, reduced to 53 rows 62 columns
Cbc0012I Integer solution of -61.329565 found by RINS after 5883 iterations and 42 nodes (3.33 seconds)
Cbc0038I Full problem 158 rows 109 columns, reduced to 86 rows 98 columns
Cbc0044I Reduced cost fixing - 86 rows, 98 columns - restarting search
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.9877
Cbc0038I Pass   1: suminf.    2.85317 (21) obj. -78.3432 iterations 33
Cbc0038I Pass   2: suminf.    2.85317 (21) obj. -78.3432 iterations 1
Cbc0038I Pass   3: suminf.    1.20182 (7) obj. -61.3296 iterations 37
Cbc0038I Pass   4: suminf.    0.45672 (1) obj. -61.3296 iterations 23
Cbc0038I Pass   5: suminf.    0.16667 (1) obj. -63.0699 iterations 9
Cbc0038I Pass   6: suminf.    1.06711 (7) obj. -61.3296 iterations 17
Cbc0038I Pass   7: suminf.    1.06711 (7) obj. -61.3296 iterations 4
Cbc0038I Pass   8: suminf.    0.93069 (7) obj. -61.3296 iterations 18
Cbc0038I Pass   9: suminf.    0.70474 (6) obj. -61.3844 iterations 7
Cbc0038I Pass  10: suminf.    1.54685 (7) obj. -61.3296 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.38 seconds)
Cbc0038I Full problem 87 rows 98 columns, reduced to 87 rows 98 columns
Cbc0038I After 3.47 seconds - Feasibility pump exiting with objective of -60.6429 - took 0.08 seconds
Cbc0031I 59 added rows had average density of 25.389831
Cbc0013I At root node, 59 cuts changed objective from -91.942257 to -69.082002 in 65 passes
Cbc0014I Cut generator 0 (Probing) - 3629 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 210 row cuts average 92.6 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 132 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 486 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.462 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 209 row cuts average 30.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -69.082002 (4.83 seconds)
Cbc0016I Integer solution of -61.331875 found by strong branching after 3199 iterations and 41 nodes (5.12 seconds)
Cbc0038I Full problem 86 rows 98 columns, reduced to 14 rows 22 columns
Cbc0038I Full problem 86 rows 98 columns, reduced to 42 rows 47 columns
Cbc0001I Search completed - best objective -61.33187515, took 6578 iterations and 264 nodes (5.82 seconds)
Cbc0032I Strong branching done 2110 times (20897 iterations), fathomed 21 nodes and fixed 52 variables
Cbc0035I Maximum depth 18, 404 variables fixed on reduced cost
Cbc0038I Probing was tried 428 times and created 4233 cuts of which 0 were active after adding rounds of cuts (0.074 seconds)
Cbc0038I Gomory was tried 420 times and created 226 cuts of which 0 were active after adding rounds of cuts (0.103 seconds)
Cbc0038I Knapsack was tried 420 times and created 655 cuts of which 0 were active after adding rounds of cuts (0.084 seconds)
Cbc0038I Clique was tried 420 times and created 448 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Cbc0038I OddWheel was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
Cbc0038I MixedIntegerRounding2 was tried 420 times and created 735 cuts of which 0 were active after adding rounds of cuts (0.087 seconds)
Cbc0038I FlowCover was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 420 times and created 336 cuts of which 0 were active after adding rounds of cuts (0.122 seconds)
Cbc0038I ZeroHalf was tried 65 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.462 seconds)
Cbc0038I Stored from first was tried 420 times and created 336 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -61.331875 found by Reduced search after 12677 iterations and 314 nodes (5.82 seconds)
Cbc0001I Search completed - best objective -61.33187515000002, took 12677 iterations and 314 nodes (5.82 seconds)
Cbc0032I Strong branching done 662 times (10672 iterations), fathomed 6 nodes and fixed 15 variables
Cbc0035I Maximum depth 14, 115 variables fixed on reduced cost
Total time (CPU seconds):       4.64   (Wallclock seconds):       5.84

