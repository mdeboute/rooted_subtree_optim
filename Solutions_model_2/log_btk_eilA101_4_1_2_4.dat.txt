Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 3.00588e-05 - average 1.63363e-07, 17 fixed columns
Coin0506I Presolve 146 (-38) rows, 84 (-17) columns and 452 (-110) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 2.2562392 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 39.754148
Clp0000I Optimal - objective value 39.754148
Coin0511I After Postsolve, objective 39.754148, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.754148
Clp0000I Optimal - objective value 39.754148
Clp0000I Optimal - objective value 39.754148
Coin0511I After Postsolve, objective 39.754148, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.75414815 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 13.1886
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.82566 iterations 61
Cbc0038I Solution found of 7.82566
Cbc0038I Relaxing continuous gives 7.82566
Cbc0038I Rounding solution of -6.25556 is better than previous of 7.82566

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -6.25556 to -8.62333 (0.07 seconds)
Cbc0038I Round again with cutoff of -11.7365
Cbc0038I Pass   2: suminf.    2.90475 (11) obj. -11.7365 iterations 19
Cbc0038I Pass   3: suminf.    1.18632 (4) obj. -11.7365 iterations 16
Cbc0038I Pass   4: suminf.    1.11664 (4) obj. -11.7365 iterations 2
Cbc0038I Pass   5: suminf.    0.88847 (5) obj. -11.7365 iterations 5
Cbc0038I Pass   6: suminf.    0.71945 (6) obj. -11.7365 iterations 2
Cbc0038I Pass   7: suminf.    1.11413 (4) obj. -11.7365 iterations 7
Cbc0038I Pass   8: suminf.    1.11019 (4) obj. -11.7365 iterations 1
Cbc0038I Pass   9: suminf.    1.52191 (5) obj. -11.7365 iterations 2
Cbc0038I Pass  10: suminf.    1.52191 (5) obj. -11.7365 iterations 1
Cbc0038I Pass  11: suminf.    1.16152 (5) obj. -11.7365 iterations 4
Cbc0038I Pass  12: suminf.    1.03962 (7) obj. -11.7365 iterations 6
Cbc0038I Pass  13: suminf.    1.22980 (4) obj. -11.7365 iterations 10
Cbc0038I Pass  14: suminf.    1.12247 (4) obj. -11.7365 iterations 8
Cbc0038I Pass  15: suminf.    1.11019 (4) obj. -11.7365 iterations 1
Cbc0038I Pass  16: suminf.    1.52191 (5) obj. -11.7365 iterations 2
Cbc0038I Pass  17: suminf.    1.52191 (5) obj. -11.7365 iterations 1
Cbc0038I Pass  18: suminf.    1.16152 (5) obj. -11.7365 iterations 4
Cbc0038I Pass  19: suminf.    1.03962 (7) obj. -11.7365 iterations 6
Cbc0038I Pass  20: suminf.    1.22980 (4) obj. -11.7365 iterations 10
Cbc0038I Pass  21: suminf.    1.12247 (4) obj. -11.7365 iterations 8
Cbc0038I Pass  22: suminf.    1.11019 (4) obj. -11.7365 iterations 1
Cbc0038I Pass  23: suminf.    1.52191 (5) obj. -11.7365 iterations 2
Cbc0038I Pass  24: suminf.    1.52191 (5) obj. -11.7365 iterations 1
Cbc0038I Pass  25: suminf.    1.16152 (5) obj. -11.7365 iterations 4
Cbc0038I Pass  26: suminf.    1.03962 (7) obj. -11.7365 iterations 6
Cbc0038I Pass  27: suminf.    1.22980 (4) obj. -11.7365 iterations 10
Cbc0038I Pass  28: suminf.    1.12247 (4) obj. -11.7365 iterations 8
Cbc0038I Pass  29: suminf.    1.11019 (4) obj. -11.7365 iterations 1
Cbc0038I Pass  30: suminf.    1.52191 (5) obj. -11.7365 iterations 2
Cbc0038I Pass  31: suminf.    1.52191 (5) obj. -11.7365 iterations 1
Cbc0038I Rounding solution of -9.08618 is better than previous of -8.62333

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -17.34
Cbc0038I Pass  31: suminf.    4.14529 (13) obj. -17.34 iterations 1
Cbc0038I Pass  32: suminf.    2.25559 (7) obj. -17.34 iterations 14
Cbc0038I Pass  33: suminf.    2.16972 (8) obj. -17.34 iterations 3
Cbc0038I Pass  34: suminf.    1.81814 (6) obj. -17.34 iterations 11
Cbc0038I Pass  35: suminf.    2.19394 (6) obj. -17.34 iterations 7
Cbc0038I Pass  36: suminf.    2.19394 (6) obj. -17.34 iterations 1
Cbc0038I Pass  37: suminf.    2.23037 (6) obj. -17.34 iterations 5
Cbc0038I Pass  38: suminf.    2.23037 (6) obj. -17.34 iterations 1
Cbc0038I Pass  39: suminf.    2.19394 (6) obj. -17.34 iterations 5
Cbc0038I Pass  40: suminf.    4.01814 (12) obj. -17.34 iterations 23
Cbc0038I Pass  41: suminf.    2.52960 (9) obj. -17.34 iterations 11
Cbc0038I Pass  42: suminf.    2.06211 (6) obj. -17.34 iterations 29
Cbc0038I Pass  43: suminf.    2.06211 (6) obj. -17.34 iterations 0
Cbc0038I Pass  44: suminf.    2.31955 (6) obj. -17.34 iterations 6
Cbc0038I Pass  45: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  46: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  47: suminf.    2.12872 (9) obj. -17.34 iterations 10
Cbc0038I Pass  48: suminf.    1.96868 (8) obj. -17.34 iterations 1
Cbc0038I Pass  49: suminf.    1.92641 (6) obj. -17.34 iterations 8
Cbc0038I Pass  50: suminf.    2.31955 (6) obj. -17.34 iterations 7
Cbc0038I Pass  51: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  52: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  53: suminf.    2.12872 (9) obj. -17.34 iterations 10
Cbc0038I Pass  54: suminf.    1.96868 (8) obj. -17.34 iterations 1
Cbc0038I Pass  55: suminf.    1.92641 (6) obj. -17.34 iterations 8
Cbc0038I Pass  56: suminf.    2.31955 (6) obj. -17.34 iterations 7
Cbc0038I Pass  57: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  58: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  59: suminf.    2.12872 (9) obj. -17.34 iterations 10
Cbc0038I Pass  60: suminf.    1.96868 (8) obj. -17.34 iterations 1
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 89 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -9.08618 to -11.3497 (0.24 seconds)
Cbc0038I Round again with cutoff of -24.0643
Cbc0038I Pass  60: suminf.    5.72648 (15) obj. -24.0643 iterations 3
Cbc0038I Pass  61: suminf.    2.47409 (10) obj. -24.0643 iterations 17
Cbc0038I Pass  62: suminf.    1.79748 (7) obj. -24.0643 iterations 2
Cbc0038I Pass  63: suminf.    1.76712 (6) obj. -24.0643 iterations 2
Cbc0038I Pass  64: suminf.    2.65011 (8) obj. -24.0643 iterations 4
Cbc0038I Pass  65: suminf.    2.51453 (7) obj. -24.0643 iterations 2
Cbc0038I Pass  66: suminf.    2.51453 (7) obj. -24.0643 iterations 0
Cbc0038I Pass  67: suminf.    2.39607 (6) obj. -24.0643 iterations 4
Cbc0038I Pass  68: suminf.    2.39607 (6) obj. -24.0643 iterations 0
Cbc0038I Pass  69: suminf.    2.51453 (7) obj. -24.0643 iterations 3
Cbc0038I Pass  70: suminf.    5.12790 (15) obj. -24.0643 iterations 27
Cbc0038I Pass  71: suminf.    3.86852 (12) obj. -24.0643 iterations 15
Cbc0038I Pass  72: suminf.    3.38480 (10) obj. -24.0643 iterations 19
Cbc0038I Pass  73: suminf.    3.33762 (11) obj. -24.0643 iterations 2
Cbc0038I Pass  74: suminf.    3.41187 (9) obj. -24.0643 iterations 9
Cbc0038I Pass  75: suminf.    3.36877 (10) obj. -24.0643 iterations 1
Cbc0038I Pass  76: suminf.    3.43958 (10) obj. -24.0643 iterations 9
Cbc0038I Pass  77: suminf.    7.03253 (20) obj. -24.0643 iterations 30
Cbc0038I Pass  78: suminf.    5.13369 (17) obj. -24.0643 iterations 12
Cbc0038I Pass  79: suminf.    5.13369 (17) obj. -24.0643 iterations 0
Cbc0038I Pass  80: suminf.    4.83856 (11) obj. -24.0643 iterations 21
Cbc0038I Pass  81: suminf.    3.40864 (10) obj. -24.0643 iterations 4
Cbc0038I Pass  82: suminf.    3.11617 (9) obj. -24.0643 iterations 3
Cbc0038I Pass  83: suminf.    3.08301 (9) obj. -24.0643 iterations 1
Cbc0038I Pass  84: suminf.    3.07220 (9) obj. -24.0643 iterations 1
Cbc0038I Pass  85: suminf.    3.81880 (10) obj. -24.0643 iterations 5
Cbc0038I Pass  86: suminf.    3.75360 (9) obj. -24.0643 iterations 1
Cbc0038I Pass  87: suminf.    2.73741 (9) obj. -24.0643 iterations 3
Cbc0038I Pass  88: suminf.    2.65280 (8) obj. -24.0643 iterations 2
Cbc0038I Pass  89: suminf.    2.95443 (8) obj. -24.0643 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 109 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -11.3497 - took 0.30 seconds
Cbc0012I Integer solution of -11.349658 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 80 rows 47 columns
Cbc0031I 24 added rows had average density of 76.916667
Cbc0013I At root node, 24 cuts changed objective from -39.754148 to -30.941872 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18108 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2605 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 78.4 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.349658 best solution, best possible -30.941872 (1.79 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 98 rows 57 columns
Cbc0038I Full problem 184 rows 101 columns, reduced to 48 rows 32 columns
Cbc0012I Integer solution of -11.440253 found by rounding after 14377 iterations and 103 nodes (2.38 seconds)
Cbc0012I Integer solution of -11.880768 found by DiveCoefficient after 14379 iterations and 104 nodes (2.38 seconds)
Cbc0001I Search completed - best objective -11.88076799999999, took 14800 iterations and 122 nodes (2.42 seconds)
Cbc0032I Strong branching done 1316 times (21396 iterations), fathomed 12 nodes and fixed 68 variables
Cbc0035I Maximum depth 38, 378 variables fixed on reduced cost
Total time (CPU seconds):       2.30   (Wallclock seconds):       2.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-81) rows, 139 (-63) columns and 2552 (-3101) elements
Clp1000I sum of infeasibilities 3.08729e-06 - average 2.50999e-08, 74 fixed columns
Coin0506I Presolve 48 (-75) rows, 64 (-75) columns and 218 (-2334) elements
Clp0006I 0  Obj 8.5249756 Dual inf 0.63649091 (64)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 4.0517253 - largest nonzero change 4.3762677e-05 ( 0.00088996209%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 8.9472338
Clp0000I Optimal - objective value 8.9472338
Coin0511I After Postsolve, objective 8.9472338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 8.9472338 Dual inf 37.457782 (39)
Clp0014I Perturbing problem by 0.001% of 1.7691064 - largest nonzero change 2.5210978e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 64.12451
Clp0000I Optimal - objective value 64.12451
Clp0000I Optimal - objective value 64.12451
Coin0511I After Postsolve, objective 64.12451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.12451017 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 144 columns (144 integer (144 of which binary)) and 2581 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.760%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 6.24675
Cbc0038I Pass   1: suminf.    3.85599 (33) obj. -44.3202 iterations 11
Cbc0038I Pass   2: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass   3: suminf.    1.75170 (18) obj. -22.8478 iterations 15
Cbc0038I Solution found of -5.65508
Cbc0038I Rounding solution of -10.6353 is better than previous of -5.65508

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -15.0731
Cbc0038I Pass   4: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass   5: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass   6: suminf.    1.18597 (13) obj. -18.4136 iterations 20
Cbc0038I Pass   7: suminf.    0.94419 (11) obj. -15.0731 iterations 18
Cbc0038I Pass   8: suminf.    0.94419 (11) obj. -15.0731 iterations 0
Cbc0038I Pass   9: suminf.    0.65208 (4) obj. -15.0731 iterations 12
Cbc0038I Pass  10: suminf.    0.29316 (4) obj. -15.0731 iterations 4
Cbc0038I Pass  11: suminf.    0.30321 (3) obj. -15.0731 iterations 7
Cbc0038I Pass  12: suminf.    1.88053 (17) obj. -15.0731 iterations 39
Cbc0038I Pass  13: suminf.    1.82137 (16) obj. -15.0731 iterations 7
Cbc0038I Pass  14: suminf.    1.27834 (6) obj. -15.0731 iterations 22
Cbc0038I Pass  15: suminf.    1.06980 (7) obj. -15.0731 iterations 2
Cbc0038I Pass  16: suminf.    1.27834 (6) obj. -15.0731 iterations 8
Cbc0038I Pass  17: suminf.    2.18493 (14) obj. -15.0731 iterations 26
Cbc0038I Pass  18: suminf.    2.00947 (14) obj. -15.0731 iterations 9
Cbc0038I Pass  19: suminf.    2.40983 (10) obj. -15.0731 iterations 11
Cbc0038I Pass  20: suminf.    2.01590 (11) obj. -15.0731 iterations 2
Cbc0038I Pass  21: suminf.    1.36463 (8) obj. -15.0731 iterations 11
Cbc0038I Pass  22: suminf.    1.33384 (8) obj. -15.0731 iterations 5
Cbc0038I Pass  23: suminf.    1.52801 (8) obj. -15.0731 iterations 7
Cbc0038I Pass  24: suminf.    1.47545 (8) obj. -15.0731 iterations 3
Cbc0038I Pass  25: suminf.    2.40632 (16) obj. -15.0731 iterations 27
Cbc0038I Pass  26: suminf.    2.31432 (16) obj. -15.0731 iterations 5
Cbc0038I Pass  27: suminf.    1.51757 (8) obj. -15.0731 iterations 23
Cbc0038I Pass  28: suminf.    1.22086 (9) obj. -15.0731 iterations 11
Cbc0038I Pass  29: suminf.    2.05228 (8) obj. -15.0731 iterations 8
Cbc0038I Pass  30: suminf.    1.14609 (7) obj. -15.0731 iterations 6
Cbc0038I Pass  31: suminf.    1.67386 (8) obj. -15.0731 iterations 14
Cbc0038I Pass  32: suminf.    1.05565 (7) obj. -15.0731 iterations 11
Cbc0038I Pass  33: suminf.    1.49385 (8) obj. -15.0731 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 22 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -5.65508 to -10.7707 (0.08 seconds)
Cbc0038I Round again with cutoff of -23.061
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass  34: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass  35: suminf.    1.19151 (19) obj. -23.061 iterations 26
Cbc0038I Pass  36: suminf.    1.17968 (11) obj. -23.061 iterations 3
Cbc0038I Pass  37: suminf.    1.74680 (12) obj. -23.061 iterations 11
Cbc0038I Pass  38: suminf.    1.59543 (11) obj. -23.061 iterations 1
Cbc0038I Pass  39: suminf.    1.57836 (10) obj. -23.061 iterations 21
Cbc0038I Pass  40: suminf.    1.57776 (10) obj. -23.061 iterations 2
Cbc0038I Pass  41: suminf.    2.06426 (12) obj. -23.061 iterations 9
Cbc0038I Pass  42: suminf.    1.44273 (10) obj. -23.061 iterations 8
Cbc0038I Pass  43: suminf.    2.06426 (12) obj. -23.061 iterations 11
Cbc0038I Pass  44: suminf.    2.76345 (16) obj. -23.061 iterations 19
Cbc0038I Pass  45: suminf.    2.76345 (16) obj. -23.061 iterations 2
Cbc0038I Pass  46: suminf.    2.08334 (10) obj. -23.061 iterations 26
Cbc0038I Pass  47: suminf.    1.56228 (9) obj. -23.2867 iterations 6
Cbc0038I Pass  48: suminf.    2.07925 (12) obj. -23.061 iterations 14
Cbc0038I Pass  49: suminf.    1.79432 (17) obj. -23.061 iterations 3
Cbc0038I Pass  50: suminf.    2.10075 (10) obj. -23.061 iterations 13
Cbc0038I Pass  51: suminf.    1.66758 (9) obj. -23.061 iterations 8
Cbc0038I Pass  52: suminf.    2.13878 (10) obj. -23.061 iterations 7
Cbc0038I Pass  53: suminf.    1.87214 (11) obj. -23.061 iterations 3
Cbc0038I Pass  54: suminf.    2.10075 (10) obj. -23.061 iterations 9
Cbc0038I Pass  55: suminf.    3.22469 (17) obj. -23.061 iterations 20
Cbc0038I Pass  56: suminf.    3.02617 (15) obj. -23.061 iterations 9
Cbc0038I Pass  57: suminf.    1.78950 (10) obj. -23.061 iterations 19
Cbc0038I Pass  58: suminf.    1.69865 (11) obj. -23.061 iterations 2
Cbc0038I Pass  59: suminf.    3.94637 (18) obj. -23.061 iterations 21
Cbc0038I Pass  60: suminf.    2.09091 (15) obj. -23.061 iterations 10
Cbc0038I Pass  61: suminf.    2.33602 (11) obj. -23.061 iterations 14
Cbc0038I Pass  62: suminf.    1.57959 (10) obj. -23.061 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -10.7707 - took 0.07 seconds
Cbc0012I Integer solution of -10.770653 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 3 rows 6 columns
Cbc0031I 64 added rows had average density of 44.25
Cbc0013I At root node, 64 cuts changed objective from -55.012364 to -19.467032 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20227 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2133 row cuts average 135.6 elements, 0 column cuts (0 active)  in 0.223 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 830 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1676 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 346 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.344 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.770653 best solution, best possible -19.467032 (2.56 seconds)
Cbc0010I After 14 nodes, 7 on tree, -10.770653 best solution, best possible -18.713675 (3.27 seconds)
Cbc0012I Integer solution of -10.926743 found by rounding after 8279 iterations and 26 nodes (3.33 seconds)
Cbc0012I Integer solution of -10.977913 found by rounding after 8425 iterations and 34 nodes (3.35 seconds)
Cbc0016I Integer solution of -11.349658 found by strong branching after 8465 iterations and 38 nodes (3.36 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 3 rows 6 columns
Cbc0012I Integer solution of -11.880768 found by RINS after 8484 iterations and 41 nodes (3.37 seconds)
Cbc0001I Search completed - best objective -11.88076799999999, took 9022 iterations and 52 nodes (3.41 seconds)
Cbc0032I Strong branching done 616 times (13715 iterations), fathomed 9 nodes and fixed 11 variables
Cbc0035I Maximum depth 21, 236 variables fixed on reduced cost
Total time (CPU seconds):       2.91   (Wallclock seconds):       3.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 3.00588e-05 - average 1.63363e-07, 17 fixed columns
Coin0506I Presolve 146 (-38) rows, 84 (-17) columns and 452 (-110) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 2.2562392 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 39.754148
Clp0000I Optimal - objective value 39.754148
Coin0511I After Postsolve, objective 39.754148, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.754148
Clp0000I Optimal - objective value 39.754148
Clp0000I Optimal - objective value 39.754148
Coin0511I After Postsolve, objective 39.754148, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.75414815 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 13.1886
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.82566 iterations 61
Cbc0038I Solution found of 7.82566
Cbc0038I Relaxing continuous gives 7.82566
Cbc0038I Rounding solution of -6.25556 is better than previous of 7.82566

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -6.25556 to -8.62333 (0.07 seconds)
Cbc0038I Round again with cutoff of -11.7365
Cbc0038I Pass   2: suminf.    2.90475 (11) obj. -11.7365 iterations 19
Cbc0038I Pass   3: suminf.    1.18632 (4) obj. -11.7365 iterations 16
Cbc0038I Pass   4: suminf.    1.11664 (4) obj. -11.7365 iterations 2
Cbc0038I Pass   5: suminf.    0.88847 (5) obj. -11.7365 iterations 5
Cbc0038I Pass   6: suminf.    0.71945 (6) obj. -11.7365 iterations 2
Cbc0038I Pass   7: suminf.    1.11413 (4) obj. -11.7365 iterations 7
Cbc0038I Pass   8: suminf.    1.11019 (4) obj. -11.7365 iterations 1
Cbc0038I Pass   9: suminf.    1.52191 (5) obj. -11.7365 iterations 2
Cbc0038I Pass  10: suminf.    1.52191 (5) obj. -11.7365 iterations 1
Cbc0038I Pass  11: suminf.    1.16152 (5) obj. -11.7365 iterations 4
Cbc0038I Pass  12: suminf.    1.03962 (7) obj. -11.7365 iterations 6
Cbc0038I Pass  13: suminf.    1.22980 (4) obj. -11.7365 iterations 10
Cbc0038I Pass  14: suminf.    1.12247 (4) obj. -11.7365 iterations 8
Cbc0038I Pass  15: suminf.    1.11019 (4) obj. -11.7365 iterations 1
Cbc0038I Pass  16: suminf.    1.52191 (5) obj. -11.7365 iterations 2
Cbc0038I Pass  17: suminf.    1.52191 (5) obj. -11.7365 iterations 1
Cbc0038I Pass  18: suminf.    1.16152 (5) obj. -11.7365 iterations 4
Cbc0038I Pass  19: suminf.    1.03962 (7) obj. -11.7365 iterations 6
Cbc0038I Pass  20: suminf.    1.22980 (4) obj. -11.7365 iterations 10
Cbc0038I Pass  21: suminf.    1.12247 (4) obj. -11.7365 iterations 8
Cbc0038I Pass  22: suminf.    1.11019 (4) obj. -11.7365 iterations 1
Cbc0038I Pass  23: suminf.    1.52191 (5) obj. -11.7365 iterations 2
Cbc0038I Pass  24: suminf.    1.52191 (5) obj. -11.7365 iterations 1
Cbc0038I Pass  25: suminf.    1.16152 (5) obj. -11.7365 iterations 4
Cbc0038I Pass  26: suminf.    1.03962 (7) obj. -11.7365 iterations 6
Cbc0038I Pass  27: suminf.    1.22980 (4) obj. -11.7365 iterations 10
Cbc0038I Pass  28: suminf.    1.12247 (4) obj. -11.7365 iterations 8
Cbc0038I Pass  29: suminf.    1.11019 (4) obj. -11.7365 iterations 1
Cbc0038I Pass  30: suminf.    1.52191 (5) obj. -11.7365 iterations 2
Cbc0038I Pass  31: suminf.    1.52191 (5) obj. -11.7365 iterations 1
Cbc0038I Rounding solution of -9.08618 is better than previous of -8.62333

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -17.34
Cbc0038I Pass  31: suminf.    4.14529 (13) obj. -17.34 iterations 1
Cbc0038I Pass  32: suminf.    2.25559 (7) obj. -17.34 iterations 14
Cbc0038I Pass  33: suminf.    2.16972 (8) obj. -17.34 iterations 3
Cbc0038I Pass  34: suminf.    1.81814 (6) obj. -17.34 iterations 11
Cbc0038I Pass  35: suminf.    2.19394 (6) obj. -17.34 iterations 7
Cbc0038I Pass  36: suminf.    2.19394 (6) obj. -17.34 iterations 1
Cbc0038I Pass  37: suminf.    2.23037 (6) obj. -17.34 iterations 5
Cbc0038I Pass  38: suminf.    2.23037 (6) obj. -17.34 iterations 1
Cbc0038I Pass  39: suminf.    2.19394 (6) obj. -17.34 iterations 5
Cbc0038I Pass  40: suminf.    4.01814 (12) obj. -17.34 iterations 23
Cbc0038I Pass  41: suminf.    2.52960 (9) obj. -17.34 iterations 11
Cbc0038I Pass  42: suminf.    2.06211 (6) obj. -17.34 iterations 29
Cbc0038I Pass  43: suminf.    2.06211 (6) obj. -17.34 iterations 0
Cbc0038I Pass  44: suminf.    2.31955 (6) obj. -17.34 iterations 6
Cbc0038I Pass  45: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  46: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  47: suminf.    2.12872 (9) obj. -17.34 iterations 10
Cbc0038I Pass  48: suminf.    1.96868 (8) obj. -17.34 iterations 1
Cbc0038I Pass  49: suminf.    1.92641 (6) obj. -17.34 iterations 8
Cbc0038I Pass  50: suminf.    2.31955 (6) obj. -17.34 iterations 7
Cbc0038I Pass  51: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  52: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  53: suminf.    2.12872 (9) obj. -17.34 iterations 10
Cbc0038I Pass  54: suminf.    1.96868 (8) obj. -17.34 iterations 1
Cbc0038I Pass  55: suminf.    1.92641 (6) obj. -17.34 iterations 8
Cbc0038I Pass  56: suminf.    2.31955 (6) obj. -17.34 iterations 7
Cbc0038I Pass  57: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  58: suminf.    2.17577 (7) obj. -17.34 iterations 1
Cbc0038I Pass  59: suminf.    2.12872 (9) obj. -17.34 iterations 10
Cbc0038I Pass  60: suminf.    1.96868 (8) obj. -17.34 iterations 1
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 89 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -9.08618 to -11.3497 (0.21 seconds)
Cbc0038I Round again with cutoff of -24.0643
Cbc0038I Pass  60: suminf.    5.72648 (15) obj. -24.0643 iterations 3
Cbc0038I Pass  61: suminf.    2.47409 (10) obj. -24.0643 iterations 17
Cbc0038I Pass  62: suminf.    1.79748 (7) obj. -24.0643 iterations 2
Cbc0038I Pass  63: suminf.    1.76712 (6) obj. -24.0643 iterations 2
Cbc0038I Pass  64: suminf.    2.65011 (8) obj. -24.0643 iterations 4
Cbc0038I Pass  65: suminf.    2.51453 (7) obj. -24.0643 iterations 2
Cbc0038I Pass  66: suminf.    2.51453 (7) obj. -24.0643 iterations 0
Cbc0038I Pass  67: suminf.    2.39607 (6) obj. -24.0643 iterations 4
Cbc0038I Pass  68: suminf.    2.39607 (6) obj. -24.0643 iterations 0
Cbc0038I Pass  69: suminf.    2.51453 (7) obj. -24.0643 iterations 3
Cbc0038I Pass  70: suminf.    5.12790 (15) obj. -24.0643 iterations 27
Cbc0038I Pass  71: suminf.    3.86852 (12) obj. -24.0643 iterations 15
Cbc0038I Pass  72: suminf.    3.38480 (10) obj. -24.0643 iterations 19
Cbc0038I Pass  73: suminf.    3.33762 (11) obj. -24.0643 iterations 2
Cbc0038I Pass  74: suminf.    3.41187 (9) obj. -24.0643 iterations 9
Cbc0038I Pass  75: suminf.    3.36877 (10) obj. -24.0643 iterations 1
Cbc0038I Pass  76: suminf.    3.43958 (10) obj. -24.0643 iterations 9
Cbc0038I Pass  77: suminf.    7.03253 (20) obj. -24.0643 iterations 30
Cbc0038I Pass  78: suminf.    5.13369 (17) obj. -24.0643 iterations 12
Cbc0038I Pass  79: suminf.    5.13369 (17) obj. -24.0643 iterations 0
Cbc0038I Pass  80: suminf.    4.83856 (11) obj. -24.0643 iterations 21
Cbc0038I Pass  81: suminf.    3.40864 (10) obj. -24.0643 iterations 4
Cbc0038I Pass  82: suminf.    3.11617 (9) obj. -24.0643 iterations 3
Cbc0038I Pass  83: suminf.    3.08301 (9) obj. -24.0643 iterations 1
Cbc0038I Pass  84: suminf.    3.07220 (9) obj. -24.0643 iterations 1
Cbc0038I Pass  85: suminf.    3.81880 (10) obj. -24.0643 iterations 5
Cbc0038I Pass  86: suminf.    3.75360 (9) obj. -24.0643 iterations 1
Cbc0038I Pass  87: suminf.    2.73741 (9) obj. -24.0643 iterations 3
Cbc0038I Pass  88: suminf.    2.65280 (8) obj. -24.0643 iterations 2
Cbc0038I Pass  89: suminf.    2.95443 (8) obj. -24.0643 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 109 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -11.3497 - took 0.27 seconds
Cbc0012I Integer solution of -11.349658 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 80 rows 47 columns
Cbc0031I 24 added rows had average density of 76.916667
Cbc0013I At root node, 24 cuts changed objective from -39.754148 to -30.941872 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18108 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2605 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 78.4 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.349658 best solution, best possible -30.941872 (1.94 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 98 rows 57 columns
Cbc0038I Full problem 184 rows 101 columns, reduced to 48 rows 32 columns
Cbc0012I Integer solution of -11.440253 found by rounding after 14377 iterations and 103 nodes (2.59 seconds)
Cbc0012I Integer solution of -11.880768 found by DiveCoefficient after 14379 iterations and 104 nodes (2.59 seconds)
Cbc0001I Search completed - best objective -11.88076799999999, took 14800 iterations and 122 nodes (2.63 seconds)
Cbc0032I Strong branching done 1316 times (21396 iterations), fathomed 12 nodes and fixed 68 variables
Cbc0035I Maximum depth 38, 378 variables fixed on reduced cost
Total time (CPU seconds):       2.51   (Wallclock seconds):       2.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-82) rows, 139 (-64) columns and 2552 (-3102) elements
Clp1000I sum of infeasibilities 3.08729e-06 - average 2.50999e-08, 74 fixed columns
Coin0506I Presolve 48 (-75) rows, 64 (-75) columns and 218 (-2334) elements
Clp0006I 0  Obj 8.5249756 Dual inf 0.63649091 (64)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 4.0517253 - largest nonzero change 4.3762677e-05 ( 0.00088996209%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 8.9472338
Clp0000I Optimal - objective value 8.9472338
Coin0511I After Postsolve, objective 8.9472338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 8.9472338 Dual inf 37.457782 (39)
Clp0014I Perturbing problem by 0.001% of 1.7691064 - largest nonzero change 2.5210978e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 64.12451
Clp0000I Optimal - objective value 64.12451
Clp0000I Optimal - objective value 64.12451
Coin0511I After Postsolve, objective 64.12451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.12451017 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 144 columns (144 integer (144 of which binary)) and 2581 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.760%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 6.24675
Cbc0038I Pass   1: suminf.    3.85599 (33) obj. -44.3202 iterations 11
Cbc0038I Pass   2: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass   3: suminf.    1.75170 (18) obj. -22.8478 iterations 15
Cbc0038I Solution found of -5.65508
Cbc0038I Rounding solution of -10.6353 is better than previous of -5.65508

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -15.0731
Cbc0038I Pass   4: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass   5: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass   6: suminf.    1.18597 (13) obj. -18.4136 iterations 20
Cbc0038I Pass   7: suminf.    0.94419 (11) obj. -15.0731 iterations 18
Cbc0038I Pass   8: suminf.    0.94419 (11) obj. -15.0731 iterations 0
Cbc0038I Pass   9: suminf.    0.65208 (4) obj. -15.0731 iterations 12
Cbc0038I Pass  10: suminf.    0.29316 (4) obj. -15.0731 iterations 4
Cbc0038I Pass  11: suminf.    0.30321 (3) obj. -15.0731 iterations 7
Cbc0038I Pass  12: suminf.    1.88053 (17) obj. -15.0731 iterations 39
Cbc0038I Pass  13: suminf.    1.82137 (16) obj. -15.0731 iterations 7
Cbc0038I Pass  14: suminf.    1.27834 (6) obj. -15.0731 iterations 22
Cbc0038I Pass  15: suminf.    1.06980 (7) obj. -15.0731 iterations 2
Cbc0038I Pass  16: suminf.    1.27834 (6) obj. -15.0731 iterations 8
Cbc0038I Pass  17: suminf.    2.18493 (14) obj. -15.0731 iterations 26
Cbc0038I Pass  18: suminf.    2.00947 (14) obj. -15.0731 iterations 9
Cbc0038I Pass  19: suminf.    2.40983 (10) obj. -15.0731 iterations 11
Cbc0038I Pass  20: suminf.    2.01590 (11) obj. -15.0731 iterations 2
Cbc0038I Pass  21: suminf.    1.36463 (8) obj. -15.0731 iterations 11
Cbc0038I Pass  22: suminf.    1.33384 (8) obj. -15.0731 iterations 5
Cbc0038I Pass  23: suminf.    1.52801 (8) obj. -15.0731 iterations 7
Cbc0038I Pass  24: suminf.    1.47545 (8) obj. -15.0731 iterations 3
Cbc0038I Pass  25: suminf.    2.40632 (16) obj. -15.0731 iterations 27
Cbc0038I Pass  26: suminf.    2.31432 (16) obj. -15.0731 iterations 5
Cbc0038I Pass  27: suminf.    1.51757 (8) obj. -15.0731 iterations 23
Cbc0038I Pass  28: suminf.    1.22086 (9) obj. -15.0731 iterations 11
Cbc0038I Pass  29: suminf.    2.05228 (8) obj. -15.0731 iterations 8
Cbc0038I Pass  30: suminf.    1.14609 (7) obj. -15.0731 iterations 6
Cbc0038I Pass  31: suminf.    1.67386 (8) obj. -15.0731 iterations 14
Cbc0038I Pass  32: suminf.    1.05565 (7) obj. -15.0731 iterations 11
Cbc0038I Pass  33: suminf.    1.49385 (8) obj. -15.0731 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 22 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -5.65508 to -10.7707 (0.07 seconds)
Cbc0038I Round again with cutoff of -23.061
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass  34: suminf.    3.85599 (33) obj. -44.3202 iterations 0
Cbc0038I Pass  35: suminf.    1.19151 (19) obj. -23.061 iterations 26
Cbc0038I Pass  36: suminf.    1.17968 (11) obj. -23.061 iterations 3
Cbc0038I Pass  37: suminf.    1.74680 (12) obj. -23.061 iterations 11
Cbc0038I Pass  38: suminf.    1.59543 (11) obj. -23.061 iterations 1
Cbc0038I Pass  39: suminf.    1.57836 (10) obj. -23.061 iterations 21
Cbc0038I Pass  40: suminf.    1.57776 (10) obj. -23.061 iterations 2
Cbc0038I Pass  41: suminf.    2.06426 (12) obj. -23.061 iterations 9
Cbc0038I Pass  42: suminf.    1.44273 (10) obj. -23.061 iterations 8
Cbc0038I Pass  43: suminf.    2.06426 (12) obj. -23.061 iterations 11
Cbc0038I Pass  44: suminf.    2.76345 (16) obj. -23.061 iterations 19
Cbc0038I Pass  45: suminf.    2.76345 (16) obj. -23.061 iterations 2
Cbc0038I Pass  46: suminf.    2.08334 (10) obj. -23.061 iterations 26
Cbc0038I Pass  47: suminf.    1.56228 (9) obj. -23.2867 iterations 6
Cbc0038I Pass  48: suminf.    2.07925 (12) obj. -23.061 iterations 14
Cbc0038I Pass  49: suminf.    1.79432 (17) obj. -23.061 iterations 3
Cbc0038I Pass  50: suminf.    2.10075 (10) obj. -23.061 iterations 13
Cbc0038I Pass  51: suminf.    1.66758 (9) obj. -23.061 iterations 8
Cbc0038I Pass  52: suminf.    2.13878 (10) obj. -23.061 iterations 7
Cbc0038I Pass  53: suminf.    1.87214 (11) obj. -23.061 iterations 3
Cbc0038I Pass  54: suminf.    2.10075 (10) obj. -23.061 iterations 9
Cbc0038I Pass  55: suminf.    3.22469 (17) obj. -23.061 iterations 20
Cbc0038I Pass  56: suminf.    3.02617 (15) obj. -23.061 iterations 9
Cbc0038I Pass  57: suminf.    1.78950 (10) obj. -23.061 iterations 19
Cbc0038I Pass  58: suminf.    1.69865 (11) obj. -23.061 iterations 2
Cbc0038I Pass  59: suminf.    3.94637 (18) obj. -23.061 iterations 21
Cbc0038I Pass  60: suminf.    2.09091 (15) obj. -23.061 iterations 10
Cbc0038I Pass  61: suminf.    2.33602 (11) obj. -23.061 iterations 14
Cbc0038I Pass  62: suminf.    1.57959 (10) obj. -23.061 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -10.7707 - took 0.07 seconds
Cbc0012I Integer solution of -10.770653 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 3 rows 6 columns
Cbc0031I 64 added rows had average density of 44.25
Cbc0013I At root node, 64 cuts changed objective from -55.012364 to -19.467032 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20227 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2133 row cuts average 135.6 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 830 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1676 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 346 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.338 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.770653 best solution, best possible -19.467032 (2.47 seconds)
Cbc0010I After 14 nodes, 7 on tree, -10.770653 best solution, best possible -18.713675 (3.18 seconds)
Cbc0012I Integer solution of -10.926743 found by rounding after 8279 iterations and 26 nodes (3.24 seconds)
Cbc0012I Integer solution of -10.977913 found by rounding after 8425 iterations and 34 nodes (3.26 seconds)
Cbc0016I Integer solution of -11.349658 found by strong branching after 8465 iterations and 38 nodes (3.27 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 3 rows 6 columns
Cbc0012I Integer solution of -11.880768 found by RINS after 8484 iterations and 41 nodes (3.28 seconds)
Cbc0001I Search completed - best objective -11.88076799999999, took 9022 iterations and 52 nodes (3.30 seconds)
Cbc0032I Strong branching done 616 times (13715 iterations), fathomed 9 nodes and fixed 11 variables
Cbc0035I Maximum depth 21, 236 variables fixed on reduced cost
Total time (CPU seconds):       2.84   (Wallclock seconds):       3.33

