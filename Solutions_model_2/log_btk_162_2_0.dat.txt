Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-18) rows, 157 (-7) columns and 770 (-39) elements
Clp1000I sum of infeasibilities 0.147216 - average 0.000477974, 42 fixed columns
Coin0506I Presolve 218 (-90) rows, 115 (-42) columns and 548 (-222) elements
Clp0029I End of values pass after 115 iterations
Clp0014I Perturbing problem by 0.001% of 0.18227972 - largest nonzero change 0 ( 0%) - largest zero change 2.2294746e-05
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Coin0511I After Postsolve, objective 16208.668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.16784827 - largest nonzero change 1.0197441e-05 ( 0.0010197441%) - largest zero change 2.9590124e-05
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Coin0511I After Postsolve, objective 16208.668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16208.6682 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 308 rows, 157 columns (156 integer (156 of which binary)) and 770 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.621%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 27.9557
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 849.418 iterations 105
Cbc0038I Solution found of 849.418
Cbc0038I Relaxing continuous gives 849.418
Cbc0038I Rounding solution of -1664 is better than previous of 849.418

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - 0 fixed gives 214, 113 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3118.47
Cbc0038I Pass   2: suminf.    1.61619 (7) obj. -3118.47 iterations 20
Cbc0038I Pass   3: suminf.    1.61619 (7) obj. -3118.47 iterations 0
Cbc0038I Pass   4: suminf.    2.25397 (6) obj. -3118.47 iterations 23
Cbc0038I Pass   5: suminf.    1.81076 (6) obj. -3118.47 iterations 6
Cbc0038I Pass   6: suminf.    3.50564 (14) obj. -3118.47 iterations 46
Cbc0038I Pass   7: suminf.    0.48893 (5) obj. -3118.47 iterations 30
Cbc0038I Pass   8: suminf.    1.03540 (8) obj. -3118.47 iterations 16
Cbc0038I Pass   9: suminf.    1.36123 (11) obj. -3118.47 iterations 26
Cbc0038I Pass  10: suminf.    0.64759 (8) obj. -3118.47 iterations 17
Cbc0038I Pass  11: suminf.    0.94256 (5) obj. -3118.47 iterations 14
Cbc0038I Pass  12: suminf.    1.36123 (11) obj. -3118.47 iterations 25
Cbc0038I Pass  13: suminf.    3.61287 (19) obj. -3118.47 iterations 28
Cbc0038I Pass  14: suminf.    1.45179 (9) obj. -3118.47 iterations 13
Cbc0038I Pass  15: suminf.    0.48084 (6) obj. -3118.47 iterations 10
Cbc0038I Pass  16: suminf.    0.47440 (5) obj. -3118.47 iterations 2
Cbc0038I Pass  17: suminf.    0.86294 (4) obj. -3118.47 iterations 12
Cbc0038I Pass  18: suminf.    1.34447 (10) obj. -3118.47 iterations 15
Cbc0038I Pass  19: suminf.    0.67275 (8) obj. -3118.47 iterations 16
Cbc0038I Pass  20: suminf.    1.10790 (5) obj. -3118.47 iterations 15
Cbc0038I Pass  21: suminf.    1.72555 (7) obj. -3118.47 iterations 15
Cbc0038I Pass  22: suminf.    2.22176 (6) obj. -3118.47 iterations 20
Cbc0038I Pass  23: suminf.    0.68983 (5) obj. -3118.47 iterations 26
Cbc0038I Pass  24: suminf.    0.59766 (2) obj. -3118.47 iterations 8
Cbc0038I Pass  25: suminf.    0.45031 (2) obj. -3118.47 iterations 1
Cbc0038I Pass  26: suminf.    0.24291 (3) obj. -3118.47 iterations 22
Cbc0038I Pass  27: suminf.    0.58577 (6) obj. -3118.47 iterations 23
Cbc0038I Pass  28: suminf.    1.70204 (6) obj. -3118.47 iterations 24
Cbc0038I Pass  29: suminf.    1.51977 (7) obj. -3118.47 iterations 14
Cbc0038I Pass  30: suminf.    1.83490 (20) obj. -3118.47 iterations 29
Cbc0038I Pass  31: suminf.    1.69142 (21) obj. -3118.47 iterations 4
Cbc0038I Rounding solution of -3535.45 is better than previous of -1664

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 234 rows 122 columns - 4 fixed gives 199, 112 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 199 rows 112 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -6070.1
Cbc0038I Pass  31: suminf.    4.37800 (51) obj. -6070.1 iterations 9
Cbc0038I Pass  32: suminf.    4.37800 (51) obj. -6070.1 iterations 0
Cbc0038I Pass  33: suminf.    6.18581 (21) obj. -6070.1 iterations 53
Cbc0038I Pass  34: suminf.    4.91113 (20) obj. -6070.1 iterations 15
Cbc0038I Pass  35: suminf.    4.70595 (20) obj. -6070.1 iterations 2
Cbc0038I Pass  36: suminf.    6.59339 (20) obj. -6070.1 iterations 27
Cbc0038I Pass  37: suminf.    4.61805 (23) obj. -6070.1 iterations 34
Cbc0038I Pass  38: suminf.    4.33163 (22) obj. -6070.1 iterations 1
Cbc0038I Pass  39: suminf.    6.34638 (23) obj. -6070.1 iterations 23
Cbc0038I Pass  40: suminf.    3.95091 (20) obj. -6070.1 iterations 25
Cbc0038I Pass  41: suminf.    3.80942 (19) obj. -6070.1 iterations 3
Cbc0038I Pass  42: suminf.    6.53876 (20) obj. -6070.1 iterations 24
Cbc0038I Pass  43: suminf.    4.16434 (23) obj. -6070.1 iterations 20
Cbc0038I Pass  44: suminf.    6.22011 (22) obj. -6070.1 iterations 26
Cbc0038I Pass  45: suminf.    4.78100 (20) obj. -6070.1 iterations 18
Cbc0038I Pass  46: suminf.    6.01421 (20) obj. -6070.1 iterations 25
Cbc0038I Pass  47: suminf.    4.54338 (23) obj. -6070.1 iterations 25
Cbc0038I Pass  48: suminf.    4.16434 (23) obj. -6070.1 iterations 2
Cbc0038I Pass  49: suminf.    5.10087 (22) obj. -6070.1 iterations 19
Cbc0038I Pass  50: suminf.    3.71875 (26) obj. -6070.1 iterations 24
Cbc0038I Pass  51: suminf.    6.13603 (23) obj. -6070.1 iterations 36
Cbc0038I Pass  52: suminf.    4.70595 (20) obj. -6070.1 iterations 11
Cbc0038I Pass  53: suminf.    5.68216 (20) obj. -6070.1 iterations 17
Cbc0038I Pass  54: suminf.    4.82557 (21) obj. -6070.1 iterations 21
Cbc0038I Pass  55: suminf.    4.35400 (20) obj. -6070.1 iterations 2
Cbc0038I Pass  56: suminf.    6.34638 (23) obj. -6070.1 iterations 24
Cbc0038I Pass  57: suminf.    3.95091 (20) obj. -6070.1 iterations 23
Cbc0038I Pass  58: suminf.    3.80942 (19) obj. -6070.1 iterations 3
Cbc0038I Pass  59: suminf.    6.53876 (20) obj. -6070.1 iterations 23
Cbc0038I Pass  60: suminf.    4.16434 (23) obj. -6070.1 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - 2 fixed gives 209, 110 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 209 rows 110 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3535.45 - took 0.05 seconds
Cbc0012I Integer solution of -3760.973 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 220 rows 117 columns - 7 fixed gives 192, 110 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 192 rows 110 columns - too large
Cbc0031I 25 added rows had average density of 70.6
Cbc0013I At root node, 25 cuts changed objective from -16208.668 to -11575.633 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23072 row cuts average 6.2 elements, 1 column cuts (1 active)  in 0.421 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1255 row cuts average 137.0 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 105 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 106.9 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3760.973 best solution, best possible -11575.633 (2.00 seconds)
Cbc0012I Integer solution of -4007.0245 found by DiveCoefficient after 7398 iterations and 9 nodes (2.55 seconds)
Cbc0012I Integer solution of -4260.1265 found by DiveCoefficient after 7476 iterations and 11 nodes (2.56 seconds)
Cbc0012I Integer solution of -4909.0535 found by rounding after 7524 iterations and 14 nodes (2.57 seconds)
Cbc0012I Integer solution of -5501.9595 found by rounding after 7525 iterations and 15 nodes (2.57 seconds)
Cbc0012I Integer solution of -5576.8345 found by rounding after 7716 iterations and 21 nodes (2.60 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 23 rows 20 columns
Cbc0010I After 46 nodes, 11 on tree, -5576.8345 best solution, best possible -11575.633 (2.70 seconds)
Cbc0012I Integer solution of -5953.7763 found by DiveCoefficient after 8560 iterations and 49 nodes (2.71 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 21 rows 22 columns
Cbc0016I Integer solution of -5970.5381 found by strong branching after 9611 iterations and 97 nodes (2.85 seconds)
Cbc0016I Integer solution of -6071.5721 found by strong branching after 9685 iterations and 104 nodes (2.86 seconds)
Cbc0012I Integer solution of -6347.3918 found by DiveCoefficient after 10512 iterations and 133 nodes (3.05 seconds)
Cbc0016I Integer solution of -6396.5379 found by strong branching after 10595 iterations and 144 nodes (3.07 seconds)
Cbc0016I Integer solution of -6397.5349 found by strong branching after 10625 iterations and 150 nodes (3.08 seconds)
Cbc0001I Search completed - best objective -6397.534854599995, took 10712 iterations and 158 nodes (3.10 seconds)
Cbc0032I Strong branching done 1268 times (25104 iterations), fathomed 32 nodes and fixed 35 variables
Cbc0035I Maximum depth 21, 463 variables fixed on reduced cost
Total time (CPU seconds):       3.05   (Wallclock seconds):       3.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 259 (-66) rows, 263 (-61) columns and 8176 (-5674) elements
Clp1000I sum of infeasibilities 0.0321155 - average 0.000123998, 64 fixed columns
Coin0506I Presolve 183 (-76) rows, 185 (-78) columns and 5421 (-2755) elements
Clp0006I 0  Obj 162647.78 Primal inf 0.010218186 (65) Dual inf 8.7422686e+09 (184)
Clp0029I End of values pass after 185 iterations
Clp0014I Perturbing problem by 0.001% of 3.3555484 - largest nonzero change 2.979724e-05 ( 0.0026831529%) - largest zero change 2.8719228e-05
Clp0000I Optimal - objective value 192168.63
Clp0000I Optimal - objective value 192168.63
Coin0511I After Postsolve, objective 192168.63, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 192168.63 Dual inf 105718.81 (23)
Clp0014I Perturbing problem by 0.001% of 2.4285463 - largest nonzero change 2.9457673e-05 ( 0.0025914967%) - largest zero change 2.9661476e-05
Clp0000I Optimal - objective value 193210.84
Clp0000I Optimal - objective value 193210.84
Clp0000I Optimal - objective value 193210.84
Coin0511I After Postsolve, objective 193210.84, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193210.8411 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0004I processed model has 259 rows, 263 columns (263 integer (263 of which binary)) and 8176 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.788%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 105 integers unsatisfied sum - 15.8893
Cbc0038I Pass   1: suminf.    7.48355 (65) obj. -8386.66 iterations 76
Cbc0038I Pass   2: suminf.    7.48355 (65) obj. -8386.66 iterations 1
Cbc0038I Pass   3: suminf.    3.88129 (39) obj. -1925.02 iterations 26
Cbc0038I Pass   4: suminf.    1.72293 (22) obj. 2266.33 iterations 17
Cbc0038I Solution found of 11547.8
Cbc0038I Rounding solution of 3270.8 is better than previous of 11547.8

Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 259 rows 263 columns, reduced to 43 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 3270.8 to -139132 (0.07 seconds)
Cbc0038I Round again with cutoff of -144490
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.   13.17922 (101) obj. -144490 iterations 31
Cbc0038I Pass   6: suminf.   13.17922 (101) obj. -144490 iterations 0
Cbc0038I Pass   7: suminf.    8.76939 (77) obj. -144490 iterations 25
Cbc0038I Pass   8: suminf.    8.76939 (77) obj. -144490 iterations 0
Cbc0038I Pass   9: suminf.    6.08180 (58) obj. -144490 iterations 19
Cbc0038I Pass  10: suminf.    6.08180 (58) obj. -144490 iterations 0
Cbc0038I Pass  11: suminf.    4.38431 (45) obj. -144490 iterations 13
Cbc0038I Pass  12: suminf.    4.38431 (45) obj. -144490 iterations 0
Cbc0038I Pass  13: suminf.    2.23951 (27) obj. -161771 iterations 20
Cbc0038I Pass  14: suminf.    0.48966 (5) obj. -144490 iterations 27
Cbc0038I Pass  15: suminf.    0.48966 (5) obj. -144490 iterations 1
Cbc0038I Pass  16: suminf.    0.46174 (2) obj. -144490 iterations 23
Cbc0038I Pass  17: suminf.    0.12818 (2) obj. -145524 iterations 4
Cbc0038I Pass  18: suminf.    3.44668 (22) obj. -144490 iterations 45
Cbc0038I Pass  19: suminf.    3.44668 (22) obj. -144490 iterations 16
Cbc0038I Pass  20: suminf.    0.98221 (8) obj. -144490 iterations 19
Cbc0038I Pass  21: suminf.    0.65377 (8) obj. -145377 iterations 5
Cbc0038I Pass  22: suminf.    0.62151 (5) obj. -144490 iterations 14
Cbc0038I Pass  23: suminf.    0.39804 (5) obj. -145049 iterations 7
Cbc0038I Pass  24: suminf.    4.39012 (29) obj. -153435 iterations 43
Cbc0038I Pass  25: suminf.    3.91403 (27) obj. -153139 iterations 11
Cbc0038I Pass  26: suminf.    0.68458 (9) obj. -145666 iterations 18
Cbc0038I Pass  27: suminf.    0.41473 (6) obj. -144490 iterations 15
Cbc0038I Pass  28: suminf.    0.41473 (6) obj. -144490 iterations 1
Cbc0038I Pass  29: suminf.    0.66039 (6) obj. -144490 iterations 10
Cbc0038I Pass  30: suminf.    0.66039 (6) obj. -144490 iterations 1
Cbc0038I Pass  31: suminf.    0.41473 (6) obj. -144490 iterations 13
Cbc0038I Pass  32: suminf.    2.64618 (18) obj. -144490 iterations 47
Cbc0038I Pass  33: suminf.    2.26345 (17) obj. -144490 iterations 11
Cbc0038I Pass  34: suminf.    0.37372 (5) obj. -144490 iterations 27
Cbc0038I Rounding solution of -139350 is better than previous of -139132

Cbc0038I Before mini branch and bound, 132 integers at bound fixed and 0 continuous
Cbc0038I Full problem 259 rows 263 columns, reduced to 8 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -139350 to -139409 (0.12 seconds)
Cbc0038I Round again with cutoff of -154134
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.   13.74599 (101) obj. -154134 iterations 0
Cbc0038I Pass  35: suminf.   13.74599 (101) obj. -154134 iterations 0
Cbc0038I Pass  36: suminf.    8.86859 (75) obj. -154134 iterations 27
Cbc0038I Pass  37: suminf.    8.86859 (75) obj. -154134 iterations 0
Cbc0038I Pass  38: suminf.    5.99969 (55) obj. -154134 iterations 20
Cbc0038I Pass  39: suminf.    2.27465 (27) obj. -154134 iterations 28
Cbc0038I Pass  40: suminf.    2.23229 (27) obj. -160887 iterations 2
Cbc0038I Pass  41: suminf.    1.34700 (14) obj. -154134 iterations 21
Cbc0038I Pass  42: suminf.    1.34700 (14) obj. -154134 iterations 0
Cbc0038I Pass  43: suminf.    0.48315 (6) obj. -154134 iterations 35
Cbc0038I Pass  44: suminf.    0.48137 (6) obj. -154138 iterations 10
Cbc0038I Pass  45: suminf.    0.48315 (6) obj. -154134 iterations 9
Cbc0038I Pass  46: suminf.    6.50200 (40) obj. -154134 iterations 50
Cbc0038I Pass  47: suminf.    3.82668 (31) obj. -159639 iterations 16
Cbc0038I Pass  48: suminf.    0.98792 (9) obj. -154134 iterations 32
Cbc0038I Pass  49: suminf.    0.98792 (9) obj. -154134 iterations 0
Cbc0038I Pass  50: suminf.    0.76747 (7) obj. -154134 iterations 17
Cbc0038I Pass  51: suminf.    0.59676 (7) obj. -154429 iterations 9
Cbc0038I Pass  52: suminf.    0.76747 (7) obj. -154134 iterations 8
Cbc0038I Pass  53: suminf.    4.39876 (25) obj. -154134 iterations 42
Cbc0038I Pass  54: suminf.    4.28776 (28) obj. -154134 iterations 14
Cbc0038I Pass  55: suminf.    3.88522 (29) obj. -154134 iterations 2
Cbc0038I Pass  56: suminf.    1.64129 (12) obj. -154134 iterations 17
Cbc0038I Pass  57: suminf.    1.38041 (11) obj. -154134 iterations 29
Cbc0038I Pass  58: suminf.    0.75458 (7) obj. -154134 iterations 18
Cbc0038I Pass  59: suminf.    0.59676 (7) obj. -154407 iterations 9
Cbc0038I Pass  60: suminf.    0.75458 (7) obj. -154134 iterations 8
Cbc0038I Pass  61: suminf.    3.80496 (23) obj. -154134 iterations 41
Cbc0038I Pass  62: suminf.    3.52409 (22) obj. -154134 iterations 7
Cbc0038I Pass  63: suminf.    0.96249 (8) obj. -154134 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 134 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -139409 - took 0.12 seconds
Cbc0012I Integer solution of -139409.08 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 259 rows 263 columns, reduced to 3 rows 5 columns
Cbc0031I 10 added rows had average density of 20.8
Cbc0013I At root node, 10 cuts changed objective from -174714.96 to -139994.55 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 135 row cuts average 2.3 elements, 48 column cuts (48 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 81.5 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -139409.08 best solution, best possible -139994.55 (0.36 seconds)
Cbc0012I Integer solution of -139471.24 found by DiveCoefficient after 209 iterations and 1 nodes (0.36 seconds)
Cbc0012I Integer solution of -139603.84 found by DiveCoefficient after 279 iterations and 4 nodes (0.39 seconds)
Cbc0012I Integer solution of -139629.03 found by rounding after 411 iterations and 11 nodes (0.52 seconds)
Cbc0012I Integer solution of -139682.32 found by rounding after 681 iterations and 21 nodes (0.59 seconds)
Cbc0001I Search completed - best objective -139682.3223102, took 783 iterations and 26 nodes (0.63 seconds)
Cbc0032I Strong branching done 148 times (913 iterations), fathomed 8 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 116 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.64

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-18) rows, 157 (-7) columns and 770 (-39) elements
Clp1000I sum of infeasibilities 0.147216 - average 0.000477974, 42 fixed columns
Coin0506I Presolve 218 (-90) rows, 115 (-42) columns and 548 (-222) elements
Clp0029I End of values pass after 115 iterations
Clp0014I Perturbing problem by 0.001% of 0.18227972 - largest nonzero change 0 ( 0%) - largest zero change 2.2294746e-05
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Coin0511I After Postsolve, objective 16208.668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.16784827 - largest nonzero change 1.0197441e-05 ( 0.0010197441%) - largest zero change 2.9590124e-05
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Coin0511I After Postsolve, objective 16208.668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16208.6682 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 308 rows, 157 columns (156 integer (156 of which binary)) and 770 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.621%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 27.9557
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 849.418 iterations 105
Cbc0038I Solution found of 849.418
Cbc0038I Relaxing continuous gives 849.418
Cbc0038I Rounding solution of -1664 is better than previous of 849.418

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - 0 fixed gives 214, 113 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3118.47
Cbc0038I Pass   2: suminf.    1.61619 (7) obj. -3118.47 iterations 20
Cbc0038I Pass   3: suminf.    1.61619 (7) obj. -3118.47 iterations 0
Cbc0038I Pass   4: suminf.    2.25397 (6) obj. -3118.47 iterations 23
Cbc0038I Pass   5: suminf.    1.81076 (6) obj. -3118.47 iterations 6
Cbc0038I Pass   6: suminf.    3.50564 (14) obj. -3118.47 iterations 46
Cbc0038I Pass   7: suminf.    0.48893 (5) obj. -3118.47 iterations 30
Cbc0038I Pass   8: suminf.    1.03540 (8) obj. -3118.47 iterations 16
Cbc0038I Pass   9: suminf.    1.36123 (11) obj. -3118.47 iterations 26
Cbc0038I Pass  10: suminf.    0.64759 (8) obj. -3118.47 iterations 17
Cbc0038I Pass  11: suminf.    0.94256 (5) obj. -3118.47 iterations 14
Cbc0038I Pass  12: suminf.    1.36123 (11) obj. -3118.47 iterations 25
Cbc0038I Pass  13: suminf.    3.61287 (19) obj. -3118.47 iterations 28
Cbc0038I Pass  14: suminf.    1.45179 (9) obj. -3118.47 iterations 13
Cbc0038I Pass  15: suminf.    0.48084 (6) obj. -3118.47 iterations 10
Cbc0038I Pass  16: suminf.    0.47440 (5) obj. -3118.47 iterations 2
Cbc0038I Pass  17: suminf.    0.86294 (4) obj. -3118.47 iterations 12
Cbc0038I Pass  18: suminf.    1.34447 (10) obj. -3118.47 iterations 15
Cbc0038I Pass  19: suminf.    0.67275 (8) obj. -3118.47 iterations 16
Cbc0038I Pass  20: suminf.    1.10790 (5) obj. -3118.47 iterations 15
Cbc0038I Pass  21: suminf.    1.72555 (7) obj. -3118.47 iterations 15
Cbc0038I Pass  22: suminf.    2.22176 (6) obj. -3118.47 iterations 20
Cbc0038I Pass  23: suminf.    0.68983 (5) obj. -3118.47 iterations 26
Cbc0038I Pass  24: suminf.    0.59766 (2) obj. -3118.47 iterations 8
Cbc0038I Pass  25: suminf.    0.45031 (2) obj. -3118.47 iterations 1
Cbc0038I Pass  26: suminf.    0.24291 (3) obj. -3118.47 iterations 22
Cbc0038I Pass  27: suminf.    0.58577 (6) obj. -3118.47 iterations 23
Cbc0038I Pass  28: suminf.    1.70204 (6) obj. -3118.47 iterations 24
Cbc0038I Pass  29: suminf.    1.51977 (7) obj. -3118.47 iterations 14
Cbc0038I Pass  30: suminf.    1.83490 (20) obj. -3118.47 iterations 29
Cbc0038I Pass  31: suminf.    1.69142 (21) obj. -3118.47 iterations 4
Cbc0038I Rounding solution of -3535.45 is better than previous of -1664

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 234 rows 122 columns - 4 fixed gives 199, 112 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 199 rows 112 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -6070.1
Cbc0038I Pass  31: suminf.    4.37800 (51) obj. -6070.1 iterations 9
Cbc0038I Pass  32: suminf.    4.37800 (51) obj. -6070.1 iterations 0
Cbc0038I Pass  33: suminf.    6.18581 (21) obj. -6070.1 iterations 53
Cbc0038I Pass  34: suminf.    4.91113 (20) obj. -6070.1 iterations 15
Cbc0038I Pass  35: suminf.    4.70595 (20) obj. -6070.1 iterations 2
Cbc0038I Pass  36: suminf.    6.59339 (20) obj. -6070.1 iterations 27
Cbc0038I Pass  37: suminf.    4.61805 (23) obj. -6070.1 iterations 34
Cbc0038I Pass  38: suminf.    4.33163 (22) obj. -6070.1 iterations 1
Cbc0038I Pass  39: suminf.    6.34638 (23) obj. -6070.1 iterations 23
Cbc0038I Pass  40: suminf.    3.95091 (20) obj. -6070.1 iterations 25
Cbc0038I Pass  41: suminf.    3.80942 (19) obj. -6070.1 iterations 3
Cbc0038I Pass  42: suminf.    6.53876 (20) obj. -6070.1 iterations 24
Cbc0038I Pass  43: suminf.    4.16434 (23) obj. -6070.1 iterations 20
Cbc0038I Pass  44: suminf.    6.22011 (22) obj. -6070.1 iterations 26
Cbc0038I Pass  45: suminf.    4.78100 (20) obj. -6070.1 iterations 18
Cbc0038I Pass  46: suminf.    6.01421 (20) obj. -6070.1 iterations 25
Cbc0038I Pass  47: suminf.    4.54338 (23) obj. -6070.1 iterations 25
Cbc0038I Pass  48: suminf.    4.16434 (23) obj. -6070.1 iterations 2
Cbc0038I Pass  49: suminf.    5.10087 (22) obj. -6070.1 iterations 19
Cbc0038I Pass  50: suminf.    3.71875 (26) obj. -6070.1 iterations 24
Cbc0038I Pass  51: suminf.    6.13603 (23) obj. -6070.1 iterations 36
Cbc0038I Pass  52: suminf.    4.70595 (20) obj. -6070.1 iterations 11
Cbc0038I Pass  53: suminf.    5.68216 (20) obj. -6070.1 iterations 17
Cbc0038I Pass  54: suminf.    4.82557 (21) obj. -6070.1 iterations 21
Cbc0038I Pass  55: suminf.    4.35400 (20) obj. -6070.1 iterations 2
Cbc0038I Pass  56: suminf.    6.34638 (23) obj. -6070.1 iterations 24
Cbc0038I Pass  57: suminf.    3.95091 (20) obj. -6070.1 iterations 23
Cbc0038I Pass  58: suminf.    3.80942 (19) obj. -6070.1 iterations 3
Cbc0038I Pass  59: suminf.    6.53876 (20) obj. -6070.1 iterations 23
Cbc0038I Pass  60: suminf.    4.16434 (23) obj. -6070.1 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - 2 fixed gives 209, 110 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 209 rows 110 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -3535.45 - took 0.05 seconds
Cbc0012I Integer solution of -3760.973 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 220 rows 117 columns - 7 fixed gives 192, 110 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 192 rows 110 columns - too large
Cbc0031I 25 added rows had average density of 70.6
Cbc0013I At root node, 25 cuts changed objective from -16208.668 to -11575.633 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23072 row cuts average 6.2 elements, 1 column cuts (1 active)  in 0.430 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1255 row cuts average 137.0 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 105 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 106.9 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3760.973 best solution, best possible -11575.633 (2.04 seconds)
Cbc0012I Integer solution of -4007.0245 found by DiveCoefficient after 7398 iterations and 9 nodes (2.56 seconds)
Cbc0012I Integer solution of -4260.1265 found by DiveCoefficient after 7476 iterations and 11 nodes (2.58 seconds)
Cbc0012I Integer solution of -4909.0535 found by rounding after 7524 iterations and 14 nodes (2.59 seconds)
Cbc0012I Integer solution of -5501.9595 found by rounding after 7525 iterations and 15 nodes (2.59 seconds)
Cbc0012I Integer solution of -5576.8345 found by rounding after 7716 iterations and 21 nodes (2.61 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 23 rows 20 columns
Cbc0012I Integer solution of -5953.7763 found by DiveCoefficient after 8560 iterations and 49 nodes (2.72 seconds)
Cbc0010I After 53 nodes, 13 on tree, -5953.7763 best solution, best possible -11575.633 (2.74 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 21 rows 22 columns
Cbc0016I Integer solution of -5970.5381 found by strong branching after 9611 iterations and 97 nodes (2.86 seconds)
Cbc0016I Integer solution of -6071.5721 found by strong branching after 9685 iterations and 104 nodes (2.87 seconds)
Cbc0012I Integer solution of -6347.3918 found by DiveCoefficient after 10512 iterations and 133 nodes (3.06 seconds)
Cbc0016I Integer solution of -6396.5379 found by strong branching after 10595 iterations and 144 nodes (3.08 seconds)
Cbc0016I Integer solution of -6397.5349 found by strong branching after 10625 iterations and 150 nodes (3.09 seconds)
Cbc0001I Search completed - best objective -6397.534854599995, took 10712 iterations and 158 nodes (3.11 seconds)
Cbc0032I Strong branching done 1268 times (25104 iterations), fathomed 32 nodes and fixed 35 variables
Cbc0035I Maximum depth 21, 463 variables fixed on reduced cost
Total time (CPU seconds):       3.06   (Wallclock seconds):       3.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 254 (-72) rows, 258 (-67) columns and 7860 (-5991) elements
Clp1000I sum of infeasibilities 0.0138251 - average 5.44295e-05, 28 fixed columns
Coin0506I Presolve 222 (-32) rows, 226 (-32) columns and 6416 (-1444) elements
Clp0006I 0  Obj 4080.3928 Primal inf 0.0045070935 (83) Dual inf 1.3254923e+10 (224)
Clp0029I End of values pass after 226 iterations
Clp0014I Perturbing problem by 0.001% of 2.7608324 - largest nonzero change 2.9268698e-05 ( 0.0026244764%) - largest zero change 2.9840128e-05
Clp0000I Optimal - objective value 21143.065
Clp0000I Optimal - objective value 21143.065
Coin0511I After Postsolve, objective 21143.065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21143.065 Dual inf 12054.375 (4)
Clp0014I Perturbing problem by 0.001% of 2.4575462 - largest nonzero change 2.8584996e-05 ( 0.0026171625%) - largest zero change 2.8901697e-05
Clp0000I Optimal - objective value 21445.716
Clp0000I Optimal - objective value 21445.716
Clp0000I Optimal - objective value 21445.716
Coin0511I After Postsolve, objective 21445.716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21445.71556 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 254 rows, 258 columns (258 integer (258 of which binary)) and 7860 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.779%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 91 integers unsatisfied sum - 15.2108
Cbc0038I Pass   1: suminf.    8.34320 (72) obj. -20022.9 iterations 44
Cbc0038I Pass   2: suminf.    6.44603 (52) obj. -18828.3 iterations 4
Cbc0038I Pass   3: suminf.    2.22436 (25) obj. -11535.7 iterations 27
Cbc0038I Pass   4: suminf.    0.33933 (8) obj. -7612.51 iterations 17
Cbc0038I Solution found of -4281.4
Cbc0038I Rounding solution of -4634.27 is better than previous of -4281.4

Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -6300.36
Cbc0038I Pass   5: suminf.    8.34320 (72) obj. -20022.9 iterations 0
Cbc0038I Pass   6: suminf.    6.44603 (52) obj. -18828.3 iterations 6
Cbc0038I Pass   7: suminf.    2.36596 (26) obj. -11643 iterations 26
Cbc0038I Pass   8: suminf.    0.40426 (9) obj. -7729.39 iterations 17
Cbc0038I Pass   9: suminf.    0.43869 (26) obj. -6300.36 iterations 20
Cbc0038I Pass  10: suminf.    0.43869 (26) obj. -6300.36 iterations 0
Cbc0038I Pass  11: suminf.    2.64550 (18) obj. -6300.36 iterations 21
Cbc0038I Pass  12: suminf.    2.36000 (18) obj. -6607.27 iterations 2
Cbc0038I Pass  13: suminf.    2.79027 (20) obj. -6300.36 iterations 23
Cbc0038I Pass  14: suminf.    2.20483 (20) obj. -6300.36 iterations 4
Cbc0038I Pass  15: suminf.    2.75085 (18) obj. -6300.36 iterations 16
Cbc0038I Pass  16: suminf.    2.75085 (18) obj. -6300.36 iterations 9
Cbc0038I Pass  17: suminf.    2.76656 (18) obj. -6300.36 iterations 14
Cbc0038I Pass  18: suminf.    2.76656 (18) obj. -6300.36 iterations 8
Cbc0038I Pass  19: suminf.    2.75085 (18) obj. -6300.36 iterations 19
Cbc0038I Pass  20: suminf.    2.87833 (19) obj. -6300.36 iterations 51
Cbc0038I Pass  21: suminf.    1.91731 (14) obj. -6300.36 iterations 15
Cbc0038I Pass  22: suminf.    1.57377 (13) obj. -6974.29 iterations 3
Cbc0038I Pass  23: suminf.    1.07120 (21) obj. -6300.36 iterations 24
Cbc0038I Pass  24: suminf.    0.74766 (21) obj. -6300.36 iterations 4
Cbc0038I Pass  25: suminf.    2.93077 (14) obj. -6300.36 iterations 23
Cbc0038I Pass  26: suminf.    2.66869 (16) obj. -6300.36 iterations 4
Cbc0038I Pass  27: suminf.    2.69192 (19) obj. -6300.36 iterations 15
Cbc0038I Pass  28: suminf.    2.69192 (19) obj. -6300.36 iterations 1
Cbc0038I Pass  29: suminf.    2.91508 (14) obj. -6300.36 iterations 9
Cbc0038I Pass  30: suminf.    3.63815 (21) obj. -6300.36 iterations 53
Cbc0038I Pass  31: suminf.    2.02377 (28) obj. -6300.36 iterations 12
Cbc0038I Pass  32: suminf.    1.68074 (24) obj. -6300.36 iterations 17
Cbc0038I Pass  33: suminf.    1.68074 (24) obj. -6300.36 iterations 1
Cbc0038I Pass  34: suminf.    2.85763 (21) obj. -6300.36 iterations 20
Cbc0038I Rounding solution of -5601.25 is better than previous of -4634.27

Cbc0038I Before mini branch and bound, 141 integers at bound fixed and 0 continuous
Cbc0038I Full problem 254 rows 258 columns, reduced to 102 rows 108 columns - 17 fixed gives 77, 84 - ok now
Cbc0038I Full problem 254 rows 258 columns, reduced to 11 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -9299.33
Cbc0038I Pass  34: suminf.    8.34320 (72) obj. -20022.9 iterations 0
Cbc0038I Pass  35: suminf.    6.44603 (52) obj. -18828.3 iterations 6
Cbc0038I Pass  36: suminf.    4.70551 (42) obj. -14993.3 iterations 10
Cbc0038I Pass  37: suminf.    1.94355 (23) obj. -11342.3 iterations 19
Cbc0038I Pass  38: suminf.    2.02467 (29) obj. -9299.33 iterations 39
Cbc0038I Pass  39: suminf.    1.37854 (29) obj. -9299.33 iterations 4
Cbc0038I Pass  40: suminf.    2.97030 (24) obj. -9299.33 iterations 16
Cbc0038I Pass  41: suminf.    2.46416 (24) obj. -9299.33 iterations 3
Cbc0038I Pass  42: suminf.    2.02467 (29) obj. -9299.33 iterations 13
Cbc0038I Pass  43: suminf.    3.27468 (34) obj. -9299.33 iterations 39
Cbc0038I Pass  44: suminf.    1.46296 (32) obj. -9299.33 iterations 14
Cbc0038I Pass  45: suminf.    1.46296 (32) obj. -9299.33 iterations 0
Cbc0038I Pass  46: suminf.    1.96399 (25) obj. -9299.33 iterations 29
Cbc0038I Pass  47: suminf.    1.74091 (30) obj. -9299.33 iterations 9
Cbc0038I Pass  48: suminf.    2.32587 (23) obj. -9299.33 iterations 20
Cbc0038I Pass  49: suminf.    2.22051 (23) obj. -9299.33 iterations 3
Cbc0038I Pass  50: suminf.    3.94350 (24) obj. -9299.33 iterations 25
Cbc0038I Pass  51: suminf.    3.94350 (24) obj. -9299.33 iterations 1
Cbc0038I Pass  52: suminf.    4.02640 (24) obj. -9299.33 iterations 12
Cbc0038I Pass  53: suminf.    3.38919 (24) obj. -9299.33 iterations 8
Cbc0038I Pass  54: suminf.    3.94350 (24) obj. -9299.33 iterations 12
Cbc0038I Pass  55: suminf.    3.86894 (28) obj. -9299.33 iterations 35
Cbc0038I Pass  56: suminf.    3.72089 (27) obj. -9428.87 iterations 15
Cbc0038I Pass  57: suminf.    3.12039 (26) obj. -9299.33 iterations 21
Cbc0038I Pass  58: suminf.    2.73780 (25) obj. -9299.33 iterations 5
Cbc0038I Pass  59: suminf.    3.08318 (25) obj. -9299.33 iterations 10
Cbc0038I Pass  60: suminf.    3.43022 (30) obj. -9299.33 iterations 44
Cbc0038I Pass  61: suminf.    3.43022 (30) obj. -9299.33 iterations 12
Cbc0038I Pass  62: suminf.    3.55014 (32) obj. -9299.33 iterations 19
Cbc0038I Pass  63: suminf.    3.55014 (32) obj. -9299.33 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -5601.25 - took 0.13 seconds
Cbc0012I Integer solution of -5601.2528 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 254 rows 258 columns, reduced to 8 rows 10 columns
Cbc0031I 83 added rows had average density of 77.240964
Cbc0013I At root node, 83 cuts changed objective from -21295.211 to -8652.9264 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21402 row cuts average 11.7 elements, 0 column cuts (61 active)  in 0.591 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2010 row cuts average 207.9 elements, 0 column cuts (0 active)  in 0.514 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2891 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.393 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1020 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.349 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 446 row cuts average 150.0 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5601.2528 best solution, best possible -8652.9264 (4.03 seconds)
Cbc0010I After 3 nodes, 4 on tree, -5601.2528 best solution, best possible -8652.9264 (4.75 seconds)
Cbc0012I Integer solution of -5691.8747 found by rounding after 6905 iterations and 26 nodes (5.36 seconds)
Cbc0012I Integer solution of -6037.5587 found by rounding after 6927 iterations and 27 nodes (5.36 seconds)
Cbc0016I Integer solution of -6144.8463 found by strong branching after 7121 iterations and 37 nodes (5.41 seconds)
Cbc0016I Integer solution of -6265.2008 found by strong branching after 7142 iterations and 40 nodes (5.42 seconds)
Cbc0038I Full problem 254 rows 258 columns, reduced to 77 rows 83 columns
Cbc0010I After 41 nodes, 9 on tree, -6265.2008 best solution, best possible -8652.9264 (5.50 seconds)
Cbc0016I Integer solution of -6396.5379 found by strong branching after 7748 iterations and 57 nodes (5.65 seconds)
Cbc0004I Integer solution of -6397.5349 found after 7903 iterations and 69 nodes (5.70 seconds)
Cbc0038I Full problem 254 rows 258 columns, reduced to 37 rows 50 columns
Cbc0001I Search completed - best objective -6397.534854599995, took 9580 iterations and 100 nodes (6.13 seconds)
Cbc0032I Strong branching done 1028 times (20525 iterations), fathomed 10 nodes and fixed 3 variables
Cbc0035I Maximum depth 25, 389 variables fixed on reduced cost
Total time (CPU seconds):       5.99   (Wallclock seconds):       6.18

