Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 75 (-3) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 0.000152538 - average 1.18246e-06, 11 fixed columns
Coin0506I Presolve 108 (-21) rows, 64 (-11) columns and 337 (-63) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Coin0511I After Postsolve, objective 60.490378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Coin0511I After Postsolve, objective 60.490378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.49037826 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 75 columns (74 integer (74 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.121%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.4832
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.78916 iterations 50
Cbc0038I Solution found of -6.78916
Cbc0038I Relaxing continuous gives -6.78916
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 62 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -6.78916 to -24.1808 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.8118
Cbc0038I Pass   2: suminf.    1.96909 (9) obj. -27.8118 iterations 8
Cbc0038I Pass   3: suminf.    1.04853 (4) obj. -27.8118 iterations 11
Cbc0038I Pass   4: suminf.    0.58086 (4) obj. -27.8118 iterations 2
Cbc0038I Pass   5: suminf.    1.82753 (5) obj. -27.8118 iterations 5
Cbc0038I Pass   6: suminf.    1.07506 (3) obj. -27.8118 iterations 2
Cbc0038I Pass   7: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass   8: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass   9: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  10: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  11: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  12: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  13: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  14: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  15: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  16: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  17: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  18: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  19: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  20: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  21: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  22: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  23: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  24: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  25: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  26: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  27: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  28: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  29: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  30: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  31: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -24.1808 to -25.4097 (0.09 seconds)
Cbc0038I Round again with cutoff of -34.3475
Cbc0038I Pass  31: suminf.    2.64313 (10) obj. -34.3475 iterations 1
Cbc0038I Pass  32: suminf.    1.17271 (5) obj. -34.3475 iterations 16
Cbc0038I Pass  33: suminf.    1.17271 (5) obj. -34.3475 iterations 0
Cbc0038I Pass  34: suminf.    1.01352 (5) obj. -34.3475 iterations 8
Cbc0038I Pass  35: suminf.    1.01352 (5) obj. -34.3475 iterations 0
Cbc0038I Pass  36: suminf.    2.06825 (5) obj. -34.3475 iterations 6
Cbc0038I Pass  37: suminf.    1.62008 (5) obj. -34.3475 iterations 1
Cbc0038I Pass  38: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  39: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  40: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  41: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  42: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  43: suminf.    1.08157 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  44: suminf.    0.88488 (4) obj. -34.3475 iterations 1
Cbc0038I Pass  45: suminf.    2.02085 (6) obj. -34.3475 iterations 7
Cbc0038I Pass  46: suminf.    1.62008 (5) obj. -34.3475 iterations 2
Cbc0038I Pass  47: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  48: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  49: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  50: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  51: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  52: suminf.    1.08157 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  53: suminf.    0.88488 (4) obj. -34.3475 iterations 1
Cbc0038I Pass  54: suminf.    2.02085 (6) obj. -34.3475 iterations 7
Cbc0038I Pass  55: suminf.    1.62008 (5) obj. -34.3475 iterations 2
Cbc0038I Pass  56: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  57: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  58: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  59: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  60: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -25.4097 - took 0.10 seconds
Cbc0012I Integer solution of -25.40972 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 62 rows 38 columns
Cbc0031I 26 added rows had average density of 60.5
Cbc0013I At root node, 26 cuts changed objective from -60.490378 to -53.131049 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11482 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1473 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 200 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.40972 best solution, best possible -53.131049 (0.88 seconds)
Cbc0012I Integer solution of -25.69264 found by rounding after 8586 iterations and 29 nodes (1.12 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 17 rows 13 columns
Cbc0012I Integer solution of -27.39507 found by RINS after 9038 iterations and 41 nodes (1.14 seconds)
Cbc0004I Integer solution of -27.79897 found after 9321 iterations and 53 nodes (1.17 seconds)
Cbc0012I Integer solution of -27.79902 found by rounding after 10114 iterations and 84 nodes (1.21 seconds)
Cbc0004I Integer solution of -27.85314 found after 10195 iterations and 92 nodes (1.22 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -27.885 found by rounding after 10940 iterations and 123 nodes (1.27 seconds)
Cbc0001I Search completed - best objective -27.885, took 11370 iterations and 142 nodes (1.29 seconds)
Cbc0032I Strong branching done 1170 times (18229 iterations), fathomed 6 nodes and fixed 74 variables
Cbc0035I Maximum depth 27, 398 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-60) rows, 113 (-39) columns and 1843 (-1460) elements
Clp1000I sum of infeasibilities 2.07244e-07 - average 2.20472e-09, 35 fixed columns
Coin0506I Presolve 65 (-29) rows, 76 (-37) columns and 933 (-910) elements
Clp0006I 0  Obj 63.743668 Dual inf 5.3396219 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 2.160824 - largest nonzero change 2.1493901e-05 ( 0.0015380202%) - largest zero change 2.9323439e-05
Clp0000I Optimal - objective value 74.192707
Clp0000I Optimal - objective value 74.192707
Coin0511I After Postsolve, objective 74.192707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 74.192707
Clp0000I Optimal - objective value 74.192707
Clp0000I Optimal - objective value 74.192707
Clp0000I Optimal - objective value 74.192707
Coin0511I After Postsolve, objective 74.192707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.19270659 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 116 columns (116 integer (116 of which binary)) and 1857 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.401%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 4.0465
Cbc0038I Pass   1: suminf.    2.10981 (29) obj. -56.704 iterations 14
Cbc0038I Pass   2: suminf.    2.10981 (29) obj. -56.704 iterations 1
Cbc0038I Solution found of -12.1549
Cbc0038I Rounding solution of -16.8674 is better than previous of -12.1549

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -21.5181
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.10981 (29) obj. -56.704 iterations 0
Cbc0038I Pass   4: suminf.    2.10981 (29) obj. -56.704 iterations 1
Cbc0038I Pass   5: suminf.    0.76653 (4) obj. -21.5181 iterations 35
Cbc0038I Pass   6: suminf.    0.76653 (4) obj. -21.5181 iterations 1
Cbc0038I Pass   7: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass   8: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass   9: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  10: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  11: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  12: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass  13: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass  14: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  15: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  16: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  17: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass  18: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass  19: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  20: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  21: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  22: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass  23: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass  24: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  25: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  26: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  27: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass  28: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass  29: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  30: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  31: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  32: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -12.1549 to -18.2472 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.8892
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.10981 (29) obj. -56.704 iterations 0
Cbc0038I Pass  33: suminf.    2.10981 (29) obj. -56.704 iterations 1
Cbc0038I Pass  34: suminf.    0.63551 (12) obj. -29.8892 iterations 17
Cbc0038I Pass  35: suminf.    1.17885 (8) obj. -29.8892 iterations 16
Cbc0038I Pass  36: suminf.    1.17885 (8) obj. -29.8892 iterations 5
Cbc0038I Pass  37: suminf.    1.22294 (12) obj. -29.8892 iterations 8
Cbc0038I Pass  38: suminf.    1.22294 (12) obj. -29.8892 iterations 2
Cbc0038I Pass  39: suminf.    1.56464 (9) obj. -29.8892 iterations 22
Cbc0038I Pass  40: suminf.    1.37271 (9) obj. -29.8892 iterations 3
Cbc0038I Pass  41: suminf.    1.14654 (6) obj. -29.8892 iterations 9
Cbc0038I Pass  42: suminf.    0.95046 (7) obj. -29.8892 iterations 6
Cbc0038I Pass  43: suminf.    1.14654 (6) obj. -29.8892 iterations 5
Cbc0038I Pass  44: suminf.    1.68079 (11) obj. -29.8892 iterations 31
Cbc0038I Pass  45: suminf.    1.01994 (10) obj. -30.8099 iterations 4
Cbc0038I Pass  46: suminf.    1.85761 (10) obj. -29.8892 iterations 13
Cbc0038I Pass  47: suminf.    1.37206 (10) obj. -29.8892 iterations 5
Cbc0038I Pass  48: suminf.    1.33240 (8) obj. -29.8892 iterations 15
Cbc0038I Pass  49: suminf.    0.92839 (6) obj. -29.8892 iterations 4
Cbc0038I Pass  50: suminf.    0.58211 (7) obj. -30.3167 iterations 4
Cbc0038I Pass  51: suminf.    1.33240 (8) obj. -29.8892 iterations 6
Cbc0038I Pass  52: suminf.    2.82469 (14) obj. -29.8892 iterations 17
Cbc0038I Pass  53: suminf.    2.82469 (14) obj. -29.8892 iterations 4
Cbc0038I Pass  54: suminf.    0.70781 (7) obj. -29.8892 iterations 14
Cbc0038I Pass  55: suminf.    0.67469 (9) obj. -29.8892 iterations 4
Cbc0038I Pass  56: suminf.    1.97984 (10) obj. -29.8892 iterations 7
Cbc0038I Pass  57: suminf.    1.57221 (10) obj. -29.8892 iterations 3
Cbc0038I Pass  58: suminf.    1.35176 (7) obj. -29.8892 iterations 8
Cbc0038I Pass  59: suminf.    0.97930 (7) obj. -29.8892 iterations 5
Cbc0038I Pass  60: suminf.    1.35176 (7) obj. -29.8892 iterations 3
Cbc0038I Pass  61: suminf.    1.41926 (11) obj. -31.4608 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -18.2472 to -24.4157 (0.10 seconds)
Cbc0038I Round again with cutoff of -39.9346
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.10981 (29) obj. -56.704 iterations 0
Cbc0038I Pass  62: suminf.    2.10981 (29) obj. -56.704 iterations 1
Cbc0038I Pass  63: suminf.    1.51438 (21) obj. -39.9346 iterations 15
Cbc0038I Pass  64: suminf.    1.55833 (16) obj. -39.9346 iterations 22
Cbc0038I Pass  65: suminf.    1.46823 (21) obj. -39.9346 iterations 7
Cbc0038I Pass  66: suminf.    2.46233 (16) obj. -39.9346 iterations 22
Cbc0038I Pass  67: suminf.    2.08520 (17) obj. -39.9346 iterations 2
Cbc0038I Pass  68: suminf.    2.12927 (13) obj. -39.9346 iterations 15
Cbc0038I Pass  69: suminf.    2.12927 (13) obj. -39.9346 iterations 1
Cbc0038I Pass  70: suminf.    2.10772 (13) obj. -39.9346 iterations 10
Cbc0038I Pass  71: suminf.    1.61931 (12) obj. -39.9346 iterations 3
Cbc0038I Pass  72: suminf.    1.74339 (12) obj. -39.9346 iterations 5
Cbc0038I Pass  73: suminf.    1.57812 (13) obj. -39.9346 iterations 4
Cbc0038I Pass  74: suminf.    1.74339 (12) obj. -39.9346 iterations 8
Cbc0038I Pass  75: suminf.    2.87879 (17) obj. -39.9346 iterations 20
Cbc0038I Pass  76: suminf.    1.87440 (15) obj. -39.9346 iterations 8
Cbc0038I Pass  77: suminf.    1.47116 (14) obj. -39.9346 iterations 8
Cbc0038I Pass  78: suminf.    2.12927 (13) obj. -39.9346 iterations 17
Cbc0038I Pass  79: suminf.    2.12927 (13) obj. -39.9346 iterations 1
Cbc0038I Pass  80: suminf.    2.10772 (13) obj. -39.9346 iterations 10
Cbc0038I Pass  81: suminf.    1.61931 (12) obj. -39.9346 iterations 3
Cbc0038I Pass  82: suminf.    1.74339 (12) obj. -39.9346 iterations 5
Cbc0038I Pass  83: suminf.    1.57812 (13) obj. -39.9346 iterations 4
Cbc0038I Pass  84: suminf.    1.74339 (12) obj. -39.9346 iterations 8
Cbc0038I Pass  85: suminf.    2.46307 (22) obj. -39.9346 iterations 31
Cbc0038I Pass  86: suminf.    2.09144 (18) obj. -39.9346 iterations 12
Cbc0038I Pass  87: suminf.    2.13103 (15) obj. -39.9346 iterations 8
Cbc0038I Pass  88: suminf.    2.13103 (15) obj. -39.9346 iterations 0
Cbc0038I Pass  89: suminf.    1.78390 (15) obj. -39.9346 iterations 12
Cbc0038I Pass  90: suminf.    1.78390 (15) obj. -39.9346 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 46 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -24.4157 - took 0.10 seconds
Cbc0012I Integer solution of -24.4157 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 22 rows 27 columns
Cbc0031I 58 added rows had average density of 28.810345
Cbc0013I At root node, 58 cuts changed objective from -63.373636 to -36.095634 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9222 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1205 row cuts average 106.3 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 573 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 720 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 283 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 160 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.641 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.4157 best solution, best possible -36.095634 (2.09 seconds)
Cbc0010I After 8 nodes, 9 on tree, -24.4157 best solution, best possible -36.095634 (2.83 seconds)
Cbc0012I Integer solution of -24.46816 found by rounding after 4295 iterations and 14 nodes (3.04 seconds)
Cbc0004I Integer solution of -24.79897 found after 4317 iterations and 15 nodes (3.06 seconds)
Cbc0016I Integer solution of -27.69629 found by strong branching after 4338 iterations and 17 nodes (3.15 seconds)
Cbc0016I Integer solution of -27.85314 found by strong branching after 4375 iterations and 22 nodes (3.25 seconds)
Cbc0016I Integer solution of -27.885 found by strong branching after 4632 iterations and 33 nodes (3.52 seconds)
Cbc0010I After 35 nodes, 8 on tree, -27.885 best solution, best possible -36.095634 (3.59 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 10 rows 19 columns
Cbc0010I After 53 nodes, 7 on tree, -27.885 best solution, best possible -36.095634 (4.34 seconds)
Cbc0001I Search completed - best objective -27.885, took 5542 iterations and 66 nodes (4.69 seconds)
Cbc0032I Strong branching done 762 times (11199 iterations), fathomed 7 nodes and fixed 7 variables
Cbc0035I Maximum depth 16, 143 variables fixed on reduced cost
Total time (CPU seconds):       3.30   (Wallclock seconds):       4.71

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 75 (-3) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 0.000152538 - average 1.18246e-06, 11 fixed columns
Coin0506I Presolve 108 (-21) rows, 64 (-11) columns and 337 (-63) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Coin0511I After Postsolve, objective 60.490378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Coin0511I After Postsolve, objective 60.490378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.49037826 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 75 columns (74 integer (74 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.121%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.4832
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.78916 iterations 50
Cbc0038I Solution found of -6.78916
Cbc0038I Relaxing continuous gives -6.78916
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 62 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -6.78916 to -24.1808 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.8118
Cbc0038I Pass   2: suminf.    1.96909 (9) obj. -27.8118 iterations 8
Cbc0038I Pass   3: suminf.    1.04853 (4) obj. -27.8118 iterations 11
Cbc0038I Pass   4: suminf.    0.58086 (4) obj. -27.8118 iterations 2
Cbc0038I Pass   5: suminf.    1.82753 (5) obj. -27.8118 iterations 5
Cbc0038I Pass   6: suminf.    1.07506 (3) obj. -27.8118 iterations 2
Cbc0038I Pass   7: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass   8: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass   9: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  10: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  11: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  12: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  13: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  14: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  15: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  16: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  17: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  18: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  19: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  20: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  21: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  22: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  23: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  24: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  25: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  26: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  27: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  28: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  29: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  30: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  31: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -24.1808 to -25.4097 (0.08 seconds)
Cbc0038I Round again with cutoff of -34.3475
Cbc0038I Pass  31: suminf.    2.64313 (10) obj. -34.3475 iterations 1
Cbc0038I Pass  32: suminf.    1.17271 (5) obj. -34.3475 iterations 16
Cbc0038I Pass  33: suminf.    1.17271 (5) obj. -34.3475 iterations 0
Cbc0038I Pass  34: suminf.    1.01352 (5) obj. -34.3475 iterations 8
Cbc0038I Pass  35: suminf.    1.01352 (5) obj. -34.3475 iterations 0
Cbc0038I Pass  36: suminf.    2.06825 (5) obj. -34.3475 iterations 6
Cbc0038I Pass  37: suminf.    1.62008 (5) obj. -34.3475 iterations 1
Cbc0038I Pass  38: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  39: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  40: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  41: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  42: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  43: suminf.    1.08157 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  44: suminf.    0.88488 (4) obj. -34.3475 iterations 1
Cbc0038I Pass  45: suminf.    2.02085 (6) obj. -34.3475 iterations 7
Cbc0038I Pass  46: suminf.    1.62008 (5) obj. -34.3475 iterations 2
Cbc0038I Pass  47: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  48: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  49: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  50: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  51: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  52: suminf.    1.08157 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  53: suminf.    0.88488 (4) obj. -34.3475 iterations 1
Cbc0038I Pass  54: suminf.    2.02085 (6) obj. -34.3475 iterations 7
Cbc0038I Pass  55: suminf.    1.62008 (5) obj. -34.3475 iterations 2
Cbc0038I Pass  56: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  57: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  58: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  59: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  60: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -25.4097 - took 0.11 seconds
Cbc0012I Integer solution of -25.40972 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 62 rows 38 columns
Cbc0031I 26 added rows had average density of 60.5
Cbc0013I At root node, 26 cuts changed objective from -60.490378 to -53.131049 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11482 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1473 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 200 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.40972 best solution, best possible -53.131049 (0.88 seconds)
Cbc0012I Integer solution of -25.69264 found by rounding after 8586 iterations and 29 nodes (1.11 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 17 rows 13 columns
Cbc0012I Integer solution of -27.39507 found by RINS after 9038 iterations and 41 nodes (1.14 seconds)
Cbc0004I Integer solution of -27.79897 found after 9321 iterations and 53 nodes (1.17 seconds)
Cbc0012I Integer solution of -27.79902 found by rounding after 10114 iterations and 84 nodes (1.21 seconds)
Cbc0004I Integer solution of -27.85314 found after 10195 iterations and 92 nodes (1.22 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -27.885 found by rounding after 10940 iterations and 123 nodes (1.27 seconds)
Cbc0001I Search completed - best objective -27.885, took 11370 iterations and 142 nodes (1.30 seconds)
Cbc0032I Strong branching done 1170 times (18229 iterations), fathomed 6 nodes and fixed 74 variables
Cbc0035I Maximum depth 27, 398 variables fixed on reduced cost
Total time (CPU seconds):       1.28   (Wallclock seconds):       1.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-61) rows, 113 (-40) columns and 1843 (-1461) elements
Clp1000I sum of infeasibilities 2.07244e-07 - average 2.20472e-09, 35 fixed columns
Coin0506I Presolve 65 (-29) rows, 76 (-37) columns and 933 (-910) elements
Clp0006I 0  Obj 63.743668 Dual inf 5.3396219 (76)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 2.160824 - largest nonzero change 2.1493901e-05 ( 0.0015380202%) - largest zero change 2.9323439e-05
Clp0000I Optimal - objective value 74.192707
Clp0000I Optimal - objective value 74.192707
Coin0511I After Postsolve, objective 74.192707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 74.192707
Clp0000I Optimal - objective value 74.192707
Clp0000I Optimal - objective value 74.192707
Clp0000I Optimal - objective value 74.192707
Coin0511I After Postsolve, objective 74.192707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.19270659 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 116 columns (116 integer (116 of which binary)) and 1857 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.401%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 4.0465
Cbc0038I Pass   1: suminf.    2.10981 (29) obj. -56.704 iterations 14
Cbc0038I Pass   2: suminf.    2.10981 (29) obj. -56.704 iterations 1
Cbc0038I Solution found of -12.1549
Cbc0038I Rounding solution of -16.8674 is better than previous of -12.1549

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -21.5181
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.10981 (29) obj. -56.704 iterations 0
Cbc0038I Pass   4: suminf.    2.10981 (29) obj. -56.704 iterations 1
Cbc0038I Pass   5: suminf.    0.76653 (4) obj. -21.5181 iterations 35
Cbc0038I Pass   6: suminf.    0.76653 (4) obj. -21.5181 iterations 1
Cbc0038I Pass   7: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass   8: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass   9: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  10: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  11: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  12: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass  13: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass  14: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  15: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  16: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  17: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass  18: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass  19: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  20: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  21: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  22: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass  23: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass  24: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  25: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  26: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  27: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I Pass  28: suminf.    0.58290 (2) obj. -21.5181 iterations 1
Cbc0038I Pass  29: suminf.    0.46909 (2) obj. -23.0623 iterations 1
Cbc0038I Pass  30: suminf.    0.94358 (3) obj. -21.5181 iterations 4
Cbc0038I Pass  31: suminf.    0.94358 (3) obj. -21.5181 iterations 0
Cbc0038I Pass  32: suminf.    0.65012 (3) obj. -21.5181 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -12.1549 to -18.2472 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.8892
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.10981 (29) obj. -56.704 iterations 0
Cbc0038I Pass  33: suminf.    2.10981 (29) obj. -56.704 iterations 1
Cbc0038I Pass  34: suminf.    0.63551 (12) obj. -29.8892 iterations 17
Cbc0038I Pass  35: suminf.    1.17885 (8) obj. -29.8892 iterations 16
Cbc0038I Pass  36: suminf.    1.17885 (8) obj. -29.8892 iterations 5
Cbc0038I Pass  37: suminf.    1.22294 (12) obj. -29.8892 iterations 8
Cbc0038I Pass  38: suminf.    1.22294 (12) obj. -29.8892 iterations 2
Cbc0038I Pass  39: suminf.    1.56464 (9) obj. -29.8892 iterations 22
Cbc0038I Pass  40: suminf.    1.37271 (9) obj. -29.8892 iterations 3
Cbc0038I Pass  41: suminf.    1.14654 (6) obj. -29.8892 iterations 9
Cbc0038I Pass  42: suminf.    0.95046 (7) obj. -29.8892 iterations 6
Cbc0038I Pass  43: suminf.    1.14654 (6) obj. -29.8892 iterations 5
Cbc0038I Pass  44: suminf.    1.68079 (11) obj. -29.8892 iterations 31
Cbc0038I Pass  45: suminf.    1.01994 (10) obj. -30.8099 iterations 4
Cbc0038I Pass  46: suminf.    1.85761 (10) obj. -29.8892 iterations 13
Cbc0038I Pass  47: suminf.    1.37206 (10) obj. -29.8892 iterations 5
Cbc0038I Pass  48: suminf.    1.33240 (8) obj. -29.8892 iterations 15
Cbc0038I Pass  49: suminf.    0.92839 (6) obj. -29.8892 iterations 4
Cbc0038I Pass  50: suminf.    0.58211 (7) obj. -30.3167 iterations 4
Cbc0038I Pass  51: suminf.    1.33240 (8) obj. -29.8892 iterations 6
Cbc0038I Pass  52: suminf.    2.82469 (14) obj. -29.8892 iterations 17
Cbc0038I Pass  53: suminf.    2.82469 (14) obj. -29.8892 iterations 4
Cbc0038I Pass  54: suminf.    0.70781 (7) obj. -29.8892 iterations 14
Cbc0038I Pass  55: suminf.    0.67469 (9) obj. -29.8892 iterations 4
Cbc0038I Pass  56: suminf.    1.97984 (10) obj. -29.8892 iterations 7
Cbc0038I Pass  57: suminf.    1.57221 (10) obj. -29.8892 iterations 3
Cbc0038I Pass  58: suminf.    1.35176 (7) obj. -29.8892 iterations 8
Cbc0038I Pass  59: suminf.    0.97930 (7) obj. -29.8892 iterations 5
Cbc0038I Pass  60: suminf.    1.35176 (7) obj. -29.8892 iterations 3
Cbc0038I Pass  61: suminf.    1.41926 (11) obj. -31.4608 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -18.2472 to -24.4157 (0.11 seconds)
Cbc0038I Round again with cutoff of -39.9346
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.10981 (29) obj. -56.704 iterations 0
Cbc0038I Pass  62: suminf.    2.10981 (29) obj. -56.704 iterations 1
Cbc0038I Pass  63: suminf.    1.51438 (21) obj. -39.9346 iterations 15
Cbc0038I Pass  64: suminf.    1.55833 (16) obj. -39.9346 iterations 22
Cbc0038I Pass  65: suminf.    1.46823 (21) obj. -39.9346 iterations 7
Cbc0038I Pass  66: suminf.    2.46233 (16) obj. -39.9346 iterations 22
Cbc0038I Pass  67: suminf.    2.08520 (17) obj. -39.9346 iterations 2
Cbc0038I Pass  68: suminf.    2.12927 (13) obj. -39.9346 iterations 15
Cbc0038I Pass  69: suminf.    2.12927 (13) obj. -39.9346 iterations 1
Cbc0038I Pass  70: suminf.    2.10772 (13) obj. -39.9346 iterations 10
Cbc0038I Pass  71: suminf.    1.61931 (12) obj. -39.9346 iterations 3
Cbc0038I Pass  72: suminf.    1.74339 (12) obj. -39.9346 iterations 5
Cbc0038I Pass  73: suminf.    1.57812 (13) obj. -39.9346 iterations 4
Cbc0038I Pass  74: suminf.    1.74339 (12) obj. -39.9346 iterations 8
Cbc0038I Pass  75: suminf.    2.87879 (17) obj. -39.9346 iterations 20
Cbc0038I Pass  76: suminf.    1.87440 (15) obj. -39.9346 iterations 8
Cbc0038I Pass  77: suminf.    1.47116 (14) obj. -39.9346 iterations 8
Cbc0038I Pass  78: suminf.    2.12927 (13) obj. -39.9346 iterations 17
Cbc0038I Pass  79: suminf.    2.12927 (13) obj. -39.9346 iterations 1
Cbc0038I Pass  80: suminf.    2.10772 (13) obj. -39.9346 iterations 10
Cbc0038I Pass  81: suminf.    1.61931 (12) obj. -39.9346 iterations 3
Cbc0038I Pass  82: suminf.    1.74339 (12) obj. -39.9346 iterations 5
Cbc0038I Pass  83: suminf.    1.57812 (13) obj. -39.9346 iterations 4
Cbc0038I Pass  84: suminf.    1.74339 (12) obj. -39.9346 iterations 8
Cbc0038I Pass  85: suminf.    2.46307 (22) obj. -39.9346 iterations 31
Cbc0038I Pass  86: suminf.    2.09144 (18) obj. -39.9346 iterations 12
Cbc0038I Pass  87: suminf.    2.13103 (15) obj. -39.9346 iterations 8
Cbc0038I Pass  88: suminf.    2.13103 (15) obj. -39.9346 iterations 0
Cbc0038I Pass  89: suminf.    1.78390 (15) obj. -39.9346 iterations 12
Cbc0038I Pass  90: suminf.    1.78390 (15) obj. -39.9346 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 46 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -24.4157 - took 0.12 seconds
Cbc0012I Integer solution of -24.4157 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 22 rows 27 columns
Cbc0031I 58 added rows had average density of 28.810345
Cbc0013I At root node, 58 cuts changed objective from -63.373636 to -36.095634 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9222 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1205 row cuts average 106.3 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 573 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 720 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 283 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 160 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.651 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.4157 best solution, best possible -36.095634 (2.18 seconds)
Cbc0010I After 8 nodes, 9 on tree, -24.4157 best solution, best possible -36.095634 (2.93 seconds)
Cbc0012I Integer solution of -24.46816 found by rounding after 4295 iterations and 14 nodes (3.14 seconds)
Cbc0004I Integer solution of -24.79897 found after 4317 iterations and 15 nodes (3.16 seconds)
Cbc0016I Integer solution of -27.69629 found by strong branching after 4338 iterations and 17 nodes (3.25 seconds)
Cbc0016I Integer solution of -27.85314 found by strong branching after 4375 iterations and 22 nodes (3.36 seconds)
Cbc0010I After 32 nodes, 9 on tree, -27.85314 best solution, best possible -36.095634 (3.63 seconds)
Cbc0016I Integer solution of -27.885 found by strong branching after 4632 iterations and 33 nodes (3.66 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 10 rows 19 columns
Cbc0010I After 50 nodes, 9 on tree, -27.885 best solution, best possible -36.095634 (4.39 seconds)
Cbc0001I Search completed - best objective -27.885, took 5542 iterations and 66 nodes (4.87 seconds)
Cbc0032I Strong branching done 762 times (11199 iterations), fathomed 7 nodes and fixed 7 variables
Cbc0035I Maximum depth 16, 143 variables fixed on reduced cost
Total time (CPU seconds):       3.41   (Wallclock seconds):       4.89

