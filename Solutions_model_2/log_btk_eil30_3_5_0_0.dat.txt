Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 25 (-7) columns and 135 (-42) elements
Clp1000I sum of infeasibilities 3.40976e-09 - average 7.41252e-11, 4 fixed columns
Coin0506I Presolve 36 (-10) rows, 20 (-5) columns and 106 (-29) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Coin0511I After Postsolve, objective 96.15932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Coin0511I After Postsolve, objective 96.15932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.15932027 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 46 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.608%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.49347
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -51.873 iterations 20
Cbc0038I Solution found of -51.873
Cbc0038I Relaxing continuous gives -51.873
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -51.873 to -59.4653 (0.01 seconds)
Cbc0038I Round again with cutoff of -63.1348
Cbc0038I Pass   2: suminf.    0.13472 (1) obj. -63.1348 iterations 1
Cbc0038I Pass   3: suminf.    0.09842 (2) obj. -63.1348 iterations 4
Cbc0038I Pass   4: suminf.    0.38349 (3) obj. -63.1348 iterations 3
Cbc0038I Pass   5: suminf.    0.33218 (2) obj. -63.1348 iterations 1
Cbc0038I Pass   6: suminf.    0.69241 (2) obj. -63.1348 iterations 4
Cbc0038I Pass   7: suminf.    0.55905 (2) obj. -63.1348 iterations 2
Cbc0038I Pass   8: suminf.    0.52447 (2) obj. -63.1348 iterations 1
Cbc0038I Pass   9: suminf.    0.69241 (2) obj. -63.1348 iterations 2
Cbc0038I Pass  10: suminf.    2.15902 (8) obj. -63.1348 iterations 9
Cbc0038I Pass  11: suminf.    1.49574 (4) obj. -63.1348 iterations 3
Cbc0038I Pass  12: suminf.    1.36554 (8) obj. -63.1348 iterations 4
Cbc0038I Pass  13: suminf.    2.46943 (9) obj. -63.1348 iterations 8
Cbc0038I Pass  14: suminf.    2.31206 (8) obj. -63.1348 iterations 1
Cbc0038I Pass  15: suminf.    2.04258 (5) obj. -63.1348 iterations 6
Cbc0038I Pass  16: suminf.    0.89023 (5) obj. -63.1348 iterations 1
Cbc0038I Pass  17: suminf.    0.89023 (5) obj. -63.1348 iterations 0
Cbc0038I Pass  18: suminf.    0.34856 (2) obj. -63.1348 iterations 3
Cbc0038I Pass  19: suminf.    0.30744 (1) obj. -63.1348 iterations 1
Cbc0038I Pass  20: suminf.    0.42490 (3) obj. -63.1348 iterations 4
Cbc0038I Pass  21: suminf.    1.00246 (3) obj. -63.1348 iterations 1
Cbc0038I Pass  22: suminf.    1.38629 (6) obj. -63.1348 iterations 6
Cbc0038I Pass  23: suminf.    0.52639 (3) obj. -63.1348 iterations 2
Cbc0038I Pass  24: suminf.    0.69241 (2) obj. -63.1348 iterations 3
Cbc0038I Pass  25: suminf.    0.69241 (2) obj. -63.1348 iterations 0
Cbc0038I Pass  26: suminf.    0.55905 (2) obj. -63.1348 iterations 2
Cbc0038I Pass  27: suminf.    0.52447 (2) obj. -63.1348 iterations 1
Cbc0038I Pass  28: suminf.    1.32033 (5) obj. -63.1348 iterations 8
Cbc0038I Pass  29: suminf.    1.09047 (4) obj. -63.1348 iterations 2
Cbc0038I Pass  30: suminf.    1.31662 (3) obj. -63.1348 iterations 5
Cbc0038I Pass  31: suminf.    1.15489 (3) obj. -63.1348 iterations 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -69.7397
Cbc0038I Pass  31: suminf.    0.30811 (3) obj. -69.7397 iterations 2
Cbc0038I Pass  32: suminf.    0.42514 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  33: suminf.    0.37461 (2) obj. -69.7397 iterations 1
Cbc0038I Pass  34: suminf.    0.77610 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  35: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  36: suminf.    0.67458 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  37: suminf.    0.67458 (3) obj. -69.7397 iterations 0
Cbc0038I Pass  38: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  39: suminf.    0.91175 (5) obj. -69.7397 iterations 5
Cbc0038I Pass  40: suminf.    0.69664 (3) obj. -69.7397 iterations 3
Cbc0038I Pass  41: suminf.    0.77610 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  42: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  43: suminf.    0.67458 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  44: suminf.    0.67458 (3) obj. -69.7397 iterations 0
Cbc0038I Pass  45: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  46: suminf.    1.29107 (5) obj. -69.7397 iterations 7
Cbc0038I Pass  47: suminf.    1.27896 (4) obj. -69.7397 iterations 2
Cbc0038I Pass  48: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  49: suminf.    0.90847 (4) obj. -69.7397 iterations 0
Cbc0038I Pass  50: suminf.    1.29107 (5) obj. -69.7397 iterations 4
Cbc0038I Pass  51: suminf.    1.73444 (6) obj. -69.7397 iterations 5
Cbc0038I Pass  52: suminf.    1.73444 (6) obj. -69.7397 iterations 2
Cbc0038I Pass  53: suminf.    1.56009 (5) obj. -69.7397 iterations 6
Cbc0038I Pass  54: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  55: suminf.    0.90847 (4) obj. -69.7397 iterations 0
Cbc0038I Pass  56: suminf.    1.29107 (5) obj. -69.7397 iterations 4
Cbc0038I Pass  57: suminf.    1.27896 (4) obj. -69.7397 iterations 1
Cbc0038I Pass  58: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  59: suminf.    1.30795 (5) obj. -69.7397 iterations 2
Cbc0038I Pass  60: suminf.    0.73246 (4) obj. -69.7397 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -59.4653 - took 0.03 seconds
Cbc0012I Integer solution of -59.46527 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 46 rows 25 columns, reduced to 34 rows 19 columns
Cbc0031I 13 added rows had average density of 11.076923
Cbc0013I At root node, 13 cuts changed objective from -96.15932 to -64.23788 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 778 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 737 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.665 seconds - new frequency is -100
Cbc0001I Search completed - best objective -59.46526999999998, took 1429 iterations and 0 nodes (1.32 seconds)
Cbc0032I Strong branching done 4 times (14 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       1.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-16) rows, 48 (-12) columns and 405 (-207) elements
Clp1000I sum of infeasibilities 1.81383e-10 - average 3.9431e-12, 37 fixed columns
Coin0506I Presolve 6 (-40) rows, 11 (-37) columns and 30 (-375) elements
Clp0006I 0  Obj 52.541318 Dual inf 3.1075034 (10)
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.6891736 - largest nonzero change 1.1081108e-05 ( 0.00096990836%) - largest zero change 1.0011346e-05
Clp0000I Optimal - objective value 55.202688
Clp0000I Optimal - objective value 55.202688
Coin0511I After Postsolve, objective 55.202688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.202688 Dual inf 824.54122 (29)
Clp0014I Perturbing problem by 0.001% of 0.22855212 - largest nonzero change 2.863608e-05 ( 0.0024275985%) - largest zero change 2.9759326e-05
Clp0000I Optimal - objective value 129.86015
Clp0000I Optimal - objective value 129.86015
Clp0000I Optimal - objective value 129.86015
Coin0511I After Postsolve, objective 129.86015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129.8601515 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 49 columns (49 integer (49 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.23965
Cbc0038I Pass   1: suminf.    2.40896 (10) obj. -79.1586 iterations 13
Cbc0038I Solution found of -55.4845
Cbc0038I Rounding solution of -59.4653 is better than previous of -55.4845

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -64.0391
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.40896 (10) obj. -79.1586 iterations 0
Cbc0038I Pass   3: suminf.    0.20002 (1) obj. -64.0391 iterations 11
Cbc0038I Pass   4: suminf.    0.20161 (1) obj. -64.1073 iterations 1
Cbc0038I Pass   5: suminf.    0.51888 (2) obj. -64.0391 iterations 6
Cbc0038I Pass   6: suminf.    0.51888 (2) obj. -64.0391 iterations 3
Cbc0038I Pass   7: suminf.    0.68328 (2) obj. -68.1491 iterations 1
Cbc0038I Pass   8: suminf.    2.09995 (9) obj. -64.0391 iterations 10
Cbc0038I Pass   9: suminf.    1.97823 (6) obj. -64.0391 iterations 2
Cbc0038I Pass  10: suminf.    0.81825 (3) obj. -64.0391 iterations 10
Cbc0038I Pass  11: suminf.    0.78613 (3) obj. -64.0391 iterations 1
Cbc0038I Pass  12: suminf.    1.04424 (5) obj. -64.0391 iterations 6
Cbc0038I Pass  13: suminf.    0.73226 (4) obj. -64.0391 iterations 4
Cbc0038I Pass  14: suminf.    0.81747 (3) obj. -64.0391 iterations 3
Cbc0038I Pass  15: suminf.    0.65671 (3) obj. -64.0391 iterations 1
Cbc0038I Pass  16: suminf.    1.77650 (6) obj. -64.0391 iterations 12
Cbc0038I Pass  17: suminf.    1.77650 (6) obj. -64.0391 iterations 1
Cbc0038I Pass  18: suminf.    1.24658 (5) obj. -64.0391 iterations 4
Cbc0038I Pass  19: suminf.    1.22820 (5) obj. -64.0391 iterations 1
Cbc0038I Pass  20: suminf.    0.71747 (3) obj. -64.0391 iterations 3
Cbc0038I Pass  21: suminf.    0.69671 (3) obj. -64.0391 iterations 1
Cbc0038I Pass  22: suminf.    2.24076 (8) obj. -64.0391 iterations 11
Cbc0038I Pass  23: suminf.    2.20132 (8) obj. -64.0391 iterations 3
Cbc0038I Pass  24: suminf.    1.29477 (4) obj. -64.0391 iterations 8
Cbc0038I Pass  25: suminf.    1.02081 (4) obj. -64.0391 iterations 1
Cbc0038I Pass  26: suminf.    1.29477 (4) obj. -64.0391 iterations 2
Cbc0038I Pass  27: suminf.    2.26266 (9) obj. -64.0391 iterations 11
Cbc0038I Pass  28: suminf.    1.88987 (7) obj. -64.0391 iterations 3
Cbc0038I Pass  29: suminf.    1.73525 (7) obj. -64.0391 iterations 2
Cbc0038I Pass  30: suminf.    1.39731 (4) obj. -64.0391 iterations 7
Cbc0038I Pass  31: suminf.    1.24661 (4) obj. -64.0391 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -59.4653 - took 0.01 seconds
Cbc0012I Integer solution of -59.46527 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 2.3333333
Cbc0013I At root node, 15 cuts changed objective from -105.20273 to -50.252807 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 147 row cuts average 2.6 elements, 23 column cuts (23 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 70 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0001I Search completed - best objective -59.46526999999998, took 66 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 25 (-7) columns and 135 (-42) elements
Clp1000I sum of infeasibilities 3.40976e-09 - average 7.41252e-11, 4 fixed columns
Coin0506I Presolve 36 (-10) rows, 20 (-5) columns and 106 (-29) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Coin0511I After Postsolve, objective 96.15932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Coin0511I After Postsolve, objective 96.15932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.15932027 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 46 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.608%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.49347
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -51.873 iterations 20
Cbc0038I Solution found of -51.873
Cbc0038I Relaxing continuous gives -51.873
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -51.873 to -59.4653 (0.01 seconds)
Cbc0038I Round again with cutoff of -63.1348
Cbc0038I Pass   2: suminf.    0.13472 (1) obj. -63.1348 iterations 1
Cbc0038I Pass   3: suminf.    0.09842 (2) obj. -63.1348 iterations 4
Cbc0038I Pass   4: suminf.    0.38349 (3) obj. -63.1348 iterations 3
Cbc0038I Pass   5: suminf.    0.33218 (2) obj. -63.1348 iterations 1
Cbc0038I Pass   6: suminf.    0.69241 (2) obj. -63.1348 iterations 4
Cbc0038I Pass   7: suminf.    0.55905 (2) obj. -63.1348 iterations 2
Cbc0038I Pass   8: suminf.    0.52447 (2) obj. -63.1348 iterations 1
Cbc0038I Pass   9: suminf.    0.69241 (2) obj. -63.1348 iterations 2
Cbc0038I Pass  10: suminf.    2.15902 (8) obj. -63.1348 iterations 9
Cbc0038I Pass  11: suminf.    1.49574 (4) obj. -63.1348 iterations 3
Cbc0038I Pass  12: suminf.    1.36554 (8) obj. -63.1348 iterations 4
Cbc0038I Pass  13: suminf.    2.46943 (9) obj. -63.1348 iterations 8
Cbc0038I Pass  14: suminf.    2.31206 (8) obj. -63.1348 iterations 1
Cbc0038I Pass  15: suminf.    2.04258 (5) obj. -63.1348 iterations 6
Cbc0038I Pass  16: suminf.    0.89023 (5) obj. -63.1348 iterations 1
Cbc0038I Pass  17: suminf.    0.89023 (5) obj. -63.1348 iterations 0
Cbc0038I Pass  18: suminf.    0.34856 (2) obj. -63.1348 iterations 3
Cbc0038I Pass  19: suminf.    0.30744 (1) obj. -63.1348 iterations 1
Cbc0038I Pass  20: suminf.    0.42490 (3) obj. -63.1348 iterations 4
Cbc0038I Pass  21: suminf.    1.00246 (3) obj. -63.1348 iterations 1
Cbc0038I Pass  22: suminf.    1.38629 (6) obj. -63.1348 iterations 6
Cbc0038I Pass  23: suminf.    0.52639 (3) obj. -63.1348 iterations 2
Cbc0038I Pass  24: suminf.    0.69241 (2) obj. -63.1348 iterations 3
Cbc0038I Pass  25: suminf.    0.69241 (2) obj. -63.1348 iterations 0
Cbc0038I Pass  26: suminf.    0.55905 (2) obj. -63.1348 iterations 2
Cbc0038I Pass  27: suminf.    0.52447 (2) obj. -63.1348 iterations 1
Cbc0038I Pass  28: suminf.    1.32033 (5) obj. -63.1348 iterations 8
Cbc0038I Pass  29: suminf.    1.09047 (4) obj. -63.1348 iterations 2
Cbc0038I Pass  30: suminf.    1.31662 (3) obj. -63.1348 iterations 5
Cbc0038I Pass  31: suminf.    1.15489 (3) obj. -63.1348 iterations 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -69.7397
Cbc0038I Pass  31: suminf.    0.30811 (3) obj. -69.7397 iterations 2
Cbc0038I Pass  32: suminf.    0.42514 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  33: suminf.    0.37461 (2) obj. -69.7397 iterations 1
Cbc0038I Pass  34: suminf.    0.77610 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  35: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  36: suminf.    0.67458 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  37: suminf.    0.67458 (3) obj. -69.7397 iterations 0
Cbc0038I Pass  38: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  39: suminf.    0.91175 (5) obj. -69.7397 iterations 5
Cbc0038I Pass  40: suminf.    0.69664 (3) obj. -69.7397 iterations 3
Cbc0038I Pass  41: suminf.    0.77610 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  42: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  43: suminf.    0.67458 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  44: suminf.    0.67458 (3) obj. -69.7397 iterations 0
Cbc0038I Pass  45: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  46: suminf.    1.29107 (5) obj. -69.7397 iterations 7
Cbc0038I Pass  47: suminf.    1.27896 (4) obj. -69.7397 iterations 2
Cbc0038I Pass  48: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  49: suminf.    0.90847 (4) obj. -69.7397 iterations 0
Cbc0038I Pass  50: suminf.    1.29107 (5) obj. -69.7397 iterations 4
Cbc0038I Pass  51: suminf.    1.73444 (6) obj. -69.7397 iterations 5
Cbc0038I Pass  52: suminf.    1.73444 (6) obj. -69.7397 iterations 2
Cbc0038I Pass  53: suminf.    1.56009 (5) obj. -69.7397 iterations 6
Cbc0038I Pass  54: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  55: suminf.    0.90847 (4) obj. -69.7397 iterations 0
Cbc0038I Pass  56: suminf.    1.29107 (5) obj. -69.7397 iterations 4
Cbc0038I Pass  57: suminf.    1.27896 (4) obj. -69.7397 iterations 1
Cbc0038I Pass  58: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  59: suminf.    1.30795 (5) obj. -69.7397 iterations 2
Cbc0038I Pass  60: suminf.    0.73246 (4) obj. -69.7397 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -59.4653 - took 0.04 seconds
Cbc0012I Integer solution of -59.46527 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 46 rows 25 columns, reduced to 34 rows 19 columns
Cbc0031I 13 added rows had average density of 11.076923
Cbc0013I At root node, 13 cuts changed objective from -96.15932 to -64.23788 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 778 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 737 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.718 seconds - new frequency is -100
Cbc0001I Search completed - best objective -59.46526999999998, took 1429 iterations and 0 nodes (1.43 seconds)
Cbc0032I Strong branching done 4 times (14 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 48 (-13) columns and 405 (-208) elements
Clp1000I sum of infeasibilities 1.81383e-10 - average 3.9431e-12, 37 fixed columns
Coin0506I Presolve 6 (-40) rows, 11 (-37) columns and 30 (-375) elements
Clp0006I 0  Obj 52.541318 Dual inf 3.1075034 (10)
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.6891736 - largest nonzero change 1.1081108e-05 ( 0.00096990836%) - largest zero change 1.0011346e-05
Clp0000I Optimal - objective value 55.202688
Clp0000I Optimal - objective value 55.202688
Coin0511I After Postsolve, objective 55.202688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.202688 Dual inf 824.54122 (29)
Clp0014I Perturbing problem by 0.001% of 0.22855212 - largest nonzero change 2.863608e-05 ( 0.0024275985%) - largest zero change 2.9759326e-05
Clp0000I Optimal - objective value 129.86015
Clp0000I Optimal - objective value 129.86015
Clp0000I Optimal - objective value 129.86015
Coin0511I After Postsolve, objective 129.86015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129.8601515 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 49 columns (49 integer (49 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.23965
Cbc0038I Pass   1: suminf.    2.40896 (10) obj. -79.1586 iterations 13
Cbc0038I Solution found of -55.4845
Cbc0038I Rounding solution of -59.4653 is better than previous of -55.4845

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -64.0391
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.40896 (10) obj. -79.1586 iterations 0
Cbc0038I Pass   3: suminf.    0.20002 (1) obj. -64.0391 iterations 11
Cbc0038I Pass   4: suminf.    0.20161 (1) obj. -64.1073 iterations 1
Cbc0038I Pass   5: suminf.    0.51888 (2) obj. -64.0391 iterations 6
Cbc0038I Pass   6: suminf.    0.51888 (2) obj. -64.0391 iterations 3
Cbc0038I Pass   7: suminf.    0.68328 (2) obj. -68.1491 iterations 1
Cbc0038I Pass   8: suminf.    2.09995 (9) obj. -64.0391 iterations 10
Cbc0038I Pass   9: suminf.    1.97823 (6) obj. -64.0391 iterations 2
Cbc0038I Pass  10: suminf.    0.81825 (3) obj. -64.0391 iterations 10
Cbc0038I Pass  11: suminf.    0.78613 (3) obj. -64.0391 iterations 1
Cbc0038I Pass  12: suminf.    1.04424 (5) obj. -64.0391 iterations 6
Cbc0038I Pass  13: suminf.    0.73226 (4) obj. -64.0391 iterations 4
Cbc0038I Pass  14: suminf.    0.81747 (3) obj. -64.0391 iterations 3
Cbc0038I Pass  15: suminf.    0.65671 (3) obj. -64.0391 iterations 1
Cbc0038I Pass  16: suminf.    1.77650 (6) obj. -64.0391 iterations 12
Cbc0038I Pass  17: suminf.    1.77650 (6) obj. -64.0391 iterations 1
Cbc0038I Pass  18: suminf.    1.24658 (5) obj. -64.0391 iterations 4
Cbc0038I Pass  19: suminf.    1.22820 (5) obj. -64.0391 iterations 1
Cbc0038I Pass  20: suminf.    0.71747 (3) obj. -64.0391 iterations 3
Cbc0038I Pass  21: suminf.    0.69671 (3) obj. -64.0391 iterations 1
Cbc0038I Pass  22: suminf.    2.24076 (8) obj. -64.0391 iterations 11
Cbc0038I Pass  23: suminf.    2.20132 (8) obj. -64.0391 iterations 3
Cbc0038I Pass  24: suminf.    1.29477 (4) obj. -64.0391 iterations 8
Cbc0038I Pass  25: suminf.    1.02081 (4) obj. -64.0391 iterations 1
Cbc0038I Pass  26: suminf.    1.29477 (4) obj. -64.0391 iterations 2
Cbc0038I Pass  27: suminf.    2.26266 (9) obj. -64.0391 iterations 11
Cbc0038I Pass  28: suminf.    1.88987 (7) obj. -64.0391 iterations 3
Cbc0038I Pass  29: suminf.    1.73525 (7) obj. -64.0391 iterations 2
Cbc0038I Pass  30: suminf.    1.39731 (4) obj. -64.0391 iterations 7
Cbc0038I Pass  31: suminf.    1.24661 (4) obj. -64.0391 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -59.4653 - took 0.01 seconds
Cbc0012I Integer solution of -59.46527 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 2.3333333
Cbc0013I At root node, 15 cuts changed objective from -105.20273 to -50.252807 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 147 row cuts average 2.6 elements, 23 column cuts (23 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 70 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0001I Search completed - best objective -59.46526999999998, took 66 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.09

