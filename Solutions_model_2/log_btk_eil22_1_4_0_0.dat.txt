Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-8) rows, 22 (-2) columns and 114 (-15) elements
Clp1000I sum of infeasibilities 1.38996e-05 - average 3.564e-07, 1 fixed columns
Coin0506I Presolve 33 (-6) rows, 19 (-3) columns and 96 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Coin0511I After Postsolve, objective 82.82068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Coin0511I After Postsolve, objective 82.82068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.82067977 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.141%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.22421
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.7943 iterations 20
Cbc0038I Solution found of 19.7943
Cbc0038I Relaxing continuous gives 19.7943
Cbc0038I Rounding solution of -10.9338 is better than previous of 19.7943

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -10.9338 to -41.054 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.2017
Cbc0038I Pass   2: suminf.    2.35058 (7) obj. -45.2017 iterations 6
Cbc0038I Pass   3: suminf.    0.84851 (4) obj. -45.2017 iterations 3
Cbc0038I Pass   4: suminf.    0.84851 (4) obj. -45.2017 iterations 1
Cbc0038I Pass   5: suminf.    0.73053 (3) obj. -45.2017 iterations 4
Cbc0038I Pass   6: suminf.    0.73053 (3) obj. -45.2017 iterations 2
Cbc0038I Pass   7: suminf.    0.69477 (3) obj. -45.2017 iterations 3
Cbc0038I Pass   8: suminf.    1.13163 (3) obj. -45.2017 iterations 4
Cbc0038I Pass   9: suminf.    0.79046 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  10: suminf.    0.69593 (3) obj. -45.2017 iterations 6
Cbc0038I Pass  11: suminf.    1.12662 (6) obj. -45.2017 iterations 8
Cbc0038I Pass  12: suminf.    0.89480 (5) obj. -45.2017 iterations 3
Cbc0038I Pass  13: suminf.    0.63654 (2) obj. -45.2017 iterations 6
Cbc0038I Pass  14: suminf.    0.15287 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  15: suminf.    0.37235 (3) obj. -45.2017 iterations 1
Cbc0038I Pass  16: suminf.    0.15287 (2) obj. -45.2017 iterations 3
Cbc0038I Pass  17: suminf.    0.77451 (3) obj. -45.2017 iterations 3
Cbc0038I Pass  18: suminf.    0.66966 (3) obj. -45.2017 iterations 2
Cbc0038I Pass  19: suminf.    0.96603 (4) obj. -45.2017 iterations 5
Cbc0038I Pass  20: suminf.    0.83321 (3) obj. -45.2017 iterations 1
Cbc0038I Pass  21: suminf.    0.97670 (3) obj. -45.2017 iterations 3
Cbc0038I Pass  22: suminf.    0.97670 (3) obj. -45.2017 iterations 0
Cbc0038I Pass  23: suminf.    0.55449 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  24: suminf.    0.15287 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  25: suminf.    0.63654 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  26: suminf.    1.93636 (5) obj. -45.2017 iterations 10
Cbc0038I Pass  27: suminf.    1.27326 (5) obj. -45.2017 iterations 3
Cbc0038I Pass  28: suminf.    0.86238 (3) obj. -45.2017 iterations 5
Cbc0038I Pass  29: suminf.    0.71789 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  30: suminf.    0.68246 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  31: suminf.    1.45546 (4) obj. -45.2017 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -41.054 - took 0.04 seconds
Cbc0012I Integer solution of -41.05397 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 12 added rows had average density of 19.083333
Cbc0013I At root node, 12 cuts changed objective from -82.530433 to -61.853576 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1077 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 940 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -41.05396999999999, took 2158 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 56 times (673 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 1, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-10) rows, 39 (-5) columns and 278 (-82) elements
Clp1000I sum of infeasibilities 3.54313e-11 - average 9.84202e-13, 5 fixed columns
Coin0506I Presolve 32 (-4) rows, 34 (-5) columns and 213 (-65) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 1.2797501 - largest nonzero change 1.6057391e-05 ( 0.001262127%) - largest zero change 1.8272045e-05
Clp0000I Optimal - objective value 84.825361
Clp0000I Optimal - objective value 84.825361
Coin0511I After Postsolve, objective 84.825361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.825361
Clp0000I Optimal - objective value 84.825361
Clp0000I Optimal - objective value 84.825361
Coin0511I After Postsolve, objective 84.825361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.82536125 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 39 columns (39 integer (39 of which binary)) and 284 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.017%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.96382
Cbc0038I Pass   1: suminf.    0.72141 (6) obj. -30.215 iterations 9
Cbc0038I Pass   2: suminf.    0.72141 (6) obj. -30.215 iterations 1
Cbc0038I Solution found of 1.14418
Cbc0038I Rounding solution of -29.0384 is better than previous of 1.14418

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 39 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.0116
Cbc0038I Pass   3: suminf.    1.10180 (14) obj. -33.0116 iterations 3
Cbc0038I Pass   4: suminf.    0.81428 (7) obj. -33.0116 iterations 1
Cbc0038I Pass   5: suminf.    0.00167 (1) obj. -33.0116 iterations 10
Cbc0038I Pass   6: suminf.    0.29038 (2) obj. -33.0116 iterations 2
Cbc0038I Pass   7: suminf.    1.49815 (10) obj. -33.0116 iterations 11
Cbc0038I Pass   8: suminf.    0.79357 (7) obj. -33.0116 iterations 4
Cbc0038I Pass   9: suminf.    0.58766 (4) obj. -33.0116 iterations 4
Cbc0038I Pass  10: suminf.    0.47288 (4) obj. -33.0116 iterations 2
Cbc0038I Pass  11: suminf.    0.60271 (4) obj. -33.0116 iterations 2
Cbc0038I Pass  12: suminf.    1.25579 (8) obj. -48.3242 iterations 10
Cbc0038I Pass  13: suminf.    1.25579 (8) obj. -48.3242 iterations 1
Cbc0038I Pass  14: suminf.    0.88334 (4) obj. -33.0116 iterations 9
Cbc0038I Pass  15: suminf.    0.50121 (3) obj. -35.2126 iterations 2
Cbc0038I Pass  16: suminf.    0.72132 (3) obj. -33.0116 iterations 4
Cbc0038I Pass  17: suminf.    0.95629 (6) obj. -33.0116 iterations 10
Cbc0038I Pass  18: suminf.    0.88636 (5) obj. -33.641 iterations 2
Cbc0038I Pass  19: suminf.    1.00160 (4) obj. -33.0116 iterations 5
Cbc0038I Pass  20: suminf.    1.00160 (4) obj. -33.0116 iterations 1
Cbc0038I Pass  21: suminf.    1.18267 (4) obj. -33.0116 iterations 3
Cbc0038I Pass  22: suminf.    1.18267 (4) obj. -33.0116 iterations 1
Cbc0038I Pass  23: suminf.    0.83424 (4) obj. -33.0116 iterations 4
Cbc0038I Pass  24: suminf.    0.83424 (4) obj. -33.0116 iterations 1
Cbc0038I Pass  25: suminf.    1.13351 (4) obj. -33.0116 iterations 2
Cbc0038I Pass  26: suminf.    1.13351 (4) obj. -33.0116 iterations 0
Cbc0038I Pass  27: suminf.    0.83424 (4) obj. -33.0116 iterations 2
Cbc0038I Pass  28: suminf.    1.32537 (6) obj. -33.0116 iterations 6
Cbc0038I Pass  29: suminf.    1.05292 (6) obj. -33.0116 iterations 3
Cbc0038I Pass  30: suminf.    1.07187 (5) obj. -33.0116 iterations 4
Cbc0038I Pass  31: suminf.    1.07187 (5) obj. -33.0116 iterations 1
Cbc0038I Pass  32: suminf.    0.83424 (4) obj. -33.0116 iterations 4
Cbc0038I Rounding solution of -32.976 is better than previous of -29.0384

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 39 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -32.976 to -36.4955 (0.02 seconds)
Cbc0038I Round again with cutoff of -42.9505
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.06675 (14) obj. -42.9505 iterations 0
Cbc0038I Pass  33: suminf.    2.06675 (14) obj. -42.9505 iterations 0
Cbc0038I Pass  34: suminf.    0.93725 (4) obj. -42.9505 iterations 19
Cbc0038I Pass  35: suminf.    0.92024 (4) obj. -43.1206 iterations 1
Cbc0038I Pass  36: suminf.    0.90135 (4) obj. -42.9505 iterations 5
Cbc0038I Pass  37: suminf.    0.90135 (4) obj. -42.9505 iterations 2
Cbc0038I Pass  38: suminf.    1.08929 (4) obj. -42.9505 iterations 4
Cbc0038I Pass  39: suminf.    1.08929 (4) obj. -42.9505 iterations 2
Cbc0038I Pass  40: suminf.    0.90135 (4) obj. -42.9505 iterations 3
Cbc0038I Pass  41: suminf.    1.55395 (6) obj. -42.9505 iterations 5
Cbc0038I Pass  42: suminf.    1.18691 (5) obj. -46.2539 iterations 1
Cbc0038I Pass  43: suminf.    0.90135 (4) obj. -42.9505 iterations 6
Cbc0038I Pass  44: suminf.    0.90135 (4) obj. -42.9505 iterations 2
Cbc0038I Pass  45: suminf.    1.08929 (4) obj. -42.9505 iterations 4
Cbc0038I Pass  46: suminf.    1.08929 (4) obj. -42.9505 iterations 2
Cbc0038I Pass  47: suminf.    0.90135 (4) obj. -42.9505 iterations 3
Cbc0038I Pass  48: suminf.    2.24902 (9) obj. -42.9505 iterations 13
Cbc0038I Pass  49: suminf.    2.24902 (9) obj. -42.9505 iterations 0
Cbc0038I Pass  50: suminf.    1.05889 (5) obj. -42.9505 iterations 8
Cbc0038I Pass  51: suminf.    1.00421 (6) obj. -42.9505 iterations 1
Cbc0038I Pass  52: suminf.    1.04856 (6) obj. -42.9505 iterations 6
Cbc0038I Pass  53: suminf.    1.01960 (5) obj. -42.9505 iterations 2
Cbc0038I Pass  54: suminf.    1.61476 (5) obj. -42.9505 iterations 2
Cbc0038I Pass  55: suminf.    1.61476 (5) obj. -42.9505 iterations 0
Cbc0038I Pass  56: suminf.    1.01960 (5) obj. -42.9505 iterations 2
Cbc0038I Pass  57: suminf.    2.47782 (11) obj. -42.9505 iterations 8
Cbc0038I Pass  58: suminf.    2.13627 (10) obj. -42.9505 iterations 5
Cbc0038I Pass  59: suminf.    1.70471 (8) obj. -42.9505 iterations 11
Cbc0038I Pass  60: suminf.    1.70471 (8) obj. -42.9505 iterations 2
Cbc0038I Pass  61: suminf.    1.68117 (7) obj. -42.9505 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 39 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -36.4955 to -41.054 (0.04 seconds)
Cbc0038I Round again with cutoff of -50.6964
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.28968 (14) obj. -50.6964 iterations 1
Cbc0038I Pass  62: suminf.    2.28968 (14) obj. -50.6964 iterations 0
Cbc0038I Pass  63: suminf.    1.41599 (6) obj. -50.6964 iterations 13
Cbc0038I Pass  64: suminf.    1.41599 (6) obj. -50.6964 iterations 0
Cbc0038I Pass  65: suminf.    1.73183 (7) obj. -50.6964 iterations 4
Cbc0038I Pass  66: suminf.    1.73183 (7) obj. -50.6964 iterations 1
Cbc0038I Pass  67: suminf.    1.41599 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  68: suminf.    2.28202 (9) obj. -50.6964 iterations 6
Cbc0038I Pass  69: suminf.    1.68462 (6) obj. -50.6964 iterations 8
Cbc0038I Pass  70: suminf.    1.54168 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  71: suminf.    1.68462 (6) obj. -50.6964 iterations 5
Cbc0038I Pass  72: suminf.    3.69522 (11) obj. -50.6964 iterations 9
Cbc0038I Pass  73: suminf.    2.56131 (9) obj. -50.6964 iterations 6
Cbc0038I Pass  74: suminf.    2.51819 (9) obj. -50.6964 iterations 2
Cbc0038I Pass  75: suminf.    2.18972 (7) obj. -50.6964 iterations 4
Cbc0038I Pass  76: suminf.    1.79692 (7) obj. -50.6964 iterations 1
Cbc0038I Pass  77: suminf.    1.88809 (7) obj. -50.6964 iterations 2
Cbc0038I Pass  78: suminf.    1.88411 (7) obj. -50.6964 iterations 2
Cbc0038I Pass  79: suminf.    2.10421 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  80: suminf.    1.88411 (7) obj. -50.6964 iterations 3
Cbc0038I Pass  81: suminf.    2.08848 (6) obj. -50.6964 iterations 5
Cbc0038I Pass  82: suminf.    1.57999 (7) obj. -50.6964 iterations 8
Cbc0038I Pass  83: suminf.    1.35997 (5) obj. -51.308 iterations 2
Cbc0038I Pass  84: suminf.    1.89097 (7) obj. -50.6964 iterations 7
Cbc0038I Pass  85: suminf.    1.41200 (6) obj. -50.6964 iterations 2
Cbc0038I Pass  86: suminf.    1.16955 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  87: suminf.    1.66244 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  88: suminf.    1.61342 (7) obj. -50.6964 iterations 3
Cbc0038I Pass  89: suminf.    1.49650 (7) obj. -50.6964 iterations 2
Cbc0038I Pass  90: suminf.    1.27266 (6) obj. -50.6964 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 39 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -41.054 - took 0.05 seconds
Cbc0012I Integer solution of -41.05397 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 36 rows 39 columns, reduced to 18 rows 23 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 12 added rows had average density of 3.6666667
Cbc0013I At root node, 22 cuts changed objective from -68.770122 to -40.140591 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 616 row cuts average 4.4 elements, 8 column cuts (8 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 143 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0001I Search completed - best objective -41.05396999999999, took 251 iterations and 0 nodes (0.23 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-8) rows, 22 (-2) columns and 114 (-15) elements
Clp1000I sum of infeasibilities 1.38996e-05 - average 3.564e-07, 1 fixed columns
Coin0506I Presolve 33 (-6) rows, 19 (-3) columns and 96 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Coin0511I After Postsolve, objective 82.82068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Coin0511I After Postsolve, objective 82.82068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.82067977 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.141%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.22421
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.7943 iterations 20
Cbc0038I Solution found of 19.7943
Cbc0038I Relaxing continuous gives 19.7943
Cbc0038I Rounding solution of -10.9338 is better than previous of 19.7943

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -10.9338 to -41.054 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.2017
Cbc0038I Pass   2: suminf.    2.35058 (7) obj. -45.2017 iterations 6
Cbc0038I Pass   3: suminf.    0.84851 (4) obj. -45.2017 iterations 3
Cbc0038I Pass   4: suminf.    0.84851 (4) obj. -45.2017 iterations 1
Cbc0038I Pass   5: suminf.    0.73053 (3) obj. -45.2017 iterations 4
Cbc0038I Pass   6: suminf.    0.73053 (3) obj. -45.2017 iterations 2
Cbc0038I Pass   7: suminf.    0.69477 (3) obj. -45.2017 iterations 3
Cbc0038I Pass   8: suminf.    1.13163 (3) obj. -45.2017 iterations 4
Cbc0038I Pass   9: suminf.    0.79046 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  10: suminf.    0.69593 (3) obj. -45.2017 iterations 6
Cbc0038I Pass  11: suminf.    1.12662 (6) obj. -45.2017 iterations 8
Cbc0038I Pass  12: suminf.    0.89480 (5) obj. -45.2017 iterations 3
Cbc0038I Pass  13: suminf.    0.63654 (2) obj. -45.2017 iterations 6
Cbc0038I Pass  14: suminf.    0.15287 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  15: suminf.    0.37235 (3) obj. -45.2017 iterations 1
Cbc0038I Pass  16: suminf.    0.15287 (2) obj. -45.2017 iterations 3
Cbc0038I Pass  17: suminf.    0.77451 (3) obj. -45.2017 iterations 3
Cbc0038I Pass  18: suminf.    0.66966 (3) obj. -45.2017 iterations 2
Cbc0038I Pass  19: suminf.    0.96603 (4) obj. -45.2017 iterations 5
Cbc0038I Pass  20: suminf.    0.83321 (3) obj. -45.2017 iterations 1
Cbc0038I Pass  21: suminf.    0.97670 (3) obj. -45.2017 iterations 3
Cbc0038I Pass  22: suminf.    0.97670 (3) obj. -45.2017 iterations 0
Cbc0038I Pass  23: suminf.    0.55449 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  24: suminf.    0.15287 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  25: suminf.    0.63654 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  26: suminf.    1.93636 (5) obj. -45.2017 iterations 10
Cbc0038I Pass  27: suminf.    1.27326 (5) obj. -45.2017 iterations 3
Cbc0038I Pass  28: suminf.    0.86238 (3) obj. -45.2017 iterations 5
Cbc0038I Pass  29: suminf.    0.71789 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  30: suminf.    0.68246 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  31: suminf.    1.45546 (4) obj. -45.2017 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -41.054 - took 0.02 seconds
Cbc0012I Integer solution of -41.05397 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 19.083333
Cbc0013I At root node, 12 cuts changed objective from -82.530433 to -61.853576 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1077 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 940 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -41.05396999999999, took 2158 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 56 times (673 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 1, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 39 (-6) columns and 278 (-83) elements
Clp1000I sum of infeasibilities 3.54313e-11 - average 9.84202e-13, 5 fixed columns
Coin0506I Presolve 32 (-4) rows, 34 (-5) columns and 213 (-65) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 1.2797501 - largest nonzero change 1.6057391e-05 ( 0.001262127%) - largest zero change 1.8272045e-05
Clp0000I Optimal - objective value 84.825361
Clp0000I Optimal - objective value 84.825361
Coin0511I After Postsolve, objective 84.825361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.825361
Clp0000I Optimal - objective value 84.825361
Clp0000I Optimal - objective value 84.825361
Coin0511I After Postsolve, objective 84.825361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.82536125 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 39 columns (39 integer (39 of which binary)) and 284 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.017%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.96382
Cbc0038I Pass   1: suminf.    0.72141 (6) obj. -30.215 iterations 9
Cbc0038I Pass   2: suminf.    0.72141 (6) obj. -30.215 iterations 1
Cbc0038I Solution found of 1.14418
Cbc0038I Rounding solution of -29.0384 is better than previous of 1.14418

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 39 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.0116
Cbc0038I Pass   3: suminf.    1.10180 (14) obj. -33.0116 iterations 3
Cbc0038I Pass   4: suminf.    0.81428 (7) obj. -33.0116 iterations 1
Cbc0038I Pass   5: suminf.    0.00167 (1) obj. -33.0116 iterations 10
Cbc0038I Pass   6: suminf.    0.29038 (2) obj. -33.0116 iterations 2
Cbc0038I Pass   7: suminf.    1.49815 (10) obj. -33.0116 iterations 11
Cbc0038I Pass   8: suminf.    0.79357 (7) obj. -33.0116 iterations 4
Cbc0038I Pass   9: suminf.    0.58766 (4) obj. -33.0116 iterations 4
Cbc0038I Pass  10: suminf.    0.47288 (4) obj. -33.0116 iterations 2
Cbc0038I Pass  11: suminf.    0.60271 (4) obj. -33.0116 iterations 2
Cbc0038I Pass  12: suminf.    1.25579 (8) obj. -48.3242 iterations 10
Cbc0038I Pass  13: suminf.    1.25579 (8) obj. -48.3242 iterations 1
Cbc0038I Pass  14: suminf.    0.88334 (4) obj. -33.0116 iterations 9
Cbc0038I Pass  15: suminf.    0.50121 (3) obj. -35.2126 iterations 2
Cbc0038I Pass  16: suminf.    0.72132 (3) obj. -33.0116 iterations 4
Cbc0038I Pass  17: suminf.    0.95629 (6) obj. -33.0116 iterations 10
Cbc0038I Pass  18: suminf.    0.88636 (5) obj. -33.641 iterations 2
Cbc0038I Pass  19: suminf.    1.00160 (4) obj. -33.0116 iterations 5
Cbc0038I Pass  20: suminf.    1.00160 (4) obj. -33.0116 iterations 1
Cbc0038I Pass  21: suminf.    1.18267 (4) obj. -33.0116 iterations 3
Cbc0038I Pass  22: suminf.    1.18267 (4) obj. -33.0116 iterations 1
Cbc0038I Pass  23: suminf.    0.83424 (4) obj. -33.0116 iterations 4
Cbc0038I Pass  24: suminf.    0.83424 (4) obj. -33.0116 iterations 1
Cbc0038I Pass  25: suminf.    1.13351 (4) obj. -33.0116 iterations 2
Cbc0038I Pass  26: suminf.    1.13351 (4) obj. -33.0116 iterations 0
Cbc0038I Pass  27: suminf.    0.83424 (4) obj. -33.0116 iterations 2
Cbc0038I Pass  28: suminf.    1.32537 (6) obj. -33.0116 iterations 6
Cbc0038I Pass  29: suminf.    1.05292 (6) obj. -33.0116 iterations 3
Cbc0038I Pass  30: suminf.    1.07187 (5) obj. -33.0116 iterations 4
Cbc0038I Pass  31: suminf.    1.07187 (5) obj. -33.0116 iterations 1
Cbc0038I Pass  32: suminf.    0.83424 (4) obj. -33.0116 iterations 4
Cbc0038I Rounding solution of -32.976 is better than previous of -29.0384

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 39 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -32.976 to -36.4955 (0.02 seconds)
Cbc0038I Round again with cutoff of -42.9505
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.06675 (14) obj. -42.9505 iterations 0
Cbc0038I Pass  33: suminf.    2.06675 (14) obj. -42.9505 iterations 0
Cbc0038I Pass  34: suminf.    0.93725 (4) obj. -42.9505 iterations 19
Cbc0038I Pass  35: suminf.    0.92024 (4) obj. -43.1206 iterations 1
Cbc0038I Pass  36: suminf.    0.90135 (4) obj. -42.9505 iterations 5
Cbc0038I Pass  37: suminf.    0.90135 (4) obj. -42.9505 iterations 2
Cbc0038I Pass  38: suminf.    1.08929 (4) obj. -42.9505 iterations 4
Cbc0038I Pass  39: suminf.    1.08929 (4) obj. -42.9505 iterations 2
Cbc0038I Pass  40: suminf.    0.90135 (4) obj. -42.9505 iterations 3
Cbc0038I Pass  41: suminf.    1.55395 (6) obj. -42.9505 iterations 5
Cbc0038I Pass  42: suminf.    1.18691 (5) obj. -46.2539 iterations 1
Cbc0038I Pass  43: suminf.    0.90135 (4) obj. -42.9505 iterations 6
Cbc0038I Pass  44: suminf.    0.90135 (4) obj. -42.9505 iterations 2
Cbc0038I Pass  45: suminf.    1.08929 (4) obj. -42.9505 iterations 4
Cbc0038I Pass  46: suminf.    1.08929 (4) obj. -42.9505 iterations 2
Cbc0038I Pass  47: suminf.    0.90135 (4) obj. -42.9505 iterations 3
Cbc0038I Pass  48: suminf.    2.24902 (9) obj. -42.9505 iterations 13
Cbc0038I Pass  49: suminf.    2.24902 (9) obj. -42.9505 iterations 0
Cbc0038I Pass  50: suminf.    1.05889 (5) obj. -42.9505 iterations 8
Cbc0038I Pass  51: suminf.    1.00421 (6) obj. -42.9505 iterations 1
Cbc0038I Pass  52: suminf.    1.04856 (6) obj. -42.9505 iterations 6
Cbc0038I Pass  53: suminf.    1.01960 (5) obj. -42.9505 iterations 2
Cbc0038I Pass  54: suminf.    1.61476 (5) obj. -42.9505 iterations 2
Cbc0038I Pass  55: suminf.    1.61476 (5) obj. -42.9505 iterations 0
Cbc0038I Pass  56: suminf.    1.01960 (5) obj. -42.9505 iterations 2
Cbc0038I Pass  57: suminf.    2.47782 (11) obj. -42.9505 iterations 8
Cbc0038I Pass  58: suminf.    2.13627 (10) obj. -42.9505 iterations 5
Cbc0038I Pass  59: suminf.    1.70471 (8) obj. -42.9505 iterations 11
Cbc0038I Pass  60: suminf.    1.70471 (8) obj. -42.9505 iterations 2
Cbc0038I Pass  61: suminf.    1.68117 (7) obj. -42.9505 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 39 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -36.4955 to -41.054 (0.04 seconds)
Cbc0038I Round again with cutoff of -50.6964
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.28968 (14) obj. -50.6964 iterations 1
Cbc0038I Pass  62: suminf.    2.28968 (14) obj. -50.6964 iterations 0
Cbc0038I Pass  63: suminf.    1.41599 (6) obj. -50.6964 iterations 13
Cbc0038I Pass  64: suminf.    1.41599 (6) obj. -50.6964 iterations 0
Cbc0038I Pass  65: suminf.    1.73183 (7) obj. -50.6964 iterations 4
Cbc0038I Pass  66: suminf.    1.73183 (7) obj. -50.6964 iterations 1
Cbc0038I Pass  67: suminf.    1.41599 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  68: suminf.    2.28202 (9) obj. -50.6964 iterations 6
Cbc0038I Pass  69: suminf.    1.68462 (6) obj. -50.6964 iterations 8
Cbc0038I Pass  70: suminf.    1.54168 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  71: suminf.    1.68462 (6) obj. -50.6964 iterations 5
Cbc0038I Pass  72: suminf.    3.69522 (11) obj. -50.6964 iterations 9
Cbc0038I Pass  73: suminf.    2.56131 (9) obj. -50.6964 iterations 6
Cbc0038I Pass  74: suminf.    2.51819 (9) obj. -50.6964 iterations 2
Cbc0038I Pass  75: suminf.    2.18972 (7) obj. -50.6964 iterations 4
Cbc0038I Pass  76: suminf.    1.79692 (7) obj. -50.6964 iterations 1
Cbc0038I Pass  77: suminf.    1.88809 (7) obj. -50.6964 iterations 2
Cbc0038I Pass  78: suminf.    1.88411 (7) obj. -50.6964 iterations 2
Cbc0038I Pass  79: suminf.    2.10421 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  80: suminf.    1.88411 (7) obj. -50.6964 iterations 3
Cbc0038I Pass  81: suminf.    2.08848 (6) obj. -50.6964 iterations 5
Cbc0038I Pass  82: suminf.    1.57999 (7) obj. -50.6964 iterations 8
Cbc0038I Pass  83: suminf.    1.35997 (5) obj. -51.308 iterations 2
Cbc0038I Pass  84: suminf.    1.89097 (7) obj. -50.6964 iterations 7
Cbc0038I Pass  85: suminf.    1.41200 (6) obj. -50.6964 iterations 2
Cbc0038I Pass  86: suminf.    1.16955 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  87: suminf.    1.66244 (6) obj. -50.6964 iterations 3
Cbc0038I Pass  88: suminf.    1.61342 (7) obj. -50.6964 iterations 3
Cbc0038I Pass  89: suminf.    1.49650 (7) obj. -50.6964 iterations 2
Cbc0038I Pass  90: suminf.    1.27266 (6) obj. -50.6964 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 39 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -41.054 - took 0.05 seconds
Cbc0012I Integer solution of -41.05397 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 36 rows 39 columns, reduced to 18 rows 23 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 12 added rows had average density of 3.6666667
Cbc0013I At root node, 22 cuts changed objective from -68.770122 to -40.140591 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 616 row cuts average 4.4 elements, 8 column cuts (8 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 143 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0001I Search completed - best objective -41.05396999999999, took 251 iterations and 0 nodes (0.22 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.23

