Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 100 (-3) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 4.12969e-05 - average 2.29427e-07, 16 fixed columns
Coin0506I Presolve 150 (-30) rows, 84 (-16) columns and 460 (-92) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.594291 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Coin0511I After Postsolve, objective 38.37862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Coin0511I After Postsolve, objective 38.37862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.37861975 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 180 rows, 100 columns (99 integer (99 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.945%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.75943
Cbc0038I Solution found of 3.52775
Cbc0038I Relaxing continuous gives -3.98974
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 81 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -3.98974 to -8.4705 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.4614
Cbc0038I Pass   1: suminf.    1.38637 (32) obj. -11.4614 iterations 61
Cbc0038I Pass   2: suminf.    0.82953 (3) obj. -11.4614 iterations 37
Cbc0038I Pass   3: suminf.    0.57738 (2) obj. -11.4614 iterations 2
Cbc0038I Pass   4: suminf.    0.61616 (4) obj. -11.4614 iterations 7
Cbc0038I Pass   5: suminf.    0.92480 (4) obj. -11.4614 iterations 9
Cbc0038I Pass   6: suminf.    0.60294 (2) obj. -11.4614 iterations 5
Cbc0038I Pass   7: suminf.    0.92053 (3) obj. -11.4614 iterations 5
Cbc0038I Pass   8: suminf.    0.92053 (3) obj. -11.4614 iterations 0
Cbc0038I Pass   9: suminf.    1.34044 (8) obj. -11.4614 iterations 19
Cbc0038I Pass  10: suminf.    0.57637 (6) obj. -11.4614 iterations 11
Cbc0038I Pass  11: suminf.    1.81699 (7) obj. -11.4614 iterations 33
Cbc0038I Pass  12: suminf.    1.81699 (7) obj. -11.4614 iterations 0
Cbc0038I Pass  13: suminf.    2.30064 (6) obj. -11.4614 iterations 8
Cbc0038I Pass  14: suminf.    0.83525 (4) obj. -11.4614 iterations 3
Cbc0038I Pass  15: suminf.    1.31482 (5) obj. -11.4614 iterations 9
Cbc0038I Pass  16: suminf.    1.12519 (4) obj. -11.4614 iterations 2
Cbc0038I Pass  17: suminf.    1.16522 (4) obj. -11.4614 iterations 7
Cbc0038I Pass  18: suminf.    0.70303 (4) obj. -11.4614 iterations 5
Cbc0038I Pass  19: suminf.    1.20590 (4) obj. -11.4614 iterations 7
Cbc0038I Pass  20: suminf.    2.85237 (10) obj. -11.4614 iterations 35
Cbc0038I Pass  21: suminf.    1.79225 (6) obj. -11.4614 iterations 14
Cbc0038I Pass  22: suminf.    1.71321 (6) obj. -11.4614 iterations 14
Cbc0038I Pass  23: suminf.    1.46836 (7) obj. -11.4614 iterations 10
Cbc0038I Pass  24: suminf.    2.02916 (6) obj. -11.4614 iterations 8
Cbc0038I Pass  25: suminf.    1.59389 (5) obj. -11.4614 iterations 6
Cbc0038I Pass  26: suminf.    1.59389 (5) obj. -11.4614 iterations 0
Cbc0038I Pass  27: suminf.    1.70682 (5) obj. -11.4614 iterations 7
Cbc0038I Pass  28: suminf.    1.60039 (5) obj. -11.4614 iterations 3
Cbc0038I Pass  29: suminf.    1.90909 (7) obj. -11.4614 iterations 11
Cbc0038I Pass  30: suminf.    1.59389 (5) obj. -11.4614 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 101 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -8.4705 to -10.5884 (0.11 seconds)
Cbc0038I Round again with cutoff of -16.8448
Cbc0038I Pass  30: suminf.    2.38526 (32) obj. -16.8448 iterations 0
Cbc0038I Pass  31: suminf.    2.92907 (9) obj. -16.8448 iterations 35
Cbc0038I Pass  32: suminf.    1.51362 (7) obj. -16.8448 iterations 10
Cbc0038I Pass  33: suminf.    1.68158 (4) obj. -16.8448 iterations 9
Cbc0038I Pass  34: suminf.    1.41384 (5) obj. -16.8448 iterations 10
Cbc0038I Pass  35: suminf.    1.31674 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  36: suminf.    1.27113 (4) obj. -16.8448 iterations 3
Cbc0038I Pass  37: suminf.    1.41384 (5) obj. -16.8448 iterations 3
Cbc0038I Pass  38: suminf.    1.39554 (5) obj. -16.8448 iterations 16
Cbc0038I Pass  39: suminf.    1.10474 (5) obj. -16.8448 iterations 9
Cbc0038I Pass  40: suminf.    1.72853 (6) obj. -16.8448 iterations 14
Cbc0038I Pass  41: suminf.    1.72853 (6) obj. -16.8448 iterations 0
Cbc0038I Pass  42: suminf.    1.97648 (6) obj. -16.8448 iterations 7
Cbc0038I Pass  43: suminf.    1.30302 (5) obj. -16.8448 iterations 10
Cbc0038I Pass  44: suminf.    1.30179 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  45: suminf.    1.68809 (5) obj. -16.8448 iterations 13
Cbc0038I Pass  46: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  47: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  48: suminf.    1.51785 (5) obj. -16.8448 iterations 7
Cbc0038I Pass  49: suminf.    1.21262 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  50: suminf.    1.19054 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  51: suminf.    1.68809 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  52: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  53: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  54: suminf.    1.51785 (5) obj. -16.8448 iterations 7
Cbc0038I Pass  55: suminf.    1.21262 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  56: suminf.    1.19054 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  57: suminf.    1.68809 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  58: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  59: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 96 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -10.5884 - took 0.15 seconds
Cbc0012I Integer solution of -10.58837 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 180 rows 100 columns, reduced to 82 rows 48 columns
Cbc0012I Integer solution of -10.91507 found by RINS after 0 iterations and 0 nodes (0.22 seconds)
Cbc0031I 32 added rows had average density of 67.3125
Cbc0013I At root node, 32 cuts changed objective from -38.37862 to -32.00232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14338 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1892 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 99.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.91507 best solution, best possible -32.00232 (1.44 seconds)
Cbc0038I Full problem 180 rows 100 columns, reduced to 14 rows 12 columns
Cbc0001I Search completed - best objective -10.91507, took 12007 iterations and 82 nodes (1.80 seconds)
Cbc0032I Strong branching done 964 times (14334 iterations), fathomed 5 nodes and fixed 69 variables
Cbc0035I Maximum depth 14, 283 variables fixed on reduced cost
Total time (CPU seconds):       1.70   (Wallclock seconds):       1.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-80) rows, 142 (-60) columns and 2526 (-3127) elements
Clp1000I sum of infeasibilities 7.64556e-07 - average 6.16577e-09, 53 fixed columns
Coin0506I Presolve 76 (-48) rows, 89 (-53) columns and 1080 (-1446) elements
Clp0006I 0  Obj 82.98167 Dual inf 6.8327384 (89)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.1908012 - largest nonzero change 2.2172383e-05 ( 0.0012247315%) - largest zero change 2.9720742e-05
Clp0000I Optimal - objective value 90.888015
Clp0000I Optimal - objective value 90.888015
Coin0511I After Postsolve, objective 90.888015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 90.888015
Clp0000I Optimal - objective value 90.888015
Clp0000I Optimal - objective value 90.888015
Clp0000I Optimal - objective value 90.888015
Coin0511I After Postsolve, objective 90.888015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.88801494 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 142 columns (142 integer (142 of which binary)) and 2539 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.836%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 18.0563
Cbc0038I Pass   1: suminf.    0.40970 (13) obj. -4.29672 iterations 50
Cbc0038I Pass   2: suminf.    0.40970 (13) obj. -4.29672 iterations 0
Cbc0038I Solution found of 19.7465
Cbc0038I Rounding solution of -3.10679 is better than previous of 19.7465

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 142 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -3.10679 to -26.2534 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.607
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.34732 (30) obj. -29.607 iterations 32
Cbc0038I Pass   4: suminf.    5.20886 (31) obj. -29.607 iterations 5
Cbc0038I Pass   5: suminf.    3.75171 (13) obj. -29.607 iterations 34
Cbc0038I Pass   6: suminf.    3.42062 (11) obj. -29.607 iterations 3
Cbc0038I Pass   7: suminf.    1.55638 (6) obj. -29.607 iterations 13
Cbc0038I Pass   8: suminf.    1.20280 (6) obj. -29.607 iterations 3
Cbc0038I Pass   9: suminf.    0.30487 (1) obj. -29.607 iterations 9
Cbc0038I Pass  10: suminf.    0.30487 (1) obj. -29.607 iterations 4
Cbc0038I Pass  11: suminf.    0.48000 (1) obj. -31.9734 iterations 3
Cbc0038I Pass  12: suminf.    7.15225 (26) obj. -29.607 iterations 29
Cbc0038I Pass  13: suminf.    5.75851 (20) obj. -29.607 iterations 10
Cbc0038I Pass  14: suminf.    7.74782 (25) obj. -29.607 iterations 16
Cbc0038I Pass  15: suminf.    7.74782 (25) obj. -29.607 iterations 1
Cbc0038I Pass  16: suminf.    3.35232 (14) obj. -29.607 iterations 13
Cbc0038I Pass  17: suminf.    2.78473 (9) obj. -29.607 iterations 3
Cbc0038I Pass  18: suminf.    1.13185 (3) obj. -29.607 iterations 9
Cbc0038I Pass  19: suminf.    1.13185 (3) obj. -29.607 iterations 1
Cbc0038I Pass  20: suminf.    0.89639 (2) obj. -29.607 iterations 14
Cbc0038I Pass  21: suminf.    0.77206 (2) obj. -29.607 iterations 12
Cbc0038I Pass  22: suminf.    0.79989 (2) obj. -29.607 iterations 9
Cbc0038I Pass  23: suminf.    0.77206 (2) obj. -29.607 iterations 10
Cbc0038I Pass  24: suminf.    5.15174 (18) obj. -29.607 iterations 28
Cbc0038I Pass  25: suminf.    3.32557 (8) obj. -29.607 iterations 11
Cbc0038I Pass  26: suminf.    0.78473 (3) obj. -29.607 iterations 13
Cbc0038I Pass  27: suminf.    0.78473 (3) obj. -29.607 iterations 0
Cbc0038I Pass  28: suminf.    1.09454 (3) obj. -29.607 iterations 12
Cbc0038I Pass  29: suminf.    0.94166 (3) obj. -29.607 iterations 2
Cbc0038I Pass  30: suminf.    0.94166 (3) obj. -29.607 iterations 0
Cbc0038I Pass  31: suminf.    0.78473 (3) obj. -29.607 iterations 9
Cbc0038I Pass  32: suminf.    0.78473 (3) obj. -29.607 iterations 4
Cbc0038I Rounding solution of -28.6014 is better than previous of -26.2534

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 142 columns, reduced to 57 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -35.6432
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    7.46920 (30) obj. -35.6432 iterations 0
Cbc0038I Pass  33: suminf.    7.30472 (31) obj. -35.6432 iterations 5
Cbc0038I Pass  34: suminf.    2.40082 (9) obj. -35.6432 iterations 37
Cbc0038I Pass  35: suminf.    1.76654 (6) obj. -35.6432 iterations 14
Cbc0038I Pass  36: suminf.    1.09498 (3) obj. -35.6432 iterations 14
Cbc0038I Pass  37: suminf.    1.05287 (4) obj. -35.6432 iterations 11
Cbc0038I Pass  38: suminf.    3.48666 (10) obj. -35.6432 iterations 29
Cbc0038I Pass  39: suminf.    2.36306 (6) obj. -35.6432 iterations 33
Cbc0038I Pass  40: suminf.    2.19853 (5) obj. -35.6432 iterations 1
Cbc0038I Pass  41: suminf.    1.55613 (5) obj. -35.6432 iterations 16
Cbc0038I Pass  42: suminf.    1.55613 (5) obj. -35.6432 iterations 3
Cbc0038I Pass  43: suminf.    1.68186 (5) obj. -35.6432 iterations 20
Cbc0038I Pass  44: suminf.    1.55613 (5) obj. -35.6432 iterations 7
Cbc0038I Pass  45: suminf.    4.59413 (15) obj. -35.6432 iterations 19
Cbc0038I Pass  46: suminf.    4.59413 (15) obj. -35.6432 iterations 3
Cbc0038I Pass  47: suminf.    0.70969 (3) obj. -35.6432 iterations 18
Cbc0038I Pass  48: suminf.    0.70969 (3) obj. -35.6432 iterations 0
Cbc0038I Pass  49: suminf.    1.23959 (3) obj. -35.6432 iterations 19
Cbc0038I Pass  50: suminf.    1.23959 (3) obj. -35.6432 iterations 0
Cbc0038I Pass  51: suminf.    0.99323 (2) obj. -35.6432 iterations 12
Cbc0038I Pass  52: suminf.    0.98227 (6) obj. -35.6432 iterations 1
Cbc0038I Pass  53: suminf.    0.97379 (2) obj. -35.6432 iterations 8
Cbc0038I Pass  54: suminf.    0.97379 (2) obj. -35.6432 iterations 3
Cbc0038I Pass  55: suminf.    2.47671 (10) obj. -35.6432 iterations 17
Cbc0038I Pass  56: suminf.    2.47671 (10) obj. -35.6432 iterations 0
Cbc0038I Pass  57: suminf.    0.70969 (3) obj. -35.6432 iterations 13
Cbc0038I Pass  58: suminf.    0.70969 (3) obj. -35.6432 iterations 0
Cbc0038I Pass  59: suminf.    1.23959 (3) obj. -35.6432 iterations 16
Cbc0038I Pass  60: suminf.    1.23959 (3) obj. -35.6432 iterations 0
Cbc0038I Pass  61: suminf.    0.99323 (2) obj. -35.6432 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 142 columns, reduced to 35 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -28.6014 - took 0.05 seconds
Cbc0012I Integer solution of -28.60139 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 53 added rows had average density of 44.169811
Cbc0013I At root node, 53 cuts changed objective from -59.788151 to -30.9521 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 745 row cuts average 3.7 elements, 15 column cuts (15 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 56.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 26 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 282 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 400 row cuts average 78.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 43.7 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.60139 best solution, best possible -30.9521 (0.83 seconds)
Cbc0012I Integer solution of -29.62881 found by DiveCoefficient after 383 iterations and 1 nodes (0.84 seconds)
Cbc0001I Search completed - best objective -29.62881, took 537 iterations and 2 nodes (0.85 seconds)
Cbc0032I Strong branching done 130 times (2492 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.86

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 100 (-3) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 4.12969e-05 - average 2.29427e-07, 16 fixed columns
Coin0506I Presolve 150 (-30) rows, 84 (-16) columns and 460 (-92) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.594291 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Coin0511I After Postsolve, objective 38.37862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Coin0511I After Postsolve, objective 38.37862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.37861975 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 180 rows, 100 columns (99 integer (99 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.945%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.75943
Cbc0038I Solution found of 3.52775
Cbc0038I Relaxing continuous gives -3.98974
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 81 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -3.98974 to -8.4705 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.4614
Cbc0038I Pass   1: suminf.    1.38637 (32) obj. -11.4614 iterations 61
Cbc0038I Pass   2: suminf.    0.82953 (3) obj. -11.4614 iterations 37
Cbc0038I Pass   3: suminf.    0.57738 (2) obj. -11.4614 iterations 2
Cbc0038I Pass   4: suminf.    0.61616 (4) obj. -11.4614 iterations 7
Cbc0038I Pass   5: suminf.    0.92480 (4) obj. -11.4614 iterations 9
Cbc0038I Pass   6: suminf.    0.60294 (2) obj. -11.4614 iterations 5
Cbc0038I Pass   7: suminf.    0.92053 (3) obj. -11.4614 iterations 5
Cbc0038I Pass   8: suminf.    0.92053 (3) obj. -11.4614 iterations 0
Cbc0038I Pass   9: suminf.    1.34044 (8) obj. -11.4614 iterations 19
Cbc0038I Pass  10: suminf.    0.57637 (6) obj. -11.4614 iterations 11
Cbc0038I Pass  11: suminf.    1.81699 (7) obj. -11.4614 iterations 33
Cbc0038I Pass  12: suminf.    1.81699 (7) obj. -11.4614 iterations 0
Cbc0038I Pass  13: suminf.    2.30064 (6) obj. -11.4614 iterations 8
Cbc0038I Pass  14: suminf.    0.83525 (4) obj. -11.4614 iterations 3
Cbc0038I Pass  15: suminf.    1.31482 (5) obj. -11.4614 iterations 9
Cbc0038I Pass  16: suminf.    1.12519 (4) obj. -11.4614 iterations 2
Cbc0038I Pass  17: suminf.    1.16522 (4) obj. -11.4614 iterations 7
Cbc0038I Pass  18: suminf.    0.70303 (4) obj. -11.4614 iterations 5
Cbc0038I Pass  19: suminf.    1.20590 (4) obj. -11.4614 iterations 7
Cbc0038I Pass  20: suminf.    2.85237 (10) obj. -11.4614 iterations 35
Cbc0038I Pass  21: suminf.    1.79225 (6) obj. -11.4614 iterations 14
Cbc0038I Pass  22: suminf.    1.71321 (6) obj. -11.4614 iterations 14
Cbc0038I Pass  23: suminf.    1.46836 (7) obj. -11.4614 iterations 10
Cbc0038I Pass  24: suminf.    2.02916 (6) obj. -11.4614 iterations 8
Cbc0038I Pass  25: suminf.    1.59389 (5) obj. -11.4614 iterations 6
Cbc0038I Pass  26: suminf.    1.59389 (5) obj. -11.4614 iterations 0
Cbc0038I Pass  27: suminf.    1.70682 (5) obj. -11.4614 iterations 7
Cbc0038I Pass  28: suminf.    1.60039 (5) obj. -11.4614 iterations 3
Cbc0038I Pass  29: suminf.    1.90909 (7) obj. -11.4614 iterations 11
Cbc0038I Pass  30: suminf.    1.59389 (5) obj. -11.4614 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 101 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -8.4705 to -10.5884 (0.12 seconds)
Cbc0038I Round again with cutoff of -16.8448
Cbc0038I Pass  30: suminf.    2.38526 (32) obj. -16.8448 iterations 0
Cbc0038I Pass  31: suminf.    2.92907 (9) obj. -16.8448 iterations 35
Cbc0038I Pass  32: suminf.    1.51362 (7) obj. -16.8448 iterations 10
Cbc0038I Pass  33: suminf.    1.68158 (4) obj. -16.8448 iterations 9
Cbc0038I Pass  34: suminf.    1.41384 (5) obj. -16.8448 iterations 10
Cbc0038I Pass  35: suminf.    1.31674 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  36: suminf.    1.27113 (4) obj. -16.8448 iterations 3
Cbc0038I Pass  37: suminf.    1.41384 (5) obj. -16.8448 iterations 3
Cbc0038I Pass  38: suminf.    1.39554 (5) obj. -16.8448 iterations 16
Cbc0038I Pass  39: suminf.    1.10474 (5) obj. -16.8448 iterations 9
Cbc0038I Pass  40: suminf.    1.72853 (6) obj. -16.8448 iterations 14
Cbc0038I Pass  41: suminf.    1.72853 (6) obj. -16.8448 iterations 0
Cbc0038I Pass  42: suminf.    1.97648 (6) obj. -16.8448 iterations 7
Cbc0038I Pass  43: suminf.    1.30302 (5) obj. -16.8448 iterations 10
Cbc0038I Pass  44: suminf.    1.30179 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  45: suminf.    1.68809 (5) obj. -16.8448 iterations 13
Cbc0038I Pass  46: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  47: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  48: suminf.    1.51785 (5) obj. -16.8448 iterations 7
Cbc0038I Pass  49: suminf.    1.21262 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  50: suminf.    1.19054 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  51: suminf.    1.68809 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  52: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  53: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  54: suminf.    1.51785 (5) obj. -16.8448 iterations 7
Cbc0038I Pass  55: suminf.    1.21262 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  56: suminf.    1.19054 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  57: suminf.    1.68809 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  58: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  59: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 96 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -10.5884 - took 0.15 seconds
Cbc0012I Integer solution of -10.58837 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 180 rows 100 columns, reduced to 82 rows 48 columns
Cbc0012I Integer solution of -10.91507 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 32 added rows had average density of 67.3125
Cbc0013I At root node, 32 cuts changed objective from -38.37862 to -32.00232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14338 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1892 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 99.7 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.91507 best solution, best possible -32.00232 (1.48 seconds)
Cbc0038I Full problem 180 rows 100 columns, reduced to 14 rows 12 columns
Cbc0001I Search completed - best objective -10.91507, took 12007 iterations and 82 nodes (1.86 seconds)
Cbc0032I Strong branching done 964 times (14334 iterations), fathomed 5 nodes and fixed 69 variables
Cbc0035I Maximum depth 14, 283 variables fixed on reduced cost
Total time (CPU seconds):       1.79   (Wallclock seconds):       1.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-82) rows, 141 (-62) columns and 2482 (-3172) elements
Clp1000I sum of infeasibilities 1.56231e-07 - average 1.27017e-09, 37 fixed columns
Coin0506I Presolve 92 (-31) rows, 104 (-37) columns and 1499 (-983) elements
Clp0006I 0  Obj 41.590107 Dual inf 7.8928968 (104)
Clp0029I End of values pass after 104 iterations
Clp0014I Perturbing problem by 0.001% of 1.6016574 - largest nonzero change 1.2031706e-05 ( 0.00089285843%) - largest zero change 2.9815173e-05
Clp0000I Optimal - objective value 51.75115
Clp0000I Optimal - objective value 51.75115
Coin0511I After Postsolve, objective 51.75115, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.75115
Clp0000I Optimal - objective value 51.75115
Clp0000I Optimal - objective value 51.75115
Clp0000I Optimal - objective value 51.75115
Coin0511I After Postsolve, objective 51.75115, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.75115032 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 141 columns (141 integer (141 of which binary)) and 2499 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.809%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.29973
Cbc0038I Pass   1: suminf.    1.78683 (28) obj. -35.9542 iterations 24
Cbc0038I Pass   2: suminf.    1.78683 (28) obj. -35.9542 iterations 0
Cbc0038I Pass   3: suminf.    0.03448 (1) obj. 5.98327 iterations 27
Cbc0038I Solution found of 6.94879
Cbc0038I Rounding solution of 1.09545 is better than previous of 6.94879

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -3.10463
Cbc0038I Pass   4: suminf.    1.78683 (28) obj. -35.9542 iterations 0
Cbc0038I Pass   5: suminf.    1.78683 (28) obj. -35.9542 iterations 0
Cbc0038I Pass   6: suminf.    0.46642 (4) obj. -3.10463 iterations 25
Cbc0038I Pass   7: suminf.    0.19921 (4) obj. -6.04392 iterations 1
Cbc0038I Pass   8: suminf.    0.08605 (1) obj. -3.10463 iterations 4
Cbc0038I Pass   9: suminf.    0.08081 (1) obj. -3.16232 iterations 1
Cbc0038I Pass  10: suminf.    1.46677 (13) obj. -3.10463 iterations 36
Cbc0038I Pass  11: suminf.    1.19299 (12) obj. -3.95298 iterations 8
Cbc0038I Pass  12: suminf.    1.03910 (7) obj. -3.10463 iterations 23
Cbc0038I Pass  13: suminf.    0.69415 (5) obj. -3.66365 iterations 8
Cbc0038I Pass  14: suminf.    0.62610 (5) obj. -3.10463 iterations 2
Cbc0038I Pass  15: suminf.    1.38841 (5) obj. -3.10463 iterations 10
Cbc0038I Pass  16: suminf.    0.38739 (3) obj. -4.55256 iterations 3
Cbc0038I Pass  17: suminf.    0.71681 (5) obj. -3.10463 iterations 9
Cbc0038I Pass  18: suminf.    0.71665 (4) obj. -3.10463 iterations 8
Cbc0038I Pass  19: suminf.    0.58890 (6) obj. -3.10463 iterations 6
Cbc0038I Pass  20: suminf.    0.58890 (6) obj. -3.10463 iterations 0
Cbc0038I Pass  21: suminf.    0.66046 (4) obj. -3.10463 iterations 7
Cbc0038I Pass  22: suminf.    2.55696 (16) obj. -3.10463 iterations 20
Cbc0038I Pass  23: suminf.    0.70383 (9) obj. -3.10463 iterations 12
Cbc0038I Pass  24: suminf.    0.70383 (9) obj. -3.10463 iterations 0
Cbc0038I Pass  25: suminf.    0.88481 (6) obj. -3.10463 iterations 13
Cbc0038I Pass  26: suminf.    0.41470 (6) obj. -3.10463 iterations 2
Cbc0038I Pass  27: suminf.    1.17040 (11) obj. -10.6372 iterations 28
Cbc0038I Pass  28: suminf.    1.17040 (11) obj. -10.6372 iterations 7
Cbc0038I Pass  29: suminf.    1.43801 (6) obj. -3.10463 iterations 20
Cbc0038I Pass  30: suminf.    1.43801 (6) obj. -3.10463 iterations 0
Cbc0038I Pass  31: suminf.    0.50073 (5) obj. -3.10463 iterations 6
Cbc0038I Pass  32: suminf.    0.49529 (5) obj. -3.10463 iterations 1
Cbc0038I Pass  33: suminf.    1.03584 (6) obj. -3.10463 iterations 11
Cbc0038I Rounding solution of 0.20846 is better than previous of 1.09545

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 31 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 0.20846 to -6.09954 (0.09 seconds)
Cbc0038I Round again with cutoff of -13.0606
Cbc0038I Pass  33: suminf.    1.78683 (28) obj. -35.9542 iterations 0
Cbc0038I Pass  34: suminf.    1.78683 (28) obj. -35.9542 iterations 0
Cbc0038I Pass  35: suminf.    1.07314 (13) obj. -13.0606 iterations 16
Cbc0038I Pass  36: suminf.    0.83549 (9) obj. -13.0606 iterations 29
Cbc0038I Pass  37: suminf.    0.84205 (7) obj. -13.0606 iterations 3
Cbc0038I Pass  38: suminf.    0.74131 (6) obj. -13.0606 iterations 13
Cbc0038I Pass  39: suminf.    0.74131 (6) obj. -13.0606 iterations 0
Cbc0038I Pass  40: suminf.    1.67845 (7) obj. -13.0606 iterations 12
Cbc0038I Pass  41: suminf.    1.12355 (7) obj. -13.0606 iterations 4
Cbc0038I Pass  42: suminf.    1.67845 (7) obj. -13.0606 iterations 8
Cbc0038I Pass  43: suminf.    1.67488 (12) obj. -13.0606 iterations 27
Cbc0038I Pass  44: suminf.    0.45664 (7) obj. -13.0606 iterations 15
Cbc0038I Pass  45: suminf.    0.44623 (7) obj. -13.1388 iterations 4
Cbc0038I Pass  46: suminf.    1.13633 (9) obj. -13.0606 iterations 15
Cbc0038I Pass  47: suminf.    1.12264 (10) obj. -13.0606 iterations 12
Cbc0038I Pass  48: suminf.    1.59232 (9) obj. -13.0606 iterations 8
Cbc0038I Pass  49: suminf.    1.59232 (9) obj. -13.0606 iterations 1
Cbc0038I Pass  50: suminf.    1.59026 (9) obj. -13.0606 iterations 7
Cbc0038I Pass  51: suminf.    1.59026 (9) obj. -13.0606 iterations 1
Cbc0038I Pass  52: suminf.    1.59232 (9) obj. -13.0606 iterations 10
Cbc0038I Pass  53: suminf.    2.21692 (18) obj. -13.0606 iterations 22
Cbc0038I Pass  54: suminf.    1.42095 (14) obj. -13.0606 iterations 17
Cbc0038I Pass  55: suminf.    1.23267 (10) obj. -13.0606 iterations 10
Cbc0038I Pass  56: suminf.    1.23206 (10) obj. -13.0606 iterations 1
Cbc0038I Pass  57: suminf.    1.49472 (11) obj. -13.0606 iterations 15
Cbc0038I Pass  58: suminf.    1.17049 (10) obj. -13.0606 iterations 4
Cbc0038I Pass  59: suminf.    1.08082 (10) obj. -13.0606 iterations 7
Cbc0038I Pass  60: suminf.    1.45942 (10) obj. -13.0606 iterations 10
Cbc0038I Pass  61: suminf.    1.45942 (10) obj. -13.0606 iterations 2
Cbc0038I Pass  62: suminf.    1.39480 (10) obj. -13.0606 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -6.09954 - took 0.07 seconds
Cbc0012I Integer solution of -6.099545 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 13 rows 17 columns
Cbc0031I 58 added rows had average density of 33
Cbc0013I At root node, 58 cuts changed objective from -40.904458 to -16.990378 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9094 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1278 row cuts average 134.5 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 643 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 768 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 324 row cuts average 88.4 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 178 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.809 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.099545 best solution, best possible -16.990378 (3.17 seconds)
Cbc0012I Integer solution of -7.1328 found by DiveCoefficient after 4478 iterations and 2 nodes (3.36 seconds)
Cbc0012I Integer solution of -7.63733 found by DiveCoefficient after 4493 iterations and 2 nodes (3.45 seconds)
Cbc0012I Integer solution of -8.43897 found by rounding after 4516 iterations and 4 nodes (3.51 seconds)
Cbc0012I Integer solution of -8.499573 found by rounding after 4524 iterations and 5 nodes (3.55 seconds)
Cbc0012I Integer solution of -9.666991 found by rounding after 4552 iterations and 7 nodes (3.73 seconds)
Cbc0010I After 9 nodes, 8 on tree, -9.666991 best solution, best possible -16.990378 (3.88 seconds)
Cbc0012I Integer solution of -9.81165 found by rounding after 4626 iterations and 13 nodes (4.01 seconds)
Cbc0016I Integer solution of -9.91507 found by strong branching after 4783 iterations and 30 nodes (4.36 seconds)
Cbc0016I Integer solution of -10.91507 found by strong branching after 4811 iterations and 34 nodes (4.45 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 60 rows 74 columns
Cbc0010I After 42 nodes, 1 on tree, -10.91507 best solution, best possible -15.842919 (5.22 seconds)
Cbc0010I After 54 nodes, 7 on tree, -10.91507 best solution, best possible -15.842919 (5.98 seconds)
Cbc0001I Search completed - best objective -10.91507, took 6444 iterations and 72 nodes (6.60 seconds)
Cbc0032I Strong branching done 820 times (13288 iterations), fathomed 6 nodes and fixed 9 variables
Cbc0035I Maximum depth 13, 151 variables fixed on reduced cost
Total time (CPU seconds):       4.50   (Wallclock seconds):       6.64

