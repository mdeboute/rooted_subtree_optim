Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 32 (-3) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 6.47113e-07 - average 1.15556e-08, 5 fixed columns
Coin0506I Presolve 44 (-12) rows, 27 (-5) columns and 135 (-33) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Coin0511I After Postsolve, objective 95.171234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Coin0511I After Postsolve, objective 95.171234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.17123357 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 56 rows, 32 columns (31 integer (31 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.596%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.68457
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.5145 iterations 21
Cbc0038I Solution found of -13.5145
Cbc0038I Relaxing continuous gives -13.5145
Cbc0038I Rounding solution of -18.6564 is better than previous of -13.5145

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -18.6564 to -43.7716 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.9116
Cbc0038I Pass   2: suminf.    0.71649 (2) obj. -48.9116 iterations 2
Cbc0038I Pass   3: suminf.    0.26124 (4) obj. -48.9116 iterations 4
Cbc0038I Pass   4: suminf.    0.45271 (2) obj. -48.9116 iterations 6
Cbc0038I Pass   5: suminf.    0.45271 (2) obj. -48.9116 iterations 0
Cbc0038I Pass   6: suminf.    0.71649 (2) obj. -48.9116 iterations 6
Cbc0038I Pass   7: suminf.    2.96077 (8) obj. -48.9116 iterations 9
Cbc0038I Pass   8: suminf.    1.68609 (4) obj. -48.9116 iterations 3
Cbc0038I Pass   9: suminf.    0.55785 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  10: suminf.    0.55785 (2) obj. -48.9116 iterations 0
Cbc0038I Pass  11: suminf.    0.91354 (2) obj. -48.9116 iterations 1
Cbc0038I Pass  12: suminf.    0.78223 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  13: suminf.    0.55251 (2) obj. -48.9116 iterations 2
Cbc0038I Pass  14: suminf.    0.78223 (2) obj. -48.9116 iterations 1
Cbc0038I Pass  15: suminf.    2.15107 (8) obj. -48.9116 iterations 16
Cbc0038I Pass  16: suminf.    0.76621 (4) obj. -48.9116 iterations 7
Cbc0038I Pass  17: suminf.    1.20898 (3) obj. -48.9116 iterations 8
Cbc0038I Pass  18: suminf.    0.24031 (3) obj. -48.9116 iterations 3
Cbc0038I Pass  19: suminf.    0.44554 (2) obj. -48.9116 iterations 4
Cbc0038I Pass  20: suminf.    0.22935 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  21: suminf.    0.40884 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  22: suminf.    1.98463 (4) obj. -48.9116 iterations 5
Cbc0038I Pass  23: suminf.    1.26065 (3) obj. -48.9116 iterations 2
Cbc0038I Pass  24: suminf.    0.82190 (3) obj. -48.9116 iterations 1
Cbc0038I Pass  25: suminf.    0.67621 (4) obj. -48.9116 iterations 2
Cbc0038I Pass  26: suminf.    0.68621 (2) obj. -48.9116 iterations 4
Cbc0038I Pass  27: suminf.    0.39148 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  28: suminf.    0.16812 (1) obj. -48.9116 iterations 2
Cbc0038I Pass  29: suminf.    0.47133 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  30: suminf.    2.31596 (6) obj. -48.9116 iterations 11
Cbc0038I Pass  31: suminf.    1.41833 (4) obj. -48.9116 iterations 3
Cbc0038I Rounding solution of -47.6114 is better than previous of -43.7716

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -47.6114 to -52.8094 (0.04 seconds)
Cbc0038I Round again with cutoff of -61.2818
Cbc0038I Pass  31: suminf.    1.24209 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  32: suminf.    1.09900 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  33: suminf.    1.33454 (4) obj. -61.2818 iterations 6
Cbc0038I Pass  34: suminf.    1.33454 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  35: suminf.    1.24209 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  36: suminf.    2.30446 (6) obj. -61.2818 iterations 8
Cbc0038I Pass  37: suminf.    1.17886 (5) obj. -61.2818 iterations 4
Cbc0038I Pass  38: suminf.    1.17886 (5) obj. -61.2818 iterations 0
Cbc0038I Pass  39: suminf.    0.78333 (2) obj. -61.2818 iterations 5
Cbc0038I Pass  40: suminf.    0.43390 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  41: suminf.    0.78333 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  42: suminf.    0.99323 (10) obj. -61.2818 iterations 16
Cbc0038I Pass  43: suminf.    0.74541 (5) obj. -61.2818 iterations 9
Cbc0038I Pass  44: suminf.    0.76172 (3) obj. -61.2818 iterations 7
Cbc0038I Pass  45: suminf.    0.74492 (4) obj. -61.2818 iterations 1
Cbc0038I Pass  46: suminf.    1.42516 (5) obj. -61.2818 iterations 4
Cbc0038I Pass  47: suminf.    0.72113 (4) obj. -61.2818 iterations 3
Cbc0038I Pass  48: suminf.    0.90463 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  49: suminf.    0.90463 (4) obj. -61.2818 iterations 1
Cbc0038I Pass  50: suminf.    0.91912 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  51: suminf.    1.53524 (5) obj. -61.2818 iterations 20
Cbc0038I Pass  52: suminf.    0.61938 (3) obj. -61.2818 iterations 10
Cbc0038I Pass  53: suminf.    0.62151 (3) obj. -61.2818 iterations 4
Cbc0038I Pass  54: suminf.    0.78333 (2) obj. -61.2818 iterations 3
Cbc0038I Pass  55: suminf.    0.43390 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  56: suminf.    1.20868 (6) obj. -61.2818 iterations 11
Cbc0038I Pass  57: suminf.    0.88493 (3) obj. -61.2818 iterations 5
Cbc0038I Pass  58: suminf.    1.01748 (3) obj. -61.2818 iterations 5
Cbc0038I Pass  59: suminf.    0.82711 (3) obj. -61.2818 iterations 2
Cbc0038I Pass  60: suminf.    0.44895 (3) obj. -61.2818 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -52.8094 - took 0.09 seconds
Cbc0012I Integer solution of -52.809362 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 56 rows 32 columns, reduced to 35 rows 21 columns
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -95.171234 to -73.820178 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1852 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 775 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -52.80936199999999, took 2497 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 132 times (1317 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-20) rows, 54 (-12) columns and 502 (-221) elements
Clp1000I sum of infeasibilities 2.01774e-07 - average 4.20362e-09, 34 fixed columns
Coin0506I Presolve 15 (-33) rows, 20 (-34) columns and 64 (-438) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 41.929423
Clp0000I Optimal - objective value 41.929423
Coin0511I After Postsolve, objective 41.929423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.538693 - largest nonzero change 1.2643841e-05 ( 0.0008409402%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 114.98329
Clp0000I Optimal - objective value 114.98329
Clp0000I Optimal - objective value 114.98329
Coin0511I After Postsolve, objective 114.98329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.9832868 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 54 columns (54 integer (54 of which binary)) and 508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.645%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 5.7701
Cbc0038I Pass   1: suminf.    1.63635 (14) obj. -58.7813 iterations 18
Cbc0038I Pass   2: suminf.    1.63635 (14) obj. -58.7813 iterations 1
Cbc0038I Solution found of -11.2436
Cbc0038I Rounding solution of -17.9739 is better than previous of -11.2436

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 54 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -17.9739 to -38.7877 (0.02 seconds)
Cbc0038I Round again with cutoff of -44.7451
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.63635 (14) obj. -58.7813 iterations 0
Cbc0038I Pass   4: suminf.    1.63635 (14) obj. -58.7813 iterations 1
Cbc0038I Pass   5: suminf.    1.04214 (6) obj. -44.7451 iterations 22
Cbc0038I Pass   6: suminf.    0.75952 (4) obj. -48.4448 iterations 2
Cbc0038I Pass   7: suminf.    0.26540 (2) obj. -44.7451 iterations 11
Cbc0038I Pass   8: suminf.    0.26047 (2) obj. -54.2237 iterations 2
Cbc0038I Pass   9: suminf.    0.12500 (1) obj. -50.1627 iterations 1
Cbc0038I Pass  10: suminf.    0.87441 (4) obj. -44.7451 iterations 9
Cbc0038I Pass  11: suminf.    0.73380 (3) obj. -51.0387 iterations 1
Cbc0038I Pass  12: suminf.    0.23464 (2) obj. -44.7451 iterations 6
Cbc0038I Pass  13: suminf.    0.18750 (1) obj. -45.1313 iterations 4
Cbc0038I Pass  14: suminf.    1.08807 (6) obj. -44.7451 iterations 15
Cbc0038I Pass  15: suminf.    0.76917 (4) obj. -48.6395 iterations 4
Cbc0038I Pass  16: suminf.    0.26458 (3) obj. -47.8721 iterations 1
Cbc0038I Pass  17: suminf.    0.62609 (6) obj. -44.7451 iterations 5
Cbc0038I Pass  18: suminf.    0.52648 (4) obj. -44.7451 iterations 1
Cbc0038I Pass  19: suminf.    0.74207 (3) obj. -44.7451 iterations 3
Cbc0038I Pass  20: suminf.    0.46025 (2) obj. -44.7451 iterations 1
Cbc0038I Pass  21: suminf.    0.18125 (2) obj. -48.3721 iterations 1
Cbc0038I Pass  22: suminf.    0.74207 (3) obj. -44.7451 iterations 3
Cbc0038I Pass  23: suminf.    1.82104 (8) obj. -47.3565 iterations 15
Cbc0038I Pass  24: suminf.    1.82104 (8) obj. -47.3565 iterations 2
Cbc0038I Pass  25: suminf.    1.21477 (5) obj. -44.7451 iterations 12
Cbc0038I Pass  26: suminf.    0.88015 (4) obj. -44.7451 iterations 2
Cbc0038I Pass  27: suminf.    1.09530 (3) obj. -44.7451 iterations 5
Cbc0038I Pass  28: suminf.    0.64520 (3) obj. -44.7451 iterations 1
Cbc0038I Pass  29: suminf.    2.36449 (9) obj. -50.0419 iterations 16
Cbc0038I Pass  30: suminf.    1.36449 (7) obj. -47.3964 iterations 5
Cbc0038I Pass  31: suminf.    1.13127 (3) obj. -44.7451 iterations 10
Cbc0038I Pass  32: suminf.    0.83228 (3) obj. -50.1643 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 54 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -38.7877 to -45.5346 (0.04 seconds)
Cbc0038I Round again with cutoff of -56.0999
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.63635 (14) obj. -58.7813 iterations 0
Cbc0038I Pass  33: suminf.    1.63635 (14) obj. -58.7813 iterations 1
Cbc0038I Pass  34: suminf.    1.15552 (6) obj. -56.0999 iterations 20
Cbc0038I Pass  35: suminf.    1.15552 (6) obj. -56.0999 iterations 0
Cbc0038I Pass  36: suminf.    0.57317 (3) obj. -56.0999 iterations 11
Cbc0038I Pass  37: suminf.    0.56970 (6) obj. -56.0999 iterations 2
Cbc0038I Pass  38: suminf.    0.91075 (4) obj. -56.0999 iterations 9
Cbc0038I Pass  39: suminf.    0.84574 (4) obj. -56.0999 iterations 2
Cbc0038I Pass  40: suminf.    0.39737 (3) obj. -56.0999 iterations 2
Cbc0038I Pass  41: suminf.    0.49873 (4) obj. -56.0999 iterations 4
Cbc0038I Pass  42: suminf.    0.49873 (4) obj. -56.0999 iterations 0
Cbc0038I Pass  43: suminf.    0.84574 (4) obj. -56.0999 iterations 5
Cbc0038I Pass  44: suminf.    2.30804 (11) obj. -56.0999 iterations 20
Cbc0038I Pass  45: suminf.    1.89413 (9) obj. -57.7228 iterations 5
Cbc0038I Pass  46: suminf.    1.59390 (4) obj. -56.0999 iterations 12
Cbc0038I Pass  47: suminf.    1.38289 (4) obj. -57.3659 iterations 3
Cbc0038I Pass  48: suminf.    2.52897 (9) obj. -56.0999 iterations 4
Cbc0038I Pass  49: suminf.    2.52897 (9) obj. -56.0999 iterations 0
Cbc0038I Pass  50: suminf.    2.57277 (7) obj. -56.0999 iterations 8
Cbc0038I Pass  51: suminf.    2.08307 (6) obj. -56.0999 iterations 2
Cbc0038I Pass  52: suminf.    2.00331 (6) obj. -56.0999 iterations 4
Cbc0038I Pass  53: suminf.    2.57277 (7) obj. -56.0999 iterations 2
Cbc0038I Pass  54: suminf.    2.99003 (9) obj. -56.0999 iterations 6
Cbc0038I Pass  55: suminf.    2.77531 (8) obj. -56.0999 iterations 4
Cbc0038I Pass  56: suminf.    2.08307 (6) obj. -56.0999 iterations 3
Cbc0038I Pass  57: suminf.    3.06077 (10) obj. -56.0999 iterations 8
Cbc0038I Pass  58: suminf.    3.06077 (10) obj. -56.0999 iterations 0
Cbc0038I Pass  59: suminf.    2.47728 (7) obj. -56.0999 iterations 7
Cbc0038I Pass  60: suminf.    2.47728 (7) obj. -56.0999 iterations 0
Cbc0038I Pass  61: suminf.    2.47558 (7) obj. -56.0999 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 54 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -45.5346 to -47.4888 (0.06 seconds)
Cbc0038I Round again with cutoff of -68.7781
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.41014 (19) obj. -68.7781 iterations 4
Cbc0038I Pass  62: suminf.    2.12591 (15) obj. -68.7781 iterations 1
Cbc0038I Pass  63: suminf.    1.20378 (7) obj. -68.7781 iterations 18
Cbc0038I Pass  64: suminf.    1.18323 (7) obj. -68.7781 iterations 4
Cbc0038I Pass  65: suminf.    0.83473 (5) obj. -68.7781 iterations 15
Cbc0038I Pass  66: suminf.    0.77267 (5) obj. -68.7781 iterations 5
Cbc0038I Pass  67: suminf.    2.33556 (10) obj. -68.7781 iterations 11
Cbc0038I Pass  68: suminf.    1.66783 (10) obj. -68.7781 iterations 4
Cbc0038I Pass  69: suminf.    0.87527 (10) obj. -68.7781 iterations 15
Cbc0038I Pass  70: suminf.    2.44331 (10) obj. -68.7781 iterations 10
Cbc0038I Pass  71: suminf.    1.26348 (7) obj. -68.7781 iterations 4
Cbc0038I Pass  72: suminf.    1.08160 (6) obj. -68.7781 iterations 7
Cbc0038I Pass  73: suminf.    0.97451 (6) obj. -68.7781 iterations 2
Cbc0038I Pass  74: suminf.    1.08160 (6) obj. -68.7781 iterations 3
Cbc0038I Pass  75: suminf.    2.94369 (10) obj. -68.7781 iterations 9
Cbc0038I Pass  76: suminf.    1.88185 (8) obj. -68.7781 iterations 7
Cbc0038I Pass  77: suminf.    1.47658 (8) obj. -68.7781 iterations 1
Cbc0038I Pass  78: suminf.    1.92963 (7) obj. -68.7781 iterations 4
Cbc0038I Pass  79: suminf.    1.92963 (7) obj. -68.7781 iterations 0
Cbc0038I Pass  80: suminf.    1.96091 (7) obj. -68.7781 iterations 2
Cbc0038I Pass  81: suminf.    1.96091 (7) obj. -68.7781 iterations 0
Cbc0038I Pass  82: suminf.    1.92963 (7) obj. -68.7781 iterations 2
Cbc0038I Pass  83: suminf.    3.76193 (15) obj. -70.4697 iterations 13
Cbc0038I Pass  84: suminf.    3.67440 (15) obj. -68.7781 iterations 3
Cbc0038I Pass  85: suminf.    2.57088 (10) obj. -68.7781 iterations 11
Cbc0038I Pass  86: suminf.    2.57088 (10) obj. -68.7781 iterations 0
Cbc0038I Pass  87: suminf.    2.61668 (10) obj. -68.7781 iterations 2
Cbc0038I Pass  88: suminf.    2.61668 (10) obj. -68.7781 iterations 0
Cbc0038I Pass  89: suminf.    2.57088 (10) obj. -68.7781 iterations 2
Cbc0038I Pass  90: suminf.    3.32420 (13) obj. -68.7781 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 54 columns, reduced to 24 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -47.4888 - took 0.06 seconds
Cbc0012I Integer solution of -47.488842 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 48 rows 54 columns, reduced to 19 rows 22 columns
Cbc0031I 18 added rows had average density of 14.611111
Cbc0013I At root node, 18 cuts changed objective from -98.360664 to -57.035097 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2031 row cuts average 3.9 elements, 12 column cuts (12 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 983 row cuts average 39.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 251 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 106 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.706 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -47.488842 best solution, best possible -57.035097 (1.57 seconds)
Cbc0012I Integer solution of -49.000897 found by DiveCoefficient after 2094 iterations and 2 nodes (1.79 seconds)
Cbc0012I Integer solution of -52.809362 found by rounding after 2205 iterations and 10 nodes (2.02 seconds)
Cbc0001I Search completed - best objective -52.80936199999999, took 2267 iterations and 12 nodes (2.02 seconds)
Cbc0032I Strong branching done 176 times (1116 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       2.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 32 (-3) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 6.47113e-07 - average 1.15556e-08, 5 fixed columns
Coin0506I Presolve 44 (-12) rows, 27 (-5) columns and 135 (-33) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Coin0511I After Postsolve, objective 95.171234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Coin0511I After Postsolve, objective 95.171234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.17123357 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 56 rows, 32 columns (31 integer (31 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.596%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.68457
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.5145 iterations 21
Cbc0038I Solution found of -13.5145
Cbc0038I Relaxing continuous gives -13.5145
Cbc0038I Rounding solution of -18.6564 is better than previous of -13.5145

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -18.6564 to -43.7716 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.9116
Cbc0038I Pass   2: suminf.    0.71649 (2) obj. -48.9116 iterations 2
Cbc0038I Pass   3: suminf.    0.26124 (4) obj. -48.9116 iterations 4
Cbc0038I Pass   4: suminf.    0.45271 (2) obj. -48.9116 iterations 6
Cbc0038I Pass   5: suminf.    0.45271 (2) obj. -48.9116 iterations 0
Cbc0038I Pass   6: suminf.    0.71649 (2) obj. -48.9116 iterations 6
Cbc0038I Pass   7: suminf.    2.96077 (8) obj. -48.9116 iterations 9
Cbc0038I Pass   8: suminf.    1.68609 (4) obj. -48.9116 iterations 3
Cbc0038I Pass   9: suminf.    0.55785 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  10: suminf.    0.55785 (2) obj. -48.9116 iterations 0
Cbc0038I Pass  11: suminf.    0.91354 (2) obj. -48.9116 iterations 1
Cbc0038I Pass  12: suminf.    0.78223 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  13: suminf.    0.55251 (2) obj. -48.9116 iterations 2
Cbc0038I Pass  14: suminf.    0.78223 (2) obj. -48.9116 iterations 1
Cbc0038I Pass  15: suminf.    2.15107 (8) obj. -48.9116 iterations 16
Cbc0038I Pass  16: suminf.    0.76621 (4) obj. -48.9116 iterations 7
Cbc0038I Pass  17: suminf.    1.20898 (3) obj. -48.9116 iterations 8
Cbc0038I Pass  18: suminf.    0.24031 (3) obj. -48.9116 iterations 3
Cbc0038I Pass  19: suminf.    0.44554 (2) obj. -48.9116 iterations 4
Cbc0038I Pass  20: suminf.    0.22935 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  21: suminf.    0.40884 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  22: suminf.    1.98463 (4) obj. -48.9116 iterations 5
Cbc0038I Pass  23: suminf.    1.26065 (3) obj. -48.9116 iterations 2
Cbc0038I Pass  24: suminf.    0.82190 (3) obj. -48.9116 iterations 1
Cbc0038I Pass  25: suminf.    0.67621 (4) obj. -48.9116 iterations 2
Cbc0038I Pass  26: suminf.    0.68621 (2) obj. -48.9116 iterations 4
Cbc0038I Pass  27: suminf.    0.39148 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  28: suminf.    0.16812 (1) obj. -48.9116 iterations 2
Cbc0038I Pass  29: suminf.    0.47133 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  30: suminf.    2.31596 (6) obj. -48.9116 iterations 11
Cbc0038I Pass  31: suminf.    1.41833 (4) obj. -48.9116 iterations 3
Cbc0038I Rounding solution of -47.6114 is better than previous of -43.7716

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -47.6114 to -52.8094 (0.04 seconds)
Cbc0038I Round again with cutoff of -61.2818
Cbc0038I Pass  31: suminf.    1.24209 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  32: suminf.    1.09900 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  33: suminf.    1.33454 (4) obj. -61.2818 iterations 6
Cbc0038I Pass  34: suminf.    1.33454 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  35: suminf.    1.24209 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  36: suminf.    2.30446 (6) obj. -61.2818 iterations 8
Cbc0038I Pass  37: suminf.    1.17886 (5) obj. -61.2818 iterations 4
Cbc0038I Pass  38: suminf.    1.17886 (5) obj. -61.2818 iterations 0
Cbc0038I Pass  39: suminf.    0.78333 (2) obj. -61.2818 iterations 5
Cbc0038I Pass  40: suminf.    0.43390 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  41: suminf.    0.78333 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  42: suminf.    0.99323 (10) obj. -61.2818 iterations 16
Cbc0038I Pass  43: suminf.    0.74541 (5) obj. -61.2818 iterations 9
Cbc0038I Pass  44: suminf.    0.76172 (3) obj. -61.2818 iterations 7
Cbc0038I Pass  45: suminf.    0.74492 (4) obj. -61.2818 iterations 1
Cbc0038I Pass  46: suminf.    1.42516 (5) obj. -61.2818 iterations 4
Cbc0038I Pass  47: suminf.    0.72113 (4) obj. -61.2818 iterations 3
Cbc0038I Pass  48: suminf.    0.90463 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  49: suminf.    0.90463 (4) obj. -61.2818 iterations 1
Cbc0038I Pass  50: suminf.    0.91912 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  51: suminf.    1.53524 (5) obj. -61.2818 iterations 20
Cbc0038I Pass  52: suminf.    0.61938 (3) obj. -61.2818 iterations 10
Cbc0038I Pass  53: suminf.    0.62151 (3) obj. -61.2818 iterations 4
Cbc0038I Pass  54: suminf.    0.78333 (2) obj. -61.2818 iterations 3
Cbc0038I Pass  55: suminf.    0.43390 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  56: suminf.    1.20868 (6) obj. -61.2818 iterations 11
Cbc0038I Pass  57: suminf.    0.88493 (3) obj. -61.2818 iterations 5
Cbc0038I Pass  58: suminf.    1.01748 (3) obj. -61.2818 iterations 5
Cbc0038I Pass  59: suminf.    0.82711 (3) obj. -61.2818 iterations 2
Cbc0038I Pass  60: suminf.    0.44895 (3) obj. -61.2818 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -52.8094 - took 0.05 seconds
Cbc0012I Integer solution of -52.809362 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 56 rows 32 columns, reduced to 35 rows 21 columns
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -95.171234 to -73.820178 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1852 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 775 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -52.80936199999999, took 2497 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 132 times (1317 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-21) rows, 54 (-13) columns and 502 (-222) elements
Clp1000I sum of infeasibilities 2.01774e-07 - average 4.20362e-09, 34 fixed columns
Coin0506I Presolve 15 (-33) rows, 20 (-34) columns and 64 (-438) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 41.929423
Clp0000I Optimal - objective value 41.929423
Coin0511I After Postsolve, objective 41.929423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.538693 - largest nonzero change 1.2643841e-05 ( 0.0008409402%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 114.98329
Clp0000I Optimal - objective value 114.98329
Clp0000I Optimal - objective value 114.98329
Coin0511I After Postsolve, objective 114.98329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.9832868 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 54 columns (54 integer (54 of which binary)) and 508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.645%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 5.7701
Cbc0038I Pass   1: suminf.    1.63635 (14) obj. -58.7813 iterations 18
Cbc0038I Pass   2: suminf.    1.63635 (14) obj. -58.7813 iterations 1
Cbc0038I Solution found of -11.2436
Cbc0038I Rounding solution of -17.9739 is better than previous of -11.2436

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 54 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -17.9739 to -38.7877 (0.02 seconds)
Cbc0038I Round again with cutoff of -44.7451
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.63635 (14) obj. -58.7813 iterations 0
Cbc0038I Pass   4: suminf.    1.63635 (14) obj. -58.7813 iterations 1
Cbc0038I Pass   5: suminf.    1.04214 (6) obj. -44.7451 iterations 22
Cbc0038I Pass   6: suminf.    0.75952 (4) obj. -48.4448 iterations 2
Cbc0038I Pass   7: suminf.    0.26540 (2) obj. -44.7451 iterations 11
Cbc0038I Pass   8: suminf.    0.26047 (2) obj. -54.2237 iterations 2
Cbc0038I Pass   9: suminf.    0.12500 (1) obj. -50.1627 iterations 1
Cbc0038I Pass  10: suminf.    0.87441 (4) obj. -44.7451 iterations 9
Cbc0038I Pass  11: suminf.    0.73380 (3) obj. -51.0387 iterations 1
Cbc0038I Pass  12: suminf.    0.23464 (2) obj. -44.7451 iterations 6
Cbc0038I Pass  13: suminf.    0.18750 (1) obj. -45.1313 iterations 4
Cbc0038I Pass  14: suminf.    1.08807 (6) obj. -44.7451 iterations 15
Cbc0038I Pass  15: suminf.    0.76917 (4) obj. -48.6395 iterations 4
Cbc0038I Pass  16: suminf.    0.26458 (3) obj. -47.8721 iterations 1
Cbc0038I Pass  17: suminf.    0.62609 (6) obj. -44.7451 iterations 5
Cbc0038I Pass  18: suminf.    0.52648 (4) obj. -44.7451 iterations 1
Cbc0038I Pass  19: suminf.    0.74207 (3) obj. -44.7451 iterations 3
Cbc0038I Pass  20: suminf.    0.46025 (2) obj. -44.7451 iterations 1
Cbc0038I Pass  21: suminf.    0.18125 (2) obj. -48.3721 iterations 1
Cbc0038I Pass  22: suminf.    0.74207 (3) obj. -44.7451 iterations 3
Cbc0038I Pass  23: suminf.    1.82104 (8) obj. -47.3565 iterations 15
Cbc0038I Pass  24: suminf.    1.82104 (8) obj. -47.3565 iterations 2
Cbc0038I Pass  25: suminf.    1.21477 (5) obj. -44.7451 iterations 12
Cbc0038I Pass  26: suminf.    0.88015 (4) obj. -44.7451 iterations 2
Cbc0038I Pass  27: suminf.    1.09530 (3) obj. -44.7451 iterations 5
Cbc0038I Pass  28: suminf.    0.64520 (3) obj. -44.7451 iterations 1
Cbc0038I Pass  29: suminf.    2.36449 (9) obj. -50.0419 iterations 16
Cbc0038I Pass  30: suminf.    1.36449 (7) obj. -47.3964 iterations 5
Cbc0038I Pass  31: suminf.    1.13127 (3) obj. -44.7451 iterations 10
Cbc0038I Pass  32: suminf.    0.83228 (3) obj. -50.1643 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 54 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -38.7877 to -45.5346 (0.05 seconds)
Cbc0038I Round again with cutoff of -56.0999
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.63635 (14) obj. -58.7813 iterations 0
Cbc0038I Pass  33: suminf.    1.63635 (14) obj. -58.7813 iterations 1
Cbc0038I Pass  34: suminf.    1.15552 (6) obj. -56.0999 iterations 20
Cbc0038I Pass  35: suminf.    1.15552 (6) obj. -56.0999 iterations 0
Cbc0038I Pass  36: suminf.    0.57317 (3) obj. -56.0999 iterations 11
Cbc0038I Pass  37: suminf.    0.56970 (6) obj. -56.0999 iterations 2
Cbc0038I Pass  38: suminf.    0.91075 (4) obj. -56.0999 iterations 9
Cbc0038I Pass  39: suminf.    0.84574 (4) obj. -56.0999 iterations 2
Cbc0038I Pass  40: suminf.    0.39737 (3) obj. -56.0999 iterations 2
Cbc0038I Pass  41: suminf.    0.49873 (4) obj. -56.0999 iterations 4
Cbc0038I Pass  42: suminf.    0.49873 (4) obj. -56.0999 iterations 0
Cbc0038I Pass  43: suminf.    0.84574 (4) obj. -56.0999 iterations 5
Cbc0038I Pass  44: suminf.    2.30804 (11) obj. -56.0999 iterations 20
Cbc0038I Pass  45: suminf.    1.89413 (9) obj. -57.7228 iterations 5
Cbc0038I Pass  46: suminf.    1.59390 (4) obj. -56.0999 iterations 12
Cbc0038I Pass  47: suminf.    1.38289 (4) obj. -57.3659 iterations 3
Cbc0038I Pass  48: suminf.    2.52897 (9) obj. -56.0999 iterations 4
Cbc0038I Pass  49: suminf.    2.52897 (9) obj. -56.0999 iterations 0
Cbc0038I Pass  50: suminf.    2.57277 (7) obj. -56.0999 iterations 8
Cbc0038I Pass  51: suminf.    2.08307 (6) obj. -56.0999 iterations 2
Cbc0038I Pass  52: suminf.    2.00331 (6) obj. -56.0999 iterations 4
Cbc0038I Pass  53: suminf.    2.57277 (7) obj. -56.0999 iterations 2
Cbc0038I Pass  54: suminf.    2.99003 (9) obj. -56.0999 iterations 6
Cbc0038I Pass  55: suminf.    2.77531 (8) obj. -56.0999 iterations 4
Cbc0038I Pass  56: suminf.    2.08307 (6) obj. -56.0999 iterations 3
Cbc0038I Pass  57: suminf.    3.06077 (10) obj. -56.0999 iterations 8
Cbc0038I Pass  58: suminf.    3.06077 (10) obj. -56.0999 iterations 0
Cbc0038I Pass  59: suminf.    2.47728 (7) obj. -56.0999 iterations 7
Cbc0038I Pass  60: suminf.    2.47728 (7) obj. -56.0999 iterations 0
Cbc0038I Pass  61: suminf.    2.47558 (7) obj. -56.0999 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 54 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -45.5346 to -47.4888 (0.07 seconds)
Cbc0038I Round again with cutoff of -68.7781
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.41014 (19) obj. -68.7781 iterations 4
Cbc0038I Pass  62: suminf.    2.12591 (15) obj. -68.7781 iterations 1
Cbc0038I Pass  63: suminf.    1.20378 (7) obj. -68.7781 iterations 18
Cbc0038I Pass  64: suminf.    1.18323 (7) obj. -68.7781 iterations 4
Cbc0038I Pass  65: suminf.    0.83473 (5) obj. -68.7781 iterations 15
Cbc0038I Pass  66: suminf.    0.77267 (5) obj. -68.7781 iterations 5
Cbc0038I Pass  67: suminf.    2.33556 (10) obj. -68.7781 iterations 11
Cbc0038I Pass  68: suminf.    1.66783 (10) obj. -68.7781 iterations 4
Cbc0038I Pass  69: suminf.    0.87527 (10) obj. -68.7781 iterations 15
Cbc0038I Pass  70: suminf.    2.44331 (10) obj. -68.7781 iterations 10
Cbc0038I Pass  71: suminf.    1.26348 (7) obj. -68.7781 iterations 4
Cbc0038I Pass  72: suminf.    1.08160 (6) obj. -68.7781 iterations 7
Cbc0038I Pass  73: suminf.    0.97451 (6) obj. -68.7781 iterations 2
Cbc0038I Pass  74: suminf.    1.08160 (6) obj. -68.7781 iterations 3
Cbc0038I Pass  75: suminf.    2.94369 (10) obj. -68.7781 iterations 9
Cbc0038I Pass  76: suminf.    1.88185 (8) obj. -68.7781 iterations 7
Cbc0038I Pass  77: suminf.    1.47658 (8) obj. -68.7781 iterations 1
Cbc0038I Pass  78: suminf.    1.92963 (7) obj. -68.7781 iterations 4
Cbc0038I Pass  79: suminf.    1.92963 (7) obj. -68.7781 iterations 0
Cbc0038I Pass  80: suminf.    1.96091 (7) obj. -68.7781 iterations 2
Cbc0038I Pass  81: suminf.    1.96091 (7) obj. -68.7781 iterations 0
Cbc0038I Pass  82: suminf.    1.92963 (7) obj. -68.7781 iterations 2
Cbc0038I Pass  83: suminf.    3.76193 (15) obj. -70.4697 iterations 13
Cbc0038I Pass  84: suminf.    3.67440 (15) obj. -68.7781 iterations 3
Cbc0038I Pass  85: suminf.    2.57088 (10) obj. -68.7781 iterations 11
Cbc0038I Pass  86: suminf.    2.57088 (10) obj. -68.7781 iterations 0
Cbc0038I Pass  87: suminf.    2.61668 (10) obj. -68.7781 iterations 2
Cbc0038I Pass  88: suminf.    2.61668 (10) obj. -68.7781 iterations 0
Cbc0038I Pass  89: suminf.    2.57088 (10) obj. -68.7781 iterations 2
Cbc0038I Pass  90: suminf.    3.32420 (13) obj. -68.7781 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 54 columns, reduced to 24 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -47.4888 - took 0.06 seconds
Cbc0012I Integer solution of -47.488842 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 48 rows 54 columns, reduced to 19 rows 22 columns
Cbc0031I 18 added rows had average density of 14.611111
Cbc0013I At root node, 18 cuts changed objective from -98.360664 to -57.035097 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2031 row cuts average 3.9 elements, 12 column cuts (12 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 983 row cuts average 39.4 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 251 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 106 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.709 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -47.488842 best solution, best possible -57.035097 (1.55 seconds)
Cbc0012I Integer solution of -49.000897 found by DiveCoefficient after 2094 iterations and 2 nodes (1.76 seconds)
Cbc0012I Integer solution of -52.809362 found by rounding after 2205 iterations and 10 nodes (1.98 seconds)
Cbc0001I Search completed - best objective -52.80936199999999, took 2267 iterations and 12 nodes (1.98 seconds)
Cbc0032I Strong branching done 176 times (1116 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       2.00

