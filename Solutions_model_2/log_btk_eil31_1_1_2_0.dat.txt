Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 29 (-4) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 2.24884e-05 - average 4.58946e-07, 4 fixed columns
Coin0506I Presolve 39 (-10) rows, 24 (-5) columns and 118 (-30) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Coin0511I After Postsolve, objective 237.68876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Coin0511I After Postsolve, objective 237.68876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 237.6887623 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 29 columns (28 integer (28 of which binary)) and 156 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.851%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.62191
Cbc0038I Pass   1: suminf.    0.04211 (1) obj. -199.587 iterations 9
Cbc0038I Solution found of -123.221
Cbc0038I Relaxing continuous gives -123.221
Cbc0038I Rounding solution of -152.022 is better than previous of -123.221

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -152.022 to -186.27 (0.01 seconds)
Cbc0038I Round again with cutoff of -191.256
Cbc0038I Pass   2: suminf.    0.04211 (1) obj. -199.587 iterations 0
Cbc0038I Pass   3: suminf.    0.80954 (2) obj. -191.256 iterations 3
Cbc0038I Pass   4: suminf.    0.43271 (2) obj. -230.181 iterations 2
Cbc0038I Pass   5: suminf.    0.58398 (2) obj. -224.947 iterations 4
Cbc0038I Pass   6: suminf.    0.18947 (1) obj. -204.75 iterations 2
Cbc0038I Pass   7: suminf.    0.61462 (2) obj. -191.256 iterations 3
Cbc0038I Pass   8: suminf.    0.41830 (2) obj. -222.673 iterations 2
Cbc0038I Pass   9: suminf.    2.49453 (7) obj. -191.256 iterations 8
Cbc0038I Pass  10: suminf.    0.82091 (2) obj. -191.256 iterations 6
Cbc0038I Pass  11: suminf.    0.82091 (2) obj. -191.256 iterations 0
Cbc0038I Pass  12: suminf.    0.33894 (2) obj. -191.256 iterations 1
Cbc0038I Pass  13: suminf.    1.35154 (4) obj. -191.256 iterations 8
Cbc0038I Pass  14: suminf.    1.28218 (4) obj. -191.256 iterations 2
Cbc0038I Pass  15: suminf.    0.71768 (2) obj. -191.256 iterations 4
Cbc0038I Pass  16: suminf.    0.62376 (2) obj. -202.141 iterations 1
Cbc0038I Pass  17: suminf.    0.53124 (2) obj. -191.256 iterations 2
Cbc0038I Pass  18: suminf.    0.53124 (2) obj. -191.256 iterations 0
Cbc0038I Pass  19: suminf.    2.17606 (6) obj. -191.256 iterations 5
Cbc0038I Pass  20: suminf.    1.75568 (5) obj. -191.256 iterations 5
Cbc0038I Pass  21: suminf.    0.53124 (2) obj. -191.256 iterations 6
Cbc0038I Pass  22: suminf.    0.53124 (2) obj. -191.256 iterations 0
Cbc0038I Pass  23: suminf.    0.61378 (2) obj. -191.256 iterations 1
Cbc0038I Pass  24: suminf.    1.00600 (5) obj. -191.256 iterations 7
Cbc0038I Pass  25: suminf.    0.47629 (2) obj. -191.256 iterations 6
Cbc0038I Pass  26: suminf.    0.72263 (2) obj. -210.724 iterations 1
Cbc0038I Pass  27: suminf.    0.31458 (2) obj. -191.256 iterations 6
Cbc0038I Pass  28: suminf.    0.31458 (2) obj. -191.256 iterations 0
Cbc0038I Pass  29: suminf.    0.80902 (2) obj. -191.256 iterations 2
Cbc0038I Pass  30: suminf.    0.80902 (2) obj. -191.256 iterations 0
Cbc0038I Pass  31: suminf.    0.61066 (2) obj. -214.445 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -186.27 to -198.732 (0.02 seconds)
Cbc0038I Round again with cutoff of -206.212
Cbc0038I Pass  31: suminf.    0.12668 (2) obj. -206.212 iterations 1
Cbc0038I Pass  32: suminf.    0.78519 (2) obj. -206.212 iterations 1
Cbc0038I Pass  33: suminf.    0.78519 (2) obj. -206.212 iterations 1
Cbc0038I Pass  34: suminf.    0.37773 (2) obj. -220.755 iterations 6
Cbc0038I Pass  35: suminf.    0.37773 (2) obj. -220.755 iterations 1
Cbc0038I Pass  36: suminf.    0.83981 (2) obj. -206.212 iterations 5
Cbc0038I Pass  37: suminf.    0.49633 (2) obj. -206.212 iterations 2
Cbc0038I Pass  38: suminf.    0.83981 (2) obj. -206.212 iterations 1
Cbc0038I Pass  39: suminf.    3.19176 (9) obj. -206.212 iterations 8
Cbc0038I Pass  40: suminf.    1.80683 (8) obj. -206.212 iterations 2
Cbc0038I Pass  41: suminf.    1.75635 (7) obj. -206.212 iterations 3
Cbc0038I Pass  42: suminf.    0.65698 (3) obj. -206.212 iterations 6
Cbc0038I Pass  43: suminf.    0.47305 (2) obj. -206.212 iterations 2
Cbc0038I Pass  44: suminf.    0.41830 (2) obj. -206.212 iterations 3
Cbc0038I Pass  45: suminf.    0.20813 (2) obj. -206.212 iterations 1
Cbc0038I Pass  46: suminf.    0.66037 (2) obj. -206.212 iterations 1
Cbc0038I Pass  47: suminf.    0.60906 (3) obj. -206.212 iterations 8
Cbc0038I Pass  48: suminf.    0.60906 (3) obj. -206.212 iterations 1
Cbc0038I Pass  49: suminf.    1.04324 (4) obj. -206.212 iterations 5
Cbc0038I Pass  50: suminf.    1.04324 (4) obj. -206.212 iterations 0
Cbc0038I Pass  51: suminf.    0.97327 (3) obj. -206.212 iterations 3
Cbc0038I Pass  52: suminf.    0.97327 (3) obj. -206.212 iterations 0
Cbc0038I Pass  53: suminf.    0.96155 (3) obj. -206.212 iterations 2
Cbc0038I Pass  54: suminf.    0.91503 (4) obj. -206.212 iterations 2
Cbc0038I Pass  55: suminf.    0.42076 (2) obj. -206.212 iterations 4
Cbc0038I Pass  56: suminf.    0.31683 (2) obj. -214.26 iterations 1
Cbc0038I Pass  57: suminf.    0.57563 (3) obj. -206.212 iterations 5
Cbc0038I Pass  58: suminf.    0.21782 (2) obj. -221.927 iterations 3
Cbc0038I Pass  59: suminf.    0.42076 (2) obj. -206.212 iterations 1
Cbc0038I Pass  60: suminf.    0.42076 (2) obj. -206.212 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -198.732 - took 0.05 seconds
Cbc0012I Integer solution of -198.7323 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 29 columns, reduced to 8 rows 7 columns
Cbc0031I 8 added rows had average density of 18.75
Cbc0013I At root node, 8 cuts changed objective from -236.12884 to -214.99307 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 269 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 377 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -198.7323, took 1789 iterations and 26 nodes (0.18 seconds)
Cbc0032I Strong branching done 204 times (945 iterations), fathomed 8 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-23) rows, 48 (-14) columns and 432 (-214) elements
Clp1000I sum of infeasibilities 5.67386e-08 - average 1.41847e-09, 28 fixed columns
Coin0506I Presolve 15 (-25) rows, 20 (-28) columns and 64 (-368) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 231.16005
Clp0000I Optimal - objective value 231.16005
Coin0511I After Postsolve, objective 231.16005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2457779 - largest nonzero change 0 ( 0%) - largest zero change 2.5125714e-05
Clp0000I Optimal - objective value 254.03562
Clp0000I Optimal - objective value 254.03562
Clp0000I Optimal - objective value 254.03562
Coin0511I After Postsolve, objective 254.03562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 254.0356227 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 48 columns (48 integer (48 of which binary)) and 436 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.321%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.6479
Cbc0038I Pass   1: suminf.    0.94744 (7) obj. -118.948 iterations 13
Cbc0038I Pass   2: suminf.    0.94744 (7) obj. -118.948 iterations 0
Cbc0038I Solution found of -110.556
Cbc0038I Rounding solution of -175.907 is better than previous of -110.556

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -181.816
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.19501 (8) obj. -181.816 iterations 1
Cbc0038I Pass   4: suminf.    2.19501 (8) obj. -181.816 iterations 0
Cbc0038I Pass   5: suminf.    0.36211 (1) obj. -181.816 iterations 9
Cbc0038I Pass   6: suminf.    0.35556 (1) obj. -182.549 iterations 1
Cbc0038I Pass   7: suminf.    0.73296 (7) obj. -181.816 iterations 6
Cbc0038I Pass   8: suminf.    0.48937 (4) obj. -181.816 iterations 5
Cbc0038I Pass   9: suminf.    0.27778 (1) obj. -185.301 iterations 7
Cbc0038I Pass  10: suminf.    0.24658 (1) obj. -181.816 iterations 2
Cbc0038I Pass  11: suminf.    0.27778 (1) obj. -185.301 iterations 1
Cbc0038I Pass  12: suminf.    1.92963 (7) obj. -181.816 iterations 14
Cbc0038I Pass  13: suminf.    1.30902 (7) obj. -181.816 iterations 4
Cbc0038I Pass  14: suminf.    0.72254 (2) obj. -181.816 iterations 9
Cbc0038I Pass  15: suminf.    0.61425 (2) obj. -181.816 iterations 2
Cbc0038I Pass  16: suminf.    0.71429 (2) obj. -211.688 iterations 2
Cbc0038I Pass  17: suminf.    0.40295 (3) obj. -181.816 iterations 2
Cbc0038I Pass  18: suminf.    0.64645 (2) obj. -181.816 iterations 3
Cbc0038I Pass  19: suminf.    0.33977 (1) obj. -181.816 iterations 1
Cbc0038I Pass  20: suminf.    0.45568 (2) obj. -194.742 iterations 2
Cbc0038I Pass  21: suminf.    2.59632 (6) obj. -181.816 iterations 8
Cbc0038I Pass  22: suminf.    1.29056 (3) obj. -181.816 iterations 7
Cbc0038I Pass  23: suminf.    0.42983 (1) obj. -181.816 iterations 3
Cbc0038I Pass  24: suminf.    0.42500 (1) obj. -194.635 iterations 2
Cbc0038I Pass  25: suminf.    2.12153 (7) obj. -181.816 iterations 12
Cbc0038I Pass  26: suminf.    1.62494 (6) obj. -181.816 iterations 3
Cbc0038I Pass  27: suminf.    0.27742 (2) obj. -181.816 iterations 5
Cbc0038I Pass  28: suminf.    0.17500 (1) obj. -189.91 iterations 2
Cbc0038I Pass  29: suminf.    0.26666 (1) obj. -181.816 iterations 2
Cbc0038I Pass  30: suminf.    2.32504 (14) obj. -181.816 iterations 20
Cbc0038I Pass  31: suminf.    1.96701 (12) obj. -181.816 iterations 4
Cbc0038I Pass  32: suminf.    0.27507 (2) obj. -181.816 iterations 16
Cbc0038I Rounding solution of -185.891 is better than previous of -175.907

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 48 columns, reduced to 30 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -185.891 to -198.56 (0.07 seconds)
Cbc0038I Round again with cutoff of -205.848
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.91068 (9) obj. -205.848 iterations 1
Cbc0038I Pass  33: suminf.    2.91068 (9) obj. -205.848 iterations 0
Cbc0038I Pass  34: suminf.    0.83805 (2) obj. -205.848 iterations 11
Cbc0038I Pass  35: suminf.    0.69941 (2) obj. -205.848 iterations 1
Cbc0038I Pass  36: suminf.    1.58669 (9) obj. -205.848 iterations 11
Cbc0038I Pass  37: suminf.    0.67516 (5) obj. -205.848 iterations 3
Cbc0038I Pass  38: suminf.    1.43892 (4) obj. -205.848 iterations 10
Cbc0038I Pass  39: suminf.    0.98849 (2) obj. -205.848 iterations 3
Cbc0038I Pass  40: suminf.    0.98849 (2) obj. -205.848 iterations 0
Cbc0038I Pass  41: suminf.    0.97619 (2) obj. -206.739 iterations 1
Cbc0038I Pass  42: suminf.    0.96649 (2) obj. -205.848 iterations 1
Cbc0038I Pass  43: suminf.    1.29391 (8) obj. -205.848 iterations 7
Cbc0038I Pass  44: suminf.    0.92516 (5) obj. -205.848 iterations 6
Cbc0038I Pass  45: suminf.    0.72360 (3) obj. -205.848 iterations 12
Cbc0038I Pass  46: suminf.    0.59395 (3) obj. -219.777 iterations 1
Cbc0038I Pass  47: suminf.    0.54133 (2) obj. -205.848 iterations 2
Cbc0038I Pass  48: suminf.    0.54133 (2) obj. -205.848 iterations 0
Cbc0038I Pass  49: suminf.    2.62955 (9) obj. -205.848 iterations 11
Cbc0038I Pass  50: suminf.    1.32462 (4) obj. -205.848 iterations 6
Cbc0038I Pass  51: suminf.    1.32462 (4) obj. -205.848 iterations 2
Cbc0038I Pass  52: suminf.    0.78144 (2) obj. -205.848 iterations 3
Cbc0038I Pass  53: suminf.    0.77645 (2) obj. -205.848 iterations 1
Cbc0038I Pass  54: suminf.    1.52490 (8) obj. -205.848 iterations 8
Cbc0038I Pass  55: suminf.    1.42318 (7) obj. -205.848 iterations 6
Cbc0038I Pass  56: suminf.    0.14661 (2) obj. -214.298 iterations 11
Cbc0038I Pass  57: suminf.    0.04635 (2) obj. -205.848 iterations 1
Cbc0038I Pass  58: suminf.    0.69986 (2) obj. -205.848 iterations 2
Cbc0038I Pass  59: suminf.    0.69986 (2) obj. -205.848 iterations 0
Cbc0038I Pass  60: suminf.    0.74470 (2) obj. -222.189 iterations 1
Cbc0038I Pass  61: suminf.    0.56677 (2) obj. -205.848 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 48 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -198.56 - took 0.08 seconds
Cbc0012I Integer solution of -198.5597 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 38 rows 48 columns, reduced to 5 rows 5 columns
Cbc0031I 18 added rows had average density of 10.611111
Cbc0013I At root node, 18 cuts changed objective from -234.99838 to -212.00752 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 142 row cuts average 2.5 elements, 7 column cuts (7 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 259 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -198.5597 best solution, best possible -212.00752 (1.51 seconds)
Cbc0004I Integer solution of -198.7323 found after 907 iterations and 8 nodes (1.83 seconds)
Cbc0010I After 18 nodes, 3 on tree, -198.7323 best solution, best possible -212.00752 (2.30 seconds)
Cbc0010I After 30 nodes, 2 on tree, -198.7323 best solution, best possible -207.95426 (3.03 seconds)
Cbc0001I Search completed - best objective -198.7323, took 1548 iterations and 32 nodes (3.16 seconds)
Cbc0032I Strong branching done 288 times (1462 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 37 variables fixed on reduced cost
Total time (CPU seconds):       1.92   (Wallclock seconds):       3.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 29 (-4) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 2.24884e-05 - average 4.58946e-07, 4 fixed columns
Coin0506I Presolve 39 (-10) rows, 24 (-5) columns and 118 (-30) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Coin0511I After Postsolve, objective 237.68876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Coin0511I After Postsolve, objective 237.68876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 237.6887623 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 29 columns (28 integer (28 of which binary)) and 156 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.851%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.62191
Cbc0038I Pass   1: suminf.    0.04211 (1) obj. -199.587 iterations 9
Cbc0038I Solution found of -123.221
Cbc0038I Relaxing continuous gives -123.221
Cbc0038I Rounding solution of -152.022 is better than previous of -123.221

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -152.022 to -186.27 (0.01 seconds)
Cbc0038I Round again with cutoff of -191.256
Cbc0038I Pass   2: suminf.    0.04211 (1) obj. -199.587 iterations 0
Cbc0038I Pass   3: suminf.    0.80954 (2) obj. -191.256 iterations 3
Cbc0038I Pass   4: suminf.    0.43271 (2) obj. -230.181 iterations 2
Cbc0038I Pass   5: suminf.    0.58398 (2) obj. -224.947 iterations 4
Cbc0038I Pass   6: suminf.    0.18947 (1) obj. -204.75 iterations 2
Cbc0038I Pass   7: suminf.    0.61462 (2) obj. -191.256 iterations 3
Cbc0038I Pass   8: suminf.    0.41830 (2) obj. -222.673 iterations 2
Cbc0038I Pass   9: suminf.    2.49453 (7) obj. -191.256 iterations 8
Cbc0038I Pass  10: suminf.    0.82091 (2) obj. -191.256 iterations 6
Cbc0038I Pass  11: suminf.    0.82091 (2) obj. -191.256 iterations 0
Cbc0038I Pass  12: suminf.    0.33894 (2) obj. -191.256 iterations 1
Cbc0038I Pass  13: suminf.    1.35154 (4) obj. -191.256 iterations 8
Cbc0038I Pass  14: suminf.    1.28218 (4) obj. -191.256 iterations 2
Cbc0038I Pass  15: suminf.    0.71768 (2) obj. -191.256 iterations 4
Cbc0038I Pass  16: suminf.    0.62376 (2) obj. -202.141 iterations 1
Cbc0038I Pass  17: suminf.    0.53124 (2) obj. -191.256 iterations 2
Cbc0038I Pass  18: suminf.    0.53124 (2) obj. -191.256 iterations 0
Cbc0038I Pass  19: suminf.    2.17606 (6) obj. -191.256 iterations 5
Cbc0038I Pass  20: suminf.    1.75568 (5) obj. -191.256 iterations 5
Cbc0038I Pass  21: suminf.    0.53124 (2) obj. -191.256 iterations 6
Cbc0038I Pass  22: suminf.    0.53124 (2) obj. -191.256 iterations 0
Cbc0038I Pass  23: suminf.    0.61378 (2) obj. -191.256 iterations 1
Cbc0038I Pass  24: suminf.    1.00600 (5) obj. -191.256 iterations 7
Cbc0038I Pass  25: suminf.    0.47629 (2) obj. -191.256 iterations 6
Cbc0038I Pass  26: suminf.    0.72263 (2) obj. -210.724 iterations 1
Cbc0038I Pass  27: suminf.    0.31458 (2) obj. -191.256 iterations 6
Cbc0038I Pass  28: suminf.    0.31458 (2) obj. -191.256 iterations 0
Cbc0038I Pass  29: suminf.    0.80902 (2) obj. -191.256 iterations 2
Cbc0038I Pass  30: suminf.    0.80902 (2) obj. -191.256 iterations 0
Cbc0038I Pass  31: suminf.    0.61066 (2) obj. -214.445 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -186.27 to -198.732 (0.02 seconds)
Cbc0038I Round again with cutoff of -206.212
Cbc0038I Pass  31: suminf.    0.12668 (2) obj. -206.212 iterations 1
Cbc0038I Pass  32: suminf.    0.78519 (2) obj. -206.212 iterations 1
Cbc0038I Pass  33: suminf.    0.78519 (2) obj. -206.212 iterations 1
Cbc0038I Pass  34: suminf.    0.37773 (2) obj. -220.755 iterations 6
Cbc0038I Pass  35: suminf.    0.37773 (2) obj. -220.755 iterations 1
Cbc0038I Pass  36: suminf.    0.83981 (2) obj. -206.212 iterations 5
Cbc0038I Pass  37: suminf.    0.49633 (2) obj. -206.212 iterations 2
Cbc0038I Pass  38: suminf.    0.83981 (2) obj. -206.212 iterations 1
Cbc0038I Pass  39: suminf.    3.19176 (9) obj. -206.212 iterations 8
Cbc0038I Pass  40: suminf.    1.80683 (8) obj. -206.212 iterations 2
Cbc0038I Pass  41: suminf.    1.75635 (7) obj. -206.212 iterations 3
Cbc0038I Pass  42: suminf.    0.65698 (3) obj. -206.212 iterations 6
Cbc0038I Pass  43: suminf.    0.47305 (2) obj. -206.212 iterations 2
Cbc0038I Pass  44: suminf.    0.41830 (2) obj. -206.212 iterations 3
Cbc0038I Pass  45: suminf.    0.20813 (2) obj. -206.212 iterations 1
Cbc0038I Pass  46: suminf.    0.66037 (2) obj. -206.212 iterations 1
Cbc0038I Pass  47: suminf.    0.60906 (3) obj. -206.212 iterations 8
Cbc0038I Pass  48: suminf.    0.60906 (3) obj. -206.212 iterations 1
Cbc0038I Pass  49: suminf.    1.04324 (4) obj. -206.212 iterations 5
Cbc0038I Pass  50: suminf.    1.04324 (4) obj. -206.212 iterations 0
Cbc0038I Pass  51: suminf.    0.97327 (3) obj. -206.212 iterations 3
Cbc0038I Pass  52: suminf.    0.97327 (3) obj. -206.212 iterations 0
Cbc0038I Pass  53: suminf.    0.96155 (3) obj. -206.212 iterations 2
Cbc0038I Pass  54: suminf.    0.91503 (4) obj. -206.212 iterations 2
Cbc0038I Pass  55: suminf.    0.42076 (2) obj. -206.212 iterations 4
Cbc0038I Pass  56: suminf.    0.31683 (2) obj. -214.26 iterations 1
Cbc0038I Pass  57: suminf.    0.57563 (3) obj. -206.212 iterations 5
Cbc0038I Pass  58: suminf.    0.21782 (2) obj. -221.927 iterations 3
Cbc0038I Pass  59: suminf.    0.42076 (2) obj. -206.212 iterations 1
Cbc0038I Pass  60: suminf.    0.42076 (2) obj. -206.212 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -198.732 - took 0.03 seconds
Cbc0012I Integer solution of -198.7323 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 29 columns, reduced to 8 rows 7 columns
Cbc0031I 8 added rows had average density of 18.75
Cbc0013I At root node, 8 cuts changed objective from -236.12884 to -214.99307 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 269 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 377 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -198.7323, took 1789 iterations and 26 nodes (0.20 seconds)
Cbc0032I Strong branching done 204 times (945 iterations), fathomed 8 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 46 (-17) columns and 399 (-250) elements
Clp1000I sum of infeasibilities 7.00573e-08 - average 1.79634e-09, 25 fixed columns
Coin0506I Presolve 17 (-22) rows, 21 (-25) columns and 71 (-328) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 1.4707153 - largest nonzero change 0 ( 0%) - largest zero change 2.897906e-05
Clp0000I Optimal - objective value 231.16005
Clp0000I Optimal - objective value 231.16005
Coin0511I After Postsolve, objective 231.16005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3551258 - largest nonzero change 0 ( 0%) - largest zero change 2.5580424e-05
Clp0000I Optimal - objective value 254.03562
Clp0000I Optimal - objective value 254.03562
Clp0000I Optimal - objective value 254.03562
Coin0511I After Postsolve, objective 254.03562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 254.0356227 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 47 columns (47 integer (47 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.802%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.30435
Cbc0038I Pass   1: suminf.    0.89518 (6) obj. -117.99 iterations 14
Cbc0038I Pass   2: suminf.    0.89518 (6) obj. -117.99 iterations 0
Cbc0038I Solution found of -110.556
Cbc0038I Rounding solution of -175.907 is better than previous of -110.556

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -181.74
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.37784 (8) obj. -181.74 iterations 2
Cbc0038I Pass   4: suminf.    2.22726 (8) obj. -181.74 iterations 1
Cbc0038I Pass   5: suminf.    0.38032 (2) obj. -181.74 iterations 7
Cbc0038I Pass   6: suminf.    0.57557 (2) obj. -181.74 iterations 2
Cbc0038I Pass   7: suminf.    0.35556 (1) obj. -182.549 iterations 2
Cbc0038I Pass   8: suminf.    0.36280 (1) obj. -181.74 iterations 1
Cbc0038I Pass   9: suminf.    1.16620 (5) obj. -181.74 iterations 11
Cbc0038I Pass  10: suminf.    0.62879 (3) obj. -181.74 iterations 5
Cbc0038I Pass  11: suminf.    0.69583 (2) obj. -203.919 iterations 2
Cbc0038I Pass  12: suminf.    0.32589 (1) obj. -181.74 iterations 3
Cbc0038I Pass  13: suminf.    0.34444 (1) obj. -183.813 iterations 1
Cbc0038I Pass  14: suminf.    1.76323 (7) obj. -181.74 iterations 12
Cbc0038I Pass  15: suminf.    0.87842 (4) obj. -186.741 iterations 4
Cbc0038I Pass  16: suminf.    0.31874 (3) obj. -181.74 iterations 8
Cbc0038I Pass  17: suminf.    0.11429 (1) obj. -183.796 iterations 4
Cbc0038I Pass  18: suminf.    1.28650 (5) obj. -181.74 iterations 7
Cbc0038I Pass  19: suminf.    0.87713 (4) obj. -181.74 iterations 4
Cbc0038I Pass  20: suminf.    0.86349 (4) obj. -181.74 iterations 1
Cbc0038I Pass  21: suminf.    0.31662 (2) obj. -181.74 iterations 4
Cbc0038I Pass  22: suminf.    0.31662 (2) obj. -181.74 iterations 0
Cbc0038I Pass  23: suminf.    0.45713 (3) obj. -181.74 iterations 2
Cbc0038I Pass  24: suminf.    0.22333 (2) obj. -186.022 iterations 13
Cbc0038I Pass  25: suminf.    0.17579 (2) obj. -181.74 iterations 4
Cbc0038I Pass  26: suminf.    0.15000 (1) obj. -183.463 iterations 2
Cbc0038I Pass  27: suminf.    0.10315 (1) obj. -181.74 iterations 2
Cbc0038I Pass  28: suminf.    0.13333 (1) obj. -185.112 iterations 1
Cbc0038I Pass  29: suminf.    1.73021 (10) obj. -181.74 iterations 20
Cbc0038I Pass  30: suminf.    1.69155 (10) obj. -181.74 iterations 5
Cbc0038I Pass  31: suminf.    0.93787 (2) obj. -181.74 iterations 10
Cbc0038I Pass  32: suminf.    0.44344 (2) obj. -181.74 iterations 2
Cbc0038I Rounding solution of -177.228 is better than previous of -175.907

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 47 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -177.228 to -198.732 (0.05 seconds)
Cbc0038I Round again with cutoff of -205.833
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.97957 (8) obj. -205.833 iterations 0
Cbc0038I Pass  33: suminf.    2.56381 (8) obj. -205.833 iterations 1
Cbc0038I Pass  34: suminf.    0.73463 (2) obj. -205.833 iterations 7
Cbc0038I Pass  35: suminf.    0.83789 (2) obj. -205.833 iterations 2
Cbc0038I Pass  36: suminf.    0.69919 (2) obj. -205.833 iterations 1
Cbc0038I Pass  37: suminf.    1.41049 (6) obj. -205.833 iterations 10
Cbc0038I Pass  38: suminf.    1.07837 (5) obj. -205.833 iterations 3
Cbc0038I Pass  39: suminf.    0.38614 (2) obj. -208.577 iterations 6
Cbc0038I Pass  40: suminf.    0.35070 (2) obj. -205.833 iterations 1
Cbc0038I Pass  41: suminf.    0.74207 (3) obj. -205.833 iterations 4
Cbc0038I Pass  42: suminf.    0.46409 (2) obj. -205.833 iterations 3
Cbc0038I Pass  43: suminf.    0.44942 (2) obj. -205.833 iterations 3
Cbc0038I Pass  44: suminf.    0.43659 (2) obj. -205.833 iterations 1
Cbc0038I Pass  45: suminf.    0.47525 (2) obj. -208.827 iterations 1
Cbc0038I Pass  46: suminf.    5.56614 (14) obj. -205.833 iterations 11
Cbc0038I Pass  47: suminf.    2.98071 (9) obj. -205.833 iterations 12
Cbc0038I Pass  48: suminf.    2.21060 (7) obj. -205.833 iterations 2
Cbc0038I Pass  49: suminf.    0.19606 (2) obj. -212.733 iterations 9
Cbc0038I Pass  50: suminf.    0.09250 (1) obj. -205.833 iterations 3
Cbc0038I Pass  51: suminf.    0.16667 (1) obj. -214.118 iterations 1
Cbc0038I Pass  52: suminf.    1.49475 (5) obj. -205.833 iterations 8
Cbc0038I Pass  53: suminf.    1.20918 (4) obj. -205.833 iterations 4
Cbc0038I Pass  54: suminf.    0.69967 (2) obj. -205.833 iterations 6
Cbc0038I Pass  55: suminf.    0.69967 (2) obj. -205.833 iterations 1
Cbc0038I Pass  56: suminf.    0.81188 (2) obj. -214.522 iterations 2
Cbc0038I Pass  57: suminf.    2.44270 (8) obj. -205.833 iterations 9
Cbc0038I Pass  58: suminf.    0.86944 (4) obj. -205.833 iterations 7
Cbc0038I Pass  59: suminf.    0.69333 (2) obj. -205.833 iterations 6
Cbc0038I Pass  60: suminf.    0.50614 (2) obj. -205.833 iterations 1
Cbc0038I Pass  61: suminf.    2.91275 (10) obj. -205.833 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 47 columns, reduced to 30 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -198.732 - took 0.06 seconds
Cbc0012I Integer solution of -198.7323 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 38 rows 47 columns, reduced to 16 rows 17 columns
Cbc0031I 15 added rows had average density of 7.6666667
Cbc0013I At root node, 15 cuts changed objective from -234.23488 to -211.63305 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 157 row cuts average 2.0 elements, 7 column cuts (7 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 294 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 50 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -198.7323 best solution, best possible -211.63305 (1.47 seconds)
Cbc0010I After 15 nodes, 3 on tree, -198.7323 best solution, best possible -211.54776 (2.20 seconds)
Cbc0001I Search completed - best objective -198.7323, took 1552 iterations and 24 nodes (2.55 seconds)
Cbc0032I Strong branching done 270 times (1142 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 43 variables fixed on reduced cost
Total time (CPU seconds):       1.63   (Wallclock seconds):       2.56

