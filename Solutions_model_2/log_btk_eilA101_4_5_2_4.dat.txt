Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 6.06103e-06 - average 3.29404e-08, 22 fixed columns
Coin0506I Presolve 141 (-43) rows, 79 (-22) columns and 432 (-130) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 2.4151026 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 33.679347
Clp0000I Optimal - objective value 33.679347
Coin0511I After Postsolve, objective 33.679347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.679347
Clp0000I Optimal - objective value 33.679347
Clp0000I Optimal - objective value 33.679347
Coin0511I After Postsolve, objective 33.679347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.67934707 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.3879
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.0952 iterations 68
Cbc0038I Solution found of 14.0952
Cbc0038I Relaxing continuous gives 14.0952
Cbc0038I Rounding solution of 3.96913 is better than previous of 14.0952

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 3.96913 to -2.11605 (0.07 seconds)
Cbc0038I Round again with cutoff of -5.27247
Cbc0038I Pass   2: suminf.    3.34715 (15) obj. -5.27247 iterations 18
Cbc0038I Pass   3: suminf.    1.54641 (7) obj. -5.27247 iterations 17
Cbc0038I Pass   4: suminf.    0.86618 (6) obj. -5.27247 iterations 2
Cbc0038I Pass   5: suminf.    0.86618 (6) obj. -5.27247 iterations 0
Cbc0038I Pass   6: suminf.    1.86434 (6) obj. -5.27247 iterations 6
Cbc0038I Pass   7: suminf.    1.42347 (7) obj. -5.27247 iterations 4
Cbc0038I Pass   8: suminf.    2.27404 (7) obj. -5.27247 iterations 7
Cbc0038I Pass   9: suminf.    1.18371 (7) obj. -5.27247 iterations 4
Cbc0038I Pass  10: suminf.    1.18371 (7) obj. -5.27247 iterations 0
Cbc0038I Pass  11: suminf.    2.51696 (7) obj. -5.27247 iterations 10
Cbc0038I Pass  12: suminf.    2.47760 (7) obj. -5.27247 iterations 2
Cbc0038I Pass  13: suminf.    1.51257 (8) obj. -5.27247 iterations 7
Cbc0038I Pass  14: suminf.    1.42347 (7) obj. -5.27247 iterations 1
Cbc0038I Pass  15: suminf.    2.27404 (7) obj. -5.27247 iterations 7
Cbc0038I Pass  16: suminf.    1.18371 (7) obj. -5.27247 iterations 4
Cbc0038I Pass  17: suminf.    1.18371 (7) obj. -5.27247 iterations 0
Cbc0038I Pass  18: suminf.    2.51696 (7) obj. -5.27247 iterations 10
Cbc0038I Pass  19: suminf.    2.47760 (7) obj. -5.27247 iterations 2
Cbc0038I Pass  20: suminf.    1.51257 (8) obj. -5.27247 iterations 7
Cbc0038I Pass  21: suminf.    1.42347 (7) obj. -5.27247 iterations 1
Cbc0038I Pass  22: suminf.    2.27404 (7) obj. -5.27247 iterations 7
Cbc0038I Pass  23: suminf.    1.18371 (7) obj. -5.27247 iterations 4
Cbc0038I Pass  24: suminf.    1.18371 (7) obj. -5.27247 iterations 0
Cbc0038I Pass  25: suminf.    2.51696 (7) obj. -5.27247 iterations 10
Cbc0038I Pass  26: suminf.    2.47760 (7) obj. -5.27247 iterations 2
Cbc0038I Pass  27: suminf.    1.51257 (8) obj. -5.27247 iterations 7
Cbc0038I Pass  28: suminf.    1.42347 (7) obj. -5.27247 iterations 1
Cbc0038I Pass  29: suminf.    2.27404 (7) obj. -5.27247 iterations 7
Cbc0038I Pass  30: suminf.    1.18371 (7) obj. -5.27247 iterations 4
Cbc0038I Pass  31: suminf.    1.18371 (7) obj. -5.27247 iterations 0
Cbc0038I Rounding solution of -2.55192 is better than previous of -2.11605

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -10.9538
Cbc0038I Pass  31: suminf.    4.60578 (17) obj. -10.9538 iterations 3
Cbc0038I Pass  32: suminf.    1.50184 (9) obj. -10.9538 iterations 19
Cbc0038I Pass  33: suminf.    1.50184 (9) obj. -10.9538 iterations 1
Cbc0038I Pass  34: suminf.    2.27151 (7) obj. -10.9538 iterations 8
Cbc0038I Pass  35: suminf.    1.50931 (7) obj. -10.9538 iterations 3
Cbc0038I Pass  36: suminf.    1.50242 (7) obj. -10.9538 iterations 1
Cbc0038I Pass  37: suminf.    2.52772 (7) obj. -10.9538 iterations 7
Cbc0038I Pass  38: suminf.    2.05316 (6) obj. -10.9538 iterations 3
Cbc0038I Pass  39: suminf.    1.93423 (7) obj. -10.9538 iterations 3
Cbc0038I Pass  40: suminf.    1.76951 (7) obj. -10.9538 iterations 1
Cbc0038I Pass  41: suminf.    3.06225 (8) obj. -10.9538 iterations 5
Cbc0038I Pass  42: suminf.    2.82556 (8) obj. -10.9538 iterations 2
Cbc0038I Pass  43: suminf.    2.82556 (8) obj. -10.9538 iterations 1
Cbc0038I Pass  44: suminf.    2.36902 (8) obj. -10.9538 iterations 11
Cbc0038I Pass  45: suminf.    2.07888 (8) obj. -10.9538 iterations 2
Cbc0038I Pass  46: suminf.    3.21128 (8) obj. -10.9538 iterations 6
Cbc0038I Pass  47: suminf.    2.92368 (9) obj. -10.9538 iterations 4
Cbc0038I Pass  48: suminf.    2.92368 (9) obj. -10.9538 iterations 0
Cbc0038I Pass  49: suminf.    2.52071 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  50: suminf.    1.79801 (7) obj. -10.9538 iterations 2
Cbc0038I Pass  51: suminf.    1.79801 (7) obj. -10.9538 iterations 0
Cbc0038I Pass  52: suminf.    2.92368 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  53: suminf.    2.92368 (9) obj. -10.9538 iterations 1
Cbc0038I Pass  54: suminf.    2.52071 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  55: suminf.    1.79801 (7) obj. -10.9538 iterations 2
Cbc0038I Pass  56: suminf.    1.79801 (7) obj. -10.9538 iterations 0
Cbc0038I Pass  57: suminf.    2.92368 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  58: suminf.    2.92368 (9) obj. -10.9538 iterations 1
Cbc0038I Pass  59: suminf.    2.52071 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  60: suminf.    1.79801 (7) obj. -10.9538 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -2.55192 - took 0.16 seconds
Cbc0012I Integer solution of -2.551917 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 87 rows 51 columns
Cbc0031I 25 added rows had average density of 77.68
Cbc0013I At root node, 25 cuts changed objective from -33.679347 to -26.078149 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15007 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2119 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.551917 best solution, best possible -26.078149 (1.26 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 25 rows 26 columns
Cbc0012I Integer solution of -2.977537 found by RINS after 10612 iterations and 41 nodes (1.55 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 32 rows 28 columns
Cbc0012I Integer solution of -3.21324 found by rounding after 12810 iterations and 115 nodes (1.76 seconds)
Cbc0012I Integer solution of -3.51881 found by rounding after 13029 iterations and 125 nodes (1.77 seconds)
Cbc0001I Search completed - best objective -3.518810000000002, took 13521 iterations and 138 nodes (1.79 seconds)
Cbc0032I Strong branching done 1472 times (26996 iterations), fathomed 8 nodes and fixed 53 variables
Cbc0035I Maximum depth 39, 393 variables fixed on reduced cost
Total time (CPU seconds):       1.75   (Wallclock seconds):       1.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-79) rows, 141 (-61) columns and 2707 (-2946) elements
Clp1000I sum of infeasibilities 2.5181e-07 - average 2.01448e-09, 38 fixed columns
Coin0506I Presolve 91 (-34) rows, 103 (-38) columns and 1635 (-1072) elements
Clp0006I 0  Obj 35.183367 Dual inf 5.09726 (103)
Clp0029I End of values pass after 103 iterations
Clp0014I Perturbing problem by 0.001% of 2.45985 - largest nonzero change 2.1235175e-05 ( 0.0015420975%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 51.316497
Clp0000I Optimal - objective value 51.316497
Coin0511I After Postsolve, objective 51.316497, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.316497
Clp0000I Optimal - objective value 51.316497
Clp0000I Optimal - objective value 51.316497
Clp0000I Optimal - objective value 51.316497
Coin0511I After Postsolve, objective 51.316497, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.31649731 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 142 columns (142 integer (142 of which binary)) and 2713 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.252%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.73166
Cbc0038I Pass   1: suminf.    3.52551 (36) obj. -25.5556 iterations 23
Cbc0038I Pass   2: suminf.    3.52551 (36) obj. -25.5556 iterations 1
Cbc0038I Pass   3: suminf.    1.73539 (20) obj. -2.56462 iterations 16
Cbc0038I Solution found of 17.5091
Cbc0038I Rounding solution of 11.6029 is better than previous of 17.5091

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 142 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 11.6029 to -0.69514 (0.04 seconds)
Cbc0038I Round again with cutoff of -4.94377
Cbc0038I Pass   4: suminf.    3.52551 (36) obj. -25.5556 iterations 0
Cbc0038I Pass   5: suminf.    3.52551 (36) obj. -25.5556 iterations 1
Cbc0038I Pass   6: suminf.    1.72234 (16) obj. -4.94377 iterations 29
Cbc0038I Pass   7: suminf.    1.72234 (16) obj. -4.94377 iterations 0
Cbc0038I Pass   8: suminf.    0.98326 (5) obj. -4.94377 iterations 20
Cbc0038I Pass   9: suminf.    0.73485 (3) obj. -7.0209 iterations 2
Cbc0038I Pass  10: suminf.    0.18463 (2) obj. -4.94377 iterations 7
Cbc0038I Pass  11: suminf.    0.15220 (2) obj. -4.94377 iterations 1
Cbc0038I Pass  12: suminf.    2.92938 (18) obj. -4.94377 iterations 43
Cbc0038I Pass  13: suminf.    2.68496 (16) obj. -4.94377 iterations 10
Cbc0038I Pass  14: suminf.    2.02190 (8) obj. -4.94377 iterations 26
Cbc0038I Pass  15: suminf.    1.13800 (6) obj. -4.94377 iterations 11
Cbc0038I Pass  16: suminf.    0.95955 (5) obj. -4.94377 iterations 13
Cbc0038I Pass  17: suminf.    0.95955 (5) obj. -4.94377 iterations 0
Cbc0038I Pass  18: suminf.    0.72116 (3) obj. -4.94377 iterations 15
Cbc0038I Pass  19: suminf.    0.65339 (3) obj. -5.24014 iterations 3
Cbc0038I Pass  20: suminf.    0.93455 (3) obj. -4.94377 iterations 7
Cbc0038I Pass  21: suminf.    0.93455 (3) obj. -4.94377 iterations 3
Cbc0038I Pass  22: suminf.    0.95553 (3) obj. -4.94377 iterations 4
Cbc0038I Pass  23: suminf.    0.79384 (3) obj. -5.64677 iterations 3
Cbc0038I Pass  24: suminf.    2.00769 (12) obj. -4.94377 iterations 26
Cbc0038I Pass  25: suminf.    1.02406 (7) obj. -5.59558 iterations 11
Cbc0038I Pass  26: suminf.    1.55108 (6) obj. -4.94377 iterations 11
Cbc0038I Pass  27: suminf.    1.55108 (6) obj. -4.94377 iterations 3
Cbc0038I Pass  28: suminf.    0.93455 (3) obj. -4.94377 iterations 8
Cbc0038I Pass  29: suminf.    0.93455 (3) obj. -4.94377 iterations 3
Cbc0038I Pass  30: suminf.    0.95553 (3) obj. -4.94377 iterations 4
Cbc0038I Pass  31: suminf.    0.79384 (3) obj. -5.64677 iterations 3
Cbc0038I Pass  32: suminf.    0.93455 (3) obj. -4.94377 iterations 6
Cbc0038I Pass  33: suminf.    2.14405 (12) obj. -4.94377 iterations 33
Cbc0038I Rounding solution of -2.01163 is better than previous of -0.69514

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 142 columns, reduced to 7 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -12.5911
Cbc0038I Pass  33: suminf.    3.52551 (36) obj. -25.5556 iterations 0
Cbc0038I Pass  34: suminf.    3.52551 (36) obj. -25.5556 iterations 1
Cbc0038I Pass  35: suminf.    2.62217 (14) obj. -12.5911 iterations 39
Cbc0038I Pass  36: suminf.    2.53001 (12) obj. -14.2257 iterations 4
Cbc0038I Pass  37: suminf.    1.14692 (11) obj. -12.5911 iterations 35
Cbc0038I Pass  38: suminf.    1.14321 (9) obj. -12.5911 iterations 2
Cbc0038I Pass  39: suminf.    1.11901 (9) obj. -12.5911 iterations 8
Cbc0038I Pass  40: suminf.    1.12139 (10) obj. -12.5911 iterations 5
Cbc0038I Pass  41: suminf.    1.14649 (10) obj. -12.5911 iterations 8
Cbc0038I Pass  42: suminf.    2.70543 (14) obj. -12.5911 iterations 31
Cbc0038I Pass  43: suminf.    2.39068 (14) obj. -12.5911 iterations 9
Cbc0038I Pass  44: suminf.    1.93142 (11) obj. -12.5911 iterations 14
Cbc0038I Pass  45: suminf.    1.89644 (11) obj. -12.5911 iterations 3
Cbc0038I Pass  46: suminf.    1.94805 (9) obj. -12.5911 iterations 16
Cbc0038I Pass  47: suminf.    1.51972 (8) obj. -12.7466 iterations 5
Cbc0038I Pass  48: suminf.    1.92441 (8) obj. -12.5911 iterations 7
Cbc0038I Pass  49: suminf.    1.92441 (8) obj. -12.5911 iterations 1
Cbc0038I Pass  50: suminf.    1.40032 (8) obj. -12.5911 iterations 10
Cbc0038I Pass  51: suminf.    1.40032 (8) obj. -12.5911 iterations 3
Cbc0038I Pass  52: suminf.    1.86732 (8) obj. -12.5911 iterations 9
Cbc0038I Pass  53: suminf.    1.86732 (8) obj. -12.5911 iterations 3
Cbc0038I Pass  54: suminf.    4.89561 (21) obj. -12.5911 iterations 32
Cbc0038I Pass  55: suminf.    3.70729 (20) obj. -12.5911 iterations 2
Cbc0038I Pass  56: suminf.    3.61759 (19) obj. -12.5911 iterations 1
Cbc0038I Pass  57: suminf.    2.47356 (13) obj. -12.5911 iterations 19
Cbc0038I Pass  58: suminf.    2.47356 (13) obj. -12.5911 iterations 1
Cbc0038I Pass  59: suminf.    1.77929 (8) obj. -12.5911 iterations 16
Cbc0038I Pass  60: suminf.    1.55463 (8) obj. -12.5911 iterations 7
Cbc0038I Pass  61: suminf.    1.59917 (8) obj. -12.5911 iterations 10
Cbc0038I Pass  62: suminf.    1.57471 (9) obj. -12.5911 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -2.01163 - took 0.06 seconds
Cbc0012I Integer solution of -2.01163 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 126 rows 142 columns, reduced to 2 rows 2 columns
Cbc0031I 59 added rows had average density of 40.881356
Cbc0013I At root node, 59 cuts changed objective from -43.180505 to -16.036948 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27421 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2208 row cuts average 140.0 elements, 0 column cuts (0 active)  in 0.195 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1053 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1561 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 71.4 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.266 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.01163 best solution, best possible -16.036948 (2.32 seconds)
Cbc0010I After 5 nodes, 4 on tree, -2.01163 best solution, best possible -14.496073 (3.03 seconds)
Cbc0012I Integer solution of -2.551917 found by rounding after 8325 iterations and 9 nodes (3.25 seconds)
Cbc0012I Integer solution of -2.9741 found by rounding after 8329 iterations and 10 nodes (3.26 seconds)
Cbc0016I Integer solution of -3.51881 found by strong branching after 8361 iterations and 14 nodes (3.26 seconds)
Cbc0038I Full problem 126 rows 142 columns, reduced to 43 rows 64 columns
Cbc0010I After 72 nodes, 7 on tree, -3.51881 best solution, best possible -14.496073 (3.74 seconds)
Cbc0001I Search completed - best objective -3.518810000000002, took 11185 iterations and 82 nodes (3.77 seconds)
Cbc0032I Strong branching done 970 times (24942 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 18, 212 variables fixed on reduced cost
Total time (CPU seconds):       3.50   (Wallclock seconds):       3.80

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 6.06103e-06 - average 3.29404e-08, 22 fixed columns
Coin0506I Presolve 141 (-43) rows, 79 (-22) columns and 432 (-130) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 2.4151026 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 33.679347
Clp0000I Optimal - objective value 33.679347
Coin0511I After Postsolve, objective 33.679347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.679347
Clp0000I Optimal - objective value 33.679347
Clp0000I Optimal - objective value 33.679347
Coin0511I After Postsolve, objective 33.679347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.67934707 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.3879
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.0952 iterations 68
Cbc0038I Solution found of 14.0952
Cbc0038I Relaxing continuous gives 14.0952
Cbc0038I Rounding solution of 3.96913 is better than previous of 14.0952

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 3.96913 to -2.11605 (0.08 seconds)
Cbc0038I Round again with cutoff of -5.27247
Cbc0038I Pass   2: suminf.    3.34715 (15) obj. -5.27247 iterations 18
Cbc0038I Pass   3: suminf.    1.54641 (7) obj. -5.27247 iterations 17
Cbc0038I Pass   4: suminf.    0.86618 (6) obj. -5.27247 iterations 2
Cbc0038I Pass   5: suminf.    0.86618 (6) obj. -5.27247 iterations 0
Cbc0038I Pass   6: suminf.    1.86434 (6) obj. -5.27247 iterations 6
Cbc0038I Pass   7: suminf.    1.42347 (7) obj. -5.27247 iterations 4
Cbc0038I Pass   8: suminf.    2.27404 (7) obj. -5.27247 iterations 7
Cbc0038I Pass   9: suminf.    1.18371 (7) obj. -5.27247 iterations 4
Cbc0038I Pass  10: suminf.    1.18371 (7) obj. -5.27247 iterations 0
Cbc0038I Pass  11: suminf.    2.51696 (7) obj. -5.27247 iterations 10
Cbc0038I Pass  12: suminf.    2.47760 (7) obj. -5.27247 iterations 2
Cbc0038I Pass  13: suminf.    1.51257 (8) obj. -5.27247 iterations 7
Cbc0038I Pass  14: suminf.    1.42347 (7) obj. -5.27247 iterations 1
Cbc0038I Pass  15: suminf.    2.27404 (7) obj. -5.27247 iterations 7
Cbc0038I Pass  16: suminf.    1.18371 (7) obj. -5.27247 iterations 4
Cbc0038I Pass  17: suminf.    1.18371 (7) obj. -5.27247 iterations 0
Cbc0038I Pass  18: suminf.    2.51696 (7) obj. -5.27247 iterations 10
Cbc0038I Pass  19: suminf.    2.47760 (7) obj. -5.27247 iterations 2
Cbc0038I Pass  20: suminf.    1.51257 (8) obj. -5.27247 iterations 7
Cbc0038I Pass  21: suminf.    1.42347 (7) obj. -5.27247 iterations 1
Cbc0038I Pass  22: suminf.    2.27404 (7) obj. -5.27247 iterations 7
Cbc0038I Pass  23: suminf.    1.18371 (7) obj. -5.27247 iterations 4
Cbc0038I Pass  24: suminf.    1.18371 (7) obj. -5.27247 iterations 0
Cbc0038I Pass  25: suminf.    2.51696 (7) obj. -5.27247 iterations 10
Cbc0038I Pass  26: suminf.    2.47760 (7) obj. -5.27247 iterations 2
Cbc0038I Pass  27: suminf.    1.51257 (8) obj. -5.27247 iterations 7
Cbc0038I Pass  28: suminf.    1.42347 (7) obj. -5.27247 iterations 1
Cbc0038I Pass  29: suminf.    2.27404 (7) obj. -5.27247 iterations 7
Cbc0038I Pass  30: suminf.    1.18371 (7) obj. -5.27247 iterations 4
Cbc0038I Pass  31: suminf.    1.18371 (7) obj. -5.27247 iterations 0
Cbc0038I Rounding solution of -2.55192 is better than previous of -2.11605

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -10.9538
Cbc0038I Pass  31: suminf.    4.60578 (17) obj. -10.9538 iterations 3
Cbc0038I Pass  32: suminf.    1.50184 (9) obj. -10.9538 iterations 19
Cbc0038I Pass  33: suminf.    1.50184 (9) obj. -10.9538 iterations 1
Cbc0038I Pass  34: suminf.    2.27151 (7) obj. -10.9538 iterations 8
Cbc0038I Pass  35: suminf.    1.50931 (7) obj. -10.9538 iterations 3
Cbc0038I Pass  36: suminf.    1.50242 (7) obj. -10.9538 iterations 1
Cbc0038I Pass  37: suminf.    2.52772 (7) obj. -10.9538 iterations 7
Cbc0038I Pass  38: suminf.    2.05316 (6) obj. -10.9538 iterations 3
Cbc0038I Pass  39: suminf.    1.93423 (7) obj. -10.9538 iterations 3
Cbc0038I Pass  40: suminf.    1.76951 (7) obj. -10.9538 iterations 1
Cbc0038I Pass  41: suminf.    3.06225 (8) obj. -10.9538 iterations 5
Cbc0038I Pass  42: suminf.    2.82556 (8) obj. -10.9538 iterations 2
Cbc0038I Pass  43: suminf.    2.82556 (8) obj. -10.9538 iterations 1
Cbc0038I Pass  44: suminf.    2.36902 (8) obj. -10.9538 iterations 11
Cbc0038I Pass  45: suminf.    2.07888 (8) obj. -10.9538 iterations 2
Cbc0038I Pass  46: suminf.    3.21128 (8) obj. -10.9538 iterations 6
Cbc0038I Pass  47: suminf.    2.92368 (9) obj. -10.9538 iterations 4
Cbc0038I Pass  48: suminf.    2.92368 (9) obj. -10.9538 iterations 0
Cbc0038I Pass  49: suminf.    2.52071 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  50: suminf.    1.79801 (7) obj. -10.9538 iterations 2
Cbc0038I Pass  51: suminf.    1.79801 (7) obj. -10.9538 iterations 0
Cbc0038I Pass  52: suminf.    2.92368 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  53: suminf.    2.92368 (9) obj. -10.9538 iterations 1
Cbc0038I Pass  54: suminf.    2.52071 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  55: suminf.    1.79801 (7) obj. -10.9538 iterations 2
Cbc0038I Pass  56: suminf.    1.79801 (7) obj. -10.9538 iterations 0
Cbc0038I Pass  57: suminf.    2.92368 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  58: suminf.    2.92368 (9) obj. -10.9538 iterations 1
Cbc0038I Pass  59: suminf.    2.52071 (9) obj. -10.9538 iterations 7
Cbc0038I Pass  60: suminf.    1.79801 (7) obj. -10.9538 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -2.55192 - took 0.17 seconds
Cbc0012I Integer solution of -2.551917 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 87 rows 51 columns
Cbc0031I 25 added rows had average density of 77.68
Cbc0013I At root node, 25 cuts changed objective from -33.679347 to -26.078149 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15007 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2119 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.551917 best solution, best possible -26.078149 (1.41 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 25 rows 26 columns
Cbc0012I Integer solution of -2.977537 found by RINS after 10612 iterations and 41 nodes (1.72 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 32 rows 28 columns
Cbc0012I Integer solution of -3.21324 found by rounding after 12810 iterations and 115 nodes (1.94 seconds)
Cbc0012I Integer solution of -3.51881 found by rounding after 13029 iterations and 125 nodes (1.96 seconds)
Cbc0001I Search completed - best objective -3.518810000000002, took 13521 iterations and 138 nodes (1.97 seconds)
Cbc0032I Strong branching done 1472 times (26996 iterations), fathomed 8 nodes and fixed 53 variables
Cbc0035I Maximum depth 39, 393 variables fixed on reduced cost
Total time (CPU seconds):       1.91   (Wallclock seconds):       1.99

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-80) rows, 141 (-62) columns and 2707 (-2947) elements
Clp1000I sum of infeasibilities 2.5181e-07 - average 2.01448e-09, 38 fixed columns
Coin0506I Presolve 91 (-34) rows, 103 (-38) columns and 1635 (-1072) elements
Clp0006I 0  Obj 35.183367 Dual inf 5.09726 (103)
Clp0029I End of values pass after 103 iterations
Clp0014I Perturbing problem by 0.001% of 2.45985 - largest nonzero change 2.1235175e-05 ( 0.0015420975%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 51.316497
Clp0000I Optimal - objective value 51.316497
Coin0511I After Postsolve, objective 51.316497, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.316497
Clp0000I Optimal - objective value 51.316497
Clp0000I Optimal - objective value 51.316497
Clp0000I Optimal - objective value 51.316497
Coin0511I After Postsolve, objective 51.316497, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.31649731 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 142 columns (142 integer (142 of which binary)) and 2713 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.252%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.73166
Cbc0038I Pass   1: suminf.    3.52551 (36) obj. -25.5556 iterations 23
Cbc0038I Pass   2: suminf.    3.52551 (36) obj. -25.5556 iterations 1
Cbc0038I Pass   3: suminf.    1.73539 (20) obj. -2.56462 iterations 16
Cbc0038I Solution found of 17.5091
Cbc0038I Rounding solution of 11.6029 is better than previous of 17.5091

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 142 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 11.6029 to -0.69514 (0.04 seconds)
Cbc0038I Round again with cutoff of -4.94377
Cbc0038I Pass   4: suminf.    3.52551 (36) obj. -25.5556 iterations 0
Cbc0038I Pass   5: suminf.    3.52551 (36) obj. -25.5556 iterations 1
Cbc0038I Pass   6: suminf.    1.72234 (16) obj. -4.94377 iterations 29
Cbc0038I Pass   7: suminf.    1.72234 (16) obj. -4.94377 iterations 0
Cbc0038I Pass   8: suminf.    0.98326 (5) obj. -4.94377 iterations 20
Cbc0038I Pass   9: suminf.    0.73485 (3) obj. -7.0209 iterations 2
Cbc0038I Pass  10: suminf.    0.18463 (2) obj. -4.94377 iterations 7
Cbc0038I Pass  11: suminf.    0.15220 (2) obj. -4.94377 iterations 1
Cbc0038I Pass  12: suminf.    2.92938 (18) obj. -4.94377 iterations 43
Cbc0038I Pass  13: suminf.    2.68496 (16) obj. -4.94377 iterations 10
Cbc0038I Pass  14: suminf.    2.02190 (8) obj. -4.94377 iterations 26
Cbc0038I Pass  15: suminf.    1.13800 (6) obj. -4.94377 iterations 11
Cbc0038I Pass  16: suminf.    0.95955 (5) obj. -4.94377 iterations 13
Cbc0038I Pass  17: suminf.    0.95955 (5) obj. -4.94377 iterations 0
Cbc0038I Pass  18: suminf.    0.72116 (3) obj. -4.94377 iterations 15
Cbc0038I Pass  19: suminf.    0.65339 (3) obj. -5.24014 iterations 3
Cbc0038I Pass  20: suminf.    0.93455 (3) obj. -4.94377 iterations 7
Cbc0038I Pass  21: suminf.    0.93455 (3) obj. -4.94377 iterations 3
Cbc0038I Pass  22: suminf.    0.95553 (3) obj. -4.94377 iterations 4
Cbc0038I Pass  23: suminf.    0.79384 (3) obj. -5.64677 iterations 3
Cbc0038I Pass  24: suminf.    2.00769 (12) obj. -4.94377 iterations 26
Cbc0038I Pass  25: suminf.    1.02406 (7) obj. -5.59558 iterations 11
Cbc0038I Pass  26: suminf.    1.55108 (6) obj. -4.94377 iterations 11
Cbc0038I Pass  27: suminf.    1.55108 (6) obj. -4.94377 iterations 3
Cbc0038I Pass  28: suminf.    0.93455 (3) obj. -4.94377 iterations 8
Cbc0038I Pass  29: suminf.    0.93455 (3) obj. -4.94377 iterations 3
Cbc0038I Pass  30: suminf.    0.95553 (3) obj. -4.94377 iterations 4
Cbc0038I Pass  31: suminf.    0.79384 (3) obj. -5.64677 iterations 3
Cbc0038I Pass  32: suminf.    0.93455 (3) obj. -4.94377 iterations 6
Cbc0038I Pass  33: suminf.    2.14405 (12) obj. -4.94377 iterations 33
Cbc0038I Rounding solution of -2.01163 is better than previous of -0.69514

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 142 columns, reduced to 7 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -12.5911
Cbc0038I Pass  33: suminf.    3.52551 (36) obj. -25.5556 iterations 0
Cbc0038I Pass  34: suminf.    3.52551 (36) obj. -25.5556 iterations 1
Cbc0038I Pass  35: suminf.    2.62217 (14) obj. -12.5911 iterations 39
Cbc0038I Pass  36: suminf.    2.53001 (12) obj. -14.2257 iterations 4
Cbc0038I Pass  37: suminf.    1.14692 (11) obj. -12.5911 iterations 35
Cbc0038I Pass  38: suminf.    1.14321 (9) obj. -12.5911 iterations 2
Cbc0038I Pass  39: suminf.    1.11901 (9) obj. -12.5911 iterations 8
Cbc0038I Pass  40: suminf.    1.12139 (10) obj. -12.5911 iterations 5
Cbc0038I Pass  41: suminf.    1.14649 (10) obj. -12.5911 iterations 8
Cbc0038I Pass  42: suminf.    2.70543 (14) obj. -12.5911 iterations 31
Cbc0038I Pass  43: suminf.    2.39068 (14) obj. -12.5911 iterations 9
Cbc0038I Pass  44: suminf.    1.93142 (11) obj. -12.5911 iterations 14
Cbc0038I Pass  45: suminf.    1.89644 (11) obj. -12.5911 iterations 3
Cbc0038I Pass  46: suminf.    1.94805 (9) obj. -12.5911 iterations 16
Cbc0038I Pass  47: suminf.    1.51972 (8) obj. -12.7466 iterations 5
Cbc0038I Pass  48: suminf.    1.92441 (8) obj. -12.5911 iterations 7
Cbc0038I Pass  49: suminf.    1.92441 (8) obj. -12.5911 iterations 1
Cbc0038I Pass  50: suminf.    1.40032 (8) obj. -12.5911 iterations 10
Cbc0038I Pass  51: suminf.    1.40032 (8) obj. -12.5911 iterations 3
Cbc0038I Pass  52: suminf.    1.86732 (8) obj. -12.5911 iterations 9
Cbc0038I Pass  53: suminf.    1.86732 (8) obj. -12.5911 iterations 3
Cbc0038I Pass  54: suminf.    4.89561 (21) obj. -12.5911 iterations 32
Cbc0038I Pass  55: suminf.    3.70729 (20) obj. -12.5911 iterations 2
Cbc0038I Pass  56: suminf.    3.61759 (19) obj. -12.5911 iterations 1
Cbc0038I Pass  57: suminf.    2.47356 (13) obj. -12.5911 iterations 19
Cbc0038I Pass  58: suminf.    2.47356 (13) obj. -12.5911 iterations 1
Cbc0038I Pass  59: suminf.    1.77929 (8) obj. -12.5911 iterations 16
Cbc0038I Pass  60: suminf.    1.55463 (8) obj. -12.5911 iterations 7
Cbc0038I Pass  61: suminf.    1.59917 (8) obj. -12.5911 iterations 10
Cbc0038I Pass  62: suminf.    1.57471 (9) obj. -12.5911 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -2.01163 - took 0.07 seconds
Cbc0012I Integer solution of -2.01163 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 126 rows 142 columns, reduced to 2 rows 2 columns
Cbc0031I 59 added rows had average density of 40.881356
Cbc0013I At root node, 59 cuts changed objective from -43.180505 to -16.036948 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27421 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2208 row cuts average 140.0 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1053 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1561 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 71.4 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.01163 best solution, best possible -16.036948 (2.39 seconds)
Cbc0010I After 6 nodes, 5 on tree, -2.01163 best solution, best possible -14.496073 (3.15 seconds)
Cbc0012I Integer solution of -2.551917 found by rounding after 8325 iterations and 9 nodes (3.30 seconds)
Cbc0012I Integer solution of -2.9741 found by rounding after 8329 iterations and 10 nodes (3.31 seconds)
Cbc0016I Integer solution of -3.51881 found by strong branching after 8361 iterations and 14 nodes (3.31 seconds)
Cbc0038I Full problem 126 rows 142 columns, reduced to 43 rows 64 columns
Cbc0001I Search completed - best objective -3.518810000000002, took 11185 iterations and 82 nodes (3.84 seconds)
Cbc0032I Strong branching done 970 times (24942 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 18, 212 variables fixed on reduced cost
Total time (CPU seconds):       3.52   (Wallclock seconds):       3.86

