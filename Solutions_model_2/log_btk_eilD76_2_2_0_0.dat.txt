Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 63 (-15) columns and 347 (-106) elements
Clp1000I sum of infeasibilities 2.05458e-05 - average 1.80226e-07, 18 fixed columns
Coin0506I Presolve 77 (-37) rows, 44 (-19) columns and 235 (-112) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 0.52554763 - largest nonzero change 0 ( 0%) - largest zero change 2.8698378e-05
Clp0000I Optimal - objective value 102.39671
Clp0000I Optimal - objective value 102.39671
Coin0511I After Postsolve, objective 102.39671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 102.39671
Clp0000I Optimal - objective value 102.39671
Clp0000I Optimal - objective value 102.39671
Coin0511I After Postsolve, objective 102.39671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.3967057 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 114 rows, 63 columns (62 integer (62 of which binary)) and 347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.400%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 10.3264
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.1701 iterations 34
Cbc0038I Solution found of -14.1701
Cbc0038I Relaxing continuous gives -14.1701
Cbc0038I Rounding solution of -24.0919 is better than previous of -14.1701

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -24.0919 to -56.5151 (0.05 seconds)
Cbc0038I Round again with cutoff of -61.1034
Cbc0038I Pass   2: suminf.    2.28122 (7) obj. -61.1034 iterations 7
Cbc0038I Pass   3: suminf.    2.01598 (5) obj. -61.1034 iterations 3
Cbc0038I Pass   4: suminf.    1.44527 (4) obj. -61.1034 iterations 6
Cbc0038I Pass   5: suminf.    1.30807 (4) obj. -61.1034 iterations 3
Cbc0038I Pass   6: suminf.    2.40537 (10) obj. -61.1034 iterations 16
Cbc0038I Pass   7: suminf.    0.88023 (6) obj. -61.1034 iterations 7
Cbc0038I Pass   8: suminf.    1.28967 (4) obj. -61.1034 iterations 6
Cbc0038I Pass   9: suminf.    0.60012 (4) obj. -61.1034 iterations 3
Cbc0038I Pass  10: suminf.    1.56500 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  11: suminf.    1.26064 (5) obj. -61.1034 iterations 15
Cbc0038I Pass  12: suminf.    1.07820 (5) obj. -61.1034 iterations 4
Cbc0038I Pass  13: suminf.    1.05252 (4) obj. -61.1034 iterations 5
Cbc0038I Pass  14: suminf.    1.21201 (4) obj. -61.1034 iterations 3
Cbc0038I Pass  15: suminf.    4.10276 (15) obj. -61.1034 iterations 21
Cbc0038I Pass  16: suminf.    2.64152 (11) obj. -61.1034 iterations 15
Cbc0038I Pass  17: suminf.    1.76199 (9) obj. -61.1034 iterations 3
Cbc0038I Pass  18: suminf.    1.64368 (7) obj. -61.1034 iterations 10
Cbc0038I Pass  19: suminf.    0.66917 (5) obj. -61.1034 iterations 4
Cbc0038I Pass  20: suminf.    1.00338 (5) obj. -61.1034 iterations 7
Cbc0038I Pass  21: suminf.    0.94003 (4) obj. -61.1034 iterations 1
Cbc0038I Pass  22: suminf.    1.04574 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  23: suminf.    1.70106 (7) obj. -61.1034 iterations 8
Cbc0038I Pass  24: suminf.    0.66917 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  25: suminf.    1.00338 (5) obj. -61.1034 iterations 7
Cbc0038I Pass  26: suminf.    0.94003 (4) obj. -61.1034 iterations 1
Cbc0038I Pass  27: suminf.    1.04574 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  28: suminf.    1.70106 (7) obj. -61.1034 iterations 8
Cbc0038I Pass  29: suminf.    0.66917 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  30: suminf.    1.00338 (5) obj. -61.1034 iterations 7
Cbc0038I Pass  31: suminf.    0.94003 (4) obj. -61.1034 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -56.5151 - took 0.06 seconds
Cbc0012I Integer solution of -56.51512 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 114 rows 63 columns, reduced to 45 rows 27 columns
Cbc0031I 19 added rows had average density of 48.263158
Cbc0013I At root node, 19 cuts changed objective from -102.39671 to -81.374524 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4240 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1150 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 49.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -56.51512, took 4212 iterations and 20 nodes (0.51 seconds)
Cbc0032I Strong branching done 310 times (4648 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 5, 108 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 107 (-45) columns and 1653 (-1650) elements
Clp1000I sum of infeasibilities 2.87707e-07 - average 2.96605e-09, 59 fixed columns
Coin0506I Presolve 38 (-59) rows, 48 (-59) columns and 167 (-1486) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.49454132 - largest nonzero change 2.8096151e-05 ( 0.0021869008%) - largest zero change 2.9394977e-05
Clp0000I Optimal - objective value 55.525714
Clp0000I Optimal - objective value 55.525714
Coin0511I After Postsolve, objective 55.525714, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.8707891 - largest nonzero change 1.7960957e-05 ( 0.00080919949%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 138.10502
Clp0000I Optimal - objective value 138.10502
Clp0000I Optimal - objective value 138.10502
Coin0511I After Postsolve, objective 138.10502, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.1050234 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 108 columns (108 integer (108 of which binary)) and 1657 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.588%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.11022
Cbc0038I Pass   1: suminf.    2.68654 (32) obj. -32.1016 iterations 11
Cbc0038I Pass   2: suminf.    2.68654 (32) obj. -32.1016 iterations 0
Cbc0038I Pass   3: suminf.    1.11343 (15) obj. -9.36519 iterations 17
Cbc0038I Solution found of 10.9753
Cbc0038I Rounding solution of -19.277 is better than previous of 10.9753

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 108 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -19.277 to -50.8356 (0.02 seconds)
Cbc0038I Round again with cutoff of -56.4969
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.82158 (35) obj. -56.4969 iterations 1
Cbc0038I Pass   5: suminf.    3.82158 (35) obj. -56.4969 iterations 0
Cbc0038I Pass   6: suminf.    1.54708 (15) obj. -56.4969 iterations 25
Cbc0038I Pass   7: suminf.    1.54708 (15) obj. -56.4969 iterations 0
Cbc0038I Pass   8: suminf.    2.35233 (15) obj. -56.4969 iterations 16
Cbc0038I Pass   9: suminf.    1.94189 (14) obj. -56.4969 iterations 2
Cbc0038I Pass  10: suminf.    1.70523 (13) obj. -56.4969 iterations 1
Cbc0038I Pass  11: suminf.    0.68587 (2) obj. -56.4969 iterations 19
Cbc0038I Pass  12: suminf.    0.32354 (2) obj. -56.4969 iterations 3
Cbc0038I Pass  13: suminf.    0.44016 (2) obj. -56.4969 iterations 5
Cbc0038I Pass  14: suminf.    0.45657 (2) obj. -56.4969 iterations 2
Cbc0038I Pass  15: suminf.    4.28051 (17) obj. -56.4969 iterations 29
Cbc0038I Pass  16: suminf.    2.22069 (12) obj. -56.4969 iterations 16
Cbc0038I Pass  17: suminf.    1.98530 (12) obj. -56.4969 iterations 4
Cbc0038I Pass  18: suminf.    1.13755 (5) obj. -56.4969 iterations 17
Cbc0038I Pass  19: suminf.    0.95410 (5) obj. -56.4969 iterations 2
Cbc0038I Pass  20: suminf.    0.58947 (2) obj. -56.4969 iterations 9
Cbc0038I Pass  21: suminf.    0.58947 (2) obj. -56.4969 iterations 1
Cbc0038I Pass  22: suminf.    0.58249 (3) obj. -56.4969 iterations 7
Cbc0038I Pass  23: suminf.    0.72418 (3) obj. -56.4969 iterations 5
Cbc0038I Pass  24: suminf.    0.58947 (2) obj. -56.4969 iterations 4
Cbc0038I Pass  25: suminf.    2.43443 (14) obj. -56.4969 iterations 37
Cbc0038I Pass  26: suminf.    2.02102 (14) obj. -56.4969 iterations 12
Cbc0038I Pass  27: suminf.    1.87291 (13) obj. -69.5781 iterations 1
Cbc0038I Pass  28: suminf.    0.59262 (3) obj. -56.4969 iterations 15
Cbc0038I Pass  29: suminf.    0.26398 (3) obj. -56.4969 iterations 2
Cbc0038I Pass  30: suminf.    1.74631 (5) obj. -56.4969 iterations 6
Cbc0038I Pass  31: suminf.    0.39731 (1) obj. -56.4969 iterations 6
Cbc0038I Pass  32: suminf.    0.44016 (2) obj. -56.4969 iterations 3
Cbc0038I Pass  33: suminf.    0.45657 (2) obj. -56.4969 iterations 2
Cbc0038I Rounding solution of -52.3166 is better than previous of -50.8356

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 108 columns, reduced to 26 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -52.3166 to -53.8714 (0.06 seconds)
Cbc0038I Round again with cutoff of -66.6872
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.90839 (36) obj. -66.6872 iterations 1
Cbc0038I Pass  34: suminf.    4.32365 (35) obj. -66.6872 iterations 1
Cbc0038I Pass  35: suminf.    3.83665 (35) obj. -66.6872 iterations 1
Cbc0038I Pass  36: suminf.    2.62152 (21) obj. -66.6872 iterations 34
Cbc0038I Pass  37: suminf.    2.62152 (21) obj. -66.6872 iterations 0
Cbc0038I Pass  38: suminf.    1.34867 (4) obj. -66.6872 iterations 41
Cbc0038I Pass  39: suminf.    1.34867 (4) obj. -66.6872 iterations 2
Cbc0038I Pass  40: suminf.    1.13200 (4) obj. -66.6872 iterations 4
Cbc0038I Pass  41: suminf.    1.13200 (4) obj. -66.6872 iterations 5
Cbc0038I Pass  42: suminf.    1.34867 (4) obj. -66.6872 iterations 13
Cbc0038I Pass  43: suminf.    2.95932 (14) obj. -66.6872 iterations 16
Cbc0038I Pass  44: suminf.    2.95932 (14) obj. -66.6872 iterations 1
Cbc0038I Pass  45: suminf.    1.51274 (7) obj. -66.6872 iterations 22
Cbc0038I Pass  46: suminf.    1.26100 (7) obj. -66.6872 iterations 7
Cbc0038I Pass  47: suminf.    2.48977 (15) obj. -66.6872 iterations 18
Cbc0038I Pass  48: suminf.    2.48977 (15) obj. -66.6872 iterations 1
Cbc0038I Pass  49: suminf.    1.52714 (7) obj. -66.6872 iterations 22
Cbc0038I Pass  50: suminf.    1.52714 (7) obj. -66.6872 iterations 4
Cbc0038I Pass  51: suminf.    1.53667 (7) obj. -66.6872 iterations 10
Cbc0038I Pass  52: suminf.    1.53667 (7) obj. -66.6872 iterations 4
Cbc0038I Pass  53: suminf.    1.52714 (7) obj. -66.6872 iterations 10
Cbc0038I Pass  54: suminf.    2.77138 (12) obj. -66.6872 iterations 14
Cbc0038I Pass  55: suminf.    2.77138 (12) obj. -66.6872 iterations 5
Cbc0038I Pass  56: suminf.    1.51274 (8) obj. -66.6872 iterations 20
Cbc0038I Pass  57: suminf.    1.41900 (8) obj. -66.6872 iterations 8
Cbc0038I Pass  58: suminf.    3.31104 (21) obj. -66.6872 iterations 28
Cbc0038I Pass  59: suminf.    2.58062 (17) obj. -69.7179 iterations 8
Cbc0038I Pass  60: suminf.    1.52714 (7) obj. -66.6872 iterations 25
Cbc0038I Pass  61: suminf.    1.52714 (7) obj. -66.6872 iterations 4
Cbc0038I Pass  62: suminf.    1.53667 (7) obj. -66.6872 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 108 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -53.8714 - took 0.06 seconds
Cbc0012I Integer solution of -53.87141 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 50 added rows had average density of 34.16
Cbc0013I At root node, 50 cuts changed objective from -107.44817 to -63.493973 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 1916 row cuts average 4.0 elements, 7 column cuts (7 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 270 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 273 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 293 row cuts average 55.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -53.87141 best solution, best possible -63.493973 (0.37 seconds)
Cbc0012I Integer solution of -55.37301 found by DiveCoefficient after 867 iterations and 4 nodes (0.52 seconds)
Cbc0016I Integer solution of -56.51512 found by strong branching after 1001 iterations and 8 nodes (0.55 seconds)
Cbc0001I Search completed - best objective -56.51512, took 2027 iterations and 48 nodes (0.75 seconds)
Cbc0032I Strong branching done 706 times (11945 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 16, 62 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.76

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 63 (-15) columns and 347 (-106) elements
Clp1000I sum of infeasibilities 2.05458e-05 - average 1.80226e-07, 18 fixed columns
Coin0506I Presolve 77 (-37) rows, 44 (-19) columns and 235 (-112) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 0.52554763 - largest nonzero change 0 ( 0%) - largest zero change 2.8698378e-05
Clp0000I Optimal - objective value 102.39671
Clp0000I Optimal - objective value 102.39671
Coin0511I After Postsolve, objective 102.39671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 102.39671
Clp0000I Optimal - objective value 102.39671
Clp0000I Optimal - objective value 102.39671
Coin0511I After Postsolve, objective 102.39671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.3967057 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 114 rows, 63 columns (62 integer (62 of which binary)) and 347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.400%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 10.3264
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.1701 iterations 34
Cbc0038I Solution found of -14.1701
Cbc0038I Relaxing continuous gives -14.1701
Cbc0038I Rounding solution of -24.0919 is better than previous of -14.1701

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -24.0919 to -56.5151 (0.05 seconds)
Cbc0038I Round again with cutoff of -61.1034
Cbc0038I Pass   2: suminf.    2.28122 (7) obj. -61.1034 iterations 7
Cbc0038I Pass   3: suminf.    2.01598 (5) obj. -61.1034 iterations 3
Cbc0038I Pass   4: suminf.    1.44527 (4) obj. -61.1034 iterations 6
Cbc0038I Pass   5: suminf.    1.30807 (4) obj. -61.1034 iterations 3
Cbc0038I Pass   6: suminf.    2.40537 (10) obj. -61.1034 iterations 16
Cbc0038I Pass   7: suminf.    0.88023 (6) obj. -61.1034 iterations 7
Cbc0038I Pass   8: suminf.    1.28967 (4) obj. -61.1034 iterations 6
Cbc0038I Pass   9: suminf.    0.60012 (4) obj. -61.1034 iterations 3
Cbc0038I Pass  10: suminf.    1.56500 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  11: suminf.    1.26064 (5) obj. -61.1034 iterations 15
Cbc0038I Pass  12: suminf.    1.07820 (5) obj. -61.1034 iterations 4
Cbc0038I Pass  13: suminf.    1.05252 (4) obj. -61.1034 iterations 5
Cbc0038I Pass  14: suminf.    1.21201 (4) obj. -61.1034 iterations 3
Cbc0038I Pass  15: suminf.    4.10276 (15) obj. -61.1034 iterations 21
Cbc0038I Pass  16: suminf.    2.64152 (11) obj. -61.1034 iterations 15
Cbc0038I Pass  17: suminf.    1.76199 (9) obj. -61.1034 iterations 3
Cbc0038I Pass  18: suminf.    1.64368 (7) obj. -61.1034 iterations 10
Cbc0038I Pass  19: suminf.    0.66917 (5) obj. -61.1034 iterations 4
Cbc0038I Pass  20: suminf.    1.00338 (5) obj. -61.1034 iterations 7
Cbc0038I Pass  21: suminf.    0.94003 (4) obj. -61.1034 iterations 1
Cbc0038I Pass  22: suminf.    1.04574 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  23: suminf.    1.70106 (7) obj. -61.1034 iterations 8
Cbc0038I Pass  24: suminf.    0.66917 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  25: suminf.    1.00338 (5) obj. -61.1034 iterations 7
Cbc0038I Pass  26: suminf.    0.94003 (4) obj. -61.1034 iterations 1
Cbc0038I Pass  27: suminf.    1.04574 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  28: suminf.    1.70106 (7) obj. -61.1034 iterations 8
Cbc0038I Pass  29: suminf.    0.66917 (5) obj. -61.1034 iterations 5
Cbc0038I Pass  30: suminf.    1.00338 (5) obj. -61.1034 iterations 7
Cbc0038I Pass  31: suminf.    0.94003 (4) obj. -61.1034 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -56.5151 - took 0.07 seconds
Cbc0012I Integer solution of -56.51512 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 114 rows 63 columns, reduced to 45 rows 27 columns
Cbc0031I 19 added rows had average density of 48.263158
Cbc0013I At root node, 19 cuts changed objective from -102.39671 to -81.374524 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4240 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1150 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 49.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0001I Search completed - best objective -56.51512, took 4212 iterations and 20 nodes (0.54 seconds)
Cbc0032I Strong branching done 310 times (4648 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 5, 108 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 107 (-46) columns and 1653 (-1651) elements
Clp1000I sum of infeasibilities 2.87707e-07 - average 2.96605e-09, 59 fixed columns
Coin0506I Presolve 38 (-59) rows, 48 (-59) columns and 167 (-1486) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.49454132 - largest nonzero change 2.8096151e-05 ( 0.0021869008%) - largest zero change 2.9394977e-05
Clp0000I Optimal - objective value 55.525714
Clp0000I Optimal - objective value 55.525714
Coin0511I After Postsolve, objective 55.525714, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.8707891 - largest nonzero change 1.7960957e-05 ( 0.00080919949%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 138.10502
Clp0000I Optimal - objective value 138.10502
Clp0000I Optimal - objective value 138.10502
Coin0511I After Postsolve, objective 138.10502, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.1050234 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 108 columns (108 integer (108 of which binary)) and 1657 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.588%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.11022
Cbc0038I Pass   1: suminf.    2.68654 (32) obj. -32.1016 iterations 11
Cbc0038I Pass   2: suminf.    2.68654 (32) obj. -32.1016 iterations 0
Cbc0038I Pass   3: suminf.    1.11343 (15) obj. -9.36519 iterations 17
Cbc0038I Solution found of 10.9753
Cbc0038I Rounding solution of -19.277 is better than previous of 10.9753

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 108 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -19.277 to -50.8356 (0.03 seconds)
Cbc0038I Round again with cutoff of -56.4969
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.82158 (35) obj. -56.4969 iterations 1
Cbc0038I Pass   5: suminf.    3.82158 (35) obj. -56.4969 iterations 0
Cbc0038I Pass   6: suminf.    1.54708 (15) obj. -56.4969 iterations 25
Cbc0038I Pass   7: suminf.    1.54708 (15) obj. -56.4969 iterations 0
Cbc0038I Pass   8: suminf.    2.35233 (15) obj. -56.4969 iterations 16
Cbc0038I Pass   9: suminf.    1.94189 (14) obj. -56.4969 iterations 2
Cbc0038I Pass  10: suminf.    1.70523 (13) obj. -56.4969 iterations 1
Cbc0038I Pass  11: suminf.    0.68587 (2) obj. -56.4969 iterations 19
Cbc0038I Pass  12: suminf.    0.32354 (2) obj. -56.4969 iterations 3
Cbc0038I Pass  13: suminf.    0.44016 (2) obj. -56.4969 iterations 5
Cbc0038I Pass  14: suminf.    0.45657 (2) obj. -56.4969 iterations 2
Cbc0038I Pass  15: suminf.    4.28051 (17) obj. -56.4969 iterations 29
Cbc0038I Pass  16: suminf.    2.22069 (12) obj. -56.4969 iterations 16
Cbc0038I Pass  17: suminf.    1.98530 (12) obj. -56.4969 iterations 4
Cbc0038I Pass  18: suminf.    1.13755 (5) obj. -56.4969 iterations 17
Cbc0038I Pass  19: suminf.    0.95410 (5) obj. -56.4969 iterations 2
Cbc0038I Pass  20: suminf.    0.58947 (2) obj. -56.4969 iterations 9
Cbc0038I Pass  21: suminf.    0.58947 (2) obj. -56.4969 iterations 1
Cbc0038I Pass  22: suminf.    0.58249 (3) obj. -56.4969 iterations 7
Cbc0038I Pass  23: suminf.    0.72418 (3) obj. -56.4969 iterations 5
Cbc0038I Pass  24: suminf.    0.58947 (2) obj. -56.4969 iterations 4
Cbc0038I Pass  25: suminf.    2.43443 (14) obj. -56.4969 iterations 37
Cbc0038I Pass  26: suminf.    2.02102 (14) obj. -56.4969 iterations 12
Cbc0038I Pass  27: suminf.    1.87291 (13) obj. -69.5781 iterations 1
Cbc0038I Pass  28: suminf.    0.59262 (3) obj. -56.4969 iterations 15
Cbc0038I Pass  29: suminf.    0.26398 (3) obj. -56.4969 iterations 2
Cbc0038I Pass  30: suminf.    1.74631 (5) obj. -56.4969 iterations 6
Cbc0038I Pass  31: suminf.    0.39731 (1) obj. -56.4969 iterations 6
Cbc0038I Pass  32: suminf.    0.44016 (2) obj. -56.4969 iterations 3
Cbc0038I Pass  33: suminf.    0.45657 (2) obj. -56.4969 iterations 2
Cbc0038I Rounding solution of -52.3166 is better than previous of -50.8356

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 108 columns, reduced to 26 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -52.3166 to -53.8714 (0.06 seconds)
Cbc0038I Round again with cutoff of -66.6872
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.90839 (36) obj. -66.6872 iterations 1
Cbc0038I Pass  34: suminf.    4.32365 (35) obj. -66.6872 iterations 1
Cbc0038I Pass  35: suminf.    3.83665 (35) obj. -66.6872 iterations 1
Cbc0038I Pass  36: suminf.    2.62152 (21) obj. -66.6872 iterations 34
Cbc0038I Pass  37: suminf.    2.62152 (21) obj. -66.6872 iterations 0
Cbc0038I Pass  38: suminf.    1.34867 (4) obj. -66.6872 iterations 41
Cbc0038I Pass  39: suminf.    1.34867 (4) obj. -66.6872 iterations 2
Cbc0038I Pass  40: suminf.    1.13200 (4) obj. -66.6872 iterations 4
Cbc0038I Pass  41: suminf.    1.13200 (4) obj. -66.6872 iterations 5
Cbc0038I Pass  42: suminf.    1.34867 (4) obj. -66.6872 iterations 13
Cbc0038I Pass  43: suminf.    2.95932 (14) obj. -66.6872 iterations 16
Cbc0038I Pass  44: suminf.    2.95932 (14) obj. -66.6872 iterations 1
Cbc0038I Pass  45: suminf.    1.51274 (7) obj. -66.6872 iterations 22
Cbc0038I Pass  46: suminf.    1.26100 (7) obj. -66.6872 iterations 7
Cbc0038I Pass  47: suminf.    2.48977 (15) obj. -66.6872 iterations 18
Cbc0038I Pass  48: suminf.    2.48977 (15) obj. -66.6872 iterations 1
Cbc0038I Pass  49: suminf.    1.52714 (7) obj. -66.6872 iterations 22
Cbc0038I Pass  50: suminf.    1.52714 (7) obj. -66.6872 iterations 4
Cbc0038I Pass  51: suminf.    1.53667 (7) obj. -66.6872 iterations 10
Cbc0038I Pass  52: suminf.    1.53667 (7) obj. -66.6872 iterations 4
Cbc0038I Pass  53: suminf.    1.52714 (7) obj. -66.6872 iterations 10
Cbc0038I Pass  54: suminf.    2.77138 (12) obj. -66.6872 iterations 14
Cbc0038I Pass  55: suminf.    2.77138 (12) obj. -66.6872 iterations 5
Cbc0038I Pass  56: suminf.    1.51274 (8) obj. -66.6872 iterations 20
Cbc0038I Pass  57: suminf.    1.41900 (8) obj. -66.6872 iterations 8
Cbc0038I Pass  58: suminf.    3.31104 (21) obj. -66.6872 iterations 28
Cbc0038I Pass  59: suminf.    2.58062 (17) obj. -69.7179 iterations 8
Cbc0038I Pass  60: suminf.    1.52714 (7) obj. -66.6872 iterations 25
Cbc0038I Pass  61: suminf.    1.52714 (7) obj. -66.6872 iterations 4
Cbc0038I Pass  62: suminf.    1.53667 (7) obj. -66.6872 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 108 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -53.8714 - took 0.06 seconds
Cbc0012I Integer solution of -53.87141 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 50 added rows had average density of 34.16
Cbc0013I At root node, 50 cuts changed objective from -107.44817 to -63.493973 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 1916 row cuts average 4.0 elements, 7 column cuts (7 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 270 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 273 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 293 row cuts average 55.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -53.87141 best solution, best possible -63.493973 (0.38 seconds)
Cbc0012I Integer solution of -55.37301 found by DiveCoefficient after 867 iterations and 4 nodes (0.53 seconds)
Cbc0016I Integer solution of -56.51512 found by strong branching after 1001 iterations and 8 nodes (0.57 seconds)
Cbc0001I Search completed - best objective -56.51512, took 2027 iterations and 48 nodes (0.78 seconds)
Cbc0032I Strong branching done 706 times (11945 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 16, 62 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.79

