Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 19 (-6) columns and 77 (-58) elements
Clp1000I sum of infeasibilities 5.97106e-06 - average 1.92615e-07, 2 fixed columns
Coin0506I Presolve 22 (-9) rows, 16 (-3) columns and 56 (-21) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Coin0511I After Postsolve, objective 238.67123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Coin0511I After Postsolve, objective 238.67123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 238.6712306 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.94766
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -44.488 iterations 8
Cbc0038I Solution found of -44.488
Cbc0038I Relaxing continuous gives -44.488
Cbc0038I Rounding solution of -66.0722 is better than previous of -44.488

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -66.0722 to -100.082 (0.01 seconds)
Cbc0038I Round again with cutoff of -113.941
Cbc0038I Pass   2: suminf.    0.42050 (2) obj. -113.941 iterations 2
Cbc0038I Pass   3: suminf.    0.46585 (1) obj. -113.941 iterations 2
Cbc0038I Pass   4: suminf.    0.26148 (2) obj. -113.941 iterations 2
Cbc0038I Pass   5: suminf.    0.39268 (1) obj. -113.941 iterations 2
Cbc0038I Pass   6: suminf.    0.12194 (1) obj. -113.941 iterations 1
Cbc0038I Pass   7: suminf.    0.22039 (1) obj. -113.941 iterations 4
Cbc0038I Pass   8: suminf.    0.07474 (1) obj. -113.941 iterations 4
Cbc0038I Pass   9: suminf.    0.47415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  10: suminf.    0.22415 (1) obj. -113.941 iterations 4
Cbc0038I Pass  11: suminf.    0.22415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  12: suminf.    0.32327 (1) obj. -113.941 iterations 1
Cbc0038I Pass  13: suminf.    0.92972 (3) obj. -113.941 iterations 5
Cbc0038I Pass  14: suminf.    0.21982 (1) obj. -113.941 iterations 2
Cbc0038I Pass  15: suminf.    0.48927 (1) obj. -113.941 iterations 1
Cbc0038I Pass  16: suminf.    0.21626 (1) obj. -113.941 iterations 2
Cbc0038I Pass  17: suminf.    0.46000 (1) obj. -113.941 iterations 1
Cbc0038I Pass  18: suminf.    0.21626 (1) obj. -113.941 iterations 1
Cbc0038I Pass  19: suminf.    0.92291 (4) obj. -113.941 iterations 7
Cbc0038I Pass  20: suminf.    0.45630 (2) obj. -113.941 iterations 2
Cbc0038I Pass  21: suminf.    0.40991 (1) obj. -113.941 iterations 1
Cbc0038I Pass  22: suminf.    0.22640 (1) obj. -113.941 iterations 2
Cbc0038I Pass  23: suminf.    0.41951 (1) obj. -113.941 iterations 1
Cbc0038I Pass  24: suminf.    0.16764 (1) obj. -113.941 iterations 7
Cbc0038I Pass  25: suminf.    0.16764 (1) obj. -113.941 iterations 4
Cbc0038I Pass  26: suminf.    0.33415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -113.941 iterations 5
Cbc0038I Solution found of -113.941
Cbc0038I Relaxing continuous gives -117.603
Cbc0038I Rounding solution of -119.693 is better than previous of -117.603

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -143.489
Cbc0038I Pass  28: suminf.    0.64806 (2) obj. -143.489 iterations 0
Cbc0038I Pass  29: suminf.    0.47385 (2) obj. -143.489 iterations 2
Cbc0038I Pass  30: suminf.    0.34950 (1) obj. -143.489 iterations 2
Cbc0038I Pass  31: suminf.    0.39268 (1) obj. -143.489 iterations 1
Cbc0038I Pass  32: suminf.    0.46488 (1) obj. -143.489 iterations 3
Cbc0038I Pass  33: suminf.    0.25154 (1) obj. -143.489 iterations 2
Cbc0038I Pass  34: suminf.    0.46488 (1) obj. -143.489 iterations 1
Cbc0038I Pass  35: suminf.    0.33397 (1) obj. -143.489 iterations 5
Cbc0038I Pass  36: suminf.    0.33397 (1) obj. -143.489 iterations 1
Cbc0038I Pass  37: suminf.    0.46611 (2) obj. -143.489 iterations 3
Cbc0038I Pass  38: suminf.    0.49244 (1) obj. -143.489 iterations 2
Cbc0038I Pass  39: suminf.    0.32656 (1) obj. -143.489 iterations 1
Cbc0038I Pass  40: suminf.    0.32300 (1) obj. -143.489 iterations 3
Cbc0038I Pass  41: suminf.    0.32300 (1) obj. -143.489 iterations 4
Cbc0038I Pass  42: suminf.    0.47829 (1) obj. -143.489 iterations 1
Cbc0038I Pass  43: suminf.    0.65367 (2) obj. -143.489 iterations 4
Cbc0038I Pass  44: suminf.    0.48743 (2) obj. -143.489 iterations 1
Cbc0038I Pass  45: suminf.    0.48940 (2) obj. -143.489 iterations 1
Cbc0038I Pass  46: suminf.    0.65367 (2) obj. -143.489 iterations 1
Cbc0038I Pass  47: suminf.    0.66422 (3) obj. -143.489 iterations 5
Cbc0038I Pass  48: suminf.    0.62093 (3) obj. -143.489 iterations 1
Cbc0038I Pass  49: suminf.    0.37126 (2) obj. -143.489 iterations 2
Cbc0038I Pass  50: suminf.    0.33118 (1) obj. -143.489 iterations 1
Cbc0038I Pass  51: suminf.    0.46255 (2) obj. -143.489 iterations 3
Cbc0038I Pass  52: suminf.    0.47829 (1) obj. -143.489 iterations 2
Cbc0038I Pass  53: suminf.    0.32300 (1) obj. -143.489 iterations 1
Cbc0038I Pass  54: suminf.    0.35481 (2) obj. -143.489 iterations 11
Cbc0038I Pass  55: suminf.    0.77719 (3) obj. -143.489 iterations 3
Cbc0038I Pass  56: suminf.    0.73739 (3) obj. -143.489 iterations 1
Cbc0038I Pass  57: suminf.    0.48882 (2) obj. -143.489 iterations 2
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -172.043
Cbc0038I Pass  57: suminf.    0.86642 (3) obj. -172.043 iterations 1
Cbc0038I Pass  58: suminf.    0.59683 (2) obj. -172.043 iterations 2
Cbc0038I Pass  59: suminf.    0.55911 (2) obj. -172.043 iterations 1
Cbc0038I Pass  60: suminf.    0.63051 (2) obj. -172.043 iterations 2
Cbc0038I Pass  61: suminf.    0.43058 (1) obj. -172.043 iterations 2
Cbc0038I Pass  62: suminf.    0.39268 (1) obj. -172.043 iterations 1
Cbc0038I Pass  63: suminf.    0.77687 (5) obj. -172.043 iterations 9
Cbc0038I Pass  64: suminf.    0.29735 (3) obj. -172.043 iterations 4
Cbc0038I Pass  65: suminf.    0.74572 (2) obj. -172.043 iterations 4
Cbc0038I Pass  66: suminf.    0.25180 (1) obj. -172.043 iterations 1
Cbc0038I Pass  67: suminf.    0.25122 (1) obj. -172.043 iterations 1
Cbc0038I Pass  68: suminf.    0.77083 (6) obj. -172.043 iterations 9
Cbc0038I Pass  69: suminf.    0.65305 (3) obj. -172.043 iterations 4
Cbc0038I Pass  70: suminf.    0.64381 (2) obj. -172.043 iterations 2
Cbc0038I Pass  71: suminf.    0.51143 (2) obj. -172.043 iterations 1
Cbc0038I Pass  72: suminf.    0.51310 (2) obj. -172.043 iterations 1
Cbc0038I Pass  73: suminf.    0.51686 (2) obj. -172.043 iterations 1
Cbc0038I Pass  74: suminf.    0.51686 (2) obj. -172.043 iterations 0
Cbc0038I Pass  75: suminf.    0.65193 (2) obj. -172.043 iterations 1
Cbc0038I Pass  76: suminf.    0.51499 (2) obj. -172.043 iterations 1
Cbc0038I Pass  77: suminf.    0.65671 (2) obj. -172.043 iterations 3
Cbc0038I Pass  78: suminf.    0.49871 (2) obj. -172.043 iterations 1
Cbc0038I Pass  79: suminf.    0.46710 (2) obj. -172.043 iterations 1
Cbc0038I Pass  80: suminf.    0.61023 (2) obj. -172.043 iterations 2
Cbc0038I Pass  81: suminf.    0.61023 (2) obj. -172.043 iterations 0
Cbc0038I Pass  82: suminf.    0.76044 (2) obj. -172.043 iterations 2
Cbc0038I Pass  83: suminf.    0.76044 (2) obj. -172.043 iterations 0
Cbc0038I Pass  84: suminf.    0.76768 (2) obj. -172.043 iterations 2
Cbc0038I Pass  85: suminf.    0.32417 (2) obj. -172.043 iterations 2
Cbc0038I Pass  86: suminf.    0.32417 (2) obj. -172.043 iterations 0
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -192.032
Cbc0038I Pass  86: suminf.    1.01916 (3) obj. -192.032 iterations 0
Cbc0038I Pass  87: suminf.    0.72343 (2) obj. -192.032 iterations 2
Cbc0038I Pass  88: suminf.    0.71306 (2) obj. -192.032 iterations 1
Cbc0038I Pass  89: suminf.    0.80412 (3) obj. -192.032 iterations 2
Cbc0038I Pass  90: suminf.    0.72074 (2) obj. -192.032 iterations 4
Cbc0038I Pass  91: suminf.    0.59224 (2) obj. -192.032 iterations 1
Cbc0038I Pass  92: suminf.    0.56867 (3) obj. -192.032 iterations 1
Cbc0038I Pass  93: suminf.    0.89361 (2) obj. -192.032 iterations 3
Cbc0038I Pass  94: suminf.    0.82297 (2) obj. -192.032 iterations 1
Cbc0038I Pass  95: suminf.    0.77555 (3) obj. -192.032 iterations 1
Cbc0038I Pass  96: suminf.    0.89780 (2) obj. -192.032 iterations 3
Cbc0038I Pass  97: suminf.    0.71670 (2) obj. -192.032 iterations 1
Cbc0038I Pass  98: suminf.    1.80271 (6) obj. -192.032 iterations 6
Cbc0038I Pass  99: suminf.    0.72049 (3) obj. -192.032 iterations 3
Cbc0038I Pass 100: suminf.    1.07459 (3) obj. -192.032 iterations 1
Cbc0038I Pass 101: suminf.    1.11245 (4) obj. -192.032 iterations 3
Cbc0038I Pass 102: suminf.    0.96799 (4) obj. -192.032 iterations 4
Cbc0038I Pass 103: suminf.    1.08223 (5) obj. -192.032 iterations 2
Cbc0038I Pass 104: suminf.    0.63493 (3) obj. -192.032 iterations 4
Cbc0038I Pass 105: suminf.    0.63493 (3) obj. -192.032 iterations 0
Cbc0038I Pass 106: suminf.    0.84799 (2) obj. -192.032 iterations 3
Cbc0038I Pass 107: suminf.    0.38445 (2) obj. -192.032 iterations 1
Cbc0038I Pass 108: suminf.    0.89719 (3) obj. -192.032 iterations 3
Cbc0038I Pass 109: suminf.    0.87667 (2) obj. -192.032 iterations 3
Cbc0038I Pass 110: suminf.    0.59121 (2) obj. -192.032 iterations 1
Cbc0038I Pass 111: suminf.    0.59121 (2) obj. -192.032 iterations 0
Cbc0038I Pass 112: suminf.    1.71572 (6) obj. -192.032 iterations 5
Cbc0038I Pass 113: suminf.    1.01782 (3) obj. -192.032 iterations 4
Cbc0038I Pass 114: suminf.    0.81511 (2) obj. -192.032 iterations 2
Cbc0038I Pass 115: suminf.    0.69187 (2) obj. -192.032 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -119.693 - took 0.03 seconds
Cbc0012I Integer solution of -119.69282 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 11 rows 13 columns
Cbc0031I 4 added rows had average density of 3
Cbc0013I At root node, 39 cuts changed objective from -238.67123 to -119.69282 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 2.7 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -119.692822, took 8 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-8) rows, 44 (-2) columns and 349 (-39) elements
Clp1000I sum of infeasibilities 0 - average 0, 42 fixed columns
Coin0506I Presolve 2 (-38) rows, 2 (-42) columns and 4 (-345) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 321.78685
Clp0000I Optimal - objective value 321.78685
Coin0511I After Postsolve, objective 321.78685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0322007 - largest nonzero change 1.7857169e-05 ( 0.0017857169%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 520.2193
Clp0000I Optimal - objective value 520.2193
Clp0000I Optimal - objective value 520.2193
Coin0511I After Postsolve, objective 520.2193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 520.2192999 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 43 columns (43 integer (43 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.79624
Cbc0038I Pass   1: suminf.    3.68589 (9) obj. -398.787 iterations 14
Cbc0038I Pass   2: suminf.    3.18589 (8) obj. -377.287 iterations 1
Cbc0038I Solution found of -332.498
Cbc0038I Rounding solution of -353.76 is better than previous of -332.498

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -364.987
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.68589 (9) obj. -398.787 iterations 0
Cbc0038I Pass   4: suminf.    0.25022 (1) obj. -364.987 iterations 15
Cbc0038I Pass   5: suminf.    0.41829 (1) obj. -386.811 iterations 1
Cbc0038I Pass   6: suminf.    1.61625 (6) obj. -364.987 iterations 8
Cbc0038I Pass   7: suminf.    0.72494 (2) obj. -364.987 iterations 7
Cbc0038I Pass   8: suminf.    0.39780 (1) obj. -385.932 iterations 2
Cbc0038I Pass   9: suminf.    0.23649 (1) obj. -364.987 iterations 1
Cbc0038I Pass  10: suminf.    2.13043 (7) obj. -364.987 iterations 12
Cbc0038I Solution found of -390.336
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 43 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -390.336 to -396.018 (0.04 seconds)
Cbc0038I Round again with cutoff of -410.02
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  11: suminf.    3.77241 (10) obj. -410.02 iterations 1
Cbc0038I Pass  12: suminf.    0.89080 (2) obj. -410.02 iterations 14
Cbc0038I Pass  13: suminf.    0.70446 (2) obj. -410.02 iterations 2
Cbc0038I Pass  14: suminf.    1.63396 (5) obj. -410.02 iterations 4
Cbc0038I Pass  15: suminf.    0.62023 (2) obj. -410.02 iterations 3
Cbc0038I Pass  16: suminf.    0.65755 (2) obj. -410.02 iterations 2
Cbc0038I Pass  17: suminf.    4.65932 (11) obj. -410.02 iterations 13
Cbc0038I Pass  18: suminf.    1.13789 (4) obj. -410.02 iterations 13
Cbc0038I Pass  19: suminf.    1.43001 (4) obj. -410.02 iterations 6
Cbc0038I Pass  20: suminf.    0.96150 (3) obj. -410.02 iterations 1
Cbc0038I Pass  21: suminf.    0.95109 (3) obj. -410.02 iterations 2
Cbc0038I Pass  22: suminf.    0.64952 (3) obj. -410.02 iterations 2
Cbc0038I Pass  23: suminf.    0.64952 (3) obj. -410.02 iterations 0
Cbc0038I Pass  24: suminf.    1.43001 (4) obj. -410.02 iterations 5
Cbc0038I Pass  25: suminf.    0.96150 (3) obj. -410.02 iterations 1
Cbc0038I Pass  26: suminf.    0.95109 (3) obj. -410.02 iterations 2
Cbc0038I Pass  27: suminf.    0.64952 (3) obj. -410.02 iterations 2
Cbc0038I Pass  28: suminf.    0.64952 (3) obj. -410.02 iterations 0
Cbc0038I Pass  29: suminf.    1.43001 (4) obj. -410.02 iterations 5
Cbc0038I Pass  30: suminf.    0.96150 (3) obj. -410.02 iterations 1
Cbc0038I Pass  31: suminf.    0.95109 (3) obj. -410.02 iterations 2
Cbc0038I Pass  32: suminf.    0.64952 (3) obj. -410.02 iterations 2
Cbc0038I Pass  33: suminf.    0.64952 (3) obj. -410.02 iterations 0
Cbc0038I Pass  34: suminf.    1.43001 (4) obj. -410.02 iterations 5
Cbc0038I Pass  35: suminf.    0.96150 (3) obj. -410.02 iterations 1
Cbc0038I Pass  36: suminf.    0.95109 (3) obj. -410.02 iterations 2
Cbc0038I Pass  37: suminf.    0.64952 (3) obj. -410.02 iterations 2
Cbc0038I Pass  38: suminf.    0.64952 (3) obj. -410.02 iterations 0
Cbc0038I Pass  39: suminf.    1.43001 (4) obj. -410.02 iterations 5
Cbc0038I Pass  40: suminf.    0.96150 (3) obj. -410.02 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -396.018 - took 0.02 seconds
Cbc0012I Integer solution of -396.01833 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 39 rows 43 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -416.39992 found by DiveCoefficient after 35 iterations and 0 nodes (0.06 seconds)
Cbc0031I 4 added rows had average density of 4.5
Cbc0013I At root node, 4 cuts changed objective from -419.86955 to -416.39992 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 2.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -416.3999200000001, took 35 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 19 (-6) columns and 77 (-58) elements
Clp1000I sum of infeasibilities 5.97106e-06 - average 1.92615e-07, 2 fixed columns
Coin0506I Presolve 22 (-9) rows, 16 (-3) columns and 56 (-21) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Coin0511I After Postsolve, objective 238.67123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Coin0511I After Postsolve, objective 238.67123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 238.6712306 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.94766
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -44.488 iterations 8
Cbc0038I Solution found of -44.488
Cbc0038I Relaxing continuous gives -44.488
Cbc0038I Rounding solution of -66.0722 is better than previous of -44.488

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -66.0722 to -100.082 (0.01 seconds)
Cbc0038I Round again with cutoff of -113.941
Cbc0038I Pass   2: suminf.    0.42050 (2) obj. -113.941 iterations 2
Cbc0038I Pass   3: suminf.    0.46585 (1) obj. -113.941 iterations 2
Cbc0038I Pass   4: suminf.    0.26148 (2) obj. -113.941 iterations 2
Cbc0038I Pass   5: suminf.    0.39268 (1) obj. -113.941 iterations 2
Cbc0038I Pass   6: suminf.    0.12194 (1) obj. -113.941 iterations 1
Cbc0038I Pass   7: suminf.    0.22039 (1) obj. -113.941 iterations 4
Cbc0038I Pass   8: suminf.    0.07474 (1) obj. -113.941 iterations 4
Cbc0038I Pass   9: suminf.    0.47415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  10: suminf.    0.22415 (1) obj. -113.941 iterations 4
Cbc0038I Pass  11: suminf.    0.22415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  12: suminf.    0.32327 (1) obj. -113.941 iterations 1
Cbc0038I Pass  13: suminf.    0.92972 (3) obj. -113.941 iterations 5
Cbc0038I Pass  14: suminf.    0.21982 (1) obj. -113.941 iterations 2
Cbc0038I Pass  15: suminf.    0.48927 (1) obj. -113.941 iterations 1
Cbc0038I Pass  16: suminf.    0.21626 (1) obj. -113.941 iterations 2
Cbc0038I Pass  17: suminf.    0.46000 (1) obj. -113.941 iterations 1
Cbc0038I Pass  18: suminf.    0.21626 (1) obj. -113.941 iterations 1
Cbc0038I Pass  19: suminf.    0.92291 (4) obj. -113.941 iterations 7
Cbc0038I Pass  20: suminf.    0.45630 (2) obj. -113.941 iterations 2
Cbc0038I Pass  21: suminf.    0.40991 (1) obj. -113.941 iterations 1
Cbc0038I Pass  22: suminf.    0.22640 (1) obj. -113.941 iterations 2
Cbc0038I Pass  23: suminf.    0.41951 (1) obj. -113.941 iterations 1
Cbc0038I Pass  24: suminf.    0.16764 (1) obj. -113.941 iterations 7
Cbc0038I Pass  25: suminf.    0.16764 (1) obj. -113.941 iterations 4
Cbc0038I Pass  26: suminf.    0.33415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -113.941 iterations 5
Cbc0038I Solution found of -113.941
Cbc0038I Relaxing continuous gives -117.603
Cbc0038I Rounding solution of -119.693 is better than previous of -117.603

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -143.489
Cbc0038I Pass  28: suminf.    0.64806 (2) obj. -143.489 iterations 0
Cbc0038I Pass  29: suminf.    0.47385 (2) obj. -143.489 iterations 2
Cbc0038I Pass  30: suminf.    0.34950 (1) obj. -143.489 iterations 2
Cbc0038I Pass  31: suminf.    0.39268 (1) obj. -143.489 iterations 1
Cbc0038I Pass  32: suminf.    0.46488 (1) obj. -143.489 iterations 3
Cbc0038I Pass  33: suminf.    0.25154 (1) obj. -143.489 iterations 2
Cbc0038I Pass  34: suminf.    0.46488 (1) obj. -143.489 iterations 1
Cbc0038I Pass  35: suminf.    0.33397 (1) obj. -143.489 iterations 5
Cbc0038I Pass  36: suminf.    0.33397 (1) obj. -143.489 iterations 1
Cbc0038I Pass  37: suminf.    0.46611 (2) obj. -143.489 iterations 3
Cbc0038I Pass  38: suminf.    0.49244 (1) obj. -143.489 iterations 2
Cbc0038I Pass  39: suminf.    0.32656 (1) obj. -143.489 iterations 1
Cbc0038I Pass  40: suminf.    0.32300 (1) obj. -143.489 iterations 3
Cbc0038I Pass  41: suminf.    0.32300 (1) obj. -143.489 iterations 4
Cbc0038I Pass  42: suminf.    0.47829 (1) obj. -143.489 iterations 1
Cbc0038I Pass  43: suminf.    0.65367 (2) obj. -143.489 iterations 4
Cbc0038I Pass  44: suminf.    0.48743 (2) obj. -143.489 iterations 1
Cbc0038I Pass  45: suminf.    0.48940 (2) obj. -143.489 iterations 1
Cbc0038I Pass  46: suminf.    0.65367 (2) obj. -143.489 iterations 1
Cbc0038I Pass  47: suminf.    0.66422 (3) obj. -143.489 iterations 5
Cbc0038I Pass  48: suminf.    0.62093 (3) obj. -143.489 iterations 1
Cbc0038I Pass  49: suminf.    0.37126 (2) obj. -143.489 iterations 2
Cbc0038I Pass  50: suminf.    0.33118 (1) obj. -143.489 iterations 1
Cbc0038I Pass  51: suminf.    0.46255 (2) obj. -143.489 iterations 3
Cbc0038I Pass  52: suminf.    0.47829 (1) obj. -143.489 iterations 2
Cbc0038I Pass  53: suminf.    0.32300 (1) obj. -143.489 iterations 1
Cbc0038I Pass  54: suminf.    0.35481 (2) obj. -143.489 iterations 11
Cbc0038I Pass  55: suminf.    0.77719 (3) obj. -143.489 iterations 3
Cbc0038I Pass  56: suminf.    0.73739 (3) obj. -143.489 iterations 1
Cbc0038I Pass  57: suminf.    0.48882 (2) obj. -143.489 iterations 2
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -172.043
Cbc0038I Pass  57: suminf.    0.86642 (3) obj. -172.043 iterations 1
Cbc0038I Pass  58: suminf.    0.59683 (2) obj. -172.043 iterations 2
Cbc0038I Pass  59: suminf.    0.55911 (2) obj. -172.043 iterations 1
Cbc0038I Pass  60: suminf.    0.63051 (2) obj. -172.043 iterations 2
Cbc0038I Pass  61: suminf.    0.43058 (1) obj. -172.043 iterations 2
Cbc0038I Pass  62: suminf.    0.39268 (1) obj. -172.043 iterations 1
Cbc0038I Pass  63: suminf.    0.77687 (5) obj. -172.043 iterations 9
Cbc0038I Pass  64: suminf.    0.29735 (3) obj. -172.043 iterations 4
Cbc0038I Pass  65: suminf.    0.74572 (2) obj. -172.043 iterations 4
Cbc0038I Pass  66: suminf.    0.25180 (1) obj. -172.043 iterations 1
Cbc0038I Pass  67: suminf.    0.25122 (1) obj. -172.043 iterations 1
Cbc0038I Pass  68: suminf.    0.77083 (6) obj. -172.043 iterations 9
Cbc0038I Pass  69: suminf.    0.65305 (3) obj. -172.043 iterations 4
Cbc0038I Pass  70: suminf.    0.64381 (2) obj. -172.043 iterations 2
Cbc0038I Pass  71: suminf.    0.51143 (2) obj. -172.043 iterations 1
Cbc0038I Pass  72: suminf.    0.51310 (2) obj. -172.043 iterations 1
Cbc0038I Pass  73: suminf.    0.51686 (2) obj. -172.043 iterations 1
Cbc0038I Pass  74: suminf.    0.51686 (2) obj. -172.043 iterations 0
Cbc0038I Pass  75: suminf.    0.65193 (2) obj. -172.043 iterations 1
Cbc0038I Pass  76: suminf.    0.51499 (2) obj. -172.043 iterations 1
Cbc0038I Pass  77: suminf.    0.65671 (2) obj. -172.043 iterations 3
Cbc0038I Pass  78: suminf.    0.49871 (2) obj. -172.043 iterations 1
Cbc0038I Pass  79: suminf.    0.46710 (2) obj. -172.043 iterations 1
Cbc0038I Pass  80: suminf.    0.61023 (2) obj. -172.043 iterations 2
Cbc0038I Pass  81: suminf.    0.61023 (2) obj. -172.043 iterations 0
Cbc0038I Pass  82: suminf.    0.76044 (2) obj. -172.043 iterations 2
Cbc0038I Pass  83: suminf.    0.76044 (2) obj. -172.043 iterations 0
Cbc0038I Pass  84: suminf.    0.76768 (2) obj. -172.043 iterations 2
Cbc0038I Pass  85: suminf.    0.32417 (2) obj. -172.043 iterations 2
Cbc0038I Pass  86: suminf.    0.32417 (2) obj. -172.043 iterations 0
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -192.032
Cbc0038I Pass  86: suminf.    1.01916 (3) obj. -192.032 iterations 0
Cbc0038I Pass  87: suminf.    0.72343 (2) obj. -192.032 iterations 2
Cbc0038I Pass  88: suminf.    0.71306 (2) obj. -192.032 iterations 1
Cbc0038I Pass  89: suminf.    0.80412 (3) obj. -192.032 iterations 2
Cbc0038I Pass  90: suminf.    0.72074 (2) obj. -192.032 iterations 4
Cbc0038I Pass  91: suminf.    0.59224 (2) obj. -192.032 iterations 1
Cbc0038I Pass  92: suminf.    0.56867 (3) obj. -192.032 iterations 1
Cbc0038I Pass  93: suminf.    0.89361 (2) obj. -192.032 iterations 3
Cbc0038I Pass  94: suminf.    0.82297 (2) obj. -192.032 iterations 1
Cbc0038I Pass  95: suminf.    0.77555 (3) obj. -192.032 iterations 1
Cbc0038I Pass  96: suminf.    0.89780 (2) obj. -192.032 iterations 3
Cbc0038I Pass  97: suminf.    0.71670 (2) obj. -192.032 iterations 1
Cbc0038I Pass  98: suminf.    1.80271 (6) obj. -192.032 iterations 6
Cbc0038I Pass  99: suminf.    0.72049 (3) obj. -192.032 iterations 3
Cbc0038I Pass 100: suminf.    1.07459 (3) obj. -192.032 iterations 1
Cbc0038I Pass 101: suminf.    1.11245 (4) obj. -192.032 iterations 3
Cbc0038I Pass 102: suminf.    0.96799 (4) obj. -192.032 iterations 4
Cbc0038I Pass 103: suminf.    1.08223 (5) obj. -192.032 iterations 2
Cbc0038I Pass 104: suminf.    0.63493 (3) obj. -192.032 iterations 4
Cbc0038I Pass 105: suminf.    0.63493 (3) obj. -192.032 iterations 0
Cbc0038I Pass 106: suminf.    0.84799 (2) obj. -192.032 iterations 3
Cbc0038I Pass 107: suminf.    0.38445 (2) obj. -192.032 iterations 1
Cbc0038I Pass 108: suminf.    0.89719 (3) obj. -192.032 iterations 3
Cbc0038I Pass 109: suminf.    0.87667 (2) obj. -192.032 iterations 3
Cbc0038I Pass 110: suminf.    0.59121 (2) obj. -192.032 iterations 1
Cbc0038I Pass 111: suminf.    0.59121 (2) obj. -192.032 iterations 0
Cbc0038I Pass 112: suminf.    1.71572 (6) obj. -192.032 iterations 5
Cbc0038I Pass 113: suminf.    1.01782 (3) obj. -192.032 iterations 4
Cbc0038I Pass 114: suminf.    0.81511 (2) obj. -192.032 iterations 2
Cbc0038I Pass 115: suminf.    0.69187 (2) obj. -192.032 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -119.693 - took 0.02 seconds
Cbc0012I Integer solution of -119.69282 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 11 rows 13 columns
Cbc0031I 4 added rows had average density of 3
Cbc0013I At root node, 39 cuts changed objective from -238.67123 to -119.69282 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 2.7 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -119.692822, took 8 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 40 (-7) columns and 276 (-113) elements
Clp1000I sum of infeasibilities 6.98347e-09 - average 1.99528e-10, 34 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-40) columns and 0 (-276) elements
Clp0000I Optimal - objective value 106.52361
Clp0000I Optimal - objective value 106.52361
Coin0511I After Postsolve, objective 106.52361, infeasibilities - dual 17.753915 (1), primal 0 (0)
Coin0512I Presolved model was optimal, full model needs cleaning up
Clp0014I Perturbing problem by 0.001% of 1.2977057 - largest nonzero change 1.4579339e-05 ( 0.0014579339%) - largest zero change 1.8240846e-05
Clp0000I Optimal - objective value 280.75077
Clp0000I Optimal - objective value 280.75077
Clp0000I Optimal - objective value 280.75077
Coin0511I After Postsolve, objective 280.75077, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 280.7507739 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 277 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.54892
Cbc0038I Pass   1: suminf.    0.51538 (4) obj. -199.783 iterations 12
Cbc0038I Solution found of -73.6917
Cbc0038I Rounding solution of -82.0946 is better than previous of -73.6917

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -95.2028
Cbc0038I Pass   2: suminf.    0.51538 (4) obj. -199.783 iterations 0
Cbc0038I Pass   3: suminf.    0.16567 (1) obj. -95.2028 iterations 4
Cbc0038I Pass   4: suminf.    0.17927 (1) obj. -180.258 iterations 1
Cbc0038I Pass   5: suminf.    1.60100 (4) obj. -95.2028 iterations 11
Cbc0038I Pass   6: suminf.    1.36889 (3) obj. -95.2028 iterations 4
Cbc0038I Pass   7: suminf.    0.47877 (1) obj. -95.2028 iterations 2
Cbc0038I Pass   8: suminf.    0.24024 (1) obj. -131.687 iterations 1
Cbc0038I Pass   9: suminf.    0.95807 (4) obj. -95.2028 iterations 7
Cbc0038I Pass  10: suminf.    0.54743 (2) obj. -95.2028 iterations 3
Cbc0038I Pass  11: suminf.    0.47502 (1) obj. -95.2028 iterations 2
Cbc0038I Pass  12: suminf.    0.24024 (1) obj. -125.687 iterations 1
Cbc0038I Pass  13: suminf.    0.25907 (3) obj. -95.2028 iterations 8
Cbc0038I Pass  14: suminf.    0.15488 (1) obj. -96.4305 iterations 4
Cbc0038I Pass  15: suminf.    0.16433 (1) obj. -95.2028 iterations 1
Cbc0038I Pass  16: suminf.    0.62349 (2) obj. -95.2028 iterations 6
Cbc0038I Pass  17: suminf.    0.30610 (1) obj. -111.906 iterations 2
Cbc0038I Pass  18: suminf.    0.43474 (1) obj. -95.2028 iterations 1
Cbc0038I Pass  19: suminf.    0.83844 (3) obj. -95.2028 iterations 9
Cbc0038I Pass  20: suminf.    0.83844 (3) obj. -95.2028 iterations 0
Cbc0038I Pass  21: suminf.    0.37073 (1) obj. -103.091 iterations 2
Cbc0038I Pass  22: suminf.    0.30998 (1) obj. -95.2028 iterations 1
Cbc0038I Pass  23: suminf.    3.48669 (10) obj. -95.2028 iterations 14
Cbc0038I Pass  24: suminf.    2.02344 (6) obj. -95.2028 iterations 4
Cbc0038I Pass  25: suminf.    0.45663 (3) obj. -95.2028 iterations 5
Cbc0038I Pass  26: suminf.    0.45663 (3) obj. -95.2028 iterations 0
Cbc0038I Pass  27: suminf.    0.80058 (3) obj. -95.2028 iterations 2
Cbc0038I Pass  28: suminf.    0.45663 (3) obj. -95.2028 iterations 1
Cbc0038I Pass  29: suminf.    2.55393 (8) obj. -95.2028 iterations 14
Cbc0038I Pass  30: suminf.    2.55393 (8) obj. -95.2028 iterations 1
Cbc0038I Pass  31: suminf.    0.80268 (2) obj. -95.2028 iterations 10
Cbc0038I Rounding solution of -94.2644 is better than previous of -82.0946

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -118.798
Cbc0038I Pass  31: suminf.    0.51538 (4) obj. -199.783 iterations 0
Cbc0038I Pass  32: suminf.    0.34739 (1) obj. -118.798 iterations 4
Cbc0038I Pass  33: suminf.    0.17927 (1) obj. -180.258 iterations 1
Cbc0038I Pass  34: suminf.    1.09920 (3) obj. -118.798 iterations 6
Cbc0038I Pass  35: suminf.    0.32561 (1) obj. -126.351 iterations 3
Cbc0038I Pass  36: suminf.    0.38379 (1) obj. -118.798 iterations 1
Cbc0038I Pass  37: suminf.    0.80657 (3) obj. -118.798 iterations 4
Cbc0038I Pass  38: suminf.    0.67482 (2) obj. -118.798 iterations 1
Cbc0038I Pass  39: suminf.    0.37879 (1) obj. -118.798 iterations 2
Cbc0038I Pass  40: suminf.    0.20366 (1) obj. -141.538 iterations 1
Cbc0038I Pass  41: suminf.    2.29225 (6) obj. -118.798 iterations 8
Cbc0038I Pass  42: suminf.    0.95999 (3) obj. -118.798 iterations 4
Cbc0038I Pass  43: suminf.    0.31477 (2) obj. -149.538 iterations 2
Cbc0038I Pass  44: suminf.    0.37879 (1) obj. -118.798 iterations 2
Cbc0038I Pass  45: suminf.    0.20366 (1) obj. -141.538 iterations 1
Cbc0038I Pass  46: suminf.    0.50938 (2) obj. -126.218 iterations 4
Cbc0038I Pass  47: suminf.    0.35000 (1) obj. -124.784 iterations 1
Cbc0038I Pass  48: suminf.    0.39610 (1) obj. -118.798 iterations 1
Cbc0038I Pass  49: suminf.    1.74464 (6) obj. -118.798 iterations 8
Cbc0038I Pass  50: suminf.    1.28108 (4) obj. -118.798 iterations 2
Cbc0038I Pass  51: suminf.    0.34643 (1) obj. -118.798 iterations 4
Cbc0038I Pass  52: suminf.    0.49244 (1) obj. -139.719 iterations 1
Cbc0038I Pass  53: suminf.    1.30157 (5) obj. -118.798 iterations 8
Cbc0038I Pass  54: suminf.    0.94367 (3) obj. -118.798 iterations 3
Cbc0038I Pass  55: suminf.    0.45585 (1) obj. -121.552 iterations 3
Cbc0038I Pass  56: suminf.    0.47707 (1) obj. -118.798 iterations 1
Cbc0038I Pass  57: suminf.    0.64239 (4) obj. -118.798 iterations 4
Cbc0038I Pass  58: suminf.    0.53169 (2) obj. -118.798 iterations 2
Cbc0038I Pass  59: suminf.    0.18939 (1) obj. -118.798 iterations 2
Cbc0038I Pass  60: suminf.    0.49244 (1) obj. -160.11 iterations 1
Cbc0038I Rounding solution of -119.693 is better than previous of -94.2644

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -147.738
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.51538 (4) obj. -199.783 iterations 0
Cbc0038I Pass  61: suminf.    0.42972 (1) obj. -147.738 iterations 4
Cbc0038I Pass  62: suminf.    0.17927 (1) obj. -180.258 iterations 1
Cbc0038I Pass  63: suminf.    0.72277 (4) obj. -147.738 iterations 5
Cbc0038I Pass  64: suminf.    0.54508 (3) obj. -147.738 iterations 2
Cbc0038I Pass  65: suminf.    0.38351 (1) obj. -147.738 iterations 3
Cbc0038I Pass  66: suminf.    0.17927 (1) obj. -174.258 iterations 1
Cbc0038I Pass  67: suminf.    1.08018 (5) obj. -147.738 iterations 5
Cbc0038I Pass  68: suminf.    0.89700 (4) obj. -147.738 iterations 1
Cbc0038I Pass  69: suminf.    1.97654 (10) obj. -147.738 iterations 12
Cbc0038I Pass  70: suminf.    1.43081 (10) obj. -147.738 iterations 4
Cbc0038I Pass  71: suminf.    1.13061 (10) obj. -152.241 iterations 1
Cbc0038I Pass  72: suminf.    0.37826 (1) obj. -147.738 iterations 11
Cbc0038I Pass  73: suminf.    0.14268 (1) obj. -178.326 iterations 1
Cbc0038I Pass  74: suminf.    0.35033 (2) obj. -181.195 iterations 5
Cbc0038I Pass  75: suminf.    0.14268 (1) obj. -179.326 iterations 4
Cbc0038I Pass  76: suminf.    0.38596 (1) obj. -147.738 iterations 1
Cbc0038I Pass  77: suminf.    0.68834 (2) obj. -147.738 iterations 5
Cbc0038I Pass  78: suminf.    0.22805 (1) obj. -167.991 iterations 2
Cbc0038I Pass  79: suminf.    0.38403 (1) obj. -147.738 iterations 1
Cbc0038I Pass  80: suminf.    0.87370 (3) obj. -147.738 iterations 8
Cbc0038I Pass  81: suminf.    0.26463 (1) obj. -154.549 iterations 4
Cbc0038I Pass  82: suminf.    0.31709 (1) obj. -147.738 iterations 1
Cbc0038I Pass  83: suminf.    1.38488 (5) obj. -147.738 iterations 7
Cbc0038I Pass  84: suminf.    1.08780 (4) obj. -152.031 iterations 2
Cbc0038I Pass  85: suminf.    0.79047 (3) obj. -147.738 iterations 5
Cbc0038I Pass  86: suminf.    0.79047 (3) obj. -147.738 iterations 0
Cbc0038I Pass  87: suminf.    0.89619 (3) obj. -147.738 iterations 4
Cbc0038I Pass  88: suminf.    1.19203 (4) obj. -147.738 iterations 7
Cbc0038I Pass  89: suminf.    1.19203 (4) obj. -147.738 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -119.693 - took 0.02 seconds
Cbc0012I Integer solution of -119.69282 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 6 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 5
Cbc0013I At root node, 3 cuts changed objective from -213.17651 to -120.67952 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 1.9 elements, 20 column cuts (20 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0001I Search completed - best objective -119.692822, took 29 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

