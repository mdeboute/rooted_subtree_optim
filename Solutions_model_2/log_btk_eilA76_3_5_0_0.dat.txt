Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 61 (-17) columns and 335 (-118) elements
Clp1000I sum of infeasibilities 5.00567e-05 - average 4.55061e-07, 15 fixed columns
Coin0506I Presolve 73 (-37) rows, 42 (-19) columns and 223 (-112) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.32935881 - largest nonzero change 0 ( 0%) - largest zero change 2.6938322e-05
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Coin0511I After Postsolve, objective 94.203531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Coin0511I After Postsolve, objective 94.203531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.20353129 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 61 columns (60 integer (60 of which binary)) and 336 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.466%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 5.59707
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.3075 iterations 34
Cbc0038I Solution found of -28.3075
Cbc0038I Relaxing continuous gives -28.3075
Cbc0038I Rounding solution of -38.6499 is better than previous of -28.3075

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -38.6499 to -70.3816 (0.02 seconds)
Cbc0038I Round again with cutoff of -72.7639
Cbc0038I Pass   2: suminf.    1.70705 (10) obj. -72.7639 iterations 12
Cbc0038I Pass   3: suminf.    1.52747 (5) obj. -72.7639 iterations 3
Cbc0038I Pass   4: suminf.    1.17056 (4) obj. -72.7639 iterations 6
Cbc0038I Pass   5: suminf.    0.75074 (3) obj. -72.7639 iterations 4
Cbc0038I Pass   6: suminf.    1.14544 (3) obj. -72.7639 iterations 1
Cbc0038I Pass   7: suminf.    0.91178 (4) obj. -72.7639 iterations 5
Cbc0038I Pass   8: suminf.    0.84437 (3) obj. -72.7639 iterations 5
Cbc0038I Pass   9: suminf.    0.37302 (2) obj. -72.7639 iterations 3
Cbc0038I Pass  10: suminf.    0.28653 (2) obj. -72.7639 iterations 1
Cbc0038I Pass  11: suminf.    0.74289 (5) obj. -72.7639 iterations 9
Cbc0038I Pass  12: suminf.    0.81934 (2) obj. -72.7639 iterations 7
Cbc0038I Pass  13: suminf.    0.59834 (3) obj. -72.7639 iterations 4
Cbc0038I Pass  14: suminf.    1.08197 (3) obj. -72.7639 iterations 2
Cbc0038I Pass  15: suminf.    2.62409 (9) obj. -72.7639 iterations 12
Cbc0038I Pass  16: suminf.    1.83319 (7) obj. -72.7639 iterations 10
Cbc0038I Pass  17: suminf.    2.53540 (7) obj. -72.7639 iterations 12
Cbc0038I Pass  18: suminf.    0.68806 (6) obj. -72.7639 iterations 5
Cbc0038I Pass  19: suminf.    0.91021 (4) obj. -72.7639 iterations 6
Cbc0038I Pass  20: suminf.    0.89070 (4) obj. -72.7639 iterations 3
Cbc0038I Pass  21: suminf.    1.17647 (4) obj. -72.7639 iterations 4
Cbc0038I Pass  22: suminf.    1.02504 (5) obj. -72.7639 iterations 4
Cbc0038I Pass  23: suminf.    4.44187 (16) obj. -72.7639 iterations 27
Cbc0038I Pass  24: suminf.    2.46054 (9) obj. -72.7639 iterations 19
Cbc0038I Pass  25: suminf.    1.32512 (5) obj. -72.7639 iterations 6
Cbc0038I Pass  26: suminf.    1.32512 (5) obj. -72.7639 iterations 0
Cbc0038I Pass  27: suminf.    1.49482 (6) obj. -72.7639 iterations 4
Cbc0038I Pass  28: suminf.    1.30616 (6) obj. -72.7639 iterations 1
Cbc0038I Pass  29: suminf.    1.97334 (6) obj. -72.7639 iterations 8
Cbc0038I Pass  30: suminf.    1.53879 (6) obj. -72.7639 iterations 5
Cbc0038I Pass  31: suminf.    1.63464 (6) obj. -72.7639 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -70.3816 - took 0.03 seconds
Cbc0012I Integer solution of -70.38163 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 110 rows 61 columns, reduced to 41 rows 24 columns
Cbc0031I 18 added rows had average density of 32.666667
Cbc0013I At root node, 18 cuts changed objective from -94.203531 to -83.725242 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3329 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1066 row cuts average 45.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 176 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 37.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0012I Integer solution of -70.49287 found by rounding after 4035 iterations and 15 nodes (0.45 seconds)
Cbc0016I Integer solution of -71.79663 found by strong branching after 4262 iterations and 30 nodes (0.48 seconds)
Cbc0001I Search completed - best objective -71.7966296, took 4368 iterations and 32 nodes (0.48 seconds)
Cbc0032I Strong branching done 316 times (5083 iterations), fathomed 5 nodes and fixed 20 variables
Cbc0035I Maximum depth 8, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-58) rows, 106 (-46) columns and 1645 (-1658) elements
Clp1000I sum of infeasibilities 3.41225e-07 - average 3.55443e-09, 21 fixed columns
Coin0506I Presolve 75 (-21) rows, 85 (-21) columns and 1068 (-577) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 1.9359693 - largest nonzero change 1.3027424e-05 ( 0.0008514623%) - largest zero change 2.8598801e-05
Clp0000I Optimal - objective value 141.31996
Clp0000I Optimal - objective value 141.31996
Coin0511I After Postsolve, objective 141.31996, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8286484 - largest nonzero change 1.2841216e-05 ( 0.0012841216%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 141.31996
Clp0000I Optimal - objective value 141.31996
Clp0000I Optimal - objective value 141.31996
Coin0511I After Postsolve, objective 141.31996, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 141.3199579 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 106 columns (106 integer (106 of which binary)) and 1658 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.812%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 3.42585
Cbc0038I Pass   1: suminf.    0.95148 (12) obj. -50.7987 iterations 27
Cbc0038I Pass   2: suminf.    0.95148 (12) obj. -50.7987 iterations 1
Cbc0038I Pass   3: suminf.    0.05196 (2) obj. -39.8907 iterations 10
Cbc0038I Solution found of -35.9946
Cbc0038I Rounding solution of -59.7612 is better than previous of -35.9946

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 106 columns, reduced to 30 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -59.7612 to -71.9946 (0.04 seconds)
Cbc0038I Round again with cutoff of -76.997
Cbc0038I Pass   4: suminf.    2.15922 (37) obj. -76.997 iterations 15
Cbc0038I Pass   5: suminf.    1.61963 (38) obj. -76.997 iterations 1
Cbc0038I Pass   6: suminf.    1.28347 (37) obj. -76.997 iterations 2
Cbc0038I Pass   7: suminf.    0.96799 (17) obj. -76.997 iterations 22
Cbc0038I Pass   8: suminf.    0.20831 (2) obj. -76.997 iterations 19
Cbc0038I Pass   9: suminf.    0.20831 (2) obj. -76.997 iterations 0
Cbc0038I Pass  10: suminf.    0.26946 (2) obj. -76.997 iterations 3
Cbc0038I Pass  11: suminf.    1.01321 (11) obj. -76.997 iterations 18
Cbc0038I Pass  12: suminf.    0.74307 (9) obj. -76.997 iterations 6
Cbc0038I Pass  13: suminf.    1.01308 (3) obj. -76.997 iterations 11
Cbc0038I Pass  14: suminf.    1.01308 (3) obj. -76.997 iterations 0
Cbc0038I Pass  15: suminf.    0.62487 (3) obj. -76.997 iterations 2
Cbc0038I Pass  16: suminf.    0.62487 (3) obj. -76.997 iterations 0
Cbc0038I Pass  17: suminf.    1.01308 (3) obj. -76.997 iterations 2
Cbc0038I Pass  18: suminf.    1.47795 (16) obj. -76.997 iterations 25
Cbc0038I Pass  19: suminf.    1.07559 (14) obj. -79.9551 iterations 3
Cbc0038I Pass  20: suminf.    0.50352 (3) obj. -76.997 iterations 18
Cbc0038I Pass  21: suminf.    0.25352 (3) obj. -76.997 iterations 4
Cbc0038I Pass  22: suminf.    0.60726 (3) obj. -76.997 iterations 4
Cbc0038I Pass  23: suminf.    0.97013 (11) obj. -76.997 iterations 18
Cbc0038I Pass  24: suminf.    0.97013 (11) obj. -76.997 iterations 1
Cbc0038I Pass  25: suminf.    1.34558 (3) obj. -76.997 iterations 20
Cbc0038I Pass  26: suminf.    0.92425 (3) obj. -76.997 iterations 3
Cbc0038I Pass  27: suminf.    0.92425 (3) obj. -76.997 iterations 0
Cbc0038I Pass  28: suminf.    1.34558 (3) obj. -76.997 iterations 2
Cbc0038I Pass  29: suminf.    0.65234 (10) obj. -76.997 iterations 18
Cbc0038I Pass  30: suminf.    0.59192 (8) obj. -78.4202 iterations 6
Cbc0038I Pass  31: suminf.    1.12792 (3) obj. -76.997 iterations 12
Cbc0038I Pass  32: suminf.    0.72867 (3) obj. -76.997 iterations 1
Cbc0038I Pass  33: suminf.    0.75861 (3) obj. -76.997 iterations 5
Cbc0038I Rounding solution of -72.4118 is better than previous of -71.9946

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 106 columns, reduced to 51 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -72.4118 to -76.4885 (0.07 seconds)
Cbc0038I Round again with cutoff of -86.0012
Cbc0038I Pass  33: suminf.    2.49178 (37) obj. -86.0012 iterations 0
Cbc0038I Pass  34: suminf.    0.48309 (13) obj. -86.0012 iterations 25
Cbc0038I Pass  35: suminf.    0.48309 (13) obj. -86.0012 iterations 0
Cbc0038I Pass  36: suminf.    1.14938 (5) obj. -86.0012 iterations 18
Cbc0038I Pass  37: suminf.    1.02852 (6) obj. -86.0012 iterations 4
Cbc0038I Pass  38: suminf.    1.17480 (6) obj. -86.0012 iterations 5
Cbc0038I Pass  39: suminf.    1.17480 (6) obj. -86.0012 iterations 3
Cbc0038I Pass  40: suminf.    1.02852 (6) obj. -86.0012 iterations 5
Cbc0038I Pass  41: suminf.    1.14241 (8) obj. -86.0012 iterations 6
Cbc0038I Pass  42: suminf.    0.98086 (9) obj. -86.0012 iterations 10
Cbc0038I Pass  43: suminf.    1.02852 (6) obj. -86.0012 iterations 9
Cbc0038I Pass  44: suminf.    1.02852 (6) obj. -86.0012 iterations 3
Cbc0038I Pass  45: suminf.    1.17480 (6) obj. -86.0012 iterations 5
Cbc0038I Pass  46: suminf.    1.17480 (6) obj. -86.0012 iterations 3
Cbc0038I Pass  47: suminf.    1.02852 (6) obj. -86.0012 iterations 5
Cbc0038I Pass  48: suminf.    1.69453 (13) obj. -86.0012 iterations 18
Cbc0038I Pass  49: suminf.    1.69264 (13) obj. -86.0012 iterations 4
Cbc0038I Pass  50: suminf.    1.76831 (8) obj. -86.0012 iterations 25
Cbc0038I Pass  51: suminf.    1.75193 (8) obj. -86.0012 iterations 5
Cbc0038I Pass  52: suminf.    1.23590 (7) obj. -86.0012 iterations 9
Cbc0038I Pass  53: suminf.    1.23590 (7) obj. -86.0012 iterations 4
Cbc0038I Pass  54: suminf.    1.38708 (7) obj. -86.0012 iterations 9
Cbc0038I Pass  55: suminf.    1.38708 (7) obj. -86.0012 iterations 4
Cbc0038I Pass  56: suminf.    1.23590 (7) obj. -86.0012 iterations 7
Cbc0038I Pass  57: suminf.    1.94498 (12) obj. -86.0012 iterations 14
Cbc0038I Pass  58: suminf.    1.94498 (12) obj. -86.0012 iterations 1
Cbc0038I Pass  59: suminf.    1.23590 (7) obj. -86.0012 iterations 27
Cbc0038I Pass  60: suminf.    1.23590 (7) obj. -86.0012 iterations 0
Cbc0038I Pass  61: suminf.    1.38708 (7) obj. -86.0012 iterations 9
Cbc0038I Pass  62: suminf.    1.38708 (7) obj. -86.0012 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 106 columns, reduced to 30 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -76.4885 - took 0.05 seconds
Cbc0012I Integer solution of -76.48853 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 96 rows 106 columns, reduced to 1 rows 2 columns
Cbc0031I 41 added rows had average density of 2.7804878
Cbc0013I At root node, 41 cuts changed objective from -122.01796 to -78.026535 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 714 row cuts average 6.3 elements, 17 column cuts (17 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 53.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 218 row cuts average 47.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -76.48853 best solution, best possible -77.86641 (0.33 seconds)
Cbc0001I Search completed - best objective -76.48852960000002, took 296 iterations and 4 nodes (0.56 seconds)
Cbc0032I Strong branching done 26 times (120 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 61 (-17) columns and 335 (-118) elements
Clp1000I sum of infeasibilities 5.00567e-05 - average 4.55061e-07, 15 fixed columns
Coin0506I Presolve 73 (-37) rows, 42 (-19) columns and 223 (-112) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.32935881 - largest nonzero change 0 ( 0%) - largest zero change 2.6938322e-05
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Coin0511I After Postsolve, objective 94.203531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Coin0511I After Postsolve, objective 94.203531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.20353129 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 61 columns (60 integer (60 of which binary)) and 336 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.466%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 5.59707
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.3075 iterations 34
Cbc0038I Solution found of -28.3075
Cbc0038I Relaxing continuous gives -28.3075
Cbc0038I Rounding solution of -38.6499 is better than previous of -28.3075

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -38.6499 to -70.3816 (0.03 seconds)
Cbc0038I Round again with cutoff of -72.7639
Cbc0038I Pass   2: suminf.    1.70705 (10) obj. -72.7639 iterations 12
Cbc0038I Pass   3: suminf.    1.52747 (5) obj. -72.7639 iterations 3
Cbc0038I Pass   4: suminf.    1.17056 (4) obj. -72.7639 iterations 6
Cbc0038I Pass   5: suminf.    0.75074 (3) obj. -72.7639 iterations 4
Cbc0038I Pass   6: suminf.    1.14544 (3) obj. -72.7639 iterations 1
Cbc0038I Pass   7: suminf.    0.91178 (4) obj. -72.7639 iterations 5
Cbc0038I Pass   8: suminf.    0.84437 (3) obj. -72.7639 iterations 5
Cbc0038I Pass   9: suminf.    0.37302 (2) obj. -72.7639 iterations 3
Cbc0038I Pass  10: suminf.    0.28653 (2) obj. -72.7639 iterations 1
Cbc0038I Pass  11: suminf.    0.74289 (5) obj. -72.7639 iterations 9
Cbc0038I Pass  12: suminf.    0.81934 (2) obj. -72.7639 iterations 7
Cbc0038I Pass  13: suminf.    0.59834 (3) obj. -72.7639 iterations 4
Cbc0038I Pass  14: suminf.    1.08197 (3) obj. -72.7639 iterations 2
Cbc0038I Pass  15: suminf.    2.62409 (9) obj. -72.7639 iterations 12
Cbc0038I Pass  16: suminf.    1.83319 (7) obj. -72.7639 iterations 10
Cbc0038I Pass  17: suminf.    2.53540 (7) obj. -72.7639 iterations 12
Cbc0038I Pass  18: suminf.    0.68806 (6) obj. -72.7639 iterations 5
Cbc0038I Pass  19: suminf.    0.91021 (4) obj. -72.7639 iterations 6
Cbc0038I Pass  20: suminf.    0.89070 (4) obj. -72.7639 iterations 3
Cbc0038I Pass  21: suminf.    1.17647 (4) obj. -72.7639 iterations 4
Cbc0038I Pass  22: suminf.    1.02504 (5) obj. -72.7639 iterations 4
Cbc0038I Pass  23: suminf.    4.44187 (16) obj. -72.7639 iterations 27
Cbc0038I Pass  24: suminf.    2.46054 (9) obj. -72.7639 iterations 19
Cbc0038I Pass  25: suminf.    1.32512 (5) obj. -72.7639 iterations 6
Cbc0038I Pass  26: suminf.    1.32512 (5) obj. -72.7639 iterations 0
Cbc0038I Pass  27: suminf.    1.49482 (6) obj. -72.7639 iterations 4
Cbc0038I Pass  28: suminf.    1.30616 (6) obj. -72.7639 iterations 1
Cbc0038I Pass  29: suminf.    1.97334 (6) obj. -72.7639 iterations 8
Cbc0038I Pass  30: suminf.    1.53879 (6) obj. -72.7639 iterations 5
Cbc0038I Pass  31: suminf.    1.63464 (6) obj. -72.7639 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -70.3816 - took 0.04 seconds
Cbc0012I Integer solution of -70.38163 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 110 rows 61 columns, reduced to 41 rows 24 columns
Cbc0031I 18 added rows had average density of 32.666667
Cbc0013I At root node, 18 cuts changed objective from -94.203531 to -83.725242 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3329 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1066 row cuts average 45.3 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 176 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 37.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0012I Integer solution of -70.49287 found by rounding after 4035 iterations and 15 nodes (0.44 seconds)
Cbc0016I Integer solution of -71.79663 found by strong branching after 4262 iterations and 30 nodes (0.46 seconds)
Cbc0001I Search completed - best objective -71.7966296, took 4368 iterations and 32 nodes (0.46 seconds)
Cbc0032I Strong branching done 316 times (5083 iterations), fathomed 5 nodes and fixed 20 variables
Cbc0035I Maximum depth 8, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 105 (-48) columns and 1599 (-1705) elements
Clp1000I sum of infeasibilities 1.33531e-07 - average 1.40559e-09, 63 fixed columns
Coin0506I Presolve 34 (-61) rows, 42 (-63) columns and 147 (-1452) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.5187959 - largest nonzero change 1.923909e-05 ( 0.0010393299%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 40.632176
Clp0000I Optimal - objective value 40.632176
Coin0511I After Postsolve, objective 40.632176, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8365749 - largest nonzero change 1.4800108e-05 ( 0.0010393299%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 105.91116
Clp0000I Optimal - objective value 105.91116
Clp0000I Optimal - objective value 105.91116
Coin0511I After Postsolve, objective 105.91116, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.9111631 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 105 columns (105 integer (105 of which binary)) and 1602 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.743%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 4.0749
Cbc0038I Pass   1: suminf.    2.70650 (23) obj. -95.7132 iterations 12
Cbc0038I Pass   2: suminf.    2.70650 (23) obj. -95.7132 iterations 0
Cbc0038I Pass   3: suminf.    0.27380 (6) obj. -29.5338 iterations 16
Cbc0038I Solution found of -21.8609
Cbc0038I Rounding solution of -58.8987 is better than previous of -21.8609

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 105 columns, reduced to 22 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -58.8987 to -64.7579 (0.02 seconds)
Cbc0038I Round again with cutoff of -67.8901
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.70650 (23) obj. -95.7132 iterations 0
Cbc0038I Pass   5: suminf.    2.70650 (23) obj. -95.7132 iterations 0
Cbc0038I Pass   6: suminf.    0.31085 (2) obj. -67.8901 iterations 37
Cbc0038I Pass   7: suminf.    0.31085 (2) obj. -67.8901 iterations 0
Cbc0038I Pass   8: suminf.    0.50000 (1) obj. -67.9169 iterations 6
Cbc0038I Pass   9: suminf.    0.49874 (1) obj. -67.8901 iterations 2
Cbc0038I Pass  10: suminf.    0.50000 (1) obj. -67.9169 iterations 2
Cbc0038I Pass  11: suminf.    0.57686 (7) obj. -67.8901 iterations 25
Cbc0038I Pass  12: suminf.    0.47649 (5) obj. -67.8901 iterations 3
Cbc0038I Pass  13: suminf.    0.25953 (3) obj. -67.8901 iterations 8
Cbc0038I Pass  14: suminf.    0.20091 (6) obj. -68.1865 iterations 4
Cbc0038I Pass  15: suminf.    0.20286 (5) obj. -67.8901 iterations 15
Cbc0038I Pass  16: suminf.    0.20183 (4) obj. -67.8938 iterations 3
Cbc0038I Pass  17: suminf.    0.20277 (4) obj. -67.8901 iterations 5
Cbc0038I Pass  18: suminf.    1.46668 (10) obj. -67.8901 iterations 22
Cbc0038I Pass  19: suminf.    1.12903 (10) obj. -68.903 iterations 4
Cbc0038I Pass  20: suminf.    0.96807 (7) obj. -67.8901 iterations 17
Cbc0038I Pass  21: suminf.    0.96807 (7) obj. -67.8901 iterations 2
Cbc0038I Pass  22: suminf.    1.07807 (7) obj. -67.8901 iterations 3
Cbc0038I Pass  23: suminf.    1.07807 (7) obj. -67.8901 iterations 2
Cbc0038I Pass  24: suminf.    0.96807 (7) obj. -67.8901 iterations 5
Cbc0038I Pass  25: suminf.    1.78297 (19) obj. -67.8901 iterations 16
Cbc0038I Pass  26: suminf.    1.44109 (18) obj. -67.8901 iterations 9
Cbc0038I Pass  27: suminf.    1.57865 (14) obj. -67.8901 iterations 18
Cbc0038I Pass  28: suminf.    1.38667 (14) obj. -67.8901 iterations 4
Cbc0038I Pass  29: suminf.    1.57865 (14) obj. -67.8901 iterations 6
Cbc0038I Pass  30: suminf.    1.77471 (18) obj. -67.8901 iterations 18
Cbc0038I Pass  31: suminf.    1.75585 (18) obj. -67.8901 iterations 4
Cbc0038I Pass  32: suminf.    2.92878 (13) obj. -67.8901 iterations 15
Cbc0038I Pass  33: suminf.    1.09877 (9) obj. -67.8901 iterations 3
Cbc0038I Rounding solution of -66.3394 is better than previous of -64.7579

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 105 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -66.3394 to -69.1875 (0.05 seconds)
Cbc0038I Round again with cutoff of -74.5658
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.70650 (23) obj. -95.7132 iterations 0
Cbc0038I Pass  34: suminf.    2.70650 (23) obj. -95.7132 iterations 0
Cbc0038I Pass  35: suminf.    0.37821 (5) obj. -74.5658 iterations 19
Cbc0038I Pass  36: suminf.    0.37821 (5) obj. -74.5658 iterations 0
Cbc0038I Pass  37: suminf.    0.47407 (3) obj. -74.5658 iterations 11
Cbc0038I Pass  38: suminf.    0.48186 (3) obj. -74.5658 iterations 4
Cbc0038I Pass  39: suminf.    0.82196 (4) obj. -74.5658 iterations 5
Cbc0038I Pass  40: suminf.    0.53100 (4) obj. -75.7297 iterations 1
Cbc0038I Pass  41: suminf.    0.82196 (4) obj. -74.5658 iterations 9
Cbc0038I Pass  42: suminf.    0.99707 (9) obj. -74.5658 iterations 15
Cbc0038I Pass  43: suminf.    0.82743 (9) obj. -74.5658 iterations 4
Cbc0038I Pass  44: suminf.    0.54045 (6) obj. -74.5658 iterations 8
Cbc0038I Pass  45: suminf.    0.29987 (4) obj. -74.5658 iterations 3
Cbc0038I Pass  46: suminf.    1.37810 (5) obj. -74.5658 iterations 4
Cbc0038I Pass  47: suminf.    0.68997 (5) obj. -74.5658 iterations 3
Cbc0038I Pass  48: suminf.    1.38794 (11) obj. -74.5658 iterations 22
Cbc0038I Pass  49: suminf.    0.93221 (10) obj. -74.5658 iterations 5
Cbc0038I Pass  50: suminf.    1.71972 (9) obj. -74.5658 iterations 12
Cbc0038I Pass  51: suminf.    0.81372 (7) obj. -74.5658 iterations 6
Cbc0038I Pass  52: suminf.    0.79067 (8) obj. -74.5658 iterations 2
Cbc0038I Pass  53: suminf.    1.18320 (13) obj. -74.5658 iterations 13
Cbc0038I Pass  54: suminf.    0.99963 (13) obj. -74.5658 iterations 5
Cbc0038I Pass  55: suminf.    2.00165 (8) obj. -74.5658 iterations 21
Cbc0038I Pass  56: suminf.    0.45113 (6) obj. -74.5658 iterations 4
Cbc0038I Pass  57: suminf.    0.45113 (6) obj. -74.5658 iterations 0
Cbc0038I Pass  58: suminf.    1.37810 (7) obj. -74.5658 iterations 4
Cbc0038I Pass  59: suminf.    0.54195 (7) obj. -74.5658 iterations 3
Cbc0038I Pass  60: suminf.    1.71803 (11) obj. -74.5658 iterations 17
Cbc0038I Pass  61: suminf.    1.44722 (10) obj. -74.5658 iterations 5
Cbc0038I Pass  62: suminf.    2.11475 (10) obj. -74.5658 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 105 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -69.1875 - took 0.05 seconds
Cbc0012I Integer solution of -69.18755 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 95 rows 105 columns, reduced to 11 rows 15 columns
Cbc0031I 49 added rows had average density of 13.061224
Cbc0013I At root node, 49 cuts changed objective from -96.0786 to -74.327365 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 1540 row cuts average 6.1 elements, 10 column cuts (10 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 166 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 260 row cuts average 41.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -69.18755 best solution, best possible -74.327365 (0.45 seconds)
Cbc0012I Integer solution of -69.21066 found by DiveCoefficient after 570 iterations and 2 nodes (0.71 seconds)
Cbc0016I Integer solution of -71.79663 found by strong branching after 736 iterations and 7 nodes (0.99 seconds)
Cbc0001I Search completed - best objective -71.7966296, took 1000 iterations and 14 nodes (0.99 seconds)
Cbc0032I Strong branching done 242 times (4098 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.66   (Wallclock seconds):       1.00

