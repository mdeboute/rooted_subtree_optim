Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-30) rows, 68 (-10) columns and 378 (-75) elements
Clp1000I sum of infeasibilities 3.33093e-05 - average 2.66474e-07, 9 fixed columns
Coin0506I Presolve 107 (-18) rows, 58 (-10) columns and 322 (-56) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.34607747 - largest nonzero change 0 ( 0%) - largest zero change 2.9770415e-05
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Coin0511I After Postsolve, objective 50.805234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Coin0511I After Postsolve, objective 50.805234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.80523389 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 120 rows, 68 columns (67 integer (67 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.48397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.1815 iterations 37
Cbc0038I Solution found of -11.1815
Cbc0038I Relaxing continuous gives -11.1815
Cbc0038I Rounding solution of -15.6669 is better than previous of -11.1815

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 49 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -15.6669 to -21.0805 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.9928
Cbc0038I Pass   2: suminf.    0.92919 (5) obj. -23.9928 iterations 9
Cbc0038I Pass   3: suminf.    1.00470 (4) obj. -23.9928 iterations 9
Cbc0038I Pass   4: suminf.    0.79343 (4) obj. -23.9928 iterations 9
Cbc0038I Pass   5: suminf.    0.92919 (5) obj. -23.9928 iterations 9
Cbc0038I Pass   6: suminf.    1.76218 (6) obj. -23.9928 iterations 12
Cbc0038I Pass   7: suminf.    0.77561 (5) obj. -23.9928 iterations 10
Cbc0038I Pass   8: suminf.    0.76857 (5) obj. -23.9928 iterations 2
Cbc0038I Pass   9: suminf.    0.54020 (4) obj. -23.9928 iterations 12
Cbc0038I Pass  10: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  11: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  12: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  13: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  14: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  15: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  16: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  17: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  18: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  19: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  20: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  21: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  22: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  23: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  24: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  25: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  26: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  27: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  28: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  29: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  30: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  31: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -21.0805 to -21.1001 (0.07 seconds)
Cbc0038I Round again with cutoff of -29.2348
Cbc0038I Pass  31: suminf.    1.42688 (11) obj. -29.2348 iterations 3
Cbc0038I Pass  32: suminf.    1.80951 (5) obj. -29.2348 iterations 16
Cbc0038I Pass  33: suminf.    1.41454 (5) obj. -29.2348 iterations 3
Cbc0038I Pass  34: suminf.    1.41454 (5) obj. -29.2348 iterations 1
Cbc0038I Pass  35: suminf.    1.75010 (4) obj. -29.2348 iterations 11
Cbc0038I Pass  36: suminf.    1.74543 (6) obj. -29.2348 iterations 2
Cbc0038I Pass  37: suminf.    1.53067 (6) obj. -29.2348 iterations 5
Cbc0038I Pass  38: suminf.    1.51706 (6) obj. -29.2348 iterations 5
Cbc0038I Pass  39: suminf.    1.64471 (4) obj. -29.2348 iterations 6
Cbc0038I Pass  40: suminf.    1.15220 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  41: suminf.    1.14561 (6) obj. -29.2348 iterations 2
Cbc0038I Pass  42: suminf.    1.48835 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  43: suminf.    1.24761 (3) obj. -29.2348 iterations 4
Cbc0038I Pass  44: suminf.    1.24376 (3) obj. -29.2348 iterations 1
Cbc0038I Pass  45: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  46: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  47: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  48: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I Pass  49: suminf.    1.24376 (3) obj. -29.2348 iterations 5
Cbc0038I Pass  50: suminf.    1.24376 (3) obj. -29.2348 iterations 0
Cbc0038I Pass  51: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  52: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  53: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  54: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I Pass  55: suminf.    1.24376 (3) obj. -29.2348 iterations 5
Cbc0038I Pass  56: suminf.    1.24376 (3) obj. -29.2348 iterations 0
Cbc0038I Pass  57: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  58: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  59: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  60: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -21.1001 - took 0.06 seconds
Cbc0012I Integer solution of -21.1001 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 120 rows 68 columns, reduced to 50 rows 28 columns
Cbc0031I 13 added rows had average density of 44.153846
Cbc0013I At root node, 13 cuts changed objective from -50.202787 to -43.529209 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5477 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1132 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0016I Integer solution of -22.48839 found by strong branching after 6117 iterations and 29 nodes (0.68 seconds)
Cbc0010I After 30 nodes, 10 on tree, -22.48839 best solution, best possible -43.529209 (0.68 seconds)
Cbc0001I Search completed - best objective -22.48839, took 7011 iterations and 46 nodes (0.71 seconds)
Cbc0032I Strong branching done 574 times (10313 iterations), fathomed 3 nodes and fixed 18 variables
Cbc0035I Maximum depth 18, 140 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 111 (-41) columns and 1682 (-1621) elements
Clp1000I sum of infeasibilities 1.92202e-07 - average 1.88433e-09, 59 fixed columns
Coin0506I Presolve 49 (-53) rows, 52 (-59) columns and 362 (-1320) elements
Clp0006I 0  Obj 149.07461 Dual inf 43.920841 (52)
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 158.1228
Clp0000I Optimal - objective value 158.1228
Coin0511I After Postsolve, objective 158.1228, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 158.1228 Dual inf 12.122184 (2)
Clp0014I Perturbing problem by 0.001% of 1.6565358 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 159.03947
Clp0000I Optimal - objective value 159.03947
Clp0000I Optimal - objective value 159.03947
Coin0511I After Postsolve, objective 159.03947, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 159.0394691 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 68 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 94 rows, 111 columns (111 integer (111 of which binary)) and 1720 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.686%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 14.2561
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -92.2243 iterations 66
Cbc0038I Solution found of -89.7243
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 111 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -92.6044
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.52298 (2) obj. -92.6044 iterations 3
Cbc0038I Pass   3: suminf.    0.29630 (1) obj. -94.6236 iterations 6
Cbc0038I Pass   4: suminf.    0.17418 (1) obj. -92.6044 iterations 3
Cbc0038I Pass   5: suminf.    5.08282 (14) obj. -92.6044 iterations 35
Cbc0038I Pass   6: suminf.    2.94201 (7) obj. -92.6044 iterations 14
Cbc0038I Pass   7: suminf.    2.01006 (5) obj. -92.6044 iterations 2
Cbc0038I Pass   8: suminf.    0.97825 (2) obj. -93.1448 iterations 3
Cbc0038I Pass   9: suminf.    6.61450 (19) obj. -92.6044 iterations 24
Cbc0038I Pass  10: suminf.    3.95602 (10) obj. -92.6044 iterations 11
Cbc0038I Pass  11: suminf.    0.17418 (1) obj. -92.6044 iterations 16
Cbc0038I Pass  12: suminf.    0.17418 (1) obj. -92.6044 iterations 0
Cbc0038I Pass  13: suminf.    0.29630 (1) obj. -94.6236 iterations 6
Cbc0038I Pass  14: suminf.    3.46598 (12) obj. -92.6044 iterations 20
Cbc0038I Pass  15: suminf.    1.00843 (3) obj. -92.6044 iterations 21
Cbc0038I Pass  16: suminf.    1.00702 (3) obj. -92.6044 iterations 8
Cbc0038I Pass  17: suminf.    0.92928 (2) obj. -92.6044 iterations 4
Cbc0038I Pass  18: suminf.    0.80886 (2) obj. -92.6044 iterations 9
Cbc0038I Pass  19: suminf.    0.80886 (2) obj. -92.6044 iterations 3
Cbc0038I Pass  20: suminf.    3.59231 (10) obj. -92.6044 iterations 20
Cbc0038I Pass  21: suminf.    1.54723 (5) obj. -92.6044 iterations 17
Cbc0038I Pass  22: suminf.    1.54723 (5) obj. -92.6044 iterations 0
Cbc0038I Pass  23: suminf.    0.97460 (2) obj. -92.94 iterations 16
Cbc0038I Pass  24: suminf.    1.60822 (5) obj. -92.6044 iterations 14
Cbc0038I Pass  25: suminf.    4.23752 (12) obj. -92.6044 iterations 22
Cbc0038I Pass  26: suminf.    2.46774 (7) obj. -92.6044 iterations 14
Cbc0038I Pass  27: suminf.    1.15967 (4) obj. -92.6044 iterations 6
Cbc0038I Pass  28: suminf.    0.80886 (2) obj. -92.6044 iterations 10
Cbc0038I Pass  29: suminf.    0.80886 (2) obj. -92.6044 iterations 4
Cbc0038I Pass  30: suminf.    1.00702 (3) obj. -92.6044 iterations 7
Cbc0038I Pass  31: suminf.    0.92928 (2) obj. -92.6044 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 111 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -89.7243 - took 0.03 seconds
Cbc0012I Integer solution of -89.72433 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 31 added rows had average density of 8.0322581
Cbc0013I At root node, 31 cuts changed objective from -115.14041 to -92.196032 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 179 row cuts average 8.8 elements, 47 column cuts (47 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -89.72433000000001, took 75 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-30) rows, 68 (-10) columns and 378 (-75) elements
Clp1000I sum of infeasibilities 3.33093e-05 - average 2.66474e-07, 9 fixed columns
Coin0506I Presolve 107 (-18) rows, 58 (-10) columns and 322 (-56) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.34607747 - largest nonzero change 0 ( 0%) - largest zero change 2.9770415e-05
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Coin0511I After Postsolve, objective 50.805234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Coin0511I After Postsolve, objective 50.805234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.80523389 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 120 rows, 68 columns (67 integer (67 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.48397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.1815 iterations 37
Cbc0038I Solution found of -11.1815
Cbc0038I Relaxing continuous gives -11.1815
Cbc0038I Rounding solution of -15.6669 is better than previous of -11.1815

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 49 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -15.6669 to -21.0805 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.9928
Cbc0038I Pass   2: suminf.    0.92919 (5) obj. -23.9928 iterations 9
Cbc0038I Pass   3: suminf.    1.00470 (4) obj. -23.9928 iterations 9
Cbc0038I Pass   4: suminf.    0.79343 (4) obj. -23.9928 iterations 9
Cbc0038I Pass   5: suminf.    0.92919 (5) obj. -23.9928 iterations 9
Cbc0038I Pass   6: suminf.    1.76218 (6) obj. -23.9928 iterations 12
Cbc0038I Pass   7: suminf.    0.77561 (5) obj. -23.9928 iterations 10
Cbc0038I Pass   8: suminf.    0.76857 (5) obj. -23.9928 iterations 2
Cbc0038I Pass   9: suminf.    0.54020 (4) obj. -23.9928 iterations 12
Cbc0038I Pass  10: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  11: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  12: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  13: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  14: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  15: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  16: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  17: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  18: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  19: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  20: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  21: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  22: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  23: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  24: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  25: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  26: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  27: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  28: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  29: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  30: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  31: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -21.0805 to -21.1001 (0.07 seconds)
Cbc0038I Round again with cutoff of -29.2348
Cbc0038I Pass  31: suminf.    1.42688 (11) obj. -29.2348 iterations 3
Cbc0038I Pass  32: suminf.    1.80951 (5) obj. -29.2348 iterations 16
Cbc0038I Pass  33: suminf.    1.41454 (5) obj. -29.2348 iterations 3
Cbc0038I Pass  34: suminf.    1.41454 (5) obj. -29.2348 iterations 1
Cbc0038I Pass  35: suminf.    1.75010 (4) obj. -29.2348 iterations 11
Cbc0038I Pass  36: suminf.    1.74543 (6) obj. -29.2348 iterations 2
Cbc0038I Pass  37: suminf.    1.53067 (6) obj. -29.2348 iterations 5
Cbc0038I Pass  38: suminf.    1.51706 (6) obj. -29.2348 iterations 5
Cbc0038I Pass  39: suminf.    1.64471 (4) obj. -29.2348 iterations 6
Cbc0038I Pass  40: suminf.    1.15220 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  41: suminf.    1.14561 (6) obj. -29.2348 iterations 2
Cbc0038I Pass  42: suminf.    1.48835 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  43: suminf.    1.24761 (3) obj. -29.2348 iterations 4
Cbc0038I Pass  44: suminf.    1.24376 (3) obj. -29.2348 iterations 1
Cbc0038I Pass  45: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  46: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  47: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  48: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I Pass  49: suminf.    1.24376 (3) obj. -29.2348 iterations 5
Cbc0038I Pass  50: suminf.    1.24376 (3) obj. -29.2348 iterations 0
Cbc0038I Pass  51: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  52: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  53: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  54: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I Pass  55: suminf.    1.24376 (3) obj. -29.2348 iterations 5
Cbc0038I Pass  56: suminf.    1.24376 (3) obj. -29.2348 iterations 0
Cbc0038I Pass  57: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  58: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  59: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  60: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -21.1001 - took 0.07 seconds
Cbc0012I Integer solution of -21.1001 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 120 rows 68 columns, reduced to 50 rows 28 columns
Cbc0031I 13 added rows had average density of 44.153846
Cbc0013I At root node, 13 cuts changed objective from -50.202787 to -43.529209 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5477 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1132 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -21.1001 best solution, best possible -43.529209 (0.70 seconds)
Cbc0016I Integer solution of -22.48839 found by strong branching after 6117 iterations and 29 nodes (0.82 seconds)
Cbc0001I Search completed - best objective -22.48839, took 7011 iterations and 46 nodes (0.86 seconds)
Cbc0032I Strong branching done 574 times (10313 iterations), fathomed 3 nodes and fixed 18 variables
Cbc0035I Maximum depth 18, 140 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.87

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-61) rows, 103 (-50) columns and 1513 (-1791) elements
Clp1000I sum of infeasibilities 1.20117e-07 - average 1.27784e-09, 32 fixed columns
Coin0506I Presolve 67 (-27) rows, 71 (-32) columns and 795 (-718) elements
Clp0006I 0  Obj 60.443616 Dual inf 2.4982357 (69)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 5.4773814 - largest nonzero change 1.3154043e-05 ( 0.00055269619%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 67.998138
Clp0000I Optimal - objective value 67.998138
Coin0511I After Postsolve, objective 67.998138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 67.998138
Clp0000I Optimal - objective value 67.998138
Clp0000I Optimal - objective value 67.998138
Clp0000I Optimal - objective value 67.998138
Coin0511I After Postsolve, objective 67.998138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.99813798 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 106 columns (106 integer (106 of which binary)) and 1558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.546%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 3.55433
Cbc0038I Pass   1: suminf.    1.62941 (24) obj. -47.8365 iterations 6
Cbc0038I Pass   2: suminf.    1.62941 (24) obj. -47.8365 iterations 0
Cbc0038I Pass   3: suminf.    0.82445 (14) obj. -36.7962 iterations 10
Cbc0038I Pass   4: suminf.    0.20151 (4) obj. -14.2717 iterations 10
Cbc0038I Solution found of -10.4732
Cbc0038I Rounding solution of -17.2379 is better than previous of -10.4732

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 106 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -21.6822
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.62941 (24) obj. -47.8365 iterations 0
Cbc0038I Pass   6: suminf.    1.62941 (24) obj. -47.8365 iterations 0
Cbc0038I Pass   7: suminf.    0.57146 (4) obj. -21.6822 iterations 24
Cbc0038I Pass   8: suminf.    0.30866 (4) obj. -26.3505 iterations 2
Cbc0038I Pass   9: suminf.    0.13877 (1) obj. -21.6822 iterations 4
Cbc0038I Pass  10: suminf.    0.07692 (1) obj. -22.6308 iterations 1
Cbc0038I Pass  11: suminf.    1.01956 (8) obj. -21.6822 iterations 15
Cbc0038I Pass  12: suminf.    0.59463 (6) obj. -21.9498 iterations 6
Cbc0038I Pass  13: suminf.    0.51816 (4) obj. -21.6822 iterations 8
Cbc0038I Pass  14: suminf.    0.33399 (3) obj. -21.6822 iterations 3
Cbc0038I Pass  15: suminf.    0.62600 (5) obj. -21.6822 iterations 4
Cbc0038I Pass  16: suminf.    0.55266 (4) obj. -21.6822 iterations 2
Cbc0038I Pass  17: suminf.    0.40749 (4) obj. -21.6822 iterations 9
Cbc0038I Pass  18: suminf.    0.27130 (5) obj. -21.6822 iterations 2
Cbc0038I Pass  19: suminf.    0.58732 (4) obj. -21.6822 iterations 8
Cbc0038I Pass  20: suminf.    0.58399 (3) obj. -21.6822 iterations 1
Cbc0038I Pass  21: suminf.    1.06228 (5) obj. -21.6822 iterations 4
Cbc0038I Pass  22: suminf.    0.76092 (4) obj. -21.6822 iterations 2
Cbc0038I Pass  23: suminf.    0.40749 (4) obj. -21.6822 iterations 7
Cbc0038I Pass  24: suminf.    0.27130 (5) obj. -21.6822 iterations 1
Cbc0038I Pass  25: suminf.    0.58732 (4) obj. -21.6822 iterations 8
Cbc0038I Pass  26: suminf.    0.58399 (3) obj. -21.6822 iterations 1
Cbc0038I Pass  27: suminf.    1.06228 (5) obj. -21.6822 iterations 4
Cbc0038I Pass  28: suminf.    0.76092 (4) obj. -21.6822 iterations 2
Cbc0038I Pass  29: suminf.    0.40749 (4) obj. -21.6822 iterations 7
Cbc0038I Pass  30: suminf.    0.27130 (5) obj. -21.6822 iterations 1
Cbc0038I Pass  31: suminf.    0.58732 (4) obj. -21.6822 iterations 8
Cbc0038I Pass  32: suminf.    0.58399 (3) obj. -21.6822 iterations 1
Cbc0038I Pass  33: suminf.    1.06228 (5) obj. -21.6822 iterations 4
Cbc0038I Pass  34: suminf.    0.76092 (4) obj. -21.6822 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 106 columns, reduced to 7 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -10.4732 to -18.7199 (0.05 seconds)
Cbc0038I Round again with cutoff of -29.6818
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.62941 (24) obj. -47.8365 iterations 0
Cbc0038I Pass  35: suminf.    1.62941 (24) obj. -47.8365 iterations 0
Cbc0038I Pass  36: suminf.    0.50276 (9) obj. -30.2449 iterations 15
Cbc0038I Pass  37: suminf.    0.65797 (6) obj. -29.6818 iterations 10
Cbc0038I Pass  38: suminf.    0.61601 (5) obj. -29.6818 iterations 3
Cbc0038I Pass  39: suminf.    1.07374 (6) obj. -29.6818 iterations 6
Cbc0038I Pass  40: suminf.    0.37665 (4) obj. -29.6818 iterations 2
Cbc0038I Pass  41: suminf.    0.28526 (3) obj. -29.7975 iterations 2
Cbc0038I Pass  42: suminf.    1.03466 (5) obj. -29.6818 iterations 3
Cbc0038I Pass  43: suminf.    1.98386 (11) obj. -29.6818 iterations 21
Cbc0038I Pass  44: suminf.    1.66905 (10) obj. -29.6818 iterations 6
Cbc0038I Pass  45: suminf.    1.08323 (10) obj. -29.6818 iterations 2
Cbc0038I Pass  46: suminf.    1.01603 (6) obj. -29.6818 iterations 11
Cbc0038I Pass  47: suminf.    0.94881 (11) obj. -29.6818 iterations 2
Cbc0038I Pass  48: suminf.    1.23914 (8) obj. -29.6818 iterations 7
Cbc0038I Pass  49: suminf.    0.70750 (7) obj. -29.6818 iterations 3
Cbc0038I Pass  50: suminf.    1.13625 (7) obj. -29.6818 iterations 3
Cbc0038I Pass  51: suminf.    1.86968 (14) obj. -29.6818 iterations 16
Cbc0038I Pass  52: suminf.    1.52674 (9) obj. -29.6818 iterations 3
Cbc0038I Pass  53: suminf.    1.02758 (9) obj. -29.6818 iterations 3
Cbc0038I Pass  54: suminf.    2.36779 (9) obj. -29.6818 iterations 11
Cbc0038I Pass  55: suminf.    2.36779 (9) obj. -29.6818 iterations 0
Cbc0038I Pass  56: suminf.    1.30806 (7) obj. -29.6818 iterations 6
Cbc0038I Pass  57: suminf.    1.26622 (10) obj. -29.6818 iterations 2
Cbc0038I Pass  58: suminf.    1.23914 (8) obj. -29.6818 iterations 7
Cbc0038I Pass  59: suminf.    0.70750 (7) obj. -29.6818 iterations 4
Cbc0038I Pass  60: suminf.    1.13625 (7) obj. -29.6818 iterations 5
Cbc0038I Pass  61: suminf.    1.37391 (9) obj. -29.6818 iterations 19
Cbc0038I Pass  62: suminf.    1.05967 (10) obj. -29.6818 iterations 6
Cbc0038I Pass  63: suminf.    1.49380 (12) obj. -29.6818 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 106 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -18.7199 - took 0.04 seconds
Cbc0012I Integer solution of -18.71994 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 92 rows 106 columns, reduced to 5 rows 6 columns
Cbc0031I 43 added rows had average density of 38.604651
Cbc0013I At root node, 43 cuts changed objective from -61.680032 to -32.903792 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6852 row cuts average 2.7 elements, 1 column cuts (1 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1124 row cuts average 93.3 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 875 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 678 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 825 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 318 row cuts average 57.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 116 row cuts average 45.3 elements, 0 column cuts (0 active)  in 0.691 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.71994 best solution, best possible -32.903792 (2.15 seconds)
Cbc0012I Integer solution of -18.78475 found by rounding after 4059 iterations and 1 nodes (2.16 seconds)
Cbc0004I Integer solution of -21.1001 found after 4060 iterations and 1 nodes (2.16 seconds)
Cbc0010I After 11 nodes, 6 on tree, -21.1001 best solution, best possible -31.996217 (2.86 seconds)
Cbc0010I After 33 nodes, 9 on tree, -21.1001 best solution, best possible -31.996217 (3.57 seconds)
Cbc0038I Full problem 92 rows 106 columns, reduced to 28 rows 32 columns
Cbc0010I After 52 nodes, 3 on tree, -21.1001 best solution, best possible -31.996217 (4.42 seconds)
Cbc0016I Integer solution of -22.48839 found by strong branching after 6935 iterations and 66 nodes (5.00 seconds)
Cbc0001I Search completed - best objective -22.48839, took 7402 iterations and 76 nodes (5.21 seconds)
Cbc0032I Strong branching done 906 times (15928 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 20, 220 variables fixed on reduced cost
Total time (CPU seconds):       3.52   (Wallclock seconds):       5.23

