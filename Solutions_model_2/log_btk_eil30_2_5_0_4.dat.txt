Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 40 (-23) rows, 22 (-10) columns and 117 (-60) elements
Clp0000I Optimal - objective value 181.27473
Coin0511I After Postsolve, objective 181.27473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 181.2747267 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 22 columns (21 integer (21 of which binary)) and 120 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 6.20008
Cbc0038I Pass   1: suminf.    0.06667 (1) obj. -84.8 iterations 16
Cbc0038I Solution found of -40
Cbc0038I Relaxing continuous gives -40
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -40 to -88 (0.01 seconds)
Cbc0038I Round again with cutoff of -95.5728
Cbc0038I Pass   2: suminf.    0.51200 (7) obj. -95.5728 iterations 4
Cbc0038I Pass   3: suminf.    1.26976 (6) obj. -95.5728 iterations 16
Cbc0038I Pass   4: suminf.    0.77434 (6) obj. -95.5728 iterations 13
Cbc0038I Pass   5: suminf.    1.09589 (4) obj. -95.5728 iterations 8
Cbc0038I Pass   6: suminf.    0.70738 (9) obj. -95.5728 iterations 6
Cbc0038I Pass   7: suminf.    0.66516 (2) obj. -95.5728 iterations 13
Cbc0038I Pass   8: suminf.    0.09709 (1) obj. -95.5728 iterations 3
Cbc0038I Pass   9: suminf.    0.28731 (2) obj. -95.5728 iterations 3
Cbc0038I Pass  10: suminf.    0.58236 (2) obj. -95.5728 iterations 2
Cbc0038I Pass  11: suminf.    1.12245 (3) obj. -95.5728 iterations 2
Cbc0038I Pass  12: suminf.    1.12245 (3) obj. -95.5728 iterations 1
Cbc0038I Pass  13: suminf.    1.12245 (3) obj. -95.5728 iterations 0
Cbc0038I Pass  14: suminf.    1.12245 (3) obj. -95.5728 iterations 0
Cbc0038I Pass  15: suminf.    2.73865 (7) obj. -95.5728 iterations 4
Cbc0038I Pass  16: suminf.    1.16285 (5) obj. -95.5728 iterations 4
Cbc0038I Pass  17: suminf.    0.66320 (4) obj. -95.5728 iterations 7
Cbc0038I Pass  18: suminf.    0.46432 (4) obj. -95.5728 iterations 1
Cbc0038I Pass  19: suminf.    0.30400 (1) obj. -95.5728 iterations 3
Cbc0038I Pass  20: suminf.    0.37064 (1) obj. -95.5728 iterations 1
Cbc0038I Pass  21: suminf.    1.20334 (4) obj. -95.5728 iterations 8
Cbc0038I Pass  22: suminf.    1.14074 (4) obj. -95.5728 iterations 2
Cbc0038I Pass  23: suminf.    0.52612 (3) obj. -95.5728 iterations 6
Cbc0038I Pass  24: suminf.    0.12115 (2) obj. -95.5728 iterations 1
Cbc0038I Pass  25: suminf.    0.48180 (2) obj. -95.5728 iterations 4
Cbc0038I Pass  26: suminf.    0.32595 (2) obj. -95.5728 iterations 1
Cbc0038I Pass  27: suminf.    0.81475 (2) obj. -95.5728 iterations 2
Cbc0038I Pass  28: suminf.    1.65068 (4) obj. -95.5728 iterations 3
Cbc0038I Pass  29: suminf.    1.23301 (5) obj. -95.5728 iterations 2
Cbc0038I Pass  30: suminf.    0.46432 (4) obj. -95.5728 iterations 6
Cbc0038I Pass  31: suminf.    0.30400 (1) obj. -95.5728 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -88 to -96 (0.03 seconds)
Cbc0038I Round again with cutoff of -108.546
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.23010 (7) obj. -108.546 iterations 0
Cbc0038I Pass  32: suminf.    1.90519 (6) obj. -108.546 iterations 12
Cbc0038I Pass  33: suminf.    1.90519 (6) obj. -108.546 iterations 0
Cbc0038I Pass  34: suminf.    1.53189 (5) obj. -108.546 iterations 9
Cbc0038I Pass  35: suminf.    1.43120 (6) obj. -108.546 iterations 5
Cbc0038I Pass  36: suminf.    1.86936 (9) obj. -108.546 iterations 8
Cbc0038I Pass  37: suminf.    1.62431 (8) obj. -108.546 iterations 3
Cbc0038I Pass  38: suminf.    0.53140 (5) obj. -108.546 iterations 14
Cbc0038I Pass  39: suminf.    0.53140 (5) obj. -108.546 iterations 0
Cbc0038I Pass  40: suminf.    1.12276 (4) obj. -108.546 iterations 5
Cbc0038I Pass  41: suminf.    0.15323 (1) obj. -108.546 iterations 4
Cbc0038I Pass  42: suminf.    0.17140 (1) obj. -108.546 iterations 1
Cbc0038I Pass  43: suminf.    2.52832 (8) obj. -108.546 iterations 10
Cbc0038I Pass  44: suminf.    0.76115 (4) obj. -108.546 iterations 6
Cbc0038I Pass  45: suminf.    1.38937 (7) obj. -108.546 iterations 8
Cbc0038I Pass  46: suminf.    0.60557 (5) obj. -108.546 iterations 4
Cbc0038I Pass  47: suminf.    0.43836 (5) obj. -108.546 iterations 5
Cbc0038I Pass  48: suminf.    0.43836 (5) obj. -108.546 iterations 0
Cbc0038I Pass  49: suminf.    2.33799 (7) obj. -108.546 iterations 12
Cbc0038I Pass  50: suminf.    3.24132 (8) obj. -108.546 iterations 12
Cbc0038I Pass  51: suminf.    0.58790 (4) obj. -108.546 iterations 10
Cbc0038I Pass  52: suminf.    0.51755 (4) obj. -108.546 iterations 2
Cbc0038I Pass  53: suminf.    1.38937 (7) obj. -108.546 iterations 8
Cbc0038I Pass  54: suminf.    0.60557 (5) obj. -108.546 iterations 4
Cbc0038I Pass  55: suminf.    0.43836 (5) obj. -108.546 iterations 5
Cbc0038I Pass  56: suminf.    0.43836 (5) obj. -108.546 iterations 0
Cbc0038I Pass  57: suminf.    2.33799 (7) obj. -108.546 iterations 12
Cbc0038I Pass  58: suminf.    2.79667 (12) obj. -108.546 iterations 7
Cbc0038I Pass  59: suminf.    1.03178 (7) obj. -108.546 iterations 5
Cbc0038I Pass  60: suminf.    0.66240 (2) obj. -108.546 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -96 - took 0.08 seconds
Cbc0012I Integer solution of -96 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 22 columns, reduced to 28 rows 17 columns
Cbc0031I 6 added rows had average density of 16.666667
Cbc0013I At root node, 6 cuts changed objective from -154.72896 to -104.02308 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 482 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 500 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.654 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -96 best solution, best possible -103.9681 (1.24 seconds)
Cbc0001I Search completed - best objective -96, took 1144 iterations and 2 nodes (1.24 seconds)
Cbc0032I Strong branching done 32 times (218 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       1.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-18) rows, 46 (-14) columns and 376 (-236) elements
Clp1000I sum of infeasibilities 3.65263e-14 - average 8.30144e-16, 37 fixed columns
Coin0506I Presolve 9 (-35) rows, 9 (-37) columns and 32 (-344) elements
Clp0006I 0  Obj 92.298555 Dual inf 14.754571 (5)
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 92.298729
Clp0000I Optimal - objective value 92.298729
Coin0511I After Postsolve, objective 92.298729, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 92.298729 Dual inf 1217.423 (29)
Clp0014I Perturbing problem by 0.001% of 0.22856903 - largest nonzero change 0 ( 0%) - largest zero change 2.7221109e-05
Clp0000I Optimal - objective value 220.87378
Clp0000I Optimal - objective value 220.87378
Clp0000I Optimal - objective value 220.87378
Coin0511I After Postsolve, objective 220.87378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 220.8737848 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 46 columns (46 integer (46 of which binary)) and 381 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.298%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.32285
Cbc0038I Pass   1: suminf.    0.44489 (3) obj. -112.832 iterations 32
Cbc0038I Pass   2: suminf.    0.44489 (3) obj. -112.832 iterations 1
Cbc0038I Solution found of -29
Cbc0038I Rounding solution of -36 is better than previous of -29

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 46 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -36 to -88 (0.01 seconds)
Cbc0038I Round again with cutoff of -95.1034
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.44489 (3) obj. -112.832 iterations 0
Cbc0038I Pass   4: suminf.    0.44489 (3) obj. -112.832 iterations 1
Cbc0038I Pass   5: suminf.    0.31142 (1) obj. -95.1034 iterations 3
Cbc0038I Pass   6: suminf.    0.15323 (1) obj. -110.29 iterations 1
Cbc0038I Pass   7: suminf.    1.21038 (4) obj. -95.1034 iterations 12
Cbc0038I Pass   8: suminf.    0.32929 (3) obj. -106.38 iterations 6
Cbc0038I Pass   9: suminf.    0.43300 (2) obj. -95.1034 iterations 4
Cbc0038I Pass  10: suminf.    0.20469 (2) obj. -105.505 iterations 1
Cbc0038I Pass  11: suminf.    4.28846 (11) obj. -95.1034 iterations 13
Cbc0038I Pass  12: suminf.    2.55057 (11) obj. -95.1034 iterations 6
Cbc0038I Pass  13: suminf.    2.05680 (10) obj. -95.1034 iterations 4
Cbc0038I Pass  14: suminf.    2.51227 (8) obj. -95.1034 iterations 8
Cbc0038I Pass  15: suminf.    2.06640 (12) obj. -95.1034 iterations 4
Cbc0038I Pass  16: suminf.    3.18277 (10) obj. -95.1034 iterations 13
Cbc0038I Pass  17: suminf.    1.92079 (6) obj. -95.1034 iterations 10
Cbc0038I Pass  18: suminf.    1.07519 (4) obj. -95.1034 iterations 8
Cbc0038I Pass  19: suminf.    0.42105 (1) obj. -95.5789 iterations 8
Cbc0038I Pass  20: suminf.    0.39463 (1) obj. -95.1034 iterations 7
Cbc0038I Pass  21: suminf.    1.82311 (5) obj. -95.1034 iterations 5
Cbc0038I Pass  22: suminf.    0.86686 (2) obj. -95.1034 iterations 4
Cbc0038I Pass  23: suminf.    2.90729 (9) obj. -95.1034 iterations 12
Cbc0038I Pass  24: suminf.    0.74300 (4) obj. -95.1034 iterations 11
Cbc0038I Pass  25: suminf.    0.72698 (3) obj. -95.1034 iterations 1
Cbc0038I Pass  26: suminf.    0.96069 (3) obj. -95.1034 iterations 3
Cbc0038I Pass  27: suminf.    4.22740 (15) obj. -95.1034 iterations 18
Cbc0038I Pass  28: suminf.    2.15215 (10) obj. -95.1034 iterations 5
Cbc0038I Pass  29: suminf.    1.44298 (8) obj. -95.1034 iterations 2
Cbc0038I Pass  30: suminf.    1.52222 (5) obj. -95.1034 iterations 7
Cbc0038I Pass  31: suminf.    1.28022 (5) obj. -95.1034 iterations 1
Cbc0038I Pass  32: suminf.    1.26396 (5) obj. -95.1034 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 46 columns, reduced to 33 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -88 - took 0.01 seconds
Cbc0012I Integer solution of -88 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 44 rows 46 columns, reduced to 7 rows 6 columns
Cbc0012I Integer solution of -96 found by DiveCoefficient after 63 iterations and 0 nodes (0.07 seconds)
Cbc0031I 2 added rows had average density of 2
Cbc0013I At root node, 2 cuts changed objective from -150.03505 to -96 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 62 row cuts average 3.1 elements, 23 column cuts (23 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -96, took 63 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 40 (-23) rows, 22 (-10) columns and 117 (-60) elements
Clp0000I Optimal - objective value 181.27473
Coin0511I After Postsolve, objective 181.27473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 181.2747267 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 22 columns (21 integer (21 of which binary)) and 120 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 6.20008
Cbc0038I Pass   1: suminf.    0.06667 (1) obj. -84.8 iterations 16
Cbc0038I Solution found of -40
Cbc0038I Relaxing continuous gives -40
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -40 to -88 (0.01 seconds)
Cbc0038I Round again with cutoff of -95.5728
Cbc0038I Pass   2: suminf.    0.51200 (7) obj. -95.5728 iterations 4
Cbc0038I Pass   3: suminf.    1.26976 (6) obj. -95.5728 iterations 16
Cbc0038I Pass   4: suminf.    0.77434 (6) obj. -95.5728 iterations 13
Cbc0038I Pass   5: suminf.    1.09589 (4) obj. -95.5728 iterations 8
Cbc0038I Pass   6: suminf.    0.70738 (9) obj. -95.5728 iterations 6
Cbc0038I Pass   7: suminf.    0.66516 (2) obj. -95.5728 iterations 13
Cbc0038I Pass   8: suminf.    0.09709 (1) obj. -95.5728 iterations 3
Cbc0038I Pass   9: suminf.    0.28731 (2) obj. -95.5728 iterations 3
Cbc0038I Pass  10: suminf.    0.58236 (2) obj. -95.5728 iterations 2
Cbc0038I Pass  11: suminf.    1.12245 (3) obj. -95.5728 iterations 2
Cbc0038I Pass  12: suminf.    1.12245 (3) obj. -95.5728 iterations 1
Cbc0038I Pass  13: suminf.    1.12245 (3) obj. -95.5728 iterations 0
Cbc0038I Pass  14: suminf.    1.12245 (3) obj. -95.5728 iterations 0
Cbc0038I Pass  15: suminf.    2.73865 (7) obj. -95.5728 iterations 4
Cbc0038I Pass  16: suminf.    1.16285 (5) obj. -95.5728 iterations 4
Cbc0038I Pass  17: suminf.    0.66320 (4) obj. -95.5728 iterations 7
Cbc0038I Pass  18: suminf.    0.46432 (4) obj. -95.5728 iterations 1
Cbc0038I Pass  19: suminf.    0.30400 (1) obj. -95.5728 iterations 3
Cbc0038I Pass  20: suminf.    0.37064 (1) obj. -95.5728 iterations 1
Cbc0038I Pass  21: suminf.    1.20334 (4) obj. -95.5728 iterations 8
Cbc0038I Pass  22: suminf.    1.14074 (4) obj. -95.5728 iterations 2
Cbc0038I Pass  23: suminf.    0.52612 (3) obj. -95.5728 iterations 6
Cbc0038I Pass  24: suminf.    0.12115 (2) obj. -95.5728 iterations 1
Cbc0038I Pass  25: suminf.    0.48180 (2) obj. -95.5728 iterations 4
Cbc0038I Pass  26: suminf.    0.32595 (2) obj. -95.5728 iterations 1
Cbc0038I Pass  27: suminf.    0.81475 (2) obj. -95.5728 iterations 2
Cbc0038I Pass  28: suminf.    1.65068 (4) obj. -95.5728 iterations 3
Cbc0038I Pass  29: suminf.    1.23301 (5) obj. -95.5728 iterations 2
Cbc0038I Pass  30: suminf.    0.46432 (4) obj. -95.5728 iterations 6
Cbc0038I Pass  31: suminf.    0.30400 (1) obj. -95.5728 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -88 to -96 (0.02 seconds)
Cbc0038I Round again with cutoff of -108.546
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.23010 (7) obj. -108.546 iterations 0
Cbc0038I Pass  32: suminf.    1.90519 (6) obj. -108.546 iterations 12
Cbc0038I Pass  33: suminf.    1.90519 (6) obj. -108.546 iterations 0
Cbc0038I Pass  34: suminf.    1.53189 (5) obj. -108.546 iterations 9
Cbc0038I Pass  35: suminf.    1.43120 (6) obj. -108.546 iterations 5
Cbc0038I Pass  36: suminf.    1.86936 (9) obj. -108.546 iterations 8
Cbc0038I Pass  37: suminf.    1.62431 (8) obj. -108.546 iterations 3
Cbc0038I Pass  38: suminf.    0.53140 (5) obj. -108.546 iterations 14
Cbc0038I Pass  39: suminf.    0.53140 (5) obj. -108.546 iterations 0
Cbc0038I Pass  40: suminf.    1.12276 (4) obj. -108.546 iterations 5
Cbc0038I Pass  41: suminf.    0.15323 (1) obj. -108.546 iterations 4
Cbc0038I Pass  42: suminf.    0.17140 (1) obj. -108.546 iterations 1
Cbc0038I Pass  43: suminf.    2.52832 (8) obj. -108.546 iterations 10
Cbc0038I Pass  44: suminf.    0.76115 (4) obj. -108.546 iterations 6
Cbc0038I Pass  45: suminf.    1.38937 (7) obj. -108.546 iterations 8
Cbc0038I Pass  46: suminf.    0.60557 (5) obj. -108.546 iterations 4
Cbc0038I Pass  47: suminf.    0.43836 (5) obj. -108.546 iterations 5
Cbc0038I Pass  48: suminf.    0.43836 (5) obj. -108.546 iterations 0
Cbc0038I Pass  49: suminf.    2.33799 (7) obj. -108.546 iterations 12
Cbc0038I Pass  50: suminf.    3.24132 (8) obj. -108.546 iterations 12
Cbc0038I Pass  51: suminf.    0.58790 (4) obj. -108.546 iterations 10
Cbc0038I Pass  52: suminf.    0.51755 (4) obj. -108.546 iterations 2
Cbc0038I Pass  53: suminf.    1.38937 (7) obj. -108.546 iterations 8
Cbc0038I Pass  54: suminf.    0.60557 (5) obj. -108.546 iterations 4
Cbc0038I Pass  55: suminf.    0.43836 (5) obj. -108.546 iterations 5
Cbc0038I Pass  56: suminf.    0.43836 (5) obj. -108.546 iterations 0
Cbc0038I Pass  57: suminf.    2.33799 (7) obj. -108.546 iterations 12
Cbc0038I Pass  58: suminf.    2.79667 (12) obj. -108.546 iterations 7
Cbc0038I Pass  59: suminf.    1.03178 (7) obj. -108.546 iterations 5
Cbc0038I Pass  60: suminf.    0.66240 (2) obj. -108.546 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -96 - took 0.04 seconds
Cbc0012I Integer solution of -96 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 22 columns, reduced to 28 rows 17 columns
Cbc0031I 6 added rows had average density of 16.666667
Cbc0013I At root node, 6 cuts changed objective from -154.72896 to -104.02308 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 482 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 500 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.796 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -96 best solution, best possible -103.9681 (1.52 seconds)
Cbc0001I Search completed - best objective -96, took 1144 iterations and 2 nodes (1.52 seconds)
Cbc0032I Strong branching done 32 times (218 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-19) rows, 46 (-15) columns and 376 (-237) elements
Clp1000I sum of infeasibilities 3.65263e-14 - average 8.30144e-16, 37 fixed columns
Coin0506I Presolve 9 (-35) rows, 9 (-37) columns and 32 (-344) elements
Clp0006I 0  Obj 92.298555 Dual inf 14.754571 (5)
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 92.298729
Clp0000I Optimal - objective value 92.298729
Coin0511I After Postsolve, objective 92.298729, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 92.298729 Dual inf 1217.423 (29)
Clp0014I Perturbing problem by 0.001% of 0.22856903 - largest nonzero change 0 ( 0%) - largest zero change 2.7221109e-05
Clp0000I Optimal - objective value 220.87378
Clp0000I Optimal - objective value 220.87378
Clp0000I Optimal - objective value 220.87378
Coin0511I After Postsolve, objective 220.87378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 220.8737848 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 46 columns (46 integer (46 of which binary)) and 381 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.298%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.32285
Cbc0038I Pass   1: suminf.    0.44489 (3) obj. -112.832 iterations 32
Cbc0038I Pass   2: suminf.    0.44489 (3) obj. -112.832 iterations 1
Cbc0038I Solution found of -29
Cbc0038I Rounding solution of -36 is better than previous of -29

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 46 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -36 to -88 (0.02 seconds)
Cbc0038I Round again with cutoff of -95.1034
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.44489 (3) obj. -112.832 iterations 0
Cbc0038I Pass   4: suminf.    0.44489 (3) obj. -112.832 iterations 1
Cbc0038I Pass   5: suminf.    0.31142 (1) obj. -95.1034 iterations 3
Cbc0038I Pass   6: suminf.    0.15323 (1) obj. -110.29 iterations 1
Cbc0038I Pass   7: suminf.    1.21038 (4) obj. -95.1034 iterations 12
Cbc0038I Pass   8: suminf.    0.32929 (3) obj. -106.38 iterations 6
Cbc0038I Pass   9: suminf.    0.43300 (2) obj. -95.1034 iterations 4
Cbc0038I Pass  10: suminf.    0.20469 (2) obj. -105.505 iterations 1
Cbc0038I Pass  11: suminf.    4.28846 (11) obj. -95.1034 iterations 13
Cbc0038I Pass  12: suminf.    2.55057 (11) obj. -95.1034 iterations 6
Cbc0038I Pass  13: suminf.    2.05680 (10) obj. -95.1034 iterations 4
Cbc0038I Pass  14: suminf.    2.51227 (8) obj. -95.1034 iterations 8
Cbc0038I Pass  15: suminf.    2.06640 (12) obj. -95.1034 iterations 4
Cbc0038I Pass  16: suminf.    3.18277 (10) obj. -95.1034 iterations 13
Cbc0038I Pass  17: suminf.    1.92079 (6) obj. -95.1034 iterations 10
Cbc0038I Pass  18: suminf.    1.07519 (4) obj. -95.1034 iterations 8
Cbc0038I Pass  19: suminf.    0.42105 (1) obj. -95.5789 iterations 8
Cbc0038I Pass  20: suminf.    0.39463 (1) obj. -95.1034 iterations 7
Cbc0038I Pass  21: suminf.    1.82311 (5) obj. -95.1034 iterations 5
Cbc0038I Pass  22: suminf.    0.86686 (2) obj. -95.1034 iterations 4
Cbc0038I Pass  23: suminf.    2.90729 (9) obj. -95.1034 iterations 12
Cbc0038I Pass  24: suminf.    0.74300 (4) obj. -95.1034 iterations 11
Cbc0038I Pass  25: suminf.    0.72698 (3) obj. -95.1034 iterations 1
Cbc0038I Pass  26: suminf.    0.96069 (3) obj. -95.1034 iterations 3
Cbc0038I Pass  27: suminf.    4.22740 (15) obj. -95.1034 iterations 18
Cbc0038I Pass  28: suminf.    2.15215 (10) obj. -95.1034 iterations 5
Cbc0038I Pass  29: suminf.    1.44298 (8) obj. -95.1034 iterations 2
Cbc0038I Pass  30: suminf.    1.52222 (5) obj. -95.1034 iterations 7
Cbc0038I Pass  31: suminf.    1.28022 (5) obj. -95.1034 iterations 1
Cbc0038I Pass  32: suminf.    1.26396 (5) obj. -95.1034 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 46 columns, reduced to 33 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -88 - took 0.01 seconds
Cbc0012I Integer solution of -88 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 46 columns, reduced to 7 rows 6 columns
Cbc0012I Integer solution of -96 found by DiveCoefficient after 63 iterations and 0 nodes (0.08 seconds)
Cbc0031I 2 added rows had average density of 2
Cbc0013I At root node, 2 cuts changed objective from -150.03505 to -96 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 62 row cuts average 3.1 elements, 23 column cuts (23 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -96, took 63 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.10

