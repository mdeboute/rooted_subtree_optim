Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-43) rows, 35 (-18) columns and 188 (-115) elements
Clp1000I sum of infeasibilities 9.48058e-06 - average 1.52913e-07, 5 fixed columns
Coin0506I Presolve 46 (-16) rows, 29 (-6) columns and 144 (-44) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 66.698751
Clp0000I Optimal - objective value 66.698751
Coin0511I After Postsolve, objective 66.698751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.698751
Clp0000I Optimal - objective value 66.698751
Clp0000I Optimal - objective value 66.698751
Coin0511I After Postsolve, objective 66.698751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.69875144 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 62 rows, 35 columns (34 integer (34 of which binary)) and 188 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.414%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.15845
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -34.6069 iterations 15
Cbc0038I Solution found of -34.6069
Cbc0038I Relaxing continuous gives -34.6069
Cbc0038I Rounding solution of -37.8462 is better than previous of -34.6069

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 35 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -37.8462 to -43.4103 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.7392
Cbc0038I Pass   2: suminf.    0.49943 (2) obj. -45.7392 iterations 2
Cbc0038I Pass   3: suminf.    0.08628 (1) obj. -45.7392 iterations 2
Cbc0038I Pass   4: suminf.    2.39865 (8) obj. -45.7392 iterations 10
Cbc0038I Pass   5: suminf.    0.95711 (4) obj. -45.7392 iterations 7
Cbc0038I Pass   6: suminf.    2.78644 (11) obj. -45.7392 iterations 10
Cbc0038I Pass   7: suminf.    2.04811 (8) obj. -45.7392 iterations 3
Cbc0038I Pass   8: suminf.    1.35565 (6) obj. -45.7392 iterations 6
Cbc0038I Pass   9: suminf.    1.02566 (6) obj. -45.7392 iterations 7
Cbc0038I Pass  10: suminf.    0.85530 (5) obj. -45.7392 iterations 9
Cbc0038I Pass  11: suminf.    0.65659 (3) obj. -45.7392 iterations 3
Cbc0038I Pass  12: suminf.    0.82747 (4) obj. -45.7392 iterations 4
Cbc0038I Pass  13: suminf.    3.43421 (11) obj. -45.7392 iterations 15
Cbc0038I Pass  14: suminf.    1.04039 (9) obj. -45.7392 iterations 5
Cbc0038I Pass  15: suminf.    1.04039 (9) obj. -45.7392 iterations 0
Cbc0038I Pass  16: suminf.    3.48577 (10) obj. -45.7392 iterations 9
Cbc0038I Pass  17: suminf.    1.43897 (7) obj. -45.7392 iterations 8
Cbc0038I Pass  18: suminf.    1.81586 (7) obj. -45.7392 iterations 3
Cbc0038I Pass  19: suminf.    1.17907 (6) obj. -45.7392 iterations 5
Cbc0038I Pass  20: suminf.    3.01191 (9) obj. -45.7392 iterations 9
Cbc0038I Pass  21: suminf.    2.12062 (10) obj. -45.7392 iterations 8
Cbc0038I Pass  22: suminf.    1.58019 (5) obj. -45.7392 iterations 8
Cbc0038I Pass  23: suminf.    2.09470 (7) obj. -45.7392 iterations 5
Cbc0038I Pass  24: suminf.    1.67808 (6) obj. -45.7392 iterations 2
Cbc0038I Pass  25: suminf.    1.49967 (8) obj. -45.7392 iterations 5
Cbc0038I Pass  26: suminf.    3.55972 (10) obj. -45.7392 iterations 11
Cbc0038I Pass  27: suminf.    1.27169 (4) obj. -45.7392 iterations 9
Cbc0038I Pass  28: suminf.    1.02566 (6) obj. -45.7392 iterations 5
Cbc0038I Pass  29: suminf.    0.85530 (5) obj. -45.7392 iterations 9
Cbc0038I Pass  30: suminf.    0.65659 (3) obj. -45.7392 iterations 3
Cbc0038I Pass  31: suminf.    0.82747 (4) obj. -45.7392 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 35 columns, reduced to 43 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -43.4103 - took 0.02 seconds
Cbc0012I Integer solution of -43.41027 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 62 rows 35 columns, reduced to 31 rows 21 columns
Cbc0031I 11 added rows had average density of 26.727273
Cbc0013I At root node, 11 cuts changed objective from -66.698751 to -50.091749 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 949 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 462 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -43.41027000000001, took 1786 iterations and 4 nodes (0.18 seconds)
Cbc0032I Strong branching done 60 times (787 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 1, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-42) rows, 68 (-34) columns and 748 (-830) elements
Clp1000I sum of infeasibilities 1.12905e-07 - average 1.82105e-09, 39 fixed columns
Coin0506I Presolve 25 (-37) rows, 29 (-39) columns and 104 (-644) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 30.694873
Clp0000I Optimal - objective value 30.694873
Coin0511I After Postsolve, objective 30.694873, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6838444 - largest nonzero change 1.8445649e-05 ( 0.00095415479%) - largest zero change 2.7635231e-05
Clp0000I Optimal - objective value 93.241016
Clp0000I Optimal - objective value 93.241016
Clp0000I Optimal - objective value 93.241016
Coin0511I After Postsolve, objective 93.241016, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.24101583 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 68 columns (68 integer (68 of which binary)) and 752 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.385%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.92617
Cbc0038I Pass   1: suminf.    2.95114 (20) obj. -48.0629 iterations 20
Cbc0038I Pass   2: suminf.    2.95114 (20) obj. -48.0629 iterations 1
Cbc0038I Pass   3: suminf.    1.06258 (9) obj. -30.7496 iterations 11
Cbc0038I Solution found of -21.0086
Cbc0038I Rounding solution of -21.9658 is better than previous of -21.0086

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -21.9658 to -41.8804 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.4595
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.95114 (20) obj. -48.0629 iterations 0
Cbc0038I Pass   5: suminf.    2.95114 (20) obj. -48.0629 iterations 1
Cbc0038I Pass   6: suminf.    1.07936 (10) obj. -45.4595 iterations 32
Cbc0038I Pass   7: suminf.    1.07936 (10) obj. -45.4595 iterations 0
Cbc0038I Pass   8: suminf.    2.86902 (7) obj. -45.4595 iterations 16
Cbc0038I Pass   9: suminf.    2.30102 (7) obj. -45.4595 iterations 3
Cbc0038I Pass  10: suminf.    0.82642 (10) obj. -45.4595 iterations 5
Cbc0038I Pass  11: suminf.    0.72302 (7) obj. -45.4595 iterations 15
Cbc0038I Pass  12: suminf.    0.46185 (2) obj. -45.4595 iterations 5
Cbc0038I Pass  13: suminf.    0.59848 (2) obj. -45.4595 iterations 13
Cbc0038I Pass  14: suminf.    2.35160 (10) obj. -45.4595 iterations 21
Cbc0038I Pass  15: suminf.    1.81463 (8) obj. -49.5791 iterations 2
Cbc0038I Pass  16: suminf.    0.98037 (3) obj. -45.4595 iterations 15
Cbc0038I Pass  17: suminf.    0.98037 (3) obj. -45.4595 iterations 0
Cbc0038I Pass  18: suminf.    1.01740 (3) obj. -45.4595 iterations 13
Cbc0038I Pass  19: suminf.    1.01740 (3) obj. -45.4595 iterations 0
Cbc0038I Pass  20: suminf.    0.98037 (3) obj. -45.4595 iterations 7
Cbc0038I Pass  21: suminf.    2.12821 (13) obj. -45.4595 iterations 17
Cbc0038I Pass  22: suminf.    1.08119 (4) obj. -45.4595 iterations 6
Cbc0038I Pass  23: suminf.    0.64703 (3) obj. -45.4595 iterations 8
Cbc0038I Pass  24: suminf.    0.64703 (3) obj. -45.4595 iterations 0
Cbc0038I Pass  25: suminf.    0.68407 (3) obj. -45.4595 iterations 13
Cbc0038I Pass  26: suminf.    0.68407 (3) obj. -45.4595 iterations 1
Cbc0038I Pass  27: suminf.    0.64703 (3) obj. -45.4595 iterations 4
Cbc0038I Pass  28: suminf.    3.30533 (16) obj. -45.4595 iterations 23
Cbc0038I Pass  29: suminf.    3.14374 (15) obj. -45.4595 iterations 2
Cbc0038I Pass  30: suminf.    1.61551 (9) obj. -45.4595 iterations 27
Cbc0038I Pass  31: suminf.    0.86925 (4) obj. -45.4595 iterations 5
Cbc0038I Pass  32: suminf.    0.86925 (4) obj. -45.4595 iterations 0
Cbc0038I Pass  33: suminf.    1.12864 (8) obj. -45.4595 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 37 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -41.8804 to -43.4103 (0.03 seconds)
Cbc0038I Round again with cutoff of -51.9016
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.46615 (24) obj. -51.9016 iterations 3
Cbc0038I Pass  34: suminf.    3.46615 (24) obj. -51.9016 iterations 1
Cbc0038I Pass  35: suminf.    1.89996 (13) obj. -51.9016 iterations 40
Cbc0038I Pass  36: suminf.    1.47572 (11) obj. -51.9016 iterations 7
Cbc0038I Pass  37: suminf.    1.93757 (11) obj. -51.9016 iterations 8
Cbc0038I Pass  38: suminf.    1.02004 (9) obj. -51.9016 iterations 4
Cbc0038I Pass  39: suminf.    1.02004 (9) obj. -51.9016 iterations 0
Cbc0038I Pass  40: suminf.    1.93757 (11) obj. -51.9016 iterations 9
Cbc0038I Pass  41: suminf.    3.84368 (16) obj. -51.9016 iterations 15
Cbc0038I Pass  42: suminf.    1.98710 (15) obj. -51.9016 iterations 12
Cbc0038I Pass  43: suminf.    1.91470 (8) obj. -51.9016 iterations 9
Cbc0038I Pass  44: suminf.    1.02004 (9) obj. -51.9016 iterations 16
Cbc0038I Pass  45: suminf.    1.02004 (9) obj. -51.9016 iterations 0
Cbc0038I Pass  46: suminf.    1.93757 (11) obj. -51.9016 iterations 8
Cbc0038I Pass  47: suminf.    1.02004 (9) obj. -51.9016 iterations 5
Cbc0038I Pass  48: suminf.    2.43428 (14) obj. -51.9016 iterations 9
Cbc0038I Pass  49: suminf.    2.43397 (13) obj. -51.9016 iterations 1
Cbc0038I Pass  50: suminf.    2.09225 (10) obj. -51.9016 iterations 10
Cbc0038I Pass  51: suminf.    1.76818 (10) obj. -51.9016 iterations 8
Cbc0038I Pass  52: suminf.    2.31146 (12) obj. -51.9016 iterations 5
Cbc0038I Pass  53: suminf.    1.38229 (10) obj. -51.9016 iterations 5
Cbc0038I Pass  54: suminf.    1.38229 (10) obj. -51.9016 iterations 0
Cbc0038I Pass  55: suminf.    2.13478 (11) obj. -51.9016 iterations 9
Cbc0038I Pass  56: suminf.    1.76818 (10) obj. -51.9016 iterations 7
Cbc0038I Pass  57: suminf.    2.31146 (12) obj. -51.9016 iterations 5
Cbc0038I Pass  58: suminf.    1.38229 (10) obj. -51.9016 iterations 5
Cbc0038I Pass  59: suminf.    1.38229 (10) obj. -51.9016 iterations 0
Cbc0038I Pass  60: suminf.    2.13478 (11) obj. -51.9016 iterations 9
Cbc0038I Pass  61: suminf.    1.76818 (10) obj. -51.9016 iterations 7
Cbc0038I Pass  62: suminf.    2.31146 (12) obj. -51.9016 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -43.4103 - took 0.04 seconds
Cbc0012I Integer solution of -43.41027 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 62 rows 68 columns, reduced to 14 rows 15 columns
Cbc0031I 16 added rows had average density of 12.625
Cbc0013I At root node, 16 cuts changed objective from -77.670371 to -45.421603 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 285 row cuts average 2.8 elements, 19 column cuts (19 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0001I Search completed - best objective -43.41027000000001, took 200 iterations and 2 nodes (0.25 seconds)
Cbc0032I Strong branching done 36 times (251 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.26

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-43) rows, 35 (-18) columns and 188 (-115) elements
Clp1000I sum of infeasibilities 9.48058e-06 - average 1.52913e-07, 5 fixed columns
Coin0506I Presolve 46 (-16) rows, 29 (-6) columns and 144 (-44) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 66.698751
Clp0000I Optimal - objective value 66.698751
Coin0511I After Postsolve, objective 66.698751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.698751
Clp0000I Optimal - objective value 66.698751
Clp0000I Optimal - objective value 66.698751
Coin0511I After Postsolve, objective 66.698751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.69875144 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 62 rows, 35 columns (34 integer (34 of which binary)) and 188 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.414%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.15845
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -34.6069 iterations 15
Cbc0038I Solution found of -34.6069
Cbc0038I Relaxing continuous gives -34.6069
Cbc0038I Rounding solution of -37.8462 is better than previous of -34.6069

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 35 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -37.8462 to -43.4103 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.7392
Cbc0038I Pass   2: suminf.    0.49943 (2) obj. -45.7392 iterations 2
Cbc0038I Pass   3: suminf.    0.08628 (1) obj. -45.7392 iterations 2
Cbc0038I Pass   4: suminf.    2.39865 (8) obj. -45.7392 iterations 10
Cbc0038I Pass   5: suminf.    0.95711 (4) obj. -45.7392 iterations 7
Cbc0038I Pass   6: suminf.    2.78644 (11) obj. -45.7392 iterations 10
Cbc0038I Pass   7: suminf.    2.04811 (8) obj. -45.7392 iterations 3
Cbc0038I Pass   8: suminf.    1.35565 (6) obj. -45.7392 iterations 6
Cbc0038I Pass   9: suminf.    1.02566 (6) obj. -45.7392 iterations 7
Cbc0038I Pass  10: suminf.    0.85530 (5) obj. -45.7392 iterations 9
Cbc0038I Pass  11: suminf.    0.65659 (3) obj. -45.7392 iterations 3
Cbc0038I Pass  12: suminf.    0.82747 (4) obj. -45.7392 iterations 4
Cbc0038I Pass  13: suminf.    3.43421 (11) obj. -45.7392 iterations 15
Cbc0038I Pass  14: suminf.    1.04039 (9) obj. -45.7392 iterations 5
Cbc0038I Pass  15: suminf.    1.04039 (9) obj. -45.7392 iterations 0
Cbc0038I Pass  16: suminf.    3.48577 (10) obj. -45.7392 iterations 9
Cbc0038I Pass  17: suminf.    1.43897 (7) obj. -45.7392 iterations 8
Cbc0038I Pass  18: suminf.    1.81586 (7) obj. -45.7392 iterations 3
Cbc0038I Pass  19: suminf.    1.17907 (6) obj. -45.7392 iterations 5
Cbc0038I Pass  20: suminf.    3.01191 (9) obj. -45.7392 iterations 9
Cbc0038I Pass  21: suminf.    2.12062 (10) obj. -45.7392 iterations 8
Cbc0038I Pass  22: suminf.    1.58019 (5) obj. -45.7392 iterations 8
Cbc0038I Pass  23: suminf.    2.09470 (7) obj. -45.7392 iterations 5
Cbc0038I Pass  24: suminf.    1.67808 (6) obj. -45.7392 iterations 2
Cbc0038I Pass  25: suminf.    1.49967 (8) obj. -45.7392 iterations 5
Cbc0038I Pass  26: suminf.    3.55972 (10) obj. -45.7392 iterations 11
Cbc0038I Pass  27: suminf.    1.27169 (4) obj. -45.7392 iterations 9
Cbc0038I Pass  28: suminf.    1.02566 (6) obj. -45.7392 iterations 5
Cbc0038I Pass  29: suminf.    0.85530 (5) obj. -45.7392 iterations 9
Cbc0038I Pass  30: suminf.    0.65659 (3) obj. -45.7392 iterations 3
Cbc0038I Pass  31: suminf.    0.82747 (4) obj. -45.7392 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 35 columns, reduced to 43 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -43.4103 - took 0.02 seconds
Cbc0012I Integer solution of -43.41027 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 62 rows 35 columns, reduced to 31 rows 21 columns
Cbc0031I 11 added rows had average density of 26.727273
Cbc0013I At root node, 11 cuts changed objective from -66.698751 to -50.091749 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 949 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 462 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -43.41027000000001, took 1786 iterations and 4 nodes (0.21 seconds)
Cbc0032I Strong branching done 60 times (787 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 1, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-43) rows, 68 (-35) columns and 748 (-831) elements
Clp1000I sum of infeasibilities 1.12905e-07 - average 1.82105e-09, 39 fixed columns
Coin0506I Presolve 25 (-37) rows, 29 (-39) columns and 104 (-644) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 30.694873
Clp0000I Optimal - objective value 30.694873
Coin0511I After Postsolve, objective 30.694873, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6838444 - largest nonzero change 1.8445649e-05 ( 0.00095415479%) - largest zero change 2.7635231e-05
Clp0000I Optimal - objective value 93.241016
Clp0000I Optimal - objective value 93.241016
Clp0000I Optimal - objective value 93.241016
Coin0511I After Postsolve, objective 93.241016, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.24101583 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 68 columns (68 integer (68 of which binary)) and 752 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.385%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.92617
Cbc0038I Pass   1: suminf.    2.95114 (20) obj. -48.0629 iterations 20
Cbc0038I Pass   2: suminf.    2.95114 (20) obj. -48.0629 iterations 1
Cbc0038I Pass   3: suminf.    1.06258 (9) obj. -30.7496 iterations 11
Cbc0038I Solution found of -21.0086
Cbc0038I Rounding solution of -21.9658 is better than previous of -21.0086

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -21.9658 to -41.8804 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.4595
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.95114 (20) obj. -48.0629 iterations 0
Cbc0038I Pass   5: suminf.    2.95114 (20) obj. -48.0629 iterations 1
Cbc0038I Pass   6: suminf.    1.07936 (10) obj. -45.4595 iterations 32
Cbc0038I Pass   7: suminf.    1.07936 (10) obj. -45.4595 iterations 0
Cbc0038I Pass   8: suminf.    2.86902 (7) obj. -45.4595 iterations 16
Cbc0038I Pass   9: suminf.    2.30102 (7) obj. -45.4595 iterations 3
Cbc0038I Pass  10: suminf.    0.82642 (10) obj. -45.4595 iterations 5
Cbc0038I Pass  11: suminf.    0.72302 (7) obj. -45.4595 iterations 15
Cbc0038I Pass  12: suminf.    0.46185 (2) obj. -45.4595 iterations 5
Cbc0038I Pass  13: suminf.    0.59848 (2) obj. -45.4595 iterations 13
Cbc0038I Pass  14: suminf.    2.35160 (10) obj. -45.4595 iterations 21
Cbc0038I Pass  15: suminf.    1.81463 (8) obj. -49.5791 iterations 2
Cbc0038I Pass  16: suminf.    0.98037 (3) obj. -45.4595 iterations 15
Cbc0038I Pass  17: suminf.    0.98037 (3) obj. -45.4595 iterations 0
Cbc0038I Pass  18: suminf.    1.01740 (3) obj. -45.4595 iterations 13
Cbc0038I Pass  19: suminf.    1.01740 (3) obj. -45.4595 iterations 0
Cbc0038I Pass  20: suminf.    0.98037 (3) obj. -45.4595 iterations 7
Cbc0038I Pass  21: suminf.    2.12821 (13) obj. -45.4595 iterations 17
Cbc0038I Pass  22: suminf.    1.08119 (4) obj. -45.4595 iterations 6
Cbc0038I Pass  23: suminf.    0.64703 (3) obj. -45.4595 iterations 8
Cbc0038I Pass  24: suminf.    0.64703 (3) obj. -45.4595 iterations 0
Cbc0038I Pass  25: suminf.    0.68407 (3) obj. -45.4595 iterations 13
Cbc0038I Pass  26: suminf.    0.68407 (3) obj. -45.4595 iterations 1
Cbc0038I Pass  27: suminf.    0.64703 (3) obj. -45.4595 iterations 4
Cbc0038I Pass  28: suminf.    3.30533 (16) obj. -45.4595 iterations 23
Cbc0038I Pass  29: suminf.    3.14374 (15) obj. -45.4595 iterations 2
Cbc0038I Pass  30: suminf.    1.61551 (9) obj. -45.4595 iterations 27
Cbc0038I Pass  31: suminf.    0.86925 (4) obj. -45.4595 iterations 5
Cbc0038I Pass  32: suminf.    0.86925 (4) obj. -45.4595 iterations 0
Cbc0038I Pass  33: suminf.    1.12864 (8) obj. -45.4595 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 37 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -41.8804 to -43.4103 (0.03 seconds)
Cbc0038I Round again with cutoff of -51.9016
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.46615 (24) obj. -51.9016 iterations 3
Cbc0038I Pass  34: suminf.    3.46615 (24) obj. -51.9016 iterations 1
Cbc0038I Pass  35: suminf.    1.89996 (13) obj. -51.9016 iterations 40
Cbc0038I Pass  36: suminf.    1.47572 (11) obj. -51.9016 iterations 7
Cbc0038I Pass  37: suminf.    1.93757 (11) obj. -51.9016 iterations 8
Cbc0038I Pass  38: suminf.    1.02004 (9) obj. -51.9016 iterations 4
Cbc0038I Pass  39: suminf.    1.02004 (9) obj. -51.9016 iterations 0
Cbc0038I Pass  40: suminf.    1.93757 (11) obj. -51.9016 iterations 9
Cbc0038I Pass  41: suminf.    3.84368 (16) obj. -51.9016 iterations 15
Cbc0038I Pass  42: suminf.    1.98710 (15) obj. -51.9016 iterations 12
Cbc0038I Pass  43: suminf.    1.91470 (8) obj. -51.9016 iterations 9
Cbc0038I Pass  44: suminf.    1.02004 (9) obj. -51.9016 iterations 16
Cbc0038I Pass  45: suminf.    1.02004 (9) obj. -51.9016 iterations 0
Cbc0038I Pass  46: suminf.    1.93757 (11) obj. -51.9016 iterations 8
Cbc0038I Pass  47: suminf.    1.02004 (9) obj. -51.9016 iterations 5
Cbc0038I Pass  48: suminf.    2.43428 (14) obj. -51.9016 iterations 9
Cbc0038I Pass  49: suminf.    2.43397 (13) obj. -51.9016 iterations 1
Cbc0038I Pass  50: suminf.    2.09225 (10) obj. -51.9016 iterations 10
Cbc0038I Pass  51: suminf.    1.76818 (10) obj. -51.9016 iterations 8
Cbc0038I Pass  52: suminf.    2.31146 (12) obj. -51.9016 iterations 5
Cbc0038I Pass  53: suminf.    1.38229 (10) obj. -51.9016 iterations 5
Cbc0038I Pass  54: suminf.    1.38229 (10) obj. -51.9016 iterations 0
Cbc0038I Pass  55: suminf.    2.13478 (11) obj. -51.9016 iterations 9
Cbc0038I Pass  56: suminf.    1.76818 (10) obj. -51.9016 iterations 7
Cbc0038I Pass  57: suminf.    2.31146 (12) obj. -51.9016 iterations 5
Cbc0038I Pass  58: suminf.    1.38229 (10) obj. -51.9016 iterations 5
Cbc0038I Pass  59: suminf.    1.38229 (10) obj. -51.9016 iterations 0
Cbc0038I Pass  60: suminf.    2.13478 (11) obj. -51.9016 iterations 9
Cbc0038I Pass  61: suminf.    1.76818 (10) obj. -51.9016 iterations 7
Cbc0038I Pass  62: suminf.    2.31146 (12) obj. -51.9016 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 68 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -43.4103 - took 0.05 seconds
Cbc0012I Integer solution of -43.41027 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 62 rows 68 columns, reduced to 14 rows 15 columns
Cbc0031I 16 added rows had average density of 12.625
Cbc0013I At root node, 16 cuts changed objective from -77.670371 to -45.421603 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 285 row cuts average 2.8 elements, 19 column cuts (19 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0001I Search completed - best objective -43.41027000000001, took 200 iterations and 2 nodes (0.26 seconds)
Cbc0032I Strong branching done 36 times (251 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.27

