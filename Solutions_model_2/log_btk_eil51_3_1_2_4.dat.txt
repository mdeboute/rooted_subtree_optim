Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-17) rows, 51 (-2) columns and 270 (-33) elements
Clp1000I sum of infeasibilities 9.2954e-06 - average 1.0563e-07, 3 fixed columns
Coin0506I Presolve 82 (-6) rows, 48 (-3) columns and 252 (-18) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 51.489944
Clp0000I Optimal - objective value 51.489944
Coin0511I After Postsolve, objective 51.489944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.489944
Clp0000I Optimal - objective value 51.489944
Clp0000I Optimal - objective value 51.489944
Coin0511I After Postsolve, objective 51.489944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.48994356 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 51 columns (50 integer (50 of which binary)) and 270 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.637%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.63291
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.15084 iterations 33
Cbc0038I Solution found of 2.15084
Cbc0038I Relaxing continuous gives 2.15084
Cbc0038I Rounding solution of -2.22224 is better than previous of 2.15084

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -2.22224 to -22.9276 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.7839
Cbc0038I Pass   2: suminf.    3.31161 (15) obj. -25.7839 iterations 15
Cbc0038I Pass   3: suminf.    1.92898 (7) obj. -25.7839 iterations 16
Cbc0038I Pass   4: suminf.    0.70277 (6) obj. -25.7839 iterations 1
Cbc0038I Pass   5: suminf.    1.36568 (4) obj. -25.7839 iterations 6
Cbc0038I Pass   6: suminf.    0.78219 (5) obj. -25.7839 iterations 5
Cbc0038I Pass   7: suminf.    0.78219 (5) obj. -25.7839 iterations 0
Cbc0038I Pass   8: suminf.    1.64701 (6) obj. -25.7839 iterations 9
Cbc0038I Pass   9: suminf.    1.42547 (5) obj. -25.7839 iterations 6
Cbc0038I Pass  10: suminf.    1.11876 (7) obj. -25.7839 iterations 5
Cbc0038I Pass  11: suminf.    0.78219 (5) obj. -25.7839 iterations 2
Cbc0038I Pass  12: suminf.    2.12510 (7) obj. -25.7839 iterations 13
Cbc0038I Pass  13: suminf.    2.11877 (7) obj. -25.7839 iterations 5
Cbc0038I Pass  14: suminf.    1.66292 (6) obj. -25.7839 iterations 7
Cbc0038I Pass  15: suminf.    1.47468 (5) obj. -25.7839 iterations 2
Cbc0038I Pass  16: suminf.    1.47468 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  17: suminf.    1.75940 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  18: suminf.    1.75940 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  19: suminf.    1.73337 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  20: suminf.    1.47468 (5) obj. -25.7839 iterations 1
Cbc0038I Pass  21: suminf.    1.47468 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  22: suminf.    1.75940 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  23: suminf.    1.75940 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  24: suminf.    1.73337 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  25: suminf.    1.47468 (5) obj. -25.7839 iterations 1
Cbc0038I Pass  26: suminf.    1.47468 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  27: suminf.    1.75940 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  28: suminf.    1.75940 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  29: suminf.    1.73337 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  30: suminf.    1.47468 (5) obj. -25.7839 iterations 1
Cbc0038I Pass  31: suminf.    1.47468 (5) obj. -25.7839 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -22.9276 to -23.5924 (0.08 seconds)
Cbc0038I Round again with cutoff of -30.9251
Cbc0038I Pass  31: suminf.    4.04537 (15) obj. -30.9251 iterations 1
Cbc0038I Pass  32: suminf.    2.27198 (7) obj. -30.9251 iterations 20
Cbc0038I Pass  33: suminf.    1.23676 (6) obj. -30.9251 iterations 1
Cbc0038I Pass  34: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  35: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  36: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  37: suminf.    2.05047 (7) obj. -30.9251 iterations 6
Cbc0038I Pass  38: suminf.    1.42549 (6) obj. -30.9251 iterations 2
Cbc0038I Pass  39: suminf.    1.29616 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  40: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  41: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  42: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  43: suminf.    2.05047 (7) obj. -30.9251 iterations 6
Cbc0038I Pass  44: suminf.    1.42549 (6) obj. -30.9251 iterations 2
Cbc0038I Pass  45: suminf.    1.29616 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  46: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  47: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  48: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  49: suminf.    2.05047 (7) obj. -30.9251 iterations 6
Cbc0038I Pass  50: suminf.    1.42549 (6) obj. -30.9251 iterations 2
Cbc0038I Pass  51: suminf.    1.29616 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  52: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  53: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  54: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  55: suminf.    2.05047 (7) obj. -30.9251 iterations 6
Cbc0038I Pass  56: suminf.    1.42549 (6) obj. -30.9251 iterations 2
Cbc0038I Pass  57: suminf.    1.29616 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  58: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  59: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  60: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -23.5924 - took 0.08 seconds
Cbc0012I Integer solution of -23.59243 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 88 rows 51 columns, reduced to 60 rows 36 columns
Cbc0031I 22 added rows had average density of 27.545455
Cbc0013I At root node, 22 cuts changed objective from -51.489944 to -41.851364 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7981 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1985 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23.59242999999999, took 6224 iterations and 46 nodes (0.61 seconds)
Cbc0032I Strong branching done 474 times (8870 iterations), fathomed 6 nodes and fixed 11 variables
Cbc0035I Maximum depth 11, 127 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 70 (-34) rows, 82 (-20) columns and 1033 (-545) elements
Clp1000I sum of infeasibilities 1.39165e-07 - average 1.98807e-09, 18 fixed columns
Coin0506I Presolve 55 (-15) rows, 64 (-18) columns and 625 (-408) elements
Clp0006I 0  Obj 44.386614 Dual inf 2.5134733 (64)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 4.8851213 - largest nonzero change 2.2925099e-05 ( 0.0015070958%) - largest zero change 2.7847381e-05
Clp0000I Optimal - objective value 66.752353
Clp0000I Optimal - objective value 66.752353
Coin0511I After Postsolve, objective 66.752353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 66.752353 Dual inf 1.2284364 (1)
Clp0014I Perturbing problem by 0.001% of 4.2241972 - largest nonzero change 2.7100511e-05 ( 0.001742231%) - largest zero change 2.9531704e-05
Clp0000I Optimal - objective value 68.552353
Clp0000I Optimal - objective value 68.552353
Clp0000I Optimal - objective value 68.552353
Coin0511I After Postsolve, objective 68.552353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.55235338 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 85 columns (85 integer (85 of which binary)) and 1051 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.612%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 6.94644
Cbc0038I Pass   1: suminf.    1.27368 (18) obj. -29.6138 iterations 17
Cbc0038I Pass   2: suminf.    1.27368 (18) obj. -29.6138 iterations 1
Cbc0038I Solution found of 7.05957
Cbc0038I Rounding solution of -10.2984 is better than previous of 7.05957

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -10.2984 to -11.9463 (0.02 seconds)
Cbc0038I Round again with cutoff of -16.2963
Cbc0038I Pass   3: suminf.    1.27368 (18) obj. -29.6138 iterations 0
Cbc0038I Pass   4: suminf.    1.27368 (18) obj. -29.6138 iterations 1
Cbc0038I Pass   5: suminf.    0.52775 (3) obj. -16.2963 iterations 21
Cbc0038I Pass   6: suminf.    0.52775 (3) obj. -16.2963 iterations 0
Cbc0038I Pass   7: suminf.    0.72719 (2) obj. -16.2963 iterations 12
Cbc0038I Pass   8: suminf.    1.11490 (4) obj. -16.2963 iterations 4
Cbc0038I Pass   9: suminf.    0.62018 (3) obj. -16.2963 iterations 4
Cbc0038I Pass  10: suminf.    0.61604 (3) obj. -16.2963 iterations 3
Cbc0038I Pass  11: suminf.    0.29181 (2) obj. -16.2963 iterations 5
Cbc0038I Pass  12: suminf.    0.29181 (2) obj. -16.2963 iterations 0
Cbc0038I Pass  13: suminf.    0.25141 (1) obj. -16.2963 iterations 4
Cbc0038I Pass  14: suminf.    0.50588 (2) obj. -17.8356 iterations 2
Cbc0038I Pass  15: suminf.    0.25141 (1) obj. -16.2963 iterations 2
Cbc0038I Pass  16: suminf.    1.95111 (16) obj. -16.2963 iterations 20
Cbc0038I Pass  17: suminf.    0.61484 (9) obj. -16.2963 iterations 7
Cbc0038I Pass  18: suminf.    0.27337 (3) obj. -16.2963 iterations 6
Cbc0038I Pass  19: suminf.    0.97819 (4) obj. -16.2963 iterations 4
Cbc0038I Pass  20: suminf.    0.48150 (3) obj. -16.2963 iterations 2
Cbc0038I Pass  21: suminf.    0.57804 (3) obj. -16.2963 iterations 9
Cbc0038I Pass  22: suminf.    0.57804 (3) obj. -16.2963 iterations 0
Cbc0038I Pass  23: suminf.    0.87984 (5) obj. -16.2963 iterations 3
Cbc0038I Pass  24: suminf.    0.87950 (6) obj. -16.2963 iterations 2
Cbc0038I Pass  25: suminf.    1.57201 (5) obj. -16.2963 iterations 4
Cbc0038I Pass  26: suminf.    0.48423 (3) obj. -16.2963 iterations 4
Cbc0038I Pass  27: suminf.    0.48150 (3) obj. -16.2963 iterations 3
Cbc0038I Pass  28: suminf.    0.57804 (3) obj. -16.2963 iterations 9
Cbc0038I Pass  29: suminf.    0.57804 (3) obj. -16.2963 iterations 0
Cbc0038I Pass  30: suminf.    0.87984 (5) obj. -16.2963 iterations 3
Cbc0038I Pass  31: suminf.    0.87950 (6) obj. -16.2963 iterations 2
Cbc0038I Pass  32: suminf.    1.57201 (5) obj. -16.2963 iterations 4
Cbc0038I Rounding solution of -16.5589 is better than previous of -11.9463

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -24.3362
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.27368 (18) obj. -29.6138 iterations 0
Cbc0038I Pass  33: suminf.    1.27368 (18) obj. -29.6138 iterations 1
Cbc0038I Pass  34: suminf.    1.91388 (16) obj. -24.3362 iterations 32
Cbc0038I Pass  35: suminf.    1.91388 (16) obj. -24.3362 iterations 0
Cbc0038I Pass  36: suminf.    2.06429 (8) obj. -24.3362 iterations 20
Cbc0038I Pass  37: suminf.    2.03097 (8) obj. -24.3362 iterations 4
Cbc0038I Pass  38: suminf.    1.72862 (8) obj. -24.3362 iterations 6
Cbc0038I Pass  39: suminf.    1.71955 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  40: suminf.    2.84759 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  41: suminf.    2.74194 (10) obj. -24.3362 iterations 2
Cbc0038I Pass  42: suminf.    2.26413 (9) obj. -24.3362 iterations 11
Cbc0038I Pass  43: suminf.    2.26413 (9) obj. -24.3362 iterations 1
Cbc0038I Pass  44: suminf.    1.42704 (8) obj. -24.3362 iterations 9
Cbc0038I Pass  45: suminf.    1.39372 (8) obj. -24.3362 iterations 3
Cbc0038I Pass  46: suminf.    1.72862 (8) obj. -24.3362 iterations 8
Cbc0038I Pass  47: suminf.    1.71955 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  48: suminf.    2.84759 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  49: suminf.    2.74194 (10) obj. -24.3362 iterations 2
Cbc0038I Pass  50: suminf.    2.26413 (9) obj. -24.3362 iterations 11
Cbc0038I Pass  51: suminf.    2.26413 (9) obj. -24.3362 iterations 1
Cbc0038I Pass  52: suminf.    1.42704 (8) obj. -24.3362 iterations 8
Cbc0038I Pass  53: suminf.    1.39372 (8) obj. -24.3362 iterations 2
Cbc0038I Pass  54: suminf.    1.72862 (8) obj. -24.3362 iterations 8
Cbc0038I Pass  55: suminf.    1.71955 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  56: suminf.    2.84759 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  57: suminf.    2.74194 (10) obj. -24.3362 iterations 2
Cbc0038I Pass  58: suminf.    2.26413 (9) obj. -24.3362 iterations 11
Cbc0038I Pass  59: suminf.    2.26413 (9) obj. -24.3362 iterations 1
Cbc0038I Pass  60: suminf.    1.42704 (8) obj. -24.3362 iterations 9
Cbc0038I Pass  61: suminf.    1.39372 (8) obj. -24.3362 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 32 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -16.5589 - took 0.02 seconds
Cbc0012I Integer solution of -16.558907 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 73 rows 85 columns, reduced to 15 rows 17 columns
Cbc0031I 43 added rows had average density of 18.186047
Cbc0013I At root node, 43 cuts changed objective from -55.445062 to -26.402388 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3785 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 678 row cuts average 71.6 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 69 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 450 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 114 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.695 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.558907 best solution, best possible -26.402388 (1.70 seconds)
Cbc0012I Integer solution of -17.648413 found by rounding after 2417 iterations and 2 nodes (1.87 seconds)
Cbc0012I Integer solution of -17.89457 found by DiveCoefficient after 2429 iterations and 3 nodes (1.91 seconds)
Cbc0004I Integer solution of -20.40172 found after 2462 iterations and 3 nodes (1.96 seconds)
Cbc0010I After 10 nodes, 5 on tree, -20.40172 best solution, best possible -26.335892 (2.42 seconds)
Cbc0012I Integer solution of -20.59243 found by DiveCoefficient after 2904 iterations and 12 nodes (2.59 seconds)
Cbc0010I After 31 nodes, 6 on tree, -20.59243 best solution, best possible -26.335892 (3.15 seconds)
Cbc0038I Full problem 73 rows 85 columns, reduced to 28 rows 34 columns
Cbc0012I Integer solution of -23.59243 found by RINS after 3628 iterations and 41 nodes (3.36 seconds)
Cbc0010I After 49 nodes, 7 on tree, -23.59243 best solution, best possible -26.3344 (3.85 seconds)
Cbc0001I Search completed - best objective -23.59242999999999, took 4191 iterations and 58 nodes (4.00 seconds)
Cbc0032I Strong branching done 776 times (10693 iterations), fathomed 5 nodes and fixed 9 variables
Cbc0035I Maximum depth 13, 96 variables fixed on reduced cost
Total time (CPU seconds):       2.66   (Wallclock seconds):       4.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-17) rows, 51 (-2) columns and 270 (-33) elements
Clp1000I sum of infeasibilities 9.2954e-06 - average 1.0563e-07, 3 fixed columns
Coin0506I Presolve 82 (-6) rows, 48 (-3) columns and 252 (-18) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 51.489944
Clp0000I Optimal - objective value 51.489944
Coin0511I After Postsolve, objective 51.489944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.489944
Clp0000I Optimal - objective value 51.489944
Clp0000I Optimal - objective value 51.489944
Coin0511I After Postsolve, objective 51.489944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.48994356 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 51 columns (50 integer (50 of which binary)) and 270 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.637%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.63291
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.15084 iterations 33
Cbc0038I Solution found of 2.15084
Cbc0038I Relaxing continuous gives 2.15084
Cbc0038I Rounding solution of -2.22224 is better than previous of 2.15084

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -2.22224 to -22.9276 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.7839
Cbc0038I Pass   2: suminf.    3.31161 (15) obj. -25.7839 iterations 15
Cbc0038I Pass   3: suminf.    1.92898 (7) obj. -25.7839 iterations 16
Cbc0038I Pass   4: suminf.    0.70277 (6) obj. -25.7839 iterations 1
Cbc0038I Pass   5: suminf.    1.36568 (4) obj. -25.7839 iterations 6
Cbc0038I Pass   6: suminf.    0.78219 (5) obj. -25.7839 iterations 5
Cbc0038I Pass   7: suminf.    0.78219 (5) obj. -25.7839 iterations 0
Cbc0038I Pass   8: suminf.    1.64701 (6) obj. -25.7839 iterations 9
Cbc0038I Pass   9: suminf.    1.42547 (5) obj. -25.7839 iterations 6
Cbc0038I Pass  10: suminf.    1.11876 (7) obj. -25.7839 iterations 5
Cbc0038I Pass  11: suminf.    0.78219 (5) obj. -25.7839 iterations 2
Cbc0038I Pass  12: suminf.    2.12510 (7) obj. -25.7839 iterations 13
Cbc0038I Pass  13: suminf.    2.11877 (7) obj. -25.7839 iterations 5
Cbc0038I Pass  14: suminf.    1.66292 (6) obj. -25.7839 iterations 7
Cbc0038I Pass  15: suminf.    1.47468 (5) obj. -25.7839 iterations 2
Cbc0038I Pass  16: suminf.    1.47468 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  17: suminf.    1.75940 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  18: suminf.    1.75940 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  19: suminf.    1.73337 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  20: suminf.    1.47468 (5) obj. -25.7839 iterations 1
Cbc0038I Pass  21: suminf.    1.47468 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  22: suminf.    1.75940 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  23: suminf.    1.75940 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  24: suminf.    1.73337 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  25: suminf.    1.47468 (5) obj. -25.7839 iterations 1
Cbc0038I Pass  26: suminf.    1.47468 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  27: suminf.    1.75940 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  28: suminf.    1.75940 (5) obj. -25.7839 iterations 0
Cbc0038I Pass  29: suminf.    1.73337 (5) obj. -25.7839 iterations 3
Cbc0038I Pass  30: suminf.    1.47468 (5) obj. -25.7839 iterations 1
Cbc0038I Pass  31: suminf.    1.47468 (5) obj. -25.7839 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -22.9276 to -23.5924 (0.08 seconds)
Cbc0038I Round again with cutoff of -30.9251
Cbc0038I Pass  31: suminf.    4.04537 (15) obj. -30.9251 iterations 1
Cbc0038I Pass  32: suminf.    2.27198 (7) obj. -30.9251 iterations 20
Cbc0038I Pass  33: suminf.    1.23676 (6) obj. -30.9251 iterations 1
Cbc0038I Pass  34: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  35: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  36: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  37: suminf.    2.05047 (7) obj. -30.9251 iterations 6
Cbc0038I Pass  38: suminf.    1.42549 (6) obj. -30.9251 iterations 2
Cbc0038I Pass  39: suminf.    1.29616 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  40: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  41: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  42: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  43: suminf.    2.05047 (7) obj. -30.9251 iterations 6
Cbc0038I Pass  44: suminf.    1.42549 (6) obj. -30.9251 iterations 2
Cbc0038I Pass  45: suminf.    1.29616 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  46: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  47: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  48: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  49: suminf.    2.05047 (7) obj. -30.9251 iterations 6
Cbc0038I Pass  50: suminf.    1.42549 (6) obj. -30.9251 iterations 2
Cbc0038I Pass  51: suminf.    1.29616 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  52: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  53: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  54: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  55: suminf.    2.05047 (7) obj. -30.9251 iterations 6
Cbc0038I Pass  56: suminf.    1.42549 (6) obj. -30.9251 iterations 2
Cbc0038I Pass  57: suminf.    1.29616 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  58: suminf.    1.74995 (6) obj. -30.9251 iterations 6
Cbc0038I Pass  59: suminf.    1.71204 (5) obj. -30.9251 iterations 1
Cbc0038I Pass  60: suminf.    1.68970 (5) obj. -30.9251 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -23.5924 - took 0.08 seconds
Cbc0012I Integer solution of -23.59243 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 88 rows 51 columns, reduced to 60 rows 36 columns
Cbc0031I 22 added rows had average density of 27.545455
Cbc0013I At root node, 22 cuts changed objective from -51.489944 to -41.851364 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7981 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1985 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23.59242999999999, took 6224 iterations and 46 nodes (0.60 seconds)
Cbc0032I Strong branching done 474 times (8870 iterations), fathomed 6 nodes and fixed 11 variables
Cbc0035I Maximum depth 11, 127 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 70 (-35) rows, 82 (-21) columns and 1033 (-546) elements
Clp1000I sum of infeasibilities 1.39165e-07 - average 1.98807e-09, 18 fixed columns
Coin0506I Presolve 55 (-15) rows, 64 (-18) columns and 625 (-408) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 4.8851213 - largest nonzero change 2.2925099e-05 ( 0.0015070958%) - largest zero change 2.7847381e-05
Clp0000I Optimal - objective value 66.752353
Clp0000I Optimal - objective value 66.752353
Coin0511I After Postsolve, objective 66.752353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.2241972 - largest nonzero change 2.7100511e-05 ( 0.001742231%) - largest zero change 2.9531704e-05
Clp0000I Optimal - objective value 68.552353
Clp0000I Optimal - objective value 68.552353
Clp0000I Optimal - objective value 68.552353
Coin0511I After Postsolve, objective 68.552353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.55235338 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 85 columns (85 integer (85 of which binary)) and 1051 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.612%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 6.94644
Cbc0038I Pass   1: suminf.    1.27368 (18) obj. -29.6138 iterations 17
Cbc0038I Pass   2: suminf.    1.27368 (18) obj. -29.6138 iterations 1
Cbc0038I Solution found of 7.05957
Cbc0038I Rounding solution of -10.2984 is better than previous of 7.05957

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -10.2984 to -11.9463 (0.02 seconds)
Cbc0038I Round again with cutoff of -16.2963
Cbc0038I Pass   3: suminf.    1.27368 (18) obj. -29.6138 iterations 0
Cbc0038I Pass   4: suminf.    1.27368 (18) obj. -29.6138 iterations 1
Cbc0038I Pass   5: suminf.    0.52775 (3) obj. -16.2963 iterations 21
Cbc0038I Pass   6: suminf.    0.52775 (3) obj. -16.2963 iterations 0
Cbc0038I Pass   7: suminf.    0.72719 (2) obj. -16.2963 iterations 12
Cbc0038I Pass   8: suminf.    1.11490 (4) obj. -16.2963 iterations 4
Cbc0038I Pass   9: suminf.    0.62018 (3) obj. -16.2963 iterations 4
Cbc0038I Pass  10: suminf.    0.61604 (3) obj. -16.2963 iterations 3
Cbc0038I Pass  11: suminf.    0.29181 (2) obj. -16.2963 iterations 5
Cbc0038I Pass  12: suminf.    0.29181 (2) obj. -16.2963 iterations 0
Cbc0038I Pass  13: suminf.    0.25141 (1) obj. -16.2963 iterations 4
Cbc0038I Pass  14: suminf.    0.50588 (2) obj. -17.8356 iterations 2
Cbc0038I Pass  15: suminf.    0.25141 (1) obj. -16.2963 iterations 2
Cbc0038I Pass  16: suminf.    1.95111 (16) obj. -16.2963 iterations 20
Cbc0038I Pass  17: suminf.    0.61484 (9) obj. -16.2963 iterations 7
Cbc0038I Pass  18: suminf.    0.27337 (3) obj. -16.2963 iterations 6
Cbc0038I Pass  19: suminf.    0.97819 (4) obj. -16.2963 iterations 4
Cbc0038I Pass  20: suminf.    0.48150 (3) obj. -16.2963 iterations 2
Cbc0038I Pass  21: suminf.    0.57804 (3) obj. -16.2963 iterations 9
Cbc0038I Pass  22: suminf.    0.57804 (3) obj. -16.2963 iterations 0
Cbc0038I Pass  23: suminf.    0.87984 (5) obj. -16.2963 iterations 3
Cbc0038I Pass  24: suminf.    0.87950 (6) obj. -16.2963 iterations 2
Cbc0038I Pass  25: suminf.    1.57201 (5) obj. -16.2963 iterations 4
Cbc0038I Pass  26: suminf.    0.48423 (3) obj. -16.2963 iterations 4
Cbc0038I Pass  27: suminf.    0.48150 (3) obj. -16.2963 iterations 3
Cbc0038I Pass  28: suminf.    0.57804 (3) obj. -16.2963 iterations 9
Cbc0038I Pass  29: suminf.    0.57804 (3) obj. -16.2963 iterations 0
Cbc0038I Pass  30: suminf.    0.87984 (5) obj. -16.2963 iterations 3
Cbc0038I Pass  31: suminf.    0.87950 (6) obj. -16.2963 iterations 2
Cbc0038I Pass  32: suminf.    1.57201 (5) obj. -16.2963 iterations 4
Cbc0038I Rounding solution of -16.5589 is better than previous of -11.9463

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -24.3362
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.27368 (18) obj. -29.6138 iterations 0
Cbc0038I Pass  33: suminf.    1.27368 (18) obj. -29.6138 iterations 1
Cbc0038I Pass  34: suminf.    1.91388 (16) obj. -24.3362 iterations 32
Cbc0038I Pass  35: suminf.    1.91388 (16) obj. -24.3362 iterations 0
Cbc0038I Pass  36: suminf.    2.06429 (8) obj. -24.3362 iterations 20
Cbc0038I Pass  37: suminf.    2.03097 (8) obj. -24.3362 iterations 4
Cbc0038I Pass  38: suminf.    1.72862 (8) obj. -24.3362 iterations 6
Cbc0038I Pass  39: suminf.    1.71955 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  40: suminf.    2.84759 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  41: suminf.    2.74194 (10) obj. -24.3362 iterations 2
Cbc0038I Pass  42: suminf.    2.26413 (9) obj. -24.3362 iterations 11
Cbc0038I Pass  43: suminf.    2.26413 (9) obj. -24.3362 iterations 1
Cbc0038I Pass  44: suminf.    1.42704 (8) obj. -24.3362 iterations 9
Cbc0038I Pass  45: suminf.    1.39372 (8) obj. -24.3362 iterations 3
Cbc0038I Pass  46: suminf.    1.72862 (8) obj. -24.3362 iterations 8
Cbc0038I Pass  47: suminf.    1.71955 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  48: suminf.    2.84759 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  49: suminf.    2.74194 (10) obj. -24.3362 iterations 2
Cbc0038I Pass  50: suminf.    2.26413 (9) obj. -24.3362 iterations 11
Cbc0038I Pass  51: suminf.    2.26413 (9) obj. -24.3362 iterations 1
Cbc0038I Pass  52: suminf.    1.42704 (8) obj. -24.3362 iterations 8
Cbc0038I Pass  53: suminf.    1.39372 (8) obj. -24.3362 iterations 2
Cbc0038I Pass  54: suminf.    1.72862 (8) obj. -24.3362 iterations 8
Cbc0038I Pass  55: suminf.    1.71955 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  56: suminf.    2.84759 (10) obj. -24.3362 iterations 3
Cbc0038I Pass  57: suminf.    2.74194 (10) obj. -24.3362 iterations 2
Cbc0038I Pass  58: suminf.    2.26413 (9) obj. -24.3362 iterations 11
Cbc0038I Pass  59: suminf.    2.26413 (9) obj. -24.3362 iterations 1
Cbc0038I Pass  60: suminf.    1.42704 (8) obj. -24.3362 iterations 9
Cbc0038I Pass  61: suminf.    1.39372 (8) obj. -24.3362 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 85 columns, reduced to 32 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -16.5589 - took 0.02 seconds
Cbc0012I Integer solution of -16.558907 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 73 rows 85 columns, reduced to 15 rows 17 columns
Cbc0031I 43 added rows had average density of 18.186047
Cbc0013I At root node, 43 cuts changed objective from -55.445062 to -26.402388 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3785 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 678 row cuts average 71.6 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 69 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 450 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 114 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.672 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.558907 best solution, best possible -26.402388 (1.61 seconds)
Cbc0012I Integer solution of -17.648413 found by rounding after 2417 iterations and 2 nodes (1.76 seconds)
Cbc0012I Integer solution of -17.89457 found by DiveCoefficient after 2429 iterations and 3 nodes (1.80 seconds)
Cbc0004I Integer solution of -20.40172 found after 2462 iterations and 3 nodes (1.86 seconds)
Cbc0010I After 10 nodes, 5 on tree, -20.40172 best solution, best possible -26.335892 (2.36 seconds)
Cbc0012I Integer solution of -20.59243 found by DiveCoefficient after 2904 iterations and 12 nodes (2.54 seconds)
Cbc0010I After 30 nodes, 7 on tree, -20.59243 best solution, best possible -26.335892 (3.12 seconds)
Cbc0038I Full problem 73 rows 85 columns, reduced to 28 rows 34 columns
Cbc0012I Integer solution of -23.59243 found by RINS after 3628 iterations and 41 nodes (3.43 seconds)
Cbc0010I After 47 nodes, 8 on tree, -23.59243 best solution, best possible -26.3344 (3.92 seconds)
Cbc0001I Search completed - best objective -23.59242999999999, took 4191 iterations and 58 nodes (4.25 seconds)
Cbc0032I Strong branching done 776 times (10693 iterations), fathomed 5 nodes and fixed 9 variables
Cbc0035I Maximum depth 13, 96 variables fixed on reduced cost
Total time (CPU seconds):       2.82   (Wallclock seconds):       4.26

