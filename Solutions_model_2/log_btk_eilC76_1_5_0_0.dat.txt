Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 3.04077e-05 - average 2.18761e-07, 12 fixed columns
Coin0506I Presolve 111 (-28) rows, 62 (-14) columns and 338 (-84) elements
Clp0014I Perturbing problem by 0.001% of 2.462257 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Coin0511I After Postsolve, objective 40.411876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Coin0511I After Postsolve, objective 40.411876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.41187583 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.92685
Cbc0038I Solution found of 3.63958
Cbc0038I Relaxing continuous gives -5.64838
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 79 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.64838 to -11.1042 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.0351
Cbc0038I Pass   1: suminf.    1.92291 (37) obj. -14.0351 iterations 30
Cbc0038I Pass   2: suminf.    1.25970 (7) obj. -14.0351 iterations 33
Cbc0038I Pass   3: suminf.    1.05923 (6) obj. -14.0351 iterations 3
Cbc0038I Pass   4: suminf.    1.40202 (4) obj. -14.0351 iterations 10
Cbc0038I Pass   5: suminf.    1.19066 (3) obj. -14.0351 iterations 1
Cbc0038I Pass   6: suminf.    0.89591 (5) obj. -14.0351 iterations 3
Cbc0038I Pass   7: suminf.    1.14469 (4) obj. -14.0351 iterations 5
Cbc0038I Pass   8: suminf.    1.14469 (4) obj. -14.0351 iterations 0
Cbc0038I Pass   9: suminf.    1.14360 (4) obj. -14.0351 iterations 4
Cbc0038I Pass  10: suminf.    1.38866 (4) obj. -14.0351 iterations 3
Cbc0038I Pass  11: suminf.    1.31152 (5) obj. -14.0351 iterations 16
Cbc0038I Pass  12: suminf.    0.77645 (3) obj. -14.0351 iterations 6
Cbc0038I Pass  13: suminf.    0.85877 (3) obj. -14.0351 iterations 5
Cbc0038I Pass  14: suminf.    0.85877 (3) obj. -14.0351 iterations 0
Cbc0038I Pass  15: suminf.    1.14942 (3) obj. -14.0351 iterations 2
Cbc0038I Pass  16: suminf.    1.03598 (4) obj. -14.0351 iterations 1
Cbc0038I Pass  17: suminf.    1.38337 (4) obj. -14.0351 iterations 4
Cbc0038I Pass  18: suminf.    1.38337 (4) obj. -14.0351 iterations 0
Cbc0038I Pass  19: suminf.    1.33237 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  20: suminf.    1.26070 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  21: suminf.    1.33708 (4) obj. -14.0351 iterations 5
Cbc0038I Pass  22: suminf.    1.24438 (4) obj. -14.0351 iterations 3
Cbc0038I Pass  23: suminf.    1.14999 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  24: suminf.    1.30193 (5) obj. -14.0351 iterations 7
Cbc0038I Pass  25: suminf.    1.29329 (7) obj. -14.0351 iterations 1
Cbc0038I Pass  26: suminf.    1.70535 (4) obj. -14.0351 iterations 8
Cbc0038I Pass  27: suminf.    1.50160 (5) obj. -14.0351 iterations 4
Cbc0038I Pass  28: suminf.    1.64108 (5) obj. -14.0351 iterations 2
Cbc0038I Pass  29: suminf.    1.40524 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  30: suminf.    2.37519 (8) obj. -14.0351 iterations 14
Cbc0038I Rounding solution of -12.4505 is better than previous of -11.1042

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -12.4505 to -14.7299 (0.09 seconds)
Cbc0038I Round again with cutoff of -19.8664
Cbc0038I Pass  30: suminf.    3.25992 (37) obj. -19.8664 iterations 0
Cbc0038I Pass  31: suminf.    2.35987 (8) obj. -19.8664 iterations 30
Cbc0038I Pass  32: suminf.    1.22167 (5) obj. -19.8664 iterations 12
Cbc0038I Pass  33: suminf.    1.01800 (7) obj. -19.8664 iterations 7
Cbc0038I Pass  34: suminf.    1.01800 (7) obj. -19.8664 iterations 1
Cbc0038I Pass  35: suminf.    3.53640 (10) obj. -19.8664 iterations 12
Cbc0038I Pass  36: suminf.    2.60537 (9) obj. -19.8664 iterations 3
Cbc0038I Pass  37: suminf.    2.17838 (8) obj. -19.8664 iterations 8
Cbc0038I Pass  38: suminf.    2.09088 (7) obj. -19.8664 iterations 2
Cbc0038I Pass  39: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  40: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  41: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  42: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  43: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  44: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  45: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  46: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  47: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  48: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  49: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  50: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  51: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  52: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  53: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  54: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  55: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  56: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  57: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  58: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  59: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 89 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -14.7299 - took 0.14 seconds
Cbc0012I Integer solution of -14.72989 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 81 rows 46 columns
Cbc0031I 23 added rows had average density of 57.478261
Cbc0013I At root node, 23 cuts changed objective from -40.411876 to -32.47232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11866 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1537 row cuts average 72.4 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.72989 best solution, best possible -32.47232 (0.87 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 52 rows 32 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 5 rows 7 columns
Cbc0004I Integer solution of -14.81852 found after 10961 iterations and 104 nodes (1.41 seconds)
Cbc0001I Search completed - best objective -14.81852, took 11213 iterations and 110 nodes (1.41 seconds)
Cbc0032I Strong branching done 1200 times (19742 iterations), fathomed 2 nodes and fixed 20 variables
Cbc0035I Maximum depth 34, 263 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 119 (-33) columns and 2101 (-1202) elements
Clp1000I sum of infeasibilities 1.26839e-07 - average 1.17443e-09, 19 fixed columns
Coin0506I Presolve 91 (-17) rows, 100 (-19) columns and 1539 (-562) elements
Clp0006I 0  Obj 44.942368 Dual inf 4.167705 (99)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.4342908 - largest nonzero change 2.7856311e-05 ( 0.0016580886%) - largest zero change 2.9146444e-05
Clp0000I Optimal - objective value 55.608521
Clp0000I Optimal - objective value 55.608521
Coin0511I After Postsolve, objective 55.608521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.608521
Clp0000I Optimal - objective value 55.608521
Clp0000I Optimal - objective value 55.608521
Clp0000I Optimal - objective value 55.608521
Coin0511I After Postsolve, objective 55.608521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.60852065 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 119 columns (119 integer (119 of which binary)) and 2109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.913%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.18627
Cbc0038I Pass   1: suminf.    2.72184 (34) obj. -36.6397 iterations 18
Cbc0038I Pass   2: suminf.    2.72184 (34) obj. -36.6397 iterations 1
Cbc0038I Pass   3: suminf.    0.34441 (6) obj. 1.72219 iterations 28
Cbc0038I Solution found of 8.32373
Cbc0038I Rounding solution of 4.17116 is better than previous of 8.32373

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 4.17116 to 0.65343 (0.03 seconds)
Cbc0038I Round again with cutoff of -4.1163
Cbc0038I Pass   4: suminf.    2.72184 (34) obj. -36.6397 iterations 0
Cbc0038I Pass   5: suminf.    2.72184 (34) obj. -36.6397 iterations 1
Cbc0038I Pass   6: suminf.    1.43429 (20) obj. -13.9483 iterations 14
Cbc0038I Pass   7: suminf.    0.37552 (4) obj. -4.1163 iterations 24
Cbc0038I Pass   8: suminf.    0.25581 (4) obj. -5.43307 iterations 2
Cbc0038I Pass   9: suminf.    0.45586 (8) obj. -4.1163 iterations 11
Cbc0038I Pass  10: suminf.    0.45586 (8) obj. -4.1163 iterations 0
Cbc0038I Pass  11: suminf.    0.43361 (1) obj. -4.1163 iterations 11
Cbc0038I Pass  12: suminf.    0.39020 (2) obj. -5.85627 iterations 2
Cbc0038I Pass  13: suminf.    0.43361 (1) obj. -4.1163 iterations 2
Cbc0038I Pass  14: suminf.    1.67587 (12) obj. -4.1163 iterations 30
Cbc0038I Pass  15: suminf.    1.67587 (12) obj. -4.1163 iterations 3
Cbc0038I Pass  16: suminf.    0.56034 (3) obj. -4.1163 iterations 17
Cbc0038I Pass  17: suminf.    0.24023 (2) obj. -4.1163 iterations 9
Cbc0038I Pass  18: suminf.    0.33516 (2) obj. -4.1163 iterations 5
Cbc0038I Pass  19: suminf.    0.23047 (2) obj. -4.25615 iterations 3
Cbc0038I Pass  20: suminf.    0.53036 (2) obj. -4.1163 iterations 3
Cbc0038I Pass  21: suminf.    0.40507 (2) obj. -4.1163 iterations 1
Cbc0038I Pass  22: suminf.    2.59834 (12) obj. -4.1163 iterations 28
Cbc0038I Pass  23: suminf.    1.73896 (10) obj. -4.1163 iterations 14
Cbc0038I Pass  24: suminf.    1.44025 (4) obj. -4.1163 iterations 17
Cbc0038I Pass  25: suminf.    0.24744 (2) obj. -4.1163 iterations 6
Cbc0038I Pass  26: suminf.    0.30675 (2) obj. -4.1163 iterations 5
Cbc0038I Pass  27: suminf.    0.17969 (2) obj. -4.38134 iterations 4
Cbc0038I Pass  28: suminf.    0.60983 (2) obj. -4.1163 iterations 3
Cbc0038I Pass  29: suminf.    0.40849 (2) obj. -4.1163 iterations 1
Cbc0038I Pass  30: suminf.    1.53069 (10) obj. -4.1163 iterations 15
Cbc0038I Pass  31: suminf.    1.16609 (9) obj. -6.8691 iterations 4
Cbc0038I Pass  32: suminf.    0.87806 (3) obj. -4.1163 iterations 14
Cbc0038I Pass  33: suminf.    0.54525 (4) obj. -4.1163 iterations 1
Cbc0038I Rounding solution of 0.315931 is better than previous of 0.65343

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 27 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 0.315931 to 0.30905 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.7016
Cbc0038I Pass  33: suminf.    2.72184 (34) obj. -36.6397 iterations 0
Cbc0038I Pass  34: suminf.    2.72184 (34) obj. -36.6397 iterations 1
Cbc0038I Pass  35: suminf.    1.39971 (15) obj. -12.7016 iterations 23
Cbc0038I Pass  36: suminf.    1.33923 (10) obj. -12.7016 iterations 24
Cbc0038I Pass  37: suminf.    1.33923 (10) obj. -12.7016 iterations 0
Cbc0038I Pass  38: suminf.    1.28405 (7) obj. -12.7016 iterations 10
Cbc0038I Pass  39: suminf.    1.16822 (6) obj. -12.7016 iterations 3
Cbc0038I Pass  40: suminf.    0.90155 (6) obj. -12.7016 iterations 3
Cbc0038I Pass  41: suminf.    0.90155 (6) obj. -12.7016 iterations 2
Cbc0038I Pass  42: suminf.    1.16822 (6) obj. -12.7016 iterations 3
Cbc0038I Pass  43: suminf.    1.59901 (12) obj. -12.7016 iterations 24
Cbc0038I Pass  44: suminf.    1.59901 (12) obj. -12.7016 iterations 1
Cbc0038I Pass  45: suminf.    1.58441 (8) obj. -12.7016 iterations 13
Cbc0038I Pass  46: suminf.    1.58441 (8) obj. -12.7016 iterations 0
Cbc0038I Pass  47: suminf.    0.61347 (6) obj. -12.7016 iterations 13
Cbc0038I Pass  48: suminf.    0.61347 (6) obj. -12.7016 iterations 0
Cbc0038I Pass  49: suminf.    1.08336 (6) obj. -12.7016 iterations 11
Cbc0038I Pass  50: suminf.    0.78963 (6) obj. -13.2305 iterations 5
Cbc0038I Pass  51: suminf.    1.07972 (7) obj. -12.7016 iterations 3
Cbc0038I Pass  52: suminf.    1.68669 (13) obj. -12.7016 iterations 28
Cbc0038I Pass  53: suminf.    1.50229 (12) obj. -12.7016 iterations 2
Cbc0038I Pass  54: suminf.    2.04282 (10) obj. -12.7016 iterations 23
Cbc0038I Pass  55: suminf.    1.37065 (11) obj. -12.7016 iterations 2
Cbc0038I Pass  56: suminf.    1.37037 (11) obj. -12.7016 iterations 7
Cbc0038I Pass  57: suminf.    1.65084 (10) obj. -12.7016 iterations 12
Cbc0038I Pass  58: suminf.    1.12902 (9) obj. -12.7016 iterations 19
Cbc0038I Pass  59: suminf.    1.12902 (9) obj. -12.7016 iterations 7
Cbc0038I Pass  60: suminf.    2.04282 (10) obj. -12.7016 iterations 26
Cbc0038I Pass  61: suminf.    1.37065 (11) obj. -12.7016 iterations 1
Cbc0038I Pass  62: suminf.    1.37037 (11) obj. -12.7016 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 0.30905 - took 0.05 seconds
Cbc0012I Integer solution of 0.30905 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 108 rows 119 columns, reduced to 8 rows 10 columns
Cbc0031I 55 added rows had average density of 44.490909
Cbc0013I At root node, 55 cuts changed objective from -47.043004 to -22.485992 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17348 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1572 row cuts average 110.7 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 580 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 554 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.505 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 0.30905 best solution, best possible -22.485992 (2.52 seconds)
Cbc0012I Integer solution of -9.24718 found by rounding after 6633 iterations and 1 nodes (2.53 seconds)
Cbc0004I Integer solution of -14.81852 found after 6744 iterations and 1 nodes (2.55 seconds)
Cbc0010I After 12 nodes, 7 on tree, -14.81852 best solution, best possible -21.814285 (3.25 seconds)
Cbc0001I Search completed - best objective -14.81852, took 10046 iterations and 44 nodes (3.76 seconds)
Cbc0032I Strong branching done 674 times (19256 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 15, 137 variables fixed on reduced cost
Total time (CPU seconds):       3.07   (Wallclock seconds):       3.77

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 3.04077e-05 - average 2.18761e-07, 12 fixed columns
Coin0506I Presolve 111 (-28) rows, 62 (-14) columns and 338 (-84) elements
Clp0014I Perturbing problem by 0.001% of 2.462257 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Coin0511I After Postsolve, objective 40.411876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Coin0511I After Postsolve, objective 40.411876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.41187583 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.92685
Cbc0038I Solution found of 3.63958
Cbc0038I Relaxing continuous gives -5.64838
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 79 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.64838 to -11.1042 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.0351
Cbc0038I Pass   1: suminf.    1.92291 (37) obj. -14.0351 iterations 30
Cbc0038I Pass   2: suminf.    1.25970 (7) obj. -14.0351 iterations 33
Cbc0038I Pass   3: suminf.    1.05923 (6) obj. -14.0351 iterations 3
Cbc0038I Pass   4: suminf.    1.40202 (4) obj. -14.0351 iterations 10
Cbc0038I Pass   5: suminf.    1.19066 (3) obj. -14.0351 iterations 1
Cbc0038I Pass   6: suminf.    0.89591 (5) obj. -14.0351 iterations 3
Cbc0038I Pass   7: suminf.    1.14469 (4) obj. -14.0351 iterations 5
Cbc0038I Pass   8: suminf.    1.14469 (4) obj. -14.0351 iterations 0
Cbc0038I Pass   9: suminf.    1.14360 (4) obj. -14.0351 iterations 4
Cbc0038I Pass  10: suminf.    1.38866 (4) obj. -14.0351 iterations 3
Cbc0038I Pass  11: suminf.    1.31152 (5) obj. -14.0351 iterations 16
Cbc0038I Pass  12: suminf.    0.77645 (3) obj. -14.0351 iterations 6
Cbc0038I Pass  13: suminf.    0.85877 (3) obj. -14.0351 iterations 5
Cbc0038I Pass  14: suminf.    0.85877 (3) obj. -14.0351 iterations 0
Cbc0038I Pass  15: suminf.    1.14942 (3) obj. -14.0351 iterations 2
Cbc0038I Pass  16: suminf.    1.03598 (4) obj. -14.0351 iterations 1
Cbc0038I Pass  17: suminf.    1.38337 (4) obj. -14.0351 iterations 4
Cbc0038I Pass  18: suminf.    1.38337 (4) obj. -14.0351 iterations 0
Cbc0038I Pass  19: suminf.    1.33237 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  20: suminf.    1.26070 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  21: suminf.    1.33708 (4) obj. -14.0351 iterations 5
Cbc0038I Pass  22: suminf.    1.24438 (4) obj. -14.0351 iterations 3
Cbc0038I Pass  23: suminf.    1.14999 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  24: suminf.    1.30193 (5) obj. -14.0351 iterations 7
Cbc0038I Pass  25: suminf.    1.29329 (7) obj. -14.0351 iterations 1
Cbc0038I Pass  26: suminf.    1.70535 (4) obj. -14.0351 iterations 8
Cbc0038I Pass  27: suminf.    1.50160 (5) obj. -14.0351 iterations 4
Cbc0038I Pass  28: suminf.    1.64108 (5) obj. -14.0351 iterations 2
Cbc0038I Pass  29: suminf.    1.40524 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  30: suminf.    2.37519 (8) obj. -14.0351 iterations 14
Cbc0038I Rounding solution of -12.4505 is better than previous of -11.1042

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -12.4505 to -14.7299 (0.11 seconds)
Cbc0038I Round again with cutoff of -19.8664
Cbc0038I Pass  30: suminf.    3.25992 (37) obj. -19.8664 iterations 0
Cbc0038I Pass  31: suminf.    2.35987 (8) obj. -19.8664 iterations 30
Cbc0038I Pass  32: suminf.    1.22167 (5) obj. -19.8664 iterations 12
Cbc0038I Pass  33: suminf.    1.01800 (7) obj. -19.8664 iterations 7
Cbc0038I Pass  34: suminf.    1.01800 (7) obj. -19.8664 iterations 1
Cbc0038I Pass  35: suminf.    3.53640 (10) obj. -19.8664 iterations 12
Cbc0038I Pass  36: suminf.    2.60537 (9) obj. -19.8664 iterations 3
Cbc0038I Pass  37: suminf.    2.17838 (8) obj. -19.8664 iterations 8
Cbc0038I Pass  38: suminf.    2.09088 (7) obj. -19.8664 iterations 2
Cbc0038I Pass  39: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  40: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  41: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  42: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  43: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  44: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  45: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  46: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  47: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  48: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  49: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  50: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  51: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  52: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  53: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  54: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  55: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  56: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  57: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  58: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  59: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 89 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -14.7299 - took 0.13 seconds
Cbc0012I Integer solution of -14.72989 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 81 rows 46 columns
Cbc0031I 23 added rows had average density of 57.478261
Cbc0013I At root node, 23 cuts changed objective from -40.411876 to -32.47232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11866 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1537 row cuts average 72.4 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.72989 best solution, best possible -32.47232 (1.04 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 52 rows 32 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 5 rows 7 columns
Cbc0004I Integer solution of -14.81852 found after 10961 iterations and 104 nodes (1.69 seconds)
Cbc0001I Search completed - best objective -14.81852, took 11213 iterations and 110 nodes (1.69 seconds)
Cbc0032I Strong branching done 1200 times (19742 iterations), fathomed 2 nodes and fixed 20 variables
Cbc0035I Maximum depth 34, 263 variables fixed on reduced cost
Total time (CPU seconds):       1.62   (Wallclock seconds):       1.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 119 (-34) columns and 2101 (-1203) elements
Clp1000I sum of infeasibilities 1.26839e-07 - average 1.17443e-09, 19 fixed columns
Coin0506I Presolve 91 (-17) rows, 100 (-19) columns and 1539 (-562) elements
Clp0006I 0  Obj 44.942368 Dual inf 4.167705 (99)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.4342908 - largest nonzero change 2.7856311e-05 ( 0.0016580886%) - largest zero change 2.9146444e-05
Clp0000I Optimal - objective value 55.608521
Clp0000I Optimal - objective value 55.608521
Coin0511I After Postsolve, objective 55.608521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.608521
Clp0000I Optimal - objective value 55.608521
Clp0000I Optimal - objective value 55.608521
Clp0000I Optimal - objective value 55.608521
Coin0511I After Postsolve, objective 55.608521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.60852065 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 119 columns (119 integer (119 of which binary)) and 2109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.913%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.18627
Cbc0038I Pass   1: suminf.    2.72184 (34) obj. -36.6397 iterations 18
Cbc0038I Pass   2: suminf.    2.72184 (34) obj. -36.6397 iterations 1
Cbc0038I Pass   3: suminf.    0.34441 (6) obj. 1.72219 iterations 28
Cbc0038I Solution found of 8.32373
Cbc0038I Rounding solution of 4.17116 is better than previous of 8.32373

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 4.17116 to 0.65343 (0.04 seconds)
Cbc0038I Round again with cutoff of -4.1163
Cbc0038I Pass   4: suminf.    2.72184 (34) obj. -36.6397 iterations 0
Cbc0038I Pass   5: suminf.    2.72184 (34) obj. -36.6397 iterations 1
Cbc0038I Pass   6: suminf.    1.43429 (20) obj. -13.9483 iterations 14
Cbc0038I Pass   7: suminf.    0.37552 (4) obj. -4.1163 iterations 24
Cbc0038I Pass   8: suminf.    0.25581 (4) obj. -5.43307 iterations 2
Cbc0038I Pass   9: suminf.    0.45586 (8) obj. -4.1163 iterations 11
Cbc0038I Pass  10: suminf.    0.45586 (8) obj. -4.1163 iterations 0
Cbc0038I Pass  11: suminf.    0.43361 (1) obj. -4.1163 iterations 11
Cbc0038I Pass  12: suminf.    0.39020 (2) obj. -5.85627 iterations 2
Cbc0038I Pass  13: suminf.    0.43361 (1) obj. -4.1163 iterations 2
Cbc0038I Pass  14: suminf.    1.67587 (12) obj. -4.1163 iterations 30
Cbc0038I Pass  15: suminf.    1.67587 (12) obj. -4.1163 iterations 3
Cbc0038I Pass  16: suminf.    0.56034 (3) obj. -4.1163 iterations 17
Cbc0038I Pass  17: suminf.    0.24023 (2) obj. -4.1163 iterations 9
Cbc0038I Pass  18: suminf.    0.33516 (2) obj. -4.1163 iterations 5
Cbc0038I Pass  19: suminf.    0.23047 (2) obj. -4.25615 iterations 3
Cbc0038I Pass  20: suminf.    0.53036 (2) obj. -4.1163 iterations 3
Cbc0038I Pass  21: suminf.    0.40507 (2) obj. -4.1163 iterations 1
Cbc0038I Pass  22: suminf.    2.59834 (12) obj. -4.1163 iterations 28
Cbc0038I Pass  23: suminf.    1.73896 (10) obj. -4.1163 iterations 14
Cbc0038I Pass  24: suminf.    1.44025 (4) obj. -4.1163 iterations 17
Cbc0038I Pass  25: suminf.    0.24744 (2) obj. -4.1163 iterations 6
Cbc0038I Pass  26: suminf.    0.30675 (2) obj. -4.1163 iterations 5
Cbc0038I Pass  27: suminf.    0.17969 (2) obj. -4.38134 iterations 4
Cbc0038I Pass  28: suminf.    0.60983 (2) obj. -4.1163 iterations 3
Cbc0038I Pass  29: suminf.    0.40849 (2) obj. -4.1163 iterations 1
Cbc0038I Pass  30: suminf.    1.53069 (10) obj. -4.1163 iterations 15
Cbc0038I Pass  31: suminf.    1.16609 (9) obj. -6.8691 iterations 4
Cbc0038I Pass  32: suminf.    0.87806 (3) obj. -4.1163 iterations 14
Cbc0038I Pass  33: suminf.    0.54525 (4) obj. -4.1163 iterations 1
Cbc0038I Rounding solution of 0.315931 is better than previous of 0.65343

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 27 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 0.315931 to 0.30905 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.7016
Cbc0038I Pass  33: suminf.    2.72184 (34) obj. -36.6397 iterations 0
Cbc0038I Pass  34: suminf.    2.72184 (34) obj. -36.6397 iterations 1
Cbc0038I Pass  35: suminf.    1.39971 (15) obj. -12.7016 iterations 23
Cbc0038I Pass  36: suminf.    1.33923 (10) obj. -12.7016 iterations 24
Cbc0038I Pass  37: suminf.    1.33923 (10) obj. -12.7016 iterations 0
Cbc0038I Pass  38: suminf.    1.28405 (7) obj. -12.7016 iterations 10
Cbc0038I Pass  39: suminf.    1.16822 (6) obj. -12.7016 iterations 3
Cbc0038I Pass  40: suminf.    0.90155 (6) obj. -12.7016 iterations 3
Cbc0038I Pass  41: suminf.    0.90155 (6) obj. -12.7016 iterations 2
Cbc0038I Pass  42: suminf.    1.16822 (6) obj. -12.7016 iterations 3
Cbc0038I Pass  43: suminf.    1.59901 (12) obj. -12.7016 iterations 24
Cbc0038I Pass  44: suminf.    1.59901 (12) obj. -12.7016 iterations 1
Cbc0038I Pass  45: suminf.    1.58441 (8) obj. -12.7016 iterations 13
Cbc0038I Pass  46: suminf.    1.58441 (8) obj. -12.7016 iterations 0
Cbc0038I Pass  47: suminf.    0.61347 (6) obj. -12.7016 iterations 13
Cbc0038I Pass  48: suminf.    0.61347 (6) obj. -12.7016 iterations 0
Cbc0038I Pass  49: suminf.    1.08336 (6) obj. -12.7016 iterations 11
Cbc0038I Pass  50: suminf.    0.78963 (6) obj. -13.2305 iterations 5
Cbc0038I Pass  51: suminf.    1.07972 (7) obj. -12.7016 iterations 3
Cbc0038I Pass  52: suminf.    1.68669 (13) obj. -12.7016 iterations 28
Cbc0038I Pass  53: suminf.    1.50229 (12) obj. -12.7016 iterations 2
Cbc0038I Pass  54: suminf.    2.04282 (10) obj. -12.7016 iterations 23
Cbc0038I Pass  55: suminf.    1.37065 (11) obj. -12.7016 iterations 2
Cbc0038I Pass  56: suminf.    1.37037 (11) obj. -12.7016 iterations 7
Cbc0038I Pass  57: suminf.    1.65084 (10) obj. -12.7016 iterations 12
Cbc0038I Pass  58: suminf.    1.12902 (9) obj. -12.7016 iterations 19
Cbc0038I Pass  59: suminf.    1.12902 (9) obj. -12.7016 iterations 7
Cbc0038I Pass  60: suminf.    2.04282 (10) obj. -12.7016 iterations 26
Cbc0038I Pass  61: suminf.    1.37065 (11) obj. -12.7016 iterations 1
Cbc0038I Pass  62: suminf.    1.37037 (11) obj. -12.7016 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 0.30905 - took 0.05 seconds
Cbc0012I Integer solution of 0.30905 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 108 rows 119 columns, reduced to 8 rows 10 columns
Cbc0031I 55 added rows had average density of 44.490909
Cbc0013I At root node, 55 cuts changed objective from -47.043004 to -22.485992 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17348 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1572 row cuts average 110.7 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 580 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 554 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.568 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 0.30905 best solution, best possible -22.485992 (2.95 seconds)
Cbc0012I Integer solution of -9.24718 found by rounding after 6633 iterations and 1 nodes (2.97 seconds)
Cbc0004I Integer solution of -14.81852 found after 6744 iterations and 1 nodes (2.98 seconds)
Cbc0010I After 8 nodes, 7 on tree, -14.81852 best solution, best possible -21.814285 (3.69 seconds)
Cbc0001I Search completed - best objective -14.81852, took 10046 iterations and 44 nodes (4.33 seconds)
Cbc0032I Strong branching done 674 times (19256 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 15, 137 variables fixed on reduced cost
Total time (CPU seconds):       3.48   (Wallclock seconds):       4.35

