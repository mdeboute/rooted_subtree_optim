Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 149 (-34) elements
Clp1000I sum of infeasibilities 2.0952e-05 - average 4.1904e-07, 4 fixed columns
Coin0506I Presolve 39 (-11) rows, 23 (-5) columns and 117 (-32) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Coin0511I After Postsolve, objective 81.32727, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Coin0511I After Postsolve, objective 81.32727, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.32727007 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 28 columns (27 integer (27 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.576%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.66884
Cbc0038I Solution found of -13.5746
Cbc0038I Relaxing continuous gives -13.5746
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -13.5746 to -48.894 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.174
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.56024 (5) obj. -51.174 iterations 18
Cbc0038I Pass   2: suminf.    0.86574 (2) obj. -51.174 iterations 8
Cbc0038I Pass   3: suminf.    0.63160 (2) obj. -51.174 iterations 2
Cbc0038I Pass   4: suminf.    0.46250 (1) obj. -51.174 iterations 1
Cbc0038I Pass   5: suminf.    0.47975 (1) obj. -51.174 iterations 1
Cbc0038I Pass   6: suminf.    0.87708 (4) obj. -51.174 iterations 11
Cbc0038I Pass   7: suminf.    0.55212 (3) obj. -51.174 iterations 3
Cbc0038I Pass   8: suminf.    0.70594 (2) obj. -51.174 iterations 3
Cbc0038I Pass   9: suminf.    0.45236 (2) obj. -51.174 iterations 2
Cbc0038I Pass  10: suminf.    0.38750 (1) obj. -51.174 iterations 1
Cbc0038I Pass  11: suminf.    0.34041 (1) obj. -51.174 iterations 1
Cbc0038I Pass  12: suminf.    1.17192 (3) obj. -51.174 iterations 4
Cbc0038I Pass  13: suminf.    1.17192 (3) obj. -51.174 iterations 1
Cbc0038I Pass  14: suminf.    0.15466 (2) obj. -51.174 iterations 4
Cbc0038I Pass  15: suminf.    0.51223 (2) obj. -51.174 iterations 4
Cbc0038I Pass  16: suminf.    0.38750 (1) obj. -51.174 iterations 1
Cbc0038I Pass  17: suminf.    0.34041 (1) obj. -51.174 iterations 1
Cbc0038I Pass  18: suminf.    1.65222 (7) obj. -51.174 iterations 8
Cbc0038I Pass  19: suminf.    0.62143 (2) obj. -51.174 iterations 7
Cbc0038I Pass  20: suminf.    0.60041 (2) obj. -51.174 iterations 3
Cbc0038I Pass  21: suminf.    0.60041 (2) obj. -51.174 iterations 1
Cbc0038I Pass  22: suminf.    0.98236 (3) obj. -51.174 iterations 4
Cbc0038I Pass  23: suminf.    1.95713 (7) obj. -51.174 iterations 10
Cbc0038I Pass  24: suminf.    1.51616 (5) obj. -51.174 iterations 5
Cbc0038I Pass  25: suminf.    0.79016 (3) obj. -51.174 iterations 3
Cbc0038I Pass  26: suminf.    0.73169 (4) obj. -51.174 iterations 3
Cbc0038I Pass  27: suminf.    1.17424 (4) obj. -51.174 iterations 9
Cbc0038I Pass  28: suminf.    0.65206 (2) obj. -51.174 iterations 5
Cbc0038I Pass  29: suminf.    0.38880 (2) obj. -51.174 iterations 1
Cbc0038I Pass  30: suminf.    0.79704 (2) obj. -51.174 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -48.894 - took 0.02 seconds
Cbc0012I Integer solution of -48.894 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 48 rows 28 columns, reduced to 27 rows 17 columns
Cbc0031I 10 added rows had average density of 22.2
Cbc0013I At root node, 10 cuts changed objective from -71.693057 to -60.858384 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 811 row cuts average 3.9 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 374 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48.89400000000001, took 2362 iterations and 14 nodes (0.21 seconds)
Cbc0032I Strong branching done 164 times (1449 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-19) rows, 49 (-13) columns and 426 (-222) elements
Clp1000I sum of infeasibilities 1.8927e-08 - average 4.206e-10, 30 fixed columns
Coin0506I Presolve 17 (-28) rows, 19 (-30) columns and 67 (-359) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 65.802359
Clp0000I Optimal - objective value 65.802359
Coin0511I After Postsolve, objective 65.802359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3635153 - largest nonzero change 0 ( 0%) - largest zero change 2.7010933e-05
Clp0000I Optimal - objective value 96.257622
Clp0000I Optimal - objective value 96.257622
Clp0000I Optimal - objective value 96.257622
Coin0511I After Postsolve, objective 96.257622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.25762152 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 47 columns (47 integer (47 of which binary)) and 381 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.63474
Cbc0038I Pass   1: suminf.    0.58395 (8) obj. -36.9263 iterations 18
Cbc0038I Pass   2: suminf.    0.58395 (8) obj. -36.9263 iterations 0
Cbc0038I Solution found of -27.6597
Cbc0038I Rounding solution of -41.1492 is better than previous of -27.6597

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.6718
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.90979 (10) obj. -43.6718 iterations 4
Cbc0038I Pass   4: suminf.    0.90979 (10) obj. -43.6718 iterations 1
Cbc0038I Pass   5: suminf.    0.43089 (1) obj. -48.7278 iterations 14
Cbc0038I Pass   6: suminf.    0.32749 (1) obj. -43.6718 iterations 1
Cbc0038I Pass   7: suminf.    1.52850 (6) obj. -43.6718 iterations 9
Cbc0038I Pass   8: suminf.    1.46948 (5) obj. -43.6718 iterations 3
Cbc0038I Pass   9: suminf.    0.53757 (2) obj. -43.6718 iterations 10
Cbc0038I Pass  10: suminf.    0.49688 (2) obj. -43.6718 iterations 3
Cbc0038I Pass  11: suminf.    0.43605 (2) obj. -46.3577 iterations 3
Cbc0038I Pass  12: suminf.    0.89992 (3) obj. -43.6718 iterations 3
Cbc0038I Pass  13: suminf.    2.06327 (7) obj. -43.6718 iterations 13
Cbc0038I Pass  14: suminf.    2.05578 (6) obj. -43.6718 iterations 5
Cbc0038I Pass  15: suminf.    1.77150 (5) obj. -43.6718 iterations 5
Cbc0038I Pass  16: suminf.    1.77150 (5) obj. -43.6718 iterations 1
Cbc0038I Pass  17: suminf.    1.47768 (4) obj. -43.6718 iterations 2
Cbc0038I Pass  18: suminf.    1.08747 (5) obj. -43.6718 iterations 3
Cbc0038I Pass  19: suminf.    0.99625 (4) obj. -43.6718 iterations 2
Cbc0038I Pass  20: suminf.    1.96892 (5) obj. -43.6718 iterations 6
Cbc0038I Pass  21: suminf.    1.82747 (6) obj. -43.6718 iterations 3
Cbc0038I Pass  22: suminf.    3.01411 (8) obj. -43.6718 iterations 8
Cbc0038I Pass  23: suminf.    1.86920 (6) obj. -43.6718 iterations 7
Cbc0038I Pass  24: suminf.    1.27379 (5) obj. -43.6718 iterations 2
Cbc0038I Pass  25: suminf.    1.08018 (3) obj. -43.6718 iterations 8
Cbc0038I Pass  26: suminf.    0.80921 (4) obj. -43.6718 iterations 3
Cbc0038I Pass  27: suminf.    1.37541 (4) obj. -43.6718 iterations 5
Cbc0038I Pass  28: suminf.    1.37541 (4) obj. -43.6718 iterations 0
Cbc0038I Pass  29: suminf.    1.64896 (4) obj. -43.6718 iterations 2
Cbc0038I Pass  30: suminf.    0.97906 (4) obj. -43.6718 iterations 2
Cbc0038I Pass  31: suminf.    0.48764 (1) obj. -43.6718 iterations 3
Cbc0038I Pass  32: suminf.    0.47778 (1) obj. -44.1312 iterations 1
Cbc0038I Rounding solution of -46.6638 is better than previous of -41.1492

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 30 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -46.6638 to -48.894 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.3901
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.48509 (13) obj. -52.3901 iterations 3
Cbc0038I Pass  33: suminf.    0.67471 (4) obj. -52.3901 iterations 15
Cbc0038I Pass  34: suminf.    0.55031 (4) obj. -52.3901 iterations 3
Cbc0038I Pass  35: suminf.    0.43265 (3) obj. -52.3901 iterations 3
Cbc0038I Pass  36: suminf.    0.31178 (2) obj. -53.8477 iterations 3
Cbc0038I Pass  37: suminf.    0.85324 (3) obj. -52.3901 iterations 3
Cbc0038I Pass  38: suminf.    0.65651 (3) obj. -52.3901 iterations 3
Cbc0038I Pass  39: suminf.    2.26108 (13) obj. -52.3901 iterations 23
Cbc0038I Pass  40: suminf.    1.20468 (7) obj. -52.3901 iterations 12
Cbc0038I Pass  41: suminf.    1.44942 (5) obj. -52.3901 iterations 15
Cbc0038I Pass  42: suminf.    1.30090 (5) obj. -52.3901 iterations 5
Cbc0038I Pass  43: suminf.    1.07933 (3) obj. -52.3901 iterations 4
Cbc0038I Pass  44: suminf.    1.47539 (4) obj. -52.3901 iterations 6
Cbc0038I Pass  45: suminf.    2.13413 (9) obj. -52.3901 iterations 8
Cbc0038I Pass  46: suminf.    2.03461 (8) obj. -52.3901 iterations 4
Cbc0038I Pass  47: suminf.    1.47539 (4) obj. -52.3901 iterations 13
Cbc0038I Pass  48: suminf.    1.44942 (5) obj. -52.3901 iterations 2
Cbc0038I Pass  49: suminf.    1.30090 (5) obj. -52.3901 iterations 3
Cbc0038I Pass  50: suminf.    1.07933 (3) obj. -52.3901 iterations 4
Cbc0038I Pass  51: suminf.    1.47539 (4) obj. -52.3901 iterations 5
Cbc0038I Pass  52: suminf.    1.38784 (5) obj. -52.3901 iterations 2
Cbc0038I Pass  53: suminf.    1.93549 (8) obj. -52.3901 iterations 11
Cbc0038I Pass  54: suminf.    1.17620 (6) obj. -52.3901 iterations 6
Cbc0038I Pass  55: suminf.    1.12678 (8) obj. -52.3901 iterations 2
Cbc0038I Pass  56: suminf.    1.78414 (6) obj. -52.3901 iterations 8
Cbc0038I Pass  57: suminf.    0.91382 (5) obj. -52.3901 iterations 3
Cbc0038I Pass  58: suminf.    0.53907 (4) obj. -52.3901 iterations 4
Cbc0038I Pass  59: suminf.    2.01697 (5) obj. -52.3901 iterations 5
Cbc0038I Pass  60: suminf.    0.68905 (3) obj. -52.3901 iterations 4
Cbc0038I Pass  61: suminf.    0.52945 (4) obj. -52.3901 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -48.894 - took 0.04 seconds
Cbc0012I Integer solution of -48.894 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 41 rows 47 columns, reduced to 19 rows 20 columns
Cbc0031I 26 added rows had average density of 10.653846
Cbc0013I At root node, 26 cuts changed objective from -66.374056 to -56.053367 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1324 row cuts average 4.0 elements, 6 column cuts (6 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 600 row cuts average 37.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 98 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 101 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 92 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 162 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 252 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.894 best solution, best possible -56.053367 (1.59 seconds)
Cbc0010I After 6 nodes, 5 on tree, -48.894 best solution, best possible -56.053367 (2.38 seconds)
Cbc0001I Search completed - best objective -48.89400000000001, took 2964 iterations and 24 nodes (3.15 seconds)
Cbc0032I Strong branching done 318 times (2438 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 9, 36 variables fixed on reduced cost
Total time (CPU seconds):       2.00   (Wallclock seconds):       3.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 149 (-34) elements
Clp1000I sum of infeasibilities 2.0952e-05 - average 4.1904e-07, 4 fixed columns
Coin0506I Presolve 39 (-11) rows, 23 (-5) columns and 117 (-32) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Coin0511I After Postsolve, objective 81.32727, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Coin0511I After Postsolve, objective 81.32727, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.32727007 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 28 columns (27 integer (27 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.576%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.66884
Cbc0038I Solution found of -13.5746
Cbc0038I Relaxing continuous gives -13.5746
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -13.5746 to -48.894 (0.02 seconds)
Cbc0038I Round again with cutoff of -51.174
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.56024 (5) obj. -51.174 iterations 18
Cbc0038I Pass   2: suminf.    0.86574 (2) obj. -51.174 iterations 8
Cbc0038I Pass   3: suminf.    0.63160 (2) obj. -51.174 iterations 2
Cbc0038I Pass   4: suminf.    0.46250 (1) obj. -51.174 iterations 1
Cbc0038I Pass   5: suminf.    0.47975 (1) obj. -51.174 iterations 1
Cbc0038I Pass   6: suminf.    0.87708 (4) obj. -51.174 iterations 11
Cbc0038I Pass   7: suminf.    0.55212 (3) obj. -51.174 iterations 3
Cbc0038I Pass   8: suminf.    0.70594 (2) obj. -51.174 iterations 3
Cbc0038I Pass   9: suminf.    0.45236 (2) obj. -51.174 iterations 2
Cbc0038I Pass  10: suminf.    0.38750 (1) obj. -51.174 iterations 1
Cbc0038I Pass  11: suminf.    0.34041 (1) obj. -51.174 iterations 1
Cbc0038I Pass  12: suminf.    1.17192 (3) obj. -51.174 iterations 4
Cbc0038I Pass  13: suminf.    1.17192 (3) obj. -51.174 iterations 1
Cbc0038I Pass  14: suminf.    0.15466 (2) obj. -51.174 iterations 4
Cbc0038I Pass  15: suminf.    0.51223 (2) obj. -51.174 iterations 4
Cbc0038I Pass  16: suminf.    0.38750 (1) obj. -51.174 iterations 1
Cbc0038I Pass  17: suminf.    0.34041 (1) obj. -51.174 iterations 1
Cbc0038I Pass  18: suminf.    1.65222 (7) obj. -51.174 iterations 8
Cbc0038I Pass  19: suminf.    0.62143 (2) obj. -51.174 iterations 7
Cbc0038I Pass  20: suminf.    0.60041 (2) obj. -51.174 iterations 3
Cbc0038I Pass  21: suminf.    0.60041 (2) obj. -51.174 iterations 1
Cbc0038I Pass  22: suminf.    0.98236 (3) obj. -51.174 iterations 4
Cbc0038I Pass  23: suminf.    1.95713 (7) obj. -51.174 iterations 10
Cbc0038I Pass  24: suminf.    1.51616 (5) obj. -51.174 iterations 5
Cbc0038I Pass  25: suminf.    0.79016 (3) obj. -51.174 iterations 3
Cbc0038I Pass  26: suminf.    0.73169 (4) obj. -51.174 iterations 3
Cbc0038I Pass  27: suminf.    1.17424 (4) obj. -51.174 iterations 9
Cbc0038I Pass  28: suminf.    0.65206 (2) obj. -51.174 iterations 5
Cbc0038I Pass  29: suminf.    0.38880 (2) obj. -51.174 iterations 1
Cbc0038I Pass  30: suminf.    0.79704 (2) obj. -51.174 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.894 - took 0.02 seconds
Cbc0012I Integer solution of -48.894 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 28 columns, reduced to 27 rows 17 columns
Cbc0031I 10 added rows had average density of 22.2
Cbc0013I At root node, 10 cuts changed objective from -71.693057 to -60.858384 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 811 row cuts average 3.9 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 374 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48.89400000000001, took 2362 iterations and 14 nodes (0.22 seconds)
Cbc0032I Strong branching done 164 times (1449 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-23) rows, 46 (-17) columns and 369 (-280) elements
Clp1000I sum of infeasibilities 3.44793e-08 - average 8.20936e-10, 21 fixed columns
Coin0506I Presolve 22 (-20) rows, 25 (-21) columns and 89 (-280) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 1.7708133 - largest nonzero change 2.9074698e-05 ( 0.0021869008%) - largest zero change 1.9431887e-05
Clp0000I Optimal - objective value 56.615072
Clp0000I Optimal - objective value 56.615072
Coin0511I After Postsolve, objective 56.615072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.365281 - largest nonzero change 2.0008422e-05 ( 0.0018056464%) - largest zero change 1.8240846e-05
Clp0000I Optimal - objective value 87.396258
Clp0000I Optimal - objective value 87.396258
Clp0000I Optimal - objective value 87.396258
Coin0511I After Postsolve, objective 87.396258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.39625778 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 47 columns (47 integer (47 of which binary)) and 381 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.98023
Cbc0038I Pass   1: suminf.    0.73277 (8) obj. -34.9908 iterations 12
Cbc0038I Pass   2: suminf.    0.73277 (8) obj. -34.9908 iterations 6
Cbc0038I Solution found of -25.8731
Cbc0038I Rounding solution of -42.9372 is better than previous of -25.8731

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -42.9372 to -44.4244 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.5523
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.81830 (14) obj. -46.5523 iterations 3
Cbc0038I Pass   4: suminf.    1.81830 (14) obj. -46.5523 iterations 0
Cbc0038I Pass   5: suminf.    0.40570 (1) obj. -46.5523 iterations 19
Cbc0038I Pass   6: suminf.    0.40000 (1) obj. -46.8178 iterations 1
Cbc0038I Pass   7: suminf.    1.29875 (4) obj. -46.5523 iterations 6
Cbc0038I Pass   8: suminf.    0.84849 (3) obj. -46.5523 iterations 2
Cbc0038I Pass   9: suminf.    0.71003 (3) obj. -46.5523 iterations 3
Cbc0038I Pass  10: suminf.    0.83332 (3) obj. -46.5523 iterations 1
Cbc0038I Pass  11: suminf.    0.83332 (3) obj. -46.5523 iterations 0
Cbc0038I Pass  12: suminf.    0.71003 (3) obj. -46.5523 iterations 3
Cbc0038I Pass  13: suminf.    1.25770 (7) obj. -46.5523 iterations 11
Cbc0038I Pass  14: suminf.    1.09425 (5) obj. -46.5523 iterations 1
Cbc0038I Pass  15: suminf.    0.75522 (4) obj. -46.5523 iterations 10
Cbc0038I Pass  16: suminf.    0.65320 (4) obj. -46.5523 iterations 3
Cbc0038I Pass  17: suminf.    0.65320 (4) obj. -46.5523 iterations 2
Cbc0038I Pass  18: suminf.    0.85214 (3) obj. -46.5523 iterations 5
Cbc0038I Pass  19: suminf.    0.58334 (2) obj. -46.5523 iterations 1
Cbc0038I Pass  20: suminf.    0.79693 (3) obj. -46.5523 iterations 6
Cbc0038I Pass  21: suminf.    0.68846 (4) obj. -46.5523 iterations 7
Cbc0038I Pass  22: suminf.    0.68846 (4) obj. -46.5523 iterations 0
Cbc0038I Pass  23: suminf.    0.65320 (4) obj. -46.5523 iterations 6
Cbc0038I Pass  24: suminf.    0.65320 (4) obj. -46.5523 iterations 0
Cbc0038I Pass  25: suminf.    0.85214 (3) obj. -46.5523 iterations 5
Cbc0038I Pass  26: suminf.    0.58334 (2) obj. -46.5523 iterations 1
Cbc0038I Pass  27: suminf.    0.79693 (3) obj. -46.5523 iterations 6
Cbc0038I Pass  28: suminf.    1.35627 (9) obj. -46.5523 iterations 12
Cbc0038I Pass  29: suminf.    0.98872 (6) obj. -46.5523 iterations 3
Cbc0038I Pass  30: suminf.    0.65320 (4) obj. -46.5523 iterations 10
Cbc0038I Pass  31: suminf.    0.65320 (4) obj. -46.5523 iterations 0
Cbc0038I Pass  32: suminf.    0.85214 (3) obj. -46.5523 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -44.4244 to -44.894 (0.06 seconds)
Cbc0038I Round again with cutoff of -50.3824
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.06653 (15) obj. -50.3824 iterations 2
Cbc0038I Pass  33: suminf.    0.94622 (5) obj. -50.3824 iterations 14
Cbc0038I Pass  34: suminf.    0.91114 (5) obj. -50.3824 iterations 5
Cbc0038I Pass  35: suminf.    0.85252 (3) obj. -50.3824 iterations 2
Cbc0038I Pass  36: suminf.    0.97733 (3) obj. -50.3824 iterations 1
Cbc0038I Pass  37: suminf.    0.97733 (3) obj. -50.3824 iterations 0
Cbc0038I Pass  38: suminf.    0.85252 (3) obj. -50.3824 iterations 1
Cbc0038I Pass  39: suminf.    3.21633 (11) obj. -50.3824 iterations 16
Cbc0038I Pass  40: suminf.    2.65816 (10) obj. -50.3824 iterations 5
Cbc0038I Pass  41: suminf.    1.59513 (5) obj. -50.3824 iterations 10
Cbc0038I Pass  42: suminf.    0.85435 (4) obj. -50.3824 iterations 2
Cbc0038I Pass  43: suminf.    1.19756 (4) obj. -50.3824 iterations 2
Cbc0038I Pass  44: suminf.    1.14455 (5) obj. -50.3824 iterations 1
Cbc0038I Pass  45: suminf.    1.58728 (5) obj. -50.3824 iterations 1
Cbc0038I Pass  46: suminf.    1.56414 (6) obj. -50.3824 iterations 1
Cbc0038I Pass  47: suminf.    1.60464 (5) obj. -50.3824 iterations 3
Cbc0038I Pass  48: suminf.    1.66520 (6) obj. -50.3824 iterations 4
Cbc0038I Pass  49: suminf.    1.54694 (7) obj. -50.3824 iterations 2
Cbc0038I Pass  50: suminf.    1.12992 (5) obj. -50.3824 iterations 7
Cbc0038I Pass  51: suminf.    0.87571 (4) obj. -50.3824 iterations 2
Cbc0038I Pass  52: suminf.    1.55890 (6) obj. -50.3824 iterations 4
Cbc0038I Pass  53: suminf.    1.14455 (5) obj. -50.3824 iterations 1
Cbc0038I Pass  54: suminf.    1.58728 (5) obj. -50.3824 iterations 1
Cbc0038I Pass  55: suminf.    1.56414 (6) obj. -50.3824 iterations 1
Cbc0038I Pass  56: suminf.    1.60464 (5) obj. -50.3824 iterations 3
Cbc0038I Pass  57: suminf.    1.74639 (6) obj. -50.3824 iterations 9
Cbc0038I Pass  58: suminf.    1.27285 (5) obj. -50.3824 iterations 3
Cbc0038I Pass  59: suminf.    1.24352 (5) obj. -50.3824 iterations 4
Cbc0038I Pass  60: suminf.    0.70217 (4) obj. -50.3824 iterations 2
Cbc0038I Pass  61: suminf.    0.99688 (4) obj. -50.3824 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -44.894 to -47.6388 (0.07 seconds)
Cbc0038I Round again with cutoff of -54.9786
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.50280 (17) obj. -54.9786 iterations 2
Cbc0038I Pass  62: suminf.    1.36738 (6) obj. -54.9786 iterations 24
Cbc0038I Pass  63: suminf.    1.36738 (6) obj. -54.9786 iterations 0
Cbc0038I Pass  64: suminf.    1.70084 (6) obj. -54.9786 iterations 1
Cbc0038I Pass  65: suminf.    1.70084 (6) obj. -54.9786 iterations 0
Cbc0038I Pass  66: suminf.    1.36738 (6) obj. -54.9786 iterations 2
Cbc0038I Pass  67: suminf.    2.08966 (8) obj. -54.9786 iterations 3
Cbc0038I Pass  68: suminf.    2.06444 (7) obj. -54.9786 iterations 1
Cbc0038I Pass  69: suminf.    1.38023 (5) obj. -54.9786 iterations 5
Cbc0038I Pass  70: suminf.    1.36738 (6) obj. -54.9786 iterations 1
Cbc0038I Pass  71: suminf.    1.70084 (6) obj. -54.9786 iterations 1
Cbc0038I Pass  72: suminf.    1.70084 (6) obj. -54.9786 iterations 0
Cbc0038I Pass  73: suminf.    1.36738 (6) obj. -54.9786 iterations 2
Cbc0038I Pass  74: suminf.    1.69361 (5) obj. -54.9786 iterations 5
Cbc0038I Pass  75: suminf.    1.62168 (7) obj. -54.9786 iterations 4
Cbc0038I Pass  76: suminf.    1.82893 (7) obj. -54.9786 iterations 6
Cbc0038I Pass  77: suminf.    2.85769 (8) obj. -54.9786 iterations 9
Cbc0038I Pass  78: suminf.    1.95900 (7) obj. -54.9786 iterations 3
Cbc0038I Pass  79: suminf.    1.61180 (7) obj. -54.9786 iterations 2
Cbc0038I Pass  80: suminf.    1.06508 (7) obj. -54.9786 iterations 8
Cbc0038I Pass  81: suminf.    0.78621 (5) obj. -54.9786 iterations 3
Cbc0038I Pass  82: suminf.    0.92572 (5) obj. -54.9786 iterations 2
Cbc0038I Pass  83: suminf.    1.42617 (6) obj. -54.9786 iterations 3
Cbc0038I Pass  84: suminf.    1.19820 (6) obj. -54.9786 iterations 2
Cbc0038I Pass  85: suminf.    0.88540 (5) obj. -54.9786 iterations 2
Cbc0038I Pass  86: suminf.    1.43118 (8) obj. -54.9786 iterations 3
Cbc0038I Pass  87: suminf.    1.05633 (6) obj. -54.9786 iterations 2
Cbc0038I Pass  88: suminf.    1.94197 (8) obj. -54.9786 iterations 7
Cbc0038I Pass  89: suminf.    1.30997 (5) obj. -54.9786 iterations 7
Cbc0038I Pass  90: suminf.    1.11193 (4) obj. -54.9786 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -47.6388 - took 0.06 seconds
Cbc0012I Integer solution of -47.63876 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 41 rows 47 columns, reduced to 8 rows 10 columns
Cbc0031I 24 added rows had average density of 11.666667
Cbc0013I At root node, 24 cuts changed objective from -65.702872 to -56.188518 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1414 row cuts average 4.0 elements, 4 column cuts (4 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 508 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 125 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 121 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 195 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 270 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.788 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -47.63876 best solution, best possible -56.188518 (1.72 seconds)
Cbc0012I Integer solution of -48.57872 found by DiveCoefficient after 2034 iterations and 2 nodes (1.91 seconds)
Cbc0010I After 5 nodes, 6 on tree, -48.57872 best solution, best possible -56.188518 (2.59 seconds)
Cbc0010I After 15 nodes, 4 on tree, -48.57872 best solution, best possible -56.188518 (3.36 seconds)
Cbc0012I Integer solution of -48.894 found by DiveCoefficient after 3148 iterations and 18 nodes (3.53 seconds)
Cbc0001I Search completed - best objective -48.89400000000001, took 3282 iterations and 20 nodes (3.63 seconds)
Cbc0032I Strong branching done 344 times (2864 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 35 variables fixed on reduced cost
Total time (CPU seconds):       2.29   (Wallclock seconds):       3.63

