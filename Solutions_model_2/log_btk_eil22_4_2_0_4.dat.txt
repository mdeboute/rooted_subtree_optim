Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-22) rows, 16 (-8) columns and 76 (-53) elements
Clp1000I sum of infeasibilities 0.00154795 - average 6.19178e-05, 2 fixed columns
Coin0506I Presolve 22 (-3) rows, 14 (-2) columns and 66 (-10) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 83.955457
Clp0000I Optimal - objective value 83.955457
Coin0511I After Postsolve, objective 83.955457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.955457
Clp0000I Optimal - objective value 83.955457
Clp0000I Optimal - objective value 83.955457
Coin0511I After Postsolve, objective 83.955457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.95545699 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 25 rows, 16 columns (15 integer (15 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.735%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.28844
Cbc0038I Pass   1: suminf.    0.91279 (3) obj. -55.1453 iterations 8
Cbc0038I Solution found of -53
Cbc0038I Relaxing continuous gives -53
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 18 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -56.208
Cbc0038I Pass   2: suminf.    0.95239 (4) obj. -56.208 iterations 1
Cbc0038I Pass   3: suminf.    0.06844 (1) obj. -56.208 iterations 4
Cbc0038I Pass   4: suminf.    0.38911 (1) obj. -56.208 iterations 1
Cbc0038I Pass   5: suminf.    0.51275 (3) obj. -56.208 iterations 2
Cbc0038I Pass   6: suminf.    0.38911 (1) obj. -56.208 iterations 2
Cbc0038I Pass   7: suminf.    1.44208 (5) obj. -56.208 iterations 7
Cbc0038I Pass   8: suminf.    0.42979 (1) obj. -56.208 iterations 8
Cbc0038I Pass   9: suminf.    0.28000 (1) obj. -56.208 iterations 1
Cbc0038I Pass  10: suminf.    1.19505 (4) obj. -56.208 iterations 4
Cbc0038I Pass  11: suminf.    0.57964 (2) obj. -56.208 iterations 2
Cbc0038I Pass  12: suminf.    0.06844 (1) obj. -56.208 iterations 1
Cbc0038I Pass  13: suminf.    0.38911 (1) obj. -56.208 iterations 1
Cbc0038I Pass  14: suminf.    0.63185 (3) obj. -56.208 iterations 7
Cbc0038I Pass  15: suminf.    0.62882 (3) obj. -56.208 iterations 1
Cbc0038I Pass  16: suminf.    0.62882 (3) obj. -56.208 iterations 0
Cbc0038I Pass  17: suminf.    0.62882 (3) obj. -56.208 iterations 0
Cbc0038I Pass  18: suminf.    1.22807 (7) obj. -56.208 iterations 6
Cbc0038I Pass  19: suminf.    0.78242 (3) obj. -56.208 iterations 6
Cbc0038I Pass  20: suminf.    0.65398 (3) obj. -56.208 iterations 2
Cbc0038I Pass  21: suminf.    0.96888 (4) obj. -56.208 iterations 3
Cbc0038I Pass  22: suminf.    0.78242 (3) obj. -56.208 iterations 4
Cbc0038I Pass  23: suminf.    0.76157 (3) obj. -56.208 iterations 4
Cbc0038I Pass  24: suminf.    0.51958 (2) obj. -56.208 iterations 2
Cbc0038I Pass  25: suminf.    0.06844 (1) obj. -56.208 iterations 2
Cbc0038I Pass  26: suminf.    0.38911 (1) obj. -56.208 iterations 1
Cbc0038I Pass  27: suminf.    0.38911 (1) obj. -56.208 iterations 0
Cbc0038I Pass  28: suminf.    0.38911 (1) obj. -56.208 iterations 0
Cbc0038I Pass  29: suminf.    0.69195 (4) obj. -56.208 iterations 3
Cbc0038I Pass  30: suminf.    0.39746 (2) obj. -56.208 iterations 2
Cbc0038I Pass  31: suminf.    2.21238 (6) obj. -56.208 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53 - took 0.01 seconds
Cbc0012I Integer solution of -53 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 16 columns, reduced to 18 rows 11 columns
Cbc0031I 7 added rows had average density of 11.714286
Cbc0013I At root node, 7 cuts changed objective from -83.955457 to -64.568019 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 309 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 263 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -53, took 934 iterations and 6 nodes (0.08 seconds)
Cbc0032I Strong branching done 42 times (173 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 27 (-19) rows, 32 (-12) columns and 194 (-166) elements
Clp1000I sum of infeasibilities 7.4352e-09 - average 2.75378e-10, 21 fixed columns
Coin0506I Presolve 8 (-19) rows, 11 (-21) columns and 34 (-160) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 50.332143
Clp0000I Optimal - objective value 50.332143
Coin0511I After Postsolve, objective 50.332143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.3390927 - largest nonzero change 2.4269e-05 ( 0.001262127%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 115.17622
Clp0000I Optimal - objective value 115.17622
Clp0000I Optimal - objective value 115.17622
Coin0511I After Postsolve, objective 115.17622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.176225 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 34 columns (34 integer (34 of which binary)) and 205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.86409
Cbc0038I Pass   1: suminf.    1.27197 (4) obj. -47.253 iterations 8
Cbc0038I Pass   2: suminf.    1.27197 (4) obj. -47.253 iterations 0
Cbc0038I Solution found of -40.875
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 34 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -40.875 to -53 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.1439
Cbc0038I Pass   3: suminf.    1.95257 (9) obj. -56.1439 iterations 3
Cbc0038I Pass   4: suminf.    1.95257 (9) obj. -56.1439 iterations 0
Cbc0038I Pass   5: suminf.    0.98039 (3) obj. -56.1439 iterations 9
Cbc0038I Pass   6: suminf.    0.93661 (4) obj. -56.1439 iterations 1
Cbc0038I Pass   7: suminf.    1.25596 (3) obj. -56.1439 iterations 3
Cbc0038I Pass   8: suminf.    1.00318 (4) obj. -56.1439 iterations 4
Cbc0038I Pass   9: suminf.    1.17119 (5) obj. -56.1439 iterations 3
Cbc0038I Pass  10: suminf.    0.96007 (4) obj. -56.1439 iterations 3
Cbc0038I Pass  11: suminf.    0.81654 (3) obj. -56.1439 iterations 4
Cbc0038I Pass  12: suminf.    0.81654 (3) obj. -56.1439 iterations 1
Cbc0038I Pass  13: suminf.    0.94951 (3) obj. -56.1439 iterations 2
Cbc0038I Pass  14: suminf.    0.94951 (3) obj. -56.1439 iterations 1
Cbc0038I Pass  15: suminf.    0.91283 (4) obj. -56.1439 iterations 3
Cbc0038I Pass  16: suminf.    2.61317 (10) obj. -56.1439 iterations 6
Cbc0038I Pass  17: suminf.    2.17366 (6) obj. -56.1439 iterations 2
Cbc0038I Pass  18: suminf.    1.62746 (4) obj. -56.1439 iterations 4
Cbc0038I Pass  19: suminf.    1.43205 (4) obj. -56.1439 iterations 1
Cbc0038I Pass  20: suminf.    1.36852 (4) obj. -56.1439 iterations 2
Cbc0038I Pass  21: suminf.    1.95196 (10) obj. -56.1439 iterations 5
Cbc0038I Pass  22: suminf.    1.32937 (6) obj. -56.1439 iterations 2
Cbc0038I Pass  23: suminf.    0.92674 (3) obj. -56.6149 iterations 4
Cbc0038I Pass  24: suminf.    1.39002 (3) obj. -56.1439 iterations 6
Cbc0038I Pass  25: suminf.    1.02901 (3) obj. -56.1439 iterations 2
Cbc0038I Pass  26: suminf.    0.92900 (3) obj. -56.1439 iterations 2
Cbc0038I Pass  27: suminf.    1.24390 (5) obj. -56.1439 iterations 5
Cbc0038I Pass  28: suminf.    1.24390 (5) obj. -56.1439 iterations 0
Cbc0038I Pass  29: suminf.    0.92900 (3) obj. -56.1439 iterations 6
Cbc0038I Pass  30: suminf.    1.93479 (7) obj. -56.1439 iterations 6
Cbc0038I Pass  31: suminf.    1.76201 (7) obj. -56.1439 iterations 2
Cbc0038I Pass  32: suminf.    1.17674 (4) obj. -57.8649 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 34 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53 - took 0.01 seconds
Cbc0012I Integer solution of -53 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 29 rows 34 columns, reduced to 12 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 8.4
Cbc0013I At root node, 10 cuts changed objective from -83.315396 to -64.007688 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 2.4 elements, 15 column cuts (15 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 20 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -53, took 18 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-22) rows, 16 (-8) columns and 76 (-53) elements
Clp1000I sum of infeasibilities 0.00154795 - average 6.19178e-05, 2 fixed columns
Coin0506I Presolve 22 (-3) rows, 14 (-2) columns and 66 (-10) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 83.955457
Clp0000I Optimal - objective value 83.955457
Coin0511I After Postsolve, objective 83.955457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.955457
Clp0000I Optimal - objective value 83.955457
Clp0000I Optimal - objective value 83.955457
Coin0511I After Postsolve, objective 83.955457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.95545699 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 25 rows, 16 columns (15 integer (15 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.735%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.28844
Cbc0038I Pass   1: suminf.    0.91279 (3) obj. -55.1453 iterations 8
Cbc0038I Solution found of -53
Cbc0038I Relaxing continuous gives -53
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 18 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -56.208
Cbc0038I Pass   2: suminf.    0.95239 (4) obj. -56.208 iterations 1
Cbc0038I Pass   3: suminf.    0.06844 (1) obj. -56.208 iterations 4
Cbc0038I Pass   4: suminf.    0.38911 (1) obj. -56.208 iterations 1
Cbc0038I Pass   5: suminf.    0.51275 (3) obj. -56.208 iterations 2
Cbc0038I Pass   6: suminf.    0.38911 (1) obj. -56.208 iterations 2
Cbc0038I Pass   7: suminf.    1.44208 (5) obj. -56.208 iterations 7
Cbc0038I Pass   8: suminf.    0.42979 (1) obj. -56.208 iterations 8
Cbc0038I Pass   9: suminf.    0.28000 (1) obj. -56.208 iterations 1
Cbc0038I Pass  10: suminf.    1.19505 (4) obj. -56.208 iterations 4
Cbc0038I Pass  11: suminf.    0.57964 (2) obj. -56.208 iterations 2
Cbc0038I Pass  12: suminf.    0.06844 (1) obj. -56.208 iterations 1
Cbc0038I Pass  13: suminf.    0.38911 (1) obj. -56.208 iterations 1
Cbc0038I Pass  14: suminf.    0.63185 (3) obj. -56.208 iterations 7
Cbc0038I Pass  15: suminf.    0.62882 (3) obj. -56.208 iterations 1
Cbc0038I Pass  16: suminf.    0.62882 (3) obj. -56.208 iterations 0
Cbc0038I Pass  17: suminf.    0.62882 (3) obj. -56.208 iterations 0
Cbc0038I Pass  18: suminf.    1.22807 (7) obj. -56.208 iterations 6
Cbc0038I Pass  19: suminf.    0.78242 (3) obj. -56.208 iterations 6
Cbc0038I Pass  20: suminf.    0.65398 (3) obj. -56.208 iterations 2
Cbc0038I Pass  21: suminf.    0.96888 (4) obj. -56.208 iterations 3
Cbc0038I Pass  22: suminf.    0.78242 (3) obj. -56.208 iterations 4
Cbc0038I Pass  23: suminf.    0.76157 (3) obj. -56.208 iterations 4
Cbc0038I Pass  24: suminf.    0.51958 (2) obj. -56.208 iterations 2
Cbc0038I Pass  25: suminf.    0.06844 (1) obj. -56.208 iterations 2
Cbc0038I Pass  26: suminf.    0.38911 (1) obj. -56.208 iterations 1
Cbc0038I Pass  27: suminf.    0.38911 (1) obj. -56.208 iterations 0
Cbc0038I Pass  28: suminf.    0.38911 (1) obj. -56.208 iterations 0
Cbc0038I Pass  29: suminf.    0.69195 (4) obj. -56.208 iterations 3
Cbc0038I Pass  30: suminf.    0.39746 (2) obj. -56.208 iterations 2
Cbc0038I Pass  31: suminf.    2.21238 (6) obj. -56.208 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53 - took 0.01 seconds
Cbc0012I Integer solution of -53 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 16 columns, reduced to 18 rows 11 columns
Cbc0031I 7 added rows had average density of 11.714286
Cbc0013I At root node, 7 cuts changed objective from -83.955457 to -64.568019 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 309 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 263 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -53, took 934 iterations and 6 nodes (0.08 seconds)
Cbc0032I Strong branching done 42 times (173 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 27 (-20) rows, 32 (-13) columns and 194 (-167) elements
Clp1000I sum of infeasibilities 7.4352e-09 - average 2.75378e-10, 21 fixed columns
Coin0506I Presolve 8 (-19) rows, 11 (-21) columns and 34 (-160) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 50.332143
Clp0000I Optimal - objective value 50.332143
Coin0511I After Postsolve, objective 50.332143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.3390927 - largest nonzero change 2.4269e-05 ( 0.001262127%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 115.17622
Clp0000I Optimal - objective value 115.17622
Clp0000I Optimal - objective value 115.17622
Coin0511I After Postsolve, objective 115.17622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.176225 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 34 columns (34 integer (34 of which binary)) and 205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.86409
Cbc0038I Pass   1: suminf.    1.27197 (4) obj. -47.253 iterations 8
Cbc0038I Pass   2: suminf.    1.27197 (4) obj. -47.253 iterations 0
Cbc0038I Solution found of -40.875
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 34 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -40.875 to -53 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.1439
Cbc0038I Pass   3: suminf.    1.95257 (9) obj. -56.1439 iterations 3
Cbc0038I Pass   4: suminf.    1.95257 (9) obj. -56.1439 iterations 0
Cbc0038I Pass   5: suminf.    0.98039 (3) obj. -56.1439 iterations 9
Cbc0038I Pass   6: suminf.    0.93661 (4) obj. -56.1439 iterations 1
Cbc0038I Pass   7: suminf.    1.25596 (3) obj. -56.1439 iterations 3
Cbc0038I Pass   8: suminf.    1.00318 (4) obj. -56.1439 iterations 4
Cbc0038I Pass   9: suminf.    1.17119 (5) obj. -56.1439 iterations 3
Cbc0038I Pass  10: suminf.    0.96007 (4) obj. -56.1439 iterations 3
Cbc0038I Pass  11: suminf.    0.81654 (3) obj. -56.1439 iterations 4
Cbc0038I Pass  12: suminf.    0.81654 (3) obj. -56.1439 iterations 1
Cbc0038I Pass  13: suminf.    0.94951 (3) obj. -56.1439 iterations 2
Cbc0038I Pass  14: suminf.    0.94951 (3) obj. -56.1439 iterations 1
Cbc0038I Pass  15: suminf.    0.91283 (4) obj. -56.1439 iterations 3
Cbc0038I Pass  16: suminf.    2.61317 (10) obj. -56.1439 iterations 6
Cbc0038I Pass  17: suminf.    2.17366 (6) obj. -56.1439 iterations 2
Cbc0038I Pass  18: suminf.    1.62746 (4) obj. -56.1439 iterations 4
Cbc0038I Pass  19: suminf.    1.43205 (4) obj. -56.1439 iterations 1
Cbc0038I Pass  20: suminf.    1.36852 (4) obj. -56.1439 iterations 2
Cbc0038I Pass  21: suminf.    1.95196 (10) obj. -56.1439 iterations 5
Cbc0038I Pass  22: suminf.    1.32937 (6) obj. -56.1439 iterations 2
Cbc0038I Pass  23: suminf.    0.92674 (3) obj. -56.6149 iterations 4
Cbc0038I Pass  24: suminf.    1.39002 (3) obj. -56.1439 iterations 6
Cbc0038I Pass  25: suminf.    1.02901 (3) obj. -56.1439 iterations 2
Cbc0038I Pass  26: suminf.    0.92900 (3) obj. -56.1439 iterations 2
Cbc0038I Pass  27: suminf.    1.24390 (5) obj. -56.1439 iterations 5
Cbc0038I Pass  28: suminf.    1.24390 (5) obj. -56.1439 iterations 0
Cbc0038I Pass  29: suminf.    0.92900 (3) obj. -56.1439 iterations 6
Cbc0038I Pass  30: suminf.    1.93479 (7) obj. -56.1439 iterations 6
Cbc0038I Pass  31: suminf.    1.76201 (7) obj. -56.1439 iterations 2
Cbc0038I Pass  32: suminf.    1.17674 (4) obj. -57.8649 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 34 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -53 - took 0.01 seconds
Cbc0012I Integer solution of -53 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 34 columns, reduced to 12 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 8.4
Cbc0013I At root node, 10 cuts changed objective from -83.315396 to -64.007688 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 2.4 elements, 15 column cuts (15 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 20 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -53, took 18 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.06

