Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-18) rows, 28 (-5) columns and 142 (-41) elements
Clp1000I sum of infeasibilities 5.43323e-05 - average 1.15601e-06, 0 fixed columns
Coin0506I Presolve 47 (0) rows, 28 (0) columns and 142 (0) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Coin0511I After Postsolve, objective 51.419144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Coin0511I After Postsolve, objective 51.419144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.41914369 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.574%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.31158
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.5 iterations 16
Cbc0038I Solution found of -14.5
Cbc0038I Relaxing continuous gives -14.5
Cbc0038I Rounding solution of -22 is better than previous of -14.5

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -22 to -29 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.4315
Cbc0038I Pass   2: suminf.    0.80992 (3) obj. -31.4315 iterations 5
Cbc0038I Pass   3: suminf.    0.56210 (2) obj. -31.4315 iterations 1
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -35.1951 iterations 5
Cbc0038I Pass   5: suminf.    0.28105 (1) obj. -31.4315 iterations 1
Cbc0038I Pass   6: suminf.    0.82282 (5) obj. -31.4315 iterations 9
Cbc0038I Pass   7: suminf.    0.56843 (2) obj. -31.4315 iterations 4
Cbc0038I Pass   8: suminf.    0.56714 (2) obj. -31.4315 iterations 4
Cbc0038I Pass   9: suminf.    0.21068 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  10: suminf.    0.98072 (3) obj. -31.4315 iterations 3
Cbc0038I Pass  11: suminf.    0.91116 (3) obj. -31.4315 iterations 3
Cbc0038I Pass  12: suminf.    0.38791 (2) obj. -34.157 iterations 5
Cbc0038I Pass  13: suminf.    1.28771 (4) obj. -31.4315 iterations 7
Cbc0038I Pass  14: suminf.    0.48279 (2) obj. -31.4315 iterations 4
Cbc0038I Pass  15: suminf.    0.81765 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  16: suminf.    1.84117 (7) obj. -31.4315 iterations 11
Cbc0038I Pass  17: suminf.    1.38827 (5) obj. -31.4315 iterations 4
Cbc0038I Pass  18: suminf.    0.51508 (2) obj. -31.4315 iterations 5
Cbc0038I Pass  19: suminf.    0.45500 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  20: suminf.    0.86259 (5) obj. -31.4315 iterations 6
Cbc0038I Pass  21: suminf.    0.51875 (2) obj. -31.4315 iterations 6
Cbc0038I Pass  22: suminf.    0.09447 (1) obj. -31.4315 iterations 3
Cbc0038I Pass  23: suminf.    0.07778 (1) obj. -31.4315 iterations 2
Cbc0038I Pass  24: suminf.    0.93216 (4) obj. -31.4315 iterations 6
Cbc0038I Pass  25: suminf.    0.72381 (2) obj. -31.4315 iterations 6
Cbc0038I Pass  26: suminf.    0.07778 (1) obj. -31.4315 iterations 3
Cbc0038I Pass  27: suminf.    0.72381 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  28: suminf.    0.48001 (4) obj. -31.4315 iterations 6
Cbc0038I Pass  29: suminf.    0.31679 (2) obj. -31.4315 iterations 4
Cbc0038I Pass  30: suminf.    0.40650 (1) obj. -31.4315 iterations 2
Cbc0038I Pass  31: suminf.    0.28105 (1) obj. -31.4315 iterations 1
Cbc0038I Rounding solution of -30 is better than previous of -29

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -35.3583
Cbc0038I Pass  31: suminf.    1.07171 (3) obj. -35.3583 iterations 0
Cbc0038I Pass  32: suminf.    0.82388 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  33: suminf.    0.42082 (2) obj. -35.3583 iterations 5
Cbc0038I Pass  34: suminf.    0.41874 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  35: suminf.    0.86701 (3) obj. -35.3583 iterations 4
Cbc0038I Pass  36: suminf.    0.71456 (3) obj. -35.3583 iterations 3
Cbc0038I Pass  37: suminf.    1.32850 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  38: suminf.    0.27642 (1) obj. -35.3583 iterations 2
Cbc0038I Pass  39: suminf.    0.30472 (1) obj. -35.3583 iterations 1
Cbc0038I Pass  40: suminf.    0.95709 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  41: suminf.    0.68381 (2) obj. -35.3583 iterations 3
Cbc0038I Pass  42: suminf.    0.82137 (2) obj. -35.3583 iterations 2
Cbc0038I Pass  43: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  44: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  45: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  46: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  47: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  48: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  49: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  50: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  51: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  52: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  53: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  54: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  55: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  56: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  57: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  58: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  59: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  60: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30 - took 0.06 seconds
Cbc0012I Integer solution of -30 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 46 rows 28 columns, reduced to 31 rows 18 columns
Cbc0031I 11 added rows had average density of 20.272727
Cbc0013I At root node, 11 cuts changed objective from -51.065486 to -41.527252 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1330 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 677 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30, took 2433 iterations and 14 nodes (0.20 seconds)
Cbc0032I Strong branching done 128 times (1029 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-23) rows, 48 (-14) columns and 392 (-254) elements
Clp1000I sum of infeasibilities 1.874e-08 - average 4.68499e-10, 26 fixed columns
Coin0506I Presolve 15 (-25) rows, 22 (-26) columns and 68 (-324) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 1.4901432 - largest nonzero change 0 ( 0%) - largest zero change 2.9668381e-05
Clp0000I Optimal - objective value 22.741628
Clp0000I Optimal - objective value 22.741628
Coin0511I After Postsolve, objective 22.741628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1694912 - largest nonzero change 2.2130386e-05 ( 0.0018056464%) - largest zero change 2.97131e-05
Clp0000I Optimal - objective value 62.670723
Clp0000I Optimal - objective value 62.670723
Clp0000I Optimal - objective value 62.670723
Coin0511I After Postsolve, objective 62.670723, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.67072306 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 47 columns (47 integer (47 of which binary)) and 379 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.72791
Cbc0038I Pass   1: suminf.    0.56634 (8) obj. -37.847 iterations 17
Cbc0038I Solution found of -23
Cbc0038I Rounding solution of -23.5 is better than previous of -23

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 47 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -23.5 to -27 (0.01 seconds)
Cbc0038I Round again with cutoff of -29.8048
Cbc0038I Pass   2: suminf.    0.56634 (8) obj. -37.847 iterations 0
Cbc0038I Pass   3: suminf.    0.38751 (3) obj. -29.8048 iterations 12
Cbc0038I Pass   4: suminf.    0.49326 (2) obj. -36.709 iterations 3
Cbc0038I Pass   5: suminf.    0.22683 (1) obj. -29.8048 iterations 2
Cbc0038I Pass   6: suminf.    0.40650 (1) obj. -35.1951 iterations 1
Cbc0038I Pass   7: suminf.    0.70868 (3) obj. -32.764 iterations 8
Cbc0038I Pass   8: suminf.    0.47744 (3) obj. -29.8048 iterations 4
Cbc0038I Pass   9: suminf.    0.92475 (2) obj. -29.8048 iterations 2
Cbc0038I Pass  10: suminf.    0.45470 (2) obj. -29.8048 iterations 2
Cbc0038I Pass  11: suminf.    0.63245 (6) obj. -29.8048 iterations 17
Cbc0038I Pass  12: suminf.    0.48462 (4) obj. -29.8048 iterations 4
Cbc0038I Pass  13: suminf.    0.77289 (3) obj. -29.8048 iterations 6
Cbc0038I Pass  14: suminf.    0.61993 (3) obj. -29.8048 iterations 5
Cbc0038I Pass  15: suminf.    0.70400 (2) obj. -32.3925 iterations 4
Cbc0038I Pass  16: suminf.    0.42594 (3) obj. -29.8048 iterations 3
Cbc0038I Pass  17: suminf.    0.77325 (3) obj. -29.8048 iterations 3
Cbc0038I Pass  18: suminf.    0.69366 (4) obj. -29.8048 iterations 4
Cbc0038I Pass  19: suminf.    0.48246 (3) obj. -29.8048 iterations 1
Cbc0038I Pass  20: suminf.    0.77121 (3) obj. -29.8048 iterations 3
Cbc0038I Pass  21: suminf.    1.18567 (5) obj. -31.8899 iterations 15
Cbc0038I Pass  22: suminf.    0.43389 (2) obj. -29.8048 iterations 5
Cbc0038I Pass  23: suminf.    0.42915 (2) obj. -29.9469 iterations 1
Cbc0038I Pass  24: suminf.    0.42580 (2) obj. -29.8048 iterations 2
Cbc0038I Pass  25: suminf.    0.42580 (2) obj. -29.8048 iterations 0
Cbc0038I Pass  26: suminf.    0.56354 (2) obj. -29.8048 iterations 3
Cbc0038I Pass  27: suminf.    1.68960 (7) obj. -29.8048 iterations 17
Cbc0038I Pass  28: suminf.    1.22165 (6) obj. -29.8048 iterations 2
Cbc0038I Pass  29: suminf.    1.36864 (5) obj. -29.8048 iterations 9
Cbc0038I Pass  30: suminf.    1.36864 (5) obj. -29.8048 iterations 1
Cbc0038I Pass  31: suminf.    1.59722 (5) obj. -29.8048 iterations 8
Cbc0038I Rounding solution of -27.5 is better than previous of -27

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 47 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -34.4037
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.56634 (8) obj. -37.847 iterations 0
Cbc0038I Pass  32: suminf.    0.71398 (3) obj. -34.4037 iterations 12
Cbc0038I Pass  33: suminf.    0.49326 (2) obj. -36.709 iterations 3
Cbc0038I Pass  34: suminf.    0.38012 (1) obj. -34.4037 iterations 2
Cbc0038I Pass  35: suminf.    0.40650 (1) obj. -35.1951 iterations 1
Cbc0038I Pass  36: suminf.    1.95268 (8) obj. -34.4037 iterations 14
Cbc0038I Pass  37: suminf.    1.20080 (6) obj. -34.4037 iterations 5
Cbc0038I Pass  38: suminf.    0.58009 (5) obj. -34.4037 iterations 5
Cbc0038I Pass  39: suminf.    0.95433 (3) obj. -34.4037 iterations 7
Cbc0038I Pass  40: suminf.    0.92167 (3) obj. -34.4037 iterations 3
Cbc0038I Pass  41: suminf.    1.19240 (6) obj. -34.4037 iterations 7
Cbc0038I Pass  42: suminf.    1.03372 (5) obj. -34.4037 iterations 2
Cbc0038I Pass  43: suminf.    1.08291 (4) obj. -34.4037 iterations 6
Cbc0038I Pass  44: suminf.    0.99722 (5) obj. -34.4037 iterations 2
Cbc0038I Pass  45: suminf.    1.32811 (3) obj. -34.4037 iterations 5
Cbc0038I Pass  46: suminf.    0.92094 (4) obj. -34.4037 iterations 4
Cbc0038I Pass  47: suminf.    0.92094 (4) obj. -34.4037 iterations 1
Cbc0038I Pass  48: suminf.    1.00007 (4) obj. -34.4037 iterations 4
Cbc0038I Pass  49: suminf.    1.00007 (4) obj. -34.4037 iterations 0
Cbc0038I Pass  50: suminf.    1.26269 (3) obj. -34.4037 iterations 7
Cbc0038I Pass  51: suminf.    1.13184 (4) obj. -34.4037 iterations 2
Cbc0038I Pass  52: suminf.    1.25614 (4) obj. -34.4037 iterations 4
Cbc0038I Pass  53: suminf.    1.25614 (4) obj. -34.4037 iterations 0
Cbc0038I Pass  54: suminf.    1.51687 (4) obj. -34.4037 iterations 4
Cbc0038I Pass  55: suminf.    2.32481 (7) obj. -34.4037 iterations 9
Cbc0038I Pass  56: suminf.    2.32481 (7) obj. -34.4037 iterations 1
Cbc0038I Pass  57: suminf.    1.72430 (5) obj. -34.4037 iterations 9
Cbc0038I Pass  58: suminf.    1.68795 (5) obj. -34.4037 iterations 3
Cbc0038I Pass  59: suminf.    1.72430 (5) obj. -34.4037 iterations 5
Cbc0038I Pass  60: suminf.    1.77137 (7) obj. -34.4037 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 47 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -27.5 - took 0.02 seconds
Cbc0012I Integer solution of -27.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 38 rows 47 columns, reduced to 9 rows 9 columns
Cbc0031I 17 added rows had average density of 15
Cbc0013I At root node, 17 cuts changed objective from -52.799202 to -34.929276 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 938 row cuts average 3.3 elements, 6 column cuts (8 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 515 row cuts average 37.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.664 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27.5 best solution, best possible -34.929276 (1.37 seconds)
Cbc0012I Integer solution of -30 found by rounding after 1717 iterations and 6 nodes (1.63 seconds)
Cbc0001I Search completed - best objective -30, took 2042 iterations and 14 nodes (2.01 seconds)
Cbc0032I Strong branching done 212 times (1719 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 33 variables fixed on reduced cost
Total time (CPU seconds):       1.28   (Wallclock seconds):       2.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-18) rows, 28 (-5) columns and 142 (-41) elements
Clp1000I sum of infeasibilities 5.43323e-05 - average 1.15601e-06, 0 fixed columns
Coin0506I Presolve 47 (0) rows, 28 (0) columns and 142 (0) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Coin0511I After Postsolve, objective 51.419144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Coin0511I After Postsolve, objective 51.419144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.41914369 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.574%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.31158
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.5 iterations 16
Cbc0038I Solution found of -14.5
Cbc0038I Relaxing continuous gives -14.5
Cbc0038I Rounding solution of -22 is better than previous of -14.5

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -22 to -29 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.4315
Cbc0038I Pass   2: suminf.    0.80992 (3) obj. -31.4315 iterations 5
Cbc0038I Pass   3: suminf.    0.56210 (2) obj. -31.4315 iterations 1
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -35.1951 iterations 5
Cbc0038I Pass   5: suminf.    0.28105 (1) obj. -31.4315 iterations 1
Cbc0038I Pass   6: suminf.    0.82282 (5) obj. -31.4315 iterations 9
Cbc0038I Pass   7: suminf.    0.56843 (2) obj. -31.4315 iterations 4
Cbc0038I Pass   8: suminf.    0.56714 (2) obj. -31.4315 iterations 4
Cbc0038I Pass   9: suminf.    0.21068 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  10: suminf.    0.98072 (3) obj. -31.4315 iterations 3
Cbc0038I Pass  11: suminf.    0.91116 (3) obj. -31.4315 iterations 3
Cbc0038I Pass  12: suminf.    0.38791 (2) obj. -34.157 iterations 5
Cbc0038I Pass  13: suminf.    1.28771 (4) obj. -31.4315 iterations 7
Cbc0038I Pass  14: suminf.    0.48279 (2) obj. -31.4315 iterations 4
Cbc0038I Pass  15: suminf.    0.81765 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  16: suminf.    1.84117 (7) obj. -31.4315 iterations 11
Cbc0038I Pass  17: suminf.    1.38827 (5) obj. -31.4315 iterations 4
Cbc0038I Pass  18: suminf.    0.51508 (2) obj. -31.4315 iterations 5
Cbc0038I Pass  19: suminf.    0.45500 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  20: suminf.    0.86259 (5) obj. -31.4315 iterations 6
Cbc0038I Pass  21: suminf.    0.51875 (2) obj. -31.4315 iterations 6
Cbc0038I Pass  22: suminf.    0.09447 (1) obj. -31.4315 iterations 3
Cbc0038I Pass  23: suminf.    0.07778 (1) obj. -31.4315 iterations 2
Cbc0038I Pass  24: suminf.    0.93216 (4) obj. -31.4315 iterations 6
Cbc0038I Pass  25: suminf.    0.72381 (2) obj. -31.4315 iterations 6
Cbc0038I Pass  26: suminf.    0.07778 (1) obj. -31.4315 iterations 3
Cbc0038I Pass  27: suminf.    0.72381 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  28: suminf.    0.48001 (4) obj. -31.4315 iterations 6
Cbc0038I Pass  29: suminf.    0.31679 (2) obj. -31.4315 iterations 4
Cbc0038I Pass  30: suminf.    0.40650 (1) obj. -31.4315 iterations 2
Cbc0038I Pass  31: suminf.    0.28105 (1) obj. -31.4315 iterations 1
Cbc0038I Rounding solution of -30 is better than previous of -29

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -35.3583
Cbc0038I Pass  31: suminf.    1.07171 (3) obj. -35.3583 iterations 0
Cbc0038I Pass  32: suminf.    0.82388 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  33: suminf.    0.42082 (2) obj. -35.3583 iterations 5
Cbc0038I Pass  34: suminf.    0.41874 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  35: suminf.    0.86701 (3) obj. -35.3583 iterations 4
Cbc0038I Pass  36: suminf.    0.71456 (3) obj. -35.3583 iterations 3
Cbc0038I Pass  37: suminf.    1.32850 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  38: suminf.    0.27642 (1) obj. -35.3583 iterations 2
Cbc0038I Pass  39: suminf.    0.30472 (1) obj. -35.3583 iterations 1
Cbc0038I Pass  40: suminf.    0.95709 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  41: suminf.    0.68381 (2) obj. -35.3583 iterations 3
Cbc0038I Pass  42: suminf.    0.82137 (2) obj. -35.3583 iterations 2
Cbc0038I Pass  43: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  44: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  45: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  46: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  47: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  48: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  49: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  50: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  51: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  52: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  53: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  54: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  55: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  56: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  57: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  58: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  59: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  60: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30 - took 0.06 seconds
Cbc0012I Integer solution of -30 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 46 rows 28 columns, reduced to 31 rows 18 columns
Cbc0031I 11 added rows had average density of 20.272727
Cbc0013I At root node, 11 cuts changed objective from -51.065486 to -41.527252 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1330 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 677 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30, took 2433 iterations and 14 nodes (0.23 seconds)
Cbc0032I Strong branching done 128 times (1029 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 46 (-17) columns and 361 (-288) elements
Clp1000I sum of infeasibilities 3.05673e-08 - average 7.83776e-10, 4 fixed columns
Coin0506I Presolve 36 (-3) rows, 42 (-4) columns and 319 (-42) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.0931076 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 60.948538
Clp0000I Optimal - objective value 60.948538
Coin0511I After Postsolve, objective 60.948538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.948538
Clp0000I Optimal - objective value 60.948538
Clp0000I Optimal - objective value 60.948538
Coin0511I After Postsolve, objective 60.948538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.94853771 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 46 columns (46 integer (46 of which binary)) and 367 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.205%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.67013
Cbc0038I Pass   1: suminf.    0.58927 (8) obj. -37.8018 iterations 11
Cbc0038I Solution found of -23
Cbc0038I Rounding solution of -23.5 is better than previous of -23

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -23.5 to -27 (0.01 seconds)
Cbc0038I Round again with cutoff of -29.8154
Cbc0038I Pass   2: suminf.    0.58927 (8) obj. -37.8018 iterations 0
Cbc0038I Pass   3: suminf.    0.45436 (2) obj. -29.8154 iterations 12
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -35.1951 iterations 3
Cbc0038I Pass   5: suminf.    0.22718 (1) obj. -29.8154 iterations 1
Cbc0038I Pass   6: suminf.    0.47087 (4) obj. -31.0582 iterations 4
Cbc0038I Pass   7: suminf.    0.47087 (4) obj. -31.0582 iterations 0
Cbc0038I Pass   8: suminf.    0.24943 (3) obj. -29.8154 iterations 6
Cbc0038I Pass   9: suminf.    0.24943 (3) obj. -29.8154 iterations 0
Cbc0038I Pass  10: suminf.    0.45556 (1) obj. -31.7306 iterations 5
Cbc0038I Pass  11: suminf.    0.44495 (1) obj. -29.8154 iterations 2
Cbc0038I Pass  12: suminf.    1.82198 (7) obj. -29.8154 iterations 15
Cbc0038I Pass  13: suminf.    1.49911 (6) obj. -29.8154 iterations 2
Cbc0038I Pass  14: suminf.    1.24988 (4) obj. -29.8154 iterations 9
Cbc0038I Pass  15: suminf.    1.24988 (4) obj. -29.8154 iterations 1
Cbc0038I Pass  16: suminf.    0.48379 (2) obj. -30.6488 iterations 2
Cbc0038I Pass  17: suminf.    0.43593 (3) obj. -29.8154 iterations 2
Cbc0038I Pass  18: suminf.    0.48379 (2) obj. -30.6488 iterations 1
Cbc0038I Pass  19: suminf.    0.53148 (4) obj. -29.8154 iterations 4
Cbc0038I Pass  20: suminf.    0.43149 (3) obj. -30.7009 iterations 1
Cbc0038I Pass  21: suminf.    0.29744 (3) obj. -29.8154 iterations 3
Cbc0038I Pass  22: suminf.    0.27765 (2) obj. -29.8548 iterations 2
Cbc0038I Pass  23: suminf.    0.69939 (4) obj. -29.8154 iterations 8
Cbc0038I Pass  24: suminf.    0.69939 (4) obj. -29.8154 iterations 2
Cbc0038I Pass  25: suminf.    0.42977 (4) obj. -29.8154 iterations 2
Cbc0038I Pass  26: suminf.    0.42977 (4) obj. -29.8154 iterations 1
Cbc0038I Pass  27: suminf.    0.69939 (4) obj. -29.8154 iterations 3
Cbc0038I Pass  28: suminf.    2.70831 (11) obj. -34.5294 iterations 16
Cbc0038I Pass  29: suminf.    1.39301 (8) obj. -29.8154 iterations 10
Cbc0038I Pass  30: suminf.    0.90393 (6) obj. -29.8154 iterations 11
Cbc0038I Pass  31: suminf.    0.82816 (4) obj. -29.8154 iterations 3
Cbc0038I Rounding solution of -30 is better than previous of -27

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -34.7809
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.58927 (8) obj. -37.8018 iterations 0
Cbc0038I Pass  32: suminf.    0.78539 (2) obj. -34.7809 iterations 12
Cbc0038I Pass  33: suminf.    0.40650 (1) obj. -35.1951 iterations 3
Cbc0038I Pass  34: suminf.    0.39270 (1) obj. -34.7809 iterations 1
Cbc0038I Pass  35: suminf.    1.11039 (10) obj. -34.7809 iterations 16
Cbc0038I Pass  36: suminf.    0.69273 (7) obj. -34.7809 iterations 7
Cbc0038I Pass  37: suminf.    1.67340 (6) obj. -34.7809 iterations 11
Cbc0038I Pass  38: suminf.    1.31590 (4) obj. -34.7809 iterations 2
Cbc0038I Pass  39: suminf.    1.31590 (4) obj. -34.7809 iterations 0
Cbc0038I Pass  40: suminf.    1.21255 (4) obj. -34.7809 iterations 2
Cbc0038I Pass  41: suminf.    1.21255 (4) obj. -34.7809 iterations 0
Cbc0038I Pass  42: suminf.    1.79825 (4) obj. -34.7809 iterations 4
Cbc0038I Pass  43: suminf.    1.39135 (6) obj. -34.7809 iterations 4
Cbc0038I Pass  44: suminf.    1.31876 (5) obj. -34.7809 iterations 2
Cbc0038I Pass  45: suminf.    0.82381 (4) obj. -34.7809 iterations 5
Cbc0038I Pass  46: suminf.    0.82381 (4) obj. -34.7809 iterations 1
Cbc0038I Pass  47: suminf.    1.21255 (4) obj. -34.7809 iterations 4
Cbc0038I Pass  48: suminf.    1.21255 (4) obj. -34.7809 iterations 1
Cbc0038I Pass  49: suminf.    1.79825 (4) obj. -34.7809 iterations 4
Cbc0038I Pass  50: suminf.    1.31590 (4) obj. -34.7809 iterations 2
Cbc0038I Pass  51: suminf.    1.21255 (4) obj. -34.7809 iterations 2
Cbc0038I Pass  52: suminf.    1.44880 (8) obj. -34.7809 iterations 12
Cbc0038I Pass  53: suminf.    1.33694 (8) obj. -34.7809 iterations 6
Cbc0038I Pass  54: suminf.    1.74607 (5) obj. -34.7809 iterations 11
Cbc0038I Pass  55: suminf.    1.31590 (4) obj. -34.7809 iterations 3
Cbc0038I Pass  56: suminf.    1.31590 (4) obj. -34.7809 iterations 1
Cbc0038I Pass  57: suminf.    1.21255 (4) obj. -34.7809 iterations 3
Cbc0038I Pass  58: suminf.    1.21255 (4) obj. -34.7809 iterations 1
Cbc0038I Pass  59: suminf.    1.79825 (4) obj. -34.7809 iterations 5
Cbc0038I Pass  60: suminf.    1.33220 (9) obj. -34.7809 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30 - took 0.02 seconds
Cbc0012I Integer solution of -30 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 46 columns, reduced to 12 rows 14 columns
Cbc0031I 22 added rows had average density of 14.409091
Cbc0013I At root node, 22 cuts changed objective from -52.904687 to -35.128024 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 525 row cuts average 2.2 elements, 7 column cuts (7 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 290 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 91 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 202 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 92 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.717 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -30 best solution, best possible -35.128024 (1.43 seconds)
Cbc0001I Search completed - best objective -30, took 1575 iterations and 12 nodes (2.06 seconds)
Cbc0032I Strong branching done 184 times (1403 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 31 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       2.06

