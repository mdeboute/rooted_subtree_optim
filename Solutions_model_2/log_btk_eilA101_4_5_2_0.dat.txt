Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 99 (-4) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 1.18371e-05 - average 6.57617e-08, 13 fixed columns
Coin0506I Presolve 155 (-25) rows, 86 (-13) columns and 474 (-76) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.4349491 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 32.208136
Clp0000I Optimal - objective value 32.208136
Coin0511I After Postsolve, objective 32.208136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.208136
Clp0000I Optimal - objective value 32.208136
Clp0000I Optimal - objective value 32.208136
Coin0511I After Postsolve, objective 32.208136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.20813567 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 180 rows, 99 columns (98 integer (98 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.904%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 13.3873
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.9081 iterations 51
Cbc0038I Solution found of 10.9081
Cbc0038I Relaxing continuous gives 10.9081
Cbc0038I Rounding solution of -2.0627 is better than previous of 10.9081

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 99 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.0627 to -3.2383 (0.03 seconds)
Cbc0038I Round again with cutoff of -6.13537
Cbc0038I Pass   2: suminf.    2.33628 (8) obj. -6.13537 iterations 10
Cbc0038I Pass   3: suminf.    2.90637 (10) obj. -6.13537 iterations 14
Cbc0038I Pass   4: suminf.    2.87099 (10) obj. -6.13537 iterations 3
Cbc0038I Pass   5: suminf.    0.63895 (6) obj. -6.13537 iterations 10
Cbc0038I Pass   6: suminf.    0.63895 (6) obj. -6.13537 iterations 0
Cbc0038I Pass   7: suminf.    1.92369 (5) obj. -6.13537 iterations 7
Cbc0038I Pass   8: suminf.    1.73137 (5) obj. -6.13537 iterations 3
Cbc0038I Pass   9: suminf.    1.96014 (6) obj. -6.13537 iterations 5
Cbc0038I Pass  10: suminf.    1.94366 (6) obj. -6.13537 iterations 2
Cbc0038I Pass  11: suminf.    2.56701 (6) obj. -6.13537 iterations 3
Cbc0038I Pass  12: suminf.    1.98118 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  13: suminf.    1.98118 (7) obj. -6.13537 iterations 1
Cbc0038I Pass  14: suminf.    1.22055 (7) obj. -6.13537 iterations 8
Cbc0038I Pass  15: suminf.    1.22055 (7) obj. -6.13537 iterations 0
Cbc0038I Pass  16: suminf.    2.29843 (6) obj. -6.13537 iterations 9
Cbc0038I Pass  17: suminf.    2.29843 (6) obj. -6.13537 iterations 0
Cbc0038I Pass  18: suminf.    2.28318 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  19: suminf.    1.98118 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  20: suminf.    1.22055 (7) obj. -6.13537 iterations 8
Cbc0038I Pass  21: suminf.    1.22055 (7) obj. -6.13537 iterations 0
Cbc0038I Pass  22: suminf.    2.29843 (6) obj. -6.13537 iterations 9
Cbc0038I Pass  23: suminf.    2.29843 (6) obj. -6.13537 iterations 0
Cbc0038I Pass  24: suminf.    2.28318 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  25: suminf.    1.98118 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  26: suminf.    1.22055 (7) obj. -6.13537 iterations 8
Cbc0038I Pass  27: suminf.    1.22055 (7) obj. -6.13537 iterations 0
Cbc0038I Pass  28: suminf.    2.29843 (6) obj. -6.13537 iterations 9
Cbc0038I Pass  29: suminf.    2.29843 (6) obj. -6.13537 iterations 0
Cbc0038I Pass  30: suminf.    2.28318 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  31: suminf.    1.98118 (7) obj. -6.13537 iterations 6
Cbc0038I Rounding solution of -3.82407 is better than previous of -3.2383

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 99 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -11.3499
Cbc0038I Pass  31: suminf.    3.39782 (13) obj. -11.3499 iterations 2
Cbc0038I Pass  32: suminf.    1.74348 (7) obj. -11.3499 iterations 12
Cbc0038I Pass  33: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  34: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  35: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  36: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  37: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  38: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  39: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  40: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  41: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  42: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  43: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  44: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  45: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  46: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  47: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  48: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  49: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  50: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  51: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  52: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  53: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  54: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  55: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  56: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  57: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  58: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  59: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  60: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 99 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -3.82407 - took 0.06 seconds
Cbc0012I Integer solution of -3.824074 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 180 rows 99 columns, reduced to 76 rows 44 columns
Cbc0012I Integer solution of -4.869134 found by RINS after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 28 added rows had average density of 68.5
Cbc0013I At root node, 28 cuts changed objective from -32.208136 to -24.642327 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17780 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2863 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.869134 best solution, best possible -24.642327 (1.27 seconds)
Cbc0012I Integer solution of -4.992374 found by rounding after 10111 iterations and 9 nodes (1.36 seconds)
Cbc0038I Full problem 180 rows 99 columns, reduced to 6 rows 8 columns
Cbc0038I Full problem 180 rows 99 columns, reduced to 53 rows 35 columns
Cbc0001I Search completed - best objective -4.992374000000005, took 13662 iterations and 162 nodes (1.74 seconds)
Cbc0032I Strong branching done 1406 times (22986 iterations), fathomed 16 nodes and fixed 106 variables
Cbc0035I Maximum depth 23, 469 variables fixed on reduced cost
Total time (CPU seconds):       1.71   (Wallclock seconds):       1.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-81) rows, 139 (-63) columns and 2650 (-3003) elements
Clp1000I sum of infeasibilities 1.28724e-07 - average 1.04654e-09, 38 fixed columns
Coin0506I Presolve 90 (-33) rows, 101 (-38) columns and 1588 (-1062) elements
Clp0006I 0  Obj 35.093651 Dual inf 4.9630142 (100)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 2.4013195 - largest nonzero change 2.789457e-05 ( 0.0023983587%) - largest zero change 2.8992999e-05
Clp0000I Optimal - objective value 50.948531
Clp0000I Optimal - objective value 50.948531
Coin0511I After Postsolve, objective 50.948531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.948531
Clp0000I Optimal - objective value 50.948531
Clp0000I Optimal - objective value 50.948531
Clp0000I Optimal - objective value 50.948531
Coin0511I After Postsolve, objective 50.948531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.94853057 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 140 columns (140 integer (140 of which binary)) and 2655 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.296%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.96107
Cbc0038I Pass   1: suminf.    4.35189 (37) obj. -33.1471 iterations 21
Cbc0038I Pass   2: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass   3: suminf.    1.71952 (18) obj. -8.31547 iterations 19
Cbc0038I Solution found of 9.7782
Cbc0038I Rounding solution of 4.5495 is better than previous of 9.7782

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 4.5495 to 0.559944 (0.04 seconds)
Cbc0038I Round again with cutoff of -3.8303
Cbc0038I Pass   4: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass   5: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass   6: suminf.    2.16653 (22) obj. -11.8685 iterations 15
Cbc0038I Pass   7: suminf.    1.13991 (5) obj. -3.8303 iterations 31
Cbc0038I Pass   8: suminf.    1.13991 (5) obj. -3.8303 iterations 0
Cbc0038I Pass   9: suminf.    0.23742 (2) obj. -3.8303 iterations 7
Cbc0038I Pass  10: suminf.    0.17280 (2) obj. -3.8303 iterations 1
Cbc0038I Pass  11: suminf.    2.22837 (15) obj. -3.8303 iterations 38
Cbc0038I Pass  12: suminf.    2.03901 (15) obj. -3.8303 iterations 2
Cbc0038I Pass  13: suminf.    1.99848 (11) obj. -3.8303 iterations 15
Cbc0038I Pass  14: suminf.    1.99848 (11) obj. -3.8303 iterations 0
Cbc0038I Pass  15: suminf.    1.70260 (7) obj. -3.8303 iterations 16
Cbc0038I Pass  16: suminf.    1.70260 (7) obj. -3.8303 iterations 1
Cbc0038I Pass  17: suminf.    2.22602 (7) obj. -3.8303 iterations 10
Cbc0038I Pass  18: suminf.    1.24437 (6) obj. -3.8303 iterations 3
Cbc0038I Pass  19: suminf.    1.08683 (6) obj. -3.8303 iterations 4
Cbc0038I Pass  20: suminf.    1.35496 (8) obj. -3.8303 iterations 13
Cbc0038I Pass  21: suminf.    2.19626 (14) obj. -3.8303 iterations 24
Cbc0038I Pass  22: suminf.    1.31166 (10) obj. -3.8303 iterations 11
Cbc0038I Pass  23: suminf.    1.53803 (6) obj. -3.8303 iterations 15
Cbc0038I Pass  24: suminf.    0.98514 (6) obj. -3.8303 iterations 13
Cbc0038I Pass  25: suminf.    1.84785 (5) obj. -3.8303 iterations 10
Cbc0038I Pass  26: suminf.    1.76118 (6) obj. -3.8303 iterations 2
Cbc0038I Pass  27: suminf.    1.67999 (6) obj. -3.8303 iterations 5
Cbc0038I Pass  28: suminf.    0.90705 (4) obj. -3.92684 iterations 3
Cbc0038I Pass  29: suminf.    0.93923 (4) obj. -3.8303 iterations 2
Cbc0038I Pass  30: suminf.    2.66842 (15) obj. -3.8303 iterations 37
Cbc0038I Pass  31: suminf.    1.84000 (13) obj. -3.8303 iterations 12
Cbc0038I Pass  32: suminf.    1.29001 (5) obj. -3.8303 iterations 19
Cbc0038I Pass  33: suminf.    1.07632 (7) obj. -3.8303 iterations 11
Cbc0038I Rounding solution of -0.609386 is better than previous of 0.559944

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 27 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -0.609386 to -0.8614 (0.08 seconds)
Cbc0038I Round again with cutoff of -11.7326
Cbc0038I Pass  33: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass  34: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass  35: suminf.    1.84032 (18) obj. -11.7326 iterations 23
Cbc0038I Pass  36: suminf.    1.73678 (18) obj. -11.7326 iterations 2
Cbc0038I Pass  37: suminf.    2.08965 (11) obj. -11.7326 iterations 29
Cbc0038I Pass  38: suminf.    2.08965 (11) obj. -11.7326 iterations 1
Cbc0038I Pass  39: suminf.    1.90738 (9) obj. -11.7326 iterations 9
Cbc0038I Pass  40: suminf.    1.90724 (9) obj. -11.7326 iterations 4
Cbc0038I Pass  41: suminf.    1.90738 (9) obj. -11.7326 iterations 3
Cbc0038I Pass  42: suminf.    1.91403 (11) obj. -11.7326 iterations 33
Cbc0038I Pass  43: suminf.    1.48238 (9) obj. -12.9787 iterations 11
Cbc0038I Pass  44: suminf.    1.96570 (8) obj. -11.7326 iterations 12
Cbc0038I Pass  45: suminf.    1.87245 (8) obj. -11.7326 iterations 6
Cbc0038I Pass  46: suminf.    1.84279 (8) obj. -11.7326 iterations 16
Cbc0038I Pass  47: suminf.    1.68153 (7) obj. -11.7326 iterations 13
Cbc0038I Pass  48: suminf.    1.84279 (8) obj. -11.7326 iterations 13
Cbc0038I Pass  49: suminf.    1.35069 (7) obj. -11.7326 iterations 9
Cbc0038I Pass  50: suminf.    1.84279 (8) obj. -11.7326 iterations 13
Cbc0038I Pass  51: suminf.    2.33849 (13) obj. -11.7326 iterations 33
Cbc0038I Pass  52: suminf.    2.14168 (12) obj. -11.7326 iterations 12
Cbc0038I Pass  53: suminf.    2.74526 (9) obj. -11.7326 iterations 19
Cbc0038I Pass  54: suminf.    2.30618 (8) obj. -11.7326 iterations 12
Cbc0038I Pass  55: suminf.    2.29672 (9) obj. -11.7326 iterations 24
Cbc0038I Pass  56: suminf.    2.05595 (11) obj. -11.7326 iterations 2
Cbc0038I Pass  57: suminf.    1.91461 (10) obj. -11.7326 iterations 6
Cbc0038I Pass  58: suminf.    3.47805 (10) obj. -11.7326 iterations 12
Cbc0038I Pass  59: suminf.    2.24393 (9) obj. -11.7326 iterations 13
Cbc0038I Pass  60: suminf.    2.34952 (9) obj. -11.7326 iterations 11
Cbc0038I Pass  61: suminf.    2.19925 (9) obj. -11.7326 iterations 7
Cbc0038I Pass  62: suminf.    2.34952 (9) obj. -11.7326 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 31 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -0.8614 - took 0.07 seconds
Cbc0012I Integer solution of -0.8614 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 2 rows 4 columns
Cbc0031I 67 added rows had average density of 48.567164
Cbc0013I At root node, 67 cuts changed objective from -43.341572 to -9.7575781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16638 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1592 row cuts average 135.1 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 848 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1401 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 388 row cuts average 82.5 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.504 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.8614 best solution, best possible -9.7575781 (2.73 seconds)
Cbc0012I Integer solution of -2.160294 found by DiveCoefficient after 6562 iterations and 3 nodes (2.92 seconds)
Cbc0012I Integer solution of -2.616756 found by rounding after 6728 iterations and 7 nodes (3.03 seconds)
Cbc0016I Integer solution of -3.824074 found by strong branching after 6817 iterations and 9 nodes (3.05 seconds)
Cbc0016I Integer solution of -4.040054 found by strong branching after 6822 iterations and 9 nodes (3.05 seconds)
Cbc0012I Integer solution of -4.809444 found by rounding after 6914 iterations and 14 nodes (3.06 seconds)
Cbc0004I Integer solution of -4.942034 found after 6950 iterations and 18 nodes (3.07 seconds)
Cbc0016I Integer solution of -4.992374 found by strong branching after 7101 iterations and 37 nodes (3.09 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 3 rows 9 columns
Cbc0010I After 74 nodes, 1 on tree, -4.992374 best solution, best possible -9.2106984 (3.48 seconds)
Cbc0001I Search completed - best objective -4.992374000000005, took 9270 iterations and 92 nodes (3.89 seconds)
Cbc0032I Strong branching done 972 times (17558 iterations), fathomed 14 nodes and fixed 9 variables
Cbc0035I Maximum depth 16, 173 variables fixed on reduced cost
Total time (CPU seconds):       3.23   (Wallclock seconds):       3.91

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 99 (-4) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 1.18371e-05 - average 6.57617e-08, 13 fixed columns
Coin0506I Presolve 155 (-25) rows, 86 (-13) columns and 474 (-76) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.4349491 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 32.208136
Clp0000I Optimal - objective value 32.208136
Coin0511I After Postsolve, objective 32.208136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.208136
Clp0000I Optimal - objective value 32.208136
Clp0000I Optimal - objective value 32.208136
Coin0511I After Postsolve, objective 32.208136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.20813567 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 180 rows, 99 columns (98 integer (98 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.904%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 13.3873
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.9081 iterations 51
Cbc0038I Solution found of 10.9081
Cbc0038I Relaxing continuous gives 10.9081
Cbc0038I Rounding solution of -2.0627 is better than previous of 10.9081

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 99 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.0627 to -3.2383 (0.03 seconds)
Cbc0038I Round again with cutoff of -6.13537
Cbc0038I Pass   2: suminf.    2.33628 (8) obj. -6.13537 iterations 10
Cbc0038I Pass   3: suminf.    2.90637 (10) obj. -6.13537 iterations 14
Cbc0038I Pass   4: suminf.    2.87099 (10) obj. -6.13537 iterations 3
Cbc0038I Pass   5: suminf.    0.63895 (6) obj. -6.13537 iterations 10
Cbc0038I Pass   6: suminf.    0.63895 (6) obj. -6.13537 iterations 0
Cbc0038I Pass   7: suminf.    1.92369 (5) obj. -6.13537 iterations 7
Cbc0038I Pass   8: suminf.    1.73137 (5) obj. -6.13537 iterations 3
Cbc0038I Pass   9: suminf.    1.96014 (6) obj. -6.13537 iterations 5
Cbc0038I Pass  10: suminf.    1.94366 (6) obj. -6.13537 iterations 2
Cbc0038I Pass  11: suminf.    2.56701 (6) obj. -6.13537 iterations 3
Cbc0038I Pass  12: suminf.    1.98118 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  13: suminf.    1.98118 (7) obj. -6.13537 iterations 1
Cbc0038I Pass  14: suminf.    1.22055 (7) obj. -6.13537 iterations 8
Cbc0038I Pass  15: suminf.    1.22055 (7) obj. -6.13537 iterations 0
Cbc0038I Pass  16: suminf.    2.29843 (6) obj. -6.13537 iterations 9
Cbc0038I Pass  17: suminf.    2.29843 (6) obj. -6.13537 iterations 0
Cbc0038I Pass  18: suminf.    2.28318 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  19: suminf.    1.98118 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  20: suminf.    1.22055 (7) obj. -6.13537 iterations 8
Cbc0038I Pass  21: suminf.    1.22055 (7) obj. -6.13537 iterations 0
Cbc0038I Pass  22: suminf.    2.29843 (6) obj. -6.13537 iterations 9
Cbc0038I Pass  23: suminf.    2.29843 (6) obj. -6.13537 iterations 0
Cbc0038I Pass  24: suminf.    2.28318 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  25: suminf.    1.98118 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  26: suminf.    1.22055 (7) obj. -6.13537 iterations 8
Cbc0038I Pass  27: suminf.    1.22055 (7) obj. -6.13537 iterations 0
Cbc0038I Pass  28: suminf.    2.29843 (6) obj. -6.13537 iterations 9
Cbc0038I Pass  29: suminf.    2.29843 (6) obj. -6.13537 iterations 0
Cbc0038I Pass  30: suminf.    2.28318 (7) obj. -6.13537 iterations 6
Cbc0038I Pass  31: suminf.    1.98118 (7) obj. -6.13537 iterations 6
Cbc0038I Rounding solution of -3.82407 is better than previous of -3.2383

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 99 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -11.3499
Cbc0038I Pass  31: suminf.    3.39782 (13) obj. -11.3499 iterations 2
Cbc0038I Pass  32: suminf.    1.74348 (7) obj. -11.3499 iterations 12
Cbc0038I Pass  33: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  34: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  35: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  36: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  37: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  38: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  39: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  40: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  41: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  42: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  43: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  44: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  45: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  46: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  47: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  48: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  49: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  50: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  51: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  52: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  53: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  54: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  55: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I Pass  56: suminf.    2.16803 (9) obj. -11.3499 iterations 5
Cbc0038I Pass  57: suminf.    1.74348 (7) obj. -11.3499 iterations 2
Cbc0038I Pass  58: suminf.    1.74348 (7) obj. -11.3499 iterations 0
Cbc0038I Pass  59: suminf.    2.72365 (9) obj. -11.3499 iterations 7
Cbc0038I Pass  60: suminf.    2.72365 (9) obj. -11.3499 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 99 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -3.82407 - took 0.07 seconds
Cbc0012I Integer solution of -3.824074 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 180 rows 99 columns, reduced to 76 rows 44 columns
Cbc0012I Integer solution of -4.869134 found by RINS after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 28 added rows had average density of 68.5
Cbc0013I At root node, 28 cuts changed objective from -32.208136 to -24.642327 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17780 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2863 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.869134 best solution, best possible -24.642327 (1.41 seconds)
Cbc0012I Integer solution of -4.992374 found by rounding after 10111 iterations and 9 nodes (1.51 seconds)
Cbc0038I Full problem 180 rows 99 columns, reduced to 6 rows 8 columns
Cbc0038I Full problem 180 rows 99 columns, reduced to 53 rows 35 columns
Cbc0001I Search completed - best objective -4.992374000000005, took 13662 iterations and 162 nodes (1.94 seconds)
Cbc0032I Strong branching done 1406 times (22986 iterations), fathomed 16 nodes and fixed 106 variables
Cbc0035I Maximum depth 23, 469 variables fixed on reduced cost
Total time (CPU seconds):       1.87   (Wallclock seconds):       1.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-82) rows, 139 (-64) columns and 2650 (-3004) elements
Clp1000I sum of infeasibilities 1.28724e-07 - average 1.04654e-09, 38 fixed columns
Coin0506I Presolve 90 (-33) rows, 101 (-38) columns and 1588 (-1062) elements
Clp0006I 0  Obj 35.093651 Dual inf 4.9630142 (100)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 2.4013195 - largest nonzero change 2.789457e-05 ( 0.0023983587%) - largest zero change 2.8992999e-05
Clp0000I Optimal - objective value 50.948531
Clp0000I Optimal - objective value 50.948531
Coin0511I After Postsolve, objective 50.948531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.948531
Clp0000I Optimal - objective value 50.948531
Clp0000I Optimal - objective value 50.948531
Clp0000I Optimal - objective value 50.948531
Coin0511I After Postsolve, objective 50.948531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.94853057 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 140 columns (140 integer (140 of which binary)) and 2655 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.296%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.96107
Cbc0038I Pass   1: suminf.    4.35189 (37) obj. -33.1471 iterations 21
Cbc0038I Pass   2: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass   3: suminf.    1.71952 (18) obj. -8.31547 iterations 19
Cbc0038I Solution found of 9.7782
Cbc0038I Rounding solution of 4.5495 is better than previous of 9.7782

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 4.5495 to 0.559944 (0.04 seconds)
Cbc0038I Round again with cutoff of -3.8303
Cbc0038I Pass   4: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass   5: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass   6: suminf.    2.16653 (22) obj. -11.8685 iterations 15
Cbc0038I Pass   7: suminf.    1.13991 (5) obj. -3.8303 iterations 31
Cbc0038I Pass   8: suminf.    1.13991 (5) obj. -3.8303 iterations 0
Cbc0038I Pass   9: suminf.    0.23742 (2) obj. -3.8303 iterations 7
Cbc0038I Pass  10: suminf.    0.17280 (2) obj. -3.8303 iterations 1
Cbc0038I Pass  11: suminf.    2.22837 (15) obj. -3.8303 iterations 38
Cbc0038I Pass  12: suminf.    2.03901 (15) obj. -3.8303 iterations 2
Cbc0038I Pass  13: suminf.    1.99848 (11) obj. -3.8303 iterations 15
Cbc0038I Pass  14: suminf.    1.99848 (11) obj. -3.8303 iterations 0
Cbc0038I Pass  15: suminf.    1.70260 (7) obj. -3.8303 iterations 16
Cbc0038I Pass  16: suminf.    1.70260 (7) obj. -3.8303 iterations 1
Cbc0038I Pass  17: suminf.    2.22602 (7) obj. -3.8303 iterations 10
Cbc0038I Pass  18: suminf.    1.24437 (6) obj. -3.8303 iterations 3
Cbc0038I Pass  19: suminf.    1.08683 (6) obj. -3.8303 iterations 4
Cbc0038I Pass  20: suminf.    1.35496 (8) obj. -3.8303 iterations 13
Cbc0038I Pass  21: suminf.    2.19626 (14) obj. -3.8303 iterations 24
Cbc0038I Pass  22: suminf.    1.31166 (10) obj. -3.8303 iterations 11
Cbc0038I Pass  23: suminf.    1.53803 (6) obj. -3.8303 iterations 15
Cbc0038I Pass  24: suminf.    0.98514 (6) obj. -3.8303 iterations 13
Cbc0038I Pass  25: suminf.    1.84785 (5) obj. -3.8303 iterations 10
Cbc0038I Pass  26: suminf.    1.76118 (6) obj. -3.8303 iterations 2
Cbc0038I Pass  27: suminf.    1.67999 (6) obj. -3.8303 iterations 5
Cbc0038I Pass  28: suminf.    0.90705 (4) obj. -3.92684 iterations 3
Cbc0038I Pass  29: suminf.    0.93923 (4) obj. -3.8303 iterations 2
Cbc0038I Pass  30: suminf.    2.66842 (15) obj. -3.8303 iterations 37
Cbc0038I Pass  31: suminf.    1.84000 (13) obj. -3.8303 iterations 12
Cbc0038I Pass  32: suminf.    1.29001 (5) obj. -3.8303 iterations 19
Cbc0038I Pass  33: suminf.    1.07632 (7) obj. -3.8303 iterations 11
Cbc0038I Rounding solution of -0.609386 is better than previous of 0.559944

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 27 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -0.609386 to -0.8614 (0.08 seconds)
Cbc0038I Round again with cutoff of -11.7326
Cbc0038I Pass  33: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass  34: suminf.    4.35189 (37) obj. -33.1471 iterations 0
Cbc0038I Pass  35: suminf.    1.84032 (18) obj. -11.7326 iterations 23
Cbc0038I Pass  36: suminf.    1.73678 (18) obj. -11.7326 iterations 2
Cbc0038I Pass  37: suminf.    2.08965 (11) obj. -11.7326 iterations 29
Cbc0038I Pass  38: suminf.    2.08965 (11) obj. -11.7326 iterations 1
Cbc0038I Pass  39: suminf.    1.90738 (9) obj. -11.7326 iterations 9
Cbc0038I Pass  40: suminf.    1.90724 (9) obj. -11.7326 iterations 4
Cbc0038I Pass  41: suminf.    1.90738 (9) obj. -11.7326 iterations 3
Cbc0038I Pass  42: suminf.    1.91403 (11) obj. -11.7326 iterations 33
Cbc0038I Pass  43: suminf.    1.48238 (9) obj. -12.9787 iterations 11
Cbc0038I Pass  44: suminf.    1.96570 (8) obj. -11.7326 iterations 12
Cbc0038I Pass  45: suminf.    1.87245 (8) obj. -11.7326 iterations 6
Cbc0038I Pass  46: suminf.    1.84279 (8) obj. -11.7326 iterations 16
Cbc0038I Pass  47: suminf.    1.68153 (7) obj. -11.7326 iterations 13
Cbc0038I Pass  48: suminf.    1.84279 (8) obj. -11.7326 iterations 13
Cbc0038I Pass  49: suminf.    1.35069 (7) obj. -11.7326 iterations 9
Cbc0038I Pass  50: suminf.    1.84279 (8) obj. -11.7326 iterations 13
Cbc0038I Pass  51: suminf.    2.33849 (13) obj. -11.7326 iterations 33
Cbc0038I Pass  52: suminf.    2.14168 (12) obj. -11.7326 iterations 12
Cbc0038I Pass  53: suminf.    2.74526 (9) obj. -11.7326 iterations 19
Cbc0038I Pass  54: suminf.    2.30618 (8) obj. -11.7326 iterations 12
Cbc0038I Pass  55: suminf.    2.29672 (9) obj. -11.7326 iterations 24
Cbc0038I Pass  56: suminf.    2.05595 (11) obj. -11.7326 iterations 2
Cbc0038I Pass  57: suminf.    1.91461 (10) obj. -11.7326 iterations 6
Cbc0038I Pass  58: suminf.    3.47805 (10) obj. -11.7326 iterations 12
Cbc0038I Pass  59: suminf.    2.24393 (9) obj. -11.7326 iterations 13
Cbc0038I Pass  60: suminf.    2.34952 (9) obj. -11.7326 iterations 11
Cbc0038I Pass  61: suminf.    2.19925 (9) obj. -11.7326 iterations 7
Cbc0038I Pass  62: suminf.    2.34952 (9) obj. -11.7326 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 31 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -0.8614 - took 0.08 seconds
Cbc0012I Integer solution of -0.8614 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 2 rows 4 columns
Cbc0031I 67 added rows had average density of 48.567164
Cbc0013I At root node, 67 cuts changed objective from -43.341572 to -9.7575781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16638 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1592 row cuts average 135.1 elements, 0 column cuts (0 active)  in 0.245 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 848 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1401 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 388 row cuts average 82.5 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.550 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.8614 best solution, best possible -9.7575781 (3.01 seconds)
Cbc0012I Integer solution of -2.160294 found by DiveCoefficient after 6562 iterations and 3 nodes (3.19 seconds)
Cbc0012I Integer solution of -2.616756 found by rounding after 6728 iterations and 7 nodes (3.30 seconds)
Cbc0016I Integer solution of -3.824074 found by strong branching after 6817 iterations and 9 nodes (3.31 seconds)
Cbc0016I Integer solution of -4.040054 found by strong branching after 6822 iterations and 9 nodes (3.31 seconds)
Cbc0012I Integer solution of -4.809444 found by rounding after 6914 iterations and 14 nodes (3.33 seconds)
Cbc0004I Integer solution of -4.942034 found after 6950 iterations and 18 nodes (3.34 seconds)
Cbc0016I Integer solution of -4.992374 found by strong branching after 7101 iterations and 37 nodes (3.36 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 3 rows 9 columns
Cbc0010I After 74 nodes, 1 on tree, -4.992374 best solution, best possible -9.2106984 (3.73 seconds)
Cbc0001I Search completed - best objective -4.992374000000005, took 9270 iterations and 92 nodes (4.19 seconds)
Cbc0032I Strong branching done 972 times (17558 iterations), fathomed 14 nodes and fixed 9 variables
Cbc0035I Maximum depth 16, 173 variables fixed on reduced cost
Total time (CPU seconds):       3.42   (Wallclock seconds):       4.22

