Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 76 (-2) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 8.53006e-05 - average 6.31856e-07, 13 fixed columns
Coin0506I Presolve 112 (-23) rows, 63 (-13) columns and 342 (-72) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.4397831 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Coin0511I After Postsolve, objective 54.663083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Coin0511I After Postsolve, objective 54.663083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.66308255 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.144%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.55195
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.6204 iterations 56
Cbc0038I Solution found of -10.6204
Cbc0038I Relaxing continuous gives -10.6204
Cbc0038I Rounding solution of -10.638 is better than previous of -10.6204

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -10.638 to -19.446 (0.04 seconds)
Cbc0038I Round again with cutoff of -22.9678
Cbc0038I Pass   2: suminf.    1.10404 (5) obj. -22.9678 iterations 5
Cbc0038I Pass   3: suminf.    0.76057 (2) obj. -22.9678 iterations 5
Cbc0038I Pass   4: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass   5: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass   6: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass   7: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass   8: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass   9: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  10: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  11: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  12: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  13: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  14: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  15: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  16: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  17: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  18: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  19: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  20: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  21: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  22: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  23: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  24: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  25: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  26: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  27: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  28: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  29: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  30: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  31: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -19.446 - took 0.07 seconds
Cbc0012I Integer solution of -19.44603 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0031I 25 added rows had average density of 49.88
Cbc0013I At root node, 25 cuts changed objective from -54.663083 to -45.650174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10503 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1239 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.44603 best solution, best possible -45.650174 (0.87 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 19 rows 16 columns
Cbc0038I Full problem 135 rows 76 columns, reduced to 5 rows 9 columns
Cbc0001I Search completed - best objective -19.44603000000001, took 9914 iterations and 124 nodes (1.22 seconds)
Cbc0032I Strong branching done 1080 times (15479 iterations), fathomed 16 nodes and fixed 51 variables
Cbc0035I Maximum depth 21, 436 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 118 (-34) columns and 2007 (-1296) elements
Clp1000I sum of infeasibilities 5.02544e-07 - average 4.87907e-09, 18 fixed columns
Coin0506I Presolve 88 (-15) rows, 100 (-18) columns and 1474 (-533) elements
Clp0006I 0  Obj 58.925568 Dual inf 6.9854172 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 1.7750708 - largest nonzero change 1.7717722e-05 ( 0.0012247315%) - largest zero change 2.996344e-05
Clp0000I Optimal - objective value 74.062192
Clp0000I Optimal - objective value 74.062192
Coin0511I After Postsolve, objective 74.062192, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 74.062192
Clp0000I Optimal - objective value 74.062192
Clp0000I Optimal - objective value 74.062192
Clp0000I Optimal - objective value 74.062192
Coin0511I After Postsolve, objective 74.062192, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.06219249 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 118 columns (118 integer (118 of which binary)) and 2017 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.708%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.78736
Cbc0038I Pass   1: suminf.    1.85362 (27) obj. -40.6407 iterations 11
Cbc0038I Pass   2: suminf.    1.85362 (27) obj. -40.6407 iterations 1
Cbc0038I Pass   3: suminf.    0.91569 (17) obj. -17.9913 iterations 10
Cbc0038I Solution found of 3.74084
Cbc0038I Rounding solution of -1.18406 is better than previous of 3.74084

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1.18406 to -6.03973 (0.04 seconds)
Cbc0038I Round again with cutoff of -11.2863
Cbc0038I Pass   4: suminf.    1.85362 (27) obj. -40.6407 iterations 0
Cbc0038I Pass   5: suminf.    1.85362 (27) obj. -40.6407 iterations 1
Cbc0038I Pass   6: suminf.    0.57789 (2) obj. -11.2863 iterations 28
Cbc0038I Pass   7: suminf.    0.57789 (2) obj. -11.2863 iterations 0
Cbc0038I Pass   8: suminf.    0.48380 (1) obj. -11.2863 iterations 3
Cbc0038I Pass   9: suminf.    0.10667 (1) obj. -15.8118 iterations 1
Cbc0038I Pass  10: suminf.    1.29701 (11) obj. -19.9822 iterations 20
Cbc0038I Pass  11: suminf.    1.29701 (11) obj. -19.9822 iterations 3
Cbc0038I Pass  12: suminf.    0.83901 (14) obj. -11.2863 iterations 13
Cbc0038I Pass  13: suminf.    0.83901 (14) obj. -11.2863 iterations 0
Cbc0038I Pass  14: suminf.    1.12853 (4) obj. -11.2863 iterations 16
Cbc0038I Pass  15: suminf.    1.12853 (4) obj. -11.2863 iterations 0
Cbc0038I Pass  16: suminf.    1.17137 (4) obj. -11.2863 iterations 2
Cbc0038I Pass  17: suminf.    0.60512 (5) obj. -11.2863 iterations 3
Cbc0038I Pass  18: suminf.    0.94484 (3) obj. -11.2863 iterations 7
Cbc0038I Pass  19: suminf.    0.59203 (5) obj. -11.2863 iterations 3
Cbc0038I Pass  20: suminf.    1.29903 (6) obj. -11.2863 iterations 6
Cbc0038I Pass  21: suminf.    0.82211 (4) obj. -11.2863 iterations 3
Cbc0038I Pass  22: suminf.    0.64454 (3) obj. -11.2863 iterations 5
Cbc0038I Pass  23: suminf.    0.96470 (3) obj. -11.2863 iterations 4
Cbc0038I Pass  24: suminf.    0.29333 (2) obj. -11.5076 iterations 2
Cbc0038I Pass  25: suminf.    0.64454 (3) obj. -11.2863 iterations 2
Cbc0038I Pass  26: suminf.    2.10307 (11) obj. -11.2863 iterations 23
Cbc0038I Pass  27: suminf.    1.40236 (9) obj. -11.2863 iterations 12
Cbc0038I Pass  28: suminf.    1.08554 (9) obj. -13.4328 iterations 2
Cbc0038I Pass  29: suminf.    0.92876 (6) obj. -11.2863 iterations 17
Cbc0038I Pass  30: suminf.    0.86831 (5) obj. -11.2863 iterations 2
Cbc0038I Pass  31: suminf.    0.92416 (5) obj. -11.2863 iterations 11
Cbc0038I Pass  32: suminf.    0.91038 (4) obj. -11.2863 iterations 1
Cbc0038I Pass  33: suminf.    0.80788 (3) obj. -11.2863 iterations 7
Cbc0038I Rounding solution of -8.85133 is better than previous of -6.03973

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 21 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -8.85133 to -11.8896 (0.07 seconds)
Cbc0038I Round again with cutoff of -21.2126
Cbc0038I Pass  33: suminf.    1.85362 (27) obj. -40.6407 iterations 0
Cbc0038I Pass  34: suminf.    1.85362 (27) obj. -40.6407 iterations 1
Cbc0038I Pass  35: suminf.    1.66954 (14) obj. -21.2126 iterations 34
Cbc0038I Pass  36: suminf.    1.66954 (14) obj. -21.2126 iterations 2
Cbc0038I Pass  37: suminf.    1.56715 (7) obj. -21.2126 iterations 24
Cbc0038I Pass  38: suminf.    1.05971 (7) obj. -21.2126 iterations 5
Cbc0038I Pass  39: suminf.    1.54143 (7) obj. -21.2126 iterations 9
Cbc0038I Pass  40: suminf.    1.38021 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  41: suminf.    1.02246 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  42: suminf.    1.44011 (6) obj. -21.2126 iterations 6
Cbc0038I Pass  43: suminf.    1.05626 (7) obj. -21.2126 iterations 1
Cbc0038I Pass  44: suminf.    1.56715 (7) obj. -21.2126 iterations 7
Cbc0038I Pass  45: suminf.    1.05971 (7) obj. -21.2126 iterations 5
Cbc0038I Pass  46: suminf.    1.54143 (7) obj. -21.2126 iterations 9
Cbc0038I Pass  47: suminf.    1.38021 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  48: suminf.    1.02246 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  49: suminf.    1.44011 (6) obj. -21.2126 iterations 6
Cbc0038I Pass  50: suminf.    1.05626 (7) obj. -21.2126 iterations 1
Cbc0038I Pass  51: suminf.    1.56715 (7) obj. -21.2126 iterations 7
Cbc0038I Pass  52: suminf.    1.05971 (7) obj. -21.2126 iterations 5
Cbc0038I Pass  53: suminf.    1.54143 (7) obj. -21.2126 iterations 9
Cbc0038I Pass  54: suminf.    1.38021 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  55: suminf.    1.02246 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  56: suminf.    1.44011 (6) obj. -21.2126 iterations 6
Cbc0038I Pass  57: suminf.    1.05626 (7) obj. -21.2126 iterations 1
Cbc0038I Pass  58: suminf.    1.56715 (7) obj. -21.2126 iterations 7
Cbc0038I Pass  59: suminf.    1.05971 (7) obj. -21.2126 iterations 5
Cbc0038I Pass  60: suminf.    1.54143 (7) obj. -21.2126 iterations 9
Cbc0038I Pass  61: suminf.    1.38021 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  62: suminf.    1.02246 (6) obj. -21.2126 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.8896 - took 0.06 seconds
Cbc0012I Integer solution of -11.88964 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 9 rows 10 columns
Cbc0031I 51 added rows had average density of 35.666667
Cbc0013I At root node, 51 cuts changed objective from -58.504275 to -28.884542 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7210 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1433 row cuts average 111.6 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 578 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 656 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 329 row cuts average 69.2 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 113 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.682 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.88964 best solution, best possible -28.884542 (2.26 seconds)
Cbc0012I Integer solution of -18.172443 found by rounding after 3760 iterations and 4 nodes (2.64 seconds)
Cbc0012I Integer solution of -19.251973 found by DiveCoefficient after 3760 iterations and 4 nodes (2.64 seconds)
Cbc0010I After 17 nodes, 1 on tree, -19.251973 best solution, best possible -28.884542 (2.97 seconds)
Cbc0010I After 28 nodes, 7 on tree, -19.251973 best solution, best possible -28.352881 (3.67 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 21 rows 27 columns
Cbc0012I Integer solution of -19.36801 found by RINS after 5237 iterations and 41 nodes (4.08 seconds)
Cbc0010I After 54 nodes, 11 on tree, -19.36801 best solution, best possible -28.352881 (4.37 seconds)
Cbc0012I Integer solution of -19.44603 found by rounding after 5528 iterations and 66 nodes (4.64 seconds)
Cbc0010I After 87 nodes, 2 on tree, -19.44603 best solution, best possible -27.854518 (5.15 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 56 rows 64 columns
Cbc0010I After 109 nodes, 2 on tree, -19.44603 best solution, best possible -27.854518 (5.91 seconds)
Cbc0001I Search completed - best objective -19.44603000000001, took 7003 iterations and 112 nodes (6.00 seconds)
Cbc0032I Strong branching done 1204 times (17238 iterations), fathomed 12 nodes and fixed 19 variables
Cbc0035I Maximum depth 17, 287 variables fixed on reduced cost
Total time (CPU seconds):       3.98   (Wallclock seconds):       6.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 76 (-2) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 8.53006e-05 - average 6.31856e-07, 13 fixed columns
Coin0506I Presolve 112 (-23) rows, 63 (-13) columns and 342 (-72) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.4397831 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Coin0511I After Postsolve, objective 54.663083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Coin0511I After Postsolve, objective 54.663083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.66308255 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.144%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.55195
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.6204 iterations 56
Cbc0038I Solution found of -10.6204
Cbc0038I Relaxing continuous gives -10.6204
Cbc0038I Rounding solution of -10.638 is better than previous of -10.6204

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -10.638 to -19.446 (0.07 seconds)
Cbc0038I Round again with cutoff of -22.9678
Cbc0038I Pass   2: suminf.    1.10404 (5) obj. -22.9678 iterations 5
Cbc0038I Pass   3: suminf.    0.76057 (2) obj. -22.9678 iterations 5
Cbc0038I Pass   4: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass   5: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass   6: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass   7: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass   8: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass   9: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  10: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  11: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  12: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  13: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  14: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  15: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  16: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  17: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  18: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  19: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  20: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  21: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  22: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  23: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  24: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  25: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  26: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  27: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  28: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  29: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  30: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  31: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -19.446 - took 0.10 seconds
Cbc0012I Integer solution of -19.44603 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0031I 25 added rows had average density of 49.88
Cbc0013I At root node, 25 cuts changed objective from -54.663083 to -45.650174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10503 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1239 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.44603 best solution, best possible -45.650174 (0.97 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 19 rows 16 columns
Cbc0038I Full problem 135 rows 76 columns, reduced to 5 rows 9 columns
Cbc0001I Search completed - best objective -19.44603000000001, took 9914 iterations and 124 nodes (1.41 seconds)
Cbc0032I Strong branching done 1080 times (15479 iterations), fathomed 16 nodes and fixed 51 variables
Cbc0035I Maximum depth 21, 436 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 118 (-35) columns and 2007 (-1297) elements
Clp1000I sum of infeasibilities 5.02544e-07 - average 4.87907e-09, 18 fixed columns
Coin0506I Presolve 88 (-15) rows, 100 (-18) columns and 1474 (-533) elements
Clp0006I 0  Obj 58.925568 Dual inf 6.9854172 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 1.7750708 - largest nonzero change 1.7717722e-05 ( 0.0012247315%) - largest zero change 2.996344e-05
Clp0000I Optimal - objective value 74.062192
Clp0000I Optimal - objective value 74.062192
Coin0511I After Postsolve, objective 74.062192, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 74.062192
Clp0000I Optimal - objective value 74.062192
Clp0000I Optimal - objective value 74.062192
Clp0000I Optimal - objective value 74.062192
Coin0511I After Postsolve, objective 74.062192, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.06219249 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 118 columns (118 integer (118 of which binary)) and 2017 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.708%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.78736
Cbc0038I Pass   1: suminf.    1.85362 (27) obj. -40.6407 iterations 11
Cbc0038I Pass   2: suminf.    1.85362 (27) obj. -40.6407 iterations 1
Cbc0038I Pass   3: suminf.    0.91569 (17) obj. -17.9913 iterations 10
Cbc0038I Solution found of 3.74084
Cbc0038I Rounding solution of -1.18406 is better than previous of 3.74084

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1.18406 to -6.03973 (0.04 seconds)
Cbc0038I Round again with cutoff of -11.2863
Cbc0038I Pass   4: suminf.    1.85362 (27) obj. -40.6407 iterations 0
Cbc0038I Pass   5: suminf.    1.85362 (27) obj. -40.6407 iterations 1
Cbc0038I Pass   6: suminf.    0.57789 (2) obj. -11.2863 iterations 28
Cbc0038I Pass   7: suminf.    0.57789 (2) obj. -11.2863 iterations 0
Cbc0038I Pass   8: suminf.    0.48380 (1) obj. -11.2863 iterations 3
Cbc0038I Pass   9: suminf.    0.10667 (1) obj. -15.8118 iterations 1
Cbc0038I Pass  10: suminf.    1.29701 (11) obj. -19.9822 iterations 20
Cbc0038I Pass  11: suminf.    1.29701 (11) obj. -19.9822 iterations 3
Cbc0038I Pass  12: suminf.    0.83901 (14) obj. -11.2863 iterations 13
Cbc0038I Pass  13: suminf.    0.83901 (14) obj. -11.2863 iterations 0
Cbc0038I Pass  14: suminf.    1.12853 (4) obj. -11.2863 iterations 16
Cbc0038I Pass  15: suminf.    1.12853 (4) obj. -11.2863 iterations 0
Cbc0038I Pass  16: suminf.    1.17137 (4) obj. -11.2863 iterations 2
Cbc0038I Pass  17: suminf.    0.60512 (5) obj. -11.2863 iterations 3
Cbc0038I Pass  18: suminf.    0.94484 (3) obj. -11.2863 iterations 7
Cbc0038I Pass  19: suminf.    0.59203 (5) obj. -11.2863 iterations 3
Cbc0038I Pass  20: suminf.    1.29903 (6) obj. -11.2863 iterations 6
Cbc0038I Pass  21: suminf.    0.82211 (4) obj. -11.2863 iterations 3
Cbc0038I Pass  22: suminf.    0.64454 (3) obj. -11.2863 iterations 5
Cbc0038I Pass  23: suminf.    0.96470 (3) obj. -11.2863 iterations 4
Cbc0038I Pass  24: suminf.    0.29333 (2) obj. -11.5076 iterations 2
Cbc0038I Pass  25: suminf.    0.64454 (3) obj. -11.2863 iterations 2
Cbc0038I Pass  26: suminf.    2.10307 (11) obj. -11.2863 iterations 23
Cbc0038I Pass  27: suminf.    1.40236 (9) obj. -11.2863 iterations 12
Cbc0038I Pass  28: suminf.    1.08554 (9) obj. -13.4328 iterations 2
Cbc0038I Pass  29: suminf.    0.92876 (6) obj. -11.2863 iterations 17
Cbc0038I Pass  30: suminf.    0.86831 (5) obj. -11.2863 iterations 2
Cbc0038I Pass  31: suminf.    0.92416 (5) obj. -11.2863 iterations 11
Cbc0038I Pass  32: suminf.    0.91038 (4) obj. -11.2863 iterations 1
Cbc0038I Pass  33: suminf.    0.80788 (3) obj. -11.2863 iterations 7
Cbc0038I Rounding solution of -8.85133 is better than previous of -6.03973

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 21 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -8.85133 to -11.8896 (0.08 seconds)
Cbc0038I Round again with cutoff of -21.2126
Cbc0038I Pass  33: suminf.    1.85362 (27) obj. -40.6407 iterations 0
Cbc0038I Pass  34: suminf.    1.85362 (27) obj. -40.6407 iterations 1
Cbc0038I Pass  35: suminf.    1.66954 (14) obj. -21.2126 iterations 34
Cbc0038I Pass  36: suminf.    1.66954 (14) obj. -21.2126 iterations 2
Cbc0038I Pass  37: suminf.    1.56715 (7) obj. -21.2126 iterations 24
Cbc0038I Pass  38: suminf.    1.05971 (7) obj. -21.2126 iterations 5
Cbc0038I Pass  39: suminf.    1.54143 (7) obj. -21.2126 iterations 9
Cbc0038I Pass  40: suminf.    1.38021 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  41: suminf.    1.02246 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  42: suminf.    1.44011 (6) obj. -21.2126 iterations 6
Cbc0038I Pass  43: suminf.    1.05626 (7) obj. -21.2126 iterations 1
Cbc0038I Pass  44: suminf.    1.56715 (7) obj. -21.2126 iterations 7
Cbc0038I Pass  45: suminf.    1.05971 (7) obj. -21.2126 iterations 5
Cbc0038I Pass  46: suminf.    1.54143 (7) obj. -21.2126 iterations 9
Cbc0038I Pass  47: suminf.    1.38021 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  48: suminf.    1.02246 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  49: suminf.    1.44011 (6) obj. -21.2126 iterations 6
Cbc0038I Pass  50: suminf.    1.05626 (7) obj. -21.2126 iterations 1
Cbc0038I Pass  51: suminf.    1.56715 (7) obj. -21.2126 iterations 7
Cbc0038I Pass  52: suminf.    1.05971 (7) obj. -21.2126 iterations 5
Cbc0038I Pass  53: suminf.    1.54143 (7) obj. -21.2126 iterations 9
Cbc0038I Pass  54: suminf.    1.38021 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  55: suminf.    1.02246 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  56: suminf.    1.44011 (6) obj. -21.2126 iterations 6
Cbc0038I Pass  57: suminf.    1.05626 (7) obj. -21.2126 iterations 1
Cbc0038I Pass  58: suminf.    1.56715 (7) obj. -21.2126 iterations 7
Cbc0038I Pass  59: suminf.    1.05971 (7) obj. -21.2126 iterations 5
Cbc0038I Pass  60: suminf.    1.54143 (7) obj. -21.2126 iterations 9
Cbc0038I Pass  61: suminf.    1.38021 (6) obj. -21.2126 iterations 1
Cbc0038I Pass  62: suminf.    1.02246 (6) obj. -21.2126 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -11.8896 - took 0.07 seconds
Cbc0012I Integer solution of -11.88964 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 9 rows 10 columns
Cbc0031I 51 added rows had average density of 35.666667
Cbc0013I At root node, 51 cuts changed objective from -58.504275 to -28.884542 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7210 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1433 row cuts average 111.6 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 578 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 656 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 329 row cuts average 69.2 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 113 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.774 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.88964 best solution, best possible -28.884542 (2.65 seconds)
Cbc0012I Integer solution of -18.172443 found by rounding after 3760 iterations and 4 nodes (3.10 seconds)
Cbc0012I Integer solution of -19.251973 found by DiveCoefficient after 3760 iterations and 4 nodes (3.10 seconds)
Cbc0010I After 8 nodes, 9 on tree, -19.251973 best solution, best possible -28.884542 (3.38 seconds)
Cbc0010I After 24 nodes, 7 on tree, -19.251973 best solution, best possible -28.352881 (4.09 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 21 rows 27 columns
Cbc0012I Integer solution of -19.36801 found by RINS after 5237 iterations and 41 nodes (4.78 seconds)
Cbc0010I After 44 nodes, 7 on tree, -19.36801 best solution, best possible -28.352881 (4.83 seconds)
Cbc0012I Integer solution of -19.44603 found by rounding after 5528 iterations and 66 nodes (5.41 seconds)
Cbc0010I After 78 nodes, 2 on tree, -19.44603 best solution, best possible -28.352881 (5.58 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 56 rows 64 columns
Cbc0010I After 96 nodes, 7 on tree, -19.44603 best solution, best possible -27.854518 (6.29 seconds)
Cbc0001I Search completed - best objective -19.44603000000001, took 7003 iterations and 112 nodes (6.73 seconds)
Cbc0032I Strong branching done 1204 times (17238 iterations), fathomed 12 nodes and fixed 19 variables
Cbc0035I Maximum depth 17, 287 variables fixed on reduced cost
Total time (CPU seconds):       4.40   (Wallclock seconds):       6.76

