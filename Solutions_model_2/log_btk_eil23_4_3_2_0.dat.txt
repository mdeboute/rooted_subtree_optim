Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 20 (-5) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 6.23487e-07 - average 1.78139e-08, 4 fixed columns
Coin0506I Presolve 23 (-12) rows, 16 (-4) columns and 70 (-32) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.3662388 - largest nonzero change 0 ( 0%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Coin0511I After Postsolve, objective 86.244406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Coin0511I After Postsolve, objective 86.244406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.24440621 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.024%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.51994
Cbc0038I Pass   1: suminf.    0.62006 (2) obj. -25.7753 iterations 16
Cbc0038I Solution found of -1.75769
Cbc0038I Relaxing continuous gives -1.75769
Cbc0038I Rounding solution of -12.9336 is better than previous of -1.75769

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20.1644
Cbc0038I Pass   2: suminf.    0.62006 (2) obj. -25.7753 iterations 0
Cbc0038I Pass   3: suminf.    0.30621 (4) obj. -20.1644 iterations 6
Cbc0038I Pass   4: suminf.    0.36893 (2) obj. -20.1644 iterations 5
Cbc0038I Pass   5: suminf.    0.23988 (2) obj. -20.1644 iterations 1
Cbc0038I Pass   6: suminf.    0.35772 (3) obj. -20.1644 iterations 6
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -20.1958 iterations 3
Cbc0038I Solution found of -20.1958
Cbc0038I Relaxing continuous gives -20.1958
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.2048
Cbc0038I Pass   8: suminf.    0.64884 (4) obj. -33.2048 iterations 2
Cbc0038I Pass   9: suminf.    0.73714 (6) obj. -33.2048 iterations 7
Cbc0038I Pass  10: suminf.    0.51606 (8) obj. -33.2048 iterations 3
Cbc0038I Pass  11: suminf.    1.24002 (3) obj. -33.2048 iterations 9
Cbc0038I Pass  12: suminf.    0.84375 (4) obj. -33.2048 iterations 3
Cbc0038I Pass  13: suminf.    1.31608 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  14: suminf.    0.95507 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  15: suminf.    1.60907 (5) obj. -33.2048 iterations 4
Cbc0038I Pass  16: suminf.    1.27319 (4) obj. -33.2048 iterations 2
Cbc0038I Pass  17: suminf.    1.41766 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  18: suminf.    1.10983 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  19: suminf.    2.35790 (7) obj. -33.2048 iterations 6
Cbc0038I Pass  20: suminf.    2.31348 (6) obj. -33.2048 iterations 1
Cbc0038I Pass  21: suminf.    1.39007 (6) obj. -33.2048 iterations 3
Cbc0038I Pass  22: suminf.    0.79220 (5) obj. -33.2048 iterations 1
Cbc0038I Pass  23: suminf.    0.41294 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  24: suminf.    1.67318 (5) obj. -33.2048 iterations 6
Cbc0038I Pass  25: suminf.    1.41766 (3) obj. -33.2048 iterations 4
Cbc0038I Pass  26: suminf.    1.10983 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  27: suminf.    1.10983 (3) obj. -33.2048 iterations 0
Cbc0038I Pass  28: suminf.    0.99851 (4) obj. -33.2048 iterations 1
Cbc0038I Pass  29: suminf.    0.99851 (4) obj. -33.2048 iterations 0
Cbc0038I Pass  30: suminf.    0.60474 (5) obj. -33.2048 iterations 12
Cbc0038I Pass  31: suminf.    0.24990 (4) obj. -33.2048 iterations 1
Cbc0038I Pass  32: suminf.    1.04262 (5) obj. -33.2048 iterations 8
Cbc0038I Pass  33: suminf.    0.59382 (4) obj. -33.2048 iterations 3
Cbc0038I Pass  34: suminf.    0.85977 (3) obj. -33.2048 iterations 4
Cbc0038I Pass  35: suminf.    0.29706 (2) obj. -33.2048 iterations 1
Cbc0038I Pass  36: suminf.    1.00332 (5) obj. -33.2048 iterations 5
Cbc0038I Pass  37: suminf.    1.24002 (3) obj. -33.2048 iterations 4
Cbc0038I Rounding solution of -22.9204 is better than previous of -20.1958

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -48.8155
Cbc0038I Pass  37: suminf.    0.92422 (7) obj. -48.8155 iterations 4
Cbc0038I Pass  38: suminf.    1.49706 (6) obj. -48.8155 iterations 11
Cbc0038I Pass  39: suminf.    1.29821 (6) obj. -48.8155 iterations 1
Cbc0038I Pass  40: suminf.    0.82664 (6) obj. -48.8155 iterations 3
Cbc0038I Pass  41: suminf.    1.99108 (8) obj. -48.8155 iterations 10
Cbc0038I Pass  42: suminf.    1.80275 (6) obj. -48.8155 iterations 2
Cbc0038I Pass  43: suminf.    1.02090 (5) obj. -48.8155 iterations 3
Cbc0038I Pass  44: suminf.    0.98050 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  45: suminf.    1.69391 (6) obj. -48.8155 iterations 5
Cbc0038I Pass  46: suminf.    1.62323 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  47: suminf.    1.45642 (5) obj. -48.8155 iterations 4
Cbc0038I Pass  48: suminf.    1.45642 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  49: suminf.    1.56474 (5) obj. -48.8155 iterations 4
Cbc0038I Pass  50: suminf.    1.53632 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  51: suminf.    1.73575 (4) obj. -48.8155 iterations 2
Cbc0038I Pass  52: suminf.    1.73575 (4) obj. -48.8155 iterations 0
Cbc0038I Pass  53: suminf.    1.76050 (5) obj. -48.8155 iterations 2
Cbc0038I Pass  54: suminf.    1.73575 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  55: suminf.    1.73575 (4) obj. -48.8155 iterations 0
Cbc0038I Pass  56: suminf.    1.56474 (5) obj. -48.8155 iterations 3
Cbc0038I Pass  57: suminf.    1.53632 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  58: suminf.    1.73575 (4) obj. -48.8155 iterations 2
Cbc0038I Pass  59: suminf.    2.88765 (8) obj. -48.8155 iterations 7
Cbc0038I Pass  60: suminf.    1.89106 (7) obj. -48.8155 iterations 1
Cbc0038I Pass  61: suminf.    1.60935 (5) obj. -48.8155 iterations 2
Cbc0038I Pass  62: suminf.    1.60935 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  63: suminf.    1.83336 (6) obj. -48.8155 iterations 3
Cbc0038I Pass  64: suminf.    1.77986 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  65: suminf.    1.77986 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  66: suminf.    1.66647 (6) obj. -48.8155 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -22.9204 - took 0.03 seconds
Cbc0012I Integer solution of -26.52147 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0031I 10 added rows had average density of 14.3
Cbc0013I At root node, 10 cuts changed objective from -85.240543 to -36.61713 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1473 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 687 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -28.93998 found by rounding after 1573 iterations and 1 nodes (0.14 seconds)
Cbc0004I Integer solution of -33.3717 found after 1588 iterations and 1 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -33.37170000000003, took 1672 iterations and 2 nodes (0.15 seconds)
Cbc0032I Strong branching done 32 times (299 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 40 (-6) columns and 315 (-71) elements
Clp1000I sum of infeasibilities 1.54159e-10 - average 4.2822e-12, 37 fixed columns
Coin0506I Presolve 4 (-32) rows, 3 (-37) columns and 10 (-305) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 171.94741
Clp0000I Optimal - objective value 171.94741
Coin0511I After Postsolve, objective 171.94741, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1587814 - largest nonzero change 0 ( 0%) - largest zero change 2.8188084e-05
Clp0000I Optimal - objective value 307.41802
Clp0000I Optimal - objective value 307.41802
Clp0000I Optimal - objective value 307.41802
Coin0511I After Postsolve, objective 307.41802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 307.4180233 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 39 columns (39 integer (39 of which binary)) and 301 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.991%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.69944
Cbc0038I Pass   1: suminf.    0.08333 (1) obj. 10.4988 iterations 17
Cbc0038I Solution found of 16.9154
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 6.73007
Cbc0038I Pass   2: suminf.    0.18251 (2) obj. 6.73007 iterations 1
Cbc0038I Pass   3: suminf.    0.26316 (1) obj. -11.0846 iterations 2
Cbc0038I Pass   4: suminf.    0.26804 (1) obj. 6.73007 iterations 1
Cbc0038I Pass   5: suminf.    0.93511 (6) obj. 6.73007 iterations 10
Cbc0038I Pass   6: suminf.    0.56198 (6) obj. -7.44859 iterations 3
Cbc0038I Pass   7: suminf.    0.57757 (2) obj. 6.73007 iterations 7
Cbc0038I Pass   8: suminf.    0.57757 (2) obj. 6.73007 iterations 0
Cbc0038I Pass   9: suminf.    0.42759 (1) obj. 6.73007 iterations 2
Cbc0038I Pass  10: suminf.    0.21053 (1) obj. -7.0217 iterations 1
Cbc0038I Pass  11: suminf.    0.81960 (5) obj. 6.73007 iterations 11
Cbc0038I Pass  12: suminf.    0.81960 (5) obj. 6.73007 iterations 0
Cbc0038I Pass  13: suminf.    0.69498 (2) obj. 6.73007 iterations 4
Cbc0038I Pass  14: suminf.    0.58039 (2) obj. 2.37556 iterations 3
Cbc0038I Pass  15: suminf.    0.99995 (4) obj. 6.73007 iterations 6
Cbc0038I Pass  16: suminf.    0.43902 (1) obj. -3.97292 iterations 4
Cbc0038I Pass  17: suminf.    0.48418 (1) obj. 6.73007 iterations 1
Cbc0038I Pass  18: suminf.    0.73426 (5) obj. 6.73007 iterations 14
Cbc0038I Pass  19: suminf.    0.71982 (3) obj. 6.73007 iterations 3
Cbc0038I Pass  20: suminf.    0.47368 (1) obj. -6.5208 iterations 3
Cbc0038I Pass  21: suminf.    0.09312 (3) obj. 6.73007 iterations 2
Cbc0038I Pass  22: suminf.    0.41627 (2) obj. 6.73007 iterations 3
Cbc0038I Pass  23: suminf.    0.28612 (2) obj. 6.73007 iterations 1
Cbc0038I Pass  24: suminf.    0.73106 (3) obj. -3.1814 iterations 11
Cbc0038I Pass  25: suminf.    0.73106 (3) obj. -3.1814 iterations 1
Cbc0038I Pass  26: suminf.    0.24797 (3) obj. 6.73007 iterations 6
Cbc0038I Pass  27: suminf.    0.44797 (3) obj. 6.73007 iterations 3
Cbc0038I Pass  28: suminf.    0.37503 (3) obj. 6.73007 iterations 1
Cbc0038I Pass  29: suminf.    0.86165 (3) obj. 6.73007 iterations 2
Cbc0038I Pass  30: suminf.    1.02038 (3) obj. -20.1192 iterations 9
Cbc0038I Pass  31: suminf.    0.74641 (2) obj. -14.6397 iterations 4
Cbc0038I Rounding solution of -20.1958 is better than previous of 16.9154

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.1442
Cbc0038I Pass  31: suminf.    1.32199 (9) obj. -33.1442 iterations 4
Cbc0038I Pass  32: suminf.    1.13312 (4) obj. -33.1442 iterations 1
Cbc0038I Pass  33: suminf.    1.13312 (4) obj. -33.1442 iterations 0
Cbc0038I Pass  34: suminf.    0.82068 (3) obj. -33.1442 iterations 3
Cbc0038I Pass  35: suminf.    0.82068 (3) obj. -33.1442 iterations 0
Cbc0038I Pass  36: suminf.    0.92231 (3) obj. -33.1442 iterations 1
Cbc0038I Pass  37: suminf.    0.80612 (3) obj. -34.7708 iterations 1
Cbc0038I Pass  38: suminf.    1.61201 (8) obj. -33.1442 iterations 2
Cbc0038I Pass  39: suminf.    0.92231 (3) obj. -33.1442 iterations 1
Cbc0038I Pass  40: suminf.    2.77315 (8) obj. -33.1442 iterations 26
Cbc0038I Pass  41: suminf.    2.77315 (8) obj. -33.1442 iterations 5
Cbc0038I Pass  42: suminf.    1.65670 (6) obj. -33.1442 iterations 9
Cbc0038I Pass  43: suminf.    0.89530 (3) obj. -33.1442 iterations 5
Cbc0038I Pass  44: suminf.    0.78843 (2) obj. -33.1442 iterations 2
Cbc0038I Pass  45: suminf.    0.94011 (2) obj. -33.1442 iterations 1
Cbc0038I Pass  46: suminf.    2.96950 (8) obj. -33.1442 iterations 16
Cbc0038I Pass  47: suminf.    2.96950 (8) obj. -33.1442 iterations 2
Cbc0038I Pass  48: suminf.    1.76100 (5) obj. -33.1442 iterations 9
Cbc0038I Pass  49: suminf.    1.32655 (3) obj. -33.1442 iterations 2
Cbc0038I Pass  50: suminf.    0.97924 (3) obj. -33.1442 iterations 3
Cbc0038I Pass  51: suminf.    0.96487 (3) obj. -33.1442 iterations 3
Cbc0038I Pass  52: suminf.    0.96166 (3) obj. -33.1442 iterations 1
Cbc0038I Pass  53: suminf.    0.96955 (3) obj. -33.1442 iterations 2
Cbc0038I Pass  54: suminf.    0.69644 (3) obj. -33.1442 iterations 2
Cbc0038I Pass  55: suminf.    0.39114 (2) obj. -33.1442 iterations 4
Cbc0038I Pass  56: suminf.    0.12500 (1) obj. -37.3524 iterations 2
Cbc0038I Pass  57: suminf.    0.14276 (1) obj. -33.1442 iterations 1
Cbc0038I Pass  58: suminf.    2.46309 (7) obj. -33.1442 iterations 8
Cbc0038I Pass  59: suminf.    0.92317 (3) obj. -33.1442 iterations 6
Cbc0038I Pass  60: suminf.    2.56836 (8) obj. -33.1442 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20.1958 - took 0.02 seconds
Cbc0012I Integer solution of -20.19579 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 21 added rows had average density of 9.1904762
Cbc0013I At root node, 21 cuts changed objective from -84.937204 to -33.402417 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1575 row cuts average 2.2 elements, 3 column cuts (3 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 324 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 243 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 216 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 284 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 83 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.843 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.19579 best solution, best possible -33.402417 (1.64 seconds)
Cbc0012I Integer solution of -28.61358 found by rounding after 962 iterations and 1 nodes (1.65 seconds)
Cbc0004I Integer solution of -33.3717 found after 975 iterations and 1 nodes (1.67 seconds)
Cbc0001I Search completed - best objective -33.37170000000003, took 993 iterations and 2 nodes (1.67 seconds)
Cbc0032I Strong branching done 48 times (493 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.68

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 20 (-5) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 6.23487e-07 - average 1.78139e-08, 4 fixed columns
Coin0506I Presolve 23 (-12) rows, 16 (-4) columns and 70 (-32) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.3662388 - largest nonzero change 0 ( 0%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Coin0511I After Postsolve, objective 86.244406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Coin0511I After Postsolve, objective 86.244406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.24440621 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.024%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.51994
Cbc0038I Pass   1: suminf.    0.62006 (2) obj. -25.7753 iterations 16
Cbc0038I Solution found of -1.75769
Cbc0038I Relaxing continuous gives -1.75769
Cbc0038I Rounding solution of -12.9336 is better than previous of -1.75769

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20.1644
Cbc0038I Pass   2: suminf.    0.62006 (2) obj. -25.7753 iterations 0
Cbc0038I Pass   3: suminf.    0.30621 (4) obj. -20.1644 iterations 6
Cbc0038I Pass   4: suminf.    0.36893 (2) obj. -20.1644 iterations 5
Cbc0038I Pass   5: suminf.    0.23988 (2) obj. -20.1644 iterations 1
Cbc0038I Pass   6: suminf.    0.35772 (3) obj. -20.1644 iterations 6
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -20.1958 iterations 3
Cbc0038I Solution found of -20.1958
Cbc0038I Relaxing continuous gives -20.1958
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.2048
Cbc0038I Pass   8: suminf.    0.64884 (4) obj. -33.2048 iterations 2
Cbc0038I Pass   9: suminf.    0.73714 (6) obj. -33.2048 iterations 7
Cbc0038I Pass  10: suminf.    0.51606 (8) obj. -33.2048 iterations 3
Cbc0038I Pass  11: suminf.    1.24002 (3) obj. -33.2048 iterations 9
Cbc0038I Pass  12: suminf.    0.84375 (4) obj. -33.2048 iterations 3
Cbc0038I Pass  13: suminf.    1.31608 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  14: suminf.    0.95507 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  15: suminf.    1.60907 (5) obj. -33.2048 iterations 4
Cbc0038I Pass  16: suminf.    1.27319 (4) obj. -33.2048 iterations 2
Cbc0038I Pass  17: suminf.    1.41766 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  18: suminf.    1.10983 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  19: suminf.    2.35790 (7) obj. -33.2048 iterations 6
Cbc0038I Pass  20: suminf.    2.31348 (6) obj. -33.2048 iterations 1
Cbc0038I Pass  21: suminf.    1.39007 (6) obj. -33.2048 iterations 3
Cbc0038I Pass  22: suminf.    0.79220 (5) obj. -33.2048 iterations 1
Cbc0038I Pass  23: suminf.    0.41294 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  24: suminf.    1.67318 (5) obj. -33.2048 iterations 6
Cbc0038I Pass  25: suminf.    1.41766 (3) obj. -33.2048 iterations 4
Cbc0038I Pass  26: suminf.    1.10983 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  27: suminf.    1.10983 (3) obj. -33.2048 iterations 0
Cbc0038I Pass  28: suminf.    0.99851 (4) obj. -33.2048 iterations 1
Cbc0038I Pass  29: suminf.    0.99851 (4) obj. -33.2048 iterations 0
Cbc0038I Pass  30: suminf.    0.60474 (5) obj. -33.2048 iterations 12
Cbc0038I Pass  31: suminf.    0.24990 (4) obj. -33.2048 iterations 1
Cbc0038I Pass  32: suminf.    1.04262 (5) obj. -33.2048 iterations 8
Cbc0038I Pass  33: suminf.    0.59382 (4) obj. -33.2048 iterations 3
Cbc0038I Pass  34: suminf.    0.85977 (3) obj. -33.2048 iterations 4
Cbc0038I Pass  35: suminf.    0.29706 (2) obj. -33.2048 iterations 1
Cbc0038I Pass  36: suminf.    1.00332 (5) obj. -33.2048 iterations 5
Cbc0038I Pass  37: suminf.    1.24002 (3) obj. -33.2048 iterations 4
Cbc0038I Rounding solution of -22.9204 is better than previous of -20.1958

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -48.8155
Cbc0038I Pass  37: suminf.    0.92422 (7) obj. -48.8155 iterations 4
Cbc0038I Pass  38: suminf.    1.49706 (6) obj. -48.8155 iterations 11
Cbc0038I Pass  39: suminf.    1.29821 (6) obj. -48.8155 iterations 1
Cbc0038I Pass  40: suminf.    0.82664 (6) obj. -48.8155 iterations 3
Cbc0038I Pass  41: suminf.    1.99108 (8) obj. -48.8155 iterations 10
Cbc0038I Pass  42: suminf.    1.80275 (6) obj. -48.8155 iterations 2
Cbc0038I Pass  43: suminf.    1.02090 (5) obj. -48.8155 iterations 3
Cbc0038I Pass  44: suminf.    0.98050 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  45: suminf.    1.69391 (6) obj. -48.8155 iterations 5
Cbc0038I Pass  46: suminf.    1.62323 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  47: suminf.    1.45642 (5) obj. -48.8155 iterations 4
Cbc0038I Pass  48: suminf.    1.45642 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  49: suminf.    1.56474 (5) obj. -48.8155 iterations 4
Cbc0038I Pass  50: suminf.    1.53632 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  51: suminf.    1.73575 (4) obj. -48.8155 iterations 2
Cbc0038I Pass  52: suminf.    1.73575 (4) obj. -48.8155 iterations 0
Cbc0038I Pass  53: suminf.    1.76050 (5) obj. -48.8155 iterations 2
Cbc0038I Pass  54: suminf.    1.73575 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  55: suminf.    1.73575 (4) obj. -48.8155 iterations 0
Cbc0038I Pass  56: suminf.    1.56474 (5) obj. -48.8155 iterations 3
Cbc0038I Pass  57: suminf.    1.53632 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  58: suminf.    1.73575 (4) obj. -48.8155 iterations 2
Cbc0038I Pass  59: suminf.    2.88765 (8) obj. -48.8155 iterations 7
Cbc0038I Pass  60: suminf.    1.89106 (7) obj. -48.8155 iterations 1
Cbc0038I Pass  61: suminf.    1.60935 (5) obj. -48.8155 iterations 2
Cbc0038I Pass  62: suminf.    1.60935 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  63: suminf.    1.83336 (6) obj. -48.8155 iterations 3
Cbc0038I Pass  64: suminf.    1.77986 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  65: suminf.    1.77986 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  66: suminf.    1.66647 (6) obj. -48.8155 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -22.9204 - took 0.03 seconds
Cbc0012I Integer solution of -26.52147 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0031I 10 added rows had average density of 14.3
Cbc0013I At root node, 10 cuts changed objective from -85.240543 to -36.61713 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1473 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 687 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -28.93998 found by rounding after 1573 iterations and 1 nodes (0.15 seconds)
Cbc0004I Integer solution of -33.3717 found after 1588 iterations and 1 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -33.37170000000003, took 1672 iterations and 2 nodes (0.16 seconds)
Cbc0032I Strong branching done 32 times (299 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-16) rows, 36 (-11) columns and 270 (-119) elements
Clp1000I sum of infeasibilities 2.96933e-10 - average 8.99796e-12, 13 fixed columns
Coin0506I Presolve 21 (-12) rows, 23 (-13) columns and 135 (-135) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 2.8086452 - largest nonzero change 1.9226108e-05 ( 0.0009598595%) - largest zero change 1.9172477e-05
Clp0000I Optimal - objective value 92.904903
Clp0000I Optimal - objective value 92.904903
Coin0511I After Postsolve, objective 92.904903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0584918 - largest nonzero change 1.7288697e-05 ( 0.0009598595%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 103.17205
Clp0000I Optimal - objective value 103.17205
Clp0000I Optimal - objective value 103.17205
Coin0511I After Postsolve, objective 103.17205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.1720507 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 37 columns (37 integer (37 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.685%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.70385
Cbc0038I Pass   1: suminf.    0.77433 (7) obj. -57.7328 iterations 3
Cbc0038I Pass   2: suminf.    0.77433 (7) obj. -57.7328 iterations 0
Cbc0038I Solution found of 8.47552
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 37 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 8.47552 to 7.73952 (0.01 seconds)
Cbc0038I Round again with cutoff of -1.99706
Cbc0038I Pass   3: suminf.    0.77433 (7) obj. -57.7328 iterations 0
Cbc0038I Pass   4: suminf.    0.77433 (7) obj. -57.7328 iterations 0
Cbc0038I Pass   5: suminf.    0.27559 (1) obj. -1.99706 iterations 7
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -23.1911 iterations 1
Cbc0038I Pass   7: suminf.    0.39006 (4) obj. -1.99706 iterations 9
Cbc0038I Pass   8: suminf.    0.39006 (4) obj. -1.99706 iterations 0
Cbc0038I Pass   9: suminf.    0.34900 (2) obj. -1.99706 iterations 6
Cbc0038I Pass  10: suminf.    0.34900 (2) obj. -1.99706 iterations 0
Cbc0038I Pass  11: suminf.    0.57144 (2) obj. -1.99706 iterations 1
Cbc0038I Pass  12: suminf.    0.23611 (2) obj. -14.7394 iterations 1
Cbc0038I Pass  13: suminf.    0.92083 (6) obj. -23.9449 iterations 6
Cbc0038I Pass  14: suminf.    0.72596 (4) obj. -1.99706 iterations 6
Cbc0038I Pass  15: suminf.    0.49008 (3) obj. -13.1665 iterations 1
Cbc0038I Pass  16: suminf.    0.29012 (1) obj. -1.99706 iterations 3
Cbc0038I Pass  17: suminf.    0.22222 (1) obj. -4.57726 iterations 1
Cbc0038I Pass  18: suminf.    1.15261 (4) obj. -1.99706 iterations 9
Cbc0038I Pass  19: suminf.    0.79839 (2) obj. -1.99706 iterations 4
Cbc0038I Pass  20: suminf.    0.81832 (2) obj. -1.99706 iterations 2
Cbc0038I Pass  21: suminf.    0.97745 (3) obj. -1.99706 iterations 6
Cbc0038I Pass  22: suminf.    0.73718 (3) obj. -6.80253 iterations 2
Cbc0038I Pass  23: suminf.    0.65438 (2) obj. -1.99706 iterations 4
Cbc0038I Pass  24: suminf.    0.58333 (2) obj. -3.41791 iterations 3
Cbc0038I Pass  25: suminf.    1.90951 (5) obj. -4.33871 iterations 12
Cbc0038I Pass  26: suminf.    1.70567 (5) obj. -1.99706 iterations 4
Cbc0038I Pass  27: suminf.    0.33333 (1) obj. -10.9298 iterations 4
Cbc0038I Pass  28: suminf.    0.09826 (1) obj. -1.99706 iterations 1
Cbc0038I Pass  29: suminf.    2.41681 (6) obj. -1.99706 iterations 14
Cbc0038I Pass  30: suminf.    2.04529 (5) obj. -1.99706 iterations 3
Cbc0038I Pass  31: suminf.    0.60455 (2) obj. -1.99706 iterations 6
Cbc0038I Pass  32: suminf.    0.31574 (1) obj. -1.99706 iterations 1
Cbc0038I Rounding solution of -21.5069 is better than previous of 7.73952

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 37 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -35.1307
Cbc0038I Pass  32: suminf.    0.77433 (7) obj. -57.7328 iterations 0
Cbc0038I Pass  33: suminf.    0.77433 (7) obj. -57.7328 iterations 0
Cbc0038I Pass  34: suminf.    0.56969 (2) obj. -35.1307 iterations 6
Cbc0038I Pass  35: suminf.    0.29167 (2) obj. -40.6911 iterations 1
Cbc0038I Pass  36: suminf.    2.41272 (7) obj. -35.1307 iterations 18
Cbc0038I Pass  37: suminf.    2.41272 (7) obj. -35.1307 iterations 2
Cbc0038I Pass  38: suminf.    0.93453 (2) obj. -35.1307 iterations 6
Cbc0038I Pass  39: suminf.    0.93750 (2) obj. -37.6902 iterations 1
Cbc0038I Pass  40: suminf.    0.87014 (2) obj. -35.1307 iterations 1
Cbc0038I Pass  41: suminf.    0.93453 (2) obj. -35.1307 iterations 1
Cbc0038I Pass  42: suminf.    2.42218 (7) obj. -35.1307 iterations 11
Cbc0038I Pass  43: suminf.    2.04621 (6) obj. -35.1307 iterations 5
Cbc0038I Pass  44: suminf.    1.77917 (5) obj. -36.6932 iterations 2
Cbc0038I Pass  45: suminf.    1.63712 (5) obj. -35.1307 iterations 2
Cbc0038I Pass  46: suminf.    1.11413 (4) obj. -35.1307 iterations 10
Cbc0038I Pass  47: suminf.    0.35495 (3) obj. -35.1307 iterations 3
Cbc0038I Pass  48: suminf.    0.33971 (4) obj. -35.1307 iterations 5
Cbc0038I Pass  49: suminf.    0.33971 (4) obj. -35.1307 iterations 0
Cbc0038I Pass  50: suminf.    0.59646 (4) obj. -35.1307 iterations 2
Cbc0038I Pass  51: suminf.    2.15729 (7) obj. -35.1307 iterations 13
Cbc0038I Pass  52: suminf.    1.56894 (6) obj. -35.1307 iterations 7
Cbc0038I Pass  53: suminf.    1.34306 (5) obj. -37.146 iterations 3
Cbc0038I Pass  54: suminf.    1.15985 (5) obj. -35.1307 iterations 3
Cbc0038I Pass  55: suminf.    1.70781 (5) obj. -35.1307 iterations 7
Cbc0038I Pass  56: suminf.    1.70781 (5) obj. -35.1307 iterations 0
Cbc0038I Pass  57: suminf.    1.56950 (4) obj. -35.1307 iterations 2
Cbc0038I Pass  58: suminf.    1.56950 (4) obj. -35.1307 iterations 0
Cbc0038I Pass  59: suminf.    1.37745 (4) obj. -35.1307 iterations 1
Cbc0038I Pass  60: suminf.    1.37745 (4) obj. -35.1307 iterations 0
Cbc0038I Pass  61: suminf.    2.78899 (7) obj. -35.1307 iterations 8
Cbc0038I Rounding solution of -28.821 is better than previous of -21.5069

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 37 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -28.821 to -33.3717 (0.03 seconds)
Cbc0038I Round again with cutoff of -51.4791
Cbc0038I Pass  61: suminf.    0.77433 (7) obj. -57.7328 iterations 0
Cbc0038I Pass  62: suminf.    0.77433 (7) obj. -57.7328 iterations 0
Cbc0038I Pass  63: suminf.    0.99485 (9) obj. -51.4791 iterations 6
Cbc0038I Pass  64: suminf.    0.99485 (9) obj. -51.4791 iterations 0
Cbc0038I Pass  65: suminf.    0.61862 (5) obj. -51.4791 iterations 7
Cbc0038I Pass  66: suminf.    0.61862 (5) obj. -51.4791 iterations 0
Cbc0038I Pass  67: suminf.    1.45985 (5) obj. -51.4791 iterations 3
Cbc0038I Pass  68: suminf.    0.61862 (5) obj. -51.4791 iterations 1
Cbc0038I Pass  69: suminf.    1.95460 (6) obj. -51.4791 iterations 7
Cbc0038I Pass  70: suminf.    1.63319 (6) obj. -51.4791 iterations 2
Cbc0038I Pass  71: suminf.    1.98861 (6) obj. -51.4791 iterations 2
Cbc0038I Pass  72: suminf.    2.37402 (8) obj. -51.4791 iterations 6
Cbc0038I Pass  73: suminf.    2.37402 (8) obj. -51.4791 iterations 0
Cbc0038I Pass  74: suminf.    2.13363 (7) obj. -51.4791 iterations 5
Cbc0038I Pass  75: suminf.    2.11762 (7) obj. -51.4791 iterations 1
Cbc0038I Pass  76: suminf.    1.85291 (6) obj. -51.4791 iterations 1
Cbc0038I Pass  77: suminf.    1.85291 (6) obj. -51.4791 iterations 0
Cbc0038I Pass  78: suminf.    1.81964 (6) obj. -51.4791 iterations 1
Cbc0038I Pass  79: suminf.    1.41907 (5) obj. -51.4791 iterations 1
Cbc0038I Pass  80: suminf.    1.30675 (5) obj. -52.7147 iterations 1
Cbc0038I Pass  81: suminf.    1.85291 (6) obj. -51.4791 iterations 2
Cbc0038I Pass  82: suminf.    1.85291 (6) obj. -51.4791 iterations 0
Cbc0038I Pass  83: suminf.    1.81964 (6) obj. -51.4791 iterations 1
Cbc0038I Pass  84: suminf.    1.41907 (5) obj. -51.4791 iterations 1
Cbc0038I Pass  85: suminf.    1.30675 (5) obj. -52.7147 iterations 1
Cbc0038I Pass  86: suminf.    1.85291 (6) obj. -51.4791 iterations 2
Cbc0038I Pass  87: suminf.    1.85291 (6) obj. -51.4791 iterations 0
Cbc0038I Pass  88: suminf.    1.81964 (6) obj. -51.4791 iterations 1
Cbc0038I Pass  89: suminf.    1.41907 (5) obj. -51.4791 iterations 1
Cbc0038I Pass  90: suminf.    1.30675 (5) obj. -52.7147 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -33.3717 - took 0.03 seconds
Cbc0012I Integer solution of -33.3717 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 4.5
Cbc0013I At root node, 10 cuts changed objective from -89.625386 to -33.547866 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 62 row cuts average 2.0 elements, 16 column cuts (16 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 24 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.37170000000003, took 50 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

