Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 171 (-34) rows, 99 (-4) columns and 532 (-71) elements
Clp1000I sum of infeasibilities 3.70882e-05 - average 2.1689e-07, 18 fixed columns
Coin0506I Presolve 133 (-38) rows, 80 (-19) columns and 418 (-114) elements
Clp0029I End of values pass after 80 iterations
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Coin0511I After Postsolve, objective 50.319984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Coin0511I After Postsolve, objective 50.319984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.31998426 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 171 rows, 99 columns (98 integer (98 of which binary)) and 535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.03029
Cbc0038I Solution found of -0.762541
Cbc0038I Relaxing continuous gives -8.75341
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 67 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -8.75341 to -20.9045 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.8461
Cbc0038I Pass   1: suminf.    2.22192 (25) obj. -23.8461 iterations 66
Cbc0038I Pass   2: suminf.    0.77402 (4) obj. -23.8461 iterations 38
Cbc0038I Pass   3: suminf.    0.77402 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   4: suminf.    1.77316 (5) obj. -23.8461 iterations 8
Cbc0038I Pass   5: suminf.    1.61984 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   6: suminf.    1.33590 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   7: suminf.    1.20575 (4) obj. -23.8461 iterations 2
Cbc0038I Pass   8: suminf.    1.20575 (4) obj. -23.8461 iterations 0
Cbc0038I Pass   9: suminf.    1.61984 (4) obj. -23.8461 iterations 4
Cbc0038I Pass  10: suminf.    3.00813 (10) obj. -23.8461 iterations 21
Cbc0038I Pass  11: suminf.    2.22548 (8) obj. -23.8461 iterations 9
Cbc0038I Pass  12: suminf.    1.58633 (6) obj. -23.8461 iterations 5
Cbc0038I Pass  13: suminf.    1.55386 (4) obj. -23.8461 iterations 12
Cbc0038I Pass  14: suminf.    1.25971 (5) obj. -23.8461 iterations 4
Cbc0038I Pass  15: suminf.    1.13018 (5) obj. -23.8461 iterations 3
Cbc0038I Pass  16: suminf.    1.58917 (5) obj. -23.8461 iterations 12
Cbc0038I Pass  17: suminf.    1.58917 (5) obj. -23.8461 iterations 0
Cbc0038I Pass  18: suminf.    1.59268 (5) obj. -23.8461 iterations 7
Cbc0038I Pass  19: suminf.    1.57986 (5) obj. -23.8461 iterations 2
Cbc0038I Pass  20: suminf.    1.62170 (5) obj. -23.8461 iterations 4
Cbc0038I Pass  21: suminf.    1.59095 (8) obj. -23.8461 iterations 29
Cbc0038I Pass  22: suminf.    1.41641 (5) obj. -23.8461 iterations 12
Cbc0038I Pass  23: suminf.    1.01086 (4) obj. -23.8461 iterations 14
Cbc0038I Pass  24: suminf.    1.01086 (4) obj. -23.8461 iterations 1
Cbc0038I Pass  25: suminf.    1.20890 (4) obj. -23.8461 iterations 5
Cbc0038I Pass  26: suminf.    1.08522 (3) obj. -23.8461 iterations 3
Cbc0038I Pass  27: suminf.    1.01086 (4) obj. -23.8461 iterations 2
Cbc0038I Pass  28: suminf.    3.14297 (9) obj. -23.8461 iterations 18
Cbc0038I Pass  29: suminf.    2.12983 (6) obj. -23.8461 iterations 11
Cbc0038I Pass  30: suminf.    0.96641 (5) obj. -23.8461 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 97 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -20.9045 to -20.9333 (0.09 seconds)
Cbc0038I Round again with cutoff of -29.1409
Cbc0038I Pass  30: suminf.    3.00141 (25) obj. -29.1409 iterations 0
Cbc0038I Pass  31: suminf.    2.69727 (8) obj. -29.1409 iterations 28
Cbc0038I Pass  32: suminf.    2.69727 (8) obj. -29.1409 iterations 0
Cbc0038I Pass  33: suminf.    3.05632 (10) obj. -29.1409 iterations 18
Cbc0038I Pass  34: suminf.    2.96892 (10) obj. -29.1409 iterations 5
Cbc0038I Pass  35: suminf.    2.29271 (10) obj. -29.1409 iterations 34
Cbc0038I Pass  36: suminf.    1.68474 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  37: suminf.    1.68474 (5) obj. -29.1409 iterations 0
Cbc0038I Pass  38: suminf.    1.89208 (5) obj. -29.1409 iterations 10
Cbc0038I Pass  39: suminf.    1.85960 (5) obj. -29.1409 iterations 3
Cbc0038I Pass  40: suminf.    1.68474 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  41: suminf.    2.44874 (9) obj. -29.1409 iterations 26
Cbc0038I Pass  42: suminf.    2.21029 (8) obj. -29.1409 iterations 9
Cbc0038I Pass  43: suminf.    1.70001 (8) obj. -29.1409 iterations 13
Cbc0038I Pass  44: suminf.    1.70001 (8) obj. -29.1409 iterations 0
Cbc0038I Pass  45: suminf.    2.01399 (5) obj. -29.1409 iterations 8
Cbc0038I Pass  46: suminf.    1.59094 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  47: suminf.    1.50919 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  48: suminf.    1.50919 (5) obj. -29.1409 iterations 1
Cbc0038I Pass  49: suminf.    1.94657 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  50: suminf.    1.39237 (5) obj. -29.1409 iterations 2
Cbc0038I Pass  51: suminf.    1.50919 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  52: suminf.    4.09063 (11) obj. -29.1409 iterations 19
Cbc0038I Pass  53: suminf.    2.21244 (8) obj. -29.1409 iterations 13
Cbc0038I Pass  54: suminf.    2.03782 (7) obj. -29.1409 iterations 13
Cbc0038I Pass  55: suminf.    1.89124 (5) obj. -29.1409 iterations 5
Cbc0038I Pass  56: suminf.    1.51816 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  57: suminf.    1.48397 (5) obj. -29.1409 iterations 8
Cbc0038I Pass  58: suminf.    1.69211 (5) obj. -29.1409 iterations 9
Cbc0038I Pass  59: suminf.    1.68115 (5) obj. -29.1409 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 97 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -20.9333 - took 0.14 seconds
Cbc0012I Integer solution of -20.933287 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 69 rows 44 columns
Cbc0031I 28 added rows had average density of 61.75
Cbc0013I At root node, 28 cuts changed objective from -50.319984 to -44.290403 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11939 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1895 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.933287 best solution, best possible -44.290403 (0.99 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 16 rows 16 columns
Cbc0038I Full problem 171 rows 99 columns, reduced to 9 rows 12 columns
Cbc0012I Integer solution of -21.21006 found by rounding after 9405 iterations and 95 nodes (1.31 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 19 rows 18 columns
Cbc0001I Search completed - best objective -21.21006000000001, took 12814 iterations and 214 nodes (1.55 seconds)
Cbc0032I Strong branching done 1590 times (24460 iterations), fathomed 29 nodes and fixed 105 variables
Cbc0035I Maximum depth 40, 921 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       1.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-86) rows, 143 (-59) columns and 2572 (-3081) elements
Clp1000I sum of infeasibilities 1.69205e-07 - average 1.43394e-09, 58 fixed columns
Coin0506I Presolve 71 (-47) rows, 85 (-58) columns and 1040 (-1532) elements
Clp0006I 0  Obj 73.06563 Dual inf 6.4748121 (85)
Clp0014I Perturbing problem by 0.001% of 1.8102326 - largest nonzero change 1.4340419e-05 ( 0.0010393299%) - largest zero change 2.7078954e-05
Clp0000I Optimal - objective value 82.113205
Clp0000I Optimal - objective value 82.113205
Coin0511I After Postsolve, objective 82.113205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 82.113205
Clp0000I Optimal - objective value 82.113205
Clp0000I Optimal - objective value 82.113205
Clp0000I Optimal - objective value 82.113205
Coin0511I After Postsolve, objective 82.113205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.11320484 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 142 columns (142 integer (142 of which binary)) and 2542 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.66998
Cbc0038I Pass   1: suminf.    2.85045 (35) obj. -42.9062 iterations 14
Cbc0038I Pass   2: suminf.    2.85045 (35) obj. -42.9062 iterations 1
Cbc0038I Pass   3: suminf.    1.33929 (19) obj. -28.4174 iterations 16
Cbc0038I Solution found of -5.17643
Cbc0038I Rounding solution of -11.4497 is better than previous of -5.17643

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 142 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -11.4497 to -14.1457 (0.04 seconds)
Cbc0038I Round again with cutoff of -18.7094
Cbc0038I Pass   4: suminf.    2.85045 (35) obj. -42.9062 iterations 0
Cbc0038I Pass   5: suminf.    2.85045 (35) obj. -42.9062 iterations 1
Cbc0038I Pass   6: suminf.    0.81787 (12) obj. -20.0846 iterations 23
Cbc0038I Pass   7: suminf.    0.48909 (4) obj. -18.7094 iterations 15
Cbc0038I Pass   8: suminf.    0.38529 (4) obj. -21.4589 iterations 1
Cbc0038I Pass   9: suminf.    0.82444 (5) obj. -18.7094 iterations 11
Cbc0038I Pass  10: suminf.    0.16667 (2) obj. -18.7933 iterations 8
Cbc0038I Pass  11: suminf.    2.11514 (16) obj. -18.7094 iterations 44
Cbc0038I Pass  12: suminf.    1.60011 (15) obj. -18.7094 iterations 14
Cbc0038I Pass  13: suminf.    0.92090 (6) obj. -18.7094 iterations 27
Cbc0038I Pass  14: suminf.    0.85381 (6) obj. -18.7094 iterations 3
Cbc0038I Pass  15: suminf.    0.98276 (3) obj. -18.7094 iterations 13
Cbc0038I Pass  16: suminf.    0.79936 (4) obj. -18.7094 iterations 11
Cbc0038I Pass  17: suminf.    0.64841 (3) obj. -18.7094 iterations 2
Cbc0038I Pass  18: suminf.    0.60599 (3) obj. -18.7094 iterations 2
Cbc0038I Pass  19: suminf.    0.79936 (4) obj. -18.7094 iterations 4
Cbc0038I Pass  20: suminf.    1.93769 (10) obj. -18.7094 iterations 29
Cbc0038I Pass  21: suminf.    1.72386 (11) obj. -18.7094 iterations 8
Cbc0038I Pass  22: suminf.    0.66168 (5) obj. -18.7094 iterations 34
Cbc0038I Pass  23: suminf.    0.66168 (5) obj. -18.7094 iterations 6
Cbc0038I Pass  24: suminf.    0.67623 (5) obj. -18.7094 iterations 8
Cbc0038I Pass  25: suminf.    0.67623 (5) obj. -18.7094 iterations 6
Cbc0038I Pass  26: suminf.    0.66168 (5) obj. -18.7094 iterations 8
Cbc0038I Pass  27: suminf.    1.47222 (12) obj. -18.7094 iterations 29
Cbc0038I Pass  28: suminf.    1.23872 (10) obj. -18.7094 iterations 6
Cbc0038I Pass  29: suminf.    0.63034 (7) obj. -18.7094 iterations 16
Cbc0038I Pass  30: suminf.    0.37577 (6) obj. -18.7094 iterations 7
Cbc0038I Pass  31: suminf.    0.54403 (5) obj. -18.7094 iterations 14
Cbc0038I Pass  32: suminf.    0.54403 (5) obj. -18.7094 iterations 0
Cbc0038I Pass  33: suminf.    2.02975 (6) obj. -18.7094 iterations 6
Cbc0038I Rounding solution of -14.3993 is better than previous of -14.1457

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 142 columns, reduced to 13 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -14.3993 to -15.4547 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.9239
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.85045 (35) obj. -42.9062 iterations 0
Cbc0038I Pass  34: suminf.    2.85045 (35) obj. -42.9062 iterations 1
Cbc0038I Pass  35: suminf.    1.11797 (11) obj. -26.9239 iterations 31
Cbc0038I Pass  36: suminf.    1.01663 (11) obj. -30.5947 iterations 1
Cbc0038I Pass  37: suminf.    0.83557 (9) obj. -26.9239 iterations 19
Cbc0038I Pass  38: suminf.    0.62540 (8) obj. -26.9239 iterations 3
Cbc0038I Pass  39: suminf.    1.91624 (7) obj. -26.9239 iterations 13
Cbc0038I Pass  40: suminf.    1.47584 (7) obj. -26.9239 iterations 2
Cbc0038I Pass  41: suminf.    1.62877 (9) obj. -26.9239 iterations 13
Cbc0038I Pass  42: suminf.    1.23019 (7) obj. -26.9239 iterations 6
Cbc0038I Pass  43: suminf.    1.36784 (6) obj. -26.9239 iterations 8
Cbc0038I Pass  44: suminf.    0.62540 (8) obj. -26.9239 iterations 7
Cbc0038I Pass  45: suminf.    1.91624 (7) obj. -26.9239 iterations 13
Cbc0038I Pass  46: suminf.    1.47584 (7) obj. -26.9239 iterations 2
Cbc0038I Pass  47: suminf.    1.62877 (9) obj. -26.9239 iterations 12
Cbc0038I Pass  48: suminf.    1.23019 (7) obj. -26.9239 iterations 6
Cbc0038I Pass  49: suminf.    1.36784 (6) obj. -26.9239 iterations 8
Cbc0038I Pass  50: suminf.    0.62540 (8) obj. -26.9239 iterations 7
Cbc0038I Pass  51: suminf.    1.91624 (7) obj. -26.9239 iterations 13
Cbc0038I Pass  52: suminf.    1.47584 (7) obj. -26.9239 iterations 2
Cbc0038I Pass  53: suminf.    1.62877 (9) obj. -26.9239 iterations 12
Cbc0038I Pass  54: suminf.    1.23019 (7) obj. -26.9239 iterations 6
Cbc0038I Pass  55: suminf.    1.36784 (6) obj. -26.9239 iterations 8
Cbc0038I Pass  56: suminf.    0.62540 (8) obj. -26.9239 iterations 7
Cbc0038I Pass  57: suminf.    1.91624 (7) obj. -26.9239 iterations 13
Cbc0038I Pass  58: suminf.    1.47584 (7) obj. -26.9239 iterations 2
Cbc0038I Pass  59: suminf.    1.62877 (9) obj. -26.9239 iterations 12
Cbc0038I Pass  60: suminf.    1.23019 (7) obj. -26.9239 iterations 6
Cbc0038I Pass  61: suminf.    1.36784 (6) obj. -26.9239 iterations 8
Cbc0038I Pass  62: suminf.    0.62540 (8) obj. -26.9239 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 142 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -15.4547 - took 0.05 seconds
Cbc0012I Integer solution of -15.45474 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 117 rows 142 columns, reduced to 5 rows 6 columns
Cbc0031I 58 added rows had average density of 54.206897
Cbc0013I At root node, 58 cuts changed objective from -59.7816 to -29.300611 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13367 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2265 row cuts average 136.8 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1154 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1225 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 329 row cuts average 87.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 115 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.316 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.45474 best solution, best possible -29.300611 (2.04 seconds)
Cbc0012I Integer solution of -20.23808 found by rounding after 5609 iterations and 1 nodes (2.04 seconds)
Cbc0012I Integer solution of -20.70246 found by DiveCoefficient after 5714 iterations and 2 nodes (2.06 seconds)
Cbc0012I Integer solution of -20.728 found by rounding after 5745 iterations and 5 nodes (2.07 seconds)
Cbc0012I Integer solution of -20.78929 found by DiveCoefficient after 5752 iterations and 6 nodes (2.07 seconds)
Cbc0012I Integer solution of -20.907747 found by DiveCoefficient after 5775 iterations and 10 nodes (2.08 seconds)
Cbc0012I Integer solution of -20.933277 found by rounding after 5780 iterations and 11 nodes (2.08 seconds)
Cbc0012I Integer solution of -20.933287 found by rounding after 5851 iterations and 25 nodes (2.10 seconds)
Cbc0010I After 40 nodes, 3 on tree, -20.933287 best solution, best possible -28.726803 (2.75 seconds)
Cbc0038I Full problem 117 rows 142 columns, reduced to 53 rows 68 columns
Cbc0012I Integer solution of -21.21006 found by rounding after 7810 iterations and 77 nodes (3.22 seconds)
Cbc0038I Full problem 117 rows 142 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -21.21006000000001, took 9730 iterations and 148 nodes (3.44 seconds)
Cbc0032I Strong branching done 1042 times (15957 iterations), fathomed 13 nodes and fixed 25 variables
Cbc0035I Maximum depth 19, 319 variables fixed on reduced cost
Total time (CPU seconds):       3.05   (Wallclock seconds):       3.46

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 171 (-34) rows, 99 (-4) columns and 532 (-71) elements
Clp1000I sum of infeasibilities 3.70882e-05 - average 2.1689e-07, 18 fixed columns
Coin0506I Presolve 133 (-38) rows, 80 (-19) columns and 418 (-114) elements
Clp0029I End of values pass after 80 iterations
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Coin0511I After Postsolve, objective 50.319984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Coin0511I After Postsolve, objective 50.319984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.31998426 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 171 rows, 99 columns (98 integer (98 of which binary)) and 535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.03029
Cbc0038I Solution found of -0.762541
Cbc0038I Relaxing continuous gives -8.75341
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 67 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -8.75341 to -20.9045 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.8461
Cbc0038I Pass   1: suminf.    2.22192 (25) obj. -23.8461 iterations 66
Cbc0038I Pass   2: suminf.    0.77402 (4) obj. -23.8461 iterations 38
Cbc0038I Pass   3: suminf.    0.77402 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   4: suminf.    1.77316 (5) obj. -23.8461 iterations 8
Cbc0038I Pass   5: suminf.    1.61984 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   6: suminf.    1.33590 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   7: suminf.    1.20575 (4) obj. -23.8461 iterations 2
Cbc0038I Pass   8: suminf.    1.20575 (4) obj. -23.8461 iterations 0
Cbc0038I Pass   9: suminf.    1.61984 (4) obj. -23.8461 iterations 4
Cbc0038I Pass  10: suminf.    3.00813 (10) obj. -23.8461 iterations 21
Cbc0038I Pass  11: suminf.    2.22548 (8) obj. -23.8461 iterations 9
Cbc0038I Pass  12: suminf.    1.58633 (6) obj. -23.8461 iterations 5
Cbc0038I Pass  13: suminf.    1.55386 (4) obj. -23.8461 iterations 12
Cbc0038I Pass  14: suminf.    1.25971 (5) obj. -23.8461 iterations 4
Cbc0038I Pass  15: suminf.    1.13018 (5) obj. -23.8461 iterations 3
Cbc0038I Pass  16: suminf.    1.58917 (5) obj. -23.8461 iterations 12
Cbc0038I Pass  17: suminf.    1.58917 (5) obj. -23.8461 iterations 0
Cbc0038I Pass  18: suminf.    1.59268 (5) obj. -23.8461 iterations 7
Cbc0038I Pass  19: suminf.    1.57986 (5) obj. -23.8461 iterations 2
Cbc0038I Pass  20: suminf.    1.62170 (5) obj. -23.8461 iterations 4
Cbc0038I Pass  21: suminf.    1.59095 (8) obj. -23.8461 iterations 29
Cbc0038I Pass  22: suminf.    1.41641 (5) obj. -23.8461 iterations 12
Cbc0038I Pass  23: suminf.    1.01086 (4) obj. -23.8461 iterations 14
Cbc0038I Pass  24: suminf.    1.01086 (4) obj. -23.8461 iterations 1
Cbc0038I Pass  25: suminf.    1.20890 (4) obj. -23.8461 iterations 5
Cbc0038I Pass  26: suminf.    1.08522 (3) obj. -23.8461 iterations 3
Cbc0038I Pass  27: suminf.    1.01086 (4) obj. -23.8461 iterations 2
Cbc0038I Pass  28: suminf.    3.14297 (9) obj. -23.8461 iterations 18
Cbc0038I Pass  29: suminf.    2.12983 (6) obj. -23.8461 iterations 11
Cbc0038I Pass  30: suminf.    0.96641 (5) obj. -23.8461 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 97 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -20.9045 to -20.9333 (0.10 seconds)
Cbc0038I Round again with cutoff of -29.1409
Cbc0038I Pass  30: suminf.    3.00141 (25) obj. -29.1409 iterations 0
Cbc0038I Pass  31: suminf.    2.69727 (8) obj. -29.1409 iterations 28
Cbc0038I Pass  32: suminf.    2.69727 (8) obj. -29.1409 iterations 0
Cbc0038I Pass  33: suminf.    3.05632 (10) obj. -29.1409 iterations 18
Cbc0038I Pass  34: suminf.    2.96892 (10) obj. -29.1409 iterations 5
Cbc0038I Pass  35: suminf.    2.29271 (10) obj. -29.1409 iterations 34
Cbc0038I Pass  36: suminf.    1.68474 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  37: suminf.    1.68474 (5) obj. -29.1409 iterations 0
Cbc0038I Pass  38: suminf.    1.89208 (5) obj. -29.1409 iterations 10
Cbc0038I Pass  39: suminf.    1.85960 (5) obj. -29.1409 iterations 3
Cbc0038I Pass  40: suminf.    1.68474 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  41: suminf.    2.44874 (9) obj. -29.1409 iterations 26
Cbc0038I Pass  42: suminf.    2.21029 (8) obj. -29.1409 iterations 9
Cbc0038I Pass  43: suminf.    1.70001 (8) obj. -29.1409 iterations 13
Cbc0038I Pass  44: suminf.    1.70001 (8) obj. -29.1409 iterations 0
Cbc0038I Pass  45: suminf.    2.01399 (5) obj. -29.1409 iterations 8
Cbc0038I Pass  46: suminf.    1.59094 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  47: suminf.    1.50919 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  48: suminf.    1.50919 (5) obj. -29.1409 iterations 1
Cbc0038I Pass  49: suminf.    1.94657 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  50: suminf.    1.39237 (5) obj. -29.1409 iterations 2
Cbc0038I Pass  51: suminf.    1.50919 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  52: suminf.    4.09063 (11) obj. -29.1409 iterations 19
Cbc0038I Pass  53: suminf.    2.21244 (8) obj. -29.1409 iterations 13
Cbc0038I Pass  54: suminf.    2.03782 (7) obj. -29.1409 iterations 13
Cbc0038I Pass  55: suminf.    1.89124 (5) obj. -29.1409 iterations 5
Cbc0038I Pass  56: suminf.    1.51816 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  57: suminf.    1.48397 (5) obj. -29.1409 iterations 8
Cbc0038I Pass  58: suminf.    1.69211 (5) obj. -29.1409 iterations 9
Cbc0038I Pass  59: suminf.    1.68115 (5) obj. -29.1409 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 97 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -20.9333 - took 0.13 seconds
Cbc0012I Integer solution of -20.933287 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 69 rows 44 columns
Cbc0031I 28 added rows had average density of 61.75
Cbc0013I At root node, 28 cuts changed objective from -50.319984 to -44.290403 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11939 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1895 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.933287 best solution, best possible -44.290403 (1.05 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 16 rows 16 columns
Cbc0038I Full problem 171 rows 99 columns, reduced to 9 rows 12 columns
Cbc0012I Integer solution of -21.21006 found by rounding after 9405 iterations and 95 nodes (1.39 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 19 rows 18 columns
Cbc0001I Search completed - best objective -21.21006000000001, took 12814 iterations and 214 nodes (1.65 seconds)
Cbc0032I Strong branching done 1590 times (24460 iterations), fathomed 29 nodes and fixed 105 variables
Cbc0035I Maximum depth 40, 921 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       1.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-88) rows, 142 (-61) columns and 2537 (-3117) elements
Clp1000I sum of infeasibilities 2.28601e-07 - average 1.95386e-09, 31 fixed columns
Coin0506I Presolve 90 (-27) rows, 111 (-31) columns and 1655 (-882) elements
Clp0006I 0  Obj 57.58974 Dual inf 9.9382297 (109)
Clp0029I End of values pass after 111 iterations
Clp0014I Perturbing problem by 0.001% of 1.3784691 - largest nonzero change 1.8140524e-05 ( 0.0011765296%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 69.138353
Clp0000I Optimal - objective value 69.138353
Coin0511I After Postsolve, objective 69.138353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 69.138353
Clp0000I Optimal - objective value 69.138353
Clp0000I Optimal - objective value 69.138353
Clp0000I Optimal - objective value 69.138353
Coin0511I After Postsolve, objective 69.138353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.13835262 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 142 columns (142 integer (142 of which binary)) and 2542 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.66998
Cbc0038I Pass   1: suminf.    2.85045 (35) obj. -42.9062 iterations 11
Cbc0038I Pass   2: suminf.    2.85045 (35) obj. -42.9062 iterations 1
Cbc0038I Pass   3: suminf.    1.33929 (19) obj. -28.4174 iterations 16
Cbc0038I Solution found of -5.17643
Cbc0038I Rounding solution of -11.4497 is better than previous of -5.17643

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 142 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -11.4497 to -14.1457 (0.04 seconds)
Cbc0038I Round again with cutoff of -18.7094
Cbc0038I Pass   4: suminf.    2.85045 (35) obj. -42.9062 iterations 0
Cbc0038I Pass   5: suminf.    2.85045 (35) obj. -42.9062 iterations 1
Cbc0038I Pass   6: suminf.    0.81787 (12) obj. -20.0846 iterations 23
Cbc0038I Pass   7: suminf.    0.48909 (4) obj. -18.7094 iterations 15
Cbc0038I Pass   8: suminf.    0.38529 (4) obj. -21.4589 iterations 1
Cbc0038I Pass   9: suminf.    0.82444 (5) obj. -18.7094 iterations 8
Cbc0038I Pass  10: suminf.    0.16667 (2) obj. -18.7933 iterations 5
Cbc0038I Pass  11: suminf.    2.11514 (16) obj. -18.7094 iterations 36
Cbc0038I Pass  12: suminf.    1.60011 (15) obj. -18.7094 iterations 12
Cbc0038I Pass  13: suminf.    0.92090 (6) obj. -18.7094 iterations 22
Cbc0038I Pass  14: suminf.    0.85381 (6) obj. -18.7094 iterations 2
Cbc0038I Pass  15: suminf.    0.98276 (3) obj. -18.7094 iterations 9
Cbc0038I Pass  16: suminf.    0.79936 (4) obj. -18.7094 iterations 7
Cbc0038I Pass  17: suminf.    0.64841 (3) obj. -18.7094 iterations 2
Cbc0038I Pass  18: suminf.    0.60599 (3) obj. -18.7094 iterations 1
Cbc0038I Pass  19: suminf.    0.79936 (4) obj. -18.7094 iterations 4
Cbc0038I Pass  20: suminf.    1.93769 (10) obj. -18.7094 iterations 27
Cbc0038I Pass  21: suminf.    1.72386 (11) obj. -18.7094 iterations 7
Cbc0038I Pass  22: suminf.    0.66168 (5) obj. -18.7094 iterations 30
Cbc0038I Pass  23: suminf.    0.66168 (5) obj. -18.7094 iterations 4
Cbc0038I Pass  24: suminf.    0.67623 (5) obj. -18.7094 iterations 6
Cbc0038I Pass  25: suminf.    0.67623 (5) obj. -18.7094 iterations 4
Cbc0038I Pass  26: suminf.    0.66168 (5) obj. -18.7094 iterations 6
Cbc0038I Pass  27: suminf.    1.47222 (12) obj. -18.7094 iterations 26
Cbc0038I Pass  28: suminf.    1.23872 (10) obj. -18.7094 iterations 6
Cbc0038I Pass  29: suminf.    0.63034 (7) obj. -18.7094 iterations 16
Cbc0038I Pass  30: suminf.    0.37577 (6) obj. -18.7094 iterations 6
Cbc0038I Pass  31: suminf.    0.54403 (5) obj. -18.7094 iterations 10
Cbc0038I Pass  32: suminf.    0.54403 (5) obj. -18.7094 iterations 0
Cbc0038I Pass  33: suminf.    2.02975 (6) obj. -18.7094 iterations 3
Cbc0038I Rounding solution of -14.3993 is better than previous of -14.1457

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 142 columns, reduced to 13 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -14.3993 to -15.4547 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.9239
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.85045 (35) obj. -42.9062 iterations 0
Cbc0038I Pass  34: suminf.    2.85045 (35) obj. -42.9062 iterations 1
Cbc0038I Pass  35: suminf.    1.11797 (11) obj. -26.9239 iterations 31
Cbc0038I Pass  36: suminf.    1.01663 (11) obj. -30.5947 iterations 1
Cbc0038I Pass  37: suminf.    0.83557 (9) obj. -26.9239 iterations 16
Cbc0038I Pass  38: suminf.    0.62540 (8) obj. -26.9239 iterations 3
Cbc0038I Pass  39: suminf.    1.91624 (7) obj. -26.9239 iterations 7
Cbc0038I Pass  40: suminf.    1.47584 (7) obj. -26.9239 iterations 1
Cbc0038I Pass  41: suminf.    1.62877 (9) obj. -26.9239 iterations 5
Cbc0038I Pass  42: suminf.    1.23019 (7) obj. -26.9239 iterations 7
Cbc0038I Pass  43: suminf.    1.36784 (6) obj. -26.9239 iterations 4
Cbc0038I Pass  44: suminf.    0.62540 (8) obj. -26.9239 iterations 4
Cbc0038I Pass  45: suminf.    1.91624 (7) obj. -26.9239 iterations 7
Cbc0038I Pass  46: suminf.    1.47584 (7) obj. -26.9239 iterations 1
Cbc0038I Pass  47: suminf.    1.62877 (9) obj. -26.9239 iterations 5
Cbc0038I Pass  48: suminf.    1.23019 (7) obj. -26.9239 iterations 7
Cbc0038I Pass  49: suminf.    1.36784 (6) obj. -26.9239 iterations 4
Cbc0038I Pass  50: suminf.    0.62540 (8) obj. -26.9239 iterations 4
Cbc0038I Pass  51: suminf.    1.91624 (7) obj. -26.9239 iterations 7
Cbc0038I Pass  52: suminf.    1.47584 (7) obj. -26.9239 iterations 1
Cbc0038I Pass  53: suminf.    1.62877 (9) obj. -26.9239 iterations 5
Cbc0038I Pass  54: suminf.    1.23019 (7) obj. -26.9239 iterations 7
Cbc0038I Pass  55: suminf.    1.36784 (6) obj. -26.9239 iterations 4
Cbc0038I Pass  56: suminf.    0.62540 (8) obj. -26.9239 iterations 4
Cbc0038I Pass  57: suminf.    1.91624 (7) obj. -26.9239 iterations 7
Cbc0038I Pass  58: suminf.    1.47584 (7) obj. -26.9239 iterations 1
Cbc0038I Pass  59: suminf.    1.62877 (9) obj. -26.9239 iterations 5
Cbc0038I Pass  60: suminf.    1.23019 (7) obj. -26.9239 iterations 7
Cbc0038I Pass  61: suminf.    1.36784 (6) obj. -26.9239 iterations 4
Cbc0038I Pass  62: suminf.    0.62540 (8) obj. -26.9239 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 142 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -15.4547 - took 0.05 seconds
Cbc0012I Integer solution of -15.45474 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 117 rows 142 columns, reduced to 5 rows 6 columns
Cbc0031I 52 added rows had average density of 66.846154
Cbc0013I At root node, 52 cuts changed objective from -59.7816 to -30.024157 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14982 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2733 row cuts average 136.5 elements, 0 column cuts (0 active)  in 0.209 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1012 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1462 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 368 row cuts average 77.3 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 118 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.45474 best solution, best possible -30.024157 (1.98 seconds)
Cbc0012I Integer solution of -16.99486 found by rounding after 5332 iterations and 1 nodes (1.98 seconds)
Cbc0012I Integer solution of -17.3534 found by DiveCoefficient after 5393 iterations and 1 nodes (1.99 seconds)
Cbc0012I Integer solution of -19.98407 found by rounding after 5395 iterations and 2 nodes (1.99 seconds)
Cbc0012I Integer solution of -20.23808 found by DiveCoefficient after 5395 iterations and 2 nodes (1.99 seconds)
Cbc0012I Integer solution of -20.907747 found by rounding after 5449 iterations and 4 nodes (2.01 seconds)
Cbc0012I Integer solution of -20.933277 found by rounding after 5591 iterations and 12 nodes (2.03 seconds)
Cbc0012I Integer solution of -20.933287 found by DiveCoefficient after 5596 iterations and 13 nodes (2.04 seconds)
Cbc0010I After 27 nodes, 6 on tree, -20.933287 best solution, best possible -29.814312 (2.69 seconds)
Cbc0038I Full problem 117 rows 142 columns, reduced to 13 rows 22 columns
Cbc0012I Integer solution of -21.21006 found by rounding after 7357 iterations and 66 nodes (2.83 seconds)
Cbc0038I Full problem 117 rows 142 columns, reduced to 33 rows 45 columns
Cbc0001I Search completed - best objective -21.21006000000001, took 8901 iterations and 128 nodes (3.13 seconds)
Cbc0032I Strong branching done 1028 times (15374 iterations), fathomed 20 nodes and fixed 32 variables
Cbc0035I Maximum depth 21, 251 variables fixed on reduced cost
Total time (CPU seconds):       2.80   (Wallclock seconds):       3.16

