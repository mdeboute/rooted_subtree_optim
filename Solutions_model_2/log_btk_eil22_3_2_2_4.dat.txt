Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 20 (-4) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 7.98473e-07 - average 2.28135e-08, 1 fixed columns
Coin0506I Presolve 31 (-4) rows, 19 (-1) columns and 92 (-10) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 81.896028
Clp0000I Optimal - objective value 81.896028
Coin0511I After Postsolve, objective 81.896028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.896028
Clp0000I Optimal - objective value 81.896028
Clp0000I Optimal - objective value 81.896028
Coin0511I After Postsolve, objective 81.896028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.89602754 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.512%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.03586
Cbc0038I Solution found of -20.6786
Cbc0038I Relaxing continuous gives -20.6786
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20.6786 to -28.1072 (0.01 seconds)
Cbc0038I Round again with cutoff of -33.1534
Cbc0038I Pass   1: suminf.    0.48291 (2) obj. -33.1534 iterations 15
Cbc0038I Pass   2: suminf.    0.77702 (2) obj. -33.1534 iterations 2
Cbc0038I Pass   3: suminf.    0.68136 (2) obj. -33.1534 iterations 1
Cbc0038I Pass   4: suminf.    0.55842 (2) obj. -33.1534 iterations 3
Cbc0038I Pass   5: suminf.    2.76297 (8) obj. -33.1534 iterations 7
Cbc0038I Pass   6: suminf.    0.55361 (3) obj. -33.1534 iterations 6
Cbc0038I Pass   7: suminf.    0.36990 (3) obj. -33.1534 iterations 4
Cbc0038I Pass   8: suminf.    0.06897 (2) obj. -36.0469 iterations 4
Cbc0038I Pass   9: suminf.    0.06897 (2) obj. -36.0469 iterations 0
Cbc0038I Pass  10: suminf.    0.68136 (2) obj. -33.1534 iterations 5
Cbc0038I Pass  11: suminf.    0.48291 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  12: suminf.    0.77702 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  13: suminf.    0.26195 (3) obj. -33.1534 iterations 6
Cbc0038I Pass  14: suminf.    0.20493 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  15: suminf.    0.36990 (3) obj. -33.1534 iterations 2
Cbc0038I Pass  16: suminf.    0.06897 (2) obj. -36.0469 iterations 4
Cbc0038I Pass  17: suminf.    0.06897 (2) obj. -36.0469 iterations 0
Cbc0038I Pass  18: suminf.    0.68136 (2) obj. -33.1534 iterations 5
Cbc0038I Pass  19: suminf.    0.48291 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  20: suminf.    0.77702 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  21: suminf.    0.54323 (2) obj. -33.1534 iterations 3
Cbc0038I Pass  22: suminf.    0.19160 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  23: suminf.    1.53294 (9) obj. -33.1534 iterations 8
Cbc0038I Pass  24: suminf.    0.61669 (6) obj. -33.1534 iterations 4
Cbc0038I Pass  25: suminf.    0.45821 (3) obj. -33.1534 iterations 3
Cbc0038I Pass  26: suminf.    0.68136 (2) obj. -33.1534 iterations 7
Cbc0038I Pass  27: suminf.    0.48291 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  28: suminf.    0.77702 (2) obj. -33.1534 iterations 4
Cbc0038I Pass  29: suminf.    0.46440 (1) obj. -33.1534 iterations 1
Cbc0038I Pass  30: suminf.    0.46440 (1) obj. -33.1534 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -28.1072 - took 0.02 seconds
Cbc0012I Integer solution of -28.10721 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 8 added rows had average density of 11.125
Cbc0013I At root node, 8 cuts changed objective from -78.567847 to -42.041785 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 597 row cuts average 3.7 elements, 3 column cuts (3 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 389 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -28.10721000000001, took 1297 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 14 times (104 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-18) rows, 31 (-13) columns and 215 (-145) elements
Clp1000I sum of infeasibilities 8.63243e-07 - average 3.08301e-08, 14 fixed columns
Coin0506I Presolve 14 (-14) rows, 17 (-14) columns and 56 (-159) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 18.143155
Clp0000I Optimal - objective value 18.143155
Coin0511I After Postsolve, objective 18.143155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0655773 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 93.706808
Clp0000I Optimal - objective value 93.706808
Clp0000I Optimal - objective value 93.706808
Coin0511I After Postsolve, objective 93.706808, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.70680806 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 38 columns (38 integer (38 of which binary)) and 257 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.758%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.85473
Cbc0038I Pass   1: suminf.    0.71614 (4) obj. -58.1547 iterations 2
Cbc0038I Pass   2: suminf.    0.71614 (4) obj. -58.1547 iterations 0
Cbc0038I Solution found of -15.6072
Cbc0038I Rounding solution of -26.6072 is better than previous of -15.6072

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -26.6072 to -28.1072 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.168
Cbc0038I Pass   3: suminf.    0.71614 (4) obj. -58.1547 iterations 0
Cbc0038I Pass   4: suminf.    0.71614 (4) obj. -58.1547 iterations 0
Cbc0038I Pass   5: suminf.    0.56338 (2) obj. -32.168 iterations 6
Cbc0038I Pass   6: suminf.    0.45817 (4) obj. -32.168 iterations 1
Cbc0038I Pass   7: suminf.    0.95549 (2) obj. -32.168 iterations 3
Cbc0038I Pass   8: suminf.    0.95549 (2) obj. -32.168 iterations 0
Cbc0038I Pass   9: suminf.    0.25010 (2) obj. -32.168 iterations 1
Cbc0038I Pass  10: suminf.    1.85164 (14) obj. -32.168 iterations 7
Cbc0038I Pass  11: suminf.    1.84175 (12) obj. -32.168 iterations 2
Cbc0038I Pass  12: suminf.    1.57093 (7) obj. -32.168 iterations 11
Cbc0038I Pass  13: suminf.    1.20978 (6) obj. -32.168 iterations 1
Cbc0038I Pass  14: suminf.    1.28467 (6) obj. -32.168 iterations 2
Cbc0038I Pass  15: suminf.    1.28467 (6) obj. -32.168 iterations 0
Cbc0038I Pass  16: suminf.    1.55407 (9) obj. -32.168 iterations 3
Cbc0038I Pass  17: suminf.    2.13147 (7) obj. -32.168 iterations 9
Cbc0038I Pass  18: suminf.    2.13147 (7) obj. -32.168 iterations 0
Cbc0038I Pass  19: suminf.    0.95048 (5) obj. -32.168 iterations 3
Cbc0038I Pass  20: suminf.    0.95048 (5) obj. -32.168 iterations 0
Cbc0038I Pass  21: suminf.    1.06138 (5) obj. -32.168 iterations 4
Cbc0038I Pass  22: suminf.    1.06138 (5) obj. -32.168 iterations 0
Cbc0038I Pass  23: suminf.    0.95048 (5) obj. -32.168 iterations 2
Cbc0038I Pass  24: suminf.    1.26010 (6) obj. -32.168 iterations 5
Cbc0038I Pass  25: suminf.    1.26010 (6) obj. -32.168 iterations 0
Cbc0038I Pass  26: suminf.    0.95048 (5) obj. -32.168 iterations 2
Cbc0038I Pass  27: suminf.    0.95048 (5) obj. -32.168 iterations 0
Cbc0038I Pass  28: suminf.    1.06138 (5) obj. -32.168 iterations 4
Cbc0038I Pass  29: suminf.    1.06138 (5) obj. -32.168 iterations 0
Cbc0038I Pass  30: suminf.    0.95048 (5) obj. -32.168 iterations 2
Cbc0038I Pass  31: suminf.    1.68931 (6) obj. -32.168 iterations 10
Cbc0038I Pass  32: suminf.    1.08305 (5) obj. -32.168 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -28.1072 - took 0.01 seconds
Cbc0012I Integer solution of -28.10721 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 38 columns, reduced to 11 rows 11 columns
Cbc0031I 14 added rows had average density of 5.7142857
Cbc0013I At root node, 113 cuts changed objective from -68.714323 to -27.600263 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 136 row cuts average 3.1 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 96 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0001I Search completed - best objective -28.10721000000001, took 61 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 20 (-4) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 7.98473e-07 - average 2.28135e-08, 1 fixed columns
Coin0506I Presolve 31 (-4) rows, 19 (-1) columns and 92 (-10) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 81.896028
Clp0000I Optimal - objective value 81.896028
Coin0511I After Postsolve, objective 81.896028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.896028
Clp0000I Optimal - objective value 81.896028
Clp0000I Optimal - objective value 81.896028
Coin0511I After Postsolve, objective 81.896028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.89602754 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.512%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.03586
Cbc0038I Solution found of -20.6786
Cbc0038I Relaxing continuous gives -20.6786
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20.6786 to -28.1072 (0.01 seconds)
Cbc0038I Round again with cutoff of -33.1534
Cbc0038I Pass   1: suminf.    0.48291 (2) obj. -33.1534 iterations 15
Cbc0038I Pass   2: suminf.    0.77702 (2) obj. -33.1534 iterations 2
Cbc0038I Pass   3: suminf.    0.68136 (2) obj. -33.1534 iterations 1
Cbc0038I Pass   4: suminf.    0.55842 (2) obj. -33.1534 iterations 3
Cbc0038I Pass   5: suminf.    2.76297 (8) obj. -33.1534 iterations 7
Cbc0038I Pass   6: suminf.    0.55361 (3) obj. -33.1534 iterations 6
Cbc0038I Pass   7: suminf.    0.36990 (3) obj. -33.1534 iterations 4
Cbc0038I Pass   8: suminf.    0.06897 (2) obj. -36.0469 iterations 4
Cbc0038I Pass   9: suminf.    0.06897 (2) obj. -36.0469 iterations 0
Cbc0038I Pass  10: suminf.    0.68136 (2) obj. -33.1534 iterations 5
Cbc0038I Pass  11: suminf.    0.48291 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  12: suminf.    0.77702 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  13: suminf.    0.26195 (3) obj. -33.1534 iterations 6
Cbc0038I Pass  14: suminf.    0.20493 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  15: suminf.    0.36990 (3) obj. -33.1534 iterations 2
Cbc0038I Pass  16: suminf.    0.06897 (2) obj. -36.0469 iterations 4
Cbc0038I Pass  17: suminf.    0.06897 (2) obj. -36.0469 iterations 0
Cbc0038I Pass  18: suminf.    0.68136 (2) obj. -33.1534 iterations 5
Cbc0038I Pass  19: suminf.    0.48291 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  20: suminf.    0.77702 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  21: suminf.    0.54323 (2) obj. -33.1534 iterations 3
Cbc0038I Pass  22: suminf.    0.19160 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  23: suminf.    1.53294 (9) obj. -33.1534 iterations 8
Cbc0038I Pass  24: suminf.    0.61669 (6) obj. -33.1534 iterations 4
Cbc0038I Pass  25: suminf.    0.45821 (3) obj. -33.1534 iterations 3
Cbc0038I Pass  26: suminf.    0.68136 (2) obj. -33.1534 iterations 7
Cbc0038I Pass  27: suminf.    0.48291 (2) obj. -33.1534 iterations 2
Cbc0038I Pass  28: suminf.    0.77702 (2) obj. -33.1534 iterations 4
Cbc0038I Pass  29: suminf.    0.46440 (1) obj. -33.1534 iterations 1
Cbc0038I Pass  30: suminf.    0.46440 (1) obj. -33.1534 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -28.1072 - took 0.02 seconds
Cbc0012I Integer solution of -28.10721 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 8 added rows had average density of 11.125
Cbc0013I At root node, 8 cuts changed objective from -78.567847 to -42.041785 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 597 row cuts average 3.7 elements, 3 column cuts (3 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 389 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -28.10721000000001, took 1297 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 14 times (104 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-19) rows, 31 (-14) columns and 215 (-146) elements
Clp1000I sum of infeasibilities 8.63243e-07 - average 3.08301e-08, 14 fixed columns
Coin0506I Presolve 14 (-14) rows, 17 (-14) columns and 56 (-159) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 18.143155
Clp0000I Optimal - objective value 18.143155
Coin0511I After Postsolve, objective 18.143155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0655773 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 93.706808
Clp0000I Optimal - objective value 93.706808
Clp0000I Optimal - objective value 93.706808
Coin0511I After Postsolve, objective 93.706808, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.70680806 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 38 columns (38 integer (38 of which binary)) and 257 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.758%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.85473
Cbc0038I Pass   1: suminf.    0.71614 (4) obj. -58.1547 iterations 2
Cbc0038I Pass   2: suminf.    0.71614 (4) obj. -58.1547 iterations 0
Cbc0038I Solution found of -15.6072
Cbc0038I Rounding solution of -26.6072 is better than previous of -15.6072

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -26.6072 to -28.1072 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.168
Cbc0038I Pass   3: suminf.    0.71614 (4) obj. -58.1547 iterations 0
Cbc0038I Pass   4: suminf.    0.71614 (4) obj. -58.1547 iterations 0
Cbc0038I Pass   5: suminf.    0.56338 (2) obj. -32.168 iterations 6
Cbc0038I Pass   6: suminf.    0.45817 (4) obj. -32.168 iterations 1
Cbc0038I Pass   7: suminf.    0.95549 (2) obj. -32.168 iterations 3
Cbc0038I Pass   8: suminf.    0.95549 (2) obj. -32.168 iterations 0
Cbc0038I Pass   9: suminf.    0.25010 (2) obj. -32.168 iterations 1
Cbc0038I Pass  10: suminf.    1.85164 (14) obj. -32.168 iterations 7
Cbc0038I Pass  11: suminf.    1.84175 (12) obj. -32.168 iterations 2
Cbc0038I Pass  12: suminf.    1.57093 (7) obj. -32.168 iterations 11
Cbc0038I Pass  13: suminf.    1.20978 (6) obj. -32.168 iterations 1
Cbc0038I Pass  14: suminf.    1.28467 (6) obj. -32.168 iterations 2
Cbc0038I Pass  15: suminf.    1.28467 (6) obj. -32.168 iterations 0
Cbc0038I Pass  16: suminf.    1.55407 (9) obj. -32.168 iterations 3
Cbc0038I Pass  17: suminf.    2.13147 (7) obj. -32.168 iterations 9
Cbc0038I Pass  18: suminf.    2.13147 (7) obj. -32.168 iterations 0
Cbc0038I Pass  19: suminf.    0.95048 (5) obj. -32.168 iterations 3
Cbc0038I Pass  20: suminf.    0.95048 (5) obj. -32.168 iterations 0
Cbc0038I Pass  21: suminf.    1.06138 (5) obj. -32.168 iterations 4
Cbc0038I Pass  22: suminf.    1.06138 (5) obj. -32.168 iterations 0
Cbc0038I Pass  23: suminf.    0.95048 (5) obj. -32.168 iterations 2
Cbc0038I Pass  24: suminf.    1.26010 (6) obj. -32.168 iterations 5
Cbc0038I Pass  25: suminf.    1.26010 (6) obj. -32.168 iterations 0
Cbc0038I Pass  26: suminf.    0.95048 (5) obj. -32.168 iterations 2
Cbc0038I Pass  27: suminf.    0.95048 (5) obj. -32.168 iterations 0
Cbc0038I Pass  28: suminf.    1.06138 (5) obj. -32.168 iterations 4
Cbc0038I Pass  29: suminf.    1.06138 (5) obj. -32.168 iterations 0
Cbc0038I Pass  30: suminf.    0.95048 (5) obj. -32.168 iterations 2
Cbc0038I Pass  31: suminf.    1.68931 (6) obj. -32.168 iterations 10
Cbc0038I Pass  32: suminf.    1.08305 (5) obj. -32.168 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -28.1072 - took 0.01 seconds
Cbc0012I Integer solution of -28.10721 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 38 columns, reduced to 11 rows 11 columns
Cbc0031I 14 added rows had average density of 5.7142857
Cbc0013I At root node, 113 cuts changed objective from -68.714323 to -27.600263 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 136 row cuts average 3.1 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 96 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0001I Search completed - best objective -28.10721000000001, took 61 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.14

