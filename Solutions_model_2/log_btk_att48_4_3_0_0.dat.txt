Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 45 (-5) columns and 252 (-33) elements
Clp1000I sum of infeasibilities 1.03916e-05 - average 1.22254e-07, 7 fixed columns
Coin0506I Presolve 50 (-35) rows, 31 (-14) columns and 155 (-97) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 2883.0249
Clp0000I Optimal - objective value 2883.0249
Coin0511I After Postsolve, objective 2883.0249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2883.0249
Clp0000I Optimal - objective value 2883.0249
Clp0000I Optimal - objective value 2883.0249
Coin0511I After Postsolve, objective 2883.0249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2883.024867 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 45 columns (44 integer (44 of which binary)) and 252 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.027%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.5562
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -322.695 iterations 37
Cbc0038I Solution found of -322.695
Cbc0038I Relaxing continuous gives -322.695
Cbc0038I Rounding solution of -1257.01 is better than previous of -322.695

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 45 columns, reduced to 49 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1257.01 to -1631.93 (0.04 seconds)
Cbc0038I Round again with cutoff of -1757.04
Cbc0038I Pass   2: suminf.    2.19884 (6) obj. -1757.04 iterations 7
Cbc0038I Pass   3: suminf.    2.19884 (6) obj. -1757.04 iterations 0
Cbc0038I Pass   4: suminf.    0.49690 (3) obj. -1757.04 iterations 11
Cbc0038I Pass   5: suminf.    0.31790 (2) obj. -1757.04 iterations 1
Cbc0038I Pass   6: suminf.    0.59030 (3) obj. -1757.04 iterations 3
Cbc0038I Pass   7: suminf.    1.00000 (5) obj. -1757.04 iterations 8
Cbc0038I Pass   8: suminf.    0.48757 (4) obj. -1757.04 iterations 8
Cbc0038I Pass   9: suminf.    0.48757 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  10: suminf.    1.31552 (4) obj. -1757.04 iterations 6
Cbc0038I Pass  11: suminf.    0.24077 (2) obj. -1757.04 iterations 2
Cbc0038I Pass  12: suminf.    0.69796 (3) obj. -1757.04 iterations 3
Cbc0038I Pass  13: suminf.    0.62760 (2) obj. -1757.04 iterations 1
Cbc0038I Pass  14: suminf.    0.54507 (6) obj. -1757.04 iterations 15
Cbc0038I Pass  15: suminf.    0.32261 (3) obj. -1757.04 iterations 7
Cbc0038I Pass  16: suminf.    1.36761 (5) obj. -1757.04 iterations 5
Cbc0038I Pass  17: suminf.    1.00932 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  18: suminf.    1.20800 (5) obj. -1757.04 iterations 7
Cbc0038I Pass  19: suminf.    0.82980 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  20: suminf.    1.37267 (5) obj. -1757.04 iterations 3
Cbc0038I Pass  21: suminf.    1.01535 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  22: suminf.    1.00000 (4) obj. -1757.04 iterations 9
Cbc0038I Pass  23: suminf.    1.00000 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  24: suminf.    2.06486 (5) obj. -1757.04 iterations 6
Cbc0038I Pass  25: suminf.    2.00363 (5) obj. -1757.04 iterations 7
Cbc0038I Pass  26: suminf.    1.13261 (5) obj. -1757.04 iterations 3
Cbc0038I Pass  27: suminf.    0.82980 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  28: suminf.    1.37267 (5) obj. -1757.04 iterations 3
Cbc0038I Pass  29: suminf.    1.01535 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  30: suminf.    1.20800 (5) obj. -1757.04 iterations 7
Cbc0038I Pass  31: suminf.    1.71095 (7) obj. -1757.04 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 45 columns, reduced to 53 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -1631.93 - took 0.06 seconds
Cbc0012I Integer solution of -1631.929 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 85 rows 45 columns, reduced to 49 rows 30 columns
Cbc0031I 15 added rows had average density of 25.533333
Cbc0013I At root node, 15 cuts changed objective from -2883.0249 to -2079.9202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4254 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1348 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 147 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1631.929, took 5073 iterations and 10 nodes (0.50 seconds)
Cbc0032I Strong branching done 224 times (3533 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-10) rows, 91 (-5) columns and 1230 (-183) elements
Clp1000I sum of infeasibilities 1.12602e-10 - average 1.27957e-12, 78 fixed columns
Coin0506I Presolve 6 (-82) rows, 13 (-78) columns and 23 (-1207) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 720.925
Clp0000I Optimal - objective value 720.925
Coin0511I After Postsolve, objective 720.925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5642239 - largest nonzero change 2.2742989e-05 ( 0.0022742989%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4472.8426
Clp0000I Optimal - objective value 4472.8426
Clp0000I Optimal - objective value 4472.8426
Coin0511I After Postsolve, objective 4472.8426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4472.84258 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 91 columns (91 integer (91 of which binary)) and 1232 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.900%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.13201
Cbc0038I Pass   1: suminf.    2.58782 (20) obj. -2335.18 iterations 19
Cbc0038I Pass   2: suminf.    2.58782 (20) obj. -2335.18 iterations 1
Cbc0038I Solution found of -1148.01
Cbc0038I Rounding solution of -1404.93 is better than previous of -1148.01

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 91 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -1404.93 to -1603.92 (0.01 seconds)
Cbc0038I Round again with cutoff of -1862.95
Cbc0038I Pass   3: suminf.    2.58782 (20) obj. -2335.18 iterations 0
Cbc0038I Pass   4: suminf.    2.58782 (20) obj. -2335.18 iterations 1
Cbc0038I Pass   5: suminf.    1.05898 (34) obj. -1862.95 iterations 27
Cbc0038I Pass   6: suminf.    1.05898 (34) obj. -1862.95 iterations 0
Cbc0038I Pass   7: suminf.    1.14766 (18) obj. -1862.95 iterations 16
Cbc0038I Pass   8: suminf.    0.94726 (8) obj. -1862.95 iterations 13
Cbc0038I Pass   9: suminf.    0.94726 (8) obj. -1862.95 iterations 0
Cbc0038I Pass  10: suminf.    0.40726 (1) obj. -1862.95 iterations 8
Cbc0038I Pass  11: suminf.    0.26829 (1) obj. -1923.68 iterations 1
Cbc0038I Pass  12: suminf.    1.65157 (7) obj. -1862.95 iterations 13
Cbc0038I Pass  13: suminf.    1.24900 (6) obj. -2112.94 iterations 4
Cbc0038I Pass  14: suminf.    0.40726 (1) obj. -1862.95 iterations 8
Cbc0038I Pass  15: suminf.    0.26829 (1) obj. -1923.68 iterations 2
Cbc0038I Pass  16: suminf.    2.39493 (13) obj. -1953.23 iterations 27
Cbc0038I Pass  17: suminf.    2.39493 (13) obj. -1953.23 iterations 3
Cbc0038I Pass  18: suminf.    0.89169 (6) obj. -1862.95 iterations 16
Cbc0038I Pass  19: suminf.    0.89169 (6) obj. -1862.95 iterations 0
Cbc0038I Pass  20: suminf.    0.70792 (5) obj. -1862.95 iterations 3
Cbc0038I Pass  21: suminf.    0.70792 (5) obj. -1862.95 iterations 0
Cbc0038I Pass  22: suminf.    0.76103 (5) obj. -1862.95 iterations 2
Cbc0038I Pass  23: suminf.    0.76103 (5) obj. -1862.95 iterations 0
Cbc0038I Pass  24: suminf.    0.70792 (5) obj. -1862.95 iterations 1
Cbc0038I Pass  25: suminf.    4.02735 (13) obj. -1862.95 iterations 26
Cbc0038I Pass  26: suminf.    3.56460 (12) obj. -1862.95 iterations 9
Cbc0038I Pass  27: suminf.    1.74761 (5) obj. -1862.95 iterations 11
Cbc0038I Pass  28: suminf.    1.20935 (3) obj. -1996.85 iterations 3
Cbc0038I Pass  29: suminf.    0.99373 (3) obj. -1862.95 iterations 3
Cbc0038I Pass  30: suminf.    0.83827 (3) obj. -1862.95 iterations 1
Cbc0038I Pass  31: suminf.    0.83827 (3) obj. -1862.95 iterations 0
Cbc0038I Pass  32: suminf.    1.31758 (3) obj. -1862.95 iterations 6
Cbc0038I Rounding solution of -1618.92 is better than previous of -1603.92

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 91 columns, reduced to 41 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -2329.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.58782 (20) obj. -2335.18 iterations 0
Cbc0038I Pass  33: suminf.    2.58782 (20) obj. -2335.18 iterations 1
Cbc0038I Pass  34: suminf.    2.21698 (34) obj. -2329.2 iterations 27
Cbc0038I Pass  35: suminf.    2.21698 (34) obj. -2329.2 iterations 0
Cbc0038I Pass  36: suminf.    1.09818 (14) obj. -2329.2 iterations 22
Cbc0038I Pass  37: suminf.    1.09818 (14) obj. -2329.2 iterations 0
Cbc0038I Pass  38: suminf.    0.57402 (3) obj. -2329.2 iterations 13
Cbc0038I Pass  39: suminf.    0.52587 (3) obj. -2340.27 iterations 2
Cbc0038I Pass  40: suminf.    1.77133 (12) obj. -2367.86 iterations 15
Cbc0038I Pass  41: suminf.    1.77133 (12) obj. -2367.86 iterations 0
Cbc0038I Pass  42: suminf.    0.94454 (5) obj. -2329.2 iterations 15
Cbc0038I Pass  43: suminf.    0.66873 (4) obj. -2383.99 iterations 4
Cbc0038I Pass  44: suminf.    0.91891 (4) obj. -2329.2 iterations 2
Cbc0038I Pass  45: suminf.    1.83209 (10) obj. -2329.2 iterations 17
Cbc0038I Pass  46: suminf.    1.81505 (10) obj. -2333.44 iterations 2
Cbc0038I Pass  47: suminf.    1.02143 (5) obj. -2329.2 iterations 10
Cbc0038I Pass  48: suminf.    0.66873 (4) obj. -2379.99 iterations 2
Cbc0038I Pass  49: suminf.    0.90064 (4) obj. -2329.2 iterations 2
Cbc0038I Pass  50: suminf.    2.32947 (12) obj. -2329.2 iterations 12
Cbc0038I Pass  51: suminf.    1.16289 (9) obj. -2329.2 iterations 3
Cbc0038I Pass  52: suminf.    1.05156 (7) obj. -2348.54 iterations 2
Cbc0038I Pass  53: suminf.    0.76366 (4) obj. -2329.2 iterations 7
Cbc0038I Pass  54: suminf.    0.66873 (4) obj. -2349.99 iterations 3
Cbc0038I Pass  55: suminf.    3.52843 (17) obj. -2329.2 iterations 19
Cbc0038I Pass  56: suminf.    3.52843 (17) obj. -2329.2 iterations 3
Cbc0038I Pass  57: suminf.    0.88694 (4) obj. -2329.2 iterations 16
Cbc0038I Pass  58: suminf.    0.86894 (4) obj. -2333.14 iterations 2
Cbc0038I Pass  59: suminf.    2.48614 (11) obj. -2329.2 iterations 10
Cbc0038I Pass  60: suminf.    1.49645 (9) obj. -2501.17 iterations 3
Cbc0038I Pass  61: suminf.    1.02143 (5) obj. -2329.2 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 91 columns, reduced to 36 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1618.92 - took 0.04 seconds
Cbc0012I Integer solution of -1618.925 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 91 columns, reduced to 0 rows 0 columns
Cbc0031I 47 added rows had average density of 10.914894
Cbc0013I At root node, 47 cuts changed objective from -4194.1805 to -1642.2271 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1051 row cuts average 4.5 elements, 11 column cuts (11 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 55 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0016I Integer solution of -1631.929 found by strong branching after 227 iterations and 0 nodes (0.25 seconds)
Cbc0010I After 0 nodes, 1 on tree, -1631.929 best solution, best possible -1641.3851 (0.25 seconds)
Cbc0001I Search completed - best objective -1631.929, took 454 iterations and 8 nodes (0.55 seconds)
Cbc0032I Strong branching done 174 times (1519 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 45 (-5) columns and 252 (-33) elements
Clp1000I sum of infeasibilities 1.03916e-05 - average 1.22254e-07, 7 fixed columns
Coin0506I Presolve 50 (-35) rows, 31 (-14) columns and 155 (-97) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 2883.0249
Clp0000I Optimal - objective value 2883.0249
Coin0511I After Postsolve, objective 2883.0249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2883.0249
Clp0000I Optimal - objective value 2883.0249
Clp0000I Optimal - objective value 2883.0249
Coin0511I After Postsolve, objective 2883.0249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2883.024867 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 45 columns (44 integer (44 of which binary)) and 252 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.027%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.5562
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -322.695 iterations 37
Cbc0038I Solution found of -322.695
Cbc0038I Relaxing continuous gives -322.695
Cbc0038I Rounding solution of -1257.01 is better than previous of -322.695

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 45 columns, reduced to 49 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1257.01 to -1631.93 (0.04 seconds)
Cbc0038I Round again with cutoff of -1757.04
Cbc0038I Pass   2: suminf.    2.19884 (6) obj. -1757.04 iterations 7
Cbc0038I Pass   3: suminf.    2.19884 (6) obj. -1757.04 iterations 0
Cbc0038I Pass   4: suminf.    0.49690 (3) obj. -1757.04 iterations 11
Cbc0038I Pass   5: suminf.    0.31790 (2) obj. -1757.04 iterations 1
Cbc0038I Pass   6: suminf.    0.59030 (3) obj. -1757.04 iterations 3
Cbc0038I Pass   7: suminf.    1.00000 (5) obj. -1757.04 iterations 8
Cbc0038I Pass   8: suminf.    0.48757 (4) obj. -1757.04 iterations 8
Cbc0038I Pass   9: suminf.    0.48757 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  10: suminf.    1.31552 (4) obj. -1757.04 iterations 6
Cbc0038I Pass  11: suminf.    0.24077 (2) obj. -1757.04 iterations 2
Cbc0038I Pass  12: suminf.    0.69796 (3) obj. -1757.04 iterations 3
Cbc0038I Pass  13: suminf.    0.62760 (2) obj. -1757.04 iterations 1
Cbc0038I Pass  14: suminf.    0.54507 (6) obj. -1757.04 iterations 15
Cbc0038I Pass  15: suminf.    0.32261 (3) obj. -1757.04 iterations 7
Cbc0038I Pass  16: suminf.    1.36761 (5) obj. -1757.04 iterations 5
Cbc0038I Pass  17: suminf.    1.00932 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  18: suminf.    1.20800 (5) obj. -1757.04 iterations 7
Cbc0038I Pass  19: suminf.    0.82980 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  20: suminf.    1.37267 (5) obj. -1757.04 iterations 3
Cbc0038I Pass  21: suminf.    1.01535 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  22: suminf.    1.00000 (4) obj. -1757.04 iterations 9
Cbc0038I Pass  23: suminf.    1.00000 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  24: suminf.    2.06486 (5) obj. -1757.04 iterations 6
Cbc0038I Pass  25: suminf.    2.00363 (5) obj. -1757.04 iterations 7
Cbc0038I Pass  26: suminf.    1.13261 (5) obj. -1757.04 iterations 3
Cbc0038I Pass  27: suminf.    0.82980 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  28: suminf.    1.37267 (5) obj. -1757.04 iterations 3
Cbc0038I Pass  29: suminf.    1.01535 (4) obj. -1757.04 iterations 1
Cbc0038I Pass  30: suminf.    1.20800 (5) obj. -1757.04 iterations 7
Cbc0038I Pass  31: suminf.    1.71095 (7) obj. -1757.04 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 45 columns, reduced to 53 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -1631.93 - took 0.06 seconds
Cbc0012I Integer solution of -1631.929 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 85 rows 45 columns, reduced to 49 rows 30 columns
Cbc0031I 15 added rows had average density of 25.533333
Cbc0013I At root node, 15 cuts changed objective from -2883.0249 to -2079.9202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4254 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1348 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 147 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1631.929, took 5073 iterations and 10 nodes (0.50 seconds)
Cbc0032I Strong branching done 224 times (3533 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 91 (-6) columns and 1230 (-184) elements
Clp1000I sum of infeasibilities 1.12602e-10 - average 1.27957e-12, 78 fixed columns
Coin0506I Presolve 6 (-82) rows, 13 (-78) columns and 23 (-1207) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 720.925
Clp0000I Optimal - objective value 720.925
Coin0511I After Postsolve, objective 720.925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5642239 - largest nonzero change 2.2742989e-05 ( 0.0022742989%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4472.8426
Clp0000I Optimal - objective value 4472.8426
Clp0000I Optimal - objective value 4472.8426
Coin0511I After Postsolve, objective 4472.8426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4472.84258 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 91 columns (91 integer (91 of which binary)) and 1232 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.900%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.13201
Cbc0038I Pass   1: suminf.    2.58782 (20) obj. -2335.18 iterations 19
Cbc0038I Pass   2: suminf.    2.58782 (20) obj. -2335.18 iterations 1
Cbc0038I Solution found of -1148.01
Cbc0038I Rounding solution of -1404.93 is better than previous of -1148.01

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 91 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -1404.93 to -1603.92 (0.02 seconds)
Cbc0038I Round again with cutoff of -1862.95
Cbc0038I Pass   3: suminf.    2.58782 (20) obj. -2335.18 iterations 0
Cbc0038I Pass   4: suminf.    2.58782 (20) obj. -2335.18 iterations 1
Cbc0038I Pass   5: suminf.    1.05898 (34) obj. -1862.95 iterations 27
Cbc0038I Pass   6: suminf.    1.05898 (34) obj. -1862.95 iterations 0
Cbc0038I Pass   7: suminf.    1.14766 (18) obj. -1862.95 iterations 16
Cbc0038I Pass   8: suminf.    0.94726 (8) obj. -1862.95 iterations 13
Cbc0038I Pass   9: suminf.    0.94726 (8) obj. -1862.95 iterations 0
Cbc0038I Pass  10: suminf.    0.40726 (1) obj. -1862.95 iterations 8
Cbc0038I Pass  11: suminf.    0.26829 (1) obj. -1923.68 iterations 1
Cbc0038I Pass  12: suminf.    1.65157 (7) obj. -1862.95 iterations 13
Cbc0038I Pass  13: suminf.    1.24900 (6) obj. -2112.94 iterations 4
Cbc0038I Pass  14: suminf.    0.40726 (1) obj. -1862.95 iterations 8
Cbc0038I Pass  15: suminf.    0.26829 (1) obj. -1923.68 iterations 2
Cbc0038I Pass  16: suminf.    2.39493 (13) obj. -1953.23 iterations 27
Cbc0038I Pass  17: suminf.    2.39493 (13) obj. -1953.23 iterations 3
Cbc0038I Pass  18: suminf.    0.89169 (6) obj. -1862.95 iterations 16
Cbc0038I Pass  19: suminf.    0.89169 (6) obj. -1862.95 iterations 0
Cbc0038I Pass  20: suminf.    0.70792 (5) obj. -1862.95 iterations 3
Cbc0038I Pass  21: suminf.    0.70792 (5) obj. -1862.95 iterations 0
Cbc0038I Pass  22: suminf.    0.76103 (5) obj. -1862.95 iterations 2
Cbc0038I Pass  23: suminf.    0.76103 (5) obj. -1862.95 iterations 0
Cbc0038I Pass  24: suminf.    0.70792 (5) obj. -1862.95 iterations 1
Cbc0038I Pass  25: suminf.    4.02735 (13) obj. -1862.95 iterations 26
Cbc0038I Pass  26: suminf.    3.56460 (12) obj. -1862.95 iterations 9
Cbc0038I Pass  27: suminf.    1.74761 (5) obj. -1862.95 iterations 11
Cbc0038I Pass  28: suminf.    1.20935 (3) obj. -1996.85 iterations 3
Cbc0038I Pass  29: suminf.    0.99373 (3) obj. -1862.95 iterations 3
Cbc0038I Pass  30: suminf.    0.83827 (3) obj. -1862.95 iterations 1
Cbc0038I Pass  31: suminf.    0.83827 (3) obj. -1862.95 iterations 0
Cbc0038I Pass  32: suminf.    1.31758 (3) obj. -1862.95 iterations 6
Cbc0038I Rounding solution of -1618.92 is better than previous of -1603.92

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 91 columns, reduced to 41 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2329.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.58782 (20) obj. -2335.18 iterations 0
Cbc0038I Pass  33: suminf.    2.58782 (20) obj. -2335.18 iterations 1
Cbc0038I Pass  34: suminf.    2.21698 (34) obj. -2329.2 iterations 27
Cbc0038I Pass  35: suminf.    2.21698 (34) obj. -2329.2 iterations 0
Cbc0038I Pass  36: suminf.    1.09818 (14) obj. -2329.2 iterations 22
Cbc0038I Pass  37: suminf.    1.09818 (14) obj. -2329.2 iterations 0
Cbc0038I Pass  38: suminf.    0.57402 (3) obj. -2329.2 iterations 13
Cbc0038I Pass  39: suminf.    0.52587 (3) obj. -2340.27 iterations 2
Cbc0038I Pass  40: suminf.    1.77133 (12) obj. -2367.86 iterations 15
Cbc0038I Pass  41: suminf.    1.77133 (12) obj. -2367.86 iterations 0
Cbc0038I Pass  42: suminf.    0.94454 (5) obj. -2329.2 iterations 15
Cbc0038I Pass  43: suminf.    0.66873 (4) obj. -2383.99 iterations 4
Cbc0038I Pass  44: suminf.    0.91891 (4) obj. -2329.2 iterations 2
Cbc0038I Pass  45: suminf.    1.83209 (10) obj. -2329.2 iterations 17
Cbc0038I Pass  46: suminf.    1.81505 (10) obj. -2333.44 iterations 2
Cbc0038I Pass  47: suminf.    1.02143 (5) obj. -2329.2 iterations 10
Cbc0038I Pass  48: suminf.    0.66873 (4) obj. -2379.99 iterations 2
Cbc0038I Pass  49: suminf.    0.90064 (4) obj. -2329.2 iterations 2
Cbc0038I Pass  50: suminf.    2.32947 (12) obj. -2329.2 iterations 12
Cbc0038I Pass  51: suminf.    1.16289 (9) obj. -2329.2 iterations 3
Cbc0038I Pass  52: suminf.    1.05156 (7) obj. -2348.54 iterations 2
Cbc0038I Pass  53: suminf.    0.76366 (4) obj. -2329.2 iterations 7
Cbc0038I Pass  54: suminf.    0.66873 (4) obj. -2349.99 iterations 3
Cbc0038I Pass  55: suminf.    3.52843 (17) obj. -2329.2 iterations 19
Cbc0038I Pass  56: suminf.    3.52843 (17) obj. -2329.2 iterations 3
Cbc0038I Pass  57: suminf.    0.88694 (4) obj. -2329.2 iterations 16
Cbc0038I Pass  58: suminf.    0.86894 (4) obj. -2333.14 iterations 2
Cbc0038I Pass  59: suminf.    2.48614 (11) obj. -2329.2 iterations 10
Cbc0038I Pass  60: suminf.    1.49645 (9) obj. -2501.17 iterations 3
Cbc0038I Pass  61: suminf.    1.02143 (5) obj. -2329.2 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 91 columns, reduced to 36 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1618.92 - took 0.04 seconds
Cbc0012I Integer solution of -1618.925 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 91 columns, reduced to 0 rows 0 columns
Cbc0031I 47 added rows had average density of 10.914894
Cbc0013I At root node, 47 cuts changed objective from -4194.1805 to -1642.2271 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1051 row cuts average 4.5 elements, 11 column cuts (11 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 55 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0016I Integer solution of -1631.929 found by strong branching after 227 iterations and 0 nodes (0.25 seconds)
Cbc0010I After 0 nodes, 1 on tree, -1631.929 best solution, best possible -1641.3851 (0.26 seconds)
Cbc0001I Search completed - best objective -1631.929, took 454 iterations and 8 nodes (0.54 seconds)
Cbc0032I Strong branching done 174 times (1519 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.54

