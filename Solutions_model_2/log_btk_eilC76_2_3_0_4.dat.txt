Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 94 (-61) rows, 53 (-25) columns and 287 (-166) elements
Clp0000I Optimal - objective value 330.69781
Coin0511I After Postsolve, objective 330.69781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 330.697805 - 22 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 94 rows, 53 columns (52 integer (52 of which binary)) and 287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.622%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.90221
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -286.723 iterations 14
Cbc0038I Solution found of -286.723
Cbc0038I Relaxing continuous gives -286.723
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 53 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -291.12
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.13479 (1) obj. -291.12 iterations 7
Cbc0038I Pass   3: suminf.    0.16667 (1) obj. -291.12 iterations 12
Cbc0038I Pass   4: suminf.    0.81167 (3) obj. -291.12 iterations 8
Cbc0038I Pass   5: suminf.    0.44664 (1) obj. -291.12 iterations 6
Cbc0038I Pass   6: suminf.    1.98435 (5) obj. -291.12 iterations 19
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -291.12 iterations 14
Cbc0038I Solution found of -291.12
Cbc0038I Relaxing continuous gives -293.626
Cbc0038I Rounding solution of -309.477 is better than previous of -293.626

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 53 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -313.721
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.17250 (1) obj. -313.721 iterations 0
Cbc0038I Pass   9: suminf.    0.16667 (1) obj. -313.721 iterations 10
Cbc0038I Pass  10: suminf.    0.29412 (3) obj. -313.721 iterations 7
Cbc0038I Pass  11: suminf.    0.16667 (1) obj. -313.721 iterations 7
Cbc0038I Pass  12: suminf.    1.03568 (3) obj. -313.721 iterations 7
Cbc0038I Pass  13: suminf.    1.46081 (7) obj. -313.721 iterations 15
Cbc0038I Pass  14: suminf.    0.26923 (2) obj. -313.721 iterations 10
Cbc0038I Pass  15: suminf.    0.53638 (2) obj. -313.721 iterations 5
Cbc0038I Pass  16: suminf.    1.02499 (4) obj. -313.721 iterations 11
Cbc0038I Pass  17: suminf.    0.26306 (1) obj. -313.721 iterations 9
Cbc0038I Pass  18: suminf.    0.45455 (1) obj. -313.721 iterations 3
Cbc0038I Pass  19: suminf.    0.28530 (1) obj. -313.721 iterations 1
Cbc0038I Pass  20: suminf.    1.25386 (6) obj. -313.721 iterations 11
Cbc0038I Pass  21: suminf.    1.12490 (9) obj. -313.721 iterations 3
Cbc0038I Pass  22: suminf.    0.99123 (3) obj. -313.721 iterations 11
Cbc0038I Pass  23: suminf.    0.99123 (3) obj. -313.721 iterations 3
Cbc0038I Pass  24: suminf.    0.64407 (2) obj. -313.721 iterations 9
Cbc0038I Pass  25: suminf.    0.64407 (2) obj. -313.721 iterations 0
Cbc0038I Pass  26: suminf.    0.13665 (2) obj. -313.721 iterations 6
Cbc0038I Pass  27: suminf.    0.13665 (2) obj. -313.721 iterations 0
Cbc0038I Pass  28: suminf.    0.45810 (2) obj. -313.721 iterations 8
Cbc0038I Pass  29: suminf.    0.13665 (2) obj. -313.721 iterations 8
Cbc0038I Pass  30: suminf.    0.64407 (2) obj. -313.721 iterations 7
Cbc0038I Pass  31: suminf.    0.64407 (2) obj. -313.721 iterations 0
Cbc0038I Pass  32: suminf.    0.13665 (2) obj. -313.721 iterations 6
Cbc0038I Pass  33: suminf.    0.49032 (3) obj. -313.721 iterations 7
Cbc0038I Pass  34: suminf.    1.44338 (7) obj. -313.721 iterations 7
Cbc0038I Pass  35: suminf.    0.80152 (3) obj. -313.721 iterations 6
Cbc0038I Pass  36: suminf.    0.13665 (2) obj. -313.721 iterations 8
Cbc0038I Pass  37: suminf.    0.64407 (2) obj. -313.721 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 53 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -309.477 - took 0.02 seconds
Cbc0012I Integer solution of -309.4772 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 94 rows 53 columns, reduced to 7 rows 8 columns
Cbc0031I 7 added rows had average density of 15
Cbc0013I At root node, 7 cuts changed objective from -330.69781 to -318.05155 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 51.4 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0001I Search completed - best objective -309.4772, took 196 iterations and 8 nodes (0.43 seconds)
Cbc0032I Strong branching done 56 times (217 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-74) rows, 90 (-62) columns and 1287 (-2016) elements
Clp1000I sum of infeasibilities 7.21231e-09 - average 9.01538e-11, 71 fixed columns
Coin0506I Presolve 15 (-65) rows, 18 (-72) columns and 61 (-1226) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 313.71592
Clp0000I Optimal - objective value 313.71592
Coin0511I After Postsolve, objective 313.71592, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.5026136 - largest nonzero change 2.3335744e-05 ( 0.0016580886%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 365.03764
Clp0000I Optimal - objective value 365.03764
Clp0000I Optimal - objective value 365.03764
Coin0511I After Postsolve, objective 365.03764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 365.0376444 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1308 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.696%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.56556
Cbc0038I Pass   1: suminf.    2.84765 (25) obj. -315.54 iterations 13
Cbc0038I Pass   2: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass   3: suminf.    0.68117 (11) obj. -273.004 iterations 12
Cbc0038I Solution found of -259.884
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -259.884 to -276.851 (0.03 seconds)
Cbc0038I Round again with cutoff of -284.991
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass   5: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass   6: suminf.    0.39570 (1) obj. -284.991 iterations 30
Cbc0038I Pass   7: suminf.    0.59091 (2) obj. -296.239 iterations 2
Cbc0038I Pass   8: suminf.    0.24216 (1) obj. -284.991 iterations 2
Cbc0038I Pass   9: suminf.    0.09091 (1) obj. -298.028 iterations 2
Cbc0038I Pass  10: suminf.    0.37554 (1) obj. -284.991 iterations 1
Cbc0038I Pass  11: suminf.    1.99207 (6) obj. -284.991 iterations 15
Cbc0038I Pass  12: suminf.    0.70300 (4) obj. -284.991 iterations 7
Cbc0038I Pass  13: suminf.    0.24823 (1) obj. -284.991 iterations 5
Cbc0038I Solution found of -297.654
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 29 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -297.654 to -300.654 (0.04 seconds)
Cbc0038I Round again with cutoff of -312.173
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  14: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass  15: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass  16: suminf.    0.75651 (5) obj. -312.173 iterations 33
Cbc0038I Pass  17: suminf.    0.73343 (4) obj. -312.173 iterations 1
Cbc0038I Pass  18: suminf.    0.97328 (3) obj. -312.173 iterations 12
Cbc0038I Pass  19: suminf.    0.15837 (2) obj. -312.173 iterations 1
Cbc0038I Pass  20: suminf.    0.17111 (3) obj. -315.552 iterations 7
Cbc0038I Pass  21: suminf.    0.17111 (3) obj. -315.552 iterations 0
Cbc0038I Pass  22: suminf.    0.15837 (2) obj. -312.173 iterations 9
Cbc0038I Pass  23: suminf.    1.38191 (19) obj. -312.173 iterations 31
Cbc0038I Pass  24: suminf.    1.06405 (9) obj. -312.173 iterations 14
Cbc0038I Pass  25: suminf.    0.68345 (8) obj. -312.173 iterations 24
Cbc0038I Pass  26: suminf.    0.68345 (8) obj. -312.173 iterations 4
Cbc0038I Pass  27: suminf.    1.74291 (9) obj. -312.173 iterations 12
Cbc0038I Pass  28: suminf.    1.74291 (9) obj. -312.173 iterations 0
Cbc0038I Pass  29: suminf.    2.16762 (6) obj. -312.173 iterations 8
Cbc0038I Pass  30: suminf.    2.16762 (6) obj. -312.173 iterations 1
Cbc0038I Pass  31: suminf.    1.26550 (10) obj. -312.173 iterations 7
Cbc0038I Pass  32: suminf.    0.75899 (4) obj. -312.173 iterations 5
Cbc0038I Pass  33: suminf.    0.75899 (4) obj. -312.173 iterations 1
Cbc0038I Pass  34: suminf.    1.72431 (10) obj. -312.173 iterations 6
Cbc0038I Pass  35: suminf.    2.16762 (6) obj. -312.173 iterations 8
Cbc0038I Pass  36: suminf.    2.16762 (6) obj. -312.173 iterations 2
Cbc0038I Pass  37: suminf.    1.26550 (10) obj. -312.173 iterations 8
Cbc0038I Pass  38: suminf.    0.75899 (4) obj. -312.173 iterations 5
Cbc0038I Pass  39: suminf.    0.75899 (4) obj. -312.173 iterations 1
Cbc0038I Pass  40: suminf.    1.72431 (10) obj. -312.173 iterations 6
Cbc0038I Pass  41: suminf.    2.16762 (6) obj. -312.173 iterations 9
Cbc0038I Pass  42: suminf.    2.16762 (6) obj. -312.173 iterations 1
Cbc0038I Pass  43: suminf.    1.26550 (10) obj. -312.173 iterations 7
Cbc0038I Rounding solution of -309.477 is better than previous of -300.654

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 33 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -325.996
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  43: suminf.    2.94244 (24) obj. -325.996 iterations 4
Cbc0038I Pass  44: suminf.    2.94244 (24) obj. -325.996 iterations 0
Cbc0038I Pass  45: suminf.    0.84531 (6) obj. -325.996 iterations 31
Cbc0038I Pass  46: suminf.    0.84531 (6) obj. -325.996 iterations 0
Cbc0038I Pass  47: suminf.    1.24309 (7) obj. -325.996 iterations 7
Cbc0038I Pass  48: suminf.    0.62032 (2) obj. -326.479 iterations 6
Cbc0038I Pass  49: suminf.    0.60954 (2) obj. -325.996 iterations 1
Cbc0038I Pass  50: suminf.    0.77072 (3) obj. -325.996 iterations 6
Cbc0038I Pass  51: suminf.    1.16122 (6) obj. -325.996 iterations 11
Cbc0038I Pass  52: suminf.    1.16122 (6) obj. -325.996 iterations 1
Cbc0038I Pass  53: suminf.    2.18026 (7) obj. -325.996 iterations 10
Cbc0038I Pass  54: suminf.    2.13915 (8) obj. -325.996 iterations 6
Cbc0038I Pass  55: suminf.    2.13915 (8) obj. -325.996 iterations 0
Cbc0038I Pass  56: suminf.    2.20846 (6) obj. -325.996 iterations 9
Cbc0038I Pass  57: suminf.    1.85092 (10) obj. -325.996 iterations 2
Cbc0038I Pass  58: suminf.    2.25199 (6) obj. -325.996 iterations 7
Cbc0038I Pass  59: suminf.    1.49944 (12) obj. -325.996 iterations 11
Cbc0038I Pass  60: suminf.    1.37911 (12) obj. -325.996 iterations 3
Cbc0038I Pass  61: suminf.    2.69363 (12) obj. -325.996 iterations 11
Cbc0038I Pass  62: suminf.    2.69363 (12) obj. -325.996 iterations 0
Cbc0038I Pass  63: suminf.    2.15367 (8) obj. -325.996 iterations 10
Cbc0038I Pass  64: suminf.    2.01307 (11) obj. -325.996 iterations 3
Cbc0038I Pass  65: suminf.    2.15367 (7) obj. -325.996 iterations 6
Cbc0038I Pass  66: suminf.    2.64469 (13) obj. -325.996 iterations 14
Cbc0038I Pass  67: suminf.    2.48175 (14) obj. -325.996 iterations 6
Cbc0038I Pass  68: suminf.    2.48174 (10) obj. -325.996 iterations 23
Cbc0038I Pass  69: suminf.    1.98026 (11) obj. -325.996 iterations 2
Cbc0038I Pass  70: suminf.    2.23198 (10) obj. -325.996 iterations 9
Cbc0038I Pass  71: suminf.    2.23198 (10) obj. -325.996 iterations 1
Cbc0038I Pass  72: suminf.    2.23973 (10) obj. -325.996 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -309.477 - took 0.05 seconds
Cbc0012I Integer solution of -309.4772 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 95 columns, reduced to 8 rows 9 columns
Cbc0031I 19 added rows had average density of 10.631579
Cbc0013I At root node, 19 cuts changed objective from -358.24857 to -317.44656 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 523 row cuts average 9.1 elements, 17 column cuts (17 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 30.3 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -309.4772 best solution, best possible -317.44656 (0.43 seconds)
Cbc0001I Search completed - best objective -309.4772, took 558 iterations and 10 nodes (0.83 seconds)
Cbc0032I Strong branching done 136 times (1079 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.84

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 94 (-61) rows, 53 (-25) columns and 287 (-166) elements
Clp0000I Optimal - objective value 330.69781
Coin0511I After Postsolve, objective 330.69781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 330.697805 - 22 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 94 rows, 53 columns (52 integer (52 of which binary)) and 287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.622%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.90221
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -286.723 iterations 14
Cbc0038I Solution found of -286.723
Cbc0038I Relaxing continuous gives -286.723
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 53 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -291.12
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.13479 (1) obj. -291.12 iterations 7
Cbc0038I Pass   3: suminf.    0.16667 (1) obj. -291.12 iterations 12
Cbc0038I Pass   4: suminf.    0.81167 (3) obj. -291.12 iterations 8
Cbc0038I Pass   5: suminf.    0.44664 (1) obj. -291.12 iterations 6
Cbc0038I Pass   6: suminf.    1.98435 (5) obj. -291.12 iterations 19
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -291.12 iterations 14
Cbc0038I Solution found of -291.12
Cbc0038I Relaxing continuous gives -293.626
Cbc0038I Rounding solution of -309.477 is better than previous of -293.626

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 53 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -313.721
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.17250 (1) obj. -313.721 iterations 0
Cbc0038I Pass   9: suminf.    0.16667 (1) obj. -313.721 iterations 10
Cbc0038I Pass  10: suminf.    0.29412 (3) obj. -313.721 iterations 7
Cbc0038I Pass  11: suminf.    0.16667 (1) obj. -313.721 iterations 7
Cbc0038I Pass  12: suminf.    1.03568 (3) obj. -313.721 iterations 7
Cbc0038I Pass  13: suminf.    1.46081 (7) obj. -313.721 iterations 15
Cbc0038I Pass  14: suminf.    0.26923 (2) obj. -313.721 iterations 10
Cbc0038I Pass  15: suminf.    0.53638 (2) obj. -313.721 iterations 5
Cbc0038I Pass  16: suminf.    1.02499 (4) obj. -313.721 iterations 11
Cbc0038I Pass  17: suminf.    0.26306 (1) obj. -313.721 iterations 9
Cbc0038I Pass  18: suminf.    0.45455 (1) obj. -313.721 iterations 3
Cbc0038I Pass  19: suminf.    0.28530 (1) obj. -313.721 iterations 1
Cbc0038I Pass  20: suminf.    1.25386 (6) obj. -313.721 iterations 11
Cbc0038I Pass  21: suminf.    1.12490 (9) obj. -313.721 iterations 3
Cbc0038I Pass  22: suminf.    0.99123 (3) obj. -313.721 iterations 11
Cbc0038I Pass  23: suminf.    0.99123 (3) obj. -313.721 iterations 3
Cbc0038I Pass  24: suminf.    0.64407 (2) obj. -313.721 iterations 9
Cbc0038I Pass  25: suminf.    0.64407 (2) obj. -313.721 iterations 0
Cbc0038I Pass  26: suminf.    0.13665 (2) obj. -313.721 iterations 6
Cbc0038I Pass  27: suminf.    0.13665 (2) obj. -313.721 iterations 0
Cbc0038I Pass  28: suminf.    0.45810 (2) obj. -313.721 iterations 8
Cbc0038I Pass  29: suminf.    0.13665 (2) obj. -313.721 iterations 8
Cbc0038I Pass  30: suminf.    0.64407 (2) obj. -313.721 iterations 7
Cbc0038I Pass  31: suminf.    0.64407 (2) obj. -313.721 iterations 0
Cbc0038I Pass  32: suminf.    0.13665 (2) obj. -313.721 iterations 6
Cbc0038I Pass  33: suminf.    0.49032 (3) obj. -313.721 iterations 7
Cbc0038I Pass  34: suminf.    1.44338 (7) obj. -313.721 iterations 7
Cbc0038I Pass  35: suminf.    0.80152 (3) obj. -313.721 iterations 6
Cbc0038I Pass  36: suminf.    0.13665 (2) obj. -313.721 iterations 8
Cbc0038I Pass  37: suminf.    0.64407 (2) obj. -313.721 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 53 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -309.477 - took 0.02 seconds
Cbc0012I Integer solution of -309.4772 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 94 rows 53 columns, reduced to 7 rows 8 columns
Cbc0031I 7 added rows had average density of 15
Cbc0013I At root node, 7 cuts changed objective from -330.69781 to -318.05155 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 51.4 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0001I Search completed - best objective -309.4772, took 196 iterations and 8 nodes (0.53 seconds)
Cbc0032I Strong branching done 56 times (217 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-75) rows, 90 (-63) columns and 1287 (-2017) elements
Clp1000I sum of infeasibilities 7.21231e-09 - average 9.01538e-11, 71 fixed columns
Coin0506I Presolve 15 (-65) rows, 18 (-72) columns and 61 (-1226) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 313.71592
Clp0000I Optimal - objective value 313.71592
Coin0511I After Postsolve, objective 313.71592, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.5026136 - largest nonzero change 2.3335744e-05 ( 0.0016580886%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 365.03764
Clp0000I Optimal - objective value 365.03764
Clp0000I Optimal - objective value 365.03764
Coin0511I After Postsolve, objective 365.03764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 365.0376444 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1308 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.696%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.56556
Cbc0038I Pass   1: suminf.    2.84765 (25) obj. -315.54 iterations 13
Cbc0038I Pass   2: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass   3: suminf.    0.68117 (11) obj. -273.004 iterations 12
Cbc0038I Solution found of -259.884
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -259.884 to -276.851 (0.03 seconds)
Cbc0038I Round again with cutoff of -284.991
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass   5: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass   6: suminf.    0.39570 (1) obj. -284.991 iterations 30
Cbc0038I Pass   7: suminf.    0.59091 (2) obj. -296.239 iterations 2
Cbc0038I Pass   8: suminf.    0.24216 (1) obj. -284.991 iterations 2
Cbc0038I Pass   9: suminf.    0.09091 (1) obj. -298.028 iterations 2
Cbc0038I Pass  10: suminf.    0.37554 (1) obj. -284.991 iterations 1
Cbc0038I Pass  11: suminf.    1.99207 (6) obj. -284.991 iterations 15
Cbc0038I Pass  12: suminf.    0.70300 (4) obj. -284.991 iterations 7
Cbc0038I Pass  13: suminf.    0.24823 (1) obj. -284.991 iterations 5
Cbc0038I Solution found of -297.654
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 29 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -297.654 to -300.654 (0.04 seconds)
Cbc0038I Round again with cutoff of -312.173
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  14: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass  15: suminf.    2.84765 (25) obj. -315.54 iterations 0
Cbc0038I Pass  16: suminf.    0.75651 (5) obj. -312.173 iterations 33
Cbc0038I Pass  17: suminf.    0.73343 (4) obj. -312.173 iterations 1
Cbc0038I Pass  18: suminf.    0.97328 (3) obj. -312.173 iterations 12
Cbc0038I Pass  19: suminf.    0.15837 (2) obj. -312.173 iterations 1
Cbc0038I Pass  20: suminf.    0.17111 (3) obj. -315.552 iterations 7
Cbc0038I Pass  21: suminf.    0.17111 (3) obj. -315.552 iterations 0
Cbc0038I Pass  22: suminf.    0.15837 (2) obj. -312.173 iterations 9
Cbc0038I Pass  23: suminf.    1.38191 (19) obj. -312.173 iterations 31
Cbc0038I Pass  24: suminf.    1.06405 (9) obj. -312.173 iterations 14
Cbc0038I Pass  25: suminf.    0.68345 (8) obj. -312.173 iterations 24
Cbc0038I Pass  26: suminf.    0.68345 (8) obj. -312.173 iterations 4
Cbc0038I Pass  27: suminf.    1.74291 (9) obj. -312.173 iterations 12
Cbc0038I Pass  28: suminf.    1.74291 (9) obj. -312.173 iterations 0
Cbc0038I Pass  29: suminf.    2.16762 (6) obj. -312.173 iterations 8
Cbc0038I Pass  30: suminf.    2.16762 (6) obj. -312.173 iterations 1
Cbc0038I Pass  31: suminf.    1.26550 (10) obj. -312.173 iterations 7
Cbc0038I Pass  32: suminf.    0.75899 (4) obj. -312.173 iterations 5
Cbc0038I Pass  33: suminf.    0.75899 (4) obj. -312.173 iterations 1
Cbc0038I Pass  34: suminf.    1.72431 (10) obj. -312.173 iterations 6
Cbc0038I Pass  35: suminf.    2.16762 (6) obj. -312.173 iterations 8
Cbc0038I Pass  36: suminf.    2.16762 (6) obj. -312.173 iterations 2
Cbc0038I Pass  37: suminf.    1.26550 (10) obj. -312.173 iterations 8
Cbc0038I Pass  38: suminf.    0.75899 (4) obj. -312.173 iterations 5
Cbc0038I Pass  39: suminf.    0.75899 (4) obj. -312.173 iterations 1
Cbc0038I Pass  40: suminf.    1.72431 (10) obj. -312.173 iterations 6
Cbc0038I Pass  41: suminf.    2.16762 (6) obj. -312.173 iterations 9
Cbc0038I Pass  42: suminf.    2.16762 (6) obj. -312.173 iterations 1
Cbc0038I Pass  43: suminf.    1.26550 (10) obj. -312.173 iterations 7
Cbc0038I Rounding solution of -309.477 is better than previous of -300.654

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 33 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -325.996
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  43: suminf.    2.94244 (24) obj. -325.996 iterations 4
Cbc0038I Pass  44: suminf.    2.94244 (24) obj. -325.996 iterations 0
Cbc0038I Pass  45: suminf.    0.84531 (6) obj. -325.996 iterations 31
Cbc0038I Pass  46: suminf.    0.84531 (6) obj. -325.996 iterations 0
Cbc0038I Pass  47: suminf.    1.24309 (7) obj. -325.996 iterations 7
Cbc0038I Pass  48: suminf.    0.62032 (2) obj. -326.479 iterations 6
Cbc0038I Pass  49: suminf.    0.60954 (2) obj. -325.996 iterations 1
Cbc0038I Pass  50: suminf.    0.77072 (3) obj. -325.996 iterations 6
Cbc0038I Pass  51: suminf.    1.16122 (6) obj. -325.996 iterations 11
Cbc0038I Pass  52: suminf.    1.16122 (6) obj. -325.996 iterations 1
Cbc0038I Pass  53: suminf.    2.18026 (7) obj. -325.996 iterations 10
Cbc0038I Pass  54: suminf.    2.13915 (8) obj. -325.996 iterations 6
Cbc0038I Pass  55: suminf.    2.13915 (8) obj. -325.996 iterations 0
Cbc0038I Pass  56: suminf.    2.20846 (6) obj. -325.996 iterations 9
Cbc0038I Pass  57: suminf.    1.85092 (10) obj. -325.996 iterations 2
Cbc0038I Pass  58: suminf.    2.25199 (6) obj. -325.996 iterations 7
Cbc0038I Pass  59: suminf.    1.49944 (12) obj. -325.996 iterations 11
Cbc0038I Pass  60: suminf.    1.37911 (12) obj. -325.996 iterations 3
Cbc0038I Pass  61: suminf.    2.69363 (12) obj. -325.996 iterations 11
Cbc0038I Pass  62: suminf.    2.69363 (12) obj. -325.996 iterations 0
Cbc0038I Pass  63: suminf.    2.15367 (8) obj. -325.996 iterations 10
Cbc0038I Pass  64: suminf.    2.01307 (11) obj. -325.996 iterations 3
Cbc0038I Pass  65: suminf.    2.15367 (7) obj. -325.996 iterations 6
Cbc0038I Pass  66: suminf.    2.64469 (13) obj. -325.996 iterations 14
Cbc0038I Pass  67: suminf.    2.48175 (14) obj. -325.996 iterations 6
Cbc0038I Pass  68: suminf.    2.48174 (10) obj. -325.996 iterations 23
Cbc0038I Pass  69: suminf.    1.98026 (11) obj. -325.996 iterations 2
Cbc0038I Pass  70: suminf.    2.23198 (10) obj. -325.996 iterations 9
Cbc0038I Pass  71: suminf.    2.23198 (10) obj. -325.996 iterations 1
Cbc0038I Pass  72: suminf.    2.23973 (10) obj. -325.996 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -309.477 - took 0.06 seconds
Cbc0012I Integer solution of -309.4772 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 95 columns, reduced to 8 rows 9 columns
Cbc0031I 19 added rows had average density of 10.631579
Cbc0013I At root node, 19 cuts changed objective from -358.24857 to -317.44656 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 523 row cuts average 9.1 elements, 17 column cuts (17 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 30.3 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -309.4772 best solution, best possible -317.44656 (0.51 seconds)
Cbc0001I Search completed - best objective -309.4772, took 558 iterations and 10 nodes (0.95 seconds)
Cbc0032I Strong branching done 136 times (1079 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.96

