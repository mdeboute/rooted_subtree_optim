Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 72 (-6) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 9.70441e-06 - average 7.35183e-08, 7 fixed columns
Coin0506I Presolve 118 (-14) rows, 65 (-7) columns and 358 (-42) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 42.98277
Clp0000I Optimal - objective value 42.98277
Coin0511I After Postsolve, objective 42.98277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.98277
Clp0000I Optimal - objective value 42.98277
Clp0000I Optimal - objective value 42.98277
Coin0511I After Postsolve, objective 42.98277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.98277048 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 72 columns (71 integer (71 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.245%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 9.38728
Cbc0038I Solution found of -5.00758
Cbc0038I Relaxing continuous gives -12.3404
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 104 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -15.4047
Cbc0038I Pass   1: suminf.    0.89335 (50) obj. -15.4047 iterations 40
Cbc0038I Pass   2: suminf.    2.31157 (9) obj. -15.4047 iterations 46
Cbc0038I Pass   3: suminf.    0.48820 (4) obj. -15.4047 iterations 19
Cbc0038I Pass   4: suminf.    0.48800 (3) obj. -15.4047 iterations 1
Cbc0038I Pass   5: suminf.    0.58852 (3) obj. -15.4047 iterations 9
Cbc0038I Pass   6: suminf.    0.82958 (8) obj. -15.4047 iterations 9
Cbc0038I Pass   7: suminf.    1.98098 (7) obj. -15.4047 iterations 11
Cbc0038I Pass   8: suminf.    1.39161 (5) obj. -15.4047 iterations 6
Cbc0038I Pass   9: suminf.    1.39113 (5) obj. -15.4047 iterations 2
Cbc0038I Pass  10: suminf.    1.63390 (4) obj. -15.4047 iterations 10
Cbc0038I Pass  11: suminf.    0.77567 (3) obj. -15.4047 iterations 2
Cbc0038I Pass  12: suminf.    1.06349 (3) obj. -15.4047 iterations 7
Cbc0038I Pass  13: suminf.    0.77567 (3) obj. -15.4047 iterations 7
Cbc0038I Pass  14: suminf.    1.83532 (6) obj. -15.4047 iterations 20
Cbc0038I Pass  15: suminf.    1.42059 (6) obj. -15.4047 iterations 7
Cbc0038I Pass  16: suminf.    0.95702 (5) obj. -15.4047 iterations 2
Cbc0038I Pass  17: suminf.    0.89981 (4) obj. -15.4047 iterations 12
Cbc0038I Pass  18: suminf.    0.89981 (4) obj. -15.4047 iterations 0
Cbc0038I Pass  19: suminf.    1.52059 (6) obj. -15.4047 iterations 13
Cbc0038I Pass  20: suminf.    0.82600 (4) obj. -15.4047 iterations 3
Cbc0038I Pass  21: suminf.    0.82600 (4) obj. -15.4047 iterations 0
Cbc0038I Pass  22: suminf.    0.90843 (4) obj. -15.4047 iterations 2
Cbc0038I Pass  23: suminf.    0.89981 (4) obj. -15.4047 iterations 2
Cbc0038I Pass  24: suminf.    1.52059 (6) obj. -15.4047 iterations 13
Cbc0038I Pass  25: suminf.    0.82600 (4) obj. -15.4047 iterations 3
Cbc0038I Pass  26: suminf.    0.82600 (4) obj. -15.4047 iterations 0
Cbc0038I Pass  27: suminf.    0.90843 (4) obj. -15.4047 iterations 2
Cbc0038I Pass  28: suminf.    0.89981 (4) obj. -15.4047 iterations 2
Cbc0038I Pass  29: suminf.    1.52059 (6) obj. -15.4047 iterations 13
Cbc0038I Pass  30: suminf.    0.82600 (4) obj. -15.4047 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 113 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -12.3404 - took 0.12 seconds
Cbc0012I Integer solution of -12.3404 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 104 rows 57 columns
Cbc0031I 34 added rows had average density of 44.088235
Cbc0013I At root node, 34 cuts changed objective from -42.98277 to -36.5721 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14306 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2310 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 71.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.3404 best solution, best possible -36.5721 (1.01 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 82 rows 45 columns
Cbc0038I Full problem 132 rows 72 columns, reduced to 75 rows 42 columns
Cbc0001I Search completed - best objective -12.3404, took 13960 iterations and 198 nodes (1.65 seconds)
Cbc0032I Strong branching done 1892 times (25570 iterations), fathomed 26 nodes and fixed 130 variables
Cbc0035I Maximum depth 21, 509 variables fixed on reduced cost
Total time (CPU seconds):       1.60   (Wallclock seconds):       1.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 115 (-37) columns and 1896 (-1407) elements
Clp1000I sum of infeasibilities 9.92954e-08 - average 9.4567e-10, 21 fixed columns
Coin0506I Presolve 89 (-16) rows, 94 (-21) columns and 1268 (-628) elements
Clp0006I 0  Obj 39.942038 Dual inf 5.0736154 (91)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.8126835 - largest nonzero change 2.3170072e-05 ( 0.0016580886%) - largest zero change 2.9122649e-05
Clp0000I Optimal - objective value 54.454412
Clp0000I Optimal - objective value 54.454412
Coin0511I After Postsolve, objective 54.454412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.454412
Clp0000I Optimal - objective value 54.454412
Clp0000I Optimal - objective value 54.454412
Clp0000I Optimal - objective value 54.454412
Coin0511I After Postsolve, objective 54.454412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.45441174 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 115 columns (115 integer (115 of which binary)) and 1900 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.655%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 7.50303
Cbc0038I Pass   1: suminf.    3.09641 (33) obj. -44.2144 iterations 24
Cbc0038I Pass   2: suminf.    3.09641 (33) obj. -44.2144 iterations 1
Cbc0038I Pass   3: suminf.    0.50034 (10) obj. -4.13934 iterations 23
Cbc0038I Solution found of 10.0816
Cbc0038I Rounding solution of 6.15597 is better than previous of 10.0816

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 115 columns, reduced to 30 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 6.15597 to -11.0089 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.7108
Cbc0038I Pass   4: suminf.    3.09641 (33) obj. -44.2144 iterations 0
Cbc0038I Pass   5: suminf.    3.09641 (33) obj. -44.2144 iterations 1
Cbc0038I Pass   6: suminf.    0.72407 (7) obj. -14.7108 iterations 31
Cbc0038I Pass   7: suminf.    0.63655 (8) obj. -15.1069 iterations 3
Cbc0038I Pass   8: suminf.    1.38076 (8) obj. -14.7108 iterations 30
Cbc0038I Pass   9: suminf.    1.33785 (9) obj. -14.7108 iterations 7
Cbc0038I Pass  10: suminf.    3.04576 (18) obj. -14.7108 iterations 19
Cbc0038I Pass  11: suminf.    3.00213 (17) obj. -14.7108 iterations 10
Cbc0038I Pass  12: suminf.    2.76277 (12) obj. -14.7108 iterations 20
Cbc0038I Pass  13: suminf.    2.24235 (12) obj. -14.7108 iterations 11
Cbc0038I Pass  14: suminf.    2.76277 (12) obj. -14.7108 iterations 12
Cbc0038I Pass  15: suminf.    2.25327 (12) obj. -14.7108 iterations 7
Cbc0038I Pass  16: suminf.    2.76277 (12) obj. -14.7108 iterations 20
Cbc0038I Pass  17: suminf.    2.29420 (14) obj. -14.7108 iterations 26
Cbc0038I Pass  18: suminf.    2.19608 (15) obj. -14.7108 iterations 7
Cbc0038I Pass  19: suminf.    1.51713 (12) obj. -14.7108 iterations 3
Cbc0038I Pass  20: suminf.    1.43597 (12) obj. -15.3903 iterations 1
Cbc0038I Pass  21: suminf.    2.08580 (11) obj. -14.7108 iterations 20
Cbc0038I Pass  22: suminf.    1.60137 (12) obj. -14.7108 iterations 8
Cbc0038I Pass  23: suminf.    2.84031 (13) obj. -14.7108 iterations 10
Cbc0038I Pass  24: suminf.    2.69102 (12) obj. -14.7108 iterations 6
Cbc0038I Pass  25: suminf.    1.17067 (11) obj. -14.7108 iterations 5
Cbc0038I Pass  26: suminf.    1.17067 (11) obj. -14.7108 iterations 0
Cbc0038I Pass  27: suminf.    2.84719 (13) obj. -14.7108 iterations 12
Cbc0038I Pass  28: suminf.    2.69102 (12) obj. -14.7108 iterations 10
Cbc0038I Pass  29: suminf.    3.22020 (21) obj. -14.7108 iterations 37
Cbc0038I Pass  30: suminf.    1.42829 (18) obj. -14.7108 iterations 20
Cbc0038I Pass  31: suminf.    1.42829 (18) obj. -14.7108 iterations 0
Cbc0038I Pass  32: suminf.    1.37073 (11) obj. -14.7108 iterations 26
Cbc0038I Pass  33: suminf.    1.37073 (11) obj. -14.7108 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 115 columns, reduced to 38 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -11.0089 - took 0.05 seconds
Cbc0012I Integer solution of -11.00893 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 105 rows 115 columns, reduced to 30 rows 32 columns
Cbc0031I 77 added rows had average density of 24.402597
Cbc0013I At root node, 77 cuts changed objective from -48.026943 to -22.320672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14849 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1283 row cuts average 107.9 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 65 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 569 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 980 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 236 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.668 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.00893 best solution, best possible -22.320672 (2.60 seconds)
Cbc0012I Integer solution of -12.23499 found by rounding after 5516 iterations and 1 nodes (2.60 seconds)
Cbc0004I Integer solution of -12.34041 found after 5561 iterations and 1 nodes (2.65 seconds)
Cbc0010I After 6 nodes, 5 on tree, -12.34041 best solution, best possible -21.912382 (3.35 seconds)
Cbc0010I After 25 nodes, 10 on tree, -12.34041 best solution, best possible -21.912382 (4.09 seconds)
Cbc0038I Full problem 105 rows 115 columns, reduced to 33 rows 40 columns
Cbc0010I After 54 nodes, 12 on tree, -12.34041 best solution, best possible -21.912382 (4.81 seconds)
Cbc0010I After 80 nodes, 12 on tree, -12.34041 best solution, best possible -21.912382 (5.53 seconds)
Cbc0038I Full problem 105 rows 115 columns, reduced to 24 rows 29 columns
Cbc0010I After 108 nodes, 9 on tree, -12.34041 best solution, best possible -21.912382 (6.27 seconds)
Cbc0010I After 130 nodes, 5 on tree, -12.34041 best solution, best possible -21.912382 (7.03 seconds)
Cbc0010I After 151 nodes, 10 on tree, -12.34041 best solution, best possible -21.912382 (7.77 seconds)
Cbc0010I After 186 nodes, 5 on tree, -12.34041 best solution, best possible -21.912382 (8.55 seconds)
Cbc0001I Search completed - best objective -12.34041, took 14078 iterations and 212 nodes (8.98 seconds)
Cbc0032I Strong branching done 2284 times (42611 iterations), fathomed 16 nodes and fixed 17 variables
Cbc0035I Maximum depth 25, 255 variables fixed on reduced cost
Total time (CPU seconds):       6.37   (Wallclock seconds):       8.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 72 (-6) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 9.70441e-06 - average 7.35183e-08, 7 fixed columns
Coin0506I Presolve 118 (-14) rows, 65 (-7) columns and 358 (-42) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 42.98277
Clp0000I Optimal - objective value 42.98277
Coin0511I After Postsolve, objective 42.98277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.98277
Clp0000I Optimal - objective value 42.98277
Clp0000I Optimal - objective value 42.98277
Coin0511I After Postsolve, objective 42.98277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.98277048 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 72 columns (71 integer (71 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.245%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 9.38728
Cbc0038I Solution found of -5.00758
Cbc0038I Relaxing continuous gives -12.3404
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 104 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -15.4047
Cbc0038I Pass   1: suminf.    0.89335 (50) obj. -15.4047 iterations 40
Cbc0038I Pass   2: suminf.    2.31157 (9) obj. -15.4047 iterations 46
Cbc0038I Pass   3: suminf.    0.48820 (4) obj. -15.4047 iterations 19
Cbc0038I Pass   4: suminf.    0.48800 (3) obj. -15.4047 iterations 1
Cbc0038I Pass   5: suminf.    0.58852 (3) obj. -15.4047 iterations 9
Cbc0038I Pass   6: suminf.    0.82958 (8) obj. -15.4047 iterations 9
Cbc0038I Pass   7: suminf.    1.98098 (7) obj. -15.4047 iterations 11
Cbc0038I Pass   8: suminf.    1.39161 (5) obj. -15.4047 iterations 6
Cbc0038I Pass   9: suminf.    1.39113 (5) obj. -15.4047 iterations 2
Cbc0038I Pass  10: suminf.    1.63390 (4) obj. -15.4047 iterations 10
Cbc0038I Pass  11: suminf.    0.77567 (3) obj. -15.4047 iterations 2
Cbc0038I Pass  12: suminf.    1.06349 (3) obj. -15.4047 iterations 7
Cbc0038I Pass  13: suminf.    0.77567 (3) obj. -15.4047 iterations 7
Cbc0038I Pass  14: suminf.    1.83532 (6) obj. -15.4047 iterations 20
Cbc0038I Pass  15: suminf.    1.42059 (6) obj. -15.4047 iterations 7
Cbc0038I Pass  16: suminf.    0.95702 (5) obj. -15.4047 iterations 2
Cbc0038I Pass  17: suminf.    0.89981 (4) obj. -15.4047 iterations 12
Cbc0038I Pass  18: suminf.    0.89981 (4) obj. -15.4047 iterations 0
Cbc0038I Pass  19: suminf.    1.52059 (6) obj. -15.4047 iterations 13
Cbc0038I Pass  20: suminf.    0.82600 (4) obj. -15.4047 iterations 3
Cbc0038I Pass  21: suminf.    0.82600 (4) obj. -15.4047 iterations 0
Cbc0038I Pass  22: suminf.    0.90843 (4) obj. -15.4047 iterations 2
Cbc0038I Pass  23: suminf.    0.89981 (4) obj. -15.4047 iterations 2
Cbc0038I Pass  24: suminf.    1.52059 (6) obj. -15.4047 iterations 13
Cbc0038I Pass  25: suminf.    0.82600 (4) obj. -15.4047 iterations 3
Cbc0038I Pass  26: suminf.    0.82600 (4) obj. -15.4047 iterations 0
Cbc0038I Pass  27: suminf.    0.90843 (4) obj. -15.4047 iterations 2
Cbc0038I Pass  28: suminf.    0.89981 (4) obj. -15.4047 iterations 2
Cbc0038I Pass  29: suminf.    1.52059 (6) obj. -15.4047 iterations 13
Cbc0038I Pass  30: suminf.    0.82600 (4) obj. -15.4047 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 113 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -12.3404 - took 0.12 seconds
Cbc0012I Integer solution of -12.3404 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 104 rows 57 columns
Cbc0031I 34 added rows had average density of 44.088235
Cbc0013I At root node, 34 cuts changed objective from -42.98277 to -36.5721 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14306 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2310 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 71.8 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.3404 best solution, best possible -36.5721 (1.25 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 82 rows 45 columns
Cbc0038I Full problem 132 rows 72 columns, reduced to 75 rows 42 columns
Cbc0001I Search completed - best objective -12.3404, took 13960 iterations and 198 nodes (1.93 seconds)
Cbc0032I Strong branching done 1892 times (25570 iterations), fathomed 26 nodes and fixed 130 variables
Cbc0035I Maximum depth 21, 509 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       1.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 115 (-38) columns and 1896 (-1408) elements
Clp1000I sum of infeasibilities 9.92954e-08 - average 9.4567e-10, 21 fixed columns
Coin0506I Presolve 89 (-16) rows, 94 (-21) columns and 1268 (-628) elements
Clp0006I 0  Obj 39.942038 Dual inf 5.0736154 (91)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.8126835 - largest nonzero change 2.3170072e-05 ( 0.0016580886%) - largest zero change 2.9122649e-05
Clp0000I Optimal - objective value 54.454412
Clp0000I Optimal - objective value 54.454412
Coin0511I After Postsolve, objective 54.454412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.454412
Clp0000I Optimal - objective value 54.454412
Clp0000I Optimal - objective value 54.454412
Clp0000I Optimal - objective value 54.454412
Coin0511I After Postsolve, objective 54.454412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.45441174 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 115 columns (115 integer (115 of which binary)) and 1900 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.655%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 7.50303
Cbc0038I Pass   1: suminf.    3.09641 (33) obj. -44.2144 iterations 24
Cbc0038I Pass   2: suminf.    3.09641 (33) obj. -44.2144 iterations 1
Cbc0038I Pass   3: suminf.    0.50034 (10) obj. -4.13934 iterations 23
Cbc0038I Solution found of 10.0816
Cbc0038I Rounding solution of 6.15597 is better than previous of 10.0816

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 115 columns, reduced to 30 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 6.15597 to -11.0089 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.7108
Cbc0038I Pass   4: suminf.    3.09641 (33) obj. -44.2144 iterations 0
Cbc0038I Pass   5: suminf.    3.09641 (33) obj. -44.2144 iterations 1
Cbc0038I Pass   6: suminf.    0.72407 (7) obj. -14.7108 iterations 31
Cbc0038I Pass   7: suminf.    0.63655 (8) obj. -15.1069 iterations 3
Cbc0038I Pass   8: suminf.    1.38076 (8) obj. -14.7108 iterations 30
Cbc0038I Pass   9: suminf.    1.33785 (9) obj. -14.7108 iterations 7
Cbc0038I Pass  10: suminf.    3.04576 (18) obj. -14.7108 iterations 19
Cbc0038I Pass  11: suminf.    3.00213 (17) obj. -14.7108 iterations 10
Cbc0038I Pass  12: suminf.    2.76277 (12) obj. -14.7108 iterations 20
Cbc0038I Pass  13: suminf.    2.24235 (12) obj. -14.7108 iterations 11
Cbc0038I Pass  14: suminf.    2.76277 (12) obj. -14.7108 iterations 12
Cbc0038I Pass  15: suminf.    2.25327 (12) obj. -14.7108 iterations 7
Cbc0038I Pass  16: suminf.    2.76277 (12) obj. -14.7108 iterations 20
Cbc0038I Pass  17: suminf.    2.29420 (14) obj. -14.7108 iterations 26
Cbc0038I Pass  18: suminf.    2.19608 (15) obj. -14.7108 iterations 7
Cbc0038I Pass  19: suminf.    1.51713 (12) obj. -14.7108 iterations 3
Cbc0038I Pass  20: suminf.    1.43597 (12) obj. -15.3903 iterations 1
Cbc0038I Pass  21: suminf.    2.08580 (11) obj. -14.7108 iterations 20
Cbc0038I Pass  22: suminf.    1.60137 (12) obj. -14.7108 iterations 8
Cbc0038I Pass  23: suminf.    2.84031 (13) obj. -14.7108 iterations 10
Cbc0038I Pass  24: suminf.    2.69102 (12) obj. -14.7108 iterations 6
Cbc0038I Pass  25: suminf.    1.17067 (11) obj. -14.7108 iterations 5
Cbc0038I Pass  26: suminf.    1.17067 (11) obj. -14.7108 iterations 0
Cbc0038I Pass  27: suminf.    2.84719 (13) obj. -14.7108 iterations 12
Cbc0038I Pass  28: suminf.    2.69102 (12) obj. -14.7108 iterations 10
Cbc0038I Pass  29: suminf.    3.22020 (21) obj. -14.7108 iterations 37
Cbc0038I Pass  30: suminf.    1.42829 (18) obj. -14.7108 iterations 20
Cbc0038I Pass  31: suminf.    1.42829 (18) obj. -14.7108 iterations 0
Cbc0038I Pass  32: suminf.    1.37073 (11) obj. -14.7108 iterations 26
Cbc0038I Pass  33: suminf.    1.37073 (11) obj. -14.7108 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 115 columns, reduced to 38 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -11.0089 - took 0.05 seconds
Cbc0012I Integer solution of -11.00893 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 105 rows 115 columns, reduced to 30 rows 32 columns
Cbc0031I 77 added rows had average density of 24.402597
Cbc0013I At root node, 77 cuts changed objective from -48.026943 to -22.320672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14849 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1283 row cuts average 107.9 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 65 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 569 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 980 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 236 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.701 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.00893 best solution, best possible -22.320672 (2.78 seconds)
Cbc0012I Integer solution of -12.23499 found by rounding after 5516 iterations and 1 nodes (2.78 seconds)
Cbc0004I Integer solution of -12.34041 found after 5561 iterations and 1 nodes (2.84 seconds)
Cbc0010I After 6 nodes, 5 on tree, -12.34041 best solution, best possible -21.912382 (3.58 seconds)
Cbc0010I After 25 nodes, 10 on tree, -12.34041 best solution, best possible -21.912382 (4.32 seconds)
Cbc0038I Full problem 105 rows 115 columns, reduced to 33 rows 40 columns
Cbc0010I After 53 nodes, 12 on tree, -12.34041 best solution, best possible -21.912382 (5.03 seconds)
Cbc0010I After 77 nodes, 12 on tree, -12.34041 best solution, best possible -21.912382 (5.76 seconds)
Cbc0038I Full problem 105 rows 115 columns, reduced to 24 rows 29 columns
Cbc0010I After 101 nodes, 10 on tree, -12.34041 best solution, best possible -21.912382 (6.46 seconds)
Cbc0010I After 124 nodes, 6 on tree, -12.34041 best solution, best possible -21.912382 (7.19 seconds)
Cbc0010I After 139 nodes, 6 on tree, -12.34041 best solution, best possible -21.912382 (7.91 seconds)
Cbc0010I After 160 nodes, 11 on tree, -12.34041 best solution, best possible -21.912382 (8.63 seconds)
Cbc0010I After 187 nodes, 6 on tree, -12.34041 best solution, best possible -21.912382 (9.35 seconds)
Cbc0001I Search completed - best objective -12.34041, took 14078 iterations and 212 nodes (9.79 seconds)
Cbc0032I Strong branching done 2284 times (42611 iterations), fathomed 16 nodes and fixed 17 variables
Cbc0035I Maximum depth 25, 255 variables fixed on reduced cost
Total time (CPU seconds):       6.81   (Wallclock seconds):       9.80

