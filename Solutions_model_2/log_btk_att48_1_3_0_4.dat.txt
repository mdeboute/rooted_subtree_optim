Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 65 (-34) rows, 36 (-14) columns and 163 (-122) elements
Clp0000I Optimal - objective value 23714.544
Coin0511I After Postsolve, objective 23714.544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 23714.54358 - 28 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 36 columns (35 integer (35 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.435%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19629.8 iterations 23
Cbc0038I Solution found of -19629.8
Cbc0038I Relaxing continuous gives -19629.8
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -19629.8 to -22836.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -22924.5
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.00000 (3) obj. -22924.5 iterations 6
Cbc0038I Pass   3: suminf.    1.00000 (3) obj. -22924.5 iterations 0
Cbc0038I Pass   4: suminf.    0.33985 (3) obj. -22924.5 iterations 9
Cbc0038I Pass   5: suminf.    0.17984 (2) obj. -22924.5 iterations 2
Cbc0038I Pass   6: suminf.    0.96571 (3) obj. -22924.5 iterations 7
Cbc0038I Pass   7: suminf.    0.33985 (3) obj. -22924.5 iterations 7
Cbc0038I Pass   8: suminf.    1.22852 (10) obj. -22924.5 iterations 10
Cbc0038I Pass   9: suminf.    1.02433 (3) obj. -22924.5 iterations 8
Cbc0038I Pass  10: suminf.    0.91052 (9) obj. -22924.5 iterations 8
Cbc0038I Pass  11: suminf.    0.91052 (9) obj. -22924.5 iterations 1
Cbc0038I Pass  12: suminf.    1.79758 (4) obj. -22924.5 iterations 14
Cbc0038I Pass  13: suminf.    1.79758 (4) obj. -22924.5 iterations 1
Cbc0038I Pass  14: suminf.    1.00000 (3) obj. -22924.5 iterations 14
Cbc0038I Pass  15: suminf.    1.00000 (3) obj. -22924.5 iterations 0
Cbc0038I Pass  16: suminf.    0.33985 (3) obj. -22924.5 iterations 9
Cbc0038I Pass  17: suminf.    0.17984 (2) obj. -22924.5 iterations 2
Cbc0038I Pass  18: suminf.    0.96571 (3) obj. -22924.5 iterations 6
Cbc0038I Pass  19: suminf.    0.33985 (3) obj. -22924.5 iterations 6
Cbc0038I Pass  20: suminf.    1.19197 (8) obj. -22924.5 iterations 14
Cbc0038I Pass  21: suminf.    0.10068 (3) obj. -22924.5 iterations 10
Cbc0038I Pass  22: suminf.    0.08007 (2) obj. -22924.5 iterations 4
Cbc0038I Pass  23: suminf.    1.00000 (4) obj. -22924.5 iterations 6
Cbc0038I Pass  24: suminf.    1.60842 (10) obj. -22924.5 iterations 5
Cbc0038I Pass  25: suminf.    2.15884 (16) obj. -22924.5 iterations 12
Cbc0038I Pass  26: suminf.    0.17984 (2) obj. -22924.5 iterations 16
Cbc0038I Pass  27: suminf.    0.96571 (3) obj. -22924.5 iterations 5
Cbc0038I Pass  28: suminf.    0.33985 (3) obj. -22924.5 iterations 5
Cbc0038I Pass  29: suminf.    1.00000 (8) obj. -22924.5 iterations 11
Cbc0038I Pass  30: suminf.    0.40944 (3) obj. -22924.5 iterations 8
Cbc0038I Pass  31: suminf.    3.89968 (13) obj. -22924.5 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 26 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -22836.8 - took 0.03 seconds
Cbc0012I Integer solution of -22836.77 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 65 rows 36 columns, reduced to 13 rows 11 columns
Cbc0031I 5 added rows had average density of 6.6
Cbc0013I At root node, 33 cuts changed objective from -23714.544 to -22836.77 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 81 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22836.77, took 17 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 75 (-23) rows, 80 (-16) columns and 944 (-469) elements
Clp1000I sum of infeasibilities 3.93243e-07 - average 5.24324e-09, 66 fixed columns
Coin0506I Presolve 13 (-62) rows, 14 (-66) columns and 38 (-906) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 21587.78
Clp0000I Optimal - objective value 21587.78
Coin0511I After Postsolve, objective 21587.78, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8111373 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 26089.84
Clp0000I Optimal - objective value 26089.84
Clp0000I Optimal - objective value 26089.84
Coin0511I After Postsolve, objective 26089.84, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26089.84021 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 75 rows, 80 columns (80 integer (80 of which binary)) and 948 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.104%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 14.3816
Cbc0038I Pass   1: suminf.    3.15376 (20) obj. -7368.58 iterations 36
Cbc0038I Pass   2: suminf.    3.15376 (20) obj. -7368.58 iterations 4
Cbc0038I Solution found of -6258.02
Cbc0038I Rounding solution of -6821.24 is better than previous of -6258.02

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 80 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -6821.24 to -22836.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -23053.7
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.   10.97637 (37) obj. -23053.7 iterations 16
Cbc0038I Pass   4: suminf.   10.97637 (37) obj. -23053.7 iterations 0
Cbc0038I Pass   5: suminf.    3.00180 (12) obj. -23053.7 iterations 31
Cbc0038I Pass   6: suminf.    2.82267 (12) obj. -23053.7 iterations 4
Cbc0038I Pass   7: suminf.    0.40417 (2) obj. -23053.7 iterations 25
Cbc0038I Pass   8: suminf.    0.40417 (2) obj. -23053.7 iterations 0
Cbc0038I Pass   9: suminf.    0.82744 (2) obj. -23053.7 iterations 1
Cbc0038I Pass  10: suminf.    4.23496 (12) obj. -23053.7 iterations 15
Cbc0038I Pass  11: suminf.    3.77277 (11) obj. -23053.7 iterations 13
Cbc0038I Pass  12: suminf.    3.04658 (12) obj. -23053.7 iterations 9
Cbc0038I Pass  13: suminf.    3.04658 (12) obj. -23053.7 iterations 0
Cbc0038I Pass  14: suminf.    1.49789 (4) obj. -23053.7 iterations 28
Cbc0038I Pass  15: suminf.    1.15045 (6) obj. -23053.7 iterations 6
Cbc0038I Pass  16: suminf.    1.49789 (4) obj. -23053.7 iterations 11
Cbc0038I Pass  17: suminf.    2.94008 (11) obj. -23053.7 iterations 17
Cbc0038I Pass  18: suminf.    2.68081 (7) obj. -23204.4 iterations 6
Cbc0038I Pass  19: suminf.    0.32829 (1) obj. -23053.7 iterations 14
Cbc0038I Pass  20: suminf.    0.16667 (1) obj. -23105.9 iterations 8
Cbc0038I Pass  21: suminf.    6.79172 (19) obj. -23053.7 iterations 32
Cbc0038I Pass  22: suminf.    6.04887 (28) obj. -23053.7 iterations 7
Cbc0038I Pass  23: suminf.    2.84871 (12) obj. -23053.7 iterations 29
Cbc0038I Pass  24: suminf.    1.58923 (5) obj. -23053.7 iterations 8
Cbc0038I Pass  25: suminf.    1.53386 (6) obj. -23053.7 iterations 7
Cbc0038I Pass  26: suminf.    2.71758 (7) obj. -23053.7 iterations 11
Cbc0038I Pass  27: suminf.    1.59781 (5) obj. -23053.7 iterations 1
Cbc0038I Pass  28: suminf.    1.59781 (5) obj. -23053.7 iterations 2
Cbc0038I Pass  29: suminf.    2.99835 (7) obj. -23053.7 iterations 4
Cbc0038I Pass  30: suminf.    1.58923 (5) obj. -23053.7 iterations 5
Cbc0038I Pass  31: suminf.    1.53386 (6) obj. -23053.7 iterations 8
Cbc0038I Pass  32: suminf.    2.71758 (7) obj. -23053.7 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 80 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -22836.8 - took 0.02 seconds
Cbc0012I Integer solution of -22836.77 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 75 rows 80 columns, reduced to 3 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -23877.954 to -23877.954 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -22836.77, took 24 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 65 (-34) rows, 36 (-14) columns and 163 (-122) elements
Clp0000I Optimal - objective value 23714.544
Coin0511I After Postsolve, objective 23714.544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 23714.54358 - 28 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 36 columns (35 integer (35 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.435%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19629.8 iterations 23
Cbc0038I Solution found of -19629.8
Cbc0038I Relaxing continuous gives -19629.8
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -19629.8 to -22836.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -22924.5
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.00000 (3) obj. -22924.5 iterations 6
Cbc0038I Pass   3: suminf.    1.00000 (3) obj. -22924.5 iterations 0
Cbc0038I Pass   4: suminf.    0.33985 (3) obj. -22924.5 iterations 9
Cbc0038I Pass   5: suminf.    0.17984 (2) obj. -22924.5 iterations 2
Cbc0038I Pass   6: suminf.    0.96571 (3) obj. -22924.5 iterations 7
Cbc0038I Pass   7: suminf.    0.33985 (3) obj. -22924.5 iterations 7
Cbc0038I Pass   8: suminf.    1.22852 (10) obj. -22924.5 iterations 10
Cbc0038I Pass   9: suminf.    1.02433 (3) obj. -22924.5 iterations 8
Cbc0038I Pass  10: suminf.    0.91052 (9) obj. -22924.5 iterations 8
Cbc0038I Pass  11: suminf.    0.91052 (9) obj. -22924.5 iterations 1
Cbc0038I Pass  12: suminf.    1.79758 (4) obj. -22924.5 iterations 14
Cbc0038I Pass  13: suminf.    1.79758 (4) obj. -22924.5 iterations 1
Cbc0038I Pass  14: suminf.    1.00000 (3) obj. -22924.5 iterations 14
Cbc0038I Pass  15: suminf.    1.00000 (3) obj. -22924.5 iterations 0
Cbc0038I Pass  16: suminf.    0.33985 (3) obj. -22924.5 iterations 9
Cbc0038I Pass  17: suminf.    0.17984 (2) obj. -22924.5 iterations 2
Cbc0038I Pass  18: suminf.    0.96571 (3) obj. -22924.5 iterations 6
Cbc0038I Pass  19: suminf.    0.33985 (3) obj. -22924.5 iterations 6
Cbc0038I Pass  20: suminf.    1.19197 (8) obj. -22924.5 iterations 14
Cbc0038I Pass  21: suminf.    0.10068 (3) obj. -22924.5 iterations 10
Cbc0038I Pass  22: suminf.    0.08007 (2) obj. -22924.5 iterations 4
Cbc0038I Pass  23: suminf.    1.00000 (4) obj. -22924.5 iterations 6
Cbc0038I Pass  24: suminf.    1.60842 (10) obj. -22924.5 iterations 5
Cbc0038I Pass  25: suminf.    2.15884 (16) obj. -22924.5 iterations 12
Cbc0038I Pass  26: suminf.    0.17984 (2) obj. -22924.5 iterations 16
Cbc0038I Pass  27: suminf.    0.96571 (3) obj. -22924.5 iterations 5
Cbc0038I Pass  28: suminf.    0.33985 (3) obj. -22924.5 iterations 5
Cbc0038I Pass  29: suminf.    1.00000 (8) obj. -22924.5 iterations 11
Cbc0038I Pass  30: suminf.    0.40944 (3) obj. -22924.5 iterations 8
Cbc0038I Pass  31: suminf.    3.89968 (13) obj. -22924.5 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 26 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -22836.8 - took 0.01 seconds
Cbc0012I Integer solution of -22836.77 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 65 rows 36 columns, reduced to 13 rows 11 columns
Cbc0031I 5 added rows had average density of 6.6
Cbc0013I At root node, 33 cuts changed objective from -23714.544 to -22836.77 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 81 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22836.77, took 17 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 75 (-24) rows, 80 (-17) columns and 944 (-470) elements
Clp1000I sum of infeasibilities 3.93243e-07 - average 5.24324e-09, 66 fixed columns
Coin0506I Presolve 13 (-62) rows, 14 (-66) columns and 38 (-906) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 21587.78
Clp0000I Optimal - objective value 21587.78
Coin0511I After Postsolve, objective 21587.78, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8111373 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 26089.84
Clp0000I Optimal - objective value 26089.84
Clp0000I Optimal - objective value 26089.84
Coin0511I After Postsolve, objective 26089.84, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26089.84021 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 75 rows, 80 columns (80 integer (80 of which binary)) and 948 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.104%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 14.3816
Cbc0038I Pass   1: suminf.    3.15376 (20) obj. -7368.58 iterations 36
Cbc0038I Pass   2: suminf.    3.15376 (20) obj. -7368.58 iterations 4
Cbc0038I Solution found of -6258.02
Cbc0038I Rounding solution of -6821.24 is better than previous of -6258.02

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 80 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -6821.24 to -22836.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -23053.7
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.   10.97637 (37) obj. -23053.7 iterations 16
Cbc0038I Pass   4: suminf.   10.97637 (37) obj. -23053.7 iterations 0
Cbc0038I Pass   5: suminf.    3.00180 (12) obj. -23053.7 iterations 31
Cbc0038I Pass   6: suminf.    2.82267 (12) obj. -23053.7 iterations 4
Cbc0038I Pass   7: suminf.    0.40417 (2) obj. -23053.7 iterations 25
Cbc0038I Pass   8: suminf.    0.40417 (2) obj. -23053.7 iterations 0
Cbc0038I Pass   9: suminf.    0.82744 (2) obj. -23053.7 iterations 1
Cbc0038I Pass  10: suminf.    4.23496 (12) obj. -23053.7 iterations 15
Cbc0038I Pass  11: suminf.    3.77277 (11) obj. -23053.7 iterations 13
Cbc0038I Pass  12: suminf.    3.04658 (12) obj. -23053.7 iterations 9
Cbc0038I Pass  13: suminf.    3.04658 (12) obj. -23053.7 iterations 0
Cbc0038I Pass  14: suminf.    1.49789 (4) obj. -23053.7 iterations 28
Cbc0038I Pass  15: suminf.    1.15045 (6) obj. -23053.7 iterations 6
Cbc0038I Pass  16: suminf.    1.49789 (4) obj. -23053.7 iterations 11
Cbc0038I Pass  17: suminf.    2.94008 (11) obj. -23053.7 iterations 17
Cbc0038I Pass  18: suminf.    2.68081 (7) obj. -23204.4 iterations 6
Cbc0038I Pass  19: suminf.    0.32829 (1) obj. -23053.7 iterations 14
Cbc0038I Pass  20: suminf.    0.16667 (1) obj. -23105.9 iterations 8
Cbc0038I Pass  21: suminf.    6.79172 (19) obj. -23053.7 iterations 32
Cbc0038I Pass  22: suminf.    6.04887 (28) obj. -23053.7 iterations 7
Cbc0038I Pass  23: suminf.    2.84871 (12) obj. -23053.7 iterations 29
Cbc0038I Pass  24: suminf.    1.58923 (5) obj. -23053.7 iterations 8
Cbc0038I Pass  25: suminf.    1.53386 (6) obj. -23053.7 iterations 7
Cbc0038I Pass  26: suminf.    2.71758 (7) obj. -23053.7 iterations 11
Cbc0038I Pass  27: suminf.    1.59781 (5) obj. -23053.7 iterations 1
Cbc0038I Pass  28: suminf.    1.59781 (5) obj. -23053.7 iterations 2
Cbc0038I Pass  29: suminf.    2.99835 (7) obj. -23053.7 iterations 4
Cbc0038I Pass  30: suminf.    1.58923 (5) obj. -23053.7 iterations 5
Cbc0038I Pass  31: suminf.    1.53386 (6) obj. -23053.7 iterations 8
Cbc0038I Pass  32: suminf.    2.71758 (7) obj. -23053.7 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 80 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -22836.8 - took 0.02 seconds
Cbc0012I Integer solution of -22836.77 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 75 rows 80 columns, reduced to 3 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -23877.954 to -23877.954 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -22836.77, took 24 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

