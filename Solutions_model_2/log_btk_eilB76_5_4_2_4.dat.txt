Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 68 (-10) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 3.21898e-05 - average 2.66031e-07, 9 fixed columns
Coin0506I Presolve 93 (-28) rows, 54 (-14) columns and 286 (-84) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 2.1334745 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Coin0511I After Postsolve, objective 49.405058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Coin0511I After Postsolve, objective 49.405058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.40505791 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 68 columns (67 integer (67 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.79983
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.1369 iterations 32
Cbc0038I Solution found of 12.1369
Cbc0038I Relaxing continuous gives 12.1369
Cbc0038I Rounding solution of 0.1194 is better than previous of 12.1369

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 0.1194 to -16.7361 (0.03 seconds)
Cbc0038I Round again with cutoff of -19.9533
Cbc0038I Pass   2: suminf.    1.28179 (5) obj. -19.9533 iterations 8
Cbc0038I Pass   3: suminf.    1.23857 (4) obj. -19.9533 iterations 1
Cbc0038I Pass   4: suminf.    1.16836 (4) obj. -19.9533 iterations 6
Cbc0038I Pass   5: suminf.    1.16836 (4) obj. -19.9533 iterations 4
Cbc0038I Pass   6: suminf.    0.68738 (2) obj. -19.9533 iterations 8
Cbc0038I Pass   7: suminf.    0.78251 (2) obj. -19.9533 iterations 4
Cbc0038I Pass   8: suminf.    1.20868 (4) obj. -19.9533 iterations 18
Cbc0038I Pass   9: suminf.    1.19504 (4) obj. -19.9533 iterations 8
Cbc0038I Pass  10: suminf.    0.79079 (3) obj. -19.9533 iterations 8
Cbc0038I Pass  11: suminf.    0.81454 (3) obj. -19.9533 iterations 12
Cbc0038I Pass  12: suminf.    0.72572 (3) obj. -19.9533 iterations 2
Cbc0038I Pass  13: suminf.    0.86409 (2) obj. -19.9533 iterations 2
Cbc0038I Pass  14: suminf.    0.59612 (2) obj. -19.9533 iterations 1
Cbc0038I Pass  15: suminf.    1.83817 (5) obj. -19.9533 iterations 16
Cbc0038I Pass  16: suminf.    0.75858 (3) obj. -19.9533 iterations 9
Cbc0038I Pass  17: suminf.    0.59612 (2) obj. -19.9533 iterations 5
Cbc0038I Pass  18: suminf.    2.08660 (10) obj. -19.9533 iterations 17
Cbc0038I Pass  19: suminf.    1.57442 (5) obj. -19.9533 iterations 9
Cbc0038I Pass  20: suminf.    0.79079 (3) obj. -19.9533 iterations 15
Cbc0038I Pass  21: suminf.    0.68738 (2) obj. -19.9533 iterations 1
Cbc0038I Pass  22: suminf.    0.89455 (3) obj. -19.9533 iterations 3
Cbc0038I Pass  23: suminf.    2.59023 (6) obj. -19.9533 iterations 5
Cbc0038I Pass  24: suminf.    1.67443 (5) obj. -19.9533 iterations 7
Cbc0038I Pass  25: suminf.    2.01871 (7) obj. -19.9533 iterations 21
Cbc0038I Pass  26: suminf.    1.64921 (5) obj. -19.9533 iterations 6
Cbc0038I Pass  27: suminf.    0.97212 (3) obj. -19.9533 iterations 5
Cbc0038I Pass  28: suminf.    0.72599 (3) obj. -19.9533 iterations 2
Cbc0038I Pass  29: suminf.    1.13093 (3) obj. -19.9533 iterations 3
Cbc0038I Pass  30: suminf.    1.20834 (6) obj. -19.9533 iterations 9
Cbc0038I Pass  31: suminf.    0.84885 (4) obj. -19.9533 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 56 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -16.7361 to -19.8623 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.7442
Cbc0038I Pass  31: suminf.    1.65979 (5) obj. -25.7442 iterations 0
Cbc0038I Pass  32: suminf.    1.25203 (4) obj. -25.7442 iterations 5
Cbc0038I Pass  33: suminf.    0.97023 (3) obj. -25.7442 iterations 4
Cbc0038I Pass  34: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  35: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  36: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  37: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  38: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  39: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  40: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  41: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  42: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  43: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  44: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  45: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  46: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  47: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  48: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  49: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  50: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  51: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  52: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  53: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  54: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  55: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  56: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  57: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  58: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  59: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  60: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -19.8623 - took 0.04 seconds
Cbc0012I Integer solution of -19.86233 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 117 rows 68 columns, reduced to 34 rows 22 columns
Cbc0031I 15 added rows had average density of 28.933333
Cbc0013I At root node, 15 cuts changed objective from -48.907381 to -38.128062 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3314 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1073 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 65.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0012I Integer solution of -19.90979 found by DiveCoefficient after 3500 iterations and 2 nodes (0.39 seconds)
Cbc0001I Search completed - best objective -19.90979, took 3916 iterations and 14 nodes (0.43 seconds)
Cbc0032I Strong branching done 244 times (3788 iterations), fathomed 1 nodes and fixed 14 variables
Cbc0035I Maximum depth 5, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 118 (-34) columns and 2035 (-1268) elements
Clp1000I sum of infeasibilities 2.09446e-07 - average 1.99472e-09, 46 fixed columns
Coin0506I Presolve 65 (-40) rows, 72 (-46) columns and 694 (-1341) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 2.5496391 - largest nonzero change 0 ( 0%) - largest zero change 2.8482979e-05
Clp0000I Optimal - objective value 109.90401
Clp0000I Optimal - objective value 109.90401
Coin0511I After Postsolve, objective 109.90401, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 109.90401
Clp0000I Optimal - objective value 109.90401
Clp0000I Optimal - objective value 109.90401
Coin0511I After Postsolve, objective 109.90401, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.9040133 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 116 columns (116 integer (116 of which binary)) and 2005 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.359%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 3.51918
Cbc0038I Pass   1: suminf.    1.01382 (25) obj. -33.9203 iterations 34
Cbc0038I Pass   2: suminf.    1.01382 (25) obj. -33.9203 iterations 1
Cbc0038I Solution found of -0.40349
Cbc0038I Rounding solution of -7.00747 is better than previous of -0.40349

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -11.6944
Cbc0038I Pass   3: suminf.    1.01382 (25) obj. -33.9203 iterations 0
Cbc0038I Pass   4: suminf.    1.01382 (25) obj. -33.9203 iterations 1
Cbc0038I Pass   5: suminf.    0.75272 (3) obj. -11.6944 iterations 41
Cbc0038I Pass   6: suminf.    1.02476 (4) obj. -11.6944 iterations 6
Cbc0038I Pass   7: suminf.    0.93027 (5) obj. -11.6944 iterations 3
Cbc0038I Pass   8: suminf.    1.17391 (3) obj. -18.5774 iterations 8
Cbc0038I Pass   9: suminf.    0.75250 (3) obj. -11.6944 iterations 2
Cbc0038I Pass  10: suminf.    1.23852 (4) obj. -18.9313 iterations 5
Cbc0038I Pass  11: suminf.    1.34485 (12) obj. -11.6944 iterations 31
Cbc0038I Pass  12: suminf.    0.51512 (7) obj. -11.6944 iterations 9
Cbc0038I Pass  13: suminf.    0.38140 (4) obj. -11.6944 iterations 11
Cbc0038I Pass  14: suminf.    0.35133 (4) obj. -11.6944 iterations 3
Cbc0038I Pass  15: suminf.    0.35133 (4) obj. -11.6944 iterations 1
Cbc0038I Pass  16: suminf.    2.31680 (25) obj. -11.6944 iterations 25
Cbc0038I Pass  17: suminf.    0.90114 (11) obj. -11.6944 iterations 16
Cbc0038I Pass  18: suminf.    0.63807 (11) obj. -17.9319 iterations 1
Cbc0038I Pass  19: suminf.    1.22960 (5) obj. -11.6944 iterations 20
Cbc0038I Pass  20: suminf.    1.02127 (5) obj. -11.6944 iterations 5
Cbc0038I Pass  21: suminf.    1.28603 (3) obj. -11.6944 iterations 11
Cbc0038I Pass  22: suminf.    1.27370 (3) obj. -11.6944 iterations 2
Cbc0038I Pass  23: suminf.    2.59278 (15) obj. -11.6944 iterations 25
Cbc0038I Pass  24: suminf.    2.25406 (14) obj. -11.6944 iterations 7
Cbc0038I Pass  25: suminf.    0.73267 (10) obj. -11.6944 iterations 8
Cbc0038I Pass  26: suminf.    0.56233 (8) obj. -11.6944 iterations 3
Cbc0038I Pass  27: suminf.    1.19067 (5) obj. -11.6944 iterations 14
Cbc0038I Pass  28: suminf.    1.60134 (5) obj. -11.6944 iterations 5
Cbc0038I Pass  29: suminf.    1.38240 (5) obj. -11.6944 iterations 3
Cbc0038I Pass  30: suminf.    1.08040 (5) obj. -11.6944 iterations 2
Cbc0038I Pass  31: suminf.    1.05144 (6) obj. -11.6944 iterations 4
Cbc0038I Pass  32: suminf.    1.30715 (4) obj. -11.9819 iterations 5
Cbc0038I Rounding solution of -8.71309 is better than previous of -7.00747

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 116 columns, reduced to 53 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -8.71309 to -19.0001 (0.11 seconds)
Cbc0038I Round again with cutoff of -25.9753
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.01382 (25) obj. -33.9203 iterations 0
Cbc0038I Pass  33: suminf.    1.01382 (25) obj. -33.9203 iterations 1
Cbc0038I Pass  34: suminf.    2.25469 (21) obj. -25.9753 iterations 61
Cbc0038I Pass  35: suminf.    1.89098 (19) obj. -25.9753 iterations 9
Cbc0038I Pass  36: suminf.    1.94791 (16) obj. -25.9753 iterations 32
Cbc0038I Pass  37: suminf.    1.46671 (14) obj. -25.9753 iterations 4
Cbc0038I Pass  38: suminf.    1.87487 (13) obj. -25.9753 iterations 8
Cbc0038I Pass  39: suminf.    1.87487 (13) obj. -25.9753 iterations 0
Cbc0038I Pass  40: suminf.    1.96297 (15) obj. -25.9753 iterations 10
Cbc0038I Pass  41: suminf.    1.46662 (13) obj. -25.9753 iterations 3
Cbc0038I Pass  42: suminf.    1.79519 (13) obj. -25.9753 iterations 7
Cbc0038I Pass  43: suminf.    1.79519 (13) obj. -25.9753 iterations 1
Cbc0038I Pass  44: suminf.    3.07503 (15) obj. -25.9753 iterations 10
Cbc0038I Pass  45: suminf.    1.75992 (13) obj. -25.9753 iterations 3
Cbc0038I Pass  46: suminf.    1.87487 (13) obj. -25.9753 iterations 6
Cbc0038I Pass  47: suminf.    1.87487 (13) obj. -25.9753 iterations 0
Cbc0038I Pass  48: suminf.    1.96297 (15) obj. -25.9753 iterations 8
Cbc0038I Pass  49: suminf.    1.46662 (13) obj. -25.9753 iterations 3
Cbc0038I Pass  50: suminf.    1.87487 (13) obj. -25.9753 iterations 9
Cbc0038I Pass  51: suminf.    1.91973 (16) obj. -25.9753 iterations 25
Cbc0038I Pass  52: suminf.    1.91973 (16) obj. -25.9753 iterations 1
Cbc0038I Pass  53: suminf.    1.53067 (14) obj. -25.9753 iterations 11
Cbc0038I Pass  54: suminf.    1.53067 (14) obj. -25.9753 iterations 4
Cbc0038I Pass  55: suminf.    1.53067 (14) obj. -25.9753 iterations 5
Cbc0038I Pass  56: suminf.    2.15809 (17) obj. -25.9753 iterations 20
Cbc0038I Pass  57: suminf.    1.67633 (17) obj. -25.9753 iterations 7
Cbc0038I Pass  58: suminf.    2.24928 (13) obj. -25.9753 iterations 17
Cbc0038I Pass  59: suminf.    1.80995 (13) obj. -25.9753 iterations 4
Cbc0038I Pass  60: suminf.    1.99085 (15) obj. -25.9753 iterations 7
Cbc0038I Pass  61: suminf.    1.29464 (13) obj. -25.9753 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -19.0001 - took 0.10 seconds
Cbc0012I Integer solution of -19.00012 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 96 rows 116 columns, reduced to 48 rows 49 columns
Cbc0031I 50 added rows had average density of 24.82
Cbc0013I At root node, 50 cuts changed objective from -53.875376 to -32.790875 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 1428 row cuts average 15.1 elements, 3 column cuts (10 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 71 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 81 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 142 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 35 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 152 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 64.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.00012 best solution, best possible -32.790875 (0.54 seconds)
Cbc0010I After 6 nodes, 7 on tree, -19.00012 best solution, best possible -32.790875 (1.27 seconds)
Cbc0004I Integer solution of -19.90979 found after 1324 iterations and 12 nodes (1.47 seconds)
Cbc0001I Search completed - best objective -19.90979, took 2178 iterations and 30 nodes (1.74 seconds)
Cbc0032I Strong branching done 442 times (9153 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 12, 103 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 68 (-10) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 3.21898e-05 - average 2.66031e-07, 9 fixed columns
Coin0506I Presolve 93 (-28) rows, 54 (-14) columns and 286 (-84) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 2.1334745 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Coin0511I After Postsolve, objective 49.405058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Coin0511I After Postsolve, objective 49.405058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.40505791 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 68 columns (67 integer (67 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.79983
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.1369 iterations 32
Cbc0038I Solution found of 12.1369
Cbc0038I Relaxing continuous gives 12.1369
Cbc0038I Rounding solution of 0.1194 is better than previous of 12.1369

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 0.1194 to -16.7361 (0.02 seconds)
Cbc0038I Round again with cutoff of -19.9533
Cbc0038I Pass   2: suminf.    1.28179 (5) obj. -19.9533 iterations 8
Cbc0038I Pass   3: suminf.    1.23857 (4) obj. -19.9533 iterations 1
Cbc0038I Pass   4: suminf.    1.16836 (4) obj. -19.9533 iterations 6
Cbc0038I Pass   5: suminf.    1.16836 (4) obj. -19.9533 iterations 4
Cbc0038I Pass   6: suminf.    0.68738 (2) obj. -19.9533 iterations 8
Cbc0038I Pass   7: suminf.    0.78251 (2) obj. -19.9533 iterations 4
Cbc0038I Pass   8: suminf.    1.20868 (4) obj. -19.9533 iterations 18
Cbc0038I Pass   9: suminf.    1.19504 (4) obj. -19.9533 iterations 8
Cbc0038I Pass  10: suminf.    0.79079 (3) obj. -19.9533 iterations 8
Cbc0038I Pass  11: suminf.    0.81454 (3) obj. -19.9533 iterations 12
Cbc0038I Pass  12: suminf.    0.72572 (3) obj. -19.9533 iterations 2
Cbc0038I Pass  13: suminf.    0.86409 (2) obj. -19.9533 iterations 2
Cbc0038I Pass  14: suminf.    0.59612 (2) obj. -19.9533 iterations 1
Cbc0038I Pass  15: suminf.    1.83817 (5) obj. -19.9533 iterations 16
Cbc0038I Pass  16: suminf.    0.75858 (3) obj. -19.9533 iterations 9
Cbc0038I Pass  17: suminf.    0.59612 (2) obj. -19.9533 iterations 5
Cbc0038I Pass  18: suminf.    2.08660 (10) obj. -19.9533 iterations 17
Cbc0038I Pass  19: suminf.    1.57442 (5) obj. -19.9533 iterations 9
Cbc0038I Pass  20: suminf.    0.79079 (3) obj. -19.9533 iterations 15
Cbc0038I Pass  21: suminf.    0.68738 (2) obj. -19.9533 iterations 1
Cbc0038I Pass  22: suminf.    0.89455 (3) obj. -19.9533 iterations 3
Cbc0038I Pass  23: suminf.    2.59023 (6) obj. -19.9533 iterations 5
Cbc0038I Pass  24: suminf.    1.67443 (5) obj. -19.9533 iterations 7
Cbc0038I Pass  25: suminf.    2.01871 (7) obj. -19.9533 iterations 21
Cbc0038I Pass  26: suminf.    1.64921 (5) obj. -19.9533 iterations 6
Cbc0038I Pass  27: suminf.    0.97212 (3) obj. -19.9533 iterations 5
Cbc0038I Pass  28: suminf.    0.72599 (3) obj. -19.9533 iterations 2
Cbc0038I Pass  29: suminf.    1.13093 (3) obj. -19.9533 iterations 3
Cbc0038I Pass  30: suminf.    1.20834 (6) obj. -19.9533 iterations 9
Cbc0038I Pass  31: suminf.    0.84885 (4) obj. -19.9533 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 56 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -16.7361 to -19.8623 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.7442
Cbc0038I Pass  31: suminf.    1.65979 (5) obj. -25.7442 iterations 0
Cbc0038I Pass  32: suminf.    1.25203 (4) obj. -25.7442 iterations 5
Cbc0038I Pass  33: suminf.    0.97023 (3) obj. -25.7442 iterations 4
Cbc0038I Pass  34: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  35: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  36: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  37: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  38: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  39: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  40: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  41: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  42: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  43: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  44: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  45: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  46: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  47: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  48: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  49: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  50: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  51: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  52: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  53: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  54: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  55: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  56: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  57: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  58: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  59: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  60: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -19.8623 - took 0.04 seconds
Cbc0012I Integer solution of -19.86233 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 117 rows 68 columns, reduced to 34 rows 22 columns
Cbc0031I 15 added rows had average density of 28.933333
Cbc0013I At root node, 15 cuts changed objective from -48.907381 to -38.128062 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3314 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1073 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 65.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0012I Integer solution of -19.90979 found by DiveCoefficient after 3500 iterations and 2 nodes (0.45 seconds)
Cbc0001I Search completed - best objective -19.90979, took 3916 iterations and 14 nodes (0.50 seconds)
Cbc0032I Strong branching done 244 times (3788 iterations), fathomed 1 nodes and fixed 14 variables
Cbc0035I Maximum depth 5, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 113 (-40) columns and 1870 (-1434) elements
Clp1000I sum of infeasibilities 3.9416e-07 - average 3.9416e-09, 22 fixed columns
Coin0506I Presolve 80 (-20) rows, 91 (-22) columns and 1291 (-579) elements
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 6.0191276 - largest nonzero change 1.930227e-05 ( 0.00095415479%) - largest zero change 2.8991742e-05
Clp0000I Optimal - objective value 66.571731
Clp0000I Optimal - objective value 66.571731
Coin0511I After Postsolve, objective 66.571731, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.571731
Clp0000I Optimal - objective value 66.571731
Clp0000I Optimal - objective value 66.571731
Coin0511I After Postsolve, objective 66.571731, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.57173095 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 113 columns (113 integer (113 of which binary)) and 1911 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.095%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.44919
Cbc0038I Pass   1: suminf.    0.94340 (23) obj. -28.2232 iterations 24
Cbc0038I Pass   2: suminf.    0.94340 (23) obj. -28.2232 iterations 1
Cbc0038I Pass   3: suminf.    0.30066 (10) obj. -13.0139 iterations 13
Cbc0038I Solution found of -0.40349
Cbc0038I Rounding solution of -7.00747 is better than previous of -0.40349

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 113 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -7.00747 to -12.4302 (0.04 seconds)
Cbc0038I Round again with cutoff of -16.0362
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.94340 (23) obj. -28.2232 iterations 0
Cbc0038I Pass   5: suminf.    0.94340 (23) obj. -28.2232 iterations 1
Cbc0038I Pass   6: suminf.    0.53801 (11) obj. -16.0362 iterations 15
Cbc0038I Pass   7: suminf.    0.78302 (18) obj. -16.0362 iterations 28
Cbc0038I Pass   8: suminf.    0.63123 (6) obj. -16.0362 iterations 4
Cbc0038I Pass   9: suminf.    1.10790 (3) obj. -16.0362 iterations 20
Cbc0038I Pass  10: suminf.    1.10790 (3) obj. -16.0362 iterations 4
Cbc0038I Pass  11: suminf.    0.79935 (16) obj. -16.0362 iterations 10
Cbc0038I Pass  12: suminf.    0.76336 (3) obj. -16.0362 iterations 2
Cbc0038I Pass  13: suminf.    0.45708 (2) obj. -16.0362 iterations 8
Cbc0038I Pass  14: suminf.    0.61202 (2) obj. -16.0362 iterations 6
Cbc0038I Pass  15: suminf.    0.95840 (12) obj. -16.0362 iterations 27
Cbc0038I Pass  16: suminf.    0.65199 (9) obj. -16.0362 iterations 6
Cbc0038I Pass  17: suminf.    1.60622 (13) obj. -16.0362 iterations 14
Cbc0038I Pass  18: suminf.    1.22576 (12) obj. -16.0362 iterations 5
Cbc0038I Pass  19: suminf.    1.42762 (8) obj. -16.0362 iterations 22
Cbc0038I Pass  20: suminf.    0.99686 (9) obj. -16.0362 iterations 1
Cbc0038I Pass  21: suminf.    1.05343 (8) obj. -16.0362 iterations 6
Cbc0038I Pass  22: suminf.    0.76584 (9) obj. -16.0362 iterations 3
Cbc0038I Pass  23: suminf.    1.42762 (8) obj. -16.0362 iterations 8
Cbc0038I Pass  24: suminf.    2.48885 (15) obj. -16.0362 iterations 23
Cbc0038I Pass  25: suminf.    1.52882 (13) obj. -16.0362 iterations 6
Cbc0038I Pass  26: suminf.    1.42762 (8) obj. -16.0362 iterations 22
Cbc0038I Pass  27: suminf.    0.99686 (9) obj. -16.0362 iterations 3
Cbc0038I Pass  28: suminf.    1.05343 (8) obj. -16.0362 iterations 6
Cbc0038I Pass  29: suminf.    0.76584 (9) obj. -16.0362 iterations 3
Cbc0038I Pass  30: suminf.    1.42762 (8) obj. -16.0362 iterations 8
Cbc0038I Pass  31: suminf.    1.77168 (14) obj. -16.0362 iterations 22
Cbc0038I Pass  32: suminf.    1.46588 (12) obj. -16.0362 iterations 3
Cbc0038I Pass  33: suminf.    1.42762 (8) obj. -16.0362 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 113 columns, reduced to 19 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -12.4302 - took 0.04 seconds
Cbc0012I Integer solution of -12.43019 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 96 rows 113 columns, reduced to 0 rows 0 columns
Cbc0031I 53 added rows had average density of 18.226415
Cbc0013I At root node, 53 cuts changed objective from -48.489413 to -23.640043 in 32 passes
Cbc0014I Cut generator 0 (Probing) - 3760 row cuts average 10.3 elements, 3 column cuts (3 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 450 row cuts average 86.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 77 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 344 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 312 row cuts average 63.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 41.1 elements, 0 column cuts (0 active)  in 0.216 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.43019 best solution, best possible -23.640043 (0.86 seconds)
Cbc0012I Integer solution of -13.4938 found by rounding after 1416 iterations and 1 nodes (1.07 seconds)
Cbc0012I Integer solution of -14.63245 found by DiveCoefficient after 1590 iterations and 7 nodes (1.51 seconds)
Cbc0010I After 9 nodes, 10 on tree, -14.63245 best solution, best possible -23.640043 (1.59 seconds)
Cbc0016I Integer solution of -14.86233 found by strong branching after 1743 iterations and 11 nodes (1.66 seconds)
Cbc0016I Integer solution of -14.90979 found by strong branching after 1977 iterations and 18 nodes (1.83 seconds)
Cbc0012I Integer solution of -16.90979 found by DiveCoefficient after 2014 iterations and 19 nodes (1.83 seconds)
Cbc0012I Integer solution of -17.90979 found by rounding after 2161 iterations and 24 nodes (2.22 seconds)
Cbc0010I After 28 nodes, 4 on tree, -17.90979 best solution, best possible -23.640043 (2.36 seconds)
Cbc0012I Integer solution of -19.90979 found by DiveCoefficient after 2293 iterations and 30 nodes (2.37 seconds)
Cbc0001I Search completed - best objective -19.90979, took 2515 iterations and 36 nodes (2.55 seconds)
Cbc0032I Strong branching done 560 times (9038 iterations), fathomed 5 nodes and fixed 9 variables
Cbc0035I Maximum depth 11, 58 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       2.57

