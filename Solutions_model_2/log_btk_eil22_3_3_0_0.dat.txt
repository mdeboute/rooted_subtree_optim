Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 20 (-4) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 2.18328e-05 - average 6.23795e-07, 0 fixed columns
Coin0506I Presolve 35 (0) rows, 20 (0) columns and 102 (0) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Coin0511I After Postsolve, objective 54.542854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Coin0511I After Postsolve, objective 54.542854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.5428542 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.31561
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.0417 iterations 12
Cbc0038I Solution found of -21.0417
Cbc0038I Relaxing continuous gives -21.0417
Cbc0038I Rounding solution of -23.8514 is better than previous of -21.0417

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -23.8514 to -24.5125 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.3806
Cbc0038I Pass   2: suminf.    0.37089 (3) obj. -27.3806 iterations 3
Cbc0038I Pass   3: suminf.    0.92774 (3) obj. -27.3806 iterations 4
Cbc0038I Pass   4: suminf.    0.40574 (2) obj. -27.3806 iterations 2
Cbc0038I Pass   5: suminf.    0.23163 (1) obj. -27.3806 iterations 1
Cbc0038I Pass   6: suminf.    0.35078 (1) obj. -27.3806 iterations 1
Cbc0038I Pass   7: suminf.    1.13936 (3) obj. -27.3806 iterations 5
Cbc0038I Pass   8: suminf.    1.49362 (4) obj. -27.3806 iterations 8
Cbc0038I Pass   9: suminf.    1.49362 (4) obj. -27.3806 iterations 1
Cbc0038I Pass  10: suminf.    0.37089 (3) obj. -27.3806 iterations 6
Cbc0038I Pass  11: suminf.    0.92774 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  12: suminf.    0.40574 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  13: suminf.    0.23163 (1) obj. -27.3806 iterations 1
Cbc0038I Pass  14: suminf.    0.35078 (1) obj. -27.3806 iterations 1
Cbc0038I Pass  15: suminf.    1.22724 (4) obj. -27.3806 iterations 6
Cbc0038I Pass  16: suminf.    0.74025 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  17: suminf.    0.20649 (3) obj. -27.3806 iterations 5
Cbc0038I Pass  18: suminf.    0.20649 (3) obj. -27.3806 iterations 0
Cbc0038I Pass  19: suminf.    1.05218 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  20: suminf.    1.01410 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  21: suminf.    0.46915 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  22: suminf.    0.11700 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  23: suminf.    0.35482 (2) obj. -27.3806 iterations 6
Cbc0038I Pass  24: suminf.    0.20649 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  25: suminf.    1.05218 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  26: suminf.    1.01410 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  27: suminf.    0.46915 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  28: suminf.    0.11700 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  29: suminf.    0.66958 (2) obj. -27.3806 iterations 5
Cbc0038I Pass  30: suminf.    0.46752 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  31: suminf.    0.20649 (3) obj. -27.3806 iterations 3
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.5429
Cbc0038I Pass  31: suminf.    0.67294 (3) obj. -32.5429 iterations 0
Cbc0038I Pass  32: suminf.    0.91843 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  33: suminf.    0.34912 (1) obj. -32.5429 iterations 2
Cbc0038I Pass  34: suminf.    0.44654 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  35: suminf.    1.18462 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  36: suminf.    1.20066 (4) obj. -32.5429 iterations 4
Cbc0038I Pass  37: suminf.    1.20066 (4) obj. -32.5429 iterations 0
Cbc0038I Pass  38: suminf.    0.41067 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  39: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  40: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  41: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  42: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  43: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  44: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  45: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  46: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  47: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  48: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  49: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  50: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  51: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  52: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  53: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  54: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  55: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  56: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  57: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  58: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  59: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  60: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -24.5125 - took 0.03 seconds
Cbc0012I Integer solution of -24.512541 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 14 columns
Cbc0031I 10 added rows had average density of 10.4
Cbc0013I At root node, 10 cuts changed objective from -53.191987 to -32.241786 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 967 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 672 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.5125411, took 1782 iterations and 2 nodes (0.12 seconds)
Cbc0032I Strong branching done 20 times (209 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-8) rows, 41 (-3) columns and 300 (-60) elements
Clp1000I sum of infeasibilities 2.55381e-08 - average 6.72054e-10, 27 fixed columns
Coin0506I Presolve 11 (-27) rows, 14 (-27) columns and 45 (-255) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 3.8389946 - largest nonzero change 0 ( 0%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value 16.288609
Clp0000I Optimal - objective value 16.288609
Coin0511I After Postsolve, objective 16.288609, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0872592 - largest nonzero change 0 ( 0%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value 91.440129
Clp0000I Optimal - objective value 91.440129
Clp0000I Optimal - objective value 91.440129
Coin0511I After Postsolve, objective 91.440129, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.44012879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 38 columns (38 integer (38 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.339%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 0.723249
Cbc0038I Pass   1: suminf.    0.68526 (7) obj. -46.7948 iterations 1
Cbc0038I Solution found of 1.71028
Cbc0038I Rounding solution of -6.67777 is better than previous of 1.71028

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -6.67777 to -21.7028 (0.01 seconds)
Cbc0038I Round again with cutoff of -24.2246
Cbc0038I Pass   2: suminf.    0.68526 (7) obj. -46.7948 iterations 0
Cbc0038I Pass   3: suminf.    0.43677 (2) obj. -24.2246 iterations 8
Cbc0038I Pass   4: suminf.    0.43677 (2) obj. -24.2246 iterations 0
Cbc0038I Pass   5: suminf.    0.42748 (2) obj. -24.2246 iterations 1
Cbc0038I Pass   6: suminf.    0.16190 (2) obj. -30.7344 iterations 1
Cbc0038I Pass   7: suminf.    2.21811 (8) obj. -24.2246 iterations 6
Cbc0038I Pass   8: suminf.    1.86475 (7) obj. -27.7581 iterations 1
Cbc0038I Pass   9: suminf.    0.64445 (3) obj. -24.2246 iterations 6
Cbc0038I Pass  10: suminf.    0.58571 (3) obj. -24.577 iterations 1
Cbc0038I Pass  11: suminf.    2.22282 (8) obj. -24.2246 iterations 4
Cbc0038I Pass  12: suminf.    2.22282 (8) obj. -24.2246 iterations 0
Cbc0038I Pass  13: suminf.    1.49841 (5) obj. -24.2246 iterations 5
Cbc0038I Pass  14: suminf.    1.49841 (5) obj. -24.2246 iterations 0
Cbc0038I Pass  15: suminf.    1.12341 (5) obj. -24.2246 iterations 2
Cbc0038I Pass  16: suminf.    1.12341 (5) obj. -24.2246 iterations 0
Cbc0038I Pass  17: suminf.    1.49841 (5) obj. -24.2246 iterations 1
Cbc0038I Pass  18: suminf.    2.65885 (10) obj. -24.2246 iterations 12
Cbc0038I Pass  19: suminf.    2.30872 (8) obj. -24.2246 iterations 2
Cbc0038I Pass  20: suminf.    2.53094 (8) obj. -24.2246 iterations 3
Cbc0038I Pass  21: suminf.    2.53094 (8) obj. -24.2246 iterations 1
Cbc0038I Pass  22: suminf.    2.30872 (8) obj. -24.2246 iterations 3
Cbc0038I Pass  23: suminf.    1.78234 (6) obj. -25.1064 iterations 6
Cbc0038I Pass  24: suminf.    1.74637 (6) obj. -24.2246 iterations 1
Cbc0038I Pass  25: suminf.    1.78411 (6) obj. -24.2246 iterations 5
Cbc0038I Pass  26: suminf.    1.78411 (6) obj. -24.2246 iterations 1
Cbc0038I Pass  27: suminf.    1.71268 (6) obj. -24.2246 iterations 2
Cbc0038I Pass  28: suminf.    1.71268 (6) obj. -24.2246 iterations 0
Cbc0038I Pass  29: suminf.    1.78411 (6) obj. -24.2246 iterations 2
Cbc0038I Pass  30: suminf.    2.02215 (8) obj. -24.2246 iterations 5
Cbc0038I Pass  31: suminf.    1.80893 (7) obj. -28.0857 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -21.7028 to -24.5125 (0.02 seconds)
Cbc0038I Round again with cutoff of -28.994
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.68526 (7) obj. -46.7948 iterations 0
Cbc0038I Pass  32: suminf.    0.32012 (2) obj. -28.994 iterations 7
Cbc0038I Pass  33: suminf.    0.16190 (2) obj. -30.7344 iterations 1
Cbc0038I Pass  34: suminf.    1.87722 (10) obj. -28.994 iterations 9
Cbc0038I Pass  35: suminf.    0.56534 (8) obj. -28.994 iterations 3
Cbc0038I Pass  36: suminf.    0.31026 (4) obj. -29.2948 iterations 1
Cbc0038I Pass  37: suminf.    0.72681 (4) obj. -28.994 iterations 6
Cbc0038I Pass  38: suminf.    0.72681 (4) obj. -28.994 iterations 0
Cbc0038I Pass  39: suminf.    0.61967 (4) obj. -28.994 iterations 3
Cbc0038I Pass  40: suminf.    0.61967 (4) obj. -28.994 iterations 0
Cbc0038I Pass  41: suminf.    0.72681 (4) obj. -28.994 iterations 3
Cbc0038I Pass  42: suminf.    2.11530 (11) obj. -28.994 iterations 10
Cbc0038I Pass  43: suminf.    1.38773 (8) obj. -29.5581 iterations 3
Cbc0038I Pass  44: suminf.    1.25807 (7) obj. -28.994 iterations 9
Cbc0038I Pass  45: suminf.    1.25872 (7) obj. -28.994 iterations 2
Cbc0038I Pass  46: suminf.    0.97761 (6) obj. -28.994 iterations 9
Cbc0038I Pass  47: suminf.    0.97761 (6) obj. -28.994 iterations 1
Cbc0038I Pass  48: suminf.    1.01333 (6) obj. -28.994 iterations 2
Cbc0038I Pass  49: suminf.    1.01333 (6) obj. -28.994 iterations 1
Cbc0038I Pass  50: suminf.    0.97761 (6) obj. -28.994 iterations 5
Cbc0038I Pass  51: suminf.    1.68863 (10) obj. -28.994 iterations 6
Cbc0038I Pass  52: suminf.    1.43595 (7) obj. -28.994 iterations 1
Cbc0038I Pass  53: suminf.    1.42358 (6) obj. -28.994 iterations 5
Cbc0038I Pass  54: suminf.    1.22738 (6) obj. -29.7788 iterations 1
Cbc0038I Pass  55: suminf.    1.42358 (6) obj. -28.994 iterations 3
Cbc0038I Pass  56: suminf.    1.65817 (8) obj. -28.994 iterations 5
Cbc0038I Pass  57: suminf.    1.65817 (8) obj. -28.994 iterations 0
Cbc0038I Pass  58: suminf.    1.53118 (8) obj. -28.994 iterations 3
Cbc0038I Pass  59: suminf.    1.53118 (8) obj. -28.994 iterations 1
Cbc0038I Pass  60: suminf.    1.58674 (8) obj. -28.994 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.5125 - took 0.02 seconds
Cbc0012I Integer solution of -24.512541 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 38 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 12.666667
Cbc0013I At root node, 5 cuts changed objective from -46.919342 to -15.534638 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 6.2 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24.5125411, took 16 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 20 (-4) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 2.18328e-05 - average 6.23795e-07, 0 fixed columns
Coin0506I Presolve 35 (0) rows, 20 (0) columns and 102 (0) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Coin0511I After Postsolve, objective 54.542854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Coin0511I After Postsolve, objective 54.542854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.5428542 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.31561
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.0417 iterations 12
Cbc0038I Solution found of -21.0417
Cbc0038I Relaxing continuous gives -21.0417
Cbc0038I Rounding solution of -23.8514 is better than previous of -21.0417

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -23.8514 to -24.5125 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.3806
Cbc0038I Pass   2: suminf.    0.37089 (3) obj. -27.3806 iterations 3
Cbc0038I Pass   3: suminf.    0.92774 (3) obj. -27.3806 iterations 4
Cbc0038I Pass   4: suminf.    0.40574 (2) obj. -27.3806 iterations 2
Cbc0038I Pass   5: suminf.    0.23163 (1) obj. -27.3806 iterations 1
Cbc0038I Pass   6: suminf.    0.35078 (1) obj. -27.3806 iterations 1
Cbc0038I Pass   7: suminf.    1.13936 (3) obj. -27.3806 iterations 5
Cbc0038I Pass   8: suminf.    1.49362 (4) obj. -27.3806 iterations 8
Cbc0038I Pass   9: suminf.    1.49362 (4) obj. -27.3806 iterations 1
Cbc0038I Pass  10: suminf.    0.37089 (3) obj. -27.3806 iterations 6
Cbc0038I Pass  11: suminf.    0.92774 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  12: suminf.    0.40574 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  13: suminf.    0.23163 (1) obj. -27.3806 iterations 1
Cbc0038I Pass  14: suminf.    0.35078 (1) obj. -27.3806 iterations 1
Cbc0038I Pass  15: suminf.    1.22724 (4) obj. -27.3806 iterations 6
Cbc0038I Pass  16: suminf.    0.74025 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  17: suminf.    0.20649 (3) obj. -27.3806 iterations 5
Cbc0038I Pass  18: suminf.    0.20649 (3) obj. -27.3806 iterations 0
Cbc0038I Pass  19: suminf.    1.05218 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  20: suminf.    1.01410 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  21: suminf.    0.46915 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  22: suminf.    0.11700 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  23: suminf.    0.35482 (2) obj. -27.3806 iterations 6
Cbc0038I Pass  24: suminf.    0.20649 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  25: suminf.    1.05218 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  26: suminf.    1.01410 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  27: suminf.    0.46915 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  28: suminf.    0.11700 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  29: suminf.    0.66958 (2) obj. -27.3806 iterations 5
Cbc0038I Pass  30: suminf.    0.46752 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  31: suminf.    0.20649 (3) obj. -27.3806 iterations 3
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -32.5429
Cbc0038I Pass  31: suminf.    0.67294 (3) obj. -32.5429 iterations 0
Cbc0038I Pass  32: suminf.    0.91843 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  33: suminf.    0.34912 (1) obj. -32.5429 iterations 2
Cbc0038I Pass  34: suminf.    0.44654 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  35: suminf.    1.18462 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  36: suminf.    1.20066 (4) obj. -32.5429 iterations 4
Cbc0038I Pass  37: suminf.    1.20066 (4) obj. -32.5429 iterations 0
Cbc0038I Pass  38: suminf.    0.41067 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  39: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  40: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  41: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  42: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  43: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  44: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  45: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  46: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  47: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  48: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  49: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  50: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  51: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  52: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  53: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  54: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  55: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  56: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  57: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  58: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  59: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  60: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -24.5125 - took 0.02 seconds
Cbc0012I Integer solution of -24.512541 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 14 columns
Cbc0031I 10 added rows had average density of 10.4
Cbc0013I At root node, 10 cuts changed objective from -53.191987 to -32.241786 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 967 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 672 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.5125411, took 1782 iterations and 2 nodes (0.13 seconds)
Cbc0032I Strong branching done 20 times (209 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 38 (-7) columns and 273 (-88) elements
Clp1000I sum of infeasibilities 1.02206e-09 - average 2.92017e-11, 23 fixed columns
Coin0506I Presolve 12 (-23) rows, 15 (-23) columns and 49 (-224) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 3.4700515 - largest nonzero change 0 ( 0%) - largest zero change 1.7845698e-05
Clp0000I Optimal - objective value -9.2764397
Clp0000I Optimal - objective value -9.2764397
Coin0511I After Postsolve, objective -9.2764397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.2612175 - largest nonzero change 0 ( 0%) - largest zero change 1.6348245e-05
Clp0000I Optimal - objective value 65.595176
Clp0000I Optimal - objective value 65.595176
Clp0000I Optimal - objective value 65.595176
Coin0511I After Postsolve, objective 65.595176, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.59517612 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 38 columns (38 integer (38 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.339%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 0.889024
Cbc0038I Pass   1: suminf.    0.86173 (8) obj. -58.3242 iterations 1
Cbc0038I Solution found of 1.71028
Cbc0038I Rounding solution of -6.67777 is better than previous of 1.71028

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -6.67777 to -21.7028 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.3925
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.86173 (8) obj. -58.3242 iterations 0
Cbc0038I Pass   3: suminf.    0.44701 (2) obj. -25.3925 iterations 9
Cbc0038I Pass   4: suminf.    0.44701 (2) obj. -25.3925 iterations 0
Cbc0038I Pass   5: suminf.    0.54115 (2) obj. -25.3925 iterations 1
Cbc0038I Pass   6: suminf.    0.27171 (2) obj. -31.9971 iterations 1
Cbc0038I Pass   7: suminf.    2.19038 (8) obj. -27.1993 iterations 8
Cbc0038I Pass   8: suminf.    2.19038 (8) obj. -27.1993 iterations 0
Cbc0038I Pass   9: suminf.    1.14652 (4) obj. -25.3925 iterations 7
Cbc0038I Pass  10: suminf.    0.77983 (3) obj. -29.0593 iterations 1
Cbc0038I Pass  11: suminf.    1.04648 (3) obj. -25.3925 iterations 2
Cbc0038I Pass  12: suminf.    1.04648 (3) obj. -25.3925 iterations 0
Cbc0038I Pass  13: suminf.    0.92968 (3) obj. -25.3925 iterations 2
Cbc0038I Pass  14: suminf.    0.92968 (3) obj. -25.3925 iterations 0
Cbc0038I Pass  15: suminf.    1.04648 (3) obj. -25.3925 iterations 2
Cbc0038I Pass  16: suminf.    1.43599 (7) obj. -25.3925 iterations 6
Cbc0038I Pass  17: suminf.    1.43599 (7) obj. -25.3925 iterations 0
Cbc0038I Pass  18: suminf.    1.41035 (4) obj. -25.3925 iterations 4
Cbc0038I Pass  19: suminf.    0.98707 (4) obj. -25.3925 iterations 1
Cbc0038I Pass  20: suminf.    2.34538 (8) obj. -25.3925 iterations 7
Cbc0038I Pass  21: suminf.    0.81590 (5) obj. -25.3925 iterations 2
Cbc0038I Pass  22: suminf.    0.71771 (5) obj. -27.7992 iterations 1
Cbc0038I Pass  23: suminf.    0.68294 (4) obj. -25.3925 iterations 3
Cbc0038I Pass  24: suminf.    0.56387 (4) obj. -26.1069 iterations 1
Cbc0038I Pass  25: suminf.    1.39113 (8) obj. -25.3925 iterations 5
Cbc0038I Pass  26: suminf.    1.26864 (6) obj. -25.3925 iterations 1
Cbc0038I Pass  27: suminf.    0.78609 (5) obj. -30.218 iterations 2
Cbc0038I Pass  28: suminf.    0.84960 (4) obj. -25.3925 iterations 3
Cbc0038I Pass  29: suminf.    0.56387 (4) obj. -27.1069 iterations 1
Cbc0038I Pass  30: suminf.    1.57011 (5) obj. -25.3925 iterations 7
Cbc0038I Pass  31: suminf.    1.42031 (5) obj. -25.9917 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -21.7028 to -24.5125 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.0337
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.86173 (8) obj. -58.3242 iterations 0
Cbc0038I Pass  32: suminf.    0.27503 (3) obj. -32.0337 iterations 8
Cbc0038I Pass  33: suminf.    0.27503 (3) obj. -32.0337 iterations 0
Cbc0038I Pass  34: suminf.    0.25471 (3) obj. -32.0337 iterations 2
Cbc0038I Pass  35: suminf.    0.25471 (3) obj. -32.0337 iterations 0
Cbc0038I Pass  36: suminf.    0.27503 (3) obj. -32.0337 iterations 2
Cbc0038I Pass  37: suminf.    3.44862 (11) obj. -32.0337 iterations 11
Cbc0038I Pass  38: suminf.    1.78941 (7) obj. -32.0337 iterations 2
Cbc0038I Pass  39: suminf.    1.78941 (7) obj. -32.0337 iterations 0
Cbc0038I Pass  40: suminf.    1.42836 (6) obj. -32.0337 iterations 10
Cbc0038I Pass  41: suminf.    1.30721 (6) obj. -32.5183 iterations 2
Cbc0038I Pass  42: suminf.    1.42836 (6) obj. -32.0337 iterations 3
Cbc0038I Pass  43: suminf.    3.62838 (14) obj. -32.0337 iterations 10
Cbc0038I Pass  44: suminf.    2.78362 (10) obj. -32.0337 iterations 4
Cbc0038I Pass  45: suminf.    2.58251 (9) obj. -32.0337 iterations 7
Cbc0038I Pass  46: suminf.    2.49995 (9) obj. -32.0337 iterations 1
Cbc0038I Pass  47: suminf.    2.04995 (8) obj. -32.0337 iterations 5
Cbc0038I Pass  48: suminf.    2.04995 (8) obj. -32.0337 iterations 0
Cbc0038I Pass  49: suminf.    1.95471 (8) obj. -32.0337 iterations 2
Cbc0038I Pass  50: suminf.    1.95471 (8) obj. -32.0337 iterations 0
Cbc0038I Pass  51: suminf.    2.04995 (8) obj. -32.0337 iterations 2
Cbc0038I Pass  52: suminf.    2.07901 (10) obj. -32.0337 iterations 3
Cbc0038I Pass  53: suminf.    2.07901 (10) obj. -32.0337 iterations 0
Cbc0038I Pass  54: suminf.    1.69371 (8) obj. -32.0337 iterations 6
Cbc0038I Pass  55: suminf.    1.35007 (7) obj. -32.0505 iterations 3
Cbc0038I Pass  56: suminf.    1.69371 (8) obj. -32.0337 iterations 4
Cbc0038I Pass  57: suminf.    1.97627 (12) obj. -32.0337 iterations 6
Cbc0038I Pass  58: suminf.    1.72370 (9) obj. -32.7794 iterations 3
Cbc0038I Pass  59: suminf.    1.25931 (7) obj. -32.0337 iterations 4
Cbc0038I Pass  60: suminf.    1.23378 (6) obj. -32.2889 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 38 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.5125 - took 0.02 seconds
Cbc0012I Integer solution of -24.512541 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 38 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 12.571429
Cbc0013I At root node, 7 cuts changed objective from -58.598486 to -25.336662 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 8.9 elements, 8 column cuts (8 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24.5125411, took 18 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

