Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 21 (-4) columns and 106 (-29) elements
Clp1000I sum of infeasibilities 0 - average 0, 17 fixed columns
Coin0506I Presolve 0 (-36) rows, 0 (-21) columns and 0 (-106) elements
Clp0000I Optimal - objective value 8049.3454
Clp0000I Optimal - objective value 8049.3454
Coin0511I After Postsolve, objective 8049.3454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1164093 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 8049.3454
Clp0000I Optimal - objective value 8049.3454
Clp0000I Optimal - objective value 8049.3454
Coin0511I After Postsolve, objective 8049.3454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8049.345439 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 21 columns (20 integer (20 of which binary)) and 111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 4.03731
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5361.05 iterations 13
Cbc0038I Solution found of -5361.05
Cbc0038I Relaxing continuous gives -5361.05
Cbc0038I Rounding solution of -5406.2 is better than previous of -5361.05

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -5441.76
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18356 (4) obj. -5441.76 iterations 2
Cbc0038I Pass   3: suminf.    0.74609 (3) obj. -5441.76 iterations 9
Cbc0038I Pass   4: suminf.    0.66551 (3) obj. -5441.76 iterations 2
Cbc0038I Pass   5: suminf.    0.71295 (3) obj. -5441.76 iterations 3
Cbc0038I Pass   6: suminf.    0.39335 (3) obj. -5441.76 iterations 1
Cbc0038I Pass   7: suminf.    1.12076 (5) obj. -5441.76 iterations 5
Cbc0038I Pass   8: suminf.    1.12076 (5) obj. -5441.76 iterations 0
Cbc0038I Pass   9: suminf.    1.39624 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  10: suminf.    0.57670 (2) obj. -5441.76 iterations 2
Cbc0038I Pass  11: suminf.    0.72472 (2) obj. -5441.76 iterations 1
Cbc0038I Pass  12: suminf.    1.22637 (5) obj. -5441.76 iterations 3
Cbc0038I Pass  13: suminf.    0.74906 (2) obj. -5441.76 iterations 4
Cbc0038I Pass  14: suminf.    0.76643 (2) obj. -5441.76 iterations 1
Cbc0038I Pass  15: suminf.    1.48132 (4) obj. -5441.76 iterations 4
Cbc0038I Pass  16: suminf.    0.86158 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  17: suminf.    1.70330 (5) obj. -5441.76 iterations 3
Cbc0038I Pass  18: suminf.    1.13039 (4) obj. -5441.76 iterations 1
Cbc0038I Pass  19: suminf.    0.32352 (3) obj. -5441.76 iterations 1
Cbc0038I Pass  20: suminf.    0.79828 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  21: suminf.    0.68656 (3) obj. -5441.76 iterations 1
Cbc0038I Pass  22: suminf.    0.54110 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  23: suminf.    0.32290 (2) obj. -5441.76 iterations 8
Cbc0038I Pass  24: suminf.    0.19455 (1) obj. -5497.48 iterations 3
Cbc0038I Pass  25: suminf.    0.54103 (4) obj. -5441.76 iterations 3
Cbc0038I Pass  26: suminf.    0.81563 (2) obj. -5441.76 iterations 5
Cbc0038I Pass  27: suminf.    0.65708 (2) obj. -5441.76 iterations 1
Cbc0038I Pass  28: suminf.    0.04001 (3) obj. -5441.76 iterations 5
Cbc0038I Pass  29: suminf.    0.04001 (3) obj. -5441.76 iterations 1
Cbc0038I Pass  30: suminf.    0.85651 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  31: suminf.    1.06625 (4) obj. -5441.76 iterations 2
Cbc0038I Rounding solution of -5414.4 is better than previous of -5406.2

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -5414.4 to -5518.07 (0.01 seconds)
Cbc0038I Round again with cutoff of -5566.81
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.47199 (4) obj. -5566.81 iterations 1
Cbc0038I Pass  32: suminf.    1.29009 (3) obj. -5566.81 iterations 6
Cbc0038I Pass  33: suminf.    0.98209 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  34: suminf.    0.90139 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  35: suminf.    1.29009 (3) obj. -5566.81 iterations 3
Cbc0038I Pass  36: suminf.    1.52795 (6) obj. -5566.81 iterations 6
Cbc0038I Pass  37: suminf.    0.79477 (2) obj. -5566.81 iterations 5
Cbc0038I Pass  38: suminf.    0.81188 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  39: suminf.    1.67930 (5) obj. -5566.81 iterations 5
Cbc0038I Pass  40: suminf.    1.67930 (5) obj. -5566.81 iterations 0
Cbc0038I Pass  41: suminf.    1.29938 (4) obj. -5566.81 iterations 4
Cbc0038I Pass  42: suminf.    1.18802 (5) obj. -5566.81 iterations 1
Cbc0038I Pass  43: suminf.    1.01313 (5) obj. -5566.81 iterations 2
Cbc0038I Pass  44: suminf.    1.01313 (5) obj. -5566.81 iterations 0
Cbc0038I Pass  45: suminf.    1.29938 (4) obj. -5566.81 iterations 4
Cbc0038I Pass  46: suminf.    2.26124 (5) obj. -5566.81 iterations 3
Cbc0038I Pass  47: suminf.    1.11501 (4) obj. -5566.81 iterations 2
Cbc0038I Pass  48: suminf.    1.29938 (4) obj. -5566.81 iterations 2
Cbc0038I Pass  49: suminf.    1.18802 (5) obj. -5566.81 iterations 1
Cbc0038I Pass  50: suminf.    1.01313 (5) obj. -5566.81 iterations 2
Cbc0038I Pass  51: suminf.    1.01313 (5) obj. -5566.81 iterations 0
Cbc0038I Pass  52: suminf.    1.29938 (4) obj. -5566.81 iterations 4
Cbc0038I Pass  53: suminf.    0.33579 (2) obj. -5566.81 iterations 9
Cbc0038I Pass  54: suminf.    0.33579 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  55: suminf.    0.70273 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  56: suminf.    1.41051 (6) obj. -5566.81 iterations 10
Cbc0038I Pass  57: suminf.    1.41051 (6) obj. -5566.81 iterations 4
Cbc0038I Pass  58: suminf.    1.08479 (3) obj. -5566.81 iterations 6
Cbc0038I Pass  59: suminf.    0.99596 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  60: suminf.    0.94694 (2) obj. -5566.81 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5518.07 - took 0.02 seconds
Cbc0012I Integer solution of -5518.069 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 21 columns, reduced to 13 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 8
Cbc0013I At root node, 5 cuts changed objective from -5761.7716 to -5578.0368 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 2.3 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5518.069, took 15 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 40 (-6) columns and 297 (-91) elements
Clp1000I sum of infeasibilities 0 - average 0, 38 fixed columns
Coin0506I Presolve 0 (-36) rows, 0 (-40) columns and 0 (-297) elements
Clp0000I Optimal - objective value 8014.3454
Clp0000I Optimal - objective value 8014.3454
Coin0511I After Postsolve, objective 8014.3454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.16134195 - largest nonzero change 0 ( 0%) - largest zero change 2.8744358e-05
Clp0000I Optimal - objective value 8154.347
Clp0000I Optimal - objective value 8154.347
Clp0000I Optimal - objective value 8154.347
Coin0511I After Postsolve, objective 8154.347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8154.346961 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 295 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.994%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.7916
Cbc0038I Pass   1: suminf.    1.30128 (3) obj. -5374.81 iterations 18
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -5370.55 iterations 2
Cbc0038I Solution found of -5361.05
Cbc0038I Rounding solution of -5406.2 is better than previous of -5361.05

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5443.71
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.46967 (7) obj. -5443.71 iterations 2
Cbc0038I Pass   4: suminf.    0.66082 (5) obj. -5443.71 iterations 2
Cbc0038I Pass   5: suminf.    0.84555 (3) obj. -5443.71 iterations 6
Cbc0038I Pass   6: suminf.    0.73831 (3) obj. -5443.71 iterations 2
Cbc0038I Pass   7: suminf.    0.70142 (3) obj. -5443.71 iterations 3
Cbc0038I Pass   8: suminf.    0.42926 (3) obj. -5443.71 iterations 1
Cbc0038I Pass   9: suminf.    1.62195 (7) obj. -5443.71 iterations 6
Cbc0038I Pass  10: suminf.    0.81966 (4) obj. -5443.71 iterations 5
Cbc0038I Pass  11: suminf.    1.17344 (3) obj. -5443.71 iterations 4
Cbc0038I Pass  12: suminf.    0.87563 (2) obj. -5443.71 iterations 1
Cbc0038I Pass  13: suminf.    0.92083 (2) obj. -5443.71 iterations 1
Cbc0038I Pass  14: suminf.    2.40650 (7) obj. -5443.71 iterations 8
Cbc0038I Pass  15: suminf.    2.14354 (5) obj. -5443.71 iterations 3
Cbc0038I Pass  16: suminf.    0.92385 (2) obj. -5443.71 iterations 4
Cbc0038I Pass  17: suminf.    0.88250 (2) obj. -5443.71 iterations 1
Cbc0038I Pass  18: suminf.    1.33325 (4) obj. -5443.71 iterations 6
Cbc0038I Pass  19: suminf.    1.19276 (3) obj. -5443.71 iterations 1
Cbc0038I Pass  20: suminf.    0.94051 (2) obj. -5443.71 iterations 2
Cbc0038I Pass  21: suminf.    0.84683 (2) obj. -5443.71 iterations 1
Cbc0038I Pass  22: suminf.    2.64632 (9) obj. -5443.71 iterations 8
Cbc0038I Pass  23: suminf.    1.68000 (5) obj. -5443.71 iterations 4
Cbc0038I Pass  24: suminf.    0.80292 (2) obj. -5443.71 iterations 4
Cbc0038I Pass  25: suminf.    0.68451 (2) obj. -5443.71 iterations 1
Cbc0038I Pass  26: suminf.    1.70730 (6) obj. -5443.71 iterations 7
Cbc0038I Pass  27: suminf.    1.16242 (4) obj. -5443.71 iterations 2
Cbc0038I Pass  28: suminf.    0.78524 (3) obj. -5443.71 iterations 3
Cbc0038I Pass  29: suminf.    0.69022 (3) obj. -5443.71 iterations 2
Cbc0038I Pass  30: suminf.    3.28222 (11) obj. -5443.71 iterations 13
Cbc0038I Pass  31: suminf.    2.99668 (10) obj. -5443.71 iterations 1
Cbc0038I Pass  32: suminf.    2.48557 (8) obj. -5443.71 iterations 5
Cbc0038I Rounding solution of -5414.4 is better than previous of -5406.2

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 7 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -5414.4 to -5525 (0.02 seconds)
Cbc0038I Round again with cutoff of -5576.26
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.79362 (7) obj. -5576.26 iterations 0
Cbc0038I Pass  33: suminf.    0.95219 (5) obj. -5576.26 iterations 2
Cbc0038I Pass  34: suminf.    1.26663 (3) obj. -5576.26 iterations 6
Cbc0038I Pass  35: suminf.    0.99000 (2) obj. -5576.26 iterations 1
Cbc0038I Pass  36: suminf.    0.91367 (2) obj. -5576.26 iterations 1
Cbc0038I Pass  37: suminf.    3.84926 (10) obj. -5576.26 iterations 12
Cbc0038I Pass  38: suminf.    3.73632 (9) obj. -5576.26 iterations 1
Cbc0038I Pass  39: suminf.    3.13335 (7) obj. -5576.26 iterations 2
Cbc0038I Pass  40: suminf.    0.97804 (2) obj. -5576.26 iterations 6
Cbc0038I Pass  41: suminf.    0.99432 (2) obj. -5576.26 iterations 1
Cbc0038I Pass  42: suminf.    2.19682 (6) obj. -5576.26 iterations 4
Cbc0038I Pass  43: suminf.    2.08512 (5) obj. -5576.26 iterations 1
Cbc0038I Pass  44: suminf.    3.08885 (8) obj. -5576.26 iterations 3
Cbc0038I Pass  45: suminf.    2.90645 (7) obj. -5576.26 iterations 1
Cbc0038I Pass  46: suminf.    4.15677 (12) obj. -5576.26 iterations 9
Cbc0038I Pass  47: suminf.    3.09420 (11) obj. -5576.26 iterations 1
Cbc0038I Pass  48: suminf.    1.69420 (4) obj. -5576.26 iterations 10
Cbc0038I Pass  49: suminf.    0.86165 (3) obj. -5576.26 iterations 1
Cbc0038I Pass  50: suminf.    0.83929 (2) obj. -5576.26 iterations 2
Cbc0038I Pass  51: suminf.    0.84520 (2) obj. -5576.26 iterations 1
Cbc0038I Pass  52: suminf.    2.24770 (5) obj. -5576.26 iterations 5
Cbc0038I Pass  53: suminf.    0.99136 (2) obj. -5576.26 iterations 5
Cbc0038I Pass  54: suminf.    0.99136 (2) obj. -5576.26 iterations 0
Cbc0038I Pass  55: suminf.    0.90547 (2) obj. -5576.26 iterations 1
Cbc0038I Pass  56: suminf.    2.07301 (6) obj. -5576.26 iterations 7
Cbc0038I Pass  57: suminf.    1.63713 (4) obj. -5576.26 iterations 4
Cbc0038I Pass  58: suminf.    0.80261 (2) obj. -5576.26 iterations 3
Cbc0038I Pass  59: suminf.    0.79885 (2) obj. -5576.26 iterations 1
Cbc0038I Pass  60: suminf.    1.97065 (5) obj. -5576.26 iterations 6
Cbc0038I Pass  61: suminf.    0.94228 (3) obj. -5576.26 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -5525 - took 0.02 seconds
Cbc0012I Integer solution of -5525.002 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 6 rows 10 columns
Cbc0031I 6 added rows had average density of 10.666667
Cbc0013I At root node, 6 cuts changed objective from -5778.9357 to -5543.3829 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 117 row cuts average 2.2 elements, 4 column cuts (4 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 251 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 107 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 63 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5525.002, took 850 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 30 times (104 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 21 (-4) columns and 106 (-29) elements
Clp1000I sum of infeasibilities 0 - average 0, 17 fixed columns
Coin0506I Presolve 0 (-36) rows, 0 (-21) columns and 0 (-106) elements
Clp0000I Optimal - objective value 8049.3454
Clp0000I Optimal - objective value 8049.3454
Coin0511I After Postsolve, objective 8049.3454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1164093 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 8049.3454
Clp0000I Optimal - objective value 8049.3454
Clp0000I Optimal - objective value 8049.3454
Coin0511I After Postsolve, objective 8049.3454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8049.345439 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 21 columns (20 integer (20 of which binary)) and 111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 4.03731
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5361.05 iterations 13
Cbc0038I Solution found of -5361.05
Cbc0038I Relaxing continuous gives -5361.05
Cbc0038I Rounding solution of -5406.2 is better than previous of -5361.05

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5441.76
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18356 (4) obj. -5441.76 iterations 2
Cbc0038I Pass   3: suminf.    0.74609 (3) obj. -5441.76 iterations 9
Cbc0038I Pass   4: suminf.    0.66551 (3) obj. -5441.76 iterations 2
Cbc0038I Pass   5: suminf.    0.71295 (3) obj. -5441.76 iterations 3
Cbc0038I Pass   6: suminf.    0.39335 (3) obj. -5441.76 iterations 1
Cbc0038I Pass   7: suminf.    1.12076 (5) obj. -5441.76 iterations 5
Cbc0038I Pass   8: suminf.    1.12076 (5) obj. -5441.76 iterations 0
Cbc0038I Pass   9: suminf.    1.39624 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  10: suminf.    0.57670 (2) obj. -5441.76 iterations 2
Cbc0038I Pass  11: suminf.    0.72472 (2) obj. -5441.76 iterations 1
Cbc0038I Pass  12: suminf.    1.22637 (5) obj. -5441.76 iterations 3
Cbc0038I Pass  13: suminf.    0.74906 (2) obj. -5441.76 iterations 4
Cbc0038I Pass  14: suminf.    0.76643 (2) obj. -5441.76 iterations 1
Cbc0038I Pass  15: suminf.    1.48132 (4) obj. -5441.76 iterations 4
Cbc0038I Pass  16: suminf.    0.86158 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  17: suminf.    1.70330 (5) obj. -5441.76 iterations 3
Cbc0038I Pass  18: suminf.    1.13039 (4) obj. -5441.76 iterations 1
Cbc0038I Pass  19: suminf.    0.32352 (3) obj. -5441.76 iterations 1
Cbc0038I Pass  20: suminf.    0.79828 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  21: suminf.    0.68656 (3) obj. -5441.76 iterations 1
Cbc0038I Pass  22: suminf.    0.54110 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  23: suminf.    0.32290 (2) obj. -5441.76 iterations 8
Cbc0038I Pass  24: suminf.    0.19455 (1) obj. -5497.48 iterations 3
Cbc0038I Pass  25: suminf.    0.54103 (4) obj. -5441.76 iterations 3
Cbc0038I Pass  26: suminf.    0.81563 (2) obj. -5441.76 iterations 5
Cbc0038I Pass  27: suminf.    0.65708 (2) obj. -5441.76 iterations 1
Cbc0038I Pass  28: suminf.    0.04001 (3) obj. -5441.76 iterations 5
Cbc0038I Pass  29: suminf.    0.04001 (3) obj. -5441.76 iterations 1
Cbc0038I Pass  30: suminf.    0.85651 (3) obj. -5441.76 iterations 2
Cbc0038I Pass  31: suminf.    1.06625 (4) obj. -5441.76 iterations 2
Cbc0038I Rounding solution of -5414.4 is better than previous of -5406.2

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -5414.4 to -5518.07 (0.01 seconds)
Cbc0038I Round again with cutoff of -5566.81
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.47199 (4) obj. -5566.81 iterations 1
Cbc0038I Pass  32: suminf.    1.29009 (3) obj. -5566.81 iterations 6
Cbc0038I Pass  33: suminf.    0.98209 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  34: suminf.    0.90139 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  35: suminf.    1.29009 (3) obj. -5566.81 iterations 3
Cbc0038I Pass  36: suminf.    1.52795 (6) obj. -5566.81 iterations 6
Cbc0038I Pass  37: suminf.    0.79477 (2) obj. -5566.81 iterations 5
Cbc0038I Pass  38: suminf.    0.81188 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  39: suminf.    1.67930 (5) obj. -5566.81 iterations 5
Cbc0038I Pass  40: suminf.    1.67930 (5) obj. -5566.81 iterations 0
Cbc0038I Pass  41: suminf.    1.29938 (4) obj. -5566.81 iterations 4
Cbc0038I Pass  42: suminf.    1.18802 (5) obj. -5566.81 iterations 1
Cbc0038I Pass  43: suminf.    1.01313 (5) obj. -5566.81 iterations 2
Cbc0038I Pass  44: suminf.    1.01313 (5) obj. -5566.81 iterations 0
Cbc0038I Pass  45: suminf.    1.29938 (4) obj. -5566.81 iterations 4
Cbc0038I Pass  46: suminf.    2.26124 (5) obj. -5566.81 iterations 3
Cbc0038I Pass  47: suminf.    1.11501 (4) obj. -5566.81 iterations 2
Cbc0038I Pass  48: suminf.    1.29938 (4) obj. -5566.81 iterations 2
Cbc0038I Pass  49: suminf.    1.18802 (5) obj. -5566.81 iterations 1
Cbc0038I Pass  50: suminf.    1.01313 (5) obj. -5566.81 iterations 2
Cbc0038I Pass  51: suminf.    1.01313 (5) obj. -5566.81 iterations 0
Cbc0038I Pass  52: suminf.    1.29938 (4) obj. -5566.81 iterations 4
Cbc0038I Pass  53: suminf.    0.33579 (2) obj. -5566.81 iterations 9
Cbc0038I Pass  54: suminf.    0.33579 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  55: suminf.    0.70273 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  56: suminf.    1.41051 (6) obj. -5566.81 iterations 10
Cbc0038I Pass  57: suminf.    1.41051 (6) obj. -5566.81 iterations 4
Cbc0038I Pass  58: suminf.    1.08479 (3) obj. -5566.81 iterations 6
Cbc0038I Pass  59: suminf.    0.99596 (2) obj. -5566.81 iterations 1
Cbc0038I Pass  60: suminf.    0.94694 (2) obj. -5566.81 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5518.07 - took 0.02 seconds
Cbc0012I Integer solution of -5518.069 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 21 columns, reduced to 13 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 8
Cbc0013I At root node, 5 cuts changed objective from -5761.7716 to -5578.0368 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 2.3 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5518.069, took 15 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 38 (-9) columns and 264 (-125) elements
Clp1000I sum of infeasibilities 1.8387e-07 - average 5.40794e-09, 36 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-38) columns and 0 (-264) elements
Clp0000I Optimal - objective value 8014.3454
Clp0000I Optimal - objective value 8014.3454
Coin0511I After Postsolve, objective 8014.3454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3907978 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 8154.347
Clp0000I Optimal - objective value 8154.347
Clp0000I Optimal - objective value 8154.347
Coin0511I After Postsolve, objective 8154.347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8154.346961 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 39 columns (39 integer (39 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.952%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.71735
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -5370.55 iterations 25
Cbc0038I Solution found of -5361.05
Cbc0038I Rounding solution of -5406.2 is better than previous of -5361.05

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5443.62
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.66063 (5) obj. -5443.62 iterations 2
Cbc0038I Pass   3: suminf.    0.84514 (3) obj. -5443.62 iterations 6
Cbc0038I Pass   4: suminf.    0.73801 (3) obj. -5443.62 iterations 2
Cbc0038I Pass   5: suminf.    0.70147 (3) obj. -5443.62 iterations 4
Cbc0038I Pass   6: suminf.    0.42911 (3) obj. -5443.62 iterations 1
Cbc0038I Pass   7: suminf.    1.07483 (6) obj. -5443.62 iterations 12
Cbc0038I Pass   8: suminf.    0.08440 (4) obj. -5443.62 iterations 5
Cbc0038I Pass   9: suminf.    0.80714 (3) obj. -5443.62 iterations 4
Cbc0038I Pass  10: suminf.    0.69304 (3) obj. -5443.62 iterations 1
Cbc0038I Pass  11: suminf.    0.54008 (3) obj. -5443.62 iterations 3
Cbc0038I Pass  12: suminf.    0.32671 (3) obj. -5443.62 iterations 1
Cbc0038I Pass  13: suminf.    2.43953 (10) obj. -5443.62 iterations 9
Cbc0038I Pass  14: suminf.    1.28494 (6) obj. -5443.62 iterations 4
Cbc0038I Pass  15: suminf.    0.80714 (3) obj. -5443.62 iterations 6
Cbc0038I Pass  16: suminf.    0.69304 (3) obj. -5443.62 iterations 1
Cbc0038I Pass  17: suminf.    0.54008 (3) obj. -5443.62 iterations 3
Cbc0038I Pass  18: suminf.    0.32671 (3) obj. -5443.62 iterations 1
Cbc0038I Pass  19: suminf.    1.06424 (6) obj. -5443.62 iterations 5
Cbc0038I Pass  20: suminf.    0.43498 (4) obj. -5443.62 iterations 3
Cbc0038I Pass  21: suminf.    0.85497 (3) obj. -5443.62 iterations 4
Cbc0038I Pass  22: suminf.    0.65891 (2) obj. -5443.62 iterations 1
Cbc0038I Pass  23: suminf.    0.81478 (2) obj. -5443.62 iterations 1
Cbc0038I Pass  24: suminf.    1.62606 (6) obj. -5443.62 iterations 7
Cbc0038I Pass  25: suminf.    1.21985 (4) obj. -5443.62 iterations 3
Cbc0038I Pass  26: suminf.    0.92717 (2) obj. -5443.62 iterations 4
Cbc0038I Pass  27: suminf.    0.92717 (2) obj. -5443.62 iterations 0
Cbc0038I Pass  28: suminf.    0.68770 (2) obj. -5443.62 iterations 2
Cbc0038I Pass  29: suminf.    0.68770 (2) obj. -5443.62 iterations 0
Cbc0038I Pass  30: suminf.    2.10562 (6) obj. -5443.62 iterations 6
Cbc0038I Pass  31: suminf.    1.63120 (4) obj. -5443.62 iterations 2
Cbc0038I Rounding solution of -5414.4 is better than previous of -5406.2

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -5414.4 to -5518.07 (0.02 seconds)
Cbc0038I Round again with cutoff of -5570.54
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.93961 (5) obj. -5570.54 iterations 0
Cbc0038I Pass  32: suminf.    1.27135 (3) obj. -5570.54 iterations 6
Cbc0038I Pass  33: suminf.    0.99561 (2) obj. -5570.54 iterations 1
Cbc0038I Pass  34: suminf.    0.91120 (2) obj. -5570.54 iterations 1
Cbc0038I Pass  35: suminf.    3.16461 (11) obj. -5570.54 iterations 12
Cbc0038I Pass  36: suminf.    2.66769 (9) obj. -5570.54 iterations 3
Cbc0038I Pass  37: suminf.    1.71539 (5) obj. -5570.54 iterations 11
Cbc0038I Pass  38: suminf.    1.26728 (4) obj. -5570.54 iterations 1
Cbc0038I Pass  39: suminf.    1.56208 (4) obj. -5570.54 iterations 3
Cbc0038I Pass  40: suminf.    1.08183 (3) obj. -5570.54 iterations 3
Cbc0038I Pass  41: suminf.    0.70186 (3) obj. -5570.54 iterations 3
Cbc0038I Pass  42: suminf.    2.00114 (8) obj. -5570.54 iterations 11
Cbc0038I Pass  43: suminf.    2.00114 (8) obj. -5570.54 iterations 2
Cbc0038I Pass  44: suminf.    1.55057 (4) obj. -5570.54 iterations 7
Cbc0038I Pass  45: suminf.    1.55057 (4) obj. -5570.54 iterations 0
Cbc0038I Pass  46: suminf.    0.58581 (2) obj. -5570.54 iterations 5
Cbc0038I Pass  47: suminf.    0.59639 (2) obj. -5570.54 iterations 1
Cbc0038I Pass  48: suminf.    1.51545 (6) obj. -5570.54 iterations 12
Cbc0038I Pass  49: suminf.    1.43796 (5) obj. -5570.54 iterations 2
Cbc0038I Pass  50: suminf.    1.56208 (4) obj. -5570.54 iterations 3
Cbc0038I Pass  51: suminf.    1.08183 (3) obj. -5570.54 iterations 3
Cbc0038I Pass  52: suminf.    0.70186 (3) obj. -5570.54 iterations 3
Cbc0038I Pass  53: suminf.    1.03846 (5) obj. -5570.54 iterations 2
Cbc0038I Pass  54: suminf.    2.18531 (8) obj. -5570.54 iterations 6
Cbc0038I Pass  55: suminf.    1.20185 (7) obj. -5570.54 iterations 2
Cbc0038I Pass  56: suminf.    1.57391 (4) obj. -5570.54 iterations 8
Cbc0038I Pass  57: suminf.    1.09133 (3) obj. -5570.54 iterations 3
Cbc0038I Pass  58: suminf.    0.68967 (3) obj. -5570.54 iterations 3
Cbc0038I Pass  59: suminf.    1.37413 (6) obj. -5570.54 iterations 7
Cbc0038I Pass  60: suminf.    0.99474 (4) obj. -5570.54 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -5518.07 - took 0.02 seconds
Cbc0012I Integer solution of -5518.069 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 39 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 8
Cbc0013I At root node, 2 cuts changed objective from -5777.5438 to -5565.1634 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 97 row cuts average 2.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5518.069, took 23 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.07

