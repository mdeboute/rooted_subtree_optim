Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-17) rows, 51 (-2) columns and 270 (-33) elements
Clp1000I sum of infeasibilities 1.62819e-05 - average 1.85022e-07, 4 fixed columns
Coin0506I Presolve 80 (-8) rows, 47 (-4) columns and 246 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 37.188767
Clp0000I Optimal - objective value 37.188767
Coin0511I After Postsolve, objective 37.188767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.188767
Clp0000I Optimal - objective value 37.188767
Clp0000I Optimal - objective value 37.188767
Coin0511I After Postsolve, objective 37.188767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.18876723 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 51 columns (50 integer (50 of which binary)) and 270 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.637%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.59116
Cbc0038I Solution found of 6.57622
Cbc0038I Relaxing continuous gives 6.14195
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 59 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 6.14195 to -4.79858 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.03769
Cbc0038I Pass   1: suminf.    1.84398 (8) obj. -8.03769 iterations 37
Cbc0038I Pass   2: suminf.    0.10595 (2) obj. -8.03769 iterations 11
Cbc0038I Pass   3: suminf.    0.64981 (3) obj. -8.03769 iterations 5
Cbc0038I Pass   4: suminf.    1.07652 (4) obj. -8.03769 iterations 2
Cbc0038I Pass   5: suminf.    0.65186 (3) obj. -8.03769 iterations 1
Cbc0038I Pass   6: suminf.    0.20871 (2) obj. -8.03769 iterations 1
Cbc0038I Pass   7: suminf.    0.86245 (4) obj. -8.03769 iterations 3
Cbc0038I Pass   8: suminf.    0.66004 (3) obj. -8.03769 iterations 1
Cbc0038I Pass   9: suminf.    2.15137 (8) obj. -8.03769 iterations 13
Cbc0038I Pass  10: suminf.    1.54276 (8) obj. -8.03769 iterations 6
Cbc0038I Pass  11: suminf.    1.24568 (7) obj. -8.03769 iterations 4
Cbc0038I Pass  12: suminf.    2.15823 (6) obj. -8.03769 iterations 7
Cbc0038I Pass  13: suminf.    2.13137 (7) obj. -8.03769 iterations 1
Cbc0038I Pass  14: suminf.    0.74845 (4) obj. -8.03769 iterations 8
Cbc0038I Pass  15: suminf.    0.20871 (2) obj. -8.03769 iterations 3
Cbc0038I Pass  16: suminf.    0.86245 (4) obj. -8.03769 iterations 3
Cbc0038I Pass  17: suminf.    0.66004 (3) obj. -8.03769 iterations 1
Cbc0038I Pass  18: suminf.    2.68061 (9) obj. -8.03769 iterations 16
Cbc0038I Pass  19: suminf.    1.92519 (7) obj. -8.03769 iterations 4
Cbc0038I Pass  20: suminf.    1.92552 (9) obj. -8.03769 iterations 1
Cbc0038I Pass  21: suminf.    1.12896 (4) obj. -8.03769 iterations 11
Cbc0038I Pass  22: suminf.    0.86354 (4) obj. -8.03769 iterations 1
Cbc0038I Pass  23: suminf.    0.57880 (3) obj. -8.03769 iterations 2
Cbc0038I Pass  24: suminf.    1.44234 (4) obj. -8.03769 iterations 5
Cbc0038I Pass  25: suminf.    0.59544 (4) obj. -8.03769 iterations 2
Cbc0038I Pass  26: suminf.    0.59544 (4) obj. -8.03769 iterations 0
Cbc0038I Pass  27: suminf.    1.35432 (4) obj. -8.03769 iterations 4
Cbc0038I Pass  28: suminf.    0.65497 (4) obj. -8.03769 iterations 2
Cbc0038I Pass  29: suminf.    0.63141 (3) obj. -8.03769 iterations 1
Cbc0038I Pass  30: suminf.    0.53387 (3) obj. -8.03769 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -4.79858 - took 0.10 seconds
Cbc0012I Integer solution of -4.79858 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 88 rows 51 columns, reduced to 59 rows 36 columns
Cbc0012I Integer solution of -8.42554 found by RINS after 0 iterations and 0 nodes (0.15 seconds)
Cbc0031I 21 added rows had average density of 41.952381
Cbc0013I At root node, 21 cuts changed objective from -37.188767 to -27.471694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6945 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1455 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 186 row cuts average 50.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0010I After 34 nodes, 2 on tree, -8.42554 best solution, best possible -27.471694 (0.68 seconds)
Cbc0001I Search completed - best objective -8.425539999999998, took 6664 iterations and 44 nodes (0.70 seconds)
Cbc0032I Strong branching done 570 times (10130 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 16, 81 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-28) rows, 88 (-14) columns and 1190 (-388) elements
Clp1000I sum of infeasibilities 5.91881e-08 - average 7.78791e-10, 56 fixed columns
Coin0506I Presolve 22 (-54) rows, 32 (-56) columns and 102 (-1088) elements
Clp0006I 0  Obj -0.54702264 Dual inf 61.385479 (31)
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 0.47937076 - largest nonzero change 2.1433612e-05 ( 0.0016870206%) - largest zero change 2.9983234e-05
Clp0000I Optimal - objective value 1.8248032
Clp0000I Optimal - objective value 1.8248032
Coin0511I After Postsolve, objective 1.8248032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1.8248032 Dual inf 13.604692 (38)
Clp0014I Perturbing problem by 0.001% of 4.7479463 - largest nonzero change 1.7714741e-05 ( 0.0017714741%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 57.126089
Clp0000I Optimal - objective value 57.126089
Clp0000I Optimal - objective value 57.126089
Coin0511I After Postsolve, objective 57.126089, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.1260893 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 76 rows, 88 columns (88 integer (88 of which binary)) and 1192 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.96132
Cbc0038I Pass   1: suminf.    3.42464 (25) obj. -36.1552 iterations 9
Cbc0038I Pass   2: suminf.    3.42464 (25) obj. -36.1552 iterations 1
Cbc0038I Pass   3: suminf.    0.89589 (8) obj. -10.5369 iterations 17
Cbc0038I Solution found of -1.67863
Cbc0038I Rounding solution of -2.93742 is better than previous of -1.67863

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 88 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2.93742 to -4.08489 (0.02 seconds)
Cbc0038I Round again with cutoff of -8.49578
Cbc0038I Pass   4: suminf.    3.42464 (25) obj. -36.1552 iterations 0
Cbc0038I Pass   5: suminf.    3.42464 (25) obj. -36.1552 iterations 1
Cbc0038I Pass   6: suminf.    0.89589 (8) obj. -10.5369 iterations 17
Cbc0038I Pass   7: suminf.    1.06615 (4) obj. -8.49578 iterations 17
Cbc0038I Pass   8: suminf.    0.33819 (2) obj. -11.0225 iterations 6
Cbc0038I Pass   9: suminf.    0.51361 (2) obj. -8.49578 iterations 9
Cbc0038I Pass  10: suminf.    0.40201 (2) obj. -8.49578 iterations 4
Cbc0038I Pass  11: suminf.    0.15424 (2) obj. -8.49578 iterations 3
Cbc0038I Pass  12: suminf.    0.67392 (7) obj. -8.49578 iterations 6
Cbc0038I Pass  13: suminf.    1.85529 (14) obj. -16.8858 iterations 16
Cbc0038I Pass  14: suminf.    0.70574 (6) obj. -12.4644 iterations 8
Cbc0038I Pass  15: suminf.    0.90717 (3) obj. -8.49578 iterations 13
Cbc0038I Pass  16: suminf.    0.48181 (2) obj. -9.60211 iterations 4
Cbc0038I Pass  17: suminf.    1.56461 (11) obj. -13.9192 iterations 27
Cbc0038I Pass  18: suminf.    1.56461 (11) obj. -13.9192 iterations 0
Cbc0038I Pass  19: suminf.    0.89141 (7) obj. -8.49578 iterations 15
Cbc0038I Pass  20: suminf.    0.84058 (7) obj. -8.49578 iterations 2
Cbc0038I Pass  21: suminf.    0.83223 (4) obj. -8.49578 iterations 18
Cbc0038I Pass  22: suminf.    0.83223 (4) obj. -8.49578 iterations 1
Cbc0038I Pass  23: suminf.    0.76507 (3) obj. -8.49578 iterations 6
Cbc0038I Pass  24: suminf.    0.72844 (4) obj. -8.49578 iterations 1
Cbc0038I Pass  25: suminf.    1.10368 (4) obj. -8.49578 iterations 7
Cbc0038I Pass  26: suminf.    1.10368 (4) obj. -8.49578 iterations 0
Cbc0038I Pass  27: suminf.    0.78982 (2) obj. -8.49578 iterations 9
Cbc0038I Pass  28: suminf.    0.46169 (3) obj. -8.49578 iterations 1
Cbc0038I Pass  29: suminf.    0.54009 (5) obj. -8.49578 iterations 6
Cbc0038I Pass  30: suminf.    0.54009 (5) obj. -8.49578 iterations 0
Cbc0038I Pass  31: suminf.    0.34073 (3) obj. -8.49578 iterations 7
Cbc0038I Pass  32: suminf.    0.30645 (3) obj. -8.49578 iterations 3
Cbc0038I Pass  33: suminf.    0.78982 (2) obj. -8.49578 iterations 5
Cbc0038I Rounding solution of -6.1996 is better than previous of -4.08489

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 88 columns, reduced to 16 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -6.1996 to -7.17733 (0.04 seconds)
Cbc0038I Round again with cutoff of -16.4352
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.42464 (25) obj. -36.1552 iterations 0
Cbc0038I Pass  34: suminf.    3.42464 (25) obj. -36.1552 iterations 1
Cbc0038I Pass  35: suminf.    1.30488 (9) obj. -16.4352 iterations 32
Cbc0038I Pass  36: suminf.    1.30488 (9) obj. -16.4352 iterations 0
Cbc0038I Pass  37: suminf.    0.96983 (5) obj. -16.4352 iterations 15
Cbc0038I Pass  38: suminf.    0.87503 (7) obj. -16.4352 iterations 3
Cbc0038I Pass  39: suminf.    1.21763 (5) obj. -16.4352 iterations 10
Cbc0038I Pass  40: suminf.    0.91757 (5) obj. -16.4352 iterations 3
Cbc0038I Pass  41: suminf.    1.21763 (5) obj. -16.4352 iterations 6
Cbc0038I Pass  42: suminf.    0.88397 (5) obj. -16.4352 iterations 3
Cbc0038I Pass  43: suminf.    1.21763 (5) obj. -16.4352 iterations 6
Cbc0038I Pass  44: suminf.    3.14079 (14) obj. -16.4352 iterations 15
Cbc0038I Pass  45: suminf.    2.06931 (11) obj. -17.6194 iterations 5
Cbc0038I Pass  46: suminf.    1.40409 (9) obj. -16.4352 iterations 2
Cbc0038I Pass  47: suminf.    1.32778 (7) obj. -16.4352 iterations 10
Cbc0038I Pass  48: suminf.    1.32395 (7) obj. -16.4352 iterations 3
Cbc0038I Pass  49: suminf.    1.50067 (7) obj. -16.4352 iterations 6
Cbc0038I Pass  50: suminf.    1.13845 (8) obj. -16.4352 iterations 1
Cbc0038I Pass  51: suminf.    1.55096 (6) obj. -16.4352 iterations 7
Cbc0038I Pass  52: suminf.    0.92907 (6) obj. -16.4352 iterations 1
Cbc0038I Pass  53: suminf.    1.02735 (6) obj. -16.4352 iterations 5
Cbc0038I Pass  54: suminf.    0.93812 (7) obj. -16.4352 iterations 3
Cbc0038I Pass  55: suminf.    1.55096 (6) obj. -16.4352 iterations 6
Cbc0038I Pass  56: suminf.    3.22750 (15) obj. -16.4352 iterations 21
Cbc0038I Pass  57: suminf.    2.85517 (13) obj. -16.4352 iterations 7
Cbc0038I Pass  58: suminf.    1.55485 (6) obj. -16.4352 iterations 16
Cbc0038I Pass  59: suminf.    0.91757 (5) obj. -16.4352 iterations 3
Cbc0038I Pass  60: suminf.    1.21763 (5) obj. -16.4352 iterations 5
Cbc0038I Pass  61: suminf.    0.88397 (5) obj. -16.4352 iterations 2
Cbc0038I Pass  62: suminf.    1.21763 (5) obj. -16.4352 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 88 columns, reduced to 37 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7.17733 - took 0.04 seconds
Cbc0012I Integer solution of -7.17733 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 76 rows 88 columns, reduced to 6 rows 7 columns
Cbc0031I 49 added rows had average density of 27.959184
Cbc0013I At root node, 49 cuts changed objective from -48.192862 to -15.23467 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11179 row cuts average 2.3 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 878 row cuts average 78.8 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 75 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1344 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 354 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.649 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.17733 best solution, best possible -15.23467 (1.87 seconds)
Cbc0016I Integer solution of -7.98 found by strong branching after 4534 iterations and 41 nodes (2.23 seconds)
Cbc0038I Full problem 76 rows 88 columns, reduced to 12 rows 18 columns
Cbc0016I Integer solution of -8.42554 found by strong branching after 4645 iterations and 47 nodes (2.29 seconds)
Cbc0001I Search completed - best objective -8.425539999999998, took 4933 iterations and 54 nodes (2.29 seconds)
Cbc0032I Strong branching done 652 times (10010 iterations), fathomed 10 nodes and fixed 10 variables
Cbc0035I Maximum depth 18, 131 variables fixed on reduced cost
Total time (CPU seconds):       1.76   (Wallclock seconds):       2.30

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-17) rows, 51 (-2) columns and 270 (-33) elements
Clp1000I sum of infeasibilities 1.62819e-05 - average 1.85022e-07, 4 fixed columns
Coin0506I Presolve 80 (-8) rows, 47 (-4) columns and 246 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 37.188767
Clp0000I Optimal - objective value 37.188767
Coin0511I After Postsolve, objective 37.188767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.188767
Clp0000I Optimal - objective value 37.188767
Clp0000I Optimal - objective value 37.188767
Coin0511I After Postsolve, objective 37.188767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.18876723 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 51 columns (50 integer (50 of which binary)) and 270 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.637%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.59116
Cbc0038I Solution found of 6.57622
Cbc0038I Relaxing continuous gives 6.14195
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 59 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 6.14195 to -4.79858 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.03769
Cbc0038I Pass   1: suminf.    1.84398 (8) obj. -8.03769 iterations 37
Cbc0038I Pass   2: suminf.    0.10595 (2) obj. -8.03769 iterations 11
Cbc0038I Pass   3: suminf.    0.64981 (3) obj. -8.03769 iterations 5
Cbc0038I Pass   4: suminf.    1.07652 (4) obj. -8.03769 iterations 2
Cbc0038I Pass   5: suminf.    0.65186 (3) obj. -8.03769 iterations 1
Cbc0038I Pass   6: suminf.    0.20871 (2) obj. -8.03769 iterations 1
Cbc0038I Pass   7: suminf.    0.86245 (4) obj. -8.03769 iterations 3
Cbc0038I Pass   8: suminf.    0.66004 (3) obj. -8.03769 iterations 1
Cbc0038I Pass   9: suminf.    2.15137 (8) obj. -8.03769 iterations 13
Cbc0038I Pass  10: suminf.    1.54276 (8) obj. -8.03769 iterations 6
Cbc0038I Pass  11: suminf.    1.24568 (7) obj. -8.03769 iterations 4
Cbc0038I Pass  12: suminf.    2.15823 (6) obj. -8.03769 iterations 7
Cbc0038I Pass  13: suminf.    2.13137 (7) obj. -8.03769 iterations 1
Cbc0038I Pass  14: suminf.    0.74845 (4) obj. -8.03769 iterations 8
Cbc0038I Pass  15: suminf.    0.20871 (2) obj. -8.03769 iterations 3
Cbc0038I Pass  16: suminf.    0.86245 (4) obj. -8.03769 iterations 3
Cbc0038I Pass  17: suminf.    0.66004 (3) obj. -8.03769 iterations 1
Cbc0038I Pass  18: suminf.    2.68061 (9) obj. -8.03769 iterations 16
Cbc0038I Pass  19: suminf.    1.92519 (7) obj. -8.03769 iterations 4
Cbc0038I Pass  20: suminf.    1.92552 (9) obj. -8.03769 iterations 1
Cbc0038I Pass  21: suminf.    1.12896 (4) obj. -8.03769 iterations 11
Cbc0038I Pass  22: suminf.    0.86354 (4) obj. -8.03769 iterations 1
Cbc0038I Pass  23: suminf.    0.57880 (3) obj. -8.03769 iterations 2
Cbc0038I Pass  24: suminf.    1.44234 (4) obj. -8.03769 iterations 5
Cbc0038I Pass  25: suminf.    0.59544 (4) obj. -8.03769 iterations 2
Cbc0038I Pass  26: suminf.    0.59544 (4) obj. -8.03769 iterations 0
Cbc0038I Pass  27: suminf.    1.35432 (4) obj. -8.03769 iterations 4
Cbc0038I Pass  28: suminf.    0.65497 (4) obj. -8.03769 iterations 2
Cbc0038I Pass  29: suminf.    0.63141 (3) obj. -8.03769 iterations 1
Cbc0038I Pass  30: suminf.    0.53387 (3) obj. -8.03769 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 51 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -4.79858 - took 0.12 seconds
Cbc0012I Integer solution of -4.79858 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 88 rows 51 columns, reduced to 59 rows 36 columns
Cbc0012I Integer solution of -8.42554 found by RINS after 0 iterations and 0 nodes (0.18 seconds)
Cbc0031I 21 added rows had average density of 41.952381
Cbc0013I At root node, 21 cuts changed objective from -37.188767 to -27.471694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6945 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1455 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 186 row cuts average 50.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.42554 best solution, best possible -27.471694 (0.73 seconds)
Cbc0001I Search completed - best objective -8.425539999999998, took 6664 iterations and 44 nodes (0.98 seconds)
Cbc0032I Strong branching done 570 times (10130 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 16, 81 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.99

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-29) rows, 88 (-15) columns and 1190 (-389) elements
Clp1000I sum of infeasibilities 5.91881e-08 - average 7.78791e-10, 56 fixed columns
Coin0506I Presolve 22 (-54) rows, 32 (-56) columns and 102 (-1088) elements
Clp0006I 0  Obj -0.54702264 Dual inf 61.385479 (31)
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 0.47937076 - largest nonzero change 2.1433612e-05 ( 0.0016870206%) - largest zero change 2.9983234e-05
Clp0000I Optimal - objective value 1.8248032
Clp0000I Optimal - objective value 1.8248032
Coin0511I After Postsolve, objective 1.8248032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1.8248032 Dual inf 13.604692 (38)
Clp0014I Perturbing problem by 0.001% of 4.7479463 - largest nonzero change 1.7714741e-05 ( 0.0017714741%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 57.126089
Clp0000I Optimal - objective value 57.126089
Clp0000I Optimal - objective value 57.126089
Coin0511I After Postsolve, objective 57.126089, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.1260893 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 76 rows, 88 columns (88 integer (88 of which binary)) and 1192 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.96132
Cbc0038I Pass   1: suminf.    3.42464 (25) obj. -36.1552 iterations 9
Cbc0038I Pass   2: suminf.    3.42464 (25) obj. -36.1552 iterations 1
Cbc0038I Pass   3: suminf.    0.89589 (8) obj. -10.5369 iterations 17
Cbc0038I Solution found of -1.67863
Cbc0038I Rounding solution of -2.93742 is better than previous of -1.67863

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 88 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2.93742 to -4.08489 (0.02 seconds)
Cbc0038I Round again with cutoff of -8.49578
Cbc0038I Pass   4: suminf.    3.42464 (25) obj. -36.1552 iterations 0
Cbc0038I Pass   5: suminf.    3.42464 (25) obj. -36.1552 iterations 1
Cbc0038I Pass   6: suminf.    0.89589 (8) obj. -10.5369 iterations 17
Cbc0038I Pass   7: suminf.    1.06615 (4) obj. -8.49578 iterations 17
Cbc0038I Pass   8: suminf.    0.33819 (2) obj. -11.0225 iterations 6
Cbc0038I Pass   9: suminf.    0.51361 (2) obj. -8.49578 iterations 9
Cbc0038I Pass  10: suminf.    0.40201 (2) obj. -8.49578 iterations 4
Cbc0038I Pass  11: suminf.    0.15424 (2) obj. -8.49578 iterations 3
Cbc0038I Pass  12: suminf.    0.67392 (7) obj. -8.49578 iterations 6
Cbc0038I Pass  13: suminf.    1.85529 (14) obj. -16.8858 iterations 16
Cbc0038I Pass  14: suminf.    0.70574 (6) obj. -12.4644 iterations 8
Cbc0038I Pass  15: suminf.    0.90717 (3) obj. -8.49578 iterations 13
Cbc0038I Pass  16: suminf.    0.48181 (2) obj. -9.60211 iterations 4
Cbc0038I Pass  17: suminf.    1.56461 (11) obj. -13.9192 iterations 27
Cbc0038I Pass  18: suminf.    1.56461 (11) obj. -13.9192 iterations 0
Cbc0038I Pass  19: suminf.    0.89141 (7) obj. -8.49578 iterations 15
Cbc0038I Pass  20: suminf.    0.84058 (7) obj. -8.49578 iterations 2
Cbc0038I Pass  21: suminf.    0.83223 (4) obj. -8.49578 iterations 18
Cbc0038I Pass  22: suminf.    0.83223 (4) obj. -8.49578 iterations 1
Cbc0038I Pass  23: suminf.    0.76507 (3) obj. -8.49578 iterations 6
Cbc0038I Pass  24: suminf.    0.72844 (4) obj. -8.49578 iterations 1
Cbc0038I Pass  25: suminf.    1.10368 (4) obj. -8.49578 iterations 7
Cbc0038I Pass  26: suminf.    1.10368 (4) obj. -8.49578 iterations 0
Cbc0038I Pass  27: suminf.    0.78982 (2) obj. -8.49578 iterations 9
Cbc0038I Pass  28: suminf.    0.46169 (3) obj. -8.49578 iterations 1
Cbc0038I Pass  29: suminf.    0.54009 (5) obj. -8.49578 iterations 6
Cbc0038I Pass  30: suminf.    0.54009 (5) obj. -8.49578 iterations 0
Cbc0038I Pass  31: suminf.    0.34073 (3) obj. -8.49578 iterations 7
Cbc0038I Pass  32: suminf.    0.30645 (3) obj. -8.49578 iterations 3
Cbc0038I Pass  33: suminf.    0.78982 (2) obj. -8.49578 iterations 5
Cbc0038I Rounding solution of -6.1996 is better than previous of -4.08489

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 88 columns, reduced to 16 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -6.1996 to -7.17733 (0.04 seconds)
Cbc0038I Round again with cutoff of -16.4352
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.42464 (25) obj. -36.1552 iterations 0
Cbc0038I Pass  34: suminf.    3.42464 (25) obj. -36.1552 iterations 1
Cbc0038I Pass  35: suminf.    1.30488 (9) obj. -16.4352 iterations 32
Cbc0038I Pass  36: suminf.    1.30488 (9) obj. -16.4352 iterations 0
Cbc0038I Pass  37: suminf.    0.96983 (5) obj. -16.4352 iterations 15
Cbc0038I Pass  38: suminf.    0.87503 (7) obj. -16.4352 iterations 3
Cbc0038I Pass  39: suminf.    1.21763 (5) obj. -16.4352 iterations 10
Cbc0038I Pass  40: suminf.    0.91757 (5) obj. -16.4352 iterations 3
Cbc0038I Pass  41: suminf.    1.21763 (5) obj. -16.4352 iterations 6
Cbc0038I Pass  42: suminf.    0.88397 (5) obj. -16.4352 iterations 3
Cbc0038I Pass  43: suminf.    1.21763 (5) obj. -16.4352 iterations 6
Cbc0038I Pass  44: suminf.    3.14079 (14) obj. -16.4352 iterations 15
Cbc0038I Pass  45: suminf.    2.06931 (11) obj. -17.6194 iterations 5
Cbc0038I Pass  46: suminf.    1.40409 (9) obj. -16.4352 iterations 2
Cbc0038I Pass  47: suminf.    1.32778 (7) obj. -16.4352 iterations 10
Cbc0038I Pass  48: suminf.    1.32395 (7) obj. -16.4352 iterations 3
Cbc0038I Pass  49: suminf.    1.50067 (7) obj. -16.4352 iterations 6
Cbc0038I Pass  50: suminf.    1.13845 (8) obj. -16.4352 iterations 1
Cbc0038I Pass  51: suminf.    1.55096 (6) obj. -16.4352 iterations 7
Cbc0038I Pass  52: suminf.    0.92907 (6) obj. -16.4352 iterations 1
Cbc0038I Pass  53: suminf.    1.02735 (6) obj. -16.4352 iterations 5
Cbc0038I Pass  54: suminf.    0.93812 (7) obj. -16.4352 iterations 3
Cbc0038I Pass  55: suminf.    1.55096 (6) obj. -16.4352 iterations 6
Cbc0038I Pass  56: suminf.    3.22750 (15) obj. -16.4352 iterations 21
Cbc0038I Pass  57: suminf.    2.85517 (13) obj. -16.4352 iterations 7
Cbc0038I Pass  58: suminf.    1.55485 (6) obj. -16.4352 iterations 16
Cbc0038I Pass  59: suminf.    0.91757 (5) obj. -16.4352 iterations 3
Cbc0038I Pass  60: suminf.    1.21763 (5) obj. -16.4352 iterations 5
Cbc0038I Pass  61: suminf.    0.88397 (5) obj. -16.4352 iterations 2
Cbc0038I Pass  62: suminf.    1.21763 (5) obj. -16.4352 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 88 columns, reduced to 37 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7.17733 - took 0.05 seconds
Cbc0012I Integer solution of -7.17733 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 76 rows 88 columns, reduced to 6 rows 7 columns
Cbc0031I 49 added rows had average density of 27.959184
Cbc0013I At root node, 49 cuts changed objective from -48.192862 to -15.23467 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11179 row cuts average 2.3 elements, 1 column cuts (1 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 878 row cuts average 78.8 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 75 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1344 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 354 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.750 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.17733 best solution, best possible -15.23467 (2.23 seconds)
Cbc0016I Integer solution of -7.98 found by strong branching after 4534 iterations and 41 nodes (2.61 seconds)
Cbc0038I Full problem 76 rows 88 columns, reduced to 12 rows 18 columns
Cbc0016I Integer solution of -8.42554 found by strong branching after 4645 iterations and 47 nodes (2.67 seconds)
Cbc0001I Search completed - best objective -8.425539999999998, took 4933 iterations and 54 nodes (2.67 seconds)
Cbc0032I Strong branching done 652 times (10010 iterations), fathomed 10 nodes and fixed 10 variables
Cbc0035I Maximum depth 18, 131 variables fixed on reduced cost
Total time (CPU seconds):       2.00   (Wallclock seconds):       2.68

