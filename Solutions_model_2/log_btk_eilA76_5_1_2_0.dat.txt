Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 74 (-4) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 9.5902e-06 - average 7.37708e-08, 16 fixed columns
Coin0506I Presolve 102 (-28) rows, 58 (-16) columns and 312 (-88) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 2.2207436 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Coin0511I After Postsolve, objective 39.984651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Coin0511I After Postsolve, objective 39.984651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.98465072 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 74 columns (73 integer (73 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.33912
Cbc0038I Solution found of 7.28809
Cbc0038I Relaxing continuous gives -4.79057
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -4.79057 to -9.61298 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.6502
Cbc0038I Pass   1: suminf.    1.51629 (22) obj. -12.6502 iterations 43
Cbc0038I Pass   2: suminf.    1.34341 (6) obj. -12.6502 iterations 22
Cbc0038I Pass   3: suminf.    0.80177 (4) obj. -12.6502 iterations 4
Cbc0038I Pass   4: suminf.    0.79555 (4) obj. -12.6502 iterations 1
Cbc0038I Pass   5: suminf.    0.87426 (3) obj. -12.6502 iterations 6
Cbc0038I Pass   6: suminf.    0.60388 (2) obj. -12.6502 iterations 4
Cbc0038I Pass   7: suminf.    0.27673 (2) obj. -12.6502 iterations 1
Cbc0038I Pass   8: suminf.    2.34812 (10) obj. -12.6502 iterations 15
Cbc0038I Pass   9: suminf.    1.41901 (6) obj. -12.6502 iterations 14
Cbc0038I Pass  10: suminf.    0.90092 (2) obj. -12.6502 iterations 15
Cbc0038I Pass  11: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  12: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  13: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  14: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  15: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  16: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  17: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  18: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  19: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  20: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  21: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  22: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  23: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  24: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  25: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  26: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  27: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  28: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  29: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  30: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -9.61298 to -9.66245 (0.08 seconds)
Cbc0038I Round again with cutoff of -18.1171
Cbc0038I Pass  30: suminf.    2.57097 (22) obj. -18.1171 iterations 0
Cbc0038I Pass  31: suminf.    1.86468 (6) obj. -18.1171 iterations 27
Cbc0038I Pass  32: suminf.    1.02679 (4) obj. -18.1171 iterations 8
Cbc0038I Pass  33: suminf.    1.16283 (4) obj. -18.1171 iterations 6
Cbc0038I Pass  34: suminf.    1.05753 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  35: suminf.    0.85726 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  36: suminf.    0.76669 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  37: suminf.    2.59577 (9) obj. -18.1171 iterations 19
Cbc0038I Pass  38: suminf.    2.45581 (9) obj. -18.1171 iterations 8
Cbc0038I Pass  39: suminf.    2.07207 (7) obj. -18.1171 iterations 16
Cbc0038I Pass  40: suminf.    2.07207 (7) obj. -18.1171 iterations 0
Cbc0038I Pass  41: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  42: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  43: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I Pass  44: suminf.    1.12501 (3) obj. -18.1171 iterations 0
Cbc0038I Pass  45: suminf.    1.26994 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  46: suminf.    0.80477 (3) obj. -18.1171 iterations 2
Cbc0038I Pass  47: suminf.    0.78242 (4) obj. -18.1171 iterations 1
Cbc0038I Pass  48: suminf.    2.07207 (7) obj. -18.1171 iterations 4
Cbc0038I Pass  49: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  50: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  51: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I Pass  52: suminf.    1.12501 (3) obj. -18.1171 iterations 0
Cbc0038I Pass  53: suminf.    1.26994 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  54: suminf.    0.80477 (3) obj. -18.1171 iterations 2
Cbc0038I Pass  55: suminf.    0.78242 (4) obj. -18.1171 iterations 1
Cbc0038I Pass  56: suminf.    2.07207 (7) obj. -18.1171 iterations 4
Cbc0038I Pass  57: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  58: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  59: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -9.66245 - took 0.11 seconds
Cbc0012I Integer solution of -9.66245 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 63 rows 37 columns
Cbc0031I 20 added rows had average density of 52.7
Cbc0013I At root node, 20 cuts changed objective from -39.984651 to -32.898242 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10165 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1350 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.66245 best solution, best possible -32.898242 (0.73 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 27 rows 21 columns
Cbc0012I Integer solution of -10.20612 found by RINS after 7805 iterations and 43 nodes (0.96 seconds)
Cbc0012I Integer solution of -10.6429 found by rounding after 8066 iterations and 55 nodes (0.98 seconds)
Cbc0004I Integer solution of -11.18552 found after 8102 iterations and 57 nodes (0.98 seconds)
Cbc0001I Search completed - best objective -11.18552, took 8760 iterations and 70 nodes (1.01 seconds)
Cbc0032I Strong branching done 894 times (15589 iterations), fathomed 11 nodes and fixed 43 variables
Cbc0035I Maximum depth 22, 234 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 115 (-37) columns and 1914 (-1389) elements
Clp1000I sum of infeasibilities 7.3848e-08 - average 7.4594e-10, 14 fixed columns
Coin0506I Presolve 89 (-10) rows, 101 (-14) columns and 1531 (-383) elements
Clp0006I 0  Obj 51.986384 Dual inf 6.0239685 (99)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.4559539 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 60.199435
Clp0000I Optimal - objective value 60.199435
Coin0511I After Postsolve, objective 60.199435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.199435
Clp0000I Optimal - objective value 60.199435
Clp0000I Optimal - objective value 60.199435
Clp0000I Optimal - objective value 60.199435
Coin0511I After Postsolve, objective 60.199435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.19943499 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 115 columns (115 integer (115 of which binary)) and 1920 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.731%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 4.47276
Cbc0038I Pass   1: suminf.    1.74770 (30) obj. -39.5514 iterations 15
Cbc0038I Pass   2: suminf.    0.97535 (19) obj. -29.3238 iterations 11
Cbc0038I Solution found of 2.86542
Cbc0038I Rounding solution of 1.91256 is better than previous of 2.86542

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 1.91256 to -5.452 (0.03 seconds)
Cbc0038I Round again with cutoff of -9.9675
Cbc0038I Pass   3: suminf.    1.74770 (30) obj. -39.5514 iterations 0
Cbc0038I Pass   4: suminf.    0.85414 (17) obj. -24.6268 iterations 13
Cbc0038I Pass   5: suminf.    0.63447 (8) obj. -9.9675 iterations 10
Cbc0038I Pass   6: suminf.    0.33396 (8) obj. -12.3716 iterations 1
Cbc0038I Pass   7: suminf.    0.93124 (15) obj. -9.9675 iterations 14
Cbc0038I Pass   8: suminf.    0.93124 (15) obj. -9.9675 iterations 0
Cbc0038I Pass   9: suminf.    1.46262 (8) obj. -9.9675 iterations 24
Cbc0038I Pass  10: suminf.    1.32069 (7) obj. -9.9675 iterations 3
Cbc0038I Pass  11: suminf.    0.76701 (7) obj. -9.9675 iterations 1
Cbc0038I Pass  12: suminf.    1.32069 (7) obj. -9.9675 iterations 6
Cbc0038I Pass  13: suminf.    1.64484 (15) obj. -9.9675 iterations 21
Cbc0038I Pass  14: suminf.    1.40995 (14) obj. -9.9675 iterations 6
Cbc0038I Pass  15: suminf.    1.32069 (7) obj. -9.9675 iterations 19
Cbc0038I Pass  16: suminf.    2.43513 (18) obj. -9.9675 iterations 23
Cbc0038I Pass  17: suminf.    2.43513 (18) obj. -9.9675 iterations 3
Cbc0038I Pass  18: suminf.    1.95732 (9) obj. -9.9675 iterations 24
Cbc0038I Pass  19: suminf.    1.01848 (8) obj. -9.9675 iterations 5
Cbc0038I Pass  20: suminf.    0.75510 (6) obj. -9.9675 iterations 4
Cbc0038I Pass  21: suminf.    0.94769 (5) obj. -9.9675 iterations 7
Cbc0038I Pass  22: suminf.    1.65072 (15) obj. -9.9675 iterations 18
Cbc0038I Pass  23: suminf.    1.32475 (15) obj. -9.9675 iterations 5
Cbc0038I Pass  24: suminf.    2.82079 (11) obj. -9.9675 iterations 16
Cbc0038I Pass  25: suminf.    1.95732 (9) obj. -9.9675 iterations 1
Cbc0038I Pass  26: suminf.    1.01848 (8) obj. -9.9675 iterations 4
Cbc0038I Pass  27: suminf.    0.75510 (6) obj. -9.9675 iterations 4
Cbc0038I Pass  28: suminf.    0.94769 (5) obj. -9.9675 iterations 7
Cbc0038I Pass  29: suminf.    2.93955 (14) obj. -9.9675 iterations 15
Cbc0038I Pass  30: suminf.    1.57453 (13) obj. -9.9675 iterations 3
Cbc0038I Pass  31: suminf.    1.12008 (13) obj. -9.9675 iterations 5
Cbc0038I Pass  32: suminf.    0.94769 (5) obj. -9.9675 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -5.452 to -8.53583 (0.13 seconds)
Cbc0038I Round again with cutoff of -18.0952
Cbc0038I Pass  32: suminf.    1.74770 (30) obj. -39.5514 iterations 0
Cbc0038I Pass  33: suminf.    0.51301 (13) obj. -18.0952 iterations 24
Cbc0038I Pass  34: suminf.    2.73784 (11) obj. -18.0952 iterations 23
Cbc0038I Pass  35: suminf.    2.73784 (11) obj. -18.0952 iterations 0
Cbc0038I Pass  36: suminf.    2.26648 (6) obj. -18.0952 iterations 9
Cbc0038I Pass  37: suminf.    1.40249 (6) obj. -18.0952 iterations 1
Cbc0038I Pass  38: suminf.    1.11232 (6) obj. -18.0952 iterations 4
Cbc0038I Pass  39: suminf.    2.38483 (13) obj. -18.0952 iterations 9
Cbc0038I Pass  40: suminf.    2.38483 (13) obj. -18.0952 iterations 0
Cbc0038I Pass  41: suminf.    2.40827 (11) obj. -18.0952 iterations 14
Cbc0038I Pass  42: suminf.    1.97026 (12) obj. -18.0952 iterations 2
Cbc0038I Pass  43: suminf.    1.34285 (11) obj. -18.0952 iterations 9
Cbc0038I Pass  44: suminf.    2.40827 (11) obj. -18.0952 iterations 12
Cbc0038I Pass  45: suminf.    2.19410 (11) obj. -18.0952 iterations 1
Cbc0038I Pass  46: suminf.    2.52470 (12) obj. -18.0952 iterations 13
Cbc0038I Pass  47: suminf.    2.49440 (11) obj. -18.0952 iterations 4
Cbc0038I Pass  48: suminf.    2.40827 (11) obj. -18.0952 iterations 8
Cbc0038I Pass  49: suminf.    1.97026 (12) obj. -18.0952 iterations 2
Cbc0038I Pass  50: suminf.    1.34285 (11) obj. -18.0952 iterations 9
Cbc0038I Pass  51: suminf.    2.40827 (11) obj. -18.0952 iterations 12
Cbc0038I Pass  52: suminf.    2.19410 (11) obj. -18.0952 iterations 1
Cbc0038I Pass  53: suminf.    2.52470 (12) obj. -18.0952 iterations 11
Cbc0038I Pass  54: suminf.    2.49440 (11) obj. -18.0952 iterations 4
Cbc0038I Pass  55: suminf.    2.40827 (11) obj. -18.0952 iterations 8
Cbc0038I Pass  56: suminf.    1.97026 (12) obj. -18.0952 iterations 2
Cbc0038I Pass  57: suminf.    1.34285 (11) obj. -18.0952 iterations 10
Cbc0038I Pass  58: suminf.    2.40827 (11) obj. -18.0952 iterations 12
Cbc0038I Pass  59: suminf.    2.19410 (11) obj. -18.0952 iterations 1
Cbc0038I Pass  60: suminf.    2.52470 (12) obj. -18.0952 iterations 11
Cbc0038I Pass  61: suminf.    2.49440 (11) obj. -18.0952 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -8.53583 - took 0.13 seconds
Cbc0012I Integer solution of -8.53583 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 25 rows 28 columns
Cbc0031I 50 added rows had average density of 39.98
Cbc0013I At root node, 50 cuts changed objective from -50.606142 to -22.608652 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22123 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1566 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 719 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1137 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 333 row cuts average 55.8 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.632 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.53583 best solution, best possible -22.608652 (2.60 seconds)
Cbc0010I After 7 nodes, 6 on tree, -8.53583 best solution, best possible -22.402444 (3.31 seconds)
Cbc0016I Integer solution of -8.61711 found by strong branching after 5857 iterations and 22 nodes (3.41 seconds)
Cbc0012I Integer solution of -8.67904 found by DiveCoefficient after 6056 iterations and 34 nodes (3.44 seconds)
Cbc0012I Integer solution of -9.48801 found by rounding after 6152 iterations and 41 nodes (3.46 seconds)
Cbc0012I Integer solution of -9.67904 found by rounding after 6214 iterations and 43 nodes (3.46 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -10.82194 found by rounding after 7310 iterations and 74 nodes (3.79 seconds)
Cbc0004I Integer solution of -11.18552 found after 7363 iterations and 81 nodes (3.81 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 63 rows 73 columns
Cbc0010I After 92 nodes, 7 on tree, -11.18552 best solution, best possible -22.402444 (4.07 seconds)
Cbc0001I Search completed - best objective -11.18552, took 8450 iterations and 110 nodes (4.12 seconds)
Cbc0032I Strong branching done 1272 times (19640 iterations), fathomed 12 nodes and fixed 16 variables
Cbc0035I Maximum depth 20, 233 variables fixed on reduced cost
Total time (CPU seconds):       3.34   (Wallclock seconds):       4.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 74 (-4) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 9.5902e-06 - average 7.37708e-08, 16 fixed columns
Coin0506I Presolve 102 (-28) rows, 58 (-16) columns and 312 (-88) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 2.2207436 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Coin0511I After Postsolve, objective 39.984651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Coin0511I After Postsolve, objective 39.984651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.98465072 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 74 columns (73 integer (73 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.33912
Cbc0038I Solution found of 7.28809
Cbc0038I Relaxing continuous gives -4.79057
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -4.79057 to -9.61298 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.6502
Cbc0038I Pass   1: suminf.    1.51629 (22) obj. -12.6502 iterations 43
Cbc0038I Pass   2: suminf.    1.34341 (6) obj. -12.6502 iterations 22
Cbc0038I Pass   3: suminf.    0.80177 (4) obj. -12.6502 iterations 4
Cbc0038I Pass   4: suminf.    0.79555 (4) obj. -12.6502 iterations 1
Cbc0038I Pass   5: suminf.    0.87426 (3) obj. -12.6502 iterations 6
Cbc0038I Pass   6: suminf.    0.60388 (2) obj. -12.6502 iterations 4
Cbc0038I Pass   7: suminf.    0.27673 (2) obj. -12.6502 iterations 1
Cbc0038I Pass   8: suminf.    2.34812 (10) obj. -12.6502 iterations 15
Cbc0038I Pass   9: suminf.    1.41901 (6) obj. -12.6502 iterations 14
Cbc0038I Pass  10: suminf.    0.90092 (2) obj. -12.6502 iterations 15
Cbc0038I Pass  11: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  12: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  13: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  14: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  15: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  16: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  17: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  18: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  19: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  20: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  21: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  22: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  23: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  24: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  25: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  26: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  27: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  28: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  29: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  30: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -9.61298 to -9.66245 (0.08 seconds)
Cbc0038I Round again with cutoff of -18.1171
Cbc0038I Pass  30: suminf.    2.57097 (22) obj. -18.1171 iterations 0
Cbc0038I Pass  31: suminf.    1.86468 (6) obj. -18.1171 iterations 27
Cbc0038I Pass  32: suminf.    1.02679 (4) obj. -18.1171 iterations 8
Cbc0038I Pass  33: suminf.    1.16283 (4) obj. -18.1171 iterations 6
Cbc0038I Pass  34: suminf.    1.05753 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  35: suminf.    0.85726 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  36: suminf.    0.76669 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  37: suminf.    2.59577 (9) obj. -18.1171 iterations 19
Cbc0038I Pass  38: suminf.    2.45581 (9) obj. -18.1171 iterations 8
Cbc0038I Pass  39: suminf.    2.07207 (7) obj. -18.1171 iterations 16
Cbc0038I Pass  40: suminf.    2.07207 (7) obj. -18.1171 iterations 0
Cbc0038I Pass  41: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  42: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  43: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I Pass  44: suminf.    1.12501 (3) obj. -18.1171 iterations 0
Cbc0038I Pass  45: suminf.    1.26994 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  46: suminf.    0.80477 (3) obj. -18.1171 iterations 2
Cbc0038I Pass  47: suminf.    0.78242 (4) obj. -18.1171 iterations 1
Cbc0038I Pass  48: suminf.    2.07207 (7) obj. -18.1171 iterations 4
Cbc0038I Pass  49: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  50: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  51: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I Pass  52: suminf.    1.12501 (3) obj. -18.1171 iterations 0
Cbc0038I Pass  53: suminf.    1.26994 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  54: suminf.    0.80477 (3) obj. -18.1171 iterations 2
Cbc0038I Pass  55: suminf.    0.78242 (4) obj. -18.1171 iterations 1
Cbc0038I Pass  56: suminf.    2.07207 (7) obj. -18.1171 iterations 4
Cbc0038I Pass  57: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  58: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  59: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -9.66245 - took 0.10 seconds
Cbc0012I Integer solution of -9.66245 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 63 rows 37 columns
Cbc0031I 20 added rows had average density of 52.7
Cbc0013I At root node, 20 cuts changed objective from -39.984651 to -32.898242 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10165 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1350 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.66245 best solution, best possible -32.898242 (0.80 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 27 rows 21 columns
Cbc0012I Integer solution of -10.20612 found by RINS after 7805 iterations and 43 nodes (1.05 seconds)
Cbc0012I Integer solution of -10.6429 found by rounding after 8066 iterations and 55 nodes (1.08 seconds)
Cbc0004I Integer solution of -11.18552 found after 8102 iterations and 57 nodes (1.08 seconds)
Cbc0001I Search completed - best objective -11.18552, took 8760 iterations and 70 nodes (1.11 seconds)
Cbc0032I Strong branching done 894 times (15589 iterations), fathomed 11 nodes and fixed 43 variables
Cbc0035I Maximum depth 22, 234 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 115 (-38) columns and 1914 (-1390) elements
Clp1000I sum of infeasibilities 7.3848e-08 - average 7.4594e-10, 14 fixed columns
Coin0506I Presolve 89 (-10) rows, 101 (-14) columns and 1531 (-383) elements
Clp0006I 0  Obj 51.986384 Dual inf 6.0239685 (99)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.4559539 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 60.199435
Clp0000I Optimal - objective value 60.199435
Coin0511I After Postsolve, objective 60.199435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.199435
Clp0000I Optimal - objective value 60.199435
Clp0000I Optimal - objective value 60.199435
Clp0000I Optimal - objective value 60.199435
Coin0511I After Postsolve, objective 60.199435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.19943499 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 115 columns (115 integer (115 of which binary)) and 1920 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.731%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 4.47276
Cbc0038I Pass   1: suminf.    1.74770 (30) obj. -39.5514 iterations 15
Cbc0038I Pass   2: suminf.    0.97535 (19) obj. -29.3238 iterations 11
Cbc0038I Solution found of 2.86542
Cbc0038I Rounding solution of 1.91256 is better than previous of 2.86542

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 1.91256 to -5.452 (0.03 seconds)
Cbc0038I Round again with cutoff of -9.9675
Cbc0038I Pass   3: suminf.    1.74770 (30) obj. -39.5514 iterations 0
Cbc0038I Pass   4: suminf.    0.85414 (17) obj. -24.6268 iterations 13
Cbc0038I Pass   5: suminf.    0.63447 (8) obj. -9.9675 iterations 10
Cbc0038I Pass   6: suminf.    0.33396 (8) obj. -12.3716 iterations 1
Cbc0038I Pass   7: suminf.    0.93124 (15) obj. -9.9675 iterations 14
Cbc0038I Pass   8: suminf.    0.93124 (15) obj. -9.9675 iterations 0
Cbc0038I Pass   9: suminf.    1.46262 (8) obj. -9.9675 iterations 24
Cbc0038I Pass  10: suminf.    1.32069 (7) obj. -9.9675 iterations 3
Cbc0038I Pass  11: suminf.    0.76701 (7) obj. -9.9675 iterations 1
Cbc0038I Pass  12: suminf.    1.32069 (7) obj. -9.9675 iterations 6
Cbc0038I Pass  13: suminf.    1.64484 (15) obj. -9.9675 iterations 21
Cbc0038I Pass  14: suminf.    1.40995 (14) obj. -9.9675 iterations 6
Cbc0038I Pass  15: suminf.    1.32069 (7) obj. -9.9675 iterations 19
Cbc0038I Pass  16: suminf.    2.43513 (18) obj. -9.9675 iterations 23
Cbc0038I Pass  17: suminf.    2.43513 (18) obj. -9.9675 iterations 3
Cbc0038I Pass  18: suminf.    1.95732 (9) obj. -9.9675 iterations 24
Cbc0038I Pass  19: suminf.    1.01848 (8) obj. -9.9675 iterations 5
Cbc0038I Pass  20: suminf.    0.75510 (6) obj. -9.9675 iterations 4
Cbc0038I Pass  21: suminf.    0.94769 (5) obj. -9.9675 iterations 7
Cbc0038I Pass  22: suminf.    1.65072 (15) obj. -9.9675 iterations 18
Cbc0038I Pass  23: suminf.    1.32475 (15) obj. -9.9675 iterations 5
Cbc0038I Pass  24: suminf.    2.82079 (11) obj. -9.9675 iterations 16
Cbc0038I Pass  25: suminf.    1.95732 (9) obj. -9.9675 iterations 1
Cbc0038I Pass  26: suminf.    1.01848 (8) obj. -9.9675 iterations 4
Cbc0038I Pass  27: suminf.    0.75510 (6) obj. -9.9675 iterations 4
Cbc0038I Pass  28: suminf.    0.94769 (5) obj. -9.9675 iterations 7
Cbc0038I Pass  29: suminf.    2.93955 (14) obj. -9.9675 iterations 15
Cbc0038I Pass  30: suminf.    1.57453 (13) obj. -9.9675 iterations 3
Cbc0038I Pass  31: suminf.    1.12008 (13) obj. -9.9675 iterations 5
Cbc0038I Pass  32: suminf.    0.94769 (5) obj. -9.9675 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -5.452 to -8.53583 (0.13 seconds)
Cbc0038I Round again with cutoff of -18.0952
Cbc0038I Pass  32: suminf.    1.74770 (30) obj. -39.5514 iterations 0
Cbc0038I Pass  33: suminf.    0.51301 (13) obj. -18.0952 iterations 24
Cbc0038I Pass  34: suminf.    2.73784 (11) obj. -18.0952 iterations 23
Cbc0038I Pass  35: suminf.    2.73784 (11) obj. -18.0952 iterations 0
Cbc0038I Pass  36: suminf.    2.26648 (6) obj. -18.0952 iterations 9
Cbc0038I Pass  37: suminf.    1.40249 (6) obj. -18.0952 iterations 1
Cbc0038I Pass  38: suminf.    1.11232 (6) obj. -18.0952 iterations 4
Cbc0038I Pass  39: suminf.    2.38483 (13) obj. -18.0952 iterations 9
Cbc0038I Pass  40: suminf.    2.38483 (13) obj. -18.0952 iterations 0
Cbc0038I Pass  41: suminf.    2.40827 (11) obj. -18.0952 iterations 14
Cbc0038I Pass  42: suminf.    1.97026 (12) obj. -18.0952 iterations 2
Cbc0038I Pass  43: suminf.    1.34285 (11) obj. -18.0952 iterations 9
Cbc0038I Pass  44: suminf.    2.40827 (11) obj. -18.0952 iterations 12
Cbc0038I Pass  45: suminf.    2.19410 (11) obj. -18.0952 iterations 1
Cbc0038I Pass  46: suminf.    2.52470 (12) obj. -18.0952 iterations 13
Cbc0038I Pass  47: suminf.    2.49440 (11) obj. -18.0952 iterations 4
Cbc0038I Pass  48: suminf.    2.40827 (11) obj. -18.0952 iterations 8
Cbc0038I Pass  49: suminf.    1.97026 (12) obj. -18.0952 iterations 2
Cbc0038I Pass  50: suminf.    1.34285 (11) obj. -18.0952 iterations 9
Cbc0038I Pass  51: suminf.    2.40827 (11) obj. -18.0952 iterations 12
Cbc0038I Pass  52: suminf.    2.19410 (11) obj. -18.0952 iterations 1
Cbc0038I Pass  53: suminf.    2.52470 (12) obj. -18.0952 iterations 11
Cbc0038I Pass  54: suminf.    2.49440 (11) obj. -18.0952 iterations 4
Cbc0038I Pass  55: suminf.    2.40827 (11) obj. -18.0952 iterations 8
Cbc0038I Pass  56: suminf.    1.97026 (12) obj. -18.0952 iterations 2
Cbc0038I Pass  57: suminf.    1.34285 (11) obj. -18.0952 iterations 10
Cbc0038I Pass  58: suminf.    2.40827 (11) obj. -18.0952 iterations 12
Cbc0038I Pass  59: suminf.    2.19410 (11) obj. -18.0952 iterations 1
Cbc0038I Pass  60: suminf.    2.52470 (12) obj. -18.0952 iterations 11
Cbc0038I Pass  61: suminf.    2.49440 (11) obj. -18.0952 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -8.53583 - took 0.14 seconds
Cbc0012I Integer solution of -8.53583 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 25 rows 28 columns
Cbc0031I 50 added rows had average density of 39.98
Cbc0013I At root node, 50 cuts changed objective from -50.606142 to -22.608652 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22123 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1566 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 719 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1137 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 333 row cuts average 55.8 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.702 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.53583 best solution, best possible -22.608652 (3.04 seconds)
Cbc0010I After 5 nodes, 4 on tree, -8.53583 best solution, best possible -22.402444 (3.78 seconds)
Cbc0016I Integer solution of -8.61711 found by strong branching after 5857 iterations and 22 nodes (4.02 seconds)
Cbc0012I Integer solution of -8.67904 found by DiveCoefficient after 6056 iterations and 34 nodes (4.06 seconds)
Cbc0012I Integer solution of -9.48801 found by rounding after 6152 iterations and 41 nodes (4.07 seconds)
Cbc0012I Integer solution of -9.67904 found by rounding after 6214 iterations and 43 nodes (4.09 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -10.82194 found by rounding after 7310 iterations and 74 nodes (4.48 seconds)
Cbc0010I After 75 nodes, 9 on tree, -10.82194 best solution, best possible -22.402444 (4.48 seconds)
Cbc0004I Integer solution of -11.18552 found after 7363 iterations and 81 nodes (4.50 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 63 rows 73 columns
Cbc0001I Search completed - best objective -11.18552, took 8450 iterations and 110 nodes (4.92 seconds)
Cbc0032I Strong branching done 1272 times (19640 iterations), fathomed 12 nodes and fixed 16 variables
Cbc0035I Maximum depth 20, 233 variables fixed on reduced cost
Total time (CPU seconds):       3.88   (Wallclock seconds):       4.94

