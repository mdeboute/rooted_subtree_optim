Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 413 (-40) elements
Clp1000I sum of infeasibilities 2.93019e-05 - average 2.18671e-07, 12 fixed columns
Coin0506I Presolve 107 (-27) rows, 62 (-14) columns and 331 (-82) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.3176172 - largest nonzero change 0 ( 0%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 45.731334
Clp0000I Optimal - objective value 45.731334
Coin0511I After Postsolve, objective 45.731334, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.731334
Clp0000I Optimal - objective value 45.731334
Clp0000I Optimal - objective value 45.731334
Coin0511I After Postsolve, objective 45.731334, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.7313339 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 413 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 7.02085
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.16736 iterations 51
Cbc0038I Solution found of 1.16736
Cbc0038I Relaxing continuous gives 1.16736
Cbc0038I Rounding solution of -1.29642 is better than previous of 1.16736

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -1.29642 to -13.8674 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.0538
Cbc0038I Pass   2: suminf.    1.66528 (7) obj. -17.0538 iterations 6
Cbc0038I Pass   3: suminf.    2.02468 (5) obj. -17.0538 iterations 9
Cbc0038I Pass   4: suminf.    2.02468 (5) obj. -17.0538 iterations 0
Cbc0038I Pass   5: suminf.    1.57466 (5) obj. -17.0538 iterations 8
Cbc0038I Pass   6: suminf.    1.70409 (5) obj. -17.0538 iterations 5
Cbc0038I Pass   7: suminf.    1.10040 (4) obj. -17.0538 iterations 3
Cbc0038I Pass   8: suminf.    1.45108 (4) obj. -17.0538 iterations 6
Cbc0038I Pass   9: suminf.    1.45108 (4) obj. -17.0538 iterations 0
Cbc0038I Pass  10: suminf.    1.54709 (4) obj. -17.0538 iterations 4
Cbc0038I Pass  11: suminf.    1.59900 (11) obj. -17.0538 iterations 15
Cbc0038I Pass  12: suminf.    1.47082 (7) obj. -17.0538 iterations 6
Cbc0038I Pass  13: suminf.    0.95192 (3) obj. -17.0538 iterations 9
Cbc0038I Pass  14: suminf.    1.06710 (3) obj. -17.0538 iterations 3
Cbc0038I Pass  15: suminf.    0.90459 (3) obj. -17.0538 iterations 3
Cbc0038I Pass  16: suminf.    0.95192 (3) obj. -17.0538 iterations 4
Cbc0038I Pass  17: suminf.    0.88468 (3) obj. -17.0538 iterations 15
Cbc0038I Pass  18: suminf.    0.51478 (3) obj. -17.0538 iterations 6
Cbc0038I Pass  19: suminf.    0.35484 (2) obj. -17.0538 iterations 2
Cbc0038I Pass  20: suminf.    0.26891 (2) obj. -17.0538 iterations 2
Cbc0038I Pass  21: suminf.    3.16228 (12) obj. -17.0538 iterations 22
Cbc0038I Pass  22: suminf.    1.87310 (6) obj. -17.0538 iterations 18
Cbc0038I Pass  23: suminf.    0.80950 (3) obj. -17.0538 iterations 9
Cbc0038I Pass  24: suminf.    0.71071 (2) obj. -17.0538 iterations 2
Cbc0038I Pass  25: suminf.    0.85162 (3) obj. -17.0538 iterations 2
Cbc0038I Pass  26: suminf.    0.81413 (4) obj. -17.0538 iterations 1
Cbc0038I Pass  27: suminf.    1.80545 (4) obj. -17.0538 iterations 3
Cbc0038I Pass  28: suminf.    0.90296 (3) obj. -17.0538 iterations 3
Cbc0038I Pass  29: suminf.    0.71071 (2) obj. -17.0538 iterations 2
Cbc0038I Pass  30: suminf.    0.85162 (3) obj. -17.0538 iterations 2
Cbc0038I Pass  31: suminf.    0.81413 (4) obj. -17.0538 iterations 1
Cbc0038I Rounding solution of -15.3458 is better than previous of -13.8674

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 85 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -15.3458 to -17.4744 (0.10 seconds)
Cbc0038I Round again with cutoff of -23.1258
Cbc0038I Pass  31: suminf.    2.35458 (9) obj. -23.1258 iterations 1
Cbc0038I Pass  32: suminf.    2.86789 (7) obj. -23.1258 iterations 9
Cbc0038I Pass  33: suminf.    2.13934 (6) obj. -23.1258 iterations 7
Cbc0038I Pass  34: suminf.    1.78569 (6) obj. -23.1258 iterations 2
Cbc0038I Pass  35: suminf.    1.71870 (6) obj. -23.1258 iterations 1
Cbc0038I Pass  36: suminf.    1.71930 (5) obj. -23.1258 iterations 1
Cbc0038I Pass  37: suminf.    2.17943 (5) obj. -23.1258 iterations 7
Cbc0038I Pass  38: suminf.    1.80271 (6) obj. -23.1258 iterations 2
Cbc0038I Pass  39: suminf.    1.80419 (6) obj. -23.1258 iterations 1
Cbc0038I Pass  40: suminf.    1.80419 (6) obj. -23.1258 iterations 0
Cbc0038I Pass  41: suminf.    1.74577 (4) obj. -23.1258 iterations 6
Cbc0038I Pass  42: suminf.    1.72477 (5) obj. -23.1258 iterations 3
Cbc0038I Pass  43: suminf.    1.66480 (5) obj. -23.1258 iterations 4
Cbc0038I Pass  44: suminf.    1.39679 (4) obj. -23.1258 iterations 2
Cbc0038I Pass  45: suminf.    1.74387 (4) obj. -23.1258 iterations 4
Cbc0038I Pass  46: suminf.    1.99934 (7) obj. -23.1258 iterations 13
Cbc0038I Pass  47: suminf.    1.49595 (5) obj. -23.1258 iterations 7
Cbc0038I Pass  48: suminf.    1.19201 (3) obj. -23.1258 iterations 10
Cbc0038I Pass  49: suminf.    1.13835 (3) obj. -23.1258 iterations 1
Cbc0038I Pass  50: suminf.    1.32349 (4) obj. -23.1258 iterations 3
Cbc0038I Pass  51: suminf.    1.30439 (5) obj. -23.1258 iterations 1
Cbc0038I Pass  52: suminf.    2.17806 (5) obj. -23.1258 iterations 4
Cbc0038I Pass  53: suminf.    1.39068 (4) obj. -23.1258 iterations 3
Cbc0038I Pass  54: suminf.    1.18040 (3) obj. -23.1258 iterations 1
Cbc0038I Pass  55: suminf.    1.32349 (4) obj. -23.1258 iterations 4
Cbc0038I Pass  56: suminf.    1.30439 (5) obj. -23.1258 iterations 1
Cbc0038I Pass  57: suminf.    2.17806 (5) obj. -23.1258 iterations 4
Cbc0038I Pass  58: suminf.    1.39068 (4) obj. -23.1258 iterations 3
Cbc0038I Pass  59: suminf.    1.18040 (3) obj. -23.1258 iterations 1
Cbc0038I Pass  60: suminf.    1.32349 (4) obj. -23.1258 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -17.4744 - took 0.12 seconds
Cbc0012I Integer solution of -17.47435 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 64 rows 40 columns
Cbc0031I 26 added rows had average density of 51.461538
Cbc0013I At root node, 26 cuts changed objective from -45.731334 to -36.762322 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10713 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2090 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 139 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.47435 best solution, best possible -36.762322 (1.00 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 46 rows 33 columns
Cbc0001I Search completed - best objective -17.47435, took 8341 iterations and 76 nodes (1.36 seconds)
Cbc0032I Strong branching done 896 times (17496 iterations), fathomed 5 nodes and fixed 42 variables
Cbc0035I Maximum depth 32, 156 variables fixed on reduced cost
Total time (CPU seconds):       1.20   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 115 (-37) columns and 1871 (-1432) elements
Clp1000I sum of infeasibilities 2.26773e-07 - average 2.29064e-09, 53 fixed columns
Coin0506I Presolve 46 (-53) rows, 62 (-53) columns and 211 (-1660) elements
Clp0006I 0  Obj -2.092769 Dual inf 4.4785963 (61)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 1.4430468 - largest nonzero change 1.5981175e-05 ( 0.0011371494%) - largest zero change 2.9744015e-05
Clp0000I Optimal - objective value -0.6050045
Clp0000I Optimal - objective value -0.6050045
Coin0511I After Postsolve, objective -0.6050045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -0.6050045 Dual inf 61.92228 (40)
Clp0014I Perturbing problem by 0.001% of 1.6305761 - largest nonzero change 1.9929153e-05 ( 0.0015823696%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 53.557959
Clp0000I Optimal - objective value 53.557959
Clp0000I Optimal - objective value 53.557959
Coin0511I After Postsolve, objective 53.557959, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.55795855 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 115 columns (115 integer (115 of which binary)) and 1873 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.550%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 6.10293
Cbc0038I Pass   1: suminf.    2.42908 (30) obj. -34.5636 iterations 20
Cbc0038I Pass   2: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass   3: suminf.    0.49393 (8) obj. -8.1064 iterations 22
Cbc0038I Solution found of 5.93544
Cbc0038I Rounding solution of -3.69772 is better than previous of 5.93544

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -3.69772 to -4.91028 (0.03 seconds)
Cbc0038I Round again with cutoff of -9.23097
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass   5: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass   6: suminf.    0.78571 (14) obj. -9.23097 iterations 42
Cbc0038I Pass   7: suminf.    0.78258 (5) obj. -9.23097 iterations 8
Cbc0038I Pass   8: suminf.    0.69119 (2) obj. -9.23097 iterations 10
Cbc0038I Pass   9: suminf.    0.42768 (2) obj. -11.0755 iterations 6
Cbc0038I Pass  10: suminf.    1.18734 (10) obj. -9.90743 iterations 36
Cbc0038I Pass  11: suminf.    0.98586 (13) obj. -9.23097 iterations 6
Cbc0038I Pass  12: suminf.    0.96394 (4) obj. -9.23097 iterations 17
Cbc0038I Pass  13: suminf.    0.96394 (4) obj. -9.23097 iterations 0
Cbc0038I Pass  14: suminf.    0.86821 (4) obj. -9.23097 iterations 7
Cbc0038I Pass  15: suminf.    0.67056 (4) obj. -10.2824 iterations 4
Cbc0038I Pass  16: suminf.    0.99182 (9) obj. -9.23097 iterations 8
Cbc0038I Pass  17: suminf.    1.23905 (12) obj. -15.9251 iterations 41
Cbc0038I Pass  18: suminf.    1.23905 (12) obj. -15.9251 iterations 5
Cbc0038I Pass  19: suminf.    1.72815 (10) obj. -9.23097 iterations 21
Cbc0038I Pass  20: suminf.    1.08870 (9) obj. -9.23097 iterations 5
Cbc0038I Pass  21: suminf.    0.96969 (9) obj. -9.23097 iterations 3
Cbc0038I Pass  22: suminf.    1.53653 (8) obj. -9.23097 iterations 15
Cbc0038I Pass  23: suminf.    1.32603 (8) obj. -9.23097 iterations 4
Cbc0038I Pass  24: suminf.    2.12691 (7) obj. -9.23097 iterations 7
Cbc0038I Pass  25: suminf.    2.12691 (7) obj. -9.23097 iterations 1
Cbc0038I Pass  26: suminf.    1.89574 (7) obj. -9.23097 iterations 9
Cbc0038I Pass  27: suminf.    1.88778 (7) obj. -9.23097 iterations 8
Cbc0038I Pass  28: suminf.    2.14468 (7) obj. -9.23097 iterations 9
Cbc0038I Pass  29: suminf.    2.14468 (7) obj. -9.23097 iterations 5
Cbc0038I Pass  30: suminf.    1.25166 (11) obj. -15.6051 iterations 22
Cbc0038I Pass  31: suminf.    1.25166 (11) obj. -15.6051 iterations 5
Cbc0038I Pass  32: suminf.    0.98357 (6) obj. -9.23097 iterations 16
Cbc0038I Pass  33: suminf.    0.75203 (6) obj. -9.23097 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -4.91028 to -5.82688 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.008
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass  34: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass  35: suminf.    1.30316 (19) obj. -22.0092 iterations 11
Cbc0038I Pass  36: suminf.    2.19892 (16) obj. -17.008 iterations 46
Cbc0038I Pass  37: suminf.    1.34363 (15) obj. -17.008 iterations 7
Cbc0038I Pass  38: suminf.    2.54293 (11) obj. -17.008 iterations 14
Cbc0038I Pass  39: suminf.    2.54293 (11) obj. -17.008 iterations 0
Cbc0038I Pass  40: suminf.    2.52180 (11) obj. -17.008 iterations 6
Cbc0038I Pass  41: suminf.    2.52180 (11) obj. -17.008 iterations 3
Cbc0038I Pass  42: suminf.    2.77201 (10) obj. -17.008 iterations 6
Cbc0038I Pass  43: suminf.    2.17023 (10) obj. -17.008 iterations 3
Cbc0038I Pass  44: suminf.    1.95274 (10) obj. -17.008 iterations 4
Cbc0038I Pass  45: suminf.    2.77201 (10) obj. -17.008 iterations 11
Cbc0038I Pass  46: suminf.    2.31138 (10) obj. -17.008 iterations 2
Cbc0038I Pass  47: suminf.    2.06774 (10) obj. -17.008 iterations 5
Cbc0038I Pass  48: suminf.    2.77201 (10) obj. -17.008 iterations 7
Cbc0038I Pass  49: suminf.    2.17023 (10) obj. -17.008 iterations 2
Cbc0038I Pass  50: suminf.    1.95274 (10) obj. -17.008 iterations 4
Cbc0038I Pass  51: suminf.    2.77201 (10) obj. -17.008 iterations 11
Cbc0038I Pass  52: suminf.    2.31138 (10) obj. -17.008 iterations 2
Cbc0038I Pass  53: suminf.    2.06774 (10) obj. -17.008 iterations 4
Cbc0038I Pass  54: suminf.    2.77201 (10) obj. -17.008 iterations 6
Cbc0038I Pass  55: suminf.    2.17023 (10) obj. -17.008 iterations 2
Cbc0038I Pass  56: suminf.    1.95274 (10) obj. -17.008 iterations 5
Cbc0038I Pass  57: suminf.    2.77201 (10) obj. -17.008 iterations 12
Cbc0038I Pass  58: suminf.    2.31138 (10) obj. -17.008 iterations 2
Cbc0038I Pass  59: suminf.    2.06774 (10) obj. -17.008 iterations 5
Cbc0038I Pass  60: suminf.    2.77201 (10) obj. -17.008 iterations 7
Cbc0038I Pass  61: suminf.    2.17023 (10) obj. -17.008 iterations 2
Cbc0038I Pass  62: suminf.    1.95274 (10) obj. -17.008 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -5.82688 - took 0.07 seconds
Cbc0012I Integer solution of -5.82688 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 15 rows 17 columns
Cbc0012I Integer solution of -7.60914 found by DiveCoefficient after 4623 iterations and 0 nodes (2.43 seconds)
Cbc0031I 62 added rows had average density of 35.33871
Cbc0013I At root node, 62 cuts changed objective from -48.116327 to -22.514848 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10324 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1540 row cuts average 107.3 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 644 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 891 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 337 row cuts average 67.9 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 119 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.713 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.60914 best solution, best possible -22.514848 (2.51 seconds)
Cbc0012I Integer solution of -12.5521 found by rounding after 4751 iterations and 1 nodes (2.52 seconds)
Cbc0012I Integer solution of -17.47435 found by DiveCoefficient after 4893 iterations and 1 nodes (2.66 seconds)
Cbc0010I After 6 nodes, 3 on tree, -17.47435 best solution, best possible -21.636545 (3.32 seconds)
Cbc0010I After 18 nodes, 7 on tree, -17.47435 best solution, best possible -21.636545 (4.03 seconds)
Cbc0001I Search completed - best objective -17.47435, took 6798 iterations and 26 nodes (4.13 seconds)
Cbc0032I Strong branching done 512 times (11963 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 11, 36 variables fixed on reduced cost
Total time (CPU seconds):       3.01   (Wallclock seconds):       4.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 413 (-40) elements
Clp1000I sum of infeasibilities 2.93019e-05 - average 2.18671e-07, 12 fixed columns
Coin0506I Presolve 107 (-27) rows, 62 (-14) columns and 331 (-82) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.3176172 - largest nonzero change 0 ( 0%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 45.731334
Clp0000I Optimal - objective value 45.731334
Coin0511I After Postsolve, objective 45.731334, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.731334
Clp0000I Optimal - objective value 45.731334
Clp0000I Optimal - objective value 45.731334
Coin0511I After Postsolve, objective 45.731334, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.7313339 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 413 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 7.02085
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.16736 iterations 51
Cbc0038I Solution found of 1.16736
Cbc0038I Relaxing continuous gives 1.16736
Cbc0038I Rounding solution of -1.29642 is better than previous of 1.16736

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -1.29642 to -13.8674 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.0538
Cbc0038I Pass   2: suminf.    1.66528 (7) obj. -17.0538 iterations 6
Cbc0038I Pass   3: suminf.    2.02468 (5) obj. -17.0538 iterations 9
Cbc0038I Pass   4: suminf.    2.02468 (5) obj. -17.0538 iterations 0
Cbc0038I Pass   5: suminf.    1.57466 (5) obj. -17.0538 iterations 8
Cbc0038I Pass   6: suminf.    1.70409 (5) obj. -17.0538 iterations 5
Cbc0038I Pass   7: suminf.    1.10040 (4) obj. -17.0538 iterations 3
Cbc0038I Pass   8: suminf.    1.45108 (4) obj. -17.0538 iterations 6
Cbc0038I Pass   9: suminf.    1.45108 (4) obj. -17.0538 iterations 0
Cbc0038I Pass  10: suminf.    1.54709 (4) obj. -17.0538 iterations 4
Cbc0038I Pass  11: suminf.    1.59900 (11) obj. -17.0538 iterations 15
Cbc0038I Pass  12: suminf.    1.47082 (7) obj. -17.0538 iterations 6
Cbc0038I Pass  13: suminf.    0.95192 (3) obj. -17.0538 iterations 9
Cbc0038I Pass  14: suminf.    1.06710 (3) obj. -17.0538 iterations 3
Cbc0038I Pass  15: suminf.    0.90459 (3) obj. -17.0538 iterations 3
Cbc0038I Pass  16: suminf.    0.95192 (3) obj. -17.0538 iterations 4
Cbc0038I Pass  17: suminf.    0.88468 (3) obj. -17.0538 iterations 15
Cbc0038I Pass  18: suminf.    0.51478 (3) obj. -17.0538 iterations 6
Cbc0038I Pass  19: suminf.    0.35484 (2) obj. -17.0538 iterations 2
Cbc0038I Pass  20: suminf.    0.26891 (2) obj. -17.0538 iterations 2
Cbc0038I Pass  21: suminf.    3.16228 (12) obj. -17.0538 iterations 22
Cbc0038I Pass  22: suminf.    1.87310 (6) obj. -17.0538 iterations 18
Cbc0038I Pass  23: suminf.    0.80950 (3) obj. -17.0538 iterations 9
Cbc0038I Pass  24: suminf.    0.71071 (2) obj. -17.0538 iterations 2
Cbc0038I Pass  25: suminf.    0.85162 (3) obj. -17.0538 iterations 2
Cbc0038I Pass  26: suminf.    0.81413 (4) obj. -17.0538 iterations 1
Cbc0038I Pass  27: suminf.    1.80545 (4) obj. -17.0538 iterations 3
Cbc0038I Pass  28: suminf.    0.90296 (3) obj. -17.0538 iterations 3
Cbc0038I Pass  29: suminf.    0.71071 (2) obj. -17.0538 iterations 2
Cbc0038I Pass  30: suminf.    0.85162 (3) obj. -17.0538 iterations 2
Cbc0038I Pass  31: suminf.    0.81413 (4) obj. -17.0538 iterations 1
Cbc0038I Rounding solution of -15.3458 is better than previous of -13.8674

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 85 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -15.3458 to -17.4744 (0.12 seconds)
Cbc0038I Round again with cutoff of -23.1258
Cbc0038I Pass  31: suminf.    2.35458 (9) obj. -23.1258 iterations 1
Cbc0038I Pass  32: suminf.    2.86789 (7) obj. -23.1258 iterations 9
Cbc0038I Pass  33: suminf.    2.13934 (6) obj. -23.1258 iterations 7
Cbc0038I Pass  34: suminf.    1.78569 (6) obj. -23.1258 iterations 2
Cbc0038I Pass  35: suminf.    1.71870 (6) obj. -23.1258 iterations 1
Cbc0038I Pass  36: suminf.    1.71930 (5) obj. -23.1258 iterations 1
Cbc0038I Pass  37: suminf.    2.17943 (5) obj. -23.1258 iterations 7
Cbc0038I Pass  38: suminf.    1.80271 (6) obj. -23.1258 iterations 2
Cbc0038I Pass  39: suminf.    1.80419 (6) obj. -23.1258 iterations 1
Cbc0038I Pass  40: suminf.    1.80419 (6) obj. -23.1258 iterations 0
Cbc0038I Pass  41: suminf.    1.74577 (4) obj. -23.1258 iterations 6
Cbc0038I Pass  42: suminf.    1.72477 (5) obj. -23.1258 iterations 3
Cbc0038I Pass  43: suminf.    1.66480 (5) obj. -23.1258 iterations 4
Cbc0038I Pass  44: suminf.    1.39679 (4) obj. -23.1258 iterations 2
Cbc0038I Pass  45: suminf.    1.74387 (4) obj. -23.1258 iterations 4
Cbc0038I Pass  46: suminf.    1.99934 (7) obj. -23.1258 iterations 13
Cbc0038I Pass  47: suminf.    1.49595 (5) obj. -23.1258 iterations 7
Cbc0038I Pass  48: suminf.    1.19201 (3) obj. -23.1258 iterations 10
Cbc0038I Pass  49: suminf.    1.13835 (3) obj. -23.1258 iterations 1
Cbc0038I Pass  50: suminf.    1.32349 (4) obj. -23.1258 iterations 3
Cbc0038I Pass  51: suminf.    1.30439 (5) obj. -23.1258 iterations 1
Cbc0038I Pass  52: suminf.    2.17806 (5) obj. -23.1258 iterations 4
Cbc0038I Pass  53: suminf.    1.39068 (4) obj. -23.1258 iterations 3
Cbc0038I Pass  54: suminf.    1.18040 (3) obj. -23.1258 iterations 1
Cbc0038I Pass  55: suminf.    1.32349 (4) obj. -23.1258 iterations 4
Cbc0038I Pass  56: suminf.    1.30439 (5) obj. -23.1258 iterations 1
Cbc0038I Pass  57: suminf.    2.17806 (5) obj. -23.1258 iterations 4
Cbc0038I Pass  58: suminf.    1.39068 (4) obj. -23.1258 iterations 3
Cbc0038I Pass  59: suminf.    1.18040 (3) obj. -23.1258 iterations 1
Cbc0038I Pass  60: suminf.    1.32349 (4) obj. -23.1258 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -17.4744 - took 0.14 seconds
Cbc0012I Integer solution of -17.47435 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 64 rows 40 columns
Cbc0031I 26 added rows had average density of 51.461538
Cbc0013I At root node, 26 cuts changed objective from -45.731334 to -36.762322 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10713 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2090 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 139 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.47435 best solution, best possible -36.762322 (0.91 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 46 rows 33 columns
Cbc0001I Search completed - best objective -17.47435, took 8341 iterations and 76 nodes (1.19 seconds)
Cbc0032I Strong branching done 896 times (17496 iterations), fathomed 5 nodes and fixed 42 variables
Cbc0035I Maximum depth 32, 156 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 115 (-38) columns and 1871 (-1433) elements
Clp1000I sum of infeasibilities 2.26773e-07 - average 2.29064e-09, 53 fixed columns
Coin0506I Presolve 46 (-53) rows, 62 (-53) columns and 211 (-1660) elements
Clp0006I 0  Obj -2.092769 Dual inf 4.4785963 (61)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 1.4430468 - largest nonzero change 1.5981175e-05 ( 0.0011371494%) - largest zero change 2.9744015e-05
Clp0000I Optimal - objective value -0.6050045
Clp0000I Optimal - objective value -0.6050045
Coin0511I After Postsolve, objective -0.6050045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -0.6050045 Dual inf 61.92228 (40)
Clp0014I Perturbing problem by 0.001% of 1.6305761 - largest nonzero change 1.9929153e-05 ( 0.0015823696%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 53.557959
Clp0000I Optimal - objective value 53.557959
Clp0000I Optimal - objective value 53.557959
Coin0511I After Postsolve, objective 53.557959, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.55795855 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 115 columns (115 integer (115 of which binary)) and 1873 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.550%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 6.10293
Cbc0038I Pass   1: suminf.    2.42908 (30) obj. -34.5636 iterations 20
Cbc0038I Pass   2: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass   3: suminf.    0.49393 (8) obj. -8.1064 iterations 22
Cbc0038I Solution found of 5.93544
Cbc0038I Rounding solution of -3.69772 is better than previous of 5.93544

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -3.69772 to -4.91028 (0.02 seconds)
Cbc0038I Round again with cutoff of -9.23097
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass   5: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass   6: suminf.    0.78571 (14) obj. -9.23097 iterations 42
Cbc0038I Pass   7: suminf.    0.78258 (5) obj. -9.23097 iterations 8
Cbc0038I Pass   8: suminf.    0.69119 (2) obj. -9.23097 iterations 10
Cbc0038I Pass   9: suminf.    0.42768 (2) obj. -11.0755 iterations 6
Cbc0038I Pass  10: suminf.    1.18734 (10) obj. -9.90743 iterations 36
Cbc0038I Pass  11: suminf.    0.98586 (13) obj. -9.23097 iterations 6
Cbc0038I Pass  12: suminf.    0.96394 (4) obj. -9.23097 iterations 17
Cbc0038I Pass  13: suminf.    0.96394 (4) obj. -9.23097 iterations 0
Cbc0038I Pass  14: suminf.    0.86821 (4) obj. -9.23097 iterations 7
Cbc0038I Pass  15: suminf.    0.67056 (4) obj. -10.2824 iterations 4
Cbc0038I Pass  16: suminf.    0.99182 (9) obj. -9.23097 iterations 8
Cbc0038I Pass  17: suminf.    1.23905 (12) obj. -15.9251 iterations 41
Cbc0038I Pass  18: suminf.    1.23905 (12) obj. -15.9251 iterations 5
Cbc0038I Pass  19: suminf.    1.72815 (10) obj. -9.23097 iterations 21
Cbc0038I Pass  20: suminf.    1.08870 (9) obj. -9.23097 iterations 5
Cbc0038I Pass  21: suminf.    0.96969 (9) obj. -9.23097 iterations 3
Cbc0038I Pass  22: suminf.    1.53653 (8) obj. -9.23097 iterations 15
Cbc0038I Pass  23: suminf.    1.32603 (8) obj. -9.23097 iterations 4
Cbc0038I Pass  24: suminf.    2.12691 (7) obj. -9.23097 iterations 7
Cbc0038I Pass  25: suminf.    2.12691 (7) obj. -9.23097 iterations 1
Cbc0038I Pass  26: suminf.    1.89574 (7) obj. -9.23097 iterations 9
Cbc0038I Pass  27: suminf.    1.88778 (7) obj. -9.23097 iterations 8
Cbc0038I Pass  28: suminf.    2.14468 (7) obj. -9.23097 iterations 9
Cbc0038I Pass  29: suminf.    2.14468 (7) obj. -9.23097 iterations 5
Cbc0038I Pass  30: suminf.    1.25166 (11) obj. -15.6051 iterations 22
Cbc0038I Pass  31: suminf.    1.25166 (11) obj. -15.6051 iterations 5
Cbc0038I Pass  32: suminf.    0.98357 (6) obj. -9.23097 iterations 16
Cbc0038I Pass  33: suminf.    0.75203 (6) obj. -9.23097 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -4.91028 to -5.82688 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.008
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass  34: suminf.    2.42908 (30) obj. -34.5636 iterations 0
Cbc0038I Pass  35: suminf.    1.30316 (19) obj. -22.0092 iterations 11
Cbc0038I Pass  36: suminf.    2.19892 (16) obj. -17.008 iterations 46
Cbc0038I Pass  37: suminf.    1.34363 (15) obj. -17.008 iterations 7
Cbc0038I Pass  38: suminf.    2.54293 (11) obj. -17.008 iterations 14
Cbc0038I Pass  39: suminf.    2.54293 (11) obj. -17.008 iterations 0
Cbc0038I Pass  40: suminf.    2.52180 (11) obj. -17.008 iterations 6
Cbc0038I Pass  41: suminf.    2.52180 (11) obj. -17.008 iterations 3
Cbc0038I Pass  42: suminf.    2.77201 (10) obj. -17.008 iterations 6
Cbc0038I Pass  43: suminf.    2.17023 (10) obj. -17.008 iterations 3
Cbc0038I Pass  44: suminf.    1.95274 (10) obj. -17.008 iterations 4
Cbc0038I Pass  45: suminf.    2.77201 (10) obj. -17.008 iterations 11
Cbc0038I Pass  46: suminf.    2.31138 (10) obj. -17.008 iterations 2
Cbc0038I Pass  47: suminf.    2.06774 (10) obj. -17.008 iterations 5
Cbc0038I Pass  48: suminf.    2.77201 (10) obj. -17.008 iterations 7
Cbc0038I Pass  49: suminf.    2.17023 (10) obj. -17.008 iterations 2
Cbc0038I Pass  50: suminf.    1.95274 (10) obj. -17.008 iterations 4
Cbc0038I Pass  51: suminf.    2.77201 (10) obj. -17.008 iterations 11
Cbc0038I Pass  52: suminf.    2.31138 (10) obj. -17.008 iterations 2
Cbc0038I Pass  53: suminf.    2.06774 (10) obj. -17.008 iterations 4
Cbc0038I Pass  54: suminf.    2.77201 (10) obj. -17.008 iterations 6
Cbc0038I Pass  55: suminf.    2.17023 (10) obj. -17.008 iterations 2
Cbc0038I Pass  56: suminf.    1.95274 (10) obj. -17.008 iterations 5
Cbc0038I Pass  57: suminf.    2.77201 (10) obj. -17.008 iterations 12
Cbc0038I Pass  58: suminf.    2.31138 (10) obj. -17.008 iterations 2
Cbc0038I Pass  59: suminf.    2.06774 (10) obj. -17.008 iterations 5
Cbc0038I Pass  60: suminf.    2.77201 (10) obj. -17.008 iterations 7
Cbc0038I Pass  61: suminf.    2.17023 (10) obj. -17.008 iterations 2
Cbc0038I Pass  62: suminf.    1.95274 (10) obj. -17.008 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -5.82688 - took 0.06 seconds
Cbc0012I Integer solution of -5.82688 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 99 rows 115 columns, reduced to 15 rows 17 columns
Cbc0012I Integer solution of -7.60914 found by DiveCoefficient after 4623 iterations and 0 nodes (2.54 seconds)
Cbc0031I 62 added rows had average density of 35.33871
Cbc0013I At root node, 62 cuts changed objective from -48.116327 to -22.514848 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10324 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1540 row cuts average 107.3 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 644 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 891 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 337 row cuts average 67.9 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 119 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.60914 best solution, best possible -22.514848 (2.64 seconds)
Cbc0012I Integer solution of -12.5521 found by rounding after 4751 iterations and 1 nodes (2.64 seconds)
Cbc0012I Integer solution of -17.47435 found by DiveCoefficient after 4893 iterations and 1 nodes (2.80 seconds)
Cbc0010I After 6 nodes, 3 on tree, -17.47435 best solution, best possible -21.636545 (3.47 seconds)
Cbc0010I After 19 nodes, 7 on tree, -17.47435 best solution, best possible -21.636545 (4.23 seconds)
Cbc0001I Search completed - best objective -17.47435, took 6798 iterations and 26 nodes (4.25 seconds)
Cbc0032I Strong branching done 512 times (11963 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 11, 36 variables fixed on reduced cost
Total time (CPU seconds):       3.08   (Wallclock seconds):       4.27

