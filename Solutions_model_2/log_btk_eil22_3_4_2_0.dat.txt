Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 0.00010376 - average 2.88221e-06, 3 fixed columns
Coin0506I Presolve 31 (-5) rows, 19 (-3) columns and 92 (-16) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Coin0511I After Postsolve, objective 71.554014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Coin0511I After Postsolve, objective 71.554014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.55401362 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.45128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.338 iterations 14
Cbc0038I Solution found of -16.338
Cbc0038I Relaxing continuous gives -16.338
Cbc0038I Rounding solution of -31.8249 is better than previous of -16.338

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -31.8249 to -32.7702 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.4179
Cbc0038I Pass   2: suminf.    0.44760 (3) obj. -36.4179 iterations 3
Cbc0038I Pass   3: suminf.    0.44760 (3) obj. -36.4179 iterations 0
Cbc0038I Pass   4: suminf.    0.42857 (1) obj. -36.4179 iterations 5
Cbc0038I Pass   5: suminf.    0.26834 (1) obj. -36.4179 iterations 1
Cbc0038I Pass   6: suminf.    1.40419 (3) obj. -36.4179 iterations 4
Cbc0038I Pass   7: suminf.    0.83489 (3) obj. -36.4179 iterations 3
Cbc0038I Pass   8: suminf.    0.44012 (3) obj. -36.4179 iterations 6
Cbc0038I Pass   9: suminf.    0.47619 (1) obj. -36.4179 iterations 5
Cbc0038I Pass  10: suminf.    0.26302 (1) obj. -36.4179 iterations 1
Cbc0038I Pass  11: suminf.    0.68541 (2) obj. -36.4179 iterations 7
Cbc0038I Pass  12: suminf.    0.44760 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  13: suminf.    0.42857 (1) obj. -36.4179 iterations 5
Cbc0038I Pass  14: suminf.    0.26834 (1) obj. -36.4179 iterations 1
Cbc0038I Pass  15: suminf.    0.73771 (2) obj. -36.4179 iterations 2
Cbc0038I Pass  16: suminf.    0.32367 (2) obj. -36.4179 iterations 3
Cbc0038I Pass  17: suminf.    0.75385 (5) obj. -36.4179 iterations 7
Cbc0038I Pass  18: suminf.    1.14097 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  19: suminf.    1.05279 (3) obj. -36.4179 iterations 2
Cbc0038I Pass  20: suminf.    0.76947 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  21: suminf.    1.14097 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  22: suminf.    2.25989 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  23: suminf.    0.97989 (4) obj. -36.4179 iterations 3
Cbc0038I Pass  24: suminf.    1.86335 (6) obj. -36.4179 iterations 8
Cbc0038I Pass  25: suminf.    1.96404 (6) obj. -36.4179 iterations 4
Cbc0038I Pass  26: suminf.    1.80468 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  27: suminf.    1.80468 (5) obj. -36.4179 iterations 0
Cbc0038I Pass  28: suminf.    1.89899 (7) obj. -36.4179 iterations 5
Cbc0038I Pass  29: suminf.    1.57377 (7) obj. -36.4179 iterations 3
Cbc0038I Pass  30: suminf.    0.68891 (4) obj. -36.4179 iterations 6
Cbc0038I Pass  31: suminf.    0.51376 (3) obj. -36.4179 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -32.7702 to -33.5185 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.9836
Cbc0038I Pass  31: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  32: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  33: suminf.    0.45707 (1) obj. -42.9836 iterations 4
Cbc0038I Pass  34: suminf.    0.46490 (1) obj. -42.9836 iterations 1
Cbc0038I Pass  35: suminf.    1.50516 (5) obj. -42.9836 iterations 9
Cbc0038I Pass  36: suminf.    0.51369 (3) obj. -42.9836 iterations 6
Cbc0038I Pass  37: suminf.    1.00815 (5) obj. -42.9836 iterations 3
Cbc0038I Pass  38: suminf.    0.58937 (4) obj. -42.9836 iterations 3
Cbc0038I Pass  39: suminf.    1.58129 (4) obj. -42.9836 iterations 6
Cbc0038I Pass  40: suminf.    0.71107 (4) obj. -42.9836 iterations 4
Cbc0038I Pass  41: suminf.    0.45707 (1) obj. -42.9836 iterations 4
Cbc0038I Pass  42: suminf.    0.46490 (1) obj. -42.9836 iterations 1
Cbc0038I Pass  43: suminf.    0.93949 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  44: suminf.    0.46490 (1) obj. -42.9836 iterations 3
Cbc0038I Pass  45: suminf.    1.94802 (7) obj. -42.9836 iterations 10
Cbc0038I Pass  46: suminf.    0.53738 (3) obj. -42.9836 iterations 6
Cbc0038I Pass  47: suminf.    0.59689 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  48: suminf.    0.57438 (3) obj. -42.9836 iterations 1
Cbc0038I Pass  49: suminf.    1.09958 (5) obj. -42.9836 iterations 6
Cbc0038I Pass  50: suminf.    0.72394 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  51: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  52: suminf.    0.82236 (5) obj. -42.9836 iterations 7
Cbc0038I Pass  53: suminf.    0.62105 (5) obj. -42.9836 iterations 5
Cbc0038I Pass  54: suminf.    1.42232 (5) obj. -42.9836 iterations 5
Cbc0038I Pass  55: suminf.    0.73746 (3) obj. -42.9836 iterations 1
Cbc0038I Pass  56: suminf.    0.49942 (2) obj. -42.9836 iterations 1
Cbc0038I Pass  57: suminf.    0.72394 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  58: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  59: suminf.    0.82236 (5) obj. -42.9836 iterations 7
Cbc0038I Pass  60: suminf.    0.62105 (5) obj. -42.9836 iterations 5
Cbc0038I Rounding solution of -33.5405 is better than previous of -33.5185

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -50.8625
Cbc0038I Pass  60: suminf.    1.05555 (3) obj. -50.8625 iterations 0
Cbc0038I Pass  61: suminf.    1.05555 (3) obj. -50.8625 iterations 0
Cbc0038I Pass  62: suminf.    0.79317 (8) obj. -50.8625 iterations 9
Cbc0038I Pass  63: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  64: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  65: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  66: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  67: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  68: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  69: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  70: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  71: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  72: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  73: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  74: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  75: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  76: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  77: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  78: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  79: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  80: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  81: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  82: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  83: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  84: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  85: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  86: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  87: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  88: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  89: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -33.5405 - took 0.07 seconds
Cbc0012I Integer solution of -33.54046 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 8 added rows had average density of 17.375
Cbc0013I At root node, 8 cuts changed objective from -69.246605 to -46.730738 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 809 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 742 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -33.54046, took 1654 iterations and 8 nodes (0.15 seconds)
Cbc0032I Strong branching done 70 times (375 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-13) rows, 39 (-5) columns and 301 (-59) elements
Clp1000I sum of infeasibilities 1.58842e-08 - average 4.8134e-10, 23 fixed columns
Coin0506I Presolve 12 (-21) rows, 16 (-23) columns and 51 (-250) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 11.644418
Clp0000I Optimal - objective value 11.644418
Coin0511I After Postsolve, objective 11.644418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8244952 - largest nonzero change 0 ( 0%) - largest zero change 1.8429708e-05
Clp0000I Optimal - objective value 86.692801
Clp0000I Optimal - objective value 86.692801
Clp0000I Optimal - objective value 86.692801
Coin0511I After Postsolve, objective 86.692801, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.6928007 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 39 columns (39 integer (39 of which binary)) and 313 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.510%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.3973
Cbc0038I Pass   1: suminf.    3.22225 (11) obj. -61.6183 iterations 9
Cbc0038I Solution found of -31.9489
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -35.0576
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    3.22225 (11) obj. -61.6183 iterations 0
Cbc0038I Pass   3: suminf.    0.28261 (1) obj. -35.0576 iterations 22
Cbc0038I Pass   4: suminf.    0.22222 (1) obj. -40.5045 iterations 3
Cbc0038I Pass   5: suminf.    2.64564 (8) obj. -35.0576 iterations 15
Cbc0038I Pass   6: suminf.    1.86531 (8) obj. -35.0576 iterations 5
Cbc0038I Pass   7: suminf.    1.44559 (4) obj. -35.0576 iterations 6
Cbc0038I Pass   8: suminf.    1.36267 (4) obj. -35.0576 iterations 3
Cbc0038I Pass   9: suminf.    1.44559 (4) obj. -35.0576 iterations 3
Cbc0038I Pass  10: suminf.    1.85232 (11) obj. -35.0576 iterations 7
Cbc0038I Pass  11: suminf.    1.59969 (6) obj. -35.0576 iterations 3
Cbc0038I Pass  12: suminf.    1.05146 (5) obj. -35.0576 iterations 5
Cbc0038I Pass  13: suminf.    1.05146 (5) obj. -35.0576 iterations 1
Cbc0038I Pass  14: suminf.    1.11874 (5) obj. -35.0576 iterations 1
Cbc0038I Pass  15: suminf.    1.11874 (5) obj. -35.0576 iterations 0
Cbc0038I Pass  16: suminf.    1.05146 (5) obj. -35.0576 iterations 2
Cbc0038I Pass  17: suminf.    0.61127 (4) obj. -35.0576 iterations 7
Cbc0038I Pass  18: suminf.    0.61127 (4) obj. -35.0576 iterations 0
Cbc0038I Pass  19: suminf.    0.83435 (3) obj. -35.0576 iterations 4
Cbc0038I Pass  20: suminf.    0.84186 (3) obj. -35.0576 iterations 1
Cbc0038I Pass  21: suminf.    0.72112 (3) obj. -37.9718 iterations 2
Cbc0038I Pass  22: suminf.    0.83435 (3) obj. -35.0576 iterations 1
Cbc0038I Pass  23: suminf.    1.35453 (5) obj. -35.0576 iterations 5
Cbc0038I Pass  24: suminf.    1.35453 (5) obj. -35.0576 iterations 0
Cbc0038I Pass  25: suminf.    1.02827 (3) obj. -35.0576 iterations 5
Cbc0038I Pass  26: suminf.    0.43161 (3) obj. -39.9777 iterations 3
Cbc0038I Pass  27: suminf.    0.76987 (3) obj. -35.0576 iterations 1
Cbc0038I Pass  28: suminf.    1.53005 (7) obj. -35.0576 iterations 8
Cbc0038I Pass  29: suminf.    1.53005 (7) obj. -35.0576 iterations 2
Cbc0038I Pass  30: suminf.    1.57683 (5) obj. -35.0576 iterations 5
Cbc0038I Pass  31: suminf.    1.27949 (5) obj. -35.0576 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.9489 to -32.1071 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.653
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.22225 (11) obj. -61.6183 iterations 0
Cbc0038I Pass  32: suminf.    0.23807 (3) obj. -40.653 iterations 20
Cbc0038I Pass  33: suminf.    0.23807 (3) obj. -40.653 iterations 0
Cbc0038I Pass  34: suminf.    0.88488 (3) obj. -40.653 iterations 7
Cbc0038I Pass  35: suminf.    0.84127 (3) obj. -41.0019 iterations 4
Cbc0038I Pass  36: suminf.    1.03912 (4) obj. -40.653 iterations 9
Cbc0038I Pass  37: suminf.    1.01084 (4) obj. -40.653 iterations 4
Cbc0038I Pass  38: suminf.    1.03912 (4) obj. -40.653 iterations 2
Cbc0038I Pass  39: suminf.    1.87976 (9) obj. -40.653 iterations 15
Cbc0038I Pass  40: suminf.    1.78689 (7) obj. -40.653 iterations 4
Cbc0038I Pass  41: suminf.    1.58439 (6) obj. -40.653 iterations 11
Cbc0038I Pass  42: suminf.    1.40332 (6) obj. -40.653 iterations 3
Cbc0038I Pass  43: suminf.    1.58439 (6) obj. -40.653 iterations 4
Cbc0038I Pass  44: suminf.    1.43188 (7) obj. -40.653 iterations 10
Cbc0038I Pass  45: suminf.    1.36690 (8) obj. -40.653 iterations 2
Cbc0038I Pass  46: suminf.    1.79569 (5) obj. -40.653 iterations 7
Cbc0038I Pass  47: suminf.    1.56163 (5) obj. -42.5256 iterations 3
Cbc0038I Pass  48: suminf.    1.79569 (5) obj. -40.653 iterations 3
Cbc0038I Pass  49: suminf.    1.67970 (7) obj. -40.653 iterations 4
Cbc0038I Pass  50: suminf.    1.49933 (5) obj. -40.653 iterations 2
Cbc0038I Pass  51: suminf.    1.16525 (4) obj. -40.653 iterations 4
Cbc0038I Pass  52: suminf.    1.11165 (5) obj. -40.653 iterations 1
Cbc0038I Pass  53: suminf.    1.06810 (5) obj. -40.653 iterations 1
Cbc0038I Pass  54: suminf.    1.06810 (5) obj. -40.653 iterations 1
Cbc0038I Pass  55: suminf.    1.11165 (5) obj. -40.653 iterations 2
Cbc0038I Pass  56: suminf.    1.64177 (7) obj. -40.653 iterations 6
Cbc0038I Pass  57: suminf.    1.42312 (7) obj. -40.653 iterations 2
Cbc0038I Pass  58: suminf.    1.10659 (6) obj. -40.653 iterations 5
Cbc0038I Pass  59: suminf.    1.10659 (6) obj. -40.653 iterations 2
Cbc0038I Pass  60: suminf.    1.70308 (6) obj. -40.653 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -32.1071 - took 0.02 seconds
Cbc0012I Integer solution of -32.10708 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 39 columns, reduced to 6 rows 7 columns
Cbc0031I 16 added rows had average density of 13.9375
Cbc0013I At root node, 16 cuts changed objective from -63.034742 to -39.215234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 686 row cuts average 2.5 elements, 12 column cuts (12 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 399 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 48 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 19 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.817 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.10708 best solution, best possible -39.215234 (1.59 seconds)
Cbc0012I Integer solution of -33.5185 found by rounding after 1301 iterations and 1 nodes (1.65 seconds)
Cbc0004I Integer solution of -33.54046 found after 1343 iterations and 4 nodes (1.72 seconds)
Cbc0001I Search completed - best objective -33.54046, took 1380 iterations and 6 nodes (1.73 seconds)
Cbc0032I Strong branching done 78 times (471 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.73

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 0.00010376 - average 2.88221e-06, 3 fixed columns
Coin0506I Presolve 31 (-5) rows, 19 (-3) columns and 92 (-16) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Coin0511I After Postsolve, objective 71.554014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Coin0511I After Postsolve, objective 71.554014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.55401362 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.45128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.338 iterations 14
Cbc0038I Solution found of -16.338
Cbc0038I Relaxing continuous gives -16.338
Cbc0038I Rounding solution of -31.8249 is better than previous of -16.338

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -31.8249 to -32.7702 (0.02 seconds)
Cbc0038I Round again with cutoff of -36.4179
Cbc0038I Pass   2: suminf.    0.44760 (3) obj. -36.4179 iterations 3
Cbc0038I Pass   3: suminf.    0.44760 (3) obj. -36.4179 iterations 0
Cbc0038I Pass   4: suminf.    0.42857 (1) obj. -36.4179 iterations 5
Cbc0038I Pass   5: suminf.    0.26834 (1) obj. -36.4179 iterations 1
Cbc0038I Pass   6: suminf.    1.40419 (3) obj. -36.4179 iterations 4
Cbc0038I Pass   7: suminf.    0.83489 (3) obj. -36.4179 iterations 3
Cbc0038I Pass   8: suminf.    0.44012 (3) obj. -36.4179 iterations 6
Cbc0038I Pass   9: suminf.    0.47619 (1) obj. -36.4179 iterations 5
Cbc0038I Pass  10: suminf.    0.26302 (1) obj. -36.4179 iterations 1
Cbc0038I Pass  11: suminf.    0.68541 (2) obj. -36.4179 iterations 7
Cbc0038I Pass  12: suminf.    0.44760 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  13: suminf.    0.42857 (1) obj. -36.4179 iterations 5
Cbc0038I Pass  14: suminf.    0.26834 (1) obj. -36.4179 iterations 1
Cbc0038I Pass  15: suminf.    0.73771 (2) obj. -36.4179 iterations 2
Cbc0038I Pass  16: suminf.    0.32367 (2) obj. -36.4179 iterations 3
Cbc0038I Pass  17: suminf.    0.75385 (5) obj. -36.4179 iterations 7
Cbc0038I Pass  18: suminf.    1.14097 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  19: suminf.    1.05279 (3) obj. -36.4179 iterations 2
Cbc0038I Pass  20: suminf.    0.76947 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  21: suminf.    1.14097 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  22: suminf.    2.25989 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  23: suminf.    0.97989 (4) obj. -36.4179 iterations 3
Cbc0038I Pass  24: suminf.    1.86335 (6) obj. -36.4179 iterations 8
Cbc0038I Pass  25: suminf.    1.96404 (6) obj. -36.4179 iterations 4
Cbc0038I Pass  26: suminf.    1.80468 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  27: suminf.    1.80468 (5) obj. -36.4179 iterations 0
Cbc0038I Pass  28: suminf.    1.89899 (7) obj. -36.4179 iterations 5
Cbc0038I Pass  29: suminf.    1.57377 (7) obj. -36.4179 iterations 3
Cbc0038I Pass  30: suminf.    0.68891 (4) obj. -36.4179 iterations 6
Cbc0038I Pass  31: suminf.    0.51376 (3) obj. -36.4179 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -32.7702 to -33.5185 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.9836
Cbc0038I Pass  31: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  32: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  33: suminf.    0.45707 (1) obj. -42.9836 iterations 4
Cbc0038I Pass  34: suminf.    0.46490 (1) obj. -42.9836 iterations 1
Cbc0038I Pass  35: suminf.    1.50516 (5) obj. -42.9836 iterations 9
Cbc0038I Pass  36: suminf.    0.51369 (3) obj. -42.9836 iterations 6
Cbc0038I Pass  37: suminf.    1.00815 (5) obj. -42.9836 iterations 3
Cbc0038I Pass  38: suminf.    0.58937 (4) obj. -42.9836 iterations 3
Cbc0038I Pass  39: suminf.    1.58129 (4) obj. -42.9836 iterations 6
Cbc0038I Pass  40: suminf.    0.71107 (4) obj. -42.9836 iterations 4
Cbc0038I Pass  41: suminf.    0.45707 (1) obj. -42.9836 iterations 4
Cbc0038I Pass  42: suminf.    0.46490 (1) obj. -42.9836 iterations 1
Cbc0038I Pass  43: suminf.    0.93949 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  44: suminf.    0.46490 (1) obj. -42.9836 iterations 3
Cbc0038I Pass  45: suminf.    1.94802 (7) obj. -42.9836 iterations 10
Cbc0038I Pass  46: suminf.    0.53738 (3) obj. -42.9836 iterations 6
Cbc0038I Pass  47: suminf.    0.59689 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  48: suminf.    0.57438 (3) obj. -42.9836 iterations 1
Cbc0038I Pass  49: suminf.    1.09958 (5) obj. -42.9836 iterations 6
Cbc0038I Pass  50: suminf.    0.72394 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  51: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  52: suminf.    0.82236 (5) obj. -42.9836 iterations 7
Cbc0038I Pass  53: suminf.    0.62105 (5) obj. -42.9836 iterations 5
Cbc0038I Pass  54: suminf.    1.42232 (5) obj. -42.9836 iterations 5
Cbc0038I Pass  55: suminf.    0.73746 (3) obj. -42.9836 iterations 1
Cbc0038I Pass  56: suminf.    0.49942 (2) obj. -42.9836 iterations 1
Cbc0038I Pass  57: suminf.    0.72394 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  58: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  59: suminf.    0.82236 (5) obj. -42.9836 iterations 7
Cbc0038I Pass  60: suminf.    0.62105 (5) obj. -42.9836 iterations 5
Cbc0038I Rounding solution of -33.5405 is better than previous of -33.5185

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -50.8625
Cbc0038I Pass  60: suminf.    1.05555 (3) obj. -50.8625 iterations 0
Cbc0038I Pass  61: suminf.    1.05555 (3) obj. -50.8625 iterations 0
Cbc0038I Pass  62: suminf.    0.79317 (8) obj. -50.8625 iterations 9
Cbc0038I Pass  63: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  64: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  65: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  66: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  67: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  68: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  69: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  70: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  71: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  72: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  73: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  74: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  75: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  76: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  77: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  78: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  79: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  80: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  81: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  82: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  83: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  84: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  85: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  86: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  87: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  88: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  89: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -33.5405 - took 0.04 seconds
Cbc0012I Integer solution of -33.54046 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 8 added rows had average density of 17.375
Cbc0013I At root node, 8 cuts changed objective from -69.246605 to -46.730738 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 809 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 742 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -33.54046, took 1654 iterations and 8 nodes (0.19 seconds)
Cbc0032I Strong branching done 70 times (375 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 39 (-6) columns and 301 (-60) elements
Clp1000I sum of infeasibilities 1.58842e-08 - average 4.8134e-10, 23 fixed columns
Coin0506I Presolve 12 (-21) rows, 16 (-23) columns and 51 (-250) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 11.644418
Clp0000I Optimal - objective value 11.644418
Coin0511I After Postsolve, objective 11.644418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8244952 - largest nonzero change 0 ( 0%) - largest zero change 1.8429708e-05
Clp0000I Optimal - objective value 86.692801
Clp0000I Optimal - objective value 86.692801
Clp0000I Optimal - objective value 86.692801
Coin0511I After Postsolve, objective 86.692801, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.6928007 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 39 columns (39 integer (39 of which binary)) and 313 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.510%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.3973
Cbc0038I Pass   1: suminf.    3.22225 (11) obj. -61.6183 iterations 9
Cbc0038I Solution found of -31.9489
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -35.0576
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    3.22225 (11) obj. -61.6183 iterations 0
Cbc0038I Pass   3: suminf.    0.28261 (1) obj. -35.0576 iterations 22
Cbc0038I Pass   4: suminf.    0.22222 (1) obj. -40.5045 iterations 3
Cbc0038I Pass   5: suminf.    2.64564 (8) obj. -35.0576 iterations 15
Cbc0038I Pass   6: suminf.    1.86531 (8) obj. -35.0576 iterations 5
Cbc0038I Pass   7: suminf.    1.44559 (4) obj. -35.0576 iterations 6
Cbc0038I Pass   8: suminf.    1.36267 (4) obj. -35.0576 iterations 3
Cbc0038I Pass   9: suminf.    1.44559 (4) obj. -35.0576 iterations 3
Cbc0038I Pass  10: suminf.    1.85232 (11) obj. -35.0576 iterations 7
Cbc0038I Pass  11: suminf.    1.59969 (6) obj. -35.0576 iterations 3
Cbc0038I Pass  12: suminf.    1.05146 (5) obj. -35.0576 iterations 5
Cbc0038I Pass  13: suminf.    1.05146 (5) obj. -35.0576 iterations 1
Cbc0038I Pass  14: suminf.    1.11874 (5) obj. -35.0576 iterations 1
Cbc0038I Pass  15: suminf.    1.11874 (5) obj. -35.0576 iterations 0
Cbc0038I Pass  16: suminf.    1.05146 (5) obj. -35.0576 iterations 2
Cbc0038I Pass  17: suminf.    0.61127 (4) obj. -35.0576 iterations 7
Cbc0038I Pass  18: suminf.    0.61127 (4) obj. -35.0576 iterations 0
Cbc0038I Pass  19: suminf.    0.83435 (3) obj. -35.0576 iterations 4
Cbc0038I Pass  20: suminf.    0.84186 (3) obj. -35.0576 iterations 1
Cbc0038I Pass  21: suminf.    0.72112 (3) obj. -37.9718 iterations 2
Cbc0038I Pass  22: suminf.    0.83435 (3) obj. -35.0576 iterations 1
Cbc0038I Pass  23: suminf.    1.35453 (5) obj. -35.0576 iterations 5
Cbc0038I Pass  24: suminf.    1.35453 (5) obj. -35.0576 iterations 0
Cbc0038I Pass  25: suminf.    1.02827 (3) obj. -35.0576 iterations 5
Cbc0038I Pass  26: suminf.    0.43161 (3) obj. -39.9777 iterations 3
Cbc0038I Pass  27: suminf.    0.76987 (3) obj. -35.0576 iterations 1
Cbc0038I Pass  28: suminf.    1.53005 (7) obj. -35.0576 iterations 8
Cbc0038I Pass  29: suminf.    1.53005 (7) obj. -35.0576 iterations 2
Cbc0038I Pass  30: suminf.    1.57683 (5) obj. -35.0576 iterations 5
Cbc0038I Pass  31: suminf.    1.27949 (5) obj. -35.0576 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.9489 to -32.1071 (0.03 seconds)
Cbc0038I Round again with cutoff of -40.653
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.22225 (11) obj. -61.6183 iterations 0
Cbc0038I Pass  32: suminf.    0.23807 (3) obj. -40.653 iterations 20
Cbc0038I Pass  33: suminf.    0.23807 (3) obj. -40.653 iterations 0
Cbc0038I Pass  34: suminf.    0.88488 (3) obj. -40.653 iterations 7
Cbc0038I Pass  35: suminf.    0.84127 (3) obj. -41.0019 iterations 4
Cbc0038I Pass  36: suminf.    1.03912 (4) obj. -40.653 iterations 9
Cbc0038I Pass  37: suminf.    1.01084 (4) obj. -40.653 iterations 4
Cbc0038I Pass  38: suminf.    1.03912 (4) obj. -40.653 iterations 2
Cbc0038I Pass  39: suminf.    1.87976 (9) obj. -40.653 iterations 15
Cbc0038I Pass  40: suminf.    1.78689 (7) obj. -40.653 iterations 4
Cbc0038I Pass  41: suminf.    1.58439 (6) obj. -40.653 iterations 11
Cbc0038I Pass  42: suminf.    1.40332 (6) obj. -40.653 iterations 3
Cbc0038I Pass  43: suminf.    1.58439 (6) obj. -40.653 iterations 4
Cbc0038I Pass  44: suminf.    1.43188 (7) obj. -40.653 iterations 10
Cbc0038I Pass  45: suminf.    1.36690 (8) obj. -40.653 iterations 2
Cbc0038I Pass  46: suminf.    1.79569 (5) obj. -40.653 iterations 7
Cbc0038I Pass  47: suminf.    1.56163 (5) obj. -42.5256 iterations 3
Cbc0038I Pass  48: suminf.    1.79569 (5) obj. -40.653 iterations 3
Cbc0038I Pass  49: suminf.    1.67970 (7) obj. -40.653 iterations 4
Cbc0038I Pass  50: suminf.    1.49933 (5) obj. -40.653 iterations 2
Cbc0038I Pass  51: suminf.    1.16525 (4) obj. -40.653 iterations 4
Cbc0038I Pass  52: suminf.    1.11165 (5) obj. -40.653 iterations 1
Cbc0038I Pass  53: suminf.    1.06810 (5) obj. -40.653 iterations 1
Cbc0038I Pass  54: suminf.    1.06810 (5) obj. -40.653 iterations 1
Cbc0038I Pass  55: suminf.    1.11165 (5) obj. -40.653 iterations 2
Cbc0038I Pass  56: suminf.    1.64177 (7) obj. -40.653 iterations 6
Cbc0038I Pass  57: suminf.    1.42312 (7) obj. -40.653 iterations 2
Cbc0038I Pass  58: suminf.    1.10659 (6) obj. -40.653 iterations 5
Cbc0038I Pass  59: suminf.    1.10659 (6) obj. -40.653 iterations 2
Cbc0038I Pass  60: suminf.    1.70308 (6) obj. -40.653 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -32.1071 - took 0.02 seconds
Cbc0012I Integer solution of -32.10708 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 39 columns, reduced to 6 rows 7 columns
Cbc0031I 16 added rows had average density of 13.9375
Cbc0013I At root node, 16 cuts changed objective from -63.034742 to -39.215234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 686 row cuts average 2.5 elements, 12 column cuts (12 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 399 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 48 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 19 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.718 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.10708 best solution, best possible -39.215234 (1.45 seconds)
Cbc0012I Integer solution of -33.5185 found by rounding after 1301 iterations and 1 nodes (1.50 seconds)
Cbc0004I Integer solution of -33.54046 found after 1343 iterations and 4 nodes (1.56 seconds)
Cbc0001I Search completed - best objective -33.54046, took 1380 iterations and 6 nodes (1.56 seconds)
Cbc0032I Strong branching done 78 times (471 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.57

