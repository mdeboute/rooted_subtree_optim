Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 5.70276e-05 - average 4.13244e-07, 9 fixed columns
Coin0506I Presolve 120 (-18) rows, 67 (-9) columns and 366 (-54) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Coin0511I After Postsolve, objective 35.064976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Coin0511I After Postsolve, objective 35.064976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.0649763 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.0198
Cbc0038I Solution found of 6.02205
Cbc0038I Relaxing continuous gives 5.09053
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 5.09053 to -4.79345 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.82069
Cbc0038I Pass   1: suminf.    2.23480 (16) obj. -7.82069 iterations 49
Cbc0038I Pass   2: suminf.    1.83290 (6) obj. -7.82069 iterations 22
Cbc0038I Pass   3: suminf.    1.59346 (6) obj. -7.82069 iterations 2
Cbc0038I Pass   4: suminf.    2.07674 (7) obj. -7.82069 iterations 9
Cbc0038I Pass   5: suminf.    1.70568 (6) obj. -7.82069 iterations 3
Cbc0038I Pass   6: suminf.    1.32584 (5) obj. -7.82069 iterations 1
Cbc0038I Pass   7: suminf.    1.32584 (5) obj. -7.82069 iterations 0
Cbc0038I Pass   8: suminf.    2.22746 (6) obj. -7.82069 iterations 5
Cbc0038I Pass   9: suminf.    1.88428 (6) obj. -7.82069 iterations 3
Cbc0038I Pass  10: suminf.    1.88428 (6) obj. -7.82069 iterations 0
Cbc0038I Pass  11: suminf.    2.54914 (6) obj. -7.82069 iterations 2
Cbc0038I Pass  12: suminf.    2.21322 (7) obj. -7.82069 iterations 2
Cbc0038I Pass  13: suminf.    2.21322 (7) obj. -7.82069 iterations 0
Cbc0038I Pass  14: suminf.    2.71162 (7) obj. -7.82069 iterations 3
Cbc0038I Pass  15: suminf.    2.31194 (7) obj. -7.82069 iterations 2
Cbc0038I Pass  16: suminf.    2.31194 (7) obj. -7.82069 iterations 0
Cbc0038I Pass  17: suminf.    1.87228 (5) obj. -7.82069 iterations 4
Cbc0038I Pass  18: suminf.    1.37363 (4) obj. -7.82069 iterations 4
Cbc0038I Pass  19: suminf.    1.16981 (5) obj. -7.82069 iterations 3
Cbc0038I Pass  20: suminf.    1.16981 (5) obj. -7.82069 iterations 0
Cbc0038I Pass  21: suminf.    1.21484 (4) obj. -7.82069 iterations 5
Cbc0038I Pass  22: suminf.    1.20385 (3) obj. -7.82069 iterations 1
Cbc0038I Pass  23: suminf.    1.02845 (4) obj. -7.82069 iterations 3
Cbc0038I Pass  24: suminf.    1.00811 (3) obj. -7.82069 iterations 1
Cbc0038I Pass  25: suminf.    1.21484 (4) obj. -7.82069 iterations 2
Cbc0038I Pass  26: suminf.    1.21037 (7) obj. -7.82069 iterations 21
Cbc0038I Pass  27: suminf.    0.72719 (4) obj. -7.82069 iterations 12
Cbc0038I Pass  28: suminf.    1.70569 (5) obj. -7.82069 iterations 4
Cbc0038I Pass  29: suminf.    1.13736 (4) obj. -7.82069 iterations 2
Cbc0038I Pass  30: suminf.    0.52410 (3) obj. -7.82069 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 88 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -4.79345 to -7.29379 (0.11 seconds)
Cbc0038I Round again with cutoff of -13.2695
Cbc0038I Pass  30: suminf.    3.55343 (22) obj. -13.2695 iterations 6
Cbc0038I Pass  31: suminf.    2.87063 (10) obj. -13.2695 iterations 22
Cbc0038I Pass  32: suminf.    2.67650 (9) obj. -13.2695 iterations 4
Cbc0038I Pass  33: suminf.    1.97436 (6) obj. -13.2695 iterations 11
Cbc0038I Pass  34: suminf.    1.34244 (4) obj. -13.2695 iterations 3
Cbc0038I Pass  35: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  36: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  37: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  38: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  39: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  40: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  41: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  42: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  43: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  44: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  45: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  46: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  47: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  48: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  49: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  50: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  51: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  52: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  53: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  54: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  55: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  56: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  57: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  58: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  59: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -7.29379 - took 0.14 seconds
Cbc0012I Integer solution of -7.29379 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0031I 33 added rows had average density of 50.060606
Cbc0013I At root node, 33 cuts changed objective from -35.064976 to -26.598558 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16127 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2410 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.29379 best solution, best possible -26.598558 (1.27 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 8 rows 8 columns
Cbc0012I Integer solution of -7.49216 found by rounding after 12693 iterations and 62 nodes (1.52 seconds)
Cbc0012I Integer solution of -7.50024 found by rounding after 13637 iterations and 82 nodes (1.57 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 3 rows 5 columns
Cbc0001I Search completed - best objective -7.500240000000005, took 13954 iterations and 102 nodes (1.59 seconds)
Cbc0032I Strong branching done 868 times (16800 iterations), fathomed 10 nodes and fixed 54 variables
Cbc0035I Maximum depth 18, 219 variables fixed on reduced cost
Total time (CPU seconds):       1.56   (Wallclock seconds):       1.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-44) rows, 122 (-30) columns and 2081 (-1222) elements
Clp1000I sum of infeasibilities 1.40204e-07 - average 1.27458e-09, 28 fixed columns
Coin0506I Presolve 85 (-25) rows, 94 (-28) columns and 1262 (-819) elements
Clp0006I 0  Obj 45.096395 Dual inf 3.4628767 (94)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.7173665 - largest nonzero change 2.0136705e-05 ( 0.0015380202%) - largest zero change 2.9861928e-05
Clp0000I Optimal - objective value 54.044779
Clp0000I Optimal - objective value 54.044779
Coin0511I After Postsolve, objective 54.044779, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.044779
Clp0000I Optimal - objective value 54.044779
Clp0000I Optimal - objective value 54.044779
Clp0000I Optimal - objective value 54.044779
Coin0511I After Postsolve, objective 54.044779, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.04477918 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 122 columns (122 integer (122 of which binary)) and 2083 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.514%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.96667
Cbc0038I Pass   1: suminf.    2.19080 (28) obj. -34.0588 iterations 20
Cbc0038I Pass   2: suminf.    2.19080 (28) obj. -34.0588 iterations 1
Cbc0038I Solution found of 2.60569
Cbc0038I Rounding solution of 0.03783 is better than previous of 2.60569

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4.5228
Cbc0038I Pass   3: suminf.    2.19080 (28) obj. -34.0588 iterations 0
Cbc0038I Pass   4: suminf.    2.19080 (28) obj. -34.0588 iterations 1
Cbc0038I Pass   5: suminf.    0.47386 (9) obj. -7.85025 iterations 19
Cbc0038I Pass   6: suminf.    0.88166 (11) obj. -4.5228 iterations 15
Cbc0038I Pass   7: suminf.    0.63965 (11) obj. -4.5228 iterations 1
Cbc0038I Pass   8: suminf.    1.11372 (6) obj. -4.5228 iterations 18
Cbc0038I Pass   9: suminf.    0.81846 (7) obj. -4.5228 iterations 2
Cbc0038I Pass  10: suminf.    1.21622 (6) obj. -4.5228 iterations 12
Cbc0038I Pass  11: suminf.    1.21622 (6) obj. -4.5228 iterations 3
Cbc0038I Pass  12: suminf.    0.49264 (4) obj. -4.5228 iterations 11
Cbc0038I Pass  13: suminf.    0.38831 (3) obj. -4.67165 iterations 4
Cbc0038I Pass  14: suminf.    0.41808 (3) obj. -4.5228 iterations 3
Cbc0038I Pass  15: suminf.    2.14039 (16) obj. -4.5228 iterations 32
Cbc0038I Pass  16: suminf.    2.14039 (16) obj. -4.5228 iterations 3
Cbc0038I Pass  17: suminf.    1.19951 (7) obj. -4.5228 iterations 25
Cbc0038I Pass  18: suminf.    0.61961 (5) obj. -4.5228 iterations 5
Cbc0038I Pass  19: suminf.    0.69090 (5) obj. -4.5228 iterations 4
Cbc0038I Pass  20: suminf.    1.39908 (15) obj. -4.5228 iterations 42
Cbc0038I Pass  21: suminf.    1.37157 (14) obj. -4.5228 iterations 15
Cbc0038I Pass  22: suminf.    1.41808 (8) obj. -4.5228 iterations 12
Cbc0038I Pass  23: suminf.    0.60502 (6) obj. -6.89565 iterations 4
Cbc0038I Pass  24: suminf.    0.71929 (5) obj. -4.5228 iterations 7
Cbc0038I Pass  25: suminf.    0.51952 (6) obj. -4.5228 iterations 2
Cbc0038I Pass  26: suminf.    1.49571 (7) obj. -4.5228 iterations 5
Cbc0038I Pass  27: suminf.    1.12170 (5) obj. -4.5228 iterations 4
Cbc0038I Pass  28: suminf.    1.10290 (8) obj. -4.5228 iterations 5
Cbc0038I Pass  29: suminf.    1.79386 (7) obj. -4.5228 iterations 6
Cbc0038I Pass  30: suminf.    0.87267 (8) obj. -4.5228 iterations 4
Cbc0038I Pass  31: suminf.    0.87204 (7) obj. -4.5228 iterations 2
Cbc0038I Pass  32: suminf.    1.81556 (6) obj. -4.5228 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 37 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 2.60569 to -4.52156 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.7318
Cbc0038I Pass  32: suminf.    2.19080 (28) obj. -34.0588 iterations 0
Cbc0038I Pass  33: suminf.    2.19080 (28) obj. -34.0588 iterations 1
Cbc0038I Pass  34: suminf.    0.89351 (9) obj. -12.7318 iterations 24
Cbc0038I Pass  35: suminf.    0.48921 (8) obj. -13.9484 iterations 4
Cbc0038I Pass  36: suminf.    0.89486 (15) obj. -12.7318 iterations 13
Cbc0038I Pass  37: suminf.    0.87777 (13) obj. -12.7318 iterations 1
Cbc0038I Pass  38: suminf.    1.84710 (13) obj. -12.7318 iterations 21
Cbc0038I Pass  39: suminf.    1.34542 (11) obj. -12.7318 iterations 3
Cbc0038I Pass  40: suminf.    1.98128 (10) obj. -12.7318 iterations 12
Cbc0038I Pass  41: suminf.    1.98128 (10) obj. -12.7318 iterations 2
Cbc0038I Pass  42: suminf.    0.96124 (9) obj. -12.7318 iterations 19
Cbc0038I Pass  43: suminf.    0.84633 (10) obj. -12.7318 iterations 2
Cbc0038I Pass  44: suminf.    0.96124 (9) obj. -12.7318 iterations 12
Cbc0038I Pass  45: suminf.    0.86827 (10) obj. -12.7318 iterations 9
Cbc0038I Pass  46: suminf.    2.47525 (16) obj. -12.7318 iterations 19
Cbc0038I Pass  47: suminf.    2.19746 (15) obj. -12.7318 iterations 3
Cbc0038I Pass  48: suminf.    2.12585 (18) obj. -12.7318 iterations 3
Cbc0038I Pass  49: suminf.    1.57703 (10) obj. -12.7318 iterations 23
Cbc0038I Pass  50: suminf.    1.33613 (9) obj. -12.7318 iterations 2
Cbc0038I Pass  51: suminf.    0.96406 (10) obj. -12.7318 iterations 9
Cbc0038I Pass  52: suminf.    2.57164 (12) obj. -12.7318 iterations 13
Cbc0038I Pass  53: suminf.    2.18344 (11) obj. -12.7318 iterations 3
Cbc0038I Pass  54: suminf.    1.28203 (10) obj. -12.7318 iterations 12
Cbc0038I Pass  55: suminf.    1.28203 (10) obj. -12.7318 iterations 0
Cbc0038I Pass  56: suminf.    1.31524 (10) obj. -12.7318 iterations 8
Cbc0038I Pass  57: suminf.    1.31524 (10) obj. -12.7318 iterations 6
Cbc0038I Pass  58: suminf.    1.27307 (10) obj. -12.7318 iterations 8
Cbc0038I Pass  59: suminf.    1.27307 (10) obj. -12.7318 iterations 6
Cbc0038I Pass  60: suminf.    2.08517 (14) obj. -12.7318 iterations 26
Cbc0038I Pass  61: suminf.    1.71297 (12) obj. -12.7318 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 36 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -4.52156 to -4.72931 (0.12 seconds)
Cbc0038I Round again with cutoff of -22.5825
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.19080 (28) obj. -34.0588 iterations 0
Cbc0038I Pass  62: suminf.    2.19080 (28) obj. -34.0588 iterations 1
Cbc0038I Pass  63: suminf.    1.27674 (17) obj. -22.5825 iterations 13
Cbc0038I Pass  64: suminf.    1.15138 (17) obj. -23.2093 iterations 2
Cbc0038I Pass  65: suminf.    2.57651 (20) obj. -22.5825 iterations 25
Cbc0038I Pass  66: suminf.    2.41440 (21) obj. -22.5825 iterations 2
Cbc0038I Pass  67: suminf.    2.36446 (19) obj. -22.5825 iterations 26
Cbc0038I Pass  68: suminf.    2.36446 (19) obj. -22.5825 iterations 5
Cbc0038I Pass  69: suminf.    3.90367 (23) obj. -22.5825 iterations 11
Cbc0038I Pass  70: suminf.    3.79533 (21) obj. -22.5825 iterations 2
Cbc0038I Pass  71: suminf.    4.95176 (20) obj. -22.5825 iterations 10
Cbc0038I Pass  72: suminf.    2.38133 (19) obj. -22.5825 iterations 6
Cbc0038I Pass  73: suminf.    2.38133 (19) obj. -22.5825 iterations 0
Cbc0038I Pass  74: suminf.    3.90367 (23) obj. -22.5825 iterations 11
Cbc0038I Pass  75: suminf.    3.79533 (21) obj. -22.5825 iterations 2
Cbc0038I Pass  76: suminf.    4.95176 (20) obj. -22.5825 iterations 11
Cbc0038I Pass  77: suminf.    2.38133 (19) obj. -22.5825 iterations 6
Cbc0038I Pass  78: suminf.    2.38133 (19) obj. -22.5825 iterations 0
Cbc0038I Pass  79: suminf.    2.36446 (19) obj. -22.5825 iterations 5
Cbc0038I Pass  80: suminf.    2.36446 (19) obj. -22.5825 iterations 2
Cbc0038I Pass  81: suminf.    2.33906 (19) obj. -22.5825 iterations 4
Cbc0038I Pass  82: suminf.    2.33906 (19) obj. -22.5825 iterations 2
Cbc0038I Pass  83: suminf.    2.36446 (19) obj. -22.5825 iterations 3
Cbc0038I Pass  84: suminf.    3.47055 (23) obj. -22.5825 iterations 13
Cbc0038I Pass  85: suminf.    2.58973 (21) obj. -22.5825 iterations 6
Cbc0038I Pass  86: suminf.    3.64993 (21) obj. -22.5825 iterations 17
Cbc0038I Pass  87: suminf.    2.10903 (21) obj. -22.5825 iterations 6
Cbc0038I Pass  88: suminf.    2.10903 (21) obj. -22.5825 iterations 0
Cbc0038I Pass  89: suminf.    2.82577 (21) obj. -22.5825 iterations 5
Cbc0038I Pass  90: suminf.    2.82577 (21) obj. -22.5825 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -4.72931 - took 0.11 seconds
Cbc0012I Integer solution of -4.72931 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 32 rows 38 columns
Cbc0031I 64 added rows had average density of 29.171875
Cbc0013I At root node, 64 cuts changed objective from -45.567605 to -11.904438 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19517 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1488 row cuts average 113.6 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 513 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1467 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 389 row cuts average 58.6 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.600 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.72931 best solution, best possible -11.904438 (2.57 seconds)
Cbc0010I After 31 nodes, 10 on tree, -4.72931 best solution, best possible -11.904438 (3.28 seconds)
Cbc0012I Integer solution of -5.8031 found by rounding after 7593 iterations and 36 nodes (3.29 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 3 rows 6 columns
Cbc0012I Integer solution of -6.26064 found by rounding after 8605 iterations and 71 nodes (3.37 seconds)
Cbc0016I Integer solution of -6.50024 found by strong branching after 9131 iterations and 92 nodes (3.42 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 4 rows 9 columns
Cbc0010I After 115 nodes, 9 on tree, -6.50024 best solution, best possible -11.904438 (3.98 seconds)
Cbc0010I After 160 nodes, 9 on tree, -6.50024 best solution, best possible -11.897814 (4.69 seconds)
Cbc0012I Integer solution of -6.66387 found by rounding after 13564 iterations and 221 nodes (4.86 seconds)
Cbc0012I Integer solution of -7.50024 found by rounding after 14833 iterations and 280 nodes (5.07 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 2 rows 5 columns
Cbc0001I Search completed - best objective -7.500240000000005, took 15365 iterations and 308 nodes (5.15 seconds)
Cbc0032I Strong branching done 2584 times (32347 iterations), fathomed 53 nodes and fixed 91 variables
Cbc0035I Maximum depth 17, 686 variables fixed on reduced cost
Total time (CPU seconds):       4.46   (Wallclock seconds):       5.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 5.70276e-05 - average 4.13244e-07, 9 fixed columns
Coin0506I Presolve 120 (-18) rows, 67 (-9) columns and 366 (-54) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Coin0511I After Postsolve, objective 35.064976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Coin0511I After Postsolve, objective 35.064976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.0649763 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.0198
Cbc0038I Solution found of 6.02205
Cbc0038I Relaxing continuous gives 5.09053
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 5.09053 to -4.79345 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.82069
Cbc0038I Pass   1: suminf.    2.23480 (16) obj. -7.82069 iterations 49
Cbc0038I Pass   2: suminf.    1.83290 (6) obj. -7.82069 iterations 22
Cbc0038I Pass   3: suminf.    1.59346 (6) obj. -7.82069 iterations 2
Cbc0038I Pass   4: suminf.    2.07674 (7) obj. -7.82069 iterations 9
Cbc0038I Pass   5: suminf.    1.70568 (6) obj. -7.82069 iterations 3
Cbc0038I Pass   6: suminf.    1.32584 (5) obj. -7.82069 iterations 1
Cbc0038I Pass   7: suminf.    1.32584 (5) obj. -7.82069 iterations 0
Cbc0038I Pass   8: suminf.    2.22746 (6) obj. -7.82069 iterations 5
Cbc0038I Pass   9: suminf.    1.88428 (6) obj. -7.82069 iterations 3
Cbc0038I Pass  10: suminf.    1.88428 (6) obj. -7.82069 iterations 0
Cbc0038I Pass  11: suminf.    2.54914 (6) obj. -7.82069 iterations 2
Cbc0038I Pass  12: suminf.    2.21322 (7) obj. -7.82069 iterations 2
Cbc0038I Pass  13: suminf.    2.21322 (7) obj. -7.82069 iterations 0
Cbc0038I Pass  14: suminf.    2.71162 (7) obj. -7.82069 iterations 3
Cbc0038I Pass  15: suminf.    2.31194 (7) obj. -7.82069 iterations 2
Cbc0038I Pass  16: suminf.    2.31194 (7) obj. -7.82069 iterations 0
Cbc0038I Pass  17: suminf.    1.87228 (5) obj. -7.82069 iterations 4
Cbc0038I Pass  18: suminf.    1.37363 (4) obj. -7.82069 iterations 4
Cbc0038I Pass  19: suminf.    1.16981 (5) obj. -7.82069 iterations 3
Cbc0038I Pass  20: suminf.    1.16981 (5) obj. -7.82069 iterations 0
Cbc0038I Pass  21: suminf.    1.21484 (4) obj. -7.82069 iterations 5
Cbc0038I Pass  22: suminf.    1.20385 (3) obj. -7.82069 iterations 1
Cbc0038I Pass  23: suminf.    1.02845 (4) obj. -7.82069 iterations 3
Cbc0038I Pass  24: suminf.    1.00811 (3) obj. -7.82069 iterations 1
Cbc0038I Pass  25: suminf.    1.21484 (4) obj. -7.82069 iterations 2
Cbc0038I Pass  26: suminf.    1.21037 (7) obj. -7.82069 iterations 21
Cbc0038I Pass  27: suminf.    0.72719 (4) obj. -7.82069 iterations 12
Cbc0038I Pass  28: suminf.    1.70569 (5) obj. -7.82069 iterations 4
Cbc0038I Pass  29: suminf.    1.13736 (4) obj. -7.82069 iterations 2
Cbc0038I Pass  30: suminf.    0.52410 (3) obj. -7.82069 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 88 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -4.79345 to -7.29379 (0.11 seconds)
Cbc0038I Round again with cutoff of -13.2695
Cbc0038I Pass  30: suminf.    3.55343 (22) obj. -13.2695 iterations 6
Cbc0038I Pass  31: suminf.    2.87063 (10) obj. -13.2695 iterations 22
Cbc0038I Pass  32: suminf.    2.67650 (9) obj. -13.2695 iterations 4
Cbc0038I Pass  33: suminf.    1.97436 (6) obj. -13.2695 iterations 11
Cbc0038I Pass  34: suminf.    1.34244 (4) obj. -13.2695 iterations 3
Cbc0038I Pass  35: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  36: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  37: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  38: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  39: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  40: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  41: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  42: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  43: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  44: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  45: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  46: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  47: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  48: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  49: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  50: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  51: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  52: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  53: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  54: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  55: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  56: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  57: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  58: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  59: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -7.29379 - took 0.15 seconds
Cbc0012I Integer solution of -7.29379 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0031I 33 added rows had average density of 50.060606
Cbc0013I At root node, 33 cuts changed objective from -35.064976 to -26.598558 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16127 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2410 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.29379 best solution, best possible -26.598558 (1.25 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 8 rows 8 columns
Cbc0012I Integer solution of -7.49216 found by rounding after 12693 iterations and 62 nodes (1.50 seconds)
Cbc0012I Integer solution of -7.50024 found by rounding after 13637 iterations and 82 nodes (1.55 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 3 rows 5 columns
Cbc0001I Search completed - best objective -7.500240000000005, took 13954 iterations and 102 nodes (1.57 seconds)
Cbc0032I Strong branching done 868 times (16800 iterations), fathomed 10 nodes and fixed 54 variables
Cbc0035I Maximum depth 18, 219 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       1.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 122 (-31) columns and 2081 (-1223) elements
Clp1000I sum of infeasibilities 1.40204e-07 - average 1.27458e-09, 28 fixed columns
Coin0506I Presolve 85 (-25) rows, 94 (-28) columns and 1262 (-819) elements
Clp0006I 0  Obj 45.096395 Dual inf 3.4628767 (94)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.7173665 - largest nonzero change 2.0136705e-05 ( 0.0015380202%) - largest zero change 2.9861928e-05
Clp0000I Optimal - objective value 54.044779
Clp0000I Optimal - objective value 54.044779
Coin0511I After Postsolve, objective 54.044779, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.044779
Clp0000I Optimal - objective value 54.044779
Clp0000I Optimal - objective value 54.044779
Clp0000I Optimal - objective value 54.044779
Coin0511I After Postsolve, objective 54.044779, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.04477918 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 122 columns (122 integer (122 of which binary)) and 2083 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.514%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.96667
Cbc0038I Pass   1: suminf.    2.19080 (28) obj. -34.0588 iterations 20
Cbc0038I Pass   2: suminf.    2.19080 (28) obj. -34.0588 iterations 1
Cbc0038I Solution found of 2.60569
Cbc0038I Rounding solution of 0.03783 is better than previous of 2.60569

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.5228
Cbc0038I Pass   3: suminf.    2.19080 (28) obj. -34.0588 iterations 0
Cbc0038I Pass   4: suminf.    2.19080 (28) obj. -34.0588 iterations 1
Cbc0038I Pass   5: suminf.    0.47386 (9) obj. -7.85025 iterations 19
Cbc0038I Pass   6: suminf.    0.88166 (11) obj. -4.5228 iterations 15
Cbc0038I Pass   7: suminf.    0.63965 (11) obj. -4.5228 iterations 1
Cbc0038I Pass   8: suminf.    1.11372 (6) obj. -4.5228 iterations 18
Cbc0038I Pass   9: suminf.    0.81846 (7) obj. -4.5228 iterations 2
Cbc0038I Pass  10: suminf.    1.21622 (6) obj. -4.5228 iterations 12
Cbc0038I Pass  11: suminf.    1.21622 (6) obj. -4.5228 iterations 3
Cbc0038I Pass  12: suminf.    0.49264 (4) obj. -4.5228 iterations 11
Cbc0038I Pass  13: suminf.    0.38831 (3) obj. -4.67165 iterations 4
Cbc0038I Pass  14: suminf.    0.41808 (3) obj. -4.5228 iterations 3
Cbc0038I Pass  15: suminf.    2.14039 (16) obj. -4.5228 iterations 32
Cbc0038I Pass  16: suminf.    2.14039 (16) obj. -4.5228 iterations 3
Cbc0038I Pass  17: suminf.    1.19951 (7) obj. -4.5228 iterations 25
Cbc0038I Pass  18: suminf.    0.61961 (5) obj. -4.5228 iterations 5
Cbc0038I Pass  19: suminf.    0.69090 (5) obj. -4.5228 iterations 4
Cbc0038I Pass  20: suminf.    1.39908 (15) obj. -4.5228 iterations 42
Cbc0038I Pass  21: suminf.    1.37157 (14) obj. -4.5228 iterations 15
Cbc0038I Pass  22: suminf.    1.41808 (8) obj. -4.5228 iterations 12
Cbc0038I Pass  23: suminf.    0.60502 (6) obj. -6.89565 iterations 4
Cbc0038I Pass  24: suminf.    0.71929 (5) obj. -4.5228 iterations 7
Cbc0038I Pass  25: suminf.    0.51952 (6) obj. -4.5228 iterations 2
Cbc0038I Pass  26: suminf.    1.49571 (7) obj. -4.5228 iterations 5
Cbc0038I Pass  27: suminf.    1.12170 (5) obj. -4.5228 iterations 4
Cbc0038I Pass  28: suminf.    1.10290 (8) obj. -4.5228 iterations 5
Cbc0038I Pass  29: suminf.    1.79386 (7) obj. -4.5228 iterations 6
Cbc0038I Pass  30: suminf.    0.87267 (8) obj. -4.5228 iterations 4
Cbc0038I Pass  31: suminf.    0.87204 (7) obj. -4.5228 iterations 2
Cbc0038I Pass  32: suminf.    1.81556 (6) obj. -4.5228 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 37 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 2.60569 to -4.52156 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.7318
Cbc0038I Pass  32: suminf.    2.19080 (28) obj. -34.0588 iterations 0
Cbc0038I Pass  33: suminf.    2.19080 (28) obj. -34.0588 iterations 1
Cbc0038I Pass  34: suminf.    0.89351 (9) obj. -12.7318 iterations 24
Cbc0038I Pass  35: suminf.    0.48921 (8) obj. -13.9484 iterations 4
Cbc0038I Pass  36: suminf.    0.89486 (15) obj. -12.7318 iterations 13
Cbc0038I Pass  37: suminf.    0.87777 (13) obj. -12.7318 iterations 1
Cbc0038I Pass  38: suminf.    1.84710 (13) obj. -12.7318 iterations 21
Cbc0038I Pass  39: suminf.    1.34542 (11) obj. -12.7318 iterations 3
Cbc0038I Pass  40: suminf.    1.98128 (10) obj. -12.7318 iterations 12
Cbc0038I Pass  41: suminf.    1.98128 (10) obj. -12.7318 iterations 2
Cbc0038I Pass  42: suminf.    0.96124 (9) obj. -12.7318 iterations 19
Cbc0038I Pass  43: suminf.    0.84633 (10) obj. -12.7318 iterations 2
Cbc0038I Pass  44: suminf.    0.96124 (9) obj. -12.7318 iterations 12
Cbc0038I Pass  45: suminf.    0.86827 (10) obj. -12.7318 iterations 9
Cbc0038I Pass  46: suminf.    2.47525 (16) obj. -12.7318 iterations 19
Cbc0038I Pass  47: suminf.    2.19746 (15) obj. -12.7318 iterations 3
Cbc0038I Pass  48: suminf.    2.12585 (18) obj. -12.7318 iterations 3
Cbc0038I Pass  49: suminf.    1.57703 (10) obj. -12.7318 iterations 23
Cbc0038I Pass  50: suminf.    1.33613 (9) obj. -12.7318 iterations 2
Cbc0038I Pass  51: suminf.    0.96406 (10) obj. -12.7318 iterations 9
Cbc0038I Pass  52: suminf.    2.57164 (12) obj. -12.7318 iterations 13
Cbc0038I Pass  53: suminf.    2.18344 (11) obj. -12.7318 iterations 3
Cbc0038I Pass  54: suminf.    1.28203 (10) obj. -12.7318 iterations 12
Cbc0038I Pass  55: suminf.    1.28203 (10) obj. -12.7318 iterations 0
Cbc0038I Pass  56: suminf.    1.31524 (10) obj. -12.7318 iterations 8
Cbc0038I Pass  57: suminf.    1.31524 (10) obj. -12.7318 iterations 6
Cbc0038I Pass  58: suminf.    1.27307 (10) obj. -12.7318 iterations 8
Cbc0038I Pass  59: suminf.    1.27307 (10) obj. -12.7318 iterations 6
Cbc0038I Pass  60: suminf.    2.08517 (14) obj. -12.7318 iterations 26
Cbc0038I Pass  61: suminf.    1.71297 (12) obj. -12.7318 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 36 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -4.52156 to -4.72931 (0.12 seconds)
Cbc0038I Round again with cutoff of -22.5825
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.19080 (28) obj. -34.0588 iterations 0
Cbc0038I Pass  62: suminf.    2.19080 (28) obj. -34.0588 iterations 1
Cbc0038I Pass  63: suminf.    1.27674 (17) obj. -22.5825 iterations 13
Cbc0038I Pass  64: suminf.    1.15138 (17) obj. -23.2093 iterations 2
Cbc0038I Pass  65: suminf.    2.57651 (20) obj. -22.5825 iterations 25
Cbc0038I Pass  66: suminf.    2.41440 (21) obj. -22.5825 iterations 2
Cbc0038I Pass  67: suminf.    2.36446 (19) obj. -22.5825 iterations 26
Cbc0038I Pass  68: suminf.    2.36446 (19) obj. -22.5825 iterations 5
Cbc0038I Pass  69: suminf.    3.90367 (23) obj. -22.5825 iterations 11
Cbc0038I Pass  70: suminf.    3.79533 (21) obj. -22.5825 iterations 2
Cbc0038I Pass  71: suminf.    4.95176 (20) obj. -22.5825 iterations 10
Cbc0038I Pass  72: suminf.    2.38133 (19) obj. -22.5825 iterations 6
Cbc0038I Pass  73: suminf.    2.38133 (19) obj. -22.5825 iterations 0
Cbc0038I Pass  74: suminf.    3.90367 (23) obj. -22.5825 iterations 11
Cbc0038I Pass  75: suminf.    3.79533 (21) obj. -22.5825 iterations 2
Cbc0038I Pass  76: suminf.    4.95176 (20) obj. -22.5825 iterations 11
Cbc0038I Pass  77: suminf.    2.38133 (19) obj. -22.5825 iterations 6
Cbc0038I Pass  78: suminf.    2.38133 (19) obj. -22.5825 iterations 0
Cbc0038I Pass  79: suminf.    2.36446 (19) obj. -22.5825 iterations 5
Cbc0038I Pass  80: suminf.    2.36446 (19) obj. -22.5825 iterations 2
Cbc0038I Pass  81: suminf.    2.33906 (19) obj. -22.5825 iterations 4
Cbc0038I Pass  82: suminf.    2.33906 (19) obj. -22.5825 iterations 2
Cbc0038I Pass  83: suminf.    2.36446 (19) obj. -22.5825 iterations 3
Cbc0038I Pass  84: suminf.    3.47055 (23) obj. -22.5825 iterations 13
Cbc0038I Pass  85: suminf.    2.58973 (21) obj. -22.5825 iterations 6
Cbc0038I Pass  86: suminf.    3.64993 (21) obj. -22.5825 iterations 17
Cbc0038I Pass  87: suminf.    2.10903 (21) obj. -22.5825 iterations 6
Cbc0038I Pass  88: suminf.    2.10903 (21) obj. -22.5825 iterations 0
Cbc0038I Pass  89: suminf.    2.82577 (21) obj. -22.5825 iterations 5
Cbc0038I Pass  90: suminf.    2.82577 (21) obj. -22.5825 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -4.72931 - took 0.11 seconds
Cbc0012I Integer solution of -4.72931 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 32 rows 38 columns
Cbc0031I 64 added rows had average density of 29.171875
Cbc0013I At root node, 64 cuts changed objective from -45.567605 to -11.904438 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19517 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1488 row cuts average 113.6 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 513 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1467 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 389 row cuts average 58.6 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.602 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.72931 best solution, best possible -11.904438 (2.61 seconds)
Cbc0010I After 29 nodes, 8 on tree, -4.72931 best solution, best possible -11.904438 (3.32 seconds)
Cbc0012I Integer solution of -5.8031 found by rounding after 7593 iterations and 36 nodes (3.37 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 3 rows 6 columns
Cbc0012I Integer solution of -6.26064 found by rounding after 8605 iterations and 71 nodes (3.45 seconds)
Cbc0016I Integer solution of -6.50024 found by strong branching after 9131 iterations and 92 nodes (3.51 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 4 rows 9 columns
Cbc0010I After 110 nodes, 9 on tree, -6.50024 best solution, best possible -11.904438 (4.02 seconds)
Cbc0010I After 146 nodes, 7 on tree, -6.50024 best solution, best possible -11.897814 (4.72 seconds)
Cbc0012I Integer solution of -6.66387 found by rounding after 13564 iterations and 221 nodes (4.99 seconds)
Cbc0012I Integer solution of -7.50024 found by rounding after 14833 iterations and 280 nodes (5.20 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 2 rows 5 columns
Cbc0001I Search completed - best objective -7.500240000000005, took 15365 iterations and 308 nodes (5.28 seconds)
Cbc0032I Strong branching done 2584 times (32347 iterations), fathomed 53 nodes and fixed 91 variables
Cbc0035I Maximum depth 17, 686 variables fixed on reduced cost
Total time (CPU seconds):       4.56   (Wallclock seconds):       5.29

