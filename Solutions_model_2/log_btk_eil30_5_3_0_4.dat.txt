Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 16 (-47) rows, 9 (-23) columns and 44 (-133) elements
Clp0000I Optimal - objective value 80.342105
Coin0511I After Postsolve, objective 80.342105, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.34210526 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 9 columns (8 integer (8 of which binary)) and 44 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.43731
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6 iterations 6
Cbc0038I Solution found of 6
Cbc0038I Relaxing continuous gives 6
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 9 columns, reduced to 6 rows 4 columns
Cbc0038I Mini branch and bound improved solution from 6 to -27.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -33.1041
Cbc0038I Pass   2: suminf.    0.43692 (1) obj. -33.1041 iterations 1
Cbc0038I Pass   3: suminf.    0.10435 (4) obj. -33.1041 iterations 4
Cbc0038I Pass   4: suminf.    0.33937 (1) obj. -33.1041 iterations 3
Cbc0038I Solution found of -46
Cbc0038I Relaxing continuous gives -46
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 9 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -53.0082
Cbc0038I Pass   5: suminf.    0.42164 (2) obj. -53.0082 iterations 1
Cbc0038I Pass   6: suminf.    0.34272 (5) obj. -53.0082 iterations 3
Cbc0038I Pass   7: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass   8: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass   9: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  10: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I Pass  11: suminf.    0.67057 (2) obj. -53.0082 iterations 0
Cbc0038I Pass  12: suminf.    0.34272 (5) obj. -53.0082 iterations 4
Cbc0038I Pass  13: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass  14: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass  15: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  16: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I Pass  17: suminf.    0.67057 (2) obj. -53.0082 iterations 0
Cbc0038I Pass  18: suminf.    0.34272 (5) obj. -53.0082 iterations 4
Cbc0038I Pass  19: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass  20: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass  21: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  22: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I Pass  23: suminf.    0.67057 (2) obj. -53.0082 iterations 0
Cbc0038I Pass  24: suminf.    0.34272 (5) obj. -53.0082 iterations 4
Cbc0038I Pass  25: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass  26: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass  27: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  28: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I Pass  29: suminf.    0.67057 (2) obj. -53.0082 iterations 0
Cbc0038I Pass  30: suminf.    0.34272 (5) obj. -53.0082 iterations 4
Cbc0038I Pass  31: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass  32: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass  33: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  34: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 9 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -46 - took 0.01 seconds
Cbc0012I Integer solution of -46 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -79.041438 to -79.041438 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -46, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-25) rows, 37 (-23) columns and 203 (-409) elements
Clp1000I sum of infeasibilities 1.85537e-10 - average 5.01451e-12, 35 fixed columns
Coin0506I Presolve 2 (-35) rows, 2 (-35) columns and 4 (-199) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 220.17015
Clp0000I Optimal - objective value 220.17015
Coin0511I After Postsolve, objective 220.17015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23656773 - largest nonzero change 0 ( 0%) - largest zero change 2.9224403e-05
Clp0000I Optimal - objective value 304.3695
Clp0000I Optimal - objective value 304.3695
Clp0000I Optimal - objective value 304.3695
Coin0511I After Postsolve, objective 304.3695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 304.3694993 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 37 columns (37 integer (37 of which binary)) and 203 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.414%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.57849
Cbc0038I Pass   1: suminf.    1.09091 (4) obj. -196.545 iterations 27
Cbc0038I Solution found of -170
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 37 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -173.452
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.09091 (4) obj. -196.545 iterations 0
Cbc0038I Pass   3: suminf.    0.10153 (1) obj. -173.452 iterations 7
Cbc0038I Pass   4: suminf.    0.30000 (1) obj. -180.2 iterations 2
Cbc0038I Pass   5: suminf.    1.44587 (7) obj. -173.452 iterations 10
Cbc0038I Pass   6: suminf.    0.42423 (2) obj. -173.452 iterations 6
Cbc0038I Pass   7: suminf.    0.10153 (1) obj. -173.452 iterations 3
Cbc0038I Pass   8: suminf.    0.19118 (1) obj. -176.5 iterations 2
Cbc0038I Pass   9: suminf.    0.10153 (1) obj. -173.452 iterations 5
Cbc0038I Pass  10: suminf.    1.36173 (6) obj. -173.452 iterations 14
Cbc0038I Pass  11: suminf.    0.24138 (3) obj. -175.057 iterations 8
Cbc0038I Pass  12: suminf.    0.10153 (1) obj. -173.452 iterations 5
Cbc0038I Pass  13: suminf.    0.30000 (1) obj. -180.2 iterations 2
Cbc0038I Pass  14: suminf.    0.30000 (1) obj. -180.2 iterations 3
Cbc0038I Pass  15: suminf.    0.10153 (1) obj. -173.452 iterations 4
Cbc0038I Pass  16: suminf.    0.30000 (1) obj. -180.2 iterations 2
Cbc0038I Pass  17: suminf.    1.26120 (5) obj. -173.452 iterations 9
Cbc0038I Pass  18: suminf.    0.74502 (3) obj. -173.452 iterations 8
Cbc0038I Pass  19: suminf.    3.12705 (18) obj. -173.452 iterations 18
Cbc0038I Pass  20: suminf.    0.51371 (3) obj. -173.452 iterations 14
Cbc0038I Pass  21: suminf.    0.10153 (1) obj. -173.452 iterations 8
Cbc0038I Pass  22: suminf.    0.10153 (1) obj. -173.452 iterations 8
Cbc0038I Pass  23: suminf.    1.46948 (11) obj. -173.452 iterations 10
Cbc0038I Pass  24: suminf.    0.42441 (2) obj. -173.452 iterations 11
Cbc0038I Solution found of -175.5
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 37 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -180.804
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  25: suminf.    1.09091 (4) obj. -196.545 iterations 0
Cbc0038I Pass  26: suminf.    0.36039 (2) obj. -180.804 iterations 8
Cbc0038I Pass  27: suminf.    0.80000 (2) obj. -185.2 iterations 4
Cbc0038I Pass  28: suminf.    0.67070 (2) obj. -180.804 iterations 2
Cbc0038I Pass  29: suminf.    0.36039 (2) obj. -180.804 iterations 4
Cbc0038I Pass  30: suminf.    0.58539 (3) obj. -180.804 iterations 4
Cbc0038I Pass  31: suminf.    1.00403 (7) obj. -180.804 iterations 10
Cbc0038I Pass  32: suminf.    0.57534 (5) obj. -180.804 iterations 6
Cbc0038I Pass  33: suminf.    0.37727 (5) obj. -180.804 iterations 4
Cbc0038I Pass  34: suminf.    0.36039 (2) obj. -180.804 iterations 3
Cbc0038I Pass  35: suminf.    0.80000 (2) obj. -185.2 iterations 4
Cbc0038I Pass  36: suminf.    0.67070 (2) obj. -180.804 iterations 2
Cbc0038I Pass  37: suminf.    0.36039 (2) obj. -180.804 iterations 4
Cbc0038I Pass  38: suminf.    2.98788 (10) obj. -187.031 iterations 11
Cbc0038I Pass  39: suminf.    2.56133 (8) obj. -180.804 iterations 6
Cbc0038I Pass  40: suminf.    1.15722 (6) obj. -180.804 iterations 10
Cbc0038I Pass  41: suminf.    0.83381 (5) obj. -180.804 iterations 7
Cbc0038I Pass  42: suminf.    1.09091 (4) obj. -196.545 iterations 10
Cbc0038I Pass  43: suminf.    1.09091 (4) obj. -196.545 iterations 0
Cbc0038I Pass  44: suminf.    0.36039 (2) obj. -180.804 iterations 8
Cbc0038I Pass  45: suminf.    0.80000 (2) obj. -185.2 iterations 5
Cbc0038I Pass  46: suminf.    0.67070 (2) obj. -180.804 iterations 2
Cbc0038I Pass  47: suminf.    0.36039 (2) obj. -180.804 iterations 5
Cbc0038I Pass  48: suminf.    0.91335 (3) obj. -180.804 iterations 11
Cbc0038I Pass  49: suminf.    0.78539 (4) obj. -180.804 iterations 13
Cbc0038I Pass  50: suminf.    0.35693 (4) obj. -180.804 iterations 11
Cbc0038I Pass  51: suminf.    1.09091 (4) obj. -196.545 iterations 6
Cbc0038I Pass  52: suminf.    1.09091 (4) obj. -196.545 iterations 0
Cbc0038I Pass  53: suminf.    0.36039 (2) obj. -180.804 iterations 8
Cbc0038I Pass  54: suminf.    0.80000 (2) obj. -185.2 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 37 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -175.5 - took 0.02 seconds
Cbc0012I Integer solution of -175.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 37 columns, reduced to 6 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -196.54545 to -196.54545 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -175.5, took 6 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 16 (-47) rows, 9 (-23) columns and 44 (-133) elements
Clp0000I Optimal - objective value 80.342105
Coin0511I After Postsolve, objective 80.342105, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.34210526 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 9 columns (8 integer (8 of which binary)) and 44 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.43731
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6 iterations 6
Cbc0038I Solution found of 6
Cbc0038I Relaxing continuous gives 6
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 9 columns, reduced to 6 rows 4 columns
Cbc0038I Mini branch and bound improved solution from 6 to -27.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -33.1041
Cbc0038I Pass   2: suminf.    0.43692 (1) obj. -33.1041 iterations 1
Cbc0038I Pass   3: suminf.    0.10435 (4) obj. -33.1041 iterations 4
Cbc0038I Pass   4: suminf.    0.33937 (1) obj. -33.1041 iterations 3
Cbc0038I Solution found of -46
Cbc0038I Relaxing continuous gives -46
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 9 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -53.0082
Cbc0038I Pass   5: suminf.    0.42164 (2) obj. -53.0082 iterations 1
Cbc0038I Pass   6: suminf.    0.34272 (5) obj. -53.0082 iterations 3
Cbc0038I Pass   7: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass   8: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass   9: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  10: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I Pass  11: suminf.    0.67057 (2) obj. -53.0082 iterations 0
Cbc0038I Pass  12: suminf.    0.34272 (5) obj. -53.0082 iterations 4
Cbc0038I Pass  13: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass  14: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass  15: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  16: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I Pass  17: suminf.    0.67057 (2) obj. -53.0082 iterations 0
Cbc0038I Pass  18: suminf.    0.34272 (5) obj. -53.0082 iterations 4
Cbc0038I Pass  19: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass  20: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass  21: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  22: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I Pass  23: suminf.    0.67057 (2) obj. -53.0082 iterations 0
Cbc0038I Pass  24: suminf.    0.34272 (5) obj. -53.0082 iterations 4
Cbc0038I Pass  25: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass  26: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass  27: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  28: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I Pass  29: suminf.    0.67057 (2) obj. -53.0082 iterations 0
Cbc0038I Pass  30: suminf.    0.34272 (5) obj. -53.0082 iterations 4
Cbc0038I Pass  31: suminf.    1.57649 (6) obj. -53.0082 iterations 2
Cbc0038I Pass  32: suminf.    0.67420 (5) obj. -53.0082 iterations 1
Cbc0038I Pass  33: suminf.    0.94904 (3) obj. -53.0082 iterations 4
Cbc0038I Pass  34: suminf.    0.67057 (2) obj. -53.0082 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 9 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -46 - took 0.00 seconds
Cbc0012I Integer solution of -46 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -79.041438 to -79.041438 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -46, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-32) rows, 31 (-30) columns and 129 (-484) elements
Clp1000I sum of infeasibilities 6.54199e-09 - average 2.11032e-10, 2 fixed columns
Coin0506I Presolve 13 (-18) rows, 13 (-18) columns and 54 (-75) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 163.76164
Clp0000I Optimal - objective value 163.76164
Coin0511I After Postsolve, objective 163.76164, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9928958 - largest nonzero change 0 ( 0%) - largest zero change 1.573335e-05
Clp0000I Optimal - objective value 163.76164
Clp0000I Optimal - objective value 163.76164
Clp0000I Optimal - objective value 163.76164
Coin0511I After Postsolve, objective 163.76164, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 163.7616404 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 31 columns (31 integer (31 of which binary)) and 133 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 3.52432
Cbc0038I Pass   1: suminf.    0.80419 (3) obj. -63.0623 iterations 23
Cbc0038I Solution found of -8
Cbc0038I Rounding solution of -46 is better than previous of -8

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 31 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -49.7294
Cbc0038I Pass   2: suminf.    0.80419 (3) obj. -63.0623 iterations 0
Cbc0038I Pass   3: suminf.    0.10969 (1) obj. -49.7294 iterations 6
Cbc0038I Pass   4: suminf.    0.10969 (1) obj. -49.7294 iterations 0
Cbc0038I Pass   5: suminf.    0.50000 (1) obj. -63 iterations 1
Cbc0038I Pass   6: suminf.    2.18061 (8) obj. -49.7294 iterations 10
Cbc0038I Pass   7: suminf.    0.41235 (3) obj. -49.7294 iterations 7
Cbc0038I Pass   8: suminf.    0.84203 (2) obj. -49.7294 iterations 5
Cbc0038I Pass   9: suminf.    1.47592 (5) obj. -49.7294 iterations 5
Cbc0038I Pass  10: suminf.    0.39364 (4) obj. -49.7294 iterations 4
Cbc0038I Pass  11: suminf.    2.12554 (8) obj. -49.7294 iterations 10
Cbc0038I Pass  12: suminf.    0.72118 (4) obj. -49.7294 iterations 6
Cbc0038I Pass  13: suminf.    1.00640 (5) obj. -53.4535 iterations 6
Cbc0038I Pass  14: suminf.    0.20409 (2) obj. -49.7294 iterations 7
Cbc0038I Pass  15: suminf.    0.80616 (2) obj. -49.7294 iterations 2
Cbc0038I Pass  16: suminf.    1.74606 (6) obj. -49.7294 iterations 6
Cbc0038I Pass  17: suminf.    0.20409 (2) obj. -49.7294 iterations 6
Cbc0038I Pass  18: suminf.    3.99961 (10) obj. -49.7294 iterations 18
Cbc0038I Pass  19: suminf.    2.90627 (7) obj. -49.7294 iterations 7
Cbc0038I Pass  20: suminf.    2.90627 (7) obj. -49.7294 iterations 0
Cbc0038I Pass  21: suminf.    1.35900 (4) obj. -49.7294 iterations 5
Cbc0038I Pass  22: suminf.    2.70874 (8) obj. -49.7294 iterations 9
Cbc0038I Pass  23: suminf.    1.82959 (4) obj. -49.7294 iterations 5
Cbc0038I Pass  24: suminf.    1.00000 (2) obj. -64.5 iterations 2
Cbc0038I Pass  25: suminf.    0.10969 (1) obj. -49.7294 iterations 3
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -63 iterations 2
Cbc0038I Pass  27: suminf.    4.02142 (13) obj. -49.7294 iterations 16
Cbc0038I Pass  28: suminf.    1.06382 (3) obj. -49.7294 iterations 13
Cbc0038I Pass  29: suminf.    0.10969 (1) obj. -49.7294 iterations 3
Cbc0038I Pass  30: suminf.    0.50000 (1) obj. -63 iterations 2
Cbc0038I Pass  31: suminf.    2.38162 (9) obj. -49.7294 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 31 columns, reduced to 30 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -46 - took 0.01 seconds
Cbc0012I Integer solution of -46 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 31 columns, reduced to 4 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -78.79477 to -78.79477 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -46, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

