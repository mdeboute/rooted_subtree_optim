Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 38 (-25) rows, 22 (-10) columns and 113 (-64) elements
Clp0000I Optimal - objective value 96.864853
Coin0511I After Postsolve, objective 96.864853, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.86485322 - 23 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.84298
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.5 iterations 10
Cbc0038I Solution found of -18.5
Cbc0038I Relaxing continuous gives -18.5
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -18.5 to -46 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.5364
Cbc0038I Pass   2: suminf.    0.45842 (1) obj. -51.5364 iterations 1
Cbc0038I Pass   3: suminf.    0.25806 (1) obj. -51.5364 iterations 1
Cbc0038I Pass   4: suminf.    0.25806 (1) obj. -51.5364 iterations 2
Cbc0038I Pass   5: suminf.    0.25806 (1) obj. -51.5364 iterations 2
Cbc0038I Pass   6: suminf.    0.68733 (4) obj. -51.5364 iterations 4
Cbc0038I Pass   7: suminf.    0.51319 (2) obj. -51.5364 iterations 2
Cbc0038I Pass   8: suminf.    0.51319 (2) obj. -51.5364 iterations 0
Cbc0038I Pass   9: suminf.    0.51319 (2) obj. -51.5364 iterations 0
Cbc0038I Pass  10: suminf.    0.45842 (1) obj. -51.5364 iterations 2
Cbc0038I Pass  11: suminf.    0.53817 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  12: suminf.    0.29032 (1) obj. -51.5364 iterations 2
Cbc0038I Pass  13: suminf.    0.45842 (1) obj. -51.5364 iterations 1
Cbc0038I Pass  14: suminf.    1.06166 (4) obj. -51.5364 iterations 7
Cbc0038I Pass  15: suminf.    0.43296 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  16: suminf.    1.01325 (4) obj. -51.5364 iterations 7
Cbc0038I Pass  17: suminf.    0.47724 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  18: suminf.    0.66521 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  19: suminf.    0.66521 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  20: suminf.    1.22694 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  21: suminf.    1.22694 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  22: suminf.    1.56128 (4) obj. -51.5364 iterations 2
Cbc0038I Pass  23: suminf.    1.16722 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  24: suminf.    0.59851 (2) obj. -51.5364 iterations 2
Cbc0038I Pass  25: suminf.    0.59851 (2) obj. -51.5364 iterations 0
Cbc0038I Pass  26: suminf.    0.68860 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  27: suminf.    0.91195 (4) obj. -51.5364 iterations 5
Cbc0038I Pass  28: suminf.    0.74402 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  29: suminf.    0.70502 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  30: suminf.    0.70502 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  31: suminf.    1.12714 (3) obj. -51.5364 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -46 to -49.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -60.6021
Cbc0038I Pass  31: suminf.    0.30980 (1) obj. -60.6021 iterations 0
Cbc0038I Pass  32: suminf.    0.25806 (1) obj. -60.6021 iterations 1
Cbc0038I Pass  33: suminf.    1.93585 (7) obj. -60.6021 iterations 5
Cbc0038I Pass  34: suminf.    1.30407 (6) obj. -60.6021 iterations 7
Cbc0038I Pass  35: suminf.    1.47503 (4) obj. -60.6021 iterations 4
Cbc0038I Pass  36: suminf.    1.07290 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  37: suminf.    0.51925 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  38: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  39: suminf.    0.43184 (2) obj. -60.6021 iterations 3
Cbc0038I Pass  40: suminf.    0.43184 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  41: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  42: suminf.    1.06426 (3) obj. -60.6021 iterations 8
Cbc0038I Pass  43: suminf.    1.06426 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  44: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  45: suminf.    0.29032 (1) obj. -60.6021 iterations 3
Cbc0038I Pass  46: suminf.    0.30980 (1) obj. -60.6021 iterations 1
Cbc0038I Pass  47: suminf.    2.99649 (9) obj. -60.6021 iterations 11
Cbc0038I Pass  48: suminf.    1.56783 (4) obj. -60.6021 iterations 4
Cbc0038I Pass  49: suminf.    1.56783 (4) obj. -60.6021 iterations 0
Cbc0038I Pass  50: suminf.    0.43759 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  51: suminf.    0.51925 (2) obj. -60.6021 iterations 2
Cbc0038I Pass  52: suminf.    0.51925 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  53: suminf.    0.69760 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  54: suminf.    0.52515 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  55: suminf.    0.52515 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  56: suminf.    0.92480 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  57: suminf.    0.92480 (3) obj. -60.6021 iterations 0
Cbc0038I Pass  58: suminf.    1.30340 (3) obj. -60.6021 iterations 1
Cbc0038I Pass  59: suminf.    1.00681 (5) obj. -60.6021 iterations 7
Cbc0038I Pass  60: suminf.    0.85904 (4) obj. -60.6021 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -49.5 - took 0.06 seconds
Cbc0012I Integer solution of -49.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 8 added rows had average density of 15.375
Cbc0013I At root node, 8 cuts changed objective from -96.864853 to -54.557901 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 363 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 231 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -49.5, took 839 iterations and 0 nodes (0.11 seconds)
Cbc0032I Strong branching done 4 times (5 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-20) rows, 46 (-14) columns and 358 (-254) elements
Clp1000I sum of infeasibilities 9.46508e-08 - average 2.25359e-09, 15 fixed columns
Coin0506I Presolve 21 (-21) rows, 22 (-24) columns and 94 (-264) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 1.9622477 - largest nonzero change 2.0721231e-05 ( 0.0016580886%) - largest zero change 0
Clp0000I Optimal - objective value 142.33179
Clp0000I Optimal - objective value 142.33179
Coin0511I After Postsolve, objective 142.33179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5462596 - largest nonzero change 2.5072214e-05 ( 0.0016580886%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 142.33179
Clp0000I Optimal - objective value 142.33179
Clp0000I Optimal - objective value 142.33179
Coin0511I After Postsolve, objective 142.33179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.3317916 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 366 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.088%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.17837
Cbc0038I Pass   1: suminf.    1.59821 (12) obj. -26.6533 iterations 18
Cbc0038I Pass   2: suminf.    1.59821 (12) obj. -26.6533 iterations 1
Cbc0038I Solution found of 11.5
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 11.5 to -26 (0.01 seconds)
Cbc0038I Round again with cutoff of -35.8251
Cbc0038I Pass   3: suminf.    2.09762 (17) obj. -35.8251 iterations 5
Cbc0038I Pass   4: suminf.    1.35820 (18) obj. -35.8251 iterations 3
Cbc0038I Pass   5: suminf.    1.11938 (5) obj. -35.8251 iterations 7
Cbc0038I Pass   6: suminf.    1.17230 (16) obj. -35.8251 iterations 10
Cbc0038I Pass   7: suminf.    1.02319 (20) obj. -35.8251 iterations 2
Cbc0038I Pass   8: suminf.    1.13133 (4) obj. -35.8251 iterations 20
Cbc0038I Pass   9: suminf.    1.13133 (4) obj. -35.8251 iterations 0
Cbc0038I Pass  10: suminf.    0.25943 (1) obj. -35.8251 iterations 3
Cbc0038I Pass  11: suminf.    0.43548 (1) obj. -54.4355 iterations 1
Cbc0038I Pass  12: suminf.    0.85782 (4) obj. -35.8251 iterations 8
Cbc0038I Pass  13: suminf.    0.71070 (3) obj. -43.2734 iterations 3
Cbc0038I Pass  14: suminf.    0.38836 (2) obj. -35.8251 iterations 3
Cbc0038I Pass  15: suminf.    0.22005 (2) obj. -35.8251 iterations 1
Cbc0038I Pass  16: suminf.    0.56769 (2) obj. -35.8251 iterations 1
Cbc0038I Pass  17: suminf.    0.41171 (2) obj. -46.0552 iterations 1
Cbc0038I Pass  18: suminf.    2.28082 (8) obj. -35.8251 iterations 11
Cbc0038I Pass  19: suminf.    2.17939 (6) obj. -38.9452 iterations 2
Cbc0038I Pass  20: suminf.    0.75455 (4) obj. -35.8251 iterations 10
Cbc0038I Pass  21: suminf.    0.42105 (1) obj. -38.7368 iterations 4
Cbc0038I Pass  22: suminf.    0.44407 (3) obj. -35.8251 iterations 3
Cbc0038I Pass  23: suminf.    0.90238 (2) obj. -49.2929 iterations 3
Cbc0038I Pass  24: suminf.    0.64872 (2) obj. -35.8251 iterations 1
Cbc0038I Pass  25: suminf.    0.43548 (1) obj. -37.5645 iterations 2
Cbc0038I Pass  26: suminf.    0.40697 (1) obj. -35.8251 iterations 1
Cbc0038I Pass  27: suminf.    1.66547 (5) obj. -35.8251 iterations 11
Cbc0038I Pass  28: suminf.    0.84529 (3) obj. -35.8251 iterations 3
Cbc0038I Pass  29: suminf.    0.48812 (2) obj. -36.3676 iterations 3
Cbc0038I Pass  30: suminf.    0.46346 (2) obj. -35.8251 iterations 3
Cbc0038I Pass  31: suminf.    2.92402 (9) obj. -35.8251 iterations 12
Cbc0038I Pass  32: suminf.    1.07918 (5) obj. -35.8251 iterations 8
Cbc0038I Rounding solution of -35 is better than previous of -26

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 23 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -52.6104
Cbc0038I Pass  32: suminf.    2.82552 (17) obj. -52.6104 iterations 0
Cbc0038I Pass  33: suminf.    2.82552 (17) obj. -52.6104 iterations 0
Cbc0038I Pass  34: suminf.    1.06251 (7) obj. -52.6104 iterations 26
Cbc0038I Pass  35: suminf.    1.06251 (7) obj. -52.6104 iterations 0
Cbc0038I Pass  36: suminf.    0.49853 (2) obj. -52.6104 iterations 7
Cbc0038I Pass  37: suminf.    0.43548 (1) obj. -54.4355 iterations 2
Cbc0038I Pass  38: suminf.    0.46540 (1) obj. -52.6104 iterations 1
Cbc0038I Pass  39: suminf.    2.67008 (13) obj. -52.6104 iterations 17
Cbc0038I Pass  40: suminf.    2.67008 (13) obj. -52.6104 iterations 1
Cbc0038I Pass  41: suminf.    1.03226 (3) obj. -52.6104 iterations 13
Cbc0038I Pass  42: suminf.    1.03226 (3) obj. -52.6104 iterations 0
Cbc0038I Pass  43: suminf.    0.76162 (3) obj. -52.6104 iterations 4
Cbc0038I Pass  44: suminf.    0.76162 (3) obj. -52.6104 iterations 1
Cbc0038I Pass  45: suminf.    1.03226 (3) obj. -52.6104 iterations 2
Cbc0038I Pass  46: suminf.    2.17064 (6) obj. -52.6104 iterations 11
Cbc0038I Pass  47: suminf.    1.51895 (4) obj. -56.1551 iterations 2
Cbc0038I Pass  48: suminf.    1.43852 (4) obj. -52.6104 iterations 1
Cbc0038I Pass  49: suminf.    0.76748 (2) obj. -52.6104 iterations 4
Cbc0038I Pass  50: suminf.    0.76748 (2) obj. -52.6104 iterations 0
Cbc0038I Pass  51: suminf.    0.81409 (2) obj. -57.5577 iterations 1
Cbc0038I Pass  52: suminf.    0.72091 (2) obj. -52.6104 iterations 1
Cbc0038I Pass  53: suminf.    2.24539 (7) obj. -52.6104 iterations 14
Cbc0038I Pass  54: suminf.    1.65015 (6) obj. -52.6104 iterations 1
Cbc0038I Pass  55: suminf.    1.20200 (5) obj. -52.6104 iterations 4
Cbc0038I Pass  56: suminf.    1.11821 (4) obj. -52.6104 iterations 2
Cbc0038I Pass  57: suminf.    0.93162 (4) obj. -52.6104 iterations 2
Cbc0038I Pass  58: suminf.    2.65708 (11) obj. -52.6104 iterations 10
Cbc0038I Pass  59: suminf.    2.29241 (9) obj. -52.6104 iterations 4
Cbc0038I Pass  60: suminf.    2.51947 (6) obj. -52.6104 iterations 7
Cbc0038I Pass  61: suminf.    1.22313 (3) obj. -52.6104 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -35 to -46 (0.03 seconds)
Cbc0038I Round again with cutoff of -72.7528
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.15733 (23) obj. -72.7528 iterations 8
Cbc0038I Pass  62: suminf.    3.15733 (23) obj. -72.7528 iterations 0
Cbc0038I Pass  63: suminf.    1.16239 (3) obj. -72.7528 iterations 38
Cbc0038I Pass  64: suminf.    1.16239 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  65: suminf.    1.03275 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  66: suminf.    1.03275 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  67: suminf.    1.16239 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  68: suminf.    1.62632 (5) obj. -72.7528 iterations 7
Cbc0038I Pass  69: suminf.    1.62632 (5) obj. -72.7528 iterations 1
Cbc0038I Pass  70: suminf.    1.25719 (4) obj. -72.7528 iterations 5
Cbc0038I Pass  71: suminf.    1.25719 (4) obj. -72.7528 iterations 0
Cbc0038I Pass  72: suminf.    1.68862 (4) obj. -72.7528 iterations 1
Cbc0038I Pass  73: suminf.    1.31260 (4) obj. -72.7528 iterations 1
Cbc0038I Pass  74: suminf.    1.27715 (4) obj. -72.7528 iterations 4
Cbc0038I Pass  75: suminf.    1.82881 (6) obj. -72.7528 iterations 9
Cbc0038I Pass  76: suminf.    1.59334 (5) obj. -74.8721 iterations 3
Cbc0038I Pass  77: suminf.    1.24527 (4) obj. -72.7528 iterations 3
Cbc0038I Pass  78: suminf.    1.24527 (4) obj. -72.7528 iterations 0
Cbc0038I Pass  79: suminf.    1.16239 (3) obj. -72.7528 iterations 2
Cbc0038I Pass  80: suminf.    1.16239 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  81: suminf.    1.03275 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  82: suminf.    1.03275 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  83: suminf.    1.16239 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  84: suminf.    1.13963 (3) obj. -72.7528 iterations 3
Cbc0038I Pass  85: suminf.    1.13126 (3) obj. -72.9369 iterations 2
Cbc0038I Pass  86: suminf.    1.16239 (3) obj. -72.7528 iterations 2
Cbc0038I Pass  87: suminf.    1.16239 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  88: suminf.    1.03275 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  89: suminf.    1.03275 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  90: suminf.    1.16239 (3) obj. -72.7528 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -46 - took 0.02 seconds
Cbc0012I Integer solution of -46 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 7 rows 7 columns
Cbc0012I Integer solution of -49.5 found by DiveCoefficient after 93 iterations and 0 nodes (0.13 seconds)
Cbc0031I 13 added rows had average density of 8.8461538
Cbc0013I At root node, 13 cuts changed objective from -119.75167 to -49.5 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 186 row cuts average 5.0 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 39 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0001I Search completed - best objective -49.5, took 93 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 38 (-25) rows, 22 (-10) columns and 113 (-64) elements
Clp0000I Optimal - objective value 96.864853
Coin0511I After Postsolve, objective 96.864853, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.86485322 - 23 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.84298
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.5 iterations 10
Cbc0038I Solution found of -18.5
Cbc0038I Relaxing continuous gives -18.5
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -18.5 to -46 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.5364
Cbc0038I Pass   2: suminf.    0.45842 (1) obj. -51.5364 iterations 1
Cbc0038I Pass   3: suminf.    0.25806 (1) obj. -51.5364 iterations 1
Cbc0038I Pass   4: suminf.    0.25806 (1) obj. -51.5364 iterations 2
Cbc0038I Pass   5: suminf.    0.25806 (1) obj. -51.5364 iterations 2
Cbc0038I Pass   6: suminf.    0.68733 (4) obj. -51.5364 iterations 4
Cbc0038I Pass   7: suminf.    0.51319 (2) obj. -51.5364 iterations 2
Cbc0038I Pass   8: suminf.    0.51319 (2) obj. -51.5364 iterations 0
Cbc0038I Pass   9: suminf.    0.51319 (2) obj. -51.5364 iterations 0
Cbc0038I Pass  10: suminf.    0.45842 (1) obj. -51.5364 iterations 2
Cbc0038I Pass  11: suminf.    0.53817 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  12: suminf.    0.29032 (1) obj. -51.5364 iterations 2
Cbc0038I Pass  13: suminf.    0.45842 (1) obj. -51.5364 iterations 1
Cbc0038I Pass  14: suminf.    1.06166 (4) obj. -51.5364 iterations 7
Cbc0038I Pass  15: suminf.    0.43296 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  16: suminf.    1.01325 (4) obj. -51.5364 iterations 7
Cbc0038I Pass  17: suminf.    0.47724 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  18: suminf.    0.66521 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  19: suminf.    0.66521 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  20: suminf.    1.22694 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  21: suminf.    1.22694 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  22: suminf.    1.56128 (4) obj. -51.5364 iterations 2
Cbc0038I Pass  23: suminf.    1.16722 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  24: suminf.    0.59851 (2) obj. -51.5364 iterations 2
Cbc0038I Pass  25: suminf.    0.59851 (2) obj. -51.5364 iterations 0
Cbc0038I Pass  26: suminf.    0.68860 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  27: suminf.    0.91195 (4) obj. -51.5364 iterations 5
Cbc0038I Pass  28: suminf.    0.74402 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  29: suminf.    0.70502 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  30: suminf.    0.70502 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  31: suminf.    1.12714 (3) obj. -51.5364 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -46 to -49.5 (0.03 seconds)
Cbc0038I Round again with cutoff of -60.6021
Cbc0038I Pass  31: suminf.    0.30980 (1) obj. -60.6021 iterations 0
Cbc0038I Pass  32: suminf.    0.25806 (1) obj. -60.6021 iterations 1
Cbc0038I Pass  33: suminf.    1.93585 (7) obj. -60.6021 iterations 5
Cbc0038I Pass  34: suminf.    1.30407 (6) obj. -60.6021 iterations 7
Cbc0038I Pass  35: suminf.    1.47503 (4) obj. -60.6021 iterations 4
Cbc0038I Pass  36: suminf.    1.07290 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  37: suminf.    0.51925 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  38: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  39: suminf.    0.43184 (2) obj. -60.6021 iterations 3
Cbc0038I Pass  40: suminf.    0.43184 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  41: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  42: suminf.    1.06426 (3) obj. -60.6021 iterations 8
Cbc0038I Pass  43: suminf.    1.06426 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  44: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  45: suminf.    0.29032 (1) obj. -60.6021 iterations 3
Cbc0038I Pass  46: suminf.    0.30980 (1) obj. -60.6021 iterations 1
Cbc0038I Pass  47: suminf.    2.99649 (9) obj. -60.6021 iterations 11
Cbc0038I Pass  48: suminf.    1.56783 (4) obj. -60.6021 iterations 4
Cbc0038I Pass  49: suminf.    1.56783 (4) obj. -60.6021 iterations 0
Cbc0038I Pass  50: suminf.    0.43759 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  51: suminf.    0.51925 (2) obj. -60.6021 iterations 2
Cbc0038I Pass  52: suminf.    0.51925 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  53: suminf.    0.69760 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  54: suminf.    0.52515 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  55: suminf.    0.52515 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  56: suminf.    0.92480 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  57: suminf.    0.92480 (3) obj. -60.6021 iterations 0
Cbc0038I Pass  58: suminf.    1.30340 (3) obj. -60.6021 iterations 1
Cbc0038I Pass  59: suminf.    1.00681 (5) obj. -60.6021 iterations 7
Cbc0038I Pass  60: suminf.    0.85904 (4) obj. -60.6021 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -49.5 - took 0.03 seconds
Cbc0012I Integer solution of -49.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 8 added rows had average density of 15.375
Cbc0013I At root node, 8 cuts changed objective from -96.864853 to -54.557901 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 363 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 231 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -49.5, took 839 iterations and 0 nodes (0.12 seconds)
Cbc0032I Strong branching done 4 times (5 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-21) rows, 46 (-15) columns and 358 (-255) elements
Clp1000I sum of infeasibilities 9.46508e-08 - average 2.25359e-09, 15 fixed columns
Coin0506I Presolve 21 (-21) rows, 22 (-24) columns and 94 (-264) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 1.9622477 - largest nonzero change 2.0721231e-05 ( 0.0016580886%) - largest zero change 0
Clp0000I Optimal - objective value 142.33179
Clp0000I Optimal - objective value 142.33179
Coin0511I After Postsolve, objective 142.33179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5462596 - largest nonzero change 2.5072214e-05 ( 0.0016580886%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 142.33179
Clp0000I Optimal - objective value 142.33179
Clp0000I Optimal - objective value 142.33179
Coin0511I After Postsolve, objective 142.33179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.3317916 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 366 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.088%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.17837
Cbc0038I Pass   1: suminf.    1.59821 (12) obj. -26.6533 iterations 18
Cbc0038I Pass   2: suminf.    1.59821 (12) obj. -26.6533 iterations 1
Cbc0038I Solution found of 11.5
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 11.5 to -26 (0.01 seconds)
Cbc0038I Round again with cutoff of -35.8251
Cbc0038I Pass   3: suminf.    2.09762 (17) obj. -35.8251 iterations 5
Cbc0038I Pass   4: suminf.    1.35820 (18) obj. -35.8251 iterations 3
Cbc0038I Pass   5: suminf.    1.11938 (5) obj. -35.8251 iterations 7
Cbc0038I Pass   6: suminf.    1.17230 (16) obj. -35.8251 iterations 10
Cbc0038I Pass   7: suminf.    1.02319 (20) obj. -35.8251 iterations 2
Cbc0038I Pass   8: suminf.    1.13133 (4) obj. -35.8251 iterations 20
Cbc0038I Pass   9: suminf.    1.13133 (4) obj. -35.8251 iterations 0
Cbc0038I Pass  10: suminf.    0.25943 (1) obj. -35.8251 iterations 3
Cbc0038I Pass  11: suminf.    0.43548 (1) obj. -54.4355 iterations 1
Cbc0038I Pass  12: suminf.    0.85782 (4) obj. -35.8251 iterations 8
Cbc0038I Pass  13: suminf.    0.71070 (3) obj. -43.2734 iterations 3
Cbc0038I Pass  14: suminf.    0.38836 (2) obj. -35.8251 iterations 3
Cbc0038I Pass  15: suminf.    0.22005 (2) obj. -35.8251 iterations 1
Cbc0038I Pass  16: suminf.    0.56769 (2) obj. -35.8251 iterations 1
Cbc0038I Pass  17: suminf.    0.41171 (2) obj. -46.0552 iterations 1
Cbc0038I Pass  18: suminf.    2.28082 (8) obj. -35.8251 iterations 11
Cbc0038I Pass  19: suminf.    2.17939 (6) obj. -38.9452 iterations 2
Cbc0038I Pass  20: suminf.    0.75455 (4) obj. -35.8251 iterations 10
Cbc0038I Pass  21: suminf.    0.42105 (1) obj. -38.7368 iterations 4
Cbc0038I Pass  22: suminf.    0.44407 (3) obj. -35.8251 iterations 3
Cbc0038I Pass  23: suminf.    0.90238 (2) obj. -49.2929 iterations 3
Cbc0038I Pass  24: suminf.    0.64872 (2) obj. -35.8251 iterations 1
Cbc0038I Pass  25: suminf.    0.43548 (1) obj. -37.5645 iterations 2
Cbc0038I Pass  26: suminf.    0.40697 (1) obj. -35.8251 iterations 1
Cbc0038I Pass  27: suminf.    1.66547 (5) obj. -35.8251 iterations 11
Cbc0038I Pass  28: suminf.    0.84529 (3) obj. -35.8251 iterations 3
Cbc0038I Pass  29: suminf.    0.48812 (2) obj. -36.3676 iterations 3
Cbc0038I Pass  30: suminf.    0.46346 (2) obj. -35.8251 iterations 3
Cbc0038I Pass  31: suminf.    2.92402 (9) obj. -35.8251 iterations 12
Cbc0038I Pass  32: suminf.    1.07918 (5) obj. -35.8251 iterations 8
Cbc0038I Rounding solution of -35 is better than previous of -26

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 23 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -52.6104
Cbc0038I Pass  32: suminf.    2.82552 (17) obj. -52.6104 iterations 0
Cbc0038I Pass  33: suminf.    2.82552 (17) obj. -52.6104 iterations 0
Cbc0038I Pass  34: suminf.    1.06251 (7) obj. -52.6104 iterations 26
Cbc0038I Pass  35: suminf.    1.06251 (7) obj. -52.6104 iterations 0
Cbc0038I Pass  36: suminf.    0.49853 (2) obj. -52.6104 iterations 7
Cbc0038I Pass  37: suminf.    0.43548 (1) obj. -54.4355 iterations 2
Cbc0038I Pass  38: suminf.    0.46540 (1) obj. -52.6104 iterations 1
Cbc0038I Pass  39: suminf.    2.67008 (13) obj. -52.6104 iterations 17
Cbc0038I Pass  40: suminf.    2.67008 (13) obj. -52.6104 iterations 1
Cbc0038I Pass  41: suminf.    1.03226 (3) obj. -52.6104 iterations 13
Cbc0038I Pass  42: suminf.    1.03226 (3) obj. -52.6104 iterations 0
Cbc0038I Pass  43: suminf.    0.76162 (3) obj. -52.6104 iterations 4
Cbc0038I Pass  44: suminf.    0.76162 (3) obj. -52.6104 iterations 1
Cbc0038I Pass  45: suminf.    1.03226 (3) obj. -52.6104 iterations 2
Cbc0038I Pass  46: suminf.    2.17064 (6) obj. -52.6104 iterations 11
Cbc0038I Pass  47: suminf.    1.51895 (4) obj. -56.1551 iterations 2
Cbc0038I Pass  48: suminf.    1.43852 (4) obj. -52.6104 iterations 1
Cbc0038I Pass  49: suminf.    0.76748 (2) obj. -52.6104 iterations 4
Cbc0038I Pass  50: suminf.    0.76748 (2) obj. -52.6104 iterations 0
Cbc0038I Pass  51: suminf.    0.81409 (2) obj. -57.5577 iterations 1
Cbc0038I Pass  52: suminf.    0.72091 (2) obj. -52.6104 iterations 1
Cbc0038I Pass  53: suminf.    2.24539 (7) obj. -52.6104 iterations 14
Cbc0038I Pass  54: suminf.    1.65015 (6) obj. -52.6104 iterations 1
Cbc0038I Pass  55: suminf.    1.20200 (5) obj. -52.6104 iterations 4
Cbc0038I Pass  56: suminf.    1.11821 (4) obj. -52.6104 iterations 2
Cbc0038I Pass  57: suminf.    0.93162 (4) obj. -52.6104 iterations 2
Cbc0038I Pass  58: suminf.    2.65708 (11) obj. -52.6104 iterations 10
Cbc0038I Pass  59: suminf.    2.29241 (9) obj. -52.6104 iterations 4
Cbc0038I Pass  60: suminf.    2.51947 (6) obj. -52.6104 iterations 7
Cbc0038I Pass  61: suminf.    1.22313 (3) obj. -52.6104 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -35 to -46 (0.03 seconds)
Cbc0038I Round again with cutoff of -72.7528
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.15733 (23) obj. -72.7528 iterations 8
Cbc0038I Pass  62: suminf.    3.15733 (23) obj. -72.7528 iterations 0
Cbc0038I Pass  63: suminf.    1.16239 (3) obj. -72.7528 iterations 38
Cbc0038I Pass  64: suminf.    1.16239 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  65: suminf.    1.03275 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  66: suminf.    1.03275 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  67: suminf.    1.16239 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  68: suminf.    1.62632 (5) obj. -72.7528 iterations 7
Cbc0038I Pass  69: suminf.    1.62632 (5) obj. -72.7528 iterations 1
Cbc0038I Pass  70: suminf.    1.25719 (4) obj. -72.7528 iterations 5
Cbc0038I Pass  71: suminf.    1.25719 (4) obj. -72.7528 iterations 0
Cbc0038I Pass  72: suminf.    1.68862 (4) obj. -72.7528 iterations 1
Cbc0038I Pass  73: suminf.    1.31260 (4) obj. -72.7528 iterations 1
Cbc0038I Pass  74: suminf.    1.27715 (4) obj. -72.7528 iterations 4
Cbc0038I Pass  75: suminf.    1.82881 (6) obj. -72.7528 iterations 9
Cbc0038I Pass  76: suminf.    1.59334 (5) obj. -74.8721 iterations 3
Cbc0038I Pass  77: suminf.    1.24527 (4) obj. -72.7528 iterations 3
Cbc0038I Pass  78: suminf.    1.24527 (4) obj. -72.7528 iterations 0
Cbc0038I Pass  79: suminf.    1.16239 (3) obj. -72.7528 iterations 2
Cbc0038I Pass  80: suminf.    1.16239 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  81: suminf.    1.03275 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  82: suminf.    1.03275 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  83: suminf.    1.16239 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  84: suminf.    1.13963 (3) obj. -72.7528 iterations 3
Cbc0038I Pass  85: suminf.    1.13126 (3) obj. -72.9369 iterations 2
Cbc0038I Pass  86: suminf.    1.16239 (3) obj. -72.7528 iterations 2
Cbc0038I Pass  87: suminf.    1.16239 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  88: suminf.    1.03275 (3) obj. -72.7528 iterations 1
Cbc0038I Pass  89: suminf.    1.03275 (3) obj. -72.7528 iterations 0
Cbc0038I Pass  90: suminf.    1.16239 (3) obj. -72.7528 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -46 - took 0.02 seconds
Cbc0012I Integer solution of -46 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 7 rows 7 columns
Cbc0012I Integer solution of -49.5 found by DiveCoefficient after 93 iterations and 0 nodes (0.15 seconds)
Cbc0031I 13 added rows had average density of 8.8461538
Cbc0013I At root node, 13 cuts changed objective from -119.75167 to -49.5 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 186 row cuts average 5.0 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 39 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0001I Search completed - best objective -49.5, took 93 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.15

