Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 158 (-47) rows, 85 (-18) columns and 479 (-124) elements
Clp1000I sum of infeasibilities 4.10226e-07 - average 2.59636e-09, 73 fixed columns
Coin0506I Presolve 16 (-142) rows, 12 (-73) columns and 50 (-429) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 24870.717
Clp0000I Optimal - objective value 24870.717
Coin0511I After Postsolve, objective 24870.717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2634335 - largest nonzero change 0 ( 0%) - largest zero change 2.9821858e-05
Clp0000I Optimal - objective value 24870.717
Clp0000I Optimal - objective value 24870.717
Clp0000I Optimal - objective value 24870.717
Coin0511I After Postsolve, objective 24870.717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24870.71663 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 158 rows, 85 columns (84 integer (84 of which binary)) and 479 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.073%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.54278
Cbc0038I Solution found of -21608.5
Cbc0038I Relaxing continuous gives -21608.5
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 85 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -21608.5 to -23489.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -23627.8
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.73016 (2) obj. -23627.8 iterations 34
Cbc0038I Pass   2: suminf.    0.06113 (1) obj. -23627.8 iterations 16
Cbc0038I Pass   3: suminf.    0.14286 (1) obj. -23790.6 iterations 8
Cbc0038I Pass   4: suminf.    0.89293 (3) obj. -23627.8 iterations 10
Cbc0038I Pass   5: suminf.    0.54331 (2) obj. -23627.8 iterations 15
Cbc0038I Pass   6: suminf.    0.10548 (1) obj. -23627.8 iterations 18
Cbc0038I Pass   7: suminf.    0.64456 (2) obj. -24163.4 iterations 9
Cbc0038I Pass   8: suminf.    0.73016 (2) obj. -23627.8 iterations 14
Cbc0038I Pass   9: suminf.    0.06113 (1) obj. -23627.8 iterations 14
Cbc0038I Pass  10: suminf.    0.14286 (1) obj. -23790.6 iterations 7
Cbc0038I Pass  11: suminf.    0.82255 (4) obj. -23627.8 iterations 28
Cbc0038I Pass  12: suminf.    0.75510 (3) obj. -23627.8 iterations 18
Cbc0038I Pass  13: suminf.    2.77671 (12) obj. -23627.8 iterations 27
Cbc0038I Pass  14: suminf.    0.53789 (4) obj. -23627.8 iterations 15
Cbc0038I Pass  15: suminf.    0.29452 (2) obj. -23627.8 iterations 7
Cbc0038I Pass  16: suminf.    0.57621 (2) obj. -23627.8 iterations 16
Cbc0038I Solution found of -23960.7
Cbc0038I Relaxing continuous gives -23960.7
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 85 columns, reduced to 22 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24142.7
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass  17: suminf.    0.47740 (4) obj. -24142.7 iterations 5
Cbc0038I Pass  18: suminf.    0.44388 (4) obj. -24142.7 iterations 9
Cbc0038I Pass  19: suminf.    1.79042 (5) obj. -24142.7 iterations 15
Cbc0038I Pass  20: suminf.    1.70205 (5) obj. -24142.7 iterations 2
Cbc0038I Pass  21: suminf.    0.49189 (1) obj. -24142.7 iterations 12
Cbc0038I Pass  22: suminf.    0.49189 (1) obj. -24142.7 iterations 1
Cbc0038I Pass  23: suminf.    0.35294 (2) obj. -24256.9 iterations 9
Cbc0038I Pass  24: suminf.    0.49189 (1) obj. -24142.7 iterations 8
Cbc0038I Pass  25: suminf.    1.39451 (7) obj. -24142.7 iterations 12
Cbc0038I Pass  26: suminf.    0.54193 (2) obj. -24142.7 iterations 11
Cbc0038I Pass  27: suminf.    1.09438 (5) obj. -24142.7 iterations 12
Cbc0038I Pass  28: suminf.    0.54193 (2) obj. -24142.7 iterations 12
Cbc0038I Pass  29: suminf.    0.49189 (1) obj. -24142.7 iterations 18
Cbc0038I Pass  30: suminf.    0.35294 (2) obj. -24256.9 iterations 9
Cbc0038I Pass  31: suminf.    0.49189 (1) obj. -24142.7 iterations 8
Cbc0038I Pass  32: suminf.    0.64455 (2) obj. -24142.7 iterations 20
Cbc0038I Pass  33: suminf.    0.49129 (4) obj. -24142.7 iterations 19
Cbc0038I Pass  34: suminf.    0.94257 (5) obj. -24142.7 iterations 17
Cbc0038I Pass  35: suminf.    0.64455 (2) obj. -24142.7 iterations 10
Cbc0038I Pass  36: suminf.    0.93572 (10) obj. -24142.7 iterations 14
Cbc0038I Pass  37: suminf.    0.93572 (10) obj. -24142.7 iterations 1
Cbc0038I Pass  38: suminf.    1.91592 (8) obj. -24142.7 iterations 19
Cbc0038I Pass  39: suminf.    0.49886 (2) obj. -24142.7 iterations 17
Cbc0038I Pass  40: suminf.    0.20690 (1) obj. -24336.9 iterations 10
Cbc0038I Pass  41: suminf.    0.62019 (2) obj. -24142.7 iterations 8
Cbc0038I Pass  42: suminf.    0.20690 (1) obj. -24336.9 iterations 9
Cbc0038I Pass  43: suminf.    0.93586 (5) obj. -24142.7 iterations 16
Cbc0038I Pass  44: suminf.    0.73795 (3) obj. -24142.7 iterations 14
Cbc0038I Pass  45: suminf.    1.39114 (9) obj. -24142.7 iterations 14
Cbc0038I Pass  46: suminf.    0.82732 (9) obj. -24142.7 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 85 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -23960.7 - took 0.03 seconds
Cbc0012I Integer solution of -23960.674 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 158 rows 85 columns, reduced to 16 rows 13 columns
Cbc0031I 7 added rows had average density of 33.857143
Cbc0013I At root node, 7 cuts changed objective from -24870.717 to -24247.575 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 3.0 elements, 11 column cuts (11 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 79 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23960.674, took 654 iterations and 10 nodes (0.13 seconds)
Cbc0032I Strong branching done 60 times (337 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-89) rows, 125 (-77) columns and 2032 (-3621) elements
Clp1000I sum of infeasibilities 2.1078e-06 - average 1.83287e-08, 69 fixed columns
Coin0506I Presolve 52 (-63) rows, 55 (-70) columns and 447 (-1585) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 2.5887139 - largest nonzero change 2.5693134e-05 ( 0.0015823696%) - largest zero change 1.7422423e-05
Clp0000I Optimal - objective value 24906.014
Clp0000I Optimal - objective value 24906.014
Coin0511I After Postsolve, objective 24906.014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6425926 - largest nonzero change 2.4609234e-05 ( 0.0015823696%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 24906.014
Clp0000I Optimal - objective value 24906.014
Clp0000I Optimal - objective value 24906.014
Coin0511I After Postsolve, objective 24906.014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24906.01405 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 125 columns (125 integer (125 of which binary)) and 2034 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.982%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.33852
Cbc0038I Pass   1: suminf.    1.47577 (22) obj. -21638.1 iterations 48
Cbc0038I Pass   2: suminf.    0.11394 (5) obj. -21613.4 iterations 17
Cbc0038I Solution found of -21608.5
Cbc0038I Rounding solution of -22809.2 is better than previous of -21608.5

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -22809.2 to -23489.7 (0.04 seconds)
Cbc0038I Round again with cutoff of -23630.6
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.17304 (24) obj. -23630.6 iterations 13
Cbc0038I Pass   4: suminf.    2.17304 (24) obj. -23630.6 iterations 7
Cbc0038I Pass   5: suminf.    0.10687 (1) obj. -23630.6 iterations 62
Cbc0038I Pass   6: suminf.    0.64456 (2) obj. -24163.4 iterations 10
Cbc0038I Pass   7: suminf.    0.72023 (2) obj. -23630.6 iterations 14
Cbc0038I Pass   8: suminf.    0.06252 (1) obj. -23630.6 iterations 16
Cbc0038I Pass   9: suminf.    0.14286 (1) obj. -23790.6 iterations 9
Cbc0038I Pass  10: suminf.    1.92058 (10) obj. -23630.6 iterations 26
Cbc0038I Pass  11: suminf.    1.74461 (9) obj. -23630.6 iterations 6
Cbc0038I Pass  12: suminf.    0.52344 (2) obj. -23630.6 iterations 31
Cbc0038I Pass  13: suminf.    0.06653 (1) obj. -23630.6 iterations 11
Cbc0038I Pass  14: suminf.    0.14286 (1) obj. -23782.6 iterations 8
Cbc0038I Pass  15: suminf.    1.90634 (10) obj. -23630.6 iterations 34
Cbc0038I Pass  16: suminf.    1.04960 (8) obj. -23630.6 iterations 14
Cbc0038I Pass  17: suminf.    0.68361 (7) obj. -23913.6 iterations 9
Cbc0038I Pass  18: suminf.    0.67200 (2) obj. -23630.6 iterations 17
Cbc0038I Pass  19: suminf.    0.67200 (2) obj. -23630.6 iterations 0
Cbc0038I Pass  20: suminf.    0.48390 (3) obj. -23630.6 iterations 10
Cbc0038I Pass  21: suminf.    0.12707 (2) obj. -23906.6 iterations 9
Cbc0038I Pass  22: suminf.    1.09302 (8) obj. -23630.6 iterations 10
Cbc0038I Pass  23: suminf.    0.50946 (5) obj. -23904.1 iterations 18
Cbc0038I Pass  24: suminf.    0.67550 (2) obj. -23630.6 iterations 15
Cbc0038I Pass  25: suminf.    0.67550 (2) obj. -23630.6 iterations 0
Cbc0038I Pass  26: suminf.    0.47666 (3) obj. -23630.6 iterations 10
Cbc0038I Pass  27: suminf.    0.12707 (2) obj. -23900.6 iterations 9
Cbc0038I Pass  28: suminf.    1.61004 (11) obj. -23630.6 iterations 24
Cbc0038I Pass  29: suminf.    1.33930 (8) obj. -23630.6 iterations 9
Cbc0038I Pass  30: suminf.    0.85150 (2) obj. -23630.6 iterations 14
Cbc0038I Pass  31: suminf.    0.75327 (2) obj. -23630.6 iterations 21
Cbc0038I Pass  32: suminf.    0.84553 (9) obj. -23630.6 iterations 20
Cbc0038I Rounding solution of -23759.6 is better than previous of -23489.7

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -23759.6 to -23960.7 (0.06 seconds)
Cbc0038I Round again with cutoff of -24148.2
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.25442 (29) obj. -24148.2 iterations 9
Cbc0038I Pass  33: suminf.    2.24809 (29) obj. -24148.2 iterations 8
Cbc0038I Pass  34: suminf.    1.46598 (22) obj. -24148.2 iterations 23
Cbc0038I Pass  35: suminf.    1.45633 (22) obj. -24148.2 iterations 8
Cbc0038I Pass  36: suminf.    0.68871 (3) obj. -24148.2 iterations 32
Cbc0038I Pass  37: suminf.    0.22967 (4) obj. -24148.2 iterations 7
Cbc0038I Pass  38: suminf.    0.50245 (4) obj. -24148.2 iterations 16
Cbc0038I Pass  39: suminf.    0.46547 (4) obj. -24148.2 iterations 7
Cbc0038I Pass  40: suminf.    1.45843 (4) obj. -24148.2 iterations 17
Cbc0038I Pass  41: suminf.    0.56615 (4) obj. -24148.2 iterations 11
Cbc0038I Pass  42: suminf.    0.56615 (4) obj. -24148.2 iterations 8
Cbc0038I Pass  43: suminf.    2.13057 (25) obj. -24148.2 iterations 23
Cbc0038I Pass  44: suminf.    1.63130 (11) obj. -24148.2 iterations 15
Cbc0038I Pass  45: suminf.    0.97557 (4) obj. -24148.2 iterations 15
Cbc0038I Pass  46: suminf.    0.90545 (4) obj. -24148.2 iterations 7
Cbc0038I Pass  47: suminf.    1.53064 (19) obj. -24148.2 iterations 15
Cbc0038I Pass  48: suminf.    0.97850 (6) obj. -24148.2 iterations 16
Cbc0038I Pass  49: suminf.    0.97327 (4) obj. -24148.2 iterations 11
Cbc0038I Pass  50: suminf.    0.90859 (4) obj. -24148.2 iterations 8
Cbc0038I Pass  51: suminf.    1.01206 (16) obj. -24148.2 iterations 26
Cbc0038I Pass  52: suminf.    0.69690 (7) obj. -24148.2 iterations 11
Cbc0038I Pass  53: suminf.    0.17143 (1) obj. -24287.1 iterations 11
Cbc0038I Pass  54: suminf.    0.10169 (1) obj. -24148.2 iterations 4
Cbc0038I Pass  55: suminf.    1.58422 (14) obj. -24148.2 iterations 28
Cbc0038I Pass  56: suminf.    1.47313 (15) obj. -24148.2 iterations 8
Cbc0038I Pass  57: suminf.    0.81880 (5) obj. -24148.2 iterations 27
Cbc0038I Pass  58: suminf.    0.62405 (2) obj. -24148.2 iterations 5
Cbc0038I Pass  59: suminf.    0.40112 (5) obj. -24148.2 iterations 16
Cbc0038I Pass  60: suminf.    1.53157 (11) obj. -24148.2 iterations 18
Cbc0038I Pass  61: suminf.    0.93984 (8) obj. -24370.8 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 33 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -23960.7 - took 0.06 seconds
Cbc0012I Integer solution of -23960.674 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 115 rows 125 columns, reduced to 24 rows 26 columns
Cbc0031I 25 added rows had average density of 13.2
Cbc0013I At root node, 25 cuts changed objective from -24893.123 to -24436.194 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 431 row cuts average 11.9 elements, 19 column cuts (19 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 44.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 48.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0010I After 3 nodes, 2 on tree, -23960.674 best solution, best possible -24428.303 (0.49 seconds)
Cbc0001I Search completed - best objective -23960.674, took 837 iterations and 12 nodes (1.00 seconds)
Cbc0032I Strong branching done 124 times (1096 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.62   (Wallclock seconds):       1.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 158 (-47) rows, 85 (-18) columns and 479 (-124) elements
Clp1000I sum of infeasibilities 4.10226e-07 - average 2.59636e-09, 73 fixed columns
Coin0506I Presolve 16 (-142) rows, 12 (-73) columns and 50 (-429) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 24870.717
Clp0000I Optimal - objective value 24870.717
Coin0511I After Postsolve, objective 24870.717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2634335 - largest nonzero change 0 ( 0%) - largest zero change 2.9821858e-05
Clp0000I Optimal - objective value 24870.717
Clp0000I Optimal - objective value 24870.717
Clp0000I Optimal - objective value 24870.717
Coin0511I After Postsolve, objective 24870.717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24870.71663 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 158 rows, 85 columns (84 integer (84 of which binary)) and 479 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.073%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.54278
Cbc0038I Solution found of -21608.5
Cbc0038I Relaxing continuous gives -21608.5
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 85 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -21608.5 to -23489.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -23627.8
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.73016 (2) obj. -23627.8 iterations 34
Cbc0038I Pass   2: suminf.    0.06113 (1) obj. -23627.8 iterations 16
Cbc0038I Pass   3: suminf.    0.14286 (1) obj. -23790.6 iterations 8
Cbc0038I Pass   4: suminf.    0.89293 (3) obj. -23627.8 iterations 10
Cbc0038I Pass   5: suminf.    0.54331 (2) obj. -23627.8 iterations 15
Cbc0038I Pass   6: suminf.    0.10548 (1) obj. -23627.8 iterations 18
Cbc0038I Pass   7: suminf.    0.64456 (2) obj. -24163.4 iterations 9
Cbc0038I Pass   8: suminf.    0.73016 (2) obj. -23627.8 iterations 14
Cbc0038I Pass   9: suminf.    0.06113 (1) obj. -23627.8 iterations 14
Cbc0038I Pass  10: suminf.    0.14286 (1) obj. -23790.6 iterations 7
Cbc0038I Pass  11: suminf.    0.82255 (4) obj. -23627.8 iterations 28
Cbc0038I Pass  12: suminf.    0.75510 (3) obj. -23627.8 iterations 18
Cbc0038I Pass  13: suminf.    2.77671 (12) obj. -23627.8 iterations 27
Cbc0038I Pass  14: suminf.    0.53789 (4) obj. -23627.8 iterations 15
Cbc0038I Pass  15: suminf.    0.29452 (2) obj. -23627.8 iterations 7
Cbc0038I Pass  16: suminf.    0.57621 (2) obj. -23627.8 iterations 16
Cbc0038I Solution found of -23960.7
Cbc0038I Relaxing continuous gives -23960.7
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 85 columns, reduced to 22 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24142.7
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass  17: suminf.    0.47740 (4) obj. -24142.7 iterations 5
Cbc0038I Pass  18: suminf.    0.44388 (4) obj. -24142.7 iterations 9
Cbc0038I Pass  19: suminf.    1.79042 (5) obj. -24142.7 iterations 15
Cbc0038I Pass  20: suminf.    1.70205 (5) obj. -24142.7 iterations 2
Cbc0038I Pass  21: suminf.    0.49189 (1) obj. -24142.7 iterations 12
Cbc0038I Pass  22: suminf.    0.49189 (1) obj. -24142.7 iterations 1
Cbc0038I Pass  23: suminf.    0.35294 (2) obj. -24256.9 iterations 9
Cbc0038I Pass  24: suminf.    0.49189 (1) obj. -24142.7 iterations 8
Cbc0038I Pass  25: suminf.    1.39451 (7) obj. -24142.7 iterations 12
Cbc0038I Pass  26: suminf.    0.54193 (2) obj. -24142.7 iterations 11
Cbc0038I Pass  27: suminf.    1.09438 (5) obj. -24142.7 iterations 12
Cbc0038I Pass  28: suminf.    0.54193 (2) obj. -24142.7 iterations 12
Cbc0038I Pass  29: suminf.    0.49189 (1) obj. -24142.7 iterations 18
Cbc0038I Pass  30: suminf.    0.35294 (2) obj. -24256.9 iterations 9
Cbc0038I Pass  31: suminf.    0.49189 (1) obj. -24142.7 iterations 8
Cbc0038I Pass  32: suminf.    0.64455 (2) obj. -24142.7 iterations 20
Cbc0038I Pass  33: suminf.    0.49129 (4) obj. -24142.7 iterations 19
Cbc0038I Pass  34: suminf.    0.94257 (5) obj. -24142.7 iterations 17
Cbc0038I Pass  35: suminf.    0.64455 (2) obj. -24142.7 iterations 10
Cbc0038I Pass  36: suminf.    0.93572 (10) obj. -24142.7 iterations 14
Cbc0038I Pass  37: suminf.    0.93572 (10) obj. -24142.7 iterations 1
Cbc0038I Pass  38: suminf.    1.91592 (8) obj. -24142.7 iterations 19
Cbc0038I Pass  39: suminf.    0.49886 (2) obj. -24142.7 iterations 17
Cbc0038I Pass  40: suminf.    0.20690 (1) obj. -24336.9 iterations 10
Cbc0038I Pass  41: suminf.    0.62019 (2) obj. -24142.7 iterations 8
Cbc0038I Pass  42: suminf.    0.20690 (1) obj. -24336.9 iterations 9
Cbc0038I Pass  43: suminf.    0.93586 (5) obj. -24142.7 iterations 16
Cbc0038I Pass  44: suminf.    0.73795 (3) obj. -24142.7 iterations 14
Cbc0038I Pass  45: suminf.    1.39114 (9) obj. -24142.7 iterations 14
Cbc0038I Pass  46: suminf.    0.82732 (9) obj. -24142.7 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 85 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -23960.7 - took 0.03 seconds
Cbc0012I Integer solution of -23960.674 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 158 rows 85 columns, reduced to 16 rows 13 columns
Cbc0031I 7 added rows had average density of 33.857143
Cbc0013I At root node, 7 cuts changed objective from -24870.717 to -24247.575 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 3.0 elements, 11 column cuts (11 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 79 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23960.674, took 654 iterations and 10 nodes (0.12 seconds)
Cbc0032I Strong branching done 60 times (337 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-90) rows, 125 (-78) columns and 2032 (-3622) elements
Clp1000I sum of infeasibilities 2.1078e-06 - average 1.83287e-08, 69 fixed columns
Coin0506I Presolve 52 (-63) rows, 55 (-70) columns and 447 (-1585) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 2.5887139 - largest nonzero change 2.5693134e-05 ( 0.0015823696%) - largest zero change 1.7422423e-05
Clp0000I Optimal - objective value 24906.014
Clp0000I Optimal - objective value 24906.014
Coin0511I After Postsolve, objective 24906.014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6425926 - largest nonzero change 2.4609234e-05 ( 0.0015823696%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 24906.014
Clp0000I Optimal - objective value 24906.014
Clp0000I Optimal - objective value 24906.014
Coin0511I After Postsolve, objective 24906.014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24906.01405 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 125 columns (125 integer (125 of which binary)) and 2034 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.982%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.33852
Cbc0038I Pass   1: suminf.    1.47577 (22) obj. -21638.1 iterations 48
Cbc0038I Pass   2: suminf.    0.11394 (5) obj. -21613.4 iterations 17
Cbc0038I Solution found of -21608.5
Cbc0038I Rounding solution of -22809.2 is better than previous of -21608.5

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -22809.2 to -23489.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -23630.6
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.17304 (24) obj. -23630.6 iterations 13
Cbc0038I Pass   4: suminf.    2.17304 (24) obj. -23630.6 iterations 7
Cbc0038I Pass   5: suminf.    0.10687 (1) obj. -23630.6 iterations 62
Cbc0038I Pass   6: suminf.    0.64456 (2) obj. -24163.4 iterations 10
Cbc0038I Pass   7: suminf.    0.72023 (2) obj. -23630.6 iterations 14
Cbc0038I Pass   8: suminf.    0.06252 (1) obj. -23630.6 iterations 16
Cbc0038I Pass   9: suminf.    0.14286 (1) obj. -23790.6 iterations 9
Cbc0038I Pass  10: suminf.    1.92058 (10) obj. -23630.6 iterations 26
Cbc0038I Pass  11: suminf.    1.74461 (9) obj. -23630.6 iterations 6
Cbc0038I Pass  12: suminf.    0.52344 (2) obj. -23630.6 iterations 31
Cbc0038I Pass  13: suminf.    0.06653 (1) obj. -23630.6 iterations 11
Cbc0038I Pass  14: suminf.    0.14286 (1) obj. -23782.6 iterations 8
Cbc0038I Pass  15: suminf.    1.90634 (10) obj. -23630.6 iterations 34
Cbc0038I Pass  16: suminf.    1.04960 (8) obj. -23630.6 iterations 14
Cbc0038I Pass  17: suminf.    0.68361 (7) obj. -23913.6 iterations 9
Cbc0038I Pass  18: suminf.    0.67200 (2) obj. -23630.6 iterations 17
Cbc0038I Pass  19: suminf.    0.67200 (2) obj. -23630.6 iterations 0
Cbc0038I Pass  20: suminf.    0.48390 (3) obj. -23630.6 iterations 10
Cbc0038I Pass  21: suminf.    0.12707 (2) obj. -23906.6 iterations 9
Cbc0038I Pass  22: suminf.    1.09302 (8) obj. -23630.6 iterations 10
Cbc0038I Pass  23: suminf.    0.50946 (5) obj. -23904.1 iterations 18
Cbc0038I Pass  24: suminf.    0.67550 (2) obj. -23630.6 iterations 15
Cbc0038I Pass  25: suminf.    0.67550 (2) obj. -23630.6 iterations 0
Cbc0038I Pass  26: suminf.    0.47666 (3) obj. -23630.6 iterations 10
Cbc0038I Pass  27: suminf.    0.12707 (2) obj. -23900.6 iterations 9
Cbc0038I Pass  28: suminf.    1.61004 (11) obj. -23630.6 iterations 24
Cbc0038I Pass  29: suminf.    1.33930 (8) obj. -23630.6 iterations 9
Cbc0038I Pass  30: suminf.    0.85150 (2) obj. -23630.6 iterations 14
Cbc0038I Pass  31: suminf.    0.75327 (2) obj. -23630.6 iterations 21
Cbc0038I Pass  32: suminf.    0.84553 (9) obj. -23630.6 iterations 20
Cbc0038I Rounding solution of -23759.6 is better than previous of -23489.7

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -23759.6 to -23960.7 (0.05 seconds)
Cbc0038I Round again with cutoff of -24148.2
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.25442 (29) obj. -24148.2 iterations 9
Cbc0038I Pass  33: suminf.    2.24809 (29) obj. -24148.2 iterations 8
Cbc0038I Pass  34: suminf.    1.46598 (22) obj. -24148.2 iterations 23
Cbc0038I Pass  35: suminf.    1.45633 (22) obj. -24148.2 iterations 8
Cbc0038I Pass  36: suminf.    0.68871 (3) obj. -24148.2 iterations 32
Cbc0038I Pass  37: suminf.    0.22967 (4) obj. -24148.2 iterations 7
Cbc0038I Pass  38: suminf.    0.50245 (4) obj. -24148.2 iterations 16
Cbc0038I Pass  39: suminf.    0.46547 (4) obj. -24148.2 iterations 7
Cbc0038I Pass  40: suminf.    1.45843 (4) obj. -24148.2 iterations 17
Cbc0038I Pass  41: suminf.    0.56615 (4) obj. -24148.2 iterations 11
Cbc0038I Pass  42: suminf.    0.56615 (4) obj. -24148.2 iterations 8
Cbc0038I Pass  43: suminf.    2.13057 (25) obj. -24148.2 iterations 23
Cbc0038I Pass  44: suminf.    1.63130 (11) obj. -24148.2 iterations 15
Cbc0038I Pass  45: suminf.    0.97557 (4) obj. -24148.2 iterations 15
Cbc0038I Pass  46: suminf.    0.90545 (4) obj. -24148.2 iterations 7
Cbc0038I Pass  47: suminf.    1.53064 (19) obj. -24148.2 iterations 15
Cbc0038I Pass  48: suminf.    0.97850 (6) obj. -24148.2 iterations 16
Cbc0038I Pass  49: suminf.    0.97327 (4) obj. -24148.2 iterations 11
Cbc0038I Pass  50: suminf.    0.90859 (4) obj. -24148.2 iterations 8
Cbc0038I Pass  51: suminf.    1.01206 (16) obj. -24148.2 iterations 26
Cbc0038I Pass  52: suminf.    0.69690 (7) obj. -24148.2 iterations 11
Cbc0038I Pass  53: suminf.    0.17143 (1) obj. -24287.1 iterations 11
Cbc0038I Pass  54: suminf.    0.10169 (1) obj. -24148.2 iterations 4
Cbc0038I Pass  55: suminf.    1.58422 (14) obj. -24148.2 iterations 28
Cbc0038I Pass  56: suminf.    1.47313 (15) obj. -24148.2 iterations 8
Cbc0038I Pass  57: suminf.    0.81880 (5) obj. -24148.2 iterations 27
Cbc0038I Pass  58: suminf.    0.62405 (2) obj. -24148.2 iterations 5
Cbc0038I Pass  59: suminf.    0.40112 (5) obj. -24148.2 iterations 16
Cbc0038I Pass  60: suminf.    1.53157 (11) obj. -24148.2 iterations 18
Cbc0038I Pass  61: suminf.    0.93984 (8) obj. -24370.8 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 33 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -23960.7 - took 0.06 seconds
Cbc0012I Integer solution of -23960.674 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 115 rows 125 columns, reduced to 24 rows 26 columns
Cbc0031I 25 added rows had average density of 13.2
Cbc0013I At root node, 25 cuts changed objective from -24893.123 to -24436.194 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 431 row cuts average 11.9 elements, 19 column cuts (19 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 44.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 48.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0010I After 4 nodes, 3 on tree, -23960.674 best solution, best possible -24428.303 (0.53 seconds)
Cbc0001I Search completed - best objective -23960.674, took 837 iterations and 12 nodes (0.94 seconds)
Cbc0032I Strong branching done 124 times (1096 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.57   (Wallclock seconds):       0.95

